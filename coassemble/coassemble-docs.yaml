resources:
- name: courses
  endpoint:
    path: /v1/headless/courses
    method: GET
    params:
      identifier: <identifier_value>
- name: course
  endpoint:
    path: /v1/headless/courses/{id}
    method: GET
- name: course_signed_url
  endpoint:
    path: /v1/headless/course/{action}
    method: GET
    params:
      identifier: <identifier_value>
- name: duplicate_course
  endpoint:
    path: /v1/headless/course/{id}/duplicate
    method: POST
    params:
      identifier: null
      clientIdentifier: null
- name: delete_course
  endpoint:
    path: /api/v1/headless/course/{id}
    method: DELETE
    data_selector: undefined
    params: {}
- name: export_scorm
  endpoint:
    path: /api/v1/headless/course/scorm/{id}
    method: GET
    data_selector: undefined
    params: {}
- name: client
  endpoint:
    path: /api/v1/headless/client/{identifier}
    method: DELETE
    params:
      action: {}
      reallocateTo: {}
- name: screen_types
  endpoint:
    path: /v1/headless/screen/types
    method: GET
- name: signed_url_for_screen
  endpoint:
    path: /v1/headless/screen/{action}
    method: GET
    params:
      id:
        required: true
      identifier:
        required: true
      clientIdentifier:
        required: true
- name: create_screen
  endpoint:
    path: /v1/headless/screen/{id}
    method: POST
- name: delete_screen
  endpoint:
    path: /v1/headless/screen/{id}
    method: DELETE
- name: trackings
  endpoint:
    path: /v1/headless/trackings
    method: GET
- name: tracking
  endpoint:
    path: /v1/headless/tracking/:id
    method: GET
- name: delete_tracking
  endpoint:
    path: /v1/headless/tracking
    method: DELETE
- name: courses
  endpoint:
    path: /courses
    method: GET
    data_selector: null
- name: course_view
  endpoint:
    path: /course/view
    method: GET
    params:
      id: '{COURSE_ID}'
      identifier: '{IDENTIFIER}'
- name: course_edit
  endpoint:
    path: /headless/course/edit
    method: GET
    params:
      identifier: '{{ identifier }}'
      flow: document
notes:
- API key and user ID are required for authentication.
- API is in test mode initially; enable "Headless" in the workspace settings to use.
- Requires Headless course creation enabled
- Authentication uses a custom method with a specific format
errors:
- Unauthorized: Recheck UserId or UserToken validity
auth_info:
  mentioned_objects:
  - API key
  - user ID
  - UserId
  - UserToken
client:
  base_url: https://developers.coassemble.com/api
  auth:
    type: undefined
    flow: undefined
    token_url: undefined
    client_id: undefined
    client_secret: undefined
    refresh_token: undefined
    location: undefined
    header_name: undefined
  headers:
    Accept: undefined
  paginator:
    type: undefined
    cursor_path: undefined
    cursor_param: undefined
    page_size_param: undefined
    default_page_size: undefined
source_metadata: null
