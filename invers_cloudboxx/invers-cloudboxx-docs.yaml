resources:
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: vehicles
- name: vehicle_commands
  endpoint:
    path: /vehicle-commands
    method: POST
    data_selector: commands
- name: vehicle_events
  endpoint:
    path: /vehicle-events
    method: GET
    data_selector: events
- name: vehicle_management
  endpoint:
    path: /vehicle-management
    method: GET
    data_selector: management
- name: vehicle_capabilities
  endpoint:
    path: /vehicle-management/capabilities
    method: GET
- name: vehicle_capabilities
  endpoint:
    path: /vehicle-capabilities
    method: GET
    data_selector: capabilities
- name: latest_vehicle_state
  endpoint:
    path: /vehicles/:id/latest-vehicle-state
    method: GET
- name: request_vehicle_state
  endpoint:
    path: /request-vehicle-state
    method: POST
- name: latest_vehicle_state
  endpoint:
    path: /vehicles/:id/latest-vehicle-state
    method: GET
    data_selector: latest_vehicle_state
    params: {}
- name: request_new_vehicle_state
  endpoint:
    path: /request-vehicle-state
    method: POST
    data_selector: request_new_vehicle_state
    params: {}
- name: vehicle_commands
  endpoint:
    path: /vehicle_commands
    method: POST
- name: vehicle_management
  endpoint:
    path: /vehicle_management
    method: GET
- name: send_command
  endpoint:
    path: /vehicles/{vehicle_id}/commands/{command_name}
    method: POST
    data_selector: response
- name: vehicle_commands
  endpoint:
    path: /vehicles/{vehicle_id}/commands/unlock-central-lock
    method: POST
- name: feature_configuration
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/tracking
    method: PUT
- name: get_feature_configuration
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/{feature}
    method: GET
- name: delete_feature_configuration
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/{feature}
    method: DELETE
- name: bulk_configuration
  endpoint:
    path: /configure-vehicle-telematics-unit-bulk
    method: POST
- name: feature_configuration_tracking
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/tracking
    method: GET
- name: feature_configuration_driving_events
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/driving-events
    method: GET
- name: feature_configuration_parking_events
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/parking-events
    method: GET
- name: bulk_configuration
  endpoint:
    path: /configure-vehicle-telematics-unit-bulk
    method: POST
- name: basic_vehicle_state_capabilities
  endpoint:
    path: /api/vehicle-state-capabilities/basic
    method: GET
    data_selector: capabilities
    params: {}
- name: maintenance_vehicle_state_capabilities
  endpoint:
    path: /api/vehicle-state-capabilities/maintenance
    method: GET
    data_selector: capabilities
    params: {}
- name: basic_vehicle_state_capabilities
  endpoint:
    path: /api/vehicle-state-capabilities/basic
    method: GET
    data_selector: capabilities
- name: maintenance_vehicle_state_capabilities
  endpoint:
    path: /api/vehicle-state-capabilities/maintenance
    method: GET
    data_selector: capabilities
- name: request_vehicle_state
  endpoint:
    path: /vehicles/{vehicle_id}/commands/request-vehicle-state
    method: POST
    data_selector: items
    params:
      vehicle_id: string <= 12 characters
- name: enable_driving
  endpoint:
    path: /vehicles/{vehicle_id}/commands/enable-driving
    method: POST
    data_selector: items
    params:
      vehicle_id: string <= 12 characters
- name: disable_driving
  endpoint:
    path: /vehicles/{vehicle_id}/commands/disable-driving
    method: POST
    data_selector: items
    params:
      vehicle_id: string <= 12 characters
- name: unlock_central_lock
  endpoint:
    path: /vehicles/{vehicle_id}/commands/unlock-central-lock
    method: POST
    data_selector: items
    params:
      vehicle_id: string <= 12 characters
- name: lock_central_lock
  endpoint:
    path: /vehicles/{vehicle_id}/commands/lock-central-lock
    method: POST
    data_selector: items
    params:
      vehicle_id: string <= 12 characters
- name: unlock_and_enable_driving
  endpoint:
    path: /vehicles/{vehicle_id}/commands/unlock-and-enable-driving
    method: POST
    data_selector: items
    params:
      vehicle_id: string <= 12 characters
- name: lock_and_disable_driving
  endpoint:
    path: /vehicles/{vehicle_id}/commands/lock-and-disable-driving
    method: POST
    data_selector: items
    params:
      vehicle_id: string <= 12 characters
- name: unlock_top_case
  endpoint:
    path: /vehicles/{vehicle_id}/commands/unlock-top-case
    method: POST
    data_selector: items
    params:
      vehicle_id: string <= 12 characters
- name: lock_top_case
  endpoint:
    path: /vehicles/{vehicle_id}/commands/lock-top-case
    method: POST
    data_selector: items
    params:
      vehicle_id: string <= 12 characters
- name: draw_attention
  endpoint:
    path: /vehicles/{vehicle_id}/commands/draw-attention
    method: POST
- name: unlock_battery_compartment
  endpoint:
    path: /vehicles/{vehicle_id}/commands/unlock-battery-compartment
    method: POST
- name: request_firmware_versions
  endpoint:
    path: /vehicles/{vehicle_id}/commands/request-firmware-versions
    method: POST
- name: request_vehicle_state
  endpoint:
    path: /vehicles/{vehicle_id}/commands/request-vehicle-state
    method: POST
    data_selector: items
    params: {}
- name: enable_driving
  endpoint:
    path: /vehicles/{vehicle_id}/commands/enable-driving
    method: POST
    data_selector: items
    params: {}
- name: disable_driving
  endpoint:
    path: /vehicles/{vehicle_id}/commands/disable-driving
    method: POST
    data_selector: items
    params: {}
- name: unlock_central_lock
  endpoint:
    path: /vehicles/{vehicle_id}/commands/unlock-central-lock
    method: POST
    data_selector: items
    params: {}
- name: lock_central_lock
  endpoint:
    path: /vehicles/{vehicle_id}/commands/lock-central-lock
    method: POST
    data_selector: items
    params: {}
- name: unlock_and_enable_driving
  endpoint:
    path: /vehicles/{vehicle_id}/commands/unlock-and-enable-driving
    method: POST
    data_selector: items
    params: {}
- name: lock_and_disable_driving
  endpoint:
    path: /vehicles/{vehicle_id}/commands/lock-and-disable-driving
    method: POST
    data_selector: items
    params: {}
- name: unlock_top_case
  endpoint:
    path: /vehicles/{vehicle_id}/commands/unlock-top-case
    method: POST
    data_selector: items
    params: {}
- name: lock_top_case
  endpoint:
    path: /vehicles/{vehicle_id}/commands/lock-top-case
    method: POST
    data_selector: items
    params: {}
- name: draw_attention
  endpoint:
    path: /vehicles/{vehicle_id}/commands/draw-attention
    method: POST
- name: unlock_battery_compartment
  endpoint:
    path: /vehicles/{vehicle_id}/commands/unlock-battery-compartment
    method: POST
- name: request_firmware_versions
  endpoint:
    path: /vehicles/{vehicle_id}/commands/request-firmware-versions
    method: POST
- name: vehicle_commands
  endpoint:
    path: /vehicles/{vehicle_id}/commands/unlock-and-enable-driving
    method: POST
    data_selector: null
    params: {}
- name: set_rental_status
  endpoint:
    path: /vehicles/{vehicle_id}/rental-status
    method: PUT
    data_selector: null
    params:
      request_new_vehicle_state: 'true'
- name: request_vehicle_state
  endpoint:
    path: /vehicles/{vehicle_id}/request-vehicle-state
    method: POST
    data_selector: null
    params: {}
- name: stationary_simulated_vehicles
  endpoint:
    path: /simulated/vehicles/stationary
    method: GET
- name: moving_simulated_vehicles
  endpoint:
    path: /simulated/vehicles/moving
    method: GET
- name: vehicle_commands
  endpoint:
    path: /vehicles/{vehicle_id}/commands/unlock-and-enable-driving
    method: POST
- name: vehicle_management
  endpoint:
    path: /vehicles/{vehicle_id}/rental-status
    method: PUT
    params:
      request_new_vehicle_state: 'true'
- name: stationary_simulated_vehicles
  endpoint:
    path: /simulated/vehicles/stationary
    method: GET
    data_selector: vehicle_states
- name: moving_simulated_vehicles
  endpoint:
    path: /simulated/vehicles/moving
    method: GET
    data_selector: vehicle_states
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: records
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: items
- name: vehicles
  endpoint:
    path: /vehicles
    method: POST
    data_selector: id
    params: {}
- name: change_vehicle_model
  endpoint:
    path: /vehicles/:id/telematics-unit/setup
    method: PUT
    data_selector: vehicle_model_id
    params: {}
- name: remove_vehicle
  endpoint:
    path: /vehicles/{id}
    method: DELETE
    data_selector: id
    params: {}
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: vehicles
- name: start_sharing
  endpoint:
    path: /vehicles/{id}/sharing
    method: POST
    data_selector: sharing
    params: {}
- name: end_sharing_owner
  endpoint:
    path: /vehicles/{id}/sharing
    method: DELETE
    data_selector: sharing
    params: {}
- name: end_sharing_partner
  endpoint:
    path: /vehicles/{id}/sharing/partner
    method: DELETE
    data_selector: sharing
    params: {}
- name: sharing_partners
  endpoint:
    path: /sharing-partners
    method: GET
    data_selector: partners
    params: {}
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: items
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: records
    params:
      limit: '20'
- name: vehicle
  endpoint:
    path: /vehicles/{id}
    method: GET
    data_selector: records
    params: {}
- name: update_vehicle
  endpoint:
    path: /vehicles/{id}
    method: PATCH
    data_selector: records
    params: {}
- name: vehicles
  endpoint:
    path: /vehicles
    method: POST
    data_selector: ''
    params: {}
- name: change_vehicle_model
  endpoint:
    path: /vehicles/:id/telematics-unit/setup
    method: PUT
    data_selector: ''
    params: {}
- name: remove_vehicle
  endpoint:
    path: /vehicles/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: start_sharing
  endpoint:
    path: /vehicles/{id}/sharing
    method: POST
- name: end_sharing_owner
  endpoint:
    path: /vehicles/{id}/sharing
    method: DELETE
- name: end_sharing_partner
  endpoint:
    path: /vehicles/{id}/sharing/partner
    method: DELETE
- name: sharing_partners
  endpoint:
    path: /sharing-partners
    method: GET
- name: tags
  endpoint:
    path: /vehicles/tags
    method: GET
- name: add_tag_to_vehicle
  endpoint:
    path: /vehicles/{id}/tags/{tag}
    method: PUT
- name: remove_tag_from_vehicle
  endpoint:
    path: /vehicles/{id}/tags/{tag}
    method: DELETE
- name: custom_fields
  endpoint:
    path: /vehicles/custom-fields
    method: GET
    data_selector: custom_fields
- name: custom_field_values
  endpoint:
    path: /vehicles/custom-fields/{key}
    method: GET
    data_selector: custom_field_values
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: records
    params: {}
- name: vehicle
  endpoint:
    path: /vehicles/{id}
    method: GET
    data_selector: records
    params: {}
- name: update_vehicle
  endpoint:
    path: /vehicles/{id}
    method: PATCH
    data_selector: records
    params: {}
- name: archived_vehicles
  endpoint:
    path: /archived-vehicles
    method: GET
    data_selector: results
    params:
      limit: 20
- name: sharing_partners
  endpoint:
    path: /sharing-partners
    method: GET
    data_selector: results
    params: {}
- name: get_all_tags
  endpoint:
    path: /vehicles/tags
    method: GET
    data_selector: tags
    params: {}
- name: add_tag_to_vehicle
  endpoint:
    path: /vehicles/{id}/tags/{tag}
    method: PUT
    data_selector: tags
    params: {}
- name: remove_tag_from_vehicle
  endpoint:
    path: /vehicles/{id}/tags/{tag}
    method: DELETE
    data_selector: tags
    params: {}
- name: sharing
  endpoint:
    path: /vehicles/{id}/sharing
    method: post
    data_selector: sharing
    params: {}
- name: update_sharing
  endpoint:
    path: /vehicles/{id}/sharing
    method: patch
    data_selector: sharing
    params: {}
- name: end_sharing
  endpoint:
    path: /vehicles/{id}/sharing
    method: delete
    data_selector: sharing
    params: {}
- name: custom_fields
  endpoint:
    path: /vehicles/custom-fields
    method: GET
    data_selector: custom_fields
- name: custom_field_values
  endpoint:
    path: /vehicles/custom-fields/{key}
    method: GET
    data_selector: custom_field_values
- name: tags_bulk_update
  endpoint:
    path: /vehicles/tags-bulk
    method: POST
    data_selector: update_status
- name: rental_status
  endpoint:
    path: /vehicles/{id}/rental-status
    method: PUT
    data_selector: value
    params:
      request_new_vehicle_state: false
- name: end_sharing
  endpoint:
    path: /vehicles/{id}/sharing/partner
    method: DELETE
    data_selector: ''
- name: TripMetricsReady
  endpoint:
    path: /insights/trips/#tripmetricsready
    method: GET
    data_selector: data
    params: {}
- name: TripDiscarded
  endpoint:
    path: /insights/trips/#tripdiscarded
    method: GET
    data_selector: data
    params: {}
- name: archived_vehicles
  endpoint:
    path: /archived-vehicles
    method: GET
- name: sharing_partners
  endpoint:
    path: /sharing-partners
    method: GET
- name: available_credentials
  endpoint:
    path: /telematics-brands/{brand}/available-credentials
    method: GET
- name: available_telematics_units
  endpoint:
    path: /telematics-brands/{brand}/available-telematics-units
    method: GET
- name: available_vehicle_models
  endpoint:
    path: /telematics-brands/cloudboxx/available-vehicle-models
    method: GET
- name: vehicle_model
  endpoint:
    path: /telematics-brands/cloudboxx/available-vehicle-models/{model_id}
    method: GET
- name: vehicle_model_document
  endpoint:
    path: /telematics-brands/cloudboxx/available-vehicle-models/{model_id}/documents/{document_id}
    method: GET
- name: sharing
  endpoint:
    path: /vehicles/{id}/sharing
    method: post
    data_selector: rental_status
- name: update_sharing
  endpoint:
    path: /vehicles/{id}/sharing
    method: patch
    data_selector: rental_status
- name: end_sharing
  endpoint:
    path: /vehicles/{id}/sharing
    method: delete
    data_selector: rental_status
- name: set_rental_status
  endpoint:
    path: /vehicles/{id}/rental-status
    method: PUT
    data_selector: value
    params:
      request_new_vehicle_state: 'false'
- name: end_sharing_as_partner
  endpoint:
    path: /vehicles/{id}/sharing/partner
    method: DELETE
    data_selector: ''
    params: {}
- name: available_vehicle_models
  endpoint:
    path: /telematics-brands/{brand}/available-vehicle-models
    method: GET
    data_selector: models
    params:
      brand: string
      q: string
      vehicle_brand: string
      limit: integer
      cursor: string
- name: vehicle_model_by_id
  endpoint:
    path: /telematics-brands/{brand}/available-vehicle-models/{model_id}
    method: GET
    data_selector: model
    params:
      brand: string
      model_id: string
- name: create_vehicle
  endpoint:
    path: /vehicles
    method: POST
    data_selector: vehicle
    params: {}
- name: archive_vehicle
  endpoint:
    path: /vehicles/{id}
    method: DELETE
    data_selector: archive
    params:
      id: string
- name: change_telematics_unit_setup
  endpoint:
    path: /vehicles/{id}/telematics-unit/setup
    method: PUT
    data_selector: setup
    params:
      id: string
- name: replace_telematics_unit
  endpoint:
    path: /vehicles/{id}/telematics-unit
    method: PUT
    data_selector: replace
    params:
      id: string
- name: change_telematics_unit_authentication
  endpoint:
    path: /vehicles/{id}/telematics-unit/authentication
    method: PUT
    data_selector: authentication
    params:
      id: string
- name: get_available_accessories
  endpoint:
    path: /vehicles/{id}/telematics-unit/available-accessories
    method: GET
    data_selector: accessories
    params:
      id: string
- name: TripMetricsReady
  endpoint:
    path: /insights/trips/TripMetricsReady
    method: GET
    data_selector: data
    params: {}
- name: TripDiscarded
  endpoint:
    path: /insights/trips/TripDiscarded
    method: GET
    data_selector: data
    params: {}
- name: available_credentials
  endpoint:
    path: /telematics-brands/{brand}/available-credentials
    method: GET
- name: available_telematics_units
  endpoint:
    path: /telematics-brands/{brand}/available-telematics-units
    method: GET
- name: available_vehicle_models
  endpoint:
    path: /telematics-brands/cloudboxx/available-vehicle-models
    method: GET
- name: vehicle_model
  endpoint:
    path: /telematics-brands/cloudboxx/available-vehicle-models/{model_id}
    method: GET
- name: vehicle_model_document
  endpoint:
    path: /telematics-brands/cloudboxx/available-vehicle-models/{model_id}/documents/{document_id}
    method: GET
- name: feature_configuration
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration
    method: get
    data_selector: feature_configuration
- name: bulk_configuration
  endpoint:
    path: /configure-vehicle-telematics-unit-bulk
    method: get
    data_selector: bulk_configuration
- name: damage_detection_configuration
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/damage-detection
    method: get
    data_selector: damage_detection
- name: smoke_detection
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/smoke-detection
    method: GET
- name: speeding_detection
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/speeding-detection
    method: GET
- name: anomaly_detection
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/anomaly-detection
    method: GET
- name: driving_events
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/driving-events
    method: GET
- name: parking_events
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/parking-events
    method: GET
- name: available_vehicle_models
  endpoint:
    path: /telematics-brands/{brand}/available-vehicle-models
    method: GET
    data_selector: vehicle_models
    params:
      brand: string
      q: string
      vehicle_brand: string
      limit: integer
      cursor: string
- name: vehicle_model
  endpoint:
    path: /telematics-brands/{brand}/available-vehicle-models/{model_id}
    method: GET
    data_selector: vehicle_model
    params:
      brand: string
      model_id: string
- name: create_vehicle
  endpoint:
    path: /vehicles
    method: POST
    data_selector: vehicle_creation_response
- name: archive_vehicle
  endpoint:
    path: /vehicles/{id}
    method: DELETE
    data_selector: archive_response
    params:
      id: string
- name: change_telematics_unit_setup
  endpoint:
    path: /vehicles/{id}/telematics-unit/setup
    method: PUT
    data_selector: setup_response
    params:
      id: string
- name: replace_telematics_unit
  endpoint:
    path: /vehicles/{id}/telematics-unit
    method: PUT
    data_selector: replace_response
    params:
      id: string
- name: change_telematics_unit_password
  endpoint:
    path: /vehicles/{id}/telematics-unit/authentication
    method: PUT
    data_selector: password_change_response
    params:
      id: string
- name: delete_archived_vehicle
  endpoint:
    path: /archived-vehicles/{id}
    method: DELETE
    data_selector: delete_response
    params:
      id: string
- name: get_available_accessories
  endpoint:
    path: /vehicles/{id}/telematics-unit/available-accessories
    method: GET
    data_selector: accessories_status
    params:
      id: string
- name: get_settings_of_a_vehicle
  endpoint:
    path: /vehicles/{id}/cloudboxx-settings
    method: GET
- name: update_settings_for_a_vehicle
  endpoint:
    path: /vehicles/{id}/cloudboxx-settings
    method: PATCH
- name: get_auto_immobilizer_control_configuration
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/auto-immobilizer-control
    method: GET
- name: set_auto_immobilizer_control_configuration
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/auto-immobilizer-control
    method: PUT
- name: disable_auto_immobilizer_control
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/auto-immobilizer-control
    method: DELETE
- name: set_parking_events_configuration
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/parking-events
    method: PUT
- name: disable_parking_events
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/parking-events
    method: DELETE
- name: calibrate_tilt
  endpoint:
    path: /vehicles/{id}/telematics-unit/tilt-calibration
    method: PUT
- name: feature_configuration
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration
    method: GET
    data_selector: settings
- name: feature_configuration_bulk
  endpoint:
    path: /configure-vehicle-telematics-unit-bulk
    method: POST
    data_selector: settings
- name: tracking_configuration
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/tracking
    method: GET
    data_selector: settings
- name: damage_detection_configuration
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/damage-detection
    method: GET
    data_selector: settings
- name: request_system_status
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/request-system-status
    method: POST
- name: ble_reset
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/ble-reset
    method: POST
- name: board_reset
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/board-reset
    method: POST
- name: modem_reset
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/modem-reset
    method: POST
- name: data_connection_reset
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/data-connection-reset
    method: POST
- name: switch_mobile_network
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/switch-mobile-network
    method: POST
- name: network_detach
  endpoint:
    path: /vehicles/{id}/cloudboxx-connectivity-commands/network-detach
    method: POST
- name: request_sim_activation
  endpoint:
    path: /vehicles/{id}/cloudboxx-connectivity-commands/request-sim-activation
    method: POST
- name: request_sim_suspension
  endpoint:
    path: /vehicles/{id}/cloudboxx-connectivity-commands/request-sim-suspension
    method: POST
- name: smoke_detection
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/smoke-detection
    method: GET
    data_selector: settings
- name: speeding_detection
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/speeding-detection
    method: GET
    data_selector: settings
- name: anomaly_detection
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/anomaly-detection
    method: GET
    data_selector: settings
- name: driving_events
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/driving-events
    method: GET
    data_selector: settings
- name: parking_events
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/parking-events
    method: GET
    data_selector: settings
- name: get_settings_of_a_vehicle
  endpoint:
    path: /vehicles/{id}/cloudboxx-settings
    method: GET
- name: update_settings_for_a_vehicle
  endpoint:
    path: /vehicles/{id}/cloudboxx-settings
    method: PATCH
- name: set_parking_events_configuration
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/parking-events
    method: PUT
- name: disable_parking_events
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/parking-events
    method: DELETE
- name: calibrate_tilt
  endpoint:
    path: /vehicles/{id}/telematics-unit/tilt-calibration
    method: PUT
- name: get_auto_immobilizer_control_configuration
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/auto-immobilizer-control
    method: GET
- name: set_auto_immobilizer_control_configuration
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/auto-immobilizer-control
    method: PUT
- name: disable_auto_immobilizer_control
  endpoint:
    path: /vehicles/{id}/telematics-unit/feature-configuration/auto-immobilizer-control
    method: DELETE
- name: request_system_status
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/request-system-status
    method: POST
    data_selector: system-status
- name: ble_reset
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/ble-reset
    method: POST
    data_selector: Problem
- name: board_reset
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/board-reset
    method: POST
    data_selector: Problem
- name: modem_reset
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/modem-reset
    method: POST
    data_selector: Problem
- name: data_connection_reset
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/data-connection-reset
    method: POST
    data_selector: Problem
- name: switch_mobile_network
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/switch-mobile-network
    method: POST
    data_selector: Problem
- name: network_detach
  endpoint:
    path: /vehicles/{id}/cloudboxx-connectivity-commands/network-detach
    method: POST
    data_selector: Problem
- name: request_sim_activation
  endpoint:
    path: /vehicles/{id}/cloudboxx-connectivity-commands/request-sim-activation
    method: POST
    data_selector: Problem
- name: request_sim_suspension
  endpoint:
    path: /vehicles/{id}/cloudboxx-connectivity-commands/request-sim-suspension
    method: POST
    data_selector: Problem
- name: request_system_status
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/request-system-status
    method: POST
- name: ble_reset
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/ble-reset
    method: POST
- name: board_reset
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/board-reset
    method: POST
- name: modem_reset
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/modem-reset
    method: POST
- name: data_connection_reset
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/data-connection-reset
    method: POST
- name: switch_mobile_network
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/switch-mobile-network
    method: POST
- name: network_detach
  endpoint:
    path: /vehicles/{id}/cloudboxx-connectivity-commands/network-detach
    method: POST
- name: request_sim_activation
  endpoint:
    path: /vehicles/{id}/cloudboxx-connectivity-commands/request-sim-activation
    method: POST
- name: request_sim_suspension
  endpoint:
    path: /vehicles/{id}/cloudboxx-connectivity-commands/request-sim-suspension
    method: POST
- name: create_cloudboxx_bluetooth_token
  endpoint:
    path: /telematics-brands/cloudboxx/bluetooth-tokens
    method: POST
- name: get_multiple_cloudboxx_bluetooth_tokens
  endpoint:
    path: /telematics-brands/cloudboxx/bluetooth-tokens
    method: GET
- name: get_single_cloudboxx_bluetooth_token
  endpoint:
    path: /telematics-brands/cloudboxx/bluetooth-tokens/{id}
    method: GET
- name: suspend_cloudboxx_bluetooth_token
  endpoint:
    path: /telematics-brands/cloudboxx/bluetooth-tokens/{id}/suspension
    method: PUT
- name: unsuspend_cloudboxx_bluetooth_token
  endpoint:
    path: /telematics-brands/cloudboxx/bluetooth-tokens/{id}/suspension
    method: DELETE
- name: activate_guest_mode
  endpoint:
    path: /vehicles/{vehicle_id}/tesla-commands/activate-guest-mode
    method: POST
- name: deactivate_guest_mode
  endpoint:
    path: /vehicles/{vehicle_id}/tesla-commands/deactivate-guest-mode
    method: POST
- name: request_system_status
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/request-system-status
    method: POST
- name: ble_reset
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/ble-reset
    method: POST
- name: board_reset
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/board-reset
    method: POST
- name: modem_reset
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/modem-reset
    method: POST
- name: data_connection_reset
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/data-connection-reset
    method: POST
- name: switch_mobile_network
  endpoint:
    path: /vehicles/{id}/cloudboxx-commands/switch-mobile-network
    method: POST
- name: network_detach
  endpoint:
    path: /vehicles/{id}/cloudboxx-connectivity-commands/network-detach
    method: POST
- name: request_sim_activation
  endpoint:
    path: /vehicles/{id}/cloudboxx-connectivity-commands/request-sim-activation
    method: POST
- name: request_sim_suspension
  endpoint:
    path: /vehicles/{id}/cloudboxx-connectivity-commands/request-sim-suspension
    method: POST
- name: create_bluetooth_token
  endpoint:
    path: /telematics-brands/cloudboxx/bluetooth-tokens
    method: POST
    data_selector: token
    params: {}
- name: get_multiple_bluetooth_tokens
  endpoint:
    path: /telematics-brands/cloudboxx/bluetooth-tokens
    method: GET
    data_selector: tokens
    params: {}
- name: get_bluetooth_token_metadata
  endpoint:
    path: /telematics-brands/cloudboxx/bluetooth-tokens/{id}
    method: GET
    data_selector: token
    params: {}
- name: suspend_bluetooth_token
  endpoint:
    path: /telematics-brands/cloudboxx/bluetooth-tokens/{id}/suspension
    method: PUT
    data_selector: status
    params: {}
- name: unsuspend_bluetooth_token
  endpoint:
    path: /telematics-brands/cloudboxx/bluetooth-tokens/{id}/suspension
    method: DELETE
    data_selector: status
    params: {}
- name: activate_guest_mode
  endpoint:
    path: /vehicles/{vehicle_id}/tesla-commands/activate-guest-mode
    method: POST
- name: deactivate_guest_mode
  endpoint:
    path: /vehicles/{vehicle_id}/tesla-commands/deactivate-guest-mode
    method: POST
notes:
- Vehicles are addressed and identified by a unique vehicle_id.
- A vehicle’s vehicle state capabilities describe which values are supported by a
  given vehicle.
- Capabilities allow for generic workflows based on vehicle model or telematics unit.
- Capabilities allow generic implementation of workflows based on vehicle types.
- Keep your application in sync with the actual state of your vehicles using the Events
  API.
- Use the Events API if you always want to keep your vehicle’s states in sync between
  OneAPI and your application.
- Most of the APIs of the INVERS OneAPI are RESTful APIs and can all be used by your
  application with one set of credentials.
- Most of the APIs of the INVERS OneAPI are RESTful APIs.
- The Events API serves as an asynchronous messaging mechanism and not as long-term
  storage.
- Vehicle events are delivered with 'at-least-once' semantics.
- For activating a feature with default configuration, send an empty request body.
- Configuration parameters must be fully supplied when not using default values.
- When a command is successfully sent to a vehicle, 200 OK will be returned along
  with vehicle state JSON data in the body.
- Avoid actively requesting vehicle state too often.
- You can have up to ten simulated vehicles in your fleet.
- All timestamps are in UTC and are described in ISO 8601-compatible format.
- Do not store or process any credentials to the INVERS API within your customer apps.
- Use Bluetooth as a fallback communication method.
- All timestamps are in UTC and are described in ISO 8601-compatible format
- This route offers cursor-based pagination.
- Vehicles that remain unused for more than 90 days will be automatically removed
  from your fleet.
- The Vehicle Management API provides endpoints to view all vehicles of your fleet
  in a paged list.
- Sharing can be ended by the owner or partner at any time.
- Use the limit parameter to limit the length of the resulting list.
- The API offers cursor-based pagination.
- If the FleetShare feature is not subscribed an empty list will be returned.
- Trip duration less than one minute is considered too short and discarded.
- The rental status 'IN_RENTAL' signals the start of the data protection mode.
- The rental status 'NOT_IN_RENTAL' signals the end of the data protection mode.
- The response property `activation_status` contains the status of the most recent
  (de)activation job.
- Requires OAuth2 authentication.
- Unique ID of the vehicle must be provided in the path parameters.
- Uses OAuth2
- The lock condition `use_doors_status` can only be enabled when the vehicle has the
  vehicle state capability `DOORS_STATUS`.
- The feature configuration contains information on all configured features.
- Activating the damage detection via the PUT endpoint creates an asynchronous job.
- Requires OAuth2 authorization
- Each feature configuration can be enabled or disabled
- For the auto immobilizer control to work, the vehicle needs the vehicle state capability
  `IGNITION`.
- Unique identifier of the vehicle is required for all commands.
- A token can grant different levels of control over a vehicle dependent on the access_level
  request parameter.
- For each CloudBoxx, a maximum of 50 suspensions can be active at the same time.
- Commands require vehicle ID to be specified in the path.
errors:
- '409 Conflict: The command is not supported by the vehicle.'
- '404 Not Found: The vehicle cannot be found.'
- '502 Bad Gateway: An error occurred at a third party API or protocol.'
- '504 Gateway Timeout: No connection to vehicle.'
- '500 Internal Server Error: Internal Server Error'
- '504 Gateway Timeout: No connection to vehicle'
- '201 Created: Request successful.'
- 'PENDING: Configuration request is pending.'
- '409 Conflict: The command cannot be executed.'
- '404: The vehicle with the specified vehicle_id was not found.'
- '502: The third party API responded with an error.'
- '504: The vehicle did not establish a connection or it did not answer in time.'
- /problems/invalid-json
- /problems/validation-error
- /problems/missing-credentials
- /problems/invalid-credentials
- /problems/forbidden-resource
- /problems/missing-permissions
- /problems/unknown-resource
- /problems/request-method-not-allowed
- /problems/content-length-required
- /problems/unsupported-media-type
- /problems/too-many-requests
- /problems/authorization-server-error
- /problems/internal-server-error
- '404 Not Found: The vehicle with the specified vehicle_id was not found.'
- '502 Bad Gateway: The third party API responded with an error.'
- '504 Gateway Timeout: The vehicle did not establish a connection or it did not answer
  in time.'
- 200 OK
- '404'
- 409 Conflict
- '502'
- '504'
- 'connection_error: Failed to request vehicle state due to connectivity issues.'
- '/problems/invalid-json: The body contains invalid JSON.'
- '/problems/validation-error: Validation Error'
- '/problems/missing-credentials: The credentials are missing.'
- '/problems/invalid-credentials: The credentials are invalid.'
- '/problems/forbidden-resource: Accessing this resource is forbidden.'
- '/problems/missing-permissions: Accessing this resource is forbidden.'
- '/problems/unknown-resource: The requested resource does not exist.'
- '/problems/request-method-not-allowed: The requested method is not allowed for the
  requested resource.'
- '/problems/content-length-required: Content-Length header is required.'
- '/problems/unsupported-media-type: Media type not supported'
- '/problems/too-many-requests: Too many requests'
- '/problems/authorization-server-error: Access token cannot be validated.'
- '/problems/internal-server-error: Internal Server Error'
- 'connection error: Check vehicle connectivity'
- '400: The body contains invalid JSON.'
- '400: Validation Error'
- The value for property 'vehicle.license_plate' must be a string.
- You have specified a value with invalid type.
- The value for property 'vehicle.license_plate' is longer than the allowed maximum
  length of 30 characters.
- The property 'vehicle.plate' is not allowed.
- 'Sort property not found: deactivated. Allowed properties are: id, oauth_client_id,
  name.'
- The cursor is invalid. Perform a new request without a cursor to get a valid one.
- Cursor and sort parameter are present. Do not provide any other search-related query
  parameters when using the cursor.
- The value 'foo' is not supported for property 'brand'.
- '401 Unauthorized: The credentials are missing.'
- '401 Unauthorized: The credentials are invalid.'
- '403 Accessing this resource is forbidden: A scope required to access this resource
  is not granted.'
- '403 Accessing this resource is forbidden: You have sent a request with credentials
  that are valid, but missing the correct OAuth scope.'
- Accessing this resource is forbidden.
- '403: A permission required to access this resource is not granted.'
- You have sent a request with credentials that are valid, but missing the correct
  permission.
- '404: The requested resource does not exist.'
- 'REQUEST_METHOD_NOT_ALLOWED: The requested method is not allowed for the requested
  resource.'
- '400: Validation Error - The value for property ''vehicle.license_plate'' must be
  a string.'
- '400: Validation Error - You have specified a value with invalid type.'
- '400: Validation Error - The value for property ''vehicle.license_plate'' is longer
  than the allowed maximum length of 30 characters.'
- '400: Validation Error - The property ''vehicle.plate'' is not allowed.'
- '400: Validation Error - Sort property not found: deactivated. Allowed properties
  are: id, oauth_client_id, name.'
- '400: Validation Error - The cursor is invalid. Perform a new request without a
  cursor to get a valid one.'
- '400: Validation Error - Cursor and sort parameter are present. Do not provide any
  other search-related query parameters when using the cursor.'
- '400: Validation Error - The value ''foo'' is not supported for property ''brand''.'
- Content-Length header is required.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Media type not supported.
- '415: Media type ‘text/html’ is not supported, use ‘application/json’ instead.'
- '401 Unauthorized: The ‘Authorization’ header containing the access token is missing.'
- '401 Unauthorized: You did not specify the `Authorization` header correctly.'
- '403: A scope required to access this resource is not granted.'
- You have sent a request with credentials that are valid, but missing the correct
  OAuth scope.
- Access token cannot be validated.
- '500: Access token cannot be validated because of a technical error at the authorization
  server.'
- 'status: 403'
- A permission required to access this resource is not granted.
- '500 Internal Server Error: Internal Server Error occurred during request. Make
  sure to provide the ''flow_id'' for troubleshooting or support requests.'
- 'status: 415: Make sure you are indeed sending a JSON payload as per the corresponding
  API documentation'
- Make sure the 'Content-Type' header of your request is set to 'application/json'
- 'Internal Server Error: Internal Server Error occurred during request. Make sure
  to provide the ''flow_id'' for troubleshooting or support requests.'
- '500: Internal Server Error'
- '200: Rental status changed'
- '404: Requested resource was not found.'
- '409: Vehicle rental_status is in conflict with the operation'
- '409: Vehicle `rental_status` is in conflict with the operation.'
- '409: Vehicle rental_status is in conflict with the operation.'
- '404: Requested resource was not found'
- '404: A specified resource doesn''t exist.'
- '409: The request cannot be processed.'
- '504: There is no connection to the vehicle.'
- '404: The resource cannot be found.'
- '400: Validation Error - The value for property “vehicle.license_plate” must be
  a string.'
- '400: Validation Error - The value for property ‘vehicle.license_plate’ is longer
  than the allowed maximum length of 30 characters.'
- '400: Validation Error - The property ‘vehicle.plate’ is not allowed.'
- '400: Validation Error - Cursor and sort parameter are present.'
- '400: Validation Error - The value ‘foo’ is not supported for property ‘brand’.'
- '400: Validation of request failed.'
- '404: Vehicle was not found or does not support CloudBoxx settings.'
- '409: Request cannot be processed.'
- 404 The resource cannot be found.
- '400: Validation Error - Use the error response’s type property to handle specific
  errors.'
- The value for property ‘vehicle.license_plate’ is longer than the allowed maximum
  length of 30 characters.
- The property ‘vehicle.plate’ is not allowed.
- The value ‘foo’ is not supported for property ‘brand’.
- '400: Validation of request failed'
- '404: Vehicle was not found or does not support CloudBoxx settings'
- '409: Request cannot be processed'
- '504: The vehicle did not establish a connection or it did not answer in time'
- '404: Vehicle not found'
- '409: Command Not Supported, Vehicle Not Ready to Accept Commands, Vehicle is currently
  shared, Vehicle''s setup status prevents command execution'
- '504: No Connection to Vehicle'
- '/problem/connection-error: Service Unavailable: 503: Connection to database timed
  out'
- '404: The specified token was not found.'
- '504: The CloudBoxx is offline or did not respond in time.'
- '409: Maximum number of suspensions exceeded.'
- '409: The command cannot be executed.'
- '409: Command Not Supported'
- '409: Vehicle Not Ready to Accept Commands'
- '/problem/connection-error: Service Unavailable - 503: Connection to database timed
  out'
- '409: Maximum number of active suspensions reached.'
auth_info:
  mentioned_objects:
  - vehicle-commands
  - OAuth2
  - OauthToken
  - vehicles.ro
  - vehicle-config
  - AuthProvider
  - Oauth2
client:
  base_url: https://api.invers.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
