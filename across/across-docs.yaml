resources:
- name: swap_approval
  endpoint:
    path: /swap/approval
    method: GET
    data_selector: response
    params: {}
- name: swap_approval
  endpoint:
    path: /swap/approval
    method: POST
    data_selector: actions
    params: {}
- name: supported_chains
  endpoint:
    path: /swap/chains
    method: GET
    data_selector: ''
    params: {}
- name: swap_tokens
  endpoint:
    path: /api/swap/tokens
    method: GET
    data_selector: List of supported tokens
- name: swap_sources
  endpoint:
    path: /api/swap/sources
    method: GET
    data_selector: List of supported sources for crosschain swaps
- name: deposit_status
  endpoint:
    path: /api/deposit/status
    method: GET
    data_selector: Lifecycle of a transaction
- name: deposits
  endpoint:
    path: /api/deposits
    method: GET
    data_selector: List of deposits for a given depositor
- name: suggested_fees
  endpoint:
    path: /api/suggested-fees
    method: GET
    data_selector: Suggested fees for the transaction and supporting data
- name: limits
  endpoint:
    path: /limits
    method: GET
    data_selector: Transfer limits
    params:
      inputToken: string
      outputToken: string
      originChainId: all of
      destinationChainId: all of
- name: available_routes
  endpoint:
    path: /available-routes
    method: GET
    data_selector: List of available routes
    params:
      originChainId: all of
      destinationChainId: all of
      originToken: string
      destinationToken: string
- name: swap_approval
  endpoint:
    path: /swap/approval
    method: GET
- name: fetch_chains
  endpoint:
    path: /swap/chains
    method: GET
- name: fetch_tokens
  endpoint:
    path: /swap/tokens
    method: GET
- name: swap_approval
  endpoint:
    path: /swap/approval
    method: GET
    data_selector: data
    params:
      tradeType: minOutput
      amount: '1'
      inputToken: '0x0b2C639c533813f4Aa9D7837CAf62653d097Ff85'
      originChainId: 10
      outputToken: '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1'
      destinationChainId: 42161
      depositor: <address-of-the-sender>
- name: swap
  endpoint:
    path: /v1/swap
    method: POST
    data_selector: data
    params: {}
- name: status
  endpoint:
    path: /api/status
    method: GET
    data_selector: data
    params: {}
- name: swap
  endpoint:
    path: /swap
    method: POST
    data_selector: data
    params: {}
- name: V3FundsDeposited
  endpoint:
    path: /events/v3FundsDeposited
    method: POST
    data_selector: events
    params: {}
- name: FilledV3Relay
  endpoint:
    path: /events/filledV3Relay
    method: POST
    data_selector: events
    params: {}
- name: suggested_fees
  endpoint:
    path: /suggested-fees
    method: GET
    data_selector: fees
- name: unsafeDeposit
  endpoint:
    path: /unsafeDeposit
    method: POST
    data_selector: result
- name: deposit
  endpoint:
    path: /deposit
    method: POST
    data_selector: result
- name: fillRelay
  endpoint:
    path: /fillRelay
    method: POST
    data_selector: result
- name: suggested_fees
  endpoint:
    path: /suggested-fees
    method: GET
    data_selector: fees
    params: {}
- name: suggested_fees
  endpoint:
    path: /suggested-fees
    method: GET
- name: deposit
  endpoint:
    path: /deposit
    method: POST
- name: suggested_fees
  endpoint:
    path: /suggested-fees
    method: GET
    data_selector: response
- name: chains
  endpoint:
    path: /swap/chains
    method: GET
- name: tokens
  endpoint:
    path: /swap/tokens
    method: GET
- name: sources
  endpoint:
    path: /swap/sources
    method: GET
- name: deposit_status
  endpoint:
    path: /deposit/status
    method: GET
- name: deposits
  endpoint:
    path: /deposits
    method: GET
- name: swap_approval
  endpoint:
    path: /swap/approval
    method: GET
- name: fetch_chains
  endpoint:
    path: /swap/chains
    method: GET
- name: fetch_tokens
  endpoint:
    path: /swap/tokens
    method: GET
- name: swap_approval
  endpoint:
    path: /swap/approval
    method: GET
    data_selector: data
    params: {}
- name: deposit_status
  endpoint:
    path: /deposit/status
    method: GET
    data_selector: status
    params:
      originChainId: ''
      depositId: ''
      depositTxHash: ''
- name: transfer_erc20_tokens_after_swap
  endpoint:
    path: /developer-quickstart/embedded-crosschain-swap-actions/transfer-erc20-tokens-after-swap
    method: POST
    data_selector: actions
- name: swap_approval
  endpoint:
    path: /api/swap/approval
    method: POST
    data_selector: actions
    params: {}
- name: deposit_eth
  endpoint:
    path: /embedded-crosschain-swap-actions/deposit-eth-into-a-defi-protocol-aave
    method: POST
    data_selector: actions
    params: {}
- name: swap_approval
  endpoint:
    path: /api/swap/approval
    method: POST
    data_selector: actions
    params:
      tradeType: exactInput
      amount: '10000000'
      inputToken: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
      outputToken: '0x0000000000000000000000000000000000000000'
      originChainId: 1
      destinationChainId: 42161
      depositor: '0xA4d353BBc130cbeF1811f27ac70989F9d568CeAB'
      recipient: '0xA4d353BBc130cbeF1811f27ac70989F9d568CeAB'
- name: addLiquidity
  endpoint:
    path: /developer-quickstart/embedded-crosschain-swap-actions/add-liquidity-to-across-hubpool-with-eth
    method: POST
    data_selector: actions
- name: swap_approval
  endpoint:
    path: /api/swap/approval
    method: POST
    data_selector: actions
    params:
      tradeType: exactInput
      amount: '10000000'
      inputToken: '0x0b2C639c533813f4Aa9D7837CAf62653d097Ff85'
      outputToken: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2'
      originChainId: '10'
      destinationChainId: '1'
      depositor: '0xA4d353BBc130cbeF1811f27ac70989F9d568CeAB'
      recipient: '0xA4d353BBc130cbeF1811f27ac70989F9d568CeAB'
- name: simple_native_eth_transfer
  endpoint:
    path: /developer-quickstart/embedded-crosschain-swap-actions/simple-native-eth-transfer
    method: POST
    data_selector: actions
    params: {}
- name: swap_approval
  endpoint:
    path: /api/swap/approval
    method: POST
    data_selector: actions
    params: {}
- name: handleOps
  endpoint:
    path: /approval
    method: POST
    data_selector: actions
- name: intent
  endpoint:
    path: /intents
    method: GET
    data_selector: intents
    params: {}
- name: swap
  endpoint:
    path: /v4/swap
    method: POST
    data_selector: data
    params: {}
- name: Arbitrum_SpokePool
  endpoint:
    path: /address/0xe35e9842fceaca96570b734083f4a58e8f7c5f2a
    method: GET
- name: Across Governance Token
  endpoint:
    path: /address/0x53691596d1BCe8CEa565b84d4915e69e03d9C99d
    method: GET
- name: MulticallHandler
  endpoint:
    path: /address/0x924a9f036260DdD5808007E1AA95f08eD08aA569
    method: GET
- name: SpokePoolPeriphery
  endpoint:
    path: /address/0x89415a82d909a7238d69094C3Dd1dCC1aCbDa85C
    method: GET
- name: Base_SpokePool
  endpoint:
    path: /address/0x82B564983aE7274c86695917BBf8C99ECb6F0F8F
    method: GET
    data_selector: records
- name: MulticallHandler
  endpoint:
    path: /address/0x924a9f036260DdD5808007E1AA95f08eD08aA569
    method: GET
    data_selector: records
- name: Mainnet
  endpoint:
    path: /mainnet/contracts
    method: GET
    data_selector: contracts
    params: {}
- name: Sepolia Testnet
  endpoint:
    path: /sepolia/contracts
    method: GET
    data_selector: contracts
    params: {}
- name: Lisk_SpokePool
  endpoint:
    path: /address/0x9552a0a6624A23B848060AE5901659CDDa1f83f8
    method: GET
- name: MulticallHandler
  endpoint:
    path: /address/0x924a9f036260DdD5808007E1AA95f08eD08aA569
    method: GET
- name: SpokePoolPeriphery
  endpoint:
    path: /address/0x89415a82d909a7238d69094C3Dd1dCC1aCbDa85C
    method: GET
- name: Lisk_SpokePool
  endpoint:
    path: /address/0xeF684C38F94F48775959ECf2012D7E864ffb9dd4
    method: GET
- name: MulticallHandler
  endpoint:
    path: /address/0x924a9f036260DdD5808007E1AA95f08eD08aA569
    method: GET
- name: Mode_SpokePool
  endpoint:
    path: /v4/mode_spoke_pool
    method: GET
    data_selector: data
- name: MulticallHandler
  endpoint:
    path: /v4/multicall_handler
    method: GET
    data_selector: data
- name: SpokePoolPeriphery
  endpoint:
    path: /v4/spoke_pool_periphery
    method: GET
    data_selector: data
- name: Mode_SpokePool
  endpoint:
    path: /address/0xbd886FC0725Cc459b55BbFEb3E4278610331f83b
    method: GET
    data_selector: data
    params: {}
- name: MulticallHandler
  endpoint:
    path: /address/0x924a9f036260DdD5808007E1AA95f08eD08aA569
    method: GET
    data_selector: data
    params: {}
- name: Optimism_SpokePool
  endpoint:
    path: /optimism/spoke-pool
    method: GET
    data_selector: pool_data
- name: Across Governance Token
  endpoint:
    path: /governance/token
    method: GET
    data_selector: token_data
- name: MulticallHandler
  endpoint:
    path: /multicall/handler
    method: GET
    data_selector: handler_data
- name: SpokePoolPeriphery
  endpoint:
    path: /spoke-pool/periphery
    method: GET
    data_selector: periphery_data
- name: Optimism_SpokePool
  endpoint:
    path: /sepolia-optimism/contract/0x4e8E101924eDE233C13e2D8622DC8aED2872d505
    method: GET
- name: MulticallHandler
  endpoint:
    path: /sepolia-optimism/contract/0x924a9f036260DdD5808007E1AA95f08eD08aA569
    method: GET
- name: PolygonTokenBridger
  endpoint:
    path: /0x0330E9b4D0325cCfF515E81DFbc7754F2a02ac57
    method: GET
    data_selector: code
    params: {}
- name: Polygon_SpokePool
  endpoint:
    path: /0x9295ee1d8C5b022Be115A2AD3c30C72E34e7F096
    method: GET
    data_selector: code
    params: {}
- name: Across Governance Token
  endpoint:
    path: /0xF328b73B6c685831F238c30a23Fc19140CB4D8FC
    method: GET
    data_selector: token
    params: {}
- name: MulticallHandler
  endpoint:
    path: /0x924a9f036260DdD5808007E1AA95f08eD08aA569
    method: GET
    data_selector: code
    params: {}
- name: SpokePoolPeriphery
  endpoint:
    path: /0x89415a82d909a7238d69094C3Dd1dCC1aCbDa85C
    method: GET
    data_selector: code
    params: {}
- name: PolygonTokenBridger
  endpoint:
    path: /address/0x4e3737679081c4D3029D88cA560918094f2e0284
    method: GET
- name: Polygon_SpokePool
  endpoint:
    path: /address/0xd08baaE74D6d2eAb1F3320B2E1a53eeb391ce8e5
    method: GET
- name: MulticallHandler
  endpoint:
    path: /address/0x924a9f036260DdD5808007E1AA95f08eD08aA569
    method: GET
- name: Swap
  endpoint:
    path: /v4/swap
    method: POST
    data_selector: data
    params: {}
- name: Unichain_SpokePool
  endpoint:
    path: /address/0x6999526e507Cc3b03b180BbE05E1Ff938259A874
    method: GET
- name: MulticallHandler
  endpoint:
    path: /address/0x924a9f036260DdD5808007E1AA95f08eD08aA569
    method: GET
- name: WorldChain_SpokePool
  endpoint:
    path: /address/0x09aea4b2242abC8bb4BB78D537A67a245A7bEC64
    method: GET
    data_selector: records
- name: MulticallHandler
  endpoint:
    path: /address/0x924a9f036260DdD5808007E1AA95f08eD08aA569
    method: GET
    data_selector: records
- name: SpokePoolPeriphery
  endpoint:
    path: /address/0x89415a82d909a7238d69094C3Dd1dCC1aCbDa85C
    method: GET
    data_selector: records
- name: zkSync_SpokePool
  endpoint:
    path: /contracts/zksync_spoke_pool
    method: GET
    data_selector: data
- name: MulticallHandler
  endpoint:
    path: /contracts/multicall_handler
    method: GET
    data_selector: data
- name: SpokePoolPeriphery
  endpoint:
    path: /contracts/spoke_pool_periphery
    method: GET
    data_selector: data
- name: deposit
  endpoint:
    path: /contracts/interfaces/SpokePoolInterface.sol/deposit
    method: POST
    data_selector: V3FundsDeposited
    params: {}
- name: depositV3
  endpoint:
    path: /contracts/interfaces/V3SpokePoolInterface.sol/depositV3
    method: POST
    data_selector: V3FundsDeposited
    params: {}
- name: speedUpDepositV3
  endpoint:
    path: /contracts/interfaces/V3SpokePoolInterface.sol/speedUpDepositV3
    method: POST
    data_selector: RequestedSpeedUpV3Deposit
    params: {}
- name: mainnet_chains
  endpoint:
    path: /supported_chains/mainnet
    method: GET
    data_selector: chains
- name: testnet_chains
  endpoint:
    path: /supported_chains/testnet
    method: GET
    data_selector: chains
- name: available_routes
  endpoint:
    path: /api/available-routes
    method: GET
    data_selector: routes
    params: {}
- name: liquidity_provider_fees
  endpoint:
    path: /liquidity_provider/fees
    method: GET
    data_selector: fees
    params: {}
- name: relayer_fees
  endpoint:
    path: /relayer/fees
    method: GET
    data_selector: fees
    params: {}
- name: HubPool
  endpoint:
    path: /bondToken
    method: GET
    data_selector: bondToken
    params: {}
- name: BondToken
  endpoint:
    path: /bondAmount
    method: GET
    data_selector: bondAmount
    params: {}
- name: bond_token
  endpoint:
    path: /bondToken
    method: GET
    data_selector: data
    params: {}
- name: hub_pool
  endpoint:
    path: /hubPool
    method: GET
    data_selector: data
    params: {}
- name: deposit_status
  endpoint:
    path: /reference/api-reference#deposit-status
    method: GET
- name: V3FundsDeposited
  endpoint:
    path: /V3FundsDeposited
    method: GET
    data_selector: records
- name: FilledV3Relay
  endpoint:
    path: /FilledV3Relay
    method: GET
    data_selector: records
- name: fillStatuses
  endpoint:
    path: /fillStatuses
    method: POST
    data_selector: records
- name: swap
  endpoint:
    path: /api/v4/swap
    method: POST
    data_selector: data
    params: {}
- name: relayer
  endpoint:
    path: /api/v4/relayer
    method: GET
    data_selector: data
    params: {}
- name: inventory_config
  endpoint:
    path: /api/inventory/config
    method: POST
    data_selector: config
    params: {}
- name: tokens
  endpoint:
    path: /api/tokens
    method: GET
    data_selector: tokens
    params: {}
- name: relayer
  endpoint:
    path: /api/relayers
    method: GET
    data_selector: relayers
    params: {}
- name: crosschain_swap
  endpoint:
    path: /v4/crosschain/swap
    method: POST
    data_selector: data
    params: {}
- name: suggested_fees
  endpoint:
    path: /suggested-fees
    method: GET
- name: swap
  endpoint:
    path: /v4/swap
    method: POST
    data_selector: data
    params: {}
- name: swap
  endpoint:
    path: /v4/swap
    method: POST
    data_selector: data
    params: {}
- name: swap_chains
  endpoint:
    path: /swap/chains
    method: GET
- name: swap_tokens
  endpoint:
    path: /swap/tokens
    method: GET
- name: swap_sources
  endpoint:
    path: /swap/sources
    method: GET
- name: deposit_status
  endpoint:
    path: /deposit/status
    method: GET
- name: deposits
  endpoint:
    path: /deposits
    method: GET
- name: swap_approval
  endpoint:
    path: /swap/approval
    method: GET
- name: swap_approval
  endpoint:
    path: /swap/approval
    method: POST
    data_selector: actions
    params: {}
- name: supported_chains
  endpoint:
    path: /swap/chains
    method: GET
    data_selector: ''
    params: {}
- name: supported_tokens
  endpoint:
    path: /api/swap/tokens
    method: GET
    data_selector: List of supported tokens
    params: {}
- name: supported_sources
  endpoint:
    path: /api/swap/sources
    method: GET
    data_selector: List of supported sources for crosschain swaps for a given chain
    params: {}
- name: deposit_status
  endpoint:
    path: /api/deposit/status
    method: GET
    data_selector: Lifecycle of a transaction
    params: {}
- name: deposits
  endpoint:
    path: /api/deposits
    method: GET
    data_selector: List of deposits for a given depositor
    params: {}
- name: suggested_fees
  endpoint:
    path: /api/suggested-fees
    method: GET
    data_selector: Suggested fees for the transaction and supporting data
    params: {}
- name: transfer_limits
  endpoint:
    path: /limits
    method: GET
    data_selector: Transfer limits
    params:
      inputToken: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2'
      outputToken: '0x4200000000000000000000000000000000000006'
      originChainId: 1
      destinationChainId: 10
- name: available_routes
  endpoint:
    path: /available-routes
    method: GET
    data_selector: List of available routes
    params: {}
notes:
- Users of the Across API are requested to cache results for no longer than 300 seconds.
- Relayer settlement only happens on mainnet.
- Integrators must fill a form to receive their integrator ID.
- Single composable contract call for bridging and swapping tokens.
- Refunds are only issued on mainnet deposits.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Solana transactions have a maximum size limit of 1232 bytes.
- We do not support Solana devnet or testnet at the moment.
- Relayers must specify a valid address on the chain where they request repayment
  to avoid loss of funds.
- Across V2 is migrating in-place to V3 and will support crosschain token swaps and
  a more streamlined contract interface.
- FundsDeposited events (V2 events) will no longer be emitted.
- No partial fills are supported in V3.
- Across is migrating to Native USDC via CCTP for faster, cheaper bridging with no
  extra trust.
- Expect lower fees and better capital efficiency.
- Contract migration coming on January 23rd, 2025 that will cause breaking changes.
- Integrators must use the exclusiveRelayer, exclusivityDeadline and fillDeadline
  parameters returned by the API in their deposit or depositV3 transactions.
- BNB Smart Chain will use 56 as the chain ID for BNB Smart Chain Mainnet.
- BNB Smart Chain testnet is not currently supported.
- Developers should test changes in production environments using small token amounts
  to verify behavior before going live.
- Relayers must ensure configurations recognize chain ID 56 for BNB Smart Chain when
  handling deposits and repayments.
- 'Recipient Address Format: When calling the /suggested-fees API, the recipient parameter
  must be a Solana Public Key (a base-58 encoded string).'
- 'Solana Addresses in Response: Be prepared to handle Solana Pubkey addresses in
  response fields like recipient, inputToken, spokePoolAddress, and others.'
- The endpoint handles the setup required for both bridging and swapping.
- For same-asset bridging, the Swap API will return a 400 error if relayers do not
  have sufficient liquidity.
- Fill out the form to get your integrator ID.
- The endpoint retrieves transaction data and fee information to execute a crosschain
  swap.
- The addLiquidity function requires the amount of ETH as an argument.
- The zero address (0x00...00) signifies the native ETH balance.
- 'Set isNativeTransfer: true for simple value transfer with no contract function
  call.'
- functionSignature must be an empty string and args must be an empty array.
- 'Setting populateCallValueDynamically: true sends the entire ETH balance.'
- If `isNativeTransfer` is `true` and `populateCallValueDynamically` is `true`, the
  `value` is determined dynamically at execution.
- V4 is designed to make bridging easier for everyone.
- Intents can have an exclusivity period whereby a particular relayer address has
  the sole right to perform the fill during that period.
- While using the App SDK in testnet environment, fills will typically take around
  1 minute, significantly slower than mainnet's 2 second fills.
- Perform relatively smaller deposits (~$10) during testing.
- Integrate Now!
- API requires setup of connected app in Across
- Swap API is Live!
- Requires setup of connected app in api
- Running a relayer is permissionless.
- Risk labs provides open source, opinionated implementations of the Relayer.
- Ensure to set up the connected app for OAuth2
- Some API responses may include nested fields that could return null
- Bond amount is nominally 0.45 ABT.
- Ensure the HubPool has permission to pull the bond during the dispute.
- Expired deposits will be refunded approximately 90 minutes after their fillDeadline.
- Ensure that the filesystem permissions for the secret file are properly configured.
- A Redis in-memory DB can drastically speed up the performance of the bot.
- The private key or seed phrase for the relayer can be stored in a dedicated file.
- The RPC provider must support making archive queries.
- The relayer queries a lot of events from each chain's RPC that Across supports.
- Caching of data is subject to the age of the input response from the RPC provider.
- Enable on-chain relayer functionality. This is disabled by default and must be explicitly
  enabled for the relayer to send transactions.
- The relayer requires the ability to make archive queries to function properly.
- Using a Redis server can improve performance by caching RPC requests.
- The list of tokens that can be relayed includes WETH, USDC, DAI, USDT, WBTC, UMA,
  ACX, BAL, SNX & POOL.
- Relayer nomination provides a single relayer with a time-limited period of exclusivity
  to fill a given deposit.
- Relayer exclusivity is being rolled out incrementally in the Across API on select
  routes in order to trial the system.
- Requires setup of connected app in Across
- Refer to the migration guides for more information
- Integration requires a setup of a connected app in Across
- Append a delimiter of `1dc0de` and a unique identifier provided by our team to the
  deposit transaction call data.
- Uses OAuth2 with refresh token — requires setup of connected app in Across.
- Security of the platform is our highest priority.
- All smart contracts and off-chain code are within scope and are publicly verifiable.
- Uses OAuth2 with refresh token
- The API is designed to be run serverlessly (without storing state) and is a wrapper
  on top of the SDK.
- Testnet fills typically take around 1 minute, significantly slower than mainnet's
  2 second fills.
- We only recommend you to use testnet API to ensure your implementation of the API
  is correct and then switch to mainnet API.
errors:
- '400: Invalid input'
- '500: Unexpected error within the API'
- 'INVALID_REQUEST: Check the request parameters.'
- 'UNAUTHORIZED: Ensure the access token is valid.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: recipient is missing or not a valid Solana public key'
- 4XX error when inputToken and outputToken have different decimals
- '400: Bad request due to invalid input parameter.'
- '400: Insufficient liquidity for same-asset bridging.'
- '400: Invalid request'
- '400: Invalid request due to missing required fields'
- 'INVALID_BOND_TOKEN: Verify the bond token and amount.'
- 'INSUFFICIENT_FUNDS: Ensure the EOA has enough ABT or ETH.'
- 'Unfilled: Deposit has not been filled yet.'
- 'RequestedSlowFill: Deposit is marked for slow fill.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '401 Unauthorized: Check OAuth scopes or token expiration'
- 'Low: $250'
- 'Medium: $1,000'
- 'High: $10,000'
- 'Critical: up to $1,000,000'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://docs.across.to
  auth:
    type: oauth2
source_metadata: null
