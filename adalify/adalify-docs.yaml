resources:
- name: length
  endpoint:
    path: /string/length/
    method: GET
    data_selector: result
    params: {}
- name: upper
  endpoint:
    path: /string/upper/
    method: GET
    data_selector: result
    params: {}
- name: lower
  endpoint:
    path: /string/lower/
    method: GET
    data_selector: result
    params: {}
- name: title
  endpoint:
    path: /string/title/
    method: GET
    data_selector: result
    params: {}
- name: titlecase
  endpoint:
    path: /string/titlecase/
    method: GET
    data_selector: result
    params: {}
- name: casefold
  endpoint:
    path: /string/casefold/
    method: GET
    data_selector: result
    params: {}
- name: count
  endpoint:
    path: /string/count/
    method: GET
    data_selector: result
    params: {}
- name: startswith
  endpoint:
    path: /string/startswith/
    method: GET
    data_selector: result
    params: {}
- name: endswith
  endpoint:
    path: /string/endswith/
    method: GET
    data_selector: result
    params: {}
- name: find
  endpoint:
    path: /string/find/
    method: GET
    data_selector: result
    params: {}
- name: index
  endpoint:
    path: /string/index/
    method: GET
    data_selector: result
    params: {}
- name: isalnum
  endpoint:
    path: /string/isalnum/
    method: GET
    data_selector: result
    params: {}
- name: isalpha
  endpoint:
    path: /string/isalpha/
    method: GET
    data_selector: result
    params: {}
- name: isdecimal
  endpoint:
    path: /string/isdecimal/
    method: GET
    data_selector: result
    params: {}
- name: isdigit
  endpoint:
    path: /string/isdigit/
    method: GET
    data_selector: result
    params: {}
- name: isidentifier
  endpoint:
    path: /string/isidentifier/
    method: GET
    data_selector: result
    params: {}
- name: islower
  endpoint:
    path: /string/islower/
    method: GET
    data_selector: result
    params: {}
- name: isupper
  endpoint:
    path: /string/isupper/
    method: GET
    data_selector: result
    params: {}
- name: isnumeric
  endpoint:
    path: /string/isnumeric/
    method: GET
    data_selector: result
    params: {}
- name: isprintable
  endpoint:
    path: /string/isprintable/
    method: GET
    data_selector: result
    params: {}
- name: isspace
  endpoint:
    path: /string/isspace/
    method: GET
    data_selector: result
    params: {}
- name: istitle
  endpoint:
    path: /string/istitle/
    method: GET
    data_selector: result
    params: {}
- name: replace
  endpoint:
    path: /string/replace/
    method: GET
    data_selector: result
    params: {}
- name: removespace
  endpoint:
    path: /string/removespace/
    method: GET
    data_selector: result
    params: {}
- name: rfind
  endpoint:
    path: /string/rfind/
    method: GET
    data_selector: result
    params: {}
- name: rindex
  endpoint:
    path: /string/rindex/
    method: GET
    data_selector: result
    params: {}
- name: translate
  endpoint:
    path: /string/translate/
    method: GET
    data_selector: result
    params: {}
- name: send_sms
  endpoint:
    path: /twilio_api/send_sms/
    method: POST
    params:
      twilio_account_id: Your Twilio account id
      twilio_auth_token: Your Twilio authentication token
      to: The number to send the message to
      from_: The sent from number
      body: The message content
- name: send_sms
  endpoint:
    path: /twilio_api/send_sms/
    method: POST
    params:
      twilio_account_id: Your Twilio account id (required)
      twilio_auth_token: Your Twilio authentication token (required)
      to: The number to send the message to (required)
      from_: The sent from number (required)
      body: The message content
- name: create_user_agent
  endpoint:
    path: /user_agent/create/
    method: POST
    data_selector: data
    params: {}
- name: user_agent
  endpoint:
    path: /user_agent/retrieve/{id}/
    method: GET
    data_selector: data
    params: {}
- name: generate_uploader_url
  endpoint:
    path: /1.0/file-upload-and-storage-api/generate-uploader-url
    method: GET
- name: retrieve_file
  endpoint:
    path: /1.0/file-upload-and-storage-api/retrieve-file
    method: GET
- name: delete_stored_file
  endpoint:
    path: /1.0/file-upload-and-storage-api/delete-stored-file
    method: DELETE
- name: use_your_own_s3_bucket
  endpoint:
    path: /1.0/file-upload-and-storage-api/use-your-own-s3-bucket
    method: GET
- name: generate_uploader_url
  endpoint:
    path: /1.0/file-upload-and-storage-api/generate-uploader-url
    method: GET
- name: retrieve_file
  endpoint:
    path: /1.0/file-upload-and-storage-api/retrieve-file
    method: GET
- name: delete_stored_file
  endpoint:
    path: /1.0/file-upload-and-storage-api/delete-stored-file
    method: DELETE
- name: use_your_own_s3_bucket
  endpoint:
    path: /1.0/file-upload-and-storage-api/use-your-own-s3-bucket
    method: POST
- name: uploader_url
  endpoint:
    path: /files/upload/url_generator/
    method: POST
- name: retrieve_file
  endpoint:
    path: /files/upload/retrieve/{upload_id}/
    method: GET
    data_selector: data
    params: {}
- name: delete_stored_file
  endpoint:
    path: /files/upload/delete/{upload_id}/
    method: DELETE
- name: generate_calendar_links
  endpoint:
    path: /calendar/generate_urls/
    method: POST
    data_selector: data
    params:
      title: ''
      description: ''
      location: ''
      all_day: ''
      start: ''
      end: ''
      duration_minute: ''
      duration_hour: ''
      duration_day: ''
      duration_week: ''
      duration_month: ''
      duration_year: ''
- name: generate_calendar_links
  endpoint:
    path: /calendar/generate_urls/
    method: POST
    data_selector: data
    params:
      title: ''
      description: ''
      location: ''
      all_day: ''
      start: ''
      end: ''
      duration_minute: ''
      duration_hour: ''
      duration_day: ''
      duration_week: ''
      duration_month: ''
      duration_year: ''
- name: length
  endpoint:
    path: /string/length/
    method: GET
    data_selector: result
    params: {}
- name: upper
  endpoint:
    path: /string/upper/
    method: GET
    data_selector: result
    params: {}
- name: lower
  endpoint:
    path: /string/lower/
    method: GET
    data_selector: result
    params: {}
- name: title
  endpoint:
    path: /string/title/
    method: GET
    data_selector: result
    params: {}
- name: titlecase
  endpoint:
    path: /string/titlecase/
    method: GET
    data_selector: result
    params: {}
- name: casefold
  endpoint:
    path: /string/casefold/
    method: GET
    data_selector: result
    params: {}
- name: count
  endpoint:
    path: /string/count/
    method: GET
    data_selector: result
    params: {}
- name: startswith
  endpoint:
    path: /string/startswith/
    method: GET
    data_selector: result
    params: {}
- name: endswith
  endpoint:
    path: /string/endswith/
    method: GET
    data_selector: result
    params: {}
- name: find
  endpoint:
    path: /string/find/
    method: GET
    data_selector: result
    params: {}
- name: index
  endpoint:
    path: /string/index/
    method: GET
    data_selector: result
    params: {}
- name: isalnum
  endpoint:
    path: /string/isalnum/
    method: GET
    data_selector: result
    params: {}
- name: isalpha
  endpoint:
    path: /string/isalpha/
    method: GET
    data_selector: result
    params: {}
- name: isdecimal
  endpoint:
    path: /string/isdecimal/
    method: GET
    data_selector: result
    params: {}
- name: isdigit
  endpoint:
    path: /string/isdigit/
    method: GET
    data_selector: result
    params: {}
- name: isidentifier
  endpoint:
    path: /string/isidentifier/
    method: GET
    data_selector: result
    params: {}
- name: islower
  endpoint:
    path: /string/islower/
    method: GET
    data_selector: result
    params: {}
- name: isupper
  endpoint:
    path: /string/isupper/
    method: GET
    data_selector: result
    params: {}
- name: isnumeric
  endpoint:
    path: /string/isnumeric/
    method: GET
    data_selector: result
    params: {}
- name: isprintable
  endpoint:
    path: /string/isprintable/
    method: GET
    data_selector: result
    params: {}
- name: isspace
  endpoint:
    path: /string/isspace/
    method: GET
    data_selector: result
    params: {}
- name: istitle
  endpoint:
    path: /string/istitle/
    method: GET
    data_selector: result
    params: {}
- name: replace
  endpoint:
    path: /string/replace/
    method: GET
    data_selector: result
    params: {}
- name: removespace
  endpoint:
    path: /string/removespace/
    method: GET
    data_selector: result
    params: {}
- name: rfind
  endpoint:
    path: /string/rfind/
    method: GET
    data_selector: result
    params: {}
- name: rindex
  endpoint:
    path: /string/rindex/
    method: GET
    data_selector: result
    params: {}
- name: translate
  endpoint:
    path: /string/translate/
    method: GET
    data_selector: result
    params: {}
notes:
- This is an unlimited API from Adalify and you are not charged for usage.
- All endpoint URLs end with a / (not including query string parameters)
- All required arguments, if not provided, will return a response with the status
  code 500 and an explanation as to which field is missing.
- No query parameters required
- Response includes success status and user-agent details
- For production apps please make sure to use your own S3 bucket. Using the Adalify
  bucket should be for testing purposes only.
- If you are using your own S3 bucket, as we strongly recommend, you must have a pro
  subscription which is $29 per month.
- Each upload requires generating a new URL.
- Use upload ID returned from the file upload step in the endpoint.
- You must be subscribed to the Adalify Pro plan to use this feature.
- If you fill in the config settings for your own S3 bucket on Adalify, our API will
  automatically use your own bucket.
- ICS link should be used for native iOS calendar.
- ICS link is not widely supported on Android and will also not function correctly
  in previewer / web browsers.
- Yahoo calendar does not always calculate timezone correctly.
- ICS link will only work with an active Adalify subscription.
errors:
- '500: Explanation of missing required arguments'
- Authentication credentials were not provided
- 'Provide Adalify token in the header Authorization: Bearer {APIKEY}'
- Could not find an Adalify' user with provided token
- Only active members allowed
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.adalify.com
source_metadata: null
