resources:
- name: orchestrator_charge
  endpoint:
    path: /orchestration/direct-charges
    method: POST
- name: orchestrator_charge
  endpoint:
    path: /orchestration/direct-charges
    method: POST
- name: orders
  endpoint:
    path: /orchestration/direct-orders
    method: POST
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: data
    params:
      page: 1
      size: 10
- name: create_customer
  endpoint:
    path: /customers
    method: POST
- name: list_customers
  endpoint:
    path: /customers
    method: GET
- name: retrieve_customer
  endpoint:
    path: /customers
    method: GET
- name: update_customer
  endpoint:
    path: /customers
    method: PUT
- name: search_customers
  endpoint:
    path: /customers/search
    method: POST
- name: customer
  endpoint:
    path: /customers/{id}
    method: GET
    data_selector: data
    params: {}
- name: update_customer
  endpoint:
    path: /developersandbox/customers/{id}
    method: PUT
- name: search_customers
  endpoint:
    path: /customers/search
    method: POST
    data_selector: data
    params:
      page: '1'
      size: '10'
- name: payment_methods
  endpoint:
    path: /payment-methods
    method: GET
    data_selector: data
    params:
      page: '1'
      size: '10'
- name: create_payment_method
  endpoint:
    path: /payment-methods
    method: POST
- name: payment_method
  endpoint:
    path: /developersandbox/payment-methods/{id}
    method: GET
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: data
    params:
      page: 1
      size: 10
- name: charges
  endpoint:
    path: /charges
    method: POST
    data_selector: data
    params: {}
- name: charge
  endpoint:
    path: /charges/{id}
    method: GET
- name: update_charge
  endpoint:
    path: /charges/{id}
    method: PUT
- name: transfers
  endpoint:
    path: /direct-transfers
    method: POST
- name: transfers
  endpoint:
    path: /transfers
    method: POST
- name: transfers
  endpoint:
    path: /transfers
    method: POST
- name: transfers
  endpoint:
    path: /transfers
    method: GET
    data_selector: transfers
    params:
      size: '10'
- name: retrieve_transfer
  endpoint:
    path: /transfers/{id}
    method: GET
- name: update_transfer
  endpoint:
    path: /developersandbox/transfers/{id}
    method: PUT
- name: retry_or_duplicate_transfer
  endpoint:
    path: /developersandbox/transfers/{id}/retries
    method: POST
- name: transfer_recipients
  endpoint:
    path: /transfers/recipients
    method: GET
    data_selector: recipients
    params:
      size: '10'
- name: transfer_recipient
  endpoint:
    path: /transfers/recipients
    method: POST
- name: transfer_recipient
  endpoint:
    path: /transfers/recipients/{id}
    method: GET
    data_selector: data
    params: {}
- name: delete_transfer_recipient
  endpoint:
    path: /transfers/recipients/{id}
    method: DELETE
- name: transfer_senders
  endpoint:
    path: /transfers/senders
    method: GET
    data_selector: senders
    params: {}
- name: transfer_sender
  endpoint:
    path: /transfers/senders
    method: POST
- name: transfer_sender
  endpoint:
    path: /transfers/senders/{id}
    method: GET
- name: delete_transfer_sender
  endpoint:
    path: /transfers/senders/{id}
    method: DELETE
- name: banks
  endpoint:
    path: /banks
    method: GET
    data_selector: data
    params:
      country: ''
- name: bank_branches
  endpoint:
    path: /banks/{id}/branches
    method: GET
- name: bank_account_lookup
  endpoint:
    path: /banks/account-resolve
    method: POST
    data_selector: data
- name: mobile_networks
  endpoint:
    path: /mobile-networks
    method: GET
    data_selector: data
    params:
      country: ''
- name: rate_conversion
  endpoint:
    path: /developersandbox/transfers/rates
    method: POST
    data_selector: data
    params: {}
- name: fetch_converted_rate
  endpoint:
    path: /developersandbox/transfers/rates/{id}
    method: GET
- name: wallet_account_lookup
  endpoint:
    path: /wallets/account-resolve
    method: POST
    data_selector: data
    params: {}
- name: wallet_statement
  endpoint:
    path: /wallets/statement
    method: GET
    data_selector: data
    params:
      size: '10'
      currency: AED
- name: settlement
  endpoint:
    path: /settlements
    method: GET
    data_selector: data
    params:
      page: 1
      size: 10
- name: settlement
  endpoint:
    path: /settlements/{id}
    method: GET
    data_selector: data
    params:
      page: 1
      size: 10
- name: chargeback
  endpoint:
    path: /chargebacks
    method: GET
    data_selector: data
    params:
      page: 1
      size: 10
- name: chargeback
  endpoint:
    path: /chargebacks
    method: POST
    data_selector: object
    params: {}
- name: chargeback
  endpoint:
    path: /chargebacks/{id}
    method: GET
    data_selector: data
    params: {}
- name: chargeback
  endpoint:
    path: /chargebacks/{id}
    method: PUT
- name: refunds
  endpoint:
    path: /refunds
    method: GET
    data_selector: data
    params:
      page: 1
      size: 10
- name: refunds
  endpoint:
    path: /refunds
    method: POST
    data_selector: data
    params: {}
- name: refund
  endpoint:
    path: /refunds/{id}
    method: GET
- name: fees
  endpoint:
    path: /fees
    method: GET
    data_selector: data
    params:
      amount: required
      currency: required
      payment_method: required
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: data
    params:
      page: 1
      size: 10
- name: orders
  endpoint:
    path: /orders
    method: POST
- name: orders
  endpoint:
    path: /developersandbox/orders/{id}
    method: GET
- name: orders
  endpoint:
    path: /orders/{id}
    method: PUT
    data_selector: object
    params: {}
- name: virtual_accounts
  endpoint:
    path: /virtual-accounts
    method: GET
    data_selector: data
    params:
      page: '1'
      size: '10'
- name: virtual_account
  endpoint:
    path: /virtual-accounts
    method: POST
- name: virtual_account
  endpoint:
    path: /virtual-accounts/{id}
    method: GET
- name: virtual_account
  endpoint:
    path: /virtual-accounts/{id}
    method: PUT
- name: orchestrator_charge
  endpoint:
    path: /orchestration/direct-charges
    method: POST
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: data
    params:
      page: 1
      size: 10
- name: payment_methods
  endpoint:
    path: /payment-methods
    method: GET
    data_selector: data
    params:
      page: 1
      size: 10
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: data
    params:
      page: 1
      size: 10
- name: direct_transfers
  endpoint:
    path: /direct-transfers
    method: POST
- name: transfer_recipients
  endpoint:
    path: /developersandbox/transfers/recipients
    method: GET
- name: transfer_senders
  endpoint:
    path: /transfers/senders
    method: GET
    params:
      size: '10'
- name: banks
  endpoint:
    path: /banks
    method: GET
    data_selector: data
    params:
      country: ''
- name: mobile_networks
  endpoint:
    path: /mobile-networks
    method: GET
    data_selector: data
    params:
      country: ''
- name: transfer_rates
  endpoint:
    path: /developersandbox/transfers/rates
    method: POST
- name: wallet_account_lookup
  endpoint:
    path: /wallets/account-resolve
    method: POST
- name: settlement
  endpoint:
    path: /settlements
    method: GET
    data_selector: data
    params:
      page: 1
      size: 10
- name: chargebacks
  endpoint:
    path: /chargebacks
    method: GET
    data_selector: data
    params:
      page: 1
      size: 10
- name: refunds
  endpoint:
    path: /refunds
    method: GET
    data_selector: data
    params:
      page: '1'
      size: '10'
- name: fees
  endpoint:
    path: /fees
    method: GET
    data_selector: data
    params:
      amount: number
      currency: string
      payment_method: string
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: data
    params: {}
- name: virtual_accounts
  endpoint:
    path: /virtual-accounts
    method: GET
    data_selector: data
    params:
      page: 1
      size: 10
- name: transfers
  endpoint:
    path: /developersandbox/transfers
    method: POST
- name: charges
  endpoint:
    path: /developersandbox/charges
    method: POST
- name: customers
  endpoint:
    path: /developersandbox/customers
    method: POST
    data_selector: data
    params: {}
- name: payment_methods
  endpoint:
    path: /developersandbox/payment-methods
    method: POST
    data_selector: data
    params: {}
- name: charges
  endpoint:
    path: /developersandbox/charges
    method: POST
    data_selector: data
    params: {}
- name: verify_transaction
  endpoint:
    path: /developersandbox/charges/{reference}
    method: GET
    data_selector: data
    params: {}
- name: orchestrator
  endpoint:
    path: /developersandbox/orchestration/direct-charges
    method: POST
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /developersandbox/customers
    method: POST
    data_selector: data
    params: {}
- name: payment_methods
  endpoint:
    path: /developersandbox/payment-methods
    method: POST
    data_selector: data
    params: {}
- name: charges
  endpoint:
    path: /developersandbox/charges
    method: POST
    data_selector: data
    params: {}
- name: charges
  endpoint:
    path: /charges
    method: POST
    data_selector: data
    params: {}
- name: payment-methods
  endpoint:
    path: /payment-methods
    method: POST
    data_selector: data
    params: {}
- name: retrieve-charge
  endpoint:
    path: /charges/id
    method: GET
    data_selector: data
    params: {}
- name: create_customer
  endpoint:
    path: /developersandbox/customers
    method: POST
    data_selector: data
    params: {}
- name: create_payment_method
  endpoint:
    path: /developersandbox/payment-methods
    method: POST
    data_selector: data
    params: {}
- name: create_charge
  endpoint:
    path: /developersandbox/charges
    method: POST
    data_selector: data
    params: {}
- name: retrieve_charge
  endpoint:
    path: /developersandbox/charges/{{ID}}
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /developersandbox/customers
    method: POST
    data_selector: data
    params: {}
- name: virtual_accounts
  endpoint:
    path: /developersandbox/virtual-accounts
    method: POST
    data_selector: data
    params: {}
- name: charges
  endpoint:
    path: /developersandbox/charges
    method: GET
    data_selector: data
    params: {}
- name: virtual_accounts
  endpoint:
    path: /developersandbox/virtual-accounts
    method: POST
    data_selector: data
- name: create_customer
  endpoint:
    path: /developersandbox/customers
    method: POST
    data_selector: data
    params: {}
- name: get_banks
  endpoint:
    path: /developersandbox/banks
    method: GET
    data_selector: data
    params:
      country: NG
- name: create_payment_method
  endpoint:
    path: /developersandbox/payment-methods
    method: POST
    data_selector: data
    params: {}
- name: create_charge
  endpoint:
    path: /developersandbox/charges
    method: POST
    data_selector: data
    params: {}
- name: retrieve_charge
  endpoint:
    path: /developersandbox/charges/id
    method: GET
    data_selector: data
    params: {}
- name: create_customer
  endpoint:
    path: /developersandbox/customers
    method: POST
    data_selector: data
    params: {}
- name: create_payment_method
  endpoint:
    path: /developersandbox/payment-methods
    method: POST
    data_selector: data
    params: {}
- name: create_charge
  endpoint:
    path: /developersandbox/charges
    method: POST
    data_selector: data
    params: {}
- name: retrieve_charge
  endpoint:
    path: /developersandbox/charges/id
    method: GET
    data_selector: data
    params: {}
- name: create_customer
  endpoint:
    path: /developersandbox/customers
    method: POST
    data_selector: data
    params: {}
- name: create_payment_method
  endpoint:
    path: /developersandbox/payment-methods
    method: POST
    data_selector: data
    params: {}
- name: create_charge
  endpoint:
    path: /developersandbox/charges
    method: POST
    data_selector: data
    params: {}
- name: retrieve_charge
  endpoint:
    path: /developersandbox/charges/id
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /developersandbox/customers
    method: POST
    data_selector: data
    params: {}
- name: payment_methods
  endpoint:
    path: /developersandbox/payment-methods
    method: POST
    data_selector: data
    params: {}
- name: charges
  endpoint:
    path: /developersandbox/charges
    method: POST
    data_selector: data
    params: {}
- name: retrieve_charge
  endpoint:
    path: /developersandbox/charges/id
    method: GET
    data_selector: data
    params: {}
- name: account_resolve
  endpoint:
    path: /developersandbox/banks/account-resolve
    method: POST
    data_selector: data
    params: {}
- name: direct_transfers
  endpoint:
    path: /developersandbox/direct-transfers
    method: POST
    data_selector: data
    params: {}
- name: transfer_status
  endpoint:
    path: /reference/transfer_get
    method: GET
    data_selector: data
    params: {}
- name: direct_transfers
  endpoint:
    path: /developersandbox/direct-transfers
    method: POST
    data_selector: data
- name: retrieve_transfer
  endpoint:
    path: /developersandbox/transfers/{REPLACE_WITH_TRANSFER_ID}
    method: GET
    data_selector: data
- name: direct_transfers
  endpoint:
    path: /developersandbox/direct-transfers
    method: POST
    data_selector: data
    params: {}
- name: create_transfer_recipient
  endpoint:
    path: /developersandbox/transfers/recipients
    method: POST
- name: create_transfer_sender
  endpoint:
    path: /developersandbox/transfers/senders
    method: POST
- name: create_transfer
  endpoint:
    path: /developersandbox/transfers
    method: POST
- name: transfers
  endpoint:
    path: /transfers
    method: POST
    data_selector: data
- name: retrieve_transfer
  endpoint:
    path: /transfers/{REPLACE_WITH_TRANSFER_ID}
    method: GET
    data_selector: data
- name: direct_transfers
  endpoint:
    path: /direct-transfers
    method: POST
    data_selector: null
    params: {}
- name: transfer
  endpoint:
    path: /developersandbox/transfers
    method: POST
    data_selector: data
    params: {}
- name: retrieve_transfer
  endpoint:
    path: /developersandbox/transfers/{id}
    method: GET
    data_selector: data
    params: {}
- name: direct_transfers
  endpoint:
    path: /developersandbox/direct-transfers
    method: POST
    data_selector: null
    params: {}
- name: transfer
  endpoint:
    path: /developersandbox/transfers/id
    method: GET
    data_selector: data
    params: {}
- name: create_transfer
  endpoint:
    path: /developersandbox/direct-transfers
    method: POST
    data_selector: data
    params: {}
- name: retrieve_transfer
  endpoint:
    path: /developersandbox/transfers/id
    method: GET
    data_selector: data
    params: {}
- name: settlement
  endpoint:
    path: /developersandbox/settlements
    method: GET
    data_selector: data
    params:
      page: 1
      size: 10
- name: refund
  endpoint:
    path: /refunds
    method: POST
    data_selector: data
    params: {}
- name: fetch_refunds
  endpoint:
    path: /refunds
    method: GET
    data_selector: data
    params: {}
- name: chargebacks
  endpoint:
    path: /chargebacks
    method: GET
    data_selector: data
- name: update_chargeback
  endpoint:
    path: /chargebacks/{id}
    method: PUT
    data_selector: data
- name: create_chargeback
  endpoint:
    path: /chargebacks
    method: POST
    data_selector: data
- name: banks
  endpoint:
    path: /developersandbox/banks
    method: GET
    data_selector: data
- name: account_resolve
  endpoint:
    path: /developersandbox/banks/account-resolve
    method: POST
    data_selector: data
- name: direct_transfers
  endpoint:
    path: /developersandbox/direct-transfers
    method: POST
    data_selector: data
- name: rates
  endpoint:
    path: /transfers/rates
    method: POST
    data_selector: data
    params: {}
- name: banks
  endpoint:
    path: /banks
    method: GET
    data_selector: data
    params:
      country: NG
- name: account_resolve
  endpoint:
    path: /banks/account-resolve
    method: POST
    data_selector: data
    params: {}
- name: direct_transfers
  endpoint:
    path: /direct-transfers
    method: POST
    data_selector: data
    params: {}
- name: transfers
  endpoint:
    path: /transfers
    method: POST
- name: charges
  endpoint:
    path: /charges
    method: POST
notes:
- Each X-Idempotency-Key must be unique per request.
- Automated bulk disbursements to eliminate manual payment processes.
- Process payments instantly to minimize delays and improve customer satisfaction.
- Tokens expire periodically to help reduce security risks. Each token is valid for
  10 minutes.
- 'Data Retention on Sandbox: To keep our integration test environment fast and efficient,
  we''ll archive your test data after 30 days.'
- In the sandbox environment, all flows are mocked; no actual transaction processing
  occurs when you make requests.
- Webhook requests time out after 60 seconds.
- Enable webhook retries on your dashboard.
- Include an idempotency key in the request header (X-Idempotency-Key) for all POST
  endpoints to prevent duplicate transactions.
- Never hardcode API credentials in your codebase.
- Only initiate token-protected API calls from your backend, not from the client (browser
  or mobile app).
- Store credentials in environment variables or use a secrets manager.
- 'Default Transfer Testing: If you do not pass the X-Scenario-Key header, the transfer
  remains in a pending state and no webhook is sent for the test.'
- If you send unencrypted or improperly encrypted card details in your request, we'll
  return a 422 error with a failed encryption error message.
- Specify the API version in your request header using X-API-Version. If you don’t
  provide a version, we default to the latest version available.
- 'Our APIs follow semantic versioning that takes this format: MAJOR.MINOR.PATCH.'
- A webhook URL is required to receive payment status updates.
- The orchestrator simplifies integration.
- Tokenization allows for secure handling of recurring payments without storing card
  information.
- The Credential on File (COF) feature enables merchants to securely save a reference
  to their customers' card details.
- The charge currency must match the currency_code used when creating the payment
  method.
- Uses Bearer token for authorization — requires setup of access token
- Static accounts return an expiry date set to 1000 years from their creation date.
- Dynamic accounts must define an expiry when creating.
- Use the X-Scenario-Key header to simulate transaction outcomes during testing.
- USSD payments are only available for NGN (Nigerian Naira) collections.
- Merchants must comply with Google Pay APIs Acceptable Use Policy.
- Webhook notifications are sent with transaction status after payment completion.
- v4 APIs are live! Next-gen performance and features are here.
- Apple Pay is only available to customers with active Apple Pay wallets.
- You must have webhooks enabled on your Flutterwave dashboard.
- This payment method is only available for NGN (Nigerian Naira) transactions.
- OPay customers must log into their wallets to authorize payments.
- To effectively use through these instructions, You'll need API credentials.
- Webhook notifications are recommended for real-time transfer status updates.
- To test successful transfers, send a request without extra headers.
- Requires setup of API credentials (client ID and client secret).
- Webhook URL needed for payment status updates.
- The data.status field will always return NEW upon initiating a transfer.
- Use webhooks for real-time transfer status updates.
- To complete a bank transfer, you may need to provide both the bank code and bank
  branch code (if required for the destination country).
- The msisdn field must contain the recipient’s mobile number starting with the country
  code.
- The data.status field in the response will always return NEW upon initiating a transfer.
- Webhook is recommended for receiving automatic transfer status updates.
- Only transactions made in live/production mode are eligible for settlement.
- Card refunds are completed between 3-15 days after the refund is initiated.
- Refunds to mobile money wallets take 3-5 days, while refunds to bank accounts are
  completed in 24 hours.
- The create chargeback endpoint is only available in Sandbox. Do not use in production.
- Fetching the live exchange rate is optional. Flutterwave automatically uses real-time
  rates when you start a transfer.
errors:
- '401 Unauthorized: If the token is missing or invalid.'
- '400 Bad request: The request cannot be accepted and is malformed and/or missing
  required parameters.'
- '401 Unauthorised request: Invalid API key provided'
- '403 Forbidden: API key doesn''t have permission to access this resource'
- '409 Conflict: The request conflicts with another request'
- '401 Unauthorized: Invalid API key provided'
- '401 Unauthorized: Invalid API key provided.'
- '403 Forbidden: API key doesn''t have permission to access this resource.'
- '409 Conflict: The request conflicts with another request.'
- '401 Unauthorised request: Invalid API key provided.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '400 Bad request: Invalid Currency'
- '400 Bad request: Insufficient balance'
- 'CLIENT_ENCRYPTION_ERROR: Unable to decrypt encrypted fields provided'
- '10400: REQUEST_NOT_VALID: The request was rejected due to invalid parameters or
  missing data.'
- '10401: UNAUTHORIZATION: The request requires authentication or has invalid credentials.'
- '10403: FORBIDDEN: The client does not have permission to access the resource.'
- '10404: RESOURCE_NOT_FOUND: The requested resource could not be found on the server.'
- '10409: RESOURCE_CONFLICT: A conflict occurred due to duplicate or conflicting data.'
- '10422: UNPROCESSABLE: The request was well-formed but contained invalid data.'
- '10500: INTERNAL_SERVER_ERROR: An unexpected server error occurred while processing
  the request.'
- '401 Unauthorized: Recheck API credentials'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check access token.'
- '400 Bad Request: Validate request parameters.'
- 'REQUEST_NOT_VALID: Currency not supported for GH Mobile Money.'
- '401 Unauthorized: Recheck access token'
- 'REQUEST_NOT_VALID: Check the request format and required fields.'
- '401 Unauthorized: Recheck OAuth token or scopes.'
- '404 Not Found: Ensure the endpoint URL is correct.'
- '400 Bad Request: Check the request body for missing or invalid fields.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'REFERENCE_ALREADY_EXISTS: Transfer with reference already exists'
- '400 Bad Request: Amount must be at least 100NGN.'
- 'TRANSFER_NOT_FOUND: Transfer not found'
- '301404: Transfer not found'
- Error during OAuth token request
- Failed to retrieve access token
auth_info:
  mentioned_objects:
  - YOUR_ACCESS_TOKEN
  - YOUR_UNIQUE_TRACE_ID
  - YOUR_UNIQUE_INDEMPOTENCY_KEY
client:
  base_url: https://api.flutterwave.cloud/developersandbox
  headers:
    Accept: application/json
    content-type: application/json
source_metadata: null
