resources:
- name: customers
  endpoint:
    path: /v1/customers
    method: POST
    data_selector: ''
    params: {}
- name: checkout
  endpoint:
    path: /checkout.js
    method: GET
    data_selector: transaction
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: POST
    data_selector: transaction
    params: {}
- name: sub_account_invitations
  endpoint:
    path: /v1/auth/sub_account_invitations
    method: POST
    data_selector: invitation
    params: {}
- name: customer
  endpoint:
    path: /customers
    method: POST
    data_selector: customer
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: POST
    data_selector: transaction
    params: {}
- name: customer
  endpoint:
    method: POST
- name: transaction
  endpoint:
    method: POST
- name: checkout_button
  endpoint:
    path: /checkout/button
    method: POST
    data_selector: transaction
    params: {}
- name: checkout_container
  endpoint:
    path: /checkout/container
    method: POST
    data_selector: transaction
    params: {}
- name: checkout
  endpoint:
    path: /checkout.js
    method: GET
    data_selector: checkout
- name: checkout
  endpoint:
    path: /checkout.js
    method: GET
    data_selector: ''
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: POST
    data_selector: transactions
    params: {}
- name: sub_account_invitations
  endpoint:
    path: /v1/auth/sub_account_invitations
    method: POST
    data_selector: sub_account_invitations
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: POST
    data_selector: null
    params: {}
- name: sub_account_invitations
  endpoint:
    path: /v1/auth/sub_account_invitations
    method: POST
    data_selector: null
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: POST
    data_selector: data
- name: transaction_details
  endpoint:
    path: /v1/transactions/ID
    method: GET
    data_selector: data
- name: transactions
  endpoint:
    path: /v1/transactions
    method: POST
    data_selector: transactions
    params: {}
- name: transaction_details
  endpoint:
    path: /v1/transactions/ID
    method: GET
    data_selector: transaction
    params: {}
- name: payouts
  endpoint:
    path: /v1/payouts
    method: POST
    data_selector: null
    params: {}
- name: payout_details
  endpoint:
    path: /v1/payouts/ID
    method: GET
    data_selector: null
    params: {}
- name: payouts
  endpoint:
    path: /v1/payouts
    method: POST
    data_selector: payouts
- name: payout_details
  endpoint:
    path: /v1/payouts/ID
    method: GET
    data_selector: payout_details
- name: merchant_reference
  endpoint:
    path: /v1/payouts/merchant/PAY-20250315-002
    method: GET
    data_selector: merchant_reference
- name: transactions
  endpoint:
    path: /transactions
    method: POST
    data_selector: transaction
    params: {}
- name: get_transaction
  endpoint:
    path: /transactions/{id}
    method: GET
    data_selector: transaction
    params: {}
notes:
- The API endpoint may vary depending on the environment. Use https://api.fedapay.com/v1/customers
  for the live environment.
- La sécurité est une priorité chez FedaPay. C’est pourquoi nous proposons l’authentification
  à double facteur (2FA) pour protéger votre compte et vos transactions.
- Authorization of the domain is necessary for Checkout JS integration.
- Requires setup of API key for access.
- Specify whether you want to run your query in test or live mode
- Ensure you use the appropriate public key based on your environment
- Private Key must be kept strictly confidential and is used to authenticate sensitive
  actions.
- Public Key is used for less critical actions.
- Security is a priority at FedaPay, which is why we offer two-factor authentication
  (2FA) to protect your account and transactions.
- Public key is required for integration.
- Domain authorization is required for using the FedaPay Checkout solution.
- The total distributed amount must be less than the transaction amount minus FedaPay
  commissions; otherwise, the transaction will fail.
- 'Each FedaPay account has two API keys: Test Key and Live Key.'
- Test Keys should be used in development environments to simulate transactions without
  financial impact.
- Secret Keys must remain confidential and should never be exposed in public environments.
- The customer parameter is not mandatory but when used, the email must be unique.
- Ensure to test integrations in the sandbox environment before going live.
- Make sure to thoroughly test your integrations in the sandbox environment before
  deploying them to production.
- The customer parameter is not mandatory but must be unique if provided.
- The customer parameter is not mandatory but must have a unique email address.
- Use a structured format for merchant_reference, e.g., PAY-YYYYMMDD-XXX.
- Webhook endpoints must use an HTTPS URL with a valid SSL certificate.
- Only TLS v1.2 and v1.3 versions are supported by FedaPay.
- Webhooks are automatic notifications that FedaPay sends to your application or website
  when important events occur on your account.
- Each webhook is signed by FedaPay via the X-FEDAPAY-SIGNATURE header.
errors:
- 'Invalid API key: Check that your API key is correct.'
- 'Transaction failed: Ensure the total amount does not exceed the limits.'
- 'Unauthorized access: Ensure your domain is authorized.'
- '401 Unauthorized: Recheck API key or authentication method'
- '400 Bad Request: Ensure all required fields are filled correctly'
- '401 Unauthorized: Recheck API key or permissions'
- '401 Unauthorized: Recheck API key or token.'
- '400 Bad Request: Check required parameters are included.'
- '401 Unauthorized: Recheck API key or token expiration'
- '400 Bad Request: Check the request format and required fields.'
- '401 Unauthorized: Ensure the API key is valid.'
- '400 Bad Request: Check that your parameters are properly formatted and comply with
  API specifications.'
- '401 Unauthorized: Make sure you’re using the correct API key (test or live) and
  that it’s valid.'
- '404 Not Found: Check that the URL you are using is correct and that the resource
  exists.'
- '500 Internal Server Error: These errors originate from the FedaPay API. If they
  persist, please contact support.'
- 201 Transaction created successfully
- 400 Bad Request
- 401 Unauthorized
- 422 Unprocessable Entity
auth_info:
  mentioned_objects: []
client:
  base_url: https://sandbox-api.fedapay.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
source_metadata: null
