resources:
- name: contacts
  endpoint:
    path: /Contacts
    method: GET
- name: sub_blocks
  endpoint:
    path: /SubBlocks
    method: GET
- name: stock_items
  endpoint:
    path: /StockItems
    method: GET
- name: vessels
  endpoint:
    path: /Vessels
    method: GET
- name: batches
  endpoint:
    path: /api/v1/batches
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /sales/orders
    method: GET
    data_selector: records
- name: vessel
  endpoint:
    path: /vessels
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /Contacts
    method: GET
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /api/sales_orders
    method: GET
    data_selector: records
- name: stock_items
  endpoint:
    path: /count/stock-items
    method: GET
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: records
    params: {}
- name: sales_orders
  endpoint:
    path: /api/sales_orders
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
- name: sales_orders
  endpoint:
    path: /sales/orders
    method: GET
- name: contacts
  endpoint:
    path: /Contacts
    method: GET
- name: stock_items
  endpoint:
    path: /StockItems
    method: GET
- name: vessels
  endpoint:
    path: /Vessels
    method: GET
- name: operation_types
  endpoint:
    path: /WineryOperationTypes
    method: GET
- name: bulk_operations
  endpoint:
    path: /WineryOperations
    method: GET
- name: contacts
  endpoint:
    path: /Contacts
    method: GET
- name: stock_items
  endpoint:
    path: /StockItems
    method: GET
- name: vessels
  endpoint:
    path: /Vessels
    method: GET
- name: operation_types
  endpoint:
    path: /WineryOperationTypes
    method: GET
- name: bulk_operations
  endpoint:
    path: /WineryOperations
    method: GET
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /api/sales/orders
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /Contacts
    method: GET
- name: stock_items
  endpoint:
    path: /StockItems
    method: GET
- name: prices
  endpoint:
    path: /StockItemPrices
    method: GET
- name: sales_orders
  endpoint:
    path: /SalesOrders
    method: GET
- name: purchase_orders
  endpoint:
    path: /PurchaseOrders
    method: GET
- name: contacts
  endpoint:
    path: /Contacts
    method: GET
- name: stock_items
  endpoint:
    path: /StockItems
    method: GET
- name: vessels
  endpoint:
    path: /Vessels
    method: GET
- name: operation_types
  endpoint:
    path: /WineryOperationTypes
    method: GET
- name: bulk_operations
  endpoint:
    path: /WineryOperations
    method: GET
- name: contacts
  endpoint:
    path: /Contacts
    method: GET
- name: stock_items
  endpoint:
    path: /StockItems
    method: GET
- name: prices
  endpoint:
    path: /StockItemPrices
    method: GET
- name: sales_orders
  endpoint:
    path: /SalesOrders
    method: GET
- name: purchase_orders
  endpoint:
    path: /PurchaseOrders
    method: GET
- name: sales_orders
  endpoint:
    path: /sales/orders
    method: GET
    data_selector: records
    params: {}
- name: inventory
  endpoint:
    path: /inventory
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: SalesOrders
  endpoint:
    path: /sales/orders
    method: GET
    data_selector: records
- name: Inventory
  endpoint:
    path: /inventory
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
- name: Stock Items
  endpoint:
    path: /vinsight/stock-items
    method: POST
    data_selector: items
- name: Contacts
  endpoint:
    path: /vinsight/contacts
    method: POST
    data_selector: contacts
- name: Sales Orders
  endpoint:
    path: /vinsight/sales-orders
    method: POST
    data_selector: sales
- name: Purchase Orders
  endpoint:
    path: /vinsight/purchase-orders
    method: POST
    data_selector: purchases
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params: {}
- name: sales_orders
  endpoint:
    path: /sales_orders
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: inventory_items
  endpoint:
    path: /import/inventory_items
    method: POST
- name: customers_and_suppliers
  endpoint:
    path: /import/customers_and_suppliers
    method: POST
- name: customer_invoices
  endpoint:
    path: /import/customer_invoices
    method: POST
- name: supplier_invoices
  endpoint:
    path: /import/supplier_invoices
    method: POST
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: sales_orders
  endpoint:
    path: /api/v1/sales_orders
    method: GET
    data_selector: data
    params: {}
- name: Stock Items
  endpoint:
    path: /items
    method: POST
    data_selector: items
    params: {}
- name: Contacts
  endpoint:
    path: /contacts
    method: POST
    data_selector: contacts
    params: {}
- name: Sales Orders
  endpoint:
    path: /sales_orders
    method: POST
    data_selector: sales_orders
    params: {}
- name: Purchase Orders
  endpoint:
    path: /purchase_orders
    method: POST
    data_selector: purchase_orders
    params: {}
- name: vessels
  endpoint:
    path: /vessels/import
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: vessels
  endpoint:
    path: /api/vessels
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /api/sales_orders
    method: GET
    data_selector: records
- name: vessel_blends
  endpoint:
    path: /importing-vessels
    method: GET
    data_selector: data
    params: {}
- name: vessels
  endpoint:
    path: /vessels
    method: GET
    data_selector: items
- name: vessels
  endpoint:
    path: /Vessels
    method: GET
- name: contacts
  endpoint:
    path: /contacts
    method: POST
- name: stock_items
  endpoint:
    path: /stock_items
    method: POST
- name: stock_locations
  endpoint:
    path: /stock_locations
    method: POST
- name: varieties
  endpoint:
    path: /varieties
    method: POST
- name: wine_batches
  endpoint:
    path: /wine_batches
    method: POST
- name: wine_designations
  endpoint:
    path: /wine_designations
    method: POST
- name: vessels
  endpoint:
    path: /api/vessels
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: vessels
  endpoint:
    path: /vessels
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
- name: stock_items
  endpoint:
    path: /stock_items
    method: GET
- name: stock_locations
  endpoint:
    path: /stock_locations
    method: GET
- name: varieties
  endpoint:
    path: /varieties
    method: GET
- name: wine_batches
  endpoint:
    path: /wine_batches
    method: GET
- name: wine_designations
  endpoint:
    path: /wine_designations
    method: GET
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /sales/orders
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: regions
  endpoint:
    path: /Regions
    method: GET
    data_selector: regions
- name: properties
  endpoint:
    path: /Vineyards
    method: GET
    data_selector: properties
- name: Sub Block
  endpoint:
    path: /SubBlocks
    method: POST
    data_selector: SubBlock
    params: {}
- name: email_templates
  endpoint:
    path: /api/email/templates
    method: GET
    data_selector: templates
    params: {}
- name: signatures
  endpoint:
    path: /api/email/signatures
    method: GET
    data_selector: signatures
    params: {}
- name: grower_operations
  endpoint:
    path: /GrowerOperations
    method: GET
    data_selector: operations
    params: {}
- name: spray_diary
  endpoint:
    path: /SprayDiary
    method: GET
    data_selector: sprayApplications
    params: {}
- name: regions
  endpoint:
    path: /Regions
    method: GET
- name: properties
  endpoint:
    path: /Vineyards
    method: GET
- name: contacts
  endpoint:
    path: /Contacts
    method: GET
    data_selector: records
- name: vineyards
  endpoint:
    path: /Vineyards
    method: GET
    data_selector: records
- name: spray_operations
  endpoint:
    path: /SprayOperations
    method: GET
    data_selector: records
- name: Sub Blocks
  endpoint:
    path: /SubBlocks
    method: GET
- name: Grower Operations
  endpoint:
    path: /GrowerOperations
    method: GET
    data_selector: operations
    params: {}
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: records
- name: Contacts
  endpoint:
    path: /Contacts
    method: GET
- name: Vineyards
  endpoint:
    path: /Vineyards
    method: GET
- name: harvest_bookings
  endpoint:
    path: /HarvestBookings
    method: GET
    data_selector: bookings
    params:
      interval: +/- 3 days
- name: spray_diary
  endpoint:
    path: /api/v1/spray_diary
    method: GET
    data_selector: records
    params: {}
- name: harvest_booking
  endpoint:
    path: /HarvestBookings
    method: GET
- name: draft_crush_operation
  endpoint:
    path: /api/draft_crush_operations
    method: POST
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
- name: sales_orders
  endpoint:
    path: /api/v1/sales/orders
    method: GET
    data_selector: data
- name: sub_blocks_analyses
  endpoint:
    path: /api/v1/sub_blocks/analyses
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: results
- name: Harvest History Report
  endpoint:
    path: /ReportSelectors/HarvestHistory
    method: GET
    data_selector: reportData
- name: Harvest to Composition Report
  endpoint:
    path: /ReportSelectors/SourceToComposition
    method: GET
    data_selector: reportData
- name: Bulk Receival Composition Report
  endpoint:
    path: /ReportSelectors/BulkComposition
    method: GET
    data_selector: reportData
- name: Bulk Receival to Composition Report
  endpoint:
    path: /ReportSelectors/SourceToComposition
    method: GET
    data_selector: reportData
- name: Bulk Receival Summary Report
  endpoint:
    path: /ReportSelectors/BulkReceivalSummary
    method: GET
    data_selector: reportData
- name: Vessel Contents
  endpoint:
    path: /ReportSelectors/Vessels
    method: GET
    data_selector: reportData
- name: Vessel Composition
  endpoint:
    path: /ReportSelectors/VesselComposition
    method: GET
    data_selector: reportData
- name: Operations Dashboard
  endpoint:
    path: /Dashboards/Winery
    method: GET
    data_selector: dashboardData
- name: Winery Operation Report
  endpoint:
    path: /ReportSelectors/WineryOperationsHistory
    method: GET
    data_selector: reportData
- name: Bulk Despatch Composition Report
  endpoint:
    path: /ReportSelectors/WineryOperationsHistory
    method: GET
    data_selector: reportData
- name: Harvest History
  endpoint:
    path: /ReportSelectors/HarvestHistory
    method: GET
- name: Harvest to Composition
  endpoint:
    path: /ReportSelectors/SourceToComposition
    method: GET
- name: Bulk Receival Composition
  endpoint:
    path: /ReportSelectors/BulkComposition
    method: GET
- name: Bulk Receival to Composition
  endpoint:
    path: /ReportSelectors/SourceToComposition
    method: GET
- name: Bulk Receival Summary
  endpoint:
    path: /ReportSelectors/BulkReceivalSummary
    method: GET
- name: Vessel Contents
  endpoint:
    path: /ReportSelectors/Vessels
    method: GET
- name: Vessel Composition
  endpoint:
    path: /ReportSelectors/VesselComposition
    method: GET
- name: Operations Dashboard
  endpoint:
    path: /Dashboards/Winery
    method: GET
- name: Winery Operation Report
  endpoint:
    path: /ReportSelectors/WineryOperationsHistory
    method: GET
- name: Bulk Despatch Composition
  endpoint:
    path: /ReportSelectors/WineryOperationsHistory
    method: GET
- name: vessels
  endpoint:
    path: /Vessels
    method: GET
    data_selector: vessels
    params: {}
- name: vessels
  endpoint:
    path: /importing-vessels
    method: GET
- name: vessels
  endpoint:
    path: /vessels
    method: GET
    data_selector: vessels
    params: {}
- name: batches
  endpoint:
    path: /WineBatches
    method: GET
    data_selector: batches
- name: vessels
  endpoint:
    path: /getting-going/settings-2/vessels
    method: GET
- name: batches
  endpoint:
    path: /WineBatches
    method: GET
    data_selector: batches
    params: {}
- name: batches
  endpoint:
    path: /api/v1/batches
    method: GET
    data_selector: records
    params: {}
- name: DipCharts
  endpoint:
    path: /DipCharts
    method: GET
- name: DipChartEntries
  endpoint:
    path: /DipChartEntries
    method: GET
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params: {}
- name: sales_orders
  endpoint:
    path: /sales/orders
    method: GET
    data_selector: records
    params: {}
- name: harvest_entry
  endpoint:
    path: /HarvestEntries
    method: GET
    data_selector: harvests
    params: {}
- name: wine_batch
  endpoint:
    path: /WineBatches
    method: GET
    data_selector: records
    params: {}
- name: lab_analyses
  endpoint:
    path: /LabAnalyses
    method: GET
    data_selector: records
    params: {}
- name: bulk_receival
  endpoint:
    path: /BulkReceivals
    method: GET
    data_selector: receivals
- name: wine_batches
  endpoint:
    path: /api/wine_batches
    method: GET
    data_selector: records
    params: {}
- name: vessels
  endpoint:
    path: /api/vessels
    method: GET
    data_selector: records
    params: {}
- name: bulk_operations
  endpoint:
    path: /WineryOperations
    method: GET
- name: harvest_entry
  endpoint:
    path: /HarvestEntries
    method: GET
    data_selector: records
- name: bulk_operations
  endpoint:
    path: /bulk-operations
    method: GET
- name: bulk_receival
  endpoint:
    path: /BulkReceivals
    method: GET
    data_selector: receivals
- name: bulk_receival
  endpoint:
    path: /services/data/vXX.X/sobjects/BulkReceival
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: bulk_operations
  endpoint:
    path: /WineryOperations
    method: GET
    data_selector: operations
    params: {}
- name: transfers
  endpoint:
    path: /bulk-operations/transfers
    method: GET
- name: adjustments
  endpoint:
    path: /bulk-operations/adjustments
    method: GET
- name: additions
  endpoint:
    path: /bulk-operations/additions
    method: GET
- name: vessels
  endpoint:
    path: /bulk/vessels
    method: POST
- name: additives
  endpoint:
    path: /bulk/additives
    method: POST
- name: transfers
  endpoint:
    path: /bulk/operations/transfers
    method: POST
    data_selector: data
    params: {}
- name: adjustments
  endpoint:
    path: /bulk/operations/adjustments
    method: POST
    data_selector: data
    params: {}
- name: additions
  endpoint:
    path: /bulk/operations/additions
    method: POST
    data_selector: data
    params: {}
- name: vessel
  endpoint:
    path: /services/data/vXX.X/sobjects/Vessel
    method: GET
    data_selector: records
    params: {}
- name: additive
  endpoint:
    path: /services/data/vXX.X/sobjects/Additive
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /sales/orders
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /sales_orders
    method: GET
    data_selector: records
- name: bulk_despatch
  endpoint:
    path: /BulkDespatches
    method: GET
- name: bulk_operations
  endpoint:
    path: /bulk-operations
    method: GET
    data_selector: records
    params: {}
- name: pdf_printout
  endpoint:
    path: /bulk-operation-pdf-printout
    method: GET
    data_selector: records
    params: {}
- name: bulk_despatch
  endpoint:
    path: /BulkDespatches
    method: GET
- name: bulk_despatch
  endpoint:
    path: /bulk-despatch
    method: GET
    data_selector: records
- name: packaging_operations
  endpoint:
    path: /PackagingOperations
    method: GET
    data_selector: operations
- name: shipping_bulk_under_bond
  endpoint:
    path: /shipping/bulk/under_bond
    method: GET
    data_selector: records
    params: {}
- name: packaging_operations
  endpoint:
    path: /packaging-operations
    method: GET
    data_selector: records
    params: {}
- name: bulk_despatch
  endpoint:
    path: /bulk/despatch
    method: POST
    data_selector: records
    params: {}
- name: stock_item_movements_schedule
  endpoint:
    path: /winemaking/stock-item-movements-schedule
    method: GET
- name: Packaging Operations
  endpoint:
    path: /PackagingOperations
    method: GET
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /api/v1/sales_orders
    method: GET
    data_selector: records
- name: vessels
  endpoint:
    path: /Vessels
    method: GET
- name: batches
  endpoint:
    path: /WineBatches
    method: GET
    data_selector: batches
    params: {}
- name: vessels
  endpoint:
    path: /Vessels
    method: GET
- name: stock_items
  endpoint:
    path: /stock-items
    method: GET
    data_selector: items
    params: {}
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: records
    params: {}
- name: sales_orders
  endpoint:
    path: /api/sales_orders
    method: GET
    data_selector: records
    params: {}
- name: batches
  endpoint:
    path: /batches
    method: GET
    data_selector: batches
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /sales/orders
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: sales_orders
  endpoint:
    path: /api/v1/sales_orders
    method: GET
    data_selector: data
    params: {}
- name: spirits
  endpoint:
    path: /create-a-spirit-from-ferment
    method: POST
    data_selector: data
    params: {}
- name: batches
  endpoint:
    path: /batches
    method: GET
    data_selector: batches
    params: {}
- name: bulk_operations
  endpoint:
    path: /WineryOperations
    method: GET
    data_selector: operations
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: records
    params: {}
- name: sales_orders
  endpoint:
    path: /api/v1/sales_orders
    method: GET
    data_selector: orders
    params: {}
- name: analysis_sets
  endpoint:
    path: /api/v1/analysis_sets
    method: GET
    data_selector: data
    params: {}
- name: Lab Analyses
  endpoint:
    path: /LabAnalyses
    method: GET
- name: spirit
  endpoint:
    path: /create/spirit/from/ferment
    method: POST
    data_selector: spirit_data
    params: {}
- name: ferments
  endpoint:
    path: /Ferments
    method: GET
    data_selector: fermentRecords
- name: Analysis Set
  endpoint:
    path: /AnalysisSets
    method: POST
    data_selector: results
- name: analysis_sets
  endpoint:
    path: /AnalysisSets
    method: GET
- name: analysis_sets
  endpoint:
    path: /api/v1/analysis-sets
    method: GET
    data_selector: data
    params: {}
- name: lab_analyses
  endpoint:
    path: /lab/analyses
    method: GET
    data_selector: results
- name: lab_analyses
  endpoint:
    path: /api/lab/analyses
    method: GET
    data_selector: results
- name: Lab Analyses
  endpoint:
    path: /LabAnalyses
    method: GET
    data_selector: records
- name: Analysis Sets
  endpoint:
    path: /AnalysisSets
    method: GET
    data_selector: records
- name: lab_analyses
  endpoint:
    path: /lab/analyses
    method: GET
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Ferments
  endpoint:
    path: /Ferments
    method: GET
    data_selector: ferments
- name: ferments
  endpoint:
    path: /lab/ferments
    method: GET
- name: lab_analyses
  endpoint:
    path: /services/data/vXX.X/sobjects/LabAnalyses
    method: GET
    data_selector: records
    params: {}
- name: lab_analysis
  endpoint:
    path: /api/lab/analyses
    method: GET
    data_selector: records
- name: lab_analysis
  endpoint:
    path: /services/data/vXX.X/sobjects/LabAnalysis
    method: GET
    data_selector: records
    params: {}
- name: lab_analysis
  endpoint:
    path: /services/data/vXX.X/sobjects/LabAnalysis
    method: GET
    data_selector: records
- name: lab_analysis
  endpoint:
    path: /services/data/vXX.X/sobjects/LabAnalysis
    method: GET
    data_selector: records
    params: {}
- name: analysis_requests
  endpoint:
    path: /analyze/analysis-requests
    method: GET
    data_selector: records
    params: {}
- name: lab_analysis
  endpoint:
    path: /analyses
    method: GET
    data_selector: data
    params: {}
- name: traceability
  endpoint:
    path: /api/v1/traceability
    method: GET
    data_selector: data
    params: {}
- name: blend_information
  endpoint:
    path: /api/v1/blend_information
    method: GET
    data_selector: data
    params: {}
- name: historical_compositions
  endpoint:
    path: /winemaking/in-the-winery/historical-compositions
    method: GET
- name: lab_analysis
  endpoint:
    path: /api/v1/lab_analyses
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /api/sales_orders
    method: GET
    data_selector: records
- name: lab_analysis
  endpoint:
    path: /lab/analyses
    method: GET
    data_selector: data
    params: {}
- name: audit_trails
  endpoint:
    path: /api/audit-trails
    method: GET
    data_selector: records
- name: lab_analysis
  endpoint:
    path: /services/data/vXX.X/sobjects/LabAnalysis
    method: GET
    data_selector: records
- name: units_of_measure
  endpoint:
    path: /UnitsOfMeasure
    method: GET
    data_selector: units
    params: {}
- name: analyses
  endpoint:
    path: /lab/analyses
    method: GET
    data_selector: records
- name: stock_items
  endpoint:
    path: /api/stock-items
    method: GET
    data_selector: data
    params: {}
- name: sales_orders
  endpoint:
    path: /api/sales-orders
    method: GET
    data_selector: data
    params: {}
- name: analysis_requests
  endpoint:
    path: /api/analysis_requests
    method: GET
    data_selector: data
    params: {}
- name: stock_item_allocations
  endpoint:
    path: /StockItemAllocations
    method: GET
    data_selector: allocations
    params: {}
- name: stock_allocation_reports
  endpoint:
    path: /StockAllocations
    method: GET
    data_selector: reports
    params: {}
- name: stock_item_allocations
  endpoint:
    path: /stock-item-allocations
    method: GET
    data_selector: allocations
    params: {}
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /api/sales-orders
    method: GET
    data_selector: records
- name: stock_on_hand
  endpoint:
    path: /stock-on-hand
    method: GET
    data_selector: records
- name: historical_compositions
  endpoint:
    path: /winemaking/in-the-winery/historical-compositions
    method: GET
- name: Stock Item Prices
  endpoint:
    path: /StockItemPrices
    method: GET
    data_selector: prices
- name: bulk_editing_prices
  endpoint:
    path: /bulk-editing-prices
    method: GET
    data_selector: records
- name: stock_adjustments
  endpoint:
    path: /stock-adjustments
    method: POST
- name: Stock Take
  endpoint:
    path: /stock-adjustments/stock-take
    method: GET
- name: Stock Transfers
  endpoint:
    path: /stock-transfers
    method: GET
- name: audit_trails
  endpoint:
    path: /api/audit-trails
    method: GET
    data_selector: records
- name: bulk_movements
  endpoint:
    path: /Assessments/BulkWineMovements
    method: GET
- name: stock_take
  endpoint:
    path: /api/v1/stock-take
    method: GET
    data_selector: records
- name: Stock Transfers
  endpoint:
    path: /stock-transfers
    method: GET
- name: units_of_measure
  endpoint:
    path: /UnitsOfMeasure
    method: GET
    data_selector: units
- name: units_of_measure
  endpoint:
    path: /units-of-measure
    method: GET
- name: sales_orders
  endpoint:
    path: /sales/sales-orders
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /SalesOrders
    method: GET
    data_selector: records
- name: stock_availability
  endpoint:
    path: /stock/availability
    method: GET
    data_selector: availability
- name: sales_orders
  endpoint:
    path: /sales/sales-orders
    method: GET
    data_selector: records
    params: {}
- name: despatch_sales_orders
  endpoint:
    path: /despatch_sales_orders
    method: POST
    data_selector: despatch_details
    params: {}
- name: stock_item_allocations
  endpoint:
    path: /StockItemAllocations
    method: GET
    data_selector: allocations
    params: {}
- name: stock_item_allocations
  endpoint:
    path: /stock-item-allocations
    method: GET
- name: Stock Aging Summary
  endpoint:
    path: /count/stock-aging-summary
    method: GET
- name: sales_orders
  endpoint:
    path: /sales/orders
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: stock_on_hand_report
  endpoint:
    path: /stock-on-hand-report
    method: GET
- name: Stock Item Prices
  endpoint:
    path: /StockItemPrices
    method: GET
    data_selector: records
    params: {}
- name: bulk_editing_prices
  endpoint:
    path: /bulk-editing-prices
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /api/v1/sales-orders
    method: GET
    data_selector: records
    params: {}
- name: inventory
  endpoint:
    path: /api/v1/inventory
    method: GET
    data_selector: records
    params: {}
- name: Stock Adjustments
  endpoint:
    path: /stock-adjustments
    method: GET
    data_selector: records
    params: {}
- name: stock_adjustments
  endpoint:
    path: /stock-adjustments
    method: GET
- name: credit_notes
  endpoint:
    path: /sales/creating-credit-notes
    method: GET
- name: Stock Transfers
  endpoint:
    path: /stock-transfers
    method: GET
- name: sales_orders
  endpoint:
    path: /sales/sales-orders
    method: GET
- name: sales_orders
  endpoint:
    path: /SalesOrders
    method: GET
    data_selector: orders
    params: {}
- name: sales_orders
  endpoint:
    path: /api/v1/sales/orders
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /api/v1/sales_orders
    method: POST
    data_selector: data
    params: {}
- name: sales_orders
  endpoint:
    path: /api/sales_orders
    method: GET
    data_selector: records
    params: {}
- name: inventory
  endpoint:
    path: /api/inventory
    method: GET
    data_selector: records
    params: {}
- name: sales_orders
  endpoint:
    path: /api/sales_orders
    method: GET
    data_selector: records
    params: {}
- name: inventory
  endpoint:
    path: /api/inventory
    method: GET
    data_selector: records
    params: {}
- name: sales_orders
  endpoint:
    path: /api/v1/sales-orders
    method: GET
    data_selector: records
    params: {}
- name: inventory
  endpoint:
    path: /api/v1/inventory
    method: GET
    data_selector: records
    params: {}
- name: purchase_order
  endpoint:
    path: /customise/purchase_order
    method: GET
    data_selector: order_templates
    params: {}
- name: bulk_invoice_printing
  endpoint:
    path: /sales/orders/bulk_print
    method: GET
    data_selector: invoices
    params: {}
- name: sales_order_summary
  endpoint:
    path: /sales/orders/summary
    method: GET
    data_selector: summary
    params: {}
- name: purchase_order
  endpoint:
    path: /bottling-and-inventory/purchase-orders/
    method: GET
- name: harvest
  endpoint:
    path: /winemaking/harvest/
    method: GET
- name: bulk_receival
  endpoint:
    path: /winemaking/bulk-receival/
    method: GET
- name: bulk_despatch
  endpoint:
    path: /bulk-despatch/
    method: GET
- name: sales_order
  endpoint:
    path: /sales-orders/
    method: GET
- name: credit_notes
  endpoint:
    path: /sales/creating-credit-notes
    method: GET
- name: sales_orders
  endpoint:
    path: /api/sales/orders
    method: GET
    data_selector: records
    params: {}
- name: purchase_orders
  endpoint:
    path: /api/purchase/orders
    method: GET
    data_selector: records
    params: {}
- name: sales_orders
  endpoint:
    path: /sales/sales-orders
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /people-and-companies/contacts
    method: GET
    data_selector: records
- name: purchase_orders
  endpoint:
    path: /purchase-orders
    method: GET
    data_selector: records
    params: {}
- name: WET Account
  endpoint:
    path: /settings/chart_of_accounts
    method: POST
    data_selector: account
    params:
      Account Type: Current Liability
      Code: '821'
      Name: WET
      Description: The balance in this account represents WET owing to or from the
        ATO. Once you file your BAS, you should create a AR or AP invoice to clear
        out the balance at the end of the period.
      Tax: BAS Excluded
- name: WET Tax
  endpoint:
    path: /account-2/configuring-xero-for-wet-tax
    method: GET
- name: purchase_order
  endpoint:
    path: /bottling-and-inventory/purchase-orders/
    method: GET
    data_selector: records
    params: {}
- name: harvest
  endpoint:
    path: /winemaking/harvest/
    method: GET
    data_selector: records
    params: {}
- name: bulk_receival
  endpoint:
    path: /winemaking/bulk-receival/
    method: GET
    data_selector: records
    params: {}
- name: bulk_despatch
  endpoint:
    path: /bulk-despatch/
    method: GET
    data_selector: records
    params: {}
- name: sales_order
  endpoint:
    path: /sales-orders/
    method: GET
    data_selector: records
    params: {}
- name: purchase_orders
  endpoint:
    path: /api/purchase_orders
    method: GET
    data_selector: records
    params: {}
- name: sales_orders
  endpoint:
    path: /api/sales_orders
    method: GET
    data_selector: records
    params: {}
- name: standard_costs
  endpoint:
    path: /services/data/v1.0/standard_costs
    method: GET
    data_selector: records
    params: {}
- name: StockItems
  endpoint:
    path: /api/v1/stock-items
    method: GET
    data_selector: items
    params: {}
- name: Operations
  endpoint:
    path: /api/v1/operations
    method: GET
    data_selector: operations
    params: {}
- name: Overhead Allocations
  endpoint:
    path: /ComponentAllocations
    method: GET
- name: WET Assessment
  endpoint:
    path: /wet_assessment
    method: POST
    data_selector: assessment_result
- name: Stock On Hand Report
  endpoint:
    path: /Dashboards/Reports#Sell-StockOnHand
    method: GET
    data_selector: reports
    params: {}
- name: Bottling Journals
  endpoint:
    path: /Dashboards/Reports#Account-BottlingJournals
    method: GET
    data_selector: reports
    params: {}
- name: Cost of Goods Sold (detailed) Report
  endpoint:
    path: /Dashboards/Accounts#Account-CostOfGoodsSoldDetailed
    method: GET
    data_selector: reports
    params: {}
- name: Purchases by Product Report
  endpoint:
    path: /Dashboards/Purchases#Buy-PurchasesByProduct
    method: GET
    data_selector: reports
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: Cost of Goods Delivered Report
  endpoint:
    path: /cost_of_goods_delivered_report
    method: GET
    data_selector: report_data
- name: WET Account
  endpoint:
    path: /settings/chart_of_accounts
    method: POST
    data_selector: account
    params:
      account_type: Current Liability
      code: '821'
      name: WET
      description: The balance in this account represents WET owing to or from the
        ATO. Once you file your BAS, you should create a AR or AP invoice to clear
        out the balance at the end of the period.
      tax: BAS Excluded
- name: contacts
  endpoint:
    path: /people-and-companies/contacts
    method: GET
    data_selector: contacts
    params: {}
- name: sales_orders
  endpoint:
    path: /sales/sales-orders
    method: GET
    data_selector: sales_orders
    params: {}
- name: inventory_movements
  endpoint:
    path: /account-2/inventory-valuation-and-reporting
    method: GET
    data_selector: inventory_movements
    params: {}
- name: Cost of Goods Sold report
  endpoint:
    path: /reports/cost_of_goods_sold
    method: GET
    data_selector: records
- name: Cost of Goods Delivered report
  endpoint:
    path: /reports/cost_of_goods_delivered
    method: GET
    data_selector: records
- name: Bottling Journals
  endpoint:
    path: /reports/bottling_journals
    method: GET
    data_selector: records
- name: Bulk Operation Additives reports
  endpoint:
    path: /reports/bulk_operation_additives
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /api/sales_orders
    method: GET
    data_selector: records
- name: asset_journal
  endpoint:
    path: /api/asset_journals
    method: POST
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: sales_orders
  endpoint:
    path: /api/v1/sales_orders
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: data
    params: {}
- name: sales_orders
  endpoint:
    path: /api/sales_orders
    method: GET
    data_selector: data
    params: {}
- name: Excise Assessment Report
  endpoint:
    path: /reports/excise-assessment
    method: GET
    data_selector: report_data
- name: Tax Types
  endpoint:
    path: /tax-types
    method: GET
    data_selector: tax_types_data
- name: Tax Rates
  endpoint:
    path: /tax-rates
    method: GET
    data_selector: tax_rates_data
- name: Bonded Locations
  endpoint:
    path: /bonded-locations
    method: GET
    data_selector: bonded_locations_data
- name: Contacts Tax Liability
  endpoint:
    path: /contacts/tax-liability
    method: GET
    data_selector: contacts_liability_data
- name: Stock Items Tax Liability
  endpoint:
    path: /stock-items/tax-liability
    method: GET
    data_selector: stock_items_liability_data
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /sales/orders
    method: GET
    data_selector: records
- name: labour_costs
  endpoint:
    path: /api/labour_costs
    method: GET
    data_selector: records
- name: overhead_allocations
  endpoint:
    path: /api/v1/overhead-allocations
    method: GET
    data_selector: data
    params: {}
- name: Stock On Hand Report
  endpoint:
    path: /Dashboards/Reports#Sell-StockOnHand
    method: GET
- name: Bottling Journals
  endpoint:
    path: /Dashboards/Reports#Account-BottlingJournals
    method: GET
- name: Cost of Goods Sold Report
  endpoint:
    path: /Dashboards/Accounts#Account-CostOfGoodsSoldDetailed
    method: GET
- name: Cost of Goods Delivered Report
  endpoint:
    path: /Dashboards/Accounts#Account-CostOfGoodsDeliveredDetailed
    method: GET
- name: Purchases by Product Report
  endpoint:
    path: /Dashboards/Purchases#Buy-PurchasesByProduct
    method: GET
- name: Cost of Goods Sold Report
  endpoint:
    path: /app.vinsight.net/Dashboards/Accounts#Account-CostOfGoodsSoldDetailed
    method: GET
- name: sales_of_finished_items
  endpoint:
    path: /financial-processes/sales-of-finished-items
    method: GET
    data_selector: records
    params: {}
- name: Cost of Goods Delivered
  endpoint:
    path: /cost-of-goods-delivered-report
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /Contacts
    method: GET
    data_selector: records
- name: asset_journals
  endpoint:
    path: /posting-asset-journals-to-xero
    method: GET
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params: {}
- name: Stock On Hand
  endpoint:
    path: /account/stock-on-hand
    method: GET
    data_selector: records
- name: Cost of Goods Sold
  endpoint:
    path: /account/cost-of-goods-sold
    method: GET
    data_selector: records
- name: Bottled Wine Cost Summary
  endpoint:
    path: /account/bottled-wine-cost-summary
    method: GET
    data_selector: records
- name: Bulk Wine Cost Summary
  endpoint:
    path: /account/bulk-wine-cost-summary
    method: GET
    data_selector: records
- name: Contact Activity
  endpoint:
    path: /api/v1/contact_activity
    method: GET
- name: Order History
  endpoint:
    path: /api/v1/order_history
    method: GET
- name: Stock Allocation
  endpoint:
    path: /api/v1/stock_allocation
    method: GET
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /api/sales_orders
    method: GET
    data_selector: records
- name: reports
  endpoint:
    path: /Dashboards/Reports
    method: GET
    data_selector: reports
    params: {}
- name: excise_assessment
  endpoint:
    path: /reports/account/exciseAssessment
    method: GET
    data_selector: results
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params: {}
- name: stock_items
  endpoint:
    path: /stockItems
    method: GET
    data_selector: records
    params: {}
- name: reports
  endpoint:
    path: /api/reports
    method: GET
    data_selector: records
    params: {}
- name: sales_orders
  endpoint:
    path: /api/sales_orders
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: records
    params: {}
- name: harvests
  endpoint:
    path: /financial-processes/harvests
    method: GET
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: records
    params: {}
- name: State Liquor Reporting Plugin
  endpoint:
    path: /plugins/state-liquor-reporting
    method: GET
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params: {}
- name: sales_orders
  endpoint:
    path: /sales/orders
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /Contacts
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /people-and-companies/contacts
    method: GET
- name: contacts
  endpoint:
    path: /api.xro/2.0/Contacts
    method: GET
    data_selector: Contacts
- name: invoices
  endpoint:
    path: /api.xro/2.0/Invoices
    method: GET
    data_selector: Invoices
- name: Contact Activity
  endpoint:
    path: /Contacts/Activity
    method: GET
    data_selector: records
- name: Order History
  endpoint:
    path: /Contacts/OrderHistory
    method: GET
    data_selector: records
- name: Stock Allocation
  endpoint:
    path: /Contacts/StockAllocation
    method: GET
    data_selector: records
- name: Contacts
  endpoint:
    path: /contacts
    method: POST
- name: StockItems
  endpoint:
    path: /stockitems
    method: POST
- name: Sales By Period
  endpoint:
    path: /Dashboards/Sales
    method: GET
- name: Purchases By Period
  endpoint:
    path: /Dashboards/Purchases
    method: GET
- name: sales
  endpoint:
    path: /services/data/vXX.X/sobjects/Sales
    method: POST
    data_selector: records
    params: {}
- name: purchases
  endpoint:
    path: /services/data/vXX.X/sobjects/Purchases
    method: POST
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /api/sales_orders
    method: GET
    data_selector: records
- name: purchase_order
  endpoint:
    path: /posting/purchases
    method: POST
    data_selector: invoice
    params: {}
- name: purchases
  endpoint:
    path: /posting-purchases-to-xero
    method: POST
- name: Sales By Period
  endpoint:
    path: /reports/sales_by_period
    method: GET
    data_selector: data
    params: {}
- name: Ordering Trends
  endpoint:
    path: /reports/ordering_trends
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /sales/orders
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /api.xro/2.0/Contacts
    method: GET
    data_selector: Contacts
    params: {}
- name: sales_invoices
  endpoint:
    path: /api.xro/2.0/SalesInvoices
    method: GET
    data_selector: SalesInvoices
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /sales-orders
    method: GET
    data_selector: records
- name: inventory_balances
  endpoint:
    path: /api.xro/2.0/Inventory
    method: GET
    data_selector: Items
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
- name: sales_orders
  endpoint:
    path: /sales-orders
    method: GET
- name: Sales Orders
  endpoint:
    path: /SalesOrders
    method: POST
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /api/sales_orders
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /api/v1/sales/orders
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: POST
    data_selector: contacts
    params: {}
- name: items
  endpoint:
    path: /items
    method: POST
    data_selector: items
    params: {}
- name: sales
  endpoint:
    path: /api/v1/sales
    method: POST
    data_selector: salesRecords
    params: {}
- name: purchase_order
  endpoint:
    path: /post_purchase_order
    method: POST
    data_selector: orders
- name: Product Categories
  endpoint:
    path: /ProductCategories
    method: GET
- name: Contact Categories
  endpoint:
    path: /ContactCategories
    method: GET
- name: sending_tracking_codes
  endpoint:
    path: /xero/sending-tracking-codes-to-xero
    method: GET
- name: payment_terms
  endpoint:
    path: /settings/payment-terms
    method: GET
    data_selector: terms
    params: {}
- name: SalesOrders
  endpoint:
    path: /SalesOrders
    method: POST
    data_selector: records
- name: sales_orders
  endpoint:
    path: /sales/orders
    method: GET
    data_selector: orders
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /api/sales/orders
    method: GET
    data_selector: records
- name: SalesOrderDespatches
  endpoint:
    path: /SalesOrderDespatches
    method: GET
- name: SalesOrderDespatchItems
  endpoint:
    path: /SalesOrderDespatchItems
    method: GET
- name: SalesOrderItems
  endpoint:
    path: /SalesOrderItems
    method: GET
- name: SalesOrders
  endpoint:
    path: /SalesOrders
    method: GET
- name: StockGroups
  endpoint:
    path: /StockGroups
    method: GET
- name: StockItemAliases
  endpoint:
    path: /StockItemAliases
    method: GET
- name: StockItemAllocations
  endpoint:
    path: /StockItemAllocations
    method: GET
- name: StockItemLocations
  endpoint:
    path: /StockItemLocations
    method: GET
- name: StockItemPrices
  endpoint:
    path: /StockItemPrices
    method: GET
- name: StockItems
  endpoint:
    path: /StockItems
    method: GET
- name: StockItemUnitsOfMeasure
  endpoint:
    path: /StockItemUnitsOfMeasure
    method: GET
- name: payment_terms
  endpoint:
    path: /settings/payment-terms
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: SalesOrders
  endpoint:
    path: /SalesOrders
    method: POST
    data_selector: SalesOrder
    params: {}
- name: Contacts
  endpoint:
    path: /Contacts.json
    method: GET
    data_selector: records
    params: {}
- name: Currencies
  endpoint:
    path: /Currencies.json
    method: GET
    data_selector: records
    params: {}
- name: Divisions
  endpoint:
    path: /Divisions.json
    method: GET
    data_selector: records
    params: {}
- name: TaxRates
  endpoint:
    path: /TaxRates.json
    method: GET
    data_selector: records
    params: {}
- name: StockItems
  endpoint:
    path: /StockItems.json
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: SalesOrders
  endpoint:
    path: /SalesOrders
    method: POST
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: StockItems
  endpoint:
    path: /StockItems
    method: GET
    data_selector: records
    params:
      $select: StockItemCode,UnitsInStock,UnitsInStockUOM
      $top: '999'
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: stock_items
  endpoint:
    path: /StockItems
    method: GET
    data_selector: body
- name: tax_rates
  endpoint:
    path: /TaxRates
    method: GET
    data_selector: body
- name: StockItems
  endpoint:
    path: /StockItems
    method: GET
    data_selector: StockItemCode,UnitsInStock,UnitsInStockUOM
    params:
      $top: 999
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: SalesOrderItems
  endpoint:
    path: /SalesOrderItems
    method: GET
    params:
      api-key: '1234567890'
- name: StockItems
  endpoint:
    path: /StockItems
    method: GET
    data_selector: records
    params:
      $select: StockItemCode,UnitsInStock,UnitsInStockUOM
      $top: 999
- name: TaxRates
  endpoint:
    path: /TaxRates
    method: GET
    data_selector: records
    params:
      $filter: TaxType/Code eq 'GST'
      $top: 1
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /sales_orders
    method: GET
    data_selector: records
- name: unmatched_items
  endpoint:
    path: /api/v1/unmatched-items
    method: POST
    data_selector: items
- name: Bulk Receival
  endpoint:
    path: /api/bulk_receival
    method: POST
    data_selector: records
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: bulk_receival
  endpoint:
    path: /BulkReceivals
    method: GET
    data_selector: receivals
- name: bulk_receival
  endpoint:
    path: /BulkReceivals
    method: GET
    data_selector: receivals
- name: costing_information
  endpoint:
    path: /account-2/costing-information
    method: GET
    data_selector: records
    params: {}
- name: costing_information
  endpoint:
    path: /costing-information
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /sales/orders
    method: GET
    data_selector: records
- name: Standard Cost of Purchase Items
  endpoint:
    path: /setting-standard-costs/standard-cost-purchase-items
    method: GET
    data_selector: StandardCost
    params: {}
- name: Automated Purchase Order Standard Costs Option
  endpoint:
    path: /setting-standard-costs/automated-purchase-order-costs
    method: GET
    data_selector: AutomatedCosts
    params: {}
- name: Standard Cost of Finished Items
  endpoint:
    path: /setting-standard-costs/standard-cost-finished-items
    method: GET
    data_selector: FinishedItemCosts
    params: {}
- name: Re-cost Historic usages in Production
  endpoint:
    path: /setting-standard-costs/recost-usages
    method: GET
    data_selector: HistoricUsages
    params: {}
- name: Updating Standard Cost in Bulk
  endpoint:
    path: /setting-standard-costs/updating-standard-cost-bulk
    method: GET
    data_selector: BulkUpdate
    params: {}
- name: Journaling Adjustments to Standard Costs
  endpoint:
    path: /setting-standard-costs/journal-adjustments
    method: GET
    data_selector: JournalAdjustments
    params: {}
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /api/sales_orders
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: records
- name: sales_orders
  endpoint:
    path: /api/v1/sales_orders
    method: GET
    data_selector: records
notes:
- Always send requests using HTTPS to avoid credential interception.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- API requires OAuth2 authentication
- Rate limits are enforced on API calls
- Requires setup of connected app in Vinsight
- Some API responses may vary based on user permissions
- Almost every table supports data being pasted directly in to it from a spreadsheet
  program such as Microsoft Excel.
- Uses OAuth2 with refresh token — requires setup of connected app in Vinsight
- You can import multiple contacts at once, from your other systems and spreadsheets
  with Vinsight’s import feature.
- You can archive contacts that you do not need anymore.
- Some objects may return nulls in deeply nested fields
- Some API responses may contain nested fields with null values
- Requires setup of OAuth2 authentication
- API may have rate limits that need to be respected.
- Uses OAuth2
- Vinsight is a B2B (wholesale business to business) sales tool and does not do consumer
  sales natively.
- Use spreadsheet importers for bulk data entry.
- Ensure that OAuth setup is configured correctly.
- Some objects like Inventory may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in vinsight
- This document outlines how you can double check and correct initial blends in your
  Vessels after having just imported them.
- Requires setup of API credentials through Vinsight.
- Ensure proper permissions for data access.
- Refer to the Vinsight API documentation for specific endpoint details.
- Requires OAuth2 authentication for access
- Requires OAuth2 authentication with a refresh token.
- Requires OAuth2 authentication for access.
- Requires an active subscription to access the API
- Any information provided here is for informational purposes only.
- If you need help following any of these steps, please contact your Hardware Provider
  directly.
- API requires authentication setup.
- Refer to API documentation for detailed usage instructions.
- API requires OAuth2 authentication with refresh token.
- Check for rate limits on API usage.
- Ensure to follow the API limits to avoid throttling
- You must switch on this functionality to send or receive this data.
- You don’t have to set any of the settings, you can simply save the addon.
- API requires authentication and setup of applications.
- Ensure to follow the importing guidelines for vessels.
- Coding for wine batches has similar considerations as for naming vessels.
- 'Required Info: Code, Wine, Type and Designation are all required fields.'
- Requires setup of connected app in Vinsight.
- Draft operations can be edited and deleted.
- Once an operation has been marked as completed, it will no longer appear in the
  dashboard.
- Uses a draft system for operations that require completion.
- Vessels are handled by their codes and volumes.
- API requires setup of connected app in Vinsight
- Certain endpoints may have specific authentication requirements
- Requires setup of connected app for OAuth2.
- To track the cost and inventory levels of the ingredient products, ensure that they
  have been entered into the system as ‘Stock Items’. They will automatically appear
  in the drop down list if they have been correctly added and have the Bulk Additive
  attribute switched on.
- Ensure to configure OAuth settings on Vinsight for API access.
- Requires OAuth2 authentication setup.
- Code, Category, Type and Designation are all required fields.
- Vinsight will track the blend information of each vessel as you carry out these
  processes.
- There is a lot of flexibility around the number of steps you record during the production
  process.
- Requires authentication setup for API access
- Some endpoints may have rate limits
- Your analysis set must have at the Date and BatchCode columns as a minimum.
- Some API limits may apply
- Requires OAuth2 setup for API access
- Ensure API limits are respected to avoid throttling
- Refer to API Authentication for details.
- Ensure to handle pagination as needed.
- Ensure API tokens are refreshed regularly.
- Requires setup of connected app in api
- Ensure to manage API limits to avoid throttling.
- Vinsight offers the ability to import CSV or Excel files with Lab Analysis data
  from other systems, based on your selected Analysis Set.
- Anything not defined in the Analysis Set will not be imported.
- Requires setup of connected app in the API
- Ensure that the connected app is configured in the API settings.
- Requires OAuth2 setup in Vinsight.
- Some analysis data may return nulls in deeply nested fields
- Requires OAuth2 authentication with refresh token.
- Requires OAuth2 authentication
- Ensure proper token handling for refresh
- Requires setup of OAuth2 with refresh token.
- All units of measure that you intend to use in Vinsight will need to be in this
  list.
- Ensure correct permissions for data access.
- Requires API authentication setup
- Refer to the documentation for specific usage instructions.
- API requires authentication via OAuth2
- Prices can be imported and edited in bulk using a spreadsheet.
- Adjusting the quantity or price of a stock item from the Stock Item page, automatically
  creates a line item in an open adjustment document on the Stock Adjustments page.
- Requires setup of OAuth2 authentication.
- Custom units of measure can be defined within stock items.
- Default Units of Measure are provided with a new Vinsight subscription.
- Uses OAuth2 for authentication.
- Setup requires an active subscription and API key.
- On multi-location subscriptions, you have the ability to create separate partial
  despatches from the same sales order.
- You can create and edit a Stock Item Allocation from the customer page.
- Allocations will automatically update as products are ordered and dispatched.
- Uses OAuth2 for authentication
- Some endpoints may have pagination
- Once a stock item has been imported, you cannot use the importer to later change
  stock quantities.
- The Stock Take feature is designed primarily to keep track of inventory levels in
  Vinsight.
- Requires authentication to access data
- Many of these features are only available if your Vinsight Subscription has the
  'Price Books' Feature.
- Entire despatch available on all subscriptions.
- Partial despatch available on multi-location subscriptions.
- Do not use this feature for Excise Duty or Wine Equalisation Tax (WET)
- Requires OAuth2 setup with a connected app in Vinsight
- While this feature is new, we will retain an option to use the old-style print format.
- Support for HTML and CSS-related issues is outside the scope of our services.
- Requires setup of connected app in vinsight
- Some features need to be enabled using a setting in Settings > Setup > Advanced
  Settings then switch on 'Advanced Pricing'.
- Many features are only available if the Vinsight Subscription has the 'Price Books'
  Feature.
- Do not use this feature for Excise Duty or Wine Equalisation Tax (WET) as there
  are dedicated features and reporting for these.
- Requires OAuth2 authentication for API access
- Configuring Xero for WET Tax requires specific setup.
- Vinsight does NOT change the Standard Cost automatically.
- Requires OAuth2 authentication setup via the Vinsight portal
- Ensure correct API limits are adhered to
- Requires setup of connected app in Vinsight API
- Ensure your Contacts are set up with the correct WET tax attributes.
- All customers will need to have 'WET Tax Liable' turned on.
- The Cost of Goods Sold report is available to all customers on subscription levels
  that support product costing.
- The report can be grouped by ‘asset ledger’, ‘expense ledger’ or both.
- Requires setup of connected app in API
- Vinsight will automatically post the correct GST handling for the WET amounts.
- WET amounts are calculated and posted on the WET Assessment in Vinsight at the end
  of the tax period.
- Refer to the API documentation for detailed usage and limitations.
- Configuring Xero For WET Tax
- 'Costs in Vinsight are composed of 4 main areas: Fruit/Bulk Wine Purchase Costs,
  Direct Production Costs, Packaging Costs, Indirect Costs Attributable to the Product.'
- Requires setup of a connected app in Vinsight
- Requires setup of connected app in Xero
- Cost information can be updated even after the associated bulk operation has been
  updated.
- The Bulk On Hand report has been designed to show ONLY CURRENT VESSELS, this report
  will not show historical data.
- Requires OAuth2 authentication for all API requests.
- Ensure you have proper OAuth2 setup for integration.
- Ensure 'Contacts' and 'Stock Items' are correctly classified as Excise Tax Liable
  or not.
- Product comes into Vinsight as either, Item Inventory through a Purchase Order,
  or Work-in-Progress Inventory through an operation with an optional attached purchase
  order.
- OAuth2 implementation requires setup of a connected app.
- Check API limits to avoid throttling.
- Requires API key for authentication.
- Cost of Goods Delivered Report is available for integration.
- Contacts can be categorized as ‘Growers’, ‘Customers’, ‘Suppliers’, and ‘Employees’.
- Posting Asset Journals to Xero
- Requires OAuth2 authentication.
- Ensure to follow the API limits.
- Reports can be customized using filters, grouping, and other options.
- Ensure that your ‘Contacts’ and ‘Stock Items’ are correctly classified as Excise
  Tax Liable or not.
- Review the Excise Liability of Contacts and Stock Items to ensure accurate reporting.
- Requires OAuth2 setup for accessing the API
- The Sales By Period report is derived from sales data, it will not identify customers
  who have had no sales in the time frame you have selected.
- API requires setup of connected app in Vinsight.
- Some endpoints may have rate limits.
- Reports generated by the plugin are completely achievable using categories and filters
  in Vinsight’s reporting suite.
- This authorises Vinsight and Xero to talk to each other.
- This authorisation expires every 12 months so you will have to repeat this process
  each year.
- Contacts can be categorized into Growers, Customers, Suppliers, and Employees.
- Contacts can have multiple addresses for billing and delivery.
- Uses OAuth2 with refresh token — requires setup of connected app in API
- Ensure to configure your application in the Xero developer portal.
- Ensure that the Sales or Purchase Order you post to Xero is allocated to the correct
  ledger.
- If you have an order or orders that you do not want sent or synced with Xero, you
  can mark these orders to be ignored.
- Reports can be customised using filters, grouping, and other options.
- Uses OAuth2 with refresh token — requires setup of connected app in Xero
- Vinsight will purchases to Current Asset accounts by design.
- Orders that are in the draft state do not require an Account Code but approved orders
  do.
- Ensure to check API limits.
- Some objects may have rate limits
- Ensure the correct OAuth2 scopes are set for accessing inventory data.
- Response may vary based on user permissions and account settings.
- Vinsight only replicates the sales taxes that Commerce7 is using.
- Ensure Legacy API is enabled in WooCommerce settings.
- This authorises Vinsight and Xero to talk to each other. This authorisation expires
  every 12 months so you will have to repeat this process each year.
- Orders not yet marked as Shipped/Picked Up in Vin65 will always be imported individually.
- Vinsight only replicates the sales taxes that Shopify is using.
- You can have one Vend connection per Division in your Organisation.
- Once connected, you should be able to see the following extra options on the Vinsight
  – Vend configuration page.
- Ensure that the Sales or Purchase Order is allocated to the correct ledger in Vinsight
  before posting to Xero.
- This Addon requires use of multiple locations to function. As such, it is only available
  to accounts that are on the “Standard” or “Premium” subscription tiers.
- When an order has already been shipped via BAM Wine Logistics, Vinsight will never
  send it to BAM Wine Logistics again.
- Ensure correct permissions are granted
- Purchase Orders in Vinsight become draft accounts payable invoices in Xero.
- This Addon requires use of multiple locations to function. As such, it is only available
  to accounts that are on the 'Standard' or 'Premium' subscription tiers.
- If you have issues connecting, check with the warehouse to see if they have generated
  the credentials correctly.
- You need to obtain your Remote VinWizard Host Server Address to connect.
- The port number is usually '8008'.
- Commerce7 is a paid addon.
- Ensure Legacy API is enabled for some features to work.
- Check that Webhooks are setup, enabled and working.
- When creating your own new expressions, be careful to copy the relevant expression
  parts accurately.
- Typically, the InvoiceDate is used to calculate the payment date.
- Uses OAuth2 with refresh token — requires setup of connected app in Vin65
- Most operations are compliant to OData uri conventions with notable extensions.
- Whenever you receive this 'WARNING' text it means that in Vinsight the order is
  already closed and there might be a new change to the Shopify order.
- Ensure that you have the correct email addresses set up in the Administration section.
- Exceeding a rate limit will result in an HTTP 429 (too many requests) response.
- Requests are counted within a sliding window.
- This Addon requires use of multiple locations to function.
- It is possible to configure Vinsight and the BAM Wine Logistics Addon to automatically
  upload custom combined printouts in to a single PDF, when uploading an order to
  BAM Wine Logistics.
- The port number is usually ‘8008’.
- If you cannot find the address or have issues connecting, contact VinWizard to configure
  your remote connections.
- Be careful to copy the relevant expression parts accurately, ensuring that you use
  the same capitalizations.
- 'Supports several popular formats: html, xml, json, excel, and csv.'
- You will need to pre-lookup and cache on your server the required data.
- You can test both POST and GETs in our API page.
- Uses OAuth2 with standard OAuth Authentication Procedure — requires setup of OAuth
  Application in Vinsight
- Remember to remove the comment lines from the above example as json does not allow
  comments.
- Uses OAuth2 with standard authentication procedure.
- Ensure to handle multiple webhooks for a single Despatch.
- Login requires base64 encoded username and password
- Webhook data can be authenticated by reconstructing the hash using the webhook secret
  and the request body.
- Each organisation in Vinsight has their own unique webhook secret.
- Use placeholder ID of 0 for unmatched items.
- A Vinsight webhook will always be accompanied by an authentication hash in the x-signature
  request header.
- Uses placeholder ID of 0 for unmatched items
- Alias information is required for matching inbound items
- Usually when performing an OData query against the API, you would do this by issuing
  a GET request with OData Query Parameters in the URL.
- Ensure to follow the guidelines for sending long OData queries.
- Some data may be incomplete or require additional checks
- Requires OAuth2 setup for authentication
- Requires authentication for API access
- Always send requests using HTTPS.
- Sorry we couldn't find the page you were looking for.
- Always send requests using HTTPS
- Make sure to query with the most recent access token
- Always send requests using HTTPS as HTTP requests will be rejected or redirected.
- API requires an OAuth2 connected app setup.
- Some endpoints may return paginated results.
errors:
- '401 Unauthorized: Ensure the access token is valid.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check request parameters'
- '404 Not Found: Verify endpoint path'
- '500 Internal Server Error: Contact support'
- '401 Unauthorized: Check OAuth scopes or token expiration'
- '404 Not Found: Verify endpoint path and parameters'
- 'REQUEST_LIMIT_EXCEEDED: Reduce API call frequency'
- '401 Unauthorized: Check OAuth token and permissions'
- '401 Unauthorized: Check credentials and permissions'
- '404 Not Found: Verify the endpoint path'
- '500 Internal Server Error: Retry the request or check server status'
- '401 Unauthorized: Check your API key or token.'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Check the credentials provided.'
- '404 Not Found: Verify the endpoint path.'
- Failing to include a Vessel Code
- Repeating a Vessel Code
- Missing a Type Code
- Failing to include Group Code - only an issue with new Type Codes
- Failing to add Type Capacity - only an issue with new Type Codes
- Missing the 'Batch Type Code', 'Batch Category Code' or 'Designation Code' - only
  an issue when including Batch information.
- Failing to put the value '100' in the column 'Percent 1', or, if completing more
  than one 'Percent' column, ensuring the values in those 'Percent' columns add up
  to 100.
- '401 Unauthorized: Check credentials and permissions.'
- '404 Not Found: Verify endpoint path and resource availability.'
- '401 Unauthorized: Check your API key and permissions.'
- '401 Unauthorized: Recheck OAuth token'
- '404 Not Found: Check the endpoint path'
- '401 Unauthorized: Check token validity.'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Check your API key or OAuth token.'
- '404 Not Found: Ensure the endpoint URL is correct.'
- '401 Unauthorized: Check your OAuth token.'
- '404 Not Found: Ensure the endpoint is correct.'
- '401 Unauthorized: Check your authentication credentials'
- '404 Not Found: The requested resource could not be found'
- '500 Internal Server Error: Try again later'
- 'INVALID_REQUEST: Ensure all required parameters are included.'
- 'UNAUTHORIZED: Check API key or authentication credentials.'
- '401 Unauthorized: Check your credentials and permissions.'
- '404 Not Found: Verify the endpoint and parameters.'
- '401 Unauthorized: Check your API credentials.'
- '401 Unauthorized: Check OAuth tokens'
- '429 Too Many Requests: Rate limit exceeded'
- Cannot undo an operation with completed operations further down the chain.
- '401 Unauthorized: Recheck OAuth token or scopes'
- '429 Too Many Requests: Reduce request rate'
- '401 Unauthorized: Check client credentials and token validity.'
- '429 Too Many Requests: Reduce request rate to avoid throttling.'
- 'Unauthorized: Check your credentials.'
- 'Not Found: Verify the endpoint path.'
- '401 Unauthorized: Check your credentials'
- '401 Unauthorized: Valid credentials are required'
- '401 Unauthorized: Check authentication credentials.'
- '404 Not Found: Verify the endpoint URL.'
- '401 Unauthorized: Check OAuth token validity.'
- '403 Forbidden: Verify permissions for the requested resource.'
- '401 Unauthorized: Check your credentials or token expiration'
- '404 Not Found: Verify endpoint path.'
- '500 Internal Server Error: Retry the request.'
- '401 Unauthorized: Check token validity'
- '401 Unauthorized: Check credentials or token expiration.'
- '401 Unauthorized: Check your access token.'
- '404 Not Found: Verify the endpoint URL'
- '401 Unauthorized: Check your credentials.'
- '429 Too Many Requests: Rate limit exceeded. Try again later.'
- You will be given a warning if sales order exceeds the customer's allocation.
- Ensure that the Standard Costs on your items are up to date.
- You will also get an error message if any of the relevant stock items do not have
  their Asset Ledger Codes set.
- '401 Unauthorized: Check your OAuth token or scopes'
- '429 Too Many Requests: Rate limit exceeded, try again later'
- '401 Unauthorized: Check the provided credentials'
- '404 Not Found: Ensure the endpoint is correct'
- '401 Unauthorized: Check client credentials'
- '500 Internal Server Error: Try your request again later'
- '401 Unauthorized: Check OAuth token'
- '401 Unauthorized: Check API key or token'
- '401 Unauthorized: Verify client credentials and token validity.'
- '429 Too Many Requests: Reduce the request rate.'
- '401 Unauthorized: Check your OAuth token and scopes.'
- '403 Forbidden: You do not have permission to access this resource.'
- '401 Unauthorized: Check your API key.'
- '404 Not Found: Endpoint may not exist.'
- '403 Forbidden: Check user permissions.'
- '401 Unauthorized: Check your OAuth token'
- '429 Too Many Requests: Reduce the request rate'
- '401 Unauthorized: Check your OAuth credentials'
- '429 Too Many Requests: Throttle your requests'
- 'INVALID_CLIENT: Check your client ID and secret.'
- 'INVALID_GRANT: Refresh token may be expired or revoked.'
- Organisation is not subscribed to currency XXX.
- Account code must be specified.
- Order Has been Posted to Xero, but has been modified since.
- Invoice not of a valid state for modification.
- The Total for this document must be greater than or equal to zero.
- You cannot save this transaction using an inventory account type.
- '401 Unauthorized: Check OAuth token.'
- '429 Too Many Requests: Reduce API call frequency.'
- '400 Bad Request: Check the request parameters'
- 'INVALID_GRANT: Check the refresh token and ensure it’s not expired.'
- 'WARNING: Order is already closed and cannot update with new changes.'
- Organisation is not subscribed to currency XXX
- Account code must be specified
- Invoice not of a valid state for modification
- 'Order failed to post: Xero says: This order has been voided in Xero'
- 'Failed to Post Orders: One or more errors occurred'
- '400 Bad Request: Check request format and parameters'
- '401 Unauthorized: Verify OAuth credentials'
- '429 Too Many Requests: Implement exponential backoff'
- 'HTTP 429 (too many requests): Check X-Rate-Limit-Problem header for limit reached.'
- 'HTTP 429 (too many requests): Exceeding a rate limit.'
- '401 Unauthorized: Check username or password'
- 'Request failed with status: Check status code for details'
- '401 Unauthorized: Recheck API key'
- '400 Bad Request: Check query syntax or parameters.'
- '401 Unauthorized: Validate your token and permissions.'
- '404 Not Found: Ensure the endpoint exists.'
- Page not found
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - API Authentication
  - OAuth2
  - Xero API
  - Authorization Code Flow
  - OAuth Access Tokens
  - API keys
  - Basic authentication
  - OAuth Applications
client:
  base_url: https://api.vinsight.net
  auth:
    type: oauth2
source_metadata: null
