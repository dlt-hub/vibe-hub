resources:
- name: vehicle
  endpoint:
    path: /vehicles
    method: GET
    data_selector: data
- name: market_statistics
  endpoint:
    path: /market_stats
    method: GET
    data_selector: data
- name: encar
  endpoint:
    path: /parsers/encar/getListings
    method: GET
    data_selector: data
    params:
      limit: 50
- name: che168
  endpoint:
    path: /parsers/che168/get_listings
    method: GET
    data_selector: data
    params:
      limit: 50
- name: markets
  endpoint:
    path: /v1/markets
    method: GET
    data_selector: data
- name: vehicle_search
  endpoint:
    path: /v1/search
    method: POST
    data_selector: data
- name: vehicle_details
  endpoint:
    path: /v1/vehicles/{vehicleId}
    method: GET
    data_selector: data
- name: market_stats
  endpoint:
    path: /v1/market_stats
    method: POST
    data_selector: data
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: results
    params:
      limit: 10
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: results
- name: vehicle_listings
  endpoint:
    path: /parsers/{platform}/listings
    method: GET
    data_selector: vehicles
    params:
      limit: '20'
      offset: '0'
- name: vehicle_details
  endpoint:
    path: /parsers/{platform}/vehicle/{id}
    method: GET
    data_selector: data
    params: {}
- name: search_vehicles
  endpoint:
    path: /parsers/{platform}/search
    method: GET
    data_selector: vehicles
    params: {}
- name: vehicle_listings
  endpoint:
    path: /parsers/{platform}/listings
    method: GET
    data_selector: vehicles
    params:
      limit: 20
      offset: 0
- name: vehicle_details
  endpoint:
    path: /parsers/{platform}/vehicle/{id}
    method: GET
    data_selector: vehicle
    params: {}
- name: search_vehicles
  endpoint:
    path: /parsers/{platform}/search
    method: GET
    data_selector: vehicles
    params: {}
- name: vehicle_listings
  endpoint:
    path: /api/vehicle_listings
    method: GET
- name: market_data
  endpoint:
    path: /api/market_data
    method: GET
- name: vehicle_listings
  endpoint:
    path: /api/vehicles
    method: GET
    data_selector: data
- name: pricing_data
  endpoint:
    path: /api/pricing
    method: GET
    data_selector: data
- name: vehicle_listings
  endpoint:
    path: /api/v1/vehicles
    method: GET
    data_selector: data
    params: {}
- name: market_data
  endpoint:
    path: /api/v1/market_data
    method: GET
    data_selector: data
    params: {}
- name: vehicle_listings
  endpoint:
    path: /api/vehicle/listings
    method: GET
    data_selector: data
    params: {}
- name: market_analysis
  endpoint:
    path: /api/market/analysis
    method: GET
    data_selector: data
    params: {}
- name: vehicle_listings
  endpoint:
    path: /api/v1/vehicle_listings
    method: GET
    data_selector: data
    params: {}
- name: market_insights
  endpoint:
    path: /api/v1/market_insights
    method: GET
    data_selector: data
    params: {}
- name: encar_vehicles
  endpoint:
    path: /encar/vehicles
    method: GET
    data_selector: data
    params:
      limit: '50'
- name: encar_vehicle_details
  endpoint:
    path: /encar/vehicles/{id}
    method: GET
    data_selector: data
    params: {}
- name: che168_vehicles
  endpoint:
    path: /che168/vehicles
    method: GET
    data_selector: data
    params:
      limit: '50'
- name: che168_vehicle_details
  endpoint:
    path: /che168/vehicles/{id}
    method: GET
    data_selector: data
    params: {}
- name: vehicles
  endpoint:
    path: /api/v1/vehicles
    method: GET
    data_selector: data.vehicles
- name: encar_vehicles
  endpoint:
    path: /encar/vehicles
    method: GET
    params:
      limit: '50'
- name: encar_vehicle_details
  endpoint:
    path: /encar/vehicles/{id}
    method: GET
- name: che168_vehicles
  endpoint:
    path: /che168/vehicles
    method: GET
    params:
      limit: '50'
- name: che168_vehicle_details
  endpoint:
    path: /che168/vehicles/{id}
    method: GET
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: data.vehicles
    params:
      limit: 100
      offset: null
- name: vehicle
  endpoint:
    path: /vehicle/[id]
    method: GET
    data_selector: data
    params: {}
- name: dealers
  endpoint:
    path: /dealers
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: null
- name: dealer
  endpoint:
    path: /dealer/[id]
    method: GET
    data_selector: data
    params: {}
- name: brands
  endpoint:
    path: /brands
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /models/[brand]
    method: GET
    data_selector: data
    params: {}
- name: price_history
  endpoint:
    path: /price-history/[id]
    method: GET
    data_selector: data
    params: {}
- name: market_stats
  endpoint:
    path: /market-stats
    method: GET
    data_selector: data
    params: {}
- name: market_analysis
  endpoint:
    path: /market_analysis
    method: GET
    data_selector: data
    params: {}
- name: price_trend_analysis
  endpoint:
    path: /price_trend_analysis
    method: GET
    data_selector: data
    params: {}
- name: inventory_analysis
  endpoint:
    path: /inventory_analysis
    method: GET
    data_selector: data
    params: {}
- name: demand_forecasting
  endpoint:
    path: /demand_forecasting
    method: GET
    data_selector: data
    params: {}
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: data.vehicles
    params:
      limit: '100'
      offset: '0'
- name: vehicle
  endpoint:
    path: /vehicle/[id]
    method: GET
    data_selector: data
    params: {}
- name: dealers
  endpoint:
    path: /dealers
    method: GET
    data_selector: data
    params:
      limit: '100'
      offset: '0'
- name: dealer
  endpoint:
    path: /dealer/[id]
    method: GET
    data_selector: data
    params: {}
- name: brands
  endpoint:
    path: /brands
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /models/[brand]
    method: GET
    data_selector: data
    params: {}
- name: price_history
  endpoint:
    path: /price-history/[id]
    method: GET
    data_selector: data
    params: {}
- name: market_stats
  endpoint:
    path: /market-stats
    method: GET
    data_selector: data
    params: {}
- name: vehicle_listings
  endpoint:
    path: /v1/parsers/encar.com/extract
    method: POST
    data_selector: data.vehicles
    params:
      filters:
        make: Hyundai
        yearFrom: 2020
        priceMax: 40000000
      options:
        limit: 10
        dataFields:
        - price
        - specifications
        - location
- name: vehicles
  endpoint:
    path: /api/vehicles
    method: GET
    data_selector: data.vehicles
    params: {}
- name: market_analysis
  endpoint:
    path: /market/analysis
    method: GET
    data_selector: results
- name: price_trends
  endpoint:
    path: /price/trends
    method: GET
    data_selector: trends
- name: inventory_analysis
  endpoint:
    path: /inventory/analysis
    method: GET
    data_selector: inventory
- name: demand_forecast
  endpoint:
    path: /demand/forecast
    method: GET
    data_selector: forecast
- name: vehicles
  endpoint:
    path: /v1/parsers/encar.com/extract
    method: POST
    data_selector: data.vehicles
    params: {}
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: data.vehicles
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: vehicles
    params:
      limit: 100
- name: vehicle
  endpoint:
    path: /vehicle/[id]
    method: GET
    data_selector: data
- name: dealers
  endpoint:
    path: /dealers
    method: GET
    data_selector: dealers
- name: dealer
  endpoint:
    path: /dealer/[id]
    method: GET
    data_selector: data
- name: brands
  endpoint:
    path: /brands
    method: GET
    data_selector: data
- name: models
  endpoint:
    path: /models/[brand]
    method: GET
    data_selector: data
- name: price_history
  endpoint:
    path: /price-history/[id]
    method: GET
    data_selector: data
- name: market_stats
  endpoint:
    path: /market-stats
    method: GET
    data_selector: data
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: data.vehicles
    params:
      limit: '100'
      offset: ''
- name: vehicle
  endpoint:
    path: /vehicle/[id]
    method: GET
    data_selector: data
    params: {}
- name: dealers
  endpoint:
    path: /dealers
    method: GET
    data_selector: data
    params:
      limit: '100'
      offset: ''
- name: dealer
  endpoint:
    path: /dealer/[id]
    method: GET
    data_selector: data
    params: {}
- name: brands
  endpoint:
    path: /brands
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /models/[brand]
    method: GET
    data_selector: data
    params: {}
- name: price_history
  endpoint:
    path: /price-history/[id]
    method: GET
    data_selector: data
    params: {}
- name: market_stats
  endpoint:
    path: /market-stats
    method: GET
    data_selector: data
    params: {}
- name: vehicle_listings
  endpoint:
    path: /v1/parsers/che168.com/extract
    method: POST
    data_selector: data.vehicles
    params: {}
- name: vehicle_data
  endpoint:
    path: /vehicles
    method: GET
    data_selector: records
- name: market_analysis
  endpoint:
    path: /market
    method: GET
    data_selector: market_stats
- name: vehicle_listings
  endpoint:
    path: /v1/parsers/che168.com/extract
    method: POST
    data_selector: data.vehicles
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data.listings
    params:
      limit: '20'
- name: listing
  endpoint:
    path: /listing/{id}
    method: GET
    data_selector: data
    params: {}
- name: dealer
  endpoint:
    path: /dealer/{id}
    method: GET
    data_selector: data
    params: {}
- name: market_data
  endpoint:
    path: /market-data
    method: GET
    data_selector: data
    params: {}
- name: price_history
  endpoint:
    path: /price-history/{id}
    method: GET
    data_selector: data
    params: {}
- name: brands
  endpoint:
    path: /brands
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /models/{brand}
    method: GET
    data_selector: data
    params: {}
- name: market_stats
  endpoint:
    path: /market_stats
    method: GET
    data_selector: market_stats
    params: {}
- name: vehicle_information
  endpoint:
    path: /vehicle_information
    method: GET
    data_selector: vehicle_information
    params: {}
- name: market_intelligence
  endpoint:
    path: /market_intelligence
    method: GET
    data_selector: market_intelligence
    params: {}
- name: dealer_information
  endpoint:
    path: /dealer_information
    method: GET
    data_selector: dealer_information
    params: {}
- name: brands
  endpoint:
    path: /brands
    method: GET
    data_selector: data
- name: models
  endpoint:
    path: /models/{brand}
    method: GET
    data_selector: data
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: listings
    params:
      limit: '20'
- name: listing
  endpoint:
    path: /listing/{id}
    method: GET
    data_selector: data
- name: dealer
  endpoint:
    path: /dealer/{id}
    method: GET
    data_selector: data
- name: market-data
  endpoint:
    path: /market-data
    method: GET
    data_selector: data
- name: price-history
  endpoint:
    path: /price-history/{id}
    method: GET
    data_selector: data
- name: brands
  endpoint:
    path: /brands
    method: GET
    data_selector: brands
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: listings
    params:
      limit: '20'
- name: listing
  endpoint:
    path: /listing/{id}
    method: GET
    data_selector: data
- name: dealer
  endpoint:
    path: /dealer/{id}
    method: GET
    data_selector: data
- name: market_data
  endpoint:
    path: /market-data
    method: GET
    data_selector: data
- name: price_history
  endpoint:
    path: /price-history/{id}
    method: GET
    data_selector: data
- name: models
  endpoint:
    path: /auto-ru/models/{brand}
    method: GET
    data_selector: data
    params: {}
- name: brands
  endpoint:
    path: /v1/auto-ru/brands
    method: GET
    data_selector: data
- name: models
  endpoint:
    path: /v1/auto-ru/models/{brand}
    method: GET
    data_selector: data
- name: market_data
  endpoint:
    path: /market-data
    method: GET
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: listings
    params: {}
- name: listing_details
  endpoint:
    path: /listing/{id}
    method: GET
    data_selector: listing
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: listings
    params:
      limit: 20
- name: listing
  endpoint:
    path: /listing/{id}
    method: GET
    data_selector: data
- name: dealer
  endpoint:
    path: /dealer/{id}
    method: GET
    data_selector: data
- name: market-data
  endpoint:
    path: /market-data
    method: GET
    data_selector: data
- name: price-history
  endpoint:
    path: /price-history/{id}
    method: GET
    data_selector: data
- name: brands
  endpoint:
    path: /brands
    method: GET
    data_selector: data
- name: models
  endpoint:
    path: /models/{brand}
    method: GET
    data_selector: data
- name: models
  endpoint:
    path: /v1/auto-ru/models/{brand}
    method: GET
    data_selector: data
    params: {}
- name: vehicle_data
  endpoint:
    path: /vehicles
    method: GET
    data_selector: listings
- name: market_analysis
  endpoint:
    path: /market
    method: GET
    data_selector: analysis
- name: market_data
  endpoint:
    path: /market-data
    method: GET
- name: vehicle_data
  endpoint:
    path: /api/vehicle_data
    method: GET
    data_selector: data
    params: {}
- name: market_data
  endpoint:
    path: /market_data
    method: GET
    data_selector: data
    params: {}
- name: vehicle_category_analysis
  endpoint:
    path: /vehicle_category
    method: GET
    data_selector: data
    params: {}
- name: pricing_trends
  endpoint:
    path: /pricing_trends
    method: GET
    data_selector: data
    params: {}
- name: geographic_market_analysis
  endpoint:
    path: /geographic_analysis
    method: GET
    data_selector: data
    params: {}
- name: demand_analysis
  endpoint:
    path: /demand_analysis
    method: GET
    data_selector: data
    params: {}
- name: vehicle_data
  endpoint:
    path: /vehicles
    method: GET
    data_selector: records
- name: market_data
  endpoint:
    path: /market
    method: GET
    data_selector: market_records
- name: vehicle_listings
  endpoint:
    path: /api/v1/vehicle_listings
    method: GET
    data_selector: listings
    params: {}
- name: active_dealers
  endpoint:
    path: /api/v1/active_dealers
    method: GET
    data_selector: dealers
    params: {}
- name: vehicle_data
  endpoint:
    path: /parsers/auto.ru/api-reference
    method: GET
- name: brands
  endpoint:
    path: /v1/auto-ru/brands
    method: GET
    data_selector: brands
- name: market_data
  endpoint:
    path: /v1/auto-ru/market-data
    method: GET
    data_selector: market_data
- name: market_data
  endpoint:
    path: /market_data
    method: GET
    data_selector: market_data
    params: {}
- name: vehicle_category_analysis
  endpoint:
    path: /vehicle_category_analysis
    method: GET
    data_selector: vehicle_category_data
    params: {}
- name: pricing_trends
  endpoint:
    path: /pricing_trends
    method: GET
    data_selector: price_analysis
    params: {}
- name: geographic_market_analysis
  endpoint:
    path: /geographic_market_analysis
    method: GET
    data_selector: regional_data
    params: {}
- name: demand_analysis
  endpoint:
    path: /demand_analysis
    method: GET
    data_selector: consumer_preferences
    params: {}
- name: brands
  endpoint:
    path: /auto-ru/brands
    method: GET
    data_selector: brands
- name: search
  endpoint:
    path: /auto-ru/search
    method: GET
    data_selector: listings
- name: listing
  endpoint:
    path: /auto-ru/listing
    method: GET
    data_selector: listing
- name: market_data
  endpoint:
    path: /auto-ru/market-data
    method: GET
    data_selector: market_overview
- name: brands
  endpoint:
    path: /v1/auto-ru/brands
    method: GET
    data_selector: brands
- name: market_data
  endpoint:
    path: /v1/auto-ru/market-data
    method: GET
    data_selector: market_data
- name: brands
  endpoint:
    path: /auto-ru/brands
    method: GET
- name: search
  endpoint:
    path: /auto-ru/search
    method: GET
- name: listing
  endpoint:
    path: /auto-ru/listing
    method: GET
- name: market_data
  endpoint:
    path: /auto-ru/market-data
    method: GET
- name: brands
  endpoint:
    path: /auto-ru/brands
    method: GET
    data_selector: brands
- name: search
  endpoint:
    path: /auto-ru/search
    method: GET
    data_selector: listings
- name: listing
  endpoint:
    path: /auto-ru/listing
    method: GET
    data_selector: listing
- name: market_data
  endpoint:
    path: /auto-ru/market-data
    method: GET
    data_selector: market_overview
- name: brands
  endpoint:
    path: /auto-ru/brands
    method: GET
    data_selector: brands
- name: search
  endpoint:
    path: /auto-ru/search
    method: GET
    data_selector: listings
- name: listing
  endpoint:
    path: /auto-ru/listing
    method: GET
    data_selector: listing
- name: market_data
  endpoint:
    path: /auto-ru/market-data
    method: GET
    data_selector: market_overview
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params: {}
- name: brands
  endpoint:
    path: /auto-ru/brands
    method: GET
- name: search
  endpoint:
    path: /auto-ru/search
    method: GET
- name: listing
  endpoint:
    path: /auto-ru/listing
    method: GET
- name: market_data
  endpoint:
    path: /auto-ru/market-data
    method: GET
- name: brands
  endpoint:
    path: /auto-ru/brands
    method: GET
- name: search
  endpoint:
    path: /auto-ru/search
    method: GET
- name: listing
  endpoint:
    path: /auto-ru/listing
    method: GET
- name: market_data
  endpoint:
    path: /auto-ru/market-data
    method: GET
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params:
      query: Ford F-150
      max_price: 50000
      location: Texas
      fuel_type: gasoline
      transmission: automatic
      year_from: 2020
      limit: 20
      sort_by: price
      sort_order: asc
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data.statistics
    params:
      brand: Ford
      model: F-150
      location: Texas
      period: 90d
- name: vehicle_search
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data
    params: {}
- name: get_vehicle_details
  endpoint:
    path: /vehicle/${vehicleId}
    method: GET
    data_selector: data
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data
    params: {}
- name: vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params:
      query: Ford F-150
      max_price: 50000
      location: Texas
      fuel_type: gasoline
      transmission: automatic
      year_from: 2020
      limit: 20
      sort_by: price
      sort_order: asc
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{id}
    method: GET
    data_selector: data.vehicle
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data.statistics
    params:
      brand: Ford
      model: F-150
      location: Texas
      period: 90d
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data
    params: {}
- name: get_vehicle_details
  endpoint:
    path: /vehicle/${vehicleId}
    method: GET
    data_selector: data
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data
    params: {}
- name: market_analysis
  endpoint:
    path: /parsers/cars.com/market-analysis
    method: GET
    data_selector: market_data
    params: {}
- name: vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
- name: search_vehicles
  endpoint:
    path: /v1/parsers/cars.com/search
    method: POST
    data_selector: data.listings
    params: {}
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params: {}
- name: search_vehicles
  endpoint:
    path: /v1/parsers/cars.com/search
    method: POST
    data_selector: data.listings
    params:
      query: Ford F-150
      max_price: 50000
      location: Texas
      fuel_type: gasoline
      transmission: automatic
      year_from: 2020
      limit: 10
- name: search_vehicle_listings
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params: {}
- name: extract_vehicle_details
  endpoint:
    path: /extract/{vehicle_id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: data.statistics
    params: {}
- name: search_dealers
  endpoint:
    path: /dealers/search
    method: POST
    data_selector: data.dealers
    params: {}
- name: batch_search
  endpoint:
    path: /batch-search
    method: POST
    data_selector: data
    params: {}
- name: real_time_monitoring
  endpoint:
    path: /monitor
    method: POST
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data
- name: market_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: data
- name: search_vehicle_listings
  endpoint:
    path: /search
    method: POST
- name: extract_vehicle_details
  endpoint:
    path: /extract/{vehicle_id}
    method: GET
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: POST
- name: search_dealers
  endpoint:
    path: /dealers/search
    method: POST
- name: batch_search
  endpoint:
    path: /batch-search
    method: POST
- name: real_time_monitoring
  endpoint:
    path: /monitor
    method: POST
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: data
    params: {}
- name: search_vehicle_listings
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params:
      limit: number
      page: number
- name: extract_vehicle_details
  endpoint:
    path: /extract/{vehicle_id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: data.statistics
    params: {}
- name: search_dealers
  endpoint:
    path: /dealers/search
    method: POST
    data_selector: data.dealers
    params: {}
- name: batch_search
  endpoint:
    path: /batch-search
    method: POST
    data_selector: data
    params: {}
- name: monitor
  endpoint:
    path: /monitor
    method: POST
    data_selector: data
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: data
    params: {}
- name: search_vehicle_listings
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params:
      limit: number
      page: number
- name: extract_vehicle_details
  endpoint:
    path: /extract/{vehicle_id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: data.statistics
    params: {}
- name: search_dealers
  endpoint:
    path: /dealers/search
    method: POST
    data_selector: data.dealers
    params:
      limit: number
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: ''
    params: {}
- name: get_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: ''
    params: {}
- name: get_vehicle_details
  endpoint:
    path: /extract/{vehicle_id}
    method: GET
    data_selector: ''
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: data
    params: {}
- name: vehicle_details
  endpoint:
    path: /api/vehicles
    method: GET
    data_selector: vehicles
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: null
    params: {}
- name: get_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: null
    params: {}
- name: get_vehicle_details
  endpoint:
    path: /extract/{vehicle_id}
    method: GET
    data_selector: null
    params: {}
- name: vehicles
  endpoint:
    path: /api/v1/vehicles
    method: GET
    data_selector: data
- name: search
  endpoint:
    path: /search
    method: GET
- name: extract
  endpoint:
    path: /extract
    method: GET
- name: statistics
  endpoint:
    path: /statistics
    method: GET
- name: dealers
  endpoint:
    path: /dealers
    method: GET
- name: monitor
  endpoint:
    path: /monitor
    method: GET
- name: market_analysis
  endpoint:
    path: /api/v1/market_analysis
    method: GET
    data_selector: data
    params: {}
- name: regional_analysis
  endpoint:
    path: /api/v1/regional_analysis
    method: GET
    data_selector: data
    params: {}
- name: seasonal_patterns
  endpoint:
    path: /api/v1/seasonal_patterns
    method: GET
    data_selector: data
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params: {}
- name: get_vehicle_details
  endpoint:
    path: /extract/{vehicle_id}
    method: GET
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
- name: extract
  endpoint:
    path: /extract
    method: GET
- name: statistics
  endpoint:
    path: /statistics
    method: GET
- name: dealers
  endpoint:
    path: /dealers
    method: GET
- name: monitor
  endpoint:
    path: /monitor
    method: GET
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params: {}
- name: market_statistics
  endpoint:
    path: /market/statistics
    method: GET
    data_selector: data
    params: {}
- name: regional_analysis
  endpoint:
    path: /regional/analysis
    method: GET
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params: {}
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
- name: get_vehicle_details
  endpoint:
    path: /extract/{vehicle_id}
    method: GET
    data_selector: data
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params:
      limit: 50
      offset: 0
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data.statistics
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data
    params: {}
- name: get_vehicle_details
  endpoint:
    path: /vehicle/${vehicleId}
    method: GET
    data_selector: data
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data
    params: {}
- name: vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params:
      limit: 50
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data.statistics
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data
    params: {}
- name: get_vehicle_details
  endpoint:
    path: /vehicle/${vehicleId}
    method: GET
    data_selector: data
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params:
      query: BMW 3er
      max_price: 50000
      location: Berlin
      fuel_type: diesel
      transmission: automatic
      year_from: 2020
      limit: 10
- name: vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params: {}
- name: search_vehicle_listings
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params:
      limit: number
      page: number
- name: extract_vehicle_details
  endpoint:
    path: /extract/{vehicle_id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: data.statistics
    params: {}
- name: search_dealers
  endpoint:
    path: /dealers/search
    method: POST
    data_selector: data.dealers
    params:
      limit: number
- name: vehicle_listings
  endpoint:
    path: /v1/vehicles
    method: GET
    data_selector: listings
    params: {}
- name: dealer_information
  endpoint:
    path: /v1/dealers
    method: GET
    data_selector: dealers
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: data
    params: {}
- name: MarketAnalysis
  endpoint:
    path: /parsers/mobile.de/market-analysis
    method: GET
    data_selector: data
    params: {}
- name: VehicleCategories
  endpoint:
    path: /parsers/mobile.de/vehicle-categories
    method: GET
    data_selector: categories
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params: {}
- name: search_vehicle_listings
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params:
      limit: number
      page: number
- name: extract_vehicle_details
  endpoint:
    path: /extract/{vehicle_id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: data.statistics
    params: {}
- name: search_dealers
  endpoint:
    path: /dealers/search
    method: POST
    data_selector: data.dealers
    params:
      limit: number
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: data
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: ''
    params: {}
- name: get_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: ''
    params: {}
- name: get_vehicle_details
  endpoint:
    path: /extract/{vehicle_id}
    method: GET
    data_selector: ''
    params: {}
- name: search_vehicle_listings
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params:
      limit: number
      page: number
- name: extract_vehicle_details
  endpoint:
    path: /extract/{vehicle_id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: data.statistics
    params: {}
- name: search_dealers
  endpoint:
    path: /dealers/search
    method: POST
    data_selector: data.dealers
    params:
      limit: number
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: data
    params: {}
- name: vehicle
  endpoint:
    path: /parsers/autotrader.com/api-reference
    method: GET
    data_selector: data
- name: search_vehicle_listings
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params:
      limit: number
      page: number
- name: extract_vehicle_details
  endpoint:
    path: /extract/{vehicle_id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: data.statistics
    params: {}
- name: search_dealers
  endpoint:
    path: /dealers/search
    method: POST
    data_selector: data.dealers
    params: {}
- name: market_statistics
  endpoint:
    path: /api/market/statistics
    method: GET
    data_selector: data
    params: {}
- name: regional_analysis
  endpoint:
    path: /api/regional/analysis
    method: GET
    data_selector: data
    params: {}
- name: seasonal_patterns
  endpoint:
    path: /api/seasonal/patterns
    method: GET
    data_selector: data
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data
    params: {}
- name: market_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: data
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: ''
    params: {}
- name: get_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: ''
    params: {}
- name: get_vehicle_details
  endpoint:
    path: /extract/{vehicle_id}
    method: GET
    data_selector: ''
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
- name: vehicle_search
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
- name: vehicle_listings
  endpoint:
    path: /vehicles
    method: GET
    data_selector: listings
    params: {}
- name: seller_information
  endpoint:
    path: /sellers
    method: GET
    data_selector: sellers
    params: {}
- name: market_data
  endpoint:
    path: /market/statistics
    method: GET
    data_selector: data
    params: {}
- name: regional_analysis
  endpoint:
    path: /regional/analysis
    method: GET
    data_selector: data
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data.listings
    params:
      limit: '20'
- name: listing
  endpoint:
    path: /listing/{id}
    method: GET
    data_selector: data
    params: {}
- name: seller
  endpoint:
    path: /seller/{id}
    method: GET
    data_selector: data
    params: {}
- name: market_data
  endpoint:
    path: /market-data
    method: GET
    data_selector: data
    params: {}
- name: price_history
  endpoint:
    path: /price-history/{id}
    method: GET
    data_selector: data
    params: {}
- name: brands
  endpoint:
    path: /brands
    method: GET
    data_selector: data
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
- name: models
  endpoint:
    path: /v1/avito-ru/models/{brand}
    method: GET
    data_selector: data
    params:
      brand: string
- name: vehicle_search
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: listings
    params:
      limit: '20'
- name: listing
  endpoint:
    path: /listing/{id}
    method: GET
    data_selector: data
- name: seller
  endpoint:
    path: /seller/{id}
    method: GET
    data_selector: data
- name: market_data
  endpoint:
    path: /market-data
    method: GET
    data_selector: data
- name: price_history
  endpoint:
    path: /price-history/{id}
    method: GET
    data_selector: data
- name: brands
  endpoint:
    path: /brands
    method: GET
    data_selector: data
- name: models
  endpoint:
    path: /models/{brand}
    method: GET
    data_selector: data
- name: market_stats
  endpoint:
    path: /parsers/avito.ru/market_stats
    method: GET
    data_selector: market_stats
    params: {}
- name: vehicle_data
  endpoint:
    path: /parsers/avito.ru/vehicle_data
    method: GET
    data_selector: vehicleData
    params: {}
- name: price_analysis
  endpoint:
    path: /parsers/avito.ru/price_analysis
    method: GET
    data_selector: priceAnalysis
    params: {}
- name: models
  endpoint:
    path: /v1/avito-ru/models/lada
    method: GET
    data_selector: data
- name: market_data
  endpoint:
    path: /market-data
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
- name: listing_details
  endpoint:
    path: /listing/{id}
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: listings
    params:
      limit: 20
- name: listing
  endpoint:
    path: /listing/{id}
    method: GET
    data_selector: data
- name: seller
  endpoint:
    path: /seller/{id}
    method: GET
    data_selector: data
- name: market_data
  endpoint:
    path: /market-data
    method: GET
    data_selector: data
- name: price_history
  endpoint:
    path: /price-history/{id}
    method: GET
    data_selector: data
- name: brands
  endpoint:
    path: /brands
    method: GET
    data_selector: data
- name: models
  endpoint:
    path: /avito-ru/models/{brand}
    method: GET
    data_selector: data
    params:
      brand: string
- name: vehicle_data
  endpoint:
    path: /api/v1/vehicles
    method: GET
    data_selector: listings
    params:
      brand: Lada
      model: Vesta
      year_from: 2020
      price_max: 1500000
      region: Московская область
- name: location_data
  endpoint:
    path: /api/v1/locations
    method: GET
    data_selector: regions
    params:
      region: Московская область
      city: Москва
      district: Центральный
      coordinates:
        latitude: 55.7558
        longitude: 37.6176
- name: vehicle_data
  endpoint:
    path: /vehicles
    method: GET
    data_selector: listings
- name: search
  endpoint:
    path: /search
    method: GET
- name: listing
  endpoint:
    path: /listing/{id}
    method: GET
- name: seller
  endpoint:
    path: /seller/{id}
    method: GET
- name: market_data
  endpoint:
    path: /market-data
    method: GET
- name: price_history
  endpoint:
    path: /price-history/{id}
    method: GET
- name: brands
  endpoint:
    path: /brands
    method: GET
- name: models
  endpoint:
    path: /models/{brand}
    method: GET
- name: market_data
  endpoint:
    path: /market/data
    method: GET
    data_selector: market_data
    params: {}
- name: pricing_trends
  endpoint:
    path: /pricing/trends
    method: GET
    data_selector: price_analysis
    params: {}
- name: consumer_preferences
  endpoint:
    path: /consumer/preferences
    method: GET
    data_selector: consumer_preferences
    params: {}
- name: models
  endpoint:
    path: /v1/avito-ru/models/{brand}
    method: GET
    data_selector: data
- name: vehicle_listings
  endpoint:
    path: /parsers/avito.ru/vehicle_listings
    method: GET
    data_selector: listings
- name: active_users
  endpoint:
    path: /parsers/avito.ru/active_users
    method: GET
    data_selector: users
- name: price_monitoring
  endpoint:
    path: /parsers/avito.ru/price_monitoring
    method: GET
    data_selector: prices
- name: trend_analysis
  endpoint:
    path: /parsers/avito.ru/trend_analysis
    method: GET
    data_selector: trends
- name: geographic_distribution
  endpoint:
    path: /parsers/avito.ru/geographic_distribution
    method: GET
    data_selector: geographic_data
- name: market_data
  endpoint:
    path: /market-data
    method: GET
    data_selector: marketData
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: listings
- name: listing_details
  endpoint:
    path: /listing/{id}
    method: GET
    data_selector: listing
- name: brands
  endpoint:
    path: /v1/avito-ru/brands
    method: GET
    data_selector: brands
- name: market_data
  endpoint:
    path: /v1/avito-ru/market-data
    method: GET
    data_selector: market_data
- name: vehicle_data
  endpoint:
    path: /api/vehicle_data
    method: GET
    data_selector: records
- name: brands
  endpoint:
    path: /v1/avito-ru/brands
    method: GET
- name: search
  endpoint:
    path: /v1/avito-ru/search
    method: GET
- name: listing
  endpoint:
    path: /v1/avito-ru/get_listing
    method: GET
- name: market_data
  endpoint:
    path: /v1/avito-ru/get_market_data
    method: GET
- name: price_history
  endpoint:
    path: /v1/avito-ru/get_price_history
    method: GET
- name: vehicle_data
  endpoint:
    path: /vehicles/data
    method: GET
    data_selector: records
- name: brands
  endpoint:
    path: /avito-ru/brands
    method: GET
    data_selector: brands
- name: vehicles
  endpoint:
    path: /avito-ru/search
    method: GET
    data_selector: listings
- name: listing
  endpoint:
    path: /avito-ru/get_listing
    method: GET
    data_selector: listing
- name: market_data
  endpoint:
    path: /avito-ru/get_market_data
    method: GET
    data_selector: market_overview
- name: price_history
  endpoint:
    path: /avito-ru/get_price_history
    method: GET
    data_selector: price_history
- name: market_data
  endpoint:
    path: /parsers/avito.ru/market-data
    method: GET
    data_selector: market_data
    params: {}
- name: consumer_preferences
  endpoint:
    path: /parsers/avito.ru/consumer-preferences
    method: GET
    data_selector: consumer_preferences
    params: {}
- name: brands
  endpoint:
    path: /brands
    method: GET
    data_selector: records
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: records
- name: market_data
  endpoint:
    path: /market_data
    method: GET
    data_selector: market_overview
- name: vehicle_listings
  endpoint:
    path: /data/vehicle_listings
    method: GET
    data_selector: listings
- name: active_users
  endpoint:
    path: /data/active_users
    method: GET
    data_selector: users
- name: price_monitoring
  endpoint:
    path: /data/price_monitoring
    method: GET
    data_selector: prices
- name: historical_trends
  endpoint:
    path: /data/historical_trends
    method: GET
    data_selector: trends
- name: geographic_distribution
  endpoint:
    path: /data/geographic_distribution
    method: GET
    data_selector: distribution
- name: brands
  endpoint:
    path: /v1/avito-ru/brands
    method: GET
    data_selector: brands
- name: market_data
  endpoint:
    path: /v1/avito-ru/market-data
    method: GET
    data_selector: market_data
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      limit: 10
      page: 1
- name: advanced_search_vehicles
  endpoint:
    path: /search/advanced
    method: POST
    data_selector: filters
- name: global_search_vehicles
  endpoint:
    path: /search/global
    method: GET
    data_selector: results
- name: vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: ''
    params: {}
- name: market_trends
  endpoint:
    path: /market/trends
    method: GET
    data_selector: trends
- name: popular_vehicles
  endpoint:
    path: /market/popular
    method: GET
    data_selector: popular_vehicles
- name: available_makes
  endpoint:
    path: /makes
    method: GET
    data_selector: makes
- name: available_models
  endpoint:
    path: /makes/{make}/models
    method: GET
    data_selector: models
- name: supported_countries
  endpoint:
    path: /locations
    method: GET
    data_selector: countries
- name: brands
  endpoint:
    path: /avito-ru/brands
    method: GET
    data_selector: brands
- name: search
  endpoint:
    path: /avito-ru/search
    method: GET
    data_selector: listings
- name: listing
  endpoint:
    path: /avito-ru/get_listing
    method: GET
    data_selector: listing
- name: market_data
  endpoint:
    path: /avito-ru/get_market_data
    method: GET
    data_selector: market_data
- name: brands
  endpoint:
    path: /brands
    method: GET
    data_selector: brands
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: listings
- name: listing
  endpoint:
    path: /listing
    method: GET
    data_selector: listing
- name: market_data
  endpoint:
    path: /market_data
    method: GET
    data_selector: market_data
- name: brands
  endpoint:
    path: /brands
    method: GET
    data_selector: brands
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: listings
- name: market_data
  endpoint:
    path: /market_data
    method: GET
    data_selector: market_overview
- name: listing
  endpoint:
    path: /listing
    method: GET
    data_selector: listing
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: search_advanced
  endpoint:
    path: /search/advanced
    method: POST
    data_selector: results
- name: search_global
  endpoint:
    path: /search/global
    method: GET
    data_selector: results
- name: vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: results
- name: market_trends
  endpoint:
    path: /market/trends
    method: GET
    data_selector: trends
- name: market_popular
  endpoint:
    path: /market/popular
    method: GET
    data_selector: popular_vehicles
- name: available_makes
  endpoint:
    path: /makes
    method: GET
    data_selector: makes
- name: available_models
  endpoint:
    path: /makes/{make}/models
    method: GET
    data_selector: models
- name: supported_countries
  endpoint:
    path: /locations
    method: GET
    data_selector: countries
- name: supported_languages
  endpoint:
    path: /languages
    method: GET
    data_selector: languages
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: vehicles
    params: {}
- name: get_vehicle
  endpoint:
    path: /vehicle/{vehicleId}
    method: GET
    data_selector: vehicle
    params: {}
- name: get_market_trends
  endpoint:
    path: /market/trends
    method: GET
    data_selector: trends
    params: {}
- name: search_global
  endpoint:
    path: /search/global
    method: GET
    data_selector: global_search
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: search_advanced
  endpoint:
    path: /search/advanced
    method: POST
    data_selector: ''
- name: search_global
  endpoint:
    path: /search/global
    method: GET
    data_selector: ''
- name: vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: ''
- name: market_trends
  endpoint:
    path: /market/trends
    method: GET
    data_selector: ''
- name: market_popular
  endpoint:
    path: /market/popular
    method: GET
    data_selector: ''
- name: available_makes
  endpoint:
    path: /makes
    method: GET
    data_selector: ''
- name: available_models
  endpoint:
    path: /makes/{make}/models
    method: GET
    data_selector: ''
- name: supported_countries
  endpoint:
    path: /locations
    method: GET
    data_selector: ''
- name: vehicle_information
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params:
      country: IN
- name: vehicle_information
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params:
      limit: '100'
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      limit: 10
      page: 1
- name: vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: id
- name: market_trends
  endpoint:
    path: /market/trends
    method: GET
    data_selector: trends
- name: popular_vehicles
  endpoint:
    path: /market/popular
    method: GET
- name: available_makes
  endpoint:
    path: /makes
    method: GET
- name: available_models
  endpoint:
    path: /makes/{make}/models
    method: GET
- name: supported_countries
  endpoint:
    path: /locations
    method: GET
- name: supported_languages
  endpoint:
    path: /languages
    method: GET
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: vehicles
    params: {}
- name: get_vehicle
  endpoint:
    path: /vehicle/{vehicleId}
    method: GET
    data_selector: vehicle
    params: {}
- name: get_market_trends
  endpoint:
    path: /market/trends
    method: GET
    data_selector: trends
    params: {}
- name: search_global
  endpoint:
    path: /search/global
    method: GET
    data_selector: global
    params: {}
- name: market_insights
  endpoint:
    path: /market/insights
    method: GET
    data_selector: data
- name: vehicle_segments
  endpoint:
    path: /vehicle/segments
    method: GET
    data_selector: data
- name: vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params:
      country: IN
- name: vehicle_search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      limit: 10
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      country: IN
      make: Toyota
      model: Camry
      limit: 10
- name: vehicle_information
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      limit: 10
- name: vehicle_listings
  endpoint:
    path: /api/vehicle_listings
    method: GET
    data_selector: listings
- name: Market Insights
  endpoint:
    path: /parsers/olx.com/api-reference
    method: GET
    data_selector: data
    params: {}
- name: Competitive Intelligence
  endpoint:
    path: /parsers/olx.com/faq
    method: GET
    data_selector: data
    params: {}
- name: status
  endpoint:
    path: /status
    method: GET
    data_selector: status
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      limit: '10'
      page: '1'
- name: vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: ''
    params: {}
- name: market_trends
  endpoint:
    path: /market/trends
    method: GET
    data_selector: ''
    params: {}
- name: popular_vehicles
  endpoint:
    path: /market/popular
    method: GET
    data_selector: popular_vehicles
    params:
      limit: '10'
- name: available_makes
  endpoint:
    path: /makes
    method: GET
    data_selector: makes
    params: {}
- name: available_models
  endpoint:
    path: /makes/{make}/models
    method: GET
    data_selector: models
    params: {}
- name: supported_countries
  endpoint:
    path: /locations
    method: GET
    data_selector: countries
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      make: Toyota
      model: Camry
      country: IN
      limit: 10
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
- name: get_vehicle
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
- name: get_market_trends
  endpoint:
    path: /market/trends
    method: GET
- name: vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      limit: 10
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      limit: 10
      page: 1
- name: vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: id
    params: {}
- name: market_trends
  endpoint:
    path: /market/trends
    method: GET
    data_selector: trends
    params: {}
- name: market_popular
  endpoint:
    path: /market/popular
    method: GET
    data_selector: popular_vehicles
    params:
      limit: 10
- name: available_makes
  endpoint:
    path: /makes
    method: GET
    data_selector: makes
    params: {}
- name: available_models
  endpoint:
    path: /makes/{make}/models
    method: GET
    data_selector: models
    params: {}
- name: supported_countries
  endpoint:
    path: /locations
    method: GET
    data_selector: countries
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: response
    params: {}
- name: get_vehicle
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: response
    params: {}
- name: get_market_trends
  endpoint:
    path: /market/trends
    method: GET
    data_selector: response
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: id
- name: market_trends
  endpoint:
    path: /market/trends
    method: GET
- name: popular_vehicles
  endpoint:
    path: /market/popular
    method: GET
- name: available_makes
  endpoint:
    path: /makes
    method: GET
- name: available_models
  endpoint:
    path: /makes/{make}/models
    method: GET
- name: supported_countries
  endpoint:
    path: /locations
    method: GET
- name: searchVehicles
  endpoint:
    path: /search
    method: GET
    data_selector: vehicles
    params: {}
- name: getVehicle
  endpoint:
    path: /vehicle/${vehicleId}
    method: GET
    data_selector: vehicle
    params: {}
- name: getMarketTrends
  endpoint:
    path: /market/trends
    method: GET
    data_selector: trends
    params: {}
- name: vehicle_information
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params:
      country: UAE
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      limit: 10
      page: 1
- name: vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: ''
    params: {}
- name: market_trends
  endpoint:
    path: /market/trends
    method: GET
    data_selector: ''
    params: {}
- name: popular_vehicles
  endpoint:
    path: /market/popular
    method: GET
    data_selector: ''
    params: {}
- name: available_makes
  endpoint:
    path: /makes
    method: GET
    data_selector: ''
    params: {}
- name: available_models
  endpoint:
    path: /makes/{make}/models
    method: GET
    data_selector: ''
    params: {}
- name: supported_countries
  endpoint:
    path: /locations
    method: GET
    data_selector: ''
    params: {}
- name: vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params:
      country: UAE
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: response
    params: {}
- name: get_vehicle
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: response
    params: {}
- name: get_market_trends
  endpoint:
    path: /market/trends
    method: GET
    data_selector: response
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: response
    params: {}
- name: get_vehicle
  endpoint:
    path: /vehicle/{vehicleId}
    method: GET
    data_selector: response
    params: {}
- name: get_market_trends
  endpoint:
    path: /market/trends
    method: GET
    data_selector: response
    params: {}
- name: vehicle_information
  endpoint:
    path: /api/vehicle-information
    method: GET
    data_selector: data
    params: {}
- name: pricing
  endpoint:
    path: /api/pricing
    method: GET
    data_selector: data
    params: {}
- name: media
  endpoint:
    path: /api/media
    method: GET
    data_selector: data
    params: {}
- name: market_analysis
  endpoint:
    path: /parsers/dubizzle.com/api-reference
    method: GET
    data_selector: records
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      make: Toyota
      model: Camry
      country: UAE
      limit: 10
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params: {}
- name: market_analysis
  endpoint:
    path: /parsers/dubizzle.com/market-analysis
    method: GET
    data_selector: data
    params: {}
- name: vehicle_segment_analysis
  endpoint:
    path: /parsers/dubizzle.com/vehicle-segment-analysis
    method: GET
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params: {}
- name: vehicle_search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      make: Toyota
      model: Camry
      country: UAE
      limit: 10
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params:
      limit: 50
      offset: 0
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: vehicle_search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      limit: 10
- name: market_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data.statistics
    params: {}
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params: {}
- name: vehicle
  endpoint:
    path: /search
    method: GET
    data_selector: data
- name: vehicle_information
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params:
      limit: 100
- name: search_vehicles
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params:
      limit: 50
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: market_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data.statistics
    params: {}
- name: digital_automotive_market_overview
  endpoint:
    path: /parsers/carvana.com/api-reference
    method: GET
    data_selector: market_data
    params: {}
- name: digital_transformation_trends
  endpoint:
    path: /parsers/carvana.com/market-analysis
    method: GET
    data_selector: transformation_data
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: vehicles
    params:
      make: Ford
      body_type: Truck
      state: Texas
      limit: 10
- name: vehicle_information
  endpoint:
    path: /search
    method: GET
    data_selector: data
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: data.vehicles
    params:
      limit: '25'
      page: '1'
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: get_makes
  endpoint:
    path: /makes
    method: GET
    data_selector: data.makes
    params: {}
- name: get_models
  endpoint:
    path: /makes/{make}/models
    method: GET
    data_selector: data.models
    params: {}
- name: get_states
  endpoint:
    path: /states
    method: GET
    data_selector: data.states
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data.statistics
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: vehicles
    params:
      make: Ford
      body_type: Truck
      state: Texas
      limit: 10
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: data.vehicles
    params:
      limit: '25'
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: get_makes
  endpoint:
    path: /makes
    method: GET
    data_selector: data.makes
    params: {}
- name: get_models
  endpoint:
    path: /makes/{make}/models
    method: GET
    data_selector: data.models
    params: {}
- name: get_states
  endpoint:
    path: /states
    method: GET
    data_selector: data.states
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data.statistics
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: data.vehicles
    params:
      limit: 10
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: get_makes
  endpoint:
    path: /makes
    method: GET
    data_selector: data.makes
    params: {}
- name: get_models
  endpoint:
    path: /makes/{make}/models
    method: GET
    data_selector: data.models
    params: {}
- name: get_states
  endpoint:
    path: /states
    method: GET
    data_selector: data.states
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data.statistics
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    params: {}
- name: get_vehicle
  endpoint:
    path: /vehicle/${vehicleId}
    method: GET
    params: {}
- name: get_makes
  endpoint:
    path: /makes
    method: GET
    params: {}
- name: get_models
  endpoint:
    path: /makes/${make}/models
    method: GET
    params: {}
- name: active_listings
  endpoint:
    path: /api/v1/listings/active
    method: GET
    data_selector: listings
- name: historical_data
  endpoint:
    path: /api/v1/data/historical
    method: GET
    data_selector: historicalRecords
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: vehicles
    params:
      limit: 10
- name: get_vehicle
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: vehicle
    params: {}
- name: get_makes
  endpoint:
    path: /makes
    method: GET
    data_selector: makes
    params: {}
- name: get_models
  endpoint:
    path: /makes/{make}/models
    method: GET
    data_selector: models
    params: {}
- name: get_states
  endpoint:
    path: /states
    method: GET
    data_selector: states
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: statistics
    params: {}
- name: vehicle_information
  endpoint:
    path: /api/v1/vehicles
    method: GET
- name: pricing_data
  endpoint:
    path: /api/v1/pricing
    method: GET
- name: quality_assurance
  endpoint:
    path: /api/v1/quality
    method: GET
- name: seller_service_info
  endpoint:
    path: /api/v1/sellers
    method: GET
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params: {}
- name: get_vehicle
  endpoint:
    path: /vehicle/{vehicleId}
    method: GET
    data_selector: vehicle
    params: {}
- name: get_makes
  endpoint:
    path: /makes
    method: GET
    data_selector: makes
    params: {}
- name: get_models
  endpoint:
    path: /makes/{make}/models
    method: GET
    data_selector: models
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data.vehicles
- name: vehicle
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
- name: active_listings
  endpoint:
    path: /api/v1/listings
    method: GET
    data_selector: listings
- name: historical_data
  endpoint:
    path: /api/v1/historical
    method: GET
    data_selector: historical_data
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data.vehicles
    params:
      limit: '5'
- name: vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: market_data
  endpoint:
    path: /api/market-data
    method: GET
    data_selector: data
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data.vehicles
    params:
      limit: '10'
- name: vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data.vehicles
- name: vehicle
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
- name: vehicles
  endpoint:
    path: /api/vehicles
    method: GET
    data_selector: data.vehicles
    params: {}
- name: search
  endpoint:
    path: /v1/parsers/vroom/search
    method: GET
    data_selector: data.vehicles
    params:
      make: Ford
      body_type: Truck
      state: Texas
      limit: 5
- name: vehicle_details
  endpoint:
    path: /v1/parsers/vroom/vehicle/{id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: extract_vehicle_listings
  endpoint:
    path: /extract
    method: POST
    data_selector: data.vehicles
    params:
      limit: 50
- name: get_market_analysis
  endpoint:
    path: /market-analysis
    method: POST
    data_selector: data
    params: {}
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data.vehicles
- name: vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
- name: inventory_statistics
  endpoint:
    path: /inventory-stats
    method: POST
    data_selector: data
    params:
      region: ''
      make: ''
      period: ''
- name: similar_vehicles
  endpoint:
    path: /similar-vehicles
    method: POST
    data_selector: data
    params:
      vehicle_id: ''
      limit: ''
      criteria: {}
- name: vehicles
  endpoint:
    path: /v1/vehicles
    method: GET
    data_selector: data.vehicles
    params: {}
- name: vehicle_data
  endpoint:
    path: /api/vehicles
    method: GET
    data_selector: results
- name: extract_vehicle_listings
  endpoint:
    path: /extract
    method: POST
    data_selector: data.vehicles
    params:
      limit: 50
- name: get_market_analysis
  endpoint:
    path: /market-analysis
    method: POST
    data_selector: data
    params:
      region: malaysia
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data
- name: inventory_statistics
  endpoint:
    path: /inventory-stats
    method: POST
    data_selector: data
    params:
      region: malaysia
      make: Toyota
      period: 30d
- name: similar_vehicles
  endpoint:
    path: /similar-vehicles
    method: POST
    data_selector: null
    params:
      vehicle_id: carsome_12345
      limit: 10
- name: market_analysis
  endpoint:
    path: /market/analysis
    method: GET
    data_selector: data
    params:
      region: malaysia
      period: 30d
      metrics:
      - price_trends
      - inventory_levels
      - demand_analysis
      make: Toyota
      include_forecast: true
- name: price_trend_analysis
  endpoint:
    path: /price/trends
    method: GET
    data_selector: data
    params:
      region: indonesia
      make: Honda
      period: 90d
      include_forecast: true
      segment: SUV
- name: inventory_analysis
  endpoint:
    path: /inventory/analysis
    method: GET
    data_selector: data
    params:
      region: thailand
      bodyType: Pickup
      priceRange: 50K-200K
      include_trends: true
      include_forecast: true
- name: demand_forecasting
  endpoint:
    path: /demand/forecast
    method: GET
    data_selector: data
    params:
      region: singapore
      vehicle_type: luxury
      period: 12m
      confidence_level: 0.95
- name: vehicle_data
  endpoint:
    path: /api/vehicles
    method: GET
    data_selector: results
- name: vehicles
  endpoint:
    path: /v1/parsers/carsome.com/extract
    method: POST
    data_selector: data.vehicles
- name: vehicles
  endpoint:
    path: /api/v1/vehicles
    method: GET
    data_selector: data.vehicles
- name: vehicle
  endpoint:
    path: /search
    method: GET
    data_selector: vehicles
- name: market_analysis
  endpoint:
    path: /market_analysis
    method: GET
    data_selector: results
    params:
      region: malaysia
      period: 30d
      metrics:
      - price_trends
      - inventory_levels
      - demand_analysis
      make: Toyota
      include_forecast: true
- name: price_trend_analysis
  endpoint:
    path: /price_trend_analysis
    method: GET
    data_selector: results
    params:
      region: indonesia
      make: Honda
      period: 90d
      include_forecast: true
      segment: SUV
- name: inventory_analysis
  endpoint:
    path: /inventory_analysis
    method: GET
    data_selector: results
    params:
      region: thailand
      bodyType: Pickup
      priceRange: 50K-200K
      include_trends: true
      include_forecast: true
- name: demand_forecast
  endpoint:
    path: /demand_forecast
    method: GET
    data_selector: results
    params:
      region: singapore
      vehicle_type: luxury
      period: 12m
      confidence_level: 0.95
- name: vehicles
  endpoint:
    path: /v1/parsers/carsome.com/extract
    method: POST
    data_selector: data.vehicles
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: data.vehicles
    params: {}
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: get_makes
  endpoint:
    path: /makes
    method: GET
    data_selector: data.makes
    params: {}
- name: get_models
  endpoint:
    path: /makes/{make}/models
    method: GET
    data_selector: data.models
    params: {}
- name: get_cities
  endpoint:
    path: /cities
    method: GET
    data_selector: data.cities
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data.statistics
    params: {}
- name: vehicles
  endpoint:
    path: /api/v1/vehicles
    method: GET
    data_selector: data.vehicles
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: vehicles
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: data.vehicles
    params: {}
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: get_makes
  endpoint:
    path: /makes
    method: GET
    data_selector: data.makes
    params: {}
- name: get_models
  endpoint:
    path: /makes/{make}/models
    method: GET
    data_selector: data.models
    params: {}
- name: get_cities
  endpoint:
    path: /cities
    method: GET
    data_selector: data.cities
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data.statistics
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: data.vehicles
    params:
      limit: '100'
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: get_makes
  endpoint:
    path: /makes
    method: GET
    data_selector: data.makes
    params: {}
- name: get_models
  endpoint:
    path: /makes/{make}/models
    method: GET
    data_selector: data.models
    params: {}
- name: get_cities
  endpoint:
    path: /cities
    method: GET
    data_selector: data.cities
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data.statistics
    params: {}
- name: searchVehicles
  endpoint:
    path: /search
    method: GET
    params: {}
- name: getVehicle
  endpoint:
    path: /vehicle/${vehicleId}
    method: GET
    params: {}
- name: getMakes
  endpoint:
    path: /makes
    method: GET
    params: {}
- name: getModels
  endpoint:
    path: /makes/${make}/models
    method: GET
    params: {}
- name: active_listings
  endpoint:
    path: /api/v1/listings/active
    method: GET
    data_selector: listings
- name: historical_data
  endpoint:
    path: /api/v1/data/historical
    method: GET
    data_selector: historicalData
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: data.vehicles
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
- name: get_makes
  endpoint:
    path: /makes
    method: GET
    data_selector: data.makes
- name: get_models
  endpoint:
    path: /makes/{make}/models
    method: GET
    data_selector: data.models
- name: get_cities
  endpoint:
    path: /cities
    method: GET
    data_selector: data.cities
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data.statistics
- name: market_data
  endpoint:
    path: /api/v1/market_data
    method: GET
    data_selector: data
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
- name: get_vehicle
  endpoint:
    path: /vehicle/${vehicleId}
    method: GET
- name: get_makes
  endpoint:
    path: /makes
    method: GET
- name: get_models
  endpoint:
    path: /makes/${make}/models
    method: GET
- name: active_listings
  endpoint:
    path: /api/active_listings
    method: GET
    data_selector: data
- name: historical_data
  endpoint:
    path: /api/historical_data
    method: GET
    data_selector: data
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data.vehicles
- name: vehicle
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
- name: market_data
  endpoint:
    path: /api/market/data
    method: GET
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data.vehicles
    params:
      limit: '10'
- name: vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
- name: search_vehicle
  endpoint:
    path: /search
    method: GET
    data_selector: data.vehicles
- name: vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
- name: vehicles
  endpoint:
    path: /api/vehicles
    method: GET
    data_selector: data.vehicles
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: data.vehicles
    params:
      make: Honda
      city: Bangalore
      limit: 5
- name: vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data.vehicles
- name: vehicle
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
- name: extract_vehicle_listings
  endpoint:
    path: /extract
    method: POST
    data_selector: data.vehicles
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: data.statistics
    params: {}
- name: search_dealers
  endpoint:
    path: /dealers/search
    method: POST
    data_selector: data.dealers
    params: {}
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: data.vehicles
    params: {}
- name: vehicles
  endpoint:
    path: /v1/parsers/cardekho.com/extract
    method: POST
    data_selector: data.vehicles
- name: extract_vehicle_listings
  endpoint:
    path: /extract
    method: POST
    data_selector: data.vehicles
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: data.statistics
    params: {}
- name: search_dealers
  endpoint:
    path: /dealers/search
    method: POST
    data_selector: data.dealers
    params: {}
- name: batch_extraction
  endpoint:
    path: /batch-extract
    method: POST
    data_selector: ''
    params: {}
- name: real_time_monitoring
  endpoint:
    path: /monitor
    method: POST
    data_selector: ''
    params: {}
- name: vehicles
  endpoint:
    path: /api/v1/vehicles
    method: GET
    data_selector: data.vehicles
    params: {}
- name: vehicle_listings
  endpoint:
    path: /api/vehicle_listings
    method: GET
    data_selector: listings
    params: {}
- name: vehicles
  endpoint:
    path: /v1/parsers/cardekho.com/extract
    method: POST
    data_selector: data.vehicles
- name: vehicles
  endpoint:
    path: /api/vehicles
    method: GET
    data_selector: data.vehicles
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params: {}
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data
    params: {}
- name: get_brands
  endpoint:
    path: /brands
    method: GET
    data_selector: data
    params: {}
- name: get_models
  endpoint:
    path: /models/{brand}
    method: GET
    data_selector: data
    params: {}
- name: get_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params: {}
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data
    params: {}
- name: get_brands
  endpoint:
    path: /brands
    method: GET
    data_selector: data
    params: {}
- name: get_models
  endpoint:
    path: /models/{brand}
    method: GET
    data_selector: data
    params: {}
- name: get_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params: {}
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data
    params: {}
- name: get_brands
  endpoint:
    path: /brands
    method: GET
    data_selector: data
    params: {}
- name: get_models
  endpoint:
    path: /models/{brand}
    method: GET
    data_selector: data
    params: {}
- name: get_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params: {}
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data
    params: {}
- name: get_brands
  endpoint:
    path: /brands
    method: GET
    data_selector: data
    params: {}
- name: get_models
  endpoint:
    path: /models/{brand}
    method: GET
    data_selector: data
    params: {}
- name: get_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data
    params: {}
- name: vehicle
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params:
      keyword: BMW
      limit: 10
- name: vehicle_info
  endpoint:
    path: /api/vehicle
    method: GET
    data_selector: data
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params:
      keyword: BMW
      limit: 10
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
    params: {}
- name: market_insights
  endpoint:
    path: /api/v1/market_insights
    method: GET
    data_selector: data
    params: {}
- name: vehicle_listings
  endpoint:
    path: /api/v1/vehicle_listings
    method: GET
    data_selector: listings
    params: {}
- name: vehicle
  endpoint:
    path: /vehicle/VEHICLE_ID
    method: GET
    data_selector: data
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params:
      keyword: BMW
      limit: 10
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params:
      limit: 20
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data
    params: {}
- name: get_brands
  endpoint:
    path: /brands
    method: GET
    data_selector: data
    params: {}
- name: get_models
  endpoint:
    path: /models/{brand}
    method: GET
    data_selector: data
    params: {}
- name: get_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params:
      keyword: BMW
      limit: 10
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params: {}
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data
    params: {}
- name: get_brands
  endpoint:
    path: /brands
    method: GET
    data_selector: data
    params: {}
- name: get_models
  endpoint:
    path: /models/{brand}
    method: GET
    data_selector: data
    params: {}
- name: get_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params: {}
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data
    params: {}
- name: get_brands
  endpoint:
    path: /brands
    method: GET
    data_selector: data
    params: {}
- name: get_models
  endpoint:
    path: /models/{brand}
    method: GET
    data_selector: data
    params: {}
- name: get_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params: {}
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data
    params: {}
- name: get_brands
  endpoint:
    path: /brands
    method: GET
    data_selector: data
    params: {}
- name: get_models
  endpoint:
    path: /models/{brand}
    method: GET
    data_selector: data
    params: {}
- name: get_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: data
    params: {}
- name: vehicle_search
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params:
      keyword: トヨタ カローラ
      limit: 10
- name: vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data
    params: {}
- name: vehicles
  endpoint:
    path: /api/vehicles
    method: GET
    data_selector: data.vehicles
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params:
      keyword: トヨタ カローラ
      limit: 10
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data
    params: {}
- name: vehicles
  endpoint:
    path: /api/v1/vehicles
    method: GET
    data_selector: data.vehicles
- name: extract_vehicle_listings
  endpoint:
    path: /extract
    method: POST
    data_selector: data.vehicles
    params: {}
- name: get_export_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: data.statistics
    params: {}
- name: search_export_destinations
  endpoint:
    path: /destinations/search
    method: POST
    data_selector: data.destinations
    params: {}
- name: batch_export_extraction
  endpoint:
    path: /batch-extract
    method: POST
    data_selector: data
    params: {}
- name: export_market_monitoring
  endpoint:
    path: /monitor
    method: POST
    data_selector: data
    params: {}
- name: extract_vehicle_listings
  endpoint:
    path: /extract
    method: POST
    data_selector: data.vehicles
    params: {}
- name: get_export_statistics
  endpoint:
    path: /statistics
    method: POST
    data_selector: data.statistics
    params: {}
- name: search_export_destinations
  endpoint:
    path: /destinations/search
    method: POST
    data_selector: data.destinations
    params: {}
- name: batch_export_extraction
  endpoint:
    path: /batch-extract
    method: POST
    data_selector: ''
    params: {}
- name: export_market_monitoring
  endpoint:
    path: /monitor
    method: POST
    data_selector: ''
    params: {}
- name: vehicles
  endpoint:
    path: /v1/parsers/beforward.jp/extract
    method: POST
    data_selector: data.vehicles
    params: {}
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: data.vehicles
    params: {}
- name: vehicles
  endpoint:
    path: /api/vehicles
    method: GET
    data_selector: data.vehicles
- name: vehicles
  endpoint:
    path: /v1/parsers/beforward.jp/extract
    method: POST
    data_selector: data.vehicles
    params: {}
- name: vehicles
  endpoint:
    path: /api/v1/vehicles
    method: GET
    data_selector: vehicles
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      limit: '25'
      page: '1'
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: vehicle
    params: {}
- name: get_brands
  endpoint:
    path: /brands
    method: GET
    data_selector: brands
    params: {}
- name: get_models
  endpoint:
    path: /brands/{brand}/models
    method: GET
    data_selector: models
    params: {}
- name: get_locations
  endpoint:
    path: /locations
    method: GET
    data_selector: locations
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: statistics
    params: {}
- name: vehicles
  endpoint:
    path: /api/v1/vehicles
    method: GET
    data_selector: data.vehicles
    params:
      max_results: 1000
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params: {}
- name: get_vehicle
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: vehicle
    params: {}
- name: get_brands
  endpoint:
    path: /brands
    method: GET
    data_selector: brands
    params: {}
- name: get_models
  endpoint:
    path: /brands/{brand}/models
    method: GET
    data_selector: models
    params: {}
- name: get_locations
  endpoint:
    path: /locations
    method: GET
    data_selector: locations
    params: {}
- name: get_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: statistics
    params: {}
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      limit: '10'
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: vehicle
    params: {}
- name: get_brands
  endpoint:
    path: /brands
    method: GET
    data_selector: brands
    params: {}
- name: get_models
  endpoint:
    path: /brands/{brand}/models
    method: GET
    data_selector: models
    params: {}
- name: get_locations
  endpoint:
    path: /locations
    method: GET
    data_selector: locations
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: statistics
    params: {}
- name: active_listings
  endpoint:
    path: /api/v1/active_listings
    method: GET
    data_selector: data
    params: {}
- name: market_data
  endpoint:
    path: /api/market_data
    method: GET
    data_selector: data
- name: search_vehicles
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      limit: '25'
      page: '1'
- name: get_vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: vehicle
    params: {}
- name: get_brands
  endpoint:
    path: /brands
    method: GET
    data_selector: brands
    params: {}
- name: get_models
  endpoint:
    path: /brands/{brand}/models
    method: GET
    data_selector: models
    params: {}
- name: get_locations
  endpoint:
    path: /locations
    method: GET
    data_selector: locations
    params: {}
- name: get_market_statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: statistics
    params: {}
- name: vehicle
  endpoint:
    path: /getVehicleDetails
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      limit: '10'
- name: vehicle
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: vehicle
- name: search
  endpoint:
    path: /v1/parsers/one2car/search
    method: GET
    data_selector: results
    params:
      limit: '5'
- name: vehicle_details
  endpoint:
    path: /v1/parsers/one2car/vehicle/{vehicle_id}
    method: GET
    data_selector: vehicle
    params: {}
- name: market_data
  endpoint:
    path: /api/v1/market_data
    method: GET
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      limit: '10'
      brand: Toyota
      location: Bangkok
- name: vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: vehicle
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: vehicle
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: ''
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      limit: '5'
- name: vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: vehicle
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: vehicle
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data.listings
    params:
      limit: 20
- name: listing
  endpoint:
    path: /listing/{id}
    method: GET
    data_selector: data
    params: {}
- name: dealer
  endpoint:
    path: /dealer/{id}
    method: GET
    data_selector: data
    params: {}
- name: market_data
  endpoint:
    path: /market-data
    method: GET
    data_selector: data
    params: {}
- name: price_history
  endpoint:
    path: /price-history/{id}
    method: GET
    data_selector: data
    params: {}
- name: brands
  endpoint:
    path: /brands
    method: GET
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: data.listings
- name: models
  endpoint:
    path: /v1/webmotors/models/{brand}
    method: GET
    data_selector: data
- name: search
  endpoint:
    path: /search
    method: GET
- name: listing
  endpoint:
    path: /listing/{id}
    method: GET
- name: dealer
  endpoint:
    path: /dealer/{id}
    method: GET
- name: market-data
  endpoint:
    path: /market-data
    method: GET
- name: price-history
  endpoint:
    path: /price-history/{id}
    method: GET
- name: brands
  endpoint:
    path: /brands
    method: GET
- name: models
  endpoint:
    path: /models/{brand}
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data.listings
    params:
      limit: '20'
- name: listing
  endpoint:
    path: /listing/{id}
    method: GET
    data_selector: data
    params: {}
- name: dealer
  endpoint:
    path: /dealer/{id}
    method: GET
    data_selector: data
    params: {}
- name: market-data
  endpoint:
    path: /market-data
    method: GET
    data_selector: data
    params: {}
- name: price-history
  endpoint:
    path: /price-history/{id}
    method: GET
    data_selector: data
    params: {}
- name: brands
  endpoint:
    path: /brands
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /models/{brand}
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /webmotors/models/{brand}
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /v1/webmotors/models/{brand}
    method: GET
    data_selector: data
    params:
      brand: string
- name: market_data
  endpoint:
    path: /market-data
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
- name: listing_details
  endpoint:
    path: /listing/{id}
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
- name: listing
  endpoint:
    path: /listing/{id}
    method: GET
- name: dealer
  endpoint:
    path: /dealer/{id}
    method: GET
- name: market-data
  endpoint:
    path: /market-data
    method: GET
- name: price-history
  endpoint:
    path: /price-history/{id}
    method: GET
- name: brands
  endpoint:
    path: /brands
    method: GET
- name: models
  endpoint:
    path: /models/{brand}
    method: GET
- name: vehicle_data
  endpoint:
    path: /api/vehicle_data
    method: GET
    data_selector: listings
- name: market_analysis
  endpoint:
    path: /api/market_analysis
    method: GET
    data_selector: analysis
- name: webmotors_models
  endpoint:
    path: /v1/webmotors/models/{brand}
    method: GET
    data_selector: data
    params:
      brand: string
- name: market_data
  endpoint:
    path: /market_data
    method: GET
    data_selector: data
- name: vehicle_category_analysis
  endpoint:
    path: /vehicle_category_analysis
    method: GET
    data_selector: data
- name: pricing_trends
  endpoint:
    path: /pricing_trends
    method: GET
    data_selector: data
- name: geographic_market_analysis
  endpoint:
    path: /geographic_market_analysis
    method: GET
    data_selector: data
- name: market_trends
  endpoint:
    path: /market_trends
    method: GET
    data_selector: data
- name: demand_analysis
  endpoint:
    path: /demand_analysis
    method: GET
    data_selector: data
- name: market_data
  endpoint:
    path: /market-data
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
- name: listing
  endpoint:
    path: /listing/{id}
    method: GET
- name: dealer
  endpoint:
    path: /dealer/{id}
    method: GET
- name: price_history
  endpoint:
    path: /price-history/{id}
    method: GET
- name: brands
  endpoint:
    path: /brands
    method: GET
- name: models
  endpoint:
    path: /models/{brand}
    method: GET
- name: vehicle_listings
  endpoint:
    path: /data/vehicle_listings
    method: GET
    data_selector: listings
- name: active_dealers
  endpoint:
    path: /data/active_dealers
    method: GET
    data_selector: dealers
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data.listings
- name: vehicle
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
- name: vehicle_data
  endpoint:
    path: /vehicles
    method: GET
    data_selector: listings
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      brand: Toyota
      model: Corolla
      year_from: 2020
      price_max: 150000
      location: São Paulo
- name: market_analysis
  endpoint:
    path: /market_analysis
    method: GET
    data_selector: analysis
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data.listings
    params:
      brand: Fiat
      model: Argo
      year_min: 2020
      price_max: 80000
      location: São Paulo
- name: vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: market_data
  endpoint:
    path: /market_data
    method: GET
    data_selector: records
- name: vehicle_category_analysis
  endpoint:
    path: /vehicle_category_analysis
    method: GET
    data_selector: records
- name: pricing_trends
  endpoint:
    path: /pricing_trends
    method: GET
    data_selector: records
- name: geographic_market_analysis
  endpoint:
    path: /geographic_market_analysis
    method: GET
    data_selector: records
- name: demand_analysis
  endpoint:
    path: /demand_analysis
    method: GET
    data_selector: records
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data.listings
    params:
      limit: '10'
- name: vehicle
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: market_intelligence_metrics
  endpoint:
    path: /market/intelligence/metrics
    method: GET
    data_selector: marketKPIs
- name: competitive_analysis
  endpoint:
    path: /competitive/analysis
    method: GET
    data_selector: platforms
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: results
    params:
      limit: 10
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data.listings
- name: vehicle
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
- name: vehicles
  endpoint:
    path: /api/vehicles
    method: GET
    data_selector: vehicles
    params:
      page: 1
      limit: 20
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data.listings
    params:
      brand: Fiat
      model: Argo
      year_min: 2020
      price_max: 80000
      location: São Paulo
- name: vehicle_details
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: vehicles
  endpoint:
    path: /api/vehicles
    method: GET
    data_selector: vehicles
    params:
      limit: 20
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data.listings
    params:
      limit: '10'
- name: vehicle
  endpoint:
    path: /vehicle/{vehicle_id}
    method: GET
    data_selector: data.vehicle
    params: {}
- name: vehicles
  endpoint:
    path: /api/vehicles
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 20
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: data.results
- name: vehicles
  endpoint:
    path: /data/vehicles
    method: GET
    data_selector: results
    params:
      page_size: 10
      page: 1
- name: vehicles
  endpoint:
    path: /api/vehicles
    method: GET
    data_selector: records
    params:
      page: 1
      limit: 20
- name: vehicles
  endpoint:
    path: /api/vehicles
    method: GET
    data_selector: records
    params:
      limit: 20
- name: vehicles
  endpoint:
    path: /api/vehicles
    method: GET
    data_selector: data
- name: vehicles
  endpoint:
    path: /api/vehicles
    method: GET
    data_selector: results
    params:
      page_size: 10
      page: 1
- name: vehicle_detail
  endpoint:
    path: /api/vehicles/{listing_id}
    method: GET
    data_selector: data
    params: {}
notes:
- All parsers feature advanced anti-detection technology, real-time data extraction,
  and comprehensive API documentation for seamless integration.
- Advanced anti-detection technology for bypassing parsing protections
- Requires API key from Carapis
- Start with our free tier that includes 1,000 requests per day. No credit card required.
- 'Free Tier Available: 1,000 requests per day.'
- Use Environment Variables - Store API keys securely
- Implement Error Handling - Handle API errors gracefully
- Monitor Rate Limits - Stay within API limits
- Professional automotive data parsers for Korean and Chinese markets
- Default limit for results is 20.
- Pagination offset defaults to 0.
- Professional parser with anti-detection, API integration, and extensive car listings.
- Extract comprehensive automotive data from Encar.com, Korea's leading car marketplace.
- Extract real-time vehicle data from Che168.com - China's comprehensive automotive
  platform. Professional parser with anti-detection, API integration, and extensive
  car listings.
- Extract comprehensive automotive data from Mobile.de, Germany's leading car marketplace.
- Extract vehicle listings, pricing, and market data from Vroom with our advanced
  anti-detection parser.
- Start extracting real-time automotive data from Vroom.com in the US.
- Southeast Asian automotive platform with comprehensive data.
- Extract comprehensive automotive data from Carsome.com, Southeast Asia's leading
  car marketplace.
- Extract vehicle listings, pricing, and market data from Carvana with our advanced
  anti-detection parser.
- Extract comprehensive automotive data from Spinny.com, India's leading car marketplace.
  Access vehicle listings, pricing, specifications, and market insights with our advanced
  anti-detection technology.
- Comprehensive vehicle data extraction from One2Car.com
- Extract comprehensive automotive data from Goo-net.com, Japan's leading car marketplace.
- Extract comprehensive automotive data from One2Car.com, Thailands leading car marketplace.
- Implement exponential backoff when hitting rate limits
- Monitor rate limit headers to avoid hitting limits
- Use webhooks for real-time data instead of polling
- Cache responses when possible to reduce API calls
- Advanced anti-detection technology with Korean residential proxies
- Real-time pricing data updated daily
- All endpoints support common parameters such as format and language.
- Dynamic IP rotation to prevent detection and blocking
- We offer a 7-day free trial with 1,000 requests to test our API.
- Real-time data updates for accurate analysis
- Market trends and insights available for various regions
- Uses API key in the Authorization header
- API Key required for access.
- Uses Korean residential proxies for authentic local access
- Rate limiting compliance with Encar.com policies
- Implement error handling for robust applications
- Use environment variables for API key management
- Add logging for debugging and monitoring
- Set up alerts for API failures and rate limits
- Test thoroughly before deploying to production
- Uses API key for authentication
- Uses advanced anti-detection technology with Chinese residential proxies.
- Real-time pricing and market data updated continuously.
- We maintain 99.5% data accuracy through real-time validation, automated verification,
  manual review, and error reporting.
- Advanced anti-detection features included
- Flexible pricing plans available.
- Real-time access to vehicle listings, dealer information, pricing data, and market
  insights.
- Uses API key for access
- Auto.ru provides comprehensive coverage across Russia
- The Auto.ru parser provides comprehensive access to Russia's largest automotive
  marketplace.
- API Key required for authentication
- Filters for vehicle extraction include brand, year, price, and location
- This API provides comprehensive access to Auto.ru automotive data.
- The parser operates within legal boundaries by respecting robots.txt guidelines
  and following Auto.ru's terms of service.
- Uses OAuth2 with refresh token — requires setup of connected app in Auto.ru
- Uses public data only
- Maintaining ethical data collection practices
- Comprehensive market analysis of the Russian automotive industry through Auto.ru
  data
- Handles Russian and English content
- Tracks price changes and new listings
- Data extracted from Auto.ru includes real-time price monitoring and historical trend
  analysis.
- The Auto.ru parser is designed to provide comprehensive, accurate, and real-time
  automotive data for the Russian market.
- Free tier includes 1,000 requests per day. No credit card required.
- Data is extracted from Auto.ru, Russia's leading automotive marketplace.
- Free tier available with 1,000 requests per day.
- Free tier includes 1,000 requests per day.
- Keep your API key secure and never share it publicly.
- Uses an API key for authentication
- Uses a dedicated US proxy for optimal performance
- Rate limiting implementation is recommended for responsible usage
- Real-time extraction - Data is extracted live from Cars.com
- New listings appear within 5 minutes
- Help with initial configuration
- Review your integration code
- Guidance on optimal implementation
- Help optimize your usage
- Tailored integration support
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Sub-5 minute updates - New listings appear within 5 minutes
- Price updates - Price changes reflected immediately
- Inventory changes - Vehicle availability updated in real-time
- Market statistics - Updated daily for trend analysis
- Rate limits apply based on your plan.
- Implement proper rate limiting in your applications.
- All API requests require authentication using your API key in the Authorization
  header.
- European platforms employ sophisticated protection mechanisms that block traditional
  scraping attempts.
- Each parser requires its own dedicated API key for security and rate limiting purposes.
- Rate limiting may occur; implement retries with exponential backoff.
- Unlock comprehensive European automotive data with AutoScout24 parser.
- Uses OAuth2 with refresh token — requires setup of connected app in AutoScout24
- Some endpoints may require specific country parameters
- German IP addresses recommended for access
- Geographic Restrictions - Strict German IP requirements
- Advanced CAPTCHA - Multi-layer verification systems
- Behavioral Analysis - User pattern detection algorithms
- Real-time extraction - Data is extracted live from Mobile.de
- Some objects like Contact may return nulls in deeply nested fields
- Uses API key for authentication.
- Uses real-time updates for vehicle listings
- Data extraction is compliant with GDPR
- Real-time market data with sub-5 minute updates
- Keep API key secure and never share it publicly.
- Use UK-specific search terms for better results
- Monitor price trends for optimal timing
- Comprehensive automotive data extraction from the UK's largest marketplace.
- API Key is required for access.
- API Key is required for access
- API Key required for access
- Rate limits apply based on subscription plan
- Monitor your usage to stay within rate limits
- Comprehensive data extraction from Avito.ru.
- Supports multiple vehicle types.
- All API requests require authentication using an API key
- Requires API key for access
- Start with simple searches and gradually add complexity
- Implement proper error handling for production reliability
- Use caching to optimize performance and reduce costs
- Test with different UK regions for comprehensive coverage
- Comprehensive automotive data extraction from Avito.ru, Russia's largest classified
  marketplace.
- Data accuracy through real-time extraction and automatic verification.
- This API provides comprehensive access to Avito.ru automotive data, enabling developers
  to build powerful automotive applications and services for the Russian market.
- The parser operates within legal boundaries by respecting robots.txt guidelines.
- Real-time extraction from live listings.
- Data is updated in real-time.
- Supports real-time data updates and historical tracking
- Comprehensive market analysis of the Russian automotive industry through Avito.ru
  data - pricing trends, demand patterns, and competitive intelligence
- This API provides comprehensive access to Avito.ru automotive data.
- Respects robots.txt guidelines
- Implements appropriate rate limiting
- Follows Avito.ru's terms of service
- Maintains ethical data collection practices
- Comprehensive features for extracting vehicle data, pricing analysis, and market
  intelligence from Avito.ru with advanced search, real-time updates, and competitive
  analysis.
- Start with our free tier that includes 1,000 requests per day.
- Comprehensive automotive data extraction capabilities for Russia's largest classified
  marketplace.
- 'Free Tier Available: 1,000 requests per day'
- Keep your API key secure and never share it publicly
- Access the world's most comprehensive automotive data from emerging markets with
  the OLX Autos parser.
- 'Free Tier Available: 1,000 requests per day. No credit card required.'
- Live data access - Data is fetched in real-time from OLX
- No caching delays - Always get the most current information
- Real-time data access - Data is fetched in real-time from OLX
- Unlock the full potential of global automotive data with the comprehensive features
  of the OLX Autos parser.
- Uses OAuth2 with refresh token — requires setup of connected app in OLX
- Data may vary across different regions and market conditions
- API Key from Carapis Dashboard is required
- No caching delays - always get the most current information
- Real-time availability updates
- Comprehensive data extraction capabilities designed specifically for the world's
  leading global automotive marketplace.
- Access the Middle East's most comprehensive automotive data with the Dubizzle Motors
  parser.
- Valid account with active subscription is necessary
- API Key from Carapis Dashboard required
- Valid account with active subscription needed
- 'If you get a 429 error: Reduce request frequency, Implement exponential backoff,
  Consider upgrading your plan, Use batch requests when possible'
- 'If you get a 401 error: Check your API key is correct, Verify your subscription
  is active, Ensure you''re using the right parser endpoint, Contact support if issues
  persist'
- 'If you get no results: Check your search parameters, Try broader search criteria,
  Verify the data exists in the region, Test with simple queries first, Check language
  settings'
- Live data access - Data is fetched in real-time from Dubizzle
- Real-Time Updates - Data is fetched in real-time from Dubizzle.
- Comprehensive data extraction capabilities designed specifically for the Middle
  East's leading automotive marketplace.
- Transform your Middle East automotive business with data-driven insights from the
  region's leading marketplace.
- API Key from Carapis Dashboard required.
- API Key from Carapis Dashboard is required.
- Ensure to handle rate limiting and implement pagination.
- Rate limiting is enforced, respect the limits
- Uses API key for authentication — requires obtaining the key from the dashboard
- Uses advanced CAPTCHA systems for protection
- JavaScript rendering for dynamic content
- Monitor rate limits to stay within API limits
- Rate limits vary by plan (50-1000 requests/minute for digital platforms)
- Success rate 99.9% with advanced anti-detection technology
- Valid account with active subscription needed.
- Monitor rate limits - Stay within API limits
- Implement proper error handling
- Advanced CAPTCHA systems may block traditional scraping attempts.
- Browser automation is recommended for optimal performance.
- Live data access - Data is fetched in real-time from Carvana
- No historical data - Carvana doesn't provide historical pricing
- Real-time access to active vehicles
- Data is fetched in real-time from Carvana
- Success rate is 99.9% with advanced anti-detection technology
- Complete access to Carvana's digital vehicle catalog
- Real-time updates for inventory and pricing
- Comprehensive insights into the digital automotive marketplace through real-time
  Carvana data analysis.
- Nationwide coverage across all 50 US states
- Rate limiting compliance with Vroom's policies
- Current listings only - Real-time access to active vehicles
- No historical data available
- Carvana's parser provides complete access to digital vehicle catalog.
- Real-time updates for inventory and pricing.
- Monitor digital adoption for market transformation insights
- Track fintech integration for financial services optimization
- Bearer token required for all API requests.
- Bearer token required for authentication.
- Rate limit is 1,000 requests/day for free plan.
- 'Rate limits: 1,000 requests/day (free), 10,000 requests/day (pro).'
- Webhook events available for real-time data updates.
- Rate limiting is enforced to prevent abuse.
- Ready to leverage Vroom market insights?
- Data is updated every 15 minutes.
- API key must start with 'vroom_parser_sk_'.
- Uses API key authentication — ensure secure handling of the key
- Uses OAuth2 — requires setup of API access
- Never expose your API key in client-side code
- Use environment variables to store API keys securely
- Rotate keys regularly for enhanced security
- Dynamic IP rotation to prevent detection
- Automated CAPTCHA solving for local language challenges
- One API key works for all Southeast Asian regions
- Monitor usage to prevent unauthorized access
- One API key works for all Southeast Asian regions.
- Data is automatically localized with local currencies and regional market data.
- Start with the free trial to test integration
- Use appropriate rate limits to avoid blocking
- Implement error handling for production use
- Cache frequently accessed data for better performance
- Monitor API usage to optimize costs
- Stay updated with API changes and new features
- 'Your API key will look like this: carsome_parser_sk_1234567890abcdef1234567890abcdef'
- Requires setup of API key
- Rate limits enforced
- Rate limiting compliance with Spinny's policies
- Ready to access India's fastest-growing used car marketplace?
- Employs sophisticated anti-detection technology to ensure reliable data extraction
- 'API Key format: spinny_parser_sk_ followed by a 32-character hexadecimal string.'
- 'Rate limit: 1,000 requests/day (free), 10,000 requests/day (pro).'
- Bearer token required
- 'Rate limit: 1,000 requests/day (free), 10,000 requests/day (pro)'
- Data is updated every 15 minutes
- Historical data available for up to 12 months
- Real-time data collection from Spinny
- Update frequency every 15 minutes for active listings
- Real-time scraping for data collection from Spinny
- 99.5% accuracy rate with automated validation
- Comprehensive feature set designed for reliable Indian automotive data extraction
  with enterprise-grade performance and anti-detection technology.
- 'API Key format: cardekho_parser_sk_1234567890abcdef1234567890abcdef'
- Uses API key authentication for secure access
- Rate limiting is enforced to prevent abuse
- Access China's most comprehensive C2C automotive data.
- Access China's most comprehensive C2C automotive data with the Guazi.com parser.
- 'Rate Limit: 1000 requests per hour'
- 'Data Freshness: Real-time (15-minute updates)'
- All API requests require authentication using a Bearer token in the Authorization
  header.
- Rate limit is 1000 requests per hour.
- All API requests require a Bearer token in the Authorization header
- All API requests require a Bearer token in the Authorization header.
- Comprehensive data extraction capabilities designed specifically for China's leading
  C2C automotive marketplace.
- Real-time data access including live updates and pricing.
- Uses advanced CAPTCHA solving algorithms for data extraction.
- Real-time updates every 15 minutes
- Data freshness is critical for accurate insights
- Rate limit of 1000 requests per hour
- Store your API key securely (environment variables)
- Never expose it in client-side code
- Rotate keys regularly for security
- Use different keys for development and production
- Unlock the power of Japanese automotive market data with Goo-net.com parser and
  make data-driven decisions for your business.
- Daily updated pricing and market data
- Export documentation and compliance data available
- Extract comprehensive data from Japan's premier used car export marketplace.
- Get your API key from the Carapis Dashboard
- API key required for access.
- Data fields can be customized in requests.
- Requires setup of an API key in the Carapis dashboard
- Japanese market focus
- Export destination not supported
- 'Rate Limits: 1,000 requests/day (free), 10,000 requests/day (pro)'
- Automated CAPTCHA solving for Thai language challenges
- Webhook events include vehicle.created, vehicle.updated, vehicle.removed, and price.changed.
- Get your API key from the Carapis Dashboard.
- API requires an API key for authentication
- Real-time data collection from One2Car
- 99.2% accuracy rate with automated validation
- Uses API key for authorization — requires setup of account on Carapis Dashboard
- 'Brazilian Proxy Network: Local Brazilian IP addresses'
- 'Advanced CAPTCHA: Multi-layer verification systems'
- Search supports multiple filters including brand, model, and location.
- Use pagination - Process results in batches of 25-50
- Handle errors gracefully - Implement retry logic with exponential backoff
- Brazilian IP requirements
- Advanced CAPTCHA
- Multi-layer verification systems
- User pattern detection
- JavaScript-rendered vehicle data
- Aggressive request throttling
- Parser operates within legal boundaries by respecting robots.txt guidelines and
  implementing appropriate rate limiting.
- All API requests require authentication using an API key.
- Market analysis based on data from Webmotors.com.br
- API Key is required for authentication.
- Comprehensive features for extracting vehicle data, pricing analysis, and market
  intelligence from Webmotors.com.br with advanced search, real-time updates, and
  competitive analysis.
- Comprehensive market analysis of the Brazilian automotive industry through Webmotors.com.br
  data - pricing trends, demand patterns, and competitive intelligence
- API Key format is webmotors_parser_sk_XXXXXXXXX
- The demo portal integrates with CarAPIS for vehicle data retrieval, search and filtering,
  real-time updates, and image handling.
- 'Rate limits apply: Free Plan: 1,000 requests/day, Pro Plan: 10,000 requests/day'
- API key is required for authentication.
- Fetch vehicle data from CarAPIS for listings and details
- API key required for access
- Check environment variable for API key
- API Key is required to access the endpoints
- Uses API key for authentication — must be provided in headers.
errors:
- 'RATE_LIMIT_EXCEEDED: Wait 1 minute before retrying.'
- 'INVALID_API_KEY: Please check your credentials.'
- 'RATE_LIMIT_EXCEEDED: Rate limit exceeded, wait before retrying'
- 'INVALID_API_KEY: Check your API key'
- '401 Unauthorized: Invalid API key'
- '429 Too Many Requests: Rate limit exceeded. Try again in 60 seconds.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API key validity'
- 'INVALID_API_KEY: Invalid or expired API key'
- 'RATE_LIMIT_EXCEEDED: Too many requests'
- 'INVALID_PARAMETER: Invalid request parameter'
- 'VEHICLE_NOT_FOUND: Vehicle not found'
- 'DEALER_NOT_FOUND: Dealer not found'
- 'INTERNAL_ERROR: Server error'
- '404 Not Found: Endpoint does not exist'
- '500 Internal Server Error: Please try again later'
- 'Invalid API key: Check your key format and validity'
- 'Expired key: Generate a new API key from dashboard'
- 'Insufficient permissions: Ensure Encar.com parser access'
- '400 Bad Request: Check request parameters for correctness'
- '401 Unauthorized: Verify API key or authentication method'
- '401 Unauthorized: Check your API key'
- '429 Too Many Requests: Rate limit exceeded'
- 'Rate limiting: Check your usage limits and quotas'
- '401 Unauthorized: Check API key validity'
- 'Insufficient permissions: Ensure Che168.com parser access'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'No results: Filters too restrictive'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'INVALID_API_KEY: Invalid or missing API key'
- 'RATE_LIMIT_EXCEEDED: Rate limit exceeded'
- 'INVALID_PARAMETERS: Invalid request parameters'
- 'LISTING_NOT_FOUND: Listing not found'
- 'INTERNAL_ERROR: Internal server error'
- '429 error response: Retry-After header indicates wait time'
- 'Connection failed: Check your API key or endpoint URL.'
- 'RateLimitError: Throttle API calls or reduce frequency'
- 'APIError: Check API documentation for correct usage'
- 'Connection failed: Check API key or endpoint URL.'
- 'APIError: Check API request and response'
- 'INVALID_API_KEY: Check your API key in the dashboard'
- 'RATE_LIMIT_EXCEEDED: Implement rate limiting and retry logic'
- 'INVALID_PARAMETERS: Check parameter values and formats'
- 'PARSER_UNAVAILABLE: Retry after a few minutes'
- 'QUOTA_EXCEEDED: Upgrade your plan or wait for reset'
- 'GEOGRAPHIC_RESTRICTION: Contact support for assistance'
- '401 Unauthorized: Recheck API key'
- '429: Rate limit exceeded. Please wait before retrying.'
- '401: Invalid API key. Please check your credentials.'
- '429: Rate limit exceeded - Implement proper rate limiting to avoid hitting limits'
- '401 Unauthorized: Check your API key and ensure Cars.com parser is activated in
  dashboard'
- '429: Rate limit exceeded - implement retry logic'
- '400: Invalid request parameters'
- '429 Too Many Requests: Implement proper rate limiting to avoid hitting limits'
- '401 Unauthorized: Check your API key and verify parser activation'
- '401: Authentication error - check your API key'
- '400: Invalid request parameters.'
- '401 Unauthorized: Invalid or expired API key'
- '400 Bad Request: Invalid search parameters'
- '500 Internal Server Error: Server-side issue'
- 'No Results: Search too specific'
- 'INVALID_API_KEY: API key is invalid or expired'
- 'EXTRACTION_FAILED: Data extraction failed'
- 'COUNTRY_NOT_SUPPORTED: Country not supported'
- 'INVALID_API_KEY: Check key format and validity'
- 'RATE_LIMIT_EXCEEDED: Wait or upgrade subscription plan'
- 'INVALID_PARAMETERS: Check parameter syntax and values'
- 'EXTRACTION_FAILED: Retry or contact technical support'
- 'COUNTRY_NOT_SUPPORTED: Use supported European countries'
- 'Error: Rate limited, waiting seconds...'
- 'Error: RequestException'
- 'Error: HTTPError'
- 'RATE_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'INVALID_PARAMETERS: Check your parameters'
- 'EXTRACTION_FAILED: Retry or contact support'
- 'RATE_LIMIT_EXCEEDED: Wait and retry with exponential backoff'
- '401 Unauthorized: Check key format and validity'
- '429 Too Many Requests: Reduce request frequency'
- '400 Bad Request: Check request format'
- '500 Internal Error: Retry or contact support'
- '400 Bad Request: Invalid parameters'
- '500 Internal Error: Server issue'
- 'Error: Check your API key or request format.'
- '429: Rate limit exceeded'
- '401: Unauthorized'
- '401 Unauthorized: Recheck API key or permissions'
- '401 Unauthorized: Recheck API key or token expiration'
- 'UK_MARKET_ONLY: Use UK-specific parameters'
- '429: Rate limited, waiting seconds'
- 'RATE_LIMIT_EXCEEDED: Check API Key and ensure you''re within your plan''s limits.'
- 'INVALID_PARAMETERS: Validate your request parameters.'
- 'EXTRACTION_FAILED: Retry or contact support.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'UK_MARKET_ONLY: UK market access only'
- '429: Rate limit exceeded - wait and retry'
- 'RATE_LIMIT_EXCEEDED: Ensure you''re within your plan''s limits'
- '400: Bad request'
- 'RATE_LIMIT_EXCEEDED: Reduce the number of requests.'
- 'INVALID_REQUEST: Check the request parameters.'
- '401 Unauthorized: Check API key and permissions'
- '429 Too Many Requests: Rate limit exceeded - wait and retry'
- 'SELLER_NOT_FOUND: Seller not found'
- '400: Bad request - check your parameters'
- Network issues may require automatic retries.
- Data may be incomplete due to interruptions.
- '429 error response: Returned when you exceed limits.'
- Retry-After header indicates wait time.
- '429 error response: Indicates wait time when exceeding limits'
- 'Connection failed: Check API key or network.'
- 'Connection failed: Check your network or API key.'
- 'Price change for listing: Check the listing ID.'
- 'APIError: Check API request parameters or endpoint'
- 'RateLimitError: Implement exponential backoff'
- 'APIError: Check API key and account status'
- 'Connection failed: Invalid API Key'
- 'Rate limit exceeded: Too many requests in a short time'
- 'INVALID_PARAMETERS: Request parameters are invalid'
- 'RESOURCE_NOT_FOUND: Requested resource doesn''t exist'
- 'SERVICE_UNAVAILABLE: Service temporarily unavailable'
- 'UNSUPPORTED_COUNTRY: Country not supported'
- 'LANGUAGE_NOT_SUPPORTED: Language not supported'
- 'APIError: Check the API documentation for error codes'
- '401: Invalid API key'
- '400: Bad request - check parameters'
- '401: Invalid API key - Check your API key'
- '404 Not Found: Verify the endpoint path'
- '429 Too Many Requests: Implement exponential backoff'
- '401 Unauthorized: Recheck API key or account status'
- 'Error: 404 Not Found'
- 'Error: 401 Unauthorized'
- '401: Check your API key'
- '401 Unauthorized: Check API Key'
- '404 Not Found: Verify endpoint path'
- '401 Unauthorized: Check API Key or account status'
- '401: Unauthorized access'
- '400: Bad Request - Invalid parameters'
- '401: Unauthorized - Invalid API key'
- '403: Forbidden - Insufficient permissions'
- '404: Not Found - Resource not found'
- '429: Too Many Requests - Rate limit exceeded'
- '500: Internal Server Error'
- '503: Service Unavailable'
- 'RATE_LIMIT_EXCEEDED: Implement rate limiting'
- 'INVALID_PARAMETERS: Check parameter values'
- 'RESOURCE_NOT_FOUND: Verify resource ID'
- 'SERVICE_UNAVAILABLE: Retry later'
- '429: Rate limit exceeded - wait and retry.'
- '401: Invalid API key.'
- 'Error: 401 Unauthorized - Check your API Key.'
- '429: Too Many Requests - Throttle your requests.'
- 'Error: response.status'
- '429 Too Many Requests: Throttle API calls.'
- '429: Reduce request frequency'
- '401: Check your API key is correct'
- 'PARSER_UNAVAILABLE: Parser temporarily unavailable'
- 'QUOTA_EXCEEDED: Monthly quota exceeded'
- 'DIGITAL_PLATFORM_ERROR: Digital platform temporarily unavailable'
- 'GEOGRAPHIC_RESTRICTION: Geographic restriction'
- '401 Unauthorized: Invalid API key - check your credentials'
- '429 Rate Limit Exceeded: Exceeded daily or per-minute limits'
- 400 Bad Request - Invalid parameters
- 429 Too Many Requests - Rate limit exceeded
- '403 Forbidden: Check API key permissions.'
- '404 Not Found: Verify endpoint path.'
- '500 Internal Server Error: Retry after a short delay.'
- '401 Unauthorized: Verify your API key is correct and active'
- '429 Too Many Requests: Implement rate limiting or upgrade your plan'
- '400 Bad Request: Check parameter names and values in documentation'
- '401: Invalid API key - check your credentials'
- '401 Unauthorized: Check API key or token'
- '400 Bad Request: Check request parameters or format'
- '400: Bad Request'
- '403: Forbidden'
- '404: Not Found'
- '429: Too Many Requests'
- '403 Forbidden: Verify plan includes Carsome.com access'
- 'Key not found: Copy the full key from dashboard'
- 'AUTHENTICATION_ERROR: Invalid API key'
- 'RATE_LIMIT_EXCEEDED: Rate limit exceeded. Please wait.'
- 'INVALID_FILTERS: Invalid filter parameters'
- 'EXTRACTION_FAILED: Data extraction failed. Please try again.'
- 'REGION_NOT_SUPPORTED: Region not supported'
- 'AUTH_ERROR: Invalid API key'
- 'VALIDATION_ERROR: Invalid parameters'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Verify your API key'
- 'INVALID_FILTERS: Check your filter parameters'
- 'REGION_NOT_SUPPORTED: Use supported region'
- '401 Unauthorized: Check API key'
- '500 Internal Server Error: Contact support'
- '401 Unauthorized: Check API key validity.'
- '401 Unauthorized: Check API key, format, and subscription status'
- '401 error: Check API key - Verify it''s correct and complete'
- '401 error: Check format - Should start with `goo_net_parser_sk_`'
- 'RATE_LIMIT_EXCEEDED: Wait or upgrade plan'
- 'INVALID_FILTERS: Check filter syntax'
- 'EXPORT_DESTINATION_NOT_SUPPORTED: Use supported destination'
- 'EXPORT_REGION_NOT_SUPPORTED: Export destination not supported'
- 'RATE_LIMIT_EXCEEDED: Check your plan''s limits'
- 'INVALID_FILTERS: Validate your request parameters'
- '401 Unauthorized: Check the API key.'
- '401 Unauthorized: Recheck API key or credentials'
- '429 error response: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Check API key.'
- 'API Key Error: Check environment variable'
- 'Build Errors: Clear cache and rebuild'
auth_info:
  mentioned_objects:
  - API Key
client:
  base_url: https://api.carapis.com/v1
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
