resources:
- name: getDynamicFields
  endpoint:
    path: /suix_getDynamicFields
    method: POST
    data_selector: result.data
    params:
      parent_object_id: <ObjectID>
- name: getOwnedObjects
  endpoint:
    path: /suix_getOwnedObjects
    method: POST
    data_selector: result.data
    params:
      address: <SuiAddress>
- name: queryEvents
  endpoint:
    path: /suix_queryEvents
    method: POST
    data_selector: result.data
    params:
      query: <EventFilter>
- name: queryTransactionBlocks
  endpoint:
    path: /suix_queryTransactionBlocks
    method: POST
    data_selector: result.data
    params:
      query: <TransactionBlockResponseQuery>
- name: resolveNameServiceAddress
  endpoint:
    path: /suix_resolveNameServiceAddress
    method: POST
    data_selector: result
    params:
      name: <string>
- name: suix_getAllBalances
  endpoint:
    path: /suix_getAllBalances
    method: POST
    data_selector: result
    params: {}
- name: suix_getAllCoins
  endpoint:
    path: /suix_getAllCoins
    method: POST
    data_selector: result.data
    params: {}
- name: suix_getBalance
  endpoint:
    path: /suix_getBalance
    method: POST
    data_selector: result
    params: {}
- name: suix_getCoinMetadata
  endpoint:
    path: /suix_getCoinMetadata
    method: POST
    data_selector: result
    params: {}
- name: suix_getCoins
  endpoint:
    path: /suix_getCoins
    method: POST
    data_selector: result.data
    params: {}
- name: suix_getTotalSupply
  endpoint:
    path: /suix_getTotalSupply
    method: POST
    data_selector: result
    params: {}
- name: suix_getDynamicFieldObject
  endpoint:
    path: /suix_getDynamicFieldObject
    method: POST
    data_selector: result.data
    params: {}
- name: protocol_config
  endpoint:
    path: /sui_getProtocolConfig
    method: POST
    data_selector: result
    params:
      version: 6
- name: resolveNameServiceNames
  endpoint:
    path: /suix_resolveNameServiceNames
    method: POST
    data_selector: result.data
    params:
      address: SuiAddress
- name: subscribeEvent
  endpoint:
    path: /suix_subscribeEvent
    method: POST
    data_selector: result
    params:
      filter: EventFilter
- name: subscribeTransaction
  endpoint:
    path: /suix_subscribeTransaction
    method: POST
    data_selector: result
    params:
      filter: TransactionFilter
- name: getCommitteeInfo
  endpoint:
    path: /suix_getCommitteeInfo
    method: POST
    data_selector: result
    params:
      epoch: BigInt_for_uint64
- name: getLatestSuiSystemState
  endpoint:
    path: /suix_getLatestSuiSystemState
    method: POST
    data_selector: result
    params: {}
- name: getReferenceGasPrice
  endpoint:
    path: /suix_getReferenceGasPrice
    method: POST
    data_selector: result
    params: {}
- name: getStakes
  endpoint:
    path: /suix_getStakes
    method: POST
    data_selector: result
    params:
      owner: SuiAddress
- name: getStakesByIds
  endpoint:
    path: /suix_getStakesByIds
    method: POST
    data_selector: result
    params:
      staked_sui_ids: Array_of_ObjectID
- name: getValidatorsApy
  endpoint:
    path: /suix_getValidatorsApy
    method: POST
    data_selector: result
    params: {}
- name: getMoveFunctionArgTypes
  endpoint:
    path: /sui_getMoveFunctionArgTypes
    method: POST
    data_selector: result
    params:
      package: ObjectID
      module: string
      function: string
- name: sui_multiGetTransactionBlocks
  endpoint:
    path: /sui/multiGetTransactionBlocks
    method: POST
    data_selector: result
    params: {}
- name: getNormalizedMoveFunction
  endpoint:
    path: /sui_getNormalizedMoveFunction
    method: POST
    data_selector: result
    params: {}
- name: getNormalizedMoveModule
  endpoint:
    path: /sui_getNormalizedMoveModule
    method: POST
    data_selector: result
    params: {}
- name: getNormalizedMoveModulesByPackage
  endpoint:
    path: /sui_getNormalizedMoveModulesByPackage
    method: POST
    data_selector: result
    params: {}
- name: getNormalizedMoveStruct
  endpoint:
    path: /sui_getNormalizedMoveStruct
    method: POST
    data_selector: result
    params: {}
- name: getChainIdentifier
  endpoint:
    path: /sui_getChainIdentifier
    method: POST
    data_selector: result
    params: {}
- name: getCheckpoint
  endpoint:
    path: /sui_getCheckpoint
    method: POST
    data_selector: result
    params: {}
- name: getCheckpoints
  endpoint:
    path: /sui_getCheckpoints
    method: POST
    data_selector: result
    params: {}
- name: getEvents
  endpoint:
    path: /sui_getEvents
    method: POST
    data_selector: result
    params: {}
- name: getLatestCheckpointSequenceNumber
  endpoint:
    path: /sui_getLatestCheckpointSequenceNumber
    method: POST
    data_selector: result
    params: {}
- name: getObject
  endpoint:
    path: /sui_getObject
    method: POST
    data_selector: result
    params: {}
- name: getTotalTransactionBlocks
  endpoint:
    path: /sui_getTotalTransactionBlocks
    method: POST
    data_selector: result
    params: {}
- name: getTransactionBlock
  endpoint:
    path: /sui_getTransactionBlock
    method: POST
    data_selector: result
    params:
      digest: TransactionDigest
- name: multiGetObjects
  endpoint:
    path: /sui_multiGetObjects
    method: POST
    data_selector: result
    params:
      object_ids: ObjectID
- name: transaction
  endpoint:
    path: /transactions
    method: POST
    data_selector: result
- name: ExecuteTransactionBlock
  endpoint:
    path: /sui_executeTransactionBlock
    method: POST
    data_selector: result
    params: {}
- name: unsafe_splitCoinEqual
  endpoint:
    path: /unsafe_splitCoinEqual
    method: POST
    data_selector: result
    params:
      signer: ''
      coin_object_id: ''
      split_count: ''
      gas: ''
      gas_budget: ''
- name: unsafe_transferObject
  endpoint:
    path: /unsafe_transferObject
    method: POST
    data_selector: result
    params:
      signer: ''
      object_id: ''
      gas: ''
      gas_budget: ''
      recipient: ''
- name: unsafe_transferSui
  endpoint:
    path: /unsafe_transferSui
    method: POST
    data_selector: result
    params:
      signer: ''
      sui_object_id: ''
      gas_budget: ''
      recipient: ''
      amount: ''
- name: sui_devInspectTransactionBlock
  endpoint:
    path: /sui_devInspectTransactionBlock
    method: POST
    data_selector: result
    params:
      sender_address: ''
      tx_bytes: ''
      gas_price: ''
      epoch: ''
      additional_args: ''
- name: sui_dryRunTransactionBlock
  endpoint:
    path: /sui_dryRunTransactionBlock
    method: POST
    data_selector: result
    params:
      tx_bytes: ''
- name: DynamicField
  endpoint:
    path: /dynamicField
    method: GET
    data_selector: records
- name: DynamicObject
  endpoint:
    path: /dynamicObject
    method: GET
    data_selector: records
- name: GasCostSummary
  endpoint:
    path: /gas/cost/summary
    method: GET
    data_selector: properties
    params: {}
- name: GasData
  endpoint:
    path: /gas/data
    method: GET
    data_selector: properties
    params: {}
- name: GenericSignature
  endpoint:
    path: /generic/signature
    method: GET
    data_selector: properties
    params: {}
- name: GetPastObjectRequest
  endpoint:
    path: /object/past
    method: GET
    data_selector: properties
    params: {}
- name: ObjectChange
  endpoint:
    path: /ObjectChange
    method: GET
    data_selector: objectChanges
- name: ObjectData
  endpoint:
    path: /ObjectData
    method: GET
    data_selector: objectData
- name: ObjectDataOptions
  endpoint:
    path: /ObjectDataOptions
    method: GET
    data_selector: dataOptions
- name: Object
  endpoint:
    params: {}
- name: sui_tryGetPastObject
  endpoint:
    path: /sui/tryGetPastObject
    method: POST
    data_selector: result.details
    params:
      object_id: string
      version: integer
- name: sui_tryMultiGetPastObjects
  endpoint:
    path: /sui/tryMultiGetPastObjects
    method: POST
    data_selector: result
    params:
      past_objects: array
      options: object
- name: sui_verifyZkLoginSignature
  endpoint:
    path: /sui/verifyZkLoginSignature
    method: POST
    data_selector: result
    params:
      bytes: string
      signature: string
      intent_scope: object
      author: string
- name: unsafe_batchTransaction
  endpoint:
    path: /sui/unsafe_batchTransaction
    method: POST
    data_selector: result
    params:
      signer: string
      single_transaction_params: array
      gas: string
      gas_budget: integer
- name: unsafe_mergeCoins
  endpoint:
    path: /sui/unsafe_mergeCoins
    method: POST
    data_selector: result
    params:
      signer: string
      primary_coin: string
      coin_to_merge: string
      gas: string
      gas_budget: integer
- name: unsafe_moveCall
  endpoint:
    path: /sui/unsafe_moveCall
    method: POST
    data_selector: result
    params:
      signer: string
      package_object_id: string
      module: string
      function: string
      type_arguments: array
      arguments: array
      gas: string
      gas_budget: integer
      execution_mode: string
- name: unsafe_pay
  endpoint:
    path: /sui/unsafe_pay
    method: POST
    data_selector: result
    params:
      signer: string
      input_coins: array
      recipients: array
      amounts: array
      gas: string
      gas_budget: integer
- name: unsafe_payAllSui
  endpoint:
    path: /sui/unsafe_payAllSui
    method: POST
    data_selector: result
    params:
      signer: string
      input_coins: array
      recipient: string
      gas_budget: integer
- name: unsafe_paySui
  endpoint:
    path: /sui/unsafe_paySui
    method: POST
    data_selector: result
    params:
      signer: string
      input_coins: array
      recipients: array
      amounts: array
      gas_budget: integer
- name: unsafe_publish
  endpoint:
    path: /sui/unsafe_publish
    method: POST
    data_selector: result
    params:
      sender: string
      compiled_modules: array
      dependencies: array
      gas: string
      gas_budget: integer
- name: unsafe_requestAddStake
  endpoint:
    path: /sui/unsafe_requestAddStake
    method: POST
    data_selector: result
    params:
      signer: string
      coins: array
      amount: integer
      validator: string
      gas: string
      gas_budget: integer
- name: unsafe_requestWithdrawStake
  endpoint:
    path: /sui/unsafe_requestWithdrawStake
    method: POST
    data_selector: result
    params:
      signer: string
      staked_sui: string
      gas: string
      gas_budget: integer
- name: unsafe_splitCoin
  endpoint:
    path: /sui/unsafe_splitCoin
    method: POST
    data_selector: result
    params:
      signer: string
      coin_object_id: string
      split_amounts: array
      gas: string
      gas_budget: integer
- name: SuiSystemStateSummary
  endpoint:
    path: /sui/system/state
    method: GET
    data_selector: state
    params: {}
- name: TransactionBlock
  endpoint:
    path: /sui/transaction/block
    method: POST
    data_selector: data
    params: {}
- name: TransactionBlockBytes
  endpoint:
    path: /sui/transaction/block/bytes
    method: POST
    data_selector: data
    params: {}
- name: TransactionBlockData
  endpoint:
    path: /TransactionBlockData
    method: GET
    data_selector: TransactionBlockData
    params: {}
- name: TransactionBlockEffects
  endpoint:
    path: /TransactionBlockEffects
    method: GET
    data_selector: TransactionBlockEffects
    params: {}
- name: TransactionBlockEffectsModifiedAtVersions
  endpoint:
    path: /TransactionBlockEffectsModifiedAtVersions
    method: GET
    data_selector: TransactionBlockEffectsModifiedAtVersions
    params: {}
- name: Stake
  endpoint:
    path: /stake
    method: GET
    data_selector: stakeData
    params: {}
- name: SuiActiveJwk
  endpoint:
    path: /suiActiveJwk
    method: GET
    data_selector: activeJwkData
    params: {}
- name: SuiAddress
  endpoint:
    path: /suiAddress
    method: GET
    data_selector: addressData
    params: {}
- name: SuiArgument
  endpoint:
    path: /suiArgument
    method: GET
    data_selector: argumentData
    params: {}
- name: SuiAuthenticatorStateExpire
  endpoint:
    path: /suiAuthenticatorStateExpire
    method: GET
    data_selector: authenticatorStateExpireData
    params: {}
- name: SuiCallArg
  endpoint:
    path: /suiCallArg
    method: GET
    data_selector: callArgData
    params: {}
- name: SuiChangeEpoch
  endpoint:
    path: /suiChangeEpoch
    method: GET
    data_selector: changeEpochData
    params: {}
- name: SuiCoinMetadata
  endpoint:
    path: /suiCoinMetadata
    method: GET
    data_selector: coinMetadataData
    params: {}
- name: SuiEndOfEpochTransactionKind
  endpoint:
    path: /suiEndOfEpochTransactionKind
    method: GET
    data_selector: endOfEpochTransactionData
    params: {}
- name: SuiExecutionResult
  endpoint:
    path: /suiExecutionResult
    method: GET
    data_selector: executionResultData
    params: {}
- name: SuiJWK
  endpoint:
    path: /suiJWK
    method: GET
    data_selector: jwkData
    params: {}
- name: SuiJsonValue
  endpoint:
    path: /suiJsonValue
    method: GET
    data_selector: jsonValueData
    params: {}
- name: SuiJwkId
  endpoint:
    path: /suiJwkId
    method: GET
    data_selector: jwkIdData
    params: {}
- name: SuiMoveAbility
  endpoint:
    path: /suiMoveAbility
    method: GET
    data_selector: moveAbilityData
    params: {}
- name: SuiMoveAbilitySet
  endpoint:
    path: /suiMoveAbilitySet
    method: GET
    data_selector: moveAbilitySetData
    params: {}
- name: ChangeEpoch
  endpoint:
    path: /components/schemas/TransactionBlockKind
    method: GET
    data_selector: properties
    params: {}
- name: Genesis
  endpoint:
    path: /components/schemas/TransactionBlockKind
    method: GET
    data_selector: properties
    params: {}
- name: ConsensusCommitPrologue
  endpoint:
    path: /components/schemas/TransactionBlockKind
    method: GET
    data_selector: properties
    params: {}
- name: ProgrammableTransaction
  endpoint:
    path: /components/schemas/TransactionBlockKind
    method: GET
    data_selector: properties
    params: {}
- name: AuthenticatorStateUpdate
  endpoint:
    path: /components/schemas/TransactionBlockKind
    method: GET
    data_selector: properties
    params: {}
- name: RandomnessStateUpdate
  endpoint:
    path: /components/schemas/TransactionBlockKind
    method: GET
    data_selector: properties
    params: {}
- name: EndOfEpochTransaction
  endpoint:
    path: /components/schemas/TransactionBlockKind
    method: GET
    data_selector: properties
    params: {}
- name: ConsensusCommitPrologueV2
  endpoint:
    path: /components/schemas/TransactionBlockKind
    method: GET
    data_selector: properties
    params: {}
- name: ConsensusCommitPrologueV3
  endpoint:
    path: /components/schemas/TransactionBlockKind
    method: GET
    data_selector: properties
    params: {}
- name: ConsensusCommitPrologueV4
  endpoint:
    path: /components/schemas/TransactionBlockKind
    method: GET
    data_selector: properties
    params: {}
- name: ProgrammableSystemTransaction
  endpoint:
    path: /components/schemas/TransactionBlockKind
    method: GET
    data_selector: properties
    params: {}
- name: TransactionFilter
  endpoint:
    path: /TransactionFilter
    method: GET
    data_selector: properties
- name: TransactionDigest
  endpoint:
    path: /TransactionDigest
    method: GET
    data_selector: description
- name: TransactionEventsDigest
  endpoint:
    path: /TransactionEventsDigest
    method: GET
- name: TransferObjectParams
  endpoint:
    path: /TransferObjectParams
    method: GET
    data_selector: properties
- name: TypeOrigin
  endpoint:
    path: /TypeOrigin
    method: GET
    data_selector: properties
- name: TypeTag
  endpoint:
    path: /TypeTag
    method: GET
- name: UpgradeInfo
  endpoint:
    path: /UpgradeInfo
    method: GET
    data_selector: properties
- name: ValidatorApy
  endpoint:
    path: /ValidatorApy
    method: GET
    data_selector: properties
- name: ValidatorApys
  endpoint:
    path: /ValidatorApys
    method: GET
    data_selector: properties
- name: ZkLoginAuthenticator
  endpoint:
    path: /ZkLoginAuthenticator
    method: GET
    data_selector: properties
- name: ZkLoginAuthenticatorAsBytes
  endpoint:
    path: /ZkLoginAuthenticatorAsBytes
    method: GET
- name: ZkLoginInputs
  endpoint:
    path: /ZkLoginInputs
    method: GET
    data_selector: properties
- name: ZkLoginIntentScope
  endpoint:
    path: /ZkLoginIntentScope
    method: GET
- name: ZkLoginProof
  endpoint:
    path: /ZkLoginProof
    method: GET
    data_selector: properties
- name: ZkLoginPublicIdentifier
  endpoint:
    path: /ZkLoginPublicIdentifier
    method: GET
- name: ZkLoginVerifyResult
  endpoint:
    path: /ZkLoginVerifyResult
    method: GET
    data_selector: properties
- name: create_coin
  endpoint:
    path: /create_coin
    method: POST
    data_selector: result
    params: {}
- name: create_regulated_coin
  endpoint:
    path: /create_regulated_coin
    method: POST
    data_selector: result
    params: {}
- name: create_token
  endpoint:
    path: /create_token
    method: POST
    data_selector: result
    params: {}
- name: usdc
  endpoint:
    path: /usdc
    method: GET
    data_selector: data
    params: {}
- name: usdt
  endpoint:
    path: /usdt
    method: GET
    data_selector: data
    params: {}
- name: agora
  endpoint:
    path: /agora
    method: GET
    data_selector: data
    params: {}
- name: ondousd
  endpoint:
    path: /ondousd
    method: GET
    data_selector: data
    params: {}
- name: TestnetNFT
  endpoint:
    path: /examples/move/nft/sources/testnet_nft.move
    method: GET
    data_selector: records
- name: Playtron zkLogin wallet
  endpoint:
    path: /wallets/playtron
    method: GET
    data_selector: wallet_data
- name: Enoki Connect
  endpoint:
    path: /enoki/connect
    method: GET
    data_selector: connect_data
- name: SuiLink
  endpoint:
    path: /suilink
    method: GET
    data_selector: link_data
- name: SUILINK_PACKAGE_ID_ETH_SOL
  endpoint:
    path: /owned_objects
    method: GET
    data_selector: objects
    params:
      filter:
        Package: SUILINK_PACKAGE_ID_ETH_SOL
- name: SUILINK_PACKAGE_ID_SUI
  endpoint:
    path: /owned_objects
    method: GET
    data_selector: objects
    params:
      filter:
        Package: SUILINK_PACKAGE_ID_SUI
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params: {}
- name: ledger_service
  endpoint:
    path: /sui/rpc/v2beta/ledger_service
    method: POST
    data_selector: response
    params: {}
- name: transaction
  endpoint:
    path: /protos/sui/rpc/v2beta/ledger_service.proto
    method: POST
    data_selector: response
    params: {}
- name: TransactionExecutionService
  endpoint:
    path: /sui/rpc/v2beta2/transaction_execution_service
    method: POST
- name: LedgerService
  endpoint:
    path: /sui/rpc/v2beta2/ledger_service
    method: POST
- name: LiveDataService
  endpoint:
    path: /sui/rpc/v2beta2/live_data_service
    method: POST
- name: SubscriptionService
  endpoint:
    path: /sui/rpc/v2beta2/subscription_service
    method: POST
- name: MovePackageService
  endpoint:
    path: /sui/rpc/v2beta2/move_package_service
    method: POST
- name: SignatureVerificationService
  endpoint:
    path: /sui/rpc/v2beta2/signature_verification_service
    method: POST
- name: TransactionExecutionService
  endpoint:
    path: /sui/rpc/v2beta2/transaction_execution_service
    method: POST
    data_selector: ''
    params: {}
- name: LedgerService
  endpoint:
    path: /sui/rpc/v2beta2/ledger_service
    method: POST
    data_selector: ''
    params: {}
- name: LiveDataService
  endpoint:
    path: /sui/rpc/v2beta2/live_data_service
    method: POST
    data_selector: ''
    params: {}
- name: SubscriptionService
  endpoint:
    path: /sui/rpc/v2beta2/subscription_service
    method: POST
    data_selector: ''
    params: {}
- name: MovePackageService
  endpoint:
    path: /sui/rpc/v2beta2/move_package_service
    method: POST
    data_selector: ''
    params: {}
- name: SignatureVerificationService
  endpoint:
    path: /sui/rpc/v2beta2/signature_verification_service
    method: POST
    data_selector: ''
    params: {}
- name: SUI Supply
  endpoint:
    path: /sui/supply
    method: GET
    data_selector: supply
    params: {}
- name: SUI Distribution
  endpoint:
    path: /sui/distribution
    method: GET
    data_selector: distribution
    params: {}
- name: full_node
  endpoint:
    path: /sui-node
    method: GET
    data_selector: node_status
- name: genesis_blob
  endpoint:
    path: /sui-genesis
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: Safe Mode during Reconfiguration
  endpoint:
    path: /alerts/safe_mode
    method: GET
    data_selector: metrics
    params:
      duration: 5m
- name: Consensus Proposals Failure
  endpoint:
    path: /alerts/consensus_proposals_failure
    method: GET
    data_selector: metrics
    params:
      duration: 5m
- name: Checkpoint Execution Rate Is Low
  endpoint:
    path: /alerts/checkpoint_execution_rate
    method: GET
    data_selector: metrics
    params:
      duration: 5m
- name: Certificate execution latencies are high
  endpoint:
    path: /alerts/certificate_execution_latencies
    method: GET
    data_selector: metrics
    params:
      duration: 5m
- name: RandomnessDkgFailure
  endpoint:
    path: /alerts/randomness_dkg_failure
    method: GET
    data_selector: metrics
    params:
      duration: 5m
- name: Mysten validators are not upgraded
  endpoint:
    path: /alerts/validators_not_upgraded
    method: GET
    data_selector: metrics
    params:
      duration: 1h
- name: Consensus sequencing p99 latencies are high
  endpoint:
    path: /alerts/consensus_sequencing_latency
    method: GET
    data_selector: metrics
    params:
      duration: 1m
- name: System Invariant Violations
  endpoint:
    path: /alerts/system_invariant_violations
    method: GET
    data_selector: metrics
    params:
      duration: 1m
- name: protocol_config
  endpoint:
    path: /sui_getProtocolConfig
    method: GET
    data_selector: result
    params: {}
- name: object
  endpoint:
    path: /sui_getObject
    method: GET
    data_selector: result
    params: {}
- name: events
  endpoint:
    path: /sui_getEvents
    method: GET
    data_selector: result
    params: {}
- name: transaction_block
  endpoint:
    path: /sui_getTransactionBlock
    method: GET
    data_selector: result
    params: {}
- name: RocksDB snapshots
  endpoint:
    path: /services/data/vXX.X/sobjects/RocksDBSnapshots
    method: GET
    data_selector: records
    params: {}
- name: Formal snapshots
  endpoint:
    path: /services/data/vXX.X/sobjects/FormalSnapshots
    method: GET
    data_selector: records
    params: {}
- name: balance
  endpoint:
    path: /sui_getBalance
    method: POST
    data_selector: result.totalBalance
    params: {}
- name: events
  endpoint:
    path: /sui_getEvents
    method: POST
    data_selector: result
    params: {}
- name: ValidatorSet
  endpoint:
    path: /sui/rpc/v2beta2/ValidatorSet
    method: GET
    data_selector: active_validators
    params: {}
- name: GetServiceInfo
  endpoint:
    path: /sui/rpc/v2beta2/GetServiceInfo
    method: GET
    data_selector: chain
    params: {}
- name: GetObject
  endpoint:
    path: /sui/rpc/v2beta2/GetObject
    method: GET
    data_selector: object
    params: {}
- name: GetTransaction
  endpoint:
    path: /sui/rpc/v2beta2/GetTransaction
    method: GET
    data_selector: transaction
    params: {}
- name: Balance
  endpoint:
    path: /rpc/v2beta2/GetBalance
    method: POST
    data_selector: balance
    params:
      coin_type: required
      owner: required
- name: CoinMetadata
  endpoint:
    path: /rpc/v2beta2/GetCoinInfo
    method: POST
    data_selector: metadata
    params:
      coin_type: required
- name: ListBalances
  endpoint:
    path: /rpc/v2beta2/ListBalances
    method: POST
    data_selector: balances
    params:
      owner: required
      page_size: optional
      page_token: optional
- name: ListOwnedObjects
  endpoint:
    path: /rpc/v2beta2/ListOwnedObjects
    method: POST
    data_selector: objects
    params:
      owner: required
      object_type: optional
      page_size: optional
      page_token: optional
- name: ChangeEpoch
  endpoint:
    path: /sui/rpc/v2beta2/ChangeEpoch
    method: POST
- name: Command
  endpoint:
    path: /sui/rpc/v2beta2/Command
    method: POST
- name: ConsensusCommitPrologue
  endpoint:
    path: /sui/rpc/v2beta2/ConsensusCommitPrologue
    method: POST
- name: EndOfEpochTransaction
  endpoint:
    path: /sui/rpc/v2beta2/EndOfEpochTransaction
    method: POST
- name: move_package
  endpoint:
    path: /examples/move/first_package
    method: POST
    data_selector: package
    params: {}
- name: active-address
  endpoint:
    path: /client/active-address
    method: GET
- name: active-env
  endpoint:
    path: /client/active-env
    method: GET
- name: addresses
  endpoint:
    path: /client/addresses
    method: GET
- name: balance
  endpoint:
    path: /client/balance
    method: GET
- name: call
  endpoint:
    path: /client/call
    method: POST
- name: chain-identifier
  endpoint:
    path: /client/chain-identifier
    method: GET
- name: dynamic-field
  endpoint:
    path: /client/dynamic-field
    method: GET
- name: envs
  endpoint:
    path: /client/envs
    method: GET
- name: faucet
  endpoint:
    path: /client/faucet
    method: POST
- name: gas
  endpoint:
    path: /client/gas
    method: GET
- name: objects
  endpoint:
    path: /client/objects
    method: GET
- name: publish
  endpoint:
    path: /client/publish
    method: POST
- name: transfer
  endpoint:
    path: /client/transfer
    method: POST
- name: keytool
  endpoint:
    path: /keytool
    method: GET
    data_selector: commands
- name: move_commands
  endpoint:
    path: /sui/move
    method: GET
    data_selector: commands
    params: {}
- name: transaction_effects
  endpoint:
    path: /client/replay-transaction
    method: POST
    data_selector: Transaction Effects
    params: {}
- name: validator_info
  endpoint:
    path: /validator/display-metadata
    method: GET
    data_selector: validator status
    params: {}
- name: gas_price
  endpoint:
    path: /validator/update-gas-price
    method: POST
    data_selector: transaction data
    params:
      gas_budget: '200000000'
      gas_price: '1000'
- name: SuiClient
  endpoint:
    path: /sui/api
    method: GET
    data_selector: data
    params: {}
notes:
- Uses JSON-RPC protocol for communication
- '`next_cursor` points to the last item in the page; Reading with `next_cursor` will
  start from the next item after `next_cursor` if `next_cursor` is `Some`, otherwise
  it will start from the first item.'
- Various components have specific requirements for properties.
- Some objects may have nested properties.
- Sui provides a method of upgrading your packages while still retaining their immutable
  properties.
- Sui offers features like dynamic NFTs, kiosks, soulbound assets, and on-chain randomness,
  to provide builders with the tools to create immersive, transparent, and fair gaming
  experiences.
- Transaction security is arguably the most important feature of a blockchain.
- For all networks besides Mainnet, you can get free SUI coins for your account to
  facilitate package development.
- Coins and tokens on Sui are similar; the terms are used interchangeably.
- Use dedicated nodes/shared services rather than public endpoints for production
  apps.
- The public endpoints maintained by Mysten Labs (`fullnode.<NETWORK>.sui.io:443`)
  are rate-limited, and support only 100 requests per 30 seconds.
- For optimal performance and data consistency, apps should submit writes and reads
  for the same full node.
- Apps should implement a local cache for frequently read data rather than over-fetching
  from the full node.
- The Playtron wallet is portable and can connect to any dApp using the Sui dApp Kit.
- If you are using a game-specific zkLogin wallet, to use the companion web app requires
  Enoki Connect support.
- Games that run on the SuiPlay0X1 device must support the Playtron zkLogin wallet
  as the default option.
- Enoki Connect is not required for SuiPlay integration.
- Contains information about the chain its linking in its type and contains the address
  of the linked account in its fields.
- Early-Stage Feature
- This feature or service is currently available in Devnet, Testnet, Mainnet
- gRPC offers a high-performance communication protocol.
- Streaming APIs are useful for building indexers, dashboards, or bots.
- Always use field masks when applicable to reduce response size and latency, especially
  for large resources.
- Use TLS (port 443) for production traffic to ensure encrypted transport and prevent
  downgrade attacks.
- Use streaming subscriptions for real-time use cases instead of polling repeatedly.
- Generate client code from the official .proto definitions in sui-rpc-api to ensure
  compatibility and type safety.
- Paginate carefully — always check next_page_token and do not assume all data is
  returned at once.
- Retry transient failures with exponential backoff, especially for streaming APIs
  or busy public nodes.
- Validate all input data, including encodings and message formats, to prevent hard-to-debug
  API rejections.
- The GraphQL RPC release stage is currently in alpha.
- Queries are rate-limited at the number of attempts per minute to ensure high availability
  of the service to all users.
- gRPC API provides access to historical data
- GraphQL RPC will integrate with the Archival Service after the beta launch
- The 'buy' operation requires the use of another object called transfer policy.
- An empty transfer policy means that the asset is freely tradable.
- Checkpoint data comes from various data sources, including remote stores, local
  files, and RPC endpoints.
- PostgreSQL comes with built-in support using Diesel ORM, providing production-ready
  database operations.
- Transaction authentication features on Sui provide security against unauthorized
  access to on-chain data.
- zkLogin is a Sui primitive that enables you to send transactions from a Sui address
  using an OAuth credential, without publicly linking the two.
- The total supply of SUI tokens on Mainnet is capped at 10,000,000,000 SUI.
- PTBs do not support intricate programming patterns like loops.
- The transaction fails if an argument is used in any form after being moved.
- If an argument is copied but does not have the drop ability, then the last usage
  is inferred to be a move.
- Sui full nodes validate blockchain activities, including transactions, checkpoints,
  and epoch changes.
- Sui recommends running Sui full nodes on Linux. Sui supports the Ubuntu and Debian
  distributions.
- Whenever Sui releases a new version, you must update your full node with the release
  to ensure compatibility with the network it connects to.
- Any release that contains a protocol change will need to be followed before the
  protocol upgrade takes place.
- Sui full nodes store multiple categories of data in its permanent store.
- Sui nodes can prune historic data to optimize storage.
- Full nodes do not take snapshots by default.
- Snapshots can be uploaded to remote object stores like S3, Google Cloud Storage,
  Azure Blob Storage.
- Sui supports both addresses with and without a 0x prefix. Always include the 0x
  prefix in API calls.
- The port needs to match the value in bridge node config, default is 9191
- Note the port needs to match the value in bridge node config, default is 9191
- This feature or service is currently available in Devnet, Testnet, Mainnet.
- Sui full node gRPC API will replace the JSON-RPC on full nodes, such that JSON-RPC
  will be deprecated when gRPC API is generally available.
- If a field mask is not present on update, the operation applies to all fields (as
  if a field mask of all fields has been specified).
- An implementation may provide options to override this default behavior for repeated
  and message fields.
- Clients should use exponential backoff when retrying.
- The public endpoints maintained by Mysten Labs are rate-limited, and support only
  100 requests per 30 seconds.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses CLI commands to interact with Sui network.
- Use --json flag to format responses in JSON
- Examples were tested using a bash shell environment.
- The examples in this document were tested using a bash shell environment.
- Your experience might vary depending on how your shell interprets the input values.
- Use the --json flag to format responses in JSON instead of the more human friendly
  default Sui CLI output.
- The Sui CLI 'move' command provides several commands for working with Move source
  code.
- Replay tool allows you to replay a transaction to check and analyze transaction
  effects.
- Use the --trace flag to generate execution traces for Move debugger.
- Gas budget for this transaction is required when sender is not the reporter validator
  itself.
- The Move extension attempts to install the appropriate move-analyzer binary for
  your platform.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'INVALID_ARGUMENT: Ensure all parameters are valid and correctly formatted.'
- 'INVALID_ARGUMENT: When the server might reject the request due to incorrect parameters.'
- 'cannot find -lpq: Missing libpq library.'
- 'panicked at error binding to 0.0.0.0:9184: error creating server listener: Address
  already in use (os error 98)'
- '400 Bad Request: Check request parameters.'
- '404 Not Found: Endpoint does not exist.'
- '500 Internal Server Error: Try again later.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://sui.io
  headers:
    Accept: application/json
source_metadata: null
