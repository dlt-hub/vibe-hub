resources:
- name: register_deposit
  endpoint:
    path: /register_deposit
    method: POST
    data_selector: data
- name: register_withdrawal
  endpoint:
    path: /register_withdrawal
    method: POST
    data_selector: data
- name: risk_scenario
  endpoint:
    path: /risk_scenario
    method: GET
    data_selector: data
- name: transaction_monitoring
  endpoint:
    path: /transaction_monitoring
    method: GET
    data_selector: data
- name: claims
  endpoint:
    path: /cryptoswift/claims
    method: GET
    data_selector: ''
- name: registerWithdrawal
  endpoint:
    path: /registerWithdrawal
    method: POST
    data_selector: ''
    params: {}
- name: registerDeposit
  endpoint:
    path: /registerDeposit
    method: POST
    data_selector: ''
    params: {}
- name: claims
  endpoint:
    path: /cryptoswift/claims
    method: GET
    data_selector: claims
- name: alerts_by_scenario
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params:
      limit: 20
      offset: 0
- name: specific_alert
  endpoint:
    path: /alerts/{scenarioId}/{alertId}
    method: GET
    data_selector: alert
    params: {}
- name: transactions_linked_to_alert
  endpoint:
    path: /alerts/{scenarioId}/{alertId}/transactions
    method: GET
    data_selector: transactions
    params:
      limit: 20
      offset: 0
- name: alert_history
  endpoint:
    path: /alerts/{scenarioId}/{alertId}/history
    method: GET
    data_selector: history
    params:
      limit: 20
      offset: 0
- name: all_alerts
  endpoint:
    path: /alerts/all
    method: GET
    data_selector: alerts
    params:
      limit: 20
      offset: 0
- name: risk_indicators
  endpoint:
    path: /cryptoswift/claims
    method: GET
    data_selector: records
- name: create_risk_indicator
  endpoint:
    path: /cryptoswift/claims
    method: POST
    data_selector: records
- name: get_risk_indicator
  endpoint:
    path: /cryptoswift/claims
    method: GET
    data_selector: records
- name: edit_risk_indicator
  endpoint:
    path: /cryptoswift/claims
    method: PUT
    data_selector: records
- name: delete_risk_indicator
  endpoint:
    path: /cryptoswift/claims
    method: DELETE
    data_selector: records
- name: score_overrides
  endpoint:
    path: /cryptoswift/claims
    method: GET
    data_selector: records
- name: create_score_override
  endpoint:
    path: /cryptoswift/claims
    method: POST
    data_selector: records
- name: get_score_override
  endpoint:
    path: /cryptoswift/claims
    method: GET
    data_selector: records
- name: edit_score_override
  endpoint:
    path: /cryptoswift/claims
    method: PUT
    data_selector: records
- name: delete_score_override
  endpoint:
    path: /cryptoswift/claims
    method: DELETE
    data_selector: records
- name: claims
  endpoint:
    path: /cryptoswift/claims
    method: GET
    data_selector: records
- name: country_list
  endpoint:
    path: /countries
    method: GET
    data_selector: records
- name: entity_type_list
  endpoint:
    path: /entity_types
    method: GET
    data_selector: records
- name: behavioral_type_list
  endpoint:
    path: /behavioral_types
    method: GET
    data_selector: records
- name: lists
  endpoint:
    path: /lists
    method: GET
    data_selector: records
- name: audit_trail
  endpoint:
    path: /audit_trail
    method: GET
    data_selector: records
- name: claims
  endpoint:
    path: /cryptoswift/claims
    method: GET
    data_selector: records
    params: {}
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: records
    params: {}
- name: claims
  endpoint:
    path: /cryptoswift/claims
    method: GET
    data_selector: records
    params: {}
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: records
    params: {}
- name: entity
  endpoint:
    path: /entities
    method: GET
    data_selector: records
    params: {}
- name: claims
  endpoint:
    path: /cryptoswift/claims
    method: GET
    data_selector: records
    params:
      offset: 0
      limit: 20
- name: investigation_graphs
  endpoint:
    path: /investigations
    method: GET
    data_selector: records
    params:
      offset: 0
      limit: 20
- name: cases
  endpoint:
    path: /cases
    method: GET
    data_selector: records
    params:
      offset: 0
      limit: 20
- name: create_case_event
  endpoint:
    path: /cases/{caseId}/events
    method: POST
    data_selector: event
    params: {}
- name: delete_case_event
  endpoint:
    path: /cases/{caseId}/events/{caseEventId}
    method: DELETE
    data_selector: event
    params: {}
- name: create_user
  endpoint:
    path: /users
    method: POST
    data_selector: user
    params: {}
- name: modify_user
  endpoint:
    path: /users/{userMail}
    method: PATCH
    data_selector: user
    params: {}
- name: delete_user
  endpoint:
    path: /users/{userMail}
    method: DELETE
    data_selector: user
    params: {}
- name: get_audit_trail
  endpoint:
    path: /users/audit
    method: GET
    data_selector: audit
    params: {}
- name: modify_company_settings
  endpoint:
    path: /company/settings
    method: PATCH
    data_selector: settings
    params: {}
- name: get_permissions
  endpoint:
    path: /permissions
    method: GET
    data_selector: permissions
    params: {}
- name: get_roles
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
    params: {}
- name: change_request
  endpoint:
    path: /cryptoswift/claims
    method: GET
    data_selector: records
    params:
      offset: 0
      limit: 20
- name: transactions_of_wallet
  endpoint:
    path: /cryptoswift/claims
    method: GET
    data_selector: transactions
    params:
      limit: 20
      offset: 0
- name: transactions_of_address
  endpoint:
    path: /cryptoswift/claims
    method: GET
    data_selector: transactions
    params:
      limit: 20
      offset: 0
- name: wallet_information
  endpoint:
    path: /cryptoswift/claims
    method: GET
    data_selector: wallet
    params: {}
- name: get_profile_and_company_info
  endpoint:
    path: /me
    method: GET
    data_selector: records
- name: edit_profile
  endpoint:
    path: /me
    method: PATCH
    data_selector: records
- name: get_system_status
  endpoint:
    path: /system/status
    method: GET
    data_selector: records
- name: search_supported_coins
  endpoint:
    path: /search/coins
    method: GET
    data_selector: records
- name: get_fiat_exchange_rates
  endpoint:
    path: /fiat/exchange/rates
    method: GET
    data_selector: records
- name: send_feedback
  endpoint:
    path: /feedback
    method: POST
    data_selector: records
- name: claims
  endpoint:
    path: /cryptoswift/claims
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /cryptoswift/transactions
    method: GET
    data_selector: records
    params: {}
- name: entities
  endpoint:
    path: /cryptoswift/entities
    method: GET
    data_selector: records
    params: {}
- name: tenant
  endpoint:
    path: /cryptoswift/tenant
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /cryptoswift/users
    method: GET
    data_selector: records
    params: {}
- name: claims
  endpoint:
    path: /cryptoswift/claims
    method: GET
    data_selector: claims
- name: wallets
  endpoint:
    path: /wallets
    method: GET
    data_selector: wallets
- name: claims
  endpoint:
    path: /claims
    method: GET
    data_selector: records
notes:
- API key required for authentication.
- Ensure compliance with AML regulations when using the Transaction Monitoring System.
- This endpoint is essential for businesses that need to monitor ongoing customer
  activity by continuously feeding transaction data into the TMS system for automated
  risk analysis and compliance.
- You can use filters only if the wallet has less than 10,000 transactions.
- All endpoints are secured by API key authorization.
errors:
- '422: Request failed due to transaction limitations.'
- '401: Unauthorized, check your API key.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key validity'
- 'Unauthorized: API key is missing or invalid.'
auth_info:
  mentioned_objects:
  - API key
  - ApiKeyAuth
client:
  base_url: https://api.scorechain.com/v1
  auth:
    type: apikey
source_metadata: null
