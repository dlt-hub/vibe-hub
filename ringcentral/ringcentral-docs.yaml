resources:
- name: oauth_revoke
  endpoint:
    path: /restapi/oauth/revoke
    method: POST
    data_selector: null
    params: {}
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: sms
  endpoint:
    path: /restapi/v1.0/account/~/sms
    method: GET
    data_selector: records
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: message_log
  endpoint:
    path: /restapi/v1.0/account/~/message-store
    method: GET
    data_selector: records
- name: ring_out
  endpoint:
    path: /account/~/extension/~/ring-out
    method: POST
    data_selector: records
    params: {}
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: call_logs
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: user_business_hours
  endpoint:
    path: /api-reference/Business-Hours/readUserBusinessHours
    method: GET
- name: user_call_log
  endpoint:
    path: /api-reference/Call-Log/readUserCallLog
    method: GET
- name: business_hours
  endpoint:
    path: /restapi/v1.0/account/accountId/extension/extensionId/business-hours
    method: GET
    data_selector: business-hours
    params: {}
- name: business_hours
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/business-hours
    method: GET
    data_selector: uri
- name: sms
  endpoint:
    path: /account/~/extension/~/sms
    method: POST
    data_selector: messages
- name: meetings
  endpoint:
    path: /services/data/vXX.X/sobjects/Meeting
    method: GET
    data_selector: records
- name: fax
  endpoint:
    path: /restapi/v1.0/account/accountId/extension/extensionId/fax
    method: POST
- name: fax
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/fax
    method: POST
- name: compliance_export
  endpoint:
    path: /guide/team-messaging/manual/compliance-export
    method: GET
    data_selector: records
- name: bridge
  endpoint:
    path: /rcvideo/v2/account/{accountId}/extension/{extensionId}/bridges
    method: POST
    data_selector: id
- name: bridges
  endpoint:
    path: /rcvideo/v2/account/{accountId}/extension/{extensionId}/bridges
    method: POST
    data_selector: bridges
- name: fax
  endpoint:
    path: /account/~/extension/~/fax
    method: POST
    data_selector: messageStatus
- name: call_log
  endpoint:
    path: /account/~/extension/~/call-log
    method: GET
    data_selector: records
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
    params: {}
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/accountId/extension/extensionId/call-log
    method: GET
    data_selector: records
    params: {}
- name: call_records
  endpoint:
    params:
      dateFrom: '2016-03-10T18:07:52.534Z'
      dateTo: '2016-03-10T18:07:52.534Z'
      perPage: 100
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/call-log
    method: GET
    data_selector: records
    params: {}
- name: speech_to_text
  endpoint:
    path: /ai/audio/v1/async/speech-to-text
    method: POST
    data_selector: result
    params:
      webhook: WEBHOOK_URL
- name: analyze_interaction
  endpoint:
    path: /ai/insights/v1/async/analyze-interaction
    method: POST
    data_selector: jobId
- name: analyze_interaction
  endpoint:
    path: /ai/insights/v1/async/analyze-interaction
    method: POST
    data_selector: ''
    params: {}
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: message_store
  endpoint:
    path: /restapi/v1.0/account/~/message-store
    method: GET
    data_selector: records
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/call-log
    method: GET
    data_selector: records
- name: sms
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/sms
    method: POST
    data_selector: messages
- name: Call Management
  endpoint:
    path: /engage-voice-api
    method: GET
- name: SMS
  endpoint:
    path: /sms-api
    method: GET
- name: RingOut
  endpoint:
    path: /restapi/v1.0/account/~/ring-out
    method: POST
    data_selector: records
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: team_messaging
  endpoint:
    path: /team-messaging
    method: GET
    data_selector: records
    params: {}
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: Audio & Video AI API
  endpoint:
    path: /ai-api
    method: GET
- name: Video API & SDK
  endpoint:
    path: /video-api
    method: GET
- name: Social Messaging API
  endpoint:
    path: /social-messaging-api
    method: GET
- name: Email API
  endpoint:
    path: /email-api
    method: GET
- name: In-App Messaging API
  endpoint:
    path: /in-app-messaging-api
    method: GET
- name: Identities API
  endpoint:
    path: /identities-api
    method: GET
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: message_store_report
  endpoint:
    path: /restapi/v1.0/account/~/message-store-report
    method: POST
    data_selector: records
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: message_store
  endpoint:
    path: /restapi/v1.0/account/~/message-store
    method: GET
    data_selector: records
- name: glip_team
  endpoint:
    path: /restapi/v1.0/glip/teams
    method: POST
    data_selector: json
    params: {}
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: message_store
  endpoint:
    path: /restapi/v1.0/account/~/message-store
    method: GET
    data_selector: records
- name: chat
  endpoint:
    path: /glip/chats
    method: GET
    data_selector: records
- name: conversation
  endpoint:
    path: /glip/conversations
    method: GET
    data_selector: records
- name: adaptive_card
  endpoint:
    path: /team-messaging/v1/chats/chatId/adaptive-cards
    method: POST
    data_selector: id
- name: adaptive_card
  endpoint:
    path: /team-messaging/v1/chats/{chatId}/adaptive-cards
    method: POST
- name: Create Webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigCreateWebinar
    method: POST
- name: List User's Webinars
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigListWebinars
    method: GET
- name: Get Webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigGetWebinar
    method: GET
- name: Update Webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigUpdateWebinar
    method: PUT
- name: Delete Webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigDeleteWebinar
    method: DELETE
- name: webinars
  endpoint:
    path: /webinar/configuration/v1/webinars
    method: POST
    data_selector: null
    params: {}
- name: webinar
  endpoint:
    path: /webinar/configuration/v1/webinars
    method: POST
    data_selector: webinarCreationRequest
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: calls_aggregation
  endpoint:
    path: /analytics/calls/v1/accounts/accountId/aggregation/fetch
    method: POST
- name: aggregation_fetch
  endpoint:
    path: /analytics/calls/v1/accounts/~/aggregation/fetch
    method: POST
- name: analytics_calls
  endpoint:
    path: /analytics/calls/v1/accounts/{accountId}/aggregation/fetch
    method: POST
- name: account_info
  endpoint:
    path: /account/~/info
    method: GET
    data_selector: records
- name: account_info
  endpoint:
    path: /restapi/v2/accounts/{accountId}
    method: GET
    data_selector: records
    params: {}
- name: listEmergencyLocations
  endpoint:
    path: /api/v1.0/automatic-location-updates/emergency-locations
    method: GET
    data_selector: records
- name: emergency_locations
  endpoint:
    path: /restapi/v1.0/account/{accountId}/emergency-locations
    method: GET
    data_selector: records
    params: {}
- name: emergency_locations
  endpoint:
    path: /restapi/v1.0/account/{accountId}/emergency-locations
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /restapi/v1.0/account/accountId/extension/extensionId/address-book/contact
    method: GET
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/address-book/contact
    method: GET
    data_selector: records
    params: {}
- name: assigned_role
  endpoint:
    path: /restapi/v1.0/account/~/assigned-role
    method: GET
    data_selector: records
- name: assigned_role
  endpoint:
    path: /restapi/v1.0/account/{accountId}/assigned-role
    method: GET
- name: subscriptions
  endpoint:
    path: /restapi/v1.0/subscription
    method: GET
    data_selector: records
    params: {}
- name: subscription
  endpoint:
    path: /restapi/v1.0/subscription
    method: GET
    data_selector: records
- name: api_info
  endpoint:
    path: /restapi/
    method: GET
    data_selector: apiVersions
- name: webinars
  endpoint:
    path: /api/reference/webinars
    method: GET
    data_selector: records
    params: {}
- name: sessions
  endpoint:
    path: /api/reference/sessions
    method: GET
    data_selector: records
    params: {}
- name: webinar
  endpoint:
    path: /webinar/configuration/v1/webinars
    method: POST
    data_selector: id
- name: webinar
  endpoint:
    path: /restapi/v1.0/webinars
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /restapi/v1.0/sessions
    method: GET
    data_selector: records
- name: webinars
  endpoint:
    path: /webinar/configuration/v1/webinars
    method: GET
    data_selector: records
- name: webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions
    method: GET
- name: invitee
  endpoint:
    path: /api-reference/Invitees
    method: GET
- name: historical_webinar
  endpoint:
    path: /api-reference/Historical-Webinars
    method: GET
- name: historical_recording
  endpoint:
    path: /api-reference/Historical-Recordings
    method: GET
- name: registration_management
  endpoint:
    path: /api-reference/Registration-Management
    method: GET
- name: registrant
  endpoint:
    path: /api-reference/Registrants
    method: GET
- name: webinar_subscription
  endpoint:
    path: /api-reference/Webinar-Subscriptions
    method: GET
- name: webinar_notification
  endpoint:
    path: /api-reference/Webinar
    method: GET
- name: webinar
  endpoint:
    path: /webinar/configuration/v1/webinars/{webinarId}
    method: GET
    data_selector: id
- name: webinar
  endpoint:
    path: /api/reference/Webinars-and-Sessions
    method: GET
    data_selector: records
    params: {}
- name: invitee
  endpoint:
    path: /api/reference/Invitees
    method: GET
    data_selector: records
    params: {}
- name: webinar
  endpoint:
    path: /webinar/configuration/v1/webinars/{webinarId}
    method: PATCH
    data_selector: settings
    params: {}
- name: webinar
  endpoint:
    path: /webinar/configuration/v1/webinars/{webinarId}
    method: PATCH
    data_selector: webinars
    params: {}
- name: webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions
    method: GET
- name: invitees
  endpoint:
    path: /api-reference/Invitees
    method: GET
- name: historical_webinars
  endpoint:
    path: /api-reference/Historical-Webinars
    method: GET
- name: registrants
  endpoint:
    path: /api-reference/Registrants
    method: GET
- name: webinar
  endpoint:
    path: /webinar/configuration/v1/webinars/webinarId
    method: DELETE
- name: webinars
  endpoint:
    path: /api/v1/webinars
    method: GET
    data_selector: records
- name: sessions
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: records
- name: sessions
  endpoint:
    path: /webinar/configuration/v1/sessions
    method: GET
    data_selector: records
    params: {}
- name: create_webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigCreateWebinar
    method: POST
- name: list_user_webinars
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigListWebinars
    method: GET
- name: get_webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigGetWebinar
    method: GET
- name: update_webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigUpdateWebinar
    method: PUT
- name: delete_webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigDeleteWebinar
    method: DELETE
- name: webinar_sessions
  endpoint:
    path: /webinar/configuration/v1/company/sessions
    method: GET
    data_selector: records
    params: {}
- name: webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions
    method: GET
- name: invitee
  endpoint:
    path: /api-reference/Invitees
    method: GET
- name: historical_webinar
  endpoint:
    path: /api-reference/Historical-Webinars
    method: GET
- name: create_webinar_session
  endpoint:
    path: /webinar/configuration/v1/webinars/webinarId/sessions
    method: POST
    data_selector: id
- name: webinar_session
  endpoint:
    path: /webinar/configuration/v1/webinars/{webinarId}/sessions
    method: POST
    data_selector: response
- name: webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions
    method: GET
    data_selector: records
- name: invitees
  endpoint:
    path: /api-reference/Invitees
    method: GET
    data_selector: records
- name: webinar_session
  endpoint:
    path: /webinar/configuration/v1/webinars/webinarId/sessions/sessionId
    method: PATCH
    data_selector: session
    params: {}
- name: webinar_sessions
  endpoint:
    path: /webinar/configuration/v1/webinars/{webinarId}/sessions/{sessionId}
    method: PATCH
    data_selector: body
    params: {}
- name: webinar
  endpoint:
    path: /api/v1/webinars
    method: GET
    data_selector: records
    params: {}
- name: webinar_session
  endpoint:
    path: /webinar/configuration/v1/webinars/{webinarId}/sessions/{sessionId}
    method: GET
    data_selector: id
- name: Create Webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigCreateWebinar
    method: POST
- name: List User's Webinars
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigListWebinars
    method: GET
- name: Get Webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigGetWebinar
    method: GET
- name: Update Webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigUpdateWebinar
    method: PUT
- name: Delete Webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigDeleteWebinar
    method: DELETE
- name: webinar_session
  endpoint:
    path: /webinar/configuration/v1/webinars/webinarId/sessions/sessionId
    method: DELETE
- name: webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions
    method: GET
- name: invitees
  endpoint:
    path: /api-reference/Invitees
    method: GET
- name: registrants
  endpoint:
    path: /api-reference/Registrants
    method: GET
- name: Bulk Add/Delete Session Invitees
  endpoint:
    path: /webinar/configuration/v1/webinars/{webinarId}/sessions/{sessionId}/invitees
    method: PATCH
- name: webinars
  endpoint:
    path: /api/reference/webinars
    method: GET
    data_selector: records
- name: sessions
  endpoint:
    path: /api/reference/sessions
    method: GET
    data_selector: records
- name: invitees
  endpoint:
    path: /webinar/configuration/v1/webinars/{webinarId}/sessions/{sessionId}/invitees
    method: GET
    data_selector: records
- name: webinar
  endpoint:
    path: /api/v1/webinars
    method: GET
    data_selector: records
    params: {}
- name: session_invitee
  endpoint:
    path: /webinar/configuration/v1/webinars/{webinarId}/sessions/{sessionId}/invitees/{inviteeId}
    method: GET
    data_selector: id
- name: webinar
  endpoint:
    path: /api/reference/Webinars
    method: GET
    data_selector: records
- name: invitees
  endpoint:
    path: /api/reference/Invitees
    method: GET
    data_selector: records
- name: webinar_invitee
  endpoint:
    path: /webinar/configuration/v1/webinars/{webinarId}/sessions/{sessionId}/invitees/{inviteeId}
    method: PUT
    data_selector: id
    params: {}
- name: webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions
    method: GET
- name: invitees
  endpoint:
    path: /api-reference/Invitees
    method: GET
- name: historical_webinars
  endpoint:
    path: /api-reference/Historical-Webinars
    method: GET
- name: registrants
  endpoint:
    path: /api-reference/Registrants
    method: GET
- name: Invitee
  endpoint:
    path: /webinar/configuration/v1/webinars/{webinarId}/sessions/{sessionId}/invitees/{inviteeId}
    method: DELETE
- name: webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions
    method: GET
- name: invitee
  endpoint:
    path: /api-reference/Invitees
    method: GET
- name: historical_webinar
  endpoint:
    path: /api-reference/Historical-Webinars
    method: GET
- name: historical_recording
  endpoint:
    path: /api-reference/Historical-Recordings
    method: GET
- name: registration_management
  endpoint:
    path: /api-reference/Registration-Management
    method: GET
- name: historical_webinar
  endpoint:
    path: /webinar/history/v1/webinars/{webinarId}
    method: GET
    data_selector: id
- name: webinar
  endpoint:
    path: /api/reference/webinars
    method: GET
    data_selector: records
- name: invitees
  endpoint:
    path: /api/reference/invitees
    method: GET
    data_selector: records
- name: historical_webinar_sessions
  endpoint:
    path: /webinar/history/v1/sessions
    method: GET
    data_selector: records
    params:
      perPage: '100'
- name: Webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions
    method: GET
- name: Invitees
  endpoint:
    path: /api-reference/Invitees
    method: GET
- name: Historical Webinars
  endpoint:
    path: /api-reference/Historical-Webinars
    method: GET
- name: historical_webinar_sessions
  endpoint:
    path: /webinar/history/v1/company/sessions
    method: GET
    data_selector: records
    params:
      hostUserId: hostUserId
      status: status
      endTimeFrom: endTimeFrom
      endTimeTo: endTimeTo
      perPage: perPage
      pageToken: pageToken
- name: webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions
    method: GET
- name: invitee
  endpoint:
    path: /api-reference/Invitees
    method: GET
- name: historical_webinar
  endpoint:
    path: /api-reference/Historical-Webinars
    method: GET
- name: registrant
  endpoint:
    path: /api-reference/Registrants
    method: GET
- name: webinar_subscription
  endpoint:
    path: /api-reference/Webinar-Subscriptions
    method: GET
- name: historical_webinar_session
  endpoint:
    path: /webinar/history/v1/webinars/{webinarId}/sessions/{sessionId}
    method: GET
    data_selector: id
    params: {}
- name: webinar
  endpoint:
    path: /api/v1/webinars
    method: GET
    data_selector: records
    params: {}
- name: invitees
  endpoint:
    path: /webinar/history/v1/webinars/{webinarId}/sessions/{sessionId}/invitees
    method: GET
    data_selector: records
- name: webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions
    method: GET
    data_selector: records
- name: invitees
  endpoint:
    path: /api-reference/Invitees
    method: GET
    data_selector: records
- name: list_session_participants
  endpoint:
    path: /webinar/history/v1/webinars/{webinarId}/sessions/{sessionId}/participants
    method: GET
    data_selector: records
    params: {}
- name: webinars
  endpoint:
    path: /restapi/v1.0/webinars
    method: GET
    data_selector: records
- name: sessions
  endpoint:
    path: /restapi/v1.0/sessions
    method: GET
    data_selector: records
- name: Get Session Invitee
  endpoint:
    path: /webinar/history/v1/webinars/{webinarId}/sessions/{sessionId}/invitees/{inviteeId}
    method: GET
    data_selector: records
- name: webinar
  endpoint:
    path: /api/reference/Webinars
    method: GET
    data_selector: records
- name: registrant
  endpoint:
    path: /api/reference/Registrants
    method: GET
    data_selector: records
- name: participants
  endpoint:
    path: /webinar/history/v1/webinars/{webinarId}/sessions/{sessionId}/participants/self
    method: GET
    data_selector: participants
    params: {}
- name: webinar
  endpoint:
    path: /api/v1/webinars
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: records
- name: webinar_recordings
  endpoint:
    path: /webinar/history/v1/recordings
    method: GET
    data_selector: records
    params: {}
- name: webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions
    method: GET
- name: recording
  endpoint:
    path: /webinar/history/v1/recordings/{recordingId}
    method: GET
    data_selector: id
- name: webinar
  endpoint:
    path: /api/v1/webinars
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: records
- name: Get Webinar Recording Download Resource
  endpoint:
    path: /webinar/history/v1/recordings/{recordingId}/download
    method: GET
    data_selector: downloadUri
    params: {}
- name: Webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions
    method: GET
    data_selector: records
- name: Invitees
  endpoint:
    path: /api-reference/Invitees
    method: GET
    data_selector: records
- name: Historical Webinars
  endpoint:
    path: /api-reference/Historical-Webinars
    method: GET
    data_selector: records
- name: Historical Recordings
  endpoint:
    path: /api-reference/Historical-Recordings
    method: GET
    data_selector: records
- name: Registration Management
  endpoint:
    path: /api-reference/Registration-Management
    method: GET
    data_selector: records
- name: Registrants
  endpoint:
    path: /api-reference/Registrants
    method: GET
    data_selector: records
- name: Webinar Subscriptions
  endpoint:
    path: /api-reference/Webinar-Subscriptions
    method: GET
    data_selector: records
- name: Webinar Notifications
  endpoint:
    path: /api-reference/Webinar
    method: GET
    data_selector: records
- name: webinar_recordings
  endpoint:
    path: /webinar/history/v1/company/recordings
    method: GET
    data_selector: records
    params: {}
- name: Webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions
    method: GET
- name: webinar_recording
  endpoint:
    path: /webinar/history/v1/company/recordings/{recordingId}
    method: GET
    data_selector: records
- name: webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions
    method: GET
- name: invitees
  endpoint:
    path: /api-reference/Invitees
    method: GET
- name: historical_webinars
  endpoint:
    path: /api-reference/Historical-Webinars
    method: GET
- name: registration_session
  endpoint:
    path: /webinar/registration/v1/sessions/{sessionId}
    method: GET
    data_selector: ''
- name: webinar
  endpoint:
    path: /api/reference/Webinars-and-Sessions
    method: GET
    data_selector: records
- name: session_invitees
  endpoint:
    path: /api/reference/Invitees
    method: GET
    data_selector: records
- name: registration_session
  endpoint:
    path: /webinar/registration/v1/sessions/sessionId
    method: PATCH
    data_selector: response
    params: {}
- name: webinar_registration_session
  endpoint:
    path: /webinar/registration/v1/sessions/{sessionId}
    method: PATCH
    data_selector: body
    params: {}
- name: Webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions
    method: GET
- name: Invitees
  endpoint:
    path: /api-reference/Invitees
    method: GET
- name: Historical Webinars
  endpoint:
    path: /api-reference/Historical-Webinars
    method: GET
- name: Registration Management
  endpoint:
    path: /api-reference/Registration-Management
    method: GET
- name: Registrants
  endpoint:
    path: /api-reference/Registrants
    method: GET
- name: registrant
  endpoint:
    path: /webinar/registration/v1/sessions/{sessionId}/registrants/{registrantId}
    method: GET
    data_selector: records
- name: webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions
    method: GET
- name: invitees
  endpoint:
    path: /api-reference/Invitees
    method: GET
- name: historical_webinars
  endpoint:
    path: /api-reference/Historical-Webinars
    method: GET
- name: registrants
  endpoint:
    path: /api-reference/Registrants
    method: GET
- name: webinar_subscriptions
  endpoint:
    path: /api-reference/Webinar-Subscriptions
    method: GET
- name: registrant
  endpoint:
    path: /webinar/registration/v1/sessions/sessionId/registrants/registrantId
    method: DELETE
- name: webinar
  endpoint:
    path: /api/reference/Webinar
    method: GET
    data_selector: records
- name: registrant
  endpoint:
    path: /api/reference/Registrants
    method: GET
    data_selector: records
- name: registrants
  endpoint:
    path: /webinar/registration/v1/sessions/sessionId/registrants
    method: GET
    data_selector: records
    params:
      perPage: '100'
      includeQuestionnaire: 'false'
- name: Create Webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigCreateWebinar
    method: POST
- name: List User's Webinars
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigListWebinars
    method: GET
- name: Get Webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigGetWebinar
    method: GET
- name: Update Webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigUpdateWebinar
    method: PUT
- name: Delete Webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigDeleteWebinar
    method: DELETE
- name: List Sessions across Multiple Webinars
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigListAllSessions
    method: GET
- name: List Sessions across Multiple Webinars/Hosts
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigListAllCompanySessions
    method: GET
- name: Create Webinar Session
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigCreateSession
    method: POST
- name: Update Webinar Session
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigUpdateSession
    method: PUT
- name: Get Webinar Session
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigGetSession
    method: GET
- name: Delete Webinar Session
  endpoint:
    path: /api-reference/Webinars-and-Sessions/rcwConfigDeleteSession
    method: DELETE
- name: registrant
  endpoint:
    path: /webinar/registration/v1/sessions/sessionId/registrants
    method: POST
- name: Webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions
    method: GET
- name: Invitees
  endpoint:
    path: /api-reference/Invitees
    method: GET
- name: Historical Webinars
  endpoint:
    path: /api-reference/Historical-Webinars
    method: GET
- name: Registrants
  endpoint:
    path: /api-reference/Registrants
    method: GET
- name: Webinar Subscriptions
  endpoint:
    path: /api-reference/Webinar-Subscriptions
    method: GET
- name: webinar_subscriptions
  endpoint:
    path: /webinar/notifications/v1/subscriptions
    method: GET
    data_selector: records
- name: webinar
  endpoint:
    path: /api/reference/Webinars-and-Sessions/rcwConfigCreateWebinar
    method: POST
    data_selector: records
- name: session_invitee
  endpoint:
    path: /api/reference/Invitees/rcwConfigListInvitees
    method: GET
    data_selector: records
- name: webinar_subscriptions
  endpoint:
    path: /webinar/notifications/v1/subscriptions
    method: POST
    data_selector: uri
- name: webinar
  endpoint:
    path: /api/v1/webinars
    method: GET
    data_selector: records
- name: invitees
  endpoint:
    path: /api/v1/invitees
    method: GET
    data_selector: records
- name: webinar_subscription
  endpoint:
    path: /webinar/notifications/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: subscription
    params: {}
- name: webinar
  endpoint:
    path: /api-reference/Webinars-and-Sessions/
    method: GET
- name: webinar_subscription
  endpoint:
    path: /webinar/notifications/v1/subscriptions/{subscriptionId}
    method: PUT
- name: webinar
  endpoint:
    path: /api/reference/webinar
    method: GET
    data_selector: records
- name: registration
  endpoint:
    path: /api/reference/registration
    method: GET
    data_selector: records
- name: webinar_subscription
  endpoint:
    path: /webinar/notifications/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: webinars
  endpoint:
    path: /restapi/v1.0/webinars
    method: GET
    data_selector: records
- name: session_invitees
  endpoint:
    path: /restapi/v1.0/invitees
    method: GET
    data_selector: records
- name: webinar_subscription
  endpoint:
    path: /webinar/notifications/v1/subscriptions/{subscriptionId}/renew
    method: POST
- name: webinar
  endpoint:
    path: /webinar/configuration/v1/company/sessions
    method: GET
    data_selector: body
    params: {}
- name: session
  endpoint:
    path: /webinar/configuration/v1/company/sessions/{sessionId}
    method: GET
    data_selector: body
    params: {}
- name: webinar
  endpoint:
    path: /webinar/v1
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /webinar/sessions
    method: GET
    data_selector: records
    params: {}
- name: webinar
  endpoint:
    path: /webinar/v1/company/sessions
    method: GET
    data_selector: sessions
- name: webinars
  endpoint:
    path: /webinar/v1/company/sessions
    method: GET
    data_selector: records
- name: list_user_recordings
  endpoint:
    path: /rcvideo/v1/account/{accountId}/extension/{extensionId}/recordings
    method: GET
    data_selector: recordings
- name: recordings
  endpoint:
    path: /rcvideo/v1/account/{accountId}/extension/{extensionId}/recordings
    method: GET
    data_selector: records
    params: {}
- name: adaptive_card
  endpoint:
    path: /team-messaging/v1/chats/chatId/adaptive-cards
    method: POST
    data_selector: id
- name: adaptive_card
  endpoint:
    path: /team-messaging/v1/chats/{chatId}/adaptive-cards
    method: POST
- name: chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: adaptive_card
  endpoint:
    path: /team-messaging/v1/adaptive-cards/{cardId}
    method: GET
    data_selector: id
- name: adaptive_cards
  endpoint:
    path: /team-messaging/v1/adaptive-cards/{cardId}
    method: GET
    data_selector: records
- name: adaptive_card
  endpoint:
    path: /api-reference/Adaptive-Cards
    method: GET
- name: calendar_events
  endpoint:
    path: /api-reference/Calendar-Events
    method: GET
- name: chats
  endpoint:
    path: /api-reference/Chats
    method: GET
- name: conversations
  endpoint:
    path: /api-reference/Conversations
    method: GET
- name: compliance_exports
  endpoint:
    path: /api-reference/Compliance-Exports
    method: GET
- name: incoming_webhooks
  endpoint:
    path: /api-reference/Incoming-Webhooks
    method: GET
- name: notes
  endpoint:
    path: /api-reference/Notes
    method: GET
- name: posts
  endpoint:
    path: /api-reference/Posts
    method: GET
- name: profile
  endpoint:
    path: /api-reference/Profile
    method: GET
- name: tasks
  endpoint:
    path: /api-reference/Tasks
    method: GET
- name: teams
  endpoint:
    path: /api-reference/Teams
    method: GET
- name: adaptive_card
  endpoint:
    path: /team-messaging/v1/adaptive-cards/{cardId}
    method: PUT
    data_selector: id
- name: adaptive_card
  endpoint:
    path: /team-messaging/v1/adaptive-cards/{cardId}
    method: PUT
- name: adaptive_card
  endpoint:
    path: /api-reference/Adaptive-Cards
    method: GET
- name: calendar_events
  endpoint:
    path: /api-reference/Calendar-Events
    method: GET
- name: chats
  endpoint:
    path: /api-reference/Chats
    method: GET
- name: conversations
  endpoint:
    path: /api-reference/Conversations
    method: GET
- name: compliance_exports
  endpoint:
    path: /api-reference/Compliance-Exports
    method: GET
- name: incoming_webhooks
  endpoint:
    path: /api-reference/Incoming-Webhooks
    method: GET
- name: notes
  endpoint:
    path: /api-reference/Notes
    method: GET
- name: posts
  endpoint:
    path: /api-reference/Posts
    method: GET
- name: profile
  endpoint:
    path: /api-reference/Profile
    method: GET
- name: tasks
  endpoint:
    path: /api-reference/Tasks
    method: GET
- name: teams
  endpoint:
    path: /api-reference/Teams
    method: GET
- name: adaptive_card
  endpoint:
    path: /team-messaging/v1/adaptive-cards/cardId
    method: DELETE
- name: chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: events
  endpoint:
    path: /team-messaging/v1/events
    method: GET
    data_selector: records
    params:
      recordCount: 30
- name: List Chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: List Conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: List Teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: events
  endpoint:
    path: /team-messaging/v1/events
    method: POST
    data_selector: id
    params: {}
- name: adaptive_card
  endpoint:
    path: /api-reference/Adaptive-Cards
    method: GET
- name: calendar_events
  endpoint:
    path: /api-reference/Calendar-Events
    method: GET
- name: chats
  endpoint:
    path: /api-reference/Chats
    method: GET
- name: conversations
  endpoint:
    path: /api-reference/Conversations
    method: GET
- name: compliance_exports
  endpoint:
    path: /api-reference/Compliance-Exports
    method: GET
- name: incoming_webhooks
  endpoint:
    path: /api-reference/Incoming-Webhooks
    method: GET
- name: notes
  endpoint:
    path: /api-reference/Notes
    method: GET
- name: posts
  endpoint:
    path: /api-reference/Posts
    method: GET
- name: profile
  endpoint:
    path: /api-reference/Profile
    method: GET
- name: tasks
  endpoint:
    path: /api-reference/Tasks
    method: GET
- name: teams
  endpoint:
    path: /api-reference/Teams
    method: GET
- name: event
  endpoint:
    path: /team-messaging/v1/events/eventId
    method: GET
    data_selector: id
- name: List User Events
  endpoint:
    path: /api-reference/Calendar-Events/readGlipEventsNew
    method: GET
- name: Create Event
  endpoint:
    path: /api-reference/Calendar-Events/createEventNew
    method: POST
- name: Get Event
  endpoint:
    path: /api-reference/Calendar-Events/readEventNew
    method: GET
- name: Update Event
  endpoint:
    path: /api-reference/Calendar-Events/updateEventNew
    method: PUT
- name: Delete Event
  endpoint:
    path: /api-reference/Calendar-Events/deleteEventNew
    method: DELETE
- name: List Group Events
  endpoint:
    path: /api-reference/Calendar-Events/listGroupEventsNew
    method: GET
- name: Create Event by Group ID
  endpoint:
    path: /api-reference/Calendar-Events/createEventByGroupIdNew
    method: POST
- name: events
  endpoint:
    path: /team-messaging/v1/events/{eventId}
    method: PUT
    data_selector: id
- name: events
  endpoint:
    path: /team-messaging/v1/events/{eventId}
    method: PUT
- name: adaptive_card
  endpoint:
    path: /api-reference/Adaptive-Cards/createGlipAdaptiveCardNew
    method: POST
- name: user_events
  endpoint:
    path: /api-reference/Calendar-Events/readGlipEventsNew
    method: GET
- name: chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: notes
  endpoint:
    path: /api-reference/Notes/listChatNotesNew
    method: GET
- name: tasks
  endpoint:
    path: /api-reference/Tasks/listChatTasksNew
    method: GET
- name: teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: calendar_event
  endpoint:
    path: /team-messaging/v1/events/{eventId}
    method: DELETE
    data_selector: response
    params: {}
- name: chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: group_events
  endpoint:
    path: /team-messaging/v1/groups/groupId/events
    method: GET
    data_selector: events
    params: {}
- name: incoming_webhook
  endpoint:
    path: /api-reference/Incoming-Webhooks
    method: GET
- name: notes
  endpoint:
    path: /api-reference/Notes
    method: GET
- name: tasks
  endpoint:
    path: /api-reference/Tasks
    method: GET
- name: calendar_events
  endpoint:
    path: /team-messaging/v1/groups/groupId/events
    method: POST
    data_selector: id
- name: events
  endpoint:
    path: /team-messaging/v1/groups/{groupId}/events
    method: POST
- name: list_chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: get_chat
  endpoint:
    path: /api-reference/Chats/readGlipChatNew
    method: GET
- name: list_recent_chats
  endpoint:
    path: /api-reference/Chats/listRecentChatsNew
    method: GET
- name: list_favorite_chats
  endpoint:
    path: /api-reference/Chats/listFavoriteChatsNew
    method: GET
- name: add_chat_to_favorites
  endpoint:
    path: /api-reference/Chats/favoriteGlipChatNew
    method: POST
- name: remove_chat_from_favorites
  endpoint:
    path: /api-reference/Chats/unfavoriteGlipChatNew
    method: DELETE
- name: chats
  endpoint:
    path: /team-messaging/v1/chats
    method: GET
    data_selector: records
    params: {}
- name: List Chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: Get Chat
  endpoint:
    path: /api-reference/Chats/readGlipChatNew
    method: GET
- name: List Recent Chats
  endpoint:
    path: /api-reference/Chats/listRecentChatsNew
    method: GET
- name: List Favorite Chats
  endpoint:
    path: /api-reference/Chats/listFavoriteChatsNew
    method: GET
- name: chat
  endpoint:
    path: /team-messaging/v1/chats/chatId
    method: GET
    data_selector: id
- name: chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: recent_chats
  endpoint:
    path: /team-messaging/v1/recent/chats
    method: GET
    data_selector: records
    params:
      recordCount: 30
- name: favorites
  endpoint:
    path: /team-messaging/v1/favorites
    method: GET
    data_selector: records
    params: {}
- name: chats
  endpoint:
    path: /restapi/v1.0/glip/chats
    method: GET
    data_selector: records
    params: {}
- name: teams
  endpoint:
    path: /restapi/v1.0/glip/teams
    method: GET
    data_selector: records
    params: {}
- name: chats
  endpoint:
    path: /team-messaging/v1/chats/chatId/favorite
    method: POST
- name: chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: notes
  endpoint:
    path: /api-reference/Notes/listChatNotesNew
    method: GET
- name: chats
  endpoint:
    path: /team-messaging/v1/chats/chatId/unfavorite
    method: POST
- name: List Chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: List Conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: List Teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: conversations
  endpoint:
    path: /team-messaging/v1/conversations
    method: GET
    data_selector: records
    params:
      recordCount: 30
- name: chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: notes
  endpoint:
    path: /api-reference/Notes/listChatNotesNew
    method: GET
- name: conversations
  endpoint:
    path: /team-messaging/v1/conversations
    method: POST
    data_selector: id
    params: {}
- name: List Chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: Get Chat
  endpoint:
    path: /api-reference/Chats/readGlipChatNew
    method: GET
- name: conversations
  endpoint:
    path: /team-messaging/v1/conversations/{chatId}
    method: GET
    data_selector: members
- name: conversations
  endpoint:
    path: /restapi/v1.0/glip/conversations
    method: GET
    data_selector: records
- name: chats
  endpoint:
    path: /restapi/v1.0/glip/chats
    method: GET
    data_selector: records
- name: data_export_tasks
  endpoint:
    path: /team-messaging/v1/data-export
    method: GET
    data_selector: tasks
    params: {}
- name: list_chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: list_conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: list_teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: data_export
  endpoint:
    path: /team-messaging/v1/data-export
    method: POST
    data_selector: uri
    params: {}
- name: data_export
  endpoint:
    path: /team-messaging/v1/data-export
    method: POST
    data_selector: null
    params: {}
- name: chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: tasks
  endpoint:
    path: /api-reference/Tasks/listChatTasksNew
    method: GET
- name: teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: data_export_task
  endpoint:
    path: /team-messaging/v1/data-export/taskId
    method: GET
    data_selector: uri
- name: chats
  endpoint:
    path: /api/v1/chats
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: records
- name: webhooks
  endpoint:
    path: /team-messaging/v1/groups/groupId/webhooks
    method: GET
    data_selector: records
- name: list_chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: get_chat
  endpoint:
    path: /api-reference/Chats/readGlipChatNew
    method: GET
- name: list_conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: webhook
  endpoint:
    path: /team-messaging/v1/groups/groupId/webhooks
    method: POST
    data_selector: ''
- name: chats
  endpoint:
    path: /restapi/v1.0/glip/chats
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /restapi/v1.0/glip/conversations
    method: GET
    data_selector: records
- name: webhooks
  endpoint:
    path: /team-messaging/v1/webhooks
    method: GET
    data_selector: records
    params: {}
- name: chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: webhook
  endpoint:
    path: /team-messaging/v1/webhooks/{webhookId}
    method: GET
    data_selector: response
- name: Adaptive Card
  endpoint:
    path: /api-reference/Adaptive-Cards
    method: GET
- name: Calendar Events
  endpoint:
    path: /api-reference/Calendar-Events
    method: GET
- name: Chats
  endpoint:
    path: /api-reference/Chats
    method: GET
- name: Conversations
  endpoint:
    path: /api-reference/Conversations
    method: GET
- name: Compliance Exports
  endpoint:
    path: /api-reference/Compliance-Exports
    method: GET
- name: Incoming Webhooks
  endpoint:
    path: /api-reference/Incoming-Webhooks
    method: GET
- name: Notes
  endpoint:
    path: /api-reference/Notes
    method: GET
- name: Posts
  endpoint:
    path: /api-reference/Posts
    method: GET
- name: Profile
  endpoint:
    path: /api-reference/Profile
    method: GET
- name: Tasks
  endpoint:
    path: /api-reference/Tasks
    method: GET
- name: Teams
  endpoint:
    path: /api-reference/Teams
    method: GET
- name: webhook
  endpoint:
    path: /team-messaging/v1/webhooks/webhookId
    method: DELETE
- name: List Chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: Create Chat
  endpoint:
    path: /api-reference/Chats/createGlipChatNew
    method: POST
- name: List Teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: Create Team
  endpoint:
    path: /api-reference/Teams/createGlipTeamNew
    method: POST
- name: webhook
  endpoint:
    path: /team-messaging/v1/webhooks/webhookId/activate
    method: POST
- name: adaptive_card
  endpoint:
    path: /api-reference/Adaptive-Cards/createGlipAdaptiveCardNew
    method: POST
- name: calendar_event
  endpoint:
    path: /api-reference/Calendar-Events/listUserEvents
    method: GET
- name: chat
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: conversation
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: note
  endpoint:
    path: /api-reference/Notes/listChatNotesNew
    method: GET
- name: post
  endpoint:
    path: /api-reference/Posts/readGlipPostsNew
    method: GET
- name: profile
  endpoint:
    path: /api-reference/Profile/readGlipPersonNew
    method: GET
- name: task
  endpoint:
    path: /api-reference/Tasks/listChatTasksNew
    method: GET
- name: team
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: webhook
  endpoint:
    path: /team-messaging/v1/webhooks/webhookId/suspend
    method: POST
- name: List Chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: Create Task
  endpoint:
    path: /api-reference/Tasks/createTask
    method: POST
- name: Get Person
  endpoint:
    path: /api-reference/Profile/readGlipPersonNew
    method: GET
- name: notes
  endpoint:
    path: /team-messaging/v1/chats/chatId/notes
    method: GET
    data_selector: records
    params:
      recordCount: 30
- name: Adaptive Card
  endpoint:
    path: /api-reference/Adaptive-Cards/createGlipAdaptiveCardNew
    method: POST
- name: User Events
  endpoint:
    path: /api-reference/Calendar-Events/readGlipEventsNew
    method: GET
- name: Chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: Conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: Data Export Tasks
  endpoint:
    path: /api-reference/Compliance-Exports/listDataExportTasksNew
    method: GET
- name: Webhooks
  endpoint:
    path: /api-reference/Incoming-Webhooks/listGlipWebhooksNew
    method: GET
- name: Notes
  endpoint:
    path: /api-reference/Notes/listChatNotesNew
    method: GET
- name: Tasks
  endpoint:
    path: /api-reference/Tasks/listChatTasksNew
    method: GET
- name: Teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: notes
  endpoint:
    path: /team-messaging/v1/chats/chatId/notes
    method: POST
    data_selector: id
    params: {}
- name: chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: tasks
  endpoint:
    path: /api-reference/Tasks/listChatTasksNew
    method: GET
- name: teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: notes
  endpoint:
    path: /team-messaging/v1/notes/noteId
    method: GET
    data_selector: id
    params: {}
- name: chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: notes
  endpoint:
    path: /api-reference/Notes/listChatNotesNew
    method: GET
- name: notes
  endpoint:
    path: /team-messaging/v1/notes/noteId
    method: DELETE
    data_selector: null
    params: {}
- name: List Chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: Get Chat
  endpoint:
    path: /api-reference/Chats/readGlipChatNew
    method: GET
- name: List Conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: Create/Open Conversation
  endpoint:
    path: /api-reference/Conversations/createGlipConversationNew
    method: POST
- name: Get Conversation
  endpoint:
    path: /api-reference/Conversations/readGlipConversationNew
    method: GET
- name: notes
  endpoint:
    path: /team-messaging/v1/notes/noteId
    method: PATCH
    data_selector: response
    params:
      releaseLock: false
- name: List User Events
  endpoint:
    path: /api-reference/Calendar-Events/readGlipEventsNew
    method: GET
- name: Create Event
  endpoint:
    path: /api-reference/Calendar-Events/createEventNew
    method: POST
- name: List Chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: Create Task
  endpoint:
    path: /api-reference/Tasks/createTaskNew
    method: POST
- name: notes
  endpoint:
    path: /team-messaging/v1/notes
    method: POST
    data_selector: notes
- name: list_chats
  endpoint:
    path: /restapi/v1.0/glip/chats
    method: GET
    data_selector: records
- name: get_chat
  endpoint:
    path: /restapi/v1.0/glip/chats/{chatId}
    method: GET
    data_selector: records
- name: chats
  endpoint:
    path: /api/v1.0/glip/chats
    method: GET
    data_selector: records
- name: teams
  endpoint:
    path: /api/v1.0/glip/teams
    method: GET
    data_selector: records
- name: notes
  endpoint:
    path: /team-messaging/v1/notes/noteId/publish
    method: POST
- name: chats
  endpoint:
    path: /v1.0/chats
    method: GET
    data_selector: records
- name: teams
  endpoint:
    path: /v1.0/teams
    method: GET
    data_selector: records
- name: posts
  endpoint:
    path: /team-messaging/v1/chats/chatId/posts/postId
    method: GET
- name: list_chats
  endpoint:
    path: /restapi/v1.0/glip/chats
    method: GET
    data_selector: records
- name: list_conversations
  endpoint:
    path: /restapi/v1.0/glip/conversations
    method: GET
    data_selector: records
- name: posts
  endpoint:
    path: /team-messaging/v1/chats/chatId/posts/postId
    method: DELETE
- name: List Chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: Get Chat
  endpoint:
    path: /api-reference/Chats/readGlipChatNew
    method: GET
- name: List Recent Chats
  endpoint:
    path: /api-reference/Chats/listRecentChatsNew
    method: GET
- name: List Favorite Chats
  endpoint:
    path: /api-reference/Chats/listFavoriteChatsNew
    method: GET
- name: posts
  endpoint:
    path: /team-messaging/v1/chats/chatId/posts/postId
    method: PATCH
    data_selector: response
    params: {}
- name: list_chats
  endpoint:
    path: /v1/chats
    method: GET
    data_selector: records
    params: {}
- name: list_conversations
  endpoint:
    path: /v1/conversations
    method: GET
    data_selector: records
    params: {}
- name: posts
  endpoint:
    path: /team-messaging/v1/chats/chatId/posts
    method: GET
    data_selector: records
- name: adaptive_card
  endpoint:
    path: /api-reference/Adaptive-Cards
    method: GET
- name: calendar_events
  endpoint:
    path: /api-reference/Calendar-Events
    method: GET
- name: chats
  endpoint:
    path: /api-reference/Chats
    method: GET
- name: conversations
  endpoint:
    path: /api-reference/Conversations
    method: GET
- name: compliance_exports
  endpoint:
    path: /api-reference/Compliance-Exports
    method: GET
- name: incoming_webhooks
  endpoint:
    path: /api-reference/Incoming-Webhooks
    method: GET
- name: notes
  endpoint:
    path: /api-reference/Notes
    method: GET
- name: posts
  endpoint:
    path: /api-reference/Posts
    method: GET
- name: profile
  endpoint:
    path: /api-reference/Profile
    method: GET
- name: tasks
  endpoint:
    path: /api-reference/Tasks
    method: GET
- name: teams
  endpoint:
    path: /api-reference/Teams
    method: GET
- name: posts
  endpoint:
    path: /team-messaging/v1/chats/chatId/posts
    method: POST
    data_selector: ''
    params: {}
- name: team_messaging_posts
  endpoint:
    path: /team-messaging/v1/chats/{chatId}/posts
    method: POST
    data_selector: body
    params: {}
- name: messages
  endpoint:
    path: /restapi/v1.0/glip/messages
    method: GET
    data_selector: records
- name: chats
  endpoint:
    path: /restapi/v1.0/glip/chats
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /team-messaging/v1/files
    method: POST
- name: list_chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: list_conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: list_teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: person
  endpoint:
    path: /team-messaging/v1/persons/{personId}
    method: GET
    data_selector: response
    params: {}
- name: chats
  endpoint:
    path: /restapi/v1.0/glip/chats
    method: GET
    data_selector: records
- name: teams
  endpoint:
    path: /restapi/v1.0/glip/teams
    method: GET
    data_selector: records
- name: company_info
  endpoint:
    path: /team-messaging/v1/companies/companyId
    method: GET
    data_selector: ''
- name: list_chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: list_conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: list_notes
  endpoint:
    path: /api-reference/Notes/listChatNotesNew
    method: GET
- name: list_teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: tasks
  endpoint:
    path: /team-messaging/v1/chats/chatId/tasks
    method: GET
    data_selector: records
    params: {}
- name: chat_tasks
  endpoint:
    path: /team-messaging/v1/chats/{chatId}/tasks
    method: GET
    data_selector: records
    params: {}
- name: List Chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: List Teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: tasks
  endpoint:
    path: /team-messaging/v1/chats/chatId/tasks
    method: POST
    data_selector: id
- name: tasks
  endpoint:
    path: /team-messaging/v1/chats/{chatId}/tasks
    method: POST
    data_selector: body
- name: chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: notes
  endpoint:
    path: /api-reference/Notes/listChatNotesNew
    method: GET
- name: tasks
  endpoint:
    path: /api-reference/Tasks/listChatTasksNew
    method: GET
- name: teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: task
  endpoint:
    path: /team-messaging/v1/tasks/taskId
    method: GET
    data_selector: id
    params: {}
- name: chats
  endpoint:
    path: /restapi/v1.0/glip/chats
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /restapi/v1.0/glip/conversations
    method: GET
    data_selector: records
- name: tasks
  endpoint:
    path: /team-messaging/v1/tasks/taskId
    method: DELETE
    data_selector: '204'
- name: List Chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: Get Chat
  endpoint:
    path: /api-reference/Chats/readGlipChatNew
    method: GET
- name: List Recent Chats
  endpoint:
    path: /api-reference/Chats/listRecentChatsNew
    method: GET
- name: List Favorite Chats
  endpoint:
    path: /api-reference/Chats/listFavoriteChatsNew
    method: GET
- name: tasks
  endpoint:
    path: /team-messaging/v1/tasks/{taskId}
    method: PATCH
    data_selector: records
- name: tasks
  endpoint:
    path: /team-messaging/v1/tasks/{taskId}
    method: PATCH
- name: List Chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: List Conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: tasks
  endpoint:
    path: /team-messaging/v1/tasks/taskId/complete
    method: POST
- name: chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: teams
  endpoint:
    path: /team-messaging/v1/teams
    method: GET
    data_selector: records
    params:
      recordCount: 30
- name: teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: teams
  endpoint:
    path: /team-messaging/v1/teams
    method: POST
- name: chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: notes
  endpoint:
    path: /api-reference/Notes/listChatNotesNew
    method: GET
- name: posts
  endpoint:
    path: /api-reference/Posts/readGlipPostsNew
    method: GET
- name: tasks
  endpoint:
    path: /api-reference/Tasks/listChatTasksNew
    method: GET
- name: teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: team
  endpoint:
    path: /team-messaging/v1/teams/{chatId}
    method: GET
    data_selector: id
- name: chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: notes
  endpoint:
    path: /api-reference/Notes/listChatNotesNew
    method: GET
- name: tasks
  endpoint:
    path: /api-reference/Tasks/listChatTasksNew
    method: GET
- name: teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: teams
  endpoint:
    path: /team-messaging/v1/teams/chatId
    method: DELETE
- name: chats
  endpoint:
    path: /api-reference/Chats
    method: GET
- name: conversations
  endpoint:
    path: /api-reference/Conversations
    method: GET
- name: notes
  endpoint:
    path: /api-reference/Notes
    method: GET
- name: tasks
  endpoint:
    path: /api-reference/Tasks
    method: GET
- name: teams
  endpoint:
    path: /api-reference/Teams
    method: GET
- name: teams
  endpoint:
    path: /team-messaging/v1/teams/chatId
    method: PATCH
- name: teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: teams
  endpoint:
    path: /team-messaging/v1/teams/chatId/join
    method: POST
- name: teams
  endpoint:
    path: /restapi/v1.0/teams
    method: GET
    data_selector: records
    params: {}
- name: teams
  endpoint:
    path: /team-messaging/v1/teams/{chatId}/leave
    method: POST
- name: adaptive_card
  endpoint:
    path: /api-reference/Adaptive-Cards/createGlipAdaptiveCardNew
    method: POST
- name: calendar_events
  endpoint:
    path: /api-reference/Calendar-Events/listUserEvents
    method: GET
- name: chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: notes
  endpoint:
    path: /api-reference/Notes/listChatNotesNew
    method: GET
- name: tasks
  endpoint:
    path: /api-reference/Tasks/listChatTasksNew
    method: GET
- name: teams
  endpoint:
    path: /api-reference/Teams/listGlipTeamsNew
    method: GET
- name: teams
  endpoint:
    path: /team-messaging/v1/teams/chatId/add
    method: POST
- name: List Chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: Get Chat
  endpoint:
    path: /api-reference/Chats/readGlipChatNew
    method: GET
- name: List Conversations
  endpoint:
    path: /api-reference/Conversations/listGlipConversationsNew
    method: GET
- name: Create/Open Conversation
  endpoint:
    path: /api-reference/Conversations/createGlipConversationNew
    method: POST
- name: Get Conversation
  endpoint:
    path: /api-reference/Conversations/readGlipConversationNew
    method: GET
- name: remove_team_members
  endpoint:
    path: /team-messaging/v1/teams/chatId/remove
    method: POST
- name: teams
  endpoint:
    path: /team-messaging/v1/teams/chatId/archive
    method: POST
- name: teams
  endpoint:
    path: /team-messaging/v1/teams/chatId/unarchive
    method: POST
- name: List Chats
  endpoint:
    path: /api-reference/Chats/listGlipChatsNew
    method: GET
- name: Get Chat
  endpoint:
    path: /api-reference/Chats/readGlipChatNew
    method: GET
- name: List Recent Chats
  endpoint:
    path: /api-reference/Chats/listRecentChatsNew
    method: GET
- name: List Favorite Chats
  endpoint:
    path: /api-reference/Chats/listFavoriteChatsNew
    method: GET
- name: Add Chat to Favorites
  endpoint:
    path: /api-reference/Chats/favoriteGlipChatNew
    method: POST
- name: Remove Chat from Favorites
  endpoint:
    path: /api-reference/Chats/unfavoriteGlipChatNew
    method: DELETE
- name: everyone_chat
  endpoint:
    path: /team-messaging/v1/everyone
    method: GET
    data_selector: ''
- name: everyone_chat
  endpoint:
    path: /team-messaging/v1/everyone
    method: PATCH
    data_selector: id
    params: {}
- name: sms_registration_campaign
  endpoint:
    path: /restapi/v1.0/account/{accountId}/sms-registration-brands/{tcrBrandId}/campaigns/{tcrCampaignId}/submit-phone-numbers
    method: POST
- name: call_log
  endpoint:
    path: /api/call-log
    method: GET
    data_selector: records
    params: {}
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: message_store
  endpoint:
    path: /restapi/v1.0/account/~/message-store
    method: GET
    data_selector: records
- name: sms
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/sms
    method: POST
    data_selector: messageStatus
    params: {}
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: message_store
  endpoint:
    path: /restapi/v1.0/account/~/message-store
    method: GET
    data_selector: records
- name: ring_out
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/ring-out
    method: POST
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: sms
  endpoint:
    path: /restapi/v1.0/account/~/sms
    method: GET
    data_selector: records
- name: ring_out
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/ring-out
    method: POST
    data_selector: status
    params: {}
- name: ring_out
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/ring-out
    method: POST
    data_selector: status
- name: ring_out
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/ring-out
    method: POST
    data_selector: status
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: ring_out
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/ring-out
    method: POST
    data_selector: status
- name: ring_out
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/ring-out
    method: POST
    data_selector: status
- name: ringout
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/ringout
    method: POST
    data_selector: response
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
    params: {}
- name: ring_out
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/ring-out
    method: POST
    data_selector: status
    params: {}
- name: ring_out_status
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/ring-out/{id}
    method: GET
    data_selector: status
    params: {}
- name: cancel_ring_out
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/ring-out/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: RingCentral Voice URI Scheme
  endpoint:
    path: /guide/voice/uri-scheme#ringcentral-voice-uri-scheme
    method: GET
    data_selector: URI schemes
- name: Standard URI Scheme
  endpoint:
    path: /guide/voice/uri-scheme#standard-uri-scheme
    method: GET
    data_selector: URI schemes
- name: telephony_sessions
  endpoint:
    path: /account/~/telephony/sessions/<telephonySessionId>
    method: GET
    data_selector: parties
- name: active_calls
  endpoint:
    path: /restapi/v1.0/account/~/active-calls
    method: GET
    data_selector: records
- name: active_calls_account_level
  endpoint:
    path: /restapi/v1.0/account/~/active-calls
    method: GET
- name: active_calls_extension_level
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/active-calls
    method: GET
- name: active_call
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: subscription
  endpoint:
    path: /restapi/v1.0/subscription
    method: POST
    data_selector: eventFilters
    params: {}
- name: forward_call_to_phone_number
  endpoint:
    path: /restapi/v1.0/account/~/telephony/sessions/<telephonySessionId>/parties/<partyId>/forward
    method: POST
    data_selector: null
    params: {}
- name: forward_call_to_voicemail
  endpoint:
    path: /restapi/v1.0/account/~/telephony/sessions/<telephonySessionId>/parties/<partyId>/forward
    method: POST
    data_selector: null
    params: {}
- name: reject_call
  endpoint:
    path: /restapi/v1.0/account/~/telephony/sessions/<telephonySessionId>/parties/<partyId>/reject
    method: POST
    data_selector: null
    params: {}
- name: active_calls
  endpoint:
    path: /restapi/v1.0/account/~/active-calls
    method: GET
    data_selector: records
    params: {}
- name: mute_unmute_participant
  endpoint:
    path: /account/~/telephony/sessions/<telephonySessionId>/parties/<partyId>
    method: PATCH
    data_selector: ''
    params: {}
- name: hold_participant
  endpoint:
    path: /account/~/telephony/sessions/<telephonySessionId>/parties/<partyId>/hold
    method: POST
    data_selector: ''
    params: {}
- name: transfer_call
  endpoint:
    path: /account/~/telephony/sessions/<telephonySessionId>/parties/<partyId>/transfer
    method: POST
    data_selector: ''
    params: {}
- name: park_call
  endpoint:
    path: /account/~/telephony/sessions/<telephonySessionId>/parties/<partyId>/transfer
    method: POST
    data_selector: ''
    params: {}
- name: record_call
  endpoint:
    path: /account/~/telephony/sessions/:telephonySessionId/parties/:partyId/recordings
    method: POST
    data_selector: ''
    params: {}
- name: flip_call
  endpoint:
    path: /account/~/telephony/sessions/<telephonySessionId>/parties/<partyId>/flip
    method: POST
    data_selector: ''
    params: {}
- name: end_call
  endpoint:
    path: /account/~/telephony/sessions/<telephonySessionId>/parties/<partyId>
    method: DELETE
    data_selector: ''
    params: {}
- name: call_monitoring_groups
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups
    method: POST
    data_selector: ''
    params: {}
- name: bulk_assign_members
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/bulk-assign
    method: POST
    data_selector: ''
    params: {}
- name: update_call_monitoring_group
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_call_monitoring_group
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}
    method: DELETE
    data_selector: ''
    params: {}
- name: call_monitoring_groups
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups
    method: POST
    data_selector: id
- name: bulk_assign_group_members
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/bulk-assign
    method: POST
    data_selector: id
- name: update_group
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}
    method: PUT
    data_selector: id
- name: delete_group
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}
    method: DELETE
    data_selector: id
- name: call_monitoring_group
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups
    method: GET
    data_selector: records
- name: call_monitoring_group_members
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/members
    method: GET
    data_selector: records
- name: call_monitoring_groups
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups
    method: GET
    data_selector: records
- name: call_monitoring_group_members
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/members
    method: GET
    data_selector: records
- name: agent_active_calls
  endpoint:
    path: /restapi/v1.0/account/~/extension/{agentExtensionId}/active-calls
    method: GET
    data_selector: records
- name: supervise_call_session
  endpoint:
    path: /restapi/v1.0/account/~/telephony/sessions/{telephonySessionId}/supervise
    method: POST
- name: active_calls
  endpoint:
    path: /restapi/v1.0/account/~/extension/{agentExtensionId}/activeCalls
    method: GET
    data_selector: records
- name: supervise_call
  endpoint:
    path: /restapi/v1.0/account/~/telephony/sessions/{telephonySessionId}/supervise
    method: POST
- name: call_monitoring_group
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups
    method: POST
    data_selector: name
- name: add_members_to_call_monitoring_group
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/bulk-assign
    method: POST
    data_selector: members
- name: read_account_extensions
  endpoint:
    path: /restapi/v1.0/account/~/extension
    method: GET
    data_selector: records
    params:
      type:
      - User
      status: Enabled
- name: delete_call_monitoring_group
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}
    method: DELETE
- name: call_monitoring_group
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups
    method: POST
    data_selector: id
- name: bulk_assign_group_members
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/bulk-assign
    method: POST
    data_selector: id
- name: update_call_monitoring_group
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}
    method: PUT
    data_selector: id
- name: delete_call_monitoring_group
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}
    method: DELETE
    data_selector: id
- name: call_monitoring_groups
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups
    method: GET
    data_selector: records
- name: call_monitoring_group_members
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/members
    method: GET
    data_selector: records
- name: call_monitoring_groups
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups
    method: GET
    data_selector: records
- name: call_monitoring_group_members
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/members
    method: GET
    data_selector: records
- name: agent_active_calls
  endpoint:
    path: /restapi/v1.0/account/~/extension/{agentExtensionId}/active-calls
    method: GET
    data_selector: records
- name: supervise_call_session
  endpoint:
    path: /restapi/v1.0/account/~/telephony/sessions/{telephonySessionId}/supervise
    method: POST
- name: active_calls
  endpoint:
    path: /restapi/v1.0/account/extension/{agentExtensionId}/activeCalls
    method: GET
    data_selector: records
- name: supervise_call
  endpoint:
    path: /restapi/v1.0/account/telephony/sessions/{telephonySessionId}/supervise
    method: POST
- name: call_monitoring_groups
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups
    method: GET
    data_selector: records
- name: call_monitoring_group_members
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/members
    method: GET
    data_selector: records
- name: call_monitoring_groups
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups
    method: POST
    data_selector: id
- name: bulk_assign_members
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/bulk-assign
    method: POST
    data_selector: members
- name: update_group_name
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}
    method: PUT
    data_selector: name
- name: delete_group
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}
    method: DELETE
- name: call_monitoring_group
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups
    method: GET
    data_selector: records
- name: call_monitoring_group_members
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/members
    method: GET
    data_selector: records
- name: call_monitoring_group_members
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/members
    method: GET
    data_selector: records
- name: call_monitoring_groups
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups
    method: GET
    data_selector: records
- name: agent_active_calls
  endpoint:
    path: /restapi/v1.0/account/~/extension/{agentExtensionId}/active-calls
    method: GET
    data_selector: records
- name: supervise_call_session
  endpoint:
    path: /restapi/v1.0/account/~/telephony/sessions/{telephonySessionId}/supervise
    method: POST
- name: call_monitoring_group_members
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/members
    method: GET
    data_selector: records
- name: call_monitoring_groups
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups
    method: POST
    data_selector: null
    params: {}
- name: bulk_assign_members
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/bulk-assign
    method: POST
    data_selector: null
    params: {}
- name: update_group
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}
    method: PUT
    data_selector: null
    params: {}
- name: delete_group
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}
    method: DELETE
    data_selector: null
    params: {}
- name: call_monitoring_groups
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups
    method: GET
    data_selector: records
- name: call_monitoring_group_members
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/members
    method: GET
    data_selector: records
- name: call_monitoring_groups
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups
    method: GET
    data_selector: records
- name: call_monitoring_group_members
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/members
    method: GET
    data_selector: records
- name: agent_active_calls
  endpoint:
    path: /restapi/v1.0/account/~/extension/{agentExtensionId}/active-calls
    method: GET
    data_selector: records
- name: supervise_call_session
  endpoint:
    path: /restapi/v1.0/account/~/telephony/sessions/{telephonySessionId}/supervise
    method: POST
- name: active_calls
  endpoint:
    path: /restapi/v1.0/account/~/extension/{agentExtensionId}/active-calls
    method: GET
    data_selector: records
- name: supervise_call
  endpoint:
    path: /restapi/v1.0/account/~/telephony/sessions/{telephonySessionId}/supervise
    method: POST
- name: call_monitoring_groups
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups
    method: POST
    data_selector: id
- name: bulk_assign_members
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/bulk-assign
    method: POST
    data_selector: members
- name: update_group
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}
    method: PUT
    data_selector: name
- name: delete_group
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}
    method: DELETE
    data_selector: groupId
- name: call_monitoring_groups
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups
    method: GET
    data_selector: records
    params: {}
- name: call_monitoring_group_members
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/members
    method: GET
    data_selector: records
    params: {}
- name: call_monitoring_groups
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups
    method: GET
    data_selector: records
    params: {}
- name: call_monitoring_group_members
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/members
    method: GET
    data_selector: records
    params: {}
- name: agent_active_calls
  endpoint:
    path: /restapi/v1.0/account/~/extension/{agentExtensionId}/active-calls
    method: GET
    data_selector: records
    params: {}
- name: supervise_call_session
  endpoint:
    path: /restapi/v1.0/account/~/telephony/sessions/{telephonySessionId}/supervise
    method: POST
    data_selector: ''
    params: {}
- name: active_calls
  endpoint:
    path: /restapi/v1.0/account/extension/{extensionId}/activeCalls
    method: GET
    data_selector: records
- name: supervise_call
  endpoint:
    path: /restapi/v1.0/account/telephony/sessions/{telephonySessionId}/supervise
    method: POST
- name: supervise_call
  endpoint:
    path: /restapi/v1.0/account/~/telephony/sessions/{telephonySessionId}/supervise
    method: POST
    data_selector: bodyParams
- name: call_monitoring_groups
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups
    method: POST
    data_selector: id
    params: {}
- name: bulk_assign_members
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/bulk-assign
    method: POST
    data_selector: id
    params: {}
- name: update_call_monitoring_group
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}
    method: PUT
    data_selector: id
    params: {}
- name: delete_call_monitoring_group
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}
    method: DELETE
    data_selector: id
    params: {}
- name: call_monitoring_groups
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups
    method: GET
    data_selector: records
- name: call_monitoring_group_members
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/members
    method: GET
    data_selector: records
- name: call_monitoring_group_members
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups/{groupId}/members
    method: GET
    data_selector: records
- name: call_monitoring_groups
  endpoint:
    path: /restapi/v1.0/account/~/call-monitoring-groups
    method: GET
    data_selector: records
- name: agent_active_calls
  endpoint:
    path: /restapi/v1.0/account/~/extension/{agentExtensionId}/active-calls
    method: GET
    data_selector: records
- name: supervise_call_session
  endpoint:
    path: /restapi/v1.0/account/~/telephony/sessions/{telephonySessionId}/supervise
    method: POST
- name: start_conference
  endpoint:
    path: /restapi/v1.0/account/~/telephony/conference
    method: POST
    data_selector: session
    params: {}
- name: bring_in_party
  endpoint:
    path: /restapi/v1.0/account/~/telephony/sessions/{telephonySessionId}/parties/bring-in
    method: POST
    data_selector: ''
    params:
      accountId: path
      telephonySessionId: path
      partyId: path
- name: remove_party
  endpoint:
    path: /restapi/v1.0/account/~/telephony/sessions/{telephonySessionId}/parties/{partyId}
    method: DELETE
    data_selector: ''
    params:
      accountId: path
      telephonySessionId: path
      partyId: path
- name: telephony_sessions
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/telephony/sessions
    method: GET
    data_selector: body.parties
    params: {}
- name: telephony_session
  endpoint:
    path: /restapi/v1.0/account/{accountId}/extension/{extensionId}/telephony/sessions
    method: POST
    data_selector: body
    params: {}
- name: User Call Log
  endpoint:
    path: /api/v1/call-log
    method: GET
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
    params: {}
- name: telephony_session_events
  endpoint:
    path: /restapi/v1.0/account/telephony/sessions
    method: GET
    data_selector: events
    params: {}
- name: send_sms
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/sms
    method: POST
    data_selector: id
- name: phone_number
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/phone-number
    method: GET
    data_selector: records
- name: message_status
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/message-store/{messageId}
    method: GET
    data_selector: messageStatus
- name: phone_number
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/phone-number
    method: GET
    data_selector: records
- name: sms
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/sms
    method: POST
- name: message_store
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/message-store/{messageId}
    method: GET
- name: phone_number
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/phone-number
    method: GET
- name: phone_number
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/phone-number
    method: GET
    data_selector: records
- name: send_sms
  endpoint:
    path: /restapi/v1.0/account/~/extension/sms
    method: POST
    data_selector: response
- name: message_status
  endpoint:
    path: /restapi/v1.0/account/~/extension/message-store/{messageId}
    method: GET
    data_selector: response
- name: phone_number
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/phone-number
    method: GET
    data_selector: records
- name: sms
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/sms
    method: POST
    data_selector: id
- name: message_status
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/message-store/{messageId}
    method: GET
    data_selector: messageStatus
- name: phone_numbers
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/phone-number
    method: GET
    data_selector: records
- name: phone_number
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/phone-number
    method: GET
    data_selector: records
- name: send_sms
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/sms
    method: POST
    data_selector: id
- name: message_status
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/message-store/{messageId}
    method: GET
    data_selector: messageStatus
- name: phone_number
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/phone-number
    method: GET
    data_selector: records
    params: {}
- name: sms
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/sms
    method: POST
    data_selector: id
- name: message_status
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/message-store/{messageId}
    method: GET
    data_selector: messageStatus
- name: teams
  endpoint:
    path: /team-messaging/v1/teams
    method: POST
    data_selector: bodyParams
- name: create_team
  endpoint:
    path: /team-messaging/v1/teams
    method: POST
    data_selector: jsonObj
- name: create_team
  endpoint:
    path: /team-messaging/v1/teams
    method: POST
    data_selector: bodyParams
- name: team_messaging
  endpoint:
    path: /v1.0/team-messaging
    method: POST
    data_selector: records
- name: create_team
  endpoint:
    path: /team-messaging/v1/teams
    method: POST
    data_selector: json
    params: {}
- name: team
  endpoint:
    path: /team-messaging/v1/teams
    method: POST
    data_selector: null
    params: {}
- name: messages
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/message-store
    method: GET
    data_selector: records
- name: post_text_message
  endpoint:
    path: /team-messaging/v1/chats/{chatId}/posts
    method: POST
    data_selector: id
- name: get_personal_chat
  endpoint:
    path: /team-messaging/v1/chats
    method: GET
    data_selector: records
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: message_store
  endpoint:
    path: /restapi/v1.0/account/~/message-store
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: webinar
  endpoint:
    path: /webinar/configuration/v1/webinars
    method: POST
    data_selector: response
    params: {}
- name: webinar
  endpoint:
    path: /restapi/v1.0/webinars
    method: GET
    data_selector: records
- name: webinar
  endpoint:
    path: /webinar/configuration/v1/webinars
    method: POST
    data_selector: response
    params: {}
- name: webinar
  endpoint:
    path: /webinar/configuration/v1/webinars
    method: POST
    data_selector: messageStatus
- name: webinar
  endpoint:
    path: /restapi/v1.0/account/~/webinar
    method: GET
    data_selector: records
- name: webinar
  endpoint:
    path: /webinar/configuration/v1/webinars
    method: POST
    data_selector: response
    params: {}
- name: webinar
  endpoint:
    path: /webinar/configuration/v1/webinars
    method: POST
    data_selector: messageStatus
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
    params: {}
- name: sms
  endpoint:
    path: /restapi/v1.0/account/~/sms
    method: POST
    data_selector: records
    params: {}
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/{accountId}/call-log
    method: GET
    data_selector: records
- name: message_store
  endpoint:
    path: /restapi/v1.0/account/{accountId}/message-store
    method: GET
    data_selector: records
- name: invitees
  endpoint:
    path: /webinar/configuration/v1/webinars/{webinarId}/sessions/{sessionId}/invitees
    method: POST
    data_selector: response
- name: webinar_attendee
  endpoint:
    path: /restapi/v1.0/account/~/webinar/attendee
    method: POST
    data_selector: records
    params: {}
- name: create_registrant
  endpoint:
    path: /webinar/configuration/v1/webinars/{webinarId}/sessions/{sessionId}/invitees
    method: POST
    data_selector: 'null'
    params: {}
- name: update_registration_session
  endpoint:
    path: /registration/session/update
    method: POST
    data_selector: 'null'
    params: {}
- name: session_registrants
  endpoint:
    path: /rcwRegListRegistrants
    method: GET
    data_selector: registrants
- name: company_webinar_recordings
  endpoint:
    path: /rcwHistoryAdminListRecordings
    method: GET
    data_selector: recordings
- name: webinar_session
  endpoint:
    path: /rcwConfigGetSession
    method: GET
    data_selector: session
- name: past_webinar_sessions
  endpoint:
    path: /rcwHistoryListAllSessions
    method: GET
    data_selector: sessions
- name: webinar_recording
  endpoint:
    path: /rcwHistoryGetRecording
    method: GET
    data_selector: recording
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: webinar_subscription
  endpoint:
    path: /webinar/notifications/v1/subscriptions
    method: POST
    data_selector: Response
    params:
      expiresIn: 100000
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Call Business Analytics Aggregate
  endpoint:
    path: /guide/analytics/aggregate
    method: GET
- name: Call Business Analytics Timeline
  endpoint:
    path: /guide/analytics/timeline
    method: GET
- name: analytics_aggregate_data
  endpoint:
    path: /analytics/calls/v1/accounts/~/aggregation/fetch
    method: POST
    data_selector: jsonObj
- name: analytics_calls
  endpoint:
    path: /analytics/calls/v1/accounts/~/aggregation/fetch
    method: POST
    data_selector: jsonObj
- name: analytics_aggregate
  endpoint:
    path: /analytics/calls/v1/accounts/~/aggregation/fetch
    method: POST
    data_selector: response
    params:
      perPage: 100
- name: analytics_calls
  endpoint:
    path: /analytics/calls/v1/accounts/~/aggregation/fetch
    method: POST
    data_selector: jsonObj
- name: analytics_aggregate
  endpoint:
    path: /analytics/calls/v1/accounts/~/aggregation/fetch
    method: POST
- name: analytics_calls_aggregation
  endpoint:
    path: /analytics/calls/v1/accounts/~/aggregation/fetch
    method: POST
    data_selector: response
- name: analytics_aggregate_data
  endpoint:
    path: /analytics/calls/v1/accounts/~/aggregation/fetch
    method: POST
    data_selector: jsonObj
- name: analytics_aggregate
  endpoint:
    path: /analytics/calls/v1/accounts/~/aggregation/fetch
    method: POST
    data_selector: json
- name: analytics_aggregate_data
  endpoint:
    path: /analytics/calls/v1/accounts/~
    method: POST
- name: call_aggregation
  endpoint:
    path: /analytics/calls/v1/accounts/~/aggregation/fetch
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: timeline
  endpoint:
    path: /analytics/calls/v1/accounts/~/timeline/fetch
    method: POST
    data_selector: data
    params: {}
- name: timeline
  endpoint:
    path: /analytics/calls/v1/accounts/~/timeline/fetch
    method: POST
    data_selector: records
    params:
      interval: Day
      perPage: 10
- name: users
  endpoint:
    path: /restapi/v1.0/account/~/extension/
    method: GET
    data_selector: records
    params:
      type:
      - User
- name: call_queues
  endpoint:
    path: /restapi/v1.0/account/~/extension/
    method: GET
    data_selector: records
    params:
      type:
      - Department
- name: analytics_timeline
  endpoint:
    path: /analytics/calls/v1/accounts/~/timeline/fetch
    method: POST
    data_selector: records
    params:
      interval: Day
      perPage: 10
- name: call_queues
  endpoint:
    path: /restapi/v1.0/account/~/extension/
    method: GET
    data_selector: records
    params:
      type:
      - Department
- name: analytics_timeline
  endpoint:
    path: /analytics/calls/v1/accounts/~/timeline/fetch
    method: POST
    data_selector: body
    params:
      interval: Day
      perPage: 10
- name: call_queues
  endpoint:
    path: /restapi/v1.0/account/~/extension/
    method: GET
    data_selector: records
    params:
      type:
      - Department
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: speech_to_text
  endpoint:
    path: /ai/audio/v1/async/speech-to-text
    method: POST
    data_selector: response
    params: {}
- name: speech_to_text
  endpoint:
    path: /ai/audio/v1/async/speech-to-text
    method: POST
    params:
      webhook: callbackAddress
- name: speech_to_text
  endpoint:
    path: /ai/audio/v1/async/speech-to-text
    method: POST
- name: speech_to_text
  endpoint:
    path: /ai/audio/v1/async/speech-to-text
    method: POST
    data_selector: body
    params:
      webhook: ENV['NGROK_URL'] + '/webhook'
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: speech_to_text
  endpoint:
    path: /ai/audio/v1/async/speech-to-text
    method: POST
- name: speech_to_text
  endpoint:
    path: /ai/audio/v1/async/speech-to-text
    method: POST
- name: jobs_status
  endpoint:
    path: /ai/status/v1/jobs/{jobId}
    method: GET
- name: compliance_export
  endpoint:
    path: /v1.0/compliance/export
    method: GET
    data_selector: records
- name: call_recording
  endpoint:
    path: /restapi/.../recording/{recordingId}/content
    method: GET
    data_selector: records
    params:
      access_token: access_token
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: speech_to_text
  endpoint:
    path: /ai/audio/v1/async/speech-to-text
    method: POST
    data_selector: response
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
    params: {}
- name: analyze_interaction
  endpoint:
    path: /ai/insights/v1/async/analyze-interaction
    method: POST
    data_selector: jobId
- name: analyze_interaction
  endpoint:
    path: /ai/insights/v1/async/analyze-interaction
    method: POST
    data_selector: response
    params: {}
- name: analyze_interaction
  endpoint:
    path: /ai/insights/v1/async/analyze-interaction
    method: POST
    data_selector: jobId
    params:
      webhook: NGROK-TUNNEL-ADDRESS/webhook
- name: analyze_interaction
  endpoint:
    path: /ai/insights/v1/async/analyze-interaction
    method: POST
    data_selector: jobId
    params:
      webhook: WEBHOOK_URL
- name: analyze_interaction
  endpoint:
    path: /ai/insights/v1/async/analyze-interaction
    method: POST
    data_selector: bodyParams
- name: analyze_interaction
  endpoint:
    path: /ai/insights/v1/async/analyze-interaction
    method: POST
    data_selector: jobId
    params:
      webhook: NGROK-TUNNEL-ADDRESS/webhook
- name: utterance_insights
  endpoint:
    path: /ai/insights/v1/async/analyze-interaction
    method: GET
    data_selector: utteranceInsights
- name: speaker_insights
  endpoint:
    path: /ai/insights/v1/async/analyze-interaction
    method: GET
    data_selector: speakerInsights
- name: conversational_insights
  endpoint:
    path: /ai/insights/v1/async/analyze-interaction
    method: GET
    data_selector: conversationalInsights
- name: meetings
  endpoint:
    path: /services/data/vXX.X/sobjects/Meetings
    method: GET
    data_selector: records
    params: {}
- name: speaker_diarization
  endpoint:
    path: /ai/audio/v1/async/speaker-diarize
    method: POST
    data_selector: jobId
    params: {}
- name: speaker_diarization
  endpoint:
    path: /ai/audio/v1/async/speaker-diarize
    method: POST
    data_selector: jobId
- name: speaker_diarization
  endpoint:
    path: /ai/audio/v1/async/speaker-diarize
    method: POST
    data_selector: jobId
    params:
      webhook: NGROK-TUNNEL-ADDRESS/webhook
- name: speaker_diarization
  endpoint:
    path: /ai/audio/v1/async/speaker-diarize
    method: POST
    data_selector: jobId
    params:
      webhook: WEBHOOK_URL
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: sms
  endpoint:
    path: /restapi/v1.0/account/~/sms
    method: GET
    data_selector: records
- name: speaker_detection
  endpoint:
    path: /ai/audio/v1/async/speaker-diarize
    method: POST
    data_selector: jobId
    params:
      webhook: WEBHOOK_URL
- name: speaker_diarization
  endpoint:
    path: /ai/audio/v1/async/speaker-diarize
    method: POST
    data_selector: jobId
    params:
      webhook: NGROK-TUNNEL-ADDRESS/webhook
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: conversation_summary
  endpoint:
    path: /ai/text/v1/async/summarize
    method: POST
    data_selector: jobId
    params: {}
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: conversation_summary
  endpoint:
    path: /ai/text-summary
    method: POST
    data_selector: summary
    params: {}
- name: conversations
  endpoint:
    path: /ai/text/v1/async/summarize
    method: POST
    data_selector: jobId
    params:
      webhook: NGROK-TUNNEL-ADDRESS/webhook
- name: summarize_conversation
  endpoint:
    path: /ai/text/v1/async/summarize
    method: POST
    data_selector: jobId
    params:
      webhook: NGROK-TUNNEL-ADDRESS/webhook
- name: conversation_summary
  endpoint:
    path: /ai/text/v1/async/summarize
    method: POST
    data_selector: jobId
    params:
      webhook: WEBHOOK_URL
- name: conversation_summary
  endpoint:
    path: /ai/conversation-summaries
    method: POST
    data_selector: summary
    params: {}
- name: summarize_conversation
  endpoint:
    path: /ai/text/v1/async/summarize
    method: POST
    data_selector: jobId
    params:
      webhook: NGROK-TUNNEL-ADDRESS/webhook
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: punctuate
  endpoint:
    path: /ai/text/v1/async/punctuate
    method: POST
    data_selector: jobId
    params: {}
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: message_store
  endpoint:
    path: /restapi/v1.0/account/~/message-store
    method: GET
    data_selector: records
- name: punctuate
  endpoint:
    path: /ai/text/v1/async/punctuate
    method: POST
    data_selector: jobId
    params: {}
- name: punctuate
  endpoint:
    path: /ai/text/v1/async/punctuate
    method: POST
    data_selector: jobId
    params:
      webhook: NGROK-TUNNEL-ADDRESS/webhook
- name: punctuate
  endpoint:
    path: /async/punctuate
    method: POST
    data_selector: jobId
    params: {}
- name: punctuation
  endpoint:
    path: /ai/text/v1/async/punctuate
    method: POST
    data_selector: jobId
- name: punctuate
  endpoint:
    path: /ai/text/v1/async/punctuate
    method: POST
    data_selector: jobId
    params:
      webhook: NGROK-TUNNEL-ADDRESS/webhook
- name: ringSenseInsights
  endpoint:
    path: /ai/ringsense/v1/public/accounts/~/domains/[Domain-Name]/records/[sourceRecordId]/insights
    method: GET
    data_selector: insights
    params: {}
- name: ringSenseSessionInsights
  endpoint:
    path: /ai/ringsense/v1/public/accounts/~/domains/[Domain-Name]/sessions/[sourceSessionId]/insights
    method: GET
    data_selector: insights
    params: {}
- name: account
  endpoint:
    path: /restapi/v1.0/account/{accountId}
    method: GET
    data_selector: uri
- name: extensions
  endpoint:
    path: /restapi/v1.0/account/~/extension
    method: GET
    data_selector: records
- name: meetings
  endpoint:
    path: /services/data/vXX.X/sobjects/Meeting
    method: GET
    data_selector: records
    params: {}
- name: webinars
  endpoint:
    path: /services/data/vXX.X/sobjects/Webinar
    method: GET
    data_selector: records
    params: {}
- name: directory_entries
  endpoint:
    path: /restapi/v1.0/account/~/directory/entries
    method: GET
    data_selector: records
- name: create_extension
  endpoint:
    path: /restapi/v1.0/account/~/extension
    method: POST
    data_selector: contact
    params: {}
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
    params: {}
- name: forwarding_number
  endpoint:
    path: /restapi/v1.0/account/{accountId}/extension/{extensionId}/forwarding-number
    method: GET
    data_selector: records
    params: {}
- name: user_features
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/features
    method: GET
    data_selector: records
    params: {}
- name: custom_fields
  endpoint:
    path: /restapi/v1.0/account/~/custom-fields
    method: POST
    data_selector: customFields
    params: {}
- name: extension
  endpoint:
    path: /account/~/extension/~
    method: GET
    data_selector: customFields
    params: {}
- name: custom_fields
  endpoint:
    path: /restapi/v1.0/account/~/custom-fields
    method: GET
    data_selector: records
- name: update_custom_field
  endpoint:
    path: /restapi/v1.0/account/{accountId}/custom-fields/{id}
    method: PUT
    data_selector: displayName
- name: custom_field
  endpoint:
    path: /account/~/extension/~
    method: PUT
    data_selector: customFields
    params: {}
- name: custom_fields
  endpoint:
    path: /restapi/v1.0/account/~/custom-fields
    method: POST
    data_selector: customFields
    params: {}
- name: update_custom_field
  endpoint:
    path: /account/~/extension/~
    method: PUT
    data_selector: customFields
    params: {}
- name: get_custom_fields
  endpoint:
    path: /account/~/extension/~
    method: GET
    data_selector: customFields
    params: {}
- name: custom_fields
  endpoint:
    path: /account/~/custom-fields
    method: GET
    data_selector: records
- name: create_custom_field
  endpoint:
    path: /account/{accountId}/custom-fields/{id}
    method: PUT
    data_selector: null
- name: delete_custom_fields
  endpoint:
    path: /customFields
    method: DELETE
    data_selector: ''
    params: {}
- name: create_custom_field
  endpoint:
    path: /customFields
    method: POST
    data_selector: ''
    params: {}
- name: update_extension
  endpoint:
    path: /restapi/v1.0/account/~/extension/~
    method: PUT
    data_selector: customFields
    params: {}
- name: get_extension
  endpoint:
    path: /restapi/v1.0/account/~/extension/~
    method: GET
    data_selector: customFields
    params: {}
- name: create_custom_field
  endpoint:
    path: /restapi/v1.0/account/~/custom-fields
    method: POST
    data_selector: customField
    params: {}
- name: custom_fields
  endpoint:
    path: /restapi/v1.0/account/~/custom-fields
    method: GET
    data_selector: records
- name: custom_field_update
  endpoint:
    path: /restapi/v1.0/account/{accountId}/custom-fields/{id}
    method: PUT
    data_selector: displayName
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: custom_fields
  endpoint:
    path: /restapi/v1.0/account/~/custom-fields
    method: POST
    data_selector: customFields
    params: {}
- name: update_custom_field
  endpoint:
    path: /account/~/extension/~
    method: PUT
    data_selector: customFields
    params: {}
- name: get_custom_fields
  endpoint:
    path: /account/~/extension/~
    method: GET
    data_selector: customFields
    params: {}
- name: custom_fields
  endpoint:
    path: /account/~/custom-fields
    method: GET
    data_selector: records
- name: custom_field_update
  endpoint:
    path: /account/{accountId}/custom-fields/{id}
    method: PUT
    data_selector: displayName
- name: update_custom_field
  endpoint:
    path: /restapi/v1.0/account/~/extension/~
    method: PUT
    data_selector: ''
    params: {}
- name: get_extension
  endpoint:
    path: /account/~/extension/~
    method: GET
    data_selector: customFields
    params: {}
- name: create_custom_field
  endpoint:
    path: /restapi/v1.0/account/~/custom-fields
    method: POST
    data_selector: ''
    params: {}
- name: custom_fields
  endpoint:
    path: /restapi/v1.0/account/~/custom-fields
    method: GET
    data_selector: records
- name: custom_field_update
  endpoint:
    path: /restapi/v1.0/account/{accountId}/custom-fields/{id}
    method: PUT
    data_selector: displayName
- name: custom_fields
  endpoint:
    path: /restapi/v1.0/account/{accountId}/custom-fields/{id}
    method: DELETE
- name: update_extension
  endpoint:
    path: /account/~/extension/~
    method: PUT
    data_selector: customFields
    params: {}
- name: get_extension
  endpoint:
    path: /account/~/extension/~
    method: GET
    data_selector: customFields
    params: {}
- name: create_custom_field
  endpoint:
    path: /account/~/custom-fields
    method: POST
    data_selector: customFields
    params: {}
- name: custom_fields
  endpoint:
    path: /restapi/v1.0/account/~/custom-fields
    method: GET
    data_selector: records
- name: update_custom_field
  endpoint:
    path: /restapi/v1.0/account/{accountId}/custom-fields/{customFieldId}
    method: PUT
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: presence
  endpoint:
    path: /restapi/v1.0/account/~/presence
    method: GET
    data_selector: records
    params:
      detailedTelephonyState: true
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
    params: {}
- name: audit_trail
  endpoint:
    path: /restapi/v1.0/account/~/audit-trail/search
    method: POST
    data_selector: json_dict
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: sms
  endpoint:
    path: /restapi/v1.0/account/~/sms
    method: POST
    data_selector: messages
- name: service_info
  endpoint:
    path: /restapi/v1.0/account/~/service-info
    method: GET
- name: message_store_sms
  endpoint:
    path: /restapi/v1.0/account/~/extension/171857008/message-store
    method: GET
    params:
      messageType: SMS
- name: message_store_sms_fax
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/message-store
    method: GET
    params:
      messageType:
      - SMS
      - Fax
- name: service_info
  endpoint:
    path: /restapi/v1.0/account/~/service-info
    method: GET
- name: message_store_sms
  endpoint:
    path: /restapi/v1.0/account/~/extension/171857008/message-store
    method: GET
    params:
      messageType: SMS
- name: message_store_sms_fax
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/message-store
    method: GET
    params:
      messageType: Fax
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
    params: {}
- name: message_store
  endpoint:
    path: /restapi/v1.0/account/~/message-store
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: message_store
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/message-store/*
    method: PUT
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: sms
  endpoint:
    path: /restapi/v1.0/account/~/sms
    method: GET
    data_selector: records
- name: call_log
  endpoint:
    path: /api/call-log
    method: GET
    data_selector: records
    params: {}
- name: sms
  endpoint:
    path: /api/sms
    method: GET
    data_selector: records
    params: {}
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: sms
  endpoint:
    path: /restapi/v1.0/account/~/sms
    method: GET
    data_selector: records
- name: call_log
  endpoint:
    path: /api/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: sms
  endpoint:
    path: /api/v1.0/account/~/sms
    method: GET
    data_selector: records
- name: install_app_button
  endpoint:
    path: /new-app
    method: GET
    data_selector: button
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: extension
  endpoint:
    path: /restapi/v1.0/account/~/extension
    method: GET
    data_selector: records
- name: extension_call_log
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/call-log
    method: GET
    data_selector: records
- name: account_call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: extension
  endpoint:
    path: /restapi/v1.0/account/~/extension
    method: GET
- name: extension_call_log
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/call-log
    method: GET
- name: account_call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
- name: extension
  endpoint:
    path: /restapi/v1.0/account/~/extension
    method: GET
    data_selector: records
    params: {}
- name: extension_call_log
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/call-log
    method: GET
    data_selector: records
    params: {}
- name: account_call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
    params: {}
- name: extension
  endpoint:
    path: /restapi/v1.0/account/~/extension
    method: GET
    data_selector: records
- name: extension_call_log
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/call-log
    method: GET
    data_selector: records
- name: account_call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: extension
  endpoint:
    path: /restapi/v1.0/account/~/extension
    method: GET
- name: extension_call_log
  endpoint:
    path: /restapi/v1.0/account/~/extension/~/call-log
    method: GET
- name: account_call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
- name: extension
  endpoint:
    path: /api/extension
    method: GET
- name: extension-call-log
  endpoint:
    path: /api/extension-call-log
    method: GET
- name: account-call-log
  endpoint:
    path: /api/account-call-log
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: call_log
  endpoint:
    path: /restapi/v1.0/account/~/call-log
    method: GET
    data_selector: records
- name: compliance_export
  endpoint:
    path: /restapi/v1.0/compliance/export
    method: GET
    data_selector: records
- name: jwks
  endpoint:
    path: /restapi/oauth/jwks
    method: GET
    data_selector: keys
- name: userinfo
  endpoint:
    path: /restapi/oauth/userinfo
    method: GET
- name: WebSocket Token
  endpoint:
    path: /restapi/oauth/wstoken
    method: POST
- name: session_insights
  endpoint:
    path: /ai/ringsense/v1/public/accounts/{accountId}/domains/{domain}/sessions/{sourceSessionId}/insights
    method: GET
    data_selector: records
- name: session_insights
  endpoint:
    path: /ai/ringsense/v1/public/accounts/{accountId}/domains/{domain}/sessions/{sourceSessionId}/insights
    method: GET
    data_selector: records
    params: {}
- name: analyze_interaction
  endpoint:
    path: /ai/insights/v1/async/analyze-interaction
    method: POST
    data_selector: jobId
    params: {}
- name: speaker_diarization
  endpoint:
    path: /ai/audio/v1/async/speaker-diarize
    method: POST
    data_selector: jobId
- name: speaker_diarize
  endpoint:
    path: /ai/audio/v1/async/speaker-diarize
    method: POST
    data_selector: records
    params: {}
- name: speech_to_text
  endpoint:
    path: /ai/audio/v1/async/speech-to-text
    method: POST
- name: conversational_summarization
  endpoint:
    path: /ai/text/v1/async/summarize
    method: POST
    data_selector: jobId
notes:
- Find your credentials at the above url, set them as environment variables, or enter
  them below.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Requires setup of connected app in RingCentral.
- API requires OAuth2 authentication.
- Rate limits apply to API calls.
- The RingCentral Voice API is included with RingEX plans.
- Uses OAuth2 with refresh token — requires setup of connected app in RingCentral
- Ensure to manage rate limits to avoid throttling.
- Requires setup of connected app in RingCentral
- Supports multiple languages and formats in SMS.
- Built in queueing, opt-out, and regulatory compliance management capabilities.
- High Volume SMS should be used when primarily sending marketing or automated messages
- Fax attachment size (both single and total) is limited to 50Mb.
- Free to use during the beta!
- RingCentral for Developers requires JavaScript to be enabled.
- Some objects like Contact may return nulls in deeply nested fields
- Every high quality video meeting comes with security baked in including standard
  encryption, the ability to require a password, and even lock access to video meetings
  once participants arrive.
- Documentation is made available to developers accepted into the RCV Developer Program.
- Some features may depend on user privileges
- Send from 29 different file formats
- Automatically resend on busy signals
- Manage a sending queue to maintain frequency compliance
- Access call recordings, voicemail recordings, voicemail transcription (if available
  on account), SMS/MMS, and fax messages.
- Ensure to have the right permissions for the OAuth token.
- Free to use during the beta
- 'RingCentral''s Artificial Intelligence API is currently in beta. Developers should
  be aware of the following: Their feature sets are not reflective of the full scope
  currently planned. Backwards compatibility is not guaranteed from one release to
  the next during the beta period.'
- Task accepted for processing.
- Some APIs may have rate limits
- Integrate faster and with less effort by leveraging the professional UX and QA used
  in RingCentral’s own apps.
- Extend the user experience of RingCentral’s own integrations by using your custom
  version.
- Personalize your users’ experience by updating the UI with your own colors and fonts
  easily using CSS.
- RingCentral is secure and HIPAA compliant
- Uses two-factor authentication (2FA) and one-time passwords (OTP) for security.
- Curriculum or learning management systems (LMS) like Blackboard, Canvas, or Moodle
  can be integrated with RingCentral's APIs.
- High volume SMS can be used to send personalized messages with the same body of
  content to the entire student cohort.
- RingCentral products can be used to manage legal documents, case files, and evidence
  tracking.
- Automated SMS communications available.
- Virtual tours using RingCentral Video.
- RingCentral SMS API employed to validate human identity
- Integration with a call center and RingCentral can provide improved call experiences
  on service calls.
- Integrate SMS API solutions to keep everyone in the loop
- Integrate business flows with Fax API to help ensure regulatory compliance
- Integrate click-to-dial into your applications to make placing calls easier
- Analyze call, fax, and SMS data Logs to create reports and feed dashboards.
- Communication statistical data at your CRM fingertips.
- Using WebRTC, users can make and receive calls from within applications directly
  from the browser, without the need for a physical phone.
- Effortlessly synchronize your data to external storage for archival purposes
- Create custom workflows for your business, no programming required
- Ensure the correct scopes are granted for API access
- Add-ins enable developers to build applications directly into RingCentral.
- Built on the dynamic Adaptive Card Framework, bots and interactive messages allow
  for customized workflows.
- Join our Early Access Program and get a first look at upcoming APIs and releases.
- OAuth2 authentication is required.
- Data export is limited to 2 simultaneously executing requests.
- Call Log API provides only basic call data, which may not be sufficient for in-depth
  call analytics.
- There is no available API to retrieve either the processed or raw data used for
  the performance report.
- Some objects may require additional permissions based on account settings.
- Team Messaging API supports real-time notifications and alerts.
- API requires setup of a connected app in RingCentral.
- Some API limits may apply based on the plan.
- Some endpoints may require additional permissions.
- Some API features may require specific permissions or configurations
- Find your credentials at the developers.ringcentral.com/my-account.html#/applications
- Some settings are read-only at the webinar level
- RingCentral API requires JavaScript to be enabled.
- The request may include advanced time settings.
- The only supported response_type is 'code' for OAuth 2.0 Authorization Code Flow.
- Some endpoints may have rate limits
- ReadContacts scope is required to access contact data.
- Internal identifier of the RingCentral account can be set to '~' to indicate that
  the account associated with current authorization session should be used.
- Requires JavaScript to be enabled.
- Requires setup of connected app in api
- Disallowed to delete a Webinar which has at least one Session in 'Active' or 'Finished'
  state.
- The user must have "WebinarSettings" permission granted otherwise the API returns
  HTTP 403.
- Disallowed to delete a Session which is in 'Active' or 'Finished' state
- Some endpoints may return paginated data
- Ensure to check the role of the invitee when updating.
- Deleting an invitee for a Session in 'Active' or 'Finished' status is prohibited.
- Ensure appropriate OAuth scopes are set
- User must have 'WebinarSettings' permission granted otherwise the API returns HTTP
  403.
- Access allowed to participants with original role as Host or CoHost
- Requires setup of application credentials in RingCentral.
- Some objects may return nulls in deeply nested fields
- Requires setup of application credentials at RingCentral.
- Rate limits apply on API calls.
- Some data may vary based on user permissions
- Some endpoints may require additional permissions
- Requires OAuth2 setup for authentication
- If called by a webinar host, the API returns error (403) if recording downloading
  is prohibited by company settings.
- The admin user who has 'WebinarSettings' permission should be able to download recording
  regardless of current company settings.
- The user must have 'WebinarSettings' permission granted otherwise the API returns
  HTTP 403.
- 'A caller must be an authorized user: either a host of the webinar or an IT Admin:
  a user from host''s account with ''WebinarSettings'' permission.'
- 'A caller must be an authorized user: either a host of the webinar or an IT Admin.'
- If a session record with given ID doesn't exist on Registration Service side the
  API should return HTTP 404.
- Find your credentials at the developers.ringcentral.com my account page and set
  them as environment variables.
- Session must not be in finished state (otherwise it should return HTTP 403).
- Requires setup of a connected app in RingCentral.
- 'A caller must be an authorized user: either a host of the webinar or an IT Admin'
- Subscription lifetime can vary based on transport type.
- Webinar API may have limitations on the number of simultaneous requests.
- Find your credentials at the above url, set them as environment variables, or enter
  them below
- Requires setup of a connected app in RingCentral
- Webinar Subscription renew endpoint requires the subscriptionId path parameter.
- Webinar API requires proper setup and permissions to access.
- Use the '~' symbol to indicate the current authorization session account or extension.
- Find your credentials at the above url, set them as environment variables.
- The maximum value for recordCount is 250.
- Requires setup of credentials at RingCentral developer portal
- Use environment variables for credentials
- Some endpoints may require specific permissions.
- Users can only see their personal tasks and public tasks.
- Chat is a general name for all types of threads including Personal, Direct, Group,
  Team, Everyone.
- Max number of chats to be fetched by one request (Not more than 250).
- Some endpoints may have rate limits.
- Maximum value for recordCount is 250
- Conversation is an adhoc discussion between a particular set of users.
- The chatId parameter is required to access conversation details
- Requires OAuth2 authentication with a refresh token.
- Page number to be retrieved; value range is > 0
- Number of records to be returned per page; value range is 1 - 250
- Maximum allowed time frame between timeFrom and timeTo is 6 months
- Simultaneously no more than 2 tasks per company can be created
- Some resources may have specific requirements for access
- TeamMessaging API requires setup of connected app in RingCentral.
- Requires setup of credentials at the RingCentral developer portal.
- Returns the list of chat notes.
- Creates a new note in the specified chat.
- Returns the specified note(s). It is possible to fetch up to 50 notes per request.
- Some API responses may vary based on the request and user permissions
- Some responses may contain nulls for certain fields
- Beta
- All API calls require authentication.
- Some endpoints may have specific permissions needed.
- Some fields may return nulls in deeply nested structures
- Requires OAuth2 authentication
- Some endpoints may have limited access depending on user permissions.
- Max number of posts to be fetched by one request (not more than 250)
- Creates a post in the chat specified in path.
- Requires OAuth2 setup for authentication.
- File upload requires binary or multipart/form-data
- Batch requests are supported.
- companyId is the internal identifier of an RC account
- Requires setup of credentials at the provided URL
- 'App Scope: TeamMessaging'
- Some endpoints may have limitations on data volume
- Uses OAuth2 with JWT — requires setup of application in RingCentral.
- Find your credentials at https://developers.ringcentral.com/my-account.html#/applications
- Find your credentials at the above url, set them as environment variables
- Some responses may vary based on permissions
- API requires setup of connected app in RingCentral
- E.164 Phone Number format should be provided
- JWT tokens are created exclusively within the RingCentral Developer Console.
- Giving someone a JWT credential is akin to you giving someone your username and
  password.
- Requires setup of a developer account and app registration on RingCentral.
- Rate limits apply based on the account type.
- Developers are encouraged to begin producing their app profile as soon as they are
  able.
- A profile cannot be submitted for approval until all required fields and data has
  been provided about the app.
- Ensure the application is registered and OAuth credentials are created.
- Uses JWT auth flow for authentication
- This app is private and will only be callable using credentials from the same RingCentral
  account.
- Requires setup of environment variables for authentication.
- Ensure the .env file is configured with the correct credentials
- The playPrompt field is set to false
- Requires OAuth2 authentication setup.
- Uses JWT for authentication.
- Ensure .env file contains RINGOUT_CALLER and RINGOUT_RECIPIENT.
- Be sure to edit the variables in ALL CAPS with your app and user credentials.
- The 'to' parameter is required in the request.
- The 'from' parameter is optional if there is a default number in user's forwarding
  numbers.
- Requires Extension with a Digital Line to authenticate and use
- The Call Control API requires the 'Advanced User' permission.
- Some API calls may be subject to rate limits.
- Active Calls are intended to work as a tool for developers who need to lookup call
  log data to append notes, and sentiment for things such as CRM integrations.
- Active Calls are a handy tool for looking up this time-sensitive information, but
  this can also be confusing for developers expecting this Call Log data type to represent
  real-time active calls.
- Some endpoints may return nulls in deeply nested fields.
- Legacy BLF solutions might not support some complex PBX scenarios.
- Current limitations of telephony notifications include scenarios where a party doesn't
  belong to subscriber account/extension.
- Due to the sensitive nature of call monitoring, permissions to be monitored and
  to monitor others must be specifically given to extensions within an account.
- One supervisor can supervise multiple active calls at the same time.
- Permissions to monitor must be specifically given to extensions.
- A call supervision application should use these APIs to detect the supervisors and
  the agents.
- Uses OAuth2 with JWT token for authentication.
- Uses OAuth2 with personal JWT token.
- Ensure to check credentials if authentication fails.
- Permissions to be monitored and to monitor must be specifically given to extensions
  within an account.
- Use the group id to detect a supervisor device and agent ids to fetch active calls.
- The device status must be 'Online' in order to use it!
- Requires setup of JWT for authentication.
- Some API calls may have rate limits
- Use the APIs to detect supervisors and agents based on permissions.
- Uses OAuth2 with JWT — requires setup of connected app in RingCentral
- The device status must be 'Online' in order to use it
- Uses a personal JWT token for authentication.
- Authenticate a user using a personal JWT token
- Use the endpoint to list all created call monitoring groups.
- Check the permissions of each member to identify agents and supervisors.
- Uses OAuth2 with JWT token for authentication
- Due to sensitive nature of call monitoring, permissions must be specifically given
  to extensions within an account.
- Use the API to detect supervisors and agents based on permissions.
- The device status must be 'Online' in order to use it for supervision.
- Uses OAuth2 with a personal JWT token for authentication
- If you intend to save the audio stream, please comply with the FCC guidelines by
  letting the customer know that the calls will be monitored.
- An active call can be supervised only by one supervisor at a time.
- Use the group id to detect a supervisor device and the id of the agents to fetch
  agents' active calls.
- The device status must be 'Online' in order to use it for supervision
- Uses OAuth2 with personal JWT token for authentication
- Some methods may throw exceptions for various error cases
- A maximum of 10 parties can be added to a conference call with only 1 call party
  allowed to join a conference per request.
- A SIP INVITE is required to bring in parties to the conference call.
- Telephony Session Notifications provide detailed call session information for all
  the states of a call.
- Can monitor all the calls/sessions in an account.
- Ensure to have valid OAuth credentials for API access.
- Current limitations of Telephony Session Notifications include scenarios where a
  party doesn't belong to the subscriber account/extension, belongs to another session,
  or does not belong to any accountId or mailboxId.
- JWT auth flow requires setup in RingCentral Developer Console
- Ensure the account has SMS capability
- Requires setup of TCR registration to enable SMS.
- To send group messaging, add more (max 10 recipients) 'phoneNumber' object.
- Uses OAuth2 with JWT token — requires setup of environment variables
- Requires setup of app in RingCentral Developer Console
- SMS capability must be enabled for the phone number
- Uses OAuth2 with JWT authentication.
- For the purpose of testing the code, SMS recipient number can be set in an environment
  variable.
- Requires setup of TCR registration for sending SMS.
- App must be created in the RingCentral Developer Console.
- Requires authentication using JWT
- Uses JWT auth flow — requires setup of app in RingCentral Developer Console
- Requires a personal JWT token for authentication.
- Authenticate a user using a personal JWT token.
- Requires setup of environment variables for client_id, client_secret, and server_url
- Members can be added using extension ids or email addresses
- Requires a RingCentral account and a created app in the RingCentral Developer Console
- The app must have Team Messaging permissions and be private
- Requires setup of .env file with necessary credentials
- Requires OAuth2 setup for API access
- Users are limited to posting 2,500 messages per day via the API.
- Notification apps cannot update messages
- RingCentral Video REST API and Client SDKs are currently in beta.
- Developers should be aware that their feature sets are not reflective of the full
  scope currently planned.
- RingCentral Video does not currently support mobile the mobile Safari web browser.
  Therefore the Video Client Javascript SDK is not currently supported on iOS devices.
- Developers creating their own RingCentral embeddable app using their own client
  ID and secret will need to contact support to add both the 'Video' and 'Meetings'
  application scope to their application in order to call the necessary APIs.
- While efforts will be made to notify developers of changes that may impact them,
  no guarantees are offered around backwards compatibility.
- To call Webinar APIs, a license will need to be purchased via the Admin Portal.
- The RingCentral Webinar API is currently in beta.
- Developers should be aware of the possibility of changes that may impact applications.
- You get the environment parameters from your application dashboard in your developer
  account
- RingCentral Webinar APIs are in beta.
- A license will need to be purchased via the Admin Portal.
- Requires setup of application parameters in developer account
- OAuth2 authentication is required for access.
- Rate limits are enforced on API calls.
- Webinar APIs are currently in beta
- To call Webinar APIs, a license will need to be purchased via the Admin Portal
- Webinars are currently limited to only one session
- API requires JavaScript to be enabled for certain functionalities.
- RingCentral Webinar APIs are in beta
- A license will need to be purchased via the Admin Portal
- Some may wish to compose and send an invitation to hosts and cohosts of a webinar
  through a third-party system.
- Requires setup of OAuth2 application in RingCentral
- While efforts will be made to notify developers of changes that may impact them,
  no guarantees are offered around backwards compatibility. Changes can be introduced
  at any time that may impact your applications.
- Webinar registration is intended for marketing webinars only.
- The externalId property can be used to correlate a registrant with an external identity
  provider.
- A license will need to be purchased via the Admin Portal to call Webinar APIs.
- Developers can subscribe to multiple events in a single subscription request by
  specifying multiple event filters.
- The APIs provide data from the current date and time to the past 184 days for which
  you can set custom date and time ranges
- Time values should be in UTC
- Uses JWT for authentication — requires setup of app in RingCentral Developer Console
- Time values must be in UTC format
- Change the timeFrom value accordingly so that it does not exceed 184 days from the
  current date and time.
- The specified time is UTC time. If you want the timeFrom and timeTo your local time,
  you have to convert your local time to UTC time.
- Ensure timeFrom does not exceed 184 days from current datetime.
- Specified time is in UTC.
- Authenticate using a personal JWT token.
- Ensure that the timeFrom value does not exceed 184 days from the current date and
  time.
- Change the 'timeFrom' value accordingly so that it does not exceed 184 days from
  the current date and time
- The specified time is UTC time. If you want the timeFrom and timeTo your local time,
  you have to convert your local time to UTC time!
- Requires setup of app in RingCentral Developer Console with permissions for Analytics
- Aggregate reports have a max limit of 200 per page.
- Timeline reports have a max limit of 20 results per page.
- Access to the RingCentral Artificial API currently requires help from support in
  order to grant the 'AI' application scope to your application.
- RingCentral's Artificial Intelligence API is currently in beta.
- Artificial Intelligence API is currently in beta.
- Uses OAuth2 with JWT for authentication
- The RingCentral's Artificial Intelligence API is currently in beta.
- Requires setup of .env file with necessary environment variables.
- The server will not validate the webhook URL.
- Job IDs expire after 1 week.
- API may have rate limits.
- The URI link referenced by the contentUri parameter must be publicly accessible.
- The AI API does not currently allow developers to specify custom HTTP headers to
  be transmitted when fetching the media content.
- English is currently the only supported language.
- Some APIs may require specific permissions to access.
- Set the audioType parameter to CallCenter for 2-3 speakers and Meeting for 4 or
  more speakers.
- Enable voice activity detection by setting enableVoiceActivityDetection to True.
- The audioType parameter is recommended to be set to CallCenter for 2-3 speakers
  and Meeting for 4 or more speakers.
- Set the enableVoiceActivityDetection parameter to True to remove silence and noise
  segments.
- Uses JWT for authentication — requires personal JWT token
- Job ID is returned after a successful request
- The audioType parameter provides a hint about the nature of the meeting to improve
  accuracy.
- Set enableVoiceActivityDetection to True to remove silence and noise segments.
- The audioType parameter provides the system with a hint about the nature of the
  meeting which helps improve accuracy.
- Set the enableVoiceActivityDetection parameter to True if you want silence and noise
  segments removed from the diarization output.
- The audioType parameter provides a hint about the nature of the meeting.
- Set 'audioType' to CallCenter for 2-3 speakers and Meeting for 4-6 speakers.
- Set 'enableVoiceActivityDetection' to True to remove silence and noise segments.
- Some objects like jobId may return nulls in certain conditions
- Some API limits may apply based on the account type.
- 'The API provides two types of summaries: Abstractive and Extractive.'
- You can only run on your production account, this means that you have to use app
  credentials for production.
- Webhook URL must be accessible for callback
- Uses JWT for authentication
- Requires setting up a RingCentral application for OAuth2.
- Ensure to handle rate limits on API calls.
- RingSense API is currently in beta.
- A RingSense license must be purchased and assigned to a user extension.
- Some limits may be placed upon your ability to access and modify this information
  depending upon the authenticated user making the request.
- The extension types available to your organization will depend upon your current
  service plan.
- Each user is limited to an address book of a maximum of 10,000 records.
- Some endpoints may require specific permissions
- Creating users via the API requires 'Edit Accounts' application scope.
- Each user can specify ten forwarding numbers under 'Home', 'Mobile', 'Office' labels.
- Users can create up to seven custom labels.
- Feature set data is part of the Extension API resource.
- Feature set data is only accessible at the Extension Level and not at the Account
  Level.
- A maximum of 5 custom fields can be created and associated with a user per account.
- Custom fields are NOT shared across accounts in a federated account model.
- Custom fields are NOT shared across accounts and sub-accounts.
- Requires JWT for authentication
- Requires setup of environment parameters for client ID, client secret, and server
  URL.
- Maximum of 5 custom fields can be created and associated with a user per account.
- Only an Admin User can change and view the custom field values for other extensions.
- Requires setup of environment variables for client ID, client secret, and server
  URL
- Apps requesting to read presence information require the ReadPresence permission.
- The Audit Trail API only supports 180 days from the current date.
- 'For each account: Up to 180 days of records; 10,000 total records.'
- Some endpoints may have rate limiting
- Most RingCentral API resources do not support all of the HTTP methods.
- Path parameters such as accountId and extensionId are used to identify resources.
- 'Rate limits are applied as follows: Server counts all requests associated with
  the same group that are sent by the app on behalf of a particular user during a
  sliding time window.'
- Retrieving call recordings using the API is subject to throttling.
- Media URLs can be accessed via an HTTP Authorization header or an access_token query
  parameter.
- Content intended for display includes things like error messages, descriptive human-readable
  labels for dictionary items, etc. This content is usually localized.
- Uses JWT authentication — requires setup of JWT credential in the Developer Console
- Apps configured for JWT auth will not work
- Some endpoints may require additional parameters not documented here.
- Some private applications require organizations to host an application themselves.
- Uses Authorization Code Flow.
- Uses OAuth2 authorization code flow — requires setup of a redirect URI in app settings
- Use the authorization code flow for applications that need to collect RingCentral
  credentials for each user.
- Uses OAuth2 with authorization code flow.
- Uses OAuth2 with authorization code flow — requires setup of application in developer
  account
- Use refresh tokens to keep access tokens fresh.
- Implement a separate process to keep tokens fresh.
- Avoid race conditions when managing access tokens.
- Transmit the access token through the Authorization header with the HTTP Bearer
  authentication scheme (recommended).
- Transmitting the access token as a query parameter is not recommended.
- Access tokens expire after 1 hour and refresh tokens expire after 7 days.
- Make sure your app is configured to issue refresh tokens.
- Recommended form of authenticating RingCentral users and exchanging tokens in client-side
  applications
- Considered a more secure version of the more widely used Authorization code flow
- The client secret is never revealed during the flow
- The value of the redirect_uri must exactly match one of the URIs you provided when
  creating your app.
- This endpoint follows the OpenID Connect Discovery 1.0 specification.
- Requires OAuth authorization
- Find your credentials at the developers.ringcentral.com applications page
- Set credentials as environment variables
- Requires a valid webhook URI for asynchronous responses.
- Encoding types include Mpeg, Mp4, Wav, Webm, Webp, Aac, Avi, Ogg.
- Speaker diarization will identify the speaker for each segment so you can tell who
  spoke the sentence, paragraph, or phrase.
- Returns Speech to Text Conversion to the provided webhook URI.
errors:
- '400: CMN-101: Parameter [${parameterName}] value is invalid.'
- '429: CMN-301: Request rate exceeded'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check credentials and permissions.'
- '429 Too Many Requests: Rate limit exceeded.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: Verify the endpoint URL.'
- 'AWR-193: Answering rules not supported for the extension type [${extensionType}]'
- 'CMN-405: Login to extension required'
- 'BIL-101: Feature [${feature}] is not available for current service plan'
- 'BIL-103: Feature [${feature}] is not available for current account'
- 'CMN-401: In order to call this API endpoint, application needs to have [${permissionName}]
  permission'
- 'CMN-419: In order to call this API endpoint for another extension, one of the following
  permissions [${permissionsName}] have to be granted with extended scope to the authorized
  user.'
- 'CMN-102: Resource for parameter [${parameterName}] is not found'
- 'CMN-301: Request rate exceeded'
- 'CMN-304: Duplicate concurrent request. Try again later'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify OAuth token.'
- '429 Too Many Requests: Throttle API calls.'
- 'CMN-101: Parameter [${parameterName}] value is invalid.'
- 'CMN-131: Invalid json in section [${section}]'
- 'ELF-101: Invalid recipient phone number (all of them)'
- 'MSG-347: Attachment [${attachmentFileName}] body is empty'
- 'MSG-354: File extension doesn''t match content type specified, attachment [${attachmentNumber}]:
  [${attachmentFileName}]'
- 'MSG-365: Parameters [country.id] and [country.isoCode] can not be specified simultaneously'
- 'CMN-201: Service Temporary Unavailable'
- '400 Bad Request: Check the input parameters for correctness'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Check OAuth token.'
- '404 Not Found: Ensure the endpoint is correct.'
- 'CLG-110: Parameter [sessionId] is not allowed for usage along with parameter [${parameterName}]'
- 'CLG-111: Parameter [${parameterName}] value is invalid'
- 'CMN-408: In order to call this API endpoint, one of the following permissions [${permissionsName}]
  have to be granted to the authorized user.'
- 'CMN-120: Invalid URI'
- '202: Task accepted for processing.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '401 Unauthorized: Check your credentials'
- '404 Not Found: Check the endpoint path'
- '429 Too Many Requests: Rate limit exceeded'
- '401 Unauthorized: Check the client_id and client_secret.'
- '403 Forbidden: Ensure you have the correct permissions.'
- '403 Error: In order to call this API endpoint, application needs to have [VoipCalling]
  permission'
- '404 Not Found: Check the resource path or ID'
- '400 Bad Request: Check request parameters and body.'
- '401 Unauthorized: Recheck OAuth token.'
- '403 Forbidden: Ensure API access is enabled for the application.'
- '429 Too Many Requests: Rate limit exceeded, reduce request frequency.'
- '400 Bad Request: Check the request body and parameters.'
- '401 Unauthorized: Ensure the token is valid.'
- '404 Not Found: Verify the endpoint path.'
- '400 Bad Request: Check the request body for required fields'
- '401 Unauthorized: Recheck OAuth token and permissions'
- '404 Not Found: Ensure the chatId is valid'
- '401 Unauthorized: Check your credentials and token expiration.'
- 'CMN-001: ${errorMessage}'
- 'CMN-425: [redirect_uri] parameter is too large.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '400: BIL-204: Address verification failed'
- '404: ACT-201: Account not found'
- '400: MSG-385: Unknown country code.'
- '403: BIL-101: Feature [${feature}] is not available for current service plan'
- '403: BIL-103: Feature [${feature}] is not available for current account'
- '403: CMN-408: In order to call this API endpoint, one of the following permissions
  [${permissionsName}] have to be granted to the authorized user.'
- '401 Unauthorized: Check the authorization credentials.'
- '404 Not Found: Verify accountId and extensionId.'
- 'CMN-112: Feature [${feature}] is not available for current extension type'
- '503: CMN-201: Service Temporary Unavailable'
- '429: Request rate exceeded'
- '404 Not Found: Check endpoint path or resource ID'
- '400 Bad Request: Check query parameters'
- '401 Unauthorized: Recheck OAuth credentials'
- '404 Not Found: Ensure endpoint is correct'
- '400: Bad Request — check the request payload'
- '403: Forbidden — check permissions'
- '404: Not Found — verify the webinarId'
- '401 Unauthorized: Check your OAuth credentials'
- '404 Not Found: Endpoint does not exist'
- '403 Forbidden: The user does not have the required permission.'
- '403 Forbidden: Check if the user has the required permissions'
- '403 CMN-401: In order to call this API endpoint, application needs to have [${permissionName}]
  permission'
- '400 Bad Request: Invalid input parameters'
- '404 Not Found: Webinar or session ID does not exist'
- 'HTTP 403: Deleting an invitee for a Session in ''Active'' or ''Finished'' status
  is prohibited.'
- '400: Bad Request'
- '401: Unauthorized'
- '404: Not Found'
- '429 Too Many Requests: Throttle API calls'
- '401 Unauthorized: Check OAuth token validity'
- 'HTTP 403: User does not have permission'
- '200: Successful response'
- '401: Unauthorized - Check OAuth scopes or token expiration'
- '400 Bad Request: Check input parameters.'
- '404 Not Found: Verify webinarId and sessionId.'
- '401 Unauthorized: Check your access token.'
- '403 Forbidden: You do not have permission to access this resource.'
- '404 Not Found: The requested resource could not be found.'
- '404 Not Found: Verify the endpoint path'
- '401 Unauthorized: Invalid credentials or token expired'
- '401 Unauthorized: Recheck OAuth token'
- '404 Not Found: Verify endpoint path'
- '403 Forbidden: Recording downloading is prohibited by company settings.'
- 'HTTP 403: The user must have ''WebinarSettings'' permission granted.'
- '403 Forbidden: User must have ''WebinarSettings'' permission.'
- '400: Bad request'
- '403: Forbidden'
- '500: Internal Server Error'
- '403: Forbidden — caller must be authorized'
- '404: Not Found — session or registrant ID may be incorrect'
- '204: The Registrant was successfully deleted'
- '403: Session must not be in finished state'
- '404: Registrant not found'
- '403: SUB-528 - The [${permissionName}] application permission is required for the
  [${transportType}] transport'
- '401 Unauthorized: Verify your access token.'
- '429 Too Many Requests: Consider implementing a backoff strategy.'
- '404 Not Found: Check if the subscriptionId exists'
- 204 No Content
- 404 Not Found
- '400: Bad Request - Invalid input.'
- '404: Not Found - Subscription not found.'
- '500: Internal Server Error - Try again later.'
- '400 Bad Request: Check your request parameters.'
- 400 Bad Request
- 403 Forbidden
- '400 Bad Request: Check the request body for missing or invalid parameters'
- '401 Unauthorized: Verify client credentials or token'
- '404 Not Found: Ensure the endpoint path is correct'
- '400 Bad Request: Invalid request body'
- '401 Unauthorized: Token may be expired or invalid'
- '404 Not Found: Event ID does not exist'
- '200 OK: Successful request'
- '404 Not Found: Resource not found'
- '401 Unauthorized: Check the access token'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: Check the endpoint URL'
- '404 Not Found: Check if the chatId is valid'
- '401 Unauthorized: Ensure the token is valid'
- '404 Not Found: Check the endpoint path or parameters.'
- '401 Unauthorized: Ensure that the access token is valid.'
- '202: The task is accepted'
- '401 Unauthorized: Recheck OAuth credentials or token expiration'
- '404 Not Found: Verify endpoint URL'
- '400 Bad Request: Check parameters'
- '404 Not Found: Verify webhookId'
- '401 Unauthorized: Check authentication'
- '200: OK'
- 200 OK
- '404 Not Found: Check if the noteId is correct'
- '400 Bad Request: Check input parameters'
- '401 Unauthorized: Check JWT token validity'
- '404 Not Found: Ensure correct endpoint and resource'
- '401 Unauthorized: Check your OAuth token.'
- '404 Not Found: Check the endpoint URL.'
- '401 Unauthorized: Validate token and permissions.'
- '429 Too Many Requests: Reduce API call frequency.'
- '401 Unauthorized: Check credentials'
- '400 Bad Request: Check request parameters'
- '404 Not Found: Ensure the resource exists'
- '401 Unauthorized: Check OAuth credentials'
- '429 Too Many Requests: Reduce the frequency of your requests.'
- '401 Unauthorized: Check client credentials and token validity.'
- '429 Too Many Requests: Reduce request frequency.'
- '201 Created: Task successfully created'
- '401 Unauthorized: Check your credentials and scopes'
- '403 Forbidden: Check your permissions for the requested resource'
- '429 Too Many Requests: Rate limit exceeded; reduce request frequency'
- '400 Bad Request: Check request parameters and format.'
- '401 Unauthorized: Recheck OAuth credentials or token expiration.'
- '201: Created'
- '404 Not Found: Check if the chatId is correct'
- 204 No Content.
- '204 No Content: Successful request'
- '401 Unauthorized: Check OAuth token'
- '403 Forbidden: Ensure correct permissions'
- '403 Forbidden: Check permissions for the API call.'
- '401 Unauthorized: Ensure valid OAuth token.'
- '401 Unauthorized: Unable to authenticate to platform. Check credentials.'
- Unable to authenticate to platform. Check credentials.
- Unable to place a ring-out call.
- '401 Unauthorized: Check client_id and client_secret.'
- '400 Bad Request: phoneNumber specified in the field is empty or invalid.'
- '401 Unauthorized: Check credentials.'
- '401 Unauthorized: Check your OAuth token'
- '404 Not Found: Verify the endpoint and parameters'
- 'InsufficientPermissions: ReadCompanyCallLog permission required'
- Unable to read agent's active calls.
- Unable to supervise this call.
- Unable to list call monitoring groups.
- '401 Unauthorized: Check credentials or permissions'
- '403: SIP INVITE required to bring in parties.'
- 'Request timeout: Conference will be terminated if SIP INVITE is not completed within
  38 seconds.'
- '404 Not Found: The requested resource does not exist.'
- Notification won't be delivered if a party doesn't belong to subscriber account/extension.
- Notification won't be delivered if a party belongs to another session.
- Notification won't be delivered if a party does not belong to any accountId or mailboxId.
- '400 Bad Request: Validate request parameters'
- '404 Not Found: Check endpoint and resource availability'
- 'StandardError: Handle exceptions appropriately during API calls.'
- '404 Not Found: Resource does not exist'
- '401 Unauthorized: Check credentials or JWT token'
- 'Unable to create a new team: StandardError'
- Unable to create a new team.
- '500: You have exceeded your limits for this action.'
- Unable to authenticate to platform
- Unable to create a webinar
- '429 Too Many Requests: Throttle your API requests.'
- '401 Unauthorized: Check JWT credentials'
- '429 Too Many Requests: Reduce API call frequency'
- '401 Unauthorized: Check credentials and scopes'
- '401 Unauthorized: Token may be expired or invalid.'
- '404 Not Found: The resource does not exist.'
- '202: Job submitted successfully'
- '401: Unable to authenticate to platform. Check credentials.'
- '202: Job accepted for processing'
- 'Error: Unable to analyze interaction.'
- '401 Unauthorized: Recheck JWT or client credentials'
- Unable to call speaker diarization API
- Unable to call speaker diarization API.
- '404 Not Found: Check the endpoint URL or resource ID'
- Unable to call speaker diarization API. Check credentials.
- '401 Unauthorized: Verify credentials or token.'
- '404 Not Found: Ensure the endpoint exists.'
- '202: Request accepted, job ID returned.'
- Unable to call the summarize API.
- '401 Unauthorized: Check credentials and token validity'
- '202 Accepted: Job is processing, check webhook for results'
- '403 Forbidden: Insufficient permissions.'
- Unable to call the punctuation API. Check credentials.
- Unable to call punctuate API.
- Error while updating custom field value
- '401 Unauthorized: Unable to authenticate to platform'
- Error while creating custom fields
- '400 Bad Request: Check input parameters or request format.'
- '401 Unauthorized: Ensure the access token is valid.'
- '404 Not Found: Verify the endpoint path and resource.'
- 'Error while updating custom field value: Check the custom field ID and permissions'
- 'Error while creating custom fields: Check the request body for required parameters'
- '401 Unauthorized: Unable to authenticate to platform.'
- '401 Unauthorized: Ensure valid access token'
- Error fetching Custom Fields
- Error while fetching custom fields
- 'REQUEST_LIMIT_EXCEEDED: You have hit the limit.'
- 'QUERY_TIMEOUT: Adjust your query.'
- 'OAU-101: Parameter [${parameterName}] is invalid.'
- 'OAU-102: Unable to issue authorization code.'
- 'OAU-105: Login for ${extensionType} extension is not allowed.'
- 'OAU-106: Invalid authorization code.'
- 'OAU-108: Authorization code is expired.'
- 'OAU-109: Redirect URIs do not match.'
- 'OAU-110: Authorization code was not issued for this application.'
- 'OAU-111: Request parameter duplication detected.'
- 'OAU-112: The client is unauthorized for the required grant type: [${grant_type}].'
- 'OAU-113: No redirect uri is registered for the client.'
- 'OAU-116: Invalid authorization method.'
- 'OAU-117: The scope of requesting application cannot be narrower than the target
  application.'
- 'OAU-119: International Virtual number cannot be used to login.'
- 'OAU-120: Wrong Application ID.'
- 'OAU-121: Wrong Application.'
- 'OAU-123: Invalid Authorization header value: ${parameter}.'
- 'OAU-125: Grant type is not allowed for application.'
- 'OAU-127: Invalid application release.'
- 'OAU-128: Access token expired.'
- 'OAU-129: Access token corrupted.'
- 'OAU-134: Invalid Authorization header.'
- 'OAU-136: Extension not found.'
- 'OAU-140: Invalid resource owner credentials.'
- 'OAU-141: Login for extension in current state is not allowed.'
- 'OAU-142: Login to account in current state is not allowed.'
- 'OAU-146: Invalid client credentials.'
- 'OAU-147: The account is locked out due to multiple unsuccessful logon attempts.'
- 'OAU-148: The account is locked out due to multiple unsuccessful logon attempts.
  Please use Single Sign-on way to authenticate.'
- 'OAU-149: Unparsable access token.'
- 'OAU-150: The value of query parameter [${queryParameterName}] should be equal to
  parameter [${requestParameterName}] in request body.'
- 'OAU-151: Authorization method not supported.'
- 'OAU-168: Password grant is not allowed because MFA is required.'
- 'CMN-301: Request rate exceeded.'
- 'CMN-302: Request rate exceeded.'
- 'CMN-303: Can not resolve API plan. Rate limits undefined.'
- 'CMN-304: Duplicate concurrent request. Try again later.'
- 'CMN-310: Global request rate exceeded.'
- 'SUB-402: Presence feature is disabled for this extension type (${param} / ${url}).'
- 'SUB-403: User disallowed to monitor his presence.'
- 'SUB-404: User disallowed this subscriber to pick up calls.'
- 'SUB-405: Not allowed subscribe for messages to other extensions.'
- 'SUB-406: Not allowed subscribe for events to extensions of other account.'
- 'SUB-407: Not allowed subscribe for APNS if endpoint_id not defined.'
- 'SUB-408: Not allowed subscribe for unknown user.'
- 'SUB-505: Subscriptions limit exceeded.'
- 'SUB-507: Subscription with key [${subscriptionKey}] and assigned session [${session}]
  was expired.'
- 'SUB-508: Invalid event filters: [${filters}].'
- 'SUB-511: Action not allowed for APNS subscription.'
- 'CMN-102: Resource for parameter [${parameterName}] is not found.'
- 'CMN-103: JSON can''t be parsed.'
- 'CMN-104: Cannot parse request.'
- 'CMN-105: URL should not contain query string when method is [${method}] and content
  type is [${contentType}].'
- 'CMN-106: Batch request is limited to ${limit} entries.'
- 'CMN-107: Requested Range Not Satisfiable.'
- 'CMN-108: Parameter ${parameterName} value in request body doesn''t match specified
  in path.'
- 'CMN-109: Feature not available.'
- 'CMN-110: Header ${header} should be specified.'
- 'CMN-120: Invalid URI.'
- 'CMN-201: Service Temporary Unavailable.'
- 'CMN-202: Operation is not supported.'
- 'CMN-203: Internal Server Error.'
- 'CMN-401: Specific application permission required.'
- 'CMN-402: Administrator permission required.'
- 'CMN-403: The feature is not available for this extension type.'
- 'CMN-404: Attempt to access another extension.'
- 'CMN-405: Login to extension required.'
- 'CMN-406: Duplicate value for parameter ${parameterName}: ${parameterValue} found
  in request.'
- 'CMN-407: Parameter in header is invalid.'
- 'CMN-408: [{permissionName}] permission required.'
- 'CLG-101: Parameter [syncToken] is invalid [Sync token expired, call log was reset].'
- 'CLG-102: Parameter [syncToken] is invalid [Sync token expired, call log was reset].'
- 'CLG-103: Parameter [syncToken] is invalid [Sync token expired, call log was reset].'
- 'CLG-104: Parameter [syncToken] is invalid [Sync token expired, call log was reset].'
- 'CLG-105: Parameter [syncToken] is invalid [Sync token expired, call log was reset].'
- 'CLG-110: Parameter [sessionId] is not allowed for usage along with parameter [${parameterName}].'
- 'MSG-240: Specified recipient [${toPhoneNumber}] isn''t an US phone number.'
- 'MSG-241: Cannot send SMS from Fax number.'
- 'MSG-242: Sending SMS is not available from the number specified.'
- 'MSG-243: Phone number is blocked.'
- 'MSG-245: Cannot find the phone number which belongs to user.'
- 'MSG-290: Sending SMS to ${toPhoneNumber} failed. Please try later.'
- 'MSG-304: Phone number doesn''t belong to extension.'
- 'MSG-305: Request rate exceeded.'
- 'MSG-309: Cannot receive SMS on Fax number.'
- 'MSG-310: Phone number is not assigned.'
- 'MSG-314: Extension is of inappropriate type.'
- 'MSG-316: No department members found.'
- 'MSG-324: Recipient extension is in inappropriate state.'
- 'MSG-325: Reply is forbidden for old message threads.'
- 'MSG-326: Reply is denied for user, who is no longer a thread participant.'
- 'MSG-330: Sending from department message is not supported.'
- 'MSG-331: Sender extension number does not correspond to logged in extension.'
- 'MSG-333: Invalid message synchronisation request: full synchronization is required.'
- 'MSG-337: Attachment size limit exceeded.'
- 'MSG-338: Message size limit exceeded.'
- 'MSG-340: Outbound fax is not available for extension type [${type}].'
- 'MSG-341: Outbound fax is not allowed for extension [${extensionId}].'
- 'MSG-343: Fax resend is not allowed for message in current state.'
- 'MSG-347: Attachment body is empty.'
- 'MSG-348: Unsupported attachment media type.'
- 'MSG-349: Unable to parse fax envelope.'
- 'MSG-350: No content disposition.'
- 'MSG-351: No file name in content disposition.'
- 'MSG-352: Message content is null.'
- '207 Multi-Status: Indicates a batch request'
- '404 Not Found: Requested endpoint does not exist'
- '5xx: Server error'
- 'HTTP 429 Too Many Requests: The server throttles the client due to a high request
  rate.'
- '401 Unauthorized: Check credentials or token expiration.'
- '401 Unauthorized: Check your credentials or token expiration.'
- 'CMN-302: Request rate exceeded'
- '400: Invalid request parameters.'
- '202400: Task accepted for processing.'
auth_info:
  mentioned_objects:
  - client_secret_basic
  - client_secret_jwt
  - private_key_jwt
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuth2
  - RingCentral API
  - RC_CLIENT_ID
  - RC_CLIENT_SECRET
  - RC_SERVER_URL
  - RC_JWT
  - Authorization Server
  - Client Application
  - WebinarSettings
  - ReadWebinars
  - AccessToken
  - RC_APP_CLIENT_ID
  - RC_APP_CLIENT_SECRET
  - RC_USER_JWT
  - RINGOUT_CALLER
  - RINGOUT_RECIPIENT
  - RestClient
  - SDK
  - ApiException
  - platform
  - JWT
  - RingCentral SDK
  - JWT token
  - JWT credential
  - OAuth
  - Edit Accounts
  - ReadPresence
  - OAuthToken
  - RC_REDIRECT_URL
  - client_id
  - response_type
  - redirect_uri
  - state
  - scope
  - display
  - prompt
  - ui_locales
  - code_challenge
  - code_challenge_method
  - nonce
  - login_hint
  - brand_id
  - OAuth Token
  - OIDC Provider Configuration
client:
  base_url: https://platform.ringcentral.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://platform.ringcentral.com/restapi/oauth/token
    client_id: '{{ dlt.secrets[''RC_CLIENT_ID''] }}'
    client_secret: '{{ dlt.secrets[''RC_CLIENT_SECRET''] }}'
    refresh_token: '{{ dlt.secrets[''RC_REFRESH_TOKEN''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
    Content-Type: application/x-www-form-urlencoded
source_metadata: null
