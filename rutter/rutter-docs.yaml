resources:
- name: connections
  endpoint:
    path: /connections
    method: GET
- name: fetch_connection_token
  endpoint:
    path: /connections/access_token
    method: GET
- name: fetch_connection_status
  endpoint:
    path: /connections/status
    method: GET
- name: create_connection
  endpoint:
    path: /connections/create
    method: POST
- name: update_connection
  endpoint:
    path: /connections/:id
    method: PATCH
- name: delete_connection
  endpoint:
    path: /connections/:id
    method: DELETE
- name: trigger_incremental_sync
  endpoint:
    path: /connections/incremental_sync
    method: POST
- name: invalidate_access_token
  endpoint:
    path: /connections/access_token/invalidate
    method: POST
- name: trigger_data_recovery_backfill
  endpoint:
    path: /connections/backfill
    method: POST
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: records
- name: invoices
  endpoint:
    path: /invoices
    method: POST
    data_selector: records
- name: accounts
  endpoint:
    path: /accounting/accounts
    method: POST
- name: bank_deposits
  endpoint:
    path: /accounting/bank_deposits
    method: POST
- name: bank_transfers
  endpoint:
    path: /accounting/bank_transfers
    method: POST
- name: bills
  endpoint:
    path: /accounting/bills
    method: POST
- name: bill_credit_applications
  endpoint:
    path: /accounting/bill_credit_applications
    method: POST
- name: bill_credit_memos
  endpoint:
    path: /accounting/bill_credit_memos
    method: POST
- name: bill_payments
  endpoint:
    path: /accounting/bill_payments
    method: POST
- name: classes
  endpoint:
    path: /accounting/classes
    method: POST
- name: customers
  endpoint:
    path: /accounting/customers
    method: POST
- name: departments
  endpoint:
    path: /accounting/departments
    method: POST
- name: expenses
  endpoint:
    path: /accounting/expenses
    method: POST
- name: expenses_refunds
  endpoint:
    path: /accounting/expenses/refunds
    method: POST
- name: invoices
  endpoint:
    path: /accounting/invoices
    method: POST
- name: invoice_credit_applications
  endpoint:
    path: /accounting/invoice_credit_applications
    method: POST
- name: invoice_credit_memos
  endpoint:
    path: /accounting/invoice_credit_memos
    method: POST
- name: invoice_payments
  endpoint:
    path: /accounting/invoice_payments
    method: POST
- name: items
  endpoint:
    path: /accounting/items
    method: POST
- name: journal_entries
  endpoint:
    path: /accounting/journal_entries
    method: POST
- name: purchase_orders
  endpoint:
    path: /accounting/purchase_orders
    method: POST
- name: sales_orders
  endpoint:
    path: /accounting/sales_orders
    method: POST
- name: vendors
  endpoint:
    path: /accounting/vendors
    method: POST
- name: connections
  endpoint:
    path: /connections
    method: GET
- name: access_token
  endpoint:
    path: /connections/access_token
    method: GET
- name: status
  endpoint:
    path: /connections/status
    method: GET
- name: create_connection
  endpoint:
    path: /connections/create
    method: POST
- name: incremental_sync
  endpoint:
    path: /connections/incremental_sync
    method: POST
- name: invalidate_access_token
  endpoint:
    path: /connections/access_token/invalidate
    method: POST
- name: backfill
  endpoint:
    path: /connections/backfill
    method: POST
- name: connections
  endpoint:
    path: /connections
    method: GET
- name: fetch_connection
  endpoint:
    path: /connections/access_token
    method: GET
- name: fetch_connection_status
  endpoint:
    path: /connections/status
    method: GET
- name: create_connection
  endpoint:
    path: /connections/create
    method: POST
- name: update_connection
  endpoint:
    path: /connections/:id
    method: PATCH
- name: delete_connection
  endpoint:
    path: /connections/:id
    method: DELETE
- name: trigger_incremental_sync
  endpoint:
    path: /connections/incremental_sync
    method: POST
- name: invalidate_access_token
  endpoint:
    path: /connections/access_token/invalidate
    method: POST
- name: trigger_data_recovery_backfill
  endpoint:
    path: /connections/backfill
    method: POST
- name: webhook_config
  endpoint:
    path: /versioned/configs/webhooks
    method: GET
- name: platform_data_config
  endpoint:
    path: /versioned/configs/webhooks/:id/platform_data_config
    method: GET
- name: update_platform_data_config
  endpoint:
    path: /versioned/configs/webhooks/:id/platform_data_config
    method: PATCH
- name: accounts
  endpoint:
    path: /accounting/accounts
    method: GET
    data_selector: account
    params: {}
- name: account
  endpoint:
    path: /rest/2024-08-31/accounts
    method: POST
    data_selector: account
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: customer
    params:
      id: string
      access_token: string
      force_fetch: enum
- name: customer_by_id
  endpoint:
    path: /customers/:id
    method: GET
    data_selector: customer
    params:
      id: string
      access_token: string
      force_fetch: enum
- name: ad_accounts
  endpoint:
    path: /ads/accounts
    method: GET
    data_selector: account
    params:
      id: string
      access_token: string
      id_type: enum
      force_fetch: enum
- name: fetch_ad_account
  endpoint:
    path: /ads/accounts/:id
    method: GET
    data_selector: account
    params:
      id: string
      access_token: string
      id_type: enum
      force_fetch: enum
- name: bank_accounts
  endpoint:
    path: /versioned/banking/bank_accounts
    method: GET
    data_selector: bank_account_balance
    params: {}
- name: bank_account_details
  endpoint:
    path: /versioned/banking/bank_accounts/:id/details
    method: GET
    data_selector: bank_account_balance
    params: {}
- name: bank_account_balance
  endpoint:
    path: /versioned/banking/bank_accounts/:id/balance
    method: GET
    data_selector: bank_account_balance
    params: {}
- name: exchange_token
  endpoint:
    path: /versioned/item/public_token/exchange
    method: POST
- name: listAccounts
  endpoint:
    path: /accounting/accounts
    method: GET
    params:
      access_token: required
      cursor: optional
      limit: optional
      filter: optional
      sort: optional
      expand: optional
      force_fetch: optional
- name: createAccount
  endpoint:
    path: /accounting/accounts
    method: POST
    params:
      access_token: required
- name: fetchAccount
  endpoint:
    path: /accounting/accounts/{id}
    method: GET
    params:
      id: required
      access_token: required
      id_type: optional
      force_fetch: optional
- name: updateAccount
  endpoint:
    path: /accounting/accounts/{id}
    method: PATCH
    params:
      id: required
      access_token: required
- name: listBankDeposits
  endpoint:
    path: /accounting/bank_deposits
    method: GET
    params:
      access_token: required
      cursor: optional
      limit: optional
      filter: optional
      sort: optional
      expand: optional
      force_fetch: optional
- name: createBankDeposit
  endpoint:
    path: /accounting/bank_deposits
    method: POST
    params:
      access_token: required
- name: bank_deposits
  endpoint:
    path: /accounting/bank_deposits
    method: GET
- name: bank_feed_accounts
  endpoint:
    path: /accounting/bank_feeds/accounts
    method: GET
- name: bank_feed_transactions
  endpoint:
    path: /accounting/bank_feeds/transactions
    method: POST
    data_selector: transactions
    params:
      access_token: required
- name: bank_transfers
  endpoint:
    path: /accounting/bank_transfers
    method: GET
    data_selector: transfers
    params:
      access_token: required
- name: bill_credit_memos
  endpoint:
    path: /accounting/bill_credit_memos
    method: GET
- name: bill_payments
  endpoint:
    path: /accounting/bill_payments
    method: GET
- name: bills
  endpoint:
    path: /accounting/bills
    method: GET
- name: bills
  endpoint:
    path: /accounting/bills/{id}
    method: GET
    data_selector: BillResponseWithConnection
- name: currencies
  endpoint:
    path: /accounting/currencies
    method: GET
    data_selector: currencies
- name: classes
  endpoint:
    path: /accounting/classes
    method: GET
    data_selector: classes
- name: company_info
  endpoint:
    path: /accounting/company_info
    method: GET
    data_selector: CompanyInfo_2024_04_30ResponseWithConnection
- name: cash_flow_statements
  endpoint:
    path: /accounting/cash_flow_statements
    method: GET
    data_selector: ListListCashFlowStatementResponseResponse
- name: currencies
  endpoint:
    path: /accounting/currencies
    method: GET
- name: customer_refunds
  endpoint:
    path: /accounting/customer_refunds
    method: GET
- name: customers
  endpoint:
    path: /accounting/customers
    method: GET
- name: departments
  endpoint:
    path: /accounting/departments
    method: GET
- name: departments
  endpoint:
    path: /accounting/departments
    method: GET
    data_selector: departments
- name: expenses
  endpoint:
    path: /accounting/expenses
    method: GET
    data_selector: expenses
- name: income_statements
  endpoint:
    path: /accounting/income_statements
    method: GET
    data_selector: income_statements
- name: invoice_credit_memos
  endpoint:
    path: /accounting/invoice_credit_memos
    method: GET
- name: invoice_payments
  endpoint:
    path: /accounting/invoice_payments
    method: GET
- name: invoices
  endpoint:
    path: /accounting/invoices
    method: GET
- name: invoices
  endpoint:
    path: /accounting/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: items
  endpoint:
    path: /accounting/items
    method: GET
    data_selector: items
    params: {}
- name: journal_entries
  endpoint:
    path: /accounting/journal_entries
    method: GET
- name: locations
  endpoint:
    path: /accounting/locations
    method: GET
- name: payment_methods
  endpoint:
    path: /accounting/payment_methods
    method: GET
- name: payment_terms
  endpoint:
    path: /accounting/payment_terms
    method: GET
    data_selector: data
    params:
      access_token: required
- name: projects
  endpoint:
    path: /accounting/projects
    method: GET
    data_selector: data
    params:
      access_token: required
- name: purchase_orders
  endpoint:
    path: /accounting/purchase_orders
    method: GET
    data_selector: data
    params:
      access_token: required
- name: sales_orders
  endpoint:
    path: /accounting/sales_orders
    method: GET
    params:
      limit: '50'
- name: sales_receipts
  endpoint:
    path: /accounting/sales_receipts
    method: GET
    params:
      limit: '50'
- name: subsidiaries
  endpoint:
    path: /accounting/subsidiaries
    method: GET
    params:
      limit: '50'
- name: tasks
  endpoint:
    path: /accounting/tasks
    method: GET
    data_selector: records
- name: tax_agencies
  endpoint:
    path: /accounting/tax_agencies
    method: GET
    data_selector: records
- name: tax_rates
  endpoint:
    path: /accounting/tax_rates
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /accounting/transactions
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /accounting/transactions/{id}
    method: GET
    params:
      access_token: required
- name: vendors
  endpoint:
    path: /accounting/vendors
    method: GET
    params:
      access_token: required
- name: bank_accounts
  endpoint:
    path: /banking/bank_accounts
    method: GET
    params:
      access_token: access_token
      limit: '50'
- name: bank_transactions
  endpoint:
    path: /banking/bank_transactions
    method: GET
    params:
      access_token: access_token
      limit: '50'
- name: commerce_metrics
  endpoint:
    path: /commerce/metrics/{metricName}
    method: GET
    params:
      access_token: access_token
- name: customer_groups
  endpoint:
    path: /customer_groups
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: hris_departments
  endpoint:
    path: /hris/departments
    method: GET
- name: hris_employees
  endpoint:
    path: /hris/employees
    method: GET
- name: employees
  endpoint:
    path: /hris/employees
    method: GET
    data_selector: employees
    params: {}
- name: organizations
  endpoint:
    path: /hris/organizations
    method: GET
    data_selector: organizations
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
- name: product_categories
  endpoint:
    path: /products/categories
    method: GET
    data_selector: categories
- name: accounts
  endpoint:
    params:
      access_token:
        type: string
        format: uuid
        description: The access token of the connection.
      cursor:
        type: string
        description: Used to paginate to the next batch of objects.
      limit:
        type: integer
        description: Used to limit the number of returned objects. Defaults to 50.
- name: bank_deposit
  endpoint:
    path: /bank_deposits
    method: GET
    data_selector: bank_deposits
- name: CreateBankFeedAccount
  endpoint:
    path: /create_bank_feed_account
    method: POST
    data_selector: bank_feed_account
    params: {}
- name: UpdateBankFeedAccount
  endpoint:
    path: /update_bank_feed_account
    method: PATCH
    data_selector: bank_feed_account
    params: {}
- name: DeleteBankFeedAccount
  endpoint:
    path: /delete_bank_feed_account
    method: DELETE
    data_selector: code
    params: {}
- name: CreateBankFeedTransactions
  endpoint:
    path: /create_bank_feed_transactions
    method: POST
    data_selector: bank_feed_transactions
    params: {}
- name: bank_feed_transaction
  endpoint:
    path: /api/v1/bank_feed_transactions
    method: GET
    data_selector: bank_feed_transactions
    params:
      incremental: last_synced_at
- name: bank_transfer
  endpoint:
    path: /api/v1/bank_transfers
    method: GET
    data_selector: bank_transfers
    params: {}
- name: bill_credit_application
  endpoint:
    path: /bill_credit_applications
    method: POST
    data_selector: bill_credit_application
    params: {}
- name: bill_credit_memo
  endpoint:
    path: /bill_credit_memos
    method: GET
    data_selector: bill_credit_memos
    params: {}
- name: bill_credit_memo
  endpoint:
    path: /v1/bill_credit_memos
    method: GET
    data_selector: bill_credit_memos
- name: bill_payment
  endpoint:
    path: /rest/version/bill-payments
    method: POST
    data_selector: bill_payments
- name: bill_payment
  endpoint:
    path: /rest/v1/bill_payments
    method: POST
    data_selector: bill_payment
    params: {}
- name: update_bill_payment
  endpoint:
    path: /rest/v1/bill_payments/{id}
    method: PUT
    data_selector: bill_payment
    params: {}
- name: delete_bill_payment
  endpoint:
    path: /rest/v1/bill_payments/{id}
    method: DELETE
    data_selector: bill_payment
    params: {}
- name: bill
  endpoint:
    path: /rest/version/bills
    method: POST
    data_selector: bill
    params: {}
- name: bill
  endpoint:
    path: /rest/version/bills
    method: POST
    data_selector: bill
    params: {}
- name: cash_flow_statement
  endpoint:
    path: /rest/version/cash_flow_statements
    method: GET
    data_selector: cash_flows
    params: {}
- name: class
  endpoint:
    path: /rest/version/classes
    method: POST
    data_selector: class
    params: {}
- name: customer_refund
  endpoint:
    path: /customers/refunds
    method: POST
    data_selector: customer_refund
    params:
      access_token: 'true'
- name: customers
  endpoint:
    path: /rest/version/accounting-customers
    method: GET
    data_selector: customers
- name: departments
  endpoint:
    path: /rest/version/departments
    method: GET
    data_selector: departments
- name: expenses
  endpoint:
    path: /expenses
    method: GET
    data_selector: expenses
    params:
      access_token: required
      limit: '50'
- name: expense
  endpoint:
    path: /expenses
    method: POST
    data_selector: expense
    params: {}
- name: update_expense
  endpoint:
    path: /expenses/update
    method: PUT
    data_selector: expense
    params: {}
- name: income_statement
  endpoint:
    path: /income_statements
    method: GET
    data_selector: income_statements
- name: invoice_credit_application
  endpoint:
    path: /invoice_credit_applications
    method: POST
    data_selector: invoice_credit_application
- name: invoice_credit_memo
  endpoint:
    path: /invoice_credit_memos
    method: GET
    data_selector: invoice_credit_memos
    params:
      incremental: updated_at
- name: invoice_payment
  endpoint:
    path: /invoices/payments
    method: POST
    data_selector: invoice_payment
    params: {}
- name: invoice
  endpoint:
    path: /api/v1/invoices
    method: POST
    data_selector: invoice
    params: {}
- name: accounting_item
  endpoint:
    path: /v1/accounting/items
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: journal_entry
  endpoint:
    path: /services/data/vXX.X/journalEntry
    method: POST
    data_selector: journal_entry
- name: location
  endpoint:
    path: /locations
    method: GET
    data_selector: locations
    params: {}
- name: payment_method
  endpoint:
    path: /payment_methods
    method: GET
    data_selector: payment_methods
    params: {}
- name: payment_term
  endpoint:
    path: /payment_terms
    method: GET
    data_selector: payment_terms
    params: {}
- name: sales_order
  endpoint:
    path: /rest/version/salesorders
    method: GET
    data_selector: sales_orders
- name: sales_order
  endpoint:
    path: /sales_order
    method: POST
    data_selector: sales_order
- name: sales_receipt
  endpoint:
    path: /sales_receipts
    method: POST
    data_selector: sales_receipt
    params: {}
- name: tax_rate
  endpoint:
    path: /tax_rates
    method: GET
    data_selector: tax_rates
    params:
      access_token: string
- name: accounting_transaction
  endpoint:
    path: /accounting_transactions
    method: GET
    data_selector: transactions
    params:
      access_token: string
- name: vendors
  endpoint:
    path: /vendors
    method: GET
    data_selector: vendors
- name: campaign_daily
  endpoint:
    path: /campaign_daily
    method: GET
    data_selector: campaign_dailies
    params:
      incremental: last_synced_at
- name: bank_account
  endpoint:
    path: /bank_accounts
    method: GET
    data_selector: bank_accounts
    params: {}
- name: bank_transactions
  endpoint:
    path: /bank_transactions
    method: GET
- name: connections
  endpoint:
    path: /connections
    method: GET
- name: customer_groups
  endpoint:
    path: /customer_groups
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: hris_employee
  endpoint:
    path: /rest/version/hris-employees
    method: GET
    data_selector: employees
    params:
      access_token: '{{ dlt.secrets[''access_token''] }}'
- name: hris_department
  endpoint:
    path: /rest/version/hris-departments
    method: GET
    data_selector: departments
    params:
      access_token: '{{ dlt.secrets[''access_token''] }}'
- name: hris_organization
  endpoint:
    path: /rest/version/hris-organizations
    method: GET
    data_selector: organizations
    params:
      access_token: '{{ dlt.secrets[''access_token''] }}'
- name: Order
  endpoint:
    path: /orders
    method: GET
- name: Transaction
  endpoint:
    path: /transactions
    method: GET
- name: orders
  endpoint:
    path: /orders
    method: GET
- name: payouts
  endpoint:
    path: /payouts
    method: GET
- name: products
  endpoint:
    path: /products
    method: GET
- name: product_identity
  endpoint:
    path: /product_identity
    method: GET
    data_selector: item_name
- name: safety_and_compliance
  endpoint:
    path: /safety_and_compliance
    method: GET
    data_selector: batteries_required
- name: product
  endpoint:
    path: /products
    method: GET
    data_selector: products
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params:
      access_token: '{{ dlt.secrets[''rutter_access_token''] }}'
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params:
      access_token: '{{ dlt.secrets[''rutter_access_token''] }}'
- name: bank_deposit
  endpoint:
    path: /services/data/vXX.X/sobjects/BankDeposit
    method: GET
    data_selector: records
    params: {}
- name: bank_feed_account
  endpoint:
    path: /bank_feed_account
    method: GET
    data_selector: bank_feed_account
    params: {}
- name: bank_feed_transaction
  endpoint:
    path: /bank_feed_transaction
    method: GET
    data_selector: bank_feed_transactions
    params: {}
- name: bank_transfer
  endpoint:
    path: /bank_transfer
    method: GET
    data_selector: bank_transfers
    params: {}
- name: bill_credit_application
  endpoint:
    path: /bill_credit_application
    method: POST
    data_selector: bill_credit_application
    params: {}
- name: vendor
  endpoint:
    path: /vendor
    method: GET
    data_selector: value.vendor
    params: {}
- name: bank_account
  endpoint:
    path: /bank_accounts
    method: GET
    data_selector: value.bank_accounts
    params: {}
- name: bank_transaction
  endpoint:
    path: /bank_transactions
    method: GET
    data_selector: value.bank_transactions
    params: {}
- name: customer_group
  endpoint:
    path: /GetCustomerGroupResponseWithConnection
    method: GET
    data_selector: customer_group
    params: {}
- name: customer
  endpoint:
    path: /ListCustomersResponse
    method: GET
    data_selector: customers
    params: {}
- name: order
  endpoint:
    path: /ListOrdersResponse
    method: GET
    data_selector: orders
    params: {}
- name: order
  endpoint:
    path: /orders
    method: GET
    data_selector: value.orders
- name: payout
  endpoint:
    path: /payouts
    method: GET
    data_selector: value.payouts
- name: product
  endpoint:
    path: /products
    method: GET
    data_selector: value.products
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: stores
  endpoint:
    path: /stores
    method: GET
    data_selector: store
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
- name: customer_refund
  endpoint:
    path: /customer_refund
    method: POST
    data_selector: customer_refund
- name: bank_account
  endpoint:
    path: /bank_account
    method: POST
    data_selector: bank_account
- name: bank_deposit
  endpoint:
    path: /bank_deposit
    method: POST
    data_selector: bank_deposit
- name: bank_transaction
  endpoint:
    path: /bank_transaction
    method: POST
    data_selector: bank_transaction
- name: bank_transfer
  endpoint:
    path: /bank_transfer
    method: POST
    data_selector: bank_transfer
- name: bill
  endpoint:
    path: /bill
    method: POST
- name: bill_credit_memo
  endpoint:
    path: /bill_credit_memo
    method: POST
- name: bill_credit_application
  endpoint:
    path: /bill_credit_application
    method: DELETE
- name: bill_payment
  endpoint:
    path: /bill_payment
    method: POST
- name: class
  endpoint:
    path: /class
    method: POST
- name: company_info
  endpoint:
    path: /company_info
    method: DELETE
- name: currency
  endpoint:
    path: /currency
    method: POST
- name: customer
  endpoint:
    path: /customer
    method: POST
- name: department
  endpoint:
    path: /department
    method: POST
- name: expense
  endpoint:
    path: /expense
    method: POST
- name: expense_refund
  endpoint:
    path: /expense_refund
    method: DELETE
- name: invoice
  endpoint:
    path: /invoice
    method: POST
- name: invoice_credit_application
  endpoint:
    path: /invoice_credit_application
    method: DELETE
- name: invoice_credit_memo
  endpoint:
    path: /invoice_credit_memo
    method: POST
- name: invoice_payment
  endpoint:
    path: /invoice_payment
    method: POST
- name: item
  endpoint:
    path: /item
    method: POST
- name: journal_entry
  endpoint:
    path: /journal_entry
    method: POST
- name: journal_entry
  endpoint:
    path: /journal_entry
    method: POST
    data_selector: journal_entry
    params: {}
- name: payment_method
  endpoint:
    path: /payment_method
    method: POST
    data_selector: payment_method
    params: {}
- name: payment_term
  endpoint:
    path: /payment_term
    method: POST
    data_selector: payment_term
    params: {}
- name: product
  endpoint:
    path: /product
    method: POST
    data_selector: product
    params: {}
- name: project
  endpoint:
    path: /project
    method: POST
    data_selector: project
    params: {}
- name: purchase_order
  endpoint:
    path: /purchase_order
    method: POST
    data_selector: purchase_order
    params: {}
- name: purchase_order
  endpoint:
    path: /purchase_order
    method: POST
    data_selector: purchase_order
    params: {}
- name: sales_order
  endpoint:
    path: /sales_order
    method: POST
    data_selector: sales_order
    params: {}
- name: subsidiary
  endpoint:
    path: /subsidiary
    method: DELETE
    data_selector: subsidiary
    params: {}
- name: task
  endpoint:
    path: /task
    method: POST
    data_selector: task
    params: {}
- name: tax_rate
  endpoint:
    path: /tax_rate
    method: DELETE
    data_selector: tax_rate
    params: {}
- name: transaction
  endpoint:
    path: /transaction
    method: POST
    data_selector: transaction
    params: {}
- name: vendor
  endpoint:
    path: /vendor
    method: POST
    data_selector: vendor
    params: {}
- name: payout
  endpoint:
    path: /payout
    method: POST
    data_selector: payout
    params: {}
- name: connection_webhooks
  endpoint:
    path: /webhooks/connections
    method: POST
    data_selector: webhook_events
- name: account_webhooks
  endpoint:
    path: /webhooks/accounts
    method: POST
    data_selector: webhook_events
- name: bill_webhooks
  endpoint:
    path: /webhooks/bills
    method: POST
    data_selector: webhook_events
- name: customer_webhooks
  endpoint:
    path: /webhooks/customers
    method: POST
    data_selector: webhook_events
- name: invoice_webhooks
  endpoint:
    path: /webhooks/invoices
    method: POST
    data_selector: webhook_events
- name: vendor_webhooks
  endpoint:
    path: /webhooks/vendors
    method: POST
    data_selector: webhook_events
- name: order_created
  endpoint:
    path: /webhooks/order_created
    method: POST
    data_selector: order
    params:
      code: ORDER_CREATED
- name: order_updated
  endpoint:
    path: /webhooks/order_updated
    method: POST
    data_selector: order
    params:
      code: ORDER_UPDATED
- name: order_deleted
  endpoint:
    path: /webhooks/order_deleted
    method: POST
    data_selector: order
    params:
      code: ORDER_DELETED
- name: product_updated
  endpoint:
    path: /webhooks/product_updated
    method: POST
    data_selector: product
    params:
      code: PRODUCT_UPDATED
- name: product_created
  endpoint:
    path: /webhooks/product_created
    method: POST
    data_selector: product
    params:
      code: PRODUCT_CREATED
- name: product_deleted
  endpoint:
    path: /webhooks/product_deleted
    method: POST
    data_selector: product
    params:
      code: PRODUCT_DELETED
- name: store_updated
  endpoint:
    path: /webhooks/store_updated
    method: POST
    data_selector: store
    params:
      code: STORE_UPDATED
- name: delete_webhook
  endpoint:
    path: /webhooks/delete
    method: POST
    data_selector: delete_event
- name: SuiteQL
  endpoint:
    path: /services/rest/query/v1/suiteql
    method: POST
    data_selector: platform_request_body
- name: Custom RESTlet
  endpoint:
    path: /app/site/hosting/restlet.nl
    method: GET
    data_selector: platform_request_body
- name: orders
  endpoint:
    path: /versioned/orders
    method: GET
    data_selector: orders
    params:
      created_at_min: '1653436800000'
      created_at_max: '1653523199000'
- name: events
  endpoint:
    path: /rest/version/events
    method: GET
    data_selector: records
    params: {}
- name: bills
  endpoint:
    path: /accounting/bills
    method: GET
    data_selector: records
    params: {}
- name: fetch_bill
  endpoint:
    path: /accounting/bills/:id
    method: GET
    data_selector: records
    params: {}
- name: create_bill
  endpoint:
    path: /accounting/bills
    method: POST
    data_selector: records
    params: {}
- name: update_bill
  endpoint:
    path: /accounting/bills/:id
    method: PATCH
    data_selector: records
    params: {}
- name: delete_bill
  endpoint:
    path: /accounting/bills/:id
    method: DELETE
    data_selector: records
    params: {}
- name: bill_payments
  endpoint:
    path: /accounting/bill_payments
    method: GET
    data_selector: records
    params: {}
- name: customers
  endpoint:
    path: /accounting/customers
    method: GET
    data_selector: customer
    params: {}
- name: fetch_customer
  endpoint:
    path: /accounting/customers/:id
    method: GET
    data_selector: customer
    params: {}
- name: create_customer
  endpoint:
    path: /accounting/customers
    method: POST
    data_selector: customer
    params: {}
- name: update_customer
  endpoint:
    path: /accounting/customers/:id
    method: PATCH
    data_selector: customer
    params: {}
- name: invoice_credit_memos
  endpoint:
    path: /accounting/invoice_credit_memos
    method: GET
    data_selector: invoice_credit_application
    params:
      access_token: string
- name: create_invoice_credit_memo
  endpoint:
    path: /accounting/invoice_credit_memos
    method: POST
    data_selector: invoice_credit_application
    params:
      access_token: string
- name: update_invoice_credit_memo
  endpoint:
    path: /accounting/invoice_credit_memos/:id
    method: PATCH
    data_selector: invoice_credit_application
    params:
      access_token: string
- name: delete_invoice_credit_memo
  endpoint:
    path: /accounting/invoice_credit_memos/:id
    method: DELETE
    data_selector: invoice_credit_application
    params:
      access_token: string
- name: create_invoice_credit_application
  endpoint:
    path: /accounting/invoice_credit_applications
    method: POST
    data_selector: invoice_credit_application
    params:
      access_token: string
- name: journal_entries
  endpoint:
    path: /versioned/accounting/journal_entries
    method: GET
    data_selector: records
    params: {}
- name: journal_entry
  endpoint:
    path: /versioned/accounting/journal_entries/:id
    method: GET
    data_selector: records
    params: {}
- name: vendors
  endpoint:
    path: /accounting/vendors
    method: GET
    data_selector: vendor
    params: {}
- name: fetch_vendor
  endpoint:
    path: /accounting/vendors/:id
    method: GET
    data_selector: vendor
    params: {}
- name: create_vendor
  endpoint:
    path: /accounting/vendors
    method: POST
    data_selector: vendor
    params: {}
- name: update_vendor
  endpoint:
    path: /accounting/vendors/:id
    method: PATCH
    data_selector: vendor
    params: {}
- name: vendor
  endpoint:
    path: /versioned/accounting/vendors/:id
    method: PATCH
    data_selector: vendor
    params:
      id: string
      access_token: string
- name: cash_flow_statements
  endpoint:
    path: /cash_flow_statements
    method: GET
- name: income_statements
  endpoint:
    path: /income_statements
    method: GET
- name: balance_sheets
  endpoint:
    path: /balance_sheets
    method: GET
- name: orders
  endpoint:
    path: /orders
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: payouts
  endpoint:
    path: /payouts
    method: GET
- name: customers_commerce
  endpoint:
    path: /customers (commerce)
    method: GET
- name: customers_accounting
  endpoint:
    path: /customers (accounting)
    method: GET
- name: items
  endpoint:
    path: /items
    method: GET
- name: products
  endpoint:
    path: /products
    method: GET
- name: create_expense
  endpoint:
    path: /rest/version/expenses
    method: POST
    data_selector: expense
    params: {}
- name: create_expense_attachment
  endpoint:
    path: /rest/version/expense-attachments
    method: POST
    data_selector: attachment
    params: {}
- name: list_accounts
  endpoint:
    path: /rest/version/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: list_vendors
  endpoint:
    path: /rest/version/vendors
    method: GET
    data_selector: vendors
    params: {}
- name: list_tax_rates
  endpoint:
    path: /rest/version/tax_rates
    method: GET
    data_selector: tax_rates
    params: {}
- name: vendors
  endpoint:
    path: /rest/version/vendors
    method: GET
- name: bills
  endpoint:
    path: /rest/version/bills
    method: GET
- name: bank_feed_accounts
  endpoint:
    path: /bank_feeds/accounts
    method: POST
- name: bank_feed_transactions
  endpoint:
    path: /bank_feeds/transactions
    method: POST
- name: bank_feed_account
  endpoint:
    path: /rest/version/bank-feed-accounts
    method: POST
    data_selector: bank_feed_account
- name: bank_feed_transaction
  endpoint:
    path: /rest/version/bank-feed-transactions
    method: POST
    data_selector: bank_feed_transactions
- name: bank_feed_account
  endpoint:
    path: /bank_feeds/accounts
    method: POST
    data_selector: bank_feed_account
- name: bank_feed_transaction
  endpoint:
    path: /bank_feeds/transactions
    method: POST
    data_selector: bank_feed_transactions
- name: account_mapping
  endpoint:
    path: /accounting/bank_feeds/accounts/mapping_link
    method: POST
    data_selector: bank_feed_account_mapping_link
- name: bank_feed_accounts
  endpoint:
    path: /bank_feeds/accounts
    method: POST
    data_selector: bank_feed_account
- name: bank_feed_transactions
  endpoint:
    path: /bank_feeds/transactions
    method: POST
    data_selector: bank_feed_transactions
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: accounts
- name: invoices
  endpoint:
    path: /invoices
    method: POST
    data_selector: invoice
- name: invoice_payments
  endpoint:
    path: /invoice_payments
    method: POST
    data_selector: invoice_payment
- name: invoice_credit_memos
  endpoint:
    path: /invoice_credit_memos
    method: POST
    data_selector: invoice_credit_memo
- name: bills
  endpoint:
    path: /rest/version/bills
    method: GET
    data_selector: bills
- name: accounts
  endpoint:
    path: /rest/version/accounts
    method: GET
    data_selector: accounts
- name: vendors
  endpoint:
    path: /rest/version/vendors
    method: GET
    data_selector: vendors
- name: bill_payments
  endpoint:
    path: /rest/version/bill_payments
    method: POST
    data_selector: bill_payment
- name: bill_credit_memo
  endpoint:
    path: /bill_credit_memos
    method: POST
- name: bill_credit_application
  endpoint:
    path: /bill_credit_applications
    method: POST
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: create_account
  endpoint:
    path: /accounts
    method: POST
- name: journal_entries
  endpoint:
    path: /journal_entries
    method: POST
- name: bills
  endpoint:
    path: /bills
    method: POST
- name: bill_payments
  endpoint:
    path: /bill_payments
    method: POST
- name: vendors
  endpoint:
    path: /vendors
    method: GET
- name: create_vendor
  endpoint:
    path: /vendors
    method: POST
- name: attachments
  endpoint:
    path: /journal_entries/attachments
    method: POST
- name: bill_attachments
  endpoint:
    path: /bills/attachments
    method: POST
- name: departments
  endpoint:
    path: /departments
    method: GET
- name: create_department
  endpoint:
    path: /departments
    method: POST
- name: classes
  endpoint:
    path: /classes
    method: GET
- name: create_class
  endpoint:
    path: /classes
    method: POST
- name: cash_flow_statements
  endpoint:
    path: /cash_flow_statements
    method: GET
    data_selector: records
- name: income_statements
  endpoint:
    path: /income_statements
    method: GET
    data_selector: records
- name: balance_sheets
  endpoint:
    path: /balance_sheets
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: records
- name: bills
  endpoint:
    path: /bills
    method: GET
    data_selector: records
- name: bill_payments
  endpoint:
    path: /bill_payments
    method: GET
    data_selector: records
- name: expenses
  endpoint:
    path: /expenses
    method: GET
    data_selector: records
- name: customers_commerce
  endpoint:
    path: /customers (commerce)
    method: GET
    data_selector: records
- name: customers_accounting
  endpoint:
    path: /customers (accounting)
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /rest/version/accounts
    method: GET
    data_selector: accounts
- name: cash_flow_statements
  endpoint:
    path: /rest/version/cash_flow_statements
    method: GET
    data_selector: cash_flow_statements
- name: income_statements
  endpoint:
    path: /rest/version/income_statements
    method: GET
    data_selector: income_statements
- name: balance_sheets
  endpoint:
    path: /rest/version/balance_sheets
    method: GET
    data_selector: balance_sheets
- name: journal_entries
  endpoint:
    path: /rest/version/journal_entries
    method: GET
    data_selector: journal_entries
- name: create_journal_entry
  endpoint:
    path: /rest/version/journal_entries
    method: POST
    data_selector: journal_entry
- name: bank_deposits
  endpoint:
    path: /bank_deposits
    method: POST
    data_selector: bank_deposits
- name: invoices
  endpoint:
    path: /invoices
    method: POST
    data_selector: invoices
- name: invoice_payments
  endpoint:
    path: /invoice_payments
    method: POST
    data_selector: invoice_payments
- name: payouts
  endpoint:
    path: /payouts
    method: GET
    data_selector: payouts
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: accounts
- name: Plaid
  endpoint:
    path: /platforms/banking/plaid
    method: GET
- name: Teller
  endpoint:
    path: /platforms/banking/teller
    method: GET
- name: MX
  endpoint:
    path: /platforms/banking/mx
    method: GET
- name: bank_account_details
  endpoint:
    path: /v1/accounts
    method: GET
    data_selector: accounts
- name: real_time_balances
  endpoint:
    path: /v1/balances
    method: GET
    data_selector: balances
- name: transaction_history
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: transactions
- name: webservice_key
  endpoint:
    path: /api/webservice/keys
    method: POST
    data_selector: keys
    params: {}
- name: stripe_app
  endpoint:
    path: /stripe-apps
    method: POST
- name: bills
  endpoint:
    path: /rest/version/bills
    method: GET
- name: invoices
  endpoint:
    path: /rest/version/invoices
    method: GET
- name: vendors
  endpoint:
    path: /rest/version/vendors
    method: GET
- name: customers
  endpoint:
    path: /rest/version/accounting-customers
    method: GET
- name: expenses
  endpoint:
    path: /rest/version/expenses
    method: GET
- name: exchange_token
  endpoint:
    path: /versioned/item/public_token/exchange
    method: POST
- name: events
  endpoint:
    path: /versioned/events
    method: GET
    data_selector: events
    params:
      type: object_deleted
- name: asynchronous_job
  endpoint:
    path: /jobs/:id
    method: GET
    data_selector: response
    params:
      id: string
notes:
- Asynchronous requests support idempotency - you can accomplish this by passing a
  distinct value through the Idempotency-Key request header.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses OAuth2 with refresh token — requires setup of connected app in Rutter
- Some objects may return nulls in deeply nested fields
- When a resource is deleted in QuickBooks Desktop instead of through Rutter's API,
  deleted entities will no longer appear in subsequent API responses.
- Rutter Link allows secure linking of user accounts to access data via the Rutter
  API.
- Rutter recommends setting up at least one webhook URL to ingest events.
- The permission sets for pre-defined roles cannot be customized.
- Webhook configuration endpoints use basic authentication rather than access tokens.
- Response mode for async endpoints can be set to prefer_sync or async.
- Response includes fields like id, platform_id, parent_id, account_type, category,
  status, balance, currency_code, name, nominal_code, subsidiaries, created_at, updated_at,
  last_synced_at, platform_url, and platform_data.
- Requires access token for all requests.
- Some endpoints require a force_fetch parameter to retrieve data.
- Not currently supported on Sage Intacct or Sage Business Cloud.
- Some endpoints support pagination.
- Used to force a response even if the underlying connection has not finished its
  initial sync.
- Requires access token for each request.
- Pagination is handled by cursor in query parameters.
- Force fetch can be used to bypass initial sync.
- The access token is required for all requests.
- Ensure to handle pagination for large datasets.
- Certain fields are only applicable for specific platforms.
- Only bank and credit_card are supported.
- Requires specific fields for Intuit Bank Feeds.
- Requires OAuth2 setup in Rutter
- Ensure correct permissions are granted for API access
- Requires specific setup for each platform.
- Ensure correct platform-specific configurations are set.
- Check API response for platform compatibility.
- The exchange rate between the currency of the bill and the business default currency
  is supported for QuickBooks.
- Requires a valid access token for each request.
- Requires authentication with OAuth2.
- Make sure to handle rate limits.
- Pagination is handled using a cursor.
- Requires setup of connected app in Rutter
- Some fields may return nulls in certain scenarios
- Requires OAuth2 authentication.
- Some endpoints may return a large dataset.
- Uses OAuth2 with refresh token.
- Some objects like Invoice may return nulls in deeply nested fields
- Requires OAuth2 setup with the connected app.
- Pagination is handled through cursor.
- Supported for NetSuite.
- Requires OAuth2 authentication setup.
- Requires setup of OAuth2 client for authentication.
- Ensure to handle potential null values in responses.
- Uses OAuth2 with refresh token — requires setup of connected app in rutter
- Endpoints may have platform-specific requirements
- Some responses may contain null values for optional fields
- Requires setup of OAuth2 for authentication.
- Ensure the access token is refreshed regularly.
- The `/orders` endpoint allows developers to receive user-authorized order data for
  a merchant's store.
- Results are paginated.
- Requires OAuth2 setup with token refresh capabilities.
- Requires authentication setup via OAuth2
- Requires setup of connected app in api
- Force Fetch can be used by setting the `force_fetch=true` query parameter.
- Webhook events include ORDER_CREATED, ORDER_UPDATED, ORDER_DELETED, PRODUCT_UPDATED,
  PRODUCT_CREATED, PRODUCT_DELETED, STORE_UPDATED.
- Fetching data from the external platform can be time consuming for large connections.
- You do not need to add an object to your data sync config to make POST requests
  to create new objects.
- All NetSuite passthrough requests require OAuth 1.0a authentication.
- Use SuiteQL when possible - it's more efficient and follows NetSuite's modern API
  patterns.
- When creating objects using the Rutter API, it is important to understand what kind
  of errors you may encounter and how to handle them.
- Any request that returns a `4xx` response is the result of an invalid input. These
  requests can be retried.
- For idempotent requests that have been accepted and return an invalid input error,
  you may have to change the `Idempotency-Key` to retry the request.
- If a request returns a `5xx` response, this conveys that an error has occurred in
  Rutter's servers. Rutter works to make sure this rarely happens.
- In the case where a `5xx` is returned, you should treat the result of the request
  as indeterminate, as the object may or may not have been created.
- In some situations, requests will fail with an error code. These error codes are
  typically 4XX or 5XX error codes.
- To get the Rutter Request ID for a specific request, check the `X-Rutter-Request-ID`
  header on responses from the Rutter API.
- When a request fails, the best way to investigate is to go the Request Logs Dashboard.
- If you change your data sync configuration, existing connections will NOT automatically
  adjust to those changes, and you must either create new connections or trigger a
  backfill for an existing connection to sync data.
- If migrating Netsuite, an extra step is required to install the Rutter bundle/extension.
- This migration guide does not apply to QuickBooks Desktop today, nor any desktop
  platforms that we support.
- The response mode for async endpoints can be set to either async or prefer_sync.
- Transaction IDs must be unique across all bank feed accounts within a single Rutter
  connection.
- The API will return a 200 status code for duplicate transactions but will not save
  or sync them.
- Ensure that you do not attempt to create expenses before the accounting books closing
  date, because when the books are closed most platforms do not allow further modifications
  to transactions before the closing date.
- Rutter integrates into your current technology stack and business processes with
  minimal implementation overhead.
- Bank feeds automate the import of bank data into accounting systems.
- Your financial institution will start in a beta status, which means your customers
  will need to provide an access code to connect to your bank.
- Ensure the redirect URL must not have a Cross-Origin-Opener-Policy header set.
- Once Xero approves your app for Bank Feeds, contact your Rutter Customer Success
  manager to have the bank feed scopes added to your organization.
- Automatic bank reconciliation eliminates the need for accounting teams to manually
  reconcile daily bank deposits.
- Payments from payment processors are recorded as sales receipts or invoices.
- Smart Banking operates on a 'bring your own API keys' model.
- No banking endpoints are real time.
- Not all platforms require the setup of a developer app or the use of developer account
  credentials.
- Rutter provides test instances for certain platforms.
- BigCommerce OAuth will NOT work through Rutter Link while the app is not in an approved
  state.
- Due to eBay API constraints on time range queries, Rutter can fetch a maximum of
  3 years of historical transactions and payouts data from eBay.
- Be sure to read the Etsy API Terms of Use, then click on 'Create App' to submit
  for approval
- If you would like to use Rutter’s Developer Token, ensure that you have input a
  Google developer token. If you would like to use ours, ensure you have not executed
  any API calls with another developer token.
- App Key ⇒ OAuth Client ID
- App Key ⇒ OAuth Client Secret
- Rutter does not provide any Dynamics instances.
- Rutter's integration does not support multi-entity connections for Dynamics.
- MX’s Development is separate from Rutter’s sandbox. To test MX Development connections,
  you must be in Rutter’s production mode.
- The user installing the bundle should have Admin permissions for Rutter to perform
  necessary actions.
- NetSuite has a limited number of access tokens for each user.
- Users need to become a PayPal Partner to access the Transaction Search API.
- Sandbox mode uses test credentials and returns dummy data.
- Production access requires a paid account.
- Make sure you enable PrestaShop’s webservice and click Save
- To be safe, just check all scopes when generating the webservice key
- If you’re testing with a QuickBooks Sandbox company, use Development Settings; if
  real company, use Production Settings.
- Sage Intacct does not require any additional developer app setup.
- The User type completing the installation must be Business, as this user type has
  the access rights required to modify all data types in Sage.
- Set the Production Redirect URL to be https://production.rutterapi.com/square/proxy/${YOUR_RUTTER_ORG_ID}
- Full integration with Stripe will not work until your app is approved by Stripe.
- Use External Testing OAuth URL for testing before app approval.
- Teller's sandbox mode is separate from Rutter's sandbox mode. To test Teller sandbox
  connections, you must be in Rutter's production mode.
- Xero refers to both Bills and Invoices as 'Invoices'.
- Xero refers to both Vendors and Customers as 'Contacts'.
- Xero represents Expenses as 'Bank Transactions' of type 'Spend'.
errors:
- '400: Invalid input'
- '401: Missing or invalid credentials'
- '404: Endpoint not implemented'
- '409: Idempotency key conflict'
- '410: Resource not found'
- '429: Too many requests'
- '450: Platform bad request'
- '451: Platform unauthorized'
- '452: Platform too many requests'
- '500: Internal server error'
- '550: Platform internal server error'
- 'MERCHANT_CLOSED: The popup window has been closed prematurely'
- 'UNKNOWN_ERROR: The window has passed an event to the link bindings which cannot
  be handled'
- '450: Underlying platform returned bad request'
- '451: Underlying platform returned unauthorized'
- '452: Underlying platform returned too many requests'
- '550: Underlying platform returned internal server error'
- '401 Unauthorized: Recheck access token'
- '450 (custom): Underlying platform returned 400 Bad Request'
- '451 (custom): Underlying platform returned 401 Unauthorized'
- '452 (custom): Underlying platform returned 429 Too Many Requests'
- '401 Unauthorized: Check your access token.'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Invalid access token.'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify the access token.'
- '404 Not Found: Resource not found.'
- '401 Unauthorized: Invalid access token'
- '404 Not Found: Resource not found'
- '401 Unauthorized: Check your credentials and permissions.'
- '404 Not Found: Verify the endpoint and the resource ID.'
- '404 Not Found: Check if the resource exists or has been deleted.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'INVALID_REQUEST: Check required fields and their formats'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Verify OAuth credentials'
- '404 Not Found: Ensure the resource exists'
- '401 Unauthorized: Verify OAuth token and permissions'
- '500 Internal Server Error: Retry after a short wait'
- '400 Bad Request: Check the request format and required fields.'
- '401 Unauthorized: Ensure valid authentication credentials.'
- '401 Unauthorized: Check your OAuth2 credentials.'
- '404 Not Found: Verify the resource ID you are trying to access.'
- '429 Too Many Requests: Rate limit exceeded, please retry later.'
- '404 Not Found: Ensure the endpoint is correct.'
- '400 Bad Request: Validate your input parameters.'
- '401 Unauthorized: Check credentials.'
- '429 Too Many Requests: Rate limit exceeded.'
- 'INVALID_TOKEN: Check OAuth token validity'
- 'RESOURCE_NOT_FOUND: Ensure endpoint exists'
- '400 Bad Request: Validate request parameters'
- '401 Unauthorized: Check your authentication credentials.'
- '500 Internal Server Error: Try again later.'
- '401 Unauthorized: Invalid credentials or token expired.'
- '404 Not Found: Resource does not exist.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: Check request parameters and body format.'
- '401 Unauthorized: Check OAuth token and permissions.'
- '404 Not Found: Verify endpoint and resource existence.'
- 'QUERY_TIMEOUT: Simplify queries or add filters'
- '401 Unauthorized: Verify OAuth credentials or refresh token'
- '401 Unauthorized: Check if the access token is valid.'
- '400 Bad Request: Ensure that required parameters are included in the request.'
- '401 Unauthorized: Check your access token and permissions'
- '404 Not Found: Verify the endpoint URL'
- 'PRODUCT_NOT_READY: Attempted to fetch data before the connection is ready.'
- 'CONNECTION_NEEDS_UPDATE: Connection has been paused and needs to be reconnected.'
- 'CONNECTION_DISABLED: Connection is disabled and may need to be reestablished.'
- 'Invalid webhook URL: Ensure the URL is reachable and correctly configured.'
- 'INVALID_LOGIN_CREDENTIALS: Authentication failed'
- 'EXCEEDED_REQUEST_LIMIT: Rate limit exceeded'
- 'INVALID_RECORD_TYPE: Unsupported record type'
- 'RECORD_NOT_FOUND: Record doesn''t exist'
- '4xx: Invalid input. Requests can be retried after making adjustments.'
- '5xx: Error occurred in Rutter''s servers. Generally not safe to retry these requests.'
- '4XX or 5XX error codes: Typically indicate a request failure.'
- Check the `X-Rutter-Request-ID` header for the specific request ID.
- Investigate using the Request Logs Dashboard for detailed information.
- '401 Unauthorized: Check access token'
- '500: Internal Server Error'
- '409: Idempotency conflict'
- '450: Platform returned 400 Bad Request'
- '451: Platform returned 401 Unauthorized'
- '452: Platform returned 429 Too Many Requests'
- '550: Platform returned 500 Internal Server Error'
- '200: Duplicate transaction detected.'
- If the Bank Feed Transaction input is valid, the response will include a job ID
  which can be used to check the status of the POST request.
- If the job fails, the transactions have not synced into the accounting system.
- If the Bank Feed Transaction input is valid and the call succeeds, transactions
  will be synced to the accounting system.
- If the job fails, you should retry the POST request after fixing the error described
  in the job response.
- '450: Underlying platform returned 400 Bad Request'
- '451: Underlying platform returned 401 Unauthorized'
- '452: Underlying platform returned 429 Too Many Requests'
- '550: Underlying platform returned 500 Internal Server Error'
- 'CONNECTION_NEEDS_UPDATE: Redirect the user through Rutter Link to reconnect'
- 'CONNECTION_DISABLED: Redirect the user through Rutter Link to reconnect'
- This user has exceeded the number of active access tokens for this role.
- '401 Unauthorized: Check webservice key permissions'
auth_info:
  mentioned_objects:
  - client_id
  - client_secret
  - access_token
  - AccessToken
  - CommonGetParams
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Connection
  - OAuth2
  - connection_id
  - Client ID
  - Client Secret
  - OAuth
  - secret_key
client:
  base_url: https://api.rutter.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.rutterapi.com/oauth/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
