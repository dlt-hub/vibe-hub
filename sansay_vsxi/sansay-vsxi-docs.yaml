resources:
- name: app_server_lnp
  endpoint:
    path: /download/app_server_lnp
    method: GET
- name: app_server_cnam
  endpoint:
    path: /download/app_server_cnam
    method: GET
- name: app_server_sti_as
  endpoint:
    path: /download/app_server_sti_as
    method: GET
- name: app_server_sti_vs
  endpoint:
    path: /download/app_server_sti_vs
    method: GET
- name: cac_index
  endpoint:
    path: /download/cac_index
    method: GET
- name: cause_code_profile
  endpoint:
    path: /download/cause_code_profile
    method: GET
- name: digit_mapping
  endpoint:
    path: /download/digit_mapping
    method: GET
- name: digit_mapping_index
  endpoint:
    path: /download/digit_mapping_index
    method: GET
- name: media_server
  endpoint:
    path: /download/media_server?format=xml
    method: GET
- name: media_server_profile
  endpoint:
    path: /download/media_server_profile
    method: GET
- name: resource
  endpoint:
    path: /download/resource
    method: GET
- name: resourceblock
  endpoint:
    path: /download/resourceblock
    method: GET
- name: route
  endpoint:
    path: /download/route
    method: GET
- name: app_server_lnp
  endpoint:
    path: /SSConfig/webresources/download/app_server_lnp
    method: GET
- name: app_server_cnam
  endpoint:
    path: /SSConfig/webresources/download/app_server_cnam
    method: GET
- name: app_server_sti_as
  endpoint:
    path: /SSConfig/webresources/download/app_server_sti_as
    method: GET
- name: app_server_sti_vs
  endpoint:
    path: /SSConfig/webresources/download/app_server_sti_vs
    method: GET
- name: cac_index
  endpoint:
    path: /SSConfig/webresources/download/cac_index
    method: GET
- name: cause_code_profile
  endpoint:
    path: /SSConfig/webresources/download/cause_code_profile
    method: GET
- name: digit_mapping
  endpoint:
    path: /SSConfig/webresources/download/digit_mapping
    method: GET
- name: digit_mapping_index
  endpoint:
    path: /SSConfig/webresources/download/digit_mapping_index
    method: GET
- name: media_server
  endpoint:
    path: /SSConfig/webresources/download/media_server?format=xml
    method: GET
- name: media_server_profile
  endpoint:
    path: /SSConfig/webresources/download/media_server_profile
    method: GET
- name: resource
  endpoint:
    path: /SSConfig/webresources/download/resource
    method: GET
- name: resourceblock
  endpoint:
    path: /SSConfig/webresources/download/resourceblock
    method: GET
- name: route
  endpoint:
    path: /SSConfig/webresources/download/route
    method: GET
- name: route
  endpoint:
    path: /SSConfig/webresources/update/route
    method: POST
    data_selector: XBRouteList
    params: {}
- name: routegroup
  endpoint:
    path: /SSConfig/webresources/update/routegroup
    method: POST
    data_selector: XBRouteGroupList
    params: {}
- name: routetable
  endpoint:
    path: /SSConfig/webresources/update/routetable
    method: POST
    data_selector: XBRouteTableList
    params: {}
- name: serviceport
  endpoint:
    path: /SSConfig/webresources/update/serviceport
    method: POST
    data_selector: XBServicePortList
    params: {}
- name: serviceport_certificates
  endpoint:
    path: /SSConfig/webresources/update/serviceport_certificates
    method: POST
    data_selector: null
    params:
      passphrase: sansay123
- name: smc_profile
  endpoint:
    path: /SSConfig/webresources/update/smc_profile
    method: POST
    data_selector: null
    params: {}
- name: stop_route_profile
  endpoint:
    path: /SSConfig/webresources/update/stop_route_profile
    method: POST
    data_selector: XBStopRouteProfileList
    params: {}
- name: subscriber
  endpoint:
    path: /SSConfig/webresources/update/subscriber
    method: POST
    data_selector: XBSubscriberList
    params: {}
- name: virtualip
  endpoint:
    path: /SSConfig/webresources/update/virtualip
    method: POST
    data_selector: XBVirtualIpList
    params: {}
- name: active_calls
  endpoint:
    path: /SSConfig/webresources/stats/active_calls
    method: GET
    data_selector: records
- name: cdrlookup
  endpoint:
    path: /SSConfig/webresources/query/cdrlookup
    method: GET
    data_selector: records
- name: cdr_stats
  endpoint:
    path: /SSConfig/webresources/system/cdr_stats
    method: GET
    data_selector: records
- name: realtime
  endpoint:
    path: /SSConfig/webresources/stats/realtime
    method: GET
    data_selector: records
- name: resource
  endpoint:
    path: /SSConfig/webresources/stats/resource
    method: GET
    data_selector: records
- name: route
  endpoint:
    path: /update/route
    method: POST
    data_selector: XBRouteList
    params: {}
- name: routegroup
  endpoint:
    path: /update/routegroup
    method: POST
    data_selector: XBRouteGroupList
    params: {}
- name: routetable
  endpoint:
    path: /update/routetable
    method: POST
    data_selector: XBRouteTableList
    params: {}
- name: serviceport
  endpoint:
    path: /update/serviceport
    method: POST
    data_selector: XBServicePortList
    params: {}
- name: serviceport_certificates
  endpoint:
    path: /update/serviceport_certificates
    method: POST
    data_selector: ''
    params: {}
- name: smc_profile
  endpoint:
    path: /update/smc_profile
    method: POST
    data_selector: ''
    params: {}
- name: smc_datafile
  endpoint:
    path: /downloadLarge/smcDataFile
    method: GET
    data_selector: ''
    params: {}
- name: stop_route_profile
  endpoint:
    path: /update/stop_route_profile
    method: POST
    data_selector: XBStopRouteProfileList
    params: {}
- name: subscriber
  endpoint:
    path: /update/subscriber
    method: POST
    data_selector: XBSubscriberList
    params: {}
- name: virtualip
  endpoint:
    path: /update/virtualip
    method: POST
    data_selector: XBVirtualIpList
    params: {}
- name: resource_detail
  endpoint:
    path: /stats/resource_detail
    method: GET
- name: sip_stats
  endpoint:
    path: /stats/sip_stats
    method: GET
- name: sub_stats
  endpoint:
    path: /stats/sub_stats
    method: GET
- name: system_info
  endpoint:
    path: /system/realtime
    method: GET
- name: systemConfiguration
  endpoint:
    path: /downloadLarge/systemConfiguration
    method: GET
- name: users
  endpoint:
    path: /update/users
    method: POST
- name: active_calls
  endpoint:
    path: /SSConfig/webresources/stats/active_calls
    method: GET
    data_selector: records
- name: cdrlookup
  endpoint:
    path: /SSConfig/webresources/query/cdrlookup
    method: GET
    data_selector: records
- name: cdr_stats
  endpoint:
    path: /SSConfig/webresources/system/cdr_stats
    method: GET
    data_selector: records
- name: realtime
  endpoint:
    path: /SSConfig/webresources/stats/realtime
    method: GET
    data_selector: records
- name: resource
  endpoint:
    path: /SSConfig/webresources/stats/resource
    method: GET
    data_selector: records
- name: resource_detail
  endpoint:
    path: /stats/resource_detail
    method: GET
- name: sip_stats
  endpoint:
    path: /stats/sip_stats
    method: GET
- name: sub_stats
  endpoint:
    path: /stats/sub_stats
    method: GET
- name: system_info
  endpoint:
    path: /system/realtime
    method: GET
- name: systemConfiguration
  endpoint:
    path: /downloadLarge/systemConfiguration
    method: GET
- name: users
  endpoint:
    path: /update/users
    method: POST
- name: Short Video Tutorials
  endpoint:
    path: /category/shortvideos
    method: GET
- name: articles
  endpoint:
    path: /category/articles
    method: GET
    data_selector: records
    params: {}
- name: call_data
  endpoint:
    path: /api/v1/call_data
    method: GET
    data_selector: data
    params: {}
- name: short_video_tutorials
  endpoint:
    path: /category/shortvideos
    method: GET
    data_selector: tutorials
- name: NSS Management
  endpoint:
    path: /t/y4hls8d/nss-management-via-rest-api
    method: GET
    data_selector: records
    params: {}
- name: NSS STI-AS and STI-VS
  endpoint:
    path: /t/83hhxd8/nss-sti-as-and-sti-vs-rest-interface
    method: GET
    data_selector: records
    params: {}
- name: SHAKEN Echo Number
  endpoint:
    path: /t/y4hw8a0/shaken-echo-number
    method: GET
- name: STIR/SHAKEN Identity Header Decoder
  endpoint:
    path: /t/60hctx8/stirshaken-identity-header-decoder
    method: GET
- name: Troubleshooting STIR/SHAKEN
  endpoint:
    path: /t/35hfntb/troubleshooting-stirshaken
    method: GET
- name: sip_session_timers
  endpoint:
    path: /vsxi/sip/session/timers
    method: GET
    data_selector: sessionTimers
    params: {}
- name: SSL
  endpoint:
    path: /decrypting-sip-tls
    method: POST
    data_selector: RSA keys list
    params: {}
- name: CDR Trace
  endpoint:
    path: /cdr/trace
    method: GET
    data_selector: cdr_records
- name: APIBAN
  endpoint:
    path: /api/get
    method: POST
    data_selector: ipaddress
    params: {}
- name: SMC Profile
  endpoint:
    path: /api/smc/profile
    method: GET
    data_selector: profiles
    params: {}
- name: SMC Rule
  endpoint:
    path: /api/smc/rule
    method: GET
    data_selector: rules
    params: {}
- name: global_statistics
  endpoint:
    path: /sip/stats/global
    method: GET
    data_selector: statistics
    params: {}
- name: error_statistics
  endpoint:
    path: /sip/stats/error
    method: GET
    data_selector: errors
    params: {}
- name: StoredVariables
  endpoint:
    path: /StoredVariables
    method: GET
    data_selector: variables
    params: {}
- name: RejectCallXXX
  endpoint:
    path: /RejectCallXXX
    method: GET
    data_selector: rules
    params: {}
- name: RemoteIP
  endpoint:
    path: /RemoteIP
    method: GET
    data_selector: rules
    params: {}
- name: Date
  endpoint:
    path: /Date
    method: GET
    data_selector: rules
    params: {}
- name: Media Inspector
  endpoint:
    path: /media-inspector
    method: GET
    data_selector: media_inspector
    params: {}
- name: Randomizer
  endpoint:
    path: /randomizer
    method: GET
    data_selector: randomizer
    params: {}
- name: Google SIP Link Resource
  endpoint:
    path: /sg/tls/spid_cfg2
    method: CONFIGURE
    data_selector: Rules
    params: {}
- name: SSL Configuration
  endpoint:
    path: /decrypting-siptls-packets-using-wireshark
    method: GET
    data_selector: configuration
    params: {}
- name: resource
  endpoint:
    path: /SSConfig/webresources/update/resource
    method: POST
- name: subscriber
  endpoint:
    path: /SSConfig/webresources/update/subscriber
    method: POST
- name: delete_resource
  endpoint:
    path: /SSConfig/webresources/delete/resource
    method: DELETE
- name: delete_subscriber
  endpoint:
    path: /SSConfig/webresources/delete/subscriber
    method: DELETE
- name: routetable
  endpoint:
    path: /SSConfig/webresources/update/routetable
    method: POST
- name: delete_routetable
  endpoint:
    path: /SSConfig/webresources/delete/routetable
    method: POST
- name: digit_mapping_index
  endpoint:
    path: /SSConfig/webresources/update/digit_mapping_index
    method: POST
- name: delete_digit_mapping_index
  endpoint:
    path: /SSConfig/webresources/delete/digit_mapping_index
    method: DELETE
- name: APIBAN
  endpoint:
    path: /api/get
    method: POST
- name: SMC Profile
  endpoint:
    path: /api/smc/profile
    method: GET
    data_selector: profiles
    params: {}
- name: SMC Rule
  endpoint:
    path: /api/smc/rule
    method: GET
    data_selector: rules
    params: {}
- name: route
  endpoint:
    path: /ROME/webresources/hrs/download/route
    method: GET
- name: jurisdiction
  endpoint:
    path: /ROME/webresources/hrs/download/jurisdiction
    method: GET
- name: switchProxy
  endpoint:
    path: /ROME/webresources/hrs/download/switchProxy
    method: GET
- name: carrier
  endpoint:
    path: /ROME/webresources/hrs/download/carrier
    method: GET
- name: jurisdictionProfile
  endpoint:
    path: /ROME/webresources/hrs/download/jurisdictionProfile
    method: GET
- name: systemConfiguration
  endpoint:
    path: /ROME/webresources/hrs/download/systemConfiguration
    method: GET
- name: StoredVariables
  endpoint:
    path: /StoredVariables
    method: GET
    data_selector: variables
- name: RejectCall
  endpoint:
    path: /RejectCall
    method: GET
    data_selector: reject_calls
- name: RemoteIP
  endpoint:
    path: /RemoteIP
    method: GET
    data_selector: remote_ip
- name: Date
  endpoint:
    path: /Date
    method: GET
    data_selector: date_header
- name: ISUP
  endpoint:
    path: /ISUP
    method: GET
    data_selector: isup_variables
- name: Randomizer
  endpoint:
    path: /Randomizer
    method: GET
    data_selector: random_numbers
- name: Radius Authorization
  endpoint:
    path: /radius/authorization
    method: POST
    data_selector: AccessRequest
    params: {}
- name: Radius Accounting Start
  endpoint:
    path: /radius/accounting/start
    method: POST
    data_selector: AccountingRequestStart
    params: {}
- name: Radius Accounting Stop
  endpoint:
    path: /radius/accounting/stop
    method: POST
    data_selector: AccountingRequestStop
    params: {}
- name: Google SIP Link Service Port
  endpoint:
    path: /sg/tls/spid_cfg2
    method: SET
    data_selector: SPID=X Version=v1.2only ECDHE=X25519:P-256 CipherList=HIGH
    params: {}
- name: Google SIP Link Authentication Token
  endpoint:
    path: /sg/tls/tls_CN
    method: SET
    data_selector: IP=216.239.36.145 CN=telephony.goog
    params: {}
- name: DMT to JD conversion
  endpoint:
    path: /convert-dmt
    method: POST
    data_selector: result
    params: {}
- name: specific Route Tables conversion
  endpoint:
    path: /convert-routes-specificRT
    method: POST
    data_selector: result
    params: {}
- name: Routes conversion
  endpoint:
    path: /convert-routes
    method: POST
    data_selector: result
    params: {}
- name: Trunk to carriers conversion
  endpoint:
    path: /convert-trunk-to-carrier
    method: POST
    data_selector: result
    params: {}
- name: VSXi resources to ROME trunks conversion
  endpoint:
    path: /convert-vsxiresource-to-trunk
    method: POST
    data_selector: result
    params: {}
- name: resource
  endpoint:
    path: /SSConfig/webresources/update/resource
    method: POST
- name: subscriber
  endpoint:
    path: /SSConfig/webresources/update/subscriber
    method: POST
- name: route_table
  endpoint:
    path: /SSConfig/webresources/update/routetable
    method: POST
- name: route
  endpoint:
    path: /SSConfig/webresources/update/route
    method: POST
- name: digit_mapping_index
  endpoint:
    path: /SSConfig/webresources/update/digit_mapping_index
    method: POST
- name: digit_mapping
  endpoint:
    path: /SSConfig/webresources/update/digit_mapping
    method: POST
- name: update
  endpoint:
    path: /update
    method: POST
- name: delete
  endpoint:
    path: /delete
    method: POST
- name: replace
  endpoint:
    path: /replace
    method: POST
- name: download
  endpoint:
    path: /download
    method: POST
- name: getTableList
  endpoint:
    path: /getTableList
    method: POST
- name: createTable
  endpoint:
    path: /createTable
    method: POST
- name: copyTable
  endpoint:
    path: /copyTable
    method: POST
- name: deleteTable
  endpoint:
    path: /deleteTable
    method: POST
- name: activateTable
  endpoint:
    path: /activateTable
    method: POST
- name: routeLookup
  endpoint:
    path: /routeLookup
    method: POST
- name: stats
  endpoint:
    path: /stats
    method: POST
- name: pushVSXiClusterConfig
  endpoint:
    path: /pushVSXiClusterConfig
    method: POST
- name: route
  endpoint:
    path: /hrs/download/route
    method: GET
- name: jurisdiction
  endpoint:
    path: /hrs/download/jurisdiction
    method: GET
- name: blockedRoutes
  endpoint:
    path: /hrs/download/blockedRoutes
    method: GET
- name: trunk
  endpoint:
    path: /hrs/download/trunk
    method: GET
- name: switchProxy
  endpoint:
    path: /hrs/download/switchProxy
    method: GET
- name: carrier
  endpoint:
    path: /hrs/download/carrier
    method: GET
- name: jurisdictionProfile
  endpoint:
    path: /hrs/download/jurisdictionProfile
    method: GET
- name: resource
  endpoint:
    path: /hrs/query/resource
    method: GET
- name: subscriber
  endpoint:
    path: /hrs/query/subscriber
    method: GET
- name: digit_mapping
  endpoint:
    path: /hrs/query/digit_mapping
    method: GET
- name: Radius Authorization
  endpoint:
    path: /radius/authorization
    method: POST
    data_selector: response
- name: Radius Accounting
  endpoint:
    path: /radius/accounting
    method: POST
    data_selector: response
- name: convert_dmt_to_jd
  endpoint:
    path: /convert-dmt-to-jd
    method: POST
    data_selector: result
    params: {}
- name: convert_specific_route_tables
  endpoint:
    path: /convert-specific-routes
    method: POST
    data_selector: result
    params: {}
- name: convert_routes
  endpoint:
    path: /convert-routes
    method: POST
    data_selector: result
    params: {}
- name: convert_trunk_to_carriers
  endpoint:
    path: /convert-trunk-to-carrier
    method: POST
    data_selector: result
    params: {}
- name: convert_vsxiresource_to_trunk
  endpoint:
    path: /convert-vsxiresource-to-trunk
    method: POST
    data_selector: result
    params: {}
- name: available_memory
  endpoint:
    path: /api/available_memory
    method: GET
    data_selector: records
    params: {}
- name: disk_storage_usage
  endpoint:
    path: /api/disk_storage_usage
    method: GET
    data_selector: records
    params: {}
- name: average_cpu_load
  endpoint:
    path: /api/average_cpu_load
    method: GET
    data_selector: records
    params: {}
- name: network_interface_throughput
  endpoint:
    path: /api/network_interface_throughput
    method: GET
    data_selector: records
    params: {}
- name: authenticated_endpoints
  endpoint:
    path: /api/authenticated_endpoints
    method: GET
    data_selector: records
    params: {}
- name: ha_redundancy_status
  endpoint:
    path: /api/ha_redundancy_status
    method: GET
    data_selector: records
    params: {}
- name: switch_over_restart_indicator
  endpoint:
    path: /api/switch_over_restart_indicator
    method: GET
    data_selector: records
    params: {}
- name: sip_latency_response
  endpoint:
    path: /api/sip_latency_response
    method: GET
    data_selector: records
    params: {}
- name: concurrent_calls
  endpoint:
    path: /api/concurrent_calls
    method: GET
    data_selector: records
    params: {}
- name: average_registers_per_second
  endpoint:
    path: /api/average_registers_per_second
    method: GET
    data_selector: records
    params: {}
- name: raid_redundancy_status
  endpoint:
    path: /api/raid_redundancy_status
    method: GET
    data_selector: records
    params: {}
- name: power_supply_redundancy_status
  endpoint:
    path: /api/power_supply_redundancy_status
    method: GET
    data_selector: records
    params: {}
- name: media_server_status
  endpoint:
    path: /api/media_server_status
    method: GET
    data_selector: records
    params: {}
- name: web_api_response
  endpoint:
    path: /api/web_api_response
    method: GET
    data_selector: records
    params: {}
- name: system_uptime
  endpoint:
    path: /api/system_uptime
    method: GET
    data_selector: records
    params: {}
- name: total_running_processes
  endpoint:
    path: /api/total_running_processes
    method: GET
    data_selector: records
    params: {}
- name: system_license_usage
  endpoint:
    path: /api/system_license_usage
    method: GET
    data_selector: records
    params: {}
- name: route
  endpoint:
    path: /route
    method: POST
    data_selector: result
    params: {}
- name: jurisdiction
  endpoint:
    path: /jurisdiction
    method: POST
    data_selector: result
    params: {}
- name: route
  endpoint:
    path: /route
    method: download
    data_selector: XML
    params: {}
- name: routegroup
  endpoint:
    path: /routegroup
    method: download
    data_selector: XML
    params: {}
- name: routetable
  endpoint:
    path: /routetable
    method: download
    data_selector: XML
    params: {}
- name: resource
  endpoint:
    path: /resource
    method: download
    data_selector: XML
    params: {}
- name: subscriber
  endpoint:
    path: /subscriber
    method: download
    data_selector: XML
    params: {}
- name: media_server
  endpoint:
    path: /media_server
    method: download
    data_selector: XML
    params: {}
- name: cdr
  endpoint:
    path: /CDR
    method: POST
    data_selector: records
- name: authenticated_endpoints
  endpoint:
    path: /api/authenticated_endpoints
    method: GET
    data_selector: records
- name: ha_redundancy_status
  endpoint:
    path: /api/ha_redundancy_status
    method: GET
    data_selector: records
- name: sip_latency_response
  endpoint:
    path: /api/sip_latency_response
    method: GET
    data_selector: records
- name: web_api_response
  endpoint:
    path: /api/web_api_response
    method: GET
    data_selector: records
- name: route
  endpoint:
    path: /route
    method: download
    data_selector: XML
    params: {}
- name: routegroup
  endpoint:
    path: /routegroup
    method: download
    data_selector: XML
    params: {}
- name: routetable
  endpoint:
    path: /routetable
    method: download
    data_selector: XML
    params: {}
- name: resource
  endpoint:
    path: /resource
    method: download
    data_selector: XML
    params: {}
- name: subscriber
  endpoint:
    path: /subscriber
    method: download
    data_selector: XML
    params: {}
- name: media_server
  endpoint:
    path: /media_server
    method: download
    data_selector: XML
    params: {}
- name: cdr
  endpoint:
    path: /CDR/
    method: GET
    data_selector: records
- name: cdr_records
  endpoint:
    path: /cdr_records
    method: GET
    data_selector: records
    params: {}
- name: route
  endpoint:
    path: /Routes/Routes
    method: GET
- name: routegroup
  endpoint:
    path: /Routes/RouteGroups
    method: GET
- name: routetable
  endpoint:
    path: /Routes/RouteTables
    method: GET
- name: resource
  endpoint:
    path: /Resources/Resources
    method: GET
- name: resourceblock
  endpoint:
    path: /Resources/BlockedResources
    method: GET
- name: subscriber
  endpoint:
    path: /Resources/Registrar
    method: GET
- name: digit_mapping
  endpoint:
    path: /DigitMapping/DigitMappings
    method: GET
- name: digit_mapping_index
  endpoint:
    path: /DigitMapping/DigitMappingTables
    method: GET
- name: serviceport
  endpoint:
    path: /ServicePorts/ServicePorts
    method: GET
- name: virtualip
  endpoint:
    path: /ServicePorts/VirtualIP
    method: GET
- name: cdr_trace
  endpoint:
    path: /LOG/cdr_trace.log
    method: GET
    data_selector: records
    params: {}
- name: Carrier Tenant
  endpoint:
    path: /CarrierTenant
    method: GET
- name: Customer Tenant
  endpoint:
    path: /CustomerTenant
    method: GET
- name: route
  endpoint:
    path: /routes
    method: GET
- name: routegroup
  endpoint:
    path: /routegroups
    method: GET
- name: routetable
  endpoint:
    path: /routetables
    method: GET
- name: resource
  endpoint:
    path: /resources
    method: GET
- name: resourceblock
  endpoint:
    path: /blockedresources
    method: GET
- name: subscriber
  endpoint:
    path: /registrar
    method: GET
- name: digit_mapping
  endpoint:
    path: /digitmappings
    method: GET
- name: digit_mapping_index
  endpoint:
    path: /digitmappingtables
    method: GET
- name: serviceport
  endpoint:
    path: /serviceports
    method: GET
- name: virtualip
  endpoint:
    path: /virtualip
    method: GET
- name: route
  endpoint:
    path: /route
    method: GET
    data_selector: records
- name: routegroup
  endpoint:
    path: /routegroup
    method: GET
    data_selector: records
- name: routetable
  endpoint:
    path: /routetable
    method: GET
    data_selector: records
- name: resource
  endpoint:
    path: /resource
    method: GET
    data_selector: records
- name: subscriber
  endpoint:
    path: /subscriber
    method: GET
    data_selector: records
- name: Carrier Tenant
  endpoint:
    path: /api/carrierTenant
    method: GET
    data_selector: data
- name: Customer Tenant
  endpoint:
    path: /api/customerTenant
    method: GET
    data_selector: data
- name: route
  endpoint:
    path: /download/route
    method: POST
    data_selector: data
    params: {}
- name: routegroup
  endpoint:
    path: /download/routegroup
    method: POST
    data_selector: data
    params: {}
- name: subscriber
  endpoint:
    path: /download/subscriber
    method: POST
    data_selector: data
    params: {}
- name: QDR
  endpoint:
    path: /query/detail/records
    method: GET
    data_selector: records
    params: {}
- name: authorizedANI
  endpoint:
    path: /ROME/webresources/nss/download/authorizedANI
    method: GET
    params:
      format: json
- name: authorizedANI
  endpoint:
    path: /ROME/webresources/nss/update/authorizedANI
    method: POST
    params:
      format: csv
- name: authorizedANI
  endpoint:
    path: /ROME/webresources/nss/delete/authorizedANI
    method: DELETE
    params:
      format: csv
- name: query_detail_records
  endpoint:
    path: /query/detail/records
    method: GET
    data_selector: records
- name: authorizedANI
  endpoint:
    path: /download/authorizedANI
    method: GET
    data_selector: response
    params: {}
- name: authorizedANI
  endpoint:
    path: /update/authorizedANI
    method: POST
    data_selector: response
    params: {}
- name: authorizedANI
  endpoint:
    path: /delete/authorizedANI
    method: DELETE
    data_selector: response
    params: {}
- name: RCD PASSPorT
  endpoint:
    path: /api/rcd
    method: GET
    data_selector: records
- name: signing
  endpoint:
    path: /stir/v1/signing
    method: POST
    data_selector: signingResponse
- name: signing
  endpoint:
    path: /stir/v1/signing
    method: POST
    data_selector: signingResponse
    params: {}
- name: verification
  endpoint:
    path: /stir/v1/verification
    method: POST
    data_selector: verificationResponse
    params: {}
- name: rcd_passport
  endpoint:
    path: /api/rcd_passport
    method: GET
    data_selector: records
- name: signing
  endpoint:
    path: /stir/v1/signing
    method: POST
    data_selector: signingResponse
- name: signing
  endpoint:
    path: /stir/v1/signing
    method: POST
    data_selector: signingResponse
- name: verification
  endpoint:
    path: /stir/v1/verification
    method: POST
    data_selector: verificationResponse
- name: STI-PA Enrollment
  endpoint:
    path: /participate/tsps/
    method: GET
- name: certificate_monitor
  endpoint:
    path: /api/v1/monitor
    method: POST
    data_selector: data
- name: VM Sizing
  endpoint:
    path: /vm/sizing
    method: GET
    data_selector: records
- name: Deploying the EC2 Instance
  endpoint:
    path: /ec2/deploy
    method: GET
    data_selector: records
- name: BCID Confirmation
  endpoint:
    path: /stir/v1/signing
    method: POST
    data_selector: signingRequest
- name: certificate
  endpoint:
    path: /api/v1/certificate
    method: POST
    data_selector: data
    params: {}
- name: csr
  endpoint:
    path: /api/v1/csr
    method: POST
    data_selector: data
    params: {}
- name: SANSAY_STI_AS
  endpoint:
    path: /stir/v1/signing
    method: POST
    data_selector: signingResponse
    params: {}
- name: Configuration Backups
  endpoint:
    path: /webresources/nss/download/systemConfiguration
    method: GET
    data_selector: systemConfiguration
    params: {}
- name: Table Backup
  endpoint:
    path: /webresources/nss/replace/$table
    method: POST
    data_selector: tableBackup
    params:
      format: $filecontent
- name: SHAKEN Standards
  endpoint:
    path: /shaken/standards
    method: GET
    data_selector: standards
    params: {}
- name: 3GPP Standards
  endpoint:
    path: /3gpp/standards
    method: GET
    data_selector: standards
    params: {}
- name: IETF STIR RFCs
  endpoint:
    path: /ietf/stir/rfcs
    method: GET
    data_selector: rfcs
    params: {}
- name: update_dno
  endpoint:
    path: /ROME/webresources/nss/update/authorizedANI
    method: POST
    data_selector: response
    params:
      format: csv
- name: certificate_monitor
  endpoint:
    path: /certificate/monitor
    method: GET
    data_selector: records
- name: heartbeat_monitor
  endpoint:
    path: /cronitor/heartbeat
    method: POST
    data_selector: records
- name: signing
  endpoint:
    path: /stir/v1/signing
    method: POST
    data_selector: signingResponse.identity
- name: signing
  endpoint:
    path: /stir/v1/signing
    method: POST
    data_selector: signingResponse.identity
- name: Dial Translation Plan
  endpoint:
    path: /DialTranslationPlan
    method: POST
    data_selector: results
    params: {}
- name: Call Routing
  endpoint:
    path: /CallRouting
    method: POST
    data_selector: results
    params: {}
- name: NSS Management API
  endpoint:
    path: /t/y4hls8d/nss-management-via-rest-api#examples
    method: GET
    data_selector: ''
    params: {}
- name: STI-AS
  endpoint:
    path: /stir/v1/signing
    method: POST
    data_selector: signingResponse
    params: {}
- name: SHAKEN Echo Number
  endpoint:
    path: /test-shaken.sansay.cloud/
    method: GET
- name: authorizedANI
  endpoint:
    path: /replace/authorizedANI
    method: POST
    data_selector: entries
- name: switchProxy
  endpoint:
    path: /replace/switchProxy
    method: POST
    data_selector: entries
- name: smcDataFile
  endpoint:
    path: /replace/smcDataFile
    method: POST
    data_selector: entries
- name: stiKeystore
  endpoint:
    path: /replace/stiKeystore
    method: POST
    data_selector: entries
- name: stiSwitchKeyMap
  endpoint:
    path: /replace/stiSwitchKeyMap
    method: POST
    data_selector: entries
- name: verifyDNIS
  endpoint:
    path: /replace/verifyDNIS
    method: POST
    data_selector: entries
- name: dno_update
  endpoint:
    path: /webresources/nss/update/authorizedANI
    method: POST
    data_selector: ''
    params:
      format: csv
- name: signingRequest
  endpoint:
    path: /stir/v1/signing
    method: POST
    data_selector: signingResponse.identity
- name: acme_client
  endpoint:
    path: /test
    method: POST
    data_selector: certificate
    params: {}
- name: signing
  endpoint:
    path: /stir/v1/signing
    method: POST
    data_selector: signingResponse.identity
- name: STI
  endpoint:
    path: /sti
    method: GET
    data_selector: records
    params: {}
- name: QDR
  endpoint:
    path: /qdr
    method: GET
    data_selector: records
    params: {}
- name: verstat_results
  endpoint:
    path: /api/verstat/results
    method: GET
    data_selector: results
- name: STI-AS
  endpoint:
    path: /sti-as
    method: INVITE
    data_selector: SIP/2.0 302 Moved Temporarily
    params: {}
- name: STI-VS
  endpoint:
    path: /sti-vs
    method: INVITE
    data_selector: SIP/2.0 302 Moved Temporarily
    params: {}
- name: STI Record
  endpoint:
    path: /sti
    method: GET
    data_selector: records
- name: QDR Record
  endpoint:
    path: /qdr
    method: GET
    data_selector: records
- name: STI Certificate
  endpoint:
    path: /services/data/vXX.X/sobjects/STICertificate
    method: POST
    data_selector: records
- name: verification
  endpoint:
    path: /stir/v1/verification
    method: POST
    data_selector: verificationResponse
    params: {}
- name: SHAKEN Echo Number Test
  endpoint:
    path: /test-shaken.sansay.cloud/
    method: GET
    data_selector: results
    params: {}
- name: verification
  endpoint:
    path: /stir/v1/verification
    method: POST
    data_selector: result
    params: {}
- name: certificate_renewal
  endpoint:
    path: /order
    method: POST
    data_selector: certificates
- name: STI
  endpoint:
    path: /sti
    method: GET
    data_selector: records
- name: QDR
  endpoint:
    path: /qdr
    method: GET
    data_selector: records
- name: STI-AS
  endpoint:
    path: /sti-as
    method: INVITE
    data_selector: ''
    params: {}
- name: STI-VS
  endpoint:
    path: /sti-vs
    method: INVITE
    data_selector: ''
    params: {}
- name: STI Record
  endpoint:
    path: /sti/record
    method: GET
    data_selector: records
- name: QDR Record
  endpoint:
    path: /qdr/record
    method: GET
    data_selector: records
- name: verification
  endpoint:
    path: /stir/v1/verification
    method: POST
    data_selector: verificationResponse
- name: verification
  endpoint:
    path: /stir/v1/verification
    method: POST
    data_selector: result
    params: {}
notes:
- API authentication is done on each request using basic authentication.
- API authentication is done on each request using basic authentication. User has
  to input a valid GUI/API username/password and embed that in HTTPS basic authentication
  header.
- The VSXi REST API is an evolution of the VSXi legacy SOAP/Web Services API.
- Downloads hashed (XXXX) password for security purposes.
- Numerous trouble tickets leading to session timeouts or disconnections often stem
  from SIP routing errors.
- Version 10.7.1.x introduced support for SSLKeyLog.
- Faxing is an application that relies on a variety of parameters and can sometimes
  become tricky to troubleshoot.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Requires a valid SHAKEN certificate for authentication.
- NSS supports the automation of certificate renewals as defined in ATIS-1000080.
- NTP synchronization issues may affect data integrity
- Syntax issues can lead to invalid signatures
- This document provides general guidelines to troubleshoot calls rejected with 'Not
  Authorized' release cause.
- The Certificate Revocation List and Trusted CA List are dynamic systems that protect
  the integrity of the ecosystem.
- While RFC3325 became a standard in 2003, to this date it is not uncommon to see
  INVITEs with a Remote-Party-ID SIP header (RPID).
- One more thing is that RFC3325 suggests, it is recommended the the P-Asserted-Identity
  header fields SHOULT NOT be removed unless local private policies prevent it.
- The implementation obligation applies to all providers that originate calls and
  have control over the network infrastructure necessary to implement STIR/SHAKEN.
- All Originating Service Providers need to obtain a STIR/SHAKEN certificate.
- 'Always remember CRaVe: Contact, Record-Route, and Via headers.'
- SSLKeylog allows you to log encryption keys used in TLS connections, making it easier
  to troubleshoot encrypted traffic.
- The keys can then be used to decrypt the encrypted data captured in tools like Wireshark.
- Support for sngrep has been added in version VSXi-10.5.1.357+
- Session Timers are a useful feature, however, a significant amount of devices do
  not support it or are non-conforming with respect to the RFC. If session timer is
  enabled towards non-conforming devices calls will get disconnected around the negotiated
  session refresh interval. VSXi CDRs will print a 'Refresh Failure' release cause
  when a call is disconnected due to a session refresh failure.
- Some objects may return nulls in deeply nested fields
- CDRs provide comprehensive information about the outcome of a call.
- Faxes are transmitted over IP using T.38 or G.711-pass-through.
- Around 8% failure rate or below is considered normal for faxing over SIP trunks.
- The VSXi has several call state timeouts that can be configured on a per-resource
  basis.
- Despite the Protocol Release Cause Code not being a 200 OK, this call is considered
  a billable call.
- The internal Release Cause Code (0001) should be used to track all completed calls.
- 'Exceptions: The following scenarios will fail trace decryption with sslkey_sip.log:
  TLS handshake messages happened before the sslkey_sip.log entries.'
- The SIP Stats page reloads data every 15 minutes.
- Data older than 24 hours can be accessed by choosing a date from the 'Specific Date'
  field.
- This is an advanced document for advanced users able to compile open source software
  in a Linux operating system and knowledge of packet capture analysis, SIP/SDP and
  SRTP.
- Sansay Support does not support any issues setting up this kind of environment or
  problems following this procedure.
- The VSXi SIP Session Timers setting is available at the SIP Profile level.
- The provided procedure is specific to Wireshark. Other appliances are also able
  to import the certificate key and decrypt SIP messages in a similar way.
- It is recommended to be as specific as possible in the pattern to reduce the total
  log printed.
- The T.38 protocol is sensitive to network performance factors such as latency, jitter
  and packet loss.
- API parameters include set and ID for fetching IPs.
- CSV file can be updated via REST API.
- No Ring Timeout default value is 30 seconds.
- Ring No Answer Timeout typically set between 30 and 60 seconds.
- INVITE response timeout typically 4 seconds.
- Due to its extensive capabilities, it is important to exercise caution when utilizing
  SMC.
- Thorough debugging and testing should be conducted before implementing SMC in a
  production environment.
- Unauthorized calls are generated by unknown sources sending traffic, or known sources
  sending traffic but failing due to a configuration error.
- Data older than 24 hours can be accessed by choosing a date from the Specific Date
  field.
- This is an advanced document for advanced users able to compile open source software
  in a Linux operating system and knowledge of packet capture analysis, SIP/SDP and
  SRTP. Sansay Support does not support any issues setting up this kind of environment
  or problems following this procedure.
- TLS certificates must contain the fully qualified domain name (FQDN) of the SBC
  as the common name (CN), be 2,048 bits in size, and use RSA or ECDSA encryption.
- Wildcard certificates are not supported.
- An encrypted certificate containing the certificate and private key is provided
  in .p12 format.
- Your system must be running VSXi-9.5.3.89 or later.
- Requires setup of customer-specific Trunk ID with SIP credentials
- The BADIPS.csv SMC Data File can be updated via VSXi's REST API.
- Uses TLS for encryption.
- DNIS must be sent in E164 format.
- SIP registration is required if a customer's PBX IP address is not static.
- It is best practice to keep Trunk/Resource, Route Tables and Digit Mapping Table
  IDs the same.
- API requires basic authentication with username and password.
- Each resource can enable or disable Radius Authorization or Radius Accounting independently.
- These scripts are written in Node.js.
- These scripts are supported as-is and provided as a reference if you want to make
  modifications.
- Basic authentication is used with username and password.
- Don't do anything if DB connection failed
- The GUI (and API) will only provide web access (not SSH/SNMP/SFTP and Web).
- Use Push to Stand-by button for HA systems when you are done adding trusted hosts.
- CDR files will be kept on the system for at least 360 hours.
- CDR files older than 360 hours will be deleted automatically.
- Format version number of records to follow
- All CDR files will be kept on the system for at least 360 hours.
- CDR files which are older than 360 hours will be deleted by the system automatically
  in order to save disk space.
- The CDR file is generated in a configured time interval.
- The time interval can be configured from 60 seconds to 99,999 seconds.
- Minimal sanity check implemented in the script.
- Minimal sanity check for command line arguments.
- 'TLS Certificate to support this multitenant implementation has: CN: *.teams.sansay.support
  SAN: *.teams.sansay.support, teams.sansay.support'
- 'You can make a test call from your mobile or desk phone to: +18582056242.'
- Data can be uploaded or downloaded in XML format.
- Maximum size of uploaded files is limited to 5000 entries for some tables.
- Most current ROME SOAP / Web Services API client
- Supports Microsoft's Teams Direct Routing for SIP Trunking services.
- 'TLS Certificate must have CN: *.teams.sansay.support and SAN: *.teams.sansay.support,
  teams.sansay.support.'
- NSS is managed via a web UI and through APIs.
- Uses user/password authentication for access.
- Automated certificate renewals are recommended when the customer prefers shorter
  lifetime certificate renewals.
- The recommended version for ACME certificate renewals is NSS-5.3.592.47.
- Both web and API access is done through user / password authentication.
- Automated certificates are recommended for renewals under 60 days.
- The Express Proxy is an optional software component.
- Call signing happens on any 'outbound call' made by your subscriber(s).
- Service Providers must deploy the STIR/SHAKEN framework for compliance with the
  TRACED Act.
- Sansay is an iconectiv approved vendor which means Service Providers using Sansay's
  STI solutions can get directly on-boarded to the STI-PA's production environment
  bypassing the staging environment.
- Uses OAuth2 with refresh token for authentication.
- Example response contains identity information in the signingResponse object.
- New diversion parameter has been added for STI-AS requests.
- STI-VS support Identity array.
- Uses API credentials to access STI-CA portal.
- RCD is delivered as an additional Identity header
- SHAKEN PASSPorTs can be extended to support rich call data by adding an 'rcd claim'
  within the passport
- Obtain your SHAKEN certificate from Sansay STI-CA.
- Install your SHAKEN key to start signing calls.
- AWS AMI in your AMI Private images repository, which will be shared with you by
  Sansay Support.
- The AMI will only show up in regions Sansay shared the AMI with you.
- The DIV PASSporT is an adaptation of the SIP Diversion header to the STIR/SHAKEN
  framework.
- Approval from STI-PA required.
- STI-PA API User creation needed for SPC token acquisition.
- The vCPU count will depend on the system CPU single thread performance.
- Storage requirements will vary based on record retention policies and needs.
- Creating an API user is time sensitive and requires 2FA (Two Factor Authentication)
  approval.
- Users will receive an introductory e-mail to reset their passwords.
- Cronitor integration requires setup of monitor for tracking days remaining.
- Obtaining a certificate via Sansay's CA web portal takes less than five minutes
  and it is done in three easy steps.
- Every STIR/SHAKEN certificate requires obtaining an SPC token which serves as a
  proof that your organization is eligible to obtain a certificate and it is in good
  standing with the STIR/SHAKEN ecosystem.
- The enablement configuration is completed by Sansay Support to ensure connectivity
  to the STI-PA, STI-CA in addition to verifying API login for the certificate order
  to be successful.
- This document assumes that you are already familiar with AWS and that your AWS account
  has already been created.
- NSS integrates with BCID Call Delivery Platform that helps correlate call signing
  and call delivery activity amongst participating Service Providers.
- Core Module must be v41.2.2 or higher.
- Automated certificate renewal is accomplished by whitelisting the Service Provider's
  STI-AS infrastructure.
- A certificate is hosted by Sansay's geo-redundant and highly available STI-CR.
- If using TLS, ensure the necessary configuration is done.
- 'This configuration works for ANI/DNIS formatted as: ''+1NXXNXXXXXX'', ''1NXXNXXXXXX''
  or ''NXXNXXXXXX''.'
- Using the SP Admin User ID created on the registration form as login ID and the
  password provided in the email, fill in the login fields and click the Log In button.
- Currently, full backup restoration is only supported via the GUI.
- The 'replace' action is recommended when restoring a table backup file.
- DNO entries follow the same structure of STI-AS policies.
- Monitor the days remaining for your STIR/SHAKEN certificate using Cronitor.
- Replace your-nss.sansay.com with your actual NSS URL.
- Every STIR/SHAKEN certificate requires obtaining an SPC token which serves as a
  proof that your organization is eligible to obtain a certificate.
- The enablement configuration is completed by Sansay Support to ensure connectivity
  to the STI-PA, STI-CA.
- Script arguments are orig_tn and dest_tn as follows 'get_shaken.sh 8587542200 8587542211'
- Requires setup of NSS URL
- NSS checks if the caller matches vetted data in BCID.
- NSS integrates with BCID Call Delivery Platform.
- Import the Dial Translation Plan file FIRST and then the Dial Rules file next.
- Import the route skeleton file FIRST and then the route connections file next.
- Uses SBC (originating switch/IP), OTG (originating trunk group), and ANI as the
  elements that determine the attestation level of a call.
- '''any'' is a valid wildcard when there''s no specific, SBC, OTG, or ANI to match.'
- Partial ANI matching (e.g. 85875422 will cover 8587542200 through 2299) is supported
  in addition to full digit match (8587542200).
- If using TLS, ensure correct SSL configuration is set.
- 'ANI/DNIS must be formatted as: ''+1NXXNXXXXXX'', ''1NXXNXXXXXX'' or ''NXXNXXXXXX''.'
- Manual certificates issuance is only recommended for longer duration certificates
  (45-365 days).
- STIR/SHAKEN is sensitive to the specific path a call takes.
- Transit providers may drop STIR/SHAKEN signatures and re-sign it.
- The 'replace' action deletes existing entries and inserts entries from the uploaded
  file.
- User-friendly SHAKEN PASSporT presentation.
- Automatic header and payload validation.
- Certificate details, such as expiry date and service provider code.
- Automatic conversion of iat to an easy-to-read date timestamp.
- Extraction of certificate URL.
- Raw token output.
- Ability to share decoded results via PNG export.
- Signature and certificate validation.
- Please be extra cautious when using the Replace operation.
- An effective approach is to verify how is your call is being handled outside of
  your network.
- The SIP Identity header adds approximately 500 bytes to the initial INVITE at call
  setup time.
- Test in STAGING mode before sending queries to production.
- QDRs can be downloaded via SSH, SCP and SFTP.
- Only whitelisted IPs will be able to establish a SSH/SFTP connection.
- The REST implementation is described in another article.
- Devices that support verstat only need to receive it without any additional treatment.
- The From otg and qtype are optional parameters.
- For STI-VS, From ttg stands for terminating trunk group.
- Uses SBC, OTG, and ANI as the elements that determine the attestation level of a
  call.
- QDRs are accessed using the 'qdr' username.
- Obtaining a certificate via Sansay's CA web portal takes less than five minutes.
- Manual certificates issuance is recommended for longer duration certificates (45-365
  days).
- If Content-Type is not application/json, requests will be rejected with 415 Unsupported
  Media type
- If Accept is not specified, will be default handled as application/json
- The Sansay Identity Header Decoder simplifies the analysis of STIR/SHAKEN encoded
  Identity headers.
- This article covers general problem troubleshooting related to STIR/SHAKEN signatures.
- Make sure to test in STAGING mode before sending queries to production.
- 'NSS generates two different files per record: STI and QDR.'
- QDRs can be downloaded via SSH, SCP or SFTP.
- Unauthorized calls are generated by unknown sources sending traffic
- NSS supports standard SIP INVITE/302 redirect in addition to REST.
- QDRs can be downloaded via SSH, SCP, and SFTP.
- It is straightforward to add support for STIR/SHAKEN in Asterisk using Sansay's
  NSS.
- No recent posts
errors:
- Omitting fields will result in an error.
- 200 OK
- 300 Finished With Errors
- '400 fail - invalid table specified: + requested table name.'
- '401 Fail - User Not Authorized: Invalid username or no read/write permissions.'
- 402 Fail - This action is not allowed while system is in Load-Balance Slave mode
- 400 fail - invalid table specified
- '401 Fail - User Not Authorized: Invalid username or no read/write permissions'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check credentials or token expiration.'
- 'INVALID_SIGNATURE: Check private key and certificate mismatch'
- 'PACKET_FRAGMENTATION: Ensure packets are not fragmented'
- 'DNS_RESOLUTION: Verify DNS settings'
- 'Not Authorized: Recheck OAuth scopes or token expiration'
- '504 INVITE Response Timeout: Termination Stack Cause = 504, INVITE Response Timeout'
- '504 SIP Resend Timeout: Origination Stack Cause = 504, SIP Resend Timeout'
- '408 Refresh Failure: Origination Stack Cause = 408, Refresh Failure'
- '503 Service Unavailable: No Ring Timeout'
- '408 Request Timeout: Ring No Answer Timeout'
- '504 Server Timeout: INVITE Response Timeout'
- Maximum Duration Exceeded
- '999: Unauthorized call due to unknown sources or configuration error'
- 'Dialog Match Error: These are triggered when requests or responses do not match
  existing SIP dialogs.'
- 'Protocol Error: If an IP address always shows these errors it means that the far-end
  device may be misconfigured or have an interoperability issue.'
- '408: Refresh Failure'
- '422: Session Timer too small'
- '504: INVITE Response Timeout'
- '999: EAM Routing Timeout'
- No T.38 re-Invite initiated
- Negotiation/training issues
- Failures in image transmission
- No IP addresses found in the response.
- Less than max entries, ending loop.
- SIP/2.0 503 Service Unavailable
- SIP/2.0 408 Request Timeout
- SIP/2.0 504 Server Timeout
- '999: The system will ignore the attempt(s) when the request does not arrive at
  a valid Service Port.'
- 'Dialog Match Error: Triggered when requests or responses do not match existing
  SIP dialogs.'
- 'Protocol Error: Indicates far-end device misconfiguration or interoperability issues.'
- '401 Unauthorized: Check user credentials'
- '401 Fail - User Not Authorized: invalid user password'
- '401 Unauthorized: Check username and password.'
- '400 Bad Request: Validate command syntax and parameters.'
- '401 Fail - User Not Authorized: invalid user password.'
- '401 Unauthorized: Recheck username or password'
- '404 Not Found: Ensure the endpoint path is correct'
- '500 Internal Server Error: Check API service status'
- I need one argument
- I don't know what to do with more than 3 arguments
- '404 Not Found: Check the monitor ID and URL.'
- '403 Forbidden: Ensure API key is valid.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '200: Successful request'
- '400: Bad request — check the request format'
- '500: Internal server error — contact support'
- Any variables starting with $ will need to be replaced.
- '200: Successful Response'
- '4xx: Client Error'
- '5xx: Server Error'
- 'SIP 437 Unsupported Credential: Check for DNS resolution issues.'
- '401 Unauthorized: Check API credentials.'
- '400 Bad Request: Check request parameters.'
- '400 with service exception: Missing mandatory parameters in the verification request'
- '400 with service exception: Received invalid parameters'
- '403: Stale Date'
- Validation Pass
- Validation Failed
- No Validation
- '438: Invalid Identity Header'
- '436: Bad identity info'
- 'SIP 437 Unsupported Credential: Check DNS resolution issues.'
- '401 Unauthorized: Recheck API user or password.'
- '401 Unauthorized: Recheck SSH username or password'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '400 with service exception: Missing mandatory parameters in the verification request
  (“from”, “to”, “time”, “identity”).'
- '400 with service exception: Received invalid parameters (invalid “from”/“to” tn
  format, “time” value).'
- '400 with service exception: Missing mandatory parameters in the verification request
  (from, to, time, identity)'
- '400 with service exception: Received invalid parameters (invalid from/to tn format,
  time value)'
- '200: Received ‘iat’ value is not fresh.'
- '200: Identity header in compact form instead of required by SHAKEN spec full form.'
- '200: Identity header is received with ‘ppt’ parameter value that is not ‘shaken’.'
- '200: Missing ‘info’ parameter in the ‘identity’.'
- '200: Invalid ‘info’ URI.'
- '200: Failed to dereference ‘info’ URI.'
- '200: Missing ‘%1’ claim in the PASSporT header.'
- '200: ‘x5u’ from PASSporT header doesn’t match the ‘info’ parameter of identity
  header value.'
- '200: ‘typ’ from PASSporT header is not ‘passport’.'
- '200: ‘alg‘ from PASSporT header is not ‘ES256’.'
- '200: ‘ppt‘ from PASSporT header is not ‘shaken’.'
- '200: Missing ‘%1’ mandatory claim in PASSporT payload.'
- '200: ‘iat’ from PASSporT payload is not fresh.'
- '200: ‘%1’ claim from PASSporT payload doesn’t match the received in the verification
  request claim.'
- '200: Failed to authenticate CA.'
- '200: Signature validation failed.'
- '200: ‘attest’ claim in PASSporT payload is not valid.'
auth_info:
  mentioned_objects:
  - RCD PASSPorT
  - SHAKEN PASSPorT
client:
  base_url: https://nss.sansay.com:3334
  headers:
    Content-Type: application/json
    Accept: application/json
    X-RequestID: '12345678'
source_metadata: null
