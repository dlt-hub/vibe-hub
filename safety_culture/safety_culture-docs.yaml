resources:
- name: scim_user_provisioning
  endpoint:
    path: /accounts/scim/v2
    method: POST
    data_selector: ''
    params: {}
- name: register_app
  endpoint:
    path: /integrations/v1/apps
    method: POST
    data_selector: app_id
- name: install_app
  endpoint:
    path: /integrations/v1/apps/{app_id}/installations
    method: POST
    data_selector: installation_id
- name: create_app_configuration
  endpoint:
    path: /integrations/v1/apps/{app_id}/installations/{installation_id}/configurations
    method: POST
- name: logic_items
  endpoint:
    path: /logic-items
    method: GET
    data_selector: items
- name: inspections
  endpoint:
    params:
      archived: both
      include_inactive_items: true
- name: inspection_items
  endpoint:
    method: GET
- name: actions
  endpoint:
    method: GET
- name: sites
  endpoint:
    params:
      include_deleted: true
- name: SafetyCulture_Exporter
  endpoint:
    params:
      incremental: custom_logic
- name: SafetyCulture_Power_BI_Connector
  endpoint:
    params:
      incremental: custom_logic
- name: single_sign_on
  endpoint:
    path: /login/callback
    method: GET
- name: adfs_web_services_federation
  endpoint:
    path: /login/callback
    method: GET
- name: adfs_saml_web_sso
  endpoint:
    path: /login/callback
    method: GET
    params:
      connection: '{{ name_provided_in_app }}'
- name: inspections
  endpoint:
    path: /inspections
    method: GET
    data_selector: data
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
    params: {}
- name: issue_timeline_items
  endpoint:
    path: /issue_timeline_items
    method: GET
    data_selector: timeline_items
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
- name: inspection_items
  endpoint:
    path: /audits
    method: GET
    data_selector: items
    params:
      incremental: modified_at
- name: template
  endpoint:
    path: /templates
    method: GET
    data_selector: templates
    params: {}
- name: template_permission
  endpoint:
    path: /template_permissions
    method: GET
    data_selector: permissions
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: sites
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
- name: group_users
  endpoint:
    path: /group_users
    method: GET
    data_selector:
    - user_id
    - group_id
    - organisation_id
    - exported_at
    params: {}
- name: activity_log_events
  endpoint:
    path: /activity_log_events
    method: GET
    data_selector:
    - id
    - event_at
    - type
    - user_id
    - organisation_id
    - client_class
    - agent
    - metadata
    - remote_ip
    - initiator
    params: {}
- name: schedules
  endpoint:
    path: /schedules
    method: GET
    data_selector: schedules
    params: {}
- name: schedule_assignees
  endpoint:
    path: /schedule_assignees
    method: GET
    data_selector: records
- name: schedule_occurrences
  endpoint:
    path: /schedule_occurrences
    method: GET
    data_selector: records
- name: actions
  endpoint:
    path: /actions
    method: GET
    data_selector: .
    params: {}
- name: action_assignees
  endpoint:
    path: /action_assignees
    method: GET
    data_selector: records
    params: {}
- name: action_timeline_items
  endpoint:
    path: /action_timeline_items
    method: GET
    data_selector: records
    params: {}
- name: safetyculture_exporter
  endpoint:
    params:
      access_token: '{{ dlt.secrets[''api_access_token''] }}'
      modified_after: <insert_date_time_in_UTC>
- name: inspection
  endpoint:
    path: /export/inspection
    method: GET
    data_selector: inspections
    params:
      archived: 'false'
      completed: 'true'
      included_inactive_items: false
      limit: 100
      skip_ids: []
      web_report_link: private
      media: false
      media_path: ./export/media/
      modified_after: ''
      path: ./export/
      include_deleted: false
      include_full_hierarchy: true
      tables: []
      template_ids: []
      filename_convention: INSPECTION_TITLE
      format:
      - PDF
      preference_id: ''
- name: inspections
  endpoint:
    method: GET
- name: inspection_items
  endpoint:
    method: GET
- name: templates
  endpoint:
    method: GET
- name: template_permissions
  endpoint:
    method: GET
- name: sites
  endpoint:
    method: GET
- name: users
  endpoint:
    method: GET
- name: groups
  endpoint:
    method: GET
- name: group_users
  endpoint:
    method: GET
- name: schedules
  endpoint:
    method: GET
- name: schedule_assignees
  endpoint:
    method: GET
- name: schedule_occurrences
  endpoint:
    method: GET
- name: actions
  endpoint:
    method: GET
- name: action_assignees
  endpoint:
    method: GET
- name: action_timeline_items
  endpoint:
    method: GET
- name: issues
  endpoint:
    method: GET
- name: issue_timeline_items
  endpoint:
    method: GET
- name: assets
  endpoint:
    method: GET
- name: report_layouts
  endpoint:
    path: /preferences/search
    method: GET
    data_selector: preferences
- name: inspections
  endpoint:
    path: /inspections
    method: GET
    data_selector: inspections
    params: {}
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: items
    params: {}
- name: issue_timeline_items
  endpoint:
    path: /issue_timeline_items
    method: GET
    data_selector: items
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: ''
    params: {}
- name: inspection_items
  endpoint:
    path: /audits
    method: GET
    data_selector: items
    params: {}
- name: templates
  endpoint:
    path: /templates
    method: GET
    data_selector: .
    params: {}
- name: template_access
  endpoint:
    path: /template_access
    method: GET
    data_selector: .
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: sites
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
- name: group_users
  endpoint:
    path: /group_users
    method: GET
    data_selector: data
    params:
      user_id: '{{ user_id }}'
      group_id: '{{ group_id }}'
      organisation_id: '{{ organisation_id }}'
      exported_at: '{{ exported_at }}'
- name: activity_log_events
  endpoint:
    path: /activity_log_events
    method: GET
    data_selector: events
    params:
      id: '{{ id }}'
      event_at: '{{ event_at }}'
      type: '{{ type }}'
      user_id: '{{ user_id }}'
      organisation_id: '{{ organisation_id }}'
      client_class: '{{ client_class }}'
      agent: '{{ agent }}'
      metadata: '{{ metadata }}'
      remote_ip: '{{ remote_ip }}'
      initiator: '{{ initiator }}'
- name: schedules
  endpoint:
    path: /schedules
    method: GET
    data_selector: schedules
    params: {}
- name: schedule_assignees
  endpoint:
    path: /schedule_assignees
    method: GET
    data_selector: data
    params: {}
- name: schedule_occurrences
  endpoint:
    path: /schedule_occurrences
    method: GET
    data_selector: data
    params: {}
- name: actions
  endpoint:
    path: /actions
    method: GET
    data_selector: ''
    params: {}
- name: action_assignees
  endpoint:
    path: /action_assignees
    method: GET
    data_selector: not specified
    params: {}
- name: action_timeline_items
  endpoint:
    path: /action_timeline_items
    method: GET
    data_selector: not specified
    params: {}
- name: user_provisioning
  endpoint:
    path: /Users
    method: POST
- name: action_link
  endpoint:
    path: /tasks/v1/actions//shared_link
    method: POST
- name: actions
  endpoint:
    path: /tasks/v1/actions/delete
    method: POST
- name: action_shared_link
  endpoint:
    path: /tasks/v1/actions//shared_link
    method: GET
- name: actions
  endpoint:
    path: /tasks/v1/actions/list
    method: GET
    params:
      task_filters: {}
      sort: creation_date desc
- name: action_labels
  endpoint:
    path: /tasks/v1/actions/label
    method: PUT
- name: actions_description
  endpoint:
    path: /tasks/v1/actions//description
    method: PUT
- name: actions_service_update_due_at
  endpoint:
    path: /tasks/v1/actions//due_at
    method: PUT
- name: action_priority_update
  endpoint:
    path: /tasks/v1/actions/priority
    method: PUT
- name: actions_service_update_site
  endpoint:
    path: /actions/service/update/site
    method: PUT
- name: tasks_v1_actions_site
  endpoint:
    path: /tasks/v1/actions//site
    method: GET
- name: actions_update_title
  endpoint:
    path: /tasks/v1/actions//title
    method: PUT
- name: action
  endpoint:
    path: /actions
    method: GET
    data_selector: action
- name: inspection
  endpoint:
    path: /inspections
    method: GET
    data_selector: inspection
- name: inspection_item
  endpoint:
    path: /inspection_items
    method: GET
    data_selector: inspection_item
- name: creator
  endpoint:
    path: .creator
    method: GET
    data_selector: creator
- name: site
  endpoint:
    path: .site
    method: GET
    data_selector: site
- name: priority
  endpoint:
    path: .priority_id
    method: GET
    data_selector: priority_id
- name: status
  endpoint:
    path: .status
    method: GET
    data_selector: status
- name: collaborators
  endpoint:
    path: /collaborators
    method: GET
    data_selector: collaborators
    params: {}
- name: user
  endpoint:
    path: /collaborators[].user
    method: GET
    data_selector: user
    params: {}
- name: group
  endpoint:
    path: /collaborators[].group
    method: GET
    data_selector: group
    params: {}
- name: external_user
  endpoint:
    path: /collaborators[].external_user
    method: GET
    data_selector: external_user
    params: {}
- name: inspection_context
  endpoint:
    path: .reference.inspection_context
    method: GET
    data_selector: inspection_context
    params:
      inspection_id: effa93bb-8cfb-4783-af5d-c507340dc6e0
      inspection_name: 11 Aug 2021 / Checklist
      inspection_item_id: 67034555-c11e-4411-bf75-140866c555be
      inspection_item_name: Question Name
      inspection_item_type: ''
      inspection_item_path: []
- name: sensor_alert_context
  endpoint:
    path: .reference.sensor_alert_context
    method: GET
    data_selector: sensor_alert_context
    params:
      sensor_alert_id: 79ce7380-0809-5a0a-9d58-a7ead30d078e
      level: OK
      created_at: '2021-12-01T12:39:09.313635Z'
      detected_at: '2021-11-30T22:55:00Z'
      sensor_id: a5ea5ae1-304c-46ef-9dfd-ce845208290f
      site_name: 2 Lacey St - L1
      metric_type: WIND_GUST
      sensor_name: Weather
- name: add_notes_to_inspection_questions
  endpoint:
    path: /audits/{audit_id}
    method: PUT
    data_selector: items
    params: {}
- name: answer_service
  endpoint:
    path: /inspections/v1/inspections/{inspection_id}/questions/{question_id}/asset
    method: PUT
- name: answer_asset
  endpoint:
    path: /inspections/v1/inspections/{inspection_id}/questions/{question_id}/asset
    method: PUT
- name: answer_checkbox
  endpoint:
    path: /inspections/v1/inspections//questions//checkbox
    method: PUT
- name: dynamic_field_generation
  endpoint:
    path: /inspections/v1/inspections//questions//dynamicfield
    method: POST
- name: answers_for_inspection
  endpoint:
    path: /inspections/v1/answers/
    method: GET
- name: archive_asset
  endpoint:
    path: /assets/v1/assets//archive
    method: PATCH
- name: bulk_update_assets
  endpoint:
    path: /assets/v1/assets/bulk
    method: PUT
- name: asset
  endpoint:
    path: /assets/v1/assets
    method: POST
- name: asset
  endpoint:
    path: /assets/v1/assets/
    method: DELETE
- name: asset
  endpoint:
    path: /assets/v1/assets
    method: GET
- name: asset
  endpoint:
    path: /assets/v1/assets/
    method: GET
- name: assets
  endpoint:
    path: /assets/list
    method: POST
    params:
      sort: creation_date_desc
- name: assets
  endpoint:
    path: /lookupAssetsByField
    method: POST
- name: restore_archived_asset
  endpoint:
    path: /assets/v1/assets//archive
    method: DELETE
- name: set_asset_field_values
  endpoint:
    path: /assets/v1/assets//fields
    method: PATCH
- name: asset_location_update
  endpoint:
    path: /assets/v1/assets//location
    method: PATCH
- name: update_asset
  endpoint:
    path: /
    method: PATCH
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: .
- name: asset_type
  endpoint:
    path: /asset_types
    method: GET
    data_selector: .
- name: asset_field
  endpoint:
    path: /asset_fields
    method: GET
    data_selector: .
- name: asset_site
  endpoint:
    path: /asset_sites
    method: GET
    data_selector: .
- name: collections
  endpoint:
    path: /collections
    method: GET
- name: courses
  endpoint:
    method: GET
- name: lesson_details
  endpoint:
    method: GET
- name: publish_courses
  endpoint:
    method: POST
- name: credentials
  endpoint:
    path: /credentials
    method: GET
- name: custom_field
  endpoint:
    path: /tasks/v1/customer_configuration/custom_field/
    method: POST
- name: create_task_type
  endpoint:
    path: /tasks/v1/customer_configuration/task_type
    method: POST
- name: action_labels
  endpoint:
    path: /tasks/v1/customer_configuration/action_labels/delete
    method: POST
- name: action_labels
  endpoint:
    path: /tasks/v1/customer_configuration/action_labels
    method: GET
- name: categories
  endpoint:
    path: /tasks/v1/customerconfiguration/categories
    method: GET
- name: org_task_type_unmapped_fields
  endpoint:
    path: /tasks/v1/customer_configuration//custom_fields/unmapped
    method: GET
- name: task_type_custom_fields
  endpoint:
    path: /tasks/v1/customer_configuration/custom_fields/mapped
    method: GET
- name: customer_configuration
  endpoint:
    path: /tasks/v1/customer_configuration//custom_field/
    method: PUT
- name: customer_configuration_custom_field
  endpoint:
    path: /tasks/v1/customer_configuration/custom_field/
    method: PUT
- name: customer_configuration_task_type
  endpoint:
    path: /tasks/v1/customer_configuration/task_type
    method: PUT
- name: action_label
  endpoint:
    path: /tasks/v1/customer_configuration/action_labels/upsert
    method: PUT
- name: inspections
  endpoint:
    path: /feed/inspections
    method: GET
    data_selector: data
    params:
      modified_after: '{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z'
- name: folder
  endpoint:
    method: GET
    data_selector: folder
- name: folder_with_member_count
  endpoint:
    method: GET
    data_selector: folder_with_member_count.folder
- name: folder_with_ancestors
  endpoint:
    path: /folder_with_ancestors
    method: GET
    data_selector: folder_with_ancestors
- name: folder_with_parent
  endpoint:
    path: /folder_with_parent
    method: GET
    data_selector: folder
- name: folder_order_by
  endpoint:
    path: /folder_order_by
    method: GET
    data_selector: sort_order
- name: folder
  endpoint:
    params:
      meta_label:
        not: false
        meta_label: location
      folder_id:
        not: false
        folder_id: 4fb56fa8-fa23-4a9c-907e-8367abc75a2d
- name: directory_add_users_folders_associations
  endpoint:
    path: /directory/v1/users/folders/membership
    method: POST
- name: create_folder
  endpoint:
    path: /directory/v1/folder
    method: POST
    params:
      id: custom UUID
      name:
        min_length: 1
        max_length: 250
      parent_id: Nil/Empty UUID
- name: delete_folders
  endpoint:
    path: /directory/v1/folders
    method: DELETE
- name: users_by_folder
  endpoint:
    path: /directory/v1/folder//users
    method: GET
- name: directory_getfolderidsforuser
  endpoint:
    path: /directory/v1/user/folder_ids
    method: GET
- name: folders_by_parent
  endpoint:
    path: /directory/v1/parent//folders
    method: GET
- name: folders
  endpoint:
    path: /folders
    method: GET
- name: directory_folder
  endpoint:
    path: /directory/v1/folder/
    method: GET
- name: inherited_users_by_folder
  endpoint:
    path: /directory/v1/folder//users/inherited
    method: GET
- name: custom_labels
  endpoint:
    path: /directory/v1/organization/labels
    method: GET
- name: users_by_folder
  endpoint:
    path: /directory/v1/folder//users/associated
    method: GET
- name: move_folders
  endpoint:
    path: /directory/v1/folders/move
    method: POST
- name: directory_removeusersassociation
  endpoint:
    path: /directory/v1/folder//users
    method: DELETE
- name: folder_search
  endpoint:
    path: /folders/search
    method: POST
    params:
      limit: 100
- name: update_folder_properties
  endpoint:
    path: /directory/v1/folder/
    method: PATCH
- name: create_file
  endpoint:
    path: /documentspublicservice_createfile
    method: POST
    data_selector: upload_url
- name: search_items
  endpoint:
    path: /search
    method: POST
- name: update_file
  endpoint:
    path: /documentspublicservice_updatefile
    method: POST
- name: credential_type
  endpoint:
    path: /credentials/v1/credential-type
    method: POST
- name: delete_credential_type
  endpoint:
    path: /credentials/v1/credential-type/
    method: DELETE
- name: credential_type
  endpoint:
    path: /credentials/v1/credential-type/{id}
    method: GET
- name: credential_types
  endpoint:
    path: /credentials/v1/credential-types
    method: POST
- name: update_credential_type
  endpoint:
    path: /credentials/v1/credential-type
    method: PUT
- name: inspection_details
  endpoint:
    path: /inspections//details
    method: GET
- name: inspection_identifiers
  endpoint:
    path: /audits/search
    method: GET
    params:
      field:
      - audit_id
      - modified_at
      modified_after: '{{ last_value_of_modified_at }}'
- name: inspection_data
  endpoint:
    path: /audits/{audit_id}
    method: GET
- name: inspection_media
  endpoint:
    path: /audits/{audit_id}/media/{media_uuid}
    method: GET
    data_selector: href
- name: training_course_progress
  endpoint:
    path: /training/v1/feed/training-course-progress
    method: GET
- name: create_asset_field
  endpoint:
    path: /assets/v1/fields
    method: POST
- name: modified_inspections
  endpoint:
    path: /audits/search
    method: GET
    params:
      field:
      - audit_id
      - modified_at
      modified_after: '{{ last_retrieved_timestamp }}'
- name: groups
  endpoint:
    path: /groups
    method: GET
- name: heads_up
  endpoint:
    data_selector: .
- name: comment
  endpoint:
    path: /comments
    method: GET
    data_selector: message.content.text
    params:
      reply_count: pagination
- name: headsup_completion_counts
  endpoint:
    path: /announcements/v1/announcement:GetHeadsUpCompletionCounts
    method: POST
- name: heads_up_messages
  endpoint:
    path: /announcements/v1/announcement;GetHeadsUpMessages
    method: GET
- name: headsup
  endpoint:
    path: /announcements/v1/announcement
    method: GET
- name: list_heads_up_manage
  endpoint:
    path: /announcements/v1/announcement
    method: GET
- name: list_heads_up_users
  endpoint:
    path: /announcement:ListHeadsUpUsers
    method: POST
- name: add_collaborators
  endpoint:
    path: /tasks/v1/incidents/collaborators/add
    method: POST
- name: create_incident
  endpoint:
    path: /tasks/v1/incidents
    method: POST
- name: incident_questions_and_answers
  endpoint:
    path: /tasks/v1/incidents//questions_answers
    method: GET
- name: incidents_count
  endpoint:
    path: /tasks/v1/incidents/list/count
    method: POST
- name: issues
  endpoint:
    path: /tasks/v1/incidents/list
    method: GET
    params:
      page_size: 100
- name: incidents
  endpoint:
    path: /tasks/v1/incidents
    method: GET
- name: incidents_pdf_report
  endpoint:
    path: /tasks/v1/incidents//pdf_report
    method: GET
- name: remove_collaborators
  endpoint:
    path: /tasks/v1/incidents//collaborators/remove
    method: POST
- name: submit_incident
  endpoint:
    path: /tasks/v1/incidents/submit
    method: POST
- name: incidents_update_description
  endpoint:
    path: /tasks/v1/incidents//description
    method: PUT
- name: incidents_service_update_description
  endpoint:
    path: /tasks/v1/incidents//description
    method: PUT
- name: incidents
  endpoint:
    path: /tasks/v1/incidents//occurred_at
    method: PUT
- name: incidents_update_priority
  endpoint:
    path: /tasks/v1/incidents//priority
    method: PUT
- name: incident_update
  endpoint:
    path: /incidents//site
    method: PUT
- name: incident_site
  endpoint:
    path: /tasks/v1/incidents//site
    method: GET
- name: incident_status_update
  endpoint:
    path: /incidents//status
    method: PUT
- name: task_incident_status
  endpoint:
    path: /tasks/v1/incidents//status
    method: PUT
- name: incidents_title_update
  endpoint:
    path: /incidents/title
    method: PUT
- name: tasks_incidents_title
  endpoint:
    path: /tasks/v1/incidents/title
    method: GET
- name: individual_leaderboards
  endpoint:
    path: /reference/individual-leaderboards
    method: GET
- name: archive_inspection
  endpoint:
    path: /inspections/v1/inspections//archive
    method: POST
- name: inspection_clone
  endpoint:
    path: /inspections/v1/inspections//clone
    method: POST
- name: inspection
  endpoint:
    path: /inspections/
    method: DELETE
- name: inspection
  endpoint:
    path: /inspections/v1/inspections/
    method: GET
- name: remove_inspection_user_access
  endpoint:
    path: /inspections/v1/inspections//user//access
    method: DELETE
- name: restore_archived_inspection
  endpoint:
    path: /inspections/v1/inspections//archive
    method: DELETE
- name: archive_inspection
  endpoint:
    path: /inspections/v1/inspections//archive
    method: DELETE
- name: inspection_location
  endpoint:
    path: /inspections/v1/inspections//location
    method: PUT
- name: set_inspection_site
  endpoint:
    path: /inspections/v1/inspections//site
    method: PUT
- name: inspection_owner
  endpoint:
    path: /inspections/v1/inspections//owner
    method: PUT
- name: inspection
  endpoint:
    path: /inspections
    method: GET
    data_selector: items
- name: audit_data
  endpoint:
    path: /.audit_data
    method: GET
    data_selector: .
    params: {}
- name: location
  endpoint:
    path: /.audit_data.location
    method: GET
    data_selector: location
    params: {}
- name: authorship
  endpoint:
    path: /.audit_data.authorship
    method: GET
    data_selector: authorship
    params: {}
- name: site
  endpoint:
    path: /.audit_data.site
    method: GET
    data_selector: site
    params: {}
- name: metadata
  endpoint:
    path: /.template_data.metadata
    method: GET
    data_selector: metadata
- name: response_sets
  endpoint:
    path: /.template_data.response_sets
    method: GET
    data_selector: response_sets
- name: authorship
  endpoint:
    path: /.template_data.authorship
    method: GET
    data_selector: authorship
- name: inspection_item
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params:
      item_id: 379d3910-d2e2-11e4-9038-695120da729f
      parent_id: a78337ce-2cf2-419b-85b5-c81cd2d68090
      type: checkbox
      label: Inspection
      options:
        condition: 3d346f01-e501-11e1-aff1-0800200c9a66
        element: Truck 1
        enable_date: true
        enable_signature_timestamp: true
        enable_time: true
        increment: 1
        is_mandatory: false
        label: ''
        link: ''
        locked: true
        max: 4
        min: 2
        multiple_selection: false
        required: true
        response_set: 7bb1cb10-7020-11e2-bcfd-0800200c9a66
        failed_responses:
        - 8bcfbf01-e11b-11e1-9b23-0800200c9a66
        secure: ''
        type: media
        visible_in_audit: true
        visible_in_report: true
        weighting: 8
        require_note: true
        require_media: false
        require_action: false
      responses:
        text: Flinders St
        value: '8'
        name: Jon Snow
        timestamp: '2015-06-24T02:20:22.000Z'
        datetime: '2015-06-24T02:01:30.000Z'
        location_text: 'Alligator Creek QLD 4816

          Australia

          (-19.405835, 146.899124)'
        failed: false
      children:
      - C5404AC4-2844-4D5A-A02C-9921B9B384C6
      scoring:
        score: 5
        max_score: 10
        score_percentage: 50
        combined_score: 3
        combined_max_score: 12
        combined_score_percentage: 25
- name: location
  endpoint:
    path: /audits/audit_50ba581235704a368d025056a583aa8b/location
    method: GET
    data_selector: ''
- name: media
  endpoint:
    path: /audits/audit_50ba581235704a368d025056a583aa8b/media
    method: GET
    data_selector: ''
- name: audits_search
  endpoint:
    path: /audits/search
    method: GET
    data_selector: audits
    params:
      field: audit_id,modified_at
- name: inspection
  endpoint:
    path: /audits/<audit_id>
    method: GET
    data_selector: .
- name: media_item
  endpoint:
    path: /audits/<audit_id>/media/<media_id>
    method: GET
- name: issues
  endpoint:
    path: /issues
    method: GET
    data_selector: incident
- name: specific_issue
  endpoint:
    path: /issues/{issue_id}
    method: GET
    data_selector: incident
- name: create_issue
  endpoint:
    path: /issues
    method: POST
- name: update_issue
  endpoint:
    path: /issues/{issue_id}
    method: PUT
- name: inspections
  endpoint:
    path: /inspections
    method: GET
    data_selector: inspections
    params: {}
- name: site
  endpoint:
    path: /site
    method: GET
    data_selector: site
    params: {}
- name: category
  endpoint:
    path: /category
    method: GET
    data_selector: category
    params: {}
- name: media
  endpoint:
    path: /media
    method: GET
    data_selector: media
- name: issue_location
  endpoint:
    path: /issue_location
    method: GET
    data_selector: location
- name: geoposition
  endpoint:
    path: /geo_position
    method: GET
    data_selector: geo_position
- name: reference
  endpoint:
    path: /reference
    method: GET
    data_selector: reference
- name: media_download
  endpoint:
    path: /download
    method: GET
    data_selector: url
    params:
      id: ''
      token: ''
- name: user_groups
  endpoint:
    path: /accounts/organisation/v1/accounts/user//groups
    method: GET
- name: create_configuration
  endpoint:
    path: /integrations/v1/apps//installations//configurations
    method: POST
- name: create_installation
  endpoint:
    path: /integrations/v1/apps/installations
    method: POST
- name: delete_configuration
  endpoint:
    path: /integrations/v1/apps//installations//configurations/
    method: DELETE
- name: delete_installation
  endpoint:
    path: /integrations/v1/apps/installations/
    method: DELETE
- name: app_installation
  endpoint:
    path: /apps/installations/
    method: GET
- name: applications
  endpoint:
    path: /apps
    method: GET
- name: installations
  endpoint:
    path: /integrations/v1/apps/installations
    method: GET
- name: register_application
  endpoint:
    path: /integrations/v1/apps
    method: POST
- name: update_custom_application
  endpoint:
    path: /apps
    method: PUT
- name: update_configuration
  endpoint:
    path: /integrations/v1/apps//installations//configurations/
    method: PUT
- name: learning_paths
  endpoint:
    path: /paths
    method: GET
- name: assign_permission_set
  endpoint:
    path: /permissions/v1/permission_set/assign
    method: POST
- name: permission_set
  endpoint:
    path: /permissions/v1/permission_set/{id}
    method: GET
- name: permission_sets
  endpoint:
    path: /permissions/v1/permission_sets
    method: POST
- name: users_search
  endpoint:
    path: /users/search
    method: POST
- name: share_connections
  endpoint:
    path: /share/connections
    method: GET
- name: audits
  endpoint:
    path: /audits
    method: POST
- name: audits_search
  endpoint:
    path: /audits/search
    method: GET
- name: export_profiles_search
  endpoint:
    path: /export_profiles/search
    method: GET
- name: templates_search
  endpoint:
    path: /templates/search
    method: GET
- name: response_sets
  endpoint:
    path: /response_sets
    method: GET
- name: audits_export
  endpoint:
    path: /audits/<audit ID>/export
    method: POST
- name: audits_exports
  endpoint:
    path: /audits/<audit ID>/exports/<export ID>
    method: GET
- name: audits_exports_file
  endpoint:
    path: /audits/<audit ID>/exports/<export ID>/<filename>
    method: GET
- name: preferences_search
  endpoint:
    path: /preferences/search
    method: GET
- name: audits_report
  endpoint:
    path: /audits/{audit ID}/report
    method: POST
- name: audits_report_export
  endpoint:
    path: /audits/{audit ID}/report/{export ID}
    method: GET
- name: users_upsert
  endpoint:
    path: /users/v1/users/upsert
    method: POST
- name: users_upsert_jobs
  endpoint:
    path: /users/v1/users/upsert/jobs
    method: POST
- name: users_upsert_jobs_job_id
  endpoint:
    path: /users/v1/users/upsert/jobs/{job_id}
    method: POST
- name: delete_users_upsert_jobs_job_id
  endpoint:
    path: /users/v1/users/upsert/jobs/{job_id}
    method: DELETE
- name: get_users_upsert_jobs_job_id
  endpoint:
    path: /users/v1/users/upsert/jobs/{job_id}
    method: GET
- name: users_upsert_jobs_list
  endpoint:
    path: /users/v1/users/upsert/jobs/list
    method: POST
- name: training_collections
  endpoint:
    path: /training/collections/v1
    method: GET
- name: training_collections_courses
  endpoint:
    path: /training/collections/v1/{collection ID}/courses
    method: GET
- name: training_courses
  endpoint:
    path: /training/courses/v1
    method: GET
- name: training_courses_lessons
  endpoint:
    path: /training/courses/v1/{course ID}/lessons
    method: GET
- name: training_paths
  endpoint:
    path: /training/paths/v1
    method: GET
- name: training_paths_details
  endpoint:
    path: /training/paths/v1/{path ID}
    method: GET
- name: training_individualleaderboards
  endpoint:
    path: /training/individualleaderboards/v1
    method: GET
- name: training_individualleaderboards_rankings
  endpoint:
    path: /training/individualleaderboards/v1/rankings
    method: GET
- name: training_rapid_refresh
  endpoint:
    path: /training/rapid-refresh/v1
    method: GET
- name: training_rapid_refresh_id
  endpoint:
    path: /training/rapid-refresh/v1/{id}
    method: GET
- name: training_analytics_lessons_attempts
  endpoint:
    path: /training/analytics/v1/lessons/attempts
    method: GET
- name: training_analytics_courses_statistics
  endpoint:
    path: /training/analytics/v1/courses/statistics
    method: GET
- name: training_analytics_lessons_progress_events
  endpoint:
    path: /training/analytics/v1/lessons/progress/events
    method: GET
- name: training_analytics_lessons_statistics
  endpoint:
    path: /training/analytics/v1/lessons/statistics
    method: GET
- name: training_analytics_slides_statistics
  endpoint:
    path: /training/analytics/v1/slides/statistics
    method: GET
- name: training_analytics_users_slides_statistics
  endpoint:
    path: /training/analytics/v1/users/{user_id}/slides/statistics
    method: GET
- name: training_analytics_users_lessons_progress
  endpoint:
    path: /training/analytics/v1/users/{user_id}/lessons/progress
    method: GET
- name: training_analytics_users_lessons_progress_events
  endpoint:
    path: /training/analytics/v1/users/{user_id}/lessons/progress/events
    method: GET
- name: training_analytics_surveys_questionDefinitions
  endpoint:
    path: /training/analytics/v1/surveys/questionDefinitions
    method: GET
- name: training_analytics_surveys_answers
  endpoint:
    path: /training/analytics/v1/surveys/answers
    method: GET
- name: training_analytics_rapidRefresh_answers
  endpoint:
    path: /training/analytics/v1/rapidRefresh/answers
    method: GET
- name: other
  endpoint:
    path: /other
    method: GET
- name: webhook_registration
  endpoint:
    path: /webhooks/v1/webhooks
    method: POST
    data_selector: data
    params:
      trigger_events:
      - TRIGGER_EVENT_INSPECTION_COMPLETED_STATUS
      url: https://example.com
- name: inspection
  endpoint:
    path: /audits/{inspection_id}
    method: GET
    data_selector: audit_data.authorship
- name: remove_inspection_user_access
  endpoint:
    path: /inspections/v1/inspections/{audit_id}/user/{owner_id}/access
    method: DELETE
    params:
      new_owner_id: '{new_owner_id}'
- name: inspection_export
  endpoint:
    path: /inspection/v1/export
    method: POST
- name: global_response_set
  endpoint:
    path: /response-sets
    method: POST
    data_selector: responses
- name: schedule_item
  endpoint:
    path: /schedules/v1/schedule_items
    method: POST
- name: schedule_item
  endpoint:
    path: /schedules/v1/schedule_items/
    method: DELETE
- name: schedule_items
  endpoint:
    path: /schedule_items
    method: GET
- name: schedule_item
  endpoint:
    path: /schedules/v1/schedule_items/
    method: PUT
- name: schedule_item
  endpoint:
    path: /reference/schedules
    method: GET
    data_selector: .
- name: schedule_item
  endpoint:
    path: /schedule_item
    method: POST
    data_selector: null
    params:
      id: null
      description: null
      must_complete: null
      can_late_submit: null
      recurrence: null
      start_time:
        hour: null
        minute: null
      duration: null
      timezone: null
      from_date: null
      to_date: null
      reminders:
      - event: null
        duration: null
      assignees:
      - id: null
        type: null
      document:
        id: null
        type: null
      location_id: null
- name: deprovision_sensor
  endpoint:
    path: /sensors/deprovision
    method: DELETE
    params:
      source_name: '{{ source_name }}'
      source_id: '{{ source_id }}'
- name: sensor_id
  endpoint:
    path: /sensors/v1/sensors/sensor-id
    method: GET
- name: sensor_latest_readings
  endpoint:
    path: /sensors///latest-readings
    method: GET
- name: sensor
  endpoint:
    path: /sensors///details
    method: GET
- name: ingest_sensor_readings
  endpoint:
    path: /sensors/ingest-readings
    method: POST
- name: sensors
  endpoint:
    path: /sensors/list
    method: POST
- name: provision_sensor
  endpoint:
    path: /sensors/provision
    method: POST
- name: sensors
  endpoint:
    path: /sensors
    method: GET
- name: start_inspection
  endpoint:
    method: POST
- name: list_users
  endpoint:
    method: GET
- name: share_inspection
  endpoint:
    method: POST
- name: search_templates
  endpoint:
    path: /templates/search
    method: GET
    data_selector: templates
- name: create_inspection
  endpoint:
    path: /audits
    method: POST
- name: search_users
  endpoint:
    path: /users/search
    method: POST
- name: share_inspection
  endpoint:
    path: /audits/{audit_id}/share
    method: POST
- name: task_custom_field_update
  endpoint:
    path: /tasks/v1/tasks//custom_field
    method: PUT
- name: archive_template
  endpoint:
    path: /templates/v1/templates//archive
    method: POST
- name: template
  endpoint:
    path: /templates/v1/template:DeleteTemplateByID
    method: DELETE
- name: template
  endpoint:
    path: /templates/v1/templates/{templateId}
    method: DELETE
- name: restore_archived_template
  endpoint:
    path: /templates/v1/template:RestoreArchivedTemplate
    method: POST
- name: add_user
  endpoint:
    path: /thepubservice_adduser
    method: POST
- name: global_response_set
  endpoint:
    path: /response_sets
    method: POST
- name: list_global_response_sets
  endpoint:
    path: /response_sets
    method: GET
- name: add_response
  endpoint:
    path: /response_sets//responses
    method: POST
- name: delete_inspection_web_report_link
  endpoint:
    path: /audits/web_report_link
    method: DELETE
- name: action_assignees
  endpoint:
    path: /feed/action_assignees
    method: GET
- name: activity_log_events
  endpoint:
    path: /feed/activity_log_events
    method: GET
- name: assets_feed
  endpoint:
    path: /feed/assets
    method: GET
    data_selector: assets
- name: groups
  endpoint:
    path: /feed/groups
    method: GET
- name: users
  endpoint:
    path: /users
    method: POST
- name: assets
  endpoint:
    path: /assets
    method: POST
- name: group_users
  endpoint:
    path: /feed/group_users
    method: GET
- name: issue_assignees
  endpoint:
    path: /feed/issue_assignees
    method: GET
- name: issue_relations
  endpoint:
    path: /feed/issue_relations
    method: GET
- name: issues
  endpoint:
    path: /feed/issues
    method: GET
- name: issue_timeline_items
  endpoint:
    path: /feed/issue_timeline_items
    method: GET
- name: schedules
  endpoint:
    path: /feed/schedules
    method: GET
- name: site_members
  endpoint:
    path: /feed/site_members
    method: GET
- name: sites_data_feed
  endpoint:
    path: /feed/sites
    method: GET
    data_selector: data
- name: feed_template_permissions
  endpoint:
    path: /feed/template_permissions
    method: GET
- name: users
  endpoint:
    path: /feed/users
    method: GET
- name: global_response_set
  endpoint:
    path: /response_sets/{id}
    method: GET
- name: inspection_url
  endpoint:
    path: /thepubservice/getinspectiondeeplink
    method: GET
- name: inspection_media
  endpoint:
    path: /audits/$AUDIT_ID/media/$MEDIA_ID
    method: GET
- name: inspection_web_report_link
  endpoint:
    path: /audits/web_report_link
    method: GET
- name: inspection
  endpoint:
    path: /thepubservice/inspection
    method: GET
- name: user_groups
  endpoint:
    path: /share/connections
    method: GET
- name: user_organizations
  endpoint:
    path: /thepubservice/getusergroupsget
    method: GET
- name: user
  endpoint:
    path: /users/
    method: GET
- name: global_response_sets
  endpoint:
    path: /response_sets/v2
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: GET
- name: users_in_group
  endpoint:
    path: /groups/users
    method: GET
    params:
      offset: 0
      limit: 2000
- name: remove_user
  endpoint:
    path: /thepubservice_removeuser
    method: GET
    params:
      replacement_user: '{{ user_id }}'
- name: inspection_search
  endpoint:
    path: /thepubservice_searchinspections
    method: GET
    params:
      template_id: ''
      modified_at: ''
      archived: ''
- name: search_templates
  endpoint:
    path: /reference/thepubservice_searchtemplates
    method: GET
    data_selector: templates
    params:
      modified_at: ISO 8601 date and time format
      created_at: ISO 8601 date and time format
      name: {}
      include_archived: {}
- name: search_users
  endpoint:
    path: /users/search
    method: POST
- name: share_inspection
  endpoint:
    path: /audits/share
    method: POST
- name: start_inspection
  endpoint:
    path: /thepubservice_startinspection
    method: POST
- name: update_response_set
  endpoint:
    method: PUT
    path: /response_sets/
- name: update_inspection
  endpoint:
    path: /reference/thepubservice_updateinspection
    method: POST
- name: update_user
  endpoint:
    path: /users/
    method: PATCH
    data_selector: records
    params:
      status: active|inactive
      seat_type: full|lite|free
- name: timeline_comment
  endpoint:
    path: /tasks/v1/timeline/comments
    method: POST
- name: course_statistics
  endpoint:
    path: /training/analytics/v1/courses/statistics
    method: GET
- name: lesson_attempts
  endpoint:
    path: /training/analytics/v1/lessons/attempts
    method: GET
- name: lesson_progress_events
  endpoint:
    path: /training/analytics/v1/lessons/progress/events
    method: GET
- name: lesson_statistics
  endpoint:
    path: /training/analytics/v1/lessons/statistics
    method: GET
- name: rapid_refresh_answers
  endpoint:
    path: /training/analytics/v1/rapidRefresh/answers
    method: GET
- name: slide_statistics
  endpoint:
    path: /training/analytics/v1/slides/statistics
    method: GET
- name: slide_user_statistics
  endpoint:
    path: /training/analytics/v1/users//slides/statistics
    method: GET
- name: survey_answers
  endpoint:
    path: /training/analytics/v1/surveys/answers
    method: GET
    params:
      course_id: null
      lesson_id: null
      user_id: null
- name: survey_question_definitions
  endpoint:
    path: /surveys/questionDefinitions
    method: GET
- name: user_lesson_progress_events
  endpoint:
    path: /training/analytics/v1/users//lessons/progress/events
    method: GET
- name: user_lesson_progress
  endpoint:
    path: /training/analytics/v1/users/{user_id}/lessons/progress
    method: GET
- name: course_collections
  endpoint:
    path: /
    method: GET
    data_selector: null
    params:
      incremental: modification_date
- name: courses_by_collection
  endpoint:
    path: /courses
    method: GET
    params:
      course_collection_id: '{{ course_collection_id }}'
- name: courses
  endpoint:
    path: /
    method: GET
    params:
      publication_status: ''
      locale: ''
      modification_date: ''
      ids: ''
- name: lessons_by_course_id
  endpoint:
    path: /training/courses/v1//lessons
    method: GET
    params:
      course_id: '{{ course_id }}'
- name: individual_leaderboard_rankings
  endpoint:
    path: /training/individualleaderboards/v1/rankings
    method: GET
- name: individual_leaderboards
  endpoint:
    path: /training/individualleaderboards/v1
    method: GET
- name: learning_path
  endpoint:
    path: /{path_id}
    method: GET
- name: learning_paths
  endpoint:
    path: /
    method: GET
- name: rapid_refresh_details
  endpoint:
    path: /rapidrefresh/{rapid_refresh_id}
    method: GET
- name: rapid_refresh
  endpoint:
    path: /trainingrapidrefreshservice_getrapidrefreshget
    method: GET
- name: collections
  endpoint:
    path: /collections
    method: GET
- name: courses
  endpoint:
    path: /courses
    method: GET
- name: paths
  endpoint:
    path: /paths
    method: GET
- name: individual_leaderboards
  endpoint:
    path: /individual_leaderboards
    method: GET
- name: rapid_refresh
  endpoint:
    path: /rapid_refresh
    method: GET
- name: analytics
  endpoint:
    path: /analytics
    method: GET
- name: asset_type
  endpoint:
    path: /assets/v1/types
    method: POST
- name: asset_type
  endpoint:
    path: /assets/v1/types/{id}
    method: GET
- name: asset_fields
  endpoint:
    path: /assets/v1/types//fields/list
    method: GET
- name: asset_type_fields_update
  endpoint:
    path: /assets/v1/types//fields
    method: PUT
- name: webhook_registration
  endpoint:
    path: /webhooks/v1/webhooks
    method: POST
    data_selector: webhook_id
    params:
      trigger_events:
      - TRIGGER_EVENT_INSPECTION_ITEM_UPDATED
      url: https://example.com
- name: inspection
  endpoint:
    path: /audits/{inspection_id}
    method: PUT
    data_selector: items
- name: historical_inspection_data
  endpoint:
    method: GET
- name: modified_inspections
  endpoint:
    method: GET
- name: start_prefill_inspections
  endpoint:
    method: POST
- name: remove_owner_access
  endpoint:
    method: DELETE
- name: update_inspection_responses
  endpoint:
    method: PATCH
- name: add_notes_to_inspection
  endpoint:
    method: POST
- name: user_attributes
  endpoint:
    path: /users/v1/users/{user_id}/attributes
    method: GET
- name: set_user_attributes
  endpoint:
    path: /users/v1/users//attributes
    method: POST
- name: credential_version
  endpoint:
    path: /credentials/v1/credential/version
    method: POST
- name: user_documents_service_delete_all_media_for_document_version
  endpoint:
    path: /userdocumentsservice/deleteallmediafordocumentversionpost
    method: POST
- name: credentials_delete_media
  endpoint:
    path: /credentials/v1/credential/delete-media
    method: POST
- name: credential
  endpoint:
    path: /credentials/v1/credential
    method: DELETE
- name: credential_versions
  endpoint:
    path: /credentials/v1/credential/versions
    method: GET
- name: credentials
  endpoint:
    path: /credentials/v1/credentials
    method: GET
- name: credential_version
  endpoint:
    path: /credentials/v1/credential/version
    method: GET
- name: credential_settings
  endpoint:
    path: /credentials/v1/settings
    method: GET
- name: credential_version_update
  endpoint:
    path: /credentials/v1/credential/version
    method: PUT
    params:
      fields:
      - issue_date
      - expiration_date
      - media_attachments
- name: update_credential_settings
  endpoint:
    path: /credentials/v1/settings
    method: PUT
- name: user_field
  endpoint:
    path: /users/v1/fields
    method: POST
- name: set_user_attributes
  endpoint:
    path: /users/v1/attributes
    method: POST
- name: user_field_service
  endpoint:
    path: /users/v1/fields
    method: DELETE
- name: disable_field_archive
  endpoint:
    path: /users/v1/fields/{id}/disable
    method: POST
- name: restore_user_field
  endpoint:
    path: /users/v1/fields/{id}/restore
    method: POST
- name: user_field_settings
  endpoint:
    path: /users/v1/fields/{id}/settings
    method: POST
- name: user_field_update
  endpoint:
    path: /users/v1/fields/{id}
    method: PATCH
- name: bulk_user_operations
  endpoint:
    path: /users/v1/users/upsert
    method: POST
    params:
      validate_only: true
- name: users_upsert_job
  endpoint:
    path: /users/v1/users/upsert/jobs/
    method: GET
- name: create_or_update_users_job
  endpoint:
    path: /users/v1/users/upsert/jobs
    method: POST
- name: bulk_user_jobs
  endpoint:
    path: /users/v1/users/upsert/jobs/list
    method: GET
- name: users_job
  endpoint:
    path: /users/v1/users/upsert/jobs
    method: POST
    params:
      validate_only: true
- name: user
  endpoint:
    method: GET
- name: user
  endpoint:
    method: POST
- name: user
  endpoint:
    method: PUT
- name: user
  endpoint:
    method: DELETE
- name: permission_set
  endpoint:
    method: POST
- name: permission_set
  endpoint:
    method: GET
- name: permission_set
  endpoint:
    method: GET
- name: user_field
  endpoint:
    method: POST
- name: user_field
  endpoint:
    method: PUT
- name: user_field
  endpoint:
    method: DELETE
- name: user_field
  endpoint:
    method: GET
- name: user_field
  endpoint:
    method: POST
- name: user_field
  endpoint:
    method: POST
- name: user_attribute
  endpoint:
    method: GET
- name: user_attribute
  endpoint:
    method: POST
- name: webhook_registration
  endpoint:
    path: /webhooks
    method: POST
- name: webhook
  endpoint:
    path: /webhooks
    method: DELETE
- name: webhook_token
  endpoint:
    path: /webhooks/v1/token
    method: GET
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
- name: update_webhook
  endpoint:
    path: /webhooks
    method: PUT
- name: webhook
  endpoint:
    path: /reference/webhooks
    method: POST
    data_selector: data
- name: inspection
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION
- name: inspection_metadata
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_METADATA
- name: inspection_has_started
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_HAS_STARTED
- name: inspection_cloned
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_CLONED
- name: inspection_completed_status
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_COMPLETED_STATUS
- name: inspection_location
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_LOCATION
- name: inspection_duration
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_DURATION
- name: inspection_archived_status
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_ARCHIVED_STATUS
- name: inspection_deleted_status
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_DELETED_STATUS
- name: inspection_owner
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_OWNER
- name: inspection_access
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_ACCESS
- name: inspection_organisation
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_ORGANISATION
- name: inspection_item_updated
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_ITEM_UPDATED
- name: inspection_item_site
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_ITEM_SITE
- name: inspection_item_text
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_ITEM_TEXT
- name: inspection_item_temperature
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_ITEM_TEMPERATURE
- name: inspection_item_address
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_ITEM_ADDRESS
- name: inspection_item_asset
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_ITEM_ASSET
- name: inspection_item_datetime
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_ITEM_DATETIME
- name: inspection_item_checkbox
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_ITEM_CHECKBOX
- name: inspection_item_list
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_ITEM_LIST
- name: inspection_item_question
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_ITEM_QUESTION
- name: inspection_item_media
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_ITEM_MEDIA
- name: inspection_item_drawing
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_ITEM_DRAWING
- name: inspection_item_signature
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_ITEM_SIGNATURE
- name: inspection_item_slider
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_ITEM_SLIDER
- name: inspection_item_note
  endpoint:
    params:
      trigger_event: TRIGGER_EVENT_INSPECTION_ITEM_NOTE
- name: trigger_event_action
  endpoint:
    path: /trigger-event/action
    method: GET
    data_selector: event_types
    params:
      trigger_event: TRIGGER_EVENT_ACTION_UPDATED
- name: trigger_event_incident
  endpoint:
    path: /trigger-event/incident
    method: GET
    data_selector: event_types
    params:
      trigger_event: TRIGGER_EVENT_INCIDENT_UPDATED
- name: trigger_event_media
  endpoint:
    path: /trigger-event/media
    method: GET
    data_selector: event_types
    params:
      trigger_event: TRIGGER_EVENT_MEDIA_UPLOADED
- name: audits_search
  endpoint:
    path: /audits/search
    method: GET
    data_selector: audits
    params:
      field:
      - audit_id
      - modified_at
- name: inspection
  endpoint:
    path: /audits/{audit_id}
    method: GET
    data_selector: .
- name: media_item
  endpoint:
    path: /audits/{audit_id}/media/{media_id}
    method: GET
    data_selector: .
notes:
- SCIM support is continuous, JIT is on login
- Limited support from customer service on SSO and provisioning issues
- Microsoft Gallery app does not support SCIM
- Deleted data can only be identified via the activity log, not directly through API
  endpoints for certain objects.
- Power BI Gateway required for scheduled refreshes
- SSO setup requires SafetyCulture Enterprise or Premium Plan
- SafetyCulture uses Auth0 as SSO broker
- Microsoft Gallery app does not support SCIM user provisioning
- Apps are only available to organizations on the Enterprise Plan and to SafetyCulture
  Partners
- Apps can only be managed by users with "Platform management: Organization" permission
- SafetyCulture is not responsible for the content or actions of third-party applications
- All support for apps is provided by the respective app vendor
- Installing apps may pose security or privacy risks; customers should conduct their
  own due diligence
- Some marketplace apps may incur additional costs
- Uses OAuth2 with refresh token
- API endpoints for media attachments allow downloading via GET requests
- API token must be passed in the Authorization header for each request
- Renamed from iAuditor Exporter to SafetyCulture Exporter in version 4.x.x
- Retains API token during updates
- Data includes a range of fields from basic identifiers like 'id' and 'item_id' to
  location data and score metrics.
- Before mapping custom fields, ensure they are created in SafetyCulture; otherwise,
  they will not be synced
- Use the correct SCIM attribute format to avoid sync failures
- Requires SafetyCulture Premium Plan or Enterprise Plan
- User fields must be created in SafetyCulture before they can be synced
- SafetyCulture is not responsible for the content or actions of third-party applications
  ('apps').
- All support for apps is provided by the respective app vendor.
- Customers are responsible for conducting their own due diligence and should only
  install apps from vendors they trust.
- Some marketplace apps may incur additional costs, which must be paid directly by
  the customer to the app vendor.
- API tokens expire after 30 days of inactivity.
- Each organization can only have up to 100 action labels
- Each organization can only have up to 50,000 sites
- Each user can only be a member of up to 20 sites
- All write paths require the "Platform management: Sites" permission
- Deleting folders cannot be undone
- Folder hierarchies have a maximum depth of 3; deeper nesting will fail
- Cannot create circular folder relationships
- Endpoint in Early Access, may not be available for all organizations
- 'Permissions required: Documents: Administration'
- Limitations on file size and types, and number of files per folder
- Documents API is in Early Access and might not be available for all organizations.
- Temporary upload_url valid for 20 minutes.
- Endpoint requires specific permission: 'Platform management: Credentials'
- Can only delete a credential type with no existing credentials
- This endpoint requires the "Platform management: Credentials" permission.
- Endpoint is paginated; default behavior returns only comments unless a parent comment
  is specified
- Requires "Heads Up: Manage" for any Heads Up or "Heads Up; Create" for user-created
    Heads Ups
- This endpoint is deprecated and will be removed in the future; migration to the
  new Create Issue endpoint is recommended.
- Maximum page_size value is 100
- This endpoint is deprecated and will be removed in the future
- Endpoint and response object naming may refer to 'incident' which is synonymous
  with 'issue'.
- Requires Enterprise Plan
- Must be a registered SafetyCulture partner
- Requires "Platform management: Organization" permission
- Requires Enterprise Plan and full seat
- Needs "Platform management: Organization" permission
- Requires Enterprise Plan and registered SafetyCulture partner status
- Web Experience requires a whitelist of hosts
- API will return a 429 HTTP status code with an error message `Too Many Requests`
  when rate limits are exceeded
- Ensure inspections with media are fully synced before export to avoid corrupt files
- Timeouts may occur after 60 seconds; retry with the same data set is recommended
- Report timezone defaults to the timezone of the associated SafetyCulture account
  if not specified
- Requires "Sensors: Manage" permission
- Not intended for provisioning hardware purchased from SafetyCulture
- API used for automating inspections; can pre-fill inspection details from external
  sources
- Access levels during sharing include view, edit, delete
- 'Asynchronous visibility delay: Newly added users may take a few seconds to be visible
  in other endpoints.'
- 'Permission required: ''Platform management: Users'''
- 'Authentication: Bearer token is used as the Authorization header.'
- Uses OAuth2 Bearer token for authentication
- Branch links expire by default one year after creation; expiration extends to one
  year if opened
- This API does not support downloading videos, use Get media download URL instead.
- Starting August 13, 2024, removing users via the web app will be disabled; use the
  API instead.
- A new SafetyCulture organization is created for users removed from their only organization
  unless marked 'inactive'.
- Cannot remove user if they are the only one with 'Administrator' permission.
- The modification dates may not match the exact last modification date due to system
  syncing and updates through the SafetyCulture website.
- Limits apply to the size of pre-fill responses; text responses cannot be more than
  3000 characters long
- Malformed responses typically cause the request to fail; missing 'type' property
  may cause pre-fill responses to be ignored
- Simultaneous updates to the same inspection may result in concurrency errors
- Updating too many items at once may result in a request timeout
- Setting the response to a multiple choice item to an invalid response ID may result
  in no response selected in the inspection
- To update a user, you must be in the same organization as that user.
- All fields except for the username (email address) will be updated immediately.
- Updating a username (email address) will trigger a confirmation email.
- Only once the confirmation email has been actioned will the username (email address)
  be updated.
- Changing a user's status from active to inactive ceases their access to inspection
  data.
- Reactivating a user defaults to a full seat on the Premium plan if no seat type
  is passed.
- Activating a user in a full seat will fail if not enough full seats are purchased.
- Changing seat types to full seats requires enough purchased full seats.
- Requires OAuth2 authentication
- Specific item IDs are needed to update fields in an inspection
- Media IDs and tokens for document versions are conditionally included based on ownership
  and permissions
- Requires "Platform management: Credentials" permission
- Needs "Platform management: Users" permission
- Full seat is necessary
- Bulk user management APIs are in Early Access and may change without notice
- Maximum of 2000 users per request
- Bulk user management APIs are in Early Access; may change without notice
- Webhooks are set up per organization, not per user account.
- Webhook retries are made with a delay of 100 seconds, up to 4 attempts.
- No guarantee is provided for the delivery timing or completion of webhooks.
- Inspections synced from mobile devices trigger webhooks only when they are synced
  to the SafetyCulture server.
- Ensure media is fully synced before exporting reports to avoid corruption.
- API tokens expire after 30 days of inactivity
- The API uses OAuth 2.0 with Resource Owner Password Credentials Grant
- API uses bearer token authentication included in the header.
errors:
- 401 Unauthorized: Check if the API token is correct or expired
- REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency
- Configuration Error: Check if SAML 2.0 is properly utilized
- 401 Unauthorized: Recheck OAuth scopes or token expiration
- 401 Unauthorized: Check if the access_token is missing, invalid, or expired
- 403 Forbidden: Ensure appropriate permissions are assigned on the SafetyCulture
    account
- 504 Gateway Timeout: Reduce the export.inspection.limit to lower data processing
    per batch
- Test connection failure: Ensure the tenant URL and secret token are entered correctly
- User cannot be provisioned: Check attribute mappings and verify that the user already
    exists
- Custom fields are not syncing: Confirm that the fields exist in SafetyCulture before
    mapping
- 400: Invalid asset type ID or field not associated with the asset type
- REASON_GROUP_REFERENCE_AMBIGUOUS: Group reference is ambiguous, please use a unique
    identifier
- REASON_USER_EXISTS: A user with this username already exists in the organization
- REASON_USER_NOT_FOUND: The user ID does not match any existing user in the organization
- REASON_DUPLICATE_ROW: Duplicate user entries were detected in the request
- REASON_DUPLICATE_USERNAME: The username appears more than once in the request or
    already exists in the organization
- REASON_MUST_HAVE_ID_OR_USERNAME: Each user record must include either a user ID
    or username
- REASON_INVALID_ID_FORMAT: The user ID is not in a valid format
- REASON_INVALID_USERNAME_FORMAT: The username must be a valid email address
- REASON_ID_USERNAME_MISMATCH: The provided username does not match the existing username
    for this user ID; Username updates are not currently supported
- REASON_FIELD_MANDATORY_FOR_CREATION: A required field is missing for creating a
    new user
- REASON_CANNOT_CREATE_DEACTIVATED_USERS: Users must be created as `active`; Creating
    a deactivated user is not allowed
- REASON_FIELD_CHANGE_NOT_ALLOWED_FOR_CALLER: You don't have permission to change
    the field for this action type
- REASON_INVALID_SEAT_PERMISSION_SET_COMBINATION: The permission set and seat type
    combination is not valid; Some permission sets can only be assigned to specific
    seat types
- REASON_INVALID_VALUE_PASSWORD_TOO_WEAK: The password does not meet the required
    strength criteria
- REASON_INVALID_VALUE_PASSWORD_CANNOT_UPDATE_USERS_PASSWORD: Passwords for existing
    users cannot be updated through this API
- REASON_INVALID_VALUE_REFERENCE_NAME_DOES_NOT_FOUND: The referenced site, group,
    or attribute name could not be found
- REASON_INVALID_VALUE_REFERENCE_ID_DOES_NOT_FOUND: The referenced site, group, or
    attribute ID could not be found
- REASON_PERMISSION_SET_PERMISSION_DENIED: You don't have permission to modify other
    users' permission sets
- REASON_PERMISSION_SET_USER_NOT_ACTIVE: Permission sets cannot be modified for inactive
    users; Activate the user first
- REASON_PERMISSION_SET_NOT_FOUND: The specified permission set was not found in the
    organization
- REASON_INVALID_PERMISSION_SET_FOR_ORGANIZATION_TIER: The permission set cannot be
    used with your organization's current plan; For example, custom permission sets
    are only available on Premium Plan or Enterprise Plan
- REASON_USER_ATTRIBUTE_DUPLICATE_ATTRIBUTE: The same user attribute was specified
    multiple times for this user in the request
- REASON_USER_ATTRIBUTE_NOT_FOUND: The user attribute could not be found in the organization
- REASON_USER_ATTRIBUTE_INVALID_ATTRIBUTE_TYPE: The attribute type is not supported;
    This may occur if a new attribute type is added before it's supported by the endpoint
- REASON_USER_ATTRIBUTE_INVALID_SELECT_VALUE: The provided value is not one of the
    allowed options for this select-type attribute
- REASON_USER_ATTRIBUTE_INVALID_USER_ID_VALUE: The value is not a valid user ID
- REASON_USER_ATTRIBUTE_INVALID_TIMESTAMP_VALUE: The value is not a valid timestamp
- REASON_USER_ATTRIBUTE_INVALID_STRING_VALUE: The string value is not valid; For example,
    some fields do not allow empty strings
- REASON_INVALID_SEAT_TYPE_FOR_ORGANIZATION_TIER: The seat type is not supported on
    your organization's current plan; For example, lite seats aren't available on
    the Free Plan
- REASON_SEAT_LIMIT_REACHED: The request would exceed your organization's seat limit
- REASON_GROUP_NOT_FOUND: The group could not be found in the organization
- REASON_GROUP_DUPLICATE_ENTRY: The same group was listed more than once for this
    user
- REASON_GROUP_CANNOT_ASSIGN_TO_DEACTIVATED_USER: Groups cannot be assigned to users
    who are deactivated or will be deactivated
- REASON_GROUP_INVALID_REMOVE_REFERENCE: The group reference specified for removal
    is invalid
- REASON_GROUP_REFERENCE_AMBIGUOUS: Multiple groups share the same name; Use a group
    ID instead
- REASON_SITE_NOT_FOUND: The site could not be found in the organization
- REASON_SITE_DUPLICATE_ENTRY: The same site was listed more than once for this user
- REASON_SITE_CANNOT_ASSIGN_TO_DEACTIVATED_USER: Sites cannot be assigned to users
    who are deactivated or will be deactivated
- REASON_USER_ALREADY_ASSIGNED_TO_ANCESTOR_SITE: The user is already assigned to a
    higher-level site; For example, this happens if a user is assigned to a site under
    a parent country they belong to
- REASON_SITE_INVALID_REMOVE_REFERENCE: The site reference specified for removal is
    invalid
- REASON_SITE_ASSOCIATION_LIMIT_REACHED: The maximum number of site associations for
    this user has been reached
- REASON_SITE_REFERENCE_AMBIGUOUS: Multiple sites share the same name; Use a site
    ID instead
- REASON_USER_ATTRIBUTE_DISABLED: The user attribute is currently disabled and cannot
    be used
- REASON_LAST_ADMINISTRATOR: The requested change would remove the organization's
    last administrator, which is not allowed
- REASON_FIELD_VALUE_INVALID_MIN_LENGTH: The value is shorter than the minimum allowed
    length
- REASON_FIELD_VALUE_INVALID_MAX_LENGTH: The value exceeds the maximum allowed length
- REASON_COMPANY_NOT_FOUND: The company could not be found in the organization
- REASON_COMPANY_DUPLICATE_ENTRY: The same company was listed more than once for this
    user
- REASON_COMPANY_CANNOT_ASSIGN_TO_DEACTIVATED_USER: Companies cannot be assigned to
    users who are deactivated or will be deactivated
- REASON_COMPANY_INVALID_REMOVE_REFERENCE: The company reference specified for removal
    is invalid
- REASON_COMPANY_MEMBERSHIP_CHANGE_NOT_ALLOWED_FOR_CALLER: You don't have permission
    to change user membership for this company
- 429 Too Many Requests: Throttle API calls or reduce frequency
- 401 Unauthorized: Recheck API token validity or permissions
- 'Unauthorized: Check OAuth configuration and token permissions'
- 'Date format error: Ensure dates are in ISO 8601 format.'
- bulk user operations errors: See error codes and meanings for details
- 401 Unauthorized: Ensure the Authorization header is correctly formed and the token
    is not expired
- 400 Bad Request: Make sure to include required fields in your request parameters
auth_info:
  mentioned_objects:
  - API token
  - Bearer token
  - activity log
  - SAML 2.0
  - Auth0
  - Active Directory Federation Services (ADFS)
  - Platform management: Organization
  - OauthToken
  - OAuthToken
  - SCIM
  - SCIM endpoint
  - Assets: Manage
  - Credentials
  - Organization
  - Override permissions
  - Platform management: Sites
  - Bearer
  - Platform management: Credentials
  - Manage all data permission
  - Enterprise Plan
  - Registered SafetyCulture partner
  - Platform management: Organization permission
  - Full seat
  - Access
  - Bearer Token
  - Update a user
  - Platform management: Users
  - ACCESS_TOKEN
  - SafetyCulture Premium Plan
client:
  base_url: https://api.safetyculture.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
    flow: refresh_token
  headers:
    Accept: application/json
    x-ratelimit-limit: The rate limit credit for that given endpoint
    x-ratelimit-remaining: The number of requests left for the window
    x-ratelimit-reset: The number of seconds until this window resets
    x-safetyculture-signature: HMAC-SHA256
  paginator:
    type: cursor
    cursor_path: nextRecordsUrl
    cursor_param: nextUrl
    page_size_param: pageSize
    default_page_size: 200
source_metadata: null
