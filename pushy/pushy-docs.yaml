resources:
- name: send_notifications
  endpoint:
    path: /push
    method: POST
- name: notification_status
  endpoint:
    path: /pushes/PUSH_ID
    method: GET
- name: notification_deletion
  endpoint:
    path: /pushes/PUSH_ID
    method: DELETE
- name: device_info
  endpoint:
    path: /devices/TOKEN
    method: GET
- name: device_presence
  endpoint:
    path: /devices/presence
    method: POST
- name: pubsub_topics
  endpoint:
    path: /topics
    method: GET
- name: pubsub_subscribers
  endpoint:
    path: /topics/TOPIC
    method: GET
- name: pubsub_subscribe
  endpoint:
    path: /topics/subscribe
    method: POST
- name: pubsub_unsubscribe
  endpoint:
    path: /topics/unsubscribe
    method: POST
- name: Send Notifications API
  endpoint:
    path: /api/send-notifications
    method: POST
- name: Notification Status API
  endpoint:
    path: /api/notification-status
    method: GET
- name: Notification Deletion API
  endpoint:
    path: /api/notification-deletion
    method: DELETE
- name: Device Info API
  endpoint:
    path: /api/device
    method: GET
- name: Device Presence API
  endpoint:
    path: /api/device-presence
    method: GET
- name: Pub/Sub Subscribe API
  endpoint:
    path: /api/pubsub-subscribe
    method: POST
- name: Pub/Sub Unsubscribe API
  endpoint:
    path: /api/pubsub-unsubscribe
    method: DELETE
- name: Pub/Sub Topics API
  endpoint:
    path: /api/pubsub-topics
    method: GET
- name: Pub/Sub Subscribers API
  endpoint:
    path: /api/pubsub-subscribers
    method: GET
- name: register_devices
  endpoint:
    path: /docs/ios/register-devices
    method: POST
    data_selector: deviceToken
- name: send_notifications
  endpoint:
    path: /api/send-notifications
    method: POST
    data_selector: data
    params: {}
- name: notification_status
  endpoint:
    path: /api/notification-status
    method: GET
    data_selector: status
    params: {}
- name: notification_deletion
  endpoint:
    path: /api/notification-deletion
    method: DELETE
    data_selector: result
    params: {}
- name: device_info
  endpoint:
    path: /api/device
    method: GET
    data_selector: device_info
    params: {}
- name: device_presence
  endpoint:
    path: /api/device-presence
    method: GET
    data_selector: presence
    params: {}
- name: pubsub_subscribe
  endpoint:
    path: /api/pubsub-subscribe
    method: POST
    data_selector: subscription
    params: {}
- name: pubsub_unsubscribe
  endpoint:
    path: /api/pubsub-unsubscribe
    method: DELETE
    data_selector: unsubscription
    params: {}
- name: pubsub_topics
  endpoint:
    path: /api/pubsub-topics
    method: GET
    data_selector: topics
    params: {}
- name: pubsub_subscribers
  endpoint:
    path: /api/pubsub-subscribers
    method: GET
    data_selector: subscribers
    params: {}
- name: APNs Auth
  endpoint:
    path: /api/apns/auth
    method: POST
    data_selector: data
    params: {}
- name: send_notifications
  endpoint:
    path: /api/send-notifications
    method: POST
    data_selector: data
    params: {}
- name: send_notifications
  endpoint:
    path: /api/send-notifications
    method: POST
- name: notification_status
  endpoint:
    path: /api/notification-status
    method: GET
- name: notification_deletion
  endpoint:
    path: /api/notification-deletion
    method: DELETE
- name: device_info
  endpoint:
    path: /api/device
    method: GET
- name: device_presence
  endpoint:
    path: /api/device-presence
    method: GET
- name: pubsub_subscribe
  endpoint:
    path: /api/pubsub-subscribe
    method: POST
- name: pubsub_unsubscribe
  endpoint:
    path: /api/pubsub-unsubscribe
    method: DELETE
- name: pubsub_topics
  endpoint:
    path: /api/pubsub-topics
    method: GET
- name: pubsub_subscribers
  endpoint:
    path: /api/pubsub-subscribers
    method: GET
- name: device_registration
  endpoint:
    path: /register/device
    method: GET
    data_selector: deviceToken
    params: {}
- name: Subscribe to Topics
  endpoint:
    path: /api/pubsub-subscribe
    method: POST
- name: Send Notifications
  endpoint:
    path: /api/send-notifications
    method: POST
- name: Send Notifications API
  endpoint:
    path: /api/send-notifications
    method: POST
- name: register_device
  endpoint:
    path: /register/device
    method: GET
    data_selector: deviceToken
    params: {}
- name: send_notifications
  endpoint:
    path: /api/send-notifications
    method: POST
    data_selector: data
- name: notification_status
  endpoint:
    path: /api/notification-status
    method: GET
    data_selector: data
- name: notification_deletion
  endpoint:
    path: /api/notification-deletion
    method: DELETE
    data_selector: data
- name: device_info
  endpoint:
    path: /api/device
    method: GET
    data_selector: data
- name: device_presence
  endpoint:
    path: /api/device-presence
    method: GET
    data_selector: data
- name: pubsub_subscribe
  endpoint:
    path: /api/pubsub-subscribe
    method: POST
    data_selector: data
- name: pubsub_unsubscribe
  endpoint:
    path: /api/pubsub-unsubscribe
    method: POST
    data_selector: data
- name: pubsub_topics
  endpoint:
    path: /api/pubsub-topics
    method: GET
    data_selector: data
- name: pubsub_subscribers
  endpoint:
    path: /api/pubsub-subscribers
    method: GET
    data_selector: data
- name: subscribe_to_topics
  endpoint:
    path: /api/pubsub/subscribe
    method: POST
- name: send_notifications
  endpoint:
    path: /api/send-notifications
    method: POST
- name: send_notifications
  endpoint:
    path: /docs/api/send-notifications
    method: POST
    data_selector: data
    params: {}
- name: Send Notifications
  endpoint:
    path: /api/send-notifications
    method: POST
    data_selector: notifications
- name: Send Notifications API
  endpoint:
    path: /api/send-notifications
    method: POST
    data_selector: notifications
    params: {}
- name: Notification Status API
  endpoint:
    path: /api/notification-status
    method: GET
    data_selector: status
    params: {}
- name: Notification Deletion API
  endpoint:
    path: /api/notification-deletion
    method: DELETE
    data_selector: deletion
    params: {}
- name: Device Info API
  endpoint:
    path: /api/device
    method: GET
    data_selector: device_info
    params: {}
- name: Device Presence API
  endpoint:
    path: /api/device-presence
    method: GET
    data_selector: device_presence
    params: {}
- name: Pub/Sub Subscribe API
  endpoint:
    path: /api/pubsub-subscribe
    method: POST
    data_selector: subscription
    params: {}
- name: Pub/Sub Unsubscribe API
  endpoint:
    path: /api/pubsub-unsubscribe
    method: POST
    data_selector: unsubscription
    params: {}
- name: Pub/Sub Topics API
  endpoint:
    path: /api/pubsub-topics
    method: GET
    data_selector: topics
    params: {}
- name: Pub/Sub Subscribers API
  endpoint:
    path: /api/pubsub-subscribers
    method: GET
    data_selector: subscribers
    params: {}
- name: send_notifications
  endpoint:
    path: /push
    method: POST
    data_selector: response
    params:
      api_key: SECRET_API_KEY
- name: send_notifications
  endpoint:
    path: /push
    method: POST
    params:
      api_key: SECRET_API_KEY
- name: register_device
  endpoint:
    path: /register/device
    method: GET
    data_selector: null
    params:
      token: token
- name: send_notifications
  endpoint:
    path: /push
    method: POST
- name: send_notifications
  endpoint:
    path: /push
    method: POST
    data_selector: success
- name: notification_status
  endpoint:
    path: /pushes/PUSH_ID
    method: GET
    params:
      api_key: SECRET_API_KEY
- name: notification_deletion
  endpoint:
    path: /pushes/PUSH_ID
    method: DELETE
    params:
      api_key: SECRET_API_KEY
- name: device_info
  endpoint:
    path: /devices/DEVICE_TOKEN
    method: GET
    params: {}
- name: device_presence
  endpoint:
    path: /devices/presence
    method: POST
    data_selector: presence
    params:
      api_key: SECRET_API_KEY
- name: subscribe
  endpoint:
    path: /topics/subscribe
    method: POST
- name: pubsub_unsubscribe
  endpoint:
    path: /topics/unsubscribe
    method: POST
- name: topics
  endpoint:
    path: /topics
    method: GET
    data_selector: topics
    params:
      api_key: SECRET_API_KEY
- name: pubsub_subscribers
  endpoint:
    path: /topics/TOPIC
    method: GET
    data_selector: subscribers
    params:
      api_key: SECRET_API_KEY
- name: send_notifications
  endpoint:
    path: /push
    method: POST
    data_selector: response
    params:
      api_key: SECRET_API_KEY
- name: send_notifications
  endpoint:
    path: /push
    method: POST
    data_selector: response
    params: {}
- name: send_notifications
  endpoint:
    path: /api/send-notifications
    method: POST
    data_selector: response
    params: {}
notes:
- Enable the Push Notifications capability for your app to register for and receive
  push notifications.
- Xcode should display two checkmarks indicating that the capability was successfully
  enabled.
- The iOS simulator cannot register for, nor receive push notifications (except on
  Apple Silicon M1, M2, and T2 Macs, and with Xcode 14+, and macOS 13+).
- Keep track of the assigned Key ID for APNs Auth Key.
- Avoid revoking your APNs Auth Key in the Apple Developer Center.
- Pushy.register(Context) is a synchronous, blocking call, so execute it from a background
  thread.
- Make sure to request the android.permission.VIBRATE permission within your AndroidManifest.xml
  if you'd like the notification to vibrate the device.
- Web Push on Android is currently not available in mainland China as the technology
  makes use of FCM behind-the-scenes, which is blocked in China.
- Your website or web app must be served over HTTPS for Web Push integration to work
  (except when testing / developing on http://localhost).
- Your website must be installed as a PWA (your users will first need to click the
  'Share' button -> 'Add to Home Screen' before they can sign up for push notifications).
- Registration will fail if the user declines the Web Push permission dialog.
- No credit card needed. Upgrade to the Pro plan when you're ready by visiting the
  Billing page.
- Ensure the Android Package Name & iOS Bundle ID match the configured project files.
- No credit card needed for the trial
- Ensure Android Package Name & iOS Bundle ID match project files
- You may currently only register one notification listener at a time for your app.
- No credit card needed to sign up for a trial
- Registration will fail if the user declines the Web Push permission dialog, in which
  case notification preferences for your hostname must be cleared in the browser settings
  for the dialog to be displayed again.
- Users need to be uniquely identified to receive push notifications.
- No credit card needed for trial
- If you have already created an app in the Pushy Dashboard for another platform,
  simply configure your existing dashboard app with your Android Package Name & iOS
  Bundle ID in the App Settings tab.
- Avoid revoking your APNs Auth Key in the Apple Developer Center
- Ensure Android Package Name & iOS Bundle ID match project files.
- Pushy.Register(Context) is a synchronous, blocking call.
- Pushy.Register(Context) is a synchronous, blocking call, so make sure to only execute
  it from within a background thread.
- Make sure to execute this method from a background thread, similar to Pushy.Register(Context).
- Make sure to replace SECRET_API_KEY with your app's Secret API Key
- Make sure to replace SECRET_API_KEY with your app's Secret API Key, available in
  the Pushy Dashboard.
- Make sure to replace SECRET_API_KEY with your app's Secret API Key, available in
  the Pushy Dashboard
- Never expose your application's Secret API Key in your client code.
errors:
- 'INVALID_PARAM: An API parameter is missing or invalid'
- 'INVALID_API_KEY: The SECRET_API_KEY you used to authenticate is invalid'
- 'AUTH_LIMIT_EXCEEDED: Too many attempts to authenticate with an invalid SECRET_API_KEY'
- 'ACCOUNT_SUSPENDED: Your account has been suspended due to a billing issue or platform
  abuse'
- 'RATE_LIMIT_EXCEEDED: Your account has exceeded the API requests per minute limit'
- 'INTERNAL_SERVER_ERROR: Returned in the rare event of an unexpected uptime incident'
- '401 Unauthorized: Check your API key or permissions'
- 'NO_RECIPIENTS: The `to` parameter did not resolve to any recipients, either due
  to invalid device tokens, or Pub/Sub topic(s) with zero subscribers.'
- 'NO_APNS_AUTH: Your app needs to be configured with an [APNs Auth Key] to send notifications
  to iOS devices.'
- 'PAYLOAD_LIMIT_EXCEEDED: Your `data` payload has exceeded **4kb** in stringified
  JSON character length.'
- 'INVALID_PUSH_ID: The push notification ID provided is invalid.'
- 'PUSH_SCHEDULED: The push notification is scheduled for future delivery, please
  try again after the scheduled delivery time elapses.'
- 'INVALID_PUSH_ID: The PUSH_ID provided is invalid or no longer exists, or the push
  was not sent from the app whose SECRET_API_KEY you are using to authenticate.'
- 'INVALID_DEVICE_TOKEN: We could not find a device with that token.'
- 'APP_MISMATCH: The device token is registered to a different app than the one whose
  SECRET_API_KEY you are using to authenticate.'
- 'NO_RESULTS: We could not find any devices with those tokens.'
- 'INVALID_DEVICE_TOKEN: The provided device token is invalid.'
- 'INVALID_DEVICE_TOKEN: The device token provided is invalid or no longer exists,
  or the device is not registered to the app whose SECRET_API_KEY you are using to
  authenticate.'
- 'INVALID_API_KEY: The Secret API Key you used to authenticate is invalid.'
- 'error: Error message from the Pushy API.'
- 'HTTPError: Pushy API returned HTTP error'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.pushy.me
  auth:
    type: apikey
  headers:
    Content-type: application/json
source_metadata: null
