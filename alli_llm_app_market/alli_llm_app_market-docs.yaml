resources:
- name: llm_app_list_search
  endpoint:
    path: /webapi/apps
    method: GET
    data_selector: result
    params: {}
- name: run_llm_app
  endpoint:
    path: /webapi/apps/:app_id/run
    method: POST
    data_selector: responses
    params: {}
- name: apps
  endpoint:
    path: /webapi/apps
    method: GET
    data_selector: result
    params: {}
- name: run_app
  endpoint:
    path: /webapi/apps/{app_id}/run
    method: POST
    data_selector: result
    params: {}
- name: upload_file
  endpoint:
    path: /webapi/upload_file
    method: POST
    data_selector: id
    params: {}
- name: agents
  endpoint:
    path: /webapi/v2/agents
    method: GET
    data_selector: agents
    params:
      offset: 0
      limit: 100
- name: single_action_app_tools
  endpoint:
    path: /webapi/agent_builder/single_action_app_tools
    method: GET
    data_selector: tools
    params: {}
- name: single_action_app_tool
  endpoint:
    path: /webapi/agent_builder/single_action_app_tool/{tool_name}
    method: GET
    data_selector: tool
    params: {}
- name: agent_management
  endpoint:
    path: /webapi/agent_management
    method: POST
    data_selector: result
    params: {}
- name: bulk_user_actions
  endpoint:
    path: /webapi/v2/users/bulk
    method: POST
    data_selector: result
    params: {}
- name: get_user
  endpoint:
    path: /webapi/v2/user/{own_user_id}
    method: GET
    data_selector: result
    params: {}
- name: move_knowledge_base_nodes
  endpoint:
    path: /webapi/v2/knowledge_base_nodes/move/bulk
    method: POST
    data_selector: moved_kb_node_ids
    params: {}
- name: upload_knowledge_base_node
  endpoint:
    path: /webapi/v2/knowledge_base_nodes/upload
    method: POST
    data_selector: result
    params: {}
- name: upload_from_aws_s3
  endpoint:
    path: /webapi/v2/knowledge_base_nodes/upload_from_aws_s3
    method: POST
    data_selector: result
    params: {}
- name: upload_from_azure_blob
  endpoint:
    path: /webapi/v2/knowledge_base_nodes/upload_from_azure_blob
    method: POST
    data_selector: result
    params: {}
- name: knowledge_base_nodes_search
  endpoint:
    path: /webapi/v2/knowledge_base_nodes/search
    method: POST
    data_selector: result.nodes
    params:
      limit: 10
- name: knowledge_base_nodes_content_search
  endpoint:
    path: /webapi/v2/knowledge_base_nodes/content_search
    method: POST
    data_selector: result.nodes
    params:
      limit: 10
- name: knowledge_base_node
  endpoint:
    path: /webapi/v2/knowledge_base_nodes/{node_id}
    method: GET
    data_selector: result
- name: update_knowledge_base_node
  endpoint:
    path: /webapi/v2/knowledge_base_nodes/{node_id}
    method: PUT
    data_selector: result
- name: delete_knowledge_base_node
  endpoint:
    path: /webapi/v2/knowledge_base_nodes/{node_id}
    method: DELETE
- name: knowledge_base_diff
  endpoint:
    path: /webapi/v2/knowledge_base_diff
    method: POST
    data_selector: result
- name: download_document_by_name
  endpoint:
    path: /download_document_by_name/{project_id}
    method: GET
    data_selector: ''
- name: single_document
  endpoint:
    path: /webapi/single_document
    method: GET
    data_selector: result
- name: upload_file
  endpoint:
    path: /webapi/upload_file
    method: POST
    data_selector: result
- name: upload_from_s3
  endpoint:
    path: /webapi/upload_from_s3
    method: POST
    data_selector: result
- name: check_file_status
  endpoint:
    path: /webapi/check_file_status
    method: GET
    data_selector: result
- name: update_kb_name
  endpoint:
    path: /webapi/update_kb_name
    method: POST
    data_selector: result
- name: search_document_by_title
  endpoint:
    path: /webapi/search_document_by_title
    method: GET
    data_selector: result
- name: delete_file
  endpoint:
    path: /webapi/delete_file
    method: POST
    data_selector: result
- name: list_documents
  endpoint:
    path: /webapi/knowledge_bases
    method: GET
    data_selector: result.items
    params: {}
- name: preview_documents
  endpoint:
    path: /webapi/knowledge_base_preview
    method: GET
    data_selector: result
    params:
      id: string
      pageNo: string
- name: update_documents
  endpoint:
    path: /webapi/update_document
    method: POST
    data_selector: result
    params:
      id: string
      footerTitle: string
      footerUrl: string
      hashtags: string[]
- name: toggle_documents
  endpoint:
    path: /webapi/toggle_documents
    method: POST
    data_selector: result
    params:
      use: boolean
      ids: string[]
- name: create_folder
  endpoint:
    path: /webapi/v2/folders
    method: POST
    data_selector: Response
    params: {}
- name: update_folder
  endpoint:
    path: /webapi/v2/folders/{folder_id}
    method: PUT
    data_selector: Response
    params: {}
- name: highlight
  endpoint:
    path: /webapi/v2/highlights/{clue_id}
    method: GET
    data_selector: HighlightResponse
    params: {}
- name: get_list_conversations
  endpoint:
    path: /webapi/v2/conversations
    method: GET
    data_selector: conversations
    params:
      pageSize: '50'
- name: set_conversations
  endpoint:
    path: /webapi/v2/conversations/bulk_update
    method: POST
    data_selector: 'null'
    params: {}
- name: get_conversation_by_id
  endpoint:
    path: /webapi/v2/conversations/{conversation_id}
    method: GET
    data_selector: id
    params: {}
- name: set_conversation
  endpoint:
    path: /webapi/v2/conversations/{conversation_id}
    method: PATCH
    data_selector: id
    params: {}
- name: list_conversation_chats
  endpoint:
    path: /webapi/v2/conversations/{conversation_id}/chats
    method: GET
    data_selector: chats
    params:
      pageNo: '1'
- name: get_conversation_state_by_id
  endpoint:
    path: /webapi/v2/conversations/{conversation_id}/running
    method: GET
    data_selector: isRunning
    params: {}
- name: stop_conversation
  endpoint:
    path: /webapi/v2/conversations/{conversation_id}/stop
    method: POST
    data_selector: 'null'
    params: {}
- name: delete_conversation_chat_by_id
  endpoint:
    path: /webapi/v2/conversations/{conversation_id}/chats/{chat_id}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: update_conversation_title
  endpoint:
    path: /webapi/v2/conversations/{conversation_id}/title
    method: PUT
    data_selector: Response
    params: {}
- name: post_feedbacks
  endpoint:
    path: /webapi/v2/conversations/{conversation_id}/chats/{chat_id}/feedback
    method: POST
    data_selector: Response
    params: {}
- name: daily_conversation_count
  endpoint:
    path: /webapi/conversation_daily_count
    method: GET
    data_selector: result
    params: {}
- name: list_conversation_categories
  endpoint:
    path: /webapi/v2/conversation_categories
    method: GET
    data_selector: categories
- name: create_conversation_category
  endpoint:
    path: /webapi/v2/conversation_categories
    method: POST
    data_selector: categoryId
- name: delete_conversation_category
  endpoint:
    path: /webapi/v2/conversation_categories/{conversation_category_id}
    method: DELETE
- name: select_answer
  endpoint:
    path: /webapi/faq/select_answer
    method: POST
    data_selector: result
    params: {}
- name: search_from_q_and_a
  endpoint:
    path: /webapi/faq
    method: POST
    data_selector: result
    params: {}
- name: get_single_faq
  endpoint:
    path: /webapi/single_faq
    method: GET
    data_selector: result
    params: {}
- name: list_faqs
  endpoint:
    path: /webapi/faqs
    method: GET
    data_selector: results
    params: {}
- name: search_q_and_as
  endpoint:
    path: /webapi/faqs
    method: POST
    data_selector: results
    params: {}
- name: add_or_update_faq
  endpoint:
    path: /webapi/register_faq
    method: POST
    data_selector: result
    params: {}
- name: register_faq
  endpoint:
    path: /webapi/register_faq
    method: PUT
    data_selector: result
    params: {}
- name: delete_faq
  endpoint:
    path: /webapi/delete_faq
    method: POST
    data_selector: result
    params: {}
- name: upload_faq_file
  endpoint:
    path: /webapi/upload_faq_file
    method: POST
    data_selector: result
    params: {}
- name: faq_feedback
  endpoint:
    path: /webapi/faq_feedback
    method: POST
    data_selector: result
    params: {}
- name: faq_histories
  endpoint:
    path: /webapi/faq_histories
    method: GET
    data_selector: result
    params: {}
- name: faq_candidates
  endpoint:
    path: /webapi/faq_candidates
    method: GET
    data_selector: result
    params: {}
- name: faq_daily_count
  endpoint:
    path: /webapi/faq_daily_count
    method: GET
    data_selector: result
    params: {}
- name: faq_daily_analytics
  endpoint:
    path: /webapi/faq_daily_analytics
    method: GET
    data_selector: result
    params: {}
- name: add_faq_candidates
  endpoint:
    path: /webapi/add_faq_candidates
    method: POST
    data_selector: result
    params: {}
- name: user_feedback
  endpoint:
    path: /webapi/mrc/user_feedback
    method: POST
    data_selector: result
    params: {}
- name: mrc_feedbacks
  endpoint:
    path: /webapi/mrc_feedbacks
    method: GET
    data_selector: result
    params: {}
- name: mrc_feedback
  endpoint:
    path: /webapi/mrc_feedback
    method: POST
    data_selector: result
    params: {}
- name: mrc_histories
  endpoint:
    path: /webapi/mrc_histories
    method: GET
    data_selector: result
    params: {}
- name: apps
  endpoint:
    path: /webapi/apps
    method: GET
    data_selector: result
- name: post_apps
  endpoint:
    path: /webapi/apps
    method: POST
    data_selector: result
- name: execute_skill
  endpoint:
    path: /webapi/skill
    method: POST
    data_selector: result
- name: generative_answer
  endpoint:
    path: /webapi/generative_answer
    method: POST
    data_selector: answer
- name: start_conversation
  endpoint:
    path: /webapi/start_conversation
    method: POST
    data_selector: result
- name: end_conversation
  endpoint:
    path: /webapi/end_conversation_by_agent
    method: POST
    data_selector: result
- name: send_chat
  endpoint:
    path: /webapi/send_chat
    method: POST
    data_selector: result
- name: knowledge_base_auto_hashtag_feedback
  endpoint:
    path: /webapi/kb_auto_hashtag_feedback
    method: POST
    data_selector: result
- name: get_all_hashtags
  endpoint:
    path: /webapi/hashtags
    method: GET
    data_selector: result
- name: knowledge_base_auto_hashtag
  endpoint:
    path: /webapi/kb_auto_hashtag
    method: POST
    data_selector: result
- name: retrieval
  endpoint:
    path: /webapi/retrieval
    method: POST
    data_selector: result
    params: {}
- name: summary_analytics
  endpoint:
    path: /webapi/summary_analytics
    method: GET
    data_selector: result
    params: {}
- name: Agents
  endpoint:
    path: /api/agents
    method: GET
- name: Users
  endpoint:
    path: /api/users
    method: GET
- name: Knowledge_base_nodes
  endpoint:
    path: /api/knowledge_base_nodes
    method: GET
- name: Knowledge_bases
  endpoint:
    path: /api/knowledge_bases
    method: GET
- name: Folders
  endpoint:
    path: /api/folders
    method: GET
- name: Highlights
  endpoint:
    path: /api/highlights
    method: GET
- name: Conversations
  endpoint:
    path: /api/conversations
    method: GET
- name: Conversation_categories
  endpoint:
    path: /api/conversation_categories
    method: GET
- name: Faqs
  endpoint:
    path: /api/faqs
    method: GET
- name: Mrcs
  endpoint:
    path: /api/mrcs
    method: GET
- name: Apps
  endpoint:
    path: /api/apps
    method: GET
- name: Hashtags
  endpoint:
    path: /api/hashtags
    method: GET
- name: Retrieval
  endpoint:
    path: /api/retrieval
    method: GET
- name: Others
  endpoint:
    path: /api/others
    method: GET
- name: agents
  endpoint:
    path: /webapi/v2/agents
    method: GET
    data_selector: agents
    params:
      offset: 0
      limit: 100
- name: single_action_app_tools
  endpoint:
    path: /webapi/agent_builder/single_action_app_tools
    method: GET
    data_selector: tools
    params: {}
- name: single_action_app_tool
  endpoint:
    path: /webapi/agent_builder/single_action_app_tool/{tool_name}
    method: GET
    data_selector: tool
    params: {}
- name: agent_management
  endpoint:
    path: /webapi/agent_management
    method: POST
    data_selector: result
    params: {}
- name: bulk_user_operation
  endpoint:
    path: /webapi/v2/users/bulk
    method: POST
    data_selector: result
    params: {}
- name: get_user
  endpoint:
    path: /webapi/v2/user/{own_user_id}
    method: GET
    data_selector: result
    params: {}
- name: move_bulk
  endpoint:
    path: /webapi/v2/knowledge_base_nodes/move/bulk
    method: POST
    data_selector: moved_kb_node_ids
    params: {}
- name: upload
  endpoint:
    path: /webapi/v2/knowledge_base_nodes/upload
    method: POST
    data_selector: result
    params: {}
- name: upload_from_aws_s3
  endpoint:
    path: /webapi/v2/knowledge_base_nodes/upload_from_aws_s3
    method: POST
    data_selector: result
    params: {}
- name: upload_from_azure_blob
  endpoint:
    path: /webapi/v2/knowledge_base_nodes/upload_from_azure_blob
    method: POST
    data_selector: result
    params: {}
- name: knowledge_base_nodes_search
  endpoint:
    path: /webapi/v2/knowledge_base_nodes/search
    method: POST
    data_selector: result.nodes
    params:
      limit: 10
- name: knowledge_base_node_update
  endpoint:
    path: /webapi/v2/knowledge_base_nodes/{node_id}
    method: PUT
    data_selector: result
    params: {}
- name: knowledge_base_node_get
  endpoint:
    path: /webapi/v2/knowledge_base_nodes/{node_id}
    method: GET
    data_selector: result
    params: {}
- name: knowledge_base_node_delete
  endpoint:
    path: /webapi/v2/knowledge_base_nodes/{node_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: knowledge_base_diff
  endpoint:
    path: /webapi/v2/knowledge_base_diff
    method: POST
    data_selector: result
    params: {}
- name: download_document_by_name
  endpoint:
    path: /download_document_by_name/{project_id}
    method: GET
    data_selector: ''
    params: {}
- name: single_document
  endpoint:
    path: /webapi/single_document
    method: GET
    data_selector: result
    params:
      id: string
- name: upload_file
  endpoint:
    path: /webapi/upload_file
    method: POST
    data_selector: result
    params: {}
- name: upload_from_s3
  endpoint:
    path: /webapi/upload_from_s3
    method: POST
    data_selector: result
    params: {}
- name: check_file_status
  endpoint:
    path: /webapi/check_file_status
    method: GET
    data_selector: result
    params:
      id: string
- name: update_kb_name
  endpoint:
    path: /webapi/update_kb_name
    method: POST
    data_selector: result
    params: {}
- name: search_document_by_title
  endpoint:
    path: /webapi/search_document_by_title
    method: GET
    data_selector: result
    params:
      query: string
- name: delete_file
  endpoint:
    path: /webapi/delete_file
    method: POST
    data_selector: result
    params: {}
- name: knowledge_bases
  endpoint:
    path: /webapi/knowledge_bases
    method: GET
    data_selector: result.items
    params: {}
- name: knowledge_base_preview
  endpoint:
    path: /webapi/knowledge_base_preview
    method: GET
    data_selector: result
    params:
      id: string
      pageNo: string
- name: update_document
  endpoint:
    path: /webapi/update_document
    method: POST
    data_selector: result.knowledgeBase
    params: {}
- name: toggle_documents
  endpoint:
    path: /webapi/toggle_documents
    method: POST
    data_selector: result.knowledgeBases
    params: {}
- name: folders
  endpoint:
    path: /webapi/v2/folders
    method: POST
    data_selector: Response
    params: {}
- name: update_folder
  endpoint:
    path: /webapi/v2/folders/{folder_id}
    method: PUT
    data_selector: Response
    params: {}
- name: highlight
  endpoint:
    path: /webapi/v2/highlights/{clue_id}
    method: GET
    data_selector: HighlightResponse
- name: conversations
  endpoint:
    path: /webapi/v2/conversations
    method: GET
    data_selector: conversations
    params:
      pageSize: 50
- name: bulk_update_conversations
  endpoint:
    path: /webapi/v2/conversations/bulk_update
    method: POST
    data_selector: No content
    params: {}
- name: conversation_by_id
  endpoint:
    path: /webapi/v2/conversations/{conversation_id}
    method: GET
    data_selector: id
    params: {}
- name: update_conversation
  endpoint:
    path: /webapi/v2/conversations/{conversation_id}
    method: PATCH
    data_selector: id
    params: {}
- name: chats_by_conversation_id
  endpoint:
    path: /webapi/v2/conversations/{conversation_id}/chats
    method: GET
    data_selector: chats
    params:
      pageNo: 1
- name: conversation_running_status
  endpoint:
    path: /webapi/v2/conversations/{conversation_id}/running
    method: GET
    data_selector: isRunning
    params: {}
- name: stop_conversation
  endpoint:
    path: /webapi/v2/conversations/{conversation_id}/stop
    method: POST
    data_selector: No content
- name: delete_chat
  endpoint:
    path: /webapi/v2/conversations/{conversation_id}/chats/{chat_id}
    method: DELETE
    data_selector: No content
- name: update_title
  endpoint:
    path: /webapi/v2/conversations/{conversation_id}/title
    method: PUT
    data_selector: Responseobject · Conversation
- name: post_feedback
  endpoint:
    path: /webapi/v2/conversations/{conversation_id}/chats/{chat_id}/feedback
    method: POST
    data_selector: Responseobject · FeedbackResponse
- name: daily_conversation_count
  endpoint:
    path: /webapi/conversation_daily_count
    method: GET
    data_selector: Responseobject
- name: conversation_categories
  endpoint:
    path: /webapi/v2/conversation_categories
    method: GET
    data_selector: categories
    params: {}
- name: create_conversation_category
  endpoint:
    path: /webapi/v2/conversation_categories
    method: POST
    data_selector: categoryId
    params: {}
- name: delete_conversation_category
  endpoint:
    path: /webapi/v2/conversation_categories/{conversation_category_id}
    method: DELETE
    data_selector: null
    params: {}
- name: select_answer
  endpoint:
    path: /webapi/faq/select_answer
    method: POST
    data_selector: result
    params: {}
- name: search_faq
  endpoint:
    path: /webapi/faq
    method: POST
    data_selector: result
    params: {}
- name: single_faq
  endpoint:
    path: /webapi/single_faq
    method: GET
    data_selector: result
    params: {}
- name: faqs
  endpoint:
    path: /webapi/faqs
    method: GET
    data_selector: results
    params: {}
- name: register_faq
  endpoint:
    path: /webapi/register_faq
    method: POST
    data_selector: result
    params: {}
- name: update_faq
  endpoint:
    path: /webapi/register_faq
    method: PUT
    data_selector: result
    params: {}
- name: delete_faq
  endpoint:
    path: /webapi/delete_faq
    method: POST
    data_selector: result
    params: {}
- name: upload_faq_file
  endpoint:
    path: /webapi/upload_faq_file
    method: POST
    data_selector: result
    params: {}
- name: faq_feedback
  endpoint:
    path: /webapi/faq_feedback
    method: POST
    data_selector: result
    params: {}
- name: faq_histories
  endpoint:
    path: /webapi/faq_histories
    method: GET
    data_selector: result.histories
    params: {}
- name: faq_candidates
  endpoint:
    path: /webapi/faq_candidates
    method: GET
    data_selector: result.faqCandidates
    params: {}
- name: faq_daily_count
  endpoint:
    path: /webapi/faq_daily_count
    method: GET
    data_selector: result.dailyTotalCount
    params: {}
- name: faq_daily_analytics
  endpoint:
    path: /webapi/faq_daily_analytics
    method: GET
    data_selector: result.faqDailyAnalytics
    params: {}
- name: add_faq_candidates
  endpoint:
    path: /webapi/add_faq_candidates
    method: POST
    data_selector: result.candidates
    params: {}
- name: user_feedback
  endpoint:
    path: /webapi/mrc/user_feedback
    method: POST
    data_selector: result
    params: {}
- name: mrc_feedbacks
  endpoint:
    path: /webapi/mrc_feedbacks
    method: GET
    data_selector: result
    params: {}
- name: mrc_feedback
  endpoint:
    path: /webapi/mrc_feedback
    method: POST
    data_selector: result
    params: {}
- name: mrc_histories
  endpoint:
    path: /webapi/mrc_histories
    method: GET
    data_selector: result
    params: {}
- name: apps
  endpoint:
    path: /webapi/apps
    method: GET
    data_selector: result
- name: skill
  endpoint:
    path: /webapi/skill
    method: POST
    data_selector: result
- name: generative_answer
  endpoint:
    path: /webapi/generative_answer
    method: POST
    data_selector: answer
- name: start_conversation
  endpoint:
    path: /webapi/start_conversation
    method: POST
    data_selector: result.conversation
    params: {}
- name: end_conversation_by_agent
  endpoint:
    path: /webapi/end_conversation_by_agent
    method: POST
    data_selector: result.conversation
    params:
      id: text
- name: send_chat
  endpoint:
    path: /webapi/send_chat
    method: POST
    data_selector: result.responses
    params:
      message: text
      conversationId: text
- name: auto_hashtag_feedback
  endpoint:
    path: /webapi/kb_auto_hashtag_feedback
    method: POST
    data_selector: result
    params: {}
- name: hashtags
  endpoint:
    path: /webapi/hashtags
    method: GET
    data_selector: result
    params: {}
- name: auto_hashtag
  endpoint:
    path: /webapi/kb_auto_hashtag
    method: POST
    data_selector: result
    params: {}
- name: retrieval
  endpoint:
    path: /webapi/retrieval
    method: POST
    data_selector: result
    params: {}
- name: summary_analytics
  endpoint:
    path: /webapi/summary_analytics
    method: GET
    data_selector: result
    params: {}
notes:
- REST_API_KEYをプロジェクトのREST APIキーに変更する必要がある
- Optional parameters include AGENT-EMAIL, USER-EMAIL, OWN-USER-ID.
- Chat page size is 100.
- Chat messages are sorted in ascending order by timestamp.
- Chat page size is limited to 100.
- 'Optional: Email of the agent to use for this request'
- 'Optional: Email address to associate with the user'
- 'Optional: User ID to identify or create a user'
errors:
- 'Method Not Allowed POST: /webapi/apps'
- 'internal error. Expecting value: line 1 column 1 (char 0)'
- '7000: API Error: Something went wrong'
- '7001: Invalid API Key: API-KEY is not valid'
- '7002: Invalid JSON: Cannot decode tuen requested JSON body'
- '7003: Invalid Parameter: Requested parameters are not valid. ''text'' is empty.'
- '7004: Payment error: billing error.'
- '400: Invalid parameters'
- '404: Agent not found'
- '200 OK: Successful request'
- 200 OK
- '404: Document not found'
- '401: Unauthorized'
- '403: Forbidden'
- '500: Internal server error'
- '200 OK: No content'
- 404 FAQ not found
- '200: Successfully retrieved analytics data'
- '400: Invalid Parameter'
- '404: メンバーが見つかりませんでした。'
- '400: 無効なリクエストまたはファイル形式'
- '413: ファイルサイズが制限を超えています。'
- '404: S3でファイルが見つかりません。'
- '401: 無許可'
- '403: 禁止された'
- '200: OK'
- '400: Bad Request'
- '404: Not Found'
- '200: 正常に出力されました。'
- '200: 正常に作成されました。'
- '200: 会話カテゴリーが正常に削除されました。'
- '200: 取得に成功しました。'
- '200: フィードバックが正常に送信されました。'
- '400: 不正なリクエスト'
- '401: 許可されていないリクエストです。'
- '429: レート制限を超えました。'
- '400: 無効なパラメーター'
- '500: 内部サーバーエラー'
auth_info:
  mentioned_objects:
  - ApiKey
  - ApiKeyAuth
client:
  base_url: https://backend-ja.alli.ai
  auth:
    type: apikey
    location: header
    header_name: API-KEY
source_metadata: null
