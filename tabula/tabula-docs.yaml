resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: data_storage
  endpoint:
    path: /api/v1/data_storages
    method: GET
    data_selector: data_storages
- name: Snowflake
  endpoint:
    path: snowflake.com
    method: GET
- name: PostgreSQL
  endpoint:
    path: postgresql.com
    method: GET
- name: BigQuery
  endpoint:
    path: coming soon...
    method: GET
- name: connection
  endpoint:
    path: /connections
    method: POST
    data_selector: connectionDetails
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: reports
  endpoint:
    path: /api/v1/reports
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dataset
  endpoint:
    path: /catalog/datasets
    method: GET
    data_selector: datasets
    params: {}
- name: dataset
  endpoint:
    path: /exploring/datasets
    method: GET
    data_selector: rows
    params:
      sample_size: 10000
- name: reports
  endpoint:
    path: /v1/reports
    method: GET
    data_selector: data
    params: {}
- name: report
  endpoint:
    path: /api/v1/reports
    method: GET
    data_selector: reports
    params: {}
- name: reports_list
  endpoint:
    path: /reports
    method: GET
    data_selector: reports
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: CustomFunction
  endpoint:
    path: /udfs
    method: POST
    data_selector: function_definition
    params: {}
- name: data_provider
  endpoint:
    path: /api/v1/data_provider
    method: GET
    data_selector: records
- name: subscription_plans
  endpoint:
    path: /subscription/plans
    method: GET
    data_selector: plans
- name: billing_and_token_allocation
  endpoint:
    path: /billing/token_allocation
    method: GET
    data_selector: billing_info
- name: enrichment
  endpoint:
    path: /api/enrichment
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: enrichment
  endpoint:
    path: /api/enrichment
    method: GET
    data_selector: data
    params: {}
- name: enrichment
  endpoint:
    path: /api/v1/enrichment
    method: GET
    data_selector: data
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data_sources
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: enrichment
  endpoint:
    path: /api/enrichment
    method: GET
    data_selector: data
    params: {}
notes:
- Make sure to register with the desired data provider and keep your API key secure
- The API key must be properly configured for the Enrichment Node to function correctly
- Requires setup of connected app in Tabula
- Uses OAuth2 with refresh token — requires setup of connected app in api
- XSLX files are not working in the flows where there are DB tables or views (neither
  as Sources nor as Outputs)
- Canvas default cell sizes are changed
- Statistics are not always loading in column headers
- Groups cannot be nested
- Waterfall enrichment lets you try multiple providers in sequence — only moving to
  the next if the previous one didn’t return data.
- Some objects like Contact may return nulls in deeply nested fields
- Configuring Fivetran Integration in Tabula
- Ensure you have appropriate permissions and access to the data source you want to
  connect.
- The sync frequency and selected schemas play a crucial role in how up-to-date your
  data is.
- Uses OAuth2 with refresh token — requires setup of connected app in Tabula
- The node works row by row, passing each row’s values to the prompt and writing back
  the results.
- Some objects may return nulls in deeply nested fields
- Flow cannot be executed without output nodes or charts
- At the moment, Tabula chooses the execution engine automatically. But we are going
  to support a manual selection of the engine in the near future.
- Jobs are only created through the data flow designer.
- Understanding your dataset is crucial before undertaking any analysis.
- The Statistics Panel offers a range of profiling widgets to make the process straightforward
  and insightful.
- API requires authentication via OAuth2.
- Let’s say we have a table with user names in one column and their domains in the
  second column. Our task is to combine both columns to get a valid email list.
- Uses OAuth2
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your access token.'
- '404 Not Found: The requested resource does not exist.'
- '400 Bad Request: Check your request parameters'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://www.tabula.io
  auth:
    type: apikey
source_metadata: null
