resources:
- name: products_modified
  endpoint:
    path: /products
    method: GET
    data_selector: productIds
    params:
      date-from: '2000-01-01'
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: productIds
    params:
      date-from: '2000-01-01'
- name: product_filter
  endpoint:
    path: /products/filter
    method: GET
    data_selector: ids
    params: {}
- name: product_filter
  endpoint:
    path: /products/filter
    method: GET
    data_selector: productIds
    params:
      as-supplier: ''
- name: product
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: productIds
    params: {}
- name: product_data
  endpoint:
    path: /products
    method: GET
    data_selector: products
    params:
      etim-version: '10'
      completeness: 'false'
      dates-by-type: 'false'
      na-values: 'false'
- name: product_data_supplier
  endpoint:
    path: /products
    method: GET
    data_selector: products
    params:
      as-supplier: ''
      etim-version: '10'
      completeness: 'false'
      dates-by-type: 'false'
      na-values: 'false'
- name: product_data
  endpoint:
    path: /products
    method: GET
    params:
      etim-version: '10'
      completeness: 'false'
      dates-by-type: 'false'
      na-values: 'false'
- name: product_data_language_dependent
  endpoint:
    path: /products
    method: GET
    params:
      lang: en
      etim-version: '10'
      completeness: 'false'
      dates-by-type: 'false'
      na-values: 'true'
- name: product_data_as_supplier
  endpoint:
    path: /products
    method: GET
    params: {}
- name: lca
  endpoint:
    path: /products/lca
    method: GET
    data_selector: products
    params: {}
- name: put_product_data
  endpoint:
    path: /products
    method: PUT
    data_selector: ''
    params: {}
- name: delete_products
  endpoint:
    path: /products
    method: DELETE
    data_selector: ''
    params: {}
- name: labels
  endpoint:
    path: /labels
    method: GET
    data_selector: labelIdentifiers
    params: {}
- name: product_lca
  endpoint:
    path: /products/lca
    method: GET
    data_selector: products
    params:
      as-supplier: '{identifier}'
- name: put_product_data
  endpoint:
    path: /products
    method: PUT
    data_selector: parameters
    params:
      new: add
      existing: replace
      empty: 'false'
- name: delete_products
  endpoint:
    path: /products
    method: DELETE
    data_selector: deletedProducts
    params: {}
- name: label_identifiers
  endpoint:
    path: /labels
    method: GET
    data_selector: labelIdentifiers
    params: {}
- name: labels
  endpoint:
    path: /labels
    method: GET
- name: attributes
  endpoint:
    path: /attributes
    method: GET
- name: attribute_groups
  endpoint:
    path: /attribute-groups
    method: GET
- name: attribute_groups
  endpoint:
    path: /attribute-groups
    method: GET
    data_selector: attributeGroups
- name: relations_by_attribute
  endpoint:
    path: /relations-by-attribute
    method: GET
    data_selector: relationsByAttribute
- name: suppliers
  endpoint:
    path: /suppliers
    method: GET
    data_selector: suppliers
- name: recipients
  endpoint:
    path: /recipients
    method: GET
    data_selector: recipientIdentifiers
- name: labels
  endpoint:
    path: /labels
    method: GET
    data_selector: labels
    params: {}
- name: attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: attributeIdentifiers
    params: {}
- name: attribute_groups
  endpoint:
    path: /attribute-groups
    method: GET
    data_selector: attributeGroupIdentifiers
    params: {}
- name: attribute_groups
  endpoint:
    path: /attribute-groups
    method: GET
    data_selector: attributeGroups
- name: relations_by_attribute
  endpoint:
    path: /relations-by-attribute
    method: GET
    data_selector: relationsByAttribute
- name: suppliers
  endpoint:
    path: /suppliers
    method: GET
    data_selector: suppliers
- name: recipients
  endpoint:
    path: /recipients
    method: GET
    data_selector: recipientIdentifiers
- name: recipients
  endpoint:
    path: /recipients
    method: GET
    data_selector: recipients
    params: {}
- name: recipients
  endpoint:
    path: /recipients
    method: PUT
    data_selector: ''
    params: {}
- name: recipients
  endpoint:
    path: /recipients
    method: DELETE
    data_selector: ''
    params: {}
- name: categories
  endpoint:
    path: /categories
    method: GET
    data_selector: categoryTreeIdentifiers
    params: {}
- name: categories
  endpoint:
    path: /categories
    method: DELETE
    data_selector: ''
    params: {}
- name: synchronizations
  endpoint:
    path: /synchronizations/run/{trigger-identifier}
    method: GET
    data_selector: ''
    params: {}
- name: synchronization_status
  endpoint:
    path: /synchronizations/check/{progress-id}
    method: GET
    data_selector: status
    params:
      progress-id: progress-id
- name: product_handling
  endpoint:
    path: /products
    method: PUT
    data_selector: response
    params: {}
- name: recipient
  endpoint:
    path: /recipients
    method: GET
    data_selector: recipients
    params: {}
- name: recipient
  endpoint:
    path: /recipients
    method: PUT
    data_selector: all
    params: {}
- name: recipient
  endpoint:
    path: /recipients
    method: DELETE
    data_selector: deletedRecipients
    params: {}
- name: category
  endpoint:
    path: /categories
    method: GET
    data_selector: categoryTreeIdentifiers
    params: {}
- name: category
  endpoint:
    path: /categories
    method: PUT
    data_selector: all
    params: {}
- name: category
  endpoint:
    path: /categories
    method: DELETE
    data_selector: deletedCategoryTrees
    params: {}
- name: category
  endpoint:
    path: /categories
    method: DELETE
    data_selector: deletedCategories
    params:
      category-tree-identifier: ''
- name: synchronization_trigger
  endpoint:
    path: /synchronizations/run/{trigger-identifier}
    method: GET
    data_selector: status
    params: {}
notes: []
errors:
- '400 Bad Request: Limit parameter should be set to integer from the range [1, 100000]'
- '400 Bad Request: Page parameter should be set to positive integer'
- '404 Not Found: The server could not find the requested resource'
- incorrect value of "withType" in "labels"
- incorrect value of "totalDescriptionCompleteness"
auth_info:
  mentioned_objects: []
client:
  base_url: https://epim.one/api/api-identifier
  auth:
    type: basic
source_metadata: null
