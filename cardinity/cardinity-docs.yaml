resources:
- name: payment_link
  endpoint:
    path: /v1/paymentLinks
    method: POST
    data_selector: paymentLink
    params: {}
- name: payments
  endpoint:
    path: /v1/payments
    method: GET
    data_selector: payments
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: POST
    data_selector: payment
    params: {}
- name: payment
  endpoint:
    path: /payments
    method: POST
    data_selector: payment
    params: {}
- name: refunds
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/refunds
    method: GET
    data_selector: refunds
- name: settlements
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/settlements
    method: GET
    data_selector: settlements
- name: voids
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/voids
    method: GET
    data_selector: voids
- name: payment
  endpoint:
    path: /payments/{PAYMENT_ID}
    method: GET
    data_selector: threeds2_data.browser_info
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: '[]'
- name: payment
  endpoint:
    path: /payments/{PAYMENT_ID}
    method: GET
    data_selector: '{}'
- name: create_payment
  endpoint:
    path: /payments
    method: POST
    data_selector: '{}'
- name: finalize_payment
  endpoint:
    path: /payments/{PAYMENT_ID}
    method: PATCH
    data_selector: '{}'
- name: refunds
  endpoint:
    path: /payments/{PAYMENT_ID}/refunds
    method: POST
    data_selector: '{}'
- name: get_refund
  endpoint:
    path: /payments/{PAYMENT_ID}/refunds/{REFUND_ID}
    method: GET
    data_selector: '{}'
- name: voids
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/voids
    method: GET
    data_selector: voids
- name: chargebacks
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/chargebacks
    method: GET
    data_selector: chargebacks
- name: chargeback
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/chargebacks/{CHARGEBACK_ID}
    method: GET
    data_selector: chargeback
- name: all_chargebacks
  endpoint:
    path: /v1/payments/chargebacks
    method: GET
    data_selector: chargebacks
- name: payment
  endpoint:
    path: /v1/payments
    method: POST
    data_selector: id
- name: payment_links
  endpoint:
    path: /v1/paymentLinks
    method: POST
    data_selector: payment_link
    params: {}
- name: finalize_payment
  endpoint:
    path: /v1/payments/{PAYMENT_ID}
    method: PATCH
    data_selector: payment
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: POST
    data_selector: payment
    params: {}
- name: refunds
  endpoint:
    path: /refunds
    method: GET
    data_selector: refunds
    params: {}
- name: settlements
  endpoint:
    path: /settlements
    method: GET
    data_selector: settlements
    params: {}
- name: voids
  endpoint:
    path: /voids
    method: GET
    data_selector: voids
    params: {}
- name: chargebacks
  endpoint:
    path: /chargebacks
    method: GET
    data_selector: chargebacks
    params: {}
- name: payment_links
  endpoint:
    path: /v1/paymentLinks
    method: POST
    data_selector: id
    params: {}
- name: payments
  endpoint:
    path: /v1/payments
    method: GET
    data_selector: payments
    params:
      limit: 10
- name: payments
  endpoint:
    path: /payments
    method: POST
    data_selector: payment
    params: {}
- name: payments
  endpoint:
    path: /v1/payments
    method: GET
    data_selector: '[].id'
- name: payment
  endpoint:
    path: /v1/payments/{PAYMENT_ID}
    method: GET
    data_selector: id
- name: create_payment
  endpoint:
    path: /v1/payments
    method: POST
    data_selector: id
- name: finalize_payment
  endpoint:
    path: /v1/payments/{PAYMENT_ID}
    method: PATCH
    data_selector: id
- name: refunds
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/refunds
    method: POST
    data_selector: id
- name: payments
  endpoint:
    path: /v1/payments
    method: POST
    data_selector: payment
    params: {}
- name: refunds
  endpoint:
    path: /v1/refunds
    method: POST
    data_selector: refund
    params: {}
- name: chargebacks
  endpoint:
    path: /v1/chargebacks
    method: GET
    data_selector: chargeback
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: POST
    data_selector: id
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: ''
    params:
      limit: 10
- name: refunds
  endpoint:
    path: /payments/{PAYMENT_ID}/refunds
    method: POST
    data_selector: ''
    params: {}
- name: refund
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/refunds
    method: GET
    data_selector: records
- name: settlement
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/settlements
    method: POST
    data_selector: settlement
- name: void
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/voids
    method: POST
    data_selector: void
- name: voids
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/voids
    method: GET
    data_selector: '[]'
- name: chargebacks
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/chargebacks
    method: GET
    data_selector: '[]'
- name: specific_chargeback
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/chargebacks/{CHARGEBACK_ID}
    method: GET
    data_selector: '{}'
- name: all_chargebacks
  endpoint:
    path: /v1/payments/chargebacks
    method: GET
    data_selector: '[]'
- name: payment_link
  endpoint:
    path: /v1/paymentLinks
    method: PATCH
    data_selector: id
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: POST
    data_selector: payment
    params: {}
- name: refund
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/refunds/{REFUND_ID}
    method: GET
    data_selector: refund
    params: {}
- name: all_refunds
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/refunds
    method: GET
    data_selector: refunds
    params: {}
- name: payments
  endpoint:
    path: /v1/payments
    method: GET
    data_selector: '[]'
- name: payment
  endpoint:
    path: /v1/payments/{PAYMENT_ID}
    method: GET
    data_selector: payment
- name: refunds
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/refunds
    method: POST
    data_selector: refund
- name: payments_refunds
  endpoint:
    path: /payments/{PAYMENT_ID}/refunds
    method: GET
    data_selector: ''
- name: payment_links
  endpoint:
    path: /paymentLinks
    method: POST
    data_selector: ''
- name: payments
  endpoint:
    path: /payments
    method: POST
    data_selector: payment
    params: {}
- name: refunds
  endpoint:
    path: /refunds
    method: POST
    data_selector: refund
    params: {}
- name: settlements
  endpoint:
    path: /settlements
    method: GET
    data_selector: settlements
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: POST
    data_selector: ''
    params: {}
- name: payments
  endpoint:
    path: /v1/payments
    method: GET
    data_selector: '[*]'
- name: payment
  endpoint:
    path: /v1/payments/{PAYMENT_ID}
    method: GET
    data_selector: id
- name: refunds
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/refunds
    method: POST
    data_selector: id
- name: refunds
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/refunds
    method: GET
    data_selector: '[]'
- name: settlements
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/settlements
    method: GET
    data_selector: '[]'
- name: voids
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/voids
    method: GET
    data_selector: '[]'
- name: voids
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/voids
    method: GET
    data_selector: voids
- name: chargebacks
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/chargebacks
    method: GET
    data_selector: chargebacks
- name: specific_chargeback
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/chargebacks/{CHARGEBACK_ID}
    method: GET
    data_selector: chargeback
- name: all_chargebacks
  endpoint:
    path: /v1/payments/chargebacks
    method: GET
    data_selector: chargebacks
- name: payment_links
  endpoint:
    path: /v1/paymentLinks
    method: POST
    data_selector: result
- name: voids
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/voids
    method: POST
    data_selector: result
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: records
- name: refunds
  endpoint:
    path: /payments/{PAYMENT_ID}/refunds
    method: POST
    data_selector: refund
    params: {}
- name: payments
  endpoint:
    path: /v1/payments
    method: POST
    data_selector: payment
    params: {}
- name: refund
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/refunds
    method: GET
    data_selector: refunds
- name: settlement
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/settlements
    method: GET
    data_selector: settlements
- name: void
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/voids
    method: GET
    data_selector: voids
- name: voids
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/voids
    method: GET
    data_selector: '[].id'
- name: chargebacks
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/chargebacks
    method: GET
    data_selector: '[].id'
- name: specific_chargeback
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/chargebacks/{CHARGEBACK_ID}
    method: GET
    data_selector: id
- name: all_chargebacks
  endpoint:
    path: /v1/payments/chargebacks
    method: GET
    data_selector: '[].id'
- name: payments
  endpoint:
    path: /v1/payments
    method: POST
    data_selector: payment
    params: {}
- name: chargebacks
  endpoint:
    path: /v1/chargebacks
    method: GET
    data_selector: chargebacks
    params: {}
- name: voids
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/voids
    method: GET
- name: payment_links
  endpoint:
    path: /v1/paymentLinks
    method: POST
- name: chargebacks
  endpoint:
    path: /v1/payments/chargebacks
    method: GET
- name: payments
  endpoint:
    path: /payments
    method: POST
    data_selector: id
    params: {}
- name: refund
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/refunds
    method: GET
    data_selector: '[].id'
- name: settlement
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/settlements
    method: GET
    data_selector: '[].id'
- name: void
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/voids
    method: POST
    data_selector: id
- name: payments
  endpoint:
    path: /payments
    method: POST
    data_selector: payment
    params: {}
- name: specific_payment
  endpoint:
    path: /payments/{PAYMENT_ID}
    method: GET
    data_selector: payment
    params: {}
- name: refunds
  endpoint:
    path: /payments/{PAYMENT_ID}/refunds
    method: POST
    data_selector: refund
    params: {}
- name: payment_links
  endpoint:
    path: /paymentLinks
    method: GET
    data_selector: records
- name: voids
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/voids
    method: GET
    data_selector: records
- name: chargebacks
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/chargebacks
    method: GET
    data_selector: records
- name: specific_chargeback
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/chargebacks/{CHARGEBACK_ID}
    method: GET
    data_selector: records
- name: all_chargebacks
  endpoint:
    path: /v1/payments/chargebacks
    method: GET
    data_selector: records
- name: payments
  endpoint:
    path: /payments
    method: POST
    data_selector: id
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: records
- name: payment
  endpoint:
    path: /payments/{PAYMENT_ID}
    method: GET
    data_selector: records
- name: refunds
  endpoint:
    path: /payments/{PAYMENT_ID}/refunds
    method: POST
    data_selector: records
- name: payments
  endpoint:
    path: /v1/payments
    method: GET
    data_selector: refunds
- name: refunds
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/refunds
    method: GET
    data_selector: refunds
- name: settlements
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/settlements
    method: GET
    data_selector: settlements
- name: voids
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/voids
    method: POST
    data_selector: void
- name: payment_link
  endpoint:
    path: /v1/paymentLinks
    method: POST
    data_selector: id
- name: payment_links
  endpoint:
    path: /v1/paymentLinks
    method: POST
    data_selector: payment_link
    params: {}
- name: update_payment_link
  endpoint:
    path: /v1/paymentLinks/{PAYMENT_LINK_ID}
    method: PATCH
    data_selector: payment_link_update
    params: {}
- name: get_payment_link
  endpoint:
    path: /v1/paymentLinks/{PAYMENT_LINK_ID}
    method: GET
    data_selector: payment_link
    params: {}
- name: voids
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/voids
    method: GET
- name: chargebacks
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/chargebacks
    method: GET
- name: chargeback
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/chargebacks/{CHARGEBACK_ID}
    method: GET
- name: all_chargebacks
  endpoint:
    path: /v1/payments/chargebacks
    method: GET
- name: payments
  endpoint:
    path: /payments
    method: POST
    data_selector: id
- name: payment
  endpoint:
    path: /v1/payments
    method: POST
    data_selector: payment
    params: {}
- name: refund
  endpoint:
    path: /v1/refunds
    method: POST
    data_selector: refund
    params: {}
- name: void
  endpoint:
    path: /v1/voids
    method: POST
    data_selector: void
    params: {}
- name: settlement
  endpoint:
    path: /v1/settlements
    method: POST
    data_selector: settlement
    params: {}
- name: chargeback
  endpoint:
    path: /v1/chargebacks
    method: GET
    data_selector: chargebacks
    params: {}
- name: payments
  endpoint:
    path: /v1/payments
    method: GET
    data_selector: ''
    params:
      limit: '10'
- name: payment_finalize
  endpoint:
    path: /v1/payments/{PAYMENT_ID}
    method: PATCH
    data_selector: ''
    params: {}
- name: payment_create
  endpoint:
    path: /v1/payments
    method: POST
    data_selector: ''
    params: {}
- name: refunds
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/refunds
    method: POST
    data_selector: ''
    params: {}
- name: refund_get
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/refunds/{REFUND_ID}
    method: GET
    data_selector: ''
    params: {}
- name: refund
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/refunds
    method: GET
    data_selector: refund objects
- name: settlement
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/settlements
    method: GET
    data_selector: settlement objects
- name: void
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/voids
    method: GET
    data_selector: void objects
- name: voids
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/voids
    method: GET
    data_selector: void
    params: {}
- name: chargebacks
  endpoint:
    path: /v1/payments/{PAYMENT_ID}/chargebacks
    method: GET
    data_selector: chargeback
    params: {}
- name: payment_link
  endpoint:
    path: /v1/paymentLinks
    method: PATCH
    data_selector: id
    params: {}
notes:
- Cardinity uses OAuth 1.0 to authorize all API requests.
- 'Use authorize (settle: false) only if you want to have a delayed settlement of
  funds!'
- If your API Consumer Key is in a test mode the supplied card won't be charged, though
  everything else will occur as if in a live mode.
- Authentication is handled automatically by the client.
- Payment requests require OAuth parameters in the header.
- Refunds are available for settled transactions only.
- 'To retrieve all chargebacks, an optional request parameter ''limit'' can be used
  to specify a number of last chargebacks to be returned (1-100). Default: 10 last
  chargebacks.'
- 'Use authorize (settle: false) only if you want to have a delayed settlement of
  funds.'
- If your API Consumer Key is in a test mode the supplied card won't be charged.
- 'Response codes: 201 for successful payments, 402 for declined payments.'
- Authentication is handled automatically behind the scenes.
- Payment links are identified by a UUID.
- Uses OAuth 1.0 for authentication.
- If your API Consumer Key key is in a test mode the supplied card won't be charged,
  though everything else will occur as if in a live mode.
- Refunds are available for settled transactions only!
- Error details are provided in JSON format.
- Voids are available for authorizations only.
- Response attributes require HMAC-SHA256 signature verification
- OAuth 1.0 is used for authentication.
- Voids are available for authorizations only! Make sure that the transaction being
  voided was not previously settled.
- Uses OAuth 1.0 for API authentication.
- Uses OAuth2 with consumer key and secret
- Response valid or invalid verification is done using HMAC-SHA256 with Project Secret.
- You must replace {OAUTH_DETAILS} with specific OAuth parameters.
- All requests and responses must be signed and verified using HMAC-SHA256.
- To retrieve a void for a specific payment you have to send GET request providing
  payment id.
- 'To retrieve all chargebacks you have to send a GET request. An optional request
  parameter limit can be used to specify a number of last chargebacks to be returned
  (1-100). Default: 10 last chargebacks.'
- If your API Consumer Key key is in a test mode the supplied card won't be charged.
- Cardinity uses OAuth 1.0 for API authentication.
- To retrieve all chargebacks for a specific payment you have to send GET request
  providing an ID of a payment.
- Response valid if the signature matches the calculated HMAC-SHA256 using the project
  secret.
errors:
- '3000: Rejected by issuer'
- 'Invalid month: Use an invalid month e.g. 13.'
- 'Invalid year: Use a year in the past e.g. 1970.'
- '400: Bad Request - Invalid input data'
- '401: Unauthorized - Invalid or missing API credentials'
- '402: Payment declined - Insufficient funds or invalid card'
- '202: Payment is pending - Additional 3D Secure authorization required'
- 'Declined: Payment was declined by the issuer.'
- 'ValidationFailed: Payment validation failed due to incorrect parameters.'
- '400: Bad Request'
- '401: Unauthorized'
- '402: Declined'
- '404: Not Found'
- '500: Internal Server Error'
- '503: Service Unavailable'
- '404: Chargeback not found'
- '400: Invalid request.'
- '401: Unauthorized.'
- '405: Method not allowed.'
- '500: Internal server error.'
- '503: Service unavailable.'
- 'Declined: Payment was not approved due to various reasons.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'PAYMENT_NOT_FOUND: Check the PAYMENT_ID provided'
- 'Invalid credentials: Check your consumer key and secret'
- '400: Bad Request - Invalid request parameters'
- '401: Unauthorized - Invalid consumer key or secret'
- '402: Payment Declined - Insufficient funds or invalid card'
- '402: Payment Declined'
- '404: Payment Not Found'
- 'Declined: Payment was not approved.'
- '400: Bad Request - Check request payload'
- '401: Unauthorized - Check API keys'
- '402: Payment Declined - Check card details or balance'
- '500: Internal Server Error - Try again later'
- '402: Refund was declined'
- '404 Not Found: Resource not found'
- '402 Payment Required: Void was declined'
- 'Declined: Payment declined due to various reasons.'
- 'ValidationFailed: Validation of payment parameters failed.'
- '405: Method Not Allowed'
- '401: Unauthorized - Invalid or expired token'
- '202: Payment pending - Additional authorization required'
- '400: Invalid request'
- '401: Unauthorized access'
- '500: Internal server error'
- '503: Service unavailable'
- '201: Settlement succeeded'
- '402: Settlement declined'
- '400: Bad request'
- '405: Method not allowed'
- 'Declined: Invalid card details or insufficient funds'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '402: Payment declined'
- '404: Payment not found'
- '404 Not Found: Requested resource was not found.'
- '402: Void was declined.'
- '400: Bad request.'
- 'ValidationFailed: Request validation failed.'
- 'Invalid signature: Response invalid or changed'
- '400: Bad Request - Check the request data format or required fields.'
- '401: Unauthorized - Check the authentication credentials.'
- '402: Payment Declined - Payment was declined by the issuing bank.'
- '202: Payment Pending - Additional authorization is required.'
- '402 Payment Declined: Invalid card or insufficient balance'
- '200: OK -- Indicates successful retrieval of a resource.'
- '201: Created -- Successful creation of a resource.'
- '202: Accepted -- Payment was submitted to system, but is not yet complete.'
- '202: Payment Pending'
- '401 Unauthorized: Invalid OAuth credentials'
- '402 Payment Required: Void request was declined'
- 400 Bad Request -- Your request contains field or business logic validation errors
  or provided JSON is malformed.
- 401 Unauthorized -- Your authorization information was missing or wrong.
- 402 Request Failed -- Your request was valid but it was declined.
- 403 Forbidden -- You do not have access to this resource.
- 404 Not Found -- The specified resource could not be found.
- 405 Method Not Allowed -- You tried to access a resource using an invalid HTTP method.
- 406 Not Acceptable -- Wrong Accept headers sent in the request.
- 415 Unsupported Media Type -- Wrong Content-Type headers sent in the request.
- 500 Internal Server Error -- We had a problem on our end. Try again later.
- 503 Service Unavailable -- We're temporarily off-line for maintenance. Please try
  again later.
- '202: Payment Pending - Additional authorization required'
- 'Invalid credentials: Check your consumer key and secret.'
- 'Unsupported currency: Ensure the currency is supported.'
- 'Invalid request: Check parameters and request format.'
auth_info:
  mentioned_objects:
  - Client
  - Payment
  - Card
  - Threeds2Data
  - Refund
  - Void
  - Settlement
  - Chargeback
client:
  base_url: https://api.cardinity.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
source_metadata: null
