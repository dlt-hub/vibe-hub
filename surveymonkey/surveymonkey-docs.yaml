resources:
- name: user_me
  endpoint:
    path: /users/me
    method: GET
    data_selector: data
    params: {}
- name: user_workgroups
  endpoint:
    path: /users/{user_id}/workgroups
    method: GET
    data_selector: data
    params: {}
- name: user_shared
  endpoint:
    path: /users/{user_id}/shared
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_details
  endpoint:
    path: /groups/{group_id}
    method: GET
    data_selector: data
    params: {}
- name: workgroup
  endpoint:
    path: /v3/workgroups/{workgroup_id}
    method: GET
    data_selector: records
- name: workgroup_shares
  endpoint:
    path: /v3/workgroups/{workgroup_id}/shares
    method: GET
    data_selector: data
- name: workgroup_share
  endpoint:
    path: /v3/workgroups/{workgroup_id}/shares/{share_id}
    method: GET
    data_selector: data
- name: surveys
  endpoint:
    path: /v3/surveys/{id}
    method: PUT
    data_selector: payload
- name: surveys_details
  endpoint:
    path: /v3/surveys/{id}/details
    method: GET
    data_selector: details
- name: surveys_share
  endpoint:
    path: /v3/surveys/{survey_id}/share
    method: POST
    data_selector: share
- name: surveys_share_list
  endpoint:
    path: /v3/surveys/{survey_id}/share_list
    method: GET
    data_selector: share_list
- name: questions
  endpoint:
    path: /v3/surveys/{survey_id}/pages/{page_id}/questions
    method: GET
    data_selector: data
    params:
      per_page: '50'
      page: '1'
- name: create_question
  endpoint:
    path: /v3/surveys/{survey_id}/pages/{page_id}/questions
    method: POST
    data_selector: id
- name: get_question
  endpoint:
    path: /v3/surveys/{survey_id}/pages/{page_id}/questions/{question_id}
    method: GET
    data_selector: headings
- name: question_bank_questions
  endpoint:
    path: /v3/question_bank/questions
    method: GET
    data_selector: data
- name: survey_folders
  endpoint:
    path: /v3/survey_folders
    method: GET
    data_selector: data
- name: surveys
  endpoint:
    path: /surveys
    method: GET
    data_selector: surveys
    params: {}
- name: survey_details
  endpoint:
    path: /surveys/{id}/details
    method: GET
    data_selector: details
    params: {}
- name: survey_responses
  endpoint:
    path: /surveys/{id}/responses/bulk
    method: GET
    data_selector: responses
    params:
      incremental: updated_at
- name: group_activities
  endpoint:
    path: /groups/{group_id}/activities
    method: GET
    data_selector: results
    params: {}
- name: group_member_activity
  endpoint:
    path: /groups/{group_id}/activities/{action_type}
    method: GET
    data_selector: series
    params: {}
- name: group_members
  endpoint:
    path: /groups/{group_id}/members
    method: GET
    data_selector: data
    params: {}
- name: group_member_details
  endpoint:
    path: /groups/{group_id}/members/{member_id}
    method: GET
    data_selector: data
    params: {}
- name: update_group_member
  endpoint:
    path: /groups/{group_id}/members/{member_id}
    method: PATCH
    data_selector: ''
    params: {}
- name: workgroups
  endpoint:
    path: /workgroups
    method: GET
    data_selector: data
    params: {}
- name: create_workgroup
  endpoint:
    path: /workgroups
    method: POST
    data_selector: data
    params: {}
- name: surveys
  endpoint:
    path: /v3/surveys
    method: GET
    data_selector: data
- name: survey_details
  endpoint:
    path: /v3/surveys/{id}
    method: GET
    data_selector: data
- name: create_survey
  endpoint:
    path: /v3/surveys
    method: POST
    data_selector: data
- name: survey_categories
  endpoint:
    path: /v3/survey_categories
    method: GET
    data_selector: data
    params: {}
- name: survey_templates
  endpoint:
    path: /v3/survey_templates
    method: GET
    data_selector: data
    params: {}
- name: team_survey_templates
  endpoint:
    path: /v3/team_survey_templates
    method: GET
    data_selector: data
    params: {}
- name: survey_languages
  endpoint:
    path: /v3/survey_languages
    method: GET
    data_selector: data
    params: {}
- name: surveys_pages
  endpoint:
    path: /v3/surveys/{survey_id}/pages
    method: GET
    data_selector: data
    params: {}
- name: questions
  endpoint:
    path: /surveys/{survey_id}/questions
    method: GET
    data_selector: questions
- name: surveys
  endpoint:
    path: /surveys
    method: GET
    data_selector: surveys
- name: contact_lists
  endpoint:
    path: /v3/contact_lists
    method: GET
    data_selector: data
    params: {}
- name: create_contact_list
  endpoint:
    path: /v3/contact_lists
    method: POST
    data_selector: data
    params: {}
- name: get_contact_list
  endpoint:
    path: /v3/contact_lists/{contact_list_id}
    method: GET
    data_selector: ''
    params: {}
- name: update_contact_list
  endpoint:
    path: /v3/contact_lists/{contact_list_id}
    method: PATCH
    data_selector: ''
    params: {}
- name: contact_fields
  endpoint:
    path: /v3/contact_fields/{contact_field_id}
    method: PATCH
    data_selector: records
- name: surveys_collectors
  endpoint:
    path: /v3/surveys/{survey_id}/collectors
    method: GET
    data_selector: data
- name: collectors
  endpoint:
    path: /v3/collectors/{collector_id}
    method: GET
    data_selector: data
    params: {}
- name: collector_messages
  endpoint:
    path: /v3/collectors/{collector_id}/messages
    method: GET
    data_selector: data
    params: {}
- name: collectors_messages
  endpoint:
    path: /v3/collectors/{collector_id}/messages
    method: POST
    data_selector: ''
    params: {}
- name: collectors_message
  endpoint:
    path: /v3/collectors/{collector_id}/messages/{message_id}
    method: GET
    data_selector: ''
    params: {}
- name: collector_responses
  endpoint:
    path: /v3/collectors//responses
    method: GET
    data_selector: data
    params: {}
- name: survey_responses_bulk
  endpoint:
    path: /v3/surveys//responses/bulk
    method: GET
    data_selector: data
    params: {}
- name: collector_responses_bulk
  endpoint:
    path: /v3/collectors//responses/bulk
    method: GET
    data_selector: data
    params: {}
- name: specific_survey_response
  endpoint:
    path: /v3/surveys/{survey_id}/responses/{response_id}
    method: GET
    data_selector: data
    params: {}
- name: surveys_responses
  endpoint:
    path: /v3/surveys/{survey_id}/responses/{response_id}
    method: PATCH
    data_selector: ''
    params: {}
- name: collectors_responses
  endpoint:
    path: /v3/collectors/{collector_id}/responses/{response_id}
    method: GET
    data_selector: ''
    params: {}
- name: contact_lists
  endpoint:
    path: /v3/contact_lists/{contact_list_id}/contacts
    method: GET
    data_selector: data
- name: contacts_bulk
  endpoint:
    path: /v3/contact_lists/{contact_list_id}/contacts/bulk
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /v3/contacts
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /contacts
    method: POST
    data_selector: data
    params: {}
- name: contacts_bulk
  endpoint:
    path: /contacts/bulk
    method: GET
    data_selector: data
    params:
      per_page: 50
- name: contact_fields
  endpoint:
    path: /contact_fields
    method: GET
    data_selector: data
    params:
      per_page: 50
- name: collectors_messages
  endpoint:
    path: /v3/collectors/{collector_id}/messages/{message_id}
    method: PUT
    data_selector: status
    params: {}
- name: send_message
  endpoint:
    path: /v3/collectors/{collector_id}/messages/{message_id}/send
    method: POST
    data_selector: is_scheduled
    params: {}
- name: recipients
  endpoint:
    path: /v3/collectors/{collector_id}/messages/{message_id}/recipients
    method: GET
    data_selector: data
    params: {}
- name: add_recipients
  endpoint:
    path: /v3/collectors/{collector_id}/messages/{message_id}/recipients
    method: POST
    data_selector: id
    params: {}
- name: bulk_recipients
  endpoint:
    path: /v3/collectors/{collector_id}/messages/{message_id}/recipients/bulk
    method: POST
    data_selector: succeeded
    params: {}
- name: recipients
  endpoint:
    path: /v3/collectors/{collector_id}/recipients
    method: GET
    data_selector: data
    params: {}
- name: recipient_stats
  endpoint:
    path: /v3/collectors/{collector_id}/recipients/{recipient_id}
    method: GET
    data_selector: id
    params: {}
- name: collector_stats
  endpoint:
    path: /v3/collectors/{collector_id}/stats
    method: GET
    data_selector: survey_response_status
    params: {}
- name: survey_responses
  endpoint:
    path: /v3/surveys/{survey_id}/responses
    method: GET
    data_selector: data
    params: {}
- name: rollups
  endpoint:
    path: /v3/surveys/{survey_id}/rollups
    method: GET
- name: page_rollups
  endpoint:
    path: /v3/surveys/{survey_id}/pages/{page_id}/rollups
    method: GET
- name: question_rollups
  endpoint:
    path: /v3/surveys/{survey_id}/pages/{page_id}/questions/{question_id}/rollups
    method: GET
- name: trends
  endpoint:
    path: /v3/surveys/{survey_id}/trends
    method: GET
- name: page_trends
  endpoint:
    path: /v3/surveys/{survey_id}/pages/{page_id}/trends
    method: GET
- name: question_trends
  endpoint:
    path: /v3/surveys/{survey_id}/pages/{page_id}/questions/{question_id}/trends
    method: GET
- name: webhooks
  endpoint:
    path: /v3/webhooks
    method: GET
- name: webhook
  endpoint:
    path: /v3/webhooks
    method: POST
    data_selector: id
    params: {}
- name: webhook_details
  endpoint:
    path: /v3/webhooks/{webhook_id}
    method: GET
    data_selector: id
    params: {}
- name: update_webhook
  endpoint:
    path: /v3/webhooks/{webhook_id}
    method: PATCH
    data_selector: id
    params: {}
- name: replace_webhook
  endpoint:
    path: /v3/webhooks/{webhook_id}
    method: PUT
    data_selector: id
    params: {}
- name: workgroup_member
  endpoint:
    path: /workgroups/{workgroup_id}/members/{member_id}
    method: GET
    data_selector: records
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: data
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: User
  endpoint:
    path: /scim/v2/Users/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: User
  endpoint:
    path: /scim/v2/Users/{id}
    method: PATCH
    data_selector: ''
    params: {}
- name: Schemas
  endpoint:
    path: /scim/v2/Schemas
    method: GET
    data_selector: ''
    params: {}
- name: ResourceTypes
  endpoint:
    path: /scim/v2/ResourceTypes
    method: GET
    data_selector: ''
    params: {}
- name: benchmark_bundles
  endpoint:
    path: /v3/benchmark_bundles
    method: GET
    data_selector: data
- name: benchmark_bundle_details
  endpoint:
    path: /v3/benchmark_bundles/{bundle_id}
    method: GET
    data_selector: details
- name: benchmark_bundle_analysis
  endpoint:
    path: /v3/benchmark_bundles/{bundle_id}/analyze
    method: GET
    data_selector: benchmark
- name: workgroup_members
  endpoint:
    path: /v3/workgroups/{id}/members
    method: GET
    data_selector: data
- name: errors
  endpoint:
    path: /v3/errors
    method: GET
    data_selector: data
    params:
      per_page: '50'
- name: users
  endpoint:
    path: /scim/v2/Users
    method: GET
    data_selector: Resources
    params: {}
- name: ServiceProviderConfig
  endpoint:
    path: /scim/v2/ServiceProviderConfig
    method: GET
    data_selector: schemas
notes:
- Public apps published in our App Directory can make up to 500,000 requests per day.
- Draft and Private apps are subject to rate limits of 120 calls/minute and starting
  at 500 calls/day.
- Public App users need access to the Create/Modify Workgroup Shares scope for certain
  operations.
- Public App users need access to the View Surveys scope to access survey details.
- Public App users need access to the View Responses scope to create and manage share
  results.
- Public App users need access to the View Surveys scope.
- Public App users need access to the Create/Modify Surveys scope.
- Endpoint currently not available for Canadian users.
- Access tokens don’t currently expire but may in the future.
- Requests made to the API to create contacts or send invite messages are subject
  to limits.
- Public App users need access to the View Surveys scope to get surveys.
- Public App users need access to the Create/Modify Surveys scope to create or modify
  surveys.
- Public App users need access to the View Library Assets scope.
- Ensure you have the correct permissions for accessing survey data.
- Public App users need access to the Create/Modify Collectors scope
- Public App users need access to the View Collectors scope
- Public App users need access to specific scopes for certain operations.
- Public App users need access to the View Responses scope
- Public App users need access to the Create/Modify Responses scope
- Public App users need access to the Create/Modify Contacts scope
- Public App users need access to the View Contacts scope
- Public App users need specific scopes for certain operations.
- Public App users need access to the Create/Modify Webhooks scope.
- Public App users need access to the View Workgroup Members scope.
- Public App users need access to the Create/Modify Workgroup Members scope.
- Public App users need access to the View Workgroups scope.
- Public App users need access to the Create/Modify Workgroups scope.
- Public App users need access to the View Workgroup Members scope to get workgroup
  members.
- Public App users need access to the Create/Modify Workgroup Members scope to add
  members.
- SCIM version 2.0 is supported.
- Authentication scheme using the OAuth Bearer Token Standard
errors:
- '1000: Unable to process the request with the provided input.'
- '1001: The body provided was not a proper JSON string.'
- '1002: Invalid schema in the body provided.'
- '1003: Invalid URL parameters.'
- '1004: Invalid request headers.'
- '1005: Account must be upgraded to access this feature.'
- '1010: The authorization token was not provided.'
- '1011: The authorization token provided was invalid.'
- '1012: The authorization token provided has expired.'
- '1013: Client revoked access to the authorization token provided.'
- '1014: Permission has not been granted by the user to make this request.'
- '1015: The user does not have the required plan to make this request.'
- '1016: The user does not have permission to access the resource.'
- '1017: The user has hit a quota limit on this resource.'
- '1018: The user does not have permission to access the host in this region.'
- '1020: There was an error retrieving the requested resource.'
- '1025: Unable to complete the request due to a conflict.'
- '1026: The requested resource already exists.'
- '1030: The requested entity is too large, it can not be returned.'
- '1040: Too many requests were made, try again later.'
- '1050: Oh bananas! We couldn’t process your request.'
- '1051: Service unreachable. Please try again later.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '404 Not Found: Check if the survey ID exists'
- '400 Bad Request: Check the request parameters and body'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Verify authentication credentials.'
- '404 Not Found: The specified resource does not exist.'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Check your access token'
- '404 Not Found: Resource not found'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth token'
- '404 Not Found: Resource does not exist'
- '400 Bad Request: Invalid request parameters'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Create/Modify Contacts
  - View Contacts
  - OAuth Bearer Token
client:
  base_url: https://api.surveymonkey.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
    flow: refresh_token
    token_url: https://api.surveymonkey.com/oauth/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
  headers:
    Accept: application/scim+json
    Content-Type: application/scim+json
    Authorization: Bearer {access-token}
  paginator:
    type: page
    page_size_param: per_page
    default_page_size: 1
source_metadata: null
