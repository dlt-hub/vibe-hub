resources:
- name: authorization_models
  endpoint:
    path: /stores/{store_id}/authorization-models
    method: GET
- name: relationship_tuples
  endpoint:
    path: /stores/{store_id}/changes
    method: GET
- name: assertions
  endpoint:
    path: /stores/{store_id}/assertions/{authorization_model_id}
    method: GET
- name: logs
  endpoint:
    path: /stores/{store_id}/logs
    method: GET
- name: check
  endpoint:
    path: /stores/{store_id}/check
    method: POST
    data_selector: allowed
- name: write
  endpoint:
    path: /stores/{store_id}/write
    method: POST
    data_selector: {}
- name: list_users
  endpoint:
    path: /stores/$FGA_STORE_ID/list-users
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: list_users
  endpoint:
    path: /stores/{{ dlt.secrets['FGA_STORE_ID'] }}/list-users
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: list_users
  endpoint:
    path: /stores/{FGA_STORE_ID}/list-users
    method: POST
    data_selector: objects
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: list_users
  endpoint:
    path: /stores/{store_id}/list-users
    method: POST
    data_selector: users
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
      object:
        type: document
        id: planning
      relation: viewer
      user_filters:
      - type: user
- name: logs
  endpoint:
    path: /stores/{store_id}/logs
    method: GET
    data_selector: logs
    params: {}
- name: check
  endpoint:
    path: /stores/{store_id}/check
    method: POST
    data_selector: allowed
    params: {}
- name: relationship_tuples
  endpoint:
    path: /fga-concepts#what-is-a-relationship-tuple
    method: POST
    data_selector: tuples
- name: stores
  endpoint:
    path: /intro/stores
    method: GET
- name: usage_metrics
  endpoint:
    path: /intro/metrics
    method: GET
- name: organization
  endpoint:
    path: /fga/concepts#what-is-a-relation
    method: GET
    data_selector: relations
- name: document
  endpoint:
    path: /fga/concepts#what-is-a-relation
    method: GET
    data_selector: relations
- name: user
  endpoint:
    path: /user
    method: POST
    data_selector: type_definitions
- name: domain
  endpoint:
    path: /domain
    method: POST
    data_selector: type_definitions
- name: folder
  endpoint:
    path: /folder
    method: POST
    data_selector: type_definitions
- name: document
  endpoint:
    path: /document
    method: POST
    data_selector: type_definitions
- name: authorization_models
  endpoint:
    path: /api/service#/Authorization%20Models/ReadAuthorizationModels
    method: GET
    data_selector: models
- name: tuples
  endpoint:
    path: /api/service#/Relationship%20Tuples/Write
    method: POST
    data_selector: tuples
- name: check
  endpoint:
    path: /api/service#/Relationship%20Queries/Check
    method: POST
    data_selector: result
- name: list_objects
  endpoint:
    path: /api/service#/Relationship%20Queries/ListObjects
    method: GET
    data_selector: objects
- name: list_users
  endpoint:
    path: /api/service#/Relationship%20Queries/ListUsers
    method: GET
    data_selector: users
- name: expand
  endpoint:
    path: /api/service#/Relationship%20Queries/Expand
    method: POST
    data_selector: expanded
- name: relationship_tuple
  endpoint:
    path: /relationship_tuples
    method: POST
    data_selector: writes
    params: {}
- name: authorization_models
  endpoint:
    path: /authorization_models
    method: GET
    data_selector: models
    params: {}
- name: check_relationship
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check_relationship
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params:
      authorization_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: relationship_tuples
  endpoint:
    path: /writes
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: authorization_models
  endpoint:
    path: /authorization-models
    method: GET
    data_selector: models
    params: {}
- name: authorization_model
  endpoint:
    path: /stores/{store_id}/authorization_models
    method: GET
    data_selector: models
- name: check
  endpoint:
    path: /stores/{store_id}/check
    method: POST
    data_selector: allowed
- name: roles_permissions
  endpoint:
    path: /modeling/roles-and-permissions
    method: POST
    data_selector: roles_permissions
    params: {}
- name: check_authorization
  endpoint:
    path: /stores/{{ dlt.secrets['FGA_STORE_ID'] }}/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /stores/{{ dlt.secrets['FGA_STORE_ID'] }}/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /stores/{store_id}/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: folder
  endpoint:
    path: /model/folder
    method: POST
- name: document
  endpoint:
    path: /model/document
    method: POST
- name: check_permission
  endpoint:
    path: /stores/{FGA_STORE_ID}/write
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check_permission
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params: {}
- name: authorization_model
  endpoint:
    path: /authorization_models
    method: GET
    data_selector: models
- name: check_authorization
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
- name: write
  endpoint:
    path: /stores/{FGA_STORE_ID}/write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: authorization_model
  endpoint:
    path: /authorization_models
    method: GET
    data_selector: models
- name: check
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
- name: check_authorization
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check_permission
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params:
      authorization_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check_permission
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params:
      authorization_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check_authorization
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: custom_roles
  endpoint:
    path: /v1/roles
    method: POST
- name: authorization_model
  endpoint:
    path: /read_authorization_models
    method: GET
    data_selector: allowed
- name: check
  endpoint:
    path: /stores/{store_id}/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: write
  endpoint:
    path: /stores/{store_id}/write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: authorization_model
  endpoint:
    path: /stores/{store_id}/authorization-models
    method: POST
    data_selector: id
    params: {}
- name: conditional_relationship_tuple
  endpoint:
    path: /stores/{store_id}/write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check_authorization
  endpoint:
    path: /stores/{store_id}/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: list_objects
  endpoint:
    path: /list-objects
    method: POST
    data_selector: objects
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check_permission
  endpoint:
    path: /stores/{FGA_STORE_ID}/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /stores/{store_id}/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: authorization_model
  endpoint:
    path: /stores/$FGA_STORE_ID/write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: writes
  endpoint:
    path: /writes
    method: POST
    data_selector: writes
- name: authorization_model
  endpoint:
    path: /authorization_models
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /stores/{FGA_STORE_ID}/check
    method: POST
    data_selector: authorization_model_id
    params: {}
- name: authorization_models
  endpoint:
    path: /stores/{store_id}/write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /stores/{store_id}/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /stores/{{ dlt.secrets['FGA_STORE_ID'] }}/check
    method: POST
    data_selector: authorization_model_id
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: write
  endpoint:
    path: /write
    method: POST
    data_selector: writes
    params:
      AuthorizationModelId: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: write
  endpoint:
    path: /write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: writes
  endpoint:
    path: /stores/$FGA_STORE_ID/write
    method: POST
    data_selector: writes
    params: {}
- name: tuple_write
  endpoint:
    path: /stores/{store_id}/write
    method: POST
    data_selector: writes
- name: check
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
- name: check
  endpoint:
    path: /stores/{store_id}/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: write
  endpoint:
    path: /stores/{FGA_STORE_ID}/write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /stores/{FGA_STORE_ID}/check
    method: POST
    data_selector: allowed
- name: check
  endpoint:
    path: /stores/{store_id}/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /stores/{store_id}/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
      tuple_key:
        user: user:anne
        relation: can_view
        object: transaction:A
- name: write
  endpoint:
    path: /stores/{store_id}/write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: authorization_model
  endpoint:
    path: /stores/{store_id}/write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: write
  endpoint:
    path: /stores/{FGA_STORE_ID}/write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /stores/{FGA_STORE_ID}/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: write
  endpoint:
    path: /stores/{FGA_STORE_ID}/write
    method: POST
    data_selector: result
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /stores/$FGA_STORE_ID/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check_authorization
  endpoint:
    path: /stores/{{ dlt.secrets['FGA_STORE_ID'] }}/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: write
  endpoint:
    path: /write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: tuples
  endpoint:
    path: /stores/{store_id}/write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: user
  endpoint:
    path: /user
    method: GET
- name: bank
  endpoint:
    path: /bank
    method: GET
- name: branch
  endpoint:
    path: /branch
    method: GET
- name: account
  endpoint:
    path: /account
    method: GET
- name: transaction
  endpoint:
    path: /transaction
    method: GET
- name: timeslot
  endpoint:
    path: /timeslot
    method: GET
- name: ip-address-range
  endpoint:
    path: /ip-address-range
    method: GET
- name: authorization_model
  endpoint:
    path: /stores/{store_id}/write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: organization
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: writes
  endpoint:
    path: /writes
    method: POST
    data_selector: writes
- name: write
  endpoint:
    path: /stores/{store_id}/write
    method: POST
    data_selector: deletes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /stores/{store_id}/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: write
  endpoint:
    path: /stores/{store_id}/write
    method: POST
    data_selector: response
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: writes
  endpoint:
    path: /stores/{store_id}/write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: Store Metadata
  endpoint:
    path: /fga/store-metadata
    method: GET
    data_selector: store
    params: {}
- name: Authorization Model
  endpoint:
    path: /fga/authorization-model
    method: GET
    data_selector: model
    params: {}
- name: Relationship Tuples
  endpoint:
    path: /fga/tuples
    method: GET
    data_selector: tuples
    params: {}
- name: Tests
  endpoint:
    path: /fga/tests
    method: GET
    data_selector: tests
    params: {}
- name: core
  endpoint:
    path: /api/core
    method: GET
- name: issue-tracker
  endpoint:
    path: /api/issue-tracker
    method: GET
- name: wiki
  endpoint:
    path: /api/wiki
    method: GET
- name: write_tuple
  endpoint:
    path: /stores/{store_id}/write
    method: POST
    data_selector: writes
    params: {}
- name: check_permission
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params: {}
- name: check_authorization
  endpoint:
    path: /stores/{store_id}/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
- name: client_check
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params:
      authorization_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: relationship_tuple
  endpoint:
    path: /relationship/tuples
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check_access
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check_authorization
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: write_relationships
  endpoint:
    path: /write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check_relationships
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /stores/{FGA_STORE_ID}/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check_authorization
  endpoint:
    path: /stores/{store_id}/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /stores/{FGA_STORE_ID}/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /stores/{store_id}/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /stores/{store_id}/check
    method: POST
    data_selector: allowed
- name: relationship_tuples
  endpoint:
    path: /write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: write_tuple
  endpoint:
    path: /stores/${FGA_STORE_ID}/write
    method: POST
    data_selector: deletes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: write
  endpoint:
    path: /stores/{{ dlt.secrets['FGA_STORE_ID'] }}/write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: relationship_tuples
  endpoint:
    path: /write
    method: POST
    data_selector: writes
- name: tuple_write
  endpoint:
    path: /stores/{FGA_STORE_ID}/write
    method: POST
    data_selector: deletes.tuple_keys
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: write
  endpoint:
    path: /stores/{{ dlt.secrets['FGA_STORE_ID'] }}/write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: write_relationship_tuples
  endpoint:
    path: /write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: write_tuple
  endpoint:
    path: /stores/{FGA_STORE_ID}/write
    method: POST
    data_selector: deletes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: write
  endpoint:
    path: /stores/{{ dlt.secrets['FGA_STORE_ID'] }}/write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: write_tuples
  endpoint:
    path: /write
    method: POST
    data_selector: writes
- name: write_tuple
  endpoint:
    path: /stores/${FGA_STORE_ID}/write
    method: POST
    data_selector: deletes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: write
  endpoint:
    path: /stores/{{ dlt.secrets['FGA_STORE_ID'] }}/write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: authorization_model
  endpoint:
    path: /read_authorization_models
    method: GET
    data_selector: models
- name: client_write
  endpoint:
    path: /write
    method: POST
    data_selector: response
- name: relationship_tuples
  endpoint:
    path: /writes
    method: POST
    data_selector: writes
- name: write
  endpoint:
    path: /stores/${FGA_STORE_ID}/write
    method: POST
    data_selector: deletes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: write
  endpoint:
    path: /stores/{store_id}/write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /stores/{store_id}/check
    method: POST
    data_selector: authorization_model_id
    params: {}
- name: write
  endpoint:
    path: /stores/{store_id}/write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /stores/$FGA_STORE_ID/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: store
  endpoint:
    path: /stores
    method: GET
    data_selector: stores
- name: authorization_model
  endpoint:
    path: /models
    method: GET
    data_selector: models
- name: relationship_tuples
  endpoint:
    path: /tuples
    method: POST
    data_selector: tuples
- name: relationship_tuples
  endpoint:
    path: /fga/tuples
    method: POST
    data_selector: tuples
- name: write_relationship_tuples
  endpoint:
    path: /stores/$FGA_STORE_ID/write
    method: POST
    data_selector: writes
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: batch_check
  endpoint:
    path: /stores/$FGA_STORE_ID/batch-check
    method: POST
    data_selector: results
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: check
  endpoint:
    path: /stores/$FGA_STORE_ID/check
    method: POST
    data_selector: allowed
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
- name: batch_check
  endpoint:
    path: /batch-check
    method: POST
    data_selector: results
- name: authorization_models
  endpoint:
    path: /read_authorization_models
    method: POST
    data_selector: access_token
- name: store
  endpoint:
    path: /stores
    method: GET
    data_selector: stores
    params: {}
- name: list_objects
  endpoint:
    path: /stores/$FGA_STORE_ID/list-objects
    method: POST
    data_selector: objects
    params:
      authorization_model_id: 01HVMMBCMGZNT3SED4Z17ECXCA
      user: user:anne
      relation: reader
      type: document
- name: store
  endpoint:
    path: /store
    method: GET
- name: tuples
  endpoint:
    path: /tuples
    method: GET
- name: document
  endpoint:
    path: /read/{document}
    method: GET
- name: check
  endpoint:
    path: /check
    method: POST
    data_selector: allowed
    params: {}
notes:
- API URLs are unique to the region the store was created in.
- Set the required environment variables according to the 'How to get your API keys'
- The credentials are not needed if connecting to the Playground API
- Environment variables must be set for FGA_API_URL, FGA_STORE_ID, FGA_MODEL_ID, FGA_API_TOKEN_ISSUER,
  FGA_API_AUDIENCE, FGA_CLIENT_ID, and FGA_CLIENT_SECRET.
- Uses Client Credentials for authorization.
- Credentials are not needed if connecting to the Playground API
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Free trial is not time-limited.
- The free trial has limitations on rate limits per store.
- Home Realm Discovery must be enabled for Auth0 FGA to work with SSO.
- Logs are retained for 7 days
- API token must have the 'Search logs' scope enabled
- The Logging API won't have CLI or SDK support; use direct REST calls to call this
  API.
- You need to create authorized clients before you are able to call the Auth0 FGA
  API.
- You will not be able to see the client secret again after this step. It will need
  to be regenerated if it is ever lost or compromised in any way.
- You can add tuples on the FGA Dashboard.
- Ensure the user identifier is in the correct format.
- The data displayed in the Metrics dashboard is intended to provide an approximate
  view of your usage trends and should not be used for validation of specific operations.
- There is a known issue where the Dashboard only allows selecting between the first
  6 stores created, we are working on a fix.
- Developer Mode provides a single page view with panels for managing the authorization
  model, relationship tuples, and assertions.
- Defining an authorization model requires codifying an answer to the question 'why
  could user U perform an action A on an object O?' for all use cases or actions in
  your system.
- The Auth0 FGA authorization model API and SDK only accepts JSON in its input.
- Auth0 Fine-Grained Authorization (FGA) does not allow the referenced relation to
  reference another relation and does not allow non-concrete types in its type restrictions.
- Authorization Models in Auth0 FGA are immutable, they are created once and then
  can no longer be deleted or modified.
- When you write an authorization model, a new version is created.
- API credentials are required and should be stored securely.
- Ensure the environment variables are set
- Requires setup of store and authorization model in the dashboard
- Uses client credentials flow for authentication.
- When creating relationship tuples for Auth0 FGA, use unique ids for each object
  and user in your application domain.
- Roles allow for finer-grained permissions
- Permissions can be derived from roles
- Check if environment variables are set according to the 'How to get your API keys'
  page.
- Environment variables must be set according to the 'How to get your API keys' page
- Use unique ids for each object and user within your application domain when creating
  relationship tuples for Auth0 Fine-Grained Authorization (FGA).
- Requires setup of the API keys in your environment variables.
- When searching tuples related to the object, FGA does not evaluate and only considers
  concrete objects that were directly assigned.
- When searching tuples related to the object, FGA will not evaluate and only considers
  concrete objects directly assigned.
- Ensure the environment variables are set correctly for the SDK to work.
- Set the environment variables according to the 'How to get your API keys'
- FGA_STORE_ID is required for all methods except CreateStore and ListStores.
- FGA_MODEL_ID is optional and can be overridden per request.
- Ensure the environment variables are set according to the API documentation.
- Ensure the environment variables are set according to the 'How to get your API keys'
  page.
- Ensure the environment variables are set according to the 'How to get your API keys'
- Set the required environment variables according to 'How to get your API keys'
- Ensure environment variables are set for API connection.
- FGA_STORE_ID is required before calling for all other methods.
- Environment variables must be set to configure the SDK client.
- When evaluating a condition at request time, the context written/persisted in the
  relationship tuple and the context provided at request time are merged together
  into a single evaluation context.
- Contextual Tuples are not supported on the playground
- Environment variables must be set for configuration.
- Get FGA_STORE_ID and FGA_MODEL_ID from your store settings in the dashboard.
- Ensure the environment variables are set.
- Get your API Keys from your store settings in the dashboard.
- FGA_API_URL = 'https://api.us1.fga.dev/' for Dev Preview
- FGA_STORE_ID = 'YOUR_STORE_ID' - Get this from your store settings in the dashboard
- FGA_MODEL_ID = 'YOUR_MODEL_ID' - optional, can be overridden per request
- Authorization model ID can be overridden per request.
- Credentials are not needed if connecting to the Playground API.
- Authorization model ID can be overridden per request
- Store ID is required before calling for all other methods
- Set the required environment variables according to the 'How to get your API keys'
  page
- FGA_API_URL, FGA_STORE_ID, and FGA_MODEL_ID are required for setup.
- Authorization model ID is optional, can be overridden per request.
- Set environment variables according to the 'How to get your API keys' page.
- Ensure the environment variables are set according to the 'How to get your API keys'
  documentation.
- Ensure the environment variables are set for API configuration.
- Environment variables must be set for API access.
- Authorization model ID can be overridden per request to help reduce latency.
- Set environment variables according to the 'How to get your API keys' guide.
- Contextual tuples are not persisted in the store.
- Final version of the Authorization Model and Relationship tuples
- Required environment variables must be set according to the 'How to get your API
  keys' instructions.
- Authorization model ID is required for check and write operations
- Only supported on the Check API endpoint and ListObjects API endpoint.
- To use modular models you need to use FGA CLI to maintain authorization models.
- The Auth0 FGA dashboard will not let you update an authorization model that uses
  modular models.
- Must set environment variables for API URL and credentials.
- Get API keys from your store settings in the dashboard.
- Ensure to set the environment variables according to the 'How to get your API keys'
- Set the required environment variables for API keys
- Set environment variables according to the 'How to get your API keys' page
- Ensure the environment variables are set for API access
- Ensure environment variables are set for API keys.
- Environment variables must be set for API configuration.
- Ensure the environment variables are set for API access.
- Get your Store ID and API keys from the dashboard.
- Set the required environment variables according to the "How to get your API keys"
- The Write API allows you to send up to 40 unique tuples in the request.
- Ensure the environment variables are set correctly before making API calls.
- Limitations on duplicate tuples in a single request
- The Write API allows you to send up to 40 unique tuples in the request
- Ensure the environment variables are set according to the 'How to get your API Keys'
  page.
- Use the appropriate API URL based on the region
- Get the store ID and model ID from your store settings in the dashboard.
- Set required environment variables before using the API
- FGA uses eventually consistent, multi-region active-active database
- Authorization is not needed if the service does not require it.
- Store this `access_token` value in environment variable `FGA_BEARER_TOKEN`
- Store this access_token value in environment variable FGA_BEARER_TOKEN
- 'Ensure the environment variables are set: FGA_API_URL, FGA_STORE_ID, FGA_API_TOKEN_ISSUER,
  FGA_API_AUDIENCE, FGA_CLIENT_ID, FGA_CLIENT_SECRET.'
- Get FGA_STORE_ID and FGA_CLIENT_ID from your store settings in the dashboard
- Ensure the environment variables are set before calling the API.
- Get your API Keys from your store settings in the dashboard
- When using the Write API, you cannot include the same tuple (same user, relation,
  and object) in the writes or deletes arrays within a single request.
- Requires >=v0.8.0 for the server side BatchCheck, earlier versions support a client-side
  BatchCheck with a slightly different interface
- Requires >=v0.8.0 for the server side BatchCheck
- Max batch size is optional, default is 50, can be used to limit the number of checks
  in a single server request
- Max parallel requests is optional, default is 10, can be used to limit the parallelization
  of the BatchCheck chunks
- 'The Auth0 FGA API does not support the store methods or API Endpoints: store list,
  store create, store import, store get and store delete.'
- Set up your own login method based on your OpenID connect provider's documentation.
- Uses OAuth2 with client credentials for authentication.
- As of April 30th, 2025, the FGA API token issuer URL has been changed to auth.fga.dev.
errors:
- '401 Unauthorized: Recheck OAuth credentials'
- '401 Unauthorized: Check your API token'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check API token and scopes'
- '429 Too Many Requests: Rate limit exceeded'
- 'Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck API keys or token expiration'
- '401 Unauthorized: Recheck credentials or token expiration'
- '404 Not Found: Verify the store ID or model ID'
- '401 Unauthorized: Recheck credentials or permissions'
- '403 Forbidden: Insufficient permissions for the requested action'
- 'Unauthorized: Recheck API token or credentials.'
- 'Not Found: Verify the store ID or endpoint path.'
- Error if FGA encounters rewrites or usersets.
- '400 Bad Request: Check your request format and parameters.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '401 Unauthorized: Check your API credentials and environment variables.'
- 'Unauthorized: Check your API token and permissions'
- '401 Unauthorized: Check API Token Issuer and Audience.'
- '400 Bad Request: Verify request parameters.'
- '401 Unauthorized: Check your API keys.'
- '401 Unauthorized: Check your credentials or permissions.'
- '401 Unauthorized: Check your API keys'
- '401 Unauthorized: Check OAuth scopes or token expiration'
- '401 Unauthorized: Check client credentials'
- '401 Unauthorized: Recheck API token issuer or client credentials'
- '401 Unauthorized: Check your API keys or permissions.'
- '401 Unauthorized: Recheck API token issuer or audience.'
- '404 Not Found: Check the store ID or model ID.'
- '401 Unauthorized: Not needed if service does not require authorization'
- '401 Unauthorized: Check client credentials and permissions.'
- 'Unauthorized: Check your API keys.'
- '401 Unauthorized: Check API token or authorization model ID'
- 'Error: Invalid credentials'
- 'Error: API rate limit exceeded'
- 'Unauthorized: Check if the API token is valid and not expired.'
- '401 Unauthorized: Check the provided credentials and their permissions.'
- 'Not Found: Ensure the store ID is correct'
- '401 Unauthorized: Recheck API token or credentials'
- '400 Bad Request: Check request parameters for correctness'
- '400 Bad Request: Check the request format and parameters'
- '401 Unauthorized: Recheck token validity and permissions'
- '401 Unauthorized: Recheck client credentials or token'
- '401 Unauthorized: Check client credentials or token expiration'
- '401 Unauthorized: Check API key or token'
- '401 Unauthorized: Recheck your API token.'
- '401 Unauthorized: Recheck API token or authorization model ID'
- 'cannot_allow_duplicate_tuples_in_one_request: Duplicate tuples detected in the
  request'
- '401 Unauthorized: Check your API token or authorization model ID'
- '401 Unauthorized: Recheck API keys or token issuer.'
- 'cannot_allow_duplicate_tuples_in_one_request: Duplicate tuples detected'
- 'cannot_allow_duplicate_tuples_in_one_request: Duplicate tuples detected in request.'
- '401 Unauthorized: Recheck API token or permissions'
- '400 Bad Request: Check the request structure and parameters'
- cannot_allow_duplicate_tuples_in_one_request
- 'write_failed_due_to_invalid_input: cannot write a tuple which already exists'
- '403 Forbidden: User does not have permission to access the document.'
- '503 Service Unavailable: Unable to build OpenFGA client or check for authorization.'
auth_info:
  mentioned_objects:
  - CredentialsMethod
  - ClientConfiguration
  - api_token
  - store_id
  - OpenFgaClient
  - Credentials
  - AuthorizationModel
  - RelationshipTuple
  - User
  - Object
  - Relation
  - CredentialConfiguration
  - ClientCredentials
  - ClientCheckRequest
  - ClientCheckOptions
  - AuthorizationModelId
  - ClientTuple
  - ClientWriteRequest
  - ClientWriteOptions
  - Check Request
  - Relationship Tuple
  - Contextual Tuple
  - FGA_API_URL
  - FGA_STORE_ID
  - FGA_MODEL_ID
  - FGA_API_TOKEN_ISSUER
  - FGA_API_AUDIENCE
  - FGA_CLIENT_ID
  - FGA_CLIENT_SECRET
  - authorization_model_id
  - FGA_API_TOKEN
client:
  base_url: https://api.us1.fga.dev
source_metadata: null
