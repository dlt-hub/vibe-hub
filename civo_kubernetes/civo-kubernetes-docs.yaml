resources:
- name: clusters
  endpoint:
    path: /kubernetes/clusters
    method: GET
    data_selector: clusters
- name: applications
  endpoint:
    path: /kubernetes/applications
    method: GET
    data_selector: applications
- name: kubernetes_versions
  endpoint:
    path: /v2/kubernetes/versions
    method: GET
    data_selector: ''
- name: recycle_node
  endpoint:
    path: /v2/kubernetes/clusters/{cluster_id}/recycle
    method: POST
    data_selector: ''
- name: private_cloud
  endpoint:
    path: /v1/private_clouds
    method: GET
    data_selector: data
    params: {}
- name: civostack
  endpoint:
    path: /v1/civostack
    method: GET
    data_selector: data
    params: {}
- name: meetups
  endpoint:
    path: /meetups
    method: GET
    data_selector: records
    params: {}
- name: gpu_compute
  endpoint:
    path: /v1/gpu/compute
    method: GET
    data_selector: data
    params: {}
- name: gpu_kubernetes
  endpoint:
    path: /v1/gpu/kubernetes
    method: GET
    data_selector: data
    params: {}
- name: meetup
  endpoint:
    path: /meetups
    method: GET
    data_selector: meetups
    params: {}
- name: personal_information
  endpoint:
    path: /personal_information
    method: GET
    data_selector: records
- name: event_registration
  endpoint:
    path: /event_registration
    method: POST
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: logos
  endpoint:
    path: /brand-assets
    method: GET
    data_selector: logos
    params: {}
- name: logos
  endpoint:
    path: /brand-assets/logos
    method: GET
    data_selector: logos
    params: {}
- name: color_palette
  endpoint:
    path: /brand-assets/colours
    method: GET
    data_selector: colors
    params: {}
- name: event_space_booking
  endpoint:
    path: /api/event_space/booking
    method: GET
    data_selector: records
    params: {}
- name: mysql
  endpoint:
    path: /databases/mysql
    method: POST
    data_selector: data
- name: postgresql
  endpoint:
    path: /databases/postgresql
    method: POST
    data_selector: data
- name: redis
  endpoint:
    path: /databases/redis
    method: POST
    data_selector: data
- name: load_balancer
  endpoint:
    path: /api/load-balancers
    method: POST
    data_selector: loadBalancers
    params: {}
- name: databases
  endpoint:
    path: /databases
    method: GET
    data_selector: records
    params: {}
- name: load_balancer
  endpoint:
    path: /api/load_balancers
    method: POST
    data_selector: load_balancer_id
    params:
      concurrent_requests: '10000'
- name: VMware Importer
  endpoint:
    path: /vmware/importer
    method: POST
    data_selector: data
    params: {}
- name: CivoStack
  endpoint:
    path: /api/civostack
    method: GET
    data_selector: resources
    params: {}
- name: VMware Importer
  endpoint:
    path: /api/vmware/import
    method: POST
    data_selector: importDetails
- name: VMware Importer
  endpoint:
    path: /vmware-importer
    method: POST
    data_selector: importOptions
    params: {}
- name: instances
  endpoint:
    path: /v2/instances
    method: POST
    data_selector: body
- name: ambassadors
  endpoint:
    path: /ambassadors
    method: GET
    data_selector: records
- name: instances
  endpoint:
    path: /v2/instances
    method: POST
    data_selector: response
    params: {}
- name: Civo cluster autoscaler
  endpoint:
    path: /marketplace/civo-cluster-autoscaler
    method: GET
- name: GitLab
  endpoint:
    path: /marketplace/gitlab
    method: GET
- name: Kubefirst
  endpoint:
    path: /marketplace/kubefirst
    method: GET
- name: Acorn
  endpoint:
    path: /marketplace/acorn
    method: GET
- name: Ambassador Edge Stack
  endpoint:
    path: /marketplace/ambassador-edge-stack
    method: GET
- name: Apache APISIX Ingress Controller
  endpoint:
    path: /marketplace/apisix-ingress-controller
    method: GET
- name: Argo Rollouts
  endpoint:
    path: /marketplace/argo-rollouts
    method: GET
- name: Argo Workflows
  endpoint:
    path: /marketplace/argo-workflows
    method: GET
- name: Argo CD
  endpoint:
    path: /marketplace/argocd
    method: GET
- name: ASP.NET core
  endpoint:
    path: /marketplace/aspnet
    method: GET
- name: Atmo
  endpoint:
    path: /marketplace/atmo
    method: GET
- name: Bitwarden Passwordless.dev
  endpoint:
    path: /marketplace/bitwarden-passwordless-dev
    method: GET
- name: Bitwarden Self Host Unified (BETA)
  endpoint:
    path: /marketplace/bitwarden-unified
    method: GET
- name: Prometheus-Blackbox-Exporter
  endpoint:
    path: /marketplace/blackbox-exporter
    method: GET
- name: Cerbos
  endpoint:
    path: /marketplace/cerbos
    method: GET
- name: Cert Manager
  endpoint:
    path: /marketplace/cert-manager
    method: GET
- name: Chaos Mesh
  endpoint:
    path: /marketplace/chaos-mesh
    method: GET
- name: Code Server
  endpoint:
    path: /marketplace/code-server
    method: GET
- name: Cyclops UI
  endpoint:
    path: /marketplace/cyclops
    method: GET
- name: Dapr
  endpoint:
    path: /marketplace/dapr
    method: GET
- name: Dynamic PV Scaler
  endpoint:
    path: /marketplace/dynamic-pv-scaler
    method: GET
- name: EDP
  endpoint:
    path: /marketplace/edp
    method: GET
- name: EnRoute OneStep Ingress API Gateway
  endpoint:
    path: /marketplace/enroute-onestep
    method: GET
- name: Epinio
  endpoint:
    path: /marketplace/epinio
    method: GET
- name: Falco Security
  endpoint:
    path: /marketplace/falco
    method: GET
- name: FerretDB
  endpoint:
    path: /marketplace/ferretdb
    method: GET
- name: Flagsmith
  endpoint:
    path: /marketplace/flagsmith
    method: GET
- name: Flux
  endpoint:
    path: /marketplace/flux
    method: GET
- name: OPA Gatekeeper
  endpoint:
    path: /marketplace/gatekeeper
    method: GET
- name: Ghost
  endpoint:
    path: /marketplace/ghost
    method: GET
- name: Gimlet
  endpoint:
    path: /marketplace/gimlet
    method: GET
- name: Gitea
  endpoint:
    path: /marketplace/gitea
    method: GET
- name: Gloo Edge
  endpoint:
    path: /marketplace/gloo-edge
    method: GET
- name: grapple solution framework
  endpoint:
    path: /marketplace/grapple-solution-framework
    method: GET
- name: HAProxy
  endpoint:
    path: /marketplace/haproxy
    method: GET
- name: Helm
  endpoint:
    path: /marketplace/helm
    method: GET
- name: Istio Service Mesh
  endpoint:
    path: /marketplace/istio
    method: GET
- name: Jenkins
  endpoint:
    path: /marketplace/jenkins
    method: GET
- name: Joomla
  endpoint:
    path: /marketplace/joomla
    method: GET
- name: Kafka
  endpoint:
    path: /marketplace/kafka
    method: GET
- name: KEDA
  endpoint:
    path: /marketplace/keda
    method: GET
- name: Keptn
  endpoint:
    path: /marketplace/keptn
    method: GET
- name: Ketch
  endpoint:
    path: /marketplace/ketch
    method: GET
- name: Keycloak
  endpoint:
    path: /marketplace/keycloak
    method: GET
- name: Kong Ingress Controller
  endpoint:
    path: /marketplace/kong-ingress-controller
    method: GET
- name: Kriten
  endpoint:
    path: /marketplace/kriten
    method: GET
- name: Kube-hunter
  endpoint:
    path: /marketplace/kube-hunter
    method: GET
- name: Kubeclarity
  endpoint:
    path: /marketplace/kubeclarity
    method: GET
- name: Kubefirst
  endpoint:
    path: /marketplace/kubefirst
    method: GET
- name: Kubeflow
  endpoint:
    path: /marketplace/kubeflow
    method: GET
- name: Kubenav
  endpoint:
    path: /marketplace/kubenav
    method: GET
- name: Kubernetes Dashboard
  endpoint:
    path: /marketplace/kubernetes-dashboard
    method: GET
- name: Kubernetes External Secrets
  endpoint:
    path: /marketplace/kubernetes-external-secrets
    method: GET
- name: KubeRocketCI
  endpoint:
    path: /marketplace/kuberocketci
    method: GET
- name: KubeSphere
  endpoint:
    path: /marketplace/kubesphere
    method: GET
- name: KubeVela
  endpoint:
    path: /marketplace/kubevela
    method: GET
- name: Kubevious
  endpoint:
    path: /marketplace/kubevious
    method: GET
- name: Kubewarden
  endpoint:
    path: /marketplace/kubewarden
    method: GET
- name: Kyverno
  endpoint:
    path: /marketplace/kyverno
    method: GET
- name: Linkerd
  endpoint:
    path: /marketplace/linkerd
    method: GET
- name: LitmusChaos
  endpoint:
    path: /marketplace/litmuschaos
    method: GET
- name: Loki Stack
  endpoint:
    path: /marketplace/loki
    method: GET
- name: Longhorn
  endpoint:
    path: /marketplace/longhorn
    method: GET
- name: Mesh
  endpoint:
    path: /marketplace/maesh
    method: GET
- name: MariaDB
  endpoint:
    path: /marketplace/mariadb
    method: GET
- name: Metrics Server
  endpoint:
    path: /marketplace/metrics-server
    method: GET
- name: MinIO
  endpoint:
    path: /marketplace/minio
    method: GET
- name: MongoDB
  endpoint:
    path: /marketplace/mongodb
    method: GET
- name: Netdata
  endpoint:
    path: /marketplace/netdata
    method: GET
- name: NeuVector
  endpoint:
    path: /marketplace/neuvector
    method: GET
- name: NextCloud
  endpoint:
    path: /marketplace/nextcloud
    method: GET
- name: Sonatype nexus repository oss
  endpoint:
    path: /marketplace/nexus3
    method: GET
- name: Nginx
  endpoint:
    path: /marketplace/nginx
    method: GET
- name: ngrok
  endpoint:
    path: /marketplace/ngrok-ingress-controller
    method: GET
- name: Node-RED
  endpoint:
    path: /marketplace/nodered
    method: GET
- name: OpenFaaS
  endpoint:
    path: /marketplace/openfaas
    method: GET
- name: OpenObserve
  endpoint:
    path: /marketplace/openobserve
    method: GET
- name: Paralus
  endpoint:
    path: /marketplace/paralus
    method: GET
- name: civo_cluster_autoscaler
  endpoint:
    path: /marketplace/civo-cluster-autoscaler
    method: GET
    data_selector: records
    params: {}
- name: gitlab
  endpoint:
    path: /marketplace/gitlab
    method: GET
    data_selector: records
    params: {}
- name: kubefirst
  endpoint:
    path: /marketplace/kubefirst
    method: GET
    data_selector: records
    params: {}
- name: acorn
  endpoint:
    path: /marketplace/acorn
    method: GET
    data_selector: records
    params: {}
- name: ambassador_edge_stack
  endpoint:
    path: /marketplace/ambassador-edge-stack
    method: GET
    data_selector: records
    params: {}
- name: apache_apisix_ingress_controller
  endpoint:
    path: /marketplace/apisix-ingress-controller
    method: GET
    data_selector: records
    params: {}
- name: argo_rollouts
  endpoint:
    path: /marketplace/argo-rollouts
    method: GET
    data_selector: records
    params: {}
- name: argo_workflows
  endpoint:
    path: /marketplace/argo-workflows
    method: GET
    data_selector: records
    params: {}
- name: argo_cd
  endpoint:
    path: /marketplace/argocd
    method: GET
    data_selector: records
    params: {}
- name: aspnet_core
  endpoint:
    path: /marketplace/aspnet
    method: GET
    data_selector: records
    params: {}
- name: atmo
  endpoint:
    path: /marketplace/atmo
    method: GET
    data_selector: records
    params: {}
- name: bitwarden_passwordless_dev
  endpoint:
    path: /marketplace/bitwarden-passwordless-dev
    method: GET
    data_selector: records
    params: {}
- name: bitwarden_unified
  endpoint:
    path: /marketplace/bitwarden-unified
    method: GET
    data_selector: records
    params: {}
- name: prometheus_blackbox_exporter
  endpoint:
    path: /marketplace/blackbox-exporter
    method: GET
    data_selector: records
    params: {}
- name: cerbos
  endpoint:
    path: /marketplace/cerbos
    method: GET
    data_selector: records
    params: {}
- name: cert_manager
  endpoint:
    path: /marketplace/cert-manager
    method: GET
    data_selector: records
    params: {}
- name: chaos_mesh
  endpoint:
    path: /marketplace/chaos-mesh
    method: GET
    data_selector: records
    params: {}
- name: code_server
  endpoint:
    path: /marketplace/code-server
    method: GET
    data_selector: records
    params: {}
- name: cyclops_ui
  endpoint:
    path: /marketplace/cyclops
    method: GET
    data_selector: records
    params: {}
- name: dapr
  endpoint:
    path: /marketplace/dapr
    method: GET
    data_selector: records
    params: {}
- name: devtron
  endpoint:
    path: /marketplace/devtron
    method: GET
    data_selector: records
    params: {}
- name: dynamic_pv_scaler
  endpoint:
    path: /marketplace/dynamic-pv-scaler
    method: GET
    data_selector: records
    params: {}
- name: edp
  endpoint:
    path: /marketplace/edp
    method: GET
    data_selector: records
    params: {}
- name: enroute_onestep
  endpoint:
    path: /marketplace/enroute-onestep
    method: GET
    data_selector: records
    params: {}
- name: epinio
  endpoint:
    path: /marketplace/epinio
    method: GET
    data_selector: records
    params: {}
- name: falco
  endpoint:
    path: /marketplace/falco
    method: GET
    data_selector: records
    params: {}
- name: ferretdb
  endpoint:
    path: /marketplace/ferretdb
    method: GET
    data_selector: records
    params: {}
- name: flagsmith
  endpoint:
    path: /marketplace/flagsmith
    method: GET
    data_selector: records
    params: {}
- name: flux
  endpoint:
    path: /marketplace/flux
    method: GET
    data_selector: records
    params: {}
- name: opa_gatekeeper
  endpoint:
    path: /marketplace/gatekeeper
    method: GET
    data_selector: records
    params: {}
- name: ghost
  endpoint:
    path: /marketplace/ghost
    method: GET
    data_selector: records
    params: {}
- name: gimlet
  endpoint:
    path: /marketplace/gimlet
    method: GET
    data_selector: records
    params: {}
- name: gitea
  endpoint:
    path: /marketplace/gitea
    method: GET
    data_selector: records
    params: {}
- name: gloo_edge
  endpoint:
    path: /marketplace/gloo-edge
    method: GET
    data_selector: records
    params: {}
- name: grapple_solution_framework
  endpoint:
    path: /marketplace/grapple-solution-framework
    method: GET
    data_selector: records
    params: {}
- name: haproxy
  endpoint:
    path: /marketplace/haproxy
    method: GET
    data_selector: records
    params: {}
- name: helm
  endpoint:
    path: /marketplace/helm
    method: GET
    data_selector: records
    params: {}
- name: istio
  endpoint:
    path: /marketplace/istio
    method: GET
    data_selector: records
    params: {}
- name: jenkins
  endpoint:
    path: /marketplace/jenkins
    method: GET
    data_selector: records
    params: {}
- name: joomla
  endpoint:
    path: /marketplace/joomla
    method: GET
    data_selector: records
    params: {}
- name: kafka
  endpoint:
    path: /marketplace/kafka
    method: GET
    data_selector: records
    params: {}
- name: keda
  endpoint:
    path: /marketplace/keda
    method: GET
    data_selector: records
    params: {}
- name: keptn
  endpoint:
    path: /marketplace/keptn
    method: GET
    data_selector: records
    params: {}
- name: ketch
  endpoint:
    path: /marketplace/ketch
    method: GET
    data_selector: records
    params: {}
- name: keycloak
  endpoint:
    path: /marketplace/keycloak
    method: GET
    data_selector: records
    params: {}
- name: kong_ingress_controller
  endpoint:
    path: /marketplace/kong-ingress-controller
    method: GET
    data_selector: records
    params: {}
- name: kriten
  endpoint:
    path: /marketplace/kriten
    method: GET
    data_selector: records
    params: {}
- name: kube_hunter
  endpoint:
    path: /marketplace/kube-hunter
    method: GET
    data_selector: records
    params: {}
- name: kubeclarity
  endpoint:
    path: /marketplace/kubeclarity
    method: GET
    data_selector: records
    params: {}
- name: kubeflow
  endpoint:
    path: /marketplace/kubeflow
    method: GET
    data_selector: records
    params: {}
- name: kubenav
  endpoint:
    path: /marketplace/kubenav
    method: GET
    data_selector: records
    params: {}
- name: kubernetes_dashboard
  endpoint:
    path: /marketplace/kubernetes-dashboard
    method: GET
    data_selector: records
    params: {}
- name: kubernetes_external_secrets
  endpoint:
    path: /marketplace/kubernetes-external-secrets
    method: GET
    data_selector: records
    params: {}
- name: kuberocketci
  endpoint:
    path: /marketplace/kuberocketci
    method: GET
    data_selector: records
    params: {}
- name: kubesphere
  endpoint:
    path: /marketplace/kubesphere
    method: GET
    data_selector: records
    params: {}
- name: kubevela
  endpoint:
    path: /marketplace/kubevela
    method: GET
    data_selector: records
    params: {}
- name: kubevious
  endpoint:
    path: /marketplace/kubevious
    method: GET
    data_selector: records
    params: {}
- name: kubewarden
  endpoint:
    path: /marketplace/kubewarden
    method: GET
    data_selector: records
    params: {}
- name: kyverno
  endpoint:
    path: /marketplace/kyverno
    method: GET
    data_selector: records
    params: {}
- name: linkerd
  endpoint:
    path: /marketplace/linkerd
    method: GET
    data_selector: records
    params: {}
- name: litmuschaos
  endpoint:
    path: /marketplace/litmuschaos
    method: GET
    data_selector: records
    params: {}
- name: loki
  endpoint:
    path: /marketplace/loki
    method: GET
    data_selector: records
    params: {}
- name: longhorn
  endpoint:
    path: /marketplace/longhorn
    method: GET
    data_selector: records
    params: {}
- name: maesh
  endpoint:
    path: /marketplace/maesh
    method: GET
    data_selector: records
    params: {}
- name: mariadb
  endpoint:
    path: /marketplace/mariadb
    method: GET
    data_selector: records
    params: {}
- name: metrics_server
  endpoint:
    path: /marketplace/metrics-server
    method: GET
    data_selector: records
    params: {}
- name: minio
  endpoint:
    path: /marketplace/minio
    method: GET
    data_selector: records
    params: {}
- name: mongodb
  endpoint:
    path: /marketplace/mongodb
    method: GET
    data_selector: records
    params: {}
- name: netdata
  endpoint:
    path: /marketplace/netdata
    method: GET
    data_selector: records
    params: {}
- name: neuvector
  endpoint:
    path: /marketplace/neuvector
    method: GET
    data_selector: records
    params: {}
- name: nextcloud
  endpoint:
    path: /marketplace/nextcloud
    method: GET
    data_selector: records
    params: {}
- name: nexus3
  endpoint:
    path: /marketplace/nexus3
    method: GET
    data_selector: records
    params: {}
- name: nginx
  endpoint:
    path: /marketplace/nginx
    method: GET
    data_selector: records
    params: {}
- name: ngrok
  endpoint:
    path: /marketplace/ngrok-ingress-controller
    method: GET
    data_selector: records
    params: {}
- name: nodered
  endpoint:
    path: /marketplace/nodered
    method: GET
    data_selector: records
    params: {}
- name: openfaas
  endpoint:
    path: /marketplace/openfaas
    method: GET
    data_selector: records
    params: {}
- name: openobserve
  endpoint:
    path: /marketplace/openobserve
    method: GET
    data_selector: records
    params: {}
- name: paralus
  endpoint:
    path: /marketplace/paralus
    method: GET
    data_selector: records
    params: {}
- name: Parca
  endpoint:
    path: /marketplace/parca
    method: GET
- name: Percona MySQL
  endpoint:
    path: /marketplace/percona-mysql
    method: GET
- name: Permission-manager
  endpoint:
    path: /marketplace/permission-manager
    method: GET
- name: Percona Monitoring and Management
  endpoint:
    path: /marketplace/pmm
    method: GET
- name: Polaris
  endpoint:
    path: /marketplace/polaris
    method: GET
- name: Portainer
  endpoint:
    path: /marketplace/portainer
    method: GET
- name: PostgreSQL
  endpoint:
    path: /marketplace/postgresql
    method: GET
- name: Projectsveltos
  endpoint:
    path: /marketplace/projectsveltos
    method: GET
- name: Prometheus Operator
  endpoint:
    path: /marketplace/prometheus-operator
    method: GET
- name: Pyroscope
  endpoint:
    path: /marketplace/pyroscope
    method: GET
- name: RabbitMQ
  endpoint:
    path: /marketplace/rabbitmq
    method: GET
- name: Rancher
  endpoint:
    path: /marketplace/rancher
    method: GET
- name: Redis
  endpoint:
    path: /marketplace/redis
    method: GET
- name: rekor
  endpoint:
    path: /marketplace/rekor
    method: GET
- name: Reloader
  endpoint:
    path: /marketplace/reloader
    method: GET
- name: rqlite
  endpoint:
    path: /marketplace/rqlite
    method: GET
- name: Sealed Secrets
  endpoint:
    path: /marketplace/sealed-secrets
    method: GET
- name: Selenium
  endpoint:
    path: /marketplace/selenium
    method: GET
- name: Shipa
  endpoint:
    path: /marketplace/shipa
    method: GET
- name: Siglens-OSS
  endpoint:
    path: /marketplace/siglens-oss
    method: GET
- name: Sonarqube
  endpoint:
    path: /marketplace/sonarqube
    method: GET
- name: Spinkube
  endpoint:
    path: /marketplace/spinkube
    method: GET
- name: System-upgrade-controller
  endpoint:
    path: /marketplace/system-upgrade-controller
    method: GET
- name: Tekton
  endpoint:
    path: /marketplace/tekton
    method: GET
- name: Traefik v2 (LoadBalancer)
  endpoint:
    path: /marketplace/traefik2-loadbalancer
    method: GET
- name: Traefik v2 (NodePort)
  endpoint:
    path: /marketplace/traefik2-nodeport
    method: GET
- name: Unifi network controller
  endpoint:
    path: /marketplace/unifi-controller
    method: GET
- name: Uptime-kuma
  endpoint:
    path: /marketplace/uptime-kuma
    method: GET
- name: HashiCorp Vault
  endpoint:
    path: /marketplace/vault
    method: GET
- name: Volcano
  endpoint:
    path: /marketplace/volcano
    method: GET
- name: WeaveScope
  endpoint:
    path: /marketplace/weavescope
    method: GET
- name: Wordpress
  endpoint:
    path: /marketplace/wordpress
    method: GET
- name: compute
  endpoint:
    path: /v1/compute
    method: GET
    data_selector: data
    params: {}
- name: kubernetes
  endpoint:
    path: /v1/kubernetes
    method: GET
    data_selector: data
    params: {}
- name: Civo Public Cloud Services
  endpoint:
    path: /api
    method: GET
- name: Civo relaxAI
  endpoint:
    path: /api
    method: GET
- name: Parca
  endpoint:
    path: /marketplace/parca
    method: GET
- name: Percona MySQL
  endpoint:
    path: /marketplace/percona-mysql
    method: GET
- name: Permission-manager
  endpoint:
    path: /marketplace/permission-manager
    method: GET
- name: Percona Monitoring and Management
  endpoint:
    path: /marketplace/pmm
    method: GET
- name: Polaris
  endpoint:
    path: /marketplace/polaris
    method: GET
- name: Portainer
  endpoint:
    path: /marketplace/portainer
    method: GET
- name: PostgreSQL
  endpoint:
    path: /marketplace/postgresql
    method: GET
- name: Projectsveltos
  endpoint:
    path: /marketplace/projectsveltos
    method: GET
- name: Prometheus Operator
  endpoint:
    path: /marketplace/prometheus-operator
    method: GET
- name: Pyroscope
  endpoint:
    path: /marketplace/pyroscope
    method: GET
- name: RabbitMQ
  endpoint:
    path: /marketplace/rabbitmq
    method: GET
- name: Rancher
  endpoint:
    path: /marketplace/rancher
    method: GET
- name: Redis
  endpoint:
    path: /marketplace/redis
    method: GET
- name: rekor
  endpoint:
    path: /marketplace/rekor
    method: GET
- name: Reloader
  endpoint:
    path: /marketplace/reloader
    method: GET
- name: rqlite
  endpoint:
    path: /marketplace/rqlite
    method: GET
- name: Sealed Secrets
  endpoint:
    path: /marketplace/sealed-secrets
    method: GET
- name: Selenium
  endpoint:
    path: /marketplace/selenium
    method: GET
- name: Shipa
  endpoint:
    path: /marketplace/shipa
    method: GET
- name: Siglens-OSS
  endpoint:
    path: /marketplace/siglens-oss
    method: GET
- name: Sonarqube
  endpoint:
    path: /marketplace/sonarqube
    method: GET
- name: Spinkube
  endpoint:
    path: /marketplace/spinkube
    method: GET
- name: System-upgrade-controller
  endpoint:
    path: /marketplace/system-upgrade-controller
    method: GET
- name: Tekton
  endpoint:
    path: /marketplace/tekton
    method: GET
- name: Traefik v2 (LoadBalancer)
  endpoint:
    path: /marketplace/traefik2-loadbalancer
    method: GET
- name: Traefik v2 (NodePort)
  endpoint:
    path: /marketplace/traefik2-nodeport
    method: GET
- name: Unifi network controller
  endpoint:
    path: /marketplace/unifi-controller
    method: GET
- name: Uptime-kuma
  endpoint:
    path: /marketplace/uptime-kuma
    method: GET
- name: HashiCorp Vault
  endpoint:
    path: /marketplace/vault
    method: GET
- name: Volcano
  endpoint:
    path: /marketplace/volcano
    method: GET
- name: WeaveScope
  endpoint:
    path: /marketplace/weavescope
    method: GET
- name: Wordpress
  endpoint:
    path: /marketplace/wordpress
    method: GET
- name: Civo Public Cloud Services
  endpoint:
    path: /api
    method: GET
- name: Civo relaxAI
  endpoint:
    path: /api
    method: GET
- name: instances
  endpoint:
    path: /v1/instances
    method: GET
    data_selector: instances
    params: {}
- name: firewalls
  endpoint:
    path: /networking/firewalls
    method: GET
    data_selector: firewalls
    params: {}
- name: firewalls
  endpoint:
    path: /networking/firewalls
    method: GET
    data_selector: firewalls
    params: {}
- name: firewall
  endpoint:
    path: /firewalls
    method: POST
    data_selector: firewall
    params: {}
- name: firewall_rule
  endpoint:
    path: /firewall/rule
    method: POST
    data_selector: rule
    params: {}
- name: firewall
  endpoint:
    path: /firewalls
    method: POST
    data_selector: firewall
    params: {}
- name: firewall_rule
  endpoint:
    path: /firewalls/rules
    method: POST
    data_selector: rule
    params:
      action: allow
      cidr: 0.0.0.0/0
      direction: ingress
      protocol: TCP
- name: civo_size
  endpoint:
    params:
      filter:
      - key: name
        values:
        - g3.small
        match_by: re
      - key: type
        values:
        - instance
- name: civo_disk_image
  endpoint:
    params:
      filter:
      - key: name
        values:
        - debian-10
- name: civo_firewall
  endpoint:
    params:
      name: www
- name: civo_firewall_rule
  endpoint:
    params:
      firewall_id: civo_firewall.www.id
      protocol: tcp
      start_port: '6443'
      end_port: '6443'
      cidr:
      - 0.0.0.0/0
      direction: ingress
      label: kubernetes-api-server
      action: allow
- name: civo_size
  endpoint:
    path: /data/civo_size
    method: GET
    data_selector: records
    params:
      filter:
        key: name
        values:
        - g3.small
        match_by: re
- name: civo_disk_image
  endpoint:
    path: /data/civo_disk_image
    method: GET
    data_selector: records
    params:
      filter:
        key: name
        values:
        - debian-10
- name: civo_firewall
  endpoint:
    path: /resource/civo_firewall
    method: POST
    data_selector: records
    params:
      name: www
- name: civo_firewall_rule
  endpoint:
    path: /resource/civo_firewall_rule
    method: POST
    data_selector: records
    params:
      firewall_id: civo_firewall.www.id
      protocol: tcp
      start_port: '6443'
      end_port: '6443'
      cidr:
      - 0.0.0.0/0
      direction: ingress
      label: kubernetes-api-server
      action: allow
- name: firewalls
  endpoint:
    path: /firewalls
    method: GET
- name: create_firewall
  endpoint:
    path: /firewalls/create
    method: POST
- name: firewall
  endpoint:
    path: /firewalls
    method: POST
    data_selector: firewall
    params:
      name: new_firewall_name
- name: firewall_rule
  endpoint:
    path: /firewalls/rules
    method: POST
    data_selector: rule
    params:
      firewall_id: firewall_id
      protocol: tcp
      start_port: '6443'
      end_port: '6443'
      cidr: 0.0.0.0/0
      direction: ingress
      label: kubernetes-api-server
      action: allow
- name: firewall
  endpoint:
    path: /firewall
    method: POST
    data_selector: firewall
    params:
      name: www
- name: firewall_rule
  endpoint:
    path: /firewall/rule
    method: POST
    data_selector: firewall_rule
    params:
      firewall_id: civo_firewall.www.id
      protocol: tcp
      start_port: '6443'
      end_port: '6443'
      cidr:
      - 0.0.0.0/0
      direction: ingress
      label: kubernetes-api-server
      action: allow
- name: firewall
  endpoint:
    path: /civo_firewall/www
    method: CREATE
    data_selector: id
    params: {}
- name: instance
  endpoint:
    path: /civo_instance/foo
    method: CREATE
    data_selector: id
    params: {}
- name: civo_firewall
  endpoint:
    path: /civo_firewall/www
    method: POST
    data_selector: id
    params: {}
- name: civo_instance
  endpoint:
    path: /civo_instance/foo
    method: POST
    data_selector: id
    params: {}
- name: civo_firewall
  endpoint:
    path: /civo_firewall/www
    method: CREATE
    data_selector: id
    params: {}
- name: civo_firewall_rule
  endpoint:
    path: /civo_firewall_rule/http
    method: CREATE
    data_selector: id
    params:
      cidr:
      - 0.0.0.0/0
      direction: ingress
      end_port: '6443'
      protocol: tcp
      start_port: '6443'
- name: civo_instance
  endpoint:
    path: /civo_instance/foo
    method: CREATE
    data_selector: id
    params:
      disk_image: a4204155-a876-43fa-b4d6-ea2af8774560
      hostname: foo.com
      initial_user: civo
      public_ip_required: create
      size: g3.small
      ram_mb: 2048
- name: firewall
  endpoint:
    path: /firewalls
    method: DELETE
    data_selector: firewall_deleted
- name: civo_firewall
  endpoint:
    path: /civo_firewall/www
    method: CREATE
    data_selector: id
    params: {}
- name: civo_firewall_rule
  endpoint:
    path: /civo_firewall_rule/http
    method: CREATE
    data_selector: id
    params:
      cidr:
      - 0.0.0.0/0
      direction: ingress
      end_port: '6443'
      label: web-server
      protocol: tcp
      start_port: '6443'
- name: civo_instance
  endpoint:
    path: /civo_instance/foo
    method: CREATE
    data_selector: id
    params:
      disk_image: a4204155-a876-43fa-b4d6-ea2af8774560
      hostname: foo.com
      initial_user: civo
      public_ip_required: create
      size: g3.small
- name: registration
  endpoint:
    path: /navigate/india/2025/register
    method: GET
- name: venue_info
  endpoint:
    path: /navigate/india/2025/venue-and-travel
    method: GET
- name: sponsorships
  endpoint:
    path: /navigate/india/2025/sponsor
    method: GET
- name: registration
  endpoint:
    path: /navigate/india/2025/register
    method: GET
    data_selector: registration_info
    params: {}
- name: location
  endpoint:
    path: /navigate/india/2025/venue-and-travel
    method: GET
    data_selector: venue_info
    params: {}
- name: sponsorships
  endpoint:
    path: /navigate/india/2025/sponsor
    method: GET
    data_selector: sponsorship_info
    params: {}
- name: sshkey
  endpoint:
    path: /sshkeys
    method: POST
    data_selector: result
- name: list_sshkeys
  endpoint:
    path: /sshkeys
    method: GET
    data_selector: result
- name: retrieve_sshkey
  endpoint:
    path: /sshkeys/:id
    method: GET
    data_selector: result
- name: update_sshkey
  endpoint:
    path: /sshkeys/:id
    method: PUT
    data_selector: result
- name: remove_sshkey
  endpoint:
    path: /sshkeys/:id
    method: DELETE
    data_selector: result
- name: sshkeys
  endpoint:
    path: /sshkeys
    method: POST
    data_selector: result
- name: list_sshkeys
  endpoint:
    path: /sshkeys
    method: GET
    data_selector: result
- name: retrieve_sshkey
  endpoint:
    path: /sshkeys/:id
    method: GET
    data_selector: result
- name: update_sshkey
  endpoint:
    path: /sshkeys/:id
    method: PUT
    data_selector: result
- name: remove_sshkey
  endpoint:
    path: /sshkeys/:id
    method: DELETE
    data_selector: result
- name: instances
  endpoint:
    path: /v2/instances
    method: POST
    data_selector: result
    params: {}
- name: list_instances
  endpoint:
    path: /v2/instances
    method: GET
    data_selector: result
    params: {}
- name: retrieve_instance
  endpoint:
    path: /v2/instances/:id
    method: GET
    data_selector: result
    params: {}
- name: retag_instance
  endpoint:
    path: /v2/instances/:id/tags
    method: PUT
    data_selector: result
    params: {}
- name: reboot_instance
  endpoint:
    path: /v2/instances/:id/reboots
    method: POST
    data_selector: result
    params: {}
- name: shutdown_instance
  endpoint:
    path: /v2/instances/:id/stop
    method: PUT
    data_selector: result
    params: {}
- name: start_instance
  endpoint:
    path: /v2/instances/:id/start
    method: PUT
    data_selector: result
    params: {}
- name: instances
  endpoint:
    path: /v2/instances
    method: POST
    data_selector: result
    params: {}
- name: list_instances
  endpoint:
    path: /v2/instances
    method: GET
    data_selector: result
    params: {}
- name: retrieve_instance
  endpoint:
    path: /v2/instances/:id
    method: GET
    data_selector: result
    params: {}
- name: retag_instance
  endpoint:
    path: /v2/instances/:id/tags
    method: PUT
    data_selector: result
    params: {}
- name: reboot_instance
  endpoint:
    path: /v2/instances/:id/reboots
    method: POST
    data_selector: result
    params: {}
- name: shutdown_instance
  endpoint:
    path: /v2/instances/:id/stop
    method: PUT
    data_selector: result
    params: {}
- name: start_instance
  endpoint:
    path: /v2/instances/:id/start
    method: PUT
    data_selector: result
    params: {}
- name: instances_start
  endpoint:
    path: /v2/instances/:id/start
    method: PUT
    data_selector: result
    params:
      region: NYC1
- name: instances_resize
  endpoint:
    path: /v2/instances/:id/resize
    method: PUT
    data_selector: result
    params:
      size: g3.small
      region: NYC1
- name: instances_firewall
  endpoint:
    path: /v2/instances/:id/firewall
    method: PUT
    data_selector: result
    params:
      name: restrictive-firewall
- name: instances_allowed_ips
  endpoint:
    path: /v2/instances/:id/allowed_ips
    method: PUT
    data_selector: result
    params:
      allowed_ips:
      - 123.123.34.56
      region: myregion
- name: instances_network_bandwidth_limit
  endpoint:
    path: /v2/instances/:id/network_bandwidth_limit
    method: PUT
    data_selector: result
    params:
      network_bandwidth_limit: 10
      region: myregion
- name: instances_delete
  endpoint:
    path: /v2/instances/:id
    method: DELETE
    data_selector: result
    params:
      region: NYC1
- name: instances
  endpoint:
    path: /v2/instances
    method: PUT
    data_selector: result
    params: {}
- name: instance_snapshots
  endpoint:
    path: /v2/instances/:id/snapshots
    method: GET
    data_selector: null
    params: {}
- name: instance_snapshots
  endpoint:
    path: /v2/instances/:id/snapshots
    method: GET
    data_selector: snapshots
- name: create_instance_snapshot
  endpoint:
    path: /v2/instances/:id/snapshots
    method: POST
    data_selector: snapshot
- name: delete_instance_snapshot
  endpoint:
    path: /v2/instances/:id/snapshots/:snapshot-id
    method: DELETE
    data_selector: status
- name: retrieve_instance_snapshot
  endpoint:
    path: /v2/instances/:id/snapshots/:snapshot-id
    method: GET
    data_selector: snapshot
- name: update_instance_snapshot
  endpoint:
    path: /v2/instances/:id/snapshots/:snapshot-id
    method: PUT
    data_selector: snapshot
- name: restore_instance_snapshot
  endpoint:
    path: /v2/instances/:id/snapshots/:snapshot-id/restore
    method: POST
    data_selector: status
- name: instance_snapshot
  endpoint:
    path: /v2/instances/abc123-45678/snapshots/xyz-312-776555
    method: DELETE
    params:
      region: myregion
- name: instance_snapshot
  endpoint:
    path: /v2/instances/{instance_id}/snapshots/{snapshot_id}
    method: DELETE
    data_selector: null
    params:
      region: myregion
- name: snapshot_schedule
  endpoint:
    path: /v2/resourcesnapshotschedules
    method: GET
    data_selector: schedules
    params:
      region: myregion
- name: snapshot_schedule
  endpoint:
    path: /v2/resourcesnapshotschedules
    method: POST
    data_selector: snapshot_schedule
    params: {}
- name: list_snapshot_schedules
  endpoint:
    path: /v2/resourcesnapshotschedules
    method: GET
    data_selector: snapshot_schedules
    params: {}
- name: retrieve_snapshot_schedule
  endpoint:
    path: /v2/resourcesnapshotschedules/:id
    method: GET
    data_selector: snapshot_schedule
    params: {}
- name: update_snapshot_schedule
  endpoint:
    path: /v2/resourcesnapshotschedules/:id
    method: PUT
    data_selector: snapshot_schedule
    params: {}
- name: delete_snapshot_schedule
  endpoint:
    path: /v2/resourcesnapshotschedules/:id
    method: DELETE
    data_selector: snapshot_schedule
    params: {}
- name: create_private_network
  endpoint:
    path: /networks
    method: POST
    data_selector: result
    params: {}
- name: list_private_networks
  endpoint:
    path: /networks
    method: GET
    data_selector: result
    params: {}
- name: rename_private_network
  endpoint:
    path: /networks/:id
    method: PUT
    data_selector: result
    params: {}
- name: remove_private_network
  endpoint:
    path: /networks/:id
    method: DELETE
    data_selector: result
    params: {}
- name: create_private_network
  endpoint:
    path: /networks
    method: POST
    data_selector: result
    params: {}
- name: list_private_networks
  endpoint:
    path: /networks
    method: GET
    data_selector: result
    params: {}
- name: rename_private_network
  endpoint:
    path: /networks/:id
    method: PUT
    data_selector: result
    params: {}
- name: remove_private_network
  endpoint:
    path: /networks/:id
    method: DELETE
    data_selector: result
    params: {}
- name: create_volume
  endpoint:
    path: /volumes
    method: POST
    data_selector: result
    params: {}
- name: list_volumes
  endpoint:
    path: /volumes
    method: GET
    data_selector: result
    params: {}
- name: attach_volume
  endpoint:
    path: /volumes/:id/attach
    method: PUT
    data_selector: result
    params: {}
- name: detach_volume
  endpoint:
    path: /volumes/:id/detach
    method: PUT
    data_selector: result
    params: {}
- name: delete_volume
  endpoint:
    path: /volumes/:id
    method: DELETE
    data_selector: result
    params: {}
- name: create_volume
  endpoint:
    path: /volumes
    method: POST
    data_selector: result
    params: {}
- name: list_volumes
  endpoint:
    path: /volumes
    method: GET
    data_selector: result
    params: {}
- name: attach_volume
  endpoint:
    path: /volumes/:id/attach
    method: PUT
    data_selector: result
    params: {}
- name: detach_volume
  endpoint:
    path: /volumes/:id/detach
    method: PUT
    data_selector: result
    params: {}
- name: delete_volume
  endpoint:
    path: /volumes/:id
    method: DELETE
    data_selector: result
    params: {}
- name: firewall
  endpoint:
    path: /v2/firewalls
    method: GET
    data_selector: result
    params: {}
- name: firewall_rule
  endpoint:
    path: /v2/firewalls/:firewall_id/rules
    method: GET
    data_selector: result
    params: {}
- name: firewall_rule
  endpoint:
    path: /v2/firewalls/{firewall_id}/rules/{rule_id}
    method: DELETE
- name: disk_images
  endpoint:
    path: /v2/disk_images
    method: GET
    data_selector: disk_images
- name: firewall
  endpoint:
    path: /v2/firewalls
    method: POST
    data_selector: result
    params: {}
- name: list_firewalls
  endpoint:
    path: /v2/firewalls
    method: GET
    data_selector: result
    params: {}
- name: delete_firewall
  endpoint:
    path: /v2/firewalls/:id
    method: DELETE
    data_selector: result
    params: {}
- name: create_firewall_rule
  endpoint:
    path: /v2/firewalls/:firewall_id/rules
    method: POST
    data_selector: result
    params: {}
- name: list_firewall_rules
  endpoint:
    path: /v2/firewalls/:firewall_id/rules
    method: GET
    data_selector: result
    params: {}
- name: delete_firewall_rule
  endpoint:
    path: /v2/firewalls/:firewall_id/rules/:id
    method: DELETE
    data_selector: result
    params: {}
- name: firewall_rule
  endpoint:
    path: /firewalls/{firewall_id}/rules/{rule_id}
    method: DELETE
- name: setup_domain
  endpoint:
    path: /v2/dns
    method: POST
    data_selector: result
- name: update_domain
  endpoint:
    path: /v2/dns/:id
    method: PUT
    data_selector: result
- name: list_domains
  endpoint:
    path: /v2/dns
    method: GET
    data_selector: result
- name: delete_domain
  endpoint:
    path: /v2/dns/:id
    method: DELETE
    data_selector: result
- name: create_dns_record
  endpoint:
    path: /v2/dns/:domain_id/records
    method: POST
    data_selector: result
- name: update_dns_record
  endpoint:
    path: /v2/dns/:domain_id/records/:id
    method: PUT
    data_selector: result
- name: list_dns_records
  endpoint:
    path: /v2/dns/:id/records
    method: GET
    data_selector: result
- name: delete_dns_record
  endpoint:
    path: /v2/dns/:domain_id/records/:id
    method: DELETE
    data_selector: result
- name: dns_record
  endpoint:
    path: /dns/12345/records/12345678-9012-3456-7890-123456789012
    method: DELETE
- name: disk_images
  endpoint:
    path: /disk_images
    method: GET
    data_selector: images
- name: delete_disk_image
  endpoint:
    path: /disk_images/:id
    method: DELETE
    data_selector: null
- name: list_webhooks
  endpoint:
    path: /v2/webhooks
    method: GET
    data_selector: result
    params: {}
- name: create_webhook
  endpoint:
    path: /v2/webhooks
    method: POST
    data_selector: result
    params: {}
- name: test_webhook
  endpoint:
    path: /v2/webhooks/:id/test
    method: POST
    data_selector: result
    params: {}
- name: update_webhook
  endpoint:
    path: /v2/webhooks/:id
    method: PUT
    data_selector: result
    params: {}
- name: delete_webhook
  endpoint:
    path: /v2/webhooks/:id
    method: DELETE
    data_selector: result
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/12345
    method: DELETE
- name: setup_domain
  endpoint:
    path: /v2/dns
    method: POST
    data_selector: result
- name: update_domain
  endpoint:
    path: /v2/dns/:id
    method: PUT
    data_selector: result
- name: list_domains
  endpoint:
    path: /v2/dns
    method: GET
    data_selector: result
- name: delete_domain
  endpoint:
    path: /v2/dns/:id
    method: DELETE
    data_selector: result
- name: create_dns_record
  endpoint:
    path: /v2/dns/:domain_id/records
    method: POST
    data_selector: result
- name: update_dns_record
  endpoint:
    path: /v2/dns/:domain_id/records/:id
    method: PUT
    data_selector: result
- name: list_dns_records
  endpoint:
    path: /v2/dns/:id/records
    method: GET
    data_selector: result
- name: delete_dns_record
  endpoint:
    path: /v2/dns/:domain_id/records/:id
    method: DELETE
    data_selector: result
- name: sizes
  endpoint:
    path: /sizes
    method: GET
    data_selector: ''
- name: dns_record
  endpoint:
    path: /v2/dns/12345/records/12345678-9012-3456-7890-123456789012
    method: DELETE
- name: regions
  endpoint:
    path: /regions
    method: GET
    data_selector: '[]'
    params: {}
- name: webhooks
  endpoint:
    path: /v2/webhooks
    method: GET
    data_selector: result
    params: {}
- name: webhook
  endpoint:
    path: /v2/webhooks/12345
    method: DELETE
    data_selector: null
    params: {}
- name: sizes
  endpoint:
    path: /sizes
    method: GET
    data_selector: ''
- name: regions
  endpoint:
    path: /v2/regions
    method: GET
    data_selector: ''
- name: object_store
  endpoint:
    path: /v2/objectstores
    method: POST
    data_selector: result
    params:
      region: region
- name: list_object_stores
  endpoint:
    path: /v2/objectstores
    method: GET
    data_selector: result
    params:
      region: region
- name: retrieve_object_store
  endpoint:
    path: /v2/objectstores/:id
    method: GET
    data_selector: result
    params:
      region: region
- name: update_object_store
  endpoint:
    path: /v2/objectstores/:id
    method: PATCH
    data_selector: result
    params:
      region: region
- name: delete_object_store
  endpoint:
    path: /v2/objectstores/:id
    method: DELETE
    data_selector: result
    params:
      region: region
- name: create_object_store_credential
  endpoint:
    path: /v2/objectstore/credentials
    method: POST
    data_selector: result
    params:
      region: region
- name: list_object_store_credentials
  endpoint:
    path: /v2/objectstore/credentials
    method: GET
    data_selector: result
    params:
      region: region
- name: retrieve_object_store_credential
  endpoint:
    path: /v2/objectstore/credentials/:id
    method: GET
    data_selector: result
    params:
      region: region
- name: update_object_store_credential
  endpoint:
    path: /v2/objectstore/credentials/:id
    method: PATCH
    data_selector: result
    params:
      region: region
- name: delete_object_store_credential
  endpoint:
    path: /v2/objectstore/credentials/:id
    method: DELETE
    data_selector: result
    params:
      region: region
- name: object_store_credential
  endpoint:
    path: /objectstore/credentials/{id}
    method: DELETE
    params:
      region: NYC1
- name: object_stores
  endpoint:
    path: /v2/objectstores
    method: GET
    data_selector: result
    params:
      region: ''
- name: object_store_credentials
  endpoint:
    path: /v2/objectstore/credentials
    method: GET
    data_selector: result
    params:
      region: ''
- name: credentials
  endpoint:
    path: /objectstore/credentials/{id}
    method: DELETE
    params:
      region: NYC1
- name: quota
  endpoint:
    path: /v2/quota
    method: GET
    data_selector: records
    params: {}
- name: quota
  endpoint:
    path: /v2/quota
    method: GET
    data_selector: null
    params: {}
- name: charges
  endpoint:
    path: /v2/charges
    method: GET
    data_selector: charges
    params: {}
- name: charges
  endpoint:
    path: /v2/charges
    method: GET
    data_selector: records
    params: {}
- name: recovery_mode_status
  endpoint:
    path: /v2/instances/:id/recovery
    method: GET
    data_selector: result
    params:
      region: lon1
- name: put_instance_into_recovery_mode
  endpoint:
    path: /v2/instances/:id/recovery
    method: PUT
    data_selector: result
    params:
      region: lon1
- name: put_instance_out_of_recovery_mode
  endpoint:
    path: /v2/instances/:id/recovery
    method: DELETE
    data_selector: result
    params:
      region: lon1
- name: Recovery Mode Status
  endpoint:
    path: /v2/instances/:id/recovery
    method: GET
    data_selector: result
    params:
      region: lon1
- name: console_session_initialization
  endpoint:
    path: /v2/instances/:id/vnc
    method: PUT
    params:
      region: (required) the identifier for the region where the instance is running,
        from the current region list
- name: retrieve_console_session_status
  endpoint:
    path: /v2/instances/{uuid}/vnc
    method: GET
    params:
      region: (required) the identifier for the region where the instance is running,
        from the current region list
- name: stop_console_session
  endpoint:
    path: /v2/instances/{uuid}/vnc
    method: DELETE
    params:
      region: (required) the identifier for the region where the instance is running,
        from the current region list
- name: console_session_initialization
  endpoint:
    path: /v2/instances/:id/vnc
    method: PUT
    params:
      region: required
- name: console_session_status
  endpoint:
    path: /v2/instances/{uuid}/vnc
    method: GET
    params:
      region: required
- name: stop_console_session
  endpoint:
    path: /v2/instances/{uuid}/vnc
    method: DELETE
    params:
      region: required
- name: stop_console_session
  endpoint:
    path: /instances/{instance_id}/vnc
    method: DELETE
- name: instances
  endpoint:
    path: /v2/instances/{instance_id}/vnc
    method: DELETE
- name: disk_images
  endpoint:
    path: /v2/disk_images
    method: GET
    data_selector: records
    params:
      type: custom
- name: disk_images
  endpoint:
    path: /v2/disk_images
    method: GET
    data_selector: disk_images
    params:
      type: string
- name: disk_images
  endpoint:
    path: /disk_images
    method: GET
    data_selector: id
    params:
      type: custom
- name: disk_images
  endpoint:
    path: /disk_images
    method: GET
    data_selector: records
    params:
      type: custom
- name: compute
  endpoint:
    path: /v1/compute
    method: GET
    data_selector: instances
- name: kubernetes
  endpoint:
    path: /v1/kubernetes
    method: GET
    data_selector: clusters
notes:
- Clusters are created by sending a POST request to /kubernetes/clusters
- Clusters can be deleted by sending a DELETE request to /kubernetes/clusters/:id
- Uses OAuth2 with refresh token — requires setup of connected app in api
- 'Civo: Built for More - Unlocking the Power of Cloud and AI!'
- 'Hourly Cost: $0.01/ hour'
- Requires setup of a connected app in Civo
- Some API responses may vary based on account settings
- A tech event packed with talks and workshops focused on navigating and succeeding
  within the cloud native landscape.
- Uses OAuth2 with refresh token — requires setup of connected app in Civo
- Some datasets may return nulls in deeply nested fields
- Some objects may return nulls in deeply nested fields
- Civo does not sell your personal data to any third parties for monetary considerations
  as defined by the UCPA.
- We do not knowingly collect information on children.
- Some objects like Contact may return nulls in deeply nested fields
- Users may exercise certain rights regarding their Data within the limits of law,
  including the right of access to personal data, right to object to the processing
  of their personal data, right to receive their personal data and have it transferred
  to another controller, and right to ask for incorrect personal data to be corrected.
- Civo Tech Junction provides a collaborative workspace and hosts tech-related events.
- The venue is designed to support the local tech community.
- Trusted compliance services from a certified provider
- Civo Database is a managed database as a service (DBaaS) that provides users with
  optimized performance and reliability at an affordable price.
- It offers high-availability options, with up to five replicas of your data, and
  automatic daily backups.
- Powered by our custom-built CivoStack platform, you can get a production-ready Kubernetes
  environment up and running in under 90 seconds.
- Simple installation and configuration process for on-prem deployment
- Free migration support available
- FlexCore is built from the ground up with security in mind, providing a hardened
  solution you can trust. Your data remains secure and compliant with all relevant
  regulations.
- Free & unlimited data transfer
- Available in all regions
- CivoStack Enterprise is a future-proof cloud-native platform that integrates Kubernetes,
  IaaS, PaaS, DBaaS, Object Storage, WASM, GPUs, and AI/ML capabilities.
- CivoStack Enterprise is a VMware alternative, offering equivalent functionality
  with a straightforward, on-prem licensing model.
- CivoStack Enterprise is compatible with your hardware, making on-prem deployment
  quick and easy.
- Guaranteed price commitment with long-term price commitment and transparent billing.
- CivoStack Enterprise is a software stack that enables a future-proofed private cloud
  solution that you install to your own hardware.
- CivoStack Enterprise includes numerous AI tools such as Kubeflow-as-a-Service, which
  is an end-to-end machine learning product.
- Plug-and-play deployment for private cloud.
- Full-functionality private cloud with no need for third-party providers.
- Data stays in the UK and under UK law.
- No hidden fees. No lock-in.
- 'UK Sovereignty Guaranteed: Your data remains securely within UK borders at all
  times, ensuring it is never transferred internationally or subjected to foreign
  laws.'
- 'Sustainability at Our Core: With our decarbonized GPU offerings, we are committed
  to sustainability while driving innovation.'
- CivoStack Enterprise delivers cutting-edge features and tools, focusing on ease-of-use,
  smooth migration, and 24x7 advanced support.
- 100% UK-based. Data stays in the UK and under UK law.
- Sovereign cloud providers support some of the UK's most highly regulated industries.
- Civo supports the privacy & security of your AI operations.
- Data remains securely within regional borders at all times.
- Civo's cloud infrastructure in India is hosted in Mumbai data centre.
- Sustainability at Our Core
- UK Sovereignty Guaranteed
- Civo's genuine commitment to customer success.
- All data stays securely within the UK, fully compliant with UK data laws.
- Service is provided on trust and is intended for use for your demos both live and
  pre-recorded.
- Should send API key with every request in an 'Authorization' header.
- Requires an active account with Civo to access the API
- Civo is a cloud service provider who owns a large number of IP ranges.
- The bug bounty program is limited only to the resources owned by your own account.
- Cookies are used for tracking and advertising purposes.
- This policy was last updated on 22/04/2024
- Ensure that all API keys are kept secure.
- Rate limits apply to all API calls.
- This Agreement has been entered into on the same date that the service agreement
  has commenced.
- You will need to associate an API key from your account to Civo CLI in order to
  authenticate you to the Civo API.
- Continuous basis depending on the use of the Services by Customer.
- Civo will Process Personal Data as necessary to perform the Services pursuant to
  the Agreement.
- Resources such as Kubernetes clusters and virtual machine instances are region-specific.
- Replace <YOUR_CIVO_API_KEY> with your actual API key in the provider file.
- Certain countries are not supported by the phone verification.
- Civo does not support prepaid or 'virtual' cards as payment types.
- API key required for authentication
- Civo services are chargeable and require a valid payment method.
- All prices are charged in US dollars and are exclusive of VAT.
- Civo accounts support multiple users having access to various resources and access
  levels.
- Services are charged hourly, rounded up to the nearest full hour.
- A stopped instance or cluster is chargeable.
- Firewalls are specific to a region and network
- Default action is allow
- Default direction is ingress
- Default protocol is TCP
- CIDR default is 0.0.0.0/0
- Firewalls are specific to a region and network.
- The region field is optional in most of Civo Terraform provider's resources.
- You cannot delete a firewall if an instance, cluster or other type of resource is
  using it. Change the firewall of such resources to be able to delete a firewall.
- For scripting use, you can add a -y flag to Civo CLI commands which usually require
  confirmation. This will assume you will answer 'yes' to any prompt.
- You cannot delete a firewall if an instance, cluster or other type of resource is
  using it.
- Event is scheduled for November 18th, 2025 at Four Seasons Hotel, Bengaluru.
- Event takes place on November 18th, 2025 at Four Seasons Hotel, Bengaluru.
- Removing an SSH key does not remove it from previously created instances.
- No confirmation step is required for instance operations.
- Attempting to set a private_ip on a VXLAN based network will return that the feature
  is not supported in the region.
- Users can create snapshots of their compute instances and their attached volumes.
- Users can create snapshots of compute instances and attached volumes.
- Snapshots can be created on demand or via a schedule.
- Users can create schedules of snapshots to run simultaneously and periodically.
- The request requires the ID parameter in the URL (query string) as well as a region
  parameter.
- Volumes can be created and attached to instances, and can be deleted at any time.
- Volumes can only be attached to one instance at a time.
- No confirmation step is required for volume deletion.
- Quota'd limit to the number of firewalls and rules that can be created.
- Quota limit on the number of firewalls and rules that can be created.
- Firewalls can exist even if instances are removed.
- The upload is performed via a PUT request to the generated pre-signed disk_image_url
  URL.
- The API only accepts .qcow2 or .raw file formats for the disk image.
- Your Webhook handlers are expected to respond within 5 seconds.
- No confirmation step is required for deleting DNS records.
- Webhook handlers are expected to respond within 5 seconds.
- Object stores are S3-compatible.
- Describing the current quota for the current user is possible by making a GET request
  to the https://api.civo.com/v2/quota resource.
- The request should be a GET request to the https://api.civo.com/v2/charges resource.
- The response from the server will be a list of chargeable resources.
- After putting an instance into recovery mode it MUST be rebooted for changes to
  take effect.
- Returning the instance back to regular operation requires turning off recovery mode,
  followed by a reboot.
- Instances must be set up to allow for password authentication to use this feature.
- Without a valid password, you won't be able to log into your instance.
- The `type` parameter is optional and if used will list only user-created disk images.
- Civo’s user experience is shaped by real feedback from our customers and community.
- Civo offers a cloud-native experience with Kubernetes integration.
- Ensure correct API permissions are set for OAuth.
- Built for More - Unlocking the Power of Cloud and AI!
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Check your OAuth token'
- '404 Not Found: Verify the endpoint URL'
- '500 Internal Server Error: Retry the request after some time'
- We do not charge a fee to respond to your request, for up to one request per year.
- '401 Unauthorized: Check your API key or token'
- '429 Too Many Requests: You have reached the rate limit'
- '429 Too Many Requests: Rate limit exceeded, try again later.'
- '403 Forbidden: Check your API key and permissions.'
- 'Invoice not settled: Contact support to restore services.'
- 'Warning: Are you sure you want to delete the cli-demo firewall (y/N) ? y'
- 'HTTP status 200 OK: Indicates successful operation'
- '200 OK: Successful operation'
- 'Authorization required: Token is missing or invalid'
- '200 OK: Successful request'
- '200 OK: Success'
- '200: Acknowledgment of success'
- '400: Bad Request - Check your request parameters'
- '404: Not Found - Ensure the instance and snapshot IDs are correct'
- '400 Bad Request: Invalid input parameters'
- '401 Unauthorized: Invalid authorization token'
- '404 Not Found: Volume not found'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Invalid API key'
- '404 Not Found: Volume ID does not exist'
- '202 Accepted: Indicates successful processing of the request.'
- '404 Not Found: The requested disk image id is not found in the region specified'
- '204 No Content: Successful request'
- '202 Accepted: Request was successful.'
- 'Quota limit exceeded: Reduce number of firewalls or rules.'
- 'Unauthorized: Recheck API key.'
- '204 No Content: If successful, the response will have the HTTP status'
- '404 Not Found: If the requested disk image id is not found in the region specified.'
- '200 OK: Request was successful.'
- '200 OK: Request successful and result returned.'
- '200 OK: Success response'
- '401 Unauthorized: Invalid or missing token'
- '400 Bad Request: Invalid request parameters'
- '401 Unauthorized: Recheck Authorization token'
- '404 Not Found: No active console access session for the instance.'
- '401 Unauthorized: Recheck API key or permissions'
- '401 Unauthorized: Recheck API key'
- '403 Forbidden: Check your API key or permissions.'
- '404 Not Found: Verify the endpoint path.'
- '500 Internal Server Error: Retry the request after some time.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.civo.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
