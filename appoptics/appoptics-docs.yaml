resources:
- name: measurements
  endpoint:
    path: /v1/measurements
    method: POST
    data_selector: measurements
- name: metric
  endpoint:
    path: /v1/measurements/my.custom.metric
    method: GET
    data_selector: series
    params:
      duration: '300'
      resolution: '60'
- name: measurements
  endpoint:
    path: /measurements
    method: POST
    data_selector: measurements
- name: measurements
  endpoint:
    path: /v1/measurements/:measurement
    method: GET
    data_selector: series
- name: metrics
  endpoint:
    path: /v1/metrics/:name
    method: GET
    data_selector: attributes
- name: metrics
  endpoint:
    path: /metrics
    method: PUT
    data_selector: null
    params: {}
- name: spaces
  endpoint:
    path: /v1/spaces
    method: GET
    data_selector: spaces
- name: charts
  endpoint:
    path: /v1/spaces/:id/charts
    method: POST
    data_selector: id
- name: charts
  endpoint:
    path: /v1/spaces/:id/charts
    method: GET
    data_selector: '[]'
- name: update_chart
  endpoint:
    path: /v1/spaces/:space_id/charts/:chart_id
    method: PUT
    data_selector: id
    params: {}
- name: delete_chart
  endpoint:
    path: /v1/spaces/:id/charts/:chart_id
    method: DELETE
    data_selector: null
    params: {}
- name: measurements
  endpoint:
    path: /v1/measurements
    method: POST
    data_selector: measurements
- name: metrics
  endpoint:
    path: /v1/metrics
    method: GET
    data_selector: metrics
- name: metrics
  endpoint:
    path: /v1/metrics
    method: GET
    data_selector: metrics
- name: spaces
  endpoint:
    path: /v1/spaces
    method: GET
    data_selector: spaces
- name: charts
  endpoint:
    path: /v1/spaces/:id/charts
    method: POST
    data_selector: charts
- name: charts_in_space
  endpoint:
    path: /v1/spaces/:id/charts
    method: GET
    data_selector: '[]'
- name: delete_chart
  endpoint:
    path: /v1/spaces/:id/charts/:chart_id
    method: DELETE
    data_selector: ''
- name: annotations
  endpoint:
    path: /annotations/:name
    method: GET
    data_selector: events
- name: annotation_event
  endpoint:
    path: /annotations/:name/:id
    method: GET
    data_selector: id
- name: annotations
  endpoint:
    path: /v1/annotations
    method: GET
    data_selector: annotations
- name: alerts
  endpoint:
    path: /v1/alerts
    method: GET
    data_selector: alerts
- name: alerts
  endpoint:
    path: /v1/alerts
    method: GET
    data_selector: alerts
- name: environments
  endpoint:
    path: /v1/environments
    method: GET
    data_selector: environments
- name: api_tokens
  endpoint:
    path: /v1/api_tokens
    method: GET
    data_selector: api_tokens
- name: api_tokens
  endpoint:
    path: /v1/api_tokens
    method: GET
- name: jobs
  endpoint:
    path: /v1/jobs/:id
    method: GET
- name: snapshots
  endpoint:
    path: /v1/snapshots/:id
    method: GET
- name: services
  endpoint:
    path: /v1/services
    method: GET
- name: organization
  endpoint:
    path: /v1/organization
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: network_performance_monitor
  endpoint:
    path: /services/data/vXX.X/sobjects/NetworkPerformanceMonitor
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: server_application_monitor
  endpoint:
    path: /services/data/vXX.X/sobjects/ServerApplicationMonitor
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
notes:
- The only permissible content type is JSON.
- Requests must include at least one measurement.
- When using cURL you will need to utilize URL encoding for the tag brackets.
- Pagination not available, use list_metrics() for all metrics
- Not available
- Requires an API key for authentication.
- Every response will include headers that define the current API limits related to
  the request made.
- Metric names must be 255 or fewer characters, and may only consist of `A-Za-z0-9.:-_`.
- Uses an API key for authentication.
- The title is a required parameter to create an annotation.
- A description is not required to create an annotation.
- The response is paginated, so the request supports generic Pagination Parameters.
- The default value of the 'orderby' pagination parameter is 'name'.
- Conditions are required for PUT operations on alerts.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- SolarWinds uses cookies on its websites to make your online experience easier and
  better.
- Uses OAuth2 with refresh token — requires setup of connected app in SolarWinds
- Some objects may return nulls in deeply nested fields
errors:
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '429: Rate Limited'
- '503: Service Unavailable'
- '400 Bad Request: The request could not be parsed or the parameters were not valid.'
- '401 Unauthorized: Challenges the user to provide authentication credentials.'
- '403 Forbidden: The request was not encrypted via SSL or the account is rate limited.'
- '404 Not Found: The request refers to a resource that either does not exist or the
  user does not have permissions to access.'
- '415 Incorrect Content-Type: Content type was not application/json.'
- '429 Rate Limited: Request was rate limited.'
- '503 Service Unavailable: The API is in maintenance mode.'
- '400 Bad Request: all measurements have been rejected due to validation errors.'
- '202 Accepted: at least some measurements have been accepted.'
- '401 Unauthorized: Recheck API token'
- 204 No Content
- 202 Accepted
- '204 No Content: The request was successful but there is no content to return.'
- '201 Created: Resource has been successfully created.'
- '200 OK: The request was successful.'
- '204 No Content: Successfully deleted chart'
- '200 OK: Successfully retrieved chart data'
- '400: If the base-10 exponent of any floating point value is larger than `1 x 10^126`,
  the request will be aborted.'
- '400: If the base-10 exponent of any floating point value is smaller than `1 x 10^-130`,
  the value will be truncated to zero (`0.0`).'
- '204 No Content: Chart deleted successfully.'
- '200 OK: Charts listed successfully.'
- '201 Created: Successful creation of an annotation.'
- '204 No Content: Successful deletion of an annotation or annotation event.'
- '200 OK: Successful retrieval of an annotation or annotation event.'
- '200 OK: Successful request'
- '401 Unauthorized: Check your API token'
- '404 Not Found: The requested resource does not exist'
- '401 Unauthorized: Check API token validity.'
- '204 No Content: Request was successful but no content to return.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.appoptics.com
  auth:
    type: basic
    location: header
    header_name: Authorization
source_metadata: null
