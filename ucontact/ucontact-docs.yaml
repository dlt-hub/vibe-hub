resources:
- name: messengerActivatorUrl
  endpoint:
    path: /api/connectors/id/{name}/messengerActivatorUrl
    method: GET
- name: outlookActivatorUrl
  endpoint:
    path: /api/connectors/id/{name}/outlookActivatorUrl
    method: GET
- name: net2PhoneActivatorUrl
  endpoint:
    path: /api/connectors/id/{name}/net2PhoneActivatorUrl
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_analytics
  endpoint:
    path: /user/analytics
    method: GET
    data_selector: records
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: dispositions
  endpoint:
    path: /dispositions
    method: GET
    data_selector: dispositions
    params: {}
- name: holidays
  endpoint:
    path: /holidays
    method: GET
    data_selector: holidays
    params: {}
- name: templates
  endpoint:
    path: /templates
    method: GET
    data_selector: templates
    params: {}
- name: states
  endpoint:
    path: /states
    method: GET
    data_selector: states
    params: {}
- name: blacklist
  endpoint:
    path: /blacklist
    method: GET
    data_selector: blacklist
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
    params: {}
- name: campaign
  endpoint:
    path: /services/data/vXX.X/sobjects/Campaign
    method: GET
    data_selector: records
    params: {}
- name: disposition
  endpoint:
    path: /services/data/vXX.X/sobjects/Disposition
    method: GET
    data_selector: records
    params: {}
- name: holiday
  endpoint:
    path: /services/data/vXX.X/sobjects/Holiday
    method: GET
    data_selector: records
    params: {}
- name: template
  endpoint:
    path: /services/data/vXX.X/sobjects/Template
    method: GET
    data_selector: records
    params: {}
- name: state
  endpoint:
    path: /services/data/vXX.X/sobjects/State
    method: GET
    data_selector: records
    params: {}
- name: blacklist
  endpoint:
    path: /services/data/vXX.X/sobjects/Blacklist
    method: GET
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaigns
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: data
    params: {}
- name: Campaigns
  endpoint:
    path: /supervisor/campaigns
    method: GET
- name: Agents
  endpoint:
    path: /supervisor/agents
    method: GET
- name: Dialers
  endpoint:
    path: /supervisor/dialers
    method: GET
- name: Custom queries
  endpoint:
    path: /supervisor/custom-queries
    method: POST
- name: interactions
  endpoint:
    path: /api/v1/interactions
    method: GET
    data_selector: records
- name: webhook
  endpoint:
    path: /api/webhook/{WebhookName}
    method: GET
    data_selector: records
    params: {}
- name: campaigns
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: agents
  endpoint:
    path: /api/v1/agents
    method: GET
    data_selector: data
    params: {}
- name: dialers
  endpoint:
    path: /api/v1/dialers
    method: GET
    data_selector: data
    params: {}
- name: campaign
  endpoint:
    path: /services/data/vXX.X/sobjects/Campaign
    method: GET
    data_selector: records
    params: {}
- name: ccdata
  endpoint:
    path: /database/ccdata
    method: GET
    data_selector: tables
    params: {}
- name: ccrepo
  endpoint:
    path: /database/ccrepo
    method: GET
    data_selector: tables
    params: {}
- name: cccustom
  endpoint:
    path: /database/cccustom
    method: GET
    data_selector: tables
    params: {}
- name: webhook
  endpoint:
    path: /api/webhook/{WebhookName}
    method: GET
- name: bots
  endpoint:
    path: /developer/bots/bots-designer
    method: GET
    data_selector: bots
    params: {}
- name: gmail_account
  endpoint:
    path: /gmail/account
    method: POST
    data_selector: data
    params: {}
- name: email
  endpoint:
    path: /outlook/emails
    method: POST
    data_selector: response
    params: {}
- name: ccdata
  endpoint:
    path: /ccdata
    method: GET
    data_selector: records
- name: ccrepo
  endpoint:
    path: /ccrepo
    method: GET
    data_selector: records
- name: cccustom
  endpoint:
    path: /cccustom
    method: GET
    data_selector: records
- name: WhatsApp Business Configuration
  endpoint:
    params:
      Application ID: WhatsApp Business application ID
      Application Client Secret: Password for the WhatsApp Business account
      Messages per Second: 1000
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: email_interactions
  endpoint:
    path: /gmail/interactions
    method: GET
    data_selector: interactions
- name: email
  endpoint:
    path: /send
    method: POST
- name: users
  endpoint:
    path: /supervisor/users
    method: GET
    data_selector: metrics
    params: {}
- name: export
  endpoint:
    path: /supervisor/users/export
    method: POST
    data_selector: report
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: data
    params:
      messages_per_second: 1000
- name: campañas
  endpoint:
    path: /supervisor/wallboards/campanas
    method: GET
- name: agentes
  endpoint:
    path: /supervisor/wallboards/agentes
    method: GET
- name: hub_saliente
  endpoint:
    path: /supervisor/wallboards/hubs_salientes
    method: GET
- name: queries_personalizadas
  endpoint:
    path: /supervisor/wallboards/queries_personalizadas
    method: GET
- name: campaigns
  endpoint:
    path: /supervisor/campaigns
    method: GET
    data_selector: campaigns
- name: campañas
  endpoint:
    path: /campañas
    method: GET
    data_selector: datos
- name: agentes
  endpoint:
    path: /agentes
    method: GET
    data_selector: datos
- name: hub_saliente
  endpoint:
    path: /hub_saliente
    method: GET
    data_selector: datos
- name: queries_personalizadas
  endpoint:
    path: /queries_personalizadas
    method: GET
    data_selector: datos
- name: gmail_connector
  endpoint:
    path: /gmail/connect
    method: POST
    data_selector: connector
    params: {}
- name: email
  endpoint:
    path: /sendEmail
    method: POST
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Net2Phone-Unite
  endpoint:
    path: /net2phone/unite
    method: POST
    data_selector: data
    params: {}
- name: email
  endpoint:
    path: /email/send
    method: POST
- name: connector_status
  endpoint:
    path: /api/connectors/status
    method: GET
- name: messages
  endpoint:
    params:
      messages_per_second: 1000
- name: connector_configuration
  endpoint:
    path: /connectors/net2phone/configuration
    method: POST
    data_selector: configuration
    params:
      account_id: Net2phone account ID
      password: Net2phone account password
      host: SIP provider’s IP address
- name: Webhook for messages and status
  endpoint:
    path: /api/inbound/gupshupWpp/event
    method: POST
- name: Net2Phone-Unite
  endpoint:
    path: /Net2Phone-Unite
    method: GET
- name: sip_provider
  endpoint:
    path: /api/v1/sip_providers
    method: POST
    data_selector: provider
    params: {}
- name: telephony_configuration
  endpoint:
    path: /integrations/net2phone/telephony
    method: POST
    data_selector: configuration
    params:
      account_id: Net2phone account ID
      password: Net2phone account password
      host: SIP provider’s IP address
- name: configuration
  endpoint:
    path: /smtp-imap/configuration
    method: GET
- name: messages
  endpoint:
    path: /api/inbound/twilioWpp/message
    method: POST
    data_selector: messages
- name: statuses
  endpoint:
    path: /api/inbound/twilioWpp/status
    method: POST
    data_selector: statuses
- name: messages_status
  endpoint:
    path: /api/inbound/gupshupWpp/event
    method: POST
- name: sms
  endpoint:
    path: /sms/send
    method: POST
- name: webhook_messages
  endpoint:
    path: /api/inbound/infobipWpp/message
    method: POST
- name: webhook_status
  endpoint:
    path: /api/inbound/infobipWpp/status
    method: POST
- name: contact
  endpoint:
    path: /crm/Contacts/contacts_contactsview.html
    method: GET
    data_selector: ''
    params: {}
- name: connectors
  endpoint:
    path: /api/connectors
    method: GET
    data_selector: result
    params: {}
- name: connector_info
  endpoint:
    path: /api/connectors/id/{name}
    method: GET
    data_selector: name
    params: {}
- name: create_connector
  endpoint:
    path: /api/connectors
    method: POST
    data_selector: {}
    params: {}
- name: update_connector
  endpoint:
    path: /api/connectors
    method: PUT
    data_selector: {}
    params: {}
- name: remove_connector
  endpoint:
    path: /api/connectors
    method: DELETE
    data_selector: {}
    params: {}
- name: connector_statuses
  endpoint:
    path: /api/connectors/statuses
    method: GET
    data_selector: result
- name: specific_connector_status
  endpoint:
    path: /api/connectors/id/{name}/status
    method: GET
    data_selector: result
- name: messengerActivatorUrl
  endpoint:
    path: /api/connectors/id/{name}/messengerActivatorUrl
    method: GET
    data_selector: result.url
    params: {}
- name: outlookActivatorUrl
  endpoint:
    path: /api/connectors/id/{name}/outlookActivatorUrl
    method: GET
    data_selector: result.url
    params: {}
- name: net2PhoneActivatorUrl
  endpoint:
    path: /api/connectors/id/{name}/net2PhoneActivatorUrl
    method: GET
    data_selector: result.url
    params: {}
- name: user_analytics
  endpoint:
    path: /user/analytics
    method: GET
    data_selector: records
    params: {}
- name: connectors
  endpoint:
    path: /api/connectors
    method: GET
    data_selector: result
    params: {}
- name: connector_info
  endpoint:
    path: /api/connectors/id/{name}
    method: GET
    data_selector: result
    params: {}
- name: create_connector
  endpoint:
    path: /api/connectors
    method: POST
    data_selector: {}
    params: {}
- name: update_connector
  endpoint:
    path: /api/connectors
    method: PUT
    data_selector: {}
    params: {}
- name: remove_connector
  endpoint:
    path: /api/connectors
    method: DELETE
    data_selector: {}
    params: {}
- name: connector_statuses
  endpoint:
    path: /api/connectors/statuses
    method: GET
    data_selector: result
- name: specific_connector_status
  endpoint:
    path: /api/connectors/id/{name}/status
    method: GET
    data_selector: result
- name: messengerActivatorUrl
  endpoint:
    path: /api/connectors/id/{name}/messengerActivatorUrl
    method: GET
    data_selector: result.url
- name: outlookActivatorUrl
  endpoint:
    path: /api/connectors/id/{name}/outlookActivatorUrl
    method: GET
    data_selector: result.url
- name: net2PhoneActivatorUrl
  endpoint:
    path: /api/connectors/id/{name}/net2PhoneActivatorUrl
    method: GET
    data_selector: result.url
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Double your security with 2FA in uContact
- Export user information feature available
- Metrics are vital for Contact Centers, so you can export the dashboard data for
  further analysis or reporting.
- Once you enter this module, you will see the list of interactions for today.
- If you previously used filters in this module, the system will retain those criteria,
  displaying only the interactions that match the selected filters.
- Some objects may return nulls in deeply nested fields
- Wallboards allows visualization of information graphically in panels.
- 'Error: "No metrics selected" occurs when no metric is selected for the panel.'
- 'Error: "No resources selected" occurs when no resource is selected in either global
  or local filters.'
- 'Error: "No resources available" occurs when no resource has been created.'
- Custom webhooks can be created.
- Flows can be accessed from the Automation module.
- Wallboards require specific permissions for viewing, creating, editing, and deleting.
- Each active Bot consumes one license.
- Bot Functions do not consume a license.
- Access is read-only for ccdata and ccrepo.
- cccustom allows create, insert, update, and delete operations.
- Access contact information through the interaction menu.
- Contact details may include phone number or email address depending on the channel.
- 'Interactions per Second: The maximum number of emails that can be sent per second,
  with a default of 1000.'
- Requires email address and password for Outlook account.
- Can set maximum emails sent per second using Outbound Hub.
- Uses OAuth2 with refresh token — requires setup of connected app in uContact
- Interactions per second is limited to 1000.
- All incoming emails will enter the channel's queue if enabled.
- Account is required to be an Outlook email address.
- Sender Name is visible to customers in emails.
- The maximum number of messages that can be sent per second is configurable.
- Los paneles son aquellos que nos permiten visualizar información dentro de un wallboard.
- Los filtros se emplean para refinar los datos mostrados ya sea dentro de un panel
  específico o en todo el wallboard.
- Puedes personalizar la vista de este dashboard a través de los filtros para ver
  solamente la información y métricas que necesitas.
- Solamente se puede tener un ambiente de desarrollo corriendo al mismo tiempo.
- Los filtros se dividen en filtros comunitarios y filtros personales.
- Los filtros globales afectan a todos los paneles dentro del wallboard.
- Necesitarás tener acceso a la cuenta para dar los permisos.
- Si se habilita, ingresarán a la cola del canal todos los correos entrantes que lleguen
  a la cuenta.
- Requires email address and password for the Outlook account.
- The connector can send and receive emails.
- 'Mensajes por segundo: 1000'
- Requires integration setup with Outlook account credentials.
- Contact support team to add IPs to the Firewall.
- Maximum number of messages that can be sent per second; by default, this is 1000.
- Webhook for messages and status URL needs to replace instance with your instance
  name.
- API Key is required for integration.
- Default Messages per second is set to 1000.
- 'Webhook for messages: https://instance.ucontactcloud.com/api/inbound/infobipWpp/message'
- 'Webhook for status: https://instance.ucontactcloud.com/api/inbound/infobipWpp/status'
- 'Messages per second: 1000'
- Required information includes Account ID, Token, and Host.
- You will need the credentials for your Instagram account to log in and accept the
  necessary permissions.
- Requires configuration of SIP account details provided by the supplier.
- Contact support to add IP addresses to the Firewall.
- Requires setup of connected app in Facebook
- If the integration fails, we recommend contacting Support to verify the issue
- Account ID, Password, and Host are required for configuration.
- Maximum number of messages that can be sent per second is 1000.
- 'Messages per second: The maximum number of messages that can be sent per second
  is set to 1000.'
- API Key generated in your Infobip account is required.
- 'Maximum messages per second: 1000.'
- uCRM automatically detects and highlights conflicting contacts.
- Conflicts can be resolved automatically or manually.
- Global & individual actions allow flexible conflict resolution.
- A final preview ensures data integrity before saving.
- Allows administrators to define which fields are mandatory during contact creation
- Changes will be applied to all new contact forms
- Form validation will prevent submission if required fields are empty
- Some objects might return nulls in deeply nested fields
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'No metrics selected: Select at least one metric to resolve this error.'
- 'No resources selected: Ensure at least one resource is selected in global or local
  filters.'
- 'No resources available: Create at least one resource to resolve this error.'
- 'The user is already logged in: Log out from the device where your account is currently
  active.'
- 'Incorrect username or password: Try logging in again with your credentials.'
- '403 Forbidden: Check user permissions for wallboards'
- 'No metrics selected: Select at least one metric for the panel.'
- 'No resources selected: Select at least one resource in the global or local filters.'
- 'No resources available: Create at least one resource.'
- 'Permiso de vista: Permite al usuario ver los wallboards existentes.'
- 'Create permission: Permite al usuario crear nuevos wallboards.'
- 'Edit permission: Permite al usuario trabajar en wallboards existentes.'
- No metrics selected
- No resources selected
- No resources available
- 'El usuario ya ha iniciado sesión: debes cerrar la sesión en el dispositivo que
  tengas uContact abierto'
- 'Usuario o contraseña incorrectos: intenta nuevamente con tus credenciales y contacta
  a tu Administrador si el error persiste'
- 'No metrics selected: This error occurs when we have not selected any metric for
  the panel.'
- 'No resources selected: Este error ocurre cuando no hemos seleccionado ningún recurso
  para el panel.'
- 'No resources available: Este error ocurre cuando no hemos creado ningún recurso.'
- El usuario ya ha iniciado sesión
- Usuario o contraseña incorrectos
- '400: Error getting connectors'
- '400: Connector does not exist'
- '400: Error creating new connector'
- '400: Error removing connector'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: http://172.19.18.132:8082
source_metadata: null
