resources:
- name: flags
  endpoint:
    path: /api/v1/flags
    method: GET
    data_selector: records
    params:
      feature: integer
- name: flags
  endpoint:
    path: /api/v1/flags
    method: GET
    data_selector: flags
- name: flags
  endpoint:
    path: /flags
    method: GET
- name: identities
  endpoint:
    path: /identities
    method: GET
- name: environment-document
  endpoint:
    path: /environment-document
    method: GET
- name: segments
  endpoint:
    path: /segments
    method: GET
    data_selector: segments
    params: {}
- name: environment_flags
  endpoint:
    path: /api/v1/flags/
    method: GET
    data_selector: flags
- name: identities
  endpoint:
    path: /api/v1/identities/
    method: POST
    data_selector: identity
- name: feature_states
  endpoint:
    path: /api/v1/environments/{ENV_KEY}/featurestates
    method: GET
    data_selector: feature_states
- name: environments
  endpoint:
    path: /api/v1/environments/
    method: GET
    data_selector: results
    params: {}
- name: flags
  endpoint:
    path: /api/v1/flags/
    method: GET
    data_selector: results
    params: {}
- name: identities
  endpoint:
    path: /api/v1/identities/
    method: GET
    data_selector: results
    params: {}
- name: flags
  endpoint:
    path: /api/v1/flags/
    method: GET
    data_selector: results
- name: identities
  endpoint:
    path: /api/v1/identities/
    method: POST
    data_selector: ''
- name: featurestates
  endpoint:
    path: /api/v1/environments/{ENV_KEY}/featurestates
    method: GET
    data_selector: results
- name: environment_flags
  endpoint:
    path: /api/v1/flags/
    method: GET
    data_selector: results
- name: identities
  endpoint:
    path: /environments/{ENV_KEY}/edge-identities/
    method: GET
    data_selector: results
    params:
      page_size: 20
- name: environment_flags
  endpoint:
    path: /api/v1/flags/
    method: GET
    data_selector: results
- name: identities
  endpoint:
    path: /api/v1/environments/{ENV_KEY}/edge-identities/
    method: GET
    data_selector: results
    params:
      page_size: 20
- name: create_identity_override
  endpoint:
    path: /api/v1/environments/{YOUR_ENVIRONMENT_API_KEY}/edge-identities-featurestates
    method: PUT
    data_selector: null
- name: update_segment_rules
  endpoint:
    path: /projects/{PROJECT_ID}/segments/{SEGMENT_ID}/
    method: PATCH
    data_selector: null
- name: environment_flags
  endpoint:
    path: /api/v1/flags/
    method: GET
    data_selector: results
    params: {}
- name: identities
  endpoint:
    path: /api/v1/environments/{ENV_KEY}/edge-identities/
    method: GET
    data_selector: results
    params:
      page_size: 20
- name: delete_edge_identity
  endpoint:
    path: /environments/{ENV_KEY}/edge-identities/{IDENTITY_UUDI}/
    method: DELETE
- name: get_environment_flags
  endpoint:
    path: /api/v1/flags/
    method: GET
    data_selector: results
- name: send_identity_with_traits
  endpoint:
    path: /api/v1/identities/
    method: POST
    data_selector: results
- name: get_feature_states
  endpoint:
    path: /environments/{ENV_KEY}/featurestates
    method: GET
    data_selector: results
- name: create_identity_feature_state
  endpoint:
    path: /environments/{ENV_KEY}/identities/{IDENTITY_ID}/featurestates/
    method: POST
    data_selector: results
- name: update_identity_feature_state
  endpoint:
    path: /environments/{ENV_KEY}/identities/{IDENTITY_ID}/featurestates/{FEATURE_STATE_ID}
    method: PUT
    data_selector: results
- name: delete_edge_identity
  endpoint:
    path: /environments/{ENV_KEY}/edge-identities/{IDENTITY_UUDI}/
    method: DELETE
- name: delete_identity
  endpoint:
    path: /environments/{ENV_KEY}/identities/{IDENTITY_ID}/
    method: DELETE
- name: bulk_identities
  endpoint:
    path: /api/v1/bulk-identities
    method: POST
    data_selector: data
    params: {}
- name: delete_identity
  endpoint:
    path: /api/v1/identities/{IDENTITY_ID}
    method: DELETE
    data_selector: null
    params: {}
- name: oauth_config
  endpoint:
    path: /api/v1/environments
    method: GET
    data_selector: scopes
    params: {}
- name: flags
  endpoint:
    path: /flags
    method: GET
    data_selector: flags
- name: identity_flags
  endpoint:
    path: /identity_flags
    method: GET
    data_selector: flags
- name: flags
  endpoint:
    path: /flags
    method: GET
    data_selector: flags
- name: identity_flags
  endpoint:
    path: /identity_flags
    method: GET
    data_selector: flags
- name: flags
  endpoint:
    path: /flags
    method: GET
    data_selector: flags
- name: identity_flags
  endpoint:
    path: /identities
    method: GET
    data_selector: flags
- name: environment
  endpoint:
    path: /api/v1/environment
    method: GET
    data_selector: environment
- name: environment
  endpoint:
    path: /environment
    method: GET
    data_selector: flags
    params: {}
- name: feature_flags
  endpoint:
    path: /api/v1/feature_flags
    method: GET
    data_selector: flags
    params: {}
- name: traits
  endpoint:
    path: /api/v1/traits
    method: GET
    data_selector: traits
    params: {}
- name: feature_flags
  endpoint:
    path: /feature_flags
    method: GET
    data_selector: flags
    params: {}
- name: feature_flags
  endpoint:
    path: /flags
    method: GET
    data_selector: flags
    params: {}
- name: traits
  endpoint:
    path: /traits
    method: GET
    data_selector: traits
    params: {}
- name: flags
  endpoint:
    path: /flags
    method: GET
    data_selector: flags
- name: datadogRum
  endpoint:
    path: /datadog/rum
    method: POST
- name: dynatrace
  endpoint:
    path: /dynatrace
    method: POST
- name: flags
  endpoint:
    path: /flags
    method: GET
    data_selector: flags
    params:
      environmentID: <YOUR_ENVIRONMENT_KEY>
- name: feature_flags
  endpoint:
    path: /api/v1/
    method: GET
    data_selector: features
    params: {}
- name: identities
  endpoint:
    path: /api/v1/identities/
    method: POST
    data_selector: null
    params: {}
- name: flagsmith_feature
  endpoint:
    path: /flagsmith_feature
    method: POST
    data_selector: feature_name
    params:
      project_uuid: 10421b1f-5f29-4da9-abe2-30f88c07c9e8
      description: New description
      type: STANDARD
- name: identities
  endpoint:
    path: /api/v1/identities/
    method: POST
    data_selector: traits
- name: real_time_updates
  endpoint:
    path: /sse/environments/ENVIRONMENT_ID/stream
    method: GET
    data_selector: updated_at
- name: identities
  endpoint:
    path: /api/v1/identities/
    method: POST
    data_selector: null
notes:
- Requires API key to access flags.
- Flagsmith always returns all Environment Flags during API calls.
- The 60 second polling time in Local Evaluation mode is configurable.
- You can provide your own caching layer (with a short TTL) in front of Local Evaluation
  mode requests if you wish.
- Fly.io has a global application namespace, and so you may need to change the name
  of the application defined in fly.toml.
- You will need to run through the following steps to get set up
- 'The API can also optionally make use of the following 3rd party services: Google
  Analytics, InfluxDB, SendGrid, AWS S3, GitHub, Google'
- 'You will need to add the following scopes: channels:read, chat:write, chat:write.public.'
- Self-hosted Flagsmith installations do not have API request limits.
- Requests made by Flagsmith SDKs to track Flag Analytics are not billable.
- Identities are created within Flagsmith automatically the first time they are identified
  from your client SDKs.
- The maximum size of each individual Trait Value is 2000 bytes.
- The Flagsmith API to set user traits does not require authentication or credentials.
- Publicly accessible API calls need to have an environment key supplied with each
  request.
- Public SDK API requires an environment key supplied with each request.
- Private Admin API requires an API Token associated with your Organisation.
- Public SDK API does not require secret keys.
- Private Admin API requires an API Token.
- Interacting with the Private Admin API requires a secret key.
- Public SDK API does not require secret keys and is open by design.
- Private Admin API requires an API token for authentication.
- Public SDK API does not require secret keys; Private Admin API requires an API token.
- Fly.io has a global application namespace, and so you may need to change the name
  of the application defined in fly.toml as well as the commands above.
- If you are using health-checks, make sure to use /health as the health-check endpoint.
- 'You will need to add the following scopes: channels:read, chat:write, chat:write.public'
- Client-side SDKs hit the Edge API directly to retrieve their flags.
- Server-side SDKs can operate in Remote Evaluation or Local Evaluation modes.
- Server-side SDKs must be initialised with Server-side Environment keys. These can
  be created in the Environment settings area and should be considered secret.
- Server-side SDKs must be initialised with Server-side Environment keys.
- Environment keys should be considered secret.
- Server-side SDKs must be initialized with Server-side Environment keys.
- SDKs must be initialized with Server-side Environment keys.
- The only required option is the `:environment_key`
- Defaults to 10 seconds for request timeout
- Enable local evaluation mode by setting enable_local_evaluation to true
- The environment will be cached for 100 seconds.
- The SDK is initialized against a single environment within a project.
- Real-time Flags are part of our SaaS Scale-Up and Enterprise plans.
- Real-time flags are currently in beta.
- Default flags can be defined when initializing the SDK.
- The SDK is initialised against a single environment within a project on https://flagsmith.com.
- Integration requires an initialized Datadog datadogRum client.
- Integration requires a configured Dynatrace dtrum object.
- The SDK is initialised against a single environment.
- You can find your Client-side Environment Key in the Environment settings page.
- The SDK is initialised against a single environment. You can find your Client-side
  Environment Key in the Environment settings page.
- Organisation Administrator permission is required to generate an Organisation API
  Key.
- Sending push notifications can be sensitive across environments
- Testing push notifications with Firebase FCM topics simplifies the process
- Custom fields are available on Enterprise plans.
- Defining custom fields requires administrator permissions for a given project.
- Updating the values of custom fields requires edit permissions for the given entity.
- Real-time flag update events only contain a timestamp indicating when any flag in
  the environment was last updated.
- Applications must still call the Flagsmith API to get the actual flags for their
  current environment or user.
- Only changes made to environments or projects result in flag update events.
- Transient Traits and Identities are supported starting from Python SDK version 3.8.0.
- Transient Traits and Identities are supported starting from Java SDK version 7.4.0.
- Transient Traits and Identities are supported starting from .NET SDK version 5.4.0.
- Transient Traits and Identities are supported starting from NodeJS SDK version 4.0.0.
- Transient Traits and Identities are supported starting from Ruby SDK version 4.2.0.
- Transient Traits and Identities are supported starting from PHP SDK version 4.4.0.
- Transient Traits and Identities are supported starting from Go SDK version 4.0.0.
- Transient Traits and Identities are supported starting from Rust SDK version 2.0.0.
- Transient Traits and Identities are supported starting from Elixir SDK version 2.2.0.
- Transient Traits and Identities are supported starting from JavaScript SDK version
  5.0.0.
- Transient Traits and Identities are supported starting from Android SDK version
  2.2.0.
- Transient Traits and Identities are supported starting from Flutter SDK version
  6.0.0.
- Transient Traits and Identities are supported starting from iOS SDK version 3.8.0.
errors:
- '401 Unauthorized: Invalid API key.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Your account may be blocked or charged for overages.'
- '500: API will return a 500 error if you try to store more data than the limit in
  a single trait.'
- '401 Unauthorized: Recheck API token validity'
- '401 Unauthorized: Recheck API Token or permissions.'
- '400 Bad Request: Verify request format and parameters.'
- '401 Unauthorized: Check API Token.'
- '403 Forbidden: Insufficient permissions.'
- '401 Unauthorized: Recheck API Token or permissions'
- '401 Unauthorized: Recheck API token or permissions.'
- '401 Unauthorized: Ensure that the API token is valid.'
- '401 Unauthorized: Check your API Token or Environment Key.'
- '404 Not Found: Ensure the endpoint is correct and the resource exists.'
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Check your API key.'
- '401 Unauthorized: Recheck API key or environment key'
- '429 Too Many Requests: Rate limit exceeded'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Check API token'
- '404 Not Found: Resource not found'
- 'Bad state: Future already completed: Pin your Dio version in pubspec.yaml to 4.0.4
  or earlier.'
- '401 Unauthorized: Check if your API key is correct.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - SLACK_CLIENT_ID
  - SLACK_CLIENT_SECRET
  - API_TOKEN
  - X-Environment-Key
  - API Token
  - ENV_KEY
  - IDENTITY_ID
  - NamedCredential
client:
  base_url: https://edge.api.flagsmith.com/api/v1/
source_metadata: null
