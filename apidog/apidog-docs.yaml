resources:
- name: endpoint
  endpoint:
    path: /pets
    method: GET
    data_selector: records
    params: {}
- name: user_info
  endpoint:
    path: /user/{id}
    method: GET
- name: pet_by_id
  endpoint:
    path: /pet/{petId}
    method: GET
- name: add_pet
  endpoint:
    path: /pet
    method: POST
- name: update_pet
  endpoint:
    path: /pet
    method: PUT
- name: delete_pet
  endpoint:
    path: /pet/{petId}
    method: DELETE
- name: find_pets_by_status
  endpoint:
    path: /pet/findByStatus
    method: GET
- name: user
  endpoint:
    path: /user/{id}
    method: GET
    data_selector: id
- name: find_pet_by_id
  endpoint:
    path: /pet/{petId}
    method: GET
    data_selector: data
    params: {}
- name: add_pet
  endpoint:
    path: /pet
    method: POST
    data_selector: data
    params: {}
- name: update_pet
  endpoint:
    path: /pet
    method: PUT
    data_selector: response
    params: {}
- name: delete_pet
  endpoint:
    path: /pet/{petId}
    method: DELETE
    data_selector: ''
    params: {}
- name: find_by_status
  endpoint:
    path: /findByStatus
    method: GET
    data_selector: data
    params:
      status: status
- name: NumberToWords
  endpoint:
    path: /NumberConversion.wso
    method: POST
    data_selector: soap:Body/m:NumberToWordsResponse/m:NumberToWordsResult
    params: {}
- name: Add
  endpoint:
    path: ''
    method: POST
    data_selector: AddResponse
    params: {}
- name: GeteBayOfficialTime
  endpoint:
    path: /wsapi
    method: POST
- name: purchase_request
  endpoint:
    path: /purchase-request
    method: POST
- name: purchase_request
  endpoint:
    path: /soap
    method: POST
    data_selector: soapenv:Body
    params: {}
- name: codeOfConduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: enterprise
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: repository
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: securityVulnerabilities
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.securityVulnerabilities
    params: {}
- name: sponsorables
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.sponsorables
    params: {}
- name: topic
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.topic
    params: {}
- name: user
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.user
    params: {}
- name: viewer
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.viewer
    params: {}
- name: heartbeat
  endpoint:
    path: /heartbeat
    method: GET
- name: market_data
  endpoint:
    path: /market_data
    method: GET
- name: Coinbase Market Data
  endpoint:
    path: ''
    method: WebSocket
    data_selector: ''
    params: {}
- name: Coinbase Direct Market Data
  endpoint:
    path: ''
    method: WebSocket
    data_selector: ''
    params: {}
- name: heartbeat
  endpoint:
    path: /channels/heartbeat
    method: POST
    data_selector: channels
    params: {}
- name: status
  endpoint:
    path: /channels/status
    method: POST
    data_selector: channels
    params: {}
- name: auction
  endpoint:
    path: /channels/auctionfeed
    method: POST
    data_selector: channels
    params: {}
- name: matches
  endpoint:
    path: /channels/matches
    method: POST
    data_selector: channels
    params: {}
- name: rfq_matches
  endpoint:
    path: /channels/rfq_matches
    method: POST
    data_selector: channels
    params: {}
- name: ticker
  endpoint:
    path: /channels/ticker
    method: POST
    data_selector: channels
    params: {}
- name: ticker_batch
  endpoint:
    path: /channels/ticker_batch
    method: POST
    data_selector: channels
    params: {}
- name: full
  endpoint:
    path: /channels/full
    method: POST
    data_selector: channels
    params: {}
- name: user_channel
  endpoint:
    path: /exchange/docs/websocket-auth
    method: GET
- name: level2_channel
  endpoint:
    path: /exchange/docs/websocket-channels#level2-channel
    method: GET
- name: level3_channel
  endpoint:
    path: /exchange/docs/websocket-auth
    method: GET
- name: balance_channel
  endpoint:
    path: /exchange/docs/websocket-auth
    method: GET
- name: messages
  endpoint:
    path: /v1/messages
    method: POST
- name: heartbeat
  endpoint:
    path: /heartbeat
    method: POST
    data_selector: channels
    params: {}
- name: status
  endpoint:
    path: /status
    method: POST
    data_selector: channels
    params: {}
- name: auction
  endpoint:
    path: /auction
    method: POST
    data_selector: channels
    params: {}
- name: matches
  endpoint:
    path: /matches
    method: POST
    data_selector: channels
    params: {}
- name: rfq_matches
  endpoint:
    path: /rfq_matches
    method: POST
    data_selector: channels
    params: {}
- name: ticker
  endpoint:
    path: /ticker
    method: POST
    data_selector: channels
    params: {}
- name: ticker_batch
  endpoint:
    path: /ticker_batch
    method: POST
    data_selector: channels
    params: {}
- name: full
  endpoint:
    path: /full
    method: POST
    data_selector: channels
    params: {}
- name: messages
  endpoint:
    path: /v1/messages
    method: POST
    data_selector: content
    params: {}
- name: done_message
  endpoint:
    path: /done
    method: GET
    data_selector: type
    params: {}
- name: match_message
  endpoint:
    path: /match
    method: GET
    data_selector: type
    params: {}
- name: change_message
  endpoint:
    path: /change
    method: GET
    data_selector: type
    params: {}
- name: activate_message
  endpoint:
    path: /activate
    method: GET
    data_selector: type
    params: {}
- name: user_channel
  endpoint:
    path: /user
    method: GET
    data_selector: type
    params: {}
- name: level2_channel
  endpoint:
    path: /level2
    method: GET
    data_selector: type
    params: {}
- name: level2_batch_channel
  endpoint:
    path: /level2_batch
    method: GET
    data_selector: type
    params: {}
- name: level3_channel
  endpoint:
    path: /level3
    method: GET
    data_selector: type
    params: {}
- name: balance_channel
  endpoint:
    path: /balance
    method: GET
    data_selector: type
    params: {}
- name: Booking
  endpoint:
    path: /Booking
    method: POST
    data_selector: Booking
    params: {}
- name: BookingStatus
  endpoint:
    path: /BookingStatus
    method: GET
    data_selector: BookingStatus
    params: {}
- name: Customer
  endpoint:
    path: /Customer
    method: GET
    data_selector: Customer
    params: {}
- name: Vehicle
  endpoint:
    path: /Vehicle
    method: GET
    data_selector: Vehicle
    params: {}
- name: messages
  endpoint:
    path: /v1/messages
    method: POST
- name: streaming_messages
  endpoint:
    path: /streaming/messages
    method: POST
    data_selector: data
- name: messages
  endpoint:
    path: /v1/messages
    method: POST
    data_selector: content
- name: Booking
  endpoint:
    path: /Booking
    method: POST
    data_selector: Booking
- name: Customer
  endpoint:
    path: /Customer
    method: GET
    data_selector: Customer
- name: Vehicle
  endpoint:
    path: /Vehicle
    method: GET
    data_selector: Vehicle
notes:
- Apidog provides three default built-in fields that you can manually enable or disable.
- By default, a newly created endpoint is set to Developing.
- Endpoints without a colored dot are considered released.
- SOAP requires XML-formatted requests.
- Add optional SOAPAction if required.
- 'If you get the response ''message'': ''Bad credentials'' or ''401 Unauthorized'',
  check that you are using a valid token.'
- If you receive a '403' error with 'Resource not accessible by personal access token',
  ensure that your fine-grained personal access token is targeted to the correct resource
  owner.
- For GitHub App requests made with user access tokens, use separate queries for issues
  and pull requests.
- The full channel provides real-time updates on orders and trades.
- Uses server-sent events for streaming responses.
- The 'full' channel requires authentication.
- Uses server-sent events for streaming responses
errors:
- 404 Record not found
- 400 Invalid input
- '201 OK: Successful request'
- 405 Validation error
- 400 Invalid status value
- '401 Unauthorized: Check that you are using a valid token.'
- '403: Resource not accessible by personal access token'
- 'Invalid Subscription: Check the product_ids and channel names.'
- 'overloaded_error: High usage may cause this error.'
- '400 Bad Request: Check the request format or parameters'
- '529 Overloaded: Reduce frequency of requests'
- 400 Bad Request
auth_info:
  mentioned_objects: []
client:
  base_url: /pet
  headers:
    Accept: application/json
source_metadata: null
