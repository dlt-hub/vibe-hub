resources:
- name: AudioBuffer
  endpoint:
    path: /api/audio_buffer
    method: GET
    data_selector: buffer
    params: {}
- name: Gain
  endpoint:
    path: /api/gain
    method: GET
    data_selector: gain
    params: {}
- name: Param
  endpoint:
    path: /api/param
    method: GET
    data_selector: param
    params: {}
- name: oscillator
  endpoint:
    path: /api/ipytone/Oscillator
    method: GET
    data_selector: Oscillator
- name: filter
  endpoint:
    path: /api/ipytone/Filter
    method: GET
    data_selector: Filter
- name: oscillator
  endpoint:
    path: /api/oscillator
    method: GET
    data_selector: records
    params: {}
- name: synth
  endpoint:
    path: /api/synth
    method: GET
    data_selector: records
- name: oscillator
  endpoint:
    path: /api/oscillator
    method: GET
    data_selector: records
- name: envelope
  endpoint:
    path: /api/envelope
    method: GET
    data_selector: records
- name: oscillator
  endpoint:
    path: /api/oscillator
    method: GET
    data_selector: records
- name: envelope
  endpoint:
    path: /api/envelope
    method: GET
    data_selector: records
- name: synth
  endpoint:
    path: /api/synth
    method: GET
    data_selector: records
- name: poly_synth
  endpoint:
    path: /api/poly_synth
    method: GET
    data_selector: records
- name: mono_synth
  endpoint:
    path: /api/mono_synth
    method: GET
    data_selector: records
- name: oscillator
  endpoint:
    path: /api/oscillator
    method: GET
    data_selector: records
    params: {}
- name: envelope
  endpoint:
    path: /api/envelope
    method: GET
    data_selector: records
    params: {}
- name: synth
  endpoint:
    path: /api/synth
    method: GET
    data_selector: records
    params: {}
- name: monosynth
  endpoint:
    path: /api/monosynth
    method: GET
    data_selector: records
    params: {}
- name: polysynth
  endpoint:
    path: /api/polysynth
    method: GET
    data_selector: records
    params: {}
- name: oscillator
  endpoint:
    path: /api/instruments/oscillator
    method: GET
    data_selector: oscillator
- name: envelope
  endpoint:
    path: /api/instruments/envelope
    method: GET
    data_selector: envelope
- name: synth
  endpoint:
    path: /api/instruments/synth
    method: GET
    data_selector: synth
- name: monoSynth
  endpoint:
    path: /api/instruments/monoSynth
    method: GET
    data_selector: monoSynth
- name: polySynth
  endpoint:
    path: /api/instruments/polySynth
    method: GET
    data_selector: polySynth
- name: audio_buffer
  endpoint:
    path: /api_generated/ipytone.AudioBuffer
    method: GET
    data_selector: AudioBuffer
- name: audio_buffers
  endpoint:
    path: /api_generated/ipytone.AudioBuffers
    method: GET
    data_selector: AudioBuffers
- name: player
  endpoint:
    path: /api_generated/ipytone.Player
    method: GET
    data_selector: Player
- name: sampler
  endpoint:
    path: /api_generated/ipytone.Sampler
    method: GET
    data_selector: Sampler
- name: AudioBuffer
  endpoint:
    path: /api_generated/ipytone.AudioBuffer
    method: GET
    data_selector: AudioBuffer
    params: {}
- name: AudioBuffers
  endpoint:
    path: /api_generated/ipytone.AudioBuffers
    method: GET
    data_selector: AudioBuffers
    params: {}
- name: Player
  endpoint:
    path: /api_generated/ipytone.Player
    method: GET
    data_selector: Player
    params: {}
- name: Sampler
  endpoint:
    path: /api_generated/ipytone.Sampler
    method: GET
    data_selector: Sampler
    params: {}
- name: Transport
  endpoint:
    path: /api_generated/ipytone.transport.Transport
    method: GET
- name: Event
  endpoint:
    path: /api_generated/ipytone.Event
    method: GET
- name: Part
  endpoint:
    path: /api_generated/ipytone.Part
    method: GET
- name: Note
  endpoint:
    path: /api_generated/ipytone.Note
    method: GET
- name: Synth
  endpoint:
    path: /api_generated/ipytone.Synth
    method: GET
- name: Transport
  endpoint:
    path: /api/ipytone/transport
    method: GET
    data_selector: Transport
    params: {}
- name: Event
  endpoint:
    path: /api/ipytone/event
    method: GET
    data_selector: Event
    params: {}
- name: Part
  endpoint:
    path: /api/ipytone/part
    method: GET
    data_selector: Part
    params: {}
- name: Transport
  endpoint:
    path: /api/ipytone/transport
    method: GET
    data_selector: records
- name: Event
  endpoint:
    path: /api/ipytone/event
    method: GET
    data_selector: records
- name: Loop
  endpoint:
    path: /api/ipytone/loop
    method: GET
    data_selector: records
- name: Part
  endpoint:
    path: /api/ipytone/part
    method: GET
    data_selector: records
- name: Sequence
  endpoint:
    path: /api/ipytone/sequence
    method: GET
    data_selector: records
- name: Pattern
  endpoint:
    path: /api/ipytone/pattern
    method: GET
    data_selector: records
- name: Transport
  endpoint:
    path: /api/transport
    method: GET
    data_selector: records
- name: Event
  endpoint:
    path: /api/event
    method: GET
    data_selector: records
- name: Loop
  endpoint:
    path: /api/loop
    method: GET
    data_selector: records
- name: Part
  endpoint:
    path: /api/part
    method: GET
    data_selector: records
- name: Sequence
  endpoint:
    path: /api/sequence
    method: GET
    data_selector: records
- name: Pattern
  endpoint:
    path: /api/pattern
    method: GET
    data_selector: records
- name: synth
  endpoint:
    path: /synth
    method: POST
    data_selector: data
    params: {}
- name: meter
  endpoint:
    path: /meter
    method: POST
    data_selector: data
    params: {}
- name: analyser
  endpoint:
    path: /analyser
    method: POST
    data_selector: data
    params: {}
- name: synth
  endpoint:
    path: /api/synth
    method: POST
    data_selector: synth
    params: {}
- name: analyser
  endpoint:
    path: /api/analyser
    method: POST
    data_selector: analyser
    params: {}
- name: meter
  endpoint:
    path: /api/meter
    method: POST
    data_selector: meter
    params: {}
notes:
- Apart from a few subtle differences, ipytone closely follows the Tone.js API.
- An ipytone audio node may have several properties that are synchronized with the
  front-end and that can be used for a fine-grained control on the generated or processed
  audio.
- Ipytone provides different oscillators that can generate sound from basic waveforms
  modulated at a given frequency.
- An envelope allows to smoothly modulate a signal over time.
- Ipytone provides different oscillators
- The frequency of the oscillator gives the note, e.g., 'C4'
- An envelope allows smoothly modulating a signal over time
- Ipytone provides envelopes characterized by attack, decay, sustain, and release
  segments.
- Create a buffer from a numpy array is currently limited to samples of a duration
  less or equal to 10 seconds.
- Creating buffers may be blocked due to the server CORS policy.
- Depending on the given urls, creating the buffers may be blocked due to the server
  CORS policy.
- If two or more notebooks with independent kernels are open in the same JupyterLab
  tab, they will all act on the same timeline.
- Ipytone doesnâ€™t handle callbacks like you might expect, i.e., like functions called
  at each of the scheduled times.
- Transport is globally exposed in the front-end.
- If multiple notebooks are open in the same JupyterLab tab, they will act on the
  same timeline.
- Audio nodes can be connected to widgets for real-time analysis.
- Use schedule_observe() for tracking special attributes.
errors: []
auth_info:
  mentioned_objects: []
client:
  base_url: https://github.com/geigr/ipytone
  headers:
    Accept: application/json
source_metadata: null
