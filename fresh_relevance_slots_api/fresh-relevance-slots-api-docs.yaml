resources:
- name: analytics_report
  endpoint:
    path: /reference/getanalyticsreportforitem
    method: GET
- name: manage_slots
  endpoint:
    path: /reference/manage-slot
    method: GET
- name: tracking_script
  endpoint:
    path: /tracking/script
    method: GET
    data_selector: script
- name: Record Activity
  endpoint:
    path: /reference/record_activity
    method: POST
- name: Content API
  endpoint:
    path: /reference/content-api
    method: GET
- name: Retrieve a slot
  endpoint:
    path: /reference/getslot
    method: GET
- name: Klarna
  endpoint:
    path: /path/to/klarna/endpoint
    method: GET
    data_selector: data
    params: {}
- name: Svea
  endpoint:
    path: /path/to/svea/endpoint
    method: GET
    data_selector: data
    params: {}
- name: Ecster
  endpoint:
    path: /path/to/ecster/endpoint
    method: GET
    data_selector: data
    params: {}
- name: Qliro
  endpoint:
    path: /path/to/qliro/endpoint
    method: GET
    data_selector: data
    params: {}
- name: __tmsd
  endpoint:
    path: /html/api
    method: GET
    data_selector: attributes
    params: {}
- name: query_string_parameters
  endpoint:
    path: /docs/query-string-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: digitalData
  endpoint:
    path: /w3c-ddl
    method: GET
    data_selector: digitalData
    params: {}
- name: purchase_complete
  endpoint:
    path: /purchase/complete
    method: GET
    data_selector: digitalData.page
    params: {}
- name: single_slot
  endpoint:
    path: /abcdefg1/s/push2dd/
    method: GET
    data_selector: html
    params:
      format: full
- name: multi_slots
  endpoint:
    path: /getmultislots
    method: GET
    data_selector: slots
    params: {}
- name: campaigns
  endpoint:
    path: /campaigns/
    method: GET
    data_selector: ''
    params: {}
- name: experience
  endpoint:
    path: /e/
    method: GET
    data_selector: ''
    params: {}
- name: record_activity
  endpoint:
    path: /mobile-data-collection-api/record_activity
    method: POST
- name: purchase_complete
  endpoint:
    path: /pc/[Account ID]
    method: GET
    data_selector: records
    params: {}
- name: account_info
  endpoint:
    path: /account_info/
    method: GET
- name: account_info
  endpoint:
    path: /account_info/
    method: GET
    data_selector: response
- name: account_info
  endpoint:
    path: /reference/getaccountinfo
    method: GET
- name: client_info
  endpoint:
    path: /reference/getclientinfo
    method: GET
- name: admin_users
  endpoint:
    path: /reference/getadminusers
    method: GET
- name: channels
  endpoint:
    path: /reference/getchannels
    method: GET
- name: categories
  endpoint:
    path: /reference/getcategories
    method: GET
- name: Account
  endpoint:
    path: /reference/getaccountinfo
    method: GET
- name: Client Info
  endpoint:
    path: /reference/getclientinfo
    method: GET
- name: Channels
  endpoint:
    path: /reference/getchannels
    method: GET
- name: Categories
  endpoint:
    path: /reference/getcategories
    method: GET
- name: account_info
  endpoint:
    path: /reference/getaccountinfo
    method: GET
- name: client_info
  endpoint:
    path: /reference/getclientinfo
    method: GET
- name: admin_users
  endpoint:
    path: /reference/getadminusers
    method: GET
- name: channels
  endpoint:
    path: /reference/getchannels
    method: GET
- name: categories
  endpoint:
    path: /reference/getcategories
    method: GET
- name: SmartBlocks
  endpoint:
    path: /smartblocks_list_all
    method: GET
- name: Create SmartBlock
  endpoint:
    path: /smartblocks_create
    method: POST
- name: Get SmartBlock
  endpoint:
    path: /smartblocks_retrieve
    method: GET
- name: Update SmartBlock
  endpoint:
    path: /smartblocks_update
    method: POST
- name: Delete SmartBlock
  endpoint:
    path: /smartblocks_delete
    method: DELETE
- name: aggregated_statistics
  endpoint:
    path: /statistics_get
    method: GET
    data_selector: statistics
- name: smartblock_statistics
  endpoint:
    path: /statisticssmartblocksget
    method: GET
    data_selector: statistics
- name: slot_statistics
  endpoint:
    path: /statisticsslotsget
    method: GET
    data_selector: statistics
- name: triggers_statistics
  endpoint:
    path: /statisticstriggersget
    method: GET
    data_selector: statistics
- name: experiences_statistics
  endpoint:
    path: /statisticsexperiencesget
    method: GET
    data_selector: statistics
- name: Account
  endpoint:
    path: /reference/getaccountinfo
    method: GET
    data_selector: records
    params: {}
- name: Client
  endpoint:
    path: /reference/getclientinfo
    method: GET
    data_selector: records
    params: {}
- name: Admin Users
  endpoint:
    path: /reference/getadminusers
    method: GET
    data_selector: records
    params: {}
- name: Channels
  endpoint:
    path: /reference/getchannels
    method: GET
    data_selector: records
    params: {}
- name: Categories
  endpoint:
    path: /reference/getcategories
    method: GET
    data_selector: records
    params: {}
- name: client_info
  endpoint:
    path: /client_info/
    method: GET
    data_selector: results
    params:
      format: json
      limit: 25
      page: 1
- name: client_info
  endpoint:
    path: /client_info/
    method: GET
    data_selector: results
    params:
      format: json
      page: 1
- name: client_info
  endpoint:
    path: /client_info/
    method: PUT
- name: client_info
  endpoint:
    path: /client_info/
    method: PUT
- name: admin_users
  endpoint:
    path: /admin_users/
    method: GET
    data_selector: limited details about Fresh Relevance admin users
- name: admin_users
  endpoint:
    path: /api/{website_id}/admin_users/
    method: GET
    data_selector: response
- name: admin_user
  endpoint:
    path: /api/{website_id}/admin_users/{user_id}/
    method: PUT
    data_selector: response
- name: update_admin_user
  endpoint:
    path: /api/{website_id}/admin_users/{user_id}/
    method: PUT
- name: channels
  endpoint:
    path: /api/{website_id}/channels/
    method: GET
    data_selector: channels
- name: channels
  endpoint:
    path: /channels/
    method: GET
- name: channel
  endpoint:
    path: /api/{website_id}/channels/{channel_id}/
    method: GET
- name: channel
  endpoint:
    path: /channels/{channel_id}/
    method: GET
- name: categories
  endpoint:
    path: /api/{website_id}/categories/
    method: GET
    data_selector: categories
- name: categories
  endpoint:
    path: /api/{website_id}/categories/
    method: GET
    data_selector: categories
- name: specific_experience
  endpoint:
    path: /e/
    method: GET
    data_selector: response
    params: {}
- name: specific_experience
  endpoint:
    path: /e/
    method: GET
- name: channels
  endpoint:
    path: /api/{website_id}/channels/
    method: GET
    data_selector: channels
    params: {}
- name: channels
  endpoint:
    path: /api/{website_id}/channels/
    method: GET
- name: channel
  endpoint:
    path: /api/{website_id}/channels/{channel_id}/
    method: GET
- name: channel
  endpoint:
    path: /api/{website_id}/channels/{channel_id}/
    method: GET
- name: slots
  endpoint:
    path: /campaigns/
    method: GET
- name: list_slots
  endpoint:
    path: /campaigns/
    method: GET
- name: retrieve_slot
  endpoint:
    path: /s/{slotId}
    method: GET
- name: multiple_slots
  endpoint:
    path: /multislots/{slotIds}/
    method: GET
    data_selector: ''
    params: {}
- name: retrieve_slot
  endpoint:
    path: /s/{slotId}
    method: GET
    data_selector: null
    params: {}
- name: track_click_through
  endpoint:
    path: /{website_id}/tc/
    method: POST
- name: multiple_slots
  endpoint:
    path: /multislots/{slotIds}/
    method: GET
- name: track_click_through
  endpoint:
    path: /tc/
    method: POST
- name: custom_data_tables
  endpoint:
    path: /custom_data_tables/list
    method: GET
- name: custom_data_tables
  endpoint:
    path: /getlisttables
    method: GET
    data_selector: records
- name: create_custom_data_table
  endpoint:
    path: /postcreatetable
    method: POST
    data_selector: response
- name: custom_data_table
  endpoint:
    path: /api/{website_id}/custom_data_tables/create
    method: POST
- name: custom_data_tables
  endpoint:
    path: /custom_data_tables/list
    method: GET
- name: validate_table_identifier
  endpoint:
    path: /custom_data_tables/check-id
    method: POST
- name: custom_data_table
  endpoint:
    path: /custom_data_tables/create
    method: POST
- name: get_logs_for_table
  endpoint:
    path: /api/{website_id}/custom_data_tables/table/{tableId}/channels/logs
    method: GET
- name: validate_table_identifier
  endpoint:
    path: /custom_data_tables/check-id
    method: POST
- name: get_logs_for_table
  endpoint:
    path: /api/{website_id}/custom_data_tables/table/{tableId}/channels/logs
    method: GET
- name: custom_data_table
  endpoint:
    path: /custom_data_tables/table/{tableId}
    method: GET
    data_selector: response
- name: custom_data_table
  endpoint:
    path: /api/{website_id}/custom_data_tables/table/{tableId}
    method: GET
- name: custom_data_table
  endpoint:
    path: /api/{website_id}/custom_data_tables/table/{tableId}
    method: PUT
- name: custom_data_table
  endpoint:
    path: /api/{website_id}/custom_data_tables/table/{tableId}
    method: PUT
- name: get_json_schema_for_table
  endpoint:
    path: /api/{website_id}/custom_data_tables/table/{tableId}/schema
    method: GET
- name: custom_data_table_schema
  endpoint:
    path: /api/{website_id}/custom_data_tables/table/{tableId}/schema
    method: GET
- name: custom_data_table
  endpoint:
    path: /api/{website_id}/custom_data_tables/table/{tableId}/data
    method: GET
- name: custom_data_table
  endpoint:
    path: /api/{website_id}/custom_data_tables/table/{tableId}/data
    method: GET
- name: channels
  endpoint:
    path: /api/{website_id}/custom_data_tables/table/{tableId}/channels
    method: GET
- name: channels
  endpoint:
    path: /api/{website_id}/custom_data_tables/table/{tableId}/channels
    method: GET
- name: update_or_delete_channel
  endpoint:
    path: /api/{website_id}/custom_data_tables/table/{tableId}/channels
    method: PUT
- name: update_or_delete_channel
  endpoint:
    path: /api/{website_id}/custom_data_tables/table/{tableId}/channels
    method: PUT
- name: create_channel_for_table
  endpoint:
    path: /api/{website_id}/custom_data_tables/table/{tableId}/channels
    method: POST
- name: create_channel
  endpoint:
    path: /custom_data_tables/table/{tableId}/channels
    method: POST
- name: get_channel_for_table
  endpoint:
    path: /api/{website_id}/custom_data_tables/table/{tableId}/channels/{channelId}
    method: GET
- name: folders
  endpoint:
    path: /folders
    method: GET
    data_selector: folders
    params: {}
- name: channel
  endpoint:
    path: /custom_data_tables/table/{tableId}/channels/{channelId}
    method: GET
- name: get_all_folders
  endpoint:
    path: /folders
    method: GET
    data_selector: folders
- name: create_folder
  endpoint:
    path: /folders
    method: POST
- name: create_folder
  endpoint:
    path: /folders
    method: POST
- name: folder
  endpoint:
    path: /folders/{folder_id}
    method: GET
    data_selector: folder_details
- name: update_folder
  endpoint:
    path: /api/{website_id}/folders/{folder_id}
    method: POST
- name: folder
  endpoint:
    path: /folders/{folder_id}
    method: GET
    data_selector: details
    params: {}
- name: delete_folder
  endpoint:
    path: /folders/{folder_id}
    method: DELETE
- name: folders
  endpoint:
    path: /folders/{folder_id}
    method: POST
- name: delete_folder
  endpoint:
    path: /folders/{folder_id}
    method: DELETE
- name: events
  endpoint:
    path: $TB.hooks.events
    method: GET
    data_selector: events
- name: fireEvent
  endpoint:
    path: $TB.fireEvent
    method: POST
    data_selector: event
- name: registerEvent
  endpoint:
    path: $TB.registerEvent
    method: POST
    data_selector: callback
- name: validCallEvents
  endpoint:
    path: $TB.validCallEvents
    method: GET
    data_selector: validEvents
- name: validReturnEvents
  endpoint:
    path: $TB.validReturnEvents
    method: GET
    data_selector: validReturnEvents
- name: reloadSlotConfig
  endpoint:
    path: $TB.reloadSlotConfig
    method: POST
    data_selector: reload
- name: Account API
  endpoint:
    path: /reference/accounts-api
    method: GET
- name: Activity API
  endpoint:
    path: /reference/activity-api
    method: GET
- name: Channels API
  endpoint:
    path: /reference/channels-api
    method: GET
- name: Content API
  endpoint:
    path: /reference/content-api
    method: GET
- name: Data Tables API
  endpoint:
    path: /reference/datatables-api
    method: GET
- name: Folders API
  endpoint:
    path: /reference/folders-api
    method: GET
- name: JavaScript API
  endpoint:
    path: /reference/js-overview
    method: GET
- name: Mobile Data Collection API
  endpoint:
    path: /reference/mobile-data-collection-api
    method: GET
- name: Layouts API
  endpoint:
    path: /reference/layouts-api
    method: GET
- name: People API
  endpoint:
    path: /reference/people-api
    method: GET
- name: Products API
  endpoint:
    path: /reference/products-api
    method: GET
- name: Purchases API
  endpoint:
    path: /reference/purchases-api
    method: GET
- name: Reports API
  endpoint:
    path: /reference/reports-api
    method: GET
- name: Slots API
  endpoint:
    path: /reference/slots-api
    method: GET
- name: Smartblocks API
  endpoint:
    path: /reference/smartblocks-api
    method: GET
- name: Statistics API
  endpoint:
    path: /reference/statistics
    method: GET
- name: Triggers API
  endpoint:
    path: /reference/triggers-api
    method: GET
- name: purchaseComplete
  endpoint:
    path: /getpurchasecomplete
    method: GET
    data_selector: data
    params: {}
- name: userLoggedIn
  endpoint:
    path: /user_logged_in
    method: POST
    data_selector: data
    params: {}
- name: productVariantSelected
  endpoint:
    path: /product_variant_selected
    method: POST
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: $TB.hooks.events
    method: GET
    data_selector: events
- name: fireEvent
  endpoint:
    path: $TB.fireEvent
    method: POST
    data_selector: eventName, data, options
- name: registerEvent
  endpoint:
    path: $TB.registerEvent
    method: POST
    data_selector: eventName, callback
- name: validCallEvents
  endpoint:
    path: $TB.validCallEvents
    method: GET
    data_selector: valid events
- name: validReturnEvents
  endpoint:
    path: $TB.validReturnEvents
    method: GET
    data_selector: valid return events
- name: reloadSlotConfig
  endpoint:
    path: $TB.reloadSlotConfig
    method: POST
    data_selector: no parameters
- name: purchase_complete
  endpoint:
    path: /getpurchasecomplete
    method: GET
- name: pageChangeCaptured
  endpoint:
    path: /reference/raising-events
    method: GET
    data_selector: event data
    params: {}
- name: productCaptured
  endpoint:
    path: /reference/raising-events
    method: GET
    data_selector: event data
    params: {}
- name: listCaptured
  endpoint:
    path: /reference/raising-events
    method: GET
    data_selector: event data
    params: {}
- name: cartUpdated
  endpoint:
    path: /reference/raising-events
    method: GET
    data_selector: event data
    params: {}
- name: checkoutCaptured
  endpoint:
    path: /reference/raising-events
    method: GET
    data_selector: event data
    params: {}
- name: userCaptured
  endpoint:
    path: /reference/raising-events
    method: GET
    data_selector: event data
    params: {}
- name: userLoggedIn
  endpoint:
    path: /userLoggedIn
    method: POST
    data_selector: data
    params:
      sendBeacon: true
- name: record_activity
  endpoint:
    path: /api/app/v1/{website_id}/
    method: POST
    data_selector: '204'
- name: pageChangeCaptured
  endpoint:
    path: /reference/raising-events#pageChangeCaptured
    method: GET
    data_selector: event data
    params: {}
- name: productCaptured
  endpoint:
    path: /reference/raising-events#productCaptured
    method: GET
    data_selector: event data
    params: {}
- name: listCaptured
  endpoint:
    path: /reference/raising-events#listCaptured
    method: GET
    data_selector: event data
    params: {}
- name: cartUpdated
  endpoint:
    path: /reference/raising-events#cartUpdated
    method: GET
    data_selector: event data
    params: {}
- name: cartProductAdded
  endpoint:
    path: /reference/raising-events#cartProductAdded
    method: GET
    data_selector: event data
    params: {}
- name: cartProductRemoved
  endpoint:
    path: /reference/raising-events#cartProductRemoved
    method: GET
    data_selector: event data
    params: {}
- name: checkoutCaptured
  endpoint:
    path: /reference/raising-events#checkoutCaptured
    method: GET
    data_selector: event data
    params: {}
- name: purchaseCompleteCaptured
  endpoint:
    path: /reference/raising-events#purchaseCompleteCaptured
    method: GET
    data_selector: event data
    params: {}
- name: userCaptured
  endpoint:
    path: /reference/raising-events#userCaptured
    method: GET
    data_selector: event data
    params: {}
- name: validate_record_activity
  endpoint:
    path: /validate/
    method: POST
- name: Before Slot load
  endpoint:
    path: /reference/hooks/before-slot-load
    method: GET
    data_selector: parameters
- name: On Slot load
  endpoint:
    path: /reference/hooks/on-slot-load
    method: GET
    data_selector: parameters
- name: layouts
  endpoint:
    path: /layouts/
    method: GET
- name: layouts
  endpoint:
    path: /api/{website_id}/layouts/
    method: POST
- name: record_activity
  endpoint:
    path: /api/app/v1/{website_id}/
    method: POST
    data_selector: '204'
- name: layout
  endpoint:
    path: /api/{website_id}/layouts/{slug}/
    method: GET
- name: record_activity_validation
  endpoint:
    path: /validate/
    method: POST
- name: layouts
  endpoint:
    path: /api/{website_id}/layouts/{slug}/
    method: DELETE
- name: layouts
  endpoint:
    path: /layouts/
    method: GET
- name: layouts
  endpoint:
    path: /layouts/
    method: POST
- name: clone_layout
  endpoint:
    path: /api/{website_id}/layouts/{slug}/clone/
    method: POST
- name: get_layout
  endpoint:
    path: /{slug}/
    method: GET
- name: bulk_update_layout
  endpoint:
    path: /api/{website_id}/layouts/{slugs}/bulk/
    method: POST
- name: layouts
  endpoint:
    path: /layouts/{slug}/
    method: POST
- name: bulk_delete_layouts
  endpoint:
    path: /api/{website_id}/layouts/{slugs}/bulk/
    method: DELETE
- name: Delete layout
  endpoint:
    path: /layouts/{slug}/
    method: DELETE
- name: Clone layout
  endpoint:
    path: /api/{website_id}/layouts/{slug}/clone/
    method: POST
- name: people
  endpoint:
    path: /people/
    method: GET
- name: bulk_delete_layouts
  endpoint:
    path: /api/{website_id}/layouts/{slugs}/bulk/
    method: DELETE
- name: search_people
  endpoint:
    path: /api/{website_id}/people/search/{search_type}/{search_value}/
    method: GET
- name: person
  endpoint:
    path: /{website_id}/people/{person_id}/
    method: GET
- name: people
  endpoint:
    path: /api/{website_id}/people/
    method: GET
- name: update_person
  endpoint:
    path: /api/{website_id}/people/{person_id}/
    method: PUT
- name: search_people
  endpoint:
    path: /api/{website_id}/people/search/{search_type}/{search_value}/
    method: GET
- name: delete_person
  endpoint:
    path: /api/{website_id}/people/{person_id}/
    method: DELETE
- name: person
  endpoint:
    path: /api/{website_id}/people/{person_id}/
    method: GET
    data_selector: person details
- name: product_import
  endpoint:
    path: /reference/post_api-website-id-products-import
    method: POST
- name: update_person
  endpoint:
    path: /api/{website_id}/people/{person_id}/
    method: PUT
- name: delete_person
  endpoint:
    path: /api/{website_id}/people/{person_id}/
    method: DELETE
- name: Product Import
  endpoint:
    path: /reference/post_api-website-id-products-import
    method: POST
- name: product_data
  endpoint:
    path: /products
    method: GET
    data_selector: products
    params: {}
- name: product
  endpoint:
    path: /api/products
    method: GET
    data_selector: products
- name: products
  endpoint:
    path: /products/
    method: GET
- name: search_products
  endpoint:
    path: /products/search/
    method: GET
- name: product_history
  endpoint:
    path: /product_history/
    method: GET
    data_selector: records
- name: Accounts API
  endpoint:
    path: /reference/accounts-api
    method: GET
- name: Activity API
  endpoint:
    path: /reference/activity-api
    method: GET
- name: Channels API
  endpoint:
    path: /reference/channels-api
    method: GET
- name: Content API
  endpoint:
    path: /reference/content-api
    method: GET
- name: Data Tables API
  endpoint:
    path: /reference/datatables-api
    method: GET
- name: Folders API
  endpoint:
    path: /reference/folders-api
    method: GET
- name: JavaScript API
  endpoint:
    path: /reference/js-overview
    method: GET
- name: Mobile Data Collection API
  endpoint:
    path: /reference/mobile-data-collection-api
    method: GET
- name: Layouts API
  endpoint:
    path: /reference/layouts-api
    method: GET
- name: People API
  endpoint:
    path: /reference/people-api
    method: GET
- name: Products API
  endpoint:
    path: /reference/products-api
    method: GET
- name: Purchases API
  endpoint:
    path: /reference/purchases-api
    method: GET
- name: Reports API
  endpoint:
    path: /reference/reports-api
    method: GET
- name: Slots API
  endpoint:
    path: /reference/slots-api
    method: GET
- name: Smartblocks API
  endpoint:
    path: /reference/smartblocks-api
    method: GET
- name: Statistics API
  endpoint:
    path: /reference/statistics
    method: GET
- name: Triggers API
  endpoint:
    path: /reference/triggers-api
    method: GET
- name: daily_product_analytics
  endpoint:
    path: /product_analytics/
    method: GET
- name: product
  endpoint:
    path: /products
    method: GET
    data_selector: products
- name: products
  endpoint:
    path: /products/
    method: GET
- name: product_analytics_aggregated
  endpoint:
    path: /product_analytics_aggregated/
    method: GET
- name: purchase_complete
  endpoint:
    path: /pc/{website_id}/
    method: GET
- name: search_products
  endpoint:
    path: /api/api/{website_id}/products/search/
    method: GET
- name: products_import
  endpoint:
    path: /api/api/{website_id}/products/import/
    method: POST
- name: Mark purchase as complete
  endpoint:
    path: /reference/getpurchasecomplete
    method: GET
- name: product_history
  endpoint:
    path: /product_history/
    method: GET
    data_selector: records
- name: campaigns
  endpoint:
    path: /campaigns/
    method: GET
- name: product_analytics
  endpoint:
    path: /product_analytics/
    method: GET
- name: campaigns_details
  endpoint:
    path: /api/{website_id}/campaigns_details/
    method: GET
- name: product_analytics
  endpoint:
    path: /product_analytics_aggregated/
    method: GET
- name: conversions
  endpoint:
    path: /conversions/
    method: GET
- name: mark_purchase_complete
  endpoint:
    path: /pc/{website_id}/
    method: GET
    data_selector: ''
- name: abandoned_carts
  endpoint:
    path: /abandoned/
    method: GET
- name: recovered_carts
  endpoint:
    path: /recovered/
    method: GET
- name: Mark purchase as complete
  endpoint:
    path: /reference/getpurchasecomplete
    method: GET
- name: purchased_carts
  endpoint:
    path: /purchased/
    method: GET
- name: campaigns
  endpoint:
    path: /api/{website_id}/campaigns/
    method: GET
- name: carted_report
  endpoint:
    path: /carted/
    method: GET
- name: messages_sent
  endpoint:
    path: /api/{website_id}/messages_sent/
    method: GET
- name: campaigns_details
  endpoint:
    path: /campaigns_details/
    method: GET
- name: unsubscribes
  endpoint:
    path: /unsub/
    method: GET
- name: conversions
  endpoint:
    path: /conversions/
    method: GET
- name: summary_report
  endpoint:
    path: /reports_summary/
    method: GET
- name: abandoned_carts
  endpoint:
    path: /abandoned/
    method: GET
- name: reports_outline
  endpoint:
    path: /reports_outline/
    method: GET
- name: recovered_carts
  endpoint:
    path: /api/{website_id}/recovered/
    method: GET
- name: purchased_carts
  endpoint:
    path: /api/{website_id}/purchased/
    method: GET
- name: usage_report
  endpoint:
    path: /usage/
    method: GET
    data_selector: usage_data
- name: carted
  endpoint:
    path: /carted/
    method: GET
    data_selector: response
- name: overview_report
  endpoint:
    path: /reports/item/overview/{type}/
    method: GET
- name: messages_sent
  endpoint:
    path: /api/{website_id}/messages_sent/
    method: GET
- name: overview_report
  endpoint:
    path: /reports/item/overview/{type}/{slugs}/
    method: GET
- name: unsubscribes
  endpoint:
    path: /unsub/
    method: GET
- name: summary_report
  endpoint:
    path: /api/{website_id}/reports_summary/
    method: GET
- name: analytics_report
  endpoint:
    path: /reports/item/{type}/
    method: GET
- name: analytics_report
  endpoint:
    path: /reports/item/{type}/{slugs}/
    method: GET
- name: reports_outline
  endpoint:
    path: /reports_outline
    method: GET
- name: usage
  endpoint:
    path: /usage/
    method: GET
- name: slots
  endpoint:
    path: /api/{website_id}/slots/
    method: GET
    data_selector: records
- name: overview_report
  endpoint:
    path: /reports/item/overview/{type}/
    method: GET
- name: create_slot
  endpoint:
    path: /api/{website_id}/slots/
    method: POST
- name: overview_report
  endpoint:
    path: /reports/item/overview/{type}/{slugs}/
    method: GET
- name: slot
  endpoint:
    path: /api/{website_id}/slots/{slot_id}/
    method: GET
- name: analytics_report
  endpoint:
    path: /reports/item/{type}/
    method: GET
- name: slots
  endpoint:
    path: /api/{website_id}/slots/{slot_id}/
    method: DELETE
- name: analytics_report
  endpoint:
    path: /api/{website_id}/reports/item/{type}/{slugs}/
    method: GET
- name: clone_slot
  endpoint:
    path: /api/{website_id}/slots/{slot_id}/clone
    method: POST
- name: slots
  endpoint:
    path: /api/{website_id}/slots/
    method: GET
    data_selector: response
- name: slots
  endpoint:
    path: /api/{website_id}/slots/
    method: POST
- name: bulk_update_slots
  endpoint:
    path: /api/{website_id}/slots/{slugs}/bulk/
    method: POST
- name: slot
  endpoint:
    path: /api/{website_id}/slots/{slot_id}/
    method: GET
- name: bulk_delete_slots
  endpoint:
    path: /api/{website_id}/slots/{slugs}/bulk/
    method: DELETE
- name: Update Slot
  endpoint:
    path: /api/{website_id}/slots/{slot_id}/
    method: POST
- name: smartblocks
  endpoint:
    path: /smartblocks/
    method: GET
- name: slots
  endpoint:
    path: /api/{website_id}/slots/{slot_id}/
    method: DELETE
- name: Create SmartBlock
  endpoint:
    path: /api/{website_id}/smartblocks/
    method: POST
- name: clone_slot
  endpoint:
    path: /api/{website_id}/slots/{slot_id}/clone/
    method: POST
- name: smartblock
  endpoint:
    path: /api/{website_id}/smartblocks/{smartblock_slug}/
    method: GET
    data_selector: details
    params: {}
- name: slots_bulk_update
  endpoint:
    path: /api/{website_id}/slots/{slugs}/bulk/
    method: POST
- name: Delete SmartBlock
  endpoint:
    path: /api/{website_id}/smartblocks/{smartblock_slug}/
    method: DELETE
- name: bulk_delete_slots
  endpoint:
    path: /api/{website_id}/slots/{slugs}/bulk/
    method: DELETE
- name: bulk_update_smartblocks
  endpoint:
    path: /smartblocks/{slugs}/bulk/
    method: POST
- name: smartblocks
  endpoint:
    path: /smartblocks/
    method: GET
    data_selector: records
- name: bulk_delete_smartblocks
  endpoint:
    path: /api/{website_id}/smartblocks/{slugs}/bulk/
    method: DELETE
    params: {}
- name: Get SmartBlock
  endpoint:
    path: /api/{website_id}/smartblocks/{smartblock_slug}/
    method: GET
- name: update_smartblock
  endpoint:
    path: /smartblocks/{smartblock_slug}/
    method: POST
- name: account_info
  endpoint:
    path: /reference/getaccountinfo
    method: GET
    data_selector: account
    params: {}
- name: client_info
  endpoint:
    path: /reference/getclientinfo
    method: GET
    data_selector: client
    params: {}
- name: admin_users
  endpoint:
    path: /reference/getadminusers
    method: GET
    data_selector: admins
    params: {}
- name: channels
  endpoint:
    path: /reference/getchannels
    method: GET
    data_selector: channels
    params: {}
- name: categories
  endpoint:
    path: /reference/getcategories
    method: GET
    data_selector: categories
    params: {}
- name: Delete SmartBlock
  endpoint:
    path: /api/{website_id}/smartblocks/{smartblock_slug}/
    method: DELETE
- name: clone_smartblock
  endpoint:
    path: /smartblocks/{smartblock_slug}/clone/
    method: POST
- name: bulk_update_smartblocks
  endpoint:
    path: /smartblocks/{slugs}/bulk/
    method: POST
- name: aggregated_statistics
  endpoint:
    path: /statistics/
    method: GET
- name: bulk_delete_smartblocks
  endpoint:
    path: /api/{website_id}/smartblocks/{slugs}/bulk/
    method: DELETE
    data_selector: null
    params:
      website_id: required
      slugs: required
- name: smartblock_statistics
  endpoint:
    path: /statistics/smartblocks
    method: GET
- name: slot_statistics
  endpoint:
    path: /statistics/slots
    method: GET
- name: SmartBlocks
  endpoint:
    path: /reference/smartblocks_list_all
    method: GET
    data_selector: records
    params: {}
- name: clone_smartblock
  endpoint:
    path: /api/{website_id}/smartblocks/{smartblock_slug}/clone/
    method: POST
- name: triggers_statistics
  endpoint:
    path: /statistics/triggers
    method: GET
- name: aggregated_statistics
  endpoint:
    path: /statistics/
    method: GET
- name: experiences_statistics
  endpoint:
    path: /statistics/experiences
    method: GET
- name: Get SmartBlock statistics
  endpoint:
    path: /statistics/smartblocks
    method: GET
- name: slots_statistics
  endpoint:
    path: /statistics/slots
    method: GET
- name: program_triggers
  endpoint:
    path: /triggers/
    method: GET
- name: triggers_statistics
  endpoint:
    path: /api/{website_id}/statistics/triggers
    method: GET
- name: trigger
  endpoint:
    path: /api/{website_id}/triggers/{trigger_id}/
    method: GET
- name: experiences_statistics
  endpoint:
    path: /statistics/experiences
    method: GET
- name: update_trigger
  endpoint:
    path: /api/{website_id}/triggers/{trigger_id}/
    method: PUT
- name: program_triggers
  endpoint:
    path: /triggers/
    method: GET
- name: delete_trigger
  endpoint:
    path: /api/{website_id}/triggers/{trigger_id}/
    method: DELETE
- name: clone_trigger
  endpoint:
    path: /api/{website_id}/triggers/{trigger_id}/clone/
    method: POST
- name: trigger
  endpoint:
    path: /api/{website_id}/triggers/{trigger_id}/
    method: GET
    data_selector: response
- name: trigger_actions
  endpoint:
    path: /api/{website_id}/triggers/{trigger_id}/actions/
    method: GET
    data_selector: actions
- name: update_trigger
  endpoint:
    path: /api/{website_id}/triggers/{trigger_id}/
    method: PUT
- name: trigger_rules
  endpoint:
    path: /api/{website_id}/trigger_rules/
    method: GET
    data_selector: records
- name: delete_trigger
  endpoint:
    path: /api/{website_id}/triggers/{trigger_id}/
    method: DELETE
- name: clone_trigger
  endpoint:
    path: /api/{website_id}/triggers/{trigger_id}/clone/
    method: POST
- name: trigger_rule
  endpoint:
    path: /trigger_rules/{slug}/
    method: GET
- name: list_trigger_actions
  endpoint:
    path: /api/{website_id}/triggers/{trigger_id}/actions/
    method: GET
- name: trigger_queue
  endpoint:
    path: /api/{website_id}/trigger_queue/
    method: GET
- name: person_fields
  endpoint:
    path: /reference/person-fields
    method: GET
    data_selector: rootData
- name: trigger_rules
  endpoint:
    path: /trigger_rules/
    method: GET
- name: trigger_rule
  endpoint:
    path: /trigger_rules/{slug}/
    method: GET
- name: trigger_queue
  endpoint:
    path: /api/{website_id}/trigger_queue/
    method: GET
    data_selector: response
- name: List Slots
  endpoint:
    path: /api/{website_id}/slots/
    method: GET
    data_selector: results
    params:
      format: json
      limit: 25
      page: 1
      include_deleted: false
      load_smartblock_list: false
      include_empty_slots: false
      include_live_flag: false
- name: person_fields
  endpoint:
    path: /reference/person-fields
    method: GET
    data_selector: rootData
- name: account_info
  endpoint:
    path: /account_info/
    method: GET
- name: client_info
  endpoint:
    path: /client_info/
    method: GET
- name: slots
  endpoint:
    path: /getlistslots
    method: GET
    data_selector: results
    params:
      format: json
      limit: 25
      page: 1
      include_deleted: false
      load_smartblock_list: false
      include_empty_slots: false
      include_live_flag: false
- name: admin_users
  endpoint:
    path: /admin_users/
    method: GET
    data_selector: records
- name: account_info
  endpoint:
    path: /account_info/
    method: GET
- name: channels
  endpoint:
    path: /channels/
    method: GET
- name: categories
  endpoint:
    path: /api/{website_id}/categories/
    method: GET
- name: client_info
  endpoint:
    path: /client_info/
    method: GET
    data_selector: client_info
- name: channels
  endpoint:
    path: /api/{website_id}/channels/
    method: GET
- name: admin_users
  endpoint:
    path: /api/{website_id}/admin_users/
    method: GET
    data_selector: response
- name: channels
  endpoint:
    path: /channels/
    method: GET
- name: list_slots
  endpoint:
    path: /campaigns/
    method: GET
- name: categories
  endpoint:
    path: /api/{website_id}/categories/
    method: GET
    data_selector: ''
- name: track_click_through
  endpoint:
    path: /{website_id}/tc/
    method: POST
- name: channels
  endpoint:
    path: /api/{website_id}/channels/
    method: GET
- name: custom_data_tables
  endpoint:
    path: /custom_data_tables/list
    method: GET
- name: list_slots
  endpoint:
    path: /campaigns/
    method: GET
- name: validate_table_identifier
  endpoint:
    path: /custom_data_tables/check-id
    method: POST
- name: track_click_through
  endpoint:
    path: /tc/
    method: POST
- name: custom_data_table
  endpoint:
    path: /custom_data_tables/table/{tableId}
    method: GET
    data_selector: ''
- name: custom_data_tables
  endpoint:
    path: /custom_data_tables/list
    method: GET
- name: custom_data_table
  endpoint:
    path: /custom_data_tables/table/{tableId}/data
    method: GET
- name: validate_table_identifier
  endpoint:
    path: /custom_data_tables/check-id
    method: POST
- name: channels
  endpoint:
    path: /custom_data_tables/table/{tableId}/channels
    method: GET
- name: custom_data_table
  endpoint:
    path: /custom_data_tables/table/{tableId}
    method: GET
- name: custom_data_table
  endpoint:
    path: /custom_data_tables/table/{tableId}/data
    method: GET
- name: folders
  endpoint:
    path: /folders
    method: GET
    data_selector: folders
    params: {}
- name: channels
  endpoint:
    path: /api/{website_id}/custom_data_tables/table/{tableId}/channels
    method: GET
    data_selector: channels
- name: folder
  endpoint:
    path: /folders/{folder_id}
    method: GET
    data_selector: folder_details
- name: folders
  endpoint:
    path: /folders
    method: GET
    data_selector: folders
- name: folder
  endpoint:
    path: /folders/{folder_id}
    method: GET
    data_selector: response
- name: record_activity
  endpoint:
    path: /
    method: POST
    data_selector: ''
    params: {}
- name: record_activity
  endpoint:
    path: /record_activity
    method: POST
- name: list_layouts
  endpoint:
    path: /layouts/
    method: GET
- name: layouts
  endpoint:
    path: /layouts/
    method: GET
- name: bulk_update_layout
  endpoint:
    path: /api/{website_id}/layouts/{slugs}/bulk/
    method: POST
- name: bulk_update_layout
  endpoint:
    path: /api/{website_id}/layouts/{slugs}/bulk/
    method: POST
- name: list_people
  endpoint:
    path: /people/
    method: GET
- name: products
  endpoint:
    path: /api/api/{website_id}/products/
    method: GET
- name: people
  endpoint:
    path: /api/{website_id}/people/
    method: GET
- name: products
  endpoint:
    path: /api/api/{website_id}/products/
    method: GET
- name: product_history
  endpoint:
    path: /product_history/
    method: GET
    data_selector: records
- name: import_products
  endpoint:
    path: /products/import/
    method: POST
- name: product_analytics
  endpoint:
    path: /api/api/{website_id}/product_analytics/
    method: GET
- name: product_history
  endpoint:
    path: /product_history/
    method: GET
    data_selector: records
- name: mark_purchase_complete
  endpoint:
    path: /pc/{website_id}/
    method: GET
- name: daily_product_analytics
  endpoint:
    path: /product_analytics/
    method: GET
- name: campaigns
  endpoint:
    path: /campaigns/
    method: GET
- name: mark_purchase_complete
  endpoint:
    path: /pc/{website_id}/
    method: GET
    data_selector: ''
    params: {}
- name: conversions
  endpoint:
    path: /conversions/
    method: GET
- name: campaigns_summary
  endpoint:
    path: /campaigns/
    method: GET
- name: abandoned_carts
  endpoint:
    path: /abandoned/
    method: GET
- name: conversions
  endpoint:
    path: /conversions/
    method: GET
- name: messages_sent
  endpoint:
    path: /messages_sent/
    method: GET
- name: abandoned_carts
  endpoint:
    path: /abandoned/
    method: GET
    data_selector: ''
- name: messages_sent
  endpoint:
    path: /messages_sent/
    method: GET
- name: summary_report
  endpoint:
    path: /reports_summary/
    method: GET
- name: summary_report
  endpoint:
    path: /reports_summary/
    method: GET
- name: overview_report
  endpoint:
    path: /reports/item/overview/{type}/
    method: GET
- name: analytics_report
  endpoint:
    path: /reports/item/{type}/
    method: GET
- name: overview_report
  endpoint:
    path: /reports/item/overview/{type}/
    method: GET
- name: bulk_update_slots
  endpoint:
    path: /api/{website_id}/slots/{slugs}/bulk/
    method: POST
- name: analytics_report
  endpoint:
    path: /reports/item/{type}/
    method: GET
- name: smartblocks
  endpoint:
    path: /smartblocks/
    method: GET
- name: bulk_update_slots
  endpoint:
    path: /api/{website_id}/slots/{slugs}/bulk/
    method: POST
    data_selector: null
    params: {}
- name: Get SmartBlock
  endpoint:
    path: /smartblocks/{smartblock_slug}/
    method: GET
- name: smartblocks
  endpoint:
    path: /smartblocks/
    method: GET
    data_selector: SmartBlocks
- name: bulk_update_smartblocks
  endpoint:
    path: /api/{website_id}/smartblocks/{slugs}/bulk/
    method: POST
- name: smartblock
  endpoint:
    path: /smartblocks/{smartblock_slug}/
    method: GET
- name: program_triggers
  endpoint:
    path: /api/{website_id}/triggers/
    method: GET
- name: bulk_update_smartblocks
  endpoint:
    path: /api/{website_id}/smartblocks/{slugs}/bulk/
    method: POST
    data_selector: response
- name: program_triggers
  endpoint:
    path: /triggers/
    method: GET
- name: trigger_rules
  endpoint:
    path: /api/{website_id}/trigger_rules/
    method: GET
- name: trigger_rules
  endpoint:
    path: /trigger_rules/
    method: GET
- name: trigger_queue
  endpoint:
    path: /api/{website_id}/trigger_queue/
    method: GET
    data_selector: response
    params: {}
- name: list_trigger_queue
  endpoint:
    path: /trigger_queue/
    method: GET
notes:
- You must have your website ID from your Fresh Relevance account.
- Calls to the API are authorized by including a HTTP Header of `x-api-key`.
- Make sure you're using the correct regional API endpoint for your account
- 'If you attempt to use an API endpoint belonging to a different region, your requests
  return a 403 - Forbidden: Access is denied error.'
- Calls to the API are authorized by ensuring that a HTTP Header of x-api-key is included
  with the value of your API token.
- You must contact Support to arrange custom domain usage, and ensure that you have
  a technical contact who has the ability to alter your DNS records available.
- The tracking script must be added to all pages of your website or app.
- The script has been minified and is served from a content delivery network (CDN).
- Fresh Relevance content is blocked if the customer is viewing your website on an
  Apple Mobile device with IOS 17, and the Advanced Tracking and Fingerprinting Protection
  setting is enabled.
- Fresh Relevance content is blocked if the customer is viewing your website on an
  Apple Mobile device with IOS 17 and the *Advanced Tracking and Fingerprinting Protection*
  setting is enabled.
- Fresh Relevance content is blocked if the customer is viewing your website on an
  Apple Mobile device with IOS 17 and the Advanced Tracking and Fingerprinting Protection
  setting is enabled.
- Identifying more shoppers is important for real-time marketing effectiveness.
- Fresh Relevance reads the query string collection and store the values as person-level
  attributes.
- The W3C DDL extension adds the W3C Digital Data Layer without any additional work.
- The simplest way to personalize your website is to use the standard Fresh Relevance
  Site Editor.
- The API token must have read permission for content.
- You must URL encode the Current URL value
- JavaScript sends data to the Fresh Relevance server for each page visited.
- Ensure the purchase complete event is registered to avoid cart abandon emails.
- Can use RC4 or RSA encryption for sensitive data.
- In order to call the API you must have your account ID from your Fresh Relevance
  account.
- To find this, expand the User menu and copy the Account ID value.
- To ensure we scope the calls to the correct account/website you must pass your Account/Website
  ID in the path of each call to the API in the website_id parameter.
- In order to call the API you must have your Fresh Relevance Account ID.
- In order to call the API you must have your Account ID from your Fresh Relevance
  account.
- 'You must have an API token key for the type API with at least the following area
  access: Read access - content, Write access - content'
- API is served only by HTTPS using TLS 1.2 or higher for security.
- You must have an API token key for the type API with at least Read and Write access
  to content.
- You must have an API token key for the type API with at least read access to reports.
- To ensure we scope the calls to the correct account/website you must pass your Website
  ID in the path of each call to the API in the website_id parameter.
- The Fresh Relevance JavaScript API is included in the Fresh Relevance Tracking script
  and can be used to pass data and events from single page applications, without the
  need to rely on scraping or a data layer.
- In order to call the API you must have your Account ID from Fresh Relevance.
- The API is available at your Activity domain.
- To find this, expand the User menu, then go to Settings > System configuration >
  Custom domains and copy the domain from the Purchase Complete Domain field.
- You must have an API token key for the type API with at least read and write access.
- You must have an API token key for the type API with at least read and write access
  for system admin
- Ensure to pass your /Account/Website ID in the path of each call to the API in the
  website_id parameter
- Get data in JSON format.
- First page is indexed as 1.
- 'You must have an API token key for the type API with at least the following area
  access: Read access - system admin'
- 'You must have an API token key for the type API with at least the following area
  access: Read access + system admin'
- Supports personalization by including an identifier for the visitor in the query
  string parameters.
- You must have an API token key for the type API with at least read and write access
  to custom data tables.
- Retrieves a content folder's details in JSON format.
- You should call sendBeacon directly afterward, to ensure the data is sent to the
  Fresh Relevance server.
- The sendBeacon flag indicates whether you want the data recorded to be sent back
  to Fresh Relevance for processing.
- Your implementation may vary. If so, contact customer support and detail your expected
  data structure.
- You must have an API token key for the type Mobile with sufficient area access to
  meet your needs.
- Data errors within the JSON are not acknowledged on this endpoint, but are handled
  gracefully where possible.
- Hooks allow for automation during the personalization lifecycle.
- 'You must have an API token key for the type API with at least the following area
  access: Read access content, Write access content.'
- Calls to the API are authorized by ensuring that a HTTP Header of `x-api-key` is
  included with the value of your API token.
- Duplicates a layout.
- 'You must have an API token key for the type API with at least the following area
  access: Read access - system admin, Write access - system admin.'
- You must read Accessing the Products API to understand how to call the API successfully.
- The API requires OAuth2 authentication with refresh token.
- Categories and tags are overwritten when uploading new values.
- Searches products in Fresh Relevance based on your criteria.
- Categories and tags are overwritten
- Due to database constraints, there's a maximum limit value of 100,000 and results
  are sorted by `bq` (browsed quantity).
- Maximum request size is 5MB.
- Retrieves details of an individual SmartBlock
- In order to call the API you must have your website ID from your Fresh Relevance
  account.
- Defaults to returning 25 records per page.
- Retrieves limited details about Fresh Relevance admin users.
- The system uses next day attribution to collate this data.
errors:
- '403 - Forbidden: Access is denied'
- 401 Unauthorized
- 403 Forbidden - Usually you are requesting data for a website you don't have access
  to.
- '204: POST is successfully received and the JSON decoded.'
- '401 Unauthorized: Check your credentials and token.'
- '404 Not Found: Ensure the endpoint path is correct.'
- 403 Unauthorized / forbidden
- 400 An error occurred
- '400 Bad Request: Check required parameters and their values'
- '401 Unauthorized: Ensure authentication is valid'
auth_info:
  mentioned_objects: []
client:
  base_url: https://r1-api-freshrelevance.dotdigital.com
source_metadata: null
