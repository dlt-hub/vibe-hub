resources:
- name: api_keys
  endpoint:
    path: /v1/api_keys
    method: GET
    data_selector: keys
- name: organization
  endpoint:
    path: /api/v1/organizations
    method: GET
    data_selector: data
    params: {}
- name: security_activity
  endpoint:
    path: /umbrella-user-guide/docs/security-activity-report
    method: GET
- name: activity_search
  endpoint:
    path: /umbrella-user-guide/docs/activity-search-report
    method: GET
- name: app_discovery
  endpoint:
    path: /umbrella-user-guide/docs/app-discovery-report
    method: GET
- name: top_threats
  endpoint:
    path: /umbrella-user-guide/docs/threats
    method: GET
- name: total_requests
  endpoint:
    path: /umbrella-user-guide/docs/total-requests-report
    method: GET
- name: activity_volume
  endpoint:
    path: /umbrella-user-guide/docs/activity-volume-report
    method: GET
- name: top_destinations
  endpoint:
    path: /umbrella-user-guide/docs/top-destinations-report
    method: GET
- name: top_categories
  endpoint:
    path: /umbrella-user-guide/docs/top-categories-report
    method: GET
- name: top_identities
  endpoint:
    path: /umbrella-user-guide/docs/top-identities-report
    method: GET
- name: admin_audit_log
  endpoint:
    path: /umbrella-user-guide/docs/admin-audit-log-report
    method: GET
- name: third_party_apps
  endpoint:
    path: /umbrella-user-guide/docs/third-party-apps-report
    method: GET
- name: provision_identities
  endpoint:
    path: /deployment-umbrella/docs/provision-identities
    method: GET
    data_selector: records
- name: umbrella_chromebook_client
  endpoint:
    path: /deployment-umbrella/docs/cisco-umbrella-chromebook-client-deployment-guide
    method: GET
    data_selector: records
- name: network_tunnel
  endpoint:
    path: /api/v1/network_tunnel
    method: GET
    data_selector: records
- name: report
  endpoint:
    path: /reports
    method: GET
    data_selector: records
    params: {}
- name: Provision a Subnet for Your Virtual Appliance
  endpoint:
    path: /deployment-umbrella/docs/provision-a-subnet-for-your-virtual-appliance
    method: GET
    data_selector: records
    params: {}
- name: Manage Internal Networks
  endpoint:
    path: /deployment-umbrella/docs/manage-internal-networks
    method: GET
    data_selector: records
    params: {}
- name: Assign a Policy to Your Site
  endpoint:
    path: /deployment-umbrella/docs/assign-a-policy-to-your-site
    method: GET
    data_selector: records
    params: {}
- name: network_tunnel
  endpoint:
    path: /v1/tunnels
    method: GET
    data_selector: tunnels
- name: internal_networks
  endpoint:
    path: /manage-internal-networks
    method: GET
    data_selector: networks
- name: subnet_provisioning
  endpoint:
    path: /provision-a-subnet-for-your-virtual-appliance
    method: POST
    data_selector: subnet
- name: identities
  endpoint:
    path: /v1/identities
    method: GET
    data_selector: records
- name: dns_policies
  endpoint:
    path: /api/v1/dns-policies
    method: GET
    data_selector: records
    params: {}
- name: web_policies
  endpoint:
    path: /api/v1/web-policies
    method: GET
    data_selector: records
    params: {}
- name: api_keys
  endpoint:
    path: /admin/api_keys
    method: POST
- name: report
  endpoint:
    path: /reports
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: organizations
  endpoint:
    path: /v1/organizations
    method: GET
    data_selector: data
- name: reports
  endpoint:
    path: /v1/reports
    method: GET
    data_selector: data
- name: legacy_network_devices
  endpoint:
    path: /api/v1/legacy_network_devices
    method: POST
    data_selector: device
    params: {}
- name: network_tunnel
  endpoint:
    path: /tunnels
    method: GET
    data_selector: tunnels
    params: {}
- name: network_devices
  endpoint:
    path: /legacy-network-devices
    method: POST
    data_selector: data
    params: {}
- name: Umbrella DNS Integration
  endpoint:
    path: /deployment-umbrella/docs/set-up-umbrella-for-a-meraki-network
    method: GET
- name: network_tunnel
  endpoint:
    path: /api/v1/network_tunnels
    method: GET
    data_selector: tunnels
- name: dns_policy
  endpoint:
    path: /api/v1/dns_policies
    method: GET
    data_selector: policies
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api_keys
  endpoint:
    path: /Admin/APIKeys
    method: GET
- name: network_identity
  endpoint:
    path: /v1/network-identities
    method: GET
    data_selector: identities
- name: dns_policy
  endpoint:
    path: /v1/dns-policies
    method: GET
    data_selector: policies
- name: network_identities
  endpoint:
    path: /v1/identities
    method: GET
    data_selector: identities
- name: policies
  endpoint:
    path: /v1/policies
    method: GET
    data_selector: policies
- name: network_identity
  endpoint:
    path: /add-network-identity
    method: POST
    data_selector: identity
    params: {}
- name: dns_policy
  endpoint:
    path: /add-dns-policy
    method: POST
    data_selector: policy
    params: {}
- name: dns_settings
  endpoint:
    path: /api/v1/dns/settings
    method: POST
    data_selector: settings
    params: {}
- name: Source Set
  endpoint:
    path: /api/source_sets
    method: POST
    data_selector: data
- name: Organization ID
  endpoint:
    path: /api/organization_id
    method: GET
    data_selector: data
- name: dns_queries
  endpoint:
    path: /dns/queries
    method: GET
    data_selector: records
- name: block_pages
  endpoint:
    path: /block/pages
    method: GET
    data_selector: records
- name: network_identity
  endpoint:
    path: /v1/networks
    method: GET
    data_selector: data
    params: {}
- name: identities
  endpoint:
    path: /v1/identities
    method: GET
    data_selector: identities
    params: {}
- name: manage_domains
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: domains
    params: {}
- name: policies
  endpoint:
    path: /v1/policies
    method: GET
    data_selector: records
- name: domains
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: records
- name: policies
  endpoint:
    path: /v1/policies
    method: GET
    data_selector: data
    params: {}
- name: identities
  endpoint:
    path: /v1/identities
    method: GET
    data_selector: data
    params: {}
- name: policies
  endpoint:
    path: /v1/policies
    method: GET
    data_selector: records
- name: identities
  endpoint:
    path: /v1/identities
    method: GET
    data_selector: records
- name: policies
  endpoint:
    path: /v1/policies
    method: GET
    data_selector: records
- name: identities
  endpoint:
    path: /v1/identities
    method: GET
    data_selector: records
- name: organizations
  endpoint:
    path: /v1/organizations
    method: GET
    data_selector: records
    params: {}
- name: dns_queries
  endpoint:
    path: /v1/dns-queries
    method: GET
    data_selector: records
    params: {}
- name: security_setting
  endpoint:
    path: /services/data/vXX.X/sobjects/SecuritySetting
    method: GET
    data_selector: records
    params: {}
- name: identities
  endpoint:
    path: /v1/identities
    method: GET
    data_selector: identities
    params: {}
- name: domains
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: domains
    params: {}
- name: content_category
  endpoint:
    path: /content/categories
    method: GET
    data_selector: categories
- name: High Category Levels
  endpoint:
    path: /high-category-levels
    method: GET
    data_selector: categories
    params: {}
- name: Moderate Category Levels
  endpoint:
    path: /moderate-category-levels
    method: GET
    data_selector: categories
    params: {}
- name: Low Category Levels
  endpoint:
    path: /low-category-levels
    method: GET
    data_selector: categories
    params: {}
- name: Custom Category Levels
  endpoint:
    path: /custom-category-levels
    method: GET
    data_selector: categories
    params: {}
- name: content_categories
  endpoint:
    path: /content/categories
    method: GET
    data_selector: categories
- name: application_settings
  endpoint:
    path: /application/settings
    method: GET
    data_selector: settings
    params: {}
- name: identity_management
  endpoint:
    path: /identity/manage
    method: GET
    data_selector: identities
    params: {}
- name: destination_list
  endpoint:
    path: /destination-lists
    method: GET
    data_selector: data
    params: {}
- name: destination_list
  endpoint:
    path: /v1/destination_lists
    method: GET
    data_selector: data
    params: {}
- name: destination_list
  endpoint:
    path: /v1/destination_lists
    method: GET
    data_selector: records
- name: destination_list
  endpoint:
    path: /v1/destination_lists
    method: GET
    data_selector: records
- name: destination_list
  endpoint:
    path: /api/v1/destination_lists
    method: POST
    data_selector: data
    params: {}
- name: destination_list
  endpoint:
    path: /v1/destination_lists
    method: GET
    data_selector: results
- name: policies
  endpoint:
    path: /v1/policies
    method: GET
    data_selector: results
- name: destination_list
  endpoint:
    path: /api/v1/destination_lists
    method: GET
    data_selector: records
- name: Manage Domains
  endpoint:
    path: /umbrella-dns-gov/docs/manage-domains
    method: GET
    data_selector: domains
    params: {}
- name: Manage Policies
  endpoint:
    path: /umbrella-dns-gov/docs/manage-policies
    method: GET
    data_selector: policies
    params: {}
- name: identities
  endpoint:
    path: /v1/identities
    method: GET
    data_selector: data
- name: domains
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: data
- name: block_page
  endpoint:
    path: /v1/blockpage
    method: GET
    data_selector: data
    params: {}
- name: Manage User Roles
  endpoint:
    path: /manage-user-roles
    method: GET
- name: Manage Accounts
  endpoint:
    path: /manage-accounts
    method: GET
- name: Manage API Keys
  endpoint:
    path: /manage-api-keys
    method: GET
- name: api_keys
  endpoint:
    path: /api/v1/keys
    method: GET
- name: Upgrade Reports
  endpoint:
    path: /upgrade/reports
    method: GET
    data_selector: records
- name: identity
  endpoint:
    path: /v1/identities
    method: GET
    data_selector: identities
    params: {}
- name: domain
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: domains
    params: {}
- name: DLP Log
  endpoint:
    path: /dlp/logs
    method: GET
    data_selector: logs
- name: Activity Search Log
  endpoint:
    path: /activity/search/logs
    method: GET
    data_selector: logs
- name: Top Categories Log
  endpoint:
    path: /top/categories/logs
    method: GET
    data_selector: logs
- name: Top Destinations Log
  endpoint:
    path: /top/destinations/logs
    method: GET
    data_selector: logs
- name: Top Identities Log
  endpoint:
    path: /top/identities/logs
    method: GET
    data_selector: logs
- name: identities
  endpoint:
    path: /v1/identities
    method: GET
    data_selector: identities
- name: domains
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: domains
- name: network_identity
  endpoint:
    path: /v1/networks
    method: GET
    data_selector: data
    params: {}
- name: domain_management
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: data
    params: {}
- name: SAML Configuration
  endpoint:
    path: /deployments/configuration/saml
    method: POST
    data_selector: samlConfigurations
- name: SAML Configuration
  endpoint:
    path: /deployments/configuration/saml
    method: POST
- name: duo_security
  endpoint:
    path: /configure/duo-security
    method: GET
    data_selector: records
- name: SAML Configuration
  endpoint:
    path: /Deployments/Configuration/SAML
    method: POST
    data_selector: configuration
    params: {}
- name: identities
  endpoint:
    path: /identities
    method: GET
    data_selector: records
    params: {}
- name: domains
  endpoint:
    path: /domains
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /v1/users
    method: GET
    data_selector: records
    params: {}
- name: groups
  endpoint:
    path: /v1/groups
    method: GET
    data_selector: records
    params: {}
- name: identities
  endpoint:
    path: /v1/identities
    method: GET
    data_selector: records
- name: domains
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: records
- name: manual_import
  endpoint:
    path: /deployments/core_identities/users_and_groups/manual_import
    method: POST
    data_selector: uploaded_data
- name: users
  endpoint:
    path: /api/v1/users
    method: POST
    data_selector: users
    params: {}
- name: groups
  endpoint:
    path: /api/v1/groups
    method: POST
    data_selector: groups
    params: {}
- name: identities
  endpoint:
    path: /v1/identities
    method: GET
    data_selector: identities
- name: domains
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: domains
- name: report_data
  endpoint:
    path: /services/data/vXX.X/exports/report_data
    method: GET
    data_selector: records
- name: scheduled_report
  endpoint:
    path: /reports/schedule
    method: POST
    data_selector: report_data
- name: Security Activity Report
  endpoint:
    path: /security-activity-report
    method: GET
- name: App Discovery Report
  endpoint:
    path: /umbrella-dns-gov/docs/app-discovery
    method: GET
- name: block_apps
  endpoint:
    path: /block_apps
    method: GET
    data_selector: records
- name: Top Threats Report
  endpoint:
    path: /umbrella-dns-gov/docs/threats
    method: GET
    data_selector: records
- name: threat_types
  endpoint:
    path: /v1/threat_types
    method: GET
    data_selector: types
    params: {}
- name: total_requests_report
  endpoint:
    path: /reports/total-requests
    method: GET
    data_selector: data
    params: {}
- name: activity_volume_report
  endpoint:
    path: /activity/volume
    method: GET
    data_selector: data
    params: {}
- name: top_categories_report
  endpoint:
    path: /reports/top-categories
    method: GET
    data_selector: records
    params: {}
- name: top_identities
  endpoint:
    path: /top_identities
    method: GET
    data_selector: identities
- name: identities
  endpoint:
    path: /v1/identities
    method: GET
    data_selector: records
    params: {}
- name: network_identities
  endpoint:
    path: /v1/networks
    method: GET
    data_selector: records
    params: {}
- name: domains
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: records
    params: {}
- name: network_identity
  endpoint:
    path: /api/v1/network-identities
    method: GET
    data_selector: identities
    params: {}
- name: domain_management
  endpoint:
    path: /api/v1/domains
    method: GET
    data_selector: domains
    params: {}
- name: identity
  endpoint:
    path: /v1/identities
    method: GET
    data_selector: identities
- name: domain
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: domains
- name: identities
  endpoint:
    path: /v1/identities
    method: GET
    data_selector: identities
    params: {}
- name: domains
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: domains
    params: {}
- name: OrgInfo.json
  endpoint:
    path: /data
    method: GET
    data_selector: parameters
    params: {}
- name: identity
  endpoint:
    path: /v1/identities
    method: GET
    data_selector: identities
- name: reports
  endpoint:
    path: /v1/reports
    method: GET
    data_selector: reports
- name: domains
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: domains
    params: {}
- name: policies
  endpoint:
    path: /v1/policies
    method: GET
    data_selector: policies
    params: {}
- name: protected_networks
  endpoint:
    path: /v1/protected_networks
    method: GET
    data_selector: data
- name: KeyAdmin
  endpoint:
    path: /api/keys
    method: POST
    data_selector: key
    params: {}
- name: network_identities
  endpoint:
    path: /v1/network_identities
    method: GET
    data_selector: identities
    params: {}
- name: domains
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: domains
    params: {}
- name: Manage Sites
  endpoint:
    path: /manage/sites
    method: GET
- name: Manage Identities
  endpoint:
    path: /manage/identities
    method: GET
- name: Manage Domains
  endpoint:
    path: /manage/domains
    method: GET
- name: Manage Policies
  endpoint:
    path: /manage/policies
    method: GET
- name: Manage Security Settings
  endpoint:
    path: /manage/security-settings
    method: GET
- name: Manage Content Categories
  endpoint:
    path: /manage/content-categories
    method: GET
- name: Manage Application Settings
  endpoint:
    path: /manage/application-settings
    method: GET
- name: Manage Destination Lists
  endpoint:
    path: /manage/destination-lists
    method: GET
- name: Manage Accounts
  endpoint:
    path: /manage/accounts
    method: GET
- name: Manage User Roles
  endpoint:
    path: /manage/user-roles
    method: GET
- name: Manage API Keys
  endpoint:
    path: /manage/api-keys
    method: GET
- name: Manage Your Logs
  endpoint:
    path: /manage/logs
    method: GET
- name: Manage Authentication
  endpoint:
    path: /manage/authentication
    method: GET
- name: Manage Identities
  endpoint:
    path: /umbrella-dns-gov/docs/manage-identities
    method: GET
- name: Manage Policies
  endpoint:
    path: /umbrella-dns-gov/docs/manage-policies
    method: GET
- name: organizations
  endpoint:
    path: /v1/organizations
    method: GET
    data_selector: data
    params: {}
- name: network_identity
  endpoint:
    path: /api/v1/network_identities
    method: GET
    data_selector: records
    params: {}
- name: domain_management
  endpoint:
    path: /api/v1/domains
    method: GET
    data_selector: records
    params: {}
- name: AnyConnect App
  endpoint:
    path: /umbrella-dns-gov/docs/add-app-to-cisco-meraki
    method: POST
    data_selector: app_data
    params: {}
- name: Device Configuration
  endpoint:
    path: /umbrella-dns-gov/docs/add-configuration-for-app
    method: POST
    data_selector: config_data
    params: {}
- name: network_identity
  endpoint:
    path: /v1/identities
    method: GET
    data_selector: identities
- name: domain_management
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: domains
- name: identity
  endpoint:
    path: /v1/identities
    method: GET
    data_selector: identities
    params: {}
- name: domain
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: domains
    params: {}
- name: policy
  endpoint:
    path: /v1/policies
    method: GET
    data_selector: policies
    params: {}
- name: device_data
  endpoint:
    path: /device/data
    method: GET
    data_selector: records
- name: reporting
  endpoint:
    path: /v1/reporting
    method: GET
    data_selector: data
    params: {}
- name: DoH Template
  endpoint:
    path: /identity/v1/20292:4f444e53010000099997f7e840002147
    method: GET
    data_selector: dns-query
    params: {}
- name: device_data
  endpoint:
    path: /export/device/data
    method: GET
- name: protection_status
  endpoint:
    path: /v1/protection/status
    method: GET
    data_selector: records
    params: {}
- name: Cisco Umbrella account
  endpoint:
    path: /devices.api.umbrellagov.com
    method: GET
- name: Registration and validation
  endpoint:
    path: /gateway.id.swg.umbrellagov.com
    method: GET
- name: identity
  endpoint:
    path: /v1/identities
    method: GET
    data_selector: data
    params: {}
- name: domain
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: data
    params: {}
- name: Mobile Device Settings
  endpoint:
    path: /Deployments/CoreIdentities/MobileDevices/Settings
    method: POST
    data_selector: settings
    params: {}
- name: Manage Mobile Devices
  endpoint:
    path: /Deployments/CoreIdentities/MobileDevices/Manage
    method: GET
    data_selector: managedDevices
    params: {}
- name: network_identity
  endpoint:
    path: /v1/networks
    method: GET
    data_selector: records
    params: {}
- name: domain_management
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: records
    params: {}
- name: Manage Identities
  endpoint:
    path: /umbrella-dns-gov/docs/manage-identities
    method: GET
    data_selector: records
- name: Manage Domains
  endpoint:
    path: /umbrella-dns-gov/docs/manage-domains
    method: GET
    data_selector: records
- name: Manage Policies
  endpoint:
    path: /umbrella-dns-gov/docs/manage-policies
    method: GET
    data_selector: records
- name: policies
  endpoint:
    path: /v1/policies
    method: GET
    data_selector: policies
    params: {}
- name: identities
  endpoint:
    path: /v1/identities
    method: GET
    data_selector: identities
    params: {}
- name: reports
  endpoint:
    path: /api/v1/reports
    method: GET
    data_selector: records
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: records
    params: {}
- name: user_identity
  endpoint:
    path: /user_identity
    method: POST
    data_selector: result
    params: {}
- name: device_data
  endpoint:
    path: /export/device/data
    method: GET
    data_selector: records
notes:
- API requires authentication via OAuth2
- Ensure the client ID and secret are set in the environment
- You must have Full Admin access to create and manage KeyAdmin API keys.
- The Umbrella roaming client is a lightweight DNS client that runs on Windows or
  macOS.
- Requires setup of connected app in Cisco Umbrella
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Your iOS mobile device must be managed by a MDM system.
- Remote Browser Isolation (RBI), which protects users by redirecting browsing to
  a cloud-based host, is not supported on mobile devices running iOS or Android.
- Direct access to the IPv4 IP addresses 208.67.222.222 or 208.67.220.220 is required
  for IPv4 DNS protection on ports 53 and 443.
- Direct access to the IPv6 IP addresses 2620:119:35::35 or 2620:119:53::53, or access
  to IPv4 addresses on ports 53 and 443 through NAT64/DNS64 translation is required
  for IPv6 DNS protection.
- The device must be able to communicate with registration.polaris.qq.opendns.com
  for registration and validation purposes at least once a day—when actively used—otherwise,
  the device cannot be protected.
- A mobile device management system (MDM) is required to deploy this client to mobile
  devices and to push the Umbrella configuration to the mobile devices.
- The Umbrella Chromebook client operates as a Chrome extension and performs filtering
  of web browser traffic only. The Umbrella Chromebook client does not filter DNS
  traffic from non-browser apps.
- If you have deployed the Cisco Umbrella Chromebook client, Block or Uninstall the
  Umbrella Chromebook App and Extension before you deploy the Cisco Security for Chromebook
  client.
- Uses OAuth2 with refresh token — requires setup of connected app in Cisco Umbrella
- Some objects may return nulls in deeply nested fields
- No client-side software required. No OS image to reconfigure.
- Umbrella is a cloud security platform that is built into the foundation of the internet
  and blocks requests to malicious or unwanted destinations before a connection is
  established.
- MSPs can purchase a number of seats to allocate and reallocate them to customers
  as best fits their business needs.
- The license is typically blended into a managed service provided by the MSP, it's
  owned by the MSP and not the customer.
- Umbrella trial period is of 30 days, which you can renew only one time for 14 days.
- Uses OAuth2 with refresh token.
- Ensure to set up the connected app in Cisco Umbrella.
- API Keys are used for authentication to the Console Reporting API.
- Bypass Firepower Module for Umbrella Traffic
- There is not a built-in option to maintain an internal domains list. Instead, you
  can create a policy to bypass SSIDs from Umbrella.
- Routers must be running firmware version 1.0.02.16 or later.
- You have only one opportunity to copy your Secret. Umbrella does not save it and
  it cannot be retrieved after its initial creation.
- Uses OAuth2 with refresh token — requires setup of connected app in Umbrella
- The Umbrella Wireless LAN Controller interface refers to Cisco Umbrella as OpenDNS.
- The Wireless LAN Controller requires AireOS 8.4 or newer to support Cisco Umbrella
  WLAN.
- Full admin access to the Umbrella dashboard is required.
- API requires authentication via OAuth2.
- The API token is a alphanumeric set of characters.
- A client connected to a web proxy that does not send a DNS query to resolve the
  server address is not subject to the Umbrella policy framework.
- An application or host that directly uses an IP address instead of a DNS to query
  domains is not enforced with an Umbrella security policy.
- Automatic policy assignment based on VPN name - Cisco Catalyst SD-WAN (Viptela)
  VPNs, represented by network devices in the Umbrella dashboard, is automatically
  placed in an Umbrella policy if the Cisco Catalyst SD-WAN (Viptela) VPN name matches
  the name of an existing Umbrella policy. Otherwise, all Cisco Catalyst SD-WAN (Viptela)
  VPNs are covered by the Umbrella default policy unless they are manually added to
  another policy. Policy assignment can be done in the UI or via API.
- This feature requires the MR26.1+ firmware version.
- Ensure to handle rate limits appropriately.
- The integration for the ISR 1100 is exactly the same as with the 4000 series and
  should be followed according to the steps for the 4000 series.
- The ISR 4K and ISR 1100 integration with Umbrella requires the Legacy Network Devices
  API token.
- Some objects like Contact may return nulls in deeply nested fields
- Full Admin access to the Umbrella dashboard is required.
- The Cisco Catalyst 9200 or Catalyst 9300 switch acts as a DNS forwarder, transparently
  intercepts DNS traffic, and forwards the DNS queries to the Cisco Umbrella cloud.
- User Principal Name of end-users should not contain non-English characters.
- The Cisco Catalyst 9200 or Catalyst 9300 switch must have a DNA Advantage or higher
  license to enable Umbrella.
- A valid Cisco Umbrella subscription license is required.
- Rollback of Umbrella configuration is not supported.
- Requires OAuth2 setup for API access
- Rate limiting may apply to API requests
- Ensure the API key has the necessary permissions.
- Use the approved file-sharing site to share files containing sensitive data with
  the Customer Support Team.
- Do not share sensitive or personally identifiable information (PII) within the ticketing
  system.
- Cisco works in good faith with customers to resolve any excessive usage. If usage
  cannot be sufficiently reduced by a customer, it may become necessary to purchase
  additional Covered Users in order to reduce bandwidth or query limits to acceptable
  levels.
- Umbrella supports both IPv4 and IPv6 addresses.
- The first report may take up to one hour to appear.
- Only use Cisco Umbrella for Government servers and do not include any other DNS
  servers.
- When you make changes to DNS, you may have cached results that affect service.
- Umbrella DNS policies are applied to all inbound DNS queries.
- Customer DNS activity that has been blocked or allowed by Umbrella will appear in
  the Umbrella UI.
- Cisco Umbrella DNS Security packages are subject to a Monthly DNS Query Average
  limit of up to 5,000 DNS queries per Covered User per day.
- A destination list comment string must be no longer than 256 characters.
- No more than 2000 internal domains may be deployed.
- No more than 5000 internal domains may be deployed.
- No more than 5000 external domains or IPs can be deployed.
- Tags must be less than 40 characters.
- With default logging enabled, Umbrella logs all destination requests for an identity.
- Umbrella only integrates single sign on (SSO) to the dashboard.
- A file must be less than 50 MB.
- Compressed file scanning supports no more than 16 levels of recursion.
- Dynamic IP addresses are only supported for IPv4.
- Requires setup of connected app in Umbrella
- Rate limits apply to API calls
- Some endpoints may have rate limits
- Umbrella does not support the following format of domains in domains lists
- Umbrella does not support asterisks (*) in domains list entries
- OAuth2 authentication is required for all API calls.
- Some API responses may contain rate limiting details
- Some endpoints may have rate limits.
- Ensure to handle OAuth tokens securely.
- If you enabled App Control for Google apps, SafeSearch no longer functions.
- OAuth2 authentication is required to access the API
- Rate limits apply to API requests
- Ensure proper authentication setup to access the API
- Check for API limits and usage guidelines
- Some responses may vary based on account permissions
- Some endpoints may require specific permissions to access.
- Requires OAuth2 authentication setup
- API usage may be subject to rate limits
- Some features may require additional permissions.
- Requires setup of connected app in API
- URLs in allow lists are not currently supported. Consider adding the domain only
  instead.
- 'Umbrella requires that URLs follow RFC-3986 Uniform Resource Identifier (URI):
  Generic Syntax.'
- Refer to the guides for detailed setup instructions.
- Requires setup of Group Policy for deployment on Active Directory.
- API supports OAuth2 for authentication
- You must be a local administrator over the computer or a network administrator over
  the network.
- Use a version of OpenSSL v1.0 or greater to extract the root bundle.
- A root certificate is required when Umbrella proxies and decrypts HTTPS traffic
  intended for a website.
- The Umbrella trusted root certificate information is stored in the Cisco Trusted
  Union Root bundle.
- Ensure API keys are properly configured in the dashboard.
- Full admin access to the Umbrella dashboard is required to add accounts.
- You cannot enable or disable de-identification on your own account. At least two
  administrators are required to use this feature in the dashboard and any administrator
  can turn it on or off for another account.
- You must have Full Admin access to create and manage Umbrella API keys.
- Some features may require additional setup.
- Logs are CSV formatted, compressed (gzip), and saved every ten minutes.
- The provided S3 bucket must be within the AWS GovCloud regions.
- Enable Logging to Your Own S3 Bucket
- Some API responses may include nulls for optional fields
- Logs are not always chronological and will not always be in the specific time bucket
  based on the timestamp of the log event.
- You need a mobile phone that can receive SMS messages, or use an authenticator app.
- We recommend using the Duo Authenticator App.
- API may have rate limits
- SSO for Umbrella is only tied to authentication to the dashboard.
- Requires setup of connected app in api
- Enable SSO with Okta
- All users must have access to the OpenDNS application or they will not be able to
  log in.
- Some API features may require additional permissions.
- User identity attribution can be configured using Active Directory, Azure AD, or
  Okta.
- 'Ensure that your IDP URL is bypassed from SAML authentication, which can be achieved
  in 2 ways: bypassing from Umbrella using external domains or bypassing decryption
  by adding to the Selective Decryption list. This will avoid an otherwise authentication
  loop.'
- Your IdP must send the Cisco Umbrella User Principle Name in the NameID attribute
  in the SAML assertion.
- Do not use the Cisco Umbrella application within Okta.
- You must configure Umbrella as a generic SAML 2.0 application within Okta.
- 'Duo Security for SAML configuration can be authenticated in one of the following
  ways: Upload the identity provider''s (IdP) metadata file or Manually configure
  IdP fields.'
- Ensure that your IDP Endpoint—the URL used to communicate with your identity provider—bypasses
  the Umbrella proxy to avoid an authentication loop.
- Requires setup of connected app in Umbrella.
- Ensure that your IDP Endpoint bypasses the Umbrella proxy to avoid an authentication
  loop.
- id.swg.umbrellagov.com must be sent to Umbrella and not sent directly to the internet.
- SAML metadata must have a signing key.
- If you are using an on-premises identity provider (IdP) such as ADFS, ensure that
  traffic to the IdP bypasses the proxy to avoid an authentication loop.
- Configure SAML with your identity provider (IdP) that supports SAML 2.0 POST profiles.
- Download your IdP's metadata file in XML format.
- Enable cookies for your browser.
- Enable SAML and HTTPS inspection on a Ruleset that includes the Network from which
  the user traffic arrives.
- OAuth2 with refresh token required.
- Ensure API keys are managed properly.
- Requires OAuth2 authentication with refresh token support
- Ensure correct API key and token permissions
- The Connector does an initial synchronization of the AD structure to Umbrella. After
  this, it detects changes to the AD structure and communicate these changes only.
- Requires setup of OAuth2 for API access
- Changing the password ensures that the connector can connect to AD using the new
  credentials. Failure to change the connector account password results in the connector
  being unable to subscribe to login events and AD changes.
- The connector retrieves the AD users, groups, and computer details only.
- Passwords or password hashes are not retrieved.
- The connector sends the AD data every 5-7 minutes if there are changes.
- You do not need to deploy an on-premises Umbrella Active Directory Connector.
- Azure AD does not store the private IP to AD user mappings.
- A maximum of 200 groups can be provisioned from Okta to Cisco Umbrella.
- Okta does not support nested groups.
- Umbrella does not support installing the Active Directory connector on non-GUI-based
  Windows servers like Windows Server Core.
- Do not use this feature with any user accounts you wish to have the login events
  recorded for, or accounts whose activity you wish to see in the reporting and that
  should have policy applied to it.
- If a local anti-virus application is running, Allow List the OpenDNSAuditClient.exe
  and OpenDNSAuditService.exe processes.
- The configuration script is written in Visual Basic Script and is human readable.
- API rate limits apply
- Only one connector is required per Umbrella site, with an optional second connector
  for redundancy if required.
- If Selective Sync is enabled, AD Users and Computers that are not members of Groups
  specified in CiscoUmbrellaADGroups.dat or their sub-groups will not be synchronized
  to Umbrella and will be completely exempt from Umbrella Policies and Reporting.
- Ensure that there are at least two VAs, one AD server and one AD connector assigned
  to each site.
- Passwords must not include backslashes, quotations (single or double), greater-than
  or less-than chevron brackets (< >), or colons.
- By default, the connector sends information, including IP to username mappings,
  to the VA in unencrypted form.
- The timezone of exported data is always the timezone selected for your account.
- Data is limited to a maximum of 1,000,000 rows.
- Some API calls may have rate limits
- Scheduled reports are limited to 10,000 rows.
- Uses OAuth2 for authentication.
- Uses OAuth2 with refresh token
- Requires setup of OAuth2 authentication.
- Ensure API keys are correctly configured in the Umbrella dashboard.
- Ensure OAuth2 tokens are correctly configured.
- API requires setup of connected app in Cisco Umbrella
- Ensure proper API key permissions are set.
- Requires setup of API keys in the Umbrella console
- Ensure API keys are set up correctly.
- The client activates the Umbrella module once installed and OrgInfo.json is present
  in the Umbrella directory.
- When you deploy the OrgInfo.json file for the first time, it is copied to the data
  subdirectory (/umbrella/data), where several other registration files are also created.
- Cisco Secure Client deployment packages support several MSI properties that you
  can change during installation.
- The Umbrella Roaming Security Module requires a .NET framework (4.6.2+ at the minimum).
- Be aware of request limits and error handling
- Administrative permissions on the macOS device are required.
- An MDM is required to approve the Cisco Secure Client system extension.
- Cisco currently supports Native Binding, NoMaD branded implementations, and Enterprise
  Connect.
- API requires authentication to access data.
- Ensure that you handle rate limits appropriately.
- Traffic Forwarding on Umbrella Protected Networks disables DNS redirection while
  on an Umbrella Protected Network.
- Some API endpoints may have rate limits.
- Two VA are required for high availability.
- VAs must always be deployed in pairs.
- Uses OAuth2 for authentication
- Ensure proper configuration for API keys.
- Some API calls may have rate limits.
- Umbrella VAs cannot be cloned. Ensure that your second VA is set up manually. Umbrella
  will not recognize a cloned VA.
- API requires OAuth2 authentication with client credentials.
- Endpoint responses may vary based on user permissions.
- The virtual appliances must be the only servers listed as DNS servers. Using a mixture
  of VAs and other types of DNS servers is not supported.
- The Umbrella VA supports the querying of the system OIDs (1.3.6.1.2.1.1.1 to 1.3.6.1.2.1.1.7).
- Using the numbers lock or the number pad on your keyboard may return incorrect characters.
- Configuration mode does not support concurrent access by more than two users.
- Disabling both authentication modes cannot be done.
- OAuth2 is required for accessing the API
- The app download may fail in the Google Play store after enabling the Cisco Secure
  Client with Umbrella module.
- Some features may not work correctly on Huawei devices.
- Some endpoints may require specific permissions.
- Once the configuration is done and pushed to the device, the user will be prompted
  with a SAML pop-up window to authenticate based on the integrated IDP.
- This process needs to be done only once.
- Requires setup of API keys in the Umbrella dashboard
- Uses VPN-like mechanism to intercept DNS queries
- Best effort to automatically detect internal sites
- You must have Umbrella login credentials.
- To push the Cisco Security for Chromebook client to all the Chromebook devices,
  you need a Google Workspace Admin account.
- Cisco recommends that you sync Google Workspace Identities with Umbrella to apply
  Google Workspace user and organizational unit based policies.
- Chrome OS 110 or later is required to enable DoH-based DNS layer protection on Chromebooks.
- Chromebooks must not be in Kiosk mode.
- For DNS layer protection, Port 53 UDP and 443 TCP must be allowed.
- Chromebooks must be connected and logged in.
- Install Cisco Umbrella root certificate on your Chromebooks to avoid certificate
  errors when accessing an Umbrella block page.
- In the Google Workspace Admin console, you must disallow the incognito window.
- Google Workspace identities-based policy and enforcement is supported only on Chromebooks
  with Cisco Security for Chromebook client.
- Google Organizational Unit (OU) and User information updates can take up to 60 mins
  to appear in the Cisco Umbrella dashboard.
- Customers of Cisco Security for Chromebook client, who are onboarding with the Google
  Workspace identity service for more than 250K identities must create a support case
  at umbrella-support-us@cisco.com.
- A support case is not required for existing Google Workspace users.
- Google Workspace Groups cannot be imported to Umbrella. Only Google Workspace Users
  and OUs can be imported.
- The Salt value cannot be changed once it is saved and confirmed. You will need to
  raise a support ticket with Umbrella to change the Salt value.
- Applying the new template with the 'DEVICE_IP_ADDRESSES' variable to Chromebooks
  running an OS version earlier than 126 will result in DoH resolution failure. This
  failure can lead to a potential loss of internet connectivity and DNS protection.
  Therefore, ensure that all Chromebooks are updated to ChromeOS 126 or later before
  implementing this feature to avoid these issues.
- Ensure that your Chromebooks are configured with a Managed Network as the 'DEVICE_IP_ADDRESSES'
  variable is supported only for Managed Networks.
- We recommend that you test enabling reporting for Private IP Address of Chromebook
  with a separate test OU before deployment.
- Ensure proper authentication setup before accessing the API.
- The Cisco Security for Chromebook client is designed specifically for Chrome OS
  and does not function with other operating systems.
- Extensions are unlisted on the Chrome store and manual installation on chrome browser
  will break functionality.
- Google Admin console Organizational Units and User information updates can take
  up to 60 minutes to appear in Umbrella.
- You can only use Google Workspace identities with the Cisco Umbrella Unified Chromebook
  client.
- iOS device must be managed by a Mobile Device Manager (MDM) system
- Remote Browser Isolation (RBI) is not supported on mobile devices running iOS or
  Android
- Use an MDM to provision your mobile device with Umbrella.
- You must log into your Umbrella dashboard as an administrator.
- You must first configure your MobiConnect MDM system.
- If successful, your mobile device registers with Umbrella and is listed at Deployments
  > Core Identities > Mobile Devices.
- Ensure proper scopes are granted for API access.
- API key management is essential for security
- Some reports may have limits on data retention
- The Cisco Security Connector does not have direct access to user information on
  an iOS device, but can read the user identity information from an MDM or EMM.
- By default, iOS will appropriately prioritize DNS to the expected interface.
- In some cases you may need to inform iOS of the desired target interface.
errors:
- '401 Unauthorized: Check your API key and authentication method'
- '403 Forbidden: You do not have permission to access this resource'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check your credentials.'
- '403 Forbidden: Insufficient permissions.'
- '404 Not Found: Verify the endpoint.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '403 Forbidden: Check if the API token is correctly configured.'
- '404 Not Found: Ensure the endpoint path is correct.'
- '500 Internal Server Error: Retry the request later.'
- '401 Unauthorized: Check if the token is valid.'
- '403 Forbidden: Ensure you have the necessary permissions.'
- '400 Bad Request: Check API token and request format.'
- '401 Unauthorized: Ensure correct API token is used.'
- '403 Forbidden: Verify permissions for the requested resource.'
- '429 Too Many Requests: Rate limit exceeded.'
- 'INVALID_CREDENTIALS: Check client ID and secret'
- 'ACCESS_DENIED: Ensure proper permissions are granted'
- '401 Unauthorized: Check your API key and permissions.'
- '404 Not Found: Ensure the endpoint is correct.'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Ensure you have the necessary permissions'
- 'Network already exists: create a support case at umbrella-support-us@cisco.com'
- '401 Unauthorized: Invalid credentials or token expired.'
- '404 Not Found: Check the endpoint path.'
- '403 Forbidden: Check permissions and scope'
- '429 Too Many Requests: Rate limit exceeded'
- '500 Internal Server Error: Retry after some time'
- '401 Unauthorized: Verify API key and permissions'
- '403 Forbidden: You do not have access to this resource.'
- 'INVALID_REQUEST: Check parameters in your request'
- 'UNAUTHORIZED: Ensure correct authentication credentials'
- 'FORBIDDEN: You do not have access to this resource'
- '400 Bad Request: Check the request payload for errors.'
- '401 Unauthorized: Verify the authentication details and token.'
- '403 Forbidden: Check permissions for the API key'
- '404 Not Found: Ensure the endpoint is correct'
- '500 Internal Server Error: Retry the request'
- '403 Forbidden: Check your permissions for this API'
- '401 Unauthorized: Check your credentials'
- '404 Not Found: The requested resource could not be found'
- Invalid Domain, Invalid URL, Invalid IP
- Please check to confirm that the URL was entered correctly.
- CIDR is too large! The network mask must not be less than **/8** (32 million IP
  addresses) which is the minimum number of bits allowed.
- '401 Unauthorized: Check your API key or OAuth token'
- '403 Forbidden: Ensure you have the right permissions'
- '404 Not Found: Endpoint may not exist'
- '403 Forbidden: Check your API key and permissions.'
- '404 Not Found: Verify endpoint URL.'
- '500 Internal Server Error: Try again later.'
- '401 Unauthorized: Recheck API keys or token expiration'
- '401 Unauthorized: Check OAuth token or scopes'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: Resource does not exist'
- 'Unable to authenticate: Check your IdP configuration.'
- 'Invalid metadata: Ensure the XML file is correctly formatted.'
- '401 Unauthorized: Check API key and permissions.'
- '404 Not Found: Verify endpoint path'
- If the connector does not appear in the dashboard and port 443 is confirmed to be
  open, the connector server may be missing the DigiCert CA.
- '401 Unauthorized: Check your client credentials'
- '403 Forbidden: Insufficient permissions for the requested operation'
- If you experience any issues when communicating with Umbrella, check for any Layer-7
  application proxies that might be blocking or dropping some data.
- '400 Bad Request: Check the request parameters and payload format.'
- '401 Unauthorized: Verify API token and access permissions.'
- '"ERROR: "'
- Your Group Policy for this Domain Controller is set to NOT audit successful logon
  events!
- '401 Unauthorized: Check client credentials'
- If you encounter any issues communicating with Umbrella, we recommend checking for
  any Layer-7 application proxies that might be blocking/dropping some data.
- '401 Unauthorized: Verify OAuth token and scopes.'
- '403 Forbidden: Check API permissions.'
- '401 Unauthorized: Check your API key and OAuth tokens.'
- 'INVALID_API_KEY: Check API key validity'
- 'RATE_LIMIT_EXCEEDED: Reduce request frequency'
- '401 Unauthorized: Check API key or token'
- '401 Unauthorized: Check credentials and permissions.'
- '404 Not Found: Ensure the endpoint URL is correct.'
- If you see a blank authentication window, the IdP may not be reachable or the root
  certificate may not be properly installed.
- '404 Not Found: Verify the endpoint URL.'
- '404 Not Found: Resource does not exist or incorrect endpoint.'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify authentication credentials.'
- '401 Unauthorized: Ensure valid credentials and access rights.'
- '404 Not Found: Verify the endpoint path and parameters.'
- '401 Unauthorized: Check if the access token is valid.'
- '403 Forbidden: Ensure the user has permission to access the resource.'
- '400 Bad Request: Check request parameters'
- Once the configuration is done and pushed to the device, the user will be prompted
  with a SAML pop-up window to authenticate based on the integrated IDP.
- '401 Unauthorized: Check API key validity.'
- '403 Forbidden: Insufficient permissions for the requested operation.'
- '401 Unauthorized: Check your credentials and scopes.'
auth_info:
  mentioned_objects:
  - OAuth2
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Token
  - Credential
  - OAuthToken
  - ApiKey
  - API Key
  - API Keys
client:
  base_url: https://api.umbrella.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.umbrella.com/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
