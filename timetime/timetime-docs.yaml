resources:
- name: tenants
  endpoint:
    path: /tenants
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /users
    method: POST
    data_selector: records
- name: shared_public_profiles
  endpoint:
    path: /{slug}
    method: GET
    data_selector: public profile
    params: {}
- name: organizations
  endpoint:
    path: /v1/shared-public-profiles/{slug}
    method: GET
    data_selector: publicProfile
    params: {}
- name: accept_organization_invitation
  endpoint:
    path: /v1/shared-public-profiles/{slug}
    method: POST
    data_selector: publicProfile
    params: {}
- name: list_accessible_event_types
  endpoint:
    path: /v1/shared-public-profiles/{slug}
    method: GET
    data_selector: publicProfile
    params:
      ownerId: string <uuid>
- name: shared_public_profiles
  endpoint:
    path: /shared-public-profiles/{slug}
    method: GET
    data_selector: public_profile
- name: event_type
  endpoint:
    path: /event-types/{id}
    method: GET
    data_selector: event_type
- name: list_bookings
  endpoint:
    path: /get/v1/shared-public-profiles/{slug}
    method: GET
    data_selector: bookings
    params:
      from: string <date-time>
      days: integer <int64>
      eventTypeId: string <uuid>
- name: create_booking
  endpoint:
    path: /create_booking
    method: POST
    data_selector: booking
    params: {}
- name: get_booking_by_id
  endpoint:
    path: /get_booking/{id}
    method: GET
    data_selector: booking
    params: {}
- name: update_booking
  endpoint:
    path: /update_booking/{id}
    method: PATCH
    data_selector: booking
    params: {}
- name: cancel_booking
  endpoint:
    path: /cancel_booking/{id}
    method: DELETE
    data_selector: booking
    params: {}
- name: confirm_booking
  endpoint:
    path: /confirm_booking/{id}
    method: PATCH
    data_selector: booking
    params: {}
- name: validate_booking
  endpoint:
    path: /validate_booking
    method: POST
    data_selector: validation
    params: {}
- name: create_or_update_external_booking
  endpoint:
    path: /create_or_update_external_booking/{id}
    method: PUT
    data_selector: external_booking
    params: {}
- name: get_third_party_calendar_events
  endpoint:
    path: /get_third_party_calendar_events
    method: GET
    data_selector: events
    params:
      eventTypeId: required
      from: optional
      days: optional
- name: list_accessible_calendars
  endpoint:
    path: /v1/shared-public-profiles/{slug}
    method: GET
    data_selector: calendars
- name: get_calendar_event_by_id
  endpoint:
    path: /v1/shared-public-profiles/{slug}
    method: GET
    data_selector: event
    params: {}
- name: list_calendar_events
  endpoint:
    path: /v1/shared-public-profiles/{slug}
    method: GET
    data_selector: events
    params: {}
- name: create_or_update_calendar_event
  endpoint:
    path: /v1/shared-public-profiles/{slug}
    method: POST
    data_selector: event
    params: {}
- name: delete_calendar_event
  endpoint:
    path: /v1/shared-public-profiles/{slug}
    method: DELETE
    data_selector: event
    params: {}
- name: respond_to_calendar_event_invitation
  endpoint:
    path: /v1/shared-public-profiles/{slug}
    method: POST
    data_selector: invitation
    params: {}
- name: pricing_policies
  endpoint:
    path: /v1/shared-public-profiles/{slug}
    method: GET
    data_selector: pricingPolicies
    params: {}
- name: workflows
  endpoint:
    path: /v1/shared-public-profiles/{slug}
    method: GET
    data_selector: workflows
    params: {}
- name: calendars
  endpoint:
    path: /v1/shared-public-profiles/{slug}
    method: GET
    data_selector: calendars
    params: {}
- name: public_profile
  endpoint:
    path: /v1/shared-public-profiles/{slug}
    method: GET
    data_selector: public_profile
    params: {}
- name: pricing_policy
  endpoint:
    path: /v1/shared-public-profiles/{slug}
    method: GET
    data_selector: pricing_policy
    params: {}
- name: public_profile
  endpoint:
    path: /{slug}
    method: GET
    data_selector: response
    params:
      slug: required
- name: public_tenant_configuration
  endpoint:
    path: /tenants
    method: get
    data_selector: public_configuration
    params: {}
- name: current_user_tenant
  endpoint:
    path: /tenants/current
    method: get
    data_selector: tenant_configuration
    params: {}
- name: third_party_consent
  endpoint:
    path: /users/postThirdPartyConsent
    method: post
    data_selector: consent_response
    params: {}
- name: get_user_profile
  endpoint:
    path: /shared-public-profiles/{slug}
    method: GET
    data_selector: profile
- name: create_user
  endpoint:
    path: /users
    method: POST
    data_selector: user
- name: update_user
  endpoint:
    path: /users/{id}
    method: PATCH
    data_selector: user
- name: list_users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: accept_organization_invitation
  endpoint:
    path: /organizations/invitation
    method: POST
    data_selector: response
    params:
      code: required
- name: list_accessible_organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: response
- name: delete_organization
  endpoint:
    path: /organizations/{id}
    method: DELETE
    data_selector: response
    params:
      id: required
- name: create_or_update_organization
  endpoint:
    path: /organizations/{id}
    method: PUT
    data_selector: response
    params:
      id: required
- name: invite_member_to_organization
  endpoint:
    path: /organizations/{orgId}/invite
    method: POST
    data_selector: response
    params:
      orgId: required
- name: list_members_of_organization
  endpoint:
    path: /organizations/{orgId}/members
    method: GET
    data_selector: response
    params:
      orgId: required
- name: add_member_by_tenant_admin
  endpoint:
    path: /organizations/{orgId}/members/add
    method: POST
    data_selector: response
    params:
      orgId: required
- name: delete_organization_member
  endpoint:
    path: /organizations/{orgId}/members/{userId}
    method: DELETE
    data_selector: response
    params:
      orgId: required
      userId: required
- name: patch_organization_membership
  endpoint:
    path: /organizations/{orgId}/members/{userId}
    method: PATCH
    data_selector: response
    params:
      orgId: required
      userId: required
- name: list_event_types
  endpoint:
    path: /event-types
    method: GET
    data_selector: response
- name: shared_public_profiles
  endpoint:
    path: /shared-public-profiles/{slug}
    method: GET
    data_selector: public profile
    params: {}
- name: event_type_availability
  endpoint:
    path: /event-types/{id}/availability
    method: GET
    data_selector: availability
    params: {}
- name: public_event_type_details
  endpoint:
    path: /event-types/{id}
    method: GET
    data_selector: event type details
    params: {}
- name: list_bookings
  endpoint:
    path: /bookings
    method: GET
    data_selector: bookings
    params:
      days: 14
- name: get_resource_group
  endpoint:
    path: /resource-groups/{id}
    method: GET
    data_selector: resource_group
    params: {}
- name: delete_resource_group
  endpoint:
    path: /resource-groups/{id}
    method: DELETE
    data_selector: resource_group
    params: {}
- name: create_or_update_resource_group
  endpoint:
    path: /resource-groups/{id}
    method: PUT
    data_selector: resource_group
    params: {}
- name: public_profiles
  endpoint:
    path: /v1/shared-public-profiles/{slug}
    method: GET
    data_selector: description
    params: {}
- name: create_booking
  endpoint:
    path: /v1/bookings
    method: POST
    data_selector: id
    params: {}
- name: get_booking_by_id
  endpoint:
    path: /v1/bookings/{id}
    method: GET
    data_selector: id
    params: {}
- name: update_booking
  endpoint:
    path: /v1/bookings/{id}
    method: PATCH
    data_selector: id
    params: {}
- name: cancel_booking
  endpoint:
    path: /v1/bookings/{id}/cancel
    method: POST
    data_selector: id
    params: {}
- name: confirm_booking
  endpoint:
    path: /v1/bookings/{id}/confirm
    method: POST
    data_selector: id
    params: {}
- name: validate_booking
  endpoint:
    path: /v1/bookings/validate
    method: POST
    data_selector: id
    params: {}
- name: external_booking
  endpoint:
    path: /v1/bookings/external/{id}
    method: POST
    data_selector: id
    params: {}
- name: get_calendar_events
  endpoint:
    path: /v1/calendar/events
    method: GET
    data_selector: events
    params: {}
- name: list_accessible_calendars
  endpoint:
    path: /v1/shared-public-profiles/{slug}
    method: GET
    data_selector: calendars
- name: get_calendar_event_by_id
  endpoint:
    path: /v1/shared-public-profiles/{slug}
    method: GET
    data_selector: event
- name: delete_calendar_event
  endpoint:
    path: /v1/shared-public-profiles/{slug}
    method: DELETE
    data_selector: event
- name: create_or_update_calendar_event
  endpoint:
    path: /v1/shared-public-profiles/{slug}
    method: POST
    data_selector: event
- name: respond_to_calendar_event_invitation
  endpoint:
    path: /v1/shared-public-profiles/{slug}
    method: POST
    data_selector: invitation
- name: pricing_policies
  endpoint:
    path: /pricing-policies
    method: GET
    data_selector: records
- name: workflows
  endpoint:
    path: /workflows
    method: GET
    data_selector: records
- name: calendars
  endpoint:
    path: /calendars/{calendarId}
    method: DELETE
    data_selector: records
- name: public_profile
  endpoint:
    path: /shared-public-profiles/{slug}
    method: GET
    data_selector: records
    params: {}
- name: create_update_public_profile
  endpoint:
    path: /shared-public-profiles/{id}
    method: POST
    data_selector: records
    params: {}
- name: delete_public_profile
  endpoint:
    path: /shared-public-profiles/{id}
    method: DELETE
    data_selector: records
    params: {}
- name: public_profile
  endpoint:
    path: /{slug}
    method: GET
    data_selector: response
    params:
      slug: required
notes:
- This endpoint is designed for public access and does not require authentication.
- HttpAuth is required for accessing endpoints.
- Requires ADMIN role for tenant to create or update users.
- Responses include public profile configuration.
- HttpAuth is required for all endpoints.
- The public profile is accessible without authentication.
- Public event type details can be retrieved without user authentication.
- Only calendar owners or users with appropriate administrative permissions can delete
  a calendar.
- Only the calendar owner or users with appropriate permissions can create or modify
  calendars.
- This endpoint is publicly accessible and does not require authentication.
errors:
- '400 Bad Request: The request was malformed or contained invalid parameters'
- '401 Unauthorized: Authentication credentials are missing or invalid'
- '403 Forbidden: The authenticated user doesn''t have permission to access the requested
  resource'
- '404 Not Found: The specified resource does not exist'
- '409 Conflict: The request could not be processed due to a conflict with the current
  state of the resource'
- '429 Too Many Requests: You''ve exceeded the API rate limits'
- 404 Not Found - No public profile exists with the specified slug, or the profile
  has been disabled or deleted.
- 404 Not Found - No public profile exists with the specified slug.
- 403 Forbidden - Insufficient permissions to access this profile.
- '404 Not Found: No public profile exists with the specified slug, or the profile
  has been disabled or deleted.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.timetime.in/v1
  auth:
    type: HttpAuth
source_metadata: null
