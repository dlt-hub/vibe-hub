resources:
- name: authorize
  endpoint:
    path: /authorize
    method: GET
    data_selector: null
    params: {}
- name: authorize
  endpoint:
    path: /authorize
    method: GET
    data_selector: null
    params: {}
- name: CIBA Authorization
  endpoint:
    path: /bc-authorize
    method: POST
    data_selector: auth_req_id
    params: {}
- name: access_token
  endpoint:
    path: /token
    method: POST
- name: number_verification
  endpoint:
    path: /number-verification/v0/verify
    method: POST
    data_selector: devicePhoneNumberVerified
- name: SIM Swap Check
  endpoint:
    path: /sim-swap/v0/check
    method: POST
    data_selector: object
    params: {}
- name: retrieve_latest_sim_swap_date
  endpoint:
    path: /sim-swap/v0/retrieve-date
    method: POST
    data_selector: latestSimChange
- name: match
  endpoint:
    path: /match
    method: POST
- name: verify_age_threshold
  endpoint:
    path: /kyc-age-verification/v0.1/verify
    method: POST
    data_selector: object
- name: check_tenure
  endpoint:
    path: /kyc-tenure/v0.1/check-tenure
    method: POST
    data_selector: object
    params: {}
- name: QoS profiles
  endpoint:
    path: /qod/v0/qos-profiles
    method: GET
    data_selector: ''
- name: QoS profile
  endpoint:
    path: /qod/v0/qos-profiles/{name}
    method: GET
- name: QoD session
  endpoint:
    path: /qod/v0/sessions
    method: POST
    data_selector: sessionId
- name: QoD session
  endpoint:
    path: /qod/v0/sessions/{sessionId}
    method: GET
- name: Cancel QoD session
  endpoint:
    path: /qod/v0/sessions/{sessionId}
    method: DELETE
- name: extend_qos_session
  endpoint:
    path: /{sessionId}/extend
    method: POST
- name: verify_location
  endpoint:
    path: /location/v0/verify
    method: POST
- name: roaming_status
  endpoint:
    path: /device-status/v0/roaming
    method: POST
- name: retrieve_device_swap_date
  endpoint:
    path: /device-swap/v0.1/retrieve-date
    method: POST
    data_selector: latestDeviceChange
- name: device_swap_check
  endpoint:
    path: /device-swap/v0.1/check
    method: POST
    data_selector: swapped
    params: {}
- name: authorize
  endpoint:
    path: /authorize
    method: GET
    data_selector: null
    params: {}
- name: token
  endpoint:
    path: /token
    method: POST
- name: number_verification
  endpoint:
    path: /number-verification/v0/verify
    method: POST
    data_selector: devicePhoneNumberVerified
- name: check_sim_swap
  endpoint:
    path: /sim-swap/v0/check
    method: POST
    data_selector: swapped
    params: {}
- name: retrieve_sim_swap_date
  endpoint:
    path: /sim-swap/v0/retrieve-date
    method: POST
    data_selector: latestSimChange
- name: match
  endpoint:
    path: /match
    method: POST
    data_selector: object
    params: {}
- name: verify_age
  endpoint:
    path: /kyc-age-verification/v0.1/verify
    method: POST
- name: check_tenure
  endpoint:
    path: /kyc-tenure/v0.1/check-tenure
    method: POST
    data_selector: tenureDateCheck
    params: {}
- name: qos_profiles
  endpoint:
    path: /qod/v0/qos-profiles
    method: GET
    data_selector: array of strings
- name: QoD session
  endpoint:
    path: /qod/v0/sessions
    method: POST
    data_selector: object
    params: {}
- name: verify_location
  endpoint:
    path: /location/v0/verify
    method: POST
- name: roaming_status
  endpoint:
    path: /device-status/v0/roaming
    method: POST
    data_selector: object
- name: device_swap
  endpoint:
    path: /device-swap/v0.1/retrieve-date
    method: POST
    data_selector: latestDeviceChange
    params: {}
- name: device_swap_check
  endpoint:
    path: /device-swap/v0.1/check
    method: POST
    data_selector: swapped
    params: {}
- name: SimSwap
  endpoint:
    path: /simswap
    method: POST
- name: retrieve-date
  endpoint:
    path: /retrieve-date
    method: POST
    data_selector: response
    params:
      phoneNumber: ''
- name: check
  endpoint:
    path: /check
    method: POST
    data_selector: response
    params:
      phoneNumber: ''
      maxAge: '240'
- name: retrieve_date
  endpoint:
    path: /sim-swap/v0/retrieve-date
    method: POST
    data_selector: ''
    params: {}
- name: simswap
  endpoint:
    path: /bc-authorize
    method: POST
    data_selector: auth_req_id
- name: token
  endpoint:
    path: /token
    method: POST
    data_selector: access_token
- name: retrieve_date
  endpoint:
    path: /sim-swap/v0/retrieve-date
    method: POST
    data_selector: latestSimChange
- name: verify
  endpoint:
    path: /verify
    method: POST
    data_selector: results
    params:
      phoneNumber: string
- name: device-phone-number
  endpoint:
    path: /device-phone-number
    method: GET
    data_selector: results
    params: {}
- name: verify_phone_number
  endpoint:
    path: /number-verification/v0/verify
    method: POST
    data_selector: devicePhoneNumberVerified
- name: match
  endpoint:
    path: /match
    method: POST
- name: KYC Match
  endpoint:
    path: /kyc-match
    method: POST
- name: match
  endpoint:
    path: /kyc-match/v0-0.2/match
    method: POST
    data_selector: ''
    params: {}
- name: kyc_match
  endpoint:
    path: /kyc-match/v0-0.2/match
    method: POST
    data_selector: ''
- name: QoS Profiles
  endpoint:
    path: /reference/getqosprofiles-2
    method: GET
    data_selector: records
    params: {}
- name: Create Session
  endpoint:
    path: /reference/createsession-2
    method: POST
    data_selector: records
    params: {}
- name: Read Session
  endpoint:
    path: /reference/getsession-2
    method: GET
    data_selector: records
    params: {}
- name: Extend Session
  endpoint:
    path: /reference/extendqossessionduration-2
    method: POST
    data_selector: records
    params: {}
- name: Finish Session
  endpoint:
    path: /reference/deletesession-2
    method: DELETE
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /qod-auth-callback
    method: GET
    data_selector: ''
- name: QoD
  endpoint:
    path: /qod
    method: POST
    data_selector: data
    params: {}
- name: sessions
  endpoint:
    path: /qod/v0/sessions
    method: POST
    data_selector: sessionId
- name: verify_location
  endpoint:
    path: /verify
    method: POST
- name: device_location_verification
  endpoint:
    path: /location/v0/verify
    method: POST
    data_selector: verificationResult
- name: verify_location
  endpoint:
    path: /location/v0/verify
    method: POST
    data_selector: verificationResult
- name: DeviceLocation
  endpoint:
    path: /bc-authorize
    method: POST
    data_selector: auth_req_id
    params: {}
- name: AccessToken
  endpoint:
    path: /token
    method: POST
    data_selector: access_token
    params: {}
- name: roaming_status
  endpoint:
    path: /roaming
    method: POST
- name: device_status
  endpoint:
    path: /device-status/v0/roaming
    method: POST
    data_selector: roaming
- name: roaming_status
  endpoint:
    path: /device-status/v0/roaming
    method: POST
    data_selector: result
- name: device_status
  endpoint:
    path: /device-status
    method: POST
    data_selector: result
- name: retrieve-date
  endpoint:
    path: /retrieve-date
    method: POST
- name: check
  endpoint:
    path: /check
    method: POST
- name: retrieve_date
  endpoint:
    path: /device-swap/v0.1/retrieve-date
    method: POST
    data_selector: latestDeviceChange
- name: retrieve_date
  endpoint:
    path: /device-swap/v0.1/retrieve-date
    method: POST
    data_selector: latestDeviceChange
notes:
- Open Gateway APIs are built on open standards, ensuring interoperability between
  different telecommunications operators and development platforms.
- 'Check the Authorization guide on how to get an OAuth2 token, with the following
  scope: dpv:FraudPreventionAndDetection#kyc-match:match'
- Create an app on our Sandbox to get credentials and retrieve tokens so you can perform
  API calls to our operators' production environments.
- 'Check the Authorization guide on how to get an OAuth2 token, with the following
  scope: dpv:RequestedServiceProvision#qod'
- Use 'mock_sandbox_access_token' for testing in mock mode.
- Maximum remaining duration limit is 86,400 seconds.
- Check the Authorization guide on how to get an OAuth2 token.
- 'Check the Authorization guide on how to get an OAuth2 token, with the following
  scope: dpv:FraudPreventionAndDetection#device-location-read'
- 'Check the Authorization guide on how to get an OAuth2 token, with the following
  scope: dpv:FraudPreventionAndDetection#device-swap.'
- 'Check the Authorization guide on how to get an OAuth2 token, with the following
  scope: dpv:FraudPreventionAndDetection#device-swap'
- The usage of credentials granted from our Sandbox might be subject to some limitations
  in order to let you test without the obligations of a commercial contract.
- The number verification will be done for the user that has authenticated via mobile
  network.
- 'Check the Authorization guide on how to get an OAuth2 token, with the following
  scope: dpv:FraudPreventionAndDetection#sim-swap'
- Use the convenience token 'mock_sandbox_access_token' to test in mock mode.
- 'Check the Authorization guide on how to get an OAuth2 token, with the following
  scope: dpv:FraudPreventionAndDetection kyc-age-verification:verify'
- Defaults to 86400
- 'Check the Authorization guide on how to get an OAuth2 token, with the following
  scope: dpv:FraudPreventionAndDetection#device-status-roaming-read'
- Open Gateway APIs open up a world of possibilities for developers looking to harness
  the power of advanced network capabilities.
- You can use the Sandbox environment in mock mode to get deterministic responses.
- This is useful for testing and development purposes.
- The current scope of the Sandbox SDK is limited since it is meant to showcase how
  an SDK integration is like.
- Open Gateway APIs access is granted to applications, not developers, so every application
  can have limited access to the scope and for the purpose it needs.
- Open Gateway authorization is 3-legged — requires setup of app credentials.
- Uses 3-legged OAuth2 CIBA flow for authorization
- Uses OAuth2 with Authorization Code Flow
- Callback URL must be published online
- The API consumption flow must always start on the end-user's device
- Open Gateway authorization is 3-legged, meaning it identifies the application, the
  operator and the operator's subscriber.
- Open Gateway authorization is 3-legged, meaning it identifies the application, the
  operator and the operator's subscriber, who is also the end-user holder of the mobile
  line.
- Authorization Code Flow requires a redirect URI to be published online.
- Uses OIDC standard Authorization Code Flow for authentication
- Uses CIBA authentication for backend flows
- Uses CIBA for backend authentication — requires separate instantiation for each
  device.
- Uses OIDC's Authorization Code Flow for authentication
- Uses OAuth2 with CIBA flow — requires setup of app credentials
- Open Gateway authorization is 3-legged
- Uses OIDC standard CIBA
- Uses OAuth2 with Authorization Code Flow — requires a callback URL.
- Open Gateway authorization is 3-legged.
- Each check for a different phone number needs its own SDK class instantiation, or
  access token if not using an SDK
- Uses OIDC's Authorization Code Flow for frontend applications
errors:
- 400 Bad request
- 401 Unauthorized
- 403 Forbidden
- 400 Problem with the client request
- 401 Authentication problem with the client request
- 403 Client does not have sufficient permission
- 500 Server error
- 503 Service unavailable
- 504 Request time exceeded
- '400: Problem with the client request'
- '401: Authentication problem with the client request'
- '403: Client does not have sufficient permission'
- '404: Resource Not Found'
- '409: Conflict'
- '500: Server error'
- '503: Service unavailable. Typically the server is down'
- '504: Request time exceeded. If it happens repeatedly, consider reducing the request
  complexity'
- 400 - InvalidArgument
- 400 - InvalidParamCombination
- 401 - Unauthenticated
- 403 - PermissionDenied
- 403 - InvalidTokenContext
- 403 - IdDocumentRequired
- 403 - IdDocumentMismatch
- 404 - NotFound
- 500 - ServerError
- 503 - ServiceUnavailable
- 504 - Request time exceeded
- HTTP 400 - KNOW_YOUR_CUSTOMER.INVALID_PARAM_COMBINATION
- HTTP 401 - Authentication problem with the client request.
- HTTP 403 - Client does not have sufficient permission.
- HTTP 404 - Not Found error.
- HTTP 500 - Server error.
- HTTP 503 - Service unavailable.
- '400: INVALID_ARGUMENT'
- '400: OUT_OF_RANGE'
- '401: UNAUTHENTICATED'
- '401: AUTHENTICATION_REQUIRED'
- '403: PERMISSION_DENIED'
- '404: IDENTIFIER_NOT_FOUND'
- '422: SERVICE_NOT_APPLICABLE'
- '422: MISSING_IDENTIFIER'
- '422: UNNECESSARY_IDENTIFIER'
- 404 QoS Profiles not found
- 500 Internal server error
- 400 Invalid input
- 404 Qos Profile not found
- 400 - Invalid input for createSession operation
- 401 - Unauthorized
- 403 - Forbidden
- 409 - Conflict
- 500 - Internal server error
- 501 - Not Implemented
- 503 - Service unavailable
- 404 Session not found
- 400 Invalid input for extendQosSessionDuration operation
- '400 Invalid input: Code given to this error'
- '401 Unauthorized: Code given to this error'
- '403 Forbidden: Code given to this error'
- '404 Not found: Code given to this error'
- '500 Internal server error: Code given to this error'
- '503 Service unavailable: Code given to this error'
- 404 Not found
- '400 Bad Request: Detailed error description'
- '401 Unauthorized: Detailed error description'
- '403 Forbidden: Detailed error description'
- '404 Not found: Detailed error description'
- '422 Unprocessable Content: Detailed error description'
- '500 Internal Server Error: Detailed error description'
- '503 Service Unavailable: Detailed error description'
- '504 Gateway Timeout: Detailed error description'
- '400 Bad Request: Out of Range, INVALID_ARGUMENT'
- '403 Forbidden: Phone number cannot be deducted from access token context'
- '422 Unprocessable Content: Service not supported for this phoneNumber'
- 500 Internal Server Error
- 503 Service Unavailable
- 504 Gateway Timeout
- '400 Bad request: Error code and message'
- '401 Unauthorized: Error code and message'
- '403 Forbidden: Error code and message'
- 404 Resource Not Found
- 409 Conflict
- 503 Service unavailable. Typically the server is down
- 504 Request time exceeded. If it happens repeatedly, consider reducing the request
  complexity
- HTTP 403 - KNOW_YOUR_CUSTOMER.ID_DOCUMENT_REQUIRED
- HTTP 403 - KNOW_YOUR_CUSTOMER.ID_DOCUMENT_MISMATCH
- 404 Qos Profiles not found
- 400 - Some parameter combinations or parameter values provided are not schema compliant
- 400 - Device must be specified
- '400: Invalid input'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not found'
- '500: Internal server error'
- '503: Service unavailable'
- '400 Bad Request: INVALID_ARGUMENT'
- '400 Bad Request: OUT_OF_RANGE'
- '403 Forbidden: PERMISSION_DENIED'
- '403 Forbidden: INVALID_TOKEN_CONTEXT'
- '422 Unprocessable Content: NOT_SUPPORTED'
- '422 Unprocessable Content: UNIDENTIFIABLE_PHONE_NUMBER'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck credentials or token expiration'
- '422 error: No recorded event or database error'
- '403: NUMBER_VERIFICATION.USER_NOT_AUTHENTICATED_BY_MOBILE_NETWORK: Client must
  authenticate via the mobile network to use this service'
auth_info:
  mentioned_objects:
  - OAuth2
  - access token
  - ClientCredentials
  - QoDMobile
  - DeviceLocation
  - DeviceStatus
client:
  base_url: https://sandbox.opengateway.telefonica.com/apigateway
  auth:
    type: oauth2
  headers:
    Accept: application/json
source_metadata: null
