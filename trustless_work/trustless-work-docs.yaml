resources:
- name: escrow
  endpoint:
    path: /api/escrow
    method: GET
    data_selector: data
    params: {}
- name: single_release_escrow
  endpoint:
    path: /deployer/single-release
    method: POST
- name: multi_release_escrow
  endpoint:
    path: /deployer/multi-release
    method: POST
- name: fund_escrow
  endpoint:
    path: /escrow/{type}/fund-escrow
    method: POST
- name: approve_milestone
  endpoint:
    path: /escrow/{type}/approve-milestone
    method: POST
- name: release_funds
  endpoint:
    path: /escrow/{type}/release-funds
    method: POST
- name: dispute_escrow
  endpoint:
    path: /escrow/{type}/dispute-escrow
    method: POST
- name: get_multiple_escrow_balance
  endpoint:
    path: /escrow/{type}/get-multiple-escrow-balance
    method: GET
- name: single_release_escrow
  endpoint:
    path: /api/v1/single-release-escrow
    method: POST
    data_selector: data
    params: {}
- name: multi_release_escrow
  endpoint:
    path: /api/v1/multi-release-escrow
    method: POST
    data_selector: data
    params: {}
- name: Single Release Escrow
  endpoint:
    path: /trustless-work/api-reference/deploy-1
    method: GET
    data_selector: records
    params: {}
- name: Multi Release Escrow
  endpoint:
    path: /trustless-work/api-reference/deploy-2
    method: GET
    data_selector: records
    params: {}
- name: escrow
  endpoint:
    path: /api/escrow
    method: POST
    data_selector: escrow_data
- name: Single-Release Escrow
  endpoint:
    path: /api/escrow/single-release
    method: POST
- name: Multi-Release Escrow
  endpoint:
    path: /api/escrow/multi-release
    method: POST
- name: Single-Release Escrow
  endpoint:
    path: /trustless-work/api-reference/deploy-1
    method: GET
    data_selector: records
- name: Multi-Release Escrow
  endpoint:
    path: /trustless-work/api-reference/deploy-2
    method: GET
    data_selector: records
- name: single_release
  endpoint:
    path: /escrow/single-release
    method: GET
    data_selector: escrow
    params: {}
- name: multi_release
  endpoint:
    path: /escrow/multi-release
    method: GET
    data_selector: escrow
    params: {}
- name: single_release
  endpoint:
    path: /example/single_release
    method: GET
    data_selector: records
    params: {}
- name: multi_release
  endpoint:
    path: /example/multi_release
    method: GET
    data_selector: records
    params: {}
- name: single_release_escrow
  endpoint:
    path: /api/single_release_escrow
    method: POST
    data_selector: data
    params: {}
- name: multi_release_escrow
  endpoint:
    path: /api/multi_release_escrow
    method: POST
    data_selector: data
    params: {}
- name: single_release_escrow
  endpoint:
    path: /trustless-work/api-reference/deploy-1
    method: GET
    data_selector: records
- name: multi_release_escrow
  endpoint:
    path: /trustless-work/api-reference/deploy-2
    method: GET
    data_selector: records
- name: Single Release Escrow
  endpoint:
    path: /api-reference/deploy-1
    method: GET
- name: Multi Release Escrow
  endpoint:
    path: /api-reference/deploy-2
    method: GET
- name: Single Release Escrow
  endpoint:
    path: /api-reference/deploy-1
    method: GET
- name: Multi Release Escrow
  endpoint:
    path: /api-reference/deploy-2
    method: GET
- name: escrow
  endpoint:
    path: /api/escrow
    method: POST
    data_selector: data
    params: {}
- name: escrow
  endpoint:
    path: /api/escrow
    method: POST
    data_selector: data
    params: {}
- name: escrows
  endpoint:
    path: /trustlines/escrows
    method: GET
    data_selector: escrows
- name: trustlines
  endpoint:
    path: /trustlines
    method: GET
- name: XLM Testnet Tokens
  endpoint:
    path: /account/fund
    method: POST
    data_selector: transaction_confirmation
    params:
      public_key: <Your Public Key>
- name: USDC Testnet
  endpoint:
    path: /faucet
    method: POST
    data_selector: tokens_received
    params:
      issuer: GBBD47IF6LWK7P7MDEVSCWR7DPUWV3NY3DTQEVFL4NAT4AQH3ZLLFLA5
      stellar_address: <Your Stellar Testnet Address>
- name: Freighter Wallet
  endpoint:
    path: /trustless-work/stellar-and-soroban-the-backbone-of-trustless-work/stellar-wallets/freighter-wallet
    method: GET
    data_selector: records
- name: Albedo Wallet
  endpoint:
    path: /trustless-work/stellar-and-soroban-the-backbone-of-trustless-work/stellar-wallets/albedo-wallet
    method: GET
    data_selector: records
- name: xBull Wallet
  endpoint:
    path: /trustless-work/stellar-and-soroban-the-backbone-of-trustless-work/stellar-wallets/xbull-wallet
    method: GET
    data_selector: records
- name: Rabet Wallet
  endpoint:
    path: /trustless-work/stellar-and-soroban-the-backbone-of-trustless-work/stellar-wallets/rabet-wallet
    method: GET
    data_selector: records
- name: Lobstr Wallet
  endpoint:
    path: /trustless-work/stellar-and-soroban-the-backbone-of-trustless-work/stellar-wallets/lobstr-wallet
    method: GET
    data_selector: records
- name: Hana Wallet
  endpoint:
    path: /trustless-work/stellar-and-soroban-the-backbone-of-trustless-work/stellar-wallets/hana-wallet
    method: GET
    data_selector: records
- name: single_release_escrow
  endpoint:
    path: /api/single_release_escrow
    method: POST
    data_selector: data
    params: {}
- name: multi_release_escrow
  endpoint:
    path: /api/multi_release_escrow
    method: POST
    data_selector: data
    params: {}
- name: Single Release Escrow
  endpoint:
    path: /api-reference/deploy-1
    method: GET
- name: Multi Release Escrow
  endpoint:
    path: /api-reference/deploy-2
    method: GET
- name: single_release
  endpoint:
    path: /deployer/single-release
    method: POST
- name: multi_release
  endpoint:
    path: /deployer/multi-release
    method: POST
- name: fund_escrow
  endpoint:
    path: /escrow/{type}/fund-escrow
    method: POST
- name: approve_milestone
  endpoint:
    path: /escrow/{type}/approve-milestone
    method: POST
- name: change_milestone_status
  endpoint:
    path: /escrow/{type}/change-milestone-status
    method: POST
- name: release_funds
  endpoint:
    path: /escrow/{type}/release-funds
    method: POST
- name: release_milestone_funds
  endpoint:
    path: /escrow/{type}/release-milestone-funds
    method: POST
- name: dispute_escrow
  endpoint:
    path: /escrow/{type}/dispute-escrow
    method: POST
- name: resolve_dispute
  endpoint:
    path: /escrow/{type}/resolve-dispute
    method: POST
- name: dispute_milestone
  endpoint:
    path: /escrow/{type}/dispute-milestone
    method: POST
- name: resolve_milestone_dispute
  endpoint:
    path: /escrow/{type}/resolve-milestone-dispute
    method: POST
- name: update_escrow
  endpoint:
    path: /escrow/{type}/update-escrow
    method: POST
- name: get_escrow
  endpoint:
    path: /escrow/{type}/get-escrow
    method: GET
- name: get_multiple_escrow_balance
  endpoint:
    path: /escrow/{type}/get-multiple-escrow-balance
    method: GET
- name: get_escrows_by_signer
  endpoint:
    path: /helper/get-escrows-by-signer
    method: GET
- name: get_escrows_by_role
  endpoint:
    path: /helper/get-escrows-by-role
    method: GET
- name: set_trustline
  endpoint:
    path: /helper/set-trustline
    method: POST
- name: send_transaction
  endpoint:
    path: /helper/send-transaction
    method: POST
- name: single_release
  endpoint:
    path: /deployer/single-release
    method: POST
- name: multi_release
  endpoint:
    path: /deployer/multi-release
    method: POST
- name: fund_escrow
  endpoint:
    path: /escrow/{type}/fund-escrow
    method: POST
- name: approve_milestone
  endpoint:
    path: /escrow/{type}/approve-milestone
    method: POST
- name: change_milestone_status
  endpoint:
    path: /escrow/{type}/change-milestone-status
    method: POST
- name: release_funds
  endpoint:
    path: /escrow/{type}/release-funds
    method: POST
- name: release_milestone_funds
  endpoint:
    path: /escrow/{type}/release-milestone-funds
    method: POST
- name: dispute_escrow
  endpoint:
    path: /escrow/{type}/dispute-escrow
    method: POST
- name: resolve_dispute
  endpoint:
    path: /escrow/{type}/resolve-dispute
    method: POST
- name: dispute_milestone
  endpoint:
    path: /escrow/{type}/dispute-milestone
    method: POST
- name: resolve_milestone_dispute
  endpoint:
    path: /escrow/{type}/resolve-milestone-dispute
    method: POST
- name: update_escrow
  endpoint:
    path: /escrow/{type}/update-escrow
    method: POST
- name: get_escrow
  endpoint:
    path: /escrow/{type}/get-escrow
    method: GET
- name: get_multiple_escrow_balance
  endpoint:
    path: /escrow/{type}/get-multiple-escrow-balance
    method: GET
- name: get_escrows_by_signer
  endpoint:
    path: /helper/get-escrows-by-signer
    method: GET
- name: get_escrows_by_role
  endpoint:
    path: /helper/get-escrows-by-role
    method: GET
- name: set_trustline
  endpoint:
    path: /helper/set-trustline
    method: POST
- name: send_transaction
  endpoint:
    path: /helper/send-transaction
    method: POST
- name: single_release_escrow
  endpoint:
    path: /api/single_release_escrow
    method: GET
    data_selector: escrows
    params: {}
- name: multi_release_escrow
  endpoint:
    path: /api/multi_release_escrow
    method: GET
    data_selector: escrows
    params: {}
- name: single_release_escrow
  endpoint:
    path: /api/single_release_escrow
    method: POST
    data_selector: data
    params: {}
- name: multi_release_escrow
  endpoint:
    path: /api/multi_release_escrow
    method: POST
    data_selector: data
    params: {}
- name: Wallet
  endpoint:
    path: /wallet
    method: GET
    data_selector: wallets
- name: Single Release Escrow
  endpoint:
    path: /api-reference/deploy-1
    method: GET
- name: Multi Release Escrow
  endpoint:
    path: /api-reference/deploy-2
    method: GET
- name: Single Release Escrow
  endpoint:
    path: /api-reference/deploy-1/initialize-escrow
    method: POST
- name: Multi Release Escrow
  endpoint:
    path: /api-reference/deploy-2/initialize-escrow
    method: POST
- name: multi_release_escrow
  endpoint:
    path: /trustless-work/api-reference/deploy-2
    method: GET
- name: Set Trustline
  endpoint:
    path: /helpers/set-trustline
    method: POST
    data_selector: data
- name: Send Transaction
  endpoint:
    path: /helpers/send-transaction
    method: POST
    data_selector: data
- name: Get Multiple Escrow Balance
  endpoint:
    path: /helpers/get-multiple-escrow-balance
    method: GET
    data_selector: data
- name: Get Multiple Escrow Balance
  endpoint:
    path: /api/get-multiple-escrow-balance
    method: GET
- name: Send Transaction
  endpoint:
    path: /api/send-transaction
    method: POST
- name: single_release_escrow
  endpoint:
    path: /api/deploy-1
    method: POST
- name: multi_release_escrow
  endpoint:
    path: /api/deploy-2
    method: POST
- name: single_release_escrow
  endpoint:
    path: /api/v1/single_release_escrow
    method: POST
- name: multi_release_escrow
  endpoint:
    path: /api/v1/multi_release_escrow
    method: POST
- name: indexer
  endpoint:
    path: /indexer/update-from-txHash
    method: POST
    data_selector: response
    params: {}
- name: update_from_txHash
  endpoint:
    path: /indexer/update-from-txHash
    method: POST
    data_selector: success
    params: {}
- name: Single Release Escrow
  endpoint:
    path: /api/single-release-escrow
    method: POST
- name: Multi Release Escrow
  endpoint:
    path: /api/multi-release-escrow
    method: POST
- name: send_transaction
  endpoint:
    path: /api-reference/helpers/send-transaction
    method: POST
    data_selector: SendTransactionResponse
- name: get_multiple_escrow_balances
  endpoint:
    path: /api/v1/get-multiple-escrow-balance
    method: GET
    data_selector: balances
    params: {}
- name: send_transaction
  endpoint:
    path: /api/send-transaction
    method: POST
    data_selector: SendTransactionResponse
- name: getEscrowByContractIds
  endpoint:
    path: /api/get-escrow-by-contract-id
    method: GET
    data_selector: escrows
- name: get_multiple_escrow_balances
  endpoint:
    path: /api/get_multiple_escrow_balance
    method: GET
    data_selector: balances
- name: get_escrow_by_contract_ids
  endpoint:
    path: /api/get-escrow-by-contract-ids
    method: POST
    data_selector: escrows
- name: Get Escrows From Indexer By Signer
  endpoint:
    path: /api/reference/helpers/get-escrow-by-contract-id
    method: GET
    data_selector: escrows
- name: getEscrowsBySigner
  endpoint:
    path: /api/getEscrowsBySigner
    method: GET
    data_selector: escrows
- name: getEscrowsByRole
  endpoint:
    path: /api/getEscrowsByRole
    method: POST
    data_selector: escrows
- name: get_escrows_by_role
  endpoint:
    path: /api/get_escrows_by_role
    method: POST
    data_selector: escrows
    params: {}
- name: useInitializeEscrow
  endpoint:
    path: /api/reference/deploy-1/initialize-escrow
    method: POST
    data_selector: unsignedTransaction
- name: initialize_escrow
  endpoint:
    path: /api/reference/deploy-1/initialize-escrow
    method: POST
    data_selector: unsignedTransaction
- name: fund_escrow
  endpoint:
    path: /api/reference/deploy-1/fund-escrow
    method: POST
    data_selector: transactionStatus
- name: approve_milestone
  endpoint:
    path: /api/reference/deploy-1/change-milestone-flag
    method: POST
    data_selector: transactionStatus
- name: release_funds
  endpoint:
    path: /api/reference/deploy-1/release-funds
    method: POST
    data_selector: transactionStatus
- name: update_escrow
  endpoint:
    path: /api/update-escrow
    method: POST
    data_selector: unsignedTransaction
- name: update_escrow
  endpoint:
    path: /api/update-escrow
    method: POST
    data_selector: unsignedTransaction
    params: {}
- name: fund_escrow
  endpoint:
    path: /fund-escrow
    method: POST
    data_selector: unsignedTransaction
    params: {}
- name: fund_escrow
  endpoint:
    path: /api/fund-escrow
    method: POST
    data_selector: unsignedTransaction
    params: {}
- name: approve_milestone
  endpoint:
    path: /api/approve-milestone
    method: POST
    data_selector: unsignedTransaction
    params: {}
- name: ChangeMilestoneStatus
  endpoint:
    path: /api/change-milestone-status
    method: POST
    data_selector: unsignedTransaction
- name: approve_milestone
  endpoint:
    path: /api/reference/deploy-1/change-milestone-flag
    method: POST
    data_selector: unsignedTransaction
    params: {}
- name: release_funds
  endpoint:
    path: /api/reference/deploy-1/release-funds
    method: POST
- name: useStartDispute
  endpoint:
    path: /api/reference/useStartDispute
    method: POST
    data_selector: unsignedTransaction
    params: {}
- name: useResolveDispute
  endpoint:
    path: /api/v1/resolveDispute
    method: POST
    data_selector: unsignedTransaction
    params: {}
- name: change_milestone_status
  endpoint:
    path: /api-reference/deploy-1/change-milestone-status
    method: POST
- name: releaseFunds
  endpoint:
    path: /api/release-funds
    method: POST
    data_selector: unsignedTransaction
    params: {}
- name: useWithdrawRemainingFunds
  endpoint:
    path: /api/withdraw-remaining-funds
    method: POST
    data_selector: unsignedTransaction
    params: {}
- name: useStartDispute
  endpoint:
    path: /useStartDispute
    method: POST
    data_selector: unsignedTransaction
    params: {}
- name: resolve_dispute
  endpoint:
    path: /api/v1/resolveDispute
    method: POST
    data_selector: unsignedTransaction
- name: single_release_escrow
  endpoint:
    path: /api/escrow/single
    method: POST
    data_selector: data
    params: {}
- name: multi_release_escrow
  endpoint:
    path: /api/escrow/multi
    method: POST
    data_selector: data
    params: {}
- name: useWithdrawRemainingFunds
  endpoint:
    path: /trustless-work/api-reference/smart-escrow-api/useWithdrawRemainingFunds
    method: POST
    data_selector: unsignedTransaction
    params:
      payload: WithdrawRemainingFundsPayload
- name: escrow
  endpoint:
    path: /escrows
    method: GET
    data_selector: escrows
    params: {}
- name: single_release_escrow
  endpoint:
    path: /api/v1/single_release_escrow
    method: POST
    data_selector: data
- name: multi_release_escrow
  endpoint:
    path: /api/v1/multi_release_escrow
    method: POST
    data_selector: data
- name: single_release_escrow
  endpoint:
    path: /trustless-work/api-reference/deploy-1
    method: GET
    data_selector: records
    params: {}
- name: multi_release_escrow
  endpoint:
    path: /trustless-work/api-reference/deploy-2
    method: GET
    data_selector: records
    params: {}
- name: single_release_escrow
  endpoint:
    path: /api/v1/deploy-1/initialize-escrow
    method: POST
    data_selector: data
    params: {}
- name: multi_release_escrow
  endpoint:
    path: /api/v1/deploy-2/initialize-escrow
    method: POST
    data_selector: data
    params: {}
- name: single_release_escrow
  endpoint:
    path: /api/release-escrow
    method: POST
    data_selector: data
    params: {}
- name: multi_release_escrow
  endpoint:
    path: /api/multi-release-escrow
    method: POST
    data_selector: data
    params: {}
- name: single_release_escrow
  endpoint:
    path: /api/reference/deploy-1
    method: GET
- name: multi_release_escrow
  endpoint:
    path: /api/reference/deploy-2
    method: GET
- name: escrows_by_role_cards
  endpoint:
    path: /escrows/escrows-by-role/cards
    method: GET
- name: initialize_escrow_dialog
  endpoint:
    path: /escrows/single-release/initialize-escrow/dialog
    method: GET
- name: single_release_escrow
  endpoint:
    path: /api/reference/deploy-1
    method: GET
- name: multi_release_escrow
  endpoint:
    path: /api/reference/deploy-2
    method: GET
- name: helpers
  endpoint:
    path: /api/reference/helpers
    method: GET
- name: indexer
  endpoint:
    path: /api/reference/indexer
    method: GET
- name: Single Release Escrow
  endpoint:
    path: /trustless-work/api-reference/deploy-1
    method: GET
- name: Multi Release Escrow
  endpoint:
    path: /trustless-work/api-reference/deploy-2
    method: GET
- name: escrow
  endpoint:
    path: /api/escrow
    method: POST
    data_selector: data
    params: {}
- name: security_deposits
  endpoint:
    path: /api/security_deposits
    method: GET
- name: marketplaces
  endpoint:
    path: /api/marketplaces
    method: GET
- name: crowdfunding
  endpoint:
    path: /api/crowdfunding
    method: GET
- name: revenue_share
  endpoint:
    path: /api/revenue_share
    method: GET
- name: trade_finance
  endpoint:
    path: /api/trade_finance
    method: GET
- name: Single Release Escrow
  endpoint:
    path: /api-reference/deploy-1
    method: GET
- name: Multi Release Escrow
  endpoint:
    path: /api-reference/deploy-2
    method: GET
- name: security_deposits
  endpoint:
    path: /api/security_deposits
    method: POST
    data_selector: data
    params: {}
- name: escrow
  endpoint:
    path: /api/escrows
    method: POST
    data_selector: data
    params: {}
- name: escrow
  endpoint:
    path: /api/v1/escrow
    method: GET
    data_selector: data
    params: {}
- name: single_release_escrow
  endpoint:
    path: /trustless-work/api-reference/deploy-1
    method: GET
    data_selector: records
    params: {}
- name: multi_release_escrow
  endpoint:
    path: /trustless-work/api-reference/deploy-2
    method: GET
    data_selector: records
    params: {}
- name: escrow
  endpoint:
    path: /api/v1/escrows
    method: GET
    data_selector: records
    params: {}
- name: escrow
  endpoint:
    path: /api/v1/escrow
    method: GET
    data_selector: data
- name: escrow
  endpoint:
    path: /api/escrows
    method: GET
    data_selector: data
    params: {}
- name: single_release_escrow
  endpoint:
    path: /api/single_release_escrow
    method: POST
    data_selector: data
- name: multi_release_escrow
  endpoint:
    path: /api/multi_release_escrow
    method: POST
    data_selector: data
- name: escrow
  endpoint:
    path: /api/escrow
    method: GET
    data_selector: data
    params: {}
- name: Single Release Escrow
  endpoint:
    path: /api/release-escrow
    method: POST
    data_selector: result
    params: {}
- name: Multi Release Escrow
  endpoint:
    path: /api/multi-release-escrow
    method: POST
    data_selector: result
    params: {}
notes:
- Requires an API key for access
- 'Rate Limits: 50 requests/minute per client.'
- All operations return unsigned XDRs requiring client-side signing.
- Blockchain and web3 are the perfect solution for escrows.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Requires setup of connected app in Trustless Work
- Requires API key for access
- Ensure proper permissions are set for API key
- 'Trustless Work supports two escrow types: Single-Release Escrow and Multi-Release
  Escrow.'
- The API uses an API key for authentication.
- Requires setup of connected app in api
- Single-Release Escrow holds funds until all milestones are completed and approved.
- Multi-Release Escrow releases funds incrementally as each milestone is completed.
- Use Single-Release to get started fast.
- Use Multi-Release when you need milestone-based control.
- All escrows are non-custodial, programmable, and stablecoin-native.
- Requires proper setup of OAuth2 in the Trustless Work API.
- Only addresses with assigned roles can update milestones, approve work, release
  funds, or resolve disputes.
- Anyone can deposit funds into an escrow.
- 'The escrow lifecycle includes multiple phases: initiation, funding, milestone updates,
  approval, and release.'
- Dispute resolution is an alternative phase that can be triggered.
- Funds are transferred to the Receiver, minus any platform fee.
- Trustless Work offers a modular product suite.
- Maximum control, minimal friction.
- Developer sandbox to test flows before pushing to production.
- Fast → Transactions settle in 5 seconds
- Low cost → Fractions of a cent per transaction
- Global → Used by wallets, neobanks, fintechs, and on/off-ramp partners worldwide
- Stablecoin-native → Home to USDC, and open to any issued asset
- Compliance-aware → Trusted by Circle, MoneyGram, Franklin Templeton, and more
- All roles must have the Trustline with that asset.
- Each trustline requires 0.5 XLM in base reserve, increasing the minimum balance
  and limiting abuse.
- All participants must have the proper trustline set up first.
- 'Testnet Tokens Have No Value: These tokens are strictly for testing and cannot
  be transferred to the mainnet.'
- 'Testnet Environment Resets: The Stellar testnet resets periodically, clearing all
  test accounts and balances.'
- Stellar accounts require a minimum balance (currently 0.5 XLM)
- Each trustline adds to the minimum balance requirement
- Some objects may return nulls in deeply nested fields
- Trustless Work is an Escrow-as-a-Service (EaaS) platform designed for the stablecoin
  economy.
- All write actions must be signed by the wallet that holds the corresponding escrow
  role.
- Request API Key (testnet; mainnet post-audit)
- 'Unique identifier for the escrow: engagementId'
- 'Commission that the platform will receive when the escrow is completed: plataformFee'
- Escrow requires specific roles to function correctly.
- Ensure to validate the trustline before transactions.
- The document describes the essential execution flow for service endpoints, with
  exceptions for Get Balances and Get Escrow, ensuring uniformity in implementation.
- Flow that must always be executed at each Endpoint except Get Balances & Get Escrow.
- This kit supports multiple wallet types including Freighter and Albedo
- Configure for TESTNET during development and MAINNET for production
- Wallet information is automatically saved to localStorage
- Supports multiple Stellar wallet types (Freighter, Albedo, etc.)
- Comprehensive error handling for wallet operations
- Users don't need to reconnect their wallet every time they visit your app
- Seamless user experience across browser sessions
- You'll have 50 as a request rate limit per client in the API every 60 seconds.
- Escrow funds are released only once upon resolution or completion.
- Escrow funds are released only once upon resolution of a dispute or completion of
  milestones.
- Multi-Release Contract is an escrow agreement on the Stellar blockchain that divides
  the total payment of a project into multiple deliveries.
- Uses API key for authentication
- A Multi-Release Contract is an escrow agreement on the Stellar blockchain that divides
  the total payment of a project into multiple deliveries.
- Helper endpoints provide additional functionalities that complement the main features
  of an API.
- API Key is required for access
- Requires API Key for authentication.
- Enables external integrations while maintaining information consistency.
- Prevents data loss when bypassing the standard workflow.
- Ensures secure and accurate storage in Firebase using the transaction hash.
- There will be a fixed 0.3% fee on released funds from escrows on Mainnet.
- As a platform you will be able to add a flexible fee on top of that 0.3%, which
  will automatically route to the address of your choice.
- API key required for accessing the API.
- Ensure that your API key is kept secure.
- Platform can add a flexible fee on top of the 0.3%.
- This library offers seamless integration and allows flexibility with single-release
  or multi-release escrow options.
- Most Trustless Work endpoints return an unsigned transaction in XDR format.
- 'Important: This library offers seamless integration and allows flexibility with
  single-release or multi-release escrow options.'
- This endpoint must be used for all the endpoints after we execute it, except getEscrowBalances,
  getEscrowsByContractId, getEscrowsByRole, and getEscrowsBySigner.
- Balances not found will throw an error.
- Returns the escrows that you're looking for from indexer synchronizer with the blockchain.
- Returns the escrows that you're looking for from the indexer.
- 'EscrowType: Specifies the type of escrow. It accepts the following values: multi-release,
  single-release.'
- Requires API key for authentication.
- Ensure parameters match the escrow type selected.
- Returns an unsigned transaction based on the provided payload.
- 'EscrowType specifies the type of escrow: multi-release or single-release'
- 'Ensure they match: if you choose a ''multi-release'' type, you must also use a
  ''multi-release'' payload.'
- Resolves escrow disputes by distributing funds to the approver and service provider
  as determined by the dispute resolver.
- In a multi-release escrow, when some funds are locked, you can use this hook to
  release the remaining funds.
- API call requires payload to resolve dispute.
- Ensure API key is stored securely.
- Refer to the installation guide for setup instructions.
- API requires an API key for access.
- Complete setup guide for Trustless Work React blocks with detailed configuration
  and best practices.
- A production-ready set of React blocks for integrating Trustless Work's escrow and
  dispute resolution flows.
- 'Required: Your Trustless Work API key'
- If you don't want to use our approach for retrieving the escrow data, you are completely
  free to change it.
- The deeper you go in the folder structure, the more specific the blocks become.
- It does not work for a real use case, only for testing purposes.
- Requires setup of API key for authentication
- 'Important: It does not work for a real use case, only for testing purposes.'
- Some blocks require other blocks to work properly.
- Some blocks require other blocks to work properly. Make sure to add their dependencies
  before using them.
- 'Provider Order Matters: The providers must be nested in this exact order for proper
  functionality.'
- If you don't follow the instructions below, you may run into issues with the blocks
  not working properly.
- If you skipped the init command, add these providers
- Make sure to add their dependencies before using them.
- If you don't follow the instructions, you may run into issues with the blocks not
  working properly.
- Ensure TypeScript types are correct.
- Requires setup of connected app
- API key request process is outlined in the documentation
- Trustless Work v3 is currently in preview.
- Ensure proper installation and configuration before usage.
- Uses API key for authentication.
- Smart Escrow Technology is adaptable for different industries.
- Fast Integration – Plug-and-play escrow API and UI templates
- Global Payments – Accept and settle in stablecoins (e.g. USDC) across borders
- Reduce Fraud & Chargebacks – Escrow eliminates the need for trust in the transaction
- Neutrality by Design – Funds are not held by the platform, but by a smart contract
- 'Custom Logic – Choose who approves release: buyer, platform, or auto-timer'
- Now on Testnet – Launching May 2025
- Smart Escrow Technology is adaptable, with configurations and fund flows that can
  be adjusted to fit the needs of different industries and applications.
- Trustless Work provides Smart Escrows—programmable contracts that hold funds on-chain.
- Requires setup of connected app in API
- API key is required for authentication.
- Uses API keys for authentication
- Customizable logic for escrows
- Trustless Work provides Smart Escrows—programmable contracts that hold funds with
  predefined conditions for releasing them.
- Freelancers often experience delayed payments, disputes, and uncertainty regarding
  compensation.
- Clients risk losing deposits or receiving unsatisfactory work.
- Request API Key for authentication
- Crowdfunding platforms help innovators and creators raise funds directly from supporters.
- Managing funds securely, transparently, and efficiently can be challenging.
- Smart contracts define rules upfront; funds are never held by the platform.
- Requires setup of connected app in Trustless Work.
- Ensure proper API key management.
- Crowdfunding platform with escrow infrastructure that guarantees transparency, safety,
  and efficient fund management.
- Uses OAuth2 with refresh token — requires setup of connected app in Trustless Work
- Ensure correct API key is used in the Authorization header
- Use OAuth2 with refresh token for authentication.
- Ensure your wallet extension is installed and active.
- Verify you are on the correct network (Mainnet/Testnet).
- Unable to connect wallet to Trustless Work
- 'Error: Insufficient Balance'
- Request API Key required for authentication
errors:
- '401 Unauthorized: Invalid API key or token'
- '404 Not Found: Endpoint does not exist'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Invalid API key'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '400 Bad Request: Check the request format and parameters.'
- '401 Unauthorized: Verify the API key is correct.'
- '404 Not Found: Ensure the endpoint is correct.'
- '400 Bad Request: Check request parameters and payload format.'
- '401 Unauthorized: Ensure valid OAuth token is provided.'
- '404 Not Found: Endpoint may not exist.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck API key or token expiration'
- 'DISPUTE: If any party raises a dispute, the lifecycle takes a detour.'
- Ensure you’ve used the correct Public Key.
- Try another method (e.g., Stellar Faucet vs. Laboratory).
- Wait for a few minutes as the testnet might experience delays.
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: API key is missing or invalid.'
- '500 Internal Server Error: Try again later.'
- Comprehensive error handling for wallet operations
- Graceful fallbacks when wallet operations fail
- '401 Unauthorized: Invalid API key.'
- '404 Not Found: The requested endpoint does not exist.'
- 'Escrows not found: Check the provided parameters.'
- 'ERROR: API key is missing or invalid.'
- Unsigned transaction is missing from fundEscrow response.
- Signed transaction is missing.
- Unsigned transaction is missing from fundEscrow response
- Signed transaction is missing
- '401 Unauthorized: Check API key or token.'
- '403 Forbidden: Insufficient permissions.'
- '404 Not Found: Endpoint does not exist.'
- '400 Bad Request: Check the request payload.'
- '401 Unauthorized: Ensure API key is valid.'
- '404 Not Found: Verify the endpoint path.'
- '401 Unauthorized: Check API key validity'
- '404 Not Found: Endpoint may not exist'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify your API key.'
- '401 Unauthorized: Recheck OAuth token or credentials'
- '401 Unauthorized: Check your API key'
- '404 Not Found: Ensure the endpoint is correct'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - API Key
  - ApiKey
  - Escrow
  - Escrow Response
  - OAuth
  - OAuthToken
client:
  base_url: https://api.trustlesswork.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://api.trustlesswork.com/oauth/token
    client_id: '{{ dlt.secrets[''trustless_client_id''] }}'
    client_secret: '{{ dlt.secrets[''trustless_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''trustless_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
