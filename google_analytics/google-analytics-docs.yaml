resources:
- name: timezone
  endpoint:
    path: /api/timezone/{area}/{region}
    method: GET
    data_selector: timezone
- name: custom_question
  endpoint:
    path: /adding-questions-and-content/question-reference/iframe-question
    method: GET
    data_selector: records
- name: select_question
  endpoint:
    path: /adding-questions-and-content/question-reference/select
    method: GET
    data_selector: records
- name: analytics_events
  endpoint:
    path: /integrations/getting-data-out/analytics
    method: GET
    data_selector: events
- name: answer_payloads
  endpoint:
    path: /integrations/getting-data-out/submission-frequencies
    method: GET
    data_selector: answers
- name: uploads
  endpoint:
    path: /integrations/integration-reference/s3
    method: POST
    data_selector: uploads
- name: responder_uuid
  endpoint:
    path: /core-concepts/how-data-works-in-formsort/responder-uuids
    method: GET
    data_selector: responderUuid
    params: {}
- name: variant_revision_uuid
  endpoint:
    path: /variant/revision
    method: GET
    data_selector: variant_revision_uuid
    params: {}
- name: flow
  endpoint:
    path: /flow
    method: GET
    data_selector: flows
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: data
    params: {}
- name: responses
  endpoint:
    path: /api/v1/responses
    method: GET
    data_selector: data
    params: {}
- name: responses
  endpoint:
    path: /api/v1/responses
    method: GET
    data_selector: data
- name: address
  endpoint:
    path: /adding-questions-and-content/question-reference/address
    method: GET
    data_selector: my_address
- name: date_picker
  endpoint:
    path: /date_picker
    method: GET
    data_selector: records
    params: {}
- name: date_time
  endpoint:
    path: /date-and-time
    method: GET
    data_selector: datetime
    params: {}
- name: email_address
  endpoint:
    path: /email-address
    method: GET
    data_selector: email
    params: {}
- name: file_upload
  endpoint:
    path: /adding-questions-and-content/question-reference/file-upload
    method: GET
    data_selector: files
    params: {}
- name: file_upload
  endpoint:
    path: /file/upload
    method: POST
    data_selector: files
    params: {}
- name: grid_choice
  endpoint:
    path: /grid_choice
    method: GET
    data_selector: choices
    params: {}
- name: custom_question
  endpoint:
    path: /custom-question
    method: GET
    data_selector: records
- name: image_upload
  endpoint:
    path: /adding-questions-and-content/question-reference/image-upload
    method: GET
    data_selector: image_info
- name: image_upload
  endpoint:
    path: /adding-questions-and-content/question-reference/image-upload
    method: GET
    data_selector: image_upload_settings
- name: number
  endpoint:
    path: /number
    method: GET
    data_selector: records
    params: {}
- name: number
  endpoint:
    path: /number
    method: GET
    data_selector: records
- name: stripe
  endpoint:
    path: /integrations/integration-reference/stripe
    method: GET
- name: affirm
  endpoint:
    path: /integrations/integration-reference/affirm
    method: GET
- name: stripe
  endpoint:
    path: /integrations/integration-reference/stripe
    method: GET
    data_selector: payment_information
    params: {}
- name: affirm
  endpoint:
    path: /integrations/integration-reference/affirm
    method: GET
    data_selector: payment_information
    params: {}
- name: phone_number
  endpoint:
    path: /adding-questions-and-content/question-reference/phone-number
    method: GET
    data_selector: records
    params: {}
- name: phone_number
  endpoint:
    path: /phone-number
    method: GET
    data_selector: valid_phone_numbers
    params: {}
- name: postal_code
  endpoint:
    path: /adding-questions-and-content/question-reference/postal-code
    method: GET
- name: postal_code
  endpoint:
    path: /adding-questions-and-content/question-reference/postal-code
    method: GET
    data_selector: ZIP code
    params: {}
- name: questions
  endpoint:
    path: /api/v1/questions
    method: GET
    data_selector: data
    params: {}
- name: SSN
  endpoint:
    path: /ssn
    method: GET
    data_selector: ssn_data
- name: signature
  endpoint:
    path: /signature
    method: POST
    data_selector: signature_data
- name: SSN
  endpoint:
    path: /adding-questions-and-content/question-reference/ssn
    method: GET
    data_selector: question
- name: yes_no_question
  endpoint:
    path: /adding-questions-and-content/question-reference/yes-no
    method: GET
    data_selector: questions
    params: {}
- name: next_button
  endpoint:
    path: /next-button
    method: GET
    data_selector: settings
    params: {}
- name: video_content
  endpoint:
    path: /video/content
    method: POST
    data_selector: video
    params: {}
- name: next_button
  endpoint:
    path: /adding-questions-and-content/content-reference/next-button
    method: GET
    data_selector: content
    params: {}
- name: divider
  endpoint:
    path: /adding-questions-and-content/content-reference/divider
    method: GET
    data_selector: records
- name: redirects
  endpoint:
    path: /redirects
    method: GET
    data_selector: redirects
    params: {}
- name: endings
  endpoint:
    path: /endings
    method: GET
    data_selector: endings
    params: {}
- name: field_validation
  endpoint:
    path: /field-validation
    method: GET
    data_selector: validators
    params: {}
- name: JSON schema
  endpoint:
    path: /flow-api/client/{CLIENT_ID}/flow/{FLOW_LABEL}/variant/{VARIANT_LABEL}/revision/{VARIANT_REVISION_UUID}/schema.json
    method: GET
    data_selector: properties
- name: flow_schema
  endpoint:
    path: /api/v1/schemas
    method: GET
    data_selector: schemas
- name: event_subscription
  endpoint:
    path: /api/event_subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: event_subscription
  endpoint:
    path: /event-subscriptions
    method: POST
    data_selector: event
    params: {}
- name: form_schema
  endpoint:
    path: /flow-api/client/{CLIENT_ID}/flow/{FLOW_LABEL}/variant/{VARIANT_LABEL}/revision/{VARIANT_REVISION_UUID}/schema.json
    method: GET
    data_selector: schema
- name: event_subscription
  endpoint:
    path: /event-subscriptions
    method: POST
    data_selector: events
    params: {}
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: event
- name: payload
  endpoint:
    path: /payload
    method: GET
    data_selector: payload
- name: responses
  endpoint:
    path: /api/v1/responses
    method: GET
    data_selector: data
    params: {}
- name: flow_content
  endpoint:
    path: /flows/content
    method: GET
    data_selector: flows
    params: {}
- name: Next button
  endpoint:
    path: /adding-questions-and-content/content-reference/next-button
    method: GET
- name: Skip button
  endpoint:
    path: /conditions-and-logic#optional
    method: GET
- name: Previous button
  endpoint:
    path: /adding-questions-and-content/content-reference/previous-button
    method: GET
- name: Exit button
  endpoint:
    path: /publishing-and-deployment/embedding
    method: GET
- name: Restart button
  endpoint:
    path: /adding-questions-and-content/content-reference/restart-button
    method: GET
- name: Default buttons
  endpoint:
    path: /styling/customizing-appearance/content-area-and-form-layout
    method: GET
- name: button_options
  endpoint:
    path: /adding-questions-and-content/content-reference/next-button
    method: GET
    data_selector: button_options
    params: {}
- name: typography
  endpoint:
    path: /theme/typography
    method: GET
    data_selector: fonts
    params: {}
- name: color_variables
  endpoint:
    path: /theme/variables/colors
    method: POST
    data_selector: color_variables
    params: {}
- name: dimension_variables
  endpoint:
    path: /theme/variables/dimensions
    method: POST
    data_selector: dimension_variables
    params: {}
- name: color_variables
  endpoint:
    path: /styling/customizing-appearance/color-and-dimension-variables
    method: GET
    data_selector: color_variables
    params: {}
- name: dimension_variables
  endpoint:
    path: /styling/customizing-appearance/color-and-dimension-variables
    method: GET
    data_selector: dimension_variables
    params: {}
- name: responses
  endpoint:
    path: /api/v1/responses
    method: GET
    data_selector: data
    params: {}
- name: progress_bar
  endpoint:
    path: /progress/bar
    method: GET
    data_selector: progress
    params: {}
- name: comparison_cards
  endpoint:
    path: /comparison_cards
    method: GET
- name: Step Animation Style
  endpoint:
    path: /step-animation-style
    method: GET
- name: variant_settings
  endpoint:
    path: /form-behavior-settings/variant-settings
    method: GET
- name: select_component
  endpoint:
    path: /css/select_component
    method: GET
    data_selector: components
    params: {}
- name: buttons
  endpoint:
    path: /css/buttons
    method: GET
    data_selector: button_styles
    params: {}
- name: dropdowns
  endpoint:
    path: /css/dropdowns
    method: GET
    data_selector: dropdown_styles
    params: {}
- name: text_inputs
  endpoint:
    path: /css/text_inputs
    method: GET
    data_selector: input_styles
    params: {}
- name: dynamic_group_ranking
  endpoint:
    path: /api/group-ranking
    method: GET
    data_selector: ranking
- name: variant_settings
  endpoint:
    path: /form-behavior-settings/variant-settings
    method: GET
- name: variables
  endpoint:
    path: /api/v1/variables
    method: GET
    data_selector: data
    params: {}
- name: variables
  endpoint:
    path: /api/variables
    method: GET
    data_selector: data
- name: returning_responder_behavior
  endpoint:
    path: /form-behavior-settings/variant-settings/returning-responder-behavior
    method: GET
    data_selector: settings
- name: group_ranking
  endpoint:
    path: /group-ranking
    method: GET
    data_selector: ranking
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: external_variable
  endpoint:
    path: /external_variables
    method: GET
    data_selector: variables
    params: {}
- name: responses
  endpoint:
    path: /api/v1/responses
    method: GET
    data_selector: data
    params: {}
- name: responses
  endpoint:
    path: /responses
    method: GET
    data_selector: responses
- name: external_variable
  endpoint:
    path: /importing-data/url-parameters
    method: GET
    data_selector: external_variables
    params: {}
- name: calculated_variables
  endpoint:
    path: /response-data-collection-and-management/variable-schema/calculated-answers
    method: GET
    data_selector: variables
    params: {}
- name: system_library_variables
  endpoint:
    path: /system/library/variables
    method: GET
    data_selector: variables
- name: responses
  endpoint:
    path: /responses
    method: GET
    data_selector: responses
    params: {}
- name: URL parameters
  endpoint:
    path: /importing-data/url-parameters
    method: GET
    data_selector: content
    params: {}
- name: environment
  endpoint:
    path: /flow/<flow-label>/variant/main
    method: GET
    data_selector: flow
    params:
      formsortEnv: staging
- name: POST body
  endpoint:
    path: /importing-data/post-body
    method: POST
    data_selector: form data
- name: split_testing
  endpoint:
    path: /analytics-and-attribution/split-testing
    method: GET
    data_selector: content
    params: {}
- name: production
  endpoint:
    path: /integrations/integration-reference
    method: GET
- name: staging
  endpoint:
    path: /integrations/integration-reference
    method: GET
- name: flow
  endpoint:
    path: /flow/<flow-label>/variant/main
    method: GET
    params:
      formsortEnv: staging
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: embed_flow
  endpoint:
    path: /loadFlow
    method: POST
    data_selector: answers
    params: {}
- name: roles_and_permissions
  endpoint:
    path: /workspace-management/accounts/roles-and-permissions
    method: GET
- name: user_groups
  endpoint:
    path: /managing-response-access/user-groups
    method: GET
- name: access_policies
  endpoint:
    path: /managing-response-access/access-policies
    method: GET
- name: specification
  endpoint:
    path: /alpha/spec
    method: GET
- name: flows
  endpoint:
    path: /alpha/flows
    method: GET
- name: variants
  endpoint:
    path: /alpha/flows/{flowLabel}/variants
    method: GET
- name: environments
  endpoint:
    path: /alpha/flows/{flowLabel}/environments
    method: GET
- name: deployments
  endpoint:
    path: /alpha/flows/{flowLabel}/variants/{variantLabel}/deployments
    method: GET
- name: themes
  endpoint:
    path: /alpha/themes
    method: GET
- name: variant_revision
  endpoint:
    path: /alpha/variant-revisions/{uuid}
    method: GET
- name: create_deployment
  endpoint:
    path: /alpha/deployment
    method: POST
- name: analytics_events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
- name: analytics_events
  endpoint:
    path: /integrations/getting-data-out/analytics
    method: POST
    data_selector: payload
- name: submission_frequencies
  endpoint:
    path: /submission_frequencies
    method: GET
    data_selector: frequencies
- name: answers
  endpoint:
    path: /streaming-api
    method: POST
    data_selector: answers
- name: Obtain specification
  endpoint:
    path: /alpha/spec
    method: GET
- name: List flows
  endpoint:
    path: /alpha/flows
    method: GET
- name: List variants for a flow
  endpoint:
    path: /alpha/flows/{flowLabel}/variants
    method: GET
- name: List environments for a flow
  endpoint:
    path: /alpha/flows/{flowLabel}/environments
    method: GET
- name: List deployments of a particular variant
  endpoint:
    path: /alpha/flows/{flowLabel}/variants/{variantLabel}/deployments
    method: GET
- name: List available themes
  endpoint:
    path: /alpha/themes
    method: GET
- name: Get details of a specific variant revision
  endpoint:
    path: /alpha/variant-revisions/{uuid}
    method: GET
- name: Create a new deployment of a variant revision
  endpoint:
    path: /alpha/deployment
    method: POST
- name: uploads
  endpoint:
    path: /{{YOUR_BUCKET_NAME}}
    method: PUT
    data_selector: Object URL
- name: analytics_events
  endpoint:
    path: /integrations/getting-data-out/analytics
    method: GET
    data_selector: events
- name: FlowLoaded
  endpoint:
    path: /integrations/integration-reference/google-tag-manager#configuring-triggers
    method: POST
    data_selector: events
    params: {}
- name: submission_frequencies
  endpoint:
    path: /integrations/getting-data-out/submission-frequencies
    method: GET
    data_selector: submission_frequencies
    params: {}
- name: Sentry
  endpoint:
    path: /sentry
    method: POST
    data_selector: error_reports
    params: {}
- name: contacts
  endpoint:
    path: /contacts/v1/lists/all/contacts/all
    method: GET
    data_selector: contacts
- name: answers
  endpoint:
    path: /insert
    method: POST
    data_selector: answers
- name: campaign_key
  endpoint:
    path: /integrations/jornaya
    method: POST
    data_selector: campaign_key
    params: {}
- name: answer_set
  endpoint:
    path: /answer_set
    method: INSERT
    data_selector: answers
    params: {}
- name: uploaded_files
  endpoint:
    path: /{{YOUR_BUCKET_NAME}}
    method: PUT
    data_selector: Object URL
- name: FlowLoaded
  endpoint:
    path: /integrations/integration-reference/google-tag-manager#configuring-triggers
    method: GET
    data_selector: events
    params: {}
- name: Jornaya Lead ID
  endpoint:
    path: /api/jornaya/lead-id
    method: GET
    data_selector: lead_id
    params: {}
- name: Salesforce Object
  endpoint:
    params: {}
- name: form_answers
  endpoint:
    path: /integrations/getting-data-out
    method: POST
    data_selector: answers
    params: {}
- name: answer_set
  endpoint:
    path: /answer_set
    method: INSERT
    data_selector: answers
    params: {}
- name: answer_set
  endpoint:
    path: /path/to/answer_set
    method: INSERT
    data_selector: data
    params: {}
- name: uploads
  endpoint:
    path: /formsort
    method: POST
    data_selector: Object URL
    params: {}
- name: webhook
  endpoint:
    path: /webhook
    method: POST
    data_selector: answers
    params: {}
- name: s3_bucket
  endpoint:
    path: /adding-questions-and-content/question-reference/file-upload
    method: POST
    data_selector: bucket_info
    params: {}
- name: form_answers
  endpoint:
    path: /integrations/getting-data-out
    method: POST
    data_selector: answers
    params: {}
- name: FlowLoaded
  endpoint:
    path: /integrations/integration-reference/google-tag-manager#configuring-triggers
    method: GET
    data_selector: records
- name: certificates
  endpoint:
    path: /certificates
    method: GET
    data_selector: records
- name: TrustedForm Certificate
  endpoint:
    path: /trustedform/certificate
    method: GET
    data_selector: certificate_url
- name: webhook
  endpoint:
    path: /webhook
    method: POST
    data_selector: answers
    params: {}
- name: FlowLoaded
  endpoint:
    path: /integrations/integration-reference/google-tag-manager#configure-sending-events-in-formsort
    method: GET
    data_selector: events
    params: {}
- name: GA4 Google Tag
  endpoint:
    path: /integrations/integration-reference/google-tag-manager#ga4-google-tag
    method: GET
    data_selector: tags
    params: {}
- name: GA4 Event Tag
  endpoint:
    path: /integrations/integration-reference/google-tag-manager#ga4-event-tag
    method: GET
    data_selector: event_tags
    params: {}
notes:
- Any GA4 properties must be loaded through our Google Tag Manager integration.
- Users will still have the option to load Universal Analytics properties independently
  of GTM.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- API variables can be used to fetch data from a server that returns JSON responses.
- Formsort does not currently support redirecting users back in to the same flow that
  the user was redirected out of.
- Responders might end the flow at different points, depending on the experience built
  for them.
- You can configure your confirmation text in Settings > Strings > Confirmation Text.
- Manage the data you are collecting from responders and sending to your integrations.
- Ordering of answer submissions is not guaranteed.
- We cannot guarantee only-once delivery of answer submissions.
- All answers are encrypted and HIPAA-compliant.
- Enterprise teams can opt out of storage entirely, relying solely on external integrations.
- Incomplete sessions are stored separately for session continuity.
- UUID is automatically generated by Formsort when a user loads a form for the first
  time and is stored in their browser’s localStorage.
- You can provide your own responder UUID via URL parameter or HTML POST body.
- Deployment is the final step that makes your latest changes live and accessible,
  and also creates a variant revision of your form.
- Deployment creates a unique 36-character variant_revision_uuid that represents the
  exact state of the variant at the time of deployment.
- When you deploy or redeploy a variant, Formsort creates a unique 36-character variant_revision_uuid.
- You can only revert to revisions that have been deployed—drafts aren’t available
  for reversion.
- Steps are containers for questions and content.
- Each step has its own settings, logic, styling, and redirect behavior.
- 'Cut, copy, and paste work whenever your have a group, step, question, or variable
  selected: within flows, or even between flows.'
- Requires OAuth2 authentication setup.
- Requires OAuth2 authentication setup
- Rate limits apply to API usage
- Requires setup of connected app in Formsort
- Addresses are sometimes tedious to type, so you can use the Google Places API to
  auto-complete addresses, by providing your API key.
- The answer to a date question is stored as Formsort subtype datetime and are always
  formatted as ISO 8601.
- Collects various files from the responder.
- You need to set up a S3 bucket or GCS bucket to specify where the file will be stored.
- You need to set up an S3 bucket or GCS bucket to specify where the file will be
  stored.
- Formsort supports dozens of question types out of the box.
- You can build just the single question you need and plug it into your existing flow.
- Uses Custom Question API for embedding custom questions.
- You can whitelist MIME types when generating signed upload URLs.
- Allows users to upload images taken by a camera.
- Requires setup of an S3 or GCS bucket for file storage.
- Filename patterns can include templated variables.
- This question type is used for situations when you are looking for a numerical answer.
- You can force the responder to pick numbers within a desired range by enabling Minimum
  value? or Maximum value? options.
- Formsort does not store credit card information - we use the third-party payment
  provider to obtain a payment token that is provided as an answer.
- Enabling Show input mask formats the input as (000)-000-0000.
- International option allows responders to enter numbers outside of the U.S. format.
- Allowing multiple answers lets responders provide more than one phone number.
- Input mask formats the input as (000)-000-0000
- International option allows responder to enter numbers outside U.S. format
- Default country option can be enabled to change the default country phone number
- Allow multiple answers lets responders type more than one phone number
- Formsort currently only supports 5 digit ZIP codes.
- Uses OAuth2 with refresh token — requires setup of connected app in Formsort
- Providing a Google Places API key will allow autocompleting the remainder of the
  address parts from the value that the responder types into the first field.
- Your API key must permit the Maps Javascript API and GeoCode API in addition to
  the Places API if using Guess postal code.
- Take special care with collecting social security numbers and other sensitive data.
- 'Show input mask: This will show _ _ _ - _ _ - _ _ _ _ when entering the SSN'
- 'Hide characters: This will replace previously entered characters with a bullet
  point (•) to hide sensitive data.'
- Maximum size for the video content is 10MB.
- Video-sharing websites, such as Youtube and Vimeo, are not available as a URL option.
- Map content is drawn directly from Google Maps. In order to display a map, you need
  to have a Google maps API key.
- The next button can be customized when placed inline with content.
- If the next button is clicked while there are unanswered questions, it scrolls to
  the first unanswered question.
- The maximum size for the video content is 10MB.
- In order to display a map, you need to have a Google maps API key.
- We generally recommend using a styled last step or redirect URL instead of plain
  confirmation text for better user experience and branding consistency.
- Templated variables must be defined before use.
- If a variable is missing, its name will be shown as-is.
- Redirects are especially helpful when there are existing links still pointing to
  the archived flow.
- Flow starts are counted at the workspace level — this includes all flows and their
  variants.
- Once the monthly limit is reached, your workspace may incur overage charges.
- Only the first validation error is shown—custom functions exit at the first return.
- Some objects may return nulls in deeply nested fields
- Content library items are not immediately updated when the prototype is updated.
- Ensure form variants stay conformant to a defined schema.
- Any attempt to publish any variant within the flow must conform to all schemas defined
  within.
- Each variant revision is available as a JSON schema, which describes the possible
  answer payloads.
- Only triggering event available is the `variant_revision_published` event.
- Imported flow contents may still display validation errors within the studio itself,
  such as dependency errors, where an answer is used before it is collected. These
  must be resolved before you can deploy the flow.
- This is currently in development, and may not be present for 100% of flows as we
  roll it out.
- Advanced users may work directly with the underlying flow content data—a structured
  JSON format.
- By default, the Next button will only appear when the user has answered all the
  required questions.
- You can opt to 'Always show next button' by enabling the setting under Behavior.
- Requires setup of OAuth application in Formsort
- API may have rate limits that need to be respected
- Checkmarks can be edited on a per-UI state basis.
- 'Each of the above three configurations can be further styled on a per-UI state
  basis: default and hover.'
- The horizontal overflow behavior selector controls how the cards fill the space
  on the step, and has two settings, wrap and scroll.
- Progress indicators such as completion bars and step counts are helpful in giving
  responders a sense of how far along in the flow they are.
- The sizes, colors, and other aspects of layout types can be further customized within
  the style editor.
- CSS overrides are an escape hatch! Please use our theme editor tools as much as
  possible.
- Use to style all select questions that are using buttons.
- Use to override the layout of a specific Select question.
- 'Each of the three configurations can be further styled on a per-UI state basis:
  default and hover.'
- 'The horizontal overflow behavior selector controls how the cards fill the space
  on the step, and has two settings: wrap and scroll.'
- Transitions between steps and questions can be customized using animations.
- URL navigation is not currently supported in embedded flows.
- Previous submissions to your data store remain untouched.
- Responders won’t see the restart screen if the form ends with a redirect.
- Formsort stores a responder’s answers for about 3 weeks.
- Returning responder behavior can be configured in the Settings tab.
- Be careful about conflicting sources of truth when it comes to determining which
  groups are enabled.
- Don't return orderings that would violate dependencies between groups.
- Requires setup of OAuth credentials for API access
- Ensure to handle personally-identifying information correctly.
- Configuring a domain is required to store answers in cookies.
- This feature is disabled by default.
- After 3 weeks, stored data associated with their responder_uuid is purged.
- Some objects like Contact may return nulls in deeply nested fields
- External variables are automatically included in answers payload delivery, if they
  are provided in the URL at flow load.
- API lookups can use answers collected with the flow as request headers or query
  parameters.
- API lookup requests come directly from the responder's browser.
- This feature is disabled by default, as Amplitude, Google Analytics, Google Tag
  Manager, and Segment can all be configured to send all data during an analytic event.
- Requires OAuth2 authentication.
- Ensure correct scope is set for API access.
- Responses are encrypted and stored in compliance with HIPAA standards.
- Notifications are sent to Formsort users, not form responders.
- 'Calculated variables behave just like any other answer: they can be used for conditions,
  templated into most text, and are sent to your analytics and integrations.'
- Enabling Blocks advancing from current step? in the configuration menu of your calculated
  variable will prevent the user from advancing past a step until calculations are
  finished processing.
- The contents of URLs are visible in the URL bars of browsers, and are often logged
  by third-party analytics that you might load within Formsort.
- POST bodies are part of the HTTP body and are encrypted with HTTPS.
- The POST must be a navigation request.
- API-lookup http requests come directly from the responder's browser.
- Only new traffic is split among variants according to weight.
- All answers are automatically saved and accessible from the Responses tab in the
  Formsort dashboard.
- Non-production environments are only available to clients that are on the Enterprise
  plan.
- Flowstarts do not count in staging or any new environments created.
- Setting a responder UUID is not required, since Formsort automatically generates
  one at the responder's first session.
- Embedding a flow within a larger page can be easy to set up, but has some caveats.
- URL navigation is not currently supported for embedded flows.
- When using an embed, the embed script must first load, which might lead to a slightly-slower
  initial load time.
- If your embedded flow looks small in mobile screen, set the viewport meta tag in
  your main site.
- The optional config object has properties for authentication and styling.
- Authentication is configured on a flow-by-flow basis and can be configured on a
  per-environment basis.
- An authenticated flow will verify the ID token when uploading and downloading answers.
- The web embed will emit an 'unauthorized' event when the 'idToken' is missing or
  invalid.
- Built-in analytics only measure traffic in production environments.
- Uses A/B testing to improve flow metrics.
- Returning responders will still get directed to the variants they have previously
  interacted with due to variant UUID caching.
- Whitelisting is required to prevent unknown domains from hosting your flow.
- Localhost cannot be whitelisted.
- Have the embed configuration pass in `formsortEnv=dev` as a query parameter.
- Make sure to save after adding the domain!
- The preview window simulates viewport dimensions from average desktop screen to
  compact mobile display.
- If you are having trouble progressing in the preview window, try starting from the
  beginning and filling out all answers.
- Flowstarts do not count in the staging environment.
- Embedding a flow within a larger page can be easy to set up, but has some caveats
- Using a custom domain allows for URL navigation if enabled in settings.
- Embedding may lead to slightly-slower initial load time due to additional requests.
- Set the viewport meta tag in the main site for better mobile display.
- semantic names for your answer variables.
- set readable descriptions for your answer variables.
- set data classifications for your answer variables.
- set Step IDs for all your steps, especially if you’re using any analytics integrations.
- set savepoints, if the submission frequency for any integrations is On savepoint.
- Accounts are tied to a specific business entity.
- An authenticated flow will verify the ID token when uploading answers and when downloading
  answers for returning responders.
- Make sure you are passing the ID token JWT, not the Access token JWT.
- We recommend embedding forms using our web-embed or react embed methods.
- Only Enterprise plan allows access to multiple environments (staging, dev, etc.)
- Localhost cannot be whitelisted in Formsort
- The clientLabel and flowLabel props are also required.
- Uses OAuth2 — requires setup of connected app in Formsort
- When signing is enabled, Formsort will send the following additional HTTP headers
  on webhook requests.
- The platform does not contain an explicit Viewer role. Rather, all users on Formsort
  have the permission to view flows, by default.
- Changes to domains take time to go live so setting a few links up front may save
  you time later.
- These records will expire after 72 hours.
- Some runtime errors may be caused by flow logic itself, within your flows.
- Common example of runtime errors is a calculated variable that throws an exception
  on certain inputs.
- This feature is automatically enabled for all new workspaces, for any workspaces
  made before Dec 7, 2022 this feature must be manually enabled.
- BigQuery streaming API is not available in the Google Cloud's free tier.
- Formsort recommends using debounced setting to reduce load.
- While we guarantee at-least-once delivery of all answer submissions, regardless
  of frequency, we cannot guarantee only-once delivery.
- Only binary uploads are placed in Google Cloud Storage.
- CORS settings must be configured for the bucket.
- A Google account is required to authenticate the integration and to insert answers.
- Edit permissions are required for the sheet, and losing permissions or access to
  the sheet will cause answers to not be recorded.
- When signing is enabled, Formsort will send additional HTTP headers on webhook requests.
- By default, answers are not included in analytics event payloads.
- If 'send answers' is checked, answer values will be nested in an 'answers' object
  of the event payload.
- Ensure to save changes after enabling events.
- Remember to re-publish your flows once you update any integration settings.
- Field type should be single-line text.
- Make sure `Require unique values for this property` is checked.
- The BigQuery streaming API is not available in the Google Cloud's free tier.
- Formsort recommends using the debounced setting to reduce the load.
- The casing of the campaign key string must match what is provided by the Jornaya
  campaign script.
- Integrations are not updated until a variant is re-deployed.
- The responder UUID is used to identify the session.
- Formsort recommends using debounced insert frequency to reduce load.
- The Formsort user should not have administrative permissions.
- The GCS bucket can only provide write access to Formsort.
- Make sure your Redshift server is set to public! By default, Redshift servers in
  AWS are set to private.
- Choose at least FlowLoaded under enabled events.
- Enabled Events options control the events within Formsort that send dataLayer.push
  variables.
- The S3 bucket can only provide write access to Formsort, so the data uploaded can
  be secure.
- Uploaded assets will reside within a formsort/ folder.
- Bucket should exactly match the way the bucket is named in AWS, but Region only
  needs to be written using the dash-separated name, e.g. 'us-east-2'.
- By default, new buckets do not allow public access.
- Bucket versioning is disabled by default.
- Access to the Salesforce integration is invite-only during testing.
- By default, no answers are sent to Segment.
- If 'Send answers' is checked, then all non-PII answers will be sent along with each
  event's metadata.
- If 'Send PII' is checked, PII answers will be sent along with the answers.
- Formsort recommends using debounced row insert frequency to reduce load.
- Ensure that you use the correct keys based on your environment
- Formsort backend system will exclusively connect to Redshift from the static IP
  18.217.92.196.
- Formsort recommends using the Debounced setting to reduce the load.
- If you enable 'Allow charging the card immediately', you can collect payments using
  a fixed amount, a variable amount, or products from your Stripe Product Catalog.
- Currently, only Phone and Email variables are supported for transactions.
- The Stripe integration will not be functional in the Live Preview window.
- Always make sure to test before going live.
- To enable TrustedForm, access TrustedForm from the Integrations section of a flow.
- Make sure that enabled is checked.
- Specify a base path like /prod for the production environment to distinguish from
  assets uploaded to other environments.
- Formsort recommends using the Abandoned posting frequency to reduce load on the
  webhook.
- Webhook requests are sent from the static IP 18.217.92.196.
- New buckets do not allow public access by default.
- We guarantee at-least-once delivery of all answer submissions, regardless of frequency.
- GTM will always be loaded as long as a Container ID is provided
- Enabled Events control the events within Formsort that send dataLayer.push variables
- Currently, Stripe will not load in the Live Preview of a form.
- Always make sure to test before going live!
- Requires valid TrustedForm account credentials.
- To enable TrustedForm, ensure that enabled is checked and re-deploy the flow from
  Formsort.
- If using custom domains, add those domains to TrustedForm.
- Formsort recommends using the 'Abandoned' posting frequency to reduce the load on
  the webhook.
- The Formsort backend system will exclusively send webhook requests from the static
  IP 18.217.92.196.
- All integration targets should be designed with idempotency in mind
- GTM container ID should start with 'GTM-'
- Choose at least 'FlowLoaded' under enabled events
- Changes in the Integration menu are not automatically deployed to variants
- In your GA4 properties, you can also check the reception of these events using DebugView.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Token may be expired or invalid.'
- '400 Bad Request: Check request parameters.'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Invalid token or missing authentication'
- '429 Too Many Requests: Rate limit exceeded'
- Prompting user to enter a valid phone number if input is not in expected format.
- 'INVALID_PHONE_NUMBER: Prompt user to enter a valid phone number'
- If the responder enters more than 5 digits, there will be an error message displayed.
- 'MISSING_VALUES: If a flow does not collect an answer, deployment will be prevented.'
- 'INCORRECTLY_TYPED_VALUES: If a flow contains an answer keyed with one of the schema
  properties, but the answer is not of the correct type, deployment will be blocked.'
- '400: Invalid flow content format'
- '429 Too Many Requests: Rate limit exceeded, back off and retry'
- '401 Unauthorized: Check client credentials or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check your credentials'
- '404 Not Found: Verify the endpoint'
- '401 Unauthorized: Verify token and scopes.'
- '404 Not Found: Endpoint may not exist.'
- CORS restrictions may apply if your server enforces Cross-Origin Resource Sharing.
- 'unauthorized: ID token is missing or invalid'
- 'unauthorized: emitted when the embedded flow has an authentication requirement
  but the idToken is missing or invalid.'
- Failures to evaluate calculated variables.
- Failures to access or process API variables.
- Missing required external answers at load time.
- '401 Unauthorized: Recheck service account permissions'
- 'Permission denied: Check bucket permissions.'
- 'Invalid bucket name: Ensure the bucket name is correctly specified.'
- Formsort cannot guarantee response delivery if Google API quota is reached.
- User should not have SELECT access.
- User must have INSERT permissions.
- USAGE right on the sequence underpinning the primary key is required.
- '401 Unauthorized: Recheck API key or permissions'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: Ensure the endpoint is correct.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Auth0
client:
  base_url: https://studio.formsort.com
source_metadata: null
