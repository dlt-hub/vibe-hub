resources:
- name: user
  endpoint:
    path: /user
    method: GET
- name: contacts
  endpoint:
    path: /contacts
    method: GET
- name: chats
  endpoint:
    path: /chats
    method: GET
- name: messages
  endpoint:
    path: /messages
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: SkypeUser
  endpoint:
    path: /skype/user
    method: GET
    data_selector: public_properties
- name: SkypeContact
  endpoint:
    path: /skype/contact
    method: GET
    data_selector: contact_properties
- name: SkypeBotUser
  endpoint:
    path: /skype/bot
    method: GET
    data_selector: bot_properties
- name: SkypeContact
  endpoint:
    path: /contacts
    method: GET
- name: SkypeChats
  endpoint:
    path: /chats
    method: GET
- name: SkypeSettings
  endpoint:
    path: /settings
    method: GET
- name: SkypeEvent
  endpoint:
    path: /events
    method: GET
- name: conversation
  endpoint:
    path: /conversations
    method: GET
    data_selector: conversations
- name: SkypeMsg
  endpoint:
    path: /skype/messages
    method: GET
    data_selector: messages
- name: SkypeUser
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: SkypeContact
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
    params: {}
- name: SkypeContactGroup
  endpoint:
    path: /contactGroups
    method: GET
    data_selector: groups
    params: {}
- name: SkypeRequest
  endpoint:
    path: /skype/request
    method: GET
    data_selector: user
    params: {}
- name: SkypePresenceEvent
  endpoint:
    path: /skype/presence
    method: GET
    data_selector: presence_data
- name: SkypeMessageEvent
  endpoint:
    path: /skype/messages
    method: GET
    data_selector: messages_data
- name: SkypeChatUpdateEvent
  endpoint:
    path: /skype/chat/update
    method: GET
    data_selector: chat_update_data
- name: chats
  endpoint:
    path: /chats
    method: GET
    data_selector: conversations
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
- name: message
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
- name: contacts
  endpoint:
    path: /users/contacts
    method: GET
    data_selector: contacts
- name: messages
  endpoint:
    path: /conversations/messages
    method: GET
    data_selector: messages
- name: File
  endpoint:
    path: /skpy/msg/File
    method: GET
    data_selector: urlContent
    params: {}
- name: SkypeImageMsg
  endpoint:
    path: /skpy/msg/SkypeImageMsg
    method: GET
    data_selector: image content
    params: {}
- name: SkypeAudioMsg
  endpoint:
    path: /skpy/msg/SkypeAudioMsg
    method: GET
    data_selector: audio content
    params: {}
- name: SkypeVideoMsg
  endpoint:
    path: /skpy/msg/SkypeVideoMsg
    method: GET
    data_selector: video content
    params: {}
- name: SkypeCallMsg
  endpoint:
    path: /skpy/msg/SkypeCallMsg
    method: GET
    data_selector: call state
    params: {}
- name: SkypePropertyMsg
  endpoint:
    path: /skpy/msg/SkypePropertyMsg
    method: GET
    data_selector: property changes
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
- name: SkypeEvent
  endpoint:
    path: /skype/event
    method: GET
    data_selector: events
- name: SkypePresenceEvent
  endpoint:
    path: /skype/presence
    method: GET
    data_selector: presence
- name: SkypeEndpointEvent
  endpoint:
    path: /skype/endpoint
    method: GET
    data_selector: endpoints
- name: SkypeTypingEvent
  endpoint:
    path: /skype/typing
    method: GET
    data_selector: typing
- name: SkypeMessageEvent
  endpoint:
    path: /skype/message
    method: GET
    data_selector: messages
- name: SkypeNewMessageEvent
  endpoint:
    path: /skype/newMessage
    method: GET
    data_selector: newMessages
- name: SkypeEditMessageEvent
  endpoint:
    path: /skype/editMessage
    method: GET
    data_selector: editedMessages
- name: SkypeCallEvent
  endpoint:
    path: /skype/call
    method: GET
    data_selector: calls
- name: SkypeChatUpdateEvent
  endpoint:
    path: /skype/chat/update
    method: GET
    data_selector: chatUpdates
- name: SkypeChatMemberEvent
  endpoint:
    path: /skype/chat/member
    method: GET
    data_selector: chatMembers
- name: chats
  endpoint:
    path: /skype/chats
    method: GET
- name: messages
  endpoint:
    path: /chats/{chat_id}/messages
    method: GET
    data_selector: messages
- name: event
  endpoint:
    path: /events
    method: GET
- name: chats
  endpoint:
    path: /chats
    method: GET
- name: messages
  endpoint:
    path: /chats/{chat_id}/messages
    method: GET
- name: SkypeServerTestBase
  endpoint:
    path: /test/server/SkypeServerTestBase
    method: GET
- name: SkypeServerReadTest
  endpoint:
    path: /test/server/SkypeServerReadTest
    method: GET
- name: SkypeServerWriteTest
  endpoint:
    path: /test/server/SkypeServerWriteTest
    method: GET
- name: SkypeServerEventTest
  endpoint:
    path: /test/server/SkypeServerEventTest
    method: GET
- name: SkypeServerTestBase
  endpoint:
    path: /test/server/SkypeServerTestBase
    method: GET
- name: SkypeServerReadTest
  endpoint:
    path: /test/server/SkypeServerReadTest
    method: GET
- name: SkypeServerWriteTest
  endpoint:
    path: /test/server/SkypeServerWriteTest
    method: GET
- name: SkypeServerEventTest
  endpoint:
    path: /test/server/SkypeServerEventTest
    method: GET
- name: contact_list
  endpoint:
    path: /contacts/v2/users/{id}/contacts
    method: GET
    data_selector: contacts
- name: blocklist
  endpoint:
    path: /contacts/v2/users/{id}/blocklist
    method: GET
    data_selector: blocklist
- name: groups
  endpoint:
    path: /contacts/v2/users/{id}/groups
    method: GET
    data_selector: groups
- name: all_contact_info
  endpoint:
    path: /contacts/v2/users/{id}
    method: GET
    data_selector: ''
- name: conversations
  endpoint:
    path: /v1/users/ME/conversations
    method: GET
    data_selector: conversations
    params:
      startTime: '0'
      view: msnp24Equivalent
      targetType: Passport|Skype|Lync|Thread
- name: conversation_details
  endpoint:
    path: /v1/users/ME/conversations/(id)
    method: GET
    data_selector: ''
    params: {}
- name: group_conversation
  endpoint:
    path: /v1/threads/(id)
    method: GET
    data_selector: ''
    params: {}
- name: messages
  endpoint:
    path: /v1/users/ME/conversations/(id)/messages
    method: GET
    data_selector: messages
    params: {}
- name: send_message
  endpoint:
    path: /v1/users/ME/conversations/(id)/messages
    method: POST
    data_selector: ''
    params: {}
- name: contact_list
  endpoint:
    path: /contacts/v2/users/{id}/contacts
    method: GET
    data_selector: contacts
    params:
      id: user identifier of connected account
- name: blocklist
  endpoint:
    path: /contacts/v2/users/{id}/blocklist
    method: GET
    data_selector: blocklist
    params:
      id: user identifier of connected account
- name: groups
  endpoint:
    path: /contacts/v2/users/{id}/groups
    method: GET
    data_selector: groups
    params:
      id: user identifier of connected account
- name: contact_info
  endpoint:
    path: /contacts/v2/users/{id}
    method: GET
    data_selector: contacts
    params:
      id: user identifier of connected account
- name: conversations
  endpoint:
    path: /v1/users/ME/conversations
    method: GET
    data_selector: conversations
    params:
      startTime: '0'
      view: msnp24Equivalent
      targetType: Passport|Skype|Lync|Thread
- name: conversation_details
  endpoint:
    path: /v1/users/ME/conversations/(*string:* *id*)
    method: GET
    data_selector: id
    params: {}
- name: group_conversation_info
  endpoint:
    path: /v1/threads/(*string:* *id*)
    method: GET
    data_selector: id
    params: {}
- name: messages
  endpoint:
    path: /v1/users/ME/conversations/(*string:* *id*)/messages
    method: GET
    data_selector: messages
    params: {}
notes:
- Supports both username/password and token-based authentication.
- Connection may require handling through the underlying connection object.
- Properties differ slightly between the current user and others. Only public properties
  are available here.
- Uses OAuth2 with refresh token — requires setup of connected app in Skype
- Some objects may return nulls in deeply nested fields
- The upstream APIs used here are undocumented and are liable to change.
- These APIs are intended for Skype for Web, which is not designed for automated or
  bulk use.
- API requires OAuth2 authentication
- Uses OAuth2 for authentication
- Uses OAuth2 with refresh token — requires setup of connected app in api
- The upstream APIs used here are undocumented and are liable to change, which may
  cause parts of this library to fall apart in obvious or non-obvious ways.
- These APIs are intended for Skype for Web, an application that is not designed for
  (and will likely defend against) automated or bulk use.
- Messages are sent in plain text by default – pass rich=True to enable parsing of
  Skype’s HTML subset.
- Contact presence events are not sent by default, and you must opt into them by calling
  Skype.subscribePresence() before SkypeEventLoop.loop().
- SOAP login is preferred; it’s a newer authentication flow that supports accounts
  using two-factor authentication, however it requires Skype accounts to be linked
  to a Microsoft account with a working Outlook.com email address.
- Live authentication is a legacy flow that automates the browser login page; it’s
  brittle and known to cause issues for some users, but it works for older accounts
  without a linked Microsoft account, and accepts a wider range of credentials.
- Classes documented here are used by other parts of the library, and are typically
  not needed for client use of the API.
- Contact presence events are not sent by default, and you must opt into them by calling
  Skype.subscribePresence before SkypeEventLoop.loop.
- Microsoft accounts with two-factor authentication enabled are not supported, and
  will cause a SkypeAuthException to be raised.
- This requires access to a live Skype account, the credentials for which will be
  read from .tokens
- You must also set SKPY_TESTSERVER_RECIP to a contact on the account that should
  receive test messages.
- Microsoft accounts with two-factor authentication enabled are not supported and
  will cause a SkypeAuthException to be raised.
- Skype accounts must be linked to a Microsoft account with an email address, otherwise
  SkypeAuthException will be raised.
- If you make too many authentication attempts, or make significant numbers of other
  requests, you may become temporarily rate limited by the Skype API, or be required
  to complete a captcha to continue.
- Most of the information here is a combination of guesswork, and analysis of Skype
  for Web. There is no official documentation, and therefore no guarantee that the
  definitions below are accurate or complete.
- Some APIs, such as fetching recent conversations or messages, include syncState
  URLs in the response.
- SOAP authentication is used by default. You must provide a Microsoft account email
  address and password (or application-specific password if 2FA is enabled) in order
  to login.
- The suggested and favorite fields only appear if set to true.
- This endpoint is paginated.
errors:
- 'SkypeAuthException: if connecting, and the login request is rejected'
- 'SkypeApiException: if connecting, and the login form can’t be processed'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check token validity'
- '404 Not Found: Ensure the endpoint is correct'
- 'SkypeAuthException: if the login request is rejected'
- 'SkypeApiException: if the login form can’t be processed'
- 'SkypeAuthException: An exception thrown when authentication cannot be completed.'
- 'SkypeRateLimitException: An exception thrown if a limit has been reached.'
- 'SkypeApiException: An exception thrown for errors specific to external API calls.'
- 'wsse:FailedAuthentication - Authentication Failure: The email address or password
  is incorrect.'
- 'wsse:FailedAuthentication - Profile accrual is required: Could be caused by the
  Microsoft account’s primary alias not being an email address.'
- 'Account action required: login with a web browser first.'
- 'HTTP 429, error code 803: auth rate limit exceeded (-5 minute cooldown)'
- 'HTTP 404, error code 729: no endpoint created (need to refresh registration token)'
- 'ConnectionError: HTTPSConnectionPool(host=''flagsapi.skype.com'', port=443)'
auth_info:
  mentioned_objects:
  - SkypeConnection
  - SkypeAuthException
  - SkypeApiException
  - OauthToken
  - AuthProvider
  - NamedCredential
  - SkypeToken
  - Authorize
  - RegToken
  - SkypeAuthProvider
  - SkypeAPIAuthProvider
  - SkypeLiveAuthProvider
  - SkypeSOAPAuthProvider
  - SkypeGuestAuthProvider
  - SkypeRefreshAuthProvider
  - SkypeRegistrationTokenProvider
  - SkypeEventLoop
  - Skype
  - LiveAuthSuccess
  - Skype token
  - Registration token
client:
  base_url: https://api.skype.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.skype.com/oauth2/token
    client_id: '{{ dlt.secrets[''skype_client_id''] }}'
    client_secret: '{{ dlt.secrets[''skype_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''skype_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
