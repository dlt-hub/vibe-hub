resources:
- name: agencies
  endpoint:
    path: /agencies
    method: GET
    data_selector: data
- name: listings
  endpoint:
    path: /listings
    method: GET
    data_selector: data
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
- name: agents
  endpoint:
    path: /agents
    method: GET
    data_selector: data
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
- name: valuations
  endpoint:
    path: /valuations
    method: GET
    data_selector: data
- name: listings
  endpoint:
    path: /agencies/{agency}/listings
    method: GET
    data_selector: '[]'
    params:
      agency: number
- name: create_listing
  endpoint:
    path: /agencies/{agency}/listings
    method: POST
    data_selector: '{}'
    params:
      agency: number
- name: listing
  endpoint:
    path: /listings/{id}
    method: GET
    data_selector: data
    params: {}
- name: update_listing
  endpoint:
    path: /listings/{id}
    method: PUT
    data_selector: data
    params: {}
- name: delete_listing
  endpoint:
    path: /listings/{id}
    method: DELETE
    data_selector: data
    params: {}
- name: agencies
  endpoint:
    path: /agencies
    method: GET
    data_selector: data
- name: widget
  endpoint:
    path: /widget.js
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: listings
  endpoint:
    path: /agencies/{agency}/listings
    method: GET
    data_selector: records
    params:
      agency: number
- name: create_listing
  endpoint:
    path: /agencies/{agency}/listings
    method: POST
    data_selector: null
    params:
      agency: number
- name: projects
  endpoint:
    path: /agencies/{agency}/projects
    method: GET
    data_selector: projects
    params:
      agency: number
- name: listings
  endpoint:
    path: /listings/{id}
    method: GET
    data_selector: data
    params:
      id: number
- name: projects
  endpoint:
    path: /projects/{id}
    method: PUT
    data_selector: success
    params: {}
- name: project_listings
  endpoint:
    path: /projects/{id}/listings
    method: GET
    data_selector: '[]'
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: get_all_agencies
  endpoint:
    path: /agencies
    method: GET
    data_selector: records
- name: create_agency
  endpoint:
    path: /agencies
    method: POST
    data_selector: id
- name: retrieve_agency
  endpoint:
    path: /agencies/{id}
    method: GET
    data_selector: records
- name: update_agency
  endpoint:
    path: /agencies/{id}
    method: PUT
    data_selector: success
- name: projects
  endpoint:
    path: /agencies/{agency}/projects
    method: GET
    data_selector: projects
    params:
      agency: number
- name: create_project
  endpoint:
    path: /agencies/{agency}/projects
    method: POST
    data_selector: id
    params:
      agency: number
- name: retrieve_project
  endpoint:
    path: /projects/{id}
    method: GET
    data_selector: project
    params:
      id: number
- name: projects
  endpoint:
    path: /projects/{id}
    method: PUT
    data_selector: success
    params:
      id: number
- name: project_listings
  endpoint:
    path: /projects/{id}/listings
    method: GET
    data_selector: records
    params:
      id: number
- name: estate
  endpoint:
    path: /estates/{id}
    method: GET
    data_selector: id
    params:
      id: number
- name: extended_estate
  endpoint:
    path: /estates/{id}/extended
    method: GET
    data_selector: id
    params:
      id: number
- name: estate_features
  endpoint:
    path: /estates/{id}/keys
    method: POST
    data_selector: id
    params:
      id: number
      keys: array
- name: transactions
  endpoint:
    path: /agencies/{agency}/transactions
    method: GET
    data_selector: transactions
    params:
      agency: number
- name: create_transaction
  endpoint:
    path: /agencies/{agency}/transactions
    method: POST
    data_selector: data
    params:
      agency: number
- name: agency
  endpoint:
    path: /agencies
    method: GET
    data_selector: records
- name: create_agency
  endpoint:
    path: /agencies
    method: POST
    data_selector: id
- name: retrieve_agency
  endpoint:
    path: /agencies/{id}
    method: GET
    data_selector: records
- name: update_agency
  endpoint:
    path: /agencies/{id}
    method: PUT
    data_selector: success
- name: valuations
  endpoint:
    path: /valuations
    method: GET
    data_selector: valuations
- name: agents
  endpoint:
    path: /agencies/{agency}/agents
    method: GET
    data_selector: records
    params:
      agency: number
- name: enquiries
  endpoint:
    path: /agencies/{agency}/enquiries
    method: GET
    data_selector: records
    params:
      agency: number
- name: addresses
  endpoint:
    path: /addresses/search{?q}
    method: GET
    data_selector: records
    params:
      q: string
- name: valuations
  endpoint:
    path: /valuations
    method: POST
- name: valuation
  endpoint:
    path: /valuations/{id}
    method: GET
    data_selector: id
    params: {}
- name: valuation_update
  endpoint:
    path: /valuations/{id}
    method: PUT
    data_selector: success
    params: {}
- name: valuation_picture
  endpoint:
    path: /valuations/{id}/pictures
    method: POST
    data_selector: ''
    params: {}
- name: estate
  endpoint:
    path: /estates/{id}
    method: GET
    data_selector: records
    params:
      id: number
- name: extended_estate
  endpoint:
    path: /estates/{id}/extended
    method: GET
    data_selector: records
    params:
      id: number
- name: estate_features
  endpoint:
    path: /estates/{id}/keys
    method: POST
    data_selector: records
    params:
      id: number
      keys: array
- name: estimate_report
  endpoint:
    path: /valuations/{id}/report/{language}.pdf
    method: GET
- name: custom_estimate_report
  endpoint:
    path: /valuations/{id}/custom-report/{language}.pdf
    method: POST
- name: market_insights
  endpoint:
    path: /valuations/{id}/data/market-insights
    method: GET
- name: transactions
  endpoint:
    path: /agencies/{agency}/transactions
    method: GET
    data_selector: records
    params:
      agency: number
- name: create_transaction
  endpoint:
    path: /agencies/{agency}/transactions
    method: POST
    data_selector: ''
    params:
      agency: number
- name: valuations
  endpoint:
    path: /valuations
    method: GET
    data_selector: valuations
- name: create_valuation
  endpoint:
    path: /valuations
    method: POST
- name: onlineForSaleListings
  endpoint:
    path: /onlineForSaleListings
    method: GET
    data_selector: HOUSE, APARTMENT
    params: {}
- name: onlineForRentListings
  endpoint:
    path: /onlineForRentListings
    method: GET
    data_selector: HOUSE, APARTMENT
    params: {}
- name: offlineForSaleListings
  endpoint:
    path: /offlineForSaleListings
    method: GET
    data_selector: HOUSE, APARTMENT
    params: {}
- name: offlineForRentListings
  endpoint:
    path: /offlineForRentListings
    method: GET
    data_selector: HOUSE, APARTMENT
    params: {}
- name: listingsForSaleOverTime
  endpoint:
    path: /listingsForSaleOverTime
    method: GET
    data_selector: date, count
    params: {}
- name: listingsForRentOverTime
  endpoint:
    path: /listingsForRentOverTime
    method: GET
    data_selector: date, count
    params: {}
- name: valuation
  endpoint:
    path: /valuations/{id}
    method: GET
    data_selector: id
    params:
      id: number
- name: update_valuation
  endpoint:
    path: /valuations/{id}
    method: PUT
    data_selector: success
    params:
      id: number
- name: add_picture
  endpoint:
    path: /valuations/{id}/pictures
    method: POST
    data_selector: success
    params:
      id: number
- name: estimate_report
  endpoint:
    path: /valuations/{id}/report/{language}.pdf
    method: GET
- name: custom_estimate_report
  endpoint:
    path: /valuations/{id}/custom-report/{language}.pdf
    method: POST
- name: market_insights
  endpoint:
    path: /valuations/{id}/data/market-insights
    method: GET
    data_selector: records
- name: mobility_insights_data
  endpoint:
    path: /valuations/{id}/data/mobility
    method: GET
- name: neighbourhood_data
  endpoint:
    path: /valuations/{id}/data/neighbourhood
    method: GET
- name: transaction_data
  endpoint:
    path: /valuations/{id}/data/similar-transactions
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: mobility_data
  endpoint:
    path: /valuations/{id}/data/mobility
    method: GET
- name: neighbourhood_data
  endpoint:
    path: /valuations/{id}/data/neighbourhood
    method: GET
- name: similar_transactions
  endpoint:
    path: /valuations/{id}/data/similar-transactions
    method: GET
- name: cadastral_map_image
  endpoint:
    path: /valuations/{id}/imagery/map/cadastral.png
    method: GET
- name: street_view_image
  endpoint:
    path: /valuations/{id}/imagery/map/streetview.jpg
    method: GET
- name: market_insights_price_per_square_meters_image
  endpoint:
    path: /valuations/{id}/imagery/market-insights/price-per-square-meter/{language}.png
    method: GET
- name: mobility_score_image
  endpoint:
    path: /valuations/{id}/imagery/mobility/score/{language}.png
    method: GET
- name: mobility_public_transport_image
  endpoint:
    path: /valuations/{id}/imagery/mobility/public-transport/{language}.png
    method: GET
- name: mobility_schools_image
  endpoint:
    path: /valuations/{id}/imagery/mobility/schools/{language}.png
    method: GET
- name: mobility_nearest_cities_image
  endpoint:
    path: /valuations/{id}/imagery/mobility/nearest-cities/{language}.png
    method: GET
- name: neighbourhood_job_seekers_image
  endpoint:
    path: /valuations/{id}/imagery/neighbourhood/job-seekers/{language}.png
    method: GET
- name: neighbourhood_cultural_diversity_image
  endpoint:
    path: /valuations/{id}/imagery/neighbourhood/cultural-diversity/{language}.png
    method: GET
- name: neighbourhood_big_families_image
  endpoint:
    path: /valuations/{id}/imagery/neighbourhood/big-families/{language}.png
    method: GET
- name: neighbourhood_affordability_image
  endpoint:
    path: /valuations/{id}/imagery/neighbourhood/affordability/{language}.png
    method: GET
- name: neighbourhood_singles_image
  endpoint:
    path: /valuations/{id}/imagery/neighbourhood/singles/{language}.png
    method: GET
- name: neighbourhood_population_age_image
  endpoint:
    path: /valuations/{id}/imagery/neighbourhood/population-age/{language}.png
    method: GET
- name: neighbourhood_education_image
  endpoint:
    path: /valuations/{id}/imagery/neighbourhood/education/{language}.png
    method: GET
- name: currency
  endpoint:
    path: /header-currency-1
    method: GET
    data_selector: currencies
- name: estate_detachment
  endpoint:
    path: /header-estate-detachment-1
    method: GET
    data_selector: detachment_types
- name: estate_heating_type
  endpoint:
    path: /header-estate-heating-type-1
    method: GET
    data_selector: heating_types
- name: electricity_inspection_report_type
  endpoint:
    path: /header-electricity-inspection-report-type-1
    method: GET
    data_selector: inspection_report_types
- name: estate_flood_prone_location
  endpoint:
    path: /header-estate-flood-prone-location-1
    method: GET
    data_selector: flood_prone_locations
- name: estate_delineated_area
  endpoint:
    path: /header-estate-delineated-area-1
    method: GET
    data_selector: delineated_areas
- name: country
  endpoint:
    path: /header-country-1
    method: GET
    data_selector: countries
- name: cadastral_map_image
  endpoint:
    path: /valuations/{id}/imagery/map/cadastral.png
    method: GET
- name: street_view_image
  endpoint:
    path: /valuations/{id}/imagery/map/streetview.jpg
    method: GET
- name: market_insights_price_per_square_meters_image
  endpoint:
    path: /valuations/{id}/imagery/market-insights/price-per-square-meter/{language}.png
    method: GET
- name: mobility_score_image
  endpoint:
    path: /valuations/{id}/imagery/mobility/score/{language}.png
    method: GET
- name: mobility_public_transport_image
  endpoint:
    path: /valuations/{id}/imagery/mobility/public-transport/{language}.png
    method: GET
- name: mobility_schools_image
  endpoint:
    path: /valuations/{id}/imagery/mobility/schools/{language}.png
    method: GET
- name: mobility_nearest_cities_image
  endpoint:
    path: /valuations/{id}/imagery/mobility/nearest-cities/{language}.png
    method: GET
- name: neighbourhood_job_seekers_image
  endpoint:
    path: /valuations/{id}/imagery/neighbourhood/job-seekers/{language}.png
    method: GET
- name: neighbourhood_cultural_diversity_image
  endpoint:
    path: /valuations/{id}/imagery/neighbourhood/cultural-diversity/{language}.png
    method: GET
- name: neighbourhood_big_families_image
  endpoint:
    path: /valuations/{id}/imagery/neighbourhood/big-families/{language}.png
    method: GET
- name: neighbourhood_affordability_image
  endpoint:
    path: /valuations/{id}/imagery/neighbourhood/affordability/{language}.png
    method: GET
- name: neighbourhood_singles_image
  endpoint:
    path: /valuations/{id}/imagery/neighbourhood/singles/{language}.png
    method: GET
- name: neighbourhood_population_age_image
  endpoint:
    path: /valuations/{id}/imagery/neighbourhood/population-age/{language}.png
    method: GET
- name: neighbourhood_education_image
  endpoint:
    path: /valuations/{id}/imagery/neighbourhood/education/{language}.png
    method: GET
- name: currency
  endpoint:
    path: /header-currency-1
    method: GET
    data_selector: currencies
    params: {}
- name: estate_detachment
  endpoint:
    path: /header-estate-detachment-1
    method: GET
    data_selector: detachments
    params: {}
- name: estate_heating_type
  endpoint:
    path: /header-estate-heating-type-1
    method: GET
    data_selector: heating_types
    params: {}
- name: electricity_inspection_report_type
  endpoint:
    path: /header-electricity-inspection-report-type-1
    method: GET
    data_selector: inspection_report_types
    params: {}
- name: estate_flood_prone_location
  endpoint:
    path: /header-estate-flood-prone-location-1
    method: GET
    data_selector: flood_prone_locations
    params: {}
- name: estate_delineated_area
  endpoint:
    path: /header-estate-delineated-area-1
    method: GET
    data_selector: delineated_areas
    params: {}
- name: country
  endpoint:
    path: /header-country-1
    method: GET
    data_selector: countries
    params: {}
notes:
- Public key is used to authorize the consumer.
- Private key is used to verify the integrity of the request.
- This feature is not activated by default, contact your account manager for more
  details.
- All new listings are created with an UNPUBLISHED status.
- All new active listings are created with an UNPUBLISHED status.
- Important that your private key remains private.
- Customization features like company name, address, and custom parameters are not
  activated by default, contact your account manager for more details.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Do not use the delete endpoint if a listing was sold or rented.
- All new active projects are created with an UNPUBLISHED status.
- Requires setup of API key for authorization.
- Publishing a project will trigger notification for users.
- This endpoint supports pagination.
- Uses API key for authentication.
- Uses OAuth2 with bearer token in Authorization header
- This endpoint returns all valuations owned by the current API key. This endpoint
  supports pagination.
errors:
- '429: Rate limit exceeded'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key or token expiration'
- '429: Rate limit reached'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck API key or permissions.'
- 'API_Exception_PaymentRequiredException: Limit of estimates has been exceeded'
- 'API_Exception_NotFoundException: Resource not found'
- '404 Not Found: Check the estate ID.'
- '404: Resource not found'
- 'Limit of estimates has been exceeded: API_Exception_PaymentRequiredException'
- 'Resource not found: API_Exception_NotFoundException'
- Resource not found
- '404'
- API endpoint not found
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Authorization
  - public_key
  - api_version
  - signature
client:
  base_url: https://api.realo.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
source_metadata: null
