resources:
- name: instrument
  endpoint:
    path: /cli/instrument.html
    method: GET
    data_selector: records
- name: firmware
  endpoint:
    path: /cli/firmware.html
    method: GET
    data_selector: records
- name: feature
  endpoint:
    path: /cli/feature.html
    method: GET
    data_selector: records
- name: convert
  endpoint:
    path: /cli/convert.html
    method: GET
    data_selector: records
- name: download
  endpoint:
    path: /cli/download.html
    method: GET
    data_selector: records
- name: list
  endpoint:
    path: /cli/list.html
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /cli/files.html
    method: GET
    data_selector: records
- name: license
  endpoint:
    path: /cli/license.html
    method: GET
    data_selector: records
- name: proxy
  endpoint:
    path: /cli/proxy.html
    method: GET
    data_selector: records
- name: stream
  endpoint:
    path: /cli/stream.html
    method: GET
    data_selector: records
- name: instrument_bitstreams
  endpoint:
    path: /mokucli/instrument/download
    method: POST
    data_selector: null
    params: {}
- name: claim_ownership
  endpoint:
    path: /moku/claim_ownership
    method: POST
    data_selector: data
- name: relinquish_ownership
  endpoint:
    path: /moku/relinquish_ownership
    method: POST
    data_selector: data
- name: disable_modulation
  endpoint:
    path: /awg/disable_modulation
    method: POST
    data_selector: data
- name: get_data
  endpoint:
    path: /fra/get_data
    method: GET
    data_selector: data
- name: disable_output
  endpoint:
    path: /fra/disable_output
    method: POST
    data_selector: messages
- name: claim_ownership
  endpoint:
    path: /moku/claim_ownership
    method: POST
    data_selector: success
- name: relinquish_ownership
  endpoint:
    path: /moku/relinquish_ownership
    method: POST
    data_selector: success
- name: set_connections
  endpoint:
    path: /api/mim/set_connections
    method: POST
    data_selector: connections
- name: set_output
  endpoint:
    path: /api/mim/set_output
    method: POST
    data_selector: output
- name: set_frontend
  endpoint:
    path: /api/mim/set_frontend
    method: POST
    data_selector: frontend
- name: set_connections
  endpoint:
    path: /api/mim/set_connections
    method: POST
    data_selector: connections
- name: set_output
  endpoint:
    path: /api/mim/set_output
    method: POST
    data_selector: output
- name: set_frontend
  endpoint:
    path: /api/mim/set_frontend
    method: POST
    data_selector: frontend
notes:
- The Moku Scripting API for Python requires data files to be downloaded before any
  program can be run.
- The Moku API uses IPv6 to connect to the Moku over USB.
- LabVIEW version 2016+ required
- Knowledge of your Moku's IP Address needed
- The Moku requires a number of data files for correct operation.
- If you see responses with the code NO_BIT_STREAM, this is the cause.
- Must open an instrument from a Moku application before accessing the API.
- User is responsible for obtaining a Client Key before entering Multi-instrument
  Mode.
- IPv6 support is limited in some environments.
errors:
- 'NO_BIT_STREAM: Make sure the target instrument is opened from a Moku application.'
- Invalid channel. Should be in between 1 and 2
- 'NO_BIT_STREAM: Open the target instrument from a Moku application.'
auth_info:
  mentioned_objects: []
client:
  base_url: http://<ip>/api
  auth:
    type: apikey
    location: header
    header_name: Moku-Client-Key
source_metadata: null
