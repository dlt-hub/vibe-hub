resources:
- name: auctions
  endpoint:
    path: /auctions
    method: POST
    data_selector: results
    params: {}
- name: sponsored_brand_auctions
  endpoint:
    path: /auctions/sponsored-brand
    method: POST
- name: winners
  endpoint:
    path: /api/sponsored-brands/winners
    method: GET
    data_selector: results.winners
    params: {}
- name: auctions
  endpoint:
    path: /v2/auctions
    method: POST
    data_selector: results
- name: auctions
  endpoint:
    path: /v2/auctions
    method: POST
    data_selector: results
    params: {}
- name: sponsored_brand_auctions
  endpoint:
    path: /v2/auctions/sponsored-brand
    method: POST
    data_selector: results
- name: sponsored_brand_auction
  endpoint:
    path: /v2/auctions/sponsored-brand
    method: POST
    data_selector: results
- name: travel_auctions
  endpoint:
    path: /v2/auctions/travel
    method: POST
    data_selector: results
- name: travel_auctions
  endpoint:
    path: /v2/auctions/travel
    method: POST
    data_selector: results
- name: events
  endpoint:
    path: /v2/events
    method: POST
    data_selector: impressions
    params: {}
- name: report_link_users
  endpoint:
    path: /v2/events/beta/link-users
    method: POST
    data_selector: ''
- name: rank_objects
  endpoint:
    path: /toptimize/v1/rank
    method: POST
    data_selector: results
- name: rank_objects
  endpoint:
    path: /toptimize/v1/rank
    method: POST
    data_selector: results
- name: predictions
  endpoint:
    path: /toptimize/v1/predictions
    method: POST
    data_selector: predictions
- name: predictions
  endpoint:
    path: /toptimize/v1/predictions
    method: POST
    data_selector: predictions
- name: retrieve_objects
  endpoint:
    path: /toptimize/v1/retrieval
    method: POST
    data_selector: objects
- name: retrieval
  endpoint:
    path: /toptimize/v1/retrieval
    method: POST
    data_selector: objects
- name: retrieve_objects
  endpoint:
    path: /toptimize/v1/retrieval
    method: POST
    data_selector: objects
- name: retrieval
  endpoint:
    path: /toptimize/v1/retrieval
    method: POST
    data_selector: objects
- name: asset
  endpoint:
    path: /public/v1/assets/asset
    method: POST
    data_selector: fields
- name: get_asset
  endpoint:
    path: /public/v1/assets/asset
    method: GET
    data_selector: fields
- name: delete_asset
  endpoint:
    path: /public/v1/assets/asset
    method: DEL
    data_selector: fields
- name: update_asset
  endpoint:
    path: /public/v1/assets/asset
    method: PATCH
    data_selector: fields
- name: get_assets
  endpoint:
    path: /public/v1/assets
    method: GET
    data_selector: fields
- name: asset
  endpoint:
    path: /public/v1/assets/asset
    method: POST
    data_selector: brands
    params:
      vendor_id: required
- name: asset
  endpoint:
    path: /public/v1/assets/asset
    method: POST
    data_selector: brands
    params: {}
- name: asset
  endpoint:
    path: /public/v1/assets/asset/{asset-id}
    method: GET
    data_selector: brands
    params: {}
- name: asset
  endpoint:
    path: /public/v1/assets/asset
    method: POST
    data_selector: id
    params:
      vendor_id: string
- name: delete_asset
  endpoint:
    path: /public/v1/assets/asset/{asset-id}
    method: DELETE
    data_selector: null
    params: {}
- name: get_asset
  endpoint:
    path: /public/v1/assets/asset/{asset-id}
    method: GET
    data_selector: response
    params: {}
- name: update_asset
  endpoint:
    path: /public/v1/assets/asset/{asset-id}
    method: PATCH
    data_selector: brands
    params: {}
- name: assets
  endpoint:
    path: /assets/assets
    method: GET
    data_selector: assets
    params:
      limit: '50'
- name: delete_asset
  endpoint:
    path: /public/v1/assets/asset/{asset-id}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_asset
  endpoint:
    path: /public/v1/assets/asset/{asset-id}
    method: PATCH
    data_selector: id
- name: create_collection
  endpoint:
    path: /public/v1/assets/collection
    method: POST
    data_selector: id
    params:
      vendor_id: <string>
- name: collection
  endpoint:
    path: /public/v1/assets/collection/{collection-id}
    method: GET
    data_selector: id
    params: {}
- name: assets
  endpoint:
    path: /assets/assets
    method: GET
    data_selector: assets
    params: {}
- name: delete_collection
  endpoint:
    path: /public/v1/assets/collection/{collection-id}
    method: DELETE
- name: update_collection
  endpoint:
    path: /public/v1/assets/collection/{collection-id}
    method: PATCH
    data_selector: description
    params: {}
- name: collection
  endpoint:
    path: /public/v1/assets/collection
    method: POST
    data_selector: ''
    params:
      vendor_id: ''
- name: collections
  endpoint:
    path: /public/v1/assets/collections
    method: GET
    data_selector: collections
    params: {}
- name: collection
  endpoint:
    path: /public/v1/assets/collection/{collection-id}
    method: GET
    data_selector: id
    params: {}
- name: delete_collection
  endpoint:
    path: /public/v1/assets/collection/{collection-id}
    method: DELETE
- name: billing_contacts
  endpoint:
    path: /billing-service/billing-contacts
    method: GET
    data_selector: billingContacts
    params:
      external_vendor_id: ''
      limit: 50
      next_page: ''
- name: update_collection
  endpoint:
    path: /public/v1/assets/collection/{collection-id}
    method: PATCH
    data_selector: description
    params: {}
- name: billing_contact
  endpoint:
    path: /public/v1/billing-service/billing-contacts/{billing-contact-id}
    method: GET
    data_selector: advertiserName
    params: {}
- name: collections
  endpoint:
    path: /public/v1/assets/collections
    method: GET
    data_selector: collections
    params: {}
- name: billing_contact
  endpoint:
    path: /public/v1/billing-service/billing-contacts/{billing-contact-id}
    method: PUT
    data_selector: null
    params: {}
- name: campaign_billing_contact
  endpoint:
    path: /public/v1/billing-service/campaign-billing-contact
    method: GET
    data_selector: advertiserName, brandName, id, invoiceTo
    params:
      campaign_id: string<uuid>
- name: billing_contacts
  endpoint:
    path: /billing-contacts
    method: GET
    data_selector: billingContacts
    params: {}
- name: billing_contact
  endpoint:
    path: /public/v1/billing-service/billing-contacts/{billing-contact-id}
    method: GET
    data_selector: ''
    params: {}
- name: campaign_billing_contact
  endpoint:
    path: /public/v1/billing-service/campaign-billing-contact
    method: PUT
    data_selector: none
    params: {}
- name: get_marketplace_credit_limit
  endpoint:
    path: /public/v1/billing-service/credit-limit
    method: GET
    data_selector: creditLimit
    params: {}
- name: upsert_billing_contact
  endpoint:
    path: /public/v1/billing-service/billing-contacts/{billing-contact-id}
    method: PUT
    data_selector: ''
    params: {}
- name: set_marketplace_credit_limit
  endpoint:
    path: /public/v1/billing-service/credit-limit
    method: POST
    data_selector: result
- name: campaign_billing_contact
  endpoint:
    path: /public/v1/billing-service/campaign-billing-contact
    method: GET
    data_selector: advertiserName, brandName, id, invoiceTo
    params:
      campaign_id: string<uuid>
- name: vendor_billing_contact
  endpoint:
    path: /public/v1/billing-service/vendor-billing-contact
    method: PUT
    data_selector: null
    params: {}
- name: campaign_billing_contact
  endpoint:
    path: /public/v1/billing-service/campaign-billing-contact
    method: PUT
    data_selector: response
    params: {}
- name: vendor_charges
  endpoint:
    path: /public/v1/billing-service/vendor-charges
    method: GET
    data_selector: data
    params:
      start_date: <string<date-time>>
      end_date: <string<date-time>>
- name: marketplace_credit_limit
  endpoint:
    path: /public/v1/billing-service/credit-limit
    method: GET
    data_selector: creditLimit
- name: vendor_account_activity
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/account-activity
    method: GET
    data_selector: lines
    params:
      start_date: string<date-time>
      end_date: string<date-time>
- name: set_marketplace_credit_limit
  endpoint:
    path: /public/v1/billing-service/credit-limit
    method: POST
    data_selector: result
- name: vendor_balance
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/balance
    method: GET
    data_selector: balance
- name: upsert_vendor_billing_contact
  endpoint:
    path: /public/v1/billing-service/vendor-billing-contact
    method: PUT
    data_selector: null
    params: {}
- name: add_vendor_balance
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/balance
    method: POST
    data_selector: result
    params: {}
- name: vendor_charges
  endpoint:
    path: /public/v1/billing-service/vendor-charges
    method: GET
    data_selector: data
    params:
      start_date: '2023-11-07T05:31:56Z'
      end_date: '2023-11-07T05:31:56Z'
- name: burn_vendor_balance
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/balance/burn
    method: POST
    data_selector: none
    params: {}
- name: vendor_account_activity
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/account-activity
    method: GET
    data_selector: lines
    params:
      start_date: string<date-time>
      end_date: string<date-time>
- name: vendor_credit_history
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/credit-history
    method: GET
    data_selector: lines
    params: {}
- name: vendor_balance
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/balance
    method: GET
    data_selector: balance
    params: {}
- name: get_vendor_credit_limit
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/credit-limit
    method: GET
    data_selector: creditLimit
    params: {}
- name: add_vendor_balance
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/balance
    method: POST
    data_selector: result
    params: {}
- name: set_vendor_credit_limit
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/credit-limit
    method: POST
    data_selector: result
    params: {}
- name: burn_vendor_balance
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/balance/burn
    method: POST
    data_selector: none
    params: {}
- name: delete_vendor_billing_contact
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/vendor-billing-contact/{billing-contact-id}
    method: DELETE
- name: vendor_credit_history
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/credit-history
    method: GET
    data_selector: lines
    params: {}
- name: vendor_wallets
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/wallets
    method: GET
    data_selector: wallets
    params: {}
- name: vendor_credit_limit
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/credit-limit
    method: GET
    data_selector: creditLimit
    params: {}
- name: create_wallet
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/wallets
    method: POST
    data_selector: walletId
    params: {}
- name: set_vendor_credit_limit
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/credit-limit
    method: POST
    data_selector: result
    params: {}
- name: adjust_wallet_balance
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/wallets/{wallet-id}/adjust
    method: POST
    data_selector: balance
    params: {}
- name: Delete Vendor Billing Contact
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/vendor-billing-contact/{billing-contact-id}
    method: DELETE
    data_selector: null
    params: {}
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: campaigns
  endpoint:
    path: /public/v1/campaign-service/campaigns
    method: GET
    data_selector: campaigns
    params:
      vendor_id: ''
      status: ''
      offset: 0
      limit: 100
      is_active: ''
      external_campaign_id: ''
      order_by: ''
- name: vendor_wallets
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/wallets
    method: GET
    data_selector: wallets
    params: {}
- name: create_wallet
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/wallets
    method: POST
    data_selector: walletId
    params: {}
- name: campaign
  endpoint:
    path: /campaigns
    method: POST
    data_selector: campaign
    params: {}
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
    params: {}
- name: Adjust Wallet Balance
  endpoint:
    path: /public/v1/billing-service/vendors/{external-vendor-id}/wallets/{wallet-id}/adjust
    method: POST
    data_selector: balance
    params: {}
- name: campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns
    method: POST
    data_selector: campaignId
    params:
      vendor_id: string
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: exclusive_banner_campaign
  endpoint:
    path: /campaigns/exclusive-banner
    method: POST
    data_selector: bids
- name: exclusive_banner_campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns/exclusive-banner
    method: POST
    data_selector: bids
    params: {}
- name: campaigns
  endpoint:
    path: /public/v1/campaign-service/campaigns
    method: GET
    data_selector: campaigns
    params:
      vendor_id: ''
      status: ''
      offset: 0
      limit: 100
      is_active: ''
      external_campaign_id: ''
      order_by: ''
- name: exclusive_banner_campaign
  endpoint:
    path: /campaigns/exclusive-banner/{campaign-id}
    method: GET
    data_selector: data
    params: {}
- name: campaigns
  endpoint:
    path: /campaigns
    method: POST
    data_selector: ''
    params: {}
- name: exclusive_banner_campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns/exclusive-banner/{campaign-id}
    method: GET
    data_selector: response
    params: {}
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: data
    params: {}
- name: exclusive_banner_campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns/exclusive-banner/{campaign-id}
    method: PATCH
    data_selector: data
- name: campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns
    method: POST
    data_selector: campaign
    params: {}
- name: exclusive_banner_campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns/exclusive-banner/{campaign-id}
    method: PATCH
    data_selector: records
- name: exclusive_banner_campaign
  endpoint:
    path: /campaign-service/campaigns/exclusive-banner
    method: POST
    data_selector: bids
- name: exclusive_listing_campaign
  endpoint:
    path: /campaign-service/campaigns/exclusive-listing
    method: POST
    data_selector: response
    params: {}
- name: exclusive_banner_campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns/exclusive-banner
    method: POST
    data_selector: bids
    params:
      vendor_id: string
- name: exclusive_banner_campaign
  endpoint:
    path: /campaign-service/campaigns/exclusive-banner/{campaign-id}
    method: GET
- name: exclusive_listing_campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns/exclusive-listing
    method: POST
    data_selector: adFormat
    params: {}
- name: exclusive_banner_campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns/exclusive-banner/{campaign-id}
    method: GET
    data_selector: records
    params: {}
- name: exclusive_listing_campaign
  endpoint:
    path: /campaigns/exclusive-listing/{campaign-id}
    method: GET
    data_selector: records
- name: exclusive_listing_campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns/exclusive-listing/{campaign-id}
    method: GET
    data_selector: records
    params: {}
- name: exclusive_banner_campaign
  endpoint:
    path: /campaign-service/campaigns/exclusive-banner/{campaign-id}
    method: PATCH
    data_selector: data
- name: exclusive_banner_campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns/exclusive-banner/{campaign-id}
    method: PATCH
- name: exclusive_listing_campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns/exclusive-listing/{campaign-id}
    method: PATCH
    data_selector: data
- name: exclusive_listing_campaign
  endpoint:
    path: /campaign-service/campaigns/exclusive-listing
    method: POST
    data_selector: campaign
    params: {}
- name: exclusive_listing_campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns/exclusive-listing/{campaign-id}
    method: PATCH
    data_selector: response
    params: {}
- name: campaign
  endpoint:
    path: /campaign-service/campaigns/{campaign-id}
    method: GET
    data_selector: records
- name: exclusive_listing_campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns/exclusive-listing
    method: POST
    data_selector: bids
    params: {}
- name: campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}
    method: GET
- name: exclusive_listing_campaign
  endpoint:
    path: /campaign-service/campaigns/exclusive-listing/{campaign-id}
    method: GET
    data_selector: records
- name: delete_campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}
    method: DELETE
- name: exclusive_listing_campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns/exclusive-listing/{campaign-id}
    method: GET
    data_selector: records
- name: campaign
  endpoint:
    path: /campaigns/{campaign-id}
    method: PATCH
    data_selector: records
- name: exclusive_listing_campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns/exclusive-listing/{campaign-id}
    method: PATCH
    data_selector: response
    params: {}
- name: campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}
    method: PATCH
    data_selector: campaign
    params: {}
- name: campaign_bids
  endpoint:
    path: /campaign-service/campaigns/{campaign-id}/bids
    method: GET
    data_selector: bids
- name: exclusive_listing_campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns/exclusive-listing/{campaign-id}
    method: PATCH
    data_selector: records
- name: campaign
  endpoint:
    path: /campaign-service/campaigns/{campaign-id}
    method: GET
    data_selector: records
- name: campaign_bids
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}/bids
    method: GET
    data_selector: bids
    params:
      offset: 0
      limit: 100
- name: campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}
    method: GET
    data_selector: campaign
    params: {}
- name: delete_campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}
    method: DELETE
- name: campaign_bids
  endpoint:
    path: /campaign-service/campaigns/{campaign-id}/bids
    method: POST
    data_selector: bids
- name: Update Campaign By Id
  endpoint:
    path: /campaign-service/campaigns/{campaign-id}
    method: PATCH
    data_selector: data
- name: campaign_bids
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}/bids
    method: POST
    data_selector: bids
    params:
      skip_existing_bids: 'false'
- name: campaign
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}
    method: PATCH
    data_selector: campaign
    params: {}
- name: delete_all_bids
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}/bids
    method: DELETE
    data_selector: null
    params: {}
- name: campaign_bids
  endpoint:
    path: /campaign-service/campaigns/{campaign-id}/bids
    method: GET
    data_selector: bids
- name: delete_campaign_bid
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}/bids/{bid-id}
    method: DELETE
    data_selector: null
    params: {}
- name: campaign_bids
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}/bids
    method: GET
    data_selector: bids
    params:
      offset: 0
      limit: 100
- name: update_campaign_bid
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}/bids/{bid-id}
    method: PATCH
    data_selector: response
    params: {}
- name: campaign_bid
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}/bids/{bid-id}
    method: PATCH
    data_selector: bids
    params: {}
- name: campaign_bids
  endpoint:
    path: /campaign-service/campaigns/{campaign-id}/bids
    method: POST
    data_selector: bids
- name: campaigns
  endpoint:
    path: /campaign-service/campaigns
    method: GET
    data_selector: campaigns
- name: campaign_products
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}/products
    method: GET
    data_selector: products
    params:
      is_active: boolean
- name: campaign_bids
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}/bids
    method: POST
    data_selector: bids
    params:
      skip_existing_bids: false
- name: delete_all_bids
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}/bids
    method: DELETE
- name: upsert_campaign_products
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}/products
    method: PUT
    data_selector: products
- name: delete_campaign_bid
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}/bids/{bid-id}
    method: DELETE
    data_selector: null
    params: {}
- name: campaign_restriction
  endpoint:
    path: /campaign-service/campaigns/{campaign-id}/restrictions
    method: GET
    data_selector: restrictions
- name: update_campaign_bid
  endpoint:
    path: /campaign-service/campaigns/{campaign-id}/bids/{bid-id}
    method: PATCH
    data_selector: response
    params: {}
- name: campaign_restriction
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}/restrictions
    method: POST
    data_selector: limit
    params: {}
- name: update_campaign_restriction
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}/restrictions/{restriction-id}
    method: PATCH
    data_selector: null
    params: {}
- name: campaign_bid
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}/bids/{bid-id}
    method: PATCH
    data_selector: bid
    params: {}
- name: campaign_products
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}/products
    method: GET
    data_selector: products
    params:
      is_active: boolean
- name: estimated_clicks
  endpoint:
    path: /public/v1/campaign-service/estimated-clicks
    method: POST
    data_selector: estimatedClicks
    params:
      vendor_id: ''
- name: upsert_campaign_products
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}/products
    method: PUT
    data_selector: products
    params: {}
- name: json_templates
  endpoint:
    path: /campaign-service/json-templates
    method: GET
    data_selector: jsonTemplates
- name: campaign_restriction
  endpoint:
    path: /campaign-service/campaigns/{campaign-id}/restrictions
    method: GET
    data_selector: restrictions
- name: json_template
  endpoint:
    path: /campaign-service/json-templates
    method: POST
    data_selector: adFormat
    params: {}
- name: Create Campaign Restriction
  endpoint:
    path: /campaign-service/campaigns/{campaign-id}/restrictions
    method: POST
    data_selector: limit
    params: {}
- name: json_template
  endpoint:
    path: /public/v1/campaign-service/json-templates
    method: POST
    data_selector: adFormat
    params: {}
- name: update_campaign_restriction
  endpoint:
    path: /public/v1/campaign-service/campaigns/{campaign-id}/restrictions/{restriction-id}
    method: PATCH
    data_selector: None
- name: json_template
  endpoint:
    path: /public/v1/campaign-service/json-templates/{json-template-id}
    method: GET
    data_selector: ''
    params: {}
- name: json_template
  endpoint:
    path: /public/v1/campaign-service/json-templates/{json-template-id}
    method: PATCH
    data_selector: id
- name: estimated_clicks
  endpoint:
    path: /public/v1/campaign-service/estimated-clicks
    method: POST
    data_selector: estimatedClicks
    params:
      vendor_id: ''
- name: json_template
  endpoint:
    path: /public/v1/campaign-service/json-templates/{json-template-id}
    method: PATCH
    data_selector: application/json
    params: {}
- name: json_templates
  endpoint:
    path: /campaign-service/json-templates
    method: GET
    data_selector: jsonTemplates
- name: products_in_campaign
  endpoint:
    path: /campaign-service/products-in-campaign
    method: GET
    data_selector: productsInCampaign
    params:
      fetch_active_products: 'false'
      look_ahead_hours: 0
- name: json_template
  endpoint:
    path: /campaign-service/json-templates
    method: POST
    data_selector: records
- name: restriction_types
  endpoint:
    path: /public/v1/campaign-service/restriction-types
    method: GET
    data_selector: restrictionTypes
- name: json_template
  endpoint:
    path: /public/v1/campaign-service/json-templates
    method: POST
    data_selector: adFormat
    params: {}
- name: get_restriction_type
  endpoint:
    path: /campaign-service/restriction-types/{restriction-type-id}
    method: GET
    data_selector: frequencyType
    params: {}
- name: json_template
  endpoint:
    path: /public/v1/campaign-service/json-templates/{json-template-id}
    method: GET
    data_selector: jsonSchema
- name: json_template
  endpoint:
    path: /public/v1/campaign-service/json-templates/{json-template-id}
    method: PATCH
    data_selector: id
- name: sponsored_products
  endpoint:
    path: /public/v1/campaign-service/sponsored-products
    method: GET
    data_selector: sponsoredProducts
    params:
      vendor_id: string
      offset: 0
      limit: 100
      fetch_active_products: false
- name: json_template
  endpoint:
    path: /public/v1/campaign-service/json-templates/{json-template-id}
    method: PATCH
    data_selector: response
    params: {}
- name: categories
  endpoint:
    path: /catalogs/categories
    method: GET
    data_selector: response
    params:
      next_page: string
- name: products_in_campaign
  endpoint:
    path: /public/v1/campaign-service/products-in-campaign
    method: GET
    data_selector: productsInCampaign
    params:
      vendor_id: string
      next_page: string
      limit: 100
      look_ahead_hours: 0
      fetch_active_products: false
- name: categories
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/categories
    method: PUT
    data_selector: categories
    params: {}
- name: restriction_types
  endpoint:
    path: /public/v1/campaign-service/restriction-types
    method: GET
    data_selector: restrictionTypes
- name: delete_categories
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/categories
    method: DELETE
    data_selector: ids
    params: {}
- name: restriction_type
  endpoint:
    path: /public/v1/campaign-service/restriction-types/{restriction-type-id}
    method: GET
    data_selector: frequencyType
    params: {}
- name: categories_count
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/categories/count
    method: GET
    data_selector: '123'
- name: sponsored_products
  endpoint:
    path: /public/v1/campaign-service/sponsored-products
    method: GET
    data_selector: sponsoredProducts
    params:
      vendor_id: string
      offset: 0
      limit: 100
      fetch_active_products: false
- name: category
  endpoint:
    path: /catalog-search-service/catalogs/categories/{category-id}
    method: GET
    data_selector: metadata
    params: {}
- name: categories
  endpoint:
    path: /catalogs/categories
    method: GET
    data_selector: response
    params: {}
- name: products
  endpoint:
    path: /catalog-search-service/catalogs/products
    method: GET
    data_selector: response
- name: upsert_categories
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/categories
    method: PUT
    data_selector: categories
- name: products
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/products
    method: GET
    data_selector: response
    params:
      next_page: nextPage
- name: categories
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/categories
    method: DELETE
    data_selector: null
    params:
      ids:
      - bneEmHKG2yUe
- name: upsert_products
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/products
    method: PUT
    data_selector: products
    params: {}
- name: categories_count
  endpoint:
    path: /catalogs/categories/count
    method: GET
    data_selector: integer
- name: delete_products
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/products
    method: DELETE
    data_selector: ids
- name: category
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/categories/{category-id}
    method: GET
    data_selector: metadata
    params: {}
- name: update_products
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/products
    method: PATCH
    data_selector: products
    params: {}
- name: products
  endpoint:
    path: /catalog-search-service/catalogs/products
    method: GET
    data_selector: response
- name: products_count
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/products/count
    method: GET
    data_selector: integer
- name: products
  endpoint:
    path: /catalogs/products/{product-id}
    method: GET
    data_selector: active
- name: products
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/products
    method: GET
    data_selector: response
    params:
      next_page: nextPage
- name: product
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/products/{product-id}
    method: GET
    data_selector: products
- name: upsert_products
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/products
    method: PUT
    data_selector: products
- name: vendors
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/vendors
    method: GET
    data_selector: response
    params:
      next_page: ''
- name: delete_products
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/products
    method: DELETE
    data_selector: ids
- name: vendors
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/vendors
    method: PUT
    data_selector: vendors
- name: vendors
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/vendors
    method: DELETE
    data_selector: ''
    params: {}
- name: update_products
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/products
    method: PATCH
    data_selector: products
- name: vendor
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/vendors/{vendor-id}
    method: GET
    data_selector: id
- name: products_count
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/products/count
    method: GET
    data_selector: integer
- name: products
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/products/{product-id}
    method: GET
    data_selector: active
- name: product
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/products/{product-id}
    method: GET
    data_selector: records
- name: invite_vendors
  endpoint:
    path: /public/v1/invitation-service/invitations
    method: POST
    data_selector: invites
    params: {}
- name: vendors
  endpoint:
    path: /catalogs/vendors
    method: GET
    data_selector: response
    params:
      next_page: nextPage
- name: slots
  endpoint:
    path: /media-service/slots
    method: GET
    data_selector: slots
- name: vendors
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/vendors
    method: PUT
    data_selector: vendors
- name: slots
  endpoint:
    path: /public/v1/media-service/slots
    method: GET
    data_selector: slots
    params:
      position: landing
- name: delete_vendors
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/vendors
    method: DELETE
    data_selector: ids
    params: {}
- name: slots
  endpoint:
    path: /public/v1/media-service/slots
    method: POST
    data_selector: dimensions
- name: vendor
  endpoint:
    path: /public/v1/catalog-search-service/catalogs/vendors/{vendor-id}
    method: GET
    data_selector: records
- name: slot
  endpoint:
    path: /public/v1/media-service/slots
    method: POST
    data_selector: dimensions
    params: {}
- name: invite_vendors
  endpoint:
    path: /public/v1/invitation-service/invitations
    method: POST
    data_selector: invites
    params: {}
- name: delete_slot
  endpoint:
    path: /media-service/slots/{slot-id}
    method: DELETE
- name: slots
  endpoint:
    path: /media-service/slots
    method: GET
    data_selector: slots
- name: toggle_slot
  endpoint:
    path: /public/v1/media-service/slots/{slot-id}
    method: PATCH
    data_selector: any
- name: delete_banner_fallback
  endpoint:
    path: /public/v1/media-service/slots/{slot-id}/fallback
    method: DELETE
    params:
      device_type: desktop
- name: slots
  endpoint:
    path: /public/v1/media-service/slots
    method: GET
    data_selector: slots
    params:
      position: landing
- name: upsert_advertiser_domain
  endpoint:
    path: /public/v1/offsite-ads/ad-network/advertisers/{vendor-id}/domain
    method: PUT
    data_selector: any
    params: {}
- name: slots
  endpoint:
    path: /media-service/slots
    method: POST
    data_selector: slots
- name: create_advertiser
  endpoint:
    path: /public/v1/offsite-ads/advertisers
    method: POST
    data_selector: jobId
- name: slots
  endpoint:
    path: /public/v1/media-service/slots
    method: POST
    data_selector: dimensions
    params: {}
- name: delete_slot
  endpoint:
    path: /public/v1/media-service/slots/{slot-id}
    method: DELETE
    data_selector: any
- name: advertiser_onboarding
  endpoint:
    path: /public/v1/offsite-ads/advertisers/{vendor-id}
    method: GET
    data_selector: dspOnboardingStatus
    params: {}
- name: toggle_slot
  endpoint:
    path: /public/v1/media-service/slots/{slot-id}
    method: PATCH
    data_selector: any
- name: list_audiences
  endpoint:
    path: /public/v1/offsite-ads/audiences
    method: GET
    data_selector: audiences
    params:
      vendor_id: string
      dsp: google_ads
      next_page: string
- name: delete_banner_fallback
  endpoint:
    path: /public/v1/media-service/slots/{slot-id}/fallback
    method: DELETE
    data_selector: null
    params:
      device_type: null
- name: create_offsite_audience_job
  endpoint:
    path: /offsite-ads/audiences
    method: POST
    data_selector: jobId
    params:
      vendor_id: vendor_123
      dsp: google_ads
- name: vendor_offsite_campaigns
  endpoint:
    path: /offsite-ads/campaigns
    method: GET
    data_selector: campaigns
    params:
      vendor_id: string
      dsp: enum
      statuses: enum[]
      limit: integer
      next_page: string
- name: upsert_advertiser_domain
  endpoint:
    path: /public/v1/offsite-ads/ad-network/advertisers/{vendor-id}/domain
    method: PUT
    data_selector: <any>
    params: {}
- name: create_campaign
  endpoint:
    path: /offsite-ads/campaigns
    method: POST
    data_selector: ''
    params:
      vendor_id: ''
- name: advertiser
  endpoint:
    path: /public/v1/offsite-ads/advertisers
    method: POST
    data_selector: jobId
    params: {}
- name: campaign_information
  endpoint:
    path: /public/v1/offsite-ads/campaigns/{campaign-id}
    method: GET
    data_selector: data
    params:
      vendor_id: required
- name: advertiser_onboarding_state
  endpoint:
    path: /public/v1/offsite-ads/advertisers/{vendor-id}
    method: GET
    data_selector: dspOnboardingStatus
    params:
      dsp: google_ads
- name: update_campaign
  endpoint:
    path: /public/v1/offsite-ads/campaigns/{campaign-id}
    method: PATCH
    data_selector: jobId
- name: audiences
  endpoint:
    path: /public/v1/offsite-ads/audiences
    method: GET
    data_selector: audiences
    params:
      vendor_id: string
      dsp: enum<string>
      next_page: string
- name: Get Job Status
  endpoint:
    path: /public/v1/offsite-ads/jobs/{job-id}
    method: GET
    data_selector: status
    params:
      vendor_id: required
- name: create_offsite_audience_job
  endpoint:
    path: /public/v1/offsite-ads/audiences
    method: POST
    data_selector: jobId
    params:
      vendor_id: string
      dsp: string
- name: campaign_aggregated_report
  endpoint:
    path: /offsite-ads/reporting/campaigns/{campaign-id}
    method: GET
    data_selector: clicks, impressions, purchases
    params:
      vendor_id: ''
      start_date: ''
      end_date: ''
- name: vendor_offsite_campaigns
  endpoint:
    path: /public/v1/offsite-ads/campaigns
    method: GET
    data_selector: campaigns
    params:
      vendor_id: string
      dsp: enum<string>
      statuses: enum<string>[]
      limit: '100'
      next_page: string
- name: create_campaign
  endpoint:
    path: /offsite-ads/campaigns
    method: POST
    data_selector: jobId
- name: campaign_daily_report
  endpoint:
    path: /public/v1/offsite-ads/reporting/campaigns/{campaign-id}/daily
    method: GET
    data_selector: reports
    params:
      vendor_id: ''
      start_date: ''
      end_date: ''
- name: campaign_products_report
  endpoint:
    path: /public/v1/offsite-ads/reporting/campaigns/{campaign-id}/products
    method: GET
    data_selector: reports
    params:
      vendor_id: ''
      start_date: ''
      end_date: ''
      limit: 100
      next_page: ''
- name: campaign_information
  endpoint:
    path: /public/v1/offsite-ads/campaigns/{campaign-id}
    method: GET
    data_selector: budget, campaignId, dsp, endDate, name, startDate, status
    params:
      vendor_id: string
- name: campaign_report
  endpoint:
    path: /public/v1/reporting-service/campaigns/{campaign-id}
    method: GET
    data_selector: auctions
    params:
      start_date: required
      end_date: required
- name: update_campaign
  endpoint:
    path: /public/v1/offsite-ads/campaigns/{campaign-id}
    method: PATCH
    data_selector: jobId
    params:
      vendor_id: string
- name: campaign_daily_report
  endpoint:
    path: /reporting-service/campaigns/{campaign-id}/daily
    method: GET
    data_selector: reports
    params:
      start_date: required
      end_date: required
- name: job_status
  endpoint:
    path: /public/v1/offsite-ads/jobs/{job-id}
    method: GET
    data_selector: result
- name: campaign_aggregated_report
  endpoint:
    path: /offsite-ads/reporting/campaigns/{campaign-id}
    method: GET
    data_selector: clicks, impressions, purchases
    params:
      vendor_id: required
      start_date: required
      end_date: required
- name: campaign_report_by_product
  endpoint:
    path: /public/v1/reporting-service/campaigns/{campaign-id}/products
    method: GET
    data_selector: reports
    params:
      start_date: required
      end_date: required
- name: get_product_report
  endpoint:
    path: /public/v1/reporting-service/campaigns/{campaign-id}/products/{product-id}
    method: GET
    params:
      start_date: string<date>
      end_date: string<date>
- name: campaign_daily_report
  endpoint:
    path: /public/v1/offsite-ads/reporting/campaigns/{campaign-id}/daily
    method: GET
    data_selector: reports
    params:
      vendor_id: string
      start_date: string<date>
      end_date: string<date>
- name: product_daily_report
  endpoint:
    path: /campaigns/{campaign-id}/products/{product-id}/daily
    method: GET
    data_selector: reports
    params:
      start_date: required
      end_date: required
- name: campaign_products_report
  endpoint:
    path: /public/v1/offsite-ads/reporting/campaigns/{campaign-id}/products
    method: GET
    data_selector: reports
    params:
      vendor_id: string
      start_date: string<date>
      end_date: string<date>
      limit: 100
      next_page: string
- name: interactions_dump_urls
  endpoint:
    path: /public/v1/reporting-service/file-reports/interactions
    method: GET
    data_selector: files
    params:
      report_date: YYYY-MM-DD
- name: campaign_report
  endpoint:
    path: /public/v1/reporting-service/campaigns/{campaign-id}
    method: GET
    data_selector: null
    params:
      start_date: string<date>
      end_date: string<date>
- name: campaign_daily_report
  endpoint:
    path: /reporting-service/campaigns/{campaign-id}/daily
    method: GET
    data_selector: reports
    params:
      start_date: required
      end_date: required
- name: scored_attribution_dump_urls
  endpoint:
    path: /public/v1/reporting-service/file-reports/scored-attribution
    method: GET
    data_selector: files
    params:
      report_date: YYYY-MM-DD
- name: marketplace_interactions
  endpoint:
    path: /public/v1/reporting-service/interactions
    method: GET
    data_selector: interactions
- name: campaign_report_by_product
  endpoint:
    path: /public/v1/reporting-service/campaigns/{campaign-id}/products
    method: GET
    data_selector: reports
    params:
      start_date: required
      end_date: required
- name: get_product_report
  endpoint:
    path: /public/v1/reporting-service/campaigns/{campaign-id}/products/{product-id}
    method: GET
    data_selector: report
    params:
      start_date: ''
      end_date: ''
- name: interactions
  endpoint:
    path: /public/v1/reporting-service/interactions
    method: GET
    data_selector: interactions
    params:
      start_date: <date-time>
      end_date: <date-time>
      limit: 1000
      group_by: <string>
      granularity: <string>
      next_page: <string>
- name: product_daily_report
  endpoint:
    path: /public/v1/reporting-service/campaigns/{campaign-id}/products/{product-id}/daily
    method: GET
    data_selector: reports
    params:
      start_date: required
      end_date: required
- name: marketplace_report
  endpoint:
    path: /public/v1/reporting-service/marketplace
    method: GET
    data_selector: clicks
    params: {}
- name: campaigns_kpis
  endpoint:
    path: /public/v1/reporting-service/marketplace/campaigns-kpis
    method: GET
    data_selector: campaignsKpis
- name: interactions_dump_urls
  endpoint:
    path: /public/v1/reporting-service/file-reports/interactions
    method: GET
    data_selector: files
    params:
      report_date: string<date>
- name: scored_attribution_dump_urls
  endpoint:
    path: /public/v1/reporting-service/file-reports/scored-attribution
    method: GET
    data_selector: files
    params:
      report_date: YYYY-MM-DD
- name: campaigns_kpis
  endpoint:
    path: /public/v1/reporting-service/marketplace/campaigns-kpis
    method: GET
    data_selector: campaignsKpis
    params:
      limit: 100
- name: marketplace_interactions_report
  endpoint:
    path: /reporting-service/interactions
    method: GET
    data_selector: interactions
- name: marketplace_daily_report
  endpoint:
    path: /public/v1/reporting-service/marketplace/daily
    method: GET
    data_selector: reports
    params:
      start_date: string<date>
      end_date: string<date>
- name: interactions
  endpoint:
    path: /public/v1/reporting-service/interactions
    method: GET
    data_selector: interactions
    params:
      start_date: required
      end_date: required
      limit: '1000'
      group_by: vendor,campaign,product
      granularity: daily,hourly
- name: marketplace_vendors_kpis
  endpoint:
    path: /public/v1/reporting-service/marketplace/vendors-kpis
    method: GET
    data_selector: vendorKpis
- name: marketplace_report
  endpoint:
    path: /public/v1/reporting-service/marketplace
    method: GET
    data_selector: clicks
    params:
      start_date: string<date>
      end_date: string<date>
- name: vendor_kpis
  endpoint:
    path: /public/v1/reporting-service/marketplace/vendors-kpis
    method: GET
    data_selector: vendorKpis
    params: {}
- name: marketplace_campaigns_kpis
  endpoint:
    path: /public/v1/reporting-service/marketplace/campaigns-kpis
    method: GET
    data_selector: campaignsKpis
- name: vendor_report
  endpoint:
    path: /public/v1/reporting-service/vendors/{vendor-id}
    method: GET
    data_selector: auctions
    params:
      start_date: ''
      end_date: ''
- name: campaigns_kpis
  endpoint:
    path: /public/v1/reporting-service/marketplace/campaigns-kpis
    method: GET
    data_selector: campaignsKpis
    params: {}
- name: vendor_daily_report
  endpoint:
    path: /public/v1/reporting-service/vendors/{vendor-id}/daily
    method: GET
    data_selector: reports
    params:
      start_date: required
      end_date: required
- name: marketplace_daily_report
  endpoint:
    path: /marketplace/daily
    method: GET
    data_selector: reports
    params:
      start_date: ''
      end_date: ''
- name: segments
  endpoint:
    path: /segment-service/segments
    method: GET
    data_selector: segments
    params: {}
- name: marketplace_vendors_kpis
  endpoint:
    path: /public/v1/reporting-service/marketplace/vendors-kpis
    method: GET
    data_selector: vendorKpis
- name: segments
  endpoint:
    path: /segment-service/segments
    method: PUT
    data_selector: segments
- name: vendors_kpis
  endpoint:
    path: /public/v1/reporting-service/marketplace/vendors-kpis
    method: GET
    data_selector: vendorKpis
    params: {}
- name: vendor_report
  endpoint:
    path: /public/v1/reporting-service/vendors/{vendor-id}
    method: GET
    data_selector: vendors
    params:
      start_date: required
      end_date: required
- name: delete_segment
  endpoint:
    path: /public/v1/segment-service/segments/{segment-id}
    method: DELETE
    data_selector: null
    params: {}
- name: upload_users_signed_url
  endpoint:
    path: /public/v1/segment-service/segments/{segment-id}/signed-url
    method: GET
    data_selector: url
- name: vendor_daily_report
  endpoint:
    path: /vendors/{vendor-id}/daily
    method: GET
    data_selector: reports
    params:
      limit: 100
      start_date: <date>
      end_date: <date>
- name: upload_users
  endpoint:
    path: /public/v1/segment-service/segments/{segment-id}/upload
    method: POST
    data_selector: ''
    params: {}
- name: segments
  endpoint:
    path: /segment-service/segments
    method: GET
    data_selector: segments
- name: campaigns
  endpoint:
    path: /public/v1/toppie/campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: upsert_segments
  endpoint:
    path: /public/v1/segment-service/segments
    method: PUT
    data_selector: segments
- name: toppie_campaign
  endpoint:
    path: /public/v1/toppie/campaigns
    method: POST
    data_selector: accountId
    params: {}
- name: delete_segment
  endpoint:
    path: /public/v1/segment-service/segments/{segment-id}
    method: DELETE
    data_selector: ''
    params: {}
- name: campaign
  endpoint:
    path: /public/v1/toppie/campaigns
    method: POST
    data_selector: accountId
    params: {}
- name: upload_users_signed_url
  endpoint:
    path: /segment-service/segments/{segment-id}/signed-url
    method: GET
    data_selector: url
    params: {}
- name: campaign
  endpoint:
    path: /public/v1/toppie/campaigns/{campaign-id}
    method: GET
    data_selector: accountId
- name: upload_users
  endpoint:
    path: /public/v1/segment-service/segments/{segment-id}/upload
    method: POST
    data_selector: ''
    params: {}
- name: campaign
  endpoint:
    path: /public/v1/toppie/campaigns/{campaign-id}
    method: GET
    data_selector: accountId
    params: {}
- name: campaigns
  endpoint:
    path: /public/v1/toppie/campaigns
    method: GET
    data_selector: campaigns
    params:
      limit: 100
- name: delete_toppie_campaign
  endpoint:
    path: /public/v1/toppie/campaigns/{campaign-id}
    method: DELETE
    data_selector: ''
    params: {}
- name: toppie_campaign
  endpoint:
    path: /toppie/campaigns
    method: POST
    data_selector: data
- name: campaign
  endpoint:
    path: /public/v1/toppie/campaigns/{campaign-id}
    method: PATCH
    data_selector: null
    params: {}
- name: campaigns
  endpoint:
    path: /public/v1/toppie/campaigns
    method: POST
    data_selector: id
- name: campaign
  endpoint:
    path: /public/v1/toppie/campaigns/{campaign-id}
    method: PATCH
    data_selector: records
- name: campaign_details
  endpoint:
    path: /public/v1/toppie/campaigns/{campaign-id}
    method: GET
    data_selector: records
- name: campaign_bids
  endpoint:
    path: /public/v1/toppie/campaigns/{campaign-id}/bids
    method: GET
    data_selector: bids
    params: {}
- name: campaign_details
  endpoint:
    path: /public/v1/toppie/campaigns/{campaign-id}
    method: GET
    data_selector: accountId
    params: {}
- name: delete_toppie_campaign
  endpoint:
    path: /public/v1/toppie/campaigns/{campaign-id}
    method: DELETE
    data_selector: ''
    params: {}
- name: account_products
  endpoint:
    path: /public/v1/toppie/products
    method: GET
    data_selector: products
    params:
      incremental: next_page
- name: campaign
  endpoint:
    path: /public/v1/toppie/campaigns/{campaign-id}
    method: PATCH
    data_selector: data
- name: agency_account_report
  endpoint:
    path: /toppie/reporting
    method: GET
    data_selector: reports
    params:
      start_date: required
      end_date: required
- name: campaign
  endpoint:
    path: /public/v1/toppie/campaigns/{campaign-id}
    method: PATCH
    data_selector: response
    params: {}
- name: account_activity
  endpoint:
    path: /public/v1/toppie/reporting/account-activity
    method: GET
    data_selector: accountActivities
    params:
      start_date: ''
      end_date: ''
      limit: 100
      next_page: ''
- name: campaign_bids
  endpoint:
    path: /public/v1/toppie/campaigns/{campaign-id}/bids
    method: GET
    data_selector: bids
    params: {}
- name: campaigns
  endpoint:
    path: /public/v1/toppie/reporting/campaigns
    method: GET
    data_selector: campaigns
- name: account_products
  endpoint:
    path: /public/v1/toppie/products
    method: GET
    data_selector: products
    params:
      limit: '100'
- name: campaigns
  endpoint:
    path: /public/v1/toppie/reporting/campaigns
    method: GET
    data_selector: campaigns
    params:
      limit: 100
- name: agency_account_report
  endpoint:
    path: /toppie/reporting
    method: GET
    data_selector: reports
    params:
      start_date: string<date>
      end_date: string<date>
- name: account_activity
  endpoint:
    path: /public/v1/toppie/reporting/account-activity
    method: GET
    data_selector: accountActivities
    params:
      start_date: ''
      end_date: ''
- name: campaign_report
  endpoint:
    path: /public/v1/toppie/reporting/campaigns/{campaign-id}
    method: GET
    data_selector: reports
    params:
      start_date: string<date>
      end_date: string<date>
- name: campaigns
  endpoint:
    path: /public/v1/toppie/reporting/campaigns
    method: GET
    data_selector: campaigns
- name: campaign_products_report
  endpoint:
    path: /public/v1/toppie/reporting/campaigns/{campaign-id}/products
    method: GET
    data_selector: products
    params:
      start_date: ''
      end_date: ''
      next_page: ''
      limit: 100
- name: campaigns
  endpoint:
    path: /public/v1/toppie/reporting/campaigns
    method: GET
    data_selector: campaigns
- name: agency_daily_kpis_by_product
  endpoint:
    path: /public/v1/toppie/reporting/file-reports/daily-kpis-by-product
    method: GET
    data_selector: files
- name: campaign_report
  endpoint:
    path: /public/v1/toppie/reporting/campaigns/{campaign-id}
    method: GET
    data_selector: reports
    params:
      start_date: string<date>
      end_date: string<date>
- name: campaign-level forecasts
  endpoint:
    path: /public/v1/toptimize/forecasting/campaign
    method: POST
    data_selector: metrics
- name: campaign_forecast
  endpoint:
    path: /public/v1/toptimize/forecasting/campaign
    method: POST
    data_selector: ''
- name: campaign_products_report
  endpoint:
    path: /public/v1/toppie/reporting/campaigns/{campaign-id}/products
    method: GET
    data_selector: products
    params:
      start_date: string<date>
      end_date: string<date>
      search: string
      next_page: string
      limit: integer
- name: inventory_forecasts
  endpoint:
    path: /inventory
    method: POST
    data_selector: dailyForecasts
- name: daily_kpis_by_product
  endpoint:
    path: /public/v1/toppie/reporting/file-reports/daily-kpis-by-product
    method: GET
    data_selector: files
    params:
      report_date: YYYY-MM-DD
- name: inventory_forecast
  endpoint:
    path: /public/v1/toptimize/forecasting/inventory
    method: POST
    data_selector: dailyForecasts
    params:
      timeWindow: 7
- name: campaign_forecast
  endpoint:
    path: /public/v1/toptimize/forecasting/campaign
    method: POST
    data_selector: forecast
    params: {}
- name: marketplace_forecasts
  endpoint:
    path: /toptimize/forecasting/marketplace
    method: GET
    data_selector: ''
- name: marketplace_forecast
  endpoint:
    path: /public/v1/toptimize/forecasting/marketplace
    method: GET
    data_selector: metrics
    params:
      time_window: 7
- name: campaign_forecast
  endpoint:
    path: /public/v1/toptimize/forecasting/campaign
    method: POST
    data_selector: metrics
    params: {}
- name: advertiser_users
  endpoint:
    path: /public/v1/user-service/advertiser-users
    method: GET
    data_selector: advertiser_users
    params:
      email: <string>
- name: inventory_forecast
  endpoint:
    path: /public/v1/toptimize/forecasting/inventory
    method: POST
    data_selector: inventory
- name: update_user
  endpoint:
    path: /public/v1/user-service/advertiser-users
    method: PUT
    data_selector: null
    params: {}
- name: inventory_forecast
  endpoint:
    path: /public/v1/toptimize/forecasting/inventory
    method: POST
    data_selector: dailyForecasts
    params:
      timeWindow: 7
- name: create_user
  endpoint:
    path: /public/v1/user-service/advertiser-users
    method: POST
    data_selector: ''
    params: {}
- name: marketplace_forecasts
  endpoint:
    path: /toptimize/forecasting/marketplace
    method: GET
    data_selector: metrics
- name: marketplace_forecasting
  endpoint:
    path: /public/v1/toptimize/forecasting/marketplace
    method: GET
    data_selector: metrics
    params:
      time_window: 7
- name: webhooks
  endpoint:
    path: /public/v1/webhooks/webhooks
    method: GET
    data_selector: webhooks
- name: create_webhook
  endpoint:
    path: /public/v1/webhooks/webhooks
    method: POST
    data_selector: channel
    params: {}
- name: advertiser_users
  endpoint:
    path: /public/v1/user-service/advertiser-users
    method: GET
    data_selector: advertiser_users
    params:
      email: string
- name: get_webhook
  endpoint:
    path: /public/v1/webhooks/webhooks/{webhook-id}
    method: GET
    data_selector: channel, id, marketplaceId, secret, url
- name: update_user
  endpoint:
    path: /public/v1/user-service/advertiser-users
    method: PUT
    data_selector: null
    params: {}
- name: delete_webhook
  endpoint:
    path: /public/v1/webhooks/webhooks/{webhook-id}
    method: DELETE
- name: create_user
  endpoint:
    path: /public/v1/user-service/advertiser-users
    method: POST
    data_selector: ''
    params: {}
- name: update_webhook
  endpoint:
    path: /public/v1/webhooks/webhooks/{webhook-id}
    method: PATCH
    data_selector: channel
    params: {}
- name: webhooks
  endpoint:
    path: /public/v1/webhooks/webhooks
    method: GET
    data_selector: webhooks
- name: webhooks
  endpoint:
    path: /api-reference/webhooks-api/get-webhooks
    method: GET
    data_selector: webhooks
- name: create_webhook
  endpoint:
    path: /public/v1/webhooks/webhooks
    method: POST
    data_selector: ''
    params: {}
- name: webhook
  endpoint:
    path: /public/v1/webhooks/webhooks/{webhook-id}
    method: GET
    data_selector: application/json
- name: delete_webhook
  endpoint:
    path: /public/v1/webhooks/webhooks/{webhook-id}
    method: DELETE
    data_selector: null
    params: {}
- name: update_webhook
  endpoint:
    path: /public/v1/webhooks/webhooks/{webhook-id}
    method: PATCH
    data_selector: channel
    params: {}
- name: webhook
  endpoint:
    path: /api-reference/endpoint-to-notify-events-generated-in-topsort
    method: POST
    data_selector: webhooks
notes:
- To minimize the impact of auctions on your app’s performance, there is no redirect
  from URLs with a trailing slash.
- To minimize the impact of auctions on your app’s performance, there is no redirect
  from URLs with a trailing slash (/).
- Using an URL with a trailing slash will result in a 404 Not Found error.
- Requests must include an authorization header containing an API key.
- API keys are scoped per marketplace.
- Do not cache this response or it’s results. Auctions need to be unique per page
  view.
- Do not cache this response or its results.
- 'Required array length for auctions: 1 - 5 elements'
- Beta Access Required
- Beta Access Required — Contact your sales representative to gain access to this
  endpoint and start using it.
- A valid API key generated in Topsort's UI is required.
- Requires a valid API key generated in Topsort's UI.
- A valid API key generated in Topsort's UI.
- This endpoint is a no-op as marketplace credit limit has been removed.
- This endpoint has been deprecated and now it returns 0 for all marketplaces.
- Will truncate the input to its minimum denomination, e.g. USD 1,000.234 is USD 1,000.23
  , as there is no fraction of a cent.
- Will truncate the input to its minimum denomination, e.g. USD 1,000.234 is USD 1,000.23,
  as there is no fraction of a cent.
- Please note this is a beta API and therefore it is subject to change.
- This endpoint is a no-op as vendor credit limit has been removed.
- Endpoint to get the credit History for a vendor.
- This endpoint is deprecated.
- There is a limit of 3 Wallets per vendor.
- Authorization requires a valid API key generated in Topsort's UI.
- Uses Bearer token for authorization.
- Campaigns can have multiple targeting filters.
- Campaigns can have multiple banner assets.
- Requires setup of connected app in topsort
- This API allows for the creation of exclusive banner campaigns.
- Uses OAuth2 with Bearer token for authorization.
- Authorization is a valid API key generated in Topsort's UI.
- Authorization is required. A valid API key generated in Topsort's UI.
- Requires Bearer token in the Authorization header.
- This is a beta API and therefore it is subject to change.
- This API is in beta and subject to change.
- The IDs provided must already exist on the catalog.
- 'Required array length: 1 - 500 elements.'
- This function won’t error out when trying to delete vendors that don’t exist.
- 'Required array length: 1 - 500 elements'
- The limit can not surpass 50 and its default is 25.
- The presigned url is valid for 1 hour and should be used to upload the audience
  csv file.
- The response is paginated to handle large datasets.
- Beta Access Required - Contact your sales representative to gain access to this
  endpoint.
- Uses OAuth2 with Bearer token for authentication
- Contact your sales representative to gain access to this endpoint and start using
  it.
- Requires a Bearer token for authorization.
- BETA version of the API
- Webhook secret to be used in signature generation.
- Authorization is required and must be a valid API key generated in Topsort's UI.
- Webhook secret to be used in signature generation. If missing, it'll be randomly
  generated.
- Use the Webhooks API to manage the target url and the accepted events.
errors:
- '429 Too Many Requests: Implement a retry mechanism with an exponential backoff
  strategy.'
- '401 Unauthorized: Recheck API key'
- '400: Bad Request: Unacceptable request, i.e. Incorrect formatting'
- '403: Forbidden/Unauthorized: API key issue or missing tokens'
- '404: Not Found: The server cannot find the requested resource.'
- '422: Unprocessable Entity: Mismatched request body and model.'
- '429: Rate Limit Exceeded: IP-based rate limit reached.'
- '429: Too Many Requests'
- 400 Bad Request
- 401 Unauthorized
- '400'
- '401'
- '201'
- '201: Successful creation of auctions'
- '400: Bad request'
- '401: Unauthorized'
- '204: All events were reported successfully.'
- '400: Bad Request'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Check token validity'
- '422: Invalid input'
- '201: Success'
- '422: Unprocessable Entity'
- '201: Successful Response'
- '422: Validation Error'
- '204'
- '422'
- '422: Invalid asset-id'
- '200'
- '422: Invalid request parameters'
- '200: Successful Response'
- '422: Validation error'
- '204: Successful Response'
- '422: Invalid parameters'
- '422: Error Processing Request'
- '422: Invalid input data'
- '422: Invalid billing contact ID'
- '422: Error response'
- '422: Input validation error'
- '422: Error Response'
- '422: Invalid input parameters'
- '422: If the input credit limit is invalid.'
- '422: Invalid request'
- '422: Validation error for input data'
- '422: Invalid input or request format'
- '422: Validation error, check input parameters'
- '422: Invalid input, check amount and description'
- '200: Success'
- '422: Invalid input or parameter'
- '422: Error in request'
- '422: Validation error, check the request payload.'
- '422: Error due to validation issues'
- '422: Invalid data - check for required fields or format'
- '422: Invalid Request'
- '200: Successful update'
- '422: Limit-based restrictions for a campaign.'
- 204 Successful Response
- '422: Validation error for request parameters'
- '422 Unprocessable Entity: Check request parameters for validity'
- '201: Created'
- '422: Invalid restriction type ID'
- '200: Successful request'
- '422: Unprocessable entity'
- '422 Unprocessable Entity: Check request parameters'
- '422: Invalid parameter'
- '422: Error'
- '422: Client error response'
- '422: Error if vendor IDs are invalid'
- '422: Invalid request payload'
- '422: Error processing request'
- '422: <any>'
- '422: Validation error, check request parameters'
- '422 Unprocessable Entity: Check required fields and their lengths.'
- '422: Error in request parameters'
- '422: Invalid request parameters.'
- '404: Not Found - If the campaign is not a Google Ads campaign'
- '422: Unprocessable Entity - If there are validation issues with the request'
- '422: Validation error, check parameters'
- '422: Check query parameters for correctness'
- '201: Successfully created'
- '200: Successful operation'
- '422: Validation error, check required parameters.'
- '422: Unprocessable Entity - Check request parameters'
- '422 Unprocessable Entity: Check the request data for correctness.'
- '422: Validation error, check the request body'
- '422: Invalid email format'
- '422: Validation errors in request data.'
- '422: Validation errors occurred.'
- '422: This response does not have an example.'
- '422: Validation error in the request.'
- '422: ''<any>'''
auth_info:
  mentioned_objects:
  - API key
  - HTTPBearer
client:
  base_url: https://api.topsort.com
  auth:
    type: apikey
source_metadata: null
