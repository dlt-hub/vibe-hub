resources:
- name: payments
  endpoint:
    path: /payments
    method: POST
- name: payouts
  endpoint:
    path: /payouts
    method: GET
- name: payments
  endpoint:
    path: /payments
    method: POST
    data_selector: data
- name: payouts
  endpoint:
    path: /payouts
    method: GET
    data_selector: data
- name: refunds
  endpoint:
    path: /refunds
    method: POST
    data_selector: data
- name: countries
  endpoint:
    path: /hpp/countries
    method: GET
    data_selector: ''
- name: refunds
  endpoint:
    path: /refunds
    method: POST
    data_selector: ''
- name: get_refund
  endpoint:
    path: /refunds/{refund_id}
    method: GET
    data_selector: ''
- name: countries
  endpoint:
    path: /hpp/countries
    method: GET
- name: countries
  endpoint:
    path: /hpp/countries
    method: GET
- name: refund_initiated_from_buyer
  endpoint:
    path: /webhooks/refund_initiated_from_buyer
    method: POST
    data_selector: data
- name: transfer_received_from_creditor
  endpoint:
    path: /webhooks/transfer_received_from_creditor
    method: POST
    data_selector: data
- name: refund_completed
  endpoint:
    path: /webhooks/refund_completed
    method: POST
    data_selector: data
- name: application_started
  endpoint:
    path: /webhooks/application_started
    method: POST
    data_selector: data
- name: application_submitted
  endpoint:
    path: /webhooks/application_submitted
    method: POST
    data_selector: data
- name: application_succeeded
  endpoint:
    path: /webhooks/application_succeeded
    method: POST
    data_selector: data
- name: application_action_required
  endpoint:
    path: /webhooks/application_action_required
    method: POST
    data_selector: data
- name: confirm_applicant
  endpoint:
    path: /confirm_applicant
    method: POST
    data_selector: data
- name: countries
  endpoint:
    path: /hpp/countries
    method: GET
    data_selector: records
- name: update_applicant_details
  endpoint:
    path: /update_applicant_details
    method: POST
    data_selector: response
- name: upload_applicant_document
  endpoint:
    path: /upload_applicant_document
    method: POST
    data_selector: response
- name: delete_applicant_document
  endpoint:
    path: /delete_applicant_document
    method: DELETE
    data_selector: response
- name: update_business_type
  endpoint:
    path: /update_business_type
    method: POST
    data_selector: response
- name: update_business_profile
  endpoint:
    path: /update_business_profile
    method: POST
    data_selector: response
- name: upload_document
  endpoint:
    path: /upload_document
    method: POST
    data_selector: response
- name: delete_document
  endpoint:
    path: /delete_document
    method: DELETE
    data_selector: response
- name: countries
  endpoint:
    path: /hpp/countries
    method: GET
    data_selector: ''
- name: business_types
  endpoint:
    path: /hpp/business_types
    method: GET
    data_selector: ''
    params:
      country_code: string
- name: district_courts
  endpoint:
    path: /hpp/district_courts
    method: GET
    data_selector: ''
    params:
      country_code: string
- name: countries
  endpoint:
    path: /hpp/countries
    method: GET
    data_selector: records
- name: update_applicant_details
  endpoint:
    path: /update/applicant/details
    method: POST
    data_selector: result
- name: upload_applicant_document
  endpoint:
    path: /upload/applicant/document
    method: POST
    data_selector: result
- name: delete_applicant_document
  endpoint:
    path: /delete/applicant/document
    method: DELETE
    data_selector: result
- name: update_business_type
  endpoint:
    path: /update/business/type
    method: POST
    data_selector: result
- name: update_business_profile
  endpoint:
    path: /update/business/profile
    method: POST
    data_selector: result
- name: upload_document
  endpoint:
    path: /upload/document
    method: POST
    data_selector: result
- name: delete_document
  endpoint:
    path: /delete/document
    method: DELETE
    data_selector: result
- name: countries
  endpoint:
    path: /hpp/countries
    method: GET
    data_selector: records
- name: Get Countries
  endpoint:
    path: /hpp/countries
    method: GET
    data_selector: records
- name: Get Merchant Categories
  endpoint:
    path: /hpp/countries
    method: GET
    data_selector: records
- name: Get District Courts
  endpoint:
    path: /hpp/countries
    method: GET
    data_selector: records
- name: Get Business Types
  endpoint:
    path: /hpp/countries
    method: GET
    data_selector: records
- name: countries
  endpoint:
    path: /hpp/countries
    method: GET
    data_selector: ''
- name: countries
  endpoint:
    path: /hpp/countries
    method: GET
    data_selector: records
- name: countries
  endpoint:
    path: /hpp/countries
    method: GET
    data_selector: '[]'
- name: payouts
  endpoint:
    path: /payouts
    method: GET
    data_selector: routing
notes:
- Use client_credentials grant type for OAuth
- Token expires after 3600 seconds
- Use the appropriate audience to switch between Sandbox and Live environments.
- Uses OAuth â€” requires setup of connected app in GetPaid
- Files must be in either JPEG/JPG, PNG or PDF format and be no larger than 4MB.
- If the selected payment method is not SEPA Direct Debit the endpoint returns an
  empty object.
- Provides a sandbox environment for testing integrations
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck client_id or client_secret.'
- 401 Unauthorized
- '401 Unauthorized: Recheck authorization'
- '401 Unauthorized: Recheck Resource-Token'
- '404 - Not Found: The entity you are requesting does not exist or it has been deleted.'
- '409 - Conflict: Request cannot be completed due to the current state of the server.'
- '422 - Invalid parameters: The request body was invalid.'
- '422 - Invalid Parameters: The request body was invalid.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://bff.getpaid.io
  auth:
    type: oauth
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
source_metadata: null
