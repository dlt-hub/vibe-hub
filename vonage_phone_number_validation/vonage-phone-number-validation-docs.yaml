resources:
- name: phone_validation
  endpoint:
    path: /api/validate_phone_number
    method: POST
    data_selector: validation_result
    params: {}
- name: file_upload_settings
  endpoint:
    path: /super-forms/settings/file-upload
    method: GET
    data_selector: settings
- name: licenses
  endpoint:
    path: /account/dashboard/your-licenses
    method: GET
    data_selector: active_licenses
    params: {}
- name: reCaptcha
  endpoint:
    path: /common-problems/index/recaptcha-troubleshooting-fix-not-loading-and-verification-errors
    method: GET
- name: column
  endpoint:
    path: /elements/layout-elements/column-grid
    method: GET
    data_selector: features
- name: multi_part_step
  endpoint:
    path: /elements/layout-elements/multi-part-step
    method: GET
    data_selector: features
- name: column
  endpoint:
    path: /elements/layout-elements/column-grid
    method: GET
    data_selector: features
- name: multi_part_step
  endpoint:
    path: /elements/layout-elements/multi-part-step
    method: GET
    data_selector: features
- name: form_elements
  endpoint:
    path: /elements/form-elements
    method: GET
    data_selector: elements
    params: {}
- name: layout_elements
  endpoint:
    path: /elements/layout-elements
    method: GET
    data_selector: elements
    params: {}
- name: features
  endpoint:
    path: /features
    method: GET
    data_selector: features
    params: {}
- name: integrations
  endpoint:
    path: /features/integrations
    method: GET
    data_selector: integrations
    params: {}
- name: tutorials
  endpoint:
    path: /tutorials
    method: GET
    data_selector: tutorials
    params: {}
- name: Calculator
  endpoint:
    path: /elements/form-elements/calculator
    method: GET
    data_selector: records
- name: dropdown_values
  endpoint:
    path: /dropdown/values
    method: GET
    data_selector: items
- name: math_functions
  endpoint:
    path: /math/functions
    method: GET
    data_selector: functions
- name: form_elements
  endpoint:
    path: /elements/form-elements
    method: GET
- name: layout_elements
  endpoint:
    path: /elements/layout-elements
    method: GET
- name: html_elements
  endpoint:
    path: /elements/html-elements
    method: GET
- name: features
  endpoint:
    path: /features
    method: GET
- name: tutorials
  endpoint:
    path: /tutorials
    method: GET
- name: developers
  endpoint:
    path: /developers
    method: GET
- name: account
  endpoint:
    path: /account
    method: GET
- name: common_problems
  endpoint:
    path: /common-problems
    method: GET
- name: Calculator
  endpoint:
    path: /elements/form-elements/calculator
    method: GET
    data_selector: records
- name: signature
  endpoint:
    path: /elements/form-elements/signature
    method: GET
    data_selector: signature_data
- name: file_upload
  endpoint:
    path: /file-upload
    method: POST
- name: signature
  endpoint:
    path: /elements/form-elements/signature
    method: GET
    data_selector: signature
- name: file_upload
  endpoint:
    path: /elements/form-elements/file-upload
    method: GET
- name: datepicker
  endpoint:
    path: /elements/form-elements/datepicker
    method: GET
    data_selector: records
    params: {}
- name: file_upload
  endpoint:
    path: /file-upload
    method: POST
    data_selector: uploads
    params: {}
- name: Dropdown
  endpoint:
    path: /elements/form-elements/dropdown
    method: GET
    data_selector: items
    params: {}
- name: datepicker
  endpoint:
    path: /datepicker
    method: GET
    data_selector: records
- name: posts
  endpoint:
    path: /wp-json/wp/v2/posts
    method: GET
    data_selector: items
- name: text_field
  endpoint:
    path: /elements/form-elements/text-field
    method: GET
    data_selector: features
    params: {}
- name: posts
  endpoint:
    path: /wp-json/wp/v2/posts
    method: GET
    data_selector: posts
- name: autosuggest
  endpoint:
    path: /elements/form-elements/autosuggest
    method: GET
    data_selector: autosuggest_options
    params: {}
- name: Text field
  endpoint:
    path: /elements/form-elements/text-field
    method: GET
    data_selector: features
- name: autosuggest_field
  endpoint:
    path: /elements/form-elements/autosuggest
    method: GET
    data_selector: retrieved_data
- name: audio_recording
  endpoint:
    path: /elements/form-elements/audio-recording-microphone
    method: GET
    data_selector: audio recording via microphone
- name: audio_recording
  endpoint:
    path: /developers/code-examples/audio-recording-field
    method: GET
    data_selector: records
- name: google_map
  endpoint:
    path: /google/maps/api
    method: GET
- name: email_confirmations
  endpoint:
    path: /features/basic/confirmations-emails
    method: GET
    data_selector: emails
    params: {}
- name: email_body
  endpoint:
    path: /features/advanced/tags-system
    method: GET
    data_selector: fields
    params: {}
- name: email_confirmation
  endpoint:
    path: /features/basic/confirmations-emails
    method: GET
    data_selector: emails
    params: {}
- name: save_form_progression
  endpoint:
    path: /features/basic/save-form-progression-continue-later
    method: GET
    data_selector: progression
- name: translations
  endpoint:
    path: /translations
    method: GET
    data_selector: translations
    params: {}
- name: Form Popup
  endpoint:
    path: /forms/popup
    method: GET
    data_selector: popup_forms
- name: populate_form
  endpoint:
    path: /features/basic/populate-form
    method: GET
    data_selector: data
    params: {}
- name: export_specific_forms
  endpoint:
    path: /export_specific_forms
    method: GET
    data_selector: forms
    params: {}
- name: import_specific_forms
  endpoint:
    path: /import_specific_forms
    method: POST
    data_selector: form_import
    params: {}
- name: export_all_forms
  endpoint:
    path: /export_all_forms
    method: GET
    data_selector: all_forms
    params: {}
- name: import_all_forms
  endpoint:
    path: /import_all_forms
    method: POST
    data_selector: form_import_all
    params: {}
- name: Hide form after submitting
  endpoint:
    path: /features/basic/hide-form-after-submitting
    method: GET
    data_selector: records
- name: Hide or lock out user from your forms
  endpoint:
    path: /features/basic/hide-or-lock-out-user-from-your-forms
    method: GET
- name: Export Specific Forms
  endpoint:
    path: /export/specific-forms
    method: GET
    data_selector: forms
    params: {}
- name: Import Specific Forms
  endpoint:
    path: /import/specific-forms
    method: POST
    data_selector: forms
    params: {}
- name: Export All Forms
  endpoint:
    path: /export/all-forms
    method: GET
    data_selector: forms
    params: {}
- name: Import All Forms
  endpoint:
    path: /import/all-forms
    method: POST
    data_selector: forms
    params: {}
- name: Hide form after submitting
  endpoint:
    path: /form-settings/hide-after-submitting
    method: GET
    data_selector: formSettings
    params: {}
- name: hide_or_lock_out_user
  endpoint:
    path: /features/basic/hide-or-lock-out-user-from-your-forms
    method: GET
- name: user_form
  endpoint:
    path: /forms
    method: GET
    data_selector: forms
    params: {}
- name: letters_only
  endpoint:
    path: /validation/letters_only
    method: GET
    data_selector: regex
    params: {}
- name: required_field
  endpoint:
    path: /validation/required_field
    method: GET
    data_selector: regex
    params: {}
- name: email_address
  endpoint:
    path: /validation/email_address
    method: GET
    data_selector: regex
    params: {}
- name: phone_number
  endpoint:
    path: /validation/phone_number
    method: GET
    data_selector: regex
    params: {}
- name: numeric
  endpoint:
    path: /validation/numeric
    method: GET
    data_selector: regex
    params: {}
- name: float
  endpoint:
    path: /validation/float
    method: GET
    data_selector: regex
    params: {}
- name: website_url
  endpoint:
    path: /validation/website_url
    method: GET
    data_selector: regex
    params: {}
- name: iban
  endpoint:
    path: /validation/iban
    method: GET
    data_selector: regex
    params: {}
- name: custom_registration_form
  endpoint:
    path: /custom/registration
    method: POST
    data_selector: user_registration
    params:
      user_email: user_email
      user_login: user_login
      user_pass: user_pass
- name: custom_user_meta
  endpoint:
    path: /custom_user_meta
    method: POST
    data_selector: fields
    params: {}
- name: registration_status
  endpoint:
    path: /registration_status
    method: PUT
    data_selector: status
    params: {}
- name: block_user
  endpoint:
    path: /block_user
    method: PATCH
    data_selector: user_status
    params: {}
- name: login_form
  endpoint:
    path: /super-forms/login
    method: POST
    data_selector: data
    params: {}
- name: verification_code
  endpoint:
    path: /features/advanced/custom-registration-form-for-wordpress
    method: GET
    data_selector: verification_code
    params: {}
- name: lost_password_form
  endpoint:
    path: /wp-login.php?action=lostpassword
    method: GET
- name: password_validation
  endpoint:
    path: /regex/password
    method: GET
    data_selector: regex
    params: {}
- name: username_validation
  endpoint:
    path: /regex/username
    method: GET
    data_selector: regex
    params: {}
- name: ip_address_validation
  endpoint:
    path: /regex/ip
    method: GET
    data_selector: regex
    params: {}
- name: credit_card_validation
  endpoint:
    path: /regex/credit_card
    method: GET
    data_selector: regex
    params: {}
- name: email_address_validation
  endpoint:
    path: /regex/email
    method: GET
    data_selector: regex
    params: {}
- name: email_address_except_domains_validation
  endpoint:
    path: /regex/email_except_domains
    method: GET
    data_selector: regex
    params: {}
- name: integer_validation
  endpoint:
    path: /regex/integer
    method: GET
    data_selector: regex
    params: {}
- name: number_range_0_255_validation
  endpoint:
    path: /regex/number_range_0_255
    method: GET
    data_selector: regex
    params: {}
- name: number_range_0_999_validation
  endpoint:
    path: /regex/number_range_0_999
    method: GET
    data_selector: regex
    params: {}
- name: ints_and_floats_validation
  endpoint:
    path: /regex/ints_and_floats
    method: GET
    data_selector: regex
    params: {}
- name: number_1_to_50_validation
  endpoint:
    path: /regex/number_1_to_50
    method: GET
    data_selector: regex
    params: {}
- name: phone_number_validation
  endpoint:
    path: /regex/phone_number
    method: GET
    data_selector: regex
    params: {}
- name: date_format_validation
  endpoint:
    path: /regex/date_format
    method: GET
    data_selector: regex
    params: {}
- name: url_validation
  endpoint:
    path: /regex/url
    method: GET
    data_selector: regex
    params: {}
- name: domain_name_http_validation
  endpoint:
    path: /regex/domain_name_http
    method: GET
    data_selector: regex
    params: {}
- name: domain_name_www_validation
  endpoint:
    path: /regex/domain_name_www
    method: GET
    data_selector: regex
    params: {}
- name: domain_name_alternative_validation
  endpoint:
    path: /regex/domain_name_alternative
    method: GET
    data_selector: regex
    params: {}
- name: subdomains_validation
  endpoint:
    path: /regex/subdomains
    method: GET
    data_selector: regex
    params: {}
- name: jpg_gif_png_images_validation
  endpoint:
    path: /regex/jpg_gif_png_images
    method: GET
    data_selector: regex
    params: {}
- name: all_images_validation
  endpoint:
    path: /regex/all_images
    method: GET
    data_selector: regex
    params: {}
- name: png_images_validation
  endpoint:
    path: /regex/png_images
    method: GET
    data_selector: regex
    params: {}
- name: rgb_color_string_validation
  endpoint:
    path: /regex/rgb_color_string
    method: GET
    data_selector: regex
    params: {}
- name: hex_color_string_validation
  endpoint:
    path: /regex/hex_color_string
    method: GET
    data_selector: regex
    params: {}
- name: hexadecimal_color_code_validation
  endpoint:
    path: /regex/hexadecimal_color_code
    method: GET
    data_selector: regex
    params: {}
- name: html_tag_validation_v1
  endpoint:
    path: /regex/html_tag_v1
    method: GET
    data_selector: regex
    params: {}
- name: html_tags_validation_v2
  endpoint:
    path: /regex/html_tags_v2
    method: GET
    data_selector: regex
    params: {}
- name: product_id_validation
  endpoint:
    path: /regex/product_id
    method: GET
    data_selector: regex
    params: {}
- name: letters_numbers_hyphens_validation
  endpoint:
    path: /regex/letters_numbers_hyphens
    method: GET
    data_selector: regex
    params: {}
- name: update_current_logged_in_user
  endpoint:
    path: /features/advanced/update-current-logged-in-user
    method: GET
    data_selector: records
    params: {}
- name: form_elements
  endpoint:
    path: /elements/form-elements
    method: GET
    data_selector: elements
    params: {}
- name: layout_elements
  endpoint:
    path: /elements/layout-elements
    method: GET
    data_selector: elements
    params: {}
- name: update_current_logged_in_user
  endpoint:
    path: /features/advanced/update-current-logged-in-user
    method: POST
    data_selector: user_data
    params: {}
- name: Dropdown
  endpoint:
    path: /sheets
    method: GET
    data_selector: rows
- name: registration_form
  endpoint:
    path: /custom-registration-form
    method: POST
    data_selector: form_data
    params: {}
- name: prevent_duplicate_entries
  endpoint:
    path: /prevent_duplicate_entries
    method: POST
    data_selector: entries
    params: {}
- name: login_form
  endpoint:
    path: /path/to/login/form/endpoint
    method: POST
    data_selector: response
    params: {}
- name: lock_form_submission
  endpoint:
    path: /lock_form_submission
    method: GET
    data_selector: form_lock_settings
- name: password_protect
  endpoint:
    path: /password-protect
    method: GET
    data_selector: form_settings
- name: lost_password_form
  endpoint:
    path: /wp-login.php?action=lostpassword
    method: GET
- name: update_current_logged_in_user
  endpoint:
    path: /features/advanced/update-current-logged-in-user
    method: POST
    data_selector: response
    params: {}
- name: update_current_logged_in_user
  endpoint:
    path: /features/advanced/update-current-logged-in-user
    method: POST
    data_selector: user_data
    params: {}
- name: prevent_duplicate_entries
  endpoint:
    path: /prevent-duplicate-entries
    method: GET
    data_selector: entries
    params: {}
- name: address_lookup
  endpoint:
    path: /address/lookup
    method: GET
    data_selector: results
- name: lock_form_submission
  endpoint:
    path: /lock_form_submission
    method: GET
    data_selector: records
    params: {}
- name: global_form_locker
  endpoint:
    path: /global_form_locker
    method: GET
    data_selector: records
    params: {}
- name: password_protect
  endpoint:
    path: /password-protect
    method: GET
    data_selector: form_settings
    params: {}
- name: e-mail_reminders
  endpoint:
    path: /e-mail-reminders
    method: GET
    data_selector: reminders
    params: {}
- name: form_submissions
  endpoint:
    path: /track/form_submissions
    method: POST
    data_selector: events
- name: Include Form
  endpoint:
    path: /features/advanced/form-templates-include-elements-into-other-forms-wordpress
    method: GET
    data_selector: records
- name: form_transfer
  endpoint:
    path: /transfer/form
    method: POST
    data_selector: fields
- name: form_submission
  endpoint:
    path: /generate/pdf
    method: POST
    data_selector: pdf
    params: {}
- name: e-mail_reminders
  endpoint:
    path: /e-mail-reminders
    method: GET
    data_selector: reminders
    params: {}
- name: variable_field
  endpoint:
    path: /elements/form-elements/variable-field
    method: GET
    data_selector: records
- name: Include Form
  endpoint:
    path: /features/advanced/form-templates-include-elements-into-other-forms-wordpress
    method: GET
    data_selector: elements
    params: {}
- name: WooCommerce Checkout
  endpoint:
    path: /features/integrations/woocommerce-checkout
    method: GET
- name: PayPal Checkout
  endpoint:
    path: /super-forms/paypal-checkout
    method: POST
    data_selector: checkout_data
    params: {}
- name: form_transfer
  endpoint:
    path: /transfer/form
    method: POST
    data_selector: fields
    params: {}
- name: shipping_address
  endpoint:
    path: /shipping-address-requirement
    method: GET
- name: payment_checkout_types
  endpoint:
    path: /checkout/types
    method: GET
- name: return_url
  endpoint:
    path: /return-url
    method: POST
- name: cancel_url
  endpoint:
    path: /cancel-url
    method: POST
- name: email_after_payment
  endpoint:
    path: /email-notification
    method: POST
- name: forms
  endpoint:
    path: /super-forms/pdf-generator
    method: POST
    data_selector: pdf_data
- name: audience
  endpoint:
    path: /audience
    method: POST
    data_selector: subscribers
- name: contact_entries
  endpoint:
    path: /listings
    method: GET
- name: Mailster Subscriber
  endpoint:
    path: /mailster/subscriber
    method: POST
    data_selector: data
    params:
      list_id: Subscriber list ID('s) separated by comma's
- name: form
  endpoint:
    path: /zapier
    method: POST
    data_selector: submission
- name: fixed_price_checkout
  endpoint:
    path: /features/integrations/woocommerce-checkout/fixed-price-checkout
    method: GET
- name: dynamic_price_checkout
  endpoint:
    path: /features/integrations/woocommerce-checkout/dynamic-price-checkout
    method: GET
- name: variable_product_checkout
  endpoint:
    path: /features/integrations/woocommerce-checkout/variable-product-checkout-variations
    method: GET
- name: replace_add_to_cart
  endpoint:
    path: /features/integrations/woocommerce-checkout/replacing-the-add-to-cart-on-a-product-page-with-a-form
    method: GET
- name: hide_product
  endpoint:
    path: /features/integrations/woocommerce-checkout/hiding-product-from-shop-and-order-via-custom-form
    method: GET
- name: woocommerce_checkout
  endpoint:
    path: /features/integrations/woocommerce-checkout
    method: GET
    data_selector: products
    params: {}
- name: PayPal Checkout
  endpoint:
    path: /super-forms/paypal-checkout
    method: POST
    data_selector: checkout
    params: {}
- name: checkout
  endpoint:
    path: /checkout
    method: GET
    data_selector: transactions
    params: {}
- name: form_submission
  endpoint:
    path: /hooks/zapier.com/hooks/catch/2103251/2d3e581/
    method: POST
    data_selector: submissions
    params: {}
- name: MailChimp Audience
  endpoint:
    path: /audiences
    method: POST
    data_selector: subscribers
    params: {}
- name: Accept Terms of Service
  endpoint:
    path: /super-forms/demos/accept-terms-of-service
    method: GET
    data_selector: form_data
    params: {}
- name: Mailster Subscribers
  endpoint:
    path: /mailster/subscribers
    method: POST
    data_selector: subscriber
    params:
      list_id: Subscriber list ID('s) separated by comma's
- name: zapier
  endpoint:
    path: /zapier
    method: POST
    data_selector: data
    params: {}
- name: booking_24_hours_ahead
  endpoint:
    path: /example-forms-for-wordpress/booking-24-hours-ahead-of-time
    method: GET
    data_selector: form_elements_code
    params: {}
- name: create_order
  endpoint:
    path: /create_order
    method: POST
    data_selector: order
    params: {}
- name: update_order
  endpoint:
    path: /update_order/{order_id}
    method: PUT
    data_selector: order
    params: {}
- name: lookup_city
  endpoint:
    path: /json
    method: GET
    data_selector: results
    params:
      address: zipCode,country
      key: XXXXX-XXXXX-XXXXX
- name: audio_recording
  endpoint:
    path: /audio_recording
    method: POST
    data_selector: files
    params: {}
- name: department_emails
  endpoint:
    path: /path/to/department/emails
    method: GET
    data_selector: emails
    params: {}
- name: booking_form
  endpoint:
    path: /example-forms-for-wordpress/booking-24-hours-ahead-of-time
    method: GET
    data_selector: form_elements
    params: {}
- name: form_elements
  endpoint:
    data_selector: data
- name: lookup_city_by_zipcode
  endpoint:
    path: /geocode/json
    method: GET
    data_selector: results
    params:
      address: '{{zipcode}},{{country}}'
      key: '{{api_key}}'
- name: audio_recording
  endpoint:
    path: /super-forms/audio_recording
    method: POST
    data_selector: files
    params: {}
- name: code_comparison
  endpoint:
    path: /compare/input/field/value
    method: POST
    data_selector: error
    params: {}
- name: user_meta_update
  endpoint:
    path: /developers/code-examples/updating-wordpress-user-meta-data-after-login
    method: POST
    data_selector: data
    params: {}
- name: form_submission
  endpoint:
    path: /insert-form-data
    method: POST
    data_selector: data
    params: {}
- name: delete_database_row
  endpoint:
    path: /developers/code-examples/delete-database-row-after-contact-entry-is-deleted-in-wordpress
    method: GET
    data_selector: code_example
    params: {}
- name: limited_date_availability
  endpoint:
    path: /developers/code-examples/limited-date-availability-slots-for-your-wordpress-booking-form
    method: GET
    data_selector: example_code
- name: availability
  endpoint:
    path: /
    method: GET
    data_selector: slots
    params:
      fieldName: date
      date: 08-07-2023
- name: form_data
  endpoint:
    path: /insert-form-data
    method: POST
    data_selector: data
    params: {}
- name: delete_database_row
  endpoint:
    path: /developers/code-examples/delete-database-row-after-contact-entry-is-deleted-in-wordpress
    method: GET
    data_selector: code
    params: {}
- name: submitted_form_data
  endpoint:
    path: /submit_form
    method: POST
    data_selector: data
    params: {}
- name: exclude_empty_fields
  endpoint:
    path: /developers/code-examples/exclude-empty-fields-from-emails
    method: GET
    data_selector: data
    params: {}
- name: booking_slots
  endpoint:
    path: /check_availability
    method: POST
    data_selector: response
    params:
      fieldName: date
      slots: 5
- name: availability_update
  endpoint:
    path: /
    method: GET
    data_selector: slots
    params:
      fieldName: date
      date: 08-07-2023
      slots: '7'
- name: file_meta_conversion
  endpoint:
    path: /super_front_end_posting_after_insert_post_action
    method: POST
    data_selector: file_conversion
    params: {}
- name: submitted_form_data
  endpoint:
    path: /submit-data
    method: POST
    data_selector: response
    params: {}
- name: exclude_empty_fields
  endpoint:
    path: /developers/code-examples/exclude-empty-fields-from-emails
    method: GET
    data_selector: data
- name: metadata_conversion
  endpoint:
    path: /super_front_end_posting_after_insert_post_action
    method: POST
    data_selector: meta_keys
    params: {}
- name: custom_post_headers
  endpoint:
    path: /create/post
    method: POST
    data_selector: headers
    params: {}
- name: client_data_cleanup
  endpoint:
    path: /developers/code-examples/define-fake-cronjob-to-clear-old-client-data-if-cronjob-is-disabled-on-your-server
    method: GET
    data_selector: function
    params: {}
- name: global_field
  endpoint:
    path: /global-fields
    method: GET
    data_selector: fields
    params: {}
- name: email_resend
  endpoint:
    path: /resend-email
    method: POST
    data_selector: result
    params: {}
- name: contact_entry
  endpoint:
    path: /manage_super_contact_entry_posts_columns
    method: POST
    data_selector: columns
- name: form_elements
  endpoint:
    path: /elements/form-elements
    method: GET
    data_selector: elements
    params: {}
- name: layout_elements
  endpoint:
    path: /elements/layout-elements
    method: GET
    data_selector: elements
    params: {}
- name: dynamic_column_datepicker
  endpoint:
    path: /generate-dynamic-columns
    method: POST
    data_selector: form_elements
    params: {}
- name: Hide eye icon
  endpoint:
    path: /developers/code-examples/hide-eye-icon-from-listings-row-based-on-user-role
    method: GET
- name: trim_all_fields
  endpoint:
    path: /super_before_sending_email_data_filter
    method: POST
    data_selector: data
    params: {}
- name: trim_specific_fields
  endpoint:
    path: /super_before_sending_email_data_filter
    method: POST
    data_selector: data
    params: {}
- name: variable_product_checkout
  endpoint:
    path: /api/woocommerce/checkout
    method: POST
    data_selector: products
    params:
      sku: '{sku}|{quantity}'
- name: email_resend
  endpoint:
    path: /super_before_submit_form_settings_filter
    method: POST
    data_selector: settings
    params: {}
- name: contact_entry
  endpoint:
    path: /manage_super_contact_entry_posts_columns
    method: GET
    data_selector: columns
    params: {}
- name: dynamic_column_datepicker
  endpoint:
    path: /generate-dynamic-columns-with-dates-based-on-user-selected-date-from-datepicker-element
    method: POST
    data_selector: data
    params: {}
- name: Global settings
  endpoint:
    path: /wp_option/super_settings
    method: GET
    data_selector: settings
    params: {}
- name: Local form Settings
  endpoint:
    path: /wp_postmeta/_super_form_settings
    method: GET
    data_selector: form_settings
    params: {}
- name: Contact entries
  endpoint:
    path: /wp_posts?post_type=super_contact_entry
    method: GET
    data_selector: contact_entries
    params: {}
- name: Forms
  endpoint:
    path: /wp_posts?post_type=super_form
    method: GET
    data_selector: forms
    params: {}
- name: Individual form Elements
  endpoint:
    path: /wp_postmeta/_super_elements
    method: GET
    data_selector: elements
    params: {}
- name: Individual form Triggers
  endpoint:
    path: /wp_postmeta/_super_triggers
    method: GET
    data_selector: triggers
    params: {}
- name: Individual form translations
  endpoint:
    path: /wp_postmeta/_super_translations
    method: GET
    data_selector: translations
    params: {}
- name: Uploaded files
  endpoint:
    path: /wp-content/uploads/superforms/
    method: GET
    data_selector: uploaded_files
    params: {}
- name: Listings
  endpoint:
    path: /developers/code-examples/hide-eye-icon-from-listings-row-based-on-user-role
    method: GET
- name: variable_product_checkout
  endpoint:
    path: /variable-product-checkout
    method: POST
    data_selector: products
- name: global_settings
  endpoint:
    path: /wp_option/super_settings
    method: GET
    data_selector: ''
- name: local_form_settings
  endpoint:
    path: /wp_postmeta/_super_form_settings
    method: GET
    data_selector: ''
- name: contact_entries
  endpoint:
    path: /wp_posts?post_type=super_contact_entry
    method: GET
    data_selector: ''
- name: forms
  endpoint:
    path: /wp_posts?post_type=super_form
    method: GET
    data_selector: ''
- name: form_elements
  endpoint:
    path: /wp_postmeta/_super_elements
    method: GET
    data_selector: ''
- name: form_triggers
  endpoint:
    path: /wp_postmeta/_super_triggers
    method: GET
    data_selector: ''
- name: form_translations
  endpoint:
    path: /wp_postmeta/_super_translations
    method: GET
    data_selector: ''
- name: uploaded_files
  endpoint:
    path: /wp-content/uploads/superforms/
    method: GET
    data_selector: ''
notes:
- Phone number validation helps prevent the entry of invalid or incorrectly formatted
  phone numbers.
- On some servers it might be required to re-save your permalinks via Settings > Permalinks
  > Save Changes.
- Start a 15 day free trial and try out the plugin for free
- Once your trial is active make sure to read the First time setup which covers some
  basics about Super Forms.
- Files uploaded through forms will not display in the WordPress Media Library by
  default.
- To store files securely, upload them outside the root folder of your site.
- Global Settings will never affect previously created form settings if they do not
  share the same values.
- In general it is good practice to always use columns when building your forms.
- Backups will be created automatically by Super Forms each time you Save the form.
- In total, a maximum of 50 backups per form will be created.
- 'If you are unable to upload files via your form the first thing you should try
  is to check if the server returns a 403 error (Forbidden) on the following URL:
  http://yourdomain.com/wp-content/plugins/super-forms/uploads/php/'
- Check if uploading a small file works.
- If you are able to upload smaller files, it is most likely due to your PHP settings
  regarding file uploads.
- To upload large files, post_max_size value must be larger than upload_max_filesize.
- memory_limit should be larger than post_max_size.
- In order to view your Invoices you will have to login with your Super Forms account
  first!
- In order to transfer a license from site A to site B, you must be logged in on site
  B.
- Common problems include email delivery issues and session expiration.
- Allow storing cookies must be set to Enabled under Super Forms > Settings > Form
  Settings.
- If loading the form via an iframe from a different origin, disable the CSRF check
  under Super Forms > Settings > Form Settings.
- If you are unable to upload files via your Media library from the WordPress menu,
  the issue is with your WordPress site or server.
- If your server is returning a timeout error, you can try to increase max_execution_time
  and max_input_time settings.
- If loading the form via iframe from a different origin, CSRF check must be disabled
  under Super Forms > Settings > Form Settings.
- A column can also be inserted into another column with unlimited nesting possibility.
- Conditional logic can be applied on almost all elements.
- reCaptcha requires a valid SSL certificate on your domain.
- If you switch from v3 to v2, you must generate a fresh v2 key pair—v2 and v3 keys
  are not interchangeable.
- Use for large forms or when space is limited.
- A multi-part allows creating WordPress forms that consist of multiple steps.
- Each multi-part represents its own step.
- The Math setting is compatible with the {tags} system.
- Dynamic columns cannot use plain {tags} in calculations due to suffix naming.
- By default the signature will be attached to your E-mails after the form is submitted.
- Signatures will be included in the PDF file by default unless configured to be excluded.
- File uploads are handled based on user settings.
- Setting a maximum file upload size.
- The Signature Element allows you to collect digital signatures from users that fill
  out the form.
- Date formats vary largely across the globe, which is why this setting will be much
  appreciated in case you need to change to a different date format.
- Perhaps your business or service is only closed on Sunday, in this case you should
  use the General > Exclude specific days setting and leave above options enabled.
- Default date range is not defined.
- Custom date format may not be compatible with some features.
- Operators you may use are IN, NOT IN, AND, EXISTS and NOT EXISTS.
- Allows users to filter through a set of predefined values by typing in a text field
  while permitting free text entry.
- The Text field element allows users to enter data inside an input area which consists
  of a single line.
- Allows users to filter through predefined values while also entering their own value.
- This is not a native field that is included in Super Forms, instead for the time
  being it's possible with a small JavaScript code to allow users to upload a audio
  recording with the use of a microphone.
- Audio recording via microphone is possible with a small JavaScript code to allow
  users to upload an audio recording.
- Used to visually divide sections of your WordPress form for a more user friendly
  experience allowing the user to continue to the next step or previous step in your
  form
- This element is only used in combination with the PDF Generator Add-on
- You must have a valid API key. Obtain it from the API manager and enable the Google
  Maps JavaScript API.
- This element is solely for creating vertical spaces between elements in your WordPress
  form!
- Confirmation emails can be sent to both admin and user.
- The email address for the user is taken from a field named 'email'.
- Admin email is taken from the WordPress administrative email address.
- When using the Google Map element you must have a valid API key.
- Make sure to enable the Google Maps JavaScript API for your API.
- Fields that are conditionally hidden will be excluded completely.
- You can create custom HTML E-mail.
- Both emails can have different body contents and both can be enabled or disabled
  depending on your use case via the Form Settings.
- By default both will contain all data that was filled out on the form.
- Fields that are conditionally hidden will be excluded completely and can not be
  retrieved even when using {tags}.
- Translate your forms on the fly without requiring an additional plugin.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Saving form progression works for both logged in users and none logged in users.
- Auto population refers to the process of automatically filling in a field in a form
  with a predetermined value, which the field did not originally have on its own.
- This method requires the user to be logged in.
- Auto population can be done via GET request or POST request.
- Auto population requires user to be logged in for retrieving last submitted data.
- Some objects like Contact may return nulls in deeply nested fields
- Exports will not contain any media files such as images or CSV files.
- You can hide a form from logged out users or from specific user roles.
- You can display a message based on these conditions to the user.
- The form will fade out as soon as the form was successfully submitted by the user.
- Allows hiding forms from logged in users
- Supports locking forms for specific user roles
- Display a message or notification regarding the lockout.
- We have a dedicated guide on how to password protect your forms.
- If no match was found based on the entered value the Error Message will be displayed
  to the user.
- Make sure to copy the service account email address as shown in the picture below.
  You will need it later on to share the Google Sheet document.
- If you choose for a private sheet, you will require to add (share) the sheet with
  the service account created so that it has permissions to view the contents.
- Your form must contain fields named user_email and optionally a user_login field.
- A Password field exactly named user_pass should be added, otherwise a random password
  will be generated.
- Users can register without a password, a new password is generated automatically.
- User login status can be set to Pending or Blocked.
- Your login form must have fields named exactly `user_login` and a password field
  named exactly `user_pass`.
- Adding the 'Verification Code' element to allow registered users to verify and activate
  their account on your WordPress website.
- Make sure the Login page URL points to the URL where your custom Login form is displayed.
- Ensure your form has a field named user_email for receiving the Lost Password E-mail.
- Leave the 'User role' setting empty to keep the current user role unchanged.
- Requires sharing the Google Sheet with the service account email.
- Default range is 'Sheet1'.
- 'When configuring your Email settings, make sure to double check that your Send
  email from: is correctly set to send emails from your actual domain name e.g. no-reply@mydomain.com.'
- A Password field exactly named user_pass should be added, otherwise a random password
  will be generated on the fly.
- Users require to enter their age on the registration form.
- User login status after registration can be set to 'Pending' or 'Blocked'.
- Users can register without entering a password.
- For this to work you must have the option to save contact entries enabled.
- Allows locking form after specific submissions
- Can define a message to display when submission limit is reached
- You can define the password required to submit the form.
- Form can be submitted by specific user roles.
- Also make sure that your form has a field named user_email, which is where the user
  will receive the 'Lost Password E-mail' at.
- Leave the 'User role' option empty when updating existing users to avoid impacting
  current user roles.
- Retrieve the total words, chars from a Textarea field
- Retrieve pre-uploaded file information from the file upload element
- Retrieve the current page or post title
- Retrieve the current page or post ID
- Retrieve the current post custom meta data
- Retrieve the IP-address of the submitter
- Retrieve Cart information (when WooCommerce is installed and activated)
- Retrieve the total submission count (if form locker is used)
- Retrieve the latest Contact Entry ID that was created for this form
- Retrieve the latest Contact Entry status that was created for this form
- Retrieve the previous location (URL) in a session
- Retrieve the previous location (URL) where the user navigated from
- Retrieve current date values in server timestamp (UTC/GMT)
- Retrieve current date values in server timestamp (Local time)
- Retrieve current post URL (permalink)
- Retrieve contact entry ID that was created after submitting form
- Retrieve author information based on the current page/post the form is placed on
- Retrieve values of logged in user
- Retrieve any option from the wp_options database table
- Retrieve any option from the wp_options database table that is of type Array
- Retrieve the e-mail address of blog administrator
- Retrieve the weblog title; set in General Options
- Retrieve the tagline for your blog; set in General Options
- Retrieve the blog Charset
- Retrieve the date Format
- Retrieve the default post category; set in Writing Options
- Retrieve the blog's home web address; set in General Options
- Retrieve the WordPress web address; set in General Options
- Retrieve the current theme's name; set in Presentation
- Retrieve the start of the week
- Retrieve the default upload location; set in Miscellaneous Options
- Retrieve the posts per page
- Retrieve the posts per RSS feed
- Retrieve any field value submitted by the user
- Retrieve the field label for the field loop
- Retrieve the field value for the field loop
- Retrieve the loop anywhere in your email
- Retrieve timestamp from datepicker value
- Retrieve the current/total PDF pages
- Retrieve the generated PDF file label/name/url
- To use this feature you must first obtain a Google API key via your API manager.
- New Google API users are required to enable the Places API (New) since Google does
  not allow usage of their Places API (legacy) for new users.
- You will require a Tracking ID from your Google Analytics account to make this work.
- Users with the `administrator` role can submit the form if defined.
- Conditional logic allows you to show or hide specific elements based on a other
  fields value.
- When a field or element is conditionally hidden it will not be visible to the user.
- Make sure the Directions API library is enabled in your API manager.
- If statements can be used inside your HTML element and or email body with the build
  in 'if statements' for your WordPress forms
- This feature also works with HTML elements since v4.6.0+
- You must first obtain a Google API key via your API manager.
- Since March 2025 new Google API users are required to enable the Places API (New).
- Configure unlimited amount of reminders per form
- Send reminder based on form submission date or based on user defined date through
  {date;timestamp} tag
- Define how many days before or after the base date the reminder should be sent
- Enable the option Track form submissions with Google Analytics.
- Reduces editing time while building forms.
- Default PDF filename is form.pdf, can be changed using Tags system.
- Send E-mail reminders based on form submission date or user defined date through
  {tags}.
- By default the generated PDF file has it's orientation set to 'Portrait'
- When you enable the PDF to generate native elements, it will not take a snapshot
  (image) of the form.
- With smart page breaks enabled any element and or text will automatically be pushed
  onto the next page in case it didn't fit on the previous page for the full 100%.
- Variable fields can be updated dynamically based on other field values or user input.
- Add-on required for WC order, WC order status, PayPal order, PayPal order status,
  PayPal subscription, Created post title, Created post status, Generated PDF
- It is recommended to always enable the PayPal Sandbox mode during testing of your
  form.
- Make sure you properly change return and cancel URLs to your own needs before going
  live.
- Test your form functioning with a PayPal sandbox account before going live.
- PDF will look identical to what the user sees on the front-end.
- Custom HTML and CSS can be used.
- By default the generated PDF file has it's orientation set to 'Portrait', but for
  some use cases you might prefer the 'Landscape' orientation.
- This feature is currently only available in the BETA version.
- Make sure your form has at least an email field named `email` which is required
  by MailChimp.
- Enable Zapier connection in Form Settings.
- Use the Zapier webhook URL for your form.
- This feature is work in progress and not yet available to the public.
- Ensure proper return and cancel URLs are set before going live.
- Automates data collection from WordPress forms to Google Sheets via Zapier.
- Users must agree to terms to submit the form.
- Form can be configured to not store data without consent.
- It is good practice to not expose an E-mail address directly into the source code
  of a web page to prevent spam.
- You can configure secrets to set the dropdown values to be {@sales_email} and {@support_email}
  which will not expose the E-mail address in the source code.
- Make sure to check Enable Zapier connection in Form Settings.
- The form will display a message if the chosen date and time is not 24 hours in the
  future.
- Reservations must be placed 24 hour ahead of time. Please choose a different time.
- 'Automated Data Entry: Automatically transfer form submissions to Google Sheets,
  eliminating the need for manual input.'
- 'Increased Accuracy: With direct form-to-sheet transfer, human errors from manual
  data entry are reduced.'
- 'Real-time Data Management: Every form submission is instantly recorded in your
  Google Sheet, giving you real-time data access.'
- 'Collaboration & Sharing: Multiple team members can access, edit, and collaborate
  on the same Google Sheet for enhanced teamwork and data management.'
- 'Customization & Automation: Use Zapier to map fields, set up custom workflows,
  and even trigger notifications based on the data collected.'
- You can change the country name in the API request URL to lookup zipcodes from inside
  a specific region or country only.
- If you require such a future please submit a ticket.
- Deleting the plugin will not delete any of your forms, contact entries or saved
  settings
- Good practice to not expose an E-mail address directly into the source code of a
  web page to prevent spam.
- This method requires Super Forms v6.3.709 or higher to work
- Form requires at least 24 hours notice for bookings.
- Prevent submitting form on pressing 'Enter' keyboard button is recommended.
- The below action hook only works with Super Forms v6.3.708+
- Insert the provided PHP code in your child theme functions.php file, or create a
  custom plugin.
- Insert form data into a custom WordPress database table upon form submission.
- Insert the PHP code in your child theme functions.php file, or create a custom plugin.
- Allow only a maximum amount of bookings (slots) for a specific date for your WordPress
  booking form.
- Display an error message when the date is fully booked and no longer available for
  selection.
- Manually set/reset the availability for a specific date using query parameters.
- Requires changing the URL and form ID in the provided code.
- Allows a maximum of 5 bookings for a specific date.
- Displays an error message when the date is fully booked.
- Updating a comma separated string to Array for WordPress meta data via Front-end
  Posting when creating a new post after form submission.
- The code is useful for Checkbox fields made within Toolset plugin.
- Updating the file ID to point to the file URL for WordPress meta data when saving
  a post via Front-end Posting.
- This code should no longer be used, you can now configure this via Super Forms >
  Settings > File Upload Settings
- Replace URL and form ID in the provided code example accordingly.
- Always set the cookie lifetime to a higher value than the client data lifetime.
- If needed you can change how the cookie is being stored, by default when is_ssl()
  returns true, a secure cookie will be stored.
- The cookie HttpOnly parameter is always set to true unless you define otherwise
- Super Forms also has an option that does this for you on the form builder page under
  Form Settings > Confirmation E-mail > Exclude empty values from email loop
- By default Super Forms will clean up expired client data each 1 out of 50 requests,
  if you wish to increase this you can increase it to 500 or 9999 as an example.
- The below filter hook is only useful whenever you are not using a translation plugin
- When you are not using any language plugin to translate your website but still want
  to have a specific page in a different language, you will have to change the <html>
  language attribute based on the current page URL.
- Define custom headers when doing a POST request based on the URL.
- Always set the cookie lifetime to a higher value than the client data lifetime,
  for instance if you set the cookie expiry to 10 hours, your client data can't exceed
  10 hours simply because the session would already be deleted along with any data.
- The cookie HttpOnly parameter is always set to true unless you define otherwise.
- In order for the code to work properly you will require to enable the Global form
  locker setting on your form.
- The form locker/submission count is not connected to the Contact Entries created
  by the form.
- By default Super Forms will clean up expired client data each 1 out of 50 requests.
- This is important so that whenever a user visits a page that is different from your
  main site language the browser won't try to translate the page
- Change WordPress form checkbox/radio layout to vertical on mobile devices
- In order for the below code to work properly you will require to enable the Global
  form locker setting on your form.
- The form locker/submission count is not connected to the Contact Entries created
  by the form. Deleting entries will not affect the counter.
- Place the below JavaScript code on the page where your form is located
- Make sure to adjust it according to your form field names
- At the time of writing Super Forms doesn't yet come with a feature that allows you
  to add a so called `Global field`.
- Uses variable fields to generate SKU dynamically based on user selected options.
- This code allows re-sending Admin and Confirmation emails after editing an entry.
- BETA version available for testing new features
- This example code allows you to use variable fields inside your form to generate
  the SKU dynamically based on user selected options.
- This version has already been tested by a small set of users, so you will probably
  not encounter any issues using it.
- On some servers it might be required to re-save your permalinks via Settings > Permalinks
  > Save Changes. This may resolve some common issues with exporting/downloading data
  within Super Forms.
errors:
- '403 error: Please contact your hosting company to let them fix this issue.'
- 'Unable to rename the update to match the existing directory: It is always a permissions
  problem on your server.'
- 'Email delivery problems: Check spam folder.'
- 'File upload problems: Ensure file size is within limits.'
- 'Session expired: Refresh your session.'
- 'Timeout error: Increase max_execution_time and max_input_time.'
- Unable to submit form, session expired!
- If you are unable to upload files, it is most likely due to incorrect permissions
  on the server.
- If you are able to upload smaller files, it is most likely due to your PHP settings
  regarding file uploads.
- Google reCAPTCHA verification failed!
- 'Duplicate entry: The entry title already exists.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Entered code is invalid, please try again
- 'wp_remote_post failed: Check URL and network connection'
- Trigger the function to delete old client data roughly 1 out of 50 requests
- 'Invalid SKU: {sku}'
- 'SKU does not match a product variation: {sku}'
auth_info:
  mentioned_objects: []
client:
  base_url: https://docs.super-forms.com
  headers:
    Accept: application/json
source_metadata: null
