resources:
- name: elements
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}
    method: PATCH
    data_selector: formFields
    params: {}
- name: new_element
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements
    method: POST
    data_selector: formFields
    params: {}
- name: custom_action
  endpoint:
    path: /path/to/custom/action
    method: POST
    data_selector: data
    params: {}
- name: custom_business_rule
  endpoint:
    path: /path/to/custom/business/rule
    method: POST
    data_selector: data
    params: {}
- name: custom_data_source
  endpoint:
    path: /path/to/custom/data/source
    method: POST
    data_selector: data
    params: {}
- name: custom_label_printing_template
  endpoint:
    path: /path/to/custom/label/printing/template
    method: POST
    data_selector: data
    params: {}
- name: elements
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}
    method: PATCH
- name: new_element
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements
    method: POST
- name: elements
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements
    method: POST
    data_selector: null
    params: {}
- name: element_update
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}
    method: PATCH
    data_selector: null
    params: {}
- name: workflow_instance
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}
    method: GET
    data_selector: header
    params: {}
- name: item_list
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}
    method: PATCH
    data_selector: itemLists
    params: {}
- name: list_initialization
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}/itemlists/{itemlistid}/init
    method: POST
    data_selector: ''
    params: {}
- name: get_attachment_metadata
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}
    method: GET
    data_selector: attachments
- name: start_instance_with_attachment
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements
    method: POST
    data_selector: attachments
- name: update_existing_attachments
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}
    method: PATCH
    data_selector: attachments
- name: delete_attachment_from_workflow_instance
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}
    method: PATCH
    data_selector: attachments
- name: get_attachments
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}/attachments
    method: GET
- name: delete_attachments
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}/attachments/{attid}
    method: DELETE
- name: modify_attachment
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}/attachments/{attid}
    method: PATCH
- name: add_new_attachment
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}/attachments
    method: POST
- name: workflow_instances
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}
    method: GET
- name: item_list
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}
    method: PATCH
    data_selector: itemLists
    params: {}
- name: list_initialization
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}/itemlists/{itemlistid}/init
    method: POST
    data_selector: ''
    params: {}
- name: get_attachment_metadata
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}
    method: GET
    data_selector: attachments
- name: start_instance_with_attachment
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements
    method: POST
    data_selector: attachments
- name: update_existing_attachments
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}
    method: PATCH
- name: delete_attachment_from_workflow_instance
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}
    method: PATCH
- name: get_attachments
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}/attachments
    method: GET
- name: delete_attachments
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}/attachments/{attid}
    method: DELETE
- name: modify_attachment
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}/attachments/{attid}
    method: PATCH
- name: add_new_attachment
  endpoint:
    path: /api/data/v6.0/db/{dbId}/elements/{id}/attachments
    method: POST
- name: applications
  endpoint:
    path: /api/data/v6.0/db/{dbId}/applications
    method: GET
    data_selector: applications
    params: {}
- name: processes
  endpoint:
    path: /api/data/v6.0/db/{dbId}/applications/{idguid}/processes
    method: GET
    data_selector: processes
    params: {}
- name: workflows
  endpoint:
    path: /api/data/v6.0/db/{dbId}/processes/{idguid}/workflows
    method: GET
    data_selector: workflows
    params: {}
- name: formtypes
  endpoint:
    path: /api/data/v6.0/db/{dbId}/processes/{idguid}/formtypes
    method: GET
    data_selector: formtypes
    params: {}
- name: steps
  endpoint:
    path: /api/data/v6.0/db/{dbId}/workflows/{idguid}/steps
    method: GET
    data_selector: steps
    params: {}
- name: paths
  endpoint:
    path: /api/data/v6.0/db/{dbId}/steps/{idguid}/paths
    method: GET
    data_selector: paths
    params: {}
notes:
- GUID of each object can be found in the WEBCON BPS Designer Studio.
- BPS REST API is available in all types of installations since BPS 2019
- Uses JSON Web Token (JWT) authentication method
- The SDK is an integrated part of WEBCON BPS and is available immediately after installation.
- Plugins may require an additional SDK license depending on your type of installation.
- This documentation is for version 2021.1, which is no longer actively maintained.
- API supports 26 different types of form fields.
- Item lists can be edited, added, or removed using the REST API.
- Requires attachment edit privileges
- The group identifier should be set in ID#name format
- 'Required scopes: [App.Elements.Admin.All; App.Elements.Read.All; App.Elements.ReadWrite.All;
  User.Elements.Admin.All; User.Elements.Admin.<ProcGuid>; User.Elements.Read.All;
  User.Elements.Read.<ProcGuid>; User.Elements.ReadWrite.All; User.Elements.ReadWrite.<ProcGuid>]'
- It is possible to send multiple list objects.
- Row identifier can be obtained using the element get method.
- Requires at least view attachment privileges to get attachment metadata.
- Operations require at least attachment edit privileges to add, update or delete
  attachments.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- All endpoints require metadata permissions that can be set in Designer Studio for
  specific application.
errors:
- 'Unauthorized: Recheck user privileges'
- 'Not Found: Check the provided IDs'
- 'Bad Request: Validate request body format'
- 'App.Metadata.Read: Required scope for accessing applications.'
- 'App.Metadata.ReadWrite: Required scope for modifying applications.'
auth_info:
  mentioned_objects:
  - App.Elements.Admin.All
  - App.Elements.Read.All
  - User.Elements.Read.All
  - App.Elements.ReadWrite.All
  - User.Elements.Admin.All
client:
  base_url: http://dev20/WEBCONBPS
  headers:
    Accept: application/json
source_metadata: null
