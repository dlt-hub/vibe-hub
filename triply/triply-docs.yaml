resources:
- name: datasets
  endpoint:
    path: /datasets/ACCOUNT/DATASET/
    method: POST
    data_selector: ''
    params: {}
- name: upload_linked_data
  endpoint:
    path: /datasets/ACCOUNT/DATASET/jobs
    method: POST
    data_selector: ''
    params: {}
- name: upload_assets
  endpoint:
    path: /datasets/ACCOUNT/DATASET/assets
    method: POST
    data_selector: ''
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: ''
    params: {}
- name: queries
  endpoint:
    path: /queries
    method: GET
    data_selector: ''
- name: query_metadata
  endpoint:
    path: /queries/{account}/{query_name}
    method: GET
    data_selector: ''
- name: describe
  endpoint:
    path: /datasets/{account}/{dataset}/describe.nt
    method: GET
    data_selector: ''
- name: fragments
  endpoint:
    path: /datasets/{account}/{dataset}/fragments
    method: GET
    data_selector: ''
- name: download
  endpoint:
    path: /datasets/{account}/{dataset}/download
    method: GET
    data_selector: ''
- name: graphs
  endpoint:
    path: /datasets/{account}/{dataset}/graphs
    method: GET
    data_selector: ''
- name: sparql_service
  endpoint:
    path: /datasets/{account}/{dataset}/services/{service}/sparql
    method: GET
    data_selector: ''
- name: sparql
  endpoint:
    path: /datasets/academy/pokemon/services/pokemon/sparql
    method: POST
    data_selector: results.bindings
- name: graphql
  endpoint:
    path: /datasets/ACCOUNT/DATASET/graphql
    method: POST
    data_selector: data
- name: search
  endpoint:
    path: /datasets/ACCOUNT/DATASET/services/SERVICE/search
    method: POST
    data_selector: hits.hits
- name: account
  endpoint:
    path: /account
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: info
  endpoint:
    path: /info
    method: GET
- name: organization
  endpoint:
    path: /organization
    method: GET
- name: user
  endpoint:
    path: /user
    method: GET
- name: dataset
  endpoint:
    path: /account/addDataset
    method: POST
    data_selector: dataset
    params:
      accessLevel: private
- name: query
  endpoint:
    path: /account/addQuery
    method: POST
    data_selector: query
    params: {}
- name: story
  endpoint:
    path: /account/addStory
    method: POST
- name: query
  endpoint:
    path: /account/addQuery
    method: POST
- name: getStory
  endpoint:
    path: /account/getStory
    method: GET
- name: getStories
  endpoint:
    path: /account/getStories
    method: GET
- name: pinItems
  endpoint:
    path: /account/pinItems
    method: POST
- name: setAvatar
  endpoint:
    path: /account/setAvatar
    method: POST
- name: update
  endpoint:
    path: /account/update
    method: POST
- name: asset
  endpoint:
    path: /asset
    method: GET
    data_selector: assets
- name: dataset
  endpoint:
    path: /dataset
    method: GET
    data_selector: datasets
- name: service
  endpoint:
    path: /dataset/addService
    method: POST
    data_selector: service
    params: {}
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
- name: dataset
  endpoint:
    path: /dataset
    method: POST
    data_selector: records
- name: graph
  endpoint:
    path: /graph
    method: GET
    data_selector: graphs
- name: graph
  endpoint:
    path: /getGraph
    method: GET
    data_selector: graphData
- name: organization
  endpoint:
    path: /organization
    method: GET
    data_selector: instances
- name: addDataset
  endpoint:
    path: /organization/addDataset
    method: POST
    data_selector: result
- name: addMember
  endpoint:
    path: /organization/addMember
    method: POST
    data_selector: result
- name: removeMember
  endpoint:
    path: /organization/removeMember
    method: DELETE
    data_selector: result
- name: organization
  endpoint:
    path: /organization
    method: GET
- name: Query
  endpoint:
    path: /query
    method: GET
    data_selector: results
    params: {}
- name: service
  endpoint:
    path: /service
    method: GET
    data_selector: services
    params: {}
- name: story
  endpoint:
    path: /user/stories
    method: GET
- name: story_info
  endpoint:
    path: /user/story/{story_name}
    method: GET
- name: delete_story
  endpoint:
    path: /user/story/{story_name}
    method: DELETE
- name: set_banner
  endpoint:
    path: /user/story/{story_name}/banner
    method: POST
- name: User
  endpoint:
    path: /user
    method: GET
    data_selector: userData
- name: pokemon
  endpoint:
    path: /academy/pokemon
    method: GET
    data_selector: results
    params:
      limit: 20
- name: chart
  endpoint:
    path: /chart
    method: GET
    data_selector: data
    params: {}
- name: geo
  endpoint:
    path: /geo
    method: GET
    data_selector: data
    params: {}
- name: geo-3d
  endpoint:
    path: /geo-3d
    method: GET
    data_selector: data
    params: {}
- name: geo_events
  endpoint:
    path: /geo-events
    method: GET
    data_selector: data
    params: {}
- name: pivot_table
  endpoint:
    path: /pivot-table
    method: GET
    data_selector: data
    params: {}
- name: timeline
  endpoint:
    path: /timeline
    method: GET
    data_selector: data
    params: {}
- name: network
  endpoint:
    path: /network
    method: GET
    data_selector: data
    params: {}
- name: markup
  endpoint:
    path: /markup
    method: GET
    data_selector: data
    params: {}
- name: editor
  endpoint:
    path: /editor
    method: GET
    data_selector: instances
- name: saved_query
  endpoint:
    path: /queries/{query_id}/run
    method: GET
    data_selector: results
    params:
      page: '1'
      pageSize: '100'
- name: datasets
  endpoint:
    path: /datasets
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
- name: redirects
  endpoint:
    path: /redirects
    method: GET
notes:
- If you've already opened the Yasgui page before, you must first clear your local-storage
  cache before you will see the changes taking effect.
- Most read operations on publicly published datasets can be performed without authentication.
- Write operations and read operations on internal or private datasets require authentication.
- Uploads are limited to files less than 5MB.
- API token is stored in the environment variable called TOKEN.
- Creating a new dataset only succeeds if an API token is configured that provides
  write access to the current account.
- The default access level for a newly created dataset is private.
- The default access level for queries and stories is 'private'.
- Each asset is uploaded per dataset using the uploadAsset function.
- The graph is the smallest object that can be individually deleted or modified.
- Most of the time you do not need to download a graph locally as TriplyDB supports
  a variety of methods to use linked data directly.
- Uses token-based authentication — requires setup of API token in environment
- Users cannot be created or deleted through the TriplyDB.js library.
- Some escape characters do not work in Regex function
- Uses OAuth2 with refresh token — requires setup of connected app in TriplyDB
- Values need to be mapped onto a prepared list of IRIs or literals (e.g. from country
  names to country-denoting IRIs).
- Values need to be translated into standards-compliant formats (e.g., from country
  name to ISO 3166 country codes).
- Multiple existing values need to be combined into one new value (e.g., street name
  and house number may be combined into an address).
- A single value needs to be split into multiple values (e.g., from 'apple, orange'
  to 'apple' and 'orange').
- Values need to be cleaned because they are dirty in the source (e.g., from '001
  ' to 1).
- Assertion are statements of fact.
- 'TriplyETL supports the following languages for making linked data assertions: JSON-LD,
  RATT, RML, XSLT.'
- The visualization library checks for the rdf:HTML datatype.
- TriplyDB sanitizes HTML literals before rendering them.
- TriplyDB only allows valid RDF data to be added.
- To retrieve more than 10,000 results, use pagination.
errors:
- 'Invalid IRI: The argument for renaming a graph must be a valid IRI.'
- '401 Unauthorized: This method requires an API token with write access for this
  user.'
- 'Error: Unauthorized'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Malformed data will show an error message indicating which part of the RDF data
  is malformed.
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: Ensure the query ID is correct.'
- '401 Unauthorized: Ensure the API key is valid.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.triplydb.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
