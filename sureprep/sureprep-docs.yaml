resources:
- name: GetToken
  endpoint:
    path: /gettoken
    method: POST
- name: CreateBinder
  endpoint:
    path: /createbinder
    method: POST
- name: UploadBinderDocuments
  endpoint:
    path: /uploadbinder
    method: POST
- name: SubmitBinder
  endpoint:
    path: /submitbinder
    method: POST
- name: GetStatus
  endpoint:
    path: /getstatus
    method: POST
- name: GetDocuments
  endpoint:
    path: /getdocuments
    method: POST
- name: DownloadDocument
  endpoint:
    path: /downloaddocument
    method: POST
- name: GetClientDetails
  endpoint:
    path: /getclientdetails
    method: POST
- name: GetDRLStatus
  endpoint:
    path: /getdrlstatus
    method: POST
- name: GetToken
  endpoint:
    path: /gettoken
    method: POST
- name: CreateBinder
  endpoint:
    path: /createbinder
    method: POST
- name: UploadBinderDocument
  endpoint:
    path: /uploadbinderdocuments
    method: POST
- name: SubmitBinder
  endpoint:
    path: /submitbinder
    method: POST
- name: GetStatus
  endpoint:
    path: /getstatus
    method: POST
- name: ChangeBinderStatus
  endpoint:
    path: /changebinderstatus
    method: POST
- name: GetBinderDetail
  endpoint:
    path: /getbinderdetails
    method: POST
- name: GetDocuments
  endpoint:
    path: /getdocuments
    method: POST
- name: DownloadDocument
  endpoint:
    path: /downloaddocument
    method: POST
- name: GetDRLOutput
  endpoint:
    path: /getdrloutput
    method: POST
- name: UpdateProjectID
  endpoint:
    path: /updateprojectid
    method: POST
- name: GetStatesandLocalities
  endpoint:
    path: /getstatesandlocalities
    method: POST
- name: DownloadBinderPBFX
  endpoint:
    path: /downloadbinderpbfx
    method: POST
- name: GetBindersStatusWithStates
  endpoint:
    path: /getbinderstatuswithstates
    method: POST
- name: GetBinderAuditLog
  endpoint:
    path: /getbinderauditlog
    method: POST
- name: UpdateOwnerMember
  endpoint:
    path: /updateownermember
    method: POST
- name: PrintBinder
  endpoint:
    path: /printbinder
    method: POST
- name: GetDRLPDFDetails
  endpoint:
    path: /getdrlpdfdetails
    method: POST
- name: GetToken
  endpoint:
    path: /docs-page/currentver-gettoken
    method: POST
- name: TaxSoftwareList
  endpoint:
    path: /docs-page/currentver-taxsoftware
    method: POST
- name: BinderTypes
  endpoint:
    path: /docs-page/currentver-bindertypes
    method: POST
- name: ServiceTypes
  endpoint:
    path: /docs-page/currentver-servicetypes
    method: POST
- name: BinderTemplates
  endpoint:
    path: /docs-page/currentver-bindertemplates
    method: POST
- name: OfficeLocations
  endpoint:
    path: /docs-page/currentver-officelocations
    method: POST
- name: BinderStatusList
  endpoint:
    path: /docs-page/currentver-binderstatuslist
    method: POST
- name: DRLCategories
  endpoint:
    path: /docs-page/currentver-drlcategories
    method: POST
- name: state_codes
  endpoint:
    path: /state_codes
    method: GET
    data_selector: codes
    params: {}
- name: city_codes
  endpoint:
    path: /city_codes
    method: GET
    data_selector: codes
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: berks_tax_collection_district
  endpoint:
    path: /berks/tax-collection
    method: GET
    data_selector: districts
- name: blair_tax_collection_district
  endpoint:
    path: /blair/tax-collection
    method: GET
    data_selector: districts
- name: bradford_tax_collection_district
  endpoint:
    path: /bradford/tax-collection
    method: GET
    data_selector: districts
- name: bucks_tax_collection_district
  endpoint:
    path: /bucks/tax-collection
    method: GET
    data_selector: districts
- name: butler_tax_collection_district
  endpoint:
    path: /butler/tax-collection
    method: GET
    data_selector: districts
- name: cambria_tax_collection_district
  endpoint:
    path: /cambria/tax-collection
    method: GET
    data_selector: districts
- name: Driftwood Boro/Cameron County SD
  endpoint:
    path: /cameron_tax_collection/driftwood
    method: GET
    data_selector: records
- name: Emporium Boro/Cameron County SD
  endpoint:
    path: /cameron_tax_collection/emporium
    method: GET
    data_selector: records
- name: Gibson Twp/Cameron County SD
  endpoint:
    path: /cameron_tax_collection/gibson
    method: GET
    data_selector: records
- name: Grove Twp/Cameron County SD
  endpoint:
    path: /cameron_tax_collection/grove
    method: GET
    data_selector: records
- name: Lumber Twp/Cameron County SD
  endpoint:
    path: /cameron_tax_collection/lumber
    method: GET
    data_selector: records
- name: Portage Twp/Cameron County SD
  endpoint:
    path: /cameron_tax_collection/portage
    method: GET
    data_selector: records
- name: Shippen Twp/Cameron County SD
  endpoint:
    path: /cameron_tax_collection/shippen
    method: GET
    data_selector: records
- name: Ohio Jurisdiction
  endpoint:
    path: /ohio/jurisdiction
    method: GET
    data_selector: jurisdictions
    params: {}
- name: Pennsylvania Jurisdiction
  endpoint:
    path: /pennsylvania/jurisdiction
    method: GET
    data_selector: jurisdictions
    params: {}
- name: Adams Tax Collection District
  endpoint:
    path: /adams/tax_collection_district
    method: GET
    data_selector: districts
    params: {}
- name: Allegheny Central Tax Collection District
  endpoint:
    path: /allegheny/central/tax_collection_district
    method: GET
    data_selector: districts
    params: {}
- name: Armstrong Tax Collecting District
  endpoint:
    path: /armstrong/tax_collecting_district
    method: GET
    data_selector: districts
    params: {}
- name: Beaver Tax Collection District
  endpoint:
    path: /beaver/tax_collection_district
    method: GET
    data_selector: districts
    params: {}
- name: districts
  endpoint:
    path: /api/v1/districts
    method: GET
    data_selector: districts
    params: {}
- name: Driftwood Boro/Cameron County SD
  endpoint:
    path: /cameron/tax_collection/driftwood
    method: GET
    data_selector: records
- name: Emporium Boro/Cameron County SD
  endpoint:
    path: /cameron/tax_collection/emporium
    method: GET
    data_selector: records
- name: Gibson Twp/Cameron County SD
  endpoint:
    path: /cameron/tax_collection/gibson
    method: GET
    data_selector: records
- name: Grove Twp/Cameron County SD
  endpoint:
    path: /cameron/tax_collection/grove
    method: GET
    data_selector: records
- name: Lumber Twp/Cameron County SD
  endpoint:
    path: /cameron/tax_collection/lumber
    method: GET
    data_selector: records
- name: Portage Twp/Cameron County SD
  endpoint:
    path: /cameron/tax_collection/portage
    method: GET
    data_selector: records
- name: Shippen Twp/Cameron County SD
  endpoint:
    path: /cameron/tax_collection/shippen
    method: GET
    data_selector: records
- name: schools
  endpoint:
    path: /districts
    method: GET
    data_selector: districts
    params: {}
- name: tax_collection_districts
  endpoint:
    path: /api/tax_collection_districts
    method: GET
    data_selector: districts
    params: {}
- name: tax_collection_districts
  endpoint:
    path: /tax-collection-districts
    method: GET
    data_selector: districts
    params: {}
- name: Tax_Collection_Districts
  endpoint:
    path: /tax_collection_districts
    method: GET
    data_selector: districts
- name: tax_collection_districts
  endpoint:
    path: /api/tax_collection_districts
    method: GET
    data_selector: districts
    params: {}
- name: Allegheny Twp/Alleg.-Clarion Valley SD
  endpoint:
    path: /services/data/vXX.X/sobjects/AlleghenyTwp
    method: GET
    data_selector: records
- name: Ashland TWP/Keystone SD
  endpoint:
    path: /services/data/vXX.X/sobjects/AshlandTwp
    method: GET
    data_selector: records
- name: Beaver Twp/Keystone SD
  endpoint:
    path: /services/data/vXX.X/sobjects/BeaverTwp
    method: GET
    data_selector: records
- name: Callensburg Boro/Keystone SD
  endpoint:
    path: /services/data/vXX.X/sobjects/CallensburgBoro
    method: GET
    data_selector: records
- name: Clarion Boro/Clarion Area SD
  endpoint:
    path: /services/data/vXX.X/sobjects/ClarionBoro
    method: GET
    data_selector: records
- name: Clarion Twp/Clarion-Limestone ASD
  endpoint:
    path: /services/data/vXX.X/sobjects/ClarionTwp
    method: GET
    data_selector: records
- name: Corsica Boro/Clarion-Limestone ASD
  endpoint:
    path: /services/data/vXX.X/sobjects/CorsicaBoro
    method: GET
    data_selector: records
- name: Elk Twp/Keystone SD
  endpoint:
    path: /services/data/vXX.X/sobjects/ElkTwp
    method: GET
    data_selector: records
- name: Emlenton Boro/Alleg.-Clarion Valley SD
  endpoint:
    path: /services/data/vXX.X/sobjects/EmlentonBoro
    method: GET
    data_selector: records
- name: Farmington Twp/North Clarion Co SD
  endpoint:
    path: /services/data/vXX.X/sobjects/FarmingtonTwp
    method: GET
    data_selector: records
- name: Foxburg Boro/Alleg-Clarion Valley SD
  endpoint:
    path: /services/data/vXX.X/sobjects/FoxburgBoro
    method: GET
    data_selector: records
- name: Hawthorn Boro/Redbank Valley SD
  endpoint:
    path: /services/data/vXX.X/sobjects/HawthornBoro
    method: GET
    data_selector: records
- name: highland Twp/Clarion Area SD
  endpoint:
    path: /services/data/vXX.X/sobjects/highlandTwp
    method: GET
    data_selector: records
- name: Hovey Boro/Alleg-Clarion Valley SD
  endpoint:
    path: /services/data/vXX.X/sobjects/HoveyBoro
    method: GET
    data_selector: records
- name: Knox Boro/Keystone SD
  endpoint:
    path: /services/data/vXX.X/sobjects/KnoxBoro
    method: GET
    data_selector: records
- name: Knox Twp/North Clarion Co SD
  endpoint:
    path: /services/data/vXX.X/sobjects/KnoxTwp
    method: GET
    data_selector: records
- name: Licking Twp/Keystone SD
  endpoint:
    path: /services/data/vXX.X/sobjects/LickingTwp
    method: GET
    data_selector: records
- name: Limestone Twp/Clarion-Limestone ASD
  endpoint:
    path: /services/data/vXX.X/sobjects/LimestoneTwp
    method: GET
    data_selector: records
- name: Madison Twp/Redbank Valley SD
  endpoint:
    path: /services/data/vXX.X/sobjects/MadisonTwp
    method: GET
    data_selector: records
- name: Madison Twp/Union SD
  endpoint:
    path: /services/data/vXX.X/sobjects/MadisonTwpUnion
    method: GET
    data_selector: records
- name: Mahoning Twp/Redbank Valley SD
  endpoint:
    path: /services/data/vXX.X/sobjects/MahoningTwp
    method: GET
    data_selector: records
- name: Millcreek Twp/Clarion-Limestone ASD
  endpoint:
    path: /services/data/vXX.X/sobjects/MillcreekTwp
    method: GET
    data_selector: records
- name: Monroe Twp/Clarion Area SD
  endpoint:
    path: /services/data/vXX.X/sobjects/MonroeTwp
    method: GET
    data_selector: records
- name: Monroe Twp/Redbank Valley SD
  endpoint:
    path: /services/data/vXX.X/sobjects/MonroeTwpRedbank
    method: GET
    data_selector: records
- name: New Bethlehem Boro/Redbank Valley SD
  endpoint:
    path: /services/data/vXX.X/sobjects/NewBethlehemBoro
    method: GET
    data_selector: records
- name: Paint Twp/Clarion Area SD
  endpoint:
    path: /services/data/vXX.X/sobjects/PaintTwp
    method: GET
    data_selector: records
- name: Parker City/Alleg-Clarion Valley SD
  endpoint:
    path: /services/data/vXX.X/sobjects/ParkerCity
    method: GET
    data_selector: records
- name: Perry Twp/Alleg-Clarion Valley SD
  endpoint:
    path: /services/data/vXX.X/sobjects/PerryTwp
    method: GET
    data_selector: records
- name: Piney Twp/Union SD
  endpoint:
    path: /services/data/vXX.X/sobjects/PineyTwp
    method: GET
    data_selector: records
- name: Porter Twp/Redbank Valley SD
  endpoint:
    path: /services/data/vXX.X/sobjects/PorterTwp
    method: GET
    data_selector: records
- name: Redbank Twp/Armstrong-Redbank Valley SD
  endpoint:
    path: /services/data/vXX.X/sobjects/RedbankTwpArmstrong
    method: GET
    data_selector: records
- name: Redbank Twp/Clarion-Redbank Valley SD
  endpoint:
    path: /services/data/vXX.X/sobjects/RedbankTwpClarion
    method: GET
    data_selector: records
- name: richland Twp/Clarion - Alleg-Clarion Valley SD
  endpoint:
    path: /services/data/vXX.X/sobjects/richlandTwp
    method: GET
    data_selector: records
- name: Richland Twp/Venango - Alleg-Clarion valley SD
  endpoint:
    path: /services/data/vXX.X/sobjects/RichlandTwpVenango
    method: GET
    data_selector: records
- name: Rimersburg Boro/Union SD
  endpoint:
    path: /services/data/vXX.X/sobjects/RimersburgBoro
    method: GET
    data_selector: records
- name: Salem Twp/Keystone SD
  endpoint:
    path: /services/data/vXX.X/sobjects/SalemTwp
    method: GET
    data_selector: records
- name: Scrubgrass Twp/Alleg.-Clarion Valley SD
  endpoint:
    path: /services/data/vXX.X/sobjects/ScrubgrassTwp
    method: GET
    data_selector: records
- name: Shippenville Boro/Keystone SD
  endpoint:
    path: /services/data/vXX.X/sobjects/ShippenvilleBoro
    method: GET
    data_selector: records
- name: Sligo Boro/Union SD
  endpoint:
    path: /services/data/vXX.X/sobjects/SligoBoro
    method: GET
    data_selector: records
- name: S.
  endpoint:
    path: /services/data/vXX.X/sobjects/S
    method: GET
    data_selector: records
- name: districts
  endpoint:
    path: /api/tax-collection-districts
    method: GET
    data_selector: districts
    params: {}
- name: Erie Tax Collection District
  endpoint:
    path: /tax-collection/erie
    method: GET
    data_selector: districts
    params: {}
- name: Fayette Tax Collection District
  endpoint:
    path: /tax-collection/fayette
    method: GET
    data_selector: districts
    params: {}
- name: Forest Tax Collection District
  endpoint:
    path: /tax-collection/forest
    method: GET
    data_selector: districts
    params: {}
- name: Franklin Tax Collection District
  endpoint:
    path: /tax-collection/franklin
    method: GET
    data_selector: districts
    params: {}
- name: Fulton Tax Collection District
  endpoint:
    path: /tax-collection/fulton
    method: GET
    data_selector: districts
    params: {}
- name: Greene Tax Collection District
  endpoint:
    path: /tax-collection/greene
    method: GET
    data_selector: districts
    params: {}
- name: Huntingdon Tax Collection District
  endpoint:
    path: /tax-collection/huntingdon
    method: GET
    data_selector: districts
    params: {}
- name: Indiana Tax Collection District
  endpoint:
    path: /tax-collection/indiana
    method: GET
    data_selector: districts
    params: {}
- name: Jefferson Tax Collection District
  endpoint:
    path: /tax-collection/jefferson
    method: GET
    data_selector: districts
    params: {}
- name: Juniata Tax Collection District
  endpoint:
    path: /tax-collection/juniata
    method: GET
    data_selector: districts
    params: {}
- name: Lackawanna Tax Collection District
  endpoint:
    path: /tax-collection/lackawanna
    method: GET
    data_selector: districts
    params: {}
- name: districts
  endpoint:
    path: /tax-collection-districts
    method: GET
    data_selector: districts
    params: {}
- name: GetToken
  endpoint:
    path: /Authenticate/GetToken
    method: POST
    data_selector: Token
- name: CreateBinder
  endpoint:
    path: /V5.0/Binder/CreateBinder
    method: POST
- name: Boro_Mohawk_Area_SD
  endpoint:
    path: /api/boro_mohawk_area_sd
    method: GET
    data_selector: records
- name: Lebanon_Tax_Collection_District
  endpoint:
    path: /api/lebanon_tax_collection_district
    method: GET
    data_selector: records
- name: Lehigh_Tax_Collection_District
  endpoint:
    path: /api/lehigh_tax_collection_district
    method: GET
    data_selector: records
- name: Luzerne_Tax_Collection_District
  endpoint:
    path: /api/luzerne_tax_collection_district
    method: GET
    data_selector: records
- name: Lycoming_Tax_Collection_District
  endpoint:
    path: /api/lycoming_tax_collection_district
    method: GET
    data_selector: records
- name: McKean_Tax_Collection_District
  endpoint:
    path: /api/mckean_tax_collection_district
    method: GET
    data_selector: records
- name: Mercer_Tax_Collection_District
  endpoint:
    path: /api/mercer_tax_collection_district
    method: GET
    data_selector: records
- name: Mifflin_Tax_Collection_District
  endpoint:
    path: /api/mifflin_tax_collection_district
    method: GET
    data_selector: records
- name: Monroe_Tax_Collection_District
  endpoint:
    path: /api/monroe_tax_collection_district
    method: GET
    data_selector: records
- name: tax_collection_district
  endpoint:
    path: /tax_collection_districts
    method: GET
    data_selector: districts
- name: CreateBinder
  endpoint:
    path: /V5.0/Binder/CreateBinder
    method: POST
    data_selector: Binder ID
    params: {}
- name: GetToken
  endpoint:
    path: /Authenticate/GetToken
    method: POST
    data_selector: Token
    params: {}
- name: UploadBinderDocuments
  endpoint:
    path: /V5.0/Binder/UploadBinderDocuments
    method: POST
- name: Binder
  endpoint:
    path: /V5.0/Binder/CreateBinder
    method: POST
    data_selector: records
- name: CreateBinder
  endpoint:
    path: /V5.0/Binder/CreateBinder
    method: POST
    data_selector: Binder ID
- name: UploadBinderDocuments
  endpoint:
    path: /Binder/UploadBinderDocuments
    method: POST
- name: binder
  endpoint:
    path: /V5.0/Binder/SubmitBinder
    method: POST
    data_selector: Binder_Id
    params: {}
- name: SubmitBinder
  endpoint:
    path: /Binder/SubmitBinder
    method: POST
    data_selector: records
    params:
      binder_ID: required
      isInHouseProcess: optional
- name: GetStatus
  endpoint:
    path: /V5.0/Binder/GetStatus
    method: POST
    data_selector: response
    params: {}
- name: binder_upload
  endpoint:
    path: /V5.0/Binder/UploadBinderDocuments
    method: POST
    data_selector: response
    params:
      binder_Id: ''
      isK1Document: ''
      isBookmarkOnly: ''
      isOCR: ''
      documentType: ''
      submissionSource: ''
      file: ''
- name: GetStatus
  endpoint:
    path: /Binder/GetStatus
    method: POST
    data_selector: ID
    params:
      binder_ID: '300001'
- name: change_binder_status
  endpoint:
    path: /V5.0/Binder/ChangeBinderStatus
    method: POST
    data_selector: BinderSendToRequest
- name: UploadBinderDocuments
  endpoint:
    path: /Binder/UploadBinderDocuments
    method: POST
- name: ChangeBinderStatus
  endpoint:
    path: /Binder/ChangeBinderStatus
    method: POST
    params: {}
- name: Binder
  endpoint:
    path: /V5.0/Binder/SubmitBinder
    method: POST
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetBinderDetails
    method: POST
    data_selector: response
    params: {}
- name: SubmitBinder
  endpoint:
    path: /Binder/SubmitBinder
    method: POST
- name: BinderStatus
  endpoint:
    path: /V5.0/Binder/GetStatus
    method: POST
    data_selector: Model
    params: {}
- name: GetBinderDetails
  endpoint:
    path: /BinderInfo/GetBinderDetails
    method: POST
    data_selector: records
    params:
      pageSize: pageSize
      pageNumber: pageNumber
      taxYear: taxYear
      clientID: clientID
      binderType: binderType
      status_ID: status_ID
      OwnerEmail: OwnerEmail
      Custom_Field: Custom_Field
- name: GetStatus
  endpoint:
    path: /Binder/GetStatus
    method: POST
    data_selector: ID
    params:
      binder_ID: '300001'
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetBinderPendingItems
    method: POST
    data_selector: null
    params: {}
- name: ChangeBinderStatus
  endpoint:
    path: /V5.0/Binder/ChangeBinderStatus
    method: POST
    data_selector: response
    params: {}
- name: GetBinderPendingItems
  endpoint:
    path: /BinderInfo/GetBinderPendingItems
    method: POST
    data_selector: binderDetails
    params:
      taxYear: required
      clientID: required
- name: ChangeBinderStatus
  endpoint:
    path: /Binder/ChangeBinderStatus
    method: POST
    data_selector: Response
    params: {}
- name: GetDocuments
  endpoint:
    path: /V5.0/Binder/GetDocuments
    method: POST
    data_selector: DocumentUniqueID
    params: {}
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetBinderDetails
    method: POST
    data_selector: Model
- name: GetDocuments
  endpoint:
    path: /Binder/GetDocuments
    method: POST
    data_selector: Dictionary
    params:
      binder_ID: ''
- name: DownloadDocument
  endpoint:
    path: /V5.0/Binder/DownloadDocument
    method: POST
    params:
      documentID: ''
- name: GetBinderDetails
  endpoint:
    path: /BinderInfo/GetBinderDetails
    method: POST
- name: DownloadDocument
  endpoint:
    path: /V5.0/Binder/DownloadDocument
    method: POST
    data_selector: file
    params:
      documentID: CF956C0E-A1C6-439D-AF20-6184460AAB5F
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetBinderPendingItems
    method: POST
- name: DRLInfo
  endpoint:
    path: /V5.0/DRLInfo/GetDRLOutput
    method: POST
    data_selector: response
    params: {}
- name: GetBinderPendingItems
  endpoint:
    path: /BinderInfo/GetBinderPendingItems
    method: POST
    data_selector: binderDetails
    params:
      taxYear: taxYear
      clientID: clientID
- name: GetDRLOutput
  endpoint:
    path: /DRLInfo/GetDRLOutput
    method: POST
    data_selector: null
    params:
      taxYear: null
      clientNumber: null
- name: documents
  endpoint:
    path: /V5.0/Binder/GetDocuments
    method: POST
    data_selector: DocumentUniqueID
    params: {}
- name: Binder
  endpoint:
    path: /V5.0/Binder/UpdateProjectID
    method: POST
- name: GetDocuments
  endpoint:
    path: /Binder/GetDocuments
    method: POST
    data_selector: Dictionary
    params:
      binder_ID: '300001'
- name: UpdateProjectID
  endpoint:
    path: /V5.0/Binder/UpdatePSProject
    method: POST
    data_selector: response
    params: {}
- name: Binder
  endpoint:
    path: /V5.0/Binder/GetStatesandLocalities
    method: POST
    data_selector: model
- name: DownloadDocument
  endpoint:
    path: /V5.0/Binder/DownloadDocument
    method: POST
    params:
      documentID: ''
- name: GetStatesandLocalities
  endpoint:
    path: /Binder/GetStatesandLocalities
    method: POST
    data_selector: states
    params:
      binder_ID: '300001'
- name: DownloadDocument
  endpoint:
    path: /V5.0/Binder/DownloadDocument
    method: POST
    data_selector: file blob
    params:
      documentID: CF956C0E-A1C6-439D-AF20-6184460AAB5F
- name: DownloadBinderPBFX
  endpoint:
    path: /V5.0/Binder/DownloadBinderPBFX
    method: POST
    data_selector: body
    params:
      sender:
        Binder_Id: 0
        Mapped_Id: string
- name: DRLInfo
  endpoint:
    path: /V5.0/DRLInfo/GetDRLOutput
    method: POST
    data_selector: response
    params: {}
- name: DownloadBinderPBFX
  endpoint:
    path: /Binder/DownloadBinderPBFX
    method: POST
- name: GetDRLOutput
  endpoint:
    path: /DRLInfo/GetDRLOutput
    method: POST
    data_selector: records
- name: GetBindersStatusWithStates
  endpoint:
    path: /V5.0/Binder/GetBindersStatusWithStates
    method: POST
    data_selector: records
    params: {}
- name: Binder
  endpoint:
    path: /V5.0/Binder/UpdateProjectID
    method: POST
- name: UpdateProjectID
  endpoint:
    path: /V5.0/Binder/UpdatePSProject
    method: POST
    data_selector: null
    params: {}
- name: GetBindersStatusWithStates
  endpoint:
    path: /Binder/GetBindersStatusWithStates
    method: POST
    data_selector: recordCount
    params:
      binder_ID: '0'
      pageSize: '100'
      pageNumber: '1'
      taxYear: '2020'
- name: Binder
  endpoint:
    path: /V5.0/Binder/GetStatesandLocalities
    method: POST
    data_selector: states_and_localities
- name: BinderAuditLog
  endpoint:
    path: /V5.0/Binder/GetBinderAuditLog
    method: POST
    data_selector: ''
    params: {}
- name: GetBinderAuditLog
  endpoint:
    path: /Binder/GetBinderAuditLog
    method: POST
    data_selector: records
    params: {}
- name: GetStatesandLocalities
  endpoint:
    path: /Binder/GetStatesandLocalities
    method: POST
    data_selector: states
    params:
      binder_ID: '300001'
- name: DownloadBinderPBFX
  endpoint:
    path: /V5.0/Binder/DownloadBinderPBFX
    method: POST
- name: UpdateOwnerMember
  endpoint:
    path: /Binder/UpdateOwnerMember
    method: POST
    data_selector: output
    params:
      BinderID: required
      LoginUserEmail: required
      OwnerEmail: optional
      LocationID: optional
      AssignMember: optional
- name: DownloadBinderPBFX
  endpoint:
    path: /Binder/DownloadBinderPBFX
    method: POST
    data_selector: response
    params:
      binder_ID: '300001'
      mapped_ID: pampreparer@firm.com
- name: PrintBinder
  endpoint:
    path: /V5.0/Binder/PrintBinder
    method: POST
    data_selector: Model
- name: BinderStatus
  endpoint:
    path: /V5.0/Binder/GetBindersStatusWithStates
    method: POST
    data_selector: response
    params: {}
- name: GetBindersStatusWithStates
  endpoint:
    path: /Binder/GetBindersStatusWithStates
    method: POST
    data_selector: binderDetail
    params:
      binder_ID: '0'
      pageSize: '0'
      pageNumber: '0'
      taxYear: '0'
- name: PrintBinder
  endpoint:
    path: /V5.0/Binder/PrintBinder
    method: POST
    data_selector: null
    params:
      BinderID: Integer
- name: BinderAuditLog
  endpoint:
    path: /V5.0/Binder/GetBinderAuditLog
    method: POST
    data_selector: Model
- name: DRLInfo
  endpoint:
    path: /V5.0/DRLInfo/GetDRLPDFDetails
    method: POST
    data_selector: response
    params: {}
- name: GetBinderAuditLog
  endpoint:
    path: /Binder/GetBinderAuditLog
    method: POST
    data_selector: records
- name: GetDRLPDFDetails
  endpoint:
    path: /DRLInfo/GetDRLPDFDetails
    method: POST
    data_selector: output
    params:
      TaxYear: integer
      ClientNumber: string
- name: Binder.UpdateOwnerMember
  endpoint:
    path: /V5.0/Binder/UpdateOwnerMember
    method: POST
    data_selector: ''
- name: CreateClient
  endpoint:
    path: /V5.0/TaxCaddyAPI/CreateClient
    method: POST
    data_selector: Response
    params: {}
- name: CreateClient
  endpoint:
    path: /CreateClient
    method: POST
- name: GetClientDetails
  endpoint:
    path: /V5.0/TaxCaddyAPI/GetClientDetails
    method: POST
    data_selector: Response
    params:
      UserEmail: ''
      request: {}
- name: UpdateOwnerMember
  endpoint:
    path: /Binder/UpdateOwnerMember
    method: POST
- name: Binder
  endpoint:
    path: /V5.0/Binder/PrintBinder
    method: POST
- name: GetClientDetails
  endpoint:
    path: /GetClientDetails
    method: POST
    data_selector: response
    params:
      UserEmail: query
      PageSize: body
      PageNumber: body
      TaxPayers: body
- name: PrintBinder
  endpoint:
    path: /V5.0/Binder/PrintBinder
    method: POST
    data_selector: response
    params:
      BinderID: required
- name: DRLInfo
  endpoint:
    path: /V5.0/DRLInfo/GetDRLPDFDetails
    method: POST
    data_selector: response
    params:
      requestInfo: {}
- name: TaxCaddyAPI
  endpoint:
    path: /V5.0/TaxCaddyAPI/CreateDrl
    method: POST
    data_selector: Response
- name: GetDRLPDFDetails
  endpoint:
    path: /DRLInfo/GetDRLPDFDetails
    method: POST
    data_selector: response
    params:
      TaxYear: required
      ClientNumber: required
- name: CreateClient
  endpoint:
    path: /V5.0/TaxCaddyAPI/CreateClient
    method: POST
    data_selector: Response
    params: {}
- name: CreateClient
  endpoint:
    path: /CreateClient
    method: POST
    data_selector: response
    params: {}
- name: CreateDRL
  endpoint:
    path: /TaxCaddyAPI/CreateDrl
    method: POST
- name: GetClientDetails
  endpoint:
    path: /V5.0/TaxCaddyAPI/GetClientDetails
    method: POST
    data_selector: Response
    params:
      UserEmail: ''
      request: {}
- name: TaxCaddyAPI
  endpoint:
    path: /V5.0/TaxCaddyAPI/SendDRL
    method: POST
    data_selector: request
- name: GetClientDetails
  endpoint:
    path: /GetClientDetails
    method: POST
    data_selector: response
    params:
      UserEmail: ''
      PageSize: 100
      PageNumber: 1
      TaxPayers: ''
- name: SendDRL
  endpoint:
    path: /SendDRL
    method: POST
    data_selector: Response.Data
    params:
      UserEmail: Query
      TaxYear: Body
      BinderType: Body
      TaxPayers: Body
- name: TaxCaddyAPI
  endpoint:
    path: /V5.0/TaxCaddyAPI/CreateDrl
    method: POST
- name: ClientSubscribe
  endpoint:
    path: /V5.0/TaxCaddyAPI/ClientSubscribe
    method: PUT
    data_selector: '{}'
    params: {}
- name: CreateDRL
  endpoint:
    path: /CreateDrl
    method: POST
- name: ClientSubscribe
  endpoint:
    path: /ClientSubscribe
    method: PUT
    data_selector: null
    params: {}
- name: ClientUnsubscribe
  endpoint:
    path: /V5.0/TaxCaddyAPI/ClientUnsubscribe
    method: PUT
    data_selector: Model
    params: {}
- name: TaxCaddyAPI
  endpoint:
    path: /V5.0/TaxCaddyAPI/SendDRL
    method: POST
    data_selector: response
    params:
      UserEmail: ''
      request: {}
- name: ClientUnsubscribe
  endpoint:
    path: /TaxCaddyAPI/ClientUnSubscribe
    method: PUT
    data_selector: response
    params: {}
- name: DownloadDocument
  endpoint:
    path: /V5.0/Binder/DownloadDocument
    method: POST
- name: SendDRL
  endpoint:
    path: /SendDRL
    method: POST
    data_selector: Response.Data
    params: {}
- name: DownloadDocument
  endpoint:
    path: /DownloadDocument
    method: POST
    data_selector: File
    params: {}
- name: ClientSubscribe
  endpoint:
    path: /V5.0/TaxCaddyAPI/ClientSubscribe
    method: PUT
    params:
      UserEmail: ''
      TaxClientID: ''
      EventCode: ''
      AuthToken: ''
- name: GetDRLStatus
  endpoint:
    path: /V5.0/TaxCaddyAPI/GetDRLStatus
    method: POST
    data_selector: ''
- name: ClientSubscribe
  endpoint:
    path: /ClientSubscribe
    method: PUT
    data_selector: response
    params: {}
- name: ClientUnsubscribe
  endpoint:
    path: /V5.0/TaxCaddyAPI/ClientUnsubscribe
    method: PUT
    data_selector: '{}'
- name: GetDRLStatus
  endpoint:
    path: /GetDRLStatus
    method: POST
    data_selector: Response
    params: {}
- name: DisconnectDevices
  endpoint:
    path: /V5.0/TaxCaddyAPI/DisconnectDevices
    method: POST
    data_selector: Response
    params:
      UserEmail: string
- name: ClientUnsubscribe
  endpoint:
    path: /TaxCaddyAPI/ClientUnSubscribe
    method: PUT
    data_selector: records
    params: {}
- name: DisconnectDevices
  endpoint:
    path: /DisconnectDevices
    method: POST
- name: DownloadDocument
  endpoint:
    path: /V5.0/Binder/DownloadDocument
    method: POST
    data_selector: Model
    params:
      documentID: string
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetUnclearedNotes
    method: POST
    data_selector: Model
    params:
      sender:
        TaxYear: 0
        ClientID:
        - string
        PageNumber: 0
        PageSize: 0
        BinderType: string
- name: DownloadDocument
  endpoint:
    path: /DownloadDocument
    method: POST
    data_selector: File
    params:
      UserEmail: pampreparer@sureprep.com
      Documents.DocumentID: ''
- name: GetUnclearedNotes
  endpoint:
    path: /BinderInfo/GetUnclearedNotes
    method: POST
    data_selector: UnclearedNotes
- name: GetDRLStatus
  endpoint:
    path: /V5.0/TaxCaddyAPI/GetDRLStatus
    method: POST
    data_selector: DRLStatusRequest
    params:
      UserEmail: ''
      AuthToken: ''
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetUnreviewedTRStamps
    method: POST
    data_selector: Model
- name: GetUnreviewedTRStamps
  endpoint:
    path: /BinderInfo/GetUnreviewedTRStamps
    method: POST
    data_selector: UnReviewedTRStamps
    params:
      taxYear: taxYear
      clientID: clientID
      pageSize: pageSize
      pageNumber: pageNumber
      binderType: binderType
- name: GetDRLStatus
  endpoint:
    path: /TaxCaddyAPI/GetDRLStatus
    method: POST
    data_selector: Response
    params: {}
- name: DisconnectDevices
  endpoint:
    path: /V5.0/TaxCaddyAPI/DisconnectDevices
    method: POST
    data_selector: Response
    params:
      UserEmail: ''
      request: {}
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetUnreviewedStickyNotes
    method: POST
    data_selector: records
    params: {}
- name: GetUnreviewedStickyNotes
  endpoint:
    path: /BinderInfo/GetUnreviewedStickyNotes
    method: POST
    data_selector: '[UnReviewedStickyNotes]'
    params:
      taxYear: taxYear
      clientID: clientID
      pageSize: pageSize
      pageNumber: pageNumber
      binderType: binderType
- name: DisconnectDevices
  endpoint:
    path: /DisconnectDevices
    method: POST
    data_selector: Response
    params: {}
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetUnclearedNotes
    method: POST
    data_selector: records
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetUnreviewedWorkpapersByL1
    method: POST
    data_selector: '200'
    params: {}
- name: GetUnclearedNotes
  endpoint:
    path: /BinderInfo/GetUnclearedNotes
    method: POST
    data_selector: UnclearedNotes
    params:
      taxYear: '0'
      clientID: string
      pageSize: '0'
      pageNumber: '0'
- name: GetUnreviewedWorkpapersByL1
  endpoint:
    path: /BinderInfo/GetUnreviewedWorkpapersByL1
    method: POST
    data_selector: UnReviewedWorkPapersbyL1
    params:
      taxYear: taxYear
      clientID: clientID
      pageSize: pageSize
      pageNumber: pageNumber
      binderType: binderType
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetUnreviewedTRStamps
    method: POST
    data_selector: response
    params: {}
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetUnreviewedWorkpapersByL2
    method: POST
    data_selector: responses
- name: GetUnreviewedTRStamps
  endpoint:
    path: /BinderInfo/GetUnreviewedTRStamps
    method: POST
    data_selector: UnReviewedTRStamps
- name: GetUnreviewedWorkpapersByL2
  endpoint:
    path: /BinderInfo/GetUnreviewedWorkpapersByL2
    method: POST
    data_selector: UnReviewedWorkPapersbyL2
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetUnreviewedStickyNotes
    method: POST
    data_selector: Model
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetUnreviewedWorkpapersByL3
    method: POST
    data_selector: records
- name: GetUnreviewedStickyNotes
  endpoint:
    path: /BinderInfo/GetUnreviewedStickyNotes
    method: POST
    data_selector: UnReviewedStickyNotes
- name: GetUnreviewedWorkpapersByL3
  endpoint:
    path: /BinderInfo/GetUnreviewedWorkpapersByL3
    method: POST
    data_selector: UnReviewedWorkPapersbyL3
    params:
      taxYear: required
      clientID: required
      pageSize: optional
      pageNumber: optional
      binderType: optional
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetUnreviewedWorkpapersByL1
    method: POST
    data_selector: records
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetUnreviewedWorkpapersByL4
    method: POST
    data_selector: records
    params: {}
- name: GetUnreviewedWorkpapersByL1
  endpoint:
    path: /BinderInfo/GetUnreviewedWorkpapersByL1
    method: POST
    data_selector: UnReviewedWorkPapersbyL1
- name: GetUnreviewedWorkpapersByL4
  endpoint:
    path: /BinderInfo/GetUnreviewedWorkpapersByL4
    method: POST
    data_selector: UnReviewedWorkPapersbyL4
    params:
      taxYear: '2020'
      clientID: '99772'
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetUnreviewedWorkpapersByL2
    method: POST
    data_selector: records
    params: {}
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetDocumentPendingReviewCount
    method: POST
- name: GetDocumentPendingReviewCount
  endpoint:
    path: /BinderInfo/GetDocumentPendingReviewCount
    method: POST
    data_selector: result
    params:
      taxYear: required
      clientID: required
      pageSize: optional
      pageNumber: optional
      binderType: optional
- name: GetUnreviewedWorkpapersByL2
  endpoint:
    path: /BinderInfo/GetUnreviewedWorkpapersByL2
    method: POST
    data_selector: UnReviewedWorkPapersbyL2
    params:
      taxYear: required
      clientID: required
      pageSize: optional
      pageNumber: optional
      binderType: optional
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetUnreviewedWorkpapersByL3
    method: POST
    data_selector: records
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetDocumentPendingSignatureCount
    method: POST
- name: GetUnreviewedWorkpapersByL3
  endpoint:
    path: /BinderInfo/GetUnreviewedWorkpapersByL3
    method: POST
    data_selector: UnReviewedWorkPapersbyL3
    params:
      taxYear: '0'
      clientID:
      - string
      pageNumber: '0'
      pageSize: '0'
- name: GetDocumentPendingSignatureCount
  endpoint:
    path: /BinderInfo/GetDocumentPendingSignatureCount
    method: POST
    data_selector: result
    params:
      taxYear: taxYear
      clientID: clientID
      pageSize: pageSize
      pageNumber: pageNumber
      binderType: binderType
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetUnreviewedWorkpapersByL4
    method: POST
    data_selector: records
    params: {}
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetDocumentPendingUploadCount
    method: POST
- name: GetUnreviewedWorkpapersByL4
  endpoint:
    path: /BinderInfo/GetUnreviewedWorkpapersByL4
    method: POST
    data_selector: UnReviewedWorkPapersbyL4
    params:
      taxYear: taxYear
      clientID: clientID
      pageSize: pageSize
      pageNumber: pageNumber
      binderType: binderType
- name: GetDocumentPendingUploadCount
  endpoint:
    path: /BinderInfo/GetDocumentPendingUploadCount
    method: POST
    data_selector: records
    params:
      taxYear: required
      clientID: required
      pageSize: optional
      pageNumber: optional
      binderType: optional
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetDocumentPendingReviewCount
    method: POST
    data_selector: Model
- name: MIReport
  endpoint:
    path: /V5.0/MIReport/GetReport
    method: POST
    data_selector: response
    params: {}
- name: GetDocumentPendingReviewCount
  endpoint:
    path: /BinderInfo/GetDocumentPendingReviewCount
    method: POST
    data_selector: records
    params:
      taxYear: required
      clientID: required
      pageSize: optional
      pageNumber: optional
      binderType: optional
- name: GetReport
  endpoint:
    path: /MIReport/GetReport
    method: POST
    data_selector: records
    params:
      Binder_ID: Binder ID that was returned by SurePrep during the Create Binder
        call.
- name: AccountUsageHistory
  endpoint:
    path: /V5.0/Billing/AccountUsageHistory
    method: POST
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetDocumentPendingSignatureCount
    method: POST
    data_selector: Model
- name: AccountUsageHistory
  endpoint:
    path: /Billing/AccountUsageHistory
    method: POST
    data_selector: records
    params: {}
- name: GetDocumentPendingSignatureCount
  endpoint:
    path: /BinderInfo/GetDocumentPendingSignatureCount
    method: POST
    data_selector: '[]'
    params:
      taxYear: required
      clientID: required
      pageSize: optional
      pageNumber: optional
      binderType: optional
- name: LookupTaxSoftwareList
  endpoint:
    path: /V5.0/Lookup/TaxSoftwareList
    method: POST
- name: BinderInfo
  endpoint:
    path: /V5.0/BinderInfo/GetDocumentPendingUploadCount
    method: POST
- name: TaxSoftwareList
  endpoint:
    path: /Lookup/TaxSoftwareList
    method: POST
    data_selector: TaxSoftwareList
    params: {}
- name: GetDocumentPendingUploadCount
  endpoint:
    path: /BinderInfo/GetDocumentPendingUploadCount
    method: POST
    data_selector: records
    params:
      taxYear: required
      clientID: required
      pageSize: optional
      pageNumber: optional
      binderType: optional
- name: BinderTypes
  endpoint:
    path: /V5.0/Lookup/BinderTypes
    method: POST
- name: MIReport
  endpoint:
    path: /V5.0/MIReport/GetReport
    method: POST
    data_selector: response
    params:
      binderRequest: object
- name: BinderTypes
  endpoint:
    path: /Lookup/BinderTypes
    method: POST
    data_selector: '[BinderTypes]'
    params: {}
- name: ServiceTypes
  endpoint:
    path: /V5.0/Lookup/ServiceTypes
    method: POST
- name: GetReport
  endpoint:
    path: /MIReport/GetReport
    method: POST
- name: ServiceTypes
  endpoint:
    path: /Lookup/ServiceTypes
    method: POST
    data_selector: ServiceTypes
    params: {}
- name: AccountUsageHistory
  endpoint:
    path: /V5.0/Billing/AccountUsageHistory
    method: POST
    data_selector: Model
- name: BinderTemplates
  endpoint:
    path: /V5.0/Lookup/BinderTemplates
    method: POST
    data_selector: response
    params: {}
- name: BinderTemplates
  endpoint:
    path: /Lookup/BinderTemplates
    method: POST
    data_selector: '[BinderTemplates]'
- name: AccountUsageHistory
  endpoint:
    path: /Billing/AccountUsageHistory
    method: POST
    data_selector: records
    params:
      ServiceTypeId: required
      TaxYear: required
      FromDate: required
      ToDate: required
      Size: optional
      Number: optional
- name: OfficeLocations
  endpoint:
    path: /V5.0/Lookup/OfficeLocations
    method: POST
- name: TaxSoftwareList
  endpoint:
    path: /V5.0/Lookup/TaxSoftwareList
    method: POST
- name: OfficeLocations
  endpoint:
    path: /Lookup/OfficeLocations
    method: POST
    data_selector: OfficeLocations
- name: TaxSoftwareList
  endpoint:
    path: /Lookup/TaxSoftwareList
    method: POST
    data_selector: TaxSoftwareList
    params: {}
- name: BinderStatusList
  endpoint:
    path: /V5.0/Lookup/BinderStatusList
    method: POST
    data_selector: records
- name: BinderTypes
  endpoint:
    path: /V5.0/Lookup/BinderTypes
    method: POST
- name: BinderStatusList
  endpoint:
    path: /lookup/BinderStatusList
    method: POST
    data_selector: BinderStatusList
    params: {}
- name: BinderTypes
  endpoint:
    path: /Lookup/BinderTypes
    method: POST
    data_selector: '[BinderTypes]'
- name: DRLInfo
  endpoint:
    path: /V5.0/DRLInfo/DRLCategories
    method: POST
- name: LookupServiceTypes
  endpoint:
    path: /V5.0/Lookup/ServiceTypes
    method: POST
- name: DRLCategories
  endpoint:
    path: /DRLInfo/DRLCategories
    method: POST
    data_selector: '[DRLCategories]'
    params: {}
- name: AccountUsageHistory
  endpoint:
    path: /V5.0/Billing/AccountUsageHistory
    method: POST
    data_selector: records
- name: ServiceTypes
  endpoint:
    path: /Lookup/ServiceTypes
    method: POST
    data_selector: ServiceTypes
    params: {}
- name: BinderTemplates
  endpoint:
    path: /V5.0/Lookup/BinderTemplates
    method: POST
- name: AccountUsageHistory
  endpoint:
    path: /V5.0/Billing/AccountUsageHistory
    method: POST
    data_selector: records
    params:
      ServiceTypeId: required
      TaxYear: required
      FromDate: required
      ToDate: required
      Size: optional
      Number: optional
- name: BinderTemplates
  endpoint:
    path: /Lookup/BinderTemplates
    method: POST
    data_selector: '[BinderTemplates]'
- name: office_locations
  endpoint:
    path: /V5.0/Lookup/OfficeLocations
    method: POST
- name: OfficeLocations
  endpoint:
    path: /Lookup/OfficeLocations
    method: POST
    data_selector: OfficeLocations
- name: binder_status_list
  endpoint:
    path: /V5.0/Lookup/BinderStatusList
    method: POST
    data_selector: records
- name: BinderStatusList
  endpoint:
    path: /lookup/BinderStatusList
    method: POST
    data_selector: BinderStatusList
    params: {}
- name: DRLInfo
  endpoint:
    path: /V5.0/DRLInfo/DRLCategories
    method: POST
- name: PushDocumentType
  endpoint:
    path: /PushDocumentType
    method: POST
    data_selector: ''
    params: {}
- name: DRLCategories
  endpoint:
    path: /DRLInfo/DRLCategories
    method: POST
    data_selector: '[DRLCategories]'
    params: {}
- name: AccountUsageHistory
  endpoint:
    path: /V5.0/Billing/AccountUsageHistory
    method: POST
- name: AccountUsageHistory
  endpoint:
    path: /V5.0/Billing/AccountUsageHistory
    method: POST
    data_selector: records
    params:
      ServiceTypeId: required
      TaxYear: required
      FromDate: required
      ToDate: required
      Size: optional
      Number: optional
- name: GetToken
  endpoint:
    path: /Authenticate/GetToken
    method: POST
    data_selector: Token
    params: {}
- name: TaxSoftwareList
  endpoint:
    path: /Lookup/TaxSoftwareList
    method: POST
    data_selector: '[TaxSoftwareList]'
- name: BinderTypes
  endpoint:
    path: /Lookup/BinderTypes
    method: POST
    data_selector: '[BinderTypes]'
- name: ServiceTypes
  endpoint:
    path: /Lookup/ServiceTypes
    method: POST
- name: BinderTemplates
  endpoint:
    path: /Lookup/BinderTemplates
    method: POST
- name: OfficeLocations
  endpoint:
    path: /Lookup/OfficeLocations
    method: POST
    data_selector: '[OfficeLocations]'
    params: {}
- name: BinderStatusList
  endpoint:
    path: /lookup/BinderStatusList
    method: POST
    data_selector: BinderStatusList
    params: {}
- name: DocumentsUploaded
  endpoint:
    path: /DocumentsUploaded
    method: POST
    data_selector: eventData
    params: {}
- name: DRLCategories
  endpoint:
    path: /DRLInfo/DRLCategories
    method: POST
    data_selector: DRLCategories
- name: CreateBinder
  endpoint:
    path: /Binder/CreateBinder
    method: POST
- name: binder
  endpoint:
    path: /Binder/CreateBinder
    method: POST
    data_selector: response
    params: {}
- name: GetToken
  endpoint:
    path: /Authenticate/GetToken
    method: POST
    data_selector: Token
    params: {}
- name: TaxSoftwareList
  endpoint:
    path: /Lookup/TaxSoftwareList
    method: POST
    data_selector: TaxSoftwareList
    params: {}
- name: UploadBinderDocuments
  endpoint:
    path: /Binder/UploadBinderDocuments
    method: POST
- name: BinderTypes
  endpoint:
    path: /Lookup/BinderTypes
    method: POST
    data_selector: BinderTypes
    params: {}
- name: GetToken
  endpoint:
    path: /docs-page/currentver-gettoken
    method: POST
- name: CreateBinder
  endpoint:
    path: /docs-page/currentver-createbinder
    method: POST
- name: GetStatus
  endpoint:
    path: /docs-page/currentver-getstatus
    method: POST
- name: GetDocuments
  endpoint:
    path: /docs-page/currentver-getdocuments
    method: POST
- name: ServiceTypes
  endpoint:
    path: /Lookup/ServiceTypes
    method: POST
    data_selector: ServiceTypes
    params: {}
- name: BinderTemplates
  endpoint:
    path: /Lookup/BinderTemplates
    method: POST
    data_selector: BinderTemplates
    params: {}
- name: OfficeLocations
  endpoint:
    path: /Lookup/OfficeLocations
    method: POST
    data_selector: OfficeLocations
- name: BinderStatusList
  endpoint:
    path: /lookup/BinderStatusList
    method: POST
    data_selector: BinderStatusList
    params: {}
- name: DRLCategories
  endpoint:
    path: /DRLInfo/DRLCategories
    method: POST
- name: GetToken
  endpoint:
    path: /docs-page/currentver-gettoken
    method: POST
- name: TaxSoftwareList
  endpoint:
    path: /docs-page/currentver-taxsoftware
    method: POST
- name: CreateBinder
  endpoint:
    path: /docs-page/currentver-createbinder
    method: POST
- name: GetStatus
  endpoint:
    path: /docs-page/currentver-getstatus
    method: POST
- name: SubmitBinder
  endpoint:
    path: /Binder/SubmitBinder
    method: POST
    data_selector: ''
    params: {}
- name: CreateBinder
  endpoint:
    path: /Binder/CreateBinder
    method: POST
- name: UpdateProjectID
  endpoint:
    path: /Binder/UpdateProjectID
    method: POST
- name: create_binder
  endpoint:
    path: /V5.0/Binder/CreateBinder
    method: POST
    data_selector: response
    params: {}
- name: GetStatus
  endpoint:
    path: /Binder/GetStatus
    method: POST
    data_selector: ''
- name: GetDocuments
  endpoint:
    path: /Binder/GetDocuments
    method: POST
    data_selector: Dictionary
    params:
      binder_ID: integer
- name: UploadBinderDocuments
  endpoint:
    path: /Binder/UploadBinderDocuments
    method: POST
- name: DownloadDocument
  endpoint:
    path: /V5.0/Binder/DownloadDocument
    method: POST
    data_selector: file blob
    params:
      documentID: string
- name: GetDRLOutput
  endpoint:
    path: /DRLInfo/GetDRLOutput
    method: POST
    data_selector: records
- name: ChangeBinderStatus
  endpoint:
    path: /Binder/ChangeBinderStatus
    method: POST
- name: GetToken
  endpoint:
    path: /docs-page/currentver-gettoken
    method: POST
- name: TaxSoftwareList
  endpoint:
    path: /docs-page/currentver-taxsoftware
    method: POST
- name: BinderTypes
  endpoint:
    path: /docs-page/currentver-bindertypes
    method: POST
- name: ServiceTypes
  endpoint:
    path: /docs-page/currentver-servicetypes
    method: POST
- name: BinderTemplates
  endpoint:
    path: /docs-page/currentver-bindertemplates
    method: POST
- name: OfficeLocations
  endpoint:
    path: /docs-page/currentver-officelocations
    method: POST
- name: BinderStatusList
  endpoint:
    path: /docs-page/currentver-binderstatuslist
    method: POST
- name: DRLCategories
  endpoint:
    path: /docs-page/currentver-drlcategories
    method: POST
- name: CreateBinder
  endpoint:
    path: /docs-page/currentver-createbinder
    method: POST
- name: UpdateProjectID
  endpoint:
    path: /docs-page/currentver-updateprojectid
    method: POST
- name: GetStatus
  endpoint:
    path: /docs-page/currentver-getstatus
    method: POST
- name: GetDocuments
  endpoint:
    path: /docs-page/currentver-getdocuments
    method: POST
- name: GetStatesandLocalities
  endpoint:
    path: /V5.0/Binder/GetStatesandLocalities
    method: POST
    data_selector: states
    params:
      binder_ID: '300001'
- name: SubmitBinder
  endpoint:
    path: /Binder/SubmitBinder
    method: POST
    data_selector: null
    params:
      binder_ID: required
      isInHouseProcess: optional
- name: DownloadBinderPBFX
  endpoint:
    path: /Binder/DownloadBinderPBFX
    method: POST
    data_selector: null
    params:
      binder_ID: '300001'
      mapped_ID: pampreparer@firm.com
- name: UpdateProjectID
  endpoint:
    path: /V5.0/Binder/UpdateProjectID
    method: POST
- name: GetBindersStatusWithStates
  endpoint:
    path: /Binder/GetBindersStatusWithStates
    method: POST
    data_selector: binderDetail
    params:
      binder_ID: '0'
      pageSize: '100'
      pageNumber: '1'
- name: GetStatus
  endpoint:
    path: /V5.0/Binder/GetStatus
    method: POST
    data_selector: ''
- name: GetDocuments
  endpoint:
    path: /Binder/GetDocuments
    method: POST
    data_selector: Dictionary
    params:
      binder_ID: Binder ID that was returned by SurePrep during the Create Binder
        call.
- name: GetBinderDetails
  endpoint:
    path: /BinderInfo/GetBinderDetails
    method: POST
- name: DownloadDocument
  endpoint:
    path: /V5.0/Binder/DownloadDocument
    method: POST
    data_selector: 'Response Code: 200'
    params:
      documentID: CF956C0E-A1C6-439D-AF20-6184460AAB5F
- name: GetBinderPendingItems
  endpoint:
    path: /BinderInfo/GetBinderPendingItems
    method: POST
    data_selector: binderDetails
    params:
      taxYear: '2020'
      clientID: '99772'
- name: GetDRLOutput
  endpoint:
    path: /DRLInfo/GetDRLOutput
    method: POST
    data_selector: records
    params:
      taxYear: required
- name: GetBinderAuditLog
  endpoint:
    path: /Binder/GetBinderAuditLog
    method: POST
    data_selector: records
    params: {}
- name: ChangeBinderStatus
  endpoint:
    path: /Binder/ChangeBinderStatus
    method: POST
- name: UpdateOwnerMember
  endpoint:
    path: /V5.0/Binder/UpdateOwnerMember
    method: POST
- name: GetStatesandLocalities
  endpoint:
    path: /Binder/GetStatesandLocalities
    method: POST
    data_selector: states
    params:
      binder_ID: '300001'
- name: PrintBinder
  endpoint:
    path: /Binder/PrintBinder
    method: POST
- name: DownloadBinderPBFX
  endpoint:
    path: /Binder/DownloadBinderPBFX
    method: POST
- name: GetDRLPDFDetails
  endpoint:
    path: /DRLInfo/GetDRLPDFDetails
    method: POST
    data_selector: records
    params: {}
- name: GetBindersStatusWithStates
  endpoint:
    path: /Binder/GetBindersStatusWithStates
    method: POST
    params:
      binder_ID: '0'
      pageSize: '100'
      pageNumber: '1'
      taxYear: '0'
- name: CreateClient
  endpoint:
    path: /CreateClient
    method: POST
    data_selector: response
    params: {}
- name: GetBinderDetails
  endpoint:
    path: /BinderInfo/GetBinderDetails
    method: POST
- name: GetToken
  endpoint:
    path: /docs-page/currentver-gettoken
    method: POST
- name: CreateBinder
  endpoint:
    path: /docs-page/currentver-createbinder
    method: POST
- name: GetStatus
  endpoint:
    path: /docs-page/currentver-getstatus
    method: POST
- name: GetDocuments
  endpoint:
    path: /docs-page/currentver-getdocuments
    method: POST
- name: GetClientDetails
  endpoint:
    path: /TaxCaddyAPI/GetClientDetails
    method: POST
    data_selector: response
    params:
      UserEmail: string
      PageSize: integer
      PageNumber: integer
      TaxPayers: array
- name: GetBinderPendingItems
  endpoint:
    path: /BinderInfo/GetBinderPendingItems
    method: POST
- name: GetBinderAuditLog
  endpoint:
    path: /Binder/GetBinderAuditLog
    method: POST
- name: CreateDRL
  endpoint:
    path: /TaxCaddyAPI/CreateDrl
    method: POST
    data_selector: Response
    params: {}
- name: UpdateOwnerMember
  endpoint:
    path: /V5.0/Binder/UpdateOwnerMember
    method: POST
    data_selector: response
    params:
      BinderID: Integer
      LoginUserEmail: String
      OwnerEmail: String
      LocationID: Integer
      AssignMember: Array of string
- name: SendDRL
  endpoint:
    path: /TaxCaddyAPI/SendDRL
    method: POST
    data_selector: Response.Data
    params: {}
- name: PrintBinder
  endpoint:
    path: /Binder/PrintBinder
    method: POST
    data_selector: response
    params:
      BinderID: '300001'
- name: ClientSubscribe
  endpoint:
    path: /TaxCaddyAPI/ClientSubscribe
    method: PUT
- name: GetDRLPDFDetails
  endpoint:
    path: /DRLInfo/GetDRLPDFDetails
    method: POST
    data_selector: documentID
    params:
      clientNumber: string
      taxYear: 0
- name: ClientUnsubscribe
  endpoint:
    path: /TaxCaddyAPI/ClientUnSubscribe
    method: PUT
- name: DownloadDocument
  endpoint:
    path: /TaxCaddyAPI/DownloadDocument
    method: POST
    data_selector: File
    params: {}
- name: TaxSoftwareList
  endpoint:
    path: /docs-page/currentver-taxsoftware
    method: GET
- name: BinderTypes
  endpoint:
    path: /docs-page/currentver-bindertypes
    method: GET
- name: ServiceTypes
  endpoint:
    path: /docs-page/currentver-servicetypes
    method: GET
- name: BinderTemplates
  endpoint:
    path: /docs-page/currentver-bindertemplates
    method: GET
- name: OfficeLocations
  endpoint:
    path: /docs-page/currentver-officelocations
    method: GET
- name: BinderStatusList
  endpoint:
    path: /docs-page/currentver-binderstatuslist
    method: GET
- name: DRLCategories
  endpoint:
    path: /docs-page/currentver-drlcategories
    method: GET
- name: CreateBinder
  endpoint:
    path: /docs-page/currentver-createbinder
    method: POST
- name: UploadBinderDocuments
  endpoint:
    path: /docs-page/currentver-uploadbinderdocuments
    method: POST
- name: SubmitBinder
  endpoint:
    path: /docs-page/currentver-bindersubmissioncomplete
    method: POST
- name: UpdateProjectID
  endpoint:
    path: /docs-page/currentver-updateprojectid
    method: POST
- name: GetStatus
  endpoint:
    path: /docs-page/currentver-getstatus
    method: POST
- name: CreateClient
  endpoint:
    path: /CreateClient
    method: POST
- name: TaxSoftwareList
  endpoint:
    path: /docs-page/currentver-taxsoftware
    method: GET
- name: BinderTypes
  endpoint:
    path: /docs-page/currentver-bindertypes
    method: GET
- name: ServiceTypes
  endpoint:
    path: /docs-page/currentver-servicetypes
    method: GET
- name: BinderTemplates
  endpoint:
    path: /docs-page/currentver-bindertemplates
    method: GET
- name: OfficeLocations
  endpoint:
    path: /docs-page/currentver-officelocations
    method: GET
- name: BinderStatusList
  endpoint:
    path: /docs-page/currentver-binderstatuslist
    method: GET
- name: DRLCategories
  endpoint:
    path: /docs-page/currentver-drlcategories
    method: GET
- name: CreateBinder
  endpoint:
    path: /docs-page/currentver-createbinder
    method: POST
- name: GetStatus
  endpoint:
    path: /docs-page/currentver-getstatus
    method: POST
- name: GetDocuments
  endpoint:
    path: /docs-page/currentver-getdocuments
    method: POST
- name: DownloadDocument
  endpoint:
    path: /docs-page/currentver-downloaddocument
    method: POST
- name: GetClientDetails
  endpoint:
    path: /GetClientDetails
    method: POST
    data_selector: response
    params:
      UserEmail: ''
      PageSize: 100
      PageNumber: 1
      TaxPayers: ''
- name: GetDRLStatus
  endpoint:
    path: /GetDRLStatus
    method: POST
    data_selector: Response
    params: {}
- name: CreateDRL
  endpoint:
    path: /CreateDrl
    method: POST
    data_selector: Response
    params: {}
- name: DisconnectDevices
  endpoint:
    path: /DisconnectDevices
    method: POST
    data_selector: Data
    params: {}
- name: SendDRL
  endpoint:
    path: /TaxCaddyAPI/SendDRL
    method: POST
- name: GetUnclearedNotes
  endpoint:
    path: /BinderInfo/GetUnclearedNotes
    method: POST
    data_selector: UnclearedNotes
    params:
      taxYear: required
      clientID: required
      pageSize: optional
      pageNumber: optional
      binderType: optional
- name: GetUnreviewedTRStamps
  endpoint:
    path: /BinderInfo/GetUnreviewedTRStamps
    method: POST
    data_selector: UnReviewedTRStamps
    params:
      taxYear: taxYear
      clientID: clientID
      pageSize: pageSize
      pageNumber: pageNumber
      binderType: binderType
- name: ClientSubscribe
  endpoint:
    path: /TaxCaddyAPI/ClientSubscribe
    method: PUT
- name: GetUnreviewedStickyNotes
  endpoint:
    path: /BinderInfo/GetUnreviewedStickyNotes
    method: POST
    data_selector: UnReviewedStickyNotes
    params:
      taxYear: '0'
      clientID:
      - string
      pageSize: '0'
      pageNumber: '0'
- name: ClientUnsubscribe
  endpoint:
    path: /TaxCaddyAPI/ClientUnSubscribe
    method: PUT
    data_selector: response
    params: {}
- name: GetUnreviewedWorkpapersByL1
  endpoint:
    path: /BinderInfo/GetUnreviewedWorkpapersByL1
    method: POST
    data_selector: UnReviewedWorkPapersbyL1
    params:
      taxYear: Required
      clientID: Required
      pageSize: Optional
      pageNumber: Optional
      binderType: Optional
- name: GetUnreviewedWorkpapersByL2
  endpoint:
    path: /V5.0/BinderInfo/GetUnreviewedWorkpapersByL2
    method: POST
    data_selector: UnReviewedWorkPapersbyL2
- name: DownloadDocument
  endpoint:
    path: /TaxCaddyAPI/DownloadDocument
    method: POST
    data_selector: File
    params:
      UserEmail: ''
      Documents: {}
- name: GetToken
  endpoint:
    path: /docs-page/currentver-gettoken
    method: POST
- name: TaxSoftwareList
  endpoint:
    path: /docs-page/currentver-taxsoftware
    method: POST
- name: CreateBinder
  endpoint:
    path: /docs-page/currentver-createbinder
    method: POST
- name: GetUnreviewedWorkpapersByL3
  endpoint:
    path: /BinderInfo/GetUnreviewedWorkpapersByL3
    method: POST
    data_selector: UnReviewedWorkPapersbyL3
    params:
      taxYear: taxYear
      clientID: clientID
      pageSize: pageSize
      pageNumber: pageNumber
      binderType: binderType
- name: GetUnreviewedWorkpapersByL4
  endpoint:
    path: /BinderInfo/GetUnreviewedWorkpapersByL4
    method: POST
- name: GetDRLStatus
  endpoint:
    path: /GetDRLStatus
    method: POST
    data_selector: Response
    params:
      UserEmail: LoginUserEmail@sureprep.com
      DRLRequestIDs: []
- name: GetDocumentPendingReviewCount
  endpoint:
    path: /BinderInfo/GetDocumentPendingReviewCount
    method: POST
    data_selector: resultCount
    params:
      taxYear: '0'
      clientID: '["string"]'
      pageNumber: '0'
      pageSize: '0'
- name: DisconnectDevices
  endpoint:
    path: /DisconnectDevices
    method: POST
    data_selector: null
    params: {}
- name: GetDocumentPendingSignatureCount
  endpoint:
    path: /BinderInfo/GetDocumentPendingSignatureCount
    method: POST
    data_selector: results
    params:
      taxYear: '0'
      clientID: string
      pageNumber: '0'
      pageSize: '0'
- name: GetUnclearedNotes
  endpoint:
    path: /BinderInfo/GetUnclearedNotes
    method: POST
    data_selector: UnclearedNotes
    params:
      taxYear: taxYear
      clientID: clientID
      pageSize: pageSize
      pageNumber: pageNumber
      binderType: binderType
- name: GetDocumentPendingUploadCount
  endpoint:
    path: /BinderInfo/GetDocumentPendingUploadCount
    method: POST
    data_selector: resultCount
    params:
      taxYear: required
      clientID: required
      pageSize: optional
      pageNumber: optional
      binderType: optional
- name: GetUnreviewedTRStamps
  endpoint:
    path: /BinderInfo/GetUnreviewedTRStamps
    method: POST
    data_selector: UnReviewedTRStamps
    params:
      taxYear: taxYear
      clientID: clientID
      pageSize: pageSize
      pageNumber: pageNumber
      binderType: binderType
- name: GetReport
  endpoint:
    path: /MIReport/GetReport
    method: POST
    data_selector: records
    params:
      Binder_ID: '300001'
- name: GetUnreviewedStickyNotes
  endpoint:
    path: /BinderInfo/GetUnreviewedStickyNotes
    method: POST
    data_selector: UnReviewedStickyNotes
    params:
      taxYear: taxYear
      clientID: clientID
      pageSize: pageSize
      pageNumber: pageNumber
      binderType: binderType
- name: AccountUsageHistory
  endpoint:
    path: /Billing/AccountUsageHistory
    method: POST
    data_selector: ''
- name: unreviewed_workpapers_by_l1
  endpoint:
    path: /BinderInfo/GetUnreviewedWorkpapersByL1
    method: POST
    data_selector: UnReviewedWorkPapersbyL1
- name: TaxSoftwareList
  endpoint:
    path: /docs-page/currentver-taxsoftware
    method: POST
- name: BinderTypes
  endpoint:
    path: /docs-page/currentver-bindertypes
    method: POST
- name: ServiceTypes
  endpoint:
    path: /docs-page/currentver-servicetypes
    method: POST
- name: BinderTemplates
  endpoint:
    path: /docs-page/currentver-bindertemplates
    method: POST
- name: OfficeLocations
  endpoint:
    path: /docs-page/currentver-officelocations
    method: POST
- name: BinderStatusList
  endpoint:
    path: /docs-page/currentver-binderstatuslist
    method: POST
- name: DRLCategories
  endpoint:
    path: /docs-page/currentver-drlcategories
    method: POST
- name: GetUnreviewedWorkpapersByL2
  endpoint:
    path: /BinderInfo/GetUnreviewedWorkpapersByL2
    method: POST
    data_selector: UnReviewedWorkPapersbyL2
    params:
      taxYear: required
      clientID: required
      pageSize: optional
      pageNumber: optional
      binderType: optional
- name: GetUnreviewedWorkpapersByL3
  endpoint:
    path: /BinderInfo/GetUnreviewedWorkpapersByL3
    method: POST
    data_selector: UnReviewedWorkPapersbyL3
    params:
      taxYear: '2020'
      clientID: string
      pageSize: 100
      pageNumber: 1
      binderType: 1040
- name: GetUnreviewedWorkpapersByL4
  endpoint:
    path: /BinderInfo/GetUnreviewedWorkpapersByL4
    method: POST
    data_selector: UnReviewedWorkPapersbyL4
    params:
      taxYear: '2020'
      clientID: '99772'
      pageSize: '100'
      pageNumber: '1'
      binderType: '1040'
- name: GetDocumentPendingReviewCount
  endpoint:
    path: /BinderInfo/GetDocumentPendingReviewCount
    method: POST
    data_selector: resultCount
    params:
      taxYear: taxYear
      clientID: clientID
      pageSize: pageSize
      pageNumber: pageNumber
      binderType: binderType
- name: GetDocumentPendingSignatureCount
  endpoint:
    path: /BinderInfo/GetDocumentPendingSignatureCount
    method: POST
    data_selector: resultCount
    params:
      taxYear: required
      clientID: required
      pageSize: optional
      pageNumber: optional
      binderType: optional
- name: PushDocumentType
  endpoint:
    path: /docs-page/currentver-pushdocumenttype
    method: POST
- name: GetDocumentPendingUploadCount
  endpoint:
    path: /BinderInfo/GetDocumentPendingUploadCount
    method: POST
    data_selector: resultCount
    params:
      taxYear: required
      clientID: required
      pageSize: optional
      pageNumber: optional
      binderType: optional
- name: DocumentsUploaded
  endpoint:
    path: /api/v5/documents/uploaded
    method: POST
- name: GetReport
  endpoint:
    path: /MIReport/GetReport
    method: POST
    data_selector: records
    params:
      Binder_ID: '300001'
- name: GetToken
  endpoint:
    path: /docs-page/currentver-gettoken
    method: POST
- name: DRL
  endpoint:
    path: /docs-page/currentver-drl
    method: POST
- name: AccountUsageHistory
  endpoint:
    path: /Billing/AccountUsageHistory
    method: POST
    data_selector: records
    params:
      ServiceTypeId: integer
      TaxYear: integer
      FromDate: date
      ToDate: date
      Size: integer
      Number: integer
- name: GetToken
  endpoint:
    path: /Authenticate/GetToken
    method: POST
    data_selector: Token
    params: {}
- name: TaxSoftwareList
  endpoint:
    path: /Lookup/TaxSoftwareList
    method: POST
    data_selector: records
    params: {}
- name: GetToken
  endpoint:
    path: /docs-page/currentver-gettoken
    method: POST
- name: TaxSoftwareList
  endpoint:
    path: /docs-page/currentver-taxsoftware
    method: POST
- name: BinderTypes
  endpoint:
    path: /docs-page/currentver-bindertypes
    method: POST
- name: BinderTypes
  endpoint:
    path: /Lookup/BinderTypes
    method: POST
    data_selector: ''
- name: ServiceTypes
  endpoint:
    path: /Lookup/ServiceTypes
    method: POST
- name: BinderTemplates
  endpoint:
    path: /Lookup/BinderTemplates
    method: POST
    data_selector: ''
- name: OfficeLocations
  endpoint:
    path: /Lookup/OfficeLocations
    method: POST
    data_selector: ''
- name: BinderStatusList
  endpoint:
    path: /lookup/BinderStatusList
    method: POST
    data_selector: ''
- name: DRLCategories
  endpoint:
    path: /POST/V4.0/DRLInfo/DRLCategories
    method: POST
    data_selector: ''
- name: DocumentsUploaded
  endpoint:
    path: /docs-page/currentver-documentsuploaded
    method: POST
- name: CreateBinder
  endpoint:
    path: /Binder/CreateBinder
    method: POST
    data_selector: ''
- name: UploadBinderDocuments
  endpoint:
    path: /Binder/UploadBinderDocuments
    method: POST
- name: GetToken
  endpoint:
    path: /Authenticate/GetToken
    method: POST
    data_selector: Token
- name: TaxSoftwareList
  endpoint:
    path: /Lookup/TaxSoftwareList
    method: POST
    data_selector: records
    params: {}
- name: binder_types
  endpoint:
    path: /Lookup/BinderTypes
    method: POST
    data_selector: records
    params: {}
- name: ServiceTypes
  endpoint:
    path: /Lookup/ServiceTypes
    method: POST
- name: BinderSubmissionComplete
  endpoint:
    path: /Binder/SubmitBinder
    method: POST
    data_selector: null
    params:
      binder_ID: null
      isInHouseProcess: null
- name: BinderTemplates
  endpoint:
    path: /Lookup/BinderTemplates
    method: POST
- name: UpdateProjectID
  endpoint:
    path: /Binder/UpdatePSProject
    method: POST
    data_selector: response
    params: {}
- name: OfficeLocations
  endpoint:
    path: /Lookup/OfficeLocations
    method: POST
    data_selector: ''
- name: GetStatus
  endpoint:
    path: /V4.0/Binder/GetStatus
    method: POST
    data_selector: ''
- name: BinderStatusList
  endpoint:
    path: /lookup/BinderStatusList
    method: POST
- name: GetDocuments
  endpoint:
    path: /Binder/GetDocuments
    method: POST
    data_selector: Dictionary
    params:
      binder_ID: '300001'
- name: DRLCategories
  endpoint:
    path: /V4.0/DRLInfo/DRLCategories
    method: POST
- name: DownloadDocument
  endpoint:
    path: /V4.0/Binder/DownloadDocument
    method: POST
    data_selector: null
    params:
      documentID: CF956C0E-A1C6-439D-AF20-6184460AAB5F
- name: CreateBinder
  endpoint:
    path: /Binder/CreateBinder
    method: POST
    data_selector: null
    params:
      unique_Identifier: string
      email: string
      template_ID: 0
      office_Location_ID: 0
      service_Type_ID: 0
      custom_Field: string
- name: GetDRLOutput
  endpoint:
    path: /DRLInfo/GetDRLOutput
    method: POST
    data_selector: records
    params:
      taxYear: '2018'
- name: ChangeBinderStatus
  endpoint:
    path: /V4.0/Binder/ChangeBinderStatus
    method: POST
- name: UploadBinderDocuments
  endpoint:
    path: /Binder/UploadBinderDocuments
    method: POST
    data_selector: success
- name: GetStatesandLocalities
  endpoint:
    path: /V4.0/Binder/GetStatesandLocalities
    method: POST
    data_selector: states
- name: DownloadBinderPBFX
  endpoint:
    path: /Binder/DownloadBinderPBFX
    method: POST
    data_selector: response
    params: {}
- name: GetBindersStatusWithStates
  endpoint:
    path: /Binder/GetBindersStatusWithStates
    method: POST
    data_selector: binderDetail
    params:
      binder_ID: '0'
      pageSize: '0'
      pageNumber: '0'
      taxYear: '0'
- name: BinderDetails
  endpoint:
    path: /BinderInfo/GetBinderDetails
    method: POST
    data_selector: null
    params:
      taxYear: null
      clientID: null
      pageSize: null
      pageNumber: null
      binderType: null
- name: SubmitBinder
  endpoint:
    path: /Binder/SubmitBinder
    method: POST
    data_selector: response
    params: {}
- name: GetBinderPendingItems
  endpoint:
    path: /V4.0/BinderInfo/GetBinderPendingItems
    method: POST
- name: UpdateProjectID
  endpoint:
    path: /Binder/UpdatePSProject
    method: POST
    data_selector: null
    params: {}
- name: GetBinderAuditLog
  endpoint:
    path: /Binder/GetBinderAuditLog
    method: POST
    data_selector: records
    params:
      binder_ID: binder_ID
      clientID: clientID
      binderType: binderType
      taxYear: taxYear
- name: get_status
  endpoint:
    path: /V4.0/Binder/GetStatus
    method: POST
    data_selector: ''
    params:
      binder_ID: binder_ID
- name: GetUnclearedNotes
  endpoint:
    path: /BinderInfo/GetUnclearedNotes
    method: POST
    data_selector: records
    params:
      taxYear: '2018'
      clientID: '99772'
- name: GetDocuments
  endpoint:
    path: /Binder/GetDocuments
    method: POST
    data_selector: Dictionary
    params:
      binder_ID: '300001'
- name: GetUnreviewedTRStamps
  endpoint:
    path: /V4.0/BinderInfo/GetUnreviewedTRStamps
    method: POST
    data_selector: results
    params:
      taxYear: '0'
      clientID:
      - string
      pageNumber: '0'
      pageSize: '0'
- name: DownloadDocument
  endpoint:
    path: /V4.0/Binder/DownloadDocument
    method: POST
    params:
      documentID: ''
- name: GetUnreviewedStickyNotes
  endpoint:
    path: /BinderInfo/GetUnreviewedStickyNotes
    method: POST
    data_selector: resultCount
    params:
      taxYear: '0'
      clientID:
      - string
      pageSize: '0'
      pageNumber: '0'
- name: GetDRLOutput
  endpoint:
    path: /V4.0/DRLInfo/GetDRLOutput
    method: POST
- name: change_binder_status
  endpoint:
    path: /V4.0/Binder/ChangeBinderStatus
    method: POST
    data_selector: null
    params: {}
- name: GetUnreviewedWorkpapersByL1
  endpoint:
    path: /V4.0/BinderInfo/GetUnreviewedWorkpapersByL1
    method: POST
    data_selector: resultCount
    params:
      taxYear: '0'
      clientID: string
      pageSize: '0'
      pageNumber: '0'
- name: GetStatesandLocalities
  endpoint:
    path: /Binder/GetStatesandLocalities
    method: POST
    data_selector: states
    params:
      binder_ID: '300001'
- name: GetUnreviewedWorkpapersByL2
  endpoint:
    path: /BinderInfo/GetUnreviewedWorkpapersByL2
    method: POST
    data_selector: resultCount
    params:
      taxYear: 0
      clientID:
      - string
      pageSize: 0
      pageNumber: 0
- name: DownloadBinderPBFX
  endpoint:
    path: /Binder/DownloadBinderPBFX
    method: POST
    data_selector: null
    params:
      binder_ID: '300001'
      mapped_ID: pampreparer@firm.com
- name: GetUnreviewedWorkpapersByL3
  endpoint:
    path: /V4.0/BinderInfo/GetUnreviewedWorkpapersByL3
    method: POST
    data_selector: resultCount
    params:
      taxYear: null
      clientID: null
      pageSize: null
      pageNumber: null
      binderType: null
- name: GetUnreviewedWorkpapersByL4
  endpoint:
    path: /BinderInfo/GetUnreviewedWorkpapersByL4
    method: POST
    data_selector: null
    params:
      taxYear: 0
      clientID:
      - string
      pageNumber: 0
      pageSize: 0
- name: GetBindersStatusWithStates
  endpoint:
    path: /Binder/GetBindersStatusWithStates
    method: POST
    data_selector: binderDetail
    params:
      binder_ID: '0'
      pageSize: '100'
      pageNumber: '1'
      taxYear: '2020'
- name: GetDocumentPendingReviewCount
  endpoint:
    path: /BinderInfo/GetDocumentPendingReviewCount
    method: POST
    data_selector: resultCount
    params:
      taxYear: taxYear
      clientID: clientID
      pageSize: pageSize
      pageNumber: pageNumber
- name: binder_details
  endpoint:
    path: /V4.0/BinderInfo/GetBinderDetails
    method: POST
    data_selector: records
    params:
      taxYear: integer
      clientID: string[]
      pageSize: integer
      pageNumber: integer
      binderType: integer
- name: GetDocumentPendingSignatureCount
  endpoint:
    path: /BinderInfo/GetDocumentPendingSignatureCount
    method: POST
    data_selector: resultCount
    params:
      taxYear: '0'
      clientID:
      - string
      pageSize: '0'
      pageNumber: '0'
- name: GetBinderPendingItems
  endpoint:
    path: /V4.0/BinderInfo/GetBinderPendingItems
    method: POST
    data_selector: binderDetails
- name: GetBinderAuditLog
  endpoint:
    path: /V4.0/Binder/GetBinderAuditLog
    method: POST
    data_selector: records
    params:
      binder_ID: integer
      clientID: string
      binderType: integer
      taxYear: integer
- name: GetDocumentPendingUploadCount
  endpoint:
    path: /BinderInfo/GetDocumentPendingUploadCount
    method: POST
    data_selector: resultCount
    params:
      taxYear: '0'
      clientID:
      - string
      pageSize: '0'
      pageNumber: '0'
- name: GetUnclearedNotes
  endpoint:
    path: /BinderInfo/GetUnclearedNotes
    method: POST
    data_selector: ''
- name: GetToken
  endpoint:
    path: /V4.0/Authenticate/GetToken
    method: POST
    data_selector: Token
    params: {}
- name: GetUnreviewedTRStamps
  endpoint:
    path: /V4.0/BinderInfo/GetUnreviewedTRStamps
    method: POST
- name: GetUnreviewedStickyNotes
  endpoint:
    path: /BinderInfo/GetUnreviewedStickyNotes
    method: POST
    data_selector: resultCount
    params:
      taxYear: taxYear
      clientID: clientID
      pageSize: pageSize
      pageNumber: pageNumber
- name: GetUnreviewedWorkpapersByL1
  endpoint:
    path: /V4.0/BinderInfo/GetUnreviewedWorkpapersByL1
    method: POST
    data_selector: records
    params:
      taxYear: taxYear
      clientID: clientID
      pageSize: pageSize
      pageNumber: pageNumber
      binderType: binderType
- name: GetUnreviewedWorkpapersByL2
  endpoint:
    path: /BinderInfo/GetUnreviewedWorkpapersByL2
    method: POST
    data_selector: resultCount
    params:
      taxYear: taxYear
      clientID: clientID
      pageSize: pageSize
      pageNumber: pageNumber
- name: unreviewed_workpapers
  endpoint:
    path: /BinderInfo/GetUnreviewedWorkpapersByL3
    method: POST
    data_selector: resultCount
    params:
      taxYear: taxYear
      clientID: clientID
      pageSize: pageSize
      pageNumber: pageNumber
- name: GetUnreviewedWorkpapersByL4
  endpoint:
    path: /BinderInfo/GetUnreviewedWorkpapersByL4
    method: POST
    data_selector: resultCount
    params:
      taxYear: '0'
      clientID:
      - string
      pageNumber: '0'
      pageSize: '0'
- name: GetDocumentPendingReviewCount
  endpoint:
    path: /BinderInfo/GetDocumentPendingReviewCount
    method: POST
    data_selector: resultCount
    params:
      taxYear: '2018'
      clientID: '99772'
      pageSize: '100'
      pageNumber: '1'
- name: GetDocumentPendingSignatureCount
  endpoint:
    path: /BinderInfo/GetDocumentPendingSignatureCount
    method: POST
    data_selector: resultCount
    params:
      taxYear: integer
      clientID: string[]
      pageSize: integer
      pageNumber: integer
- name: GetDocumentPendingUploadCount
  endpoint:
    path: /BinderInfo/GetDocumentPendingUploadCount
    method: POST
    data_selector: null
    params:
      taxYear: integer
      clientID: string[]
      pageSize: integer
      pageNumber: integer
- name: GetToken
  endpoint:
    path: /Authenticate/GetToken
    method: POST
    data_selector: Token
notes:
- If your firm plans to use TaxCaddy API calls, then please contact SurePrep Support
  to enable TaxCaddy API for your domain.
- When making TaxCaddy API calls, the tax professional user’s email address will be
  passed as the 'UserEmail' parameter.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Data includes various school districts and their identifiers.
- By default, all API retrieve calls will return a maximum of 100 records per request.
- If you would like to change this number, please pass the desired maximum page size
  using the [number_records_per_page] parameter.
- Our API will only allow a consumer to make up to 400 requests per minute.
- Token expires every 8 hours and a new token needs to be generated in order to make
  API calls.
- You must first have your domain enabled for API.
- API User Name, Password, and API Key need to be created in FileRoom.
- Standardized authentication method with Thomson Reuters accounts
- API requires setup of API Username, Password, and API Key in FileRoom
- Use the actual value derived from the GetToken API call.
- Standardized authentication method with Thomson Reuters accounts.
- Response content type can be application/json, application/xml, or text/xml.
- Access token required in the AuthToken header
- API will show a 'Empty set' response if the binder does not exist or when the binder
  exists without any data.
- If no status parameter is passed, all eligible binders will be fetched.
- Please contact SurePrep Support to enable this feature for your domain.
- Contact SurePrep Support to enable this feature for your domain.
- ProSystem fx Tax will no longer integrate with SurePrep from tax year 2023 onwards.
- Tax professional user’s email address should be passed as the “UserEmail” parameter.
- When making this call, please make sure that TaxCaddy API and all tax professional
  users referenced in this call are setup with proper permissions.
- Tax professional user’s email address should be passed as the 'UserEmail' parameter.
- AuthToken should be included in the header as access token.
- Uses Thomson Reuters accounts for authentication
- The authToken value is derived from the GetToken API call.
- The authToken value must be derived from the GetToken API call.
- The value for authToken is derived from the GetToken API call.
- SurePrep will send you webhook notifications every 15 minutes if any documents have
  been uploaded for subscribed clients.
- If SurePrep webhooks API is unable to reach your API then it will retry eight times
  over three days.
- Only users with permission to access TaxCaddy can subscribe to this webhook.
- SurePrep allows you to send a session token in header when registering the webhook.
- You can also get webhook notifications on multiple URLs based on different office
  locations assigned to clients.
- API Method name has been changed from CreateNewBinder to CreateBinder.
- For API version 5.0, the request payload no longer needs to be JWT encoded.
- The authToken must be derived from the GetToken API call.
- Please use your session token key (generated from GetToken API call) to encode the
  outgoing object.
- Before you use the GetDRLOutput method, please contact SurePrep Support to enable
  this feature for your domain.
- The request payload no longer needs to be JWT encoded.
- Tax professional user’s email address will be passed as the 'UserEmail' parameter.
- The request payload no longer needs to be JWT encoded for API version 5.0.
- 'Permission(s) required: Access TaxCaddy and Access to TaxCaddy Admin'
- The maximum number of records returned per page is 100.
- To enable your domain for API, please contact SurePrep Support.
- Version 7 (V7) of our Sureprep APIs are now available, featuring a standardized
  authentication method with Thomson Reuters accounts.
- Use the actual value derived from the GetToken API call for authToken.
- The above value is an example. Please use the actual value derived from the GetToken
  API call.
- SurePrep will send you webhook notifications every 15 minutes if any DRL have been
  created for subscribed clients.
- The authToken value should be derived from the GetToken API call.
- The AuthToken value is derived from the GetToken API call.
- The DRL will still need to be created in TaxCaddy.
- Use the actual AuthToken value derived from the GetToken API call.
- Use the actual value derived from the GetToken API call for AuthToken.
- Use the token for all subsequent requests during that session.
- The AuthToken value must be derived from the GetToken API call.
- The value for AuthToken should be derived from the GetToken API call.
- The AuthToken value should be derived from the GetToken API call.
- Use the token for all subsequent requests during that session until the token expires.
errors:
- '400 - Bad Request: Often missing a required parameter'
- '401 - Unauthorized: Invalid UserName, Password or API key'
- '403 - Forbidden: Server understood the request, but cannot fulfill it'
- '404 - Not Found: The server could not find anything that matches the requested
  URL'
- '429 - Too Many Requests: Too many requests hit the API too quickly'
- '500, 502, 503, 504 - Server Errors: Something went wrong on SurePrep’s end'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- 'Invalid credentials: Description of the error'
- '429: Too Many Requests'
- '1000: The Unique Identifier field is required. The Owner Email ID field is required.
  The field Service_Type_Id must be between 1 and 2147483647. The field Template_Id
  must be between 1 and 2147483647.'
- '1042: Binders cannot be submitted due to insufficient balance of binder or leadsheet
  units.'
- '1047: Binder templates are not defined. Please define them in SurePrep FileRoom.'
- '1049: Email ID not found. Please update the user information in SurePrep FileRoom
  and retry.'
- '1050: When invalid characters found in provided SurePrep Client ID.'
- '1052: Service Type ID not found. Please look up the appropriate service ID and
  retry.'
- '1062: Invalid characters found in SurePrep Client ID.'
- '1071: Client number, Business unit (custom field) and or office location information
  is not provided for CCH Axcess tax software.'
- '1072: Unable to create a CCH Client ID as the provided Engagement Short Name for
  the business unit and / or the provided Office location are either not updated in
  the SurePrep mapping table or don''t exist in CCH.'
- '1081: Incorrect format of CCH Axcess Client ID.'
- '1088: Locator Number already exist for different Unique identifier.'
- '1094: The Custom field is required.'
- '1098: Filing Status is invalid.'
- '1108: Enter valid Home State.'
- '1109: Client ID field length should be 15 characters.'
- '1112: Provided Binder Template ID is not supported.'
- '1113: Verify + is applicable only to Verify service.'
- '1118: 7216 Consent must be granted for this binder to be eligible for 1040SCANverify
  Offshore service.'
- '1121: Unable to Roll Forward Client ID.'
- '1124: User with ''7216 Consent Only'' permission cannot become an Owner of a binder
  without 7216 Consent.'
- '1125: User must have ''Can be an Owner'' permission to become an Owner.'
- '1126: Invalid Type of entity.'
- '1127: The field Estate or Trust EIN must be a string with a maximum length of 10.'
- '1128: Invalid EIN. Please correct the format and retry.'
- '1192: Template ID used to create a binder is associated with a non-supported tax
  year.'
- '1199: The link binder option is enabled for this binder, please provide the Tax
  Client ID to link and create the binder successfully.'
- '1000: The Unique Identifier field is required.'
- '1049: Email ID not found.'
- '1033: Error while Uploading Documents.'
- '1034: [Filename] is not valid file type. Please upload a valid file.'
- '1037: [Filename] is password protected. Please upload unprotected file.'
- '1039: [Filename] is damaged. Please upload a proper file.'
- '1040: [Filename] is not a valid PDF file. Please upload a proper file.'
- '1133: [Filename] could not be found due to an upload error.'
- '1147: Provided Binder is deleted.'
- '1182: [Filename] is already Opened. Please close the file and upload again.'
- '1183: [Filename] File Splitting failed.'
- '1184: [Filename]''s sheet is password protected. Please address the issue and re-upload
  the file.'
- '1185: [Filename] is digitally encrypted and could not be processed by SurePrep.
  Please address the issue and re-upload the file.'
- '1186: [Filename] has UnSupported resolution.'
- '1187: [Filename] has UnSupported file Version.'
- '1193: The newly uploaded documents cannot be added to the binder using the same
  ''binder_id''. Please provide a new ''binder_id'' generated (via CreateBinder call)
  with the same ''unique_Identifier'' for this client.'
- '1021: Tax software''s maintenance in progress'
- '1022: CCH Axcess password has expired'
- '1023: Tax software''s server is unavailable'
- '1024: CCH User ID has been locked'
- '1025: Incorrect ClientID/Version'
- '1026: Invalid Account Number'
- '1027: Invalid password'
- '1028: Missing Taxpayer''s Home State'
- '1060: Please upload at least one source document to submit this binder'
- '1070: New documents cannot be accepted at the moment as the previous job for this
  binder is in SPProcessing status. Please retry later.'
- '1086: CCH Axcess Authentication failed'
- '1103: User has not Accepted Terms and Conditions'
- '1119: Either Binder is in SPProcessing status or provided Custom status is not
  configured'
- '200 OK: Successful request'
- '1168: OAuth Token Refresh expired'
- '1172: OAuth Access Token expired'
- '2000: Missing required parameter. Please provide BinderType parameter.'
- '2000: Required parameter(s) missing.'
- '1105: Error occurred while downloading the documents. Please retry later.'
- '1106: No documents are found to download.'
- '1000: Invalid Tax Year'
- '1110: PBFX file cannot be downloaded when the related binder is in processing with
  SurePrep (SP Processing status). Please try when the status is not SP Processing.'
- '1111: When Mapped ID for SSO doesn’t exists or is deleted or disabled. Client to
  correct the mapped ID and try downloading the PBFX again.'
- '1120: 7216 Consent has not been received for this binder. You don’t have the permission
  to access this binder.'
- '1147: Provided Binder is deleted. A user cannot view or edit binder details once
  it has been deleted.'
- '1054: Office location not found. Add Office Location to SurePrep FileRoom.'
- '1000: The Binder ID field is Required.'
- '1000: The Owner field is required.'
- '1000: ​The LoginUserEmail field is required.'
- '1000: ​The Office Location field is required.'
- '1120: 7216 Consent has not been received for this binder. You don’t have the permission
  to access this binder'
- '1149: The binder is currently in SP Processing/In Verification status and cannot
  be printed.'
- '1150: The binder is already printing.'
- '1151: Daily DreamWorkpapers PDF print limit exceeded. Please try again tomorrow.'
- '1152: Daily SPbinder PDF print limit exceeded. Please try again tomorrow.'
- TaxYear field is required.
- '10000: Missing required parameter. Please provide Tax Year.'
- '10000: Tax Client ID is invalid. Please check that the Tax Client ID is entered
  correctly.'
- '10000: Tax Year is invalid. Please check the Tax Year format.'
- '1182: Document ID does not exist. The Document Request List (DRL) may not be created,
  still be in process, or the MergePDF attribute was not set as true in CreateDRL
  method.'
- '10001: Missing required parameter. Please provide the Client Type as Standard or
  Offline.'
- '10002: The Client Type must be either a Standard or Offline client.'
- '10003: Your firm does not allow Offline clients. Please contact your Firm System
  Administrator to enable this feature.'
- '200: Successful response'
- '1094: The Custom field is required. When custom field is configured in the FileRoom
  and no value is passed in it.'
- '1115: The email address provided for the ''AssignMember'' input field is already
  used for the Owner field. Please provide a different email address.'
- '1135: Unable to sync changes with TaxCaddy. Please update TaxCaddy manually to
  ensure consistent behavior.'
- '1139: 7216 Consent has not been received for this binder. You cannot become an
  owner of the binder.'
- '1140: 7216 Consent has not been received for this binder. You cannot become a member
  of the binder.'
- '1143: 7216 Consent has not been received for this binder. You don’t have the permission
  to update binder details.'
- '1142: You don''t have permission to assign member(s) to the binder.'
- '1144: You don''t have permission to assign owner to the binder.'
- '1145: You don’t have permission to modify office location of this binder.'
- '1148: Unable to update a binder with a deleted office location. Please look up
  the correct location then retry.'
- '1000: The LoginUserEmail field is required.'
- '1000: The Office Location field is required.'
- '1000: Invalid Email ID. Please correct the email format then retry.'
- '10016: LoginUserEmailID not entered.'
- '10017: LoginUserEmailID incorrect format or exceeds 50 Characters.'
- '10018: LoginUserEmailID does not exist in the system.'
- '30007: TaxClientID - Not entered.'
- '30008: TaxClientID - Entered 50 or more alphanumeric characters.'
- '30014: TaxClientID - Not valid or does not exist.'
- '90003: UserEmail - User doesn''t have permission to access administrative section
  in TaxCaddy.'
- '90004: PageSize – Number entered is larger than maximum page size available.'
- '90005: PageSize - Not valid.'
- '90006: PageNumber - Not valid.'
- '90007: PageNumber - Not entered.'
- '99004: Invalid Domain Key is passed.'
- '99005: Firm/Domain Key not entered in the header.'
- '10004: Missing required parameter. Please provide Owner''s email address.'
- '10016: LoginUserEmailID parameter not entered.'
- '10017: LoginUserEmailID parameter is incorrectly formatted or exceeds 50 Characters.'
- '10018: LoginUserEmailID parameter value does not exist in the system.'
- '10019: Login user does not have permissions (Access TaxCaddy/Access to TaxCaddy
  Admin).'
- '10020: The TaxYear parameter value is not valid or supported.'
- '10021: Binder Type not entered.'
- '10022: BinderType - Not valid.'
- '10023: TaxCaddy Client Status Missing Tax Info.'
- '10024: TaxCaddy Client Status In Queue.'
- '10025: TaxCaddy Client Status In Process.'
- '10026: TaxCaddy Client Status Completed.'
- '10027: TaxYear parameter is more than 4 characters.'
- '10028: Login user does not have the permissions (Access TaxCaddy/Access to TaxCaddy
  Admin).'
- '10029: Tax Year parameter value is not provided.'
- '10030: Tax professional users with ‘7216 Consent > Restrict Access’ permission
  cannot create DRLs if 7216 Consent is not received for a TaxCaddy Client.'
- '10031: More than 1000 Tax Client IDs are passed in request.'
- '10057: When there are multiple Offline TaxClientIDs and no connected client.'
- '10058: When there are multiple Standard TaxClientIDs and connected clients, or
  when there are multiple standard TaxClientIDs and no connected or offline.'
- '20018: TaxPayers parameter not entered.'
- '30007: TaxClientID parameter not entered.'
- '30008: TaxClientID parameter cannot exceed 50 characters.'
- '30012: 1- TaxclientID parameter value not valid or does not exist 2- TaxclientID
  does not exist in their corresponding tax software (i.e., GoSystem Tax RS , CCH
  Axcess Tax).'
- '30016: TaxClientID parameter value is deleted.'
- '30017: A TaxClientID parameter is associated with a client in one of the following
  ineligible connection statues:  Missing Info - Provide the missing tax software
  information associated with the client.  In Queue / In Process - Client is already
  in queue or processing.  Deleted - Client is no longer available for the firm.'
- '10016: Missing required parameter. Please provide LoginUserEmailID.'
- '30014: No record found with this Tax Client ID.'
- '10050: Connection Status is Connected Elsewhere, Not Invited, Missing Info, Deleted,
  In Queue, or In Process. Send DRL Status is Not Eligible.'
- '10016: LoginUserEmailID parameter not entered. Missing required parameter. Please
  provide LoginUserEmailID parameter.'
- '10020: The TaxYear parameter value is not valid or supported. The TaxYear parameter
  cannot be verified.'
- '10019: Login user does not have permissions (Access TaxCaddy/Access to TaxCaddy
  Admin). User does not have permission to Create a TaxCaddy DRL request.'
- '10037: The firm is not subscribed for the webhook event.'
- '10036: Subscription Event – Entered invalid event.'
- '10057: Unable to complete the operation due to multiple Offline clients being mapped
  to the same TaxClientID, while there is no connected client with the same TaxClientID.'
- '10058: Unable to complete the operation due to multiple Standard clients being
  mapped to the same TaxClientID.'
- '30007: Tax Client ID – Not Entered.'
- '30008: Tax Client ID – Entered more than 50 characters.'
- '30012: Tax Client ID – Entered invalid Tax Client ID, or the client is in Missing
  Info, Deleted, In Queue, or In Process connection status.'
- '200: OK'
- '10036: Invalid subscription event. Please correct and retry.'
- '10037: No subscription exists for this firm and event combination.'
- '10042: Can not unsubscribe a specific client when subscribed to all clients.'
- '10043: No client subscription exists for this TaxClientID.'
- '30007: Missing required parameter. Please provide Tax Client ID.'
- '30008: Tax Client ID cannot exceed 50 characters.'
- '30012: The Tax Client ID cannot be verified.'
- '30013: This Tax Client ID exists for multiple TaxCaddy clients. Please re-try with
  Unique Tax Client ID.'
- '10021: BinderType parameter not entered.'
- '10050: Connection Status is Connected Elsewhere, Not Invited, Missing Info, Deleted,
  In Queue, or In Process.'
- '10051: DRL not created.'
- '10052: Send DRL Status = In Queue.'
- '10053: Send DRL Status = In Process.'
- '10054: Send DRL Status = Sent.'
- '10055: 7216 consent is enabled at the firm level.'
- '10057: Multiple Offline TaxClientIDs and no connected client.'
- '10058: Multiple Standard TaxClientIDs and connected clients.'
- '10059: No proforma data available in the tax software.'
- '30012: TaxclientID parameter value not valid or does not exist.'
- '99002: Any unhandled exception.'
- '10016: LoginUserEmailID (UserEmail) Not Entered.'
- '10017: LoginUserEmailID (UserEmail) incorrect format or exceeds 50 characters.'
- '10018: LoginUserEmailID (UserEmail) does not exist in the system.'
- '10038: No DocumentID is passed in the request.'
- '10039: More than 1000 DocumentIDs are passed in the request at once.(Limit on number
  of DocumentIDs.)'
- '10040: No documents found that match the provided DocumentIDs.'
- '10041: An unexpected error occurred while downloading PDF document(s).'
- '99004: Invalid Domain key is passed.'
- '99005: Firm/Domain Key Not Entered in Header.'
- '10057: Unable to complete the operation due to multiple Offline clients being mapped
  to the same TaxClientID.'
- '30012: Tax Client ID – Entered invalid Tax Client ID.'
- '10045: Cannot process more than 200 DRLRequestID at once.'
- '10046: User does not have permission to fetch DRLRequestID status.'
- '10047: Missing required parameter. Please provide DRLRequestID.'
- '10048: The DRLRequestID cannot be verified.'
- '30013: Tax Client ID – Exists for multiple clients.'
- '10060: Model Validation - No ParnetUserId Provided.'
- '10061: Firm Is not SSO Enabled.'
- '10062: PartnerUserID Details not found.'
- '10063: PartnerUserID Details is associated to multiple UserId.'
- '20021: This client is in an ineligible connection status and does not have connected
  devices.'
- '20022: There are no connected devices for this client.'
- '90008: User does not have permission to disconnect devices for clients.'
- '10039: More than 1000 DocumentIDs are passed in the request at once.'
- '10060: Model Validation - No PartnerUserId Provided. Missing required parameter.
  Please provide PartnerUserID.'
- '10061: Firm Is not SSO Enabled. This domain is not SSO enabled. Clients do not
  have connected devices.'
- '10062: PartnerUserID Details not found. PartnerUserID Details not found.'
- '10063: PartnerUserID Details is associated to multiple UserId. PartnerUserID Details
  is associated to multiple UserId.'
- '20021: This client is in an ineligible connection status and does not have connected
  devices. This client is in an ineligible connection status and does not have connected
  devices.'
- '20022: There are no connected devices for this client. There are no connected devices
  for this client.'
- '90008: User does not have permission to disconnect devices for clients. User does
  not have permission to disconnect devices for clients.'
- '2002: Sign off level is not configured.'
- '2003: Sign off level is not configured.'
- '2004: Sign off level is not configured.'
- '2005: Sign off level is not configured.'
- '1138: Missing Items Report is not Generated.'
- '1123: Specified Service not found. Please look up the appropriate service and retry.'
- '1000: Tax Year field is required.'
- '1000: Service Type ID field is required.'
- '1000: ​From Date or To Date is required.'
- '1000: Invalid Tax Year.'
- '1000: Invalid Date Range.'
- '1000: From Date or To Date is required.'
- '1030: Return currently in use'
- '1031: Session already expired'
- '1032: System was unable to retrieve the data file for CCH Client'
- '1068: Unknown error'
- '1077: An error occurred while receiving the HTTP response from CCH Access Tax.
  Please retry later.'
- '1078: The request channel timed out while waiting for a reply from CCH Axcess Tax
  after 00:01:00. Please retry later.'
- '1079: The CCH Axcess Tax return is either unavailable or inaccessible for the import
  process to continue. Please retry later.'
- '1080: Unable to Import into the Tax return due to an unknown response from CCH
  Axcess Tax. Please retry later.'
- '1082: An Data Access Layer Exception occurred while processing CCH Axcess Tax binders.
  Please retry later.'
- '1083: An Service Authorization System error occurred while processing CCH Axcess
  Tax binders. Please retry later.'
- '1084: An Unknown database error occurred while processing CCH Axcess Tax binders.
  Please retry later.'
- '1087: Return Group is invalid'
- '1089: The Account Number is not configured for this Firm.'
- '1093: The provided Office Location does not exist for specified CCH Axcess Account
  Number.'
- '1095: CCH is unable to verify the information provided. Please try again.'
- '1096: Either Export Validation failed or Data Access Layer Exception or An Unhandled
  exception occurred. Please try again.'
- '1102: Unable to print Tax return draft due to an unknown response from CCH Axcess
  Tax. Please retry later.'
- '1103: User has not Accepted Terms and Conditions.'
- '1104: Invalid Permission Error.'
- '1107: Please select at least one document for OCR'
- '1129: Missing Type of entity and / or Federal Identification Number'
- '1130: You cannot select the Inhouse process for this submission, as the previously
  submitted documents are still with SurePrep for Verification. Please try again after
  SurePrep verification steps have been completed.'
- '1131: You cannot send the documents to SurePrep for this submission, as the previously
  submitted documents are still pending your verification. Please try again after
  all remaining verification steps have been completed.'
- '1159: Missing Taxpayer''s SSN.'
- '1160: Missing Taxpayer''s Filing Status.'
- '1161: Missing Taxpayer''s SSN and Filing Status.'
- '1162: Missing Taxpayer''s Home State and Filing Status.'
- '1163: Missing Taxpayer''s Home State and SSN.'
- '1164: Missing Taxpayer''s Home State, SSN and Filing Status.'
- '1165: Missing Type of entity.'
- '1166: Missing Federal Identification Number.'
- '1167: Account configured with ADFS mode.'
- '1168: OAuth Token Refresh expired.'
- '1169: The tax return is locked in CCH Axcess Tax. Please unlock the tax return
  in CCH Axcess Tax then try again.'
- '1170: Invalid Client.'
- '1171: Invalid SSN or EIN.'
- '1172: OAuth Access Token expired.'
- '1173: OAuth Invalid Token Information.'
- '1174: OAuth Access Token Revoked.'
- '1175: Password is not provided for the password protected return.'
- '1176: Specified ReturnID format is invalid.'
- '1177: Tax Software Client ID is missing.'
- '1178: You are not logged in to your network. Please log in.'
- '1179: Converted return cannot be modified.'
- '1180: Specified ReturnID is not present in the Return Manager.'
- '1181: Authentication failed due to CCH account configured with Federated login
  mode.'
- '9999: Unexpected error occurred. Please try again later.'
- '1201: We couldn''t import because the taxpayer''s SSN is incorrect. Enter the correct
  SSN and try again.'
- '1202: We couldn''t import because the SSN is incorrect, and the filing status is
  missing. Enter the correct SSN, fill in the filing status and try again.'
- '1203: Locator ID is outside of the accepted range. Please enter a Locator ID within
  the range and try again.'
- '1204: The SSN parameter is null or empty. Enter the correct SSN and try again.'
- '1205: Unable to locate tax file.'
- '2015: AccountNumber is null/empty'
- '2017: Your password has expired You must change your password.'
- '2018: Your User ID has been locked. You have exceeded the maximum number of login
  attempts. Please contact your administrator.'
- '2022: User has not Accepted Terms of Conditions.'
- '2033: Invalid ClientID/Version'
- '2034: Invalid Password'
- '2035: Return currently in use.'
- '2036: Specified ReturnID format is invalid'
- '2037: Password protected file'
- '2024: Error in Importing file from GoSystem.'
- '2026: Authenticated Domain Invalid Locator.'
- '1123: Specified Service not found.'
- Invalid credentials
- '200: Success'
- '401: Unauthorized'
- '1107: Please select atleast one document for OCR'
- '9999: Unexpected error occured. Please try again later.'
- '400: Bad Request'
- '404: Not Found'
- '1047: Binder templates are not defined.'
- 'Response: 594509'
- '1119: Either Binder is in SPProcessing status or provided Custom status is not
  configured.'
- '1111: When Mapped ID for SSO doesn’t exist or is deleted or disabled. Client to
  correct the mapped ID and try downloading the PBFx again.'
- '1105: Error Occurred while downloading the documents. Please retry later.'
- '429 Too Many Requests: API call limit exceeded'
- 2000 Required parameter(s) missing
- '1000: TaxYear field is required.'
- '1111: When Mapped ID for SSO doesn’t exists or is deleted or disabled. Client to
  correct the mapped ID and try downloading the PBFx again.'
- '1120: Consent has not been received for this binder. You don’t have the permission
  to access this binder.'
- '10005: Owner''s email address is invalid. Please check the email address format.'
- '10009: Missing required parameter. Please provide OfficeLocationID.'
- '20001: Missing required parameter. Please provide Taxpayer''s first name.'
- '20003: Missing required parameter. Please provide Taxpayer''s last name.'
- '30001: Missing required parameter. Please provide Tax Software ID.'
- '30004: Missing required parameter. Please provide Tax Software Account Number.'
- '90001: Token expired or Bad user. Authorization Failure(Token Exp or Token failure).'
- '99000: Missing required headers from the request.'
- '429 Too Many Requests: Limit to 400 requests per minute'
- '2000: Required parameter(s) missing'
- '30017: A TaxClientID parameter is associated with a client in one of the following
  ineligible connection statues:  Missing Info - Provide the missing tax software
  information associated with the client.'
- '10017: LoginUserEmailID parameter is incorrectly formatted or exceeds 50 Characters.
  Invalid LoginUserEmailID parameter. Please correct the format and retry.'
- '10021: BinderType parameter not entered. Missing required parameter. Please provide
  Binder Type.'
- '20018: TaxPayers parameter not entered. Missing required parameter. Please provide
  Taxpayers.'
- '10017: Invalid LoginUserEmailID. Please correct the format and retry.'
- '10045: Cannot process more than 200 DRLRequestID at once. Please correct and retry.'
- '10049: Blank Tax Client ID(No Data Found).'
- '10020: The TaxYear parameter cannot be verified.'
- '10060: Model Validation - No PartnerUserId Provided. Missing required parameter.'
- '20018: TaxPayers parameter not entered. Missing required parameter. Please provide
  TaxPayers.'
- '10016: LoginUserEmailID (UserEmail) Not Entered. Missing required parameter. Please
  provide LoginUserEmailID.'
- '10017: LoginUserEmailID (UserEmail) incorrect format or exceeds 50 characters.
  Invalid LoginUserEmailID. Please correct the format and retry.'
- '10018: LoginUserEmailID (UserEmail) does not exist in the system. LoginUserEmailID
  not found. Check that the email address is entered correctly.'
- '10038: No DocumentID is passed in the request. Missing required parameter. Please
  provide Document ID.'
- '10039: More than 1000 DocumentIDs are passed in the request at once.(Limit on number
  of DocumentIDs.) Can not process more than 1000 Document IDs at once. Please correct
  and retry.'
- '10040: No documents found that match the provided DocumentIDs. No documents are
  found to download.'
- '10041: An unexpected error occurred while downloading PDF document(s). Error occurred
  while downloading the documents. Please retry later.'
- '99004: Invalid Domain key is passed. Firm key not found. Please correct and retry.'
- '99005: Firm/Domain Key Not Entered in Header. Missing required parameter. Please
  provide firm key.'
- 'ErrorCode: 0, ErrorDescription: Success'
- '1138: Missing Items Report is not Generated'
- '1147: Provided Binder is deleted'
- '2018: Your User ID has been locked.'
- '1130: You cannot select atleast one document for OCR'
- '1042: Binders cannot be submitted due to insufficient balance of binder or leadsheet
  units. To purchase more units please contact your Sales Representative.'
- '2024: Error in Importing file from GoSystem'
- '2026: Authenticated Domain Invalid Locator'
- '1036: [FileName] cannot have more than 60 characters (including file extension).'
- '200: Successful request'
- '1021: CCH Axcess maintenance in progress'
- '1023: CCH Axcess server is unavailable'
- '1110: Binder is in SPProcessing.'
- '1111: Either Mapped ID doesn''t exists, deleted or disabled.'
- '1120: 7216 Consent has not been received for this binder.'
- 'TOKEN_EXPIRED: Use the GetToken method to refresh.'
- errorCode
- errorMessage
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - API User Name
  - API User Password
  - API Key
  - AuthToken
client:
  base_url: https://api.sureprep.com/v5.0
  auth:
    type: basic
    location: header
    header_name: Authorization
source_metadata: null
