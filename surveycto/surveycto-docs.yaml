resources:
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: forms
- name: offline_case_transfers
  endpoint:
    path: /offline/case/transfers
    method: GET
    data_selector: records
- name: deployed_forms
  endpoint:
    path: /02-designing-forms/01-core-concepts/02b.draft-vs-deployed-forms.html
    method: GET
- name: organizing_forms
  endpoint:
    path: /02-designing-forms/01-core-concepts/02c.organizing-forms.html
    method: GET
- name: testing_forms
  endpoint:
    path: /02-designing-forms/01-core-concepts/02c.testing-forms.html
    method: GET
- name: additional_topics
  endpoint:
    path: /02-designing-forms/02-additional-topics/
    method: GET
- name: advanced_topics
  endpoint:
    path: /02-designing-forms/03-advanced-topics/
    method: GET
- name: sample_forms
  endpoint:
    path: /02-designing-forms/04-sample-forms/
    method: GET
- name: performance_debugging
  endpoint:
    path: /02-designing-forms/05-performance-and-debugging/
    method: GET
- name: collecting_data
  endpoint:
    path: /03-collecting-data/
    method: GET
- name: monitoring_management
  endpoint:
    path: /04-monitoring-and-management/
    method: GET
- name: exporting_publishing_data
  endpoint:
    path: /05-exporting-and-publishing-data/
    method: GET
- name: advanced_offline
  endpoint:
    path: /06-advanced-offline/
    method: GET
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: data
  endpoint:
    path: /api/v1/data
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: forms
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: records
- name: form_data
  endpoint:
    path: /api/form_data
    method: GET
    data_selector: records
- name: form_settings
  endpoint:
    path: /api/v1/forms/settings
    method: GET
    data_selector: settings
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: records
- name: integer
  endpoint:
    path: /assets/img/surveycto/help/fieldtypes-integer.jpg
    method: GET
    data_selector: records
- name: decimal
  endpoint:
    path: /02-designing-forms/01-core-concepts/03f.field-types-integer.html
    method: GET
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: select_one
  endpoint:
    path: /02-designing-forms/01-core-concepts/03h.field-types-select-one.html
    method: GET
    data_selector: choices
    params: {}
- name: decimal_field
  endpoint:
    path: /assets/img/surveycto/help/fieldtypes-decimal.jpg
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
    params: {}
- name: select_multiple
  endpoint:
    path: /02-designing-forms/01-core-concepts/03i.field-types-select-multiple
    method: GET
    data_selector: choices
    params: {}
- name: select_one
  endpoint:
    path: /02-designing-forms/01-core-concepts/03h.field-types-select-one.html
    method: GET
    data_selector: records
- name: Mobile data collection
  endpoint:
    path: /03-collecting-data/01-mobile-data-collection/
    method: GET
- name: Web data collection
  endpoint:
    path: /03-collecting-data/02-web-data-collection/
    method: GET
- name: Telephone data collection
  endpoint:
    path: /03-collecting-data/02a-telephone-data-collection/
    method: GET
- name: Data collection workflow
  endpoint:
    path: /03-collecting-data/03-data-collection-workflow/
    method: GET
- name: select_multiple
  endpoint:
    path: /02-designing-forms/01-core-concepts/03i.field-types-select-multiple.html
    method: GET
    data_selector: choices
    params: {}
- name: enumerator
  endpoint:
    path: /assets/img/surveycto/help/fieldtypes-enumerator.jpg
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: forms
    params: {}
- name: deployed_forms
  endpoint:
    path: /api/deployed-forms
    method: GET
    data_selector: forms
    params: {}
- name: enumerator
  endpoint:
    path: /04-monitoring-and-management/01-the-basics/01.z.enumerator-management.html
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: geopoint
  endpoint:
    path: /02-designing-forms/01-core-concepts/03j.field-types-geopoint.html
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /services/data/vXX.X/sobjects/Form
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: field_definition
  endpoint:
    path: /assets/img/surveycto/help/fieldtypes-video.jpg
    method: GET
    data_selector: none
    params: {}
- name: video
  endpoint:
    path: /assets/img/surveycto/help/fieldtypes-video.jpg
    method: GET
- name: form
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: file
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: file_type
  endpoint:
    path: /file
    method: POST
    data_selector: files
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: results
    params: {}
- name: note
  endpoint:
    path: /assets/img/surveycto/help/fieldtypes-note.jpg
    method: GET
    data_selector: label
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: data
- name: end
  endpoint:
    data_selector: meta-data
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
    params: {}
- name: data
  endpoint:
    path: /api/v1/data
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: records
    params: {}
- name: subscriberid
  endpoint:
    path: /02-designing-forms/01-core-concepts/03s.field-types-deviceid.html
    method: GET
    data_selector: fieldname
    params: {}
- name: data_collection
  endpoint:
    path: /services/data/vXX.X/dataCollection
    method: GET
    data_selector: records
    params: {}
- name: subscriberid
  endpoint:
    path: /02-designing-forms/01-core-concepts/03s.field-types-deviceid.html
    method: GET
    data_selector: record
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: mobile_data_collection
  endpoint:
    path: /03-collecting-data/01-mobile-data-collection/
    method: GET
- name: web_data_collection
  endpoint:
    path: /03-collecting-data/02-web-data-collection/
    method: GET
- name: telephone_data_collection
  endpoint:
    path: /03-collecting-data/02a-telephone-data-collection/
    method: GET
- name: data_collection_workflow
  endpoint:
    path: /03-collecting-data/03-data-collection-workflow/
    method: GET
- name: username
  endpoint:
    data_selector: recorded_username
- name: username
  endpoint:
    path: /username
    method: GET
    data_selector: fieldname
    params: {}
- name: form_data
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
- name: caseid
  endpoint:
    data_selector: caseid
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: caseid
  endpoint:
    path: /caseid
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: records
- name: form
  endpoint:
    path: /services/data/vXX.X/sobjects/Form
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    data_selector: comments
- name: comments
  endpoint:
    path: /comments
    method: GET
    data_selector: comments
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: calculate
  endpoint:
    path: /02-designing-forms/01-core-concepts/03zb.field-types-calculate.html
    method: GET
    data_selector: expression
    params: {}
- name: calculate
  endpoint:
    path: /02-designing-forms/01-core-concepts/03zb.field-types-calculate.html
    method: GET
    data_selector: field type
    params: {}
- name: speed violations audit
  endpoint:
    path: /02-designing-forms/01-core-concepts/03zc.field-types-speed-violations.html
    method: GET
    data_selector: records
    params: {}
- name: speed violations count
  endpoint:
    path: /02-designing-forms/01-core-concepts/03zc.field-types-speed-violations.html
    method: GET
    data_selector: records
    params: {}
- name: speed_violations_audit
  endpoint:
    path: /02-designing-forms/01-core-concepts/03zc.field-types-speed-violations.html
    method: GET
    data_selector: audit
    params: {}
- name: speed_violations_count
  endpoint:
    path: /02-designing-forms/01-core-concepts/03zc.field-types-speed-violations.html
    method: GET
    data_selector: count
    params: {}
- name: speed_violations_list
  endpoint:
    path: /04-monitoring-and-management/02-managing-for-quality/01.collecting-high-quality-data.html
    method: GET
    data_selector: fields
    params: {}
- name: speed_violations
  endpoint:
    path: /services/data/vXX.X/sobjects/SpeedViolations
    method: GET
    data_selector: records
- name: speed_violations_list
  endpoint:
    path: /04-monitoring-and-management/02-managing-for-quality/01.collecting-high-quality-data.html
    method: GET
    data_selector: fields
- name: speed_violations
  endpoint:
    path: /02-designing-forms/01-core-concepts/03zc.field-types-speed-violations.html
    method: GET
    data_selector: records
- name: text_audit
  endpoint:
    path: /02-designing-forms/01-core-concepts/03zd.field-types-text-audit.html
    method: GET
    data_selector: fields
    params: {}
- name: text_audit
  endpoint:
    path: /02-designing-forms/01-core-concepts/03zd.field-types-text-audit.html
    method: GET
    data_selector: records
    params: {}
- name: fieldname
  endpoint:
    path: /text_audit
    method: GET
- name: audio_audit
  endpoint:
    path: /02-designing-forms/01-core-concepts/03ze.field-types-audio-audit.html
    method: GET
- name: form
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
- name: sensor_stream
  endpoint:
    path: /sensor_stream
    method: POST
    data_selector: observations
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: deployed_forms
  endpoint:
    path: /02-designing-forms/01-core-concepts/02b.draft-vs-deployed-forms.html
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /services/data/vXX.X/forms
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /services/data/vXX.X/sobjects/Form
    method: GET
    data_selector: records
- name: repeating_questions
  endpoint:
    path: /api/repeating_questions
    method: GET
    data_selector: questions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: grouping_questions
  endpoint:
    path: /02-designing-forms/01-core-concepts/06.groups.html
    method: GET
    data_selector: content
    params: {}
- name: repeating_questions
  endpoint:
    path: /05-exporting-and-publishing-data/01-overview/09.data-format.html
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
    params: {}
- name: Working with numbers
  endpoint:
    path: /working-with-numbers
    method: GET
    data_selector: operations
- name: Working with dates and times
  endpoint:
    path: /working-with-dates-and-times
    method: GET
    data_selector: operations
- name: Working with enumerators
  endpoint:
    path: /working-with-enumerators
    method: GET
    data_selector: operations
- name: Working with phone calls
  endpoint:
    path: /working-with-phone-calls
    method: GET
    data_selector: operations
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: working_with_numbers
  endpoint:
    path: /working-with-numbers
    method: GET
    data_selector: operators
- name: working_with_dates_and_times
  endpoint:
    path: /working-with-dates-and-times
    method: GET
    data_selector: date_time_functions
- name: working_with_enumerators
  endpoint:
    path: /working-with-enumerators
    method: GET
    data_selector: enumerator_functions
- name: working_with_phone_calls
  endpoint:
    path: /working-with-phone-calls
    method: GET
    data_selector: phone_call_functions
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
- name: GPS Data
  endpoint:
    path: /collecting/gps
    method: GET
    data_selector: records
- name: deployed_forms
  endpoint:
    path: /services/data/vXX.X/sobjects/DeployedForms
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
- name: deployed forms
  endpoint:
    path: /02-designing-forms/01-core-concepts/02b.draft-vs-deployed-forms.html
    method: GET
- name: organizing your forms
  endpoint:
    path: /02-designing-forms/01-core-concepts/02c.organizing-forms.html
    method: GET
- name: testing your forms
  endpoint:
    path: /02-designing-forms/01-core-concepts/02c.testing-forms.html
    method: GET
- name: using the SurveyCTO Collect app
  endpoint:
    path: /03-collecting-data/01-mobile-data-collection/01.mobile-collect.html
    method: GET
- name: web data collection
  endpoint:
    path: /03-collecting-data/02-web-data-collection/
    method: GET
- name: telephone data collection
  endpoint:
    path: /03-collecting-data/02a-telephone-data-collection/
    method: GET
- name: deployed_forms
  endpoint:
    path: /02-designing-forms/01-core-concepts/02b.draft-vs-deployed-forms.html
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /v1/forms
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
- name: pre_loaded_choices
  endpoint:
    path: /02-designing-forms/03-advanced-topics/03.preloading.html
    method: GET
    data_selector: preloaded_choices
    params: {}
- name: field_plugin
  endpoint:
    path: /02-designing-forms/03-advanced-topics/06.using-field-plug-ins.html
    method: GET
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: survey
  endpoint:
    path: /private/server-console.html
    method: GET
    data_selector: worksheets
    params: {}
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: records
- name: field_plugin
  endpoint:
    path: /02-designing-forms/03-advanced-topics/06.using-field-plug-ins.html
    method: GET
    data_selector: parameters
    params: {}
- name: form
  endpoint:
    path: /sample-forms/Sample-Languages.xlsx
    method: GET
    data_selector: form_data
    params: {}
- name: field_plug_in_console
  endpoint:
    path: /field/plug-in/console
    method: GET
    data_selector: details
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
    params: {}
- name: randomdraw1
  endpoint:
    path: /randomdraw1
    method: GET
    data_selector: random
    params: {}
- name: likesblue1
  endpoint:
    path: /likesblue1
    method: GET
    data_selector: question
    params: {}
- name: likesblue2
  endpoint:
    path: /likesblue2
    method: GET
    data_selector: question
    params: {}
- name: favoritecolor
  endpoint:
    path: /favoritecolor
    method: GET
    data_selector: color
    params: {}
- name: metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: audit
    params: {}
- name: survey
  endpoint:
    path: /private/server-console.html
    method: GET
    data_selector: forms
    params: {}
- name: forms
  endpoint:
    path: /services/data/v1/forms
    method: GET
    data_selector: records
    params: {}
- name: text_field
  endpoint:
    path: /sample-forms/Sample-Images.zip
    method: GET
    data_selector: fields
    params: {}
- name: multiple_choice
  endpoint:
    path: /sample-forms/Sample-Images.zip
    method: GET
    data_selector: choices
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
    params: {}
- name: sample_form
  endpoint:
    path: /sample-forms/Sample-Languages.xlsx
    method: GET
    data_selector: form
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
    params: {}
- name: survey_region
  endpoint:
    path: /services/data/vXX.X/sobjects/survey_region
    method: GET
    data_selector: records
    params: {}
- name: survey_country
  endpoint:
    path: /services/data/vXX.X/sobjects/survey_country
    method: GET
    data_selector: records
    params: {}
- name: survey_city
  endpoint:
    path: /services/data/vXX.X/sobjects/survey_city
    method: GET
    data_selector: records
    params: {}
- name: text_field
  endpoint:
    path: /media:image
    method: GET
    data_selector: original
    params: {}
- name: multiple_choice
  endpoint:
    path: /choices
    method: GET
    data_selector: animal
    params: {}
- name: household_roster
  endpoint:
    path: /api/rosters
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: page1
  endpoint:
    path: /main.html#Design
    method: GET
    data_selector: Basic respondent details
    params: {}
- name: page2
  endpoint:
    path: /main.html#Design
    method: GET
    data_selector: Household assets
    params: {}
- name: fam_group
  endpoint:
    path: /sample-forms/Sample-Rosters-RepeatCount.xlsx
    method: GET
    data_selector: repeat_count
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: choices
  endpoint:
    path: /sample-forms/Sample-Rosters-Choice1.xlsx
    method: GET
    data_selector: choices
- name: worker_hhmember
  endpoint:
    path: /survey
    method: GET
    data_selector: worker_hhmember
- name: survey
  endpoint:
    path: /api/survey
    method: GET
    data_selector: surveys
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: data
  endpoint:
    path: /api/v1/data
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: household_roster
  endpoint:
    path: /sample-forms/Sample-Rosters.xlsx
    method: GET
    data_selector: forms
    params: {}
- name: hhplotdetails
  endpoint:
    path: /sample-forms/hhplotdetails
    method: GET
    data_selector: records
- name: household_member_names
  endpoint:
    path: /sample-forms/Sample-Rosters-Choice1.xlsx
    method: GET
    data_selector: choices
    params: {}
- name: sampleq4list_options
  endpoint:
    path: /sample-forms/sampleq4list_options.csv
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: rosters
  endpoint:
    path: /sample-forms/Sample-Rosters-MultipleRepeats.xlsx
    method: GET
    data_selector: workbook
- name: hhplotdetails
  endpoint:
    path: /sample-forms/Sample-Preloading.zip
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /services/data/vXX.X/sobjects/Form
    method: GET
    data_selector: records
    params: {}
- name: household_listing
  endpoint:
    path: /household_listing
    method: POST
    data_selector: data
    params: {}
- name: household_survey
  endpoint:
    path: /household_survey
    method: POST
    data_selector: data
    params: {}
- name: hhplotdetails
  endpoint:
    path: /sample-forms/hhplotdetails
    method: GET
    data_selector: records
    params: {}
- name: household_survey
  endpoint:
    path: /upload/household_survey
    method: POST
    data_selector: submissions
    params: {}
- name: back_check_survey
  endpoint:
    path: /upload/back_check_survey
    method: POST
    data_selector: submissions
    params: {}
- name: form_data
  endpoint:
    path: /services/data/vXX.X/forms
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: data
    params: {}
- name: household_listing
  endpoint:
    path: /your-endpoint-for/household_listing
    method: POST
    data_selector: data
    params: {}
- name: household_survey
  endpoint:
    path: /your-endpoint-for/household_survey
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
- name: deployed_forms
  endpoint:
    path: /02-designing-forms/01-core-concepts/02b.draft-vs-deployed-forms.html
    method: GET
- name: organizing_forms
  endpoint:
    path: /02-designing-forms/01-core-concepts/02c.organizing-forms.html
    method: GET
- name: testing_forms
  endpoint:
    path: /02-designing-forms/01-core-concepts/02c.testing-forms.html
    method: GET
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
    params: {}
- name: deployed_forms
  endpoint:
    path: /services/data/vXX.X/sobjects/DeployedForms
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: forms
  endpoint:
    path: /services/data/vXX.X/forms
    method: GET
    data_selector: records
    params: {}
- name: SurveyCTO Desktop
  endpoint:
    path: /05-exporting-and-publishing-data/02-exporting-data-with-surveycto-desktop/index.html
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: SurveyCTO Desktop
  endpoint:
    path: /05-exporting-and-publishing-data/02-exporting-data-with-surveycto-desktop
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /services/data/vXX.X/forms
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
    params: {}
- name: data
  endpoint:
    path: /api/v1/data
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: responses
  endpoint:
    path: /api/v1/responses
    method: GET
    data_selector: responses
    params:
      incremental: updated_at
- name: device_security
  endpoint:
    path: /manage/device_security
    method: GET
    data_selector: security_features
    params: {}
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: data
    params: {}
- name: submissions
  endpoint:
    path: /api/submissions
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
    params: {}
- name: form
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: device_data
  endpoint:
    path: /api/data/device
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: data
  endpoint:
    path: /api/v1/data
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: records
- name: computer_assisted_telephone_interviewing
  endpoint:
    path: /03-collecting-data/02a-telephone-data-collection/01.cati.html
    method: GET
- name: deployed forms
  endpoint:
    path: /02-designing-forms/01-core-concepts/02b.draft-vs-deployed-forms.html
    method: GET
- name: organizing your forms
  endpoint:
    path: /02-designing-forms/01-core-concepts/02c.organizing-forms.html
    method: GET
- name: testing your forms
  endpoint:
    path: /02-designing-forms/01-core-concepts/02c.testing-forms.html
    method: GET
- name: 'field type: text'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03a.field-types-text.html
    method: GET
- name: 'field type: integer'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03f.field-types-integer.html
    method: GET
- name: 'field type: decimal'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03g.field-types-decimal.html
    method: GET
- name: 'field type: select_one'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03h.field-types-select-one.html
    method: GET
- name: 'field type: select_multiple'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03i.field-types-select-multiple.html
    method: GET
- name: 'field type: enumerator'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03i2.field-types-enumerator.html
    method: GET
- name: 'field type: geopoint'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03j.field-types-geopoint.html
    method: GET
- name: 'field type: geoshape'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03j2.field-types-geoshape.html
    method: GET
- name: 'field type: geotrace'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03j3.field-types-geotrace.html
    method: GET
- name: 'field type: barcode'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03k.field-types-barcode.html
    method: GET
- name: 'field type: datetime, date, and time'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03l.field-types-datetime.html
    method: GET
- name: 'field type: image'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03m.field-types-image.html
    method: GET
- name: 'field type: audio'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03n.field-types-audio.html
    method: GET
- name: 'field type: video'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03o.field-types-video.html
    method: GET
- name: 'field type: file'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03o2.field-types-file.html
    method: GET
- name: 'field type: note'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03p.field-types-note.html
    method: GET
- name: 'field type: start'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03q.field-types-start.html
    method: GET
- name: 'field type: end'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03r.field-types-end.html
    method: GET
- name: 'field type: deviceid'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03s.field-types-deviceid.html
    method: GET
- name: 'field type: subscriberid'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03u.field-types-subscriberid.html
    method: GET
- name: 'field type: simserial'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03v.field-types-simserial.html
    method: GET
- name: 'field type: phonenumber'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03w.field-types-phonenumber.html
    method: GET
- name: 'field type: username'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03x.field-types-username.html
    method: GET
- name: 'field type: caseid'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03y.field-types-caseid.html
    method: GET
- name: 'field type: comments'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03za.field-types-comments.html
    method: GET
- name: 'field type: calculate'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03zb.field-types-calculate.html
    method: GET
- name: 'field type: speed violations'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03zc.field-types-speed-violations.html
    method: GET
- name: 'field type: text audit'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03zd.field-types-text-audit.html
    method: GET
- name: 'field type: audio audit'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03ze.field-types-audio-audit.html
    method: GET
- name: 'field type: sensor_statistic'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03zf.field-types-sensor-statistic.html
    method: GET
- name: 'field type: sensor_stream'
  endpoint:
    path: /02-designing-forms/01-core-concepts/03zg.field-types-sensor-stream.html
    method: GET
- name: learning from samples
  endpoint:
    path: /02-designing-forms/01-core-concepts/04.learning-from-samples.html
    method: GET
- name: other field properties
  endpoint:
    path: /02-designing-forms/01-core-concepts/05.other-columns.html
    method: GET
- name: grouping and repeating questions
  endpoint:
    path: /02-designing-forms/01-core-concepts/06.groups.html
    method: GET
- name: using constraints to validate responses
  endpoint:
    path: /02-designing-forms/01-core-concepts/07.constraints.html
    method: GET
- name: implementing skip patterns with "relevance"
  endpoint:
    path: /02-designing-forms/01-core-concepts/08.relevance.html
    method: GET
- name: 'using expressions in your forms: a reference for all operators and functions'
  endpoint:
    path: /02-designing-forms/01-core-concepts/09.expressions.html
    method: GET
- name: updating an existing form
  endpoint:
    path: /02-designing-forms/01-core-concepts/10.updating.html
    method: GET
- name: missing data from old form versions
  endpoint:
    path: /02-designing-forms/01-core-concepts/11.missing-data.html
    method: GET
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: workflow_settings
  endpoint:
    path: /03-collecting-data/03-data-collection-workflow/01.designing-workflow.html
    method: GET
    data_selector: settings
    params: {}
- name: cases
  endpoint:
    path: /cases
    method: GET
    data_selector: records
- name: deployed_forms
  endpoint:
    path: /02-designing-forms/01-core-concepts/02b.draft-vs-deployed-forms.html
    method: GET
- name: organizing_forms
  endpoint:
    path: /02-designing-forms/01-core-concepts/02c.organizing-forms.html
    method: GET
- name: testing_forms
  endpoint:
    path: /02-designing-forms/01-core-concepts/02c.testing-forms.html
    method: GET
- name: field_type_text
  endpoint:
    path: /02-designing-forms/01-core-concepts/03a.field-types-text.html
    method: GET
- name: field_type_integer
  endpoint:
    path: /02-designing-forms/01-core-concepts/03f.field-types-integer.html
    method: GET
- name: field_type_decimal
  endpoint:
    path: /02-designing-forms/01-core-concepts/03g.field-types-decimal.html
    method: GET
- name: field_type_select_one
  endpoint:
    path: /02-designing-forms/01-core-concepts/03h.field-types-select-one.html
    method: GET
- name: field_type_select_multiple
  endpoint:
    path: /02-designing-forms/01-core-concepts/03i.field-types-select-multiple.html
    method: GET
- name: field_type_enumerator
  endpoint:
    path: /02-designing-forms/01-core-concepts/03i2.field-types-enumerator.html
    method: GET
- name: field_type_geopoint
  endpoint:
    path: /02-designing-forms/01-core-concepts/03j.field-types-geopoint.html
    method: GET
- name: field_type_geoshape
  endpoint:
    path: /02-designing-forms/01-core-concepts/03j2.field-types-geoshape.html
    method: GET
- name: field_type_geotrace
  endpoint:
    path: /02-designing-forms/01-core-concepts/03j3.field-types-geotrace.html
    method: GET
- name: field_type_barcode
  endpoint:
    path: /02-designing-forms/01-core-concepts/03k.field-types-barcode.html
    method: GET
- name: field_type_datetime
  endpoint:
    path: /02-designing-forms/01-core-concepts/03l.field-types-datetime.html
    method: GET
- name: field_type_image
  endpoint:
    path: /02-designing-forms/01-core-concepts/03m.field-types-image.html
    method: GET
- name: field_type_audio
  endpoint:
    path: /02-designing-forms/01-core-concepts/03n.field-types-audio.html
    method: GET
- name: field_type_video
  endpoint:
    path: /02-designing-forms/01-core-concepts/03o.field-types-video.html
    method: GET
- name: field_type_file
  endpoint:
    path: /02-designing-forms/01-core-concepts/03o2.field-types-file.html
    method: GET
- name: field_type_note
  endpoint:
    path: /02-designing-forms/01-core-concepts/03p.field-types-note.html
    method: GET
- name: field_type_start
  endpoint:
    path: /02-designing-forms/01-core-concepts/03q.field-types-start.html
    method: GET
- name: field_type_end
  endpoint:
    path: /02-designing-forms/01-core-concepts/03r.field-types-end.html
    method: GET
- name: field_type_deviceid
  endpoint:
    path: /02-designing-forms/01-core-concepts/03s.field-types-deviceid.html
    method: GET
- name: field_type_subscriberid
  endpoint:
    path: /02-designing-forms/01-core-concepts/03u.field-types-subscriberid.html
    method: GET
- name: field_type_simserial
  endpoint:
    path: /02-designing-forms/01-core-concepts/03v.field-types-simserial.html
    method: GET
- name: field_type_phonenumber
  endpoint:
    path: /02-designing-forms/01-core-concepts/03w.field-types-phonenumber.html
    method: GET
- name: field_type_username
  endpoint:
    path: /02-designing-forms/01-core-concepts/03x.field-types-username.html
    method: GET
- name: field_type_caseid
  endpoint:
    path: /02-designing-forms/01-core-concepts/03y.field-types-caseid.html
    method: GET
- name: field_type_comments
  endpoint:
    path: /02-designing-forms/01-core-concepts/03za.field-types-comments.html
    method: GET
- name: field_type_calculate
  endpoint:
    path: /02-designing-forms/01-core-concepts/03zb.field-types-calculate.html
    method: GET
- name: field_type_speed_violations
  endpoint:
    path: /02-designing-forms/01-core-concepts/03zc.field-types-speed-violations.html
    method: GET
- name: field_type_text_audit
  endpoint:
    path: /02-designing-forms/01-core-concepts/03zd.field-types-text-audit.html
    method: GET
- name: field_type_audio_audit
  endpoint:
    path: /02-designing-forms/01-core-concepts/03ze.field-types-audio-audit.html
    method: GET
- name: field_type_sensor_statistic
  endpoint:
    path: /02-designing-forms/01-core-concepts/03zf.field-types-sensor-statistic.html
    method: GET
- name: field_type_sensor_stream
  endpoint:
    path: /02-designing-forms/01-core-concepts/03zg.field-types-sensor-stream.html
    method: GET
- name: learning_from_samples
  endpoint:
    path: /02-designing-forms/01-core-concepts/04.learning-from-samples.html
    method: GET
- name: other_field_properties
  endpoint:
    path: /02-designing-forms/01-core-concepts/05.other-columns.html
    method: GET
- name: grouping_repeating_questions
  endpoint:
    path: /02-designing-forms/01-core-concepts/06.groups.html
    method: GET
- name: using_constraints_validate_responses
  endpoint:
    path: /02-designing-forms/01-core-concepts/07.constraints.html
    method: GET
- name: implementing_skip_patterns_relevance
  endpoint:
    path: /02-designing-forms/01-core-concepts/08.relevance.html
    method: GET
- name: using_expressions_forms
  endpoint:
    path: /02-designing-forms/01-core-concepts/09.expressions.html
    method: GET
- name: updating_existing_form
  endpoint:
    path: /02-designing-forms/01-core-concepts/10.updating.html
    method: GET
- name: missing_data_old_form_versions
  endpoint:
    path: /02-designing-forms/01-core-concepts/11.missing-data.html
    method: GET
- name: cases
  endpoint:
    path: /cases
    method: GET
    data_selector: rows
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
- name: teams
  endpoint:
    path: /04-monitoring-and-management/01-the-basics/00a.managing-teams.html
    method: GET
    data_selector: teams
    params: {}
- name: form_data
  endpoint:
    path: /api/data
    method: GET
    data_selector: records
- name: enumerator
  endpoint:
    path: /enumerator
    method: GET
    data_selector: records
- name: data_collection
  endpoint:
    path: /api/v1/data
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: users
  endpoint:
    path: /04-monitoring-and-management/01-the-basics/01.managing-users.html
    method: GET
    data_selector: users
    params: {}
- name: enumerator_dataset
  endpoint:
    path: /enumerator_dataset
    method: GET
    data_selector: enumerators
    params: {}
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: external_viewers
  endpoint:
    path: /shared-access
    method: GET
    data_selector: workbooks
- name: incoming_data
  endpoint:
    path: /monitoring/incoming_data
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: Data Explorer
  endpoint:
    path: /shared-access
    method: GET
    data_selector: workbooks
    params: {}
- name: form_submissions
  endpoint:
    path: /api/v1/form_submissions
    method: GET
    data_selector: submissions
    params: {}
- name: form_data
  endpoint:
    path: /services/data/vXX.X/sobjects/FormData
    method: GET
    data_selector: records
    params: {}
- name: form_data
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
- name: data
  endpoint:
    path: /api/v1/data
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: light_level
  endpoint:
    path: /sensor_stream/light_level
    method: GET
    data_selector: records
- name: movement
  endpoint:
    path: /sensor_stream/movement
    method: GET
    data_selector: records
- name: sound_level
  endpoint:
    path: /sensor_stream/sound_level
    method: GET
    data_selector: records
- name: sound_pitch
  endpoint:
    path: /sensor_stream/sound_pitch
    method: GET
    data_selector: records
- name: conversation
  endpoint:
    path: /sensor_stream/conversation
    method: GET
    data_selector: records
- name: light_level
  endpoint:
    path: /sensor_stream/light_level
    method: GET
    data_selector: observations
    params:
      period: '1'
- name: movement
  endpoint:
    path: /sensor_stream/movement
    method: GET
    data_selector: observations
    params:
      period: '1'
- name: sound_level
  endpoint:
    path: /sensor_stream/sound_level
    method: GET
    data_selector: observations
    params:
      period: '1'
- name: sound_pitch
  endpoint:
    path: /sensor_stream/sound_pitch
    method: GET
    data_selector: observations
    params:
      period: '1'
- name: conversation
  endpoint:
    path: /sensor_stream/conversation
    method: GET
    data_selector: observations
    params:
      period: '1'
- name: data_export_reports
  endpoint:
    path: /api/data_export_reports
    method: GET
    data_selector: reports
    params: {}
- name: cloud_publishing
  endpoint:
    path: /api/cloud_publishing
    method: GET
    data_selector: publishing
    params: {}
- name: data_export
  endpoint:
    path: /services/data/vXX.X/data_export
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: data
  endpoint:
    path: /api/v1/data
    method: GET
    data_selector: records
    params: {}
- name: data_export
  endpoint:
    path: /export/data
    method: GET
    data_selector: records
    params: {}
- name: data_export_report
  endpoint:
    path: /export/reports
    method: GET
    data_selector: reports
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: data
    params: {}
- name: data_export_report
  endpoint:
    path: /export/report
    method: GET
    data_selector: export_details
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: data_export_report
  endpoint:
    path: /data_export_report
    method: GET
    data_selector: reports
    params: {}
- name: data_import
  endpoint:
    path: /04-monitoring-and-management/01-the-basics/04.reviewing-and-correcting.html
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: data_export
  endpoint:
    path: /api/data_export
    method: GET
    data_selector: records
- name: form_data
  endpoint:
    path: /services/data/vXX.X/sobjects/FormData
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: forms
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
    params: {}
- name: form_data
  endpoint:
    path: /api/v1/forms/data
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: data
    params: {}
- name: form_data
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: data
    params: {}
- name: form_data
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /services/data/v1/forms
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/forms/
    method: GET
    data_selector: forms
    params: {}
- name: google_sheets
  endpoint:
    path: /export/google_sheets
    method: POST
    data_selector: data
    params: {}
- name: forms_to_google_sheets
  endpoint:
    path: /05-exporting-and-publishing-data/03-publishing-data-to-the-cloud/02.forms-to-google-sheets.html
    method: GET
- name: data_export
  endpoint:
    path: /services/data/vXX.X/sobjects/DataExport
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/forms
    method: POST
    data_selector: data
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
    params: {}
- name: forms_to_google_sheets
  endpoint:
    path: /05-exporting-and-publishing-data/03-publishing-data-to-the-cloud/02.forms-to-google-sheets.html
    method: GET
- name: form_data
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: forms
  endpoint:
    path: /api/v1/forms
    method: GET
    data_selector: forms
    params: {}
- name: responses
  endpoint:
    path: /api/v1/responses
    method: GET
    data_selector: responses
    params: {}
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: forms
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: server_dataset
  endpoint:
    path: /advanced-offline/dataset
    method: POST
    data_selector: datasets
    params:
      allow_offline_updates: true
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: deployed_forms
  endpoint:
    path: /02-designing-forms/01-core-concepts/02b.draft-vs-deployed-forms.html
    method: GET
    data_selector: records
- name: organizing_forms
  endpoint:
    path: /02-designing-forms/01-core-concepts/02c.organizing-forms.html
    method: GET
    data_selector: records
- name: testing_forms
  endpoint:
    path: /02-designing-forms/01-core-concepts/02c.testing-forms.html
    method: GET
    data_selector: records
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses OAuth2 with refresh token — requires setup of connected app in SurveyCTO
- Some objects like Contact may return nulls in deeply nested fields
- SurveyCTO has been built with industry-leading data-security features to safeguard
  sensitive PII data.
- End-to-end encryption allows you to protect data even from inside access.
- Only export and save SurveyCTO data on systems that are fully secure.
- When sharing full PII data, be careful; never email PII data or put it in a public
  location.
- Consider marking certain non-PII fields as publishable for wider sharing without
  the private key.
- Keeping your data secure
- Only a SurveyCTO 'user' can collect data.
- Users with higher permission levels can add users.
- Requires setup of connected app in API
- API usage subject to rate limits
- Some objects may return nulls in deeply nested fields
- The form designer's test view provides a powerful tool for testing your forms.
- The form designer's test view provides a powerful tool for testing your forms, so
  that you can assure that forms you deploy are as high-quality and error-free as
  possible.
- Integers are limited, by nature, to be nine digits or less.
- By default, choices will display as a series of checkboxes.
- Specify 'minimal' in the appearance column for a single pop-up selector.
- Specify 'compact' for a compact table of options.
- Randomize choice order by specifying 'randomized' in the appearance column.
- Choices will display as a series of radio buttons, each representing a single static
  choice from the list of choices.
- The enumerator field type is a new feature that was added to SurveyCTO Collect in
  v2.72.
- 'Platform limitations: Scan mode works only in the SurveyCTO Collect mobile app,
  not in web forms.'
- Scan mode works only in the SurveyCTO Collect mobile app, not in web forms.
- The background appearance isn't supported on the web.
- On mobile devices, SurveyCTO Collect will keep trying to acquire a more accurate
  GPS reading until it reaches a specific accuracy threshold.
- 'On mobile devices, SurveyCTO Collect will keep trying to acquire a more accurate
  GPS reading until it reaches a specific accuracy threshold (by default: +/- 5m accuracy).'
- If you use the 'background' appearance, Collect will keep trying to read the location
  until it reaches that target accuracy or the user exits the form.
- Only SurveyCTO Collect on Android supports this field type.
- Identifying shapes on maps generally requires an Internet connection.
- Web forms do not currently support geotrace fields.
- Only SurveyCTO Collect on Android or iOS supports this field type. It's not supported
  on the web.
- Requires setup of connected app in SurveyCTO
- Always resize mobile images
- Large photos can seriously slow and disrupt your whole data pipeline.
- If your users will be taking pictures using SurveyCTO Collect, you don't want the
  saved images to be larger than necessary. The larger the images, the longer it will
  take to upload form data to your SurveyCTO server (since the form data will include
  those image files), the longer it will take to download and export that data, etc.
- Video clips may be large, so uploading form data with video clips may take a long
  time or require a high-speed connection.
- Specify 'new' in the appearance column to require that the user record a new video
  clip (vs. select an existing one).
- 'Users can attach only these file types: text, image, video, audio, PDF, ZIP, or
  MS Office files (Excel or Word)'
- You can specify your own comma-separated list of MIME types for those types of files
  that you would like to accept
- Requires setup of OAuth2 authentication with SurveyCTO
- Setup connected app in API for OAuth2 authentication
- 'end: record the date and time the survey was ended. This is an automatic, hidden
  field type: it is filled in automatically and never shows up in the survey''s user
  interface.'
- Forms filled out using a web browser will always record '(web)' in the deviceid
  field.
- Forms filled out using the Collect app on Android versions 4-9 will record the IMEI
  in the deviceid field.
- On Android versions 10 and higher, the ANDROID_ID will be recorded instead. While
  the ANDROID_ID is still unique across devices, it will change if the device is reset
  with the factory defaults, and it will also be different for different users on
  the same device.
- Requires OAuth2 authentication for API access
- Ensure proper permissions are set for API access
- On Android versions 10 and higher, the ANDROID_ID will be recorded instead.
- This field is not supported on web browsers.
- This field is not supported on Collect for iOS.
- This field is supported on Android versions 4-9. Android versions 10 and above will
  leave this field blank.
- 'This is an automatic, hidden field type: it is filled in automatically and never
  shows up in the survey''s user interface.'
- Only SurveyCTO Collect on Android supports this field type. It's not supported on
  iOS or the web.
- The username field is automatically set when the form is started, and never updates
  its value.
- You rarely want to use calculate_here
- The vast majority of your calculations should be in regular calculate fields.
- Only SurveyCTO Collect supports this field type. It's not supported on the web,
  as web browsers do not support invisible audio recording.
- Only SurveyCTO Collect supports this field type. It's not supported on the web.
- The *choices* appearance can be used with both the default text audit appearance,
  and with the *eventlog* appearance.
- Including a text audit field will record additional data while the form is being
  filled out.
- The text audit .csv file will contain a row for each field.
- By default, all sensor streams capture data with a period or observation length
  of 1 second.
- You can specify a relevance expression to indicate that the group should only be
  displayed when appropriate.
- You can repeat the questions in a group n times.
- You can nest groups (put groups within groups) if you wish.
- If you specify 'organized' in the appearance column of a 'begin group' row, the
  fields within the group will be visibly organized under the group's label.
- To display an entire group of questions on a single page, specify 'field-list' in
  the appearance column of a 'begin group' row.
- If you have a series of select_one or select_multiple fields that share the same
  option labels, you can put them all into a single 'field-list' group.
- You can organize some or all of your questions into distinct groups.
- You can nest groups if you wish.
- SurveyCTO keeps track of each form based on its unique form ID on the settings worksheet.
- Ensure proper authentication setup for API access.
- Never nest `once(random())` directly inside another function or expression, even
  in constraint or calculate expressions.
- You should always call `random()` inside the `once()` function.
- 'Never use `random()` directly in a relevance expression, because you don''t want
  to generate a new random number every time the relevance is calculated: you want
  just one stable random number for each filled-out form.'
- We strongly encourage you to maintain back-ups of all deployed versions of your
  forms, and to keep detailed notes on the changes you make.
- Only SurveyCTO Collect on Android supports offline map tiles. It's not supported
  on iOS or the web.
- Complex MBTile files with high-resolution imagery may contain several gigabytes
  of data, and this may contribute to significant delays in the layer appearing on
  first load.
- Form encryption must be set up when the form is created on the server.
- Always test to make sure you've set up your keys properly before starting your actual
  data collection.
- SurveyCTO forms can be created in any language, or even contain multiple languages
  in the same form.
- Raster-based MBTile files can be created using open-source tools such as TileMill.
- Some requests may have rate limits
- When designing your forms, you'll want to factor in any limitations that might affect
  your chosen target platforms.
- It's most convenient to do most of your form testing on the web, but you will want
  to test your final forms on all target devices before deploying them for data-collection.
- For users filling out your forms on a mobile device, you will want to make sure
  the Collect app is updated to the latest version.
- 'geopoint on web: no support for background appearance or offline map tiles. If
  you include a geopoint field in a form that is filled out on a web browser, a respondent
  might be able to proceed even though the defined accuracy threshold for geopoint
  questions has not been met.'
- 'geopoint on iOS: no support for offline map tiles'
- 'image on web: no support for annotate, draw, or signature appearances'
- 'audio/video on web: no support for recording'
- You can later update the data without having to edit or upload a new version of
  your form.
- Your datasets can be updated automatically, with data streaming in from other forms.
- Choices will be ordered, by default, in the order that they appear in your dataset
  or .csv file.
- A field plug-in may not support your current appearance options. Check the developer's
  documentation to see what options are supported before you attach it to your form,
  and test it thoroughly before you start actually collecting data.
- The 'Label display behavior' setting (in Collect's Admin Settings) will have no
  effect on a field plug-in.
- When using SurveyCTO Collect on iOS, the on-screen keyboard may not automatically
  appear when you arrive on a field that uses a field plug-in.
- The field plug-in console is for previewing live changes to your field plug-in's
  code.
- If you haven't already, see the help topic on pre-loading data for details on how
  to attach pre-loaded data to your survey form.
- Attached data files are always stored as .csv
- If you created an .xlsx file to store your preloaded choice list, and then uploaded
  it (choosing to convert it to .csv when prompted), the attached file will be a .csv
  file (not an .xlsx file).
- Some forms may have limitations on data types returned
- A field plug-in may not support your current appearance options.
- When using SurveyCTO Collect on iOS, the on-screen keyboard may not automatically
  appear.
- default_language is set to 'english'
- Users can change the language to Spanish or English.
- Default language is set to 'english'.
- The sample demonstrates two different methods for collecting household roster information.
- Data is pre-loaded from a .csv file containing household identification numbers
  and plot details.
- Valid household IDs are between 1001 and 1060.
- This sample demonstrates a method for handling rosters (repeated questions) that
  is a hybrid between the two methods demonstrated in the previous rosters sample.
- Some fields may return nulls in deeply nested structures
- The text audit field will save text audits for 100% of filled-out forms.
- The audio audit field will save audio recordings for 100% of filled-out forms.
- The audio recording will begin immediately (0 seconds into the survey) and last
  for up to 15 minutes (900 seconds of duration).
- This sample demonstrates how datasets can be used to link multiple survey forms
  into a single workflow.
- The household listing form publishes data directly into the dataset.
- If you upload the spreadsheet form definition to your SurveyCTO server manually,
  be sure to attach the .csv file.
- Demonstrates how datasets can be used to link multiple survey forms into a single
  workflow to perform back-checks.
- The form will save text audits for 100% of filled-out forms.
- The form will also save audio recordings for 100% of filled-out forms.
- Audio recording will begin immediately (0 seconds into the survey) and last for
  up to 15 minutes (900 seconds of duration).
- Sample demonstrates linking multiple survey forms into a single workflow
- Forms publish data into the linked dataset
- This sample demonstrates how datasets can be used to link multiple survey forms
  into a single workflow to perform back-checks.
- The sample includes three survey forms and two datasets to link them.
- Automatic form optimization is a new feature added in SurveyCTO 2.70.19.
- If you don't want to keep the changes made during the optimization process, close
  the form designer without saving.
- Some forms may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in API
- Collect app requires permissions to function fully.
- Auto send with WiFi and network settings available in General Settings.
- If you don't want to keep the changes, don't worry – all you have to do is close
  the form designer without saving.
- Requires that your device have an Internet connection when transferring survey data
  from the device to the server.
- Some fields may return null values
- Only SurveyCTO Collect on Android supports the local WiFi sync option.
- If your workspace is connected to a server that has the don't allow any outside
  access setting enabled, none of the offline features will be allowed.
- This requires that your device have an Internet connection when transferring survey
  data from the device to the server.
- It is typical to disable all communications to conserve battery power.
- Each workspace within Collect has its own general settings.
- Each workspace within Collect has its own admin settings.
- Workspace passcodes are only supported in Collect for Android.
- Only SurveyCTO Collect on Android supports the options to copy settings and forms
  described.
- Require all devices that connect to your server to keep their Collect app updated.
- Most modern devices have full-disk encryption enabled by default.
- Jailbroken iOS devices and rooted Android devices are much less secure.
- It is generally best to keep your server's forms, data, and settings cleanly separated
  from work for other servers.
- If your workspace is connected to a server that has the don't allow any outside
  access setting enabled, none of the offline features described will be allowed.
- 'Platform limitation: Workspace passcodes are only supported in Collect for Android.'
- Devices must be updated to at least Collect v2.71 to access new security features.
- Forms with an enumerator field will only work on devices running Collect v2.72 or
  later.
- Only SurveyCTO Collect for Android supports the public workspace storage discussed
  here.
- iOS devices always store data in private internal storage.
- Some endpoints may have rate limits
- By default, web data collection is disabled for all forms on your server.
- All of your forms will require users to log in with an account authorized to collect
  data by default.
- To allow anonymous (not-logged-in) users to fill out one of your forms, enable Allow
  anonymous form access.
- If your form takes a long time to load, you may need a more powerful device.
- Collect saves your data as you go along.
- If Collect crashes in the middle of a survey, you won't lose any data.
- Ensure OAuth credentials are properly configured.
- All forms start out private, and no 'anonymous' access will be allowed.
- If you do include something added onto the URL you share with users, you can pull
  that something into your form by adding a field with the caseid field type.
- New forms begun with SurveyCTO automatically include such a field, just in case
  you're using case management.
- Make sure your form is set to allow anonymous access.
- Use the `appearance=min` URL parameter (query string).
- Test without being logged in.
- Users can control options in the SurveyCTO Collect app from Admin Settings or General
  Settings.
- Finalized forms cannot generally be edited.
- By default, users share a single case list.
- You can customize your data-collection workflow using the case-management interface.
- Finalized forms cannot generally be edited, so finalization is the last (in-the-field)
  step of the data-collection process.
- Users can jump back and start cleaning up required or invalid responses earlier
  in the interview process.
- Users can fill out and edit forms organized around cases.
- Each case should have a unique ID.
- Cases can be filtered by users, roles, or enumerators.
- Uses unique enumerator ID for identification
- Allows adding new enumerators directly in forms
- If you have a single-team subscription, there's really no need to manage roles at
  all.
- Many SurveyCTO administrators use shared groups for global form libraries and shared
  datasets.
- 'There are two ways to add a new custom role: starting from scratch by clicking
  *Create role*, and starting from an existing role by clicking *Duplicate* for an
  existing role.'
- If you have a single-team server, then all forms and datasets that reside outside
  of any group are still considered, for purposes of permissions, to reside in a shared
  group.
- All user accounts are identified by email addresses
- Data collection only users can be identified by either an email address or a non-email
  username
- Uses a specific ID format for enumerators, which is configurable.
- Allows adding new enumerators directly from the form.
- You can use statistical software like Stata, SPSS, or R to visualize and analyze
  your data.
- Loading the Data Explorer might take a while, particularly the first time you open
  it.
- Users can configure email addresses for contacting an administrator.
- Internal support requests can be routed directly to a help desk.
- Uses OAuth2 for authentication
- External viewers never need a password to view or download form data.
- All emailed hyperlinks are valid for one use only, expiring either after 24 hours
  or after 30 minutes.
- Review and correction functions will be disabled.
- External viewers cannot make changes to workbooks.
- Direct links to individual submissions will only work once an external viewer is
  already authenticated.
- Submissions pass through the SurveyCTO server unchanged by default.
- When enabled, only approved submissions are released downstream.
- External viewers can access workbooks without a password using temporary, single-use
  hyperlinks.
- SurveyCTO Collect on mobile devices does not support external authentication.
- Users with external authentication must be managed in the external provider.
- Review and correction functions will be disabled. External viewers will not be able
  to modify submissions in any way, including approving or rejecting submissions,
  making comments on submissions, or correcting data.
- External viewers cannot make changes to workbooks. While external viewers will be
  able to add and remove data filters and exclusions, they won't be able to add, edit,
  or delete summaries, and they won't be able to save any changes.
- Configuring external authentication (single-sign-on, or SSO)
- When the review and correction workflow is enabled for a form, only approved submissions
  will publish.
- Collecting high-quality data can be hard – much harder, at least, than collecting
  poor-quality data.
- Automated quality checks can monitor incoming data for various issues.
- Quality check reports can be downloaded in .csv format.
- Used in combination with automated quality checks or other back-end analysis
- Ensure to follow the API access guidelines for proper integration.
- Automated quality checks can be configured for any form.
- Quality checks can run nightly unless paused.
- In advanced mode, you can configure as many additional workbooks as you like, tailoring
  each to a particular view, team, or workflow.
- Each workbook must have a title and unique ID, and you must retain the original
  'default' workbook.
- Sensor meta-data is still considered experimental.
- Only SurveyCTO Collect on Android supports sensor meta-data.
- Sensor meta-data is experimental and ongoing development is in progress.
- By default, all sensor streams capture data with a period or observation length
  of 1 second
- To record observations as fast as they come in from the underlying sensors, specify
  'period=0'
- If you want to record observations as fast as they come in from the underlying sensors,
  you can specify 'period=0'.
- Exported .csv files are encoded in Unicode format (UTF-8) so that they can support
  the widest possible range of characters and scripts.
- Some forms may have limitations on data types
- Exported .csv files are encoded in Unicode format (UTF-8)
- Microsoft Excel defaults to importing .csv files as Latin text
- Data export reports indicate whether or not advanced encryption features were used
  to protect the data.
- Includes details on submission approval status and method.
- Reports include a summary of submissions excluded.
- Indicates total number of attached files associated with the export.
- Includes details on the form used to export the data.
- Automatically generated .do files may need adjustments for file paths.
- Check for issues with over-long variable names in Stata.
- Uses SurveyCTO's built-in review and correction workflow to safely apply corrections
  to incoming data.
- If using long format, runs additional .do files to process any secondary .csv files
  for repeat-group data.
- Desktop offers options to control data processing and export.
- By default, Desktop exports data into .csv files.
- Excel will import the .csv file based on a series of assumptions, most of which
  will not alter your data.
- Excel gets confused when it sees line-breaks inside cells.
- Excel will sometimes convert things that aren't dates into dates.
- By default, Desktop will export data into .csv files, in a comma-separated-value
  format supported by just about any spreadsheet, database, or statistical analysis
  software.
- Export missing data? option ensures that every single response that was ever submitted
  for a form is included.
- Ensure API access is configured correctly for data export.
- If you double-click on a .csv file, most systems will default to opening the file
  in Excel. In this case, Excel will import the .csv file based on a series of assumptions,
  most of which will not alter your data.
- The safer way to import a .csv file is to first open Excel and then choose either
  *File...Import* or *Data...Get External Data...Import Text File*.
- By default, SurveyCTO Desktop exports data as .csv or comma-separated-values format.
- Java support required for auto-run mail merges.
- API requires authentication via OAuth2.
- Fields inside repeat groups will be published in 'wide' format.
- OAuth2 authentication requires setup of connected app in SurveyCTO
- Ensure API access is enabled for your account
- Ensure cloud publishing is turned on.
- Only publishable form fields will be listed for encrypted forms.
- Offline dataset publishing is a new feature that offers a great range of new capabilities.
- The datasets will not update again and again but will instead update only after
  5-10 quiet minutes have passed.
- Careful planning and testing of form data publishing-enabled workflows should be
  enough to ensure that most work well.
- You may need to be able to audit the updates that have been made to the contents
  of a server dataset.
- 'You will have to supply at least one of the following query criteria in order to
  view data changes: A date range for updates, A unique record ID, A form submission''s
  unique KEY value.'
- SurveyCTO will only read from or write to Google Sheets as instructed in configuring
  publishing options.
- Publish existing data to include past submissions.
- Datasets update 5-10 minutes after the most recent submission has been received.
- Offline dataset publishing allows immediate availability for pre-loading.
- Requires setup of OAuth2 credentials in SurveyCTO.
- To audit changes to the contents of a server dataset, visit the Design tab of the
  server console.
- Click on Download and you will receive a .csv data export which contains a list
  of changes.
- Advanced offline features are available as a part of SurveyCTO’s Advanced and Enterprise
  subscription plans.
- Without offline server dataset publishing enabled, form data is published only to
  a server dataset when a form submission reaches the server.
- Introduced new REST API endpoints to support managing users, individually and in
  bulk.
- Added the ability in the Hub to support private workflows that can shared among
  the servers of an organization.
- Added support for enumerators, including the new enumerator field type, the enumerator-id()
  and enumerator-name() functions, and the ability to link cases to enumerators in
  the Manage Cases interface.
- Start targeting Android 13 which requires users to grant an extra permission for
  app notifications.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Recheck OAuth tokens'
- '403 Forbidden: Insufficient permissions'
- '401 Unauthorized: Check your credentials and OAuth scopes'
- '401 Unauthorized: Check OAuth scopes or token expiration'
- '401 Unauthorized: Check your API key and permissions'
- '404 Not Found: Verify the requested resource path'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify client credentials'
- '429 Too Many Requests: Rate limit exceeded'
- '401 Unauthorized: Recheck OAuth credentials.'
- Is the import directory correct?
- Is the import filename correct?
- Is the output directory correct?
- Is there a problem parsing dates?
- Is there a problem with over-long variable names?
- Is there a problem running repeat-group .do files?
- An error message will be output to the Stata console, including the row number of
  the offending correction.
- '401 Unauthorized: Check your credentials.'
- '401 Unauthorized: Ensure token is valid and has necessary scopes.'
- '403 Forbidden: Check user permissions for accessing the resource.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OpenID Connect
  - OAuth client ID
  - Client secret
client:
  base_url: https://account.surveycto.com
  headers:
    Accept: application/json
source_metadata: null
