resources:
- name: chart
  endpoint:
    path: /api/chart
    method: GET
    data_selector: records
- name: Detail
  endpoint:
    path: /generated/channels/altair.Detail
    method: GET
- name: Key
  endpoint:
    path: /generated/channels/altair.Key
    method: GET
- name: aggregate
  endpoint:
    path: /aggregate
    method: GET
    data_selector: records
- name: band
  endpoint:
    path: /band
    method: GET
    data_selector: records
- name: bin
  endpoint:
    path: /bin
    method: GET
    data_selector: records
- name: field
  endpoint:
    path: /field
    method: GET
    data_selector: records
- name: sort
  endpoint:
    path: /sort
    method: GET
    data_selector: records
- name: timeUnit
  endpoint:
    path: /timeUnit
    method: GET
    data_selector: records
- name: title
  endpoint:
    path: /title
    method: GET
    data_selector: records
- name: type
  endpoint:
    path: /type
    method: GET
    data_selector: records
- name: cars
  endpoint:
    path: /data/cars
    method: GET
    data_selector: records
    params: {}
- name: population
  endpoint:
    path: /data/population
    method: GET
    data_selector: records
    params: {}
- name: aggregate
  endpoint:
    path: /aggregate
    method: GET
- name: band
  endpoint:
    path: /band
    method: GET
- name: bin
  endpoint:
    path: /bin
    method: GET
- name: condition
  endpoint:
    path: /condition
    method: GET
- name: field
  endpoint:
    path: /field
    method: GET
- name: legend
  endpoint:
    path: /legend
    method: GET
- name: scale
  endpoint:
    path: /scale
    method: GET
- name: sort
  endpoint:
    path: /sort
    method: GET
- name: timeUnit
  endpoint:
    path: /timeUnit
    method: GET
- name: title
  endpoint:
    path: /title
    method: GET
- name: type
  endpoint:
    path: /type
    method: GET
- name: aggregate
  endpoint:
    path: /generated/core/altair.Aggregate.html
    method: GET
- name: align
  endpoint:
    path: /generated/core/altair.LayoutAlign.html
    method: GET
- name: band
  endpoint:
    path: /generated/core/altair.Band.html
    method: GET
- name: bin
  endpoint:
    path: /generated/core/altair.BinParams.html
    method: GET
- name: bounds
  endpoint:
    path: /generated/core/altair.Bounds.html
    method: GET
- name: center
  endpoint:
    path: /generated/core/altair.Center.html
    method: GET
- name: columns
  endpoint:
    path: /generated/core/altair.Columns.html
    method: GET
- name: field
  endpoint:
    path: /generated/core/altair.Field.html
    method: GET
- name: header
  endpoint:
    path: /generated/core/altair.Header.html
    method: GET
- name: sort
  endpoint:
    path: /generated/core/altair.SortArray.html
    method: GET
- name: spacing
  endpoint:
    path: /generated/core/altair.Spacing.html
    method: GET
- name: timeUnit
  endpoint:
    path: /generated/core/altair.TimeUnit.html
    method: GET
- name: title
  endpoint:
    path: /generated/core/altair.Text.html
    method: GET
- name: type
  endpoint:
    path: /generated/core/altair.StandardType.html
    method: GET
- name: chart
  endpoint:
    path: /mark_bar
    method: POST
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: aggregate
  endpoint:
    path: /aggregate
    method: GET
    data_selector: records
    params: {}
- name: bin
  endpoint:
    path: /bin
    method: GET
    data_selector: records
    params: {}
- name: condition
  endpoint:
    path: /condition
    method: GET
    data_selector: records
    params: {}
- name: field
  endpoint:
    path: /field
    method: GET
    data_selector: records
    params: {}
- name: legend
  endpoint:
    path: /legend
    method: GET
    data_selector: records
    params: {}
- name: scale
  endpoint:
    path: /scale
    method: GET
    data_selector: records
    params: {}
- name: sort
  endpoint:
    path: /sort
    method: GET
    data_selector: records
    params: {}
- name: timeUnit
  endpoint:
    path: /timeUnit
    method: GET
    data_selector: records
    params: {}
- name: title
  endpoint:
    path: /title
    method: GET
    data_selector: records
    params: {}
- name: type
  endpoint:
    path: /type
    method: GET
    data_selector: records
    params: {}
- name: arc
  endpoint:
    path: /mark_arc
    method: GET
    data_selector: records
- name: area
  endpoint:
    path: /mark_area
    method: GET
    data_selector: records
- name: bar
  endpoint:
    path: /mark_bar
    method: GET
    data_selector: records
- name: circle
  endpoint:
    path: /mark_circle
    method: GET
    data_selector: records
- name: geoshape
  endpoint:
    path: /mark_geoshape
    method: GET
    data_selector: records
- name: image
  endpoint:
    path: /mark_image
    method: GET
    data_selector: records
- name: line
  endpoint:
    path: /mark_line
    method: GET
    data_selector: records
- name: point
  endpoint:
    path: /mark_point
    method: GET
    data_selector: records
- name: rect
  endpoint:
    path: /mark_rect
    method: GET
    data_selector: records
- name: rule
  endpoint:
    path: /mark_rule
    method: GET
    data_selector: records
- name: square
  endpoint:
    path: /mark_square
    method: GET
    data_selector: records
- name: text
  endpoint:
    path: /mark_text
    method: GET
    data_selector: records
- name: tick
  endpoint:
    path: /mark_tick
    method: GET
    data_selector: records
- name: trail
  endpoint:
    path: /mark_trail
    method: GET
    data_selector: records
- name: box plot
  endpoint:
    path: /mark_boxplot
    method: GET
    data_selector: records
- name: error band
  endpoint:
    path: /mark_errorband
    method: GET
    data_selector: records
- name: error bar
  endpoint:
    path: /mark_errorbar
    method: GET
    data_selector: records
- name: y
  endpoint:
    path: /y
    method: GET
    data_selector: y_coordinates
- name: y2
  endpoint:
    path: /y2
    method: GET
    data_selector: y2_coordinates
- name: y2Offset
  endpoint:
    path: /y2Offset
    method: GET
    data_selector: y2_offset
- name: yOffset
  endpoint:
    path: /yOffset
    method: GET
    data_selector: y_offset
- name: title
  endpoint:
    path: /title
    method: GET
    data_selector: title
    params: {}
- name: header_configuration
  endpoint:
    path: Chart.configure_header
    method: POST
    data_selector: configuration
- name: scale_configuration
  endpoint:
    path: Chart.configure_scale()
    method: POST
    data_selector: properties
- name: scale_range_configuration
  endpoint:
    path: Chart.configure_range()
    method: POST
    data_selector: properties
- name: projection_configuration
  endpoint:
    path: Chart.configure_projection()
    method: POST
    data_selector: properties
- name: selection_configuration
  endpoint:
    path: Chart.configure_selection()
    method: POST
    data_selector: properties
- name: title_configuration
  endpoint:
    path: Chart.configure_title()
    method: POST
    data_selector: properties
- name: LayerChart
  endpoint:
    path: /generated/toplevel/altair.LayerChart.html
    method: GET
- name: HConcatChart
  endpoint:
    path: /generated/toplevel/altair.HConcatChart.html
    method: GET
- name: VConcatChart
  endpoint:
    path: /generated/toplevel/altair.VConcatChart.html
    method: GET
- name: RepeatChart
  endpoint:
    path: /generated/toplevel/altair.RepeatChart.html
    method: GET
- name: FacetChart
  endpoint:
    path: /generated/toplevel/altair.FacetChart.html
    method: GET
- name: seattle_weather
  endpoint:
    path: /data/seattle_weather.csv
    method: GET
    data_selector: data
    params: {}
- name: renderers
  endpoint:
    path: /renderers
    method: GET
    data_selector: renderers
- name: zipcodes
  endpoint:
    path: data.zipcodes.url
    method: GET
- name: world_countries
  endpoint:
    path: data.world_110m.url
    method: GET
- name: candlestick_chart
  endpoint:
    path: /gallery/candlestick_chart
    method: GET
    data_selector: source
- name: multi_panel_scatter_plot
  endpoint:
    path: /gallery/multi-panel-scatter-plot
    method: GET
    data_selector: source
    params: {}
- name: cars
  endpoint:
    path: /data/cars
    method: GET
    data_selector: records
- name: disasters
  endpoint:
    path: data.disasters.url
    method: GET
    data_selector: data
    params: {}
- name: unemployment_rate
  endpoint:
    path: data/unemployment.url
    method: GET
    data_selector: rate
- name: counties
  endpoint:
    path: data/us_10m.url
    method: GET
    data_selector: counties
- name: movies
  endpoint:
    path: data.movies.url
    method: GET
    data_selector: records
- name: seattle_weather
  endpoint:
    path: data/seattle_weather
    method: GET
    data_selector: data
- name: boroughs
  endpoint:
    path: data/londonBoroughs.url
    method: GET
    data_selector: boroughs
- name: tubelines
  endpoint:
    path: data/londonTubeLines.url
    method: GET
    data_selector: line
- name: centroids
  endpoint:
    path: data/londonCentroids.url
    method: GET
    data_selector: centroids
- name: pandas DataFrame
  endpoint:
    path: /altair/data/pandas
    method: GET
    data_selector: records
- name: Data
  endpoint:
    path: /altair/data/data
    method: GET
    data_selector: records
- name: geopandas GeoDataFrame
  endpoint:
    path: /altair/data/geopandas
    method: GET
    data_selector: records
- name: GeoPandas
  endpoint:
    path: /spatial-data/gdf
    method: GET
    data_selector: features
    params: {}
- name: GeoJSON
  endpoint:
    path: /spatial-data/geojson
    method: GET
    data_selector: features
    params: {}
- name: TopoJSON
  endpoint:
    path: /spatial-data/topojson
    method: GET
    data_selector: features
    params: {}
- name: active
  endpoint:
    path: /active
    method: GET
    data_selector: theme
- name: enable
  endpoint:
    path: /enable
    method: POST
    data_selector: theme
- name: get
  endpoint:
    path: /get
    method: GET
    data_selector: theme
- name: names
  endpoint:
    path: /names
    method: GET
    data_selector: themes
- name: options
  endpoint:
    path: /options
    method: GET
    data_selector: options
- name: register
  endpoint:
    path: /register
    method: POST
    data_selector: theme
- name: unregister
  endpoint:
    path: /unregister
    method: DELETE
    data_selector: theme
- name: data
  endpoint:
    path: /data
    method: GET
    data_selector: records
    params: {}
- name: sphere
  endpoint:
    path: /sphere
    method: GET
    data_selector: data
    params: {}
- name: geojson
  endpoint:
    path: /geojson
    method: GET
    data_selector: features
    params: {}
- name: topojson
  endpoint:
    path: /topojson
    method: GET
    data_selector: features
    params: {}
- name: active
  endpoint:
    path: /active
    method: GET
    data_selector: theme
- name: enable
  endpoint:
    path: /enable
    method: POST
    data_selector: theme
- name: get
  endpoint:
    path: /get
    method: GET
    data_selector: theme
- name: names
  endpoint:
    path: /names
    method: GET
    data_selector: themes
- name: options
  endpoint:
    path: /options
    method: GET
    data_selector: options
- name: register
  endpoint:
    path: /register
    method: POST
    data_selector: theme
- name: unregister
  endpoint:
    path: /unregister
    method: DELETE
    data_selector: theme
- name: projection
  endpoint:
    path: /user_guide/generated/core/altair.Projection.html
    method: GET
    data_selector: projections
    params: {}
- name: error_bars
  endpoint:
    path: /error_bars
    method: GET
    data_selector: error_bars_data
- name: points
  endpoint:
    path: /points
    method: GET
    data_selector: points_data
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Altair works best with long-form data.
- Altair works best when the Geospatial Data adopts the World Geodetic System 1984
  as its geographic coordinate reference system with units in decimal degrees.
- Altair does NOT follow the right-hand rule for geometries, but uses the left-hand
  rule.
- Specifying the correct type for your data is important, as it affects the way Altair
  represents your encoding in the resulting plot.
- Default value for aggregate is undefined.
- Default value for align is all.
- Default value for bin is false.
- Default value for center is false.
- Default value for sort is ascending.
- Default value for spacing depends on the view composition configuration.
- Default value for timeUnit is undefined.
- Default value for title is derived from the field’s name.
- Default value for type is nominal.
- Specific channels can take a sort property which determines the order of the scale
  being used for the channel.
- There are a number of different sort options available.
- The key to creating meaningful visualizations is to map properties of the data to
  visual properties.
- Default value for aggregate is undefined (None)
- Default value for align is 'all'
- Default value for bounds is 'full'
- Default value for center is false
- Default value for bin is false
- Default value for spacing depends on the view composition configuration
- Default value for sort is 'ascending'
- Default value for title is derived from the field’s name and transformation function
- Default value for type is 'nominal'
- Altair visualizations are built on the concept of the database-style grouping and
  aggregation.
- Methods and properties for configuring chart themes are outlined.
- Disable axis by default.
- A boolean flag indicating if grid lines should be included as part of the axis.
- The orientation of the axis. One of "top", "bottom", "left" or "right".
- Default value for zindex is 0 (behind the marks).
- The `Chart.configure_header()` method allows configuration of facet headers, including
  the font, color, size, and position of the title and labels.
- Currently Altair does not offer many built-in themes, but we plan to add more options
  in the future.
- Saving images requires additional extensions to run the javascript code necessary
  to interpret the Vega-Lite specification.
- The width of the bars in a bar plot are controlled through the size property in
  the mark_bar()
- The width of the chart containing the bar plot can be controlled through setting
  the width property of the chart
- In the case of faceted or other compound charts, this width and height applies to
  the subchart rather than to the overall chart
- If you want your chart size to respond to the width of the HTML page or container
  in which it is rendered, you can set width or height to the string 'container'
- Working with dates, times, and timezones is often one of the more challenging aspects
  of data analysis.
- If you want timezone-aware data to appear the same to every user regardless of location,
  the best approach is to adopt a standard timezone in which to render the data.
- Altair does not produce plots consisting of pixels, but plots consisting of data
  plus a visualization specification.
- If you are certain you would like to embed your dataset within the visualization
  specification, you can disable the MaxRows check.
- Charts may not display properly in old browsers that do not support JavaScript's
  ECMAScript 6.
- If using a notebook environment, the chart is only displayed if the last line of
  the cell evaluates to a chart object.
- Altair produces Vega-Lite visualizations, which require a Javascript frontend to
  display the charts.
- Altair charts work out-of-the-box on Jupyter Notebook, JupyterLab, Zeppelin, and
  related notebook environments.
- The data transformation API of Altair should not be confused with the `transform`
  API of Vega and Vega-Lite.
- Dataset consolidation is set to `True` by default.
- This example is a reproduction of the Falkensee plot found in the vega-lite examples.
- Best to use WGS 1984 for geographic data.
- Avoid projected data in Altair; reproject to EPSG:4326 first.
- Altair is built around the pandas Dataframe.
- Datasets are most commonly provided as a Dataframe.
- A Ridgeline plot lets you visualize distribution of a numeric value for different
  subsets of data.
- Uses long-form data for best compatibility with Altair's grammar.
- For geographic data it is best to use the World Geodetic System 1984 as its geographic
  coordinate reference system with units in decimal degrees.
- Altair visualizations are built around pandas Dataframes.
- The main object is Chart, which takes a dataframe as an argument.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'MaxRowsError: The number of rows in your dataset is greater than the maximum allowed
  (5000).'
- JavaScript output is disabled in JupyterLab
- No 'notebook' entry point found in group 'altair.vegalite.v2.renderer'
- 'MaxRowsError: Raise if a Dataframe has more than `max_rows` rows.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://altair-viz.github.io
source_metadata: null
