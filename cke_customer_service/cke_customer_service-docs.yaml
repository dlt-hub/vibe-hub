resources:
- name: collaborative_editing_sessions
  endpoint:
    path: /collaborations/{document_id}
    method: get
- name: documents
  endpoint:
    path: /documents/{document_id}
    method: get
- name: create_collaborative_editing_session
  endpoint:
    path: /collaborations
    method: post
- name: organization_statistics
  endpoint:
    path: /organization-statistics
    method: GET
    data_selector: results
- name: stored_documents
  endpoint:
    path: /documents
    method: GET
    data_selector: documents
    params:
      limit: 25
      sort_by: created_at
      order: asc
- name: comments
  endpoint:
    path: /comments
    method: GET
    data_selector: comments
    params:
      limit: 25
      sort_by: created_at
      order: asc
- name: suggestions
  endpoint:
    path: /suggestions
    method: GET
    data_selector: suggestions
    params:
      limit: 25
      sort_by: created_at
      order: asc
- name: get_organization_statistics
  endpoint:
    path: get/organization-statistics
    method: GET
    data_selector: records
- name: get_all_users
  endpoint:
    path: get/all-users
    method: GET
    data_selector: records
- name: get_business_logs
  endpoint:
    path: get/business-logs
    method: GET
    data_selector: logs
- name: restore_collaborative_session
  endpoint:
    path: /restore-collaborative-session
    method: POST
    data_selector: response
    params:
      document_id: required
- name: trigger_saving_document
  endpoint:
    path: /trigger-saving-document
    method: POST
    data_selector: response
    params:
      document_id: required
- name: disconnect_user
  endpoint:
    path: /disconnect-user
    method: POST
    data_selector: response
    params:
      user_id: required
      document_ids: optional
- name: get_connected_socket_ids
  endpoint:
    path: /get-connected-socket-ids
    method: GET
    data_selector: response
    params:
      document_id: required
      details: optional
- name: get_connected_user_ids
  endpoint:
    path: /get-connected-user-ids
    method: GET
    data_selector: response
    params:
      document_id: required
      details: optional
- name: copy_document
  endpoint:
    path: /copy-document
    method: POST
    data_selector: response
    params:
      source_document_id: required
      target_document_id: required
- name: export_document
  endpoint:
    path: /export-document
    method: GET
    data_selector: response
    params:
      source_document_id: required
      include_deleted: optional
      omit_comments: optional
      omit_suggestions: optional
      omit_revisions: optional
- name: remove_document
  endpoint:
    path: /remove-document
    method: DELETE
    data_selector: response
    params:
      source_document_id: required
- name: import_document
  endpoint:
    path: /import-document
    method: POST
    data_selector: response
    params:
      id: required
      content: required
- name: delete_revision
  endpoint:
    path: /delete-revision
    method: DELETE
    data_selector: response
    params:
      revision_id: required
      document_id: required
- name: get_revision
  endpoint:
    path: /get-revision
    method: GET
    data_selector: response
    params:
      revision_id: required
      document_id: required
- name: get_all_revisions
  endpoint:
    path: /get-all-revisions
    method: GET
    data_selector: response
    params:
      document_id: required
      cursor: optional
      limit: optional
      sort_by: optional
      order: optional
- name: delete_all_revisions
  endpoint:
    path: /delete-all-revisions
    method: DELETE
    data_selector: response
    params:
      document_id: required
- name: delete_document_content
  endpoint:
    path: /delete-document-content
    method: DELETE
    data_selector: response
    params:
      document_id: required
- name: get_document_content
  endpoint:
    path: /get-document-content
    method: GET
    data_selector: response
    params:
      document_id: required
      details: optional
- name: revisions
  endpoint:
    path: /revisions
    method: get
    data_selector: revisions
    params:
      limit: 3
- name: comments
  endpoint:
    path: /comments
    method: get
    data_selector: comments
    params:
      limit: 25
- name: collaboration_session
  endpoint:
    path: /collaborations/{document_id}/evaluate-script
    method: POST
    data_selector: data
    params: {}
- name: document_exists
  endpoint:
    path: /collaborations/{document_id}/exists
    method: GET
    data_selector: data
    params: {}
- name: export_content
  endpoint:
    path: /collaborations/{document_id}
    method: GET
    data_selector: data
    params: {}
- name: copy_document
  endpoint:
    path: /documents/{source_document_id}
    method: POST
- name: export_document
  endpoint:
    path: /documents/{source_document_id}
    method: GET
- name: remove_document
  endpoint:
    path: /documents/{source_document_id}
    method: DELETE
- name: import_document
  endpoint:
    path: /documents
    method: POST
- name: get_business_logs
  endpoint:
    path: /insights/business-logs
    method: GET
- name: check_editor_bundle_exists
  endpoint:
    path: /editors/{bundle_version}/exists
    method: GET
- name: get_editor_bundle_config
  endpoint:
    path: /editors/{bundle_version}/config
    method: GET
- name: get_editor_bundle
  endpoint:
    path: /editors/{bundle_version}
    method: GET
- name: upload_editor_bundle
  endpoint:
    path: /editors
    method: POST
- name: document_storage
  endpoint:
    path: /document/storage
    method: GET
- name: comments
  endpoint:
    path: /comments
    method: GET
- name: suggestions
  endpoint:
    path: /suggestions
    method: GET
- name: environments
  endpoint:
    path: /environments
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: collaboration_snapshots
  endpoint:
    path: /collaboration/snapshots
    method: GET
- name: editor_bundles
  endpoint:
    path: /editor/bundles
    method: GET
- name: insights
  endpoint:
    path: /insights
    method: GET
- name: statistics
  endpoint:
    path: /statistics
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: document
  endpoint:
    path: /api/v1/documents
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: comment
  endpoint:
    path: /comments
    method: GET
    data_selector: data
    params: {}
- name: comment_thread
  endpoint:
    path: /comment_threads
    method: GET
    data_selector: data
    params: {}
- name: comments
  endpoint:
    path: /api/v3/{environment_id}/comments/{comment_id}
    method: GET
    data_selector: id
    params: {}
- name: UsersPaginated
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: BusinessLogs
  endpoint:
    path: /api/business-logs
    method: GET
    data_selector: data
    params: {}
- name: revisions
  endpoint:
    path: /revisions
    method: GET
    data_selector: data
    params: {}
- name: comments
  endpoint:
    path: /comments
    method: GET
    data_selector: data
    params: {}
- name: collaborations_exists
  endpoint:
    path: /collaborations/{document_id}/exists
    method: GET
    data_selector: content
    params: {}
- name: collaborations_flush
  endpoint:
    path: /collaborations/{document_id}
    method: DELETE
    data_selector: content
    params: {}
- name: collaborations_users
  endpoint:
    path: /collaborations/{document_id}/users
    method: GET
    data_selector: content
    params: {}
- name: comments_get
  endpoint:
    path: /comments
    method: GET
    data_selector: content
    params: {}
- name: comments_add
  endpoint:
    path: /comments
    method: POST
    data_selector: content
    params: {}
- name: comments_delete
  endpoint:
    path: /comments/{comment_id}
    method: DELETE
    data_selector: content
    params: {}
- name: comment
  endpoint:
    path: /comments
    method: GET
    data_selector: data
    params: {}
- name: suggestion
  endpoint:
    path: /suggestions
    method: GET
    data_selector: data
    params: {}
- name: get_organization_statistics
  endpoint:
    path: /organization-statistics
    method: GET
    data_selector: data
    params: {}
- name: get_comments
  endpoint:
    path: /comments
    method: GET
    data_selector: data
    params: {}
- name: add_comment
  endpoint:
    path: /comments
    method: POST
    data_selector: data
    params: {}
- name: delete_comment
  endpoint:
    path: /comments/{comment_id}
    method: DELETE
    data_selector: data
    params: {}
- name: get_suggestions
  endpoint:
    path: /suggestions
    method: GET
    data_selector: data
    params: {}
- name: add_suggestion
  endpoint:
    path: /suggestions
    method: POST
    data_selector: data
    params: {}
- name: delete_suggestion
  endpoint:
    path: /suggestions/{suggestion_id}
    method: DELETE
    data_selector: data
    params: {}
- name: UsersPaginated
  endpoint:
    path: /users/paginated
    method: GET
    data_selector: data
- name: BusinessLogs
  endpoint:
    path: /business/logs
    method: GET
    data_selector: data
- name: suggestions
  endpoint:
    path: /suggestions
    method: GET
    data_selector: records
- name: suggestion
  endpoint:
    path: /suggestions/{suggestion_id}
    method: GET
    data_selector: records
- name: organization-statistics
  endpoint:
    path: /organization-statistics
    method: GET
    data_selector: UsersStatistics
- name: comments
  endpoint:
    path: /comments
    method: GET
    data_selector: CommentsPaginatedLegacy
- name: CommentLegacy
  endpoint:
    path: /comments
    method: GET
    data_selector: data
    params: {}
- name: CommentPayloadLegacy
  endpoint:
    path: /comments/payload
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
notes:
- To use the Insights feature, it must be enabled in the Management Panel.
- Uses OAuth2 — requires setup of connected app in api
- The script execution time is limited to 18 seconds.
- If the document storage feature is enabled, it is possible to recreate a collaborative
  editing session.
- To use the import document endpoint, an editor bundle must be uploaded to the system
  unless the use_initial_data flag is set to true.
- To use the insights endpoint, the Insights feature must be enabled in Management
  Panel.
- The document storage feature is not enabled by default and requires an uploaded
  editor bundle with its full configuration.
- Changes done using the REST API will not be propagated to documents in real-time.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Some objects may return nulls in deeply nested fields
- Some objects like Comment may return nulls in deeply nested fields
- Uses HMAC for authorization.
- The CKEditor Cloud Services REST APIs use HMAC Authentication.
errors:
- '401 Unauthorized: Check your HMAC signature and timestamp'
- '401 Unauthorized: Recheck HMAC configuration or credentials.'
- 401 Unauthorized
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '404 Not Found: Check the provided document or revision ID'
- '404 Not Found: Document ID does not exist'
- '400: Bad request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not found'
- '500: Internal server error'
- '400 Bad Request: Validation failed.'
- '401 Unauthorized: Invalid token.'
- '409 Conflict: Document already exists.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 404 The specified resource was not found.
- 409 Conflict - the comment already exists in the system.
- 'InternalServerError: Unhandled exception'
- 'SnakeCaseUnauthorized: Invalid token.'
- 'SnakeCaseNotFound: The specified resource was not found.'
- 'SnakeCaseConflict: Conflict'
- 'Forbidden: Environment has no access to the service.'
- 'SnakeCaseBadRequest: Validation failed.'
- 'BadRequest: Validation failed.'
- 'Unauthorized: Invalid token.'
- '401 Unauthorized: Check HMAC credentials.'
- 'NotFound: The specified resource was not found.'
- 'Conflict: Example resource already exists.'
- 'Bad Request: Validation failed.'
- '422 Unprocessable Content: The specified resource may not be processable due to
  various reasons.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - HMAC
client:
  base_url: https://{organization_id}.cke-cs.com/api/v5
  auth:
    type: HMAC
source_metadata: null
