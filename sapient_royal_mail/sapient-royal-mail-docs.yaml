resources:
- name: shipments
  endpoint:
    path: /reference/post_v4-shipments-rm
    method: POST
- name: create_shipment
  endpoint:
    path: /shipments/rm
    method: POST
- name: carriers
  endpoint:
    path: /carriers
    method: GET
- name: shipment_processing
  endpoint:
    path: /shipment-processing
    method: GET
    data_selector: shipments
- name: cancelled_shipments
  endpoint:
    path: /api/cancelled_shipment
    method: POST
    data_selector: records
- name: Recall shipment
  endpoint:
    path: /api/recall-shipment
    method: GET
- name: hold_shipment
  endpoint:
    path: /api/hold_shipment
    method: GET
    data_selector: shipments
    params: {}
- name: held_shipments
  endpoint:
    path: /api/release-shipments
    method: POST
    data_selector: shipments
    params: {}
- name: manifest_history
  endpoint:
    path: /manifest/history
    method: GET
    data_selector: records
    params: {}
- name: shipping_account
  endpoint:
    path: /shipping/account
    method: GET
    data_selector: account_data
    params: {}
- name: delete_shipping_account
  endpoint:
    path: /reference/delete_v4-shippingaccounts-carriercode-shippingaccountid
    method: DELETE
- name: shipping_location
  endpoint:
    path: /api/v1/shippinglocations
    method: POST
    data_selector: data
    params: {}
- name: link_shipping_location
  endpoint:
    path: /link_shipping_location
    method: POST
- name: product
  endpoint:
    path: /api/v1/products
    method: POST
    data_selector: product
    params: {}
- name: delete_user
  endpoint:
    path: /users/delete
    method: DELETE
- name: address
  endpoint:
    path: /docs/add-address
    method: POST
- name: add_address
  endpoint:
    path: /reference/post_v4-addresses
    method: POST
- name: edit_address
  endpoint:
    path: /v4/addresses/{addressId}
    method: PUT
    data_selector: address
- name: vat_eori_number
  endpoint:
    path: /api/vat-eori-numbers
    method: POST
    data_selector: data
    params: {}
- name: create_shipments
  endpoint:
    path: /reference/post_v4-shipments-rm
    method: POST
- name: create_shipment
  endpoint:
    path: /reference/post_v4-shipments-rm
    method: POST
- name: CreateShipment
  endpoint:
    path: /reference/post_v4-shipments-rm
    method: POST
    data_selector: shipmentDetails
    params: {}
- name: PrintLabel
  endpoint:
    path: /reference/get_v4-shipments-printlabel-rm-shipmentid
    method: GET
    data_selector: labelDetails
    params: {}
- name: shipment
  endpoint:
    path: /create-shipments
    method: POST
    data_selector: success
- name: defer_shipment
  endpoint:
    path: /api/defer-shipments
    method: POST
    data_selector: success
    params: {}
- name: manifest_shipments
  endpoint:
    path: /manifest-shipments
    method: GET
- name: shipments
  endpoint:
    path: /v4/shipments/rm
    method: POST
    data_selector: ShipmentInformation
    params: {}
- name: create_shipment
  endpoint:
    path: /v4/shipments/rm
    method: POST
    data_selector: ShipmentInformation
    params: {}
- name: shipment
  endpoint:
    path: /shipment
    method: GET
    data_selector: records
- name: tracking_webhook
  endpoint:
    path: /create-tracking-webhook
    method: POST
- name: tracking_account
  endpoint:
    path: /api/tracking_accounts
    method: POST
    data_selector: tracking_account
    params: {}
- name: tracking_event
  endpoint:
    path: /webhook/tracking
    method: POST
- name: tracking_account
  endpoint:
    path: /api/webhooks/tracking_accounts
    method: POST
    data_selector: trackingAccount
    params: {}
- name: tracking_events
  endpoint:
    path: /tracking/events
    method: GET
    data_selector: events
- name: tracking_milestones
  endpoint:
    path: /tracking/milestones
    method: GET
    data_selector: milestones
- name: tracking_events
  endpoint:
    path: /tracking/events
    method: GET
    data_selector: events
- name: tracking_milestones
  endpoint:
    path: /tracking/milestones
    method: GET
    data_selector: milestones
- name: Hurricane Duty and Tax Calculator
  endpoint:
    path: /api/quoted_landed_cost
    method: GET
    data_selector: cost_details
- name: prohibited_items
  endpoint:
    path: /reference/post_v4-prohibiteditems
    method: GET
    data_selector: items
- name: denied_parties
  endpoint:
    path: /api/denied_parties
    method: GET
- name: commodity_code_validation
  endpoint:
    path: /reference/post_v4-getcommoditycodevalidations
    method: GET
- name: shipment
  endpoint:
    path: /api/shipment
    method: POST
    data_selector: Packages
    params: {}
- name: create_shipment
  endpoint:
    path: /createShipmentRequest
    method: POST
    data_selector: createShipmentResponse
- name: Create Shipment
  endpoint:
    path: /v4/shipments/rm
    method: POST
- name: Update Status to Cancel
  endpoint:
    path: /v4/shipments/status
    method: PUT
- name: Add Container
  endpoint:
    path: /v4/internationalarrivalscontainers-rm
    method: POST
- name: Get Containers
  endpoint:
    path: /v4/internationalarrivalscontainers-rm
    method: GET
- name: Update Container
  endpoint:
    path: /v4/internationalarrivalscontainers-rm-update-containerid
    method: PUT
- name: Add / Remove Shipments
  endpoint:
    path: /v4/internationalarrivalscontainers-rm-containerid
    method: PUT
- name: Delete Container
  endpoint:
    path: /v4/internationalarrivalscontainers-rm-containerid
    method: DELETE
- name: Get Container
  endpoint:
    path: /v4/internationalarrivalscontainers-rm-containerid
    method: GET
- name: Manifest Shipments
  endpoint:
    path: /v4/manifests-carriercode
    method: POST
- name: Royal Mail
  endpoint:
    path: /docs/royal-mail
    method: GET
- name: Royal Mail Importers
  endpoint:
    path: /docs/rm-importers
    method: GET
- name: EVRi
  endpoint:
    path: /docs/evri
    method: GET
- name: YODEL
  endpoint:
    path: /docs/yodel
    method: GET
- name: UPS
  endpoint:
    path: /docs/ups
    method: GET
- name: DX
  endpoint:
    path: /docs/dx
    method: GET
- name: DX Freight
  endpoint:
    path: /docs/dx-freight#/
    method: GET
- name: The Delivery Group
  endpoint:
    path: /docs/the-delivery-group#/
    method: GET
- name: FedEx
  endpoint:
    path: /docs/fedex#/
    method: GET
- name: international_services
  endpoint:
    path: /api/international_services
    method: GET
- name: Shipper Address
  endpoint:
    path: /api/shipper-address
    method: GET
    data_selector: address
    params:
      mandatory: true
- name: Return Address
  endpoint:
    path: /api/return-address
    method: GET
    data_selector: address
    params:
      mandatory: true
- name: Manifest
  endpoint:
    path: /api/manifest
    method: GET
    data_selector: manifest
    params:
      mandatory: true
- name: Royal Mail Sign Off
  endpoint:
    path: /api/royal-mail-sign-off
    method: GET
    data_selector: signOff
    params:
      mandatory: true
- name: createShipment
  endpoint:
    path: /createShipment
    method: POST
    data_selector: createShipmentResponse
- name: Create Shipment
  endpoint:
    path: /create-shipment
    method: POST
    data_selector: requirements
    params: {}
- name: shipper
  endpoint:
    path: /shipper
    method: GET
    data_selector: details
    params: {}
- name: destination
  endpoint:
    path: /destination
    method: GET
    data_selector: details
    params: {}
- name: shipment_information
  endpoint:
    path: /shipment_information
    method: GET
    data_selector: details
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: details
    params: {}
- name: customs
  endpoint:
    path: /customs
    method: GET
    data_selector: details
    params: {}
- name: create_shipment
  endpoint:
    path: /v4/shipments/rm
    method: POST
- name: update_status_cancel
  endpoint:
    path: /v4/shipments/status
    method: PUT
- name: add_container
  endpoint:
    path: /v4/internationalarrivalscontainers-rm
    method: POST
- name: get_containers
  endpoint:
    path: /v4/internationalarrivalscontainers-rm
    method: GET
- name: update_container
  endpoint:
    path: /v4/internationalarrivalscontainers-rm-update-containerid
    method: PUT
- name: add_remove_shipments
  endpoint:
    path: /v4/internationalarrivalscontainers-rm-containerid
    method: PUT
- name: delete_container
  endpoint:
    path: /v4/internationalarrivalscontainers-rm-containerid
    method: DELETE
- name: get_container
  endpoint:
    path: /v4/internationalarrivalscontainers-rm-containerid
    method: GET
- name: manifest_shipments
  endpoint:
    path: /v4/manifests-carriercode
    method: POST
- name: barcode_range
  endpoint:
    path: /international-arrival-containers/barcode-range
    method: POST
    data_selector: barcodeRange
    params: {}
- name: shipper_address
  endpoint:
    path: /api/shipper_address
    method: GET
    data_selector: address
    params: {}
- name: return_address
  endpoint:
    path: /api/return_address
    method: GET
    data_selector: address
    params: {}
- name: manifest
  endpoint:
    path: /api/manifest
    method: GET
    data_selector: manifest
    params: {}
- name: royal_mail_sign_off
  endpoint:
    path: /api/royal_mail_sign_off
    method: GET
    data_selector: sign_off
    params: {}
- name: Create Shipment
  endpoint:
    path: /reference/post_v4-shipments-rm#/
    method: POST
    data_selector: records
- name: Add/Remove Shipments
  endpoint:
    path: /reference/put_v4-internationalarrivalscontainers-rm-containerid#/
    method: PUT
    data_selector: records
- name: Manifest Shipment
  endpoint:
    path: /reference/post_v4-manifest#/
    method: POST
    data_selector: records
- name: shipper
  endpoint:
    path: /freight-2-post/shipper
    method: GET
    data_selector: shipper_details
- name: destination
  endpoint:
    path: /freight-2-post/destination
    method: GET
    data_selector: destination_details
- name: shipment_information
  endpoint:
    path: /freight-2-post/shipment_information
    method: GET
    data_selector: shipment_info
- name: items
  endpoint:
    path: /freight-2-post/items
    method: GET
    data_selector: item_details
- name: customs
  endpoint:
    path: /freight-2-post/customs
    method: GET
    data_selector: customs_details
- name: Create Shipment
  endpoint:
    path: /create-shipment
    method: POST
- name: Print Label
  endpoint:
    path: /print-label
    method: POST
- name: Print My Label QR Code
  endpoint:
    path: /print-my-label-qr-code
    method: POST
- name: Pre Allocate Tracking Number
  endpoint:
    path: /pre-allocate-tracking-number
    method: POST
- name: Offline Barcoding
  endpoint:
    path: /offline-barcoding
    method: POST
- name: PUDO Locations
  endpoint:
    path: /pudo-locations
    method: GET
- name: International Arrivals Containers
  endpoint:
    path: /international-arrivals-containers
    method: POST
- name: Shipping Account
  endpoint:
    path: /docs/add-a-shipping-account
    method: GET
- name: Tracking Webhook
  endpoint:
    path: /docs/tracking-webhook-1
    method: GET
- name: shipping_account
  endpoint:
    path: /api/shipping-account
    method: POST
    data_selector: account_details
- name: Get Account
  endpoint:
    path: /reference/get_v4-shippingaccounts-rm-shippingaccountid
    method: GET
- name: Add Shipping Account
  endpoint:
    path: /docs/shipping-account-requirements
    method: POST
- name: Add Royal Mail Tracking Account
  endpoint:
    path: /docs/royal-mail-tracking-account-setup
    method: POST
- name: Create Shipment
  endpoint:
    path: /reference/post_v4-shipments-rm#/
    method: POST
    data_selector: results
- name: Add/Remove Shipments
  endpoint:
    path: /reference/put_v4-internationalarrivalscontainers-rm-containerid#/
    method: PUT
    data_selector: results
- name: Manifest Container
  endpoint:
    path: /reference/post_v4-manifest#/
    method: POST
    data_selector: results
- name: containers
  endpoint:
    path: /api/v1/containers
    method: GET
    data_selector: records
- name: tracking_account
  endpoint:
    path: /api/tracking/accounts
    method: POST
    data_selector: trackingAccount
    params: {}
- name: createShipment
  endpoint:
    path: /createShipment
    method: POST
    data_selector: shipmentResponse
    params: {}
- name: combined_label
  endpoint:
    path: /docs/combined-label
    method: GET
    data_selector: combined_label_data
- name: Create Shipment
  endpoint:
    path: /reference/post_v4-shipments-rm
    method: POST
- name: Print My Label QR Code
  endpoint:
    path: /reference/get_v4-shipments-printmylabelqrcode-rm-shipmentid
    method: GET
- name: Create Shipment
  endpoint:
    path: /reference/post_v4-shipments-rm
    method: POST
- name: Create Shipment
  endpoint:
    path: /create-shipment
    method: POST
- name: Print Label
  endpoint:
    path: /print-label
    method: POST
- name: Print My Label QR Code
  endpoint:
    path: /print-my-label-qr-code
    method: POST
- name: Pre Allocate Tracking Number
  endpoint:
    path: /pre-allocate-tracking-number
    method: POST
- name: Offline Barcoding
  endpoint:
    path: /offline-barcode
    method: POST
- name: PUDO Locations
  endpoint:
    path: /pudo-locations
    method: GET
- name: International Arrivals Containers
  endpoint:
    path: /international-arrivals-containers
    method: POST
- name: pudo_locations
  endpoint:
    path: /v4/pudolocations/{carriercode}/{countrycode}/{postcode}
    method: GET
    data_selector: locations
- name: create_shipment
  endpoint:
    path: /v4/shipments-rm
    method: POST
    data_selector: shipment
- name: hazmat_label
  endpoint:
    path: /create-shipment
    method: POST
    data_selector: ID8000Label
    params: {}
- name: shipping_account
  endpoint:
    path: /shipping-accounts
    method: POST
    data_selector: account_details
- name: Get Account
  endpoint:
    path: /reference/get_v4-shippingaccounts-rm-shippingaccountid
    method: GET
- name: Add Shipping Account
  endpoint:
    path: /docs/shipping-account-requirements
    method: POST
- name: Add Royal Mail Tracking Account
  endpoint:
    path: /royal-mail-tracking-account-setup
    method: POST
- name: Session API
  endpoint:
    path: /session
    method: POST
- name: Consignment API
  endpoint:
    path: /shipments
    method: POST
- name: Label API
  endpoint:
    path: /labels
    method: GET
- name: Cancel API
  endpoint:
    path: /cancellations
    method: POST
- name: Tracking API
  endpoint:
    path: /tracking
    method: GET
- name: tracking_account
  endpoint:
    path: /api/tracking/accounts
    method: POST
    data_selector: account
    params: {}
- name: createShipment
  endpoint:
    path: /createShipment
    method: POST
    data_selector: shipmentResponse
    params: {}
- name: shipping_account
  endpoint:
    path: /api/v1/shipping_accounts
    method: POST
    data_selector: data
    params: {}
- name: Create Shipment
  endpoint:
    path: /reference/post_v4-shipments-rm
    method: POST
    data_selector: label
    params: {}
- name: Print My Label QR Code
  endpoint:
    path: /reference/get_v4-shipments-printmylabelqrcode-rm-shipmentid
    method: GET
    data_selector: qr_code
    params: {}
- name: Create Shipment
  endpoint:
    path: /reference/post_v4-shipments-rm
    method: POST
- name: hazmat_label
  endpoint:
    path: /generate/hazmat/ID8000
    method: POST
    data_selector: label
    params: {}
- name: Get Session Key
  endpoint:
    path: /get-session-key
    method: POST
- name: Add Consignment
  endpoint:
    path: /add-consignment
    method: POST
- name: Get Labels
  endpoint:
    path: /get-labels
    method: GET
- name: Delete Consignment
  endpoint:
    path: /delete-consignment
    method: DELETE
- name: shipping_account
  endpoint:
    path: /add-dx-freight-shipping-account
    method: GET
- name: shipping_accounts
  endpoint:
    path: /add-dx-freight-shipping-account
    method: POST
    data_selector: shipping_account
    params: {}
- name: shipping_account
  endpoint:
    path: /shipping-accounts-5
    method: GET
- name: tracking_account
  endpoint:
    path: /api/tracking_accounts
    method: POST
    data_selector: trackingAccount
- name: Get Account
  endpoint:
    path: /v4/shippingAccounts/DX/{shippingAccountId}
    method: GET
- name: shipping
  endpoint:
    path: /docs/shipping
    method: GET
- name: tracking
  endpoint:
    path: /docs/tracking
    method: GET
- name: tracking_account
  endpoint:
    path: /api/tracking_accounts
    method: POST
    data_selector: tracking_accounts
    params: {}
- name: shipping_account
  endpoint:
    path: /docs/shipping-account-setup-3
    method: GET
- name: shipping_account
  endpoint:
    path: /add-shipping-account
    method: POST
    data_selector: accountDetails
- name: child_client_department
  endpoint:
    path: /api/child_client_department
    method: POST
    data_selector: result
    params:
      shipping_account_name: required
      child_client_id: required
      child_client_name: required
      sms_alert_group_code: optional
- name: tracking_account
  endpoint:
    path: /tracking/accounts
    method: POST
- name: Create Shipment
  endpoint:
    path: /create-shipment
    method: POST
- name: Cancel Shipment
  endpoint:
    path: /cancel-shipment
    method: POST
- name: Get Session Key
  endpoint:
    path: /api/get-session-key
    method: POST
- name: Add Consignment
  endpoint:
    path: /api/add-consignment
    method: POST
- name: Get Labels
  endpoint:
    path: /api/get-labels
    method: GET
- name: Delete Consignment
  endpoint:
    path: /api/delete-consignment
    method: DELETE
- name: shipping_account
  endpoint:
    path: /add-fedex-shipping-account
    method: GET
- name: shipping_account
  endpoint:
    path: /add-dx-freight-shipping-account
    method: GET
- name: tracking_account
  endpoint:
    path: /add-dx-freight-tracking-account
    method: GET
- name: shipping_account
  endpoint:
    path: /specify-shipping-account-details
    method: GET
    data_selector: account_details
    params: {}
- name: shipping_account
  endpoint:
    path: /add-dx-freight-shipping-account
    method: POST
- name: EULA Confirmation
  endpoint:
    path: /confirm-fedex-eula
    method: GET
- name: Get Account
  endpoint:
    path: /v4/shippingAccounts/DX/{shippingAccountId}
    method: GET
- name: shipping_address_details
  endpoint:
    path: /specify-shipping-address-details
    method: GET
    data_selector: address_details
    params: {}
- name: MFA_Stage_2
  endpoint:
    path: /initiate-multi-factor-authentication-process
    method: GET
- name: tracking_account
  endpoint:
    path: /api/tracking_accounts
    method: POST
    data_selector: data
- name: edit_shipping_account
  endpoint:
    path: /edit-fedex-shipping-account
    method: GET
- name: shipping_account
  endpoint:
    path: /docs/shipping-account-setup-3
    method: GET
- name: tracking_account
  endpoint:
    path: /docs/tracking-account-setup
    method: GET
- name: signatures_and_logos
  endpoint:
    path: /customs_settings/signatures_and_logos
    method: POST
    data_selector: results
- name: shipping_account
  endpoint:
    path: /api/shipping-accounts
    method: POST
    data_selector: account_details
- name: tracking_account
  endpoint:
    path: /api/tracking_accounts
    method: POST
    data_selector: tracking_accounts
    params: {}
- name: Child Client Department
  endpoint:
    path: /api/v1/add-child-client-department
    method: POST
    data_selector: result
    params:
      shipping_account_name: ''
      child_client_id: ''
      child_client_name: ''
      sms_alert_group_code: ''
- name: Create Parcel B2C
  endpoint:
    path: /api/create-parcel-b2c
    method: POST
- name: Create Parcel Returns
  endpoint:
    path: /api/create-parcel-returns
    method: POST
- name: Get Label/QR Code
  endpoint:
    path: /api/get-label-qr
    method: GET
- name: Get PUDO Locations
  endpoint:
    path: /api/get-pudo-locations
    method: GET
- name: Add InPost shipping account
  endpoint:
    path: /docs/add-inpost-shipping-account
    method: GET
- name: Create Shipment
  endpoint:
    path: /create/shipment
    method: POST
- name: Cancel Shipment
  endpoint:
    path: /cancel/shipment
    method: POST
- name: shipping_account
  endpoint:
    path: /add-inpost-shipping-account
    method: POST
- name: shipping_account
  endpoint:
    path: /specify-shipping-account-details
    method: GET
- name: PUDO Locations
  endpoint:
    path: /v4/pudolocations/{carriercode}/{countrycode}/{postcode}
    method: GET
- name: Create Shipment
  endpoint:
    path: /v4/shipments/inpost
    method: POST
- name: Multi-Factor Authentication
  endpoint:
    path: /initiate-multi-factoer-authentication-process
    method: GET
    data_selector: MFA validation details
- name: Edit FedEx shipping account
  endpoint:
    path: /docs/edit-fedex-shipping-account
    method: GET
- name: SubmitItemAPI
  endpoint:
    path: /api/SubmitItemAdvice
    method: POST
    data_selector: response
    params: {}
- name: TrackingAPI
  endpoint:
    path: /api/Tracking
    method: GET
    data_selector: tracking_info
    params: {}
- name: Signatures and Logos
  endpoint:
    path: /customs/settings/signatures-and-logos
    method: POST
    data_selector: documents
    params: {}
- name: shipping_account
  endpoint:
    path: /api/v1/shipping_accounts
    method: POST
    data_selector: shipping_account
    params: {}
- name: CreateParcelB2C
  endpoint:
    path: /api/create-parcel-b2c
    method: POST
- name: CreateParcelReturns
  endpoint:
    path: /api/create-parcel-returns
    method: POST
- name: GetLabelQRCode
  endpoint:
    path: /api/get-label-qr-code
    method: GET
- name: GetPUDOLocations
  endpoint:
    path: /api/get-pudo-locations
    method: GET
- name: Add InPost shipping account
  endpoint:
    path: /docs/add-inpost-shipping-account
    method: GET
- name: shipping_account
  endpoint:
    path: /add-inpost-shipping-account
    method: POST
    data_selector: account_details
    params: {}
- name: Create Shipment
  endpoint:
    path: /create-shipment
    method: POST
- name: Tracking
  endpoint:
    path: /track
    method: GET
- name: Get PUDO Locations
  endpoint:
    path: /reference/get_v4-pudolocations-carriercode-countrycode-postcode
    method: GET
- name: Create InPost Shipment
  endpoint:
    path: /reference/post_v4-shipments-inpost
    method: POST
- name: shipping_account
  endpoint:
    path: /shipping/accounts
    method: POST
    data_selector: account
    params: {}
- name: tracking_account
  endpoint:
    path: /tracking/accounts
    method: POST
    data_selector: details
    params: {}
- name: shipping_account
  endpoint:
    path: /docs/add-a-shipping-account
    method: GET
- name: tracking_account
  endpoint:
    path: /docs/add-the-delivery-group-tracking-account-set-up
    method: GET
- name: shipping_account
  endpoint:
    path: /add-shipping-account
    method: POST
- name: shipping_account
  endpoint:
    path: /api/v1/shipping_accounts
    method: POST
    data_selector: account
    params: {}
- name: tracking_account
  endpoint:
    path: /api/tracking/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: Create Shipment
  endpoint:
    path: /path/to/create-shipment
    method: POST
    data_selector: shipment_response
    params: {}
- name: Tracking
  endpoint:
    path: /path/to/tracking
    method: GET
    data_selector: tracking_response
    params: {}
- name: Create Shipment
  endpoint:
    path: /create-shipment
    method: POST
    data_selector: PartnerDetails
- name: shipping_account
  endpoint:
    path: /shipping-account
    method: GET
- name: tracking_account
  endpoint:
    path: /tracking
    method: GET
- name: Create Shipment
  endpoint:
    path: /create/shipment
    method: POST
- name: Tracking Webhook
  endpoint:
    path: /tracking/webhook
    method: GET
- name: shipping_account
  endpoint:
    path: /add-shipping-account
    method: POST
- name: tracking_account
  endpoint:
    path: /tracking/accounts
    method: GET
    data_selector: tracking_accounts
    params: {}
- name: create_shipment
  endpoint:
    path: /reference/post_v4-shipments-rm
    method: POST
    data_selector: requests
    params: {}
- name: track_shipment
  endpoint:
    path: /reference/get_v4-shippingaccounts
    method: GET
    data_selector: tracking_info
    params: {}
- name: shipping_account
  endpoint:
    path: /docs/shipping-account
    method: GET
- name: tracking_account
  endpoint:
    path: /docs/tracking
    method: GET
- name: shipping_account
  endpoint:
    path: /add-shipping-account
    method: POST
    data_selector: account_details
- name: Shipping Account
  endpoint:
    path: /shipping/account
    method: GET
    data_selector: accounts
- name: International Arrival Containers
  endpoint:
    path: /international/arrival/containers
    method: POST
    data_selector: containers
- name: DX Freight Shipment
  endpoint:
    path: /dx/freight/shipment
    method: POST
    data_selector: shipments
- name: tracking_account
  endpoint:
    path: /api/tracking/accounts
    method: POST
- name: Shipping Account
  endpoint:
    path: /shipping/account
    method: GET
    data_selector: accounts
- name: Shipments
  endpoint:
    path: /shipments
    method: POST
    data_selector: shipment
- name: carriers
  endpoint:
    path: /carriers
    method: GET
- name: Create Shipment
  endpoint:
    path: /services/data/vXX.X/sobjects/CreateShipment
    method: POST
    data_selector: records
- name: carriers
  endpoint:
    path: /reference/get_v4-carriers
    method: GET
- name: shipping_locations
  endpoint:
    path: /reference/get_v4-shippinglocations
    method: GET
- name: shipping_accounts
  endpoint:
    path: /reference/get_v4-shippingaccounts
    method: GET
- name: shipments
  endpoint:
    path: /reference/get_v4-shipments-shippinglocationid
    method: GET
- name: pudo_locations
  endpoint:
    path: /reference/get_v4-pudolocations-carriercode-countrycode-postcode
    method: GET
- name: manifests
  endpoint:
    path: /reference/get_v4-manifests-carriercode
    method: GET
- name: containers
  endpoint:
    path: /reference/get_v4-containers
    method: GET
- name: products
  endpoint:
    path: /reference/get_v4-products
    method: GET
- name: address_book
  endpoint:
    path: /reference/get_v4-addresses
    method: GET
- name: trackings
  endpoint:
    path: /reference/post_v4-trackings
    method: POST
- name: hurricane_services
  endpoint:
    path: /reference/post_v4-deniedparties
    method: POST
- name: reference_data
  endpoint:
    path: /reference/get_v4-countries
    method: GET
- name: Create Shipment
  endpoint:
    path: /create/shipment
    method: POST
- name: Get Carrier Services
  endpoint:
    path: /get/carrier/services
    method: GET
- name: Account Activation
  endpoint:
    path: /account/activation
    method: POST
- name: Tracking Webhook
  endpoint:
    path: /tracking/webhook
    method: POST
- name: PUDO Locations
  endpoint:
    path: /pudo/locations
    method: GET
- name: carriers
  endpoint:
    path: /carriers
    method: GET
    data_selector: records
- name: carrier
  endpoint:
    path: /v4/carriers/{carrierCode}
    method: GET
- name: create_shipment
  endpoint:
    path: /reference/post_v4-shipments-rm
    method: POST
- name: carrier_services
  endpoint:
    path: /v4/carriers/{carrierCode}/services
    method: GET
- name: package_types
  endpoint:
    path: /v4/carriers/{carrierCode}/services/{serviceCode}/packageTypes
    method: GET
    data_selector: records
- name: DX Freight Shipping Account
  endpoint:
    path: /shipping/account
    method: GET
    data_selector: accounts
- name: DX Freight Shipments
  endpoint:
    path: /shipments
    method: POST
    data_selector: shipment
- name: International Arrival Containers
  endpoint:
    path: /international-arrival-containers
    method: POST
    data_selector: containers
- name: Royal Mail Local Collect
  endpoint:
    path: /local-collect
    method: GET
    data_selector: locations
- name: shipping_account
  endpoint:
    path: /api/v1/shipping_account
    method: GET
    data_selector: accounts
- name: shipments
  endpoint:
    path: /api/v1/shipments
    method: POST
    data_selector: shipment
- name: shipping_locations
  endpoint:
    path: /v4/shippingLocations
    method: GET
    data_selector: locations
- name: carriers
  endpoint:
    path: /carriers
    method: GET
- name: Get Carriers
  endpoint:
    path: /reference/get_v4-carriers
    method: GET
- name: shipping_locations
  endpoint:
    path: /v4/shippingLocations
    method: POST
- name: shipping_location
  endpoint:
    path: /v4/shippingLocations/{shippingLocationId}
    method: GET
- name: carriers
  endpoint:
    path: /carriers
    method: GET
- name: update_location
  endpoint:
    path: /v4/shippingLocations/{shippingLocationId}
    method: PUT
- name: carrier
  endpoint:
    path: /carriers/{carrierCode}
    method: GET
- name: carrier_services
  endpoint:
    path: /v4/carriers/{carrierCode}/services
    method: GET
- name: Delete Location
  endpoint:
    path: /v4/shippingLocations/{shippingLocationId}
    method: DELETE
- name: carrier_service_package_types
  endpoint:
    path: /v4/carriers/{carrierCode}/services/{serviceCode}/packageTypes
    method: GET
- name: associated_accounts
  endpoint:
    path: /shippingLocations/{shippingLocationId}/shippingAccounts
    method: GET
- name: carrier_locations
  endpoint:
    path: /shippingLocations/{carrierCode}
    method: GET
- name: shipping_locations
  endpoint:
    path: /v4/shippingLocations
    method: GET
    data_selector: locations
- name: shipping_accounts
  endpoint:
    path: /ShippingAccounts
    method: GET
- name: shipping_location
  endpoint:
    path: /v4/shippingLocations
    method: POST
- name: shipping_location
  endpoint:
    path: /v4/shippingLocations/{shippingLocationId}
    method: GET
- name: shipping_location
  endpoint:
    path: /v4/shippingLocations/{shippingLocationId}
    method: PUT
- name: unlink_locations
  endpoint:
    path: /v4/ShippingAccounts/{carrierCode}/{shippingAccountId}/unlinkLocations
    method: PUT
- name: Delete Location
  endpoint:
    path: /shippingLocations/{shippingLocationId}
    method: DELETE
- name: Get Associated Accounts
  endpoint:
    path: /v4/shippingLocations/{shippingLocationId}/shippingAccounts
    method: GET
    data_selector: null
    params: {}
- name: Carriers
  endpoint:
    path: /reference/get_v4-carriers
    method: GET
- name: Shipping Locations
  endpoint:
    path: /reference/get_v4-shippinglocations
    method: GET
- name: Shipping Accounts
  endpoint:
    path: /reference/get_v4-shippingaccounts
    method: GET
- name: Shipments
  endpoint:
    path: /reference/get_v4-shipments-shippinglocationid
    method: GET
- name: PUDO Locations
  endpoint:
    path: /reference/get_v4-pudolocations-carriercode-countrycode-postcode
    method: GET
- name: Manifests
  endpoint:
    path: /reference/post_v4-manifests-carriercode
    method: POST
- name: Containers
  endpoint:
    path: /reference/get_v4-containers
    method: GET
- name: Products
  endpoint:
    path: /reference/get_v4-products
    method: GET
- name: Address Book
  endpoint:
    path: /reference/get_v4-addresses
    method: GET
- name: Trackings
  endpoint:
    path: /reference/post_v4-trackings
    method: POST
- name: Hurricane Services
  endpoint:
    path: /reference/post_v4-deniedparties
    method: POST
- name: Reference Data
  endpoint:
    path: /reference/get_v4-countries
    method: GET
- name: carrier_locations
  endpoint:
    path: /v4/shippingLocations/{carrierCode}
    method: GET
- name: delete_account
  endpoint:
    path: /ShippingAccounts/{carrierCode}/{shippingAccountId}
    method: DELETE
- name: shipping_accounts
  endpoint:
    path: /ShippingAccounts
    method: GET
- name: shipments
  endpoint:
    path: /v4/shipments/{shippingLocationId}
    method: GET
    data_selector: shipments
    params: {}
- name: unlink_locations
  endpoint:
    path: /v4/ShippingAccounts/{carrierCode}/{shippingAccountId}/unlinkLocations
    method: PUT
- name: print_document
  endpoint:
    path: /v4/shipments/printDocument/{carrierCode}/{shipmentId}
    method: POST
- name: Shipping Accounts
  endpoint:
    path: /reference/get_v4-shippingaccounts
    method: GET
- name: Shipments
  endpoint:
    path: /reference/get_v4-shipments-shippinglocationid
    method: GET
- name: update_status
  endpoint:
    path: /v4/shipments/status
    method: PUT
- name: delete_account
  endpoint:
    path: /ShippingAccounts/{carrierCode}/{shippingAccountId}
    method: DELETE
    data_selector: responses
- name: defer_shipments
  endpoint:
    path: /v4/shipments/defer
    method: PUT
- name: shipments
  endpoint:
    path: /shipments/{shippingLocationId}
    method: GET
- name: commercial_invoice
  endpoint:
    path: /v4/shipments/commercialInvoice/{carrierCode}/{shipmentId}
    method: PUT
- name: Print Document
  endpoint:
    path: /v4/shipments/printDocument/{carrierCode}/{shipmentId}
    method: POST
- name: pudo_locations
  endpoint:
    path: /v4/pudolocations/{carrierCode}/{countryCode}/{postcode}
    method: GET
    data_selector: ''
- name: manifests
  endpoint:
    path: /manifests/{carrierCode}
    method: POST
    data_selector: response
    params: {}
- name: manifests
  endpoint:
    path: /manifests/{carrierCode}
    method: GET
- name: update_status
  endpoint:
    path: /v4/shipments/status
    method: PUT
- name: print_manifest
  endpoint:
    path: /v4/manifests/{carrierCode}/{manifestNumber}
    method: GET
- name: defer_shipments
  endpoint:
    path: /v4/shipments/defer
    method: PUT
- name: manifest_details
  endpoint:
    path: /v4/manifests/{carrierCode}/{manifestNumber}/shipments
    method: GET
- name: Add Commercial Invoice
  endpoint:
    path: /v4/shipments/commercialInvoice/{carrierCode}/{shipmentId}
    method: PUT
- name: containers
  endpoint:
    path: /containers
    method: GET
    data_selector: records
- name: pudo_locations
  endpoint:
    path: /v4/pudolocations/{carrierCode}/{countryCode}/{postcode}
    method: GET
- name: containers
  endpoint:
    path: /containers
    method: POST
- name: manifests
  endpoint:
    path: /manifests/{carrierCode}
    method: POST
- name: container
  endpoint:
    path: /v4/containers/{containerId}
    method: GET
- name: manifests
  endpoint:
    path: /manifests/{carrierCode}
    method: GET
- name: Add/Remove Shipments
  endpoint:
    path: /v4/containers/{containerId}
    method: PUT
- name: Print Manifest
  endpoint:
    path: /v4/manifests/{carrierCode}/{manifestNumber}
    method: GET
- name: containers
  endpoint:
    path: /v4/containers/{containerId}
    method: DELETE
- name: manifest_details
  endpoint:
    path: /v4/manifests/{carrierCode}/{manifestNumber}/shipments
    method: GET
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: containers
  endpoint:
    path: /containers
    method: GET
- name: products
  endpoint:
    path: /products
    method: POST
- name: containers
  endpoint:
    path: /v4/containers
    method: POST
- name: delete_product
  endpoint:
    path: /products/{skuCode}
    method: DELETE
- name: products
  endpoint:
    path: /v4/products/{skuCode}
    method: GET
- name: container
  endpoint:
    path: /v4/containers/{containerId}
    method: GET
- name: Add/Remove Shipments
  endpoint:
    path: /v4/containers/{containerId}
    method: PUT
- name: product
  endpoint:
    path: /v4/products/{skuCode}
    method: PUT
- name: container
  endpoint:
    path: /v4/containers/{containerId}
    method: DELETE
- name: addresses
  endpoint:
    path: /v4/addresses
    method: GET
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: address_book
  endpoint:
    path: /addresses
    method: POST
- name: product
  endpoint:
    path: /products
    method: POST
- name: address_book
  endpoint:
    path: /addresses/{addressId}
    method: DELETE
- name: product
  endpoint:
    path: /products/{skuCode}
    method: DELETE
- name: address
  endpoint:
    path: /v4/addresses/{addressId}
    method: GET
- name: product
  endpoint:
    path: /products/{skuCode}
    method: GET
- name: address_book
  endpoint:
    path: /addresses/{addressId}
    method: PUT
- name: trackings
  endpoint:
    path: /v4/trackings
    method: POST
- name: products
  endpoint:
    path: /products/{skuCode}
    method: PUT
- name: PushPayloadExample
  endpoint:
    path: /v4/trackings/PushPayloadExample
    method: POST
- name: addresses
  endpoint:
    path: /addresses
    method: GET
- name: Denied Parties
  endpoint:
    path: /v4/DeniedParties
    method: POST
- name: commodity_code_validation
  endpoint:
    path: /GetCommodityCodeValidations
    method: POST
- name: address_book
  endpoint:
    path: /v4/addresses
    method: POST
- name: quoted_landed_cost
  endpoint:
    path: /QuotedLandedCost
    method: POST
- name: delete_address
  endpoint:
    path: /addresses/{addressId}
    method: DELETE
- name: prohibited_items
  endpoint:
    path: /v4/ProhibitedItems
    method: POST
- name: address
  endpoint:
    path: /v4/addresses/{addressId}
    method: GET
- name: countries
  endpoint:
    path: /v4/countries
    method: GET
- name: address_book
  endpoint:
    path: /addresses/{addressId}
    method: PUT
- name: currencies
  endpoint:
    path: /v4/currencies
    method: GET
- name: trackings
  endpoint:
    path: /v4/trackings
    method: POST
- name: time_zones
  endpoint:
    path: /v4/timezones
    method: GET
- name: shipping_accounts
  endpoint:
    path: /shippingAccounts/rm
    method: GET
    data_selector: records
- name: Tracking Webhook Push Payload Example
  endpoint:
    path: /v4/trackings/PushPayloadExample
    method: POST
- name: shipping_account
  endpoint:
    path: /v4/shippingAccounts/rm
    method: POST
- name: Denied Parties
  endpoint:
    path: /DeniedParties
    method: POST
- name: shipping_account
  endpoint:
    path: /v4/shippingAccounts/rm/{shippingAccountId}
    method: GET
    data_selector: accountDetails
- name: commodity_code_validation
  endpoint:
    path: /v4/GetCommodityCodeValidations
    method: POST
- name: shipping_accounts
  endpoint:
    path: /shippingAccounts/rm/{shippingAccountId}
    method: PUT
- name: quoted_landed_cost
  endpoint:
    path: /QuotedLandedCost
    method: POST
- name: prohibited_items
  endpoint:
    path: /v4/ProhibitedItems
    method: POST
- name: link_locations
  endpoint:
    path: /v4/shippingAccounts/rm/{shippingAccountId}/linkLocations
    method: POST
- name: Get Associated Locations
  endpoint:
    path: /v4/shippingAccounts/rm/{shippingAccountId}/shippingLocations
    method: GET
- name: countries
  endpoint:
    path: /countries
    method: GET
    data_selector: records
- name: currencies
  endpoint:
    path: /v4/currencies
    method: GET
- name: Get Associated Location
  endpoint:
    path: /v4/shippingAccounts/rm/{shippingAccountId}/shippingLocations/{shippingLocationId}
    method: GET
- name: time_zones
  endpoint:
    path: /v4/timezones
    method: GET
- name: shipping_accounts
  endpoint:
    path: /shippingAccounts/rm
    method: GET
    data_selector: accounts
- name: Update Associated Location
  endpoint:
    path: /v4/shippingAccounts/rm/{shippingAccountId}/shippingLocations/{shippingLocationId}
    method: PUT
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/rm
    method: POST
- name: print_label
  endpoint:
    path: /v4/shipments/printLabel/rm/{shipmentId}
    method: GET
- name: shipping_account
  endpoint:
    path: /v4/shippingAccounts/rm/{shippingAccountId}
    method: GET
- name: Print My Label QR Code
  endpoint:
    path: /v4/shipments/printMyLabelQRCode/rm/{shipmentId}
    method: GET
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/rm/{shippingAccountId}
    method: PUT
- name: pre_allocate_tracking_number
  endpoint:
    path: /v4/shipments/preallocateTrackingNumber/rm
    method: POST
- name: Book Collection
  endpoint:
    path: /v4/collections/rm/{shipmentId}
    method: POST
- name: link_locations
  endpoint:
    path: /v4/shippingAccounts/rm/{shippingAccountId}/linkLocations
    method: POST
- name: Cancel Collection
  endpoint:
    path: /v4/collections/rm/{shipmentId}/cancel
    method: PUT
- name: Get Associated Locations
  endpoint:
    path: /v4/shippingAccounts/rm/{shippingAccountId}/shippingLocations
    method: GET
    data_selector: locations
- name: Get Collections Timeslots
  endpoint:
    path: /collections/rm/timeslots/{shipmentId}
    method: GET
- name: Get Associated Location
  endpoint:
    path: /v4/shippingAccounts/rm/{shippingAccountId}/shippingLocations/{shippingLocationId}
    method: GET
    data_selector: records
- name: Update Associated Location
  endpoint:
    path: /v4/shippingAccounts/rm/{shippingAccountId}/shippingLocations/{shippingLocationId}
    method: PUT
- name: offline_barcode_number_range
  endpoint:
    path: /offlineBarcodeNumberRange/rm
    method: POST
- name: print_label
  endpoint:
    path: /v4/shipments/printLabel/rm/{shipmentId}
    method: GET
- name: containers
  endpoint:
    path: /v4/internationalArrivalsContainers/rm
    method: POST
- name: Print My Label QR Code
  endpoint:
    path: /v4/shipments/printMyLabelQRCode/rm/{shipmentId}
    method: GET
- name: international_arrivals_containers
  endpoint:
    path: /internationalArrivalsContainers/rm
    method: GET
- name: pre_allocate_tracking_number
  endpoint:
    path: /v4/shipments/preallocateTrackingNumber/rm
    method: POST
- name: international_arrivals_container
  endpoint:
    path: /internationalArrivalsContainers/rm/update/{containerId}
    method: PUT
- name: collections
  endpoint:
    path: /v4/collections/rm/{shipmentId}
    method: POST
- name: Add/Remove Shipments
  endpoint:
    path: /v4/internationalArrivalsContainers/rm/{containerId}
    method: PUT
- name: Cancel Collection
  endpoint:
    path: /v4/collections/rm/{shipmentId}/cancel
    method: PUT
- name: delete_container
  endpoint:
    path: /v4/internationalArrivalsContainers/rm/{containerId}
    method: DELETE
- name: get_collections_timeslots
  endpoint:
    path: /collections/rm/timeslots/{shipmentId}
    method: GET
- name: container
  endpoint:
    path: /v4/internationalArrivalsContainers/rm/{containerId}
    method: GET
- name: barcode_range
  endpoint:
    path: /v4/offlineBarcodeNumberRange/rm
    method: POST
    data_selector: ''
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/dxf
    method: GET
    data_selector: records
- name: shipping_accounts
  endpoint:
    path: /shippingAccounts/dxf
    method: POST
- name: shipping_account
  endpoint:
    path: /v4/shippingAccounts/dxf/{shippingAccountId}
    method: GET
- name: international_arrivals_containers
  endpoint:
    path: /v4/internationalArrivalsContainers/rm
    method: POST
- name: shipping_account
  endpoint:
    path: /v4/shippingAccounts/dxf/{shippingAccountId}
    method: PUT
- name: international_arrivals_containers
  endpoint:
    path: /v4/internationalArrivalsContainers/rm
    method: GET
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/dxf/{shippingAccountId}/linkLocations
    method: POST
- name: International Arrivals Containers
  endpoint:
    path: /v4/internationalArrivalsContainers/rm/update/{containerId}
    method: PUT
- name: associated_locations
  endpoint:
    path: /v4/shippingAccounts/dxf/{shippingAccountId}/shippingLocations
    method: GET
    data_selector: records
- name: associated_location
  endpoint:
    path: /v4/shippingAccounts/dxf/{shippingAccountId}/shippingLocations/{shippingLocationId}
    method: GET
- name: Add/Remove Shipments
  endpoint:
    path: /v4/internationalArrivalsContainers/rm/{containerId}
    method: PUT
- name: Delete Container
  endpoint:
    path: /v4/internationalArrivalsContainers/rm/{containerId}
    method: DELETE
- name: shipments
  endpoint:
    path: /shipments/dxf
    method: POST
- name: container
  endpoint:
    path: /v4/internationalArrivalsContainers/rm/{containerId}
    method: GET
- name: print_label
  endpoint:
    path: /v4/shipments/printLabel/dxf/{shipmentId}
    method: GET
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/dxf
    method: GET
- name: shipping_accounts
  endpoint:
    path: /shippingAccounts/DX
    method: GET
    data_selector: accounts
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/DX
    method: POST
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/dxf
    method: POST
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/dxf/{shippingAccountId}
    method: GET
- name: shipping_account
  endpoint:
    path: /v4/shippingAccounts/DX/{shippingAccountId}
    method: GET
    data_selector: records
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/dxf/{shippingAccountId}
    method: PUT
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/DX/{shippingAccountId}
    method: PUT
- name: link_locations
  endpoint:
    path: /v4/shippingAccounts/DX/{shippingAccountId}/linkLocations
    method: POST
- name: associated_locations
  endpoint:
    path: /v4/shippingAccounts/DX/{shippingAccountId}/shippingLocations
    method: GET
- name: link_locations
  endpoint:
    path: /shippingAccounts/dxf/{shippingAccountId}/linkLocations
    method: POST
- name: Get Associated Location
  endpoint:
    path: /v4/shippingAccounts/DX/{shippingAccountId}/shippingLocations/{shippingLocationId}
    method: GET
- name: associated_locations
  endpoint:
    path: /v4/shippingAccounts/dxf/{shippingAccountId}/shippingLocations
    method: GET
- name: shipments
  endpoint:
    path: /v4/shipments/DX
    method: POST
- name: print_label
  endpoint:
    path: /v4/shipments/printLabel/DX/{shipmentId}
    method: GET
- name: Get Associated Location
  endpoint:
    path: /v4/shippingAccounts/dxf/{shippingAccountId}/shippingLocations/{shippingLocationId}
    method: GET
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/evri
    method: GET
    data_selector: records
- name: shipments
  endpoint:
    path: /v4/shipments/dxf
    method: POST
- name: shipping_account
  endpoint:
    path: /v4/shippingAccounts/evri
    method: POST
- name: print_label
  endpoint:
    path: /shipments/printLabel/dxf/{shipmentId}
    method: GET
- name: shipping_account
  endpoint:
    path: /v4/shippingAccounts/evri/{shippingAccountId}
    method: GET
    data_selector: accountDetails
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/DX
    method: GET
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/evri/{shippingAccountId}
    method: PUT
- name: shipping_accounts
  endpoint:
    path: /shippingAccounts/evri/{shippingAccountId}/linkLocations
    method: POST
- name: shipping_accounts
  endpoint:
    path: /shippingAccounts/DX
    method: POST
- name: shipping_locations
  endpoint:
    path: /v4/shippingAccounts/evri/{shippingAccountId}/shippingLocations
    method: GET
- name: shipping_account
  endpoint:
    path: /v4/shippingAccounts/DX/{shippingAccountId}
    method: GET
- name: Get Associated Location
  endpoint:
    path: /v4/shippingAccounts/evri/{shippingAccountId}/shippingLocations/{shippingLocationId}
    method: GET
- name: shipping_account
  endpoint:
    path: /v4/shippingAccounts/DX/{shippingAccountId}
    method: PUT
- name: shipments
  endpoint:
    path: /v4/shipments/evri
    method: POST
- name: shipping_accounts
  endpoint:
    path: /shippingAccounts/DX/{shippingAccountId}/linkLocations
    method: POST
- name: print_label
  endpoint:
    path: /v4/shipments/printLabel/evri/{shipmentId}
    method: GET
- name: associated_locations
  endpoint:
    path: /v4/shippingAccounts/DX/{shippingAccountId}/shippingLocations
    method: GET
- name: Print My Label QR Code
  endpoint:
    path: /shipments/printMyLabelQRCode/evri/{shipmentId}
    method: GET
    data_selector: ''
- name: associated_location
  endpoint:
    path: /shippingAccounts/DX/{shippingAccountId}/shippingLocations/{shippingLocationId}
    method: GET
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/fedex
    method: GET
- name: shipments
  endpoint:
    path: /shipments/DX
    method: POST
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/fedex/{shippingAccountId}
    method: GET
- name: print_label
  endpoint:
    path: /v4/shipments/printLabel/DX/{shipmentId}
    method: GET
- name: link_locations
  endpoint:
    path: /v4/shippingAccounts/fedex/{shippingAccountId}/linkLocations
    method: POST
    data_selector: records
- name: shipping_accounts
  endpoint:
    path: /shippingAccounts/evri
    method: GET
    data_selector: records
- name: Get Associated Locations
  endpoint:
    path: /v4/shippingAccounts/fedex/{shippingAccountId}/shippingLocations
    method: GET
- name: shipping_accounts
  endpoint:
    path: /shippingAccounts/evri
    method: POST
- name: Get Associated Location
  endpoint:
    path: /v4/shippingAccounts/fedex/{shippingAccountId}/shippingLocations/{shippingLocationId}
    method: GET
    data_selector: location
    params: {}
- name: shipping_account
  endpoint:
    path: /shippingAccounts/evri/{shippingAccountId}
    method: GET
    data_selector: ''
- name: shipments
  endpoint:
    path: /v4/shipments/fedex
    method: POST
- name: shipping_account
  endpoint:
    path: /v4/shippingAccounts/evri/{shippingAccountId}
    method: PUT
- name: print_label
  endpoint:
    path: /v4/shipments/printLabel/fedex/{shipmentId}
    method: GET
- name: link_locations
  endpoint:
    path: /v4/shippingAccounts/evri/{shippingAccountId}/linkLocations
    method: POST
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/inpost
    method: GET
    data_selector: records
- name: associated_locations
  endpoint:
    path: /v4/shippingAccounts/evri/{shippingAccountId}/shippingLocations
    method: GET
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/inpost
    method: POST
- name: Get Associated Location
  endpoint:
    path: /v4/shippingAccounts/evri/{shippingAccountId}/shippingLocations/{shippingLocationId}
    method: GET
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/inpost/{shippingAccountId}
    method: GET
- name: shipments
  endpoint:
    path: /shipments/evri
    method: POST
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/inpost/{shippingAccountId}
    method: PUT
- name: print_label
  endpoint:
    path: /v4/shipments/printLabel/evri/{shipmentId}
    method: GET
- name: link_locations
  endpoint:
    path: /v4/shippingAccounts/inpost/{shippingAccountId}/linkLocations
    method: POST
- name: associated_locations
  endpoint:
    path: /v4/shippingAccounts/inpost/{shippingAccountId}/shippingLocations
    method: GET
- name: Print My Label QR Code
  endpoint:
    path: /v4/shipments/printMyLabelQRCode/evri/{shipmentId}
    method: GET
- name: Get Associated Location
  endpoint:
    path: /v4/shippingAccounts/inpost/{shippingAccountId}/shippingLocations/{shippingLocationId}
    method: GET
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/fedex
    method: GET
- name: shipments
  endpoint:
    path: /v4/shipments/inpost
    method: POST
- name: shipping_account
  endpoint:
    path: /shippingAccounts/fedex/{shippingAccountId}
    method: GET
    data_selector: account_details
- name: print_label
  endpoint:
    path: /v4/shipments/printLabel/InPost/{shipmentId}
    method: GET
- name: link_locations
  endpoint:
    path: /v4/shippingAccounts/fedex/{shippingAccountId}/linkLocations
    method: POST
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/tdg
    method: GET
- name: Get Associated Locations
  endpoint:
    path: /v4/shippingAccounts/fedex/{shippingAccountId}/shippingLocations
    method: GET
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/tdg
    method: POST
- name: shipping_account
  endpoint:
    path: /v4/shippingAccounts/tdg/{shippingAccountId}
    method: GET
- name: Get Associated Location
  endpoint:
    path: /v4/shippingAccounts/fedex/{shippingAccountId}/shippingLocations/{shippingLocationId}
    method: GET
- name: shipping_account
  endpoint:
    path: /v4/shippingAccounts/tdg/{shippingAccountId}
    method: PUT
- name: shipments
  endpoint:
    path: /v4/shipments/fedex
    method: POST
- name: link_locations
  endpoint:
    path: /v4/shippingAccounts/tdg/{shippingAccountId}/linkLocations
    method: POST
- name: print_label
  endpoint:
    path: /v4/shipments/printLabel/fedex/{shipmentId}
    method: GET
- name: Get Associated Locations
  endpoint:
    path: /shippingAccounts/tdg/{shippingAccountId}/shippingLocations
    method: GET
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/inpost
    method: GET
    data_selector: records
- name: Get Associated Location
  endpoint:
    path: /v4/shippingAccounts/tdg/{shippingAccountId}/shippingLocations/{shippingLocationId}
    method: GET
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/inpost
    method: POST
- name: shipments
  endpoint:
    path: /shipments/tdg
    method: POST
- name: shipping_accounts
  endpoint:
    path: /shippingAccounts/inpost/{shippingAccountId}
    method: GET
- name: print_label
  endpoint:
    path: /v4/shipments/printLabel/tdg/{shipmentId}
    method: GET
- name: shipping_accounts
  endpoint:
    path: /shippingAccounts/inpost/{shippingAccountId}
    method: PUT
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/ups
    method: GET
    data_selector: records
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/ups
    method: POST
- name: link_locations
  endpoint:
    path: /v4/shippingAccounts/inpost/{shippingAccountId}/linkLocations
    method: POST
- name: shippingAccount
  endpoint:
    path: /v4/shippingAccounts/ups/{shippingAccountId}
    method: GET
- name: Get Associated Locations
  endpoint:
    path: /v4/shippingAccounts/inpost/{shippingAccountId}/shippingLocations
    method: GET
- name: Get Associated Location
  endpoint:
    path: /v4/shippingAccounts/inpost/{shippingAccountId}/shippingLocations/{shippingLocationId}
    method: GET
    data_selector: location
    params: {}
- name: shipment
  endpoint:
    path: /v4/shipments/inpost
    method: POST
- name: shipping_account
  endpoint:
    path: /v4/shippingAccounts/ups/{shippingAccountId}
    method: PUT
- name: print_label
  endpoint:
    path: /v4/shipments/printLabel/InPost/{shipmentId}
    method: GET
- name: link_locations
  endpoint:
    path: /v4/shippingAccounts/ups/{shippingAccountId}/linkLocations
    method: POST
- name: Get Associated Locations
  endpoint:
    path: /v4/shippingAccounts/ups/{shippingAccountId}/shippingLocations
    method: GET
- name: shipping_accounts
  endpoint:
    path: /shippingAccounts/tdg
    method: GET
    data_selector: records
    params: {}
- name: Get Associated Location
  endpoint:
    path: /v4/shippingAccounts/ups/{shippingAccountId}/shippingLocations/{shippingLocationId}
    method: GET
- name: shipping_accounts
  endpoint:
    path: /shippingAccounts/tdg
    method: POST
- name: shipment
  endpoint:
    path: /v4/shipments/ups
    method: POST
- name: shipping_account
  endpoint:
    path: /shippingAccounts/tdg/{shippingAccountId}
    method: GET
- name: print_label
  endpoint:
    path: /shipments/printLabel/ups/{shipmentId}
    method: GET
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/yodel
    method: GET
    data_selector: accounts
- name: shipping_account
  endpoint:
    path: /v4/shippingAccounts/tdg/{shippingAccountId}
    method: PUT
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/yodel
    method: POST
- name: link_locations
  endpoint:
    path: /shippingAccounts/tdg/{shippingAccountId}/linkLocations
    method: POST
- name: shipping_account
  endpoint:
    path: /v4/shippingAccounts/yodel/{shippingAccountId}
    method: GET
- name: Get Associated Locations
  endpoint:
    path: /shippingAccounts/tdg/{shippingAccountId}/shippingLocations
    method: GET
- name: associated_location
  endpoint:
    path: /shippingAccounts/tdg/{shippingAccountId}/shippingLocations/{shippingLocationId}
    method: GET
- name: shipping_account
  endpoint:
    path: /v4/shippingAccounts/yodel/{shippingAccountId}
    method: PUT
- name: shipments
  endpoint:
    path: /shipments/tdg
    method: POST
- name: link_locations
  endpoint:
    path: /v4/shippingAccounts/yodel/{shippingAccountId}/linkLocations
    method: POST
- name: Print Label
  endpoint:
    path: /v4/shipments/printLabel/tdg/{shipmentId}
    method: GET
- name: Get Associated Locations
  endpoint:
    path: /v4/shippingAccounts/yodel/{shippingAccountId}/shippingLocations
    method: GET
- name: shipping_accounts
  endpoint:
    path: /shippingAccounts/ups
    method: GET
- name: associated_location
  endpoint:
    path: /v4/shippingAccounts/yodel/{shippingAccountId}/shippingLocations/{shippingLocationId}
    method: GET
    data_selector: location
    params: {}
- name: shipping_account
  endpoint:
    path: /shippingAccounts/ups
    method: POST
- name: shipments
  endpoint:
    path: /shipments/yodel
    method: post
- name: print_label
  endpoint:
    path: /v4/shipments/printLabel/yodel/{shipmentId}
    method: GET
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/ups/{shippingAccountId}
    method: GET
- name: shipping_account
  endpoint:
    path: /v4/shippingAccounts/ups/{shippingAccountId}
    method: PUT
- name: link_locations
  endpoint:
    path: /v4/shippingAccounts/ups/{shippingAccountId}/linkLocations
    method: POST
- name: shipping_locations
  endpoint:
    path: /v4/shippingAccounts/ups/{shippingAccountId}/shippingLocations
    method: GET
- name: Get Associated Location
  endpoint:
    path: /v4/shippingAccounts/ups/{shippingAccountId}/shippingLocations/{shippingLocationId}
    method: GET
- name: shipments
  endpoint:
    path: /v4/shipments/ups
    method: POST
- name: Print Label
  endpoint:
    path: /v4/shipments/printLabel/ups/{shipmentId}
    method: GET
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/yodel
    method: GET
    data_selector: accounts
- name: shipping_accounts
  endpoint:
    path: /v4/shippingAccounts/yodel
    method: POST
- name: shipping_account
  endpoint:
    path: /v4/shippingAccounts/yodel/{shippingAccountId}
    method: GET
    data_selector: account details
- name: shipping_account
  endpoint:
    path: /v4/shippingAccounts/yodel/{shippingAccountId}
    method: PUT
- name: link_locations
  endpoint:
    path: /shippingAccounts/yodel/{shippingAccountId}/linkLocations
    method: POST
- name: associated_locations
  endpoint:
    path: /v4/shippingAccounts/yodel/{shippingAccountId}/shippingLocations
    method: GET
- name: Get Associated Location
  endpoint:
    path: /v4/shippingAccounts/yodel/{shippingAccountId}/shippingLocations/{shippingLocationId}
    method: GET
- name: shipments
  endpoint:
    path: /v4/shipments/yodel
    method: POST
- name: print_label
  endpoint:
    path: /v4/shipments/printLabel/yodel/{shipmentId}
    method: GET
notes:
- The API requires the user to provide a Bearer token.
- Please ensure you cache the authentication token and check for expiry before requesting
  a new one.
- Rate limiting helps protect the API from malicious users, bots, or applications
  that may overwhelm the server with excessive requests.
- Intersoft enforces limits on the API calls a customer can make based on their subscription
  settings.
- Always be aware of what account you are logged into. Any shipments accidently created
  in the Production account are counted.
- Do not send your Intersoft Sapient Client ID or Secret.
- Store the Intersoft format of the JSON request and response to allow us to investigate
  any API related issues.
- For security reasons, it is recommended that you choose the correct guidelines or
  follow your company policies to set your password.
- Use a password manager to secure your password in an encrypted format.
- Include a mix of characters, such as a combination of uppercase, lowercase, number,
  and special characters.
- Avoid common words or phrases.
- Monitor for breaches.
- The Reset my password activation link in the received email is available once per
  24 hours only. After that, you need to submit a new request.
- Choosing a strong and unique password is vital to ensure your account remains secure.
- The password is strong and complex.
- The password has not been found in any online data breaches.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some tables in SAPIENT may have more content that can be displayed on one page.
- The maximum date range for shipment search is 30 days.
- You can cancel the shipments both via UI and the API.
- Shipments can only be held if they are in 'Label Printed' status.
- Shipments that are kept on hold longer than 28 days are cancelled automatically.
- The maximum date range for manifest search is 30 days.
- Shipping account(s) can be added and managed via API.
- The fields in the Edit Shipping Account form may differ based on the carrier account
  you choose.
- You can delete the shipping account both via UI and the API.
- Shipping locations can be added and managed via API.
- Editing a shipping location helps users maintain accurate and up-to-date shipping
  information.
- Mandatory fields are marked with an asterisk (*)
- Shipping locations can also be deleted via API.
- Products can be added and managed via API.
- Products can be updated via API. To learn more on how to edit a product via API,
  refer to the API References section.
- Products can be removed via API. To learn more on how to delete a product via API,
  refer to the API References section.
- You cannot add or manage users via API.
- The availability of the permissions may vary based on the selected location of the
  user.
- You cannot edit or manage users via API.
- Deleting a user refers to removing an account from the system when an individual
  no longer requires access.
- Addresses can be modified via API.
- Addresses can removed via API.
- Customs settings ensure that all shipments meet the legal requirements imposed by
  customs authorities in different countries.
- Accurate and complete documentation is essential to avoid delays or penalties.
- These settings may include mechanisms for calculating applicable duties and taxes
  based on the value and classification of goods.
- Customs settings help users assign the correct HS Codes or tariff classifications
  to products.
- These settings also enable businesses to manage the shipment of restricted or prohibited
  items.
- With customs settings, businesses can provide better visibility into the status
  of shipments as they go through customs.
- These settings play a key role in making cross-border trading smoother and less
  daunting for businesses.
- The pre-registration number is only relevant for shipments with the DDU incoterms.
- Both VAT and EORI numbers are essential for compliance and customs activities.
- If VAT or EORI is not provided in the Create Shipment request, the system will use
  existing UI setup.
- This setting enables the businesses to upload their branding elements, such as digital
  signatures and company logos, which can be included on the commercial and proforma
  invoice customs documents related to the shipments.
- Only authorized users or applications can make requests to the API.
- To learn more on how to access and activate the integrations, refer to the Activate
  integration section.
- The 'Hold' and 'Release' statuses are available if a shipment needs to be delayed
  and only included in manifest production once it has been released.
- Currently, this service is only available for Royal Mail services that have a 1D
  Tracking Number generated.
- You can only manifest the shipments for which you have printed the labels.
- If no value is set for this action in the CreateShipment request, then the shipments
  are created with the 'Process' status.
- Process action finalises the shipment creation and prepares the shipment for transportation.
- If warehouse simultaneously picks, packs and sticks labels to shipments, labels
  and CN23 are returned in the successful response.
- Use the Process action in your Create Shipment request to finalise shipment creation.
- A shipment can be deferred for a maximum of 28 days, and you can defer the shipment
  again either for the current date or for up to another 28 days. If the shipment
  is not further deferred, it is manifested automatically when the shipment date has
  been reached.
- The containerId must be unique for each customer and can be reused after the container
  has been manifested.
- The containers can be manifested only via the API.
- Before updating the shipment status to Picked, make sure to print the labels.
- In the scope of the Windsor Framework changes, you might see some new fields in
  the API References.
- The UKIMS or pre-registration number requirements are only applicable to B2B shipments.
- The Windsor Framework only affects customers sending goods from Great Britain to
  Northern Ireland.
- Businesses must familiarise themselves with the specific requirements set out in
  the Windsor Framework by HMRC.
- Additional services enhance functionality and improve the overall user experience.
- The regulations apply to all carriers and will take effect from 31 March 2025.
- Before setting up the tracking account, make sure that you have completed the necessary
  prerequisites.
- The webhook only works if it is in the Active state.
- Before setting up the tracking account, ensure that label and tracking integration
  is enabled with your chosen carrier.
- Setting up the tracking webhook is a one-time activity.
- Milestones only get triggered once.
- Any changes made to the webhook configuration deactivates it.
- This is a chargeable service, you will be invoiced directly and any associated usage
  fees will be applied going forwards.
- You can choose to receive all tracking events or tracking milestones only.
- For more information on how to use this API service, refer to the Prohibited Items
  block of the API References section.
- International and prohibited export codes refer to specific classifications that
  govern which items can be exported from a country and under what conditions.
- To avoid webhook suspension, we highly recommend setting up a dedicated webhook
  monitoring system before the suspension notification is triggered.
- Once the webhook is suspended, it loses all its tracking data.
- Only approved personnel from your company should be given permission to access these
  pages and activate this service.
- Accurate HS code data not only facilitates smooth processing of your data by customs,
  but also ensures that any duty and tax calculations are accurate.
- Some international services require a partner label for completing the final mile
  delivery.
- Calculating accurate landed cost is hugely complex with each country.
- Providing the landed cost to consumers as a part of the checkout experience ensures
  the full cost of purchase is visible before the purchase is completed.
- Prohibited and restricted items are goods that are not allowed to be imported or
  exported according to specific regulations.
- This section is only applicable if you are a Royal Mail customer who is importing
  goods into the UK. Before initiating the integration, make sure you have an agreement
  with Royal Mail to use this service.
- For Sandbox (Test) account, please fill the information with dummy details.
- A test pack is a critical step in the implementation process, ensuring a smooth
  transition to the live environment and minimising disruptions in shipping operations.
- Denied parties refer to individuals, companies, or organisations that are prohibited
  from receiving exports due to legal or regulatory restrictions.
- At INTERSOFT, we have developed a dedicated API endpoint for servers based in China.
  To access this, kindly change your domain from .net to .cn for all the relevant
  endpoints you will be using.
- Partner label involves utilising two separate labels on a shipment to reflect both
  the originating carrier (Royal Mail) and the partner carrier (GLS or FedEx) responsible
  for the last-mile delivery.
- Physical labels are required for Royal Mail Sign Off.
- Details on labels are provided after Sandbox Test Pack approval.
- Develop International Arrivals Containers (A-scan) API calls — mandatory for Freight
  2 Post customers.
- The following requirements are Royal Mail specific in addition to Intersoft's mandatory
  fields.
- Labels must have different destination information, different weights, that are
  relevant to the service being requested
- Test labels must be printed on a production printer
- The Shipping Account you set up previously stays as the Sandbox account type and
  you can continue using it for testing purposes.
- For development and testing purposes the Customer Number can be filled with dummy
  details. The Barcode Range used for testing purposes should be AC40000001 to AC49999999.
- Shipper Address and Return Address must be UK based.
- Manifest - Royal Mail Sales Order Summary must be printed and handed over to the
  driver.
- In the following table, the mandatory requirements are marked with an asterisk (*)
- 'Important: Please also remember to develop our International Arrivals Containers
  (A-scan) API calls. It''s mandatory for Freight 2 Post customers.'
- This is a fully automated process, driven by what the customer populates the create
  shipment request with.
- The above are also requirements specific for Royal Mail customers creating international
  shipments.
- Once the complete Test Pack is submitted, you can expect to hear from us within
  5 working days.
- If you do not log in to your OBA account for over 90 days, Royal Mail will deactivate
  your OBA account.
- If you do not know which email address is associated with your OBA account, please
  contact the OBA Helpdesk—call at 08457 950 950, or send an email at oba.helpdesk@royalmail.com.
- If your OBA account is not active, please contact Royal Mail to reactivate your
  OBA account via the following link:<https://business.help.royalmail.com/app/contact>.
- Once you go-live any technical issues should be raised directly with our Tech Support
  team.
- Before you can set up a shipping account, you must ensure you have enabled the label
  integration with Royal Mail.
- Allows for linking up to 10,000 shipments to a single container.
- All Freight to Post customers must have an A-Scan set up.
- The container must be finalised latest by one hour before the flight lands in the
  UK.
- Enabled the label integration with Royal Mail.
- Enabled the tracking integration with Royal Mail.
- Set up your tracking webhook.
- The shipments to BFPO locations are supported by all Royal Mail domestic services
  and are not restricted to BF services only.
- For any shipments that do not meet the requirements for a combined label, you will
  receive a standard shipping label and a separate CN23 customs documentation.
- The labels created for the return service do not have to be manifested.
- The pre-allocated tracking number does not expire.
- Royal Mail does not have the Test environment for Collection service. Therefore,
  it can only be developed against the Production environment.
- If you do not know which email address is associated with your OBA account, please
  contact the OBA Helpdesk.
- Enable PUDO integration via the Royal Mail Integration Activation screen.
- Raise a request to the onboarding team to connect and download PUDO data via SFTP.
- The ID8000 labels are valid only within the UK; hence, if a Class 9 shipment's destination
  is outside of UK, the ID8000 label will not be generated.
- Account status is initially set to 'Disabled' until approved by Royal Mail OBA team,
  which can take 2-5 working days.
- Ensure label integration and tracking integration with Royal Mail are enabled before
  adding a tracking account.
- Setup of tracking webhook is required as a one-time activity.
- Shipments to BFPO locations are supported by all Royal Mail domestic services.
- The DX Express integration is pre-approved, but you must have the required information
  beforehand to ship with DX Express.
- It is recommended to create a few test labels with services you will be using and
  share the labels with the carrier for review to avoid any discrepancies.
- It is also recommended to run the end to end test to ensure that the integration
  was set up correctly by sending out a test parcel.
- 'Prior to adding a DX tracking account, make sure you have completed the prerequisites:
  Enabled the label integration with DX Express, Enabled the tracking integration
  with DX Express, Set up your tracking webhook.'
- DX carrier integration has a specific rate limit of 20 API requests per minute.
- If the DX rate limit is reached, a 503 Service Unavailable error will be returned.
- If you want to set up the PUDO integration, make sure to enable PUDO integration
  via the Royal Mail Integration Activation screen.
- Raise a request to the onboarding team to create a location for you to connect and
  download the PUDO data via SFTP by providing your RSA Public Key.
- If you would like an account specifically for testing purposes, you can log a request
  with DX's service desk at service.desk@dxdelivery.com and request your own test
  API credentials.
- This integration is currently under development. The contents are to be updated
  as soon as possible.
- Supports only single-piece shipment (not consignment or multipiece)
- If you attempt to release a held shipment to a later date, please be aware that
  the shipment will no longer be eligible for cancellation.
- The DX Freight integration is pre-approved, but you must have the required information
  beforehand to ship with DX Freight.
- If you are using the Production account type for testing your shipments, you will
  be billed accordingly as DX Express bills on manifesting rather than scanning.
- Before you can set up a shipping account, make sure you have enabled the label integration
  for DX Express.
- Prior to adding a DX tracking account, make sure you have completed the prerequisites.
- QR code generation is supported for the returns shipments.
- Single package services only support one package per request.
- Prior to adding a DX tracking account, make sure you have completed the necessary
  prerequisites.
- If the DX rate limit is reached you will get the 503 Service Unavailable error.
- Before you can set up a shipping account, make sure you have enabled the label integration
  with EVRi.
- You can link more than one child client department to your parent shipping account.
- Prior to adding an EVRi tracking account, make sure you have completed the required
  integrations.
- FedEx will not charge customers for transportation costs. However, the customs clearance
  fees may still apply if a package is not cancelled and scanned by FedEx.
- Shipments to Channel Islands are treated as domestic destination for freight shipments.
- Multi-factor authentication is required for account creation.
- The checkbox is only activated after you have fully scrolled down to the bottom
  of the agreement.
- Address validation is required to proceed to the Multi-Factor Authentication stage.
- While editing the FedEx shipping account, at the EULA stage, you cannot clear the
  already accepted end user license agreement checkbox.
- The SIGNATURES & LOGO block is not mandatory, if you do not want to configure it,
  then skip this section.
- Prior to adding a FedEx tracking account, make sure you have completed the prerequisites
  for label and tracking integration with FedEx.
- 'Prior to adding an EVRi tracking account, make sure you have completed the prerequisites:
  Enabled the label integration with EVRi, Enabled the tracking integration with EVRi,
  Set up your tracking webhook.'
- It is important to note that FedEx will not charge customers for transportation
  costs. However, the customs clearance fees may still apply if a package is not cancelled
  and scanned by FedEx.
- The multi-factor authentication is a crucial stage of the FedEx shipping account
  creation process.
- You can create and manage the FedEx shipping account only via the SAPIENT UI.
- Make sure to enable the label integration with InPost.
- If you wish to use both the Outbound labelled and Returns labelless services, you
  must create separate shipping accounts for each.
- The carrier account number must be an exact match with what FedEx have provided.
- You can use the Sandbox account to test the integration and generate test labels
  to ensure that it is configured correctly.
- Before you can use the PUDO API, make sure you have enabled the pudo integration
  with InPost.
- The information on how to fill in the necessary information at this stage are explained
  in the following table.
- The InPost integration is pre-approved, but you must have the required information
  beforehand to ship with InPost.
- Although, the Intersoft InPost integration is approved by the carrier, it still
  requires you to create a few test labels and share them with the carrier for review
  to avoid any discrepancies.
- The invoice date must have been issued within the last 90 days.
- The invoice amount must be in the US format with decimals, for example, 234.50.
- The pin is valid for 10 minutes only. If it is not utilized within this duration,
  you must request a new one.
- While editing the FedEx shipping account, please be advised that at the EULA stage
  of the Edit Shipping Account form, you cannot clear the already accepted end user
  license agreement checkbox.
- Package dimensions are mandatory for TDG.
- Signed delivery and special instructions can be provided.
- 'Prior to adding a FedEx tracking account, make sure you have completed the prerequisites:
  Enabled the label integration with FedEx, Enabled the tracking integration with
  FedEx, Set up your tracking webhook.'
- The Delivery Group integration is pre-approved, but you must have the required information
  beforehand to ship with this carrier.
- Sapient will start calling The Delivery Group’s tracking API 6 hours after the shipment
  is created in the database.
- The frequency of tracking requests will be every 4 hours.
- In the tracking request, SAPIENT will populate the shipmentreference field with
  the tracking number returned in the carrierItemReference field of the SubmitItemAdvice
  response.
- SAPIET will stop checking for tracking data when the final tracking event is received.
- Before you can set up a shipping account, be advised on the integration with InPost.
- Supports shipping from locations in Great Britain only.
- Email notifications require a valid email address.
- Add UPS shipping account
- Before you can set up a shipping account, make sure you have enabled the label integration
  with UPS.
- This feature is currently under development. The contents are to be updated as soon
  as possible.
- Prior to adding a UPS tracking account, make sure you have completed the prerequisites.
- Services for carriers such as Evri and Yodel.
- Package dimensions are mandatory.
- Shipments to Northern Ireland (NI) and Channel Islands are treated as international.
- Multi-package requests are not supported for single-package services.
- Prior to adding a YODEL tracking account, make sure you have completed the necessary
  prerequisites.
- Integration supports shipping from locations in Great Britain only.
- Email notification requires a valid email address.
- New import services require a service contract for use.
- The Registered Billing Postcode field is optional and accepts a GB postcode only.
- Make sure you have enabled the label integration with UPS.
- Prior to adding a UPS tracking account, ensure the label and tracking integrations
  with UPS are enabled.
- Set up your tracking webhook before adding a tracking account.
- The maximum length of the address fields in the Royal Mail Create Shipment request
  has been increased from 35 characters to 40 characters.
- New fields have been added to capture the what3Words value for the address.
- The ID8000 labels are valid only within the UK; shipments destined for outside UK
  will not generate an ID8000 label.
- Before you can set up a shipping account, make sure you have enabled the label integration
  with YODEL.
- New UPS international services added.
- Royal Mail's Local Collect enhancement provides new location types.
- Prior to adding a YODEL tracking account, make sure you have enabled the label integration
  and tracking integration with YODEL.
- Set up your tracking webhook — this is a one-time activity.
- The Royal Mail integration has been updated to allow customers to create dangerous
  goods shipments belonging to any class.
- New International Letter-boxable services have been added to the Royal Mail integration.
- If a carrier does not offer any service package types, then an empty list is returned.
- Provides a list of all shipping locations set up on the system under your customer
  account.
- A shipping location can be associated with more than one carrier. You would need
  to make individual API requests for each carrier.
- You can only put shipments on hold that are in the 'LabelPrinted' status as only
  shipments with this status are included in manifests.
- A shipment can be deferred by a maximum of 28 days from the date of the request.
- This service can only be used before the shipment has been manifested.
- There can be a maximum of 99 defer requests per call.
- Request the associated Customs Documents for the printed label.
- Provides base64 encoded image and details for a specific manifest.
- If no parameters are set, all shipments in the LabelPrinted or Picked status will
  be manifested.
- This is a chargeable service, and you are billed automatically based on the number
  of shipments tracked using the Trackings API.
- This endpoint should not be used for Royal Mail shipments created on your own Intersoft
  account.
- Provides a list of Royal Mail shipping accounts only.
- All required fields must be populated in the request, regardless if they need updating
  or not.
- This service can be used to receive a Royal Mail Tracking Number that will be pre-allocated
  to the service and destination supplied in the request.
- 'Ensure to have required carrier details ready: Royal Mail Posting Location number,
  OBA access codes and receiving hub, so that you can link it successfully.'
- Provides information for a specific shipping location linked to a Royal Mail shipping
  account including location alias, Royal Mail specific details, timezone, address,
  when it was last updated, and by who.
- Cancels a Royal Mail collection request for an existing shipment.
- Returns all available collection dates based on a shipment tracking number or uniqueId.
  The shipment must have been created using Royal Mail.
- Create and name (with and ID or alias) a new international arrivals container to
  be used for manifesting a specific group of shipments.
- Provides a list of all international arrivals containers set up on the system.
- Allows the details of the International Arrivals container to be updated.
- Allocate shipments to a container or remove them from it before the container will
  be manifested.
- This changes the status of the shipment to label printed.
- Retrieves a list of DX shipping accounts created on your customer account.
- Ensure to have required carrier details ready like DX Freight account number so
  that you can use the account for shipping with DX Freight.
- Link one or more shipping locations with a DX Freight shipping account.
- This changes the status of the shipment to label printed. This should be done at
  the time of actual printing or label creation dependent on how you operate in reality.
  Shipments must be updated to printed status prior to manifesting.
- Provides details for a Evri account.
- 'Credentials: OAuth2'
- Ensure to have required carrier details ready like InPost account name (client name
  allocated by InPost), username and password so that you can use the account for
  shipping with InPost.
- Create a TheDeliveryGroup shipment. This will return an image of the shipping label
  in PDF or PNG format.
- Provides a list of The Delivery Group shipping accounts only.
- Ensure to have required carrier details ready like The Delivery Group account name
  (client name allocated by The Delivery Group), username and password so that you
  can use the account for shipping with The Delivery Group.
- Provides a list of Yodel shipping accounts only.
errors:
- Performance degradation
- Service outages
- Data integrity issues
- Increased cost
- Security vulnerability
- Coordination challenges at peak times
- 'Authentication failures: problems related to API keys, tokens, or user credentials.'
- 'Network issues: problems with connectivity that prevents the API to reach.'
- 'Rate limiting: problems with hitting the rate limits.'
- 'API request and response issues: problems related to the communication between
  the two API held systems.'
- 'Affected API endpoint: problems associated with API endpoints.'
- 'Tracking issues: problems related to the process of monitoring or recording the
  interactions between a client application and API.'
- This password has been previously found in a data breach. Please choose a more secure
  password.
- That password is too weak; please choose a stronger password.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check if all mandatory fields are filled.'
- '401 Unauthorized: Check OAuth token and scopes.'
- '404 Not Found: Ensure the endpoint is correct.'
- 'REJECTED: If UKIMS number does not match EORI numbers.'
- 'REJECTED: If EORI number is missing for B2B shipments.'
- '400: Bad Request'
- '401: Unauthorized'
- '402: Payment Required EXPERIMENTAL'
- '403: Forbidden (Unauthorized)'
- '410: Gone'
- '413: Payload Too Large'
- '414: URL/URI Too Long'
- '415: Unsupported Media Type'
- '416: Range Not Satisfiable'
- '417: Expectation Failed'
- '418: I''m a teapot'
- '501: Not Implemented'
- '505: HTTP Version Not Supported'
- '506: Variant Also Negotiates'
- '510: Not Extended'
- '511: Network Authentication Required'
- Please also ensure that you adhere to our API Rate Limits.
- 'InvalidPUDOId: Check if the provided PudoId is correct.'
- 'PUDOIntegrationError: Ensure PUDO integration is enabled.'
- '503 Service Unavailable: Rate limit exceeded'
- If the pudoId is provided for any address other than the destination address, an
  error will be returned.
- If the pudoId is provided for a carrier that does not use PUDO, an error will be
  returned.
- '503 Service Unavailable: Rate limit reached'
- 'Address validation failed: Correct the address details to proceed.'
- The pudoId field is mandatory for B2C shipments.
- The pudoId field must not be populated for the returns services.
- '401 Unauthorized: Check username and password for the shipping account.'
- '401 Unauthorized: Invalid authentication credentials.'
- If the `pudoId` is provided for any address other than the destination address,
  an error will be returned.
- The `pudoId` field is mandatory for B2C shipments.
- The `pudoId` field must not be populated for the returns services.
- 'Invalid credentials: Check your API key and secret.'
- 'Shipment not found: Verify the shipment ID.'
- 'EORI_NUMBER_INVALID: The provided EORI number is not valid.'
- 401 Unauthorized
- 403 Forbidden
- 404 The shipping account was not found.
- 500 Internal Server Error
- 404 The shipping account was not found
- Cannot cancel/void a shipment after it has been confirmed by being manifested.
auth_info:
  mentioned_objects:
  - OAuth2
client:
  base_url: https://api.intersoftsapient.net
  headers:
    accept: application/json
    content-type: application/json
source_metadata: null
