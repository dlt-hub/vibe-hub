resources:
- name: interviews
  endpoint:
    path: /interviews
    method: POST
    data_selector: data
    params: {}
- name: transcripts
  endpoint:
    path: /interviews/{id}/transcripts
    method: GET
    data_selector: transcripts
    params: {}
- name: insights
  endpoint:
    path: /interviews/{id}/insights
    method: GET
    data_selector: insights
    params: {}
- name: report
  endpoint:
    path: /interviews/{id}/report
    method: GET
    data_selector: report
    params: {}
- name: interviews
  endpoint:
    path: /interviews
    method: POST
    data_selector: data
    params: {}
- name: session_details
  endpoint:
    path: /interviews/{id}
    method: GET
    data_selector: data
    params: {}
- name: transcripts
  endpoint:
    path: /interviews/{id}/transcripts
    method: GET
    data_selector: transcripts
    params: {}
- name: insights
  endpoint:
    path: /interviews/{id}/insights
    method: GET
    data_selector: insights
    params: {}
- name: report
  endpoint:
    path: /interviews/{id}/report
    method: GET
    data_selector: report
    params: {}
- name: interviews
  endpoint:
    path: /v1/interviews
    method: POST
    data_selector: data
- name: transcripts
  endpoint:
    path: /v1/interviews/{session.id}/transcripts
    method: GET
    data_selector: data
- name: insights
  endpoint:
    path: /v1/interviews/{session.id}/insights
    method: GET
    data_selector: data
- name: interviews
  endpoint:
    path: /v1/interviews
    method: POST
    data_selector: data
    params: {}
- name: transcripts
  endpoint:
    path: /v1/interviews/{session.id}/transcripts
    method: GET
    data_selector: data
    params: {}
- name: insights
  endpoint:
    path: /v1/interviews/{session.id}/insights
    method: GET
    data_selector: data
    params: {}
- name: interviews
  endpoint:
    path: /v1/interviews
    method: POST
    data_selector: null
    params: {}
- name: transcripts
  endpoint:
    path: /v1/interviews/{session_id}/transcripts
    method: GET
    data_selector: null
    params: {}
- name: insights
  endpoint:
    path: /v1/interviews/{session_id}/insights
    method: GET
    data_selector: null
    params: {}
- name: stop_session
  endpoint:
    path: /v1/interviews/{session_id}/stop
    method: POST
    data_selector: null
    params: {}
- name: start_session
  endpoint:
    path: /v1/interviews/{session_id}/start
    method: POST
    data_selector: null
    params: {}
- name: interviews
  endpoint:
    path: /v1/interviews
    method: POST
    data_selector: session_id
- name: transcripts
  endpoint:
    path: /v1/interviews/{session_id}/transcripts
    method: GET
    data_selector: transcripts
- name: insights
  endpoint:
    path: /v1/interviews/{session_id}/insights
    method: GET
    data_selector: insights
- name: transcripts
  endpoint:
    path: /interviews/{id}/transcripts
    method: GET
    data_selector: transcript
- name: transcripts
  endpoint:
    path: /interviews/{id}/transcripts
    method: GET
    data_selector: data.transcript
    params: {}
notes:
- Requires setup of API key for authentication.
- Uses API key for authentication.
- Never expose your API key in client-side code or public repositories.
- Meeting URLs must be valid and accessible when the bot tries to join.
- Meeting URLs must be valid and accessible when the bot tries to join
- Some meeting platforms require the bot to be admitted - inform participants
- Transcription quality depends on audio quality and speaker clarity
- AI insights are generated after sufficient conversation content is available
- Use sandbox environment to test without using credits.
- Uses API Key for authentication
- Real-time transcripts available through multiple methods
- API support typically responds within 4 hours during business hours.
- Emergency Support available for Enterprise customers 24/7
errors:
- '400 Bad Request: Invalid request parameters'
- '401 Unauthorized: Invalid or missing API key'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: Resource not found'
- '429 Too Many Requests: Rate limit exceeded'
- '500 Internal Server Error: Server error'
- '401 Unauthorized: Check API key or token expiration.'
- 'Unauthorized: Check your API key.'
- '401 Unauthorized: Recheck API key or permissions'
- 'Invalid Meeting URL: Verify the URL is accessible and active'
- 'Waiting Room: Some platforms require manual admission - inform participants'
- 'Password Protection: Include meeting password in the URL or session data'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.yourvideoagent.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
source_metadata: null
