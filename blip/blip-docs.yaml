resources:
- name: notification
  endpoint:
    path: /notifications
    method: POST
    data_selector: null
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: messages
- name: commands
  endpoint:
    path: /commands
    method: POST
    data_selector: commands
- name: ticket
  endpoint:
    path: /ticket/{ticketId}
    method: POST
    data_selector: resource
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: ''
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: ''
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notification
- name: ticket
  endpoint:
    path: /ticket/{ticketId}
    method: GET
    data_selector: resource
    params: {}
- name: ticket
  endpoint:
    path: /commands
    method: POST
    data_selector: resource
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: ''
    params: {}
- name: commands
  endpoint:
    path: /commands
    method: POST
    data_selector: ''
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: messages
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notifications
    params: {}
- name: message_receiver
  endpoint:
    path: /messages
    method: POST
    data_selector: messages
- name: notification_receiver
  endpoint:
    path: /notifications
    method: POST
    data_selector: notifications
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notifications
- name: commands
  endpoint:
    path: /commands
    method: POST
    data_selector: commands
- name: message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: ticket
  endpoint:
    path: /commands
    method: POST
    data_selector: resource
    params: {}
- name: priority_rule
  endpoint:
    path: /priority-rules/{priorityRuleId}
    method: POST
    data_selector: resource
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: content
    params: {}
- name: ticket
  endpoint:
    path: /commands
    method: POST
    data_selector: resource
    params: {}
- name: copy_and_paste
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: input
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: list
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: location
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: media_link
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: media_link
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: select_menu
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: document_collection
  endpoint:
    path: /messages
    method: POST
    data_selector: content.items
    params: {}
- name: redirect
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: reply
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: resource
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: native_content
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: plain_text
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: reaction
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: AccessKey
  endpoint:
    path: /accessKey
    method: POST
    data_selector: key
    params: {}
- name: AgentProductivitySummary
  endpoint:
    path: /agentProductivitySummary
    method: POST
    data_selector: summary
    params: {}
- name: AccountContact
  endpoint:
    path: /accountContact
    method: POST
    data_selector: contact
    params: {}
- name: AccountKeyRequest
  endpoint:
    path: /accountKeyRequest
    method: POST
    data_selector: request
    params: {}
- name: AttendanceTimeSummary
  endpoint:
    path: /attendanceTimeSummary
    method: POST
    data_selector: summary
    params: {}
- name: BillingRule
  endpoint:
    path: /billingRule
    method: POST
    data_selector: rule
    params: {}
- name: event_track
  endpoint:
    path: /event-track
    method: GET
    data_selector: items
- name: event_track_payments
  endpoint:
    path: /event-track/payments
    method: GET
    data_selector: items
- name: event_details
  endpoint:
    path: /event-track/payments/success-order
    method: GET
    data_selector: resource.items
    params:
      startDate: '2019-06-21'
      endDate: '2019-06-28'
      $take: 10
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: resource.items
    params: {}
- name: charts
  endpoint:
    path: /reports/{reportId}/charts
    method: GET
    data_selector: resource.items
    params: {}
- name: active_messages
  endpoint:
    path: /metrics/active-messages/{interval}
    method: GET
    data_selector: resource.items
    params: {}
- name: active_messages_per_domain
  endpoint:
    path: /metrics/active-messages-per-domain/{interval}
    method: GET
    data_selector: resource.items
    params: {}
- name: active_users
  endpoint:
    path: /metrics/active-identity/{interval}
    method: GET
    data_selector: resource.items
    params: {}
- name: engaged_users
  endpoint:
    path: /metrics/engaged-identity/{interval}
    method: GET
    data_selector: resource.items
    params: {}
- name: received_messages
  endpoint:
    path: /metrics/received-messages/{interval}
    method: GET
- name: sent_messages
  endpoint:
    path: /metrics/sent-messages/{interval}
    method: GET
- name: analysis
  endpoint:
    path: /analysis
    method: GET
- name: analysis
  endpoint:
    path: /analysis
    method: POST
    data_selector: resource
    params: {}
- name: intentions
  endpoint:
    path: /intentions
    method: POST
    data_selector: resource
    params: {}
- name: entities
  endpoint:
    path: /entities
    method: POST
    data_selector: resource
    params: {}
- name: confusion_matrix
  endpoint:
    path: /analytics/confusion-matrix
    method: POST
    data_selector: resource
    params: {}
- name: delete_confusion_matrix
  endpoint:
    path: /analytics/confusion-matrix/{confusionMatrixId}
    method: DELETE
    data_selector: {}
    params: {}
- name: entities
  endpoint:
    path: /entities
    method: GET
    data_selector: resource.items
    params: {}
- name: intents
  endpoint:
    path: /intentions
    method: DELETE
    data_selector: resource
    params: {}
- name: confusion_matrix
  endpoint:
    path: /analytics/confusion-matrix/{confusionMatrixId}
    method: GET
    data_selector: resource
    params: {}
- name: model
  endpoint:
    path: /model/{modelId}
    method: GET
    data_selector: resource
    params: {}
- name: model_summary
  endpoint:
    path: /models/summary
    method: GET
    data_selector: resource
    params: {}
- name: contact
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params: {}
- name: custom_reply
  endpoint:
    path: /custom-replies
    method: GET
    data_selector: records
    params: {}
- name: distribution_list
  endpoint:
    path: /distribution-lists
    method: GET
    data_selector: records
    params: {}
- name: distribution_list_message
  endpoint:
    path: /distribution-list-messages
    method: GET
    data_selector: records
    params: {}
- name: distribution_list_notification
  endpoint:
    path: /distribution-list-notifications
    method: GET
    data_selector: records
    params: {}
- name: entity
  endpoint:
    path: /entities
    method: GET
    data_selector: records
    params: {}
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: records
    params: {}
- name: event_track
  endpoint:
    path: /event-tracks
    method: GET
    data_selector: records
    params: {}
- name: identity_per_day
  endpoint:
    path: /identity-per-day
    method: GET
    data_selector: records
    params: {}
- name: identity_plan
  endpoint:
    path: /identity-plans
    method: GET
    data_selector: records
    params: {}
- name: identity_subscription
  endpoint:
    path: /identity-subscriptions
    method: GET
    data_selector: records
    params: {}
- name: identity_total_per_day
  endpoint:
    path: /identity-total-per-day
    method: GET
    data_selector: records
    params: {}
- name: identity_wallet
  endpoint:
    path: /identity-wallets
    method: GET
    data_selector: records
    params: {}
- name: intention
  endpoint:
    path: /intentions
    method: GET
    data_selector: records
    params: {}
- name: metric_indicators
  endpoint:
    path: /metric-indicators
    method: GET
    data_selector: records
    params: {}
- name: model
  endpoint:
    path: /models
    method: GET
    data_selector: records
    params: {}
- name: model_summary
  endpoint:
    path: /model-summaries
    method: GET
    data_selector: records
    params: {}
- name: open_ticket_summary
  endpoint:
    path: /open-ticket-summaries
    method: GET
    data_selector: records
    params: {}
- name: payment_intent
  endpoint:
    path: /payment-intents
    method: GET
    data_selector: records
    params: {}
- name: subscription_plan
  endpoint:
    path: /subscription-plans
    method: GET
    data_selector: records
    params: {}
- name: tag_tickets_summary
  endpoint:
    path: /tag-tickets-summaries
    method: GET
    data_selector: records
    params: {}
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: records
    params: {}
- name: tenant
  endpoint:
    path: /tenants
    method: GET
    data_selector: records
    params: {}
- name: tenant_user_information
  endpoint:
    path: /tenant-user-informations
    method: GET
    data_selector: records
    params: {}
- name: intents
  endpoint:
    path: /intentions
    method: POST
    data_selector: items
    params:
      skip: '0'
      take: '100'
      ascending: 'true'
- name: models
  endpoint:
    path: /models
    method: POST
    data_selector: items
    params:
      skip: '0'
      take: '100'
- name: entities
  endpoint:
    path: /entities/{entityId}
    method: POST
    data_selector: resource
- name: intent
  endpoint:
    path: /intentions/{intentId}
    method: POST
    data_selector: resource
- name: intent_answers
  endpoint:
    path: /intentions/{intentId}/answers
    method: POST
    data_selector: items
    params:
      skip: '0'
      take: '100'
      ascending: 'true'
- name: confusion_matrices
  endpoint:
    path: /analytics/confusion-matrix
    method: POST
    data_selector: items
    params:
      skip: '0'
      take: '100'
      ascending: 'true'
- name: intent_questions
  endpoint:
    path: /intentions/{intentId}/questions
    method: GET
    data_selector: resource.items
    params:
      skip: '0'
      take: '100'
      ascending: 'true'
- name: analysis
  endpoint:
    path: /analysis
    method: GET
    data_selector: resource.items
    params:
      $skip: '0'
      $take: '10'
- name: merge_intent
  endpoint:
    path: /intentions
    method: MERGE
    data_selector: resource.id
    params: {}
- name: publish_model
  endpoint:
    path: /models
    method: SET
    data_selector: resource.id
    params: {}
- name: set_analysis_feedback
  endpoint:
    path: /analysis/{analyze_id}/feedback
    method: SET
    data_selector: resource.status
    params:
      feedback: rejected
      intentionId: '{other_intent_id}'
- name: content_analysis
  endpoint:
    path: /content/analysis
    method: POST
    data_selector: resource
- name: get_content
  endpoint:
    path: /content/{id}
    method: GET
    data_selector: resource
- name: get_contents
  endpoint:
    path: /content
    method: GET
    data_selector: resource
- name: send_analysis_by_email
  endpoint:
    path: /enhancement/send-by-email
    method: POST
    data_selector: resource
- name: set_analysis_feedback
  endpoint:
    path: /analysis/feedback
    method: POST
    data_selector: resource
- name: train_model
  endpoint:
    path: /models
    method: POST
    data_selector: resource
- name: content
  endpoint:
    path: /content/{id}
    method: POST
    data_selector: resource
- name: delete_content
  endpoint:
    path: /content/{id}
    method: DELETE
- name: delete_all_contents
  endpoint:
    path: /content
    method: DELETE
- name: create_list
  endpoint:
    path: /lists
    method: POST
    data_selector: resource
- name: get_all_lists
  endpoint:
    path: /lists
    method: GET
- name: delete_list
  endpoint:
    path: /lists/{{distribution_list_name}}@broadcast.msging.net
    method: DELETE
- name: add_recipient
  endpoint:
    path: /lists/your_distributionList@broadcast.msging.net/recipients
    method: POST
    data_selector: resource
- name: remove_recipient
  endpoint:
    path: /lists/your_distributionList@broadcast.msging.net/recipients/551100001111@0mn.io
    method: DELETE
    data_selector: ''
- name: get_recipients
  endpoint:
    path: /lists/your_distributionList@broadcast.msging.net/recipients
    method: GET
    data_selector: resource.items
    params:
      $skip: 0
      $take: 5
- name: send_message
  endpoint:
    path: /messages
    method: POST
    data_selector: event
- name: get_documents
  endpoint:
    path: /buckets
    method: GET
    data_selector: resource.items
- name: get_document
  endpoint:
    path: /buckets/abcd%c3%a9%201234
    method: GET
    data_selector: resource
- name: delete_document
  endpoint:
    path: /buckets/abcd%c3%a9%201234
    method: DELETE
    data_selector: ''
- name: change_user_state
  endpoint:
    path: /contexts/{{user-identity}}/stateid@{{flow-identifier}}
    method: POST
    data_selector: resource
    params: {}
- name: change_subflow_context
  endpoint:
    path: /contexts/{{user-identity}}/currentFlowSession@{{flow-identifier}}
    method: POST
    data_selector: resource
    params: {}
- name: create_context_variable
  endpoint:
    path: /contexts/{identity}/{variableName}
    method: POST
    data_selector: resource
    params: {}
- name: change_builder_flow
  endpoint:
    path: /buckets/blip_portal:builder_working_flow
    method: POST
    data_selector: resource
    params: {}
- name: ping
  endpoint:
    path: /ping
    method: GET
- name: delete_context_variable
  endpoint:
    path: /contexts/{identity}/{variableName}
    method: DELETE
- name: get_user_context_variables
  endpoint:
    path: /contexts/{identity}
    method: GET
- name: get_user_state
  endpoint:
    path: /contexts/{{user-identity}}/stateid@{{flow-identifier}}
    method: GET
- name: reset_user_state
  endpoint:
    path: /contexts/{{user-identity}}/stateid@{{flow-identifier}}
    method: DELETE
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: resource.items
- name: notifications
  endpoint:
    path: /notifications
    method: GET
    data_selector: resource.items
- name: thread_messages
  endpoint:
    path: /threads/{{user_identity}}
    method: GET
    data_selector: resource.items
    params:
      refreshExpiredMedia: 'true'
- name: log_configurations
  endpoint:
    path: /log-configurations
    method: SET
    data_selector: resource
- name: persistent_menu
  endpoint:
    path: /profile/persistent-menu
    method: POST
    data_selector: resource
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: POST
    data_selector: resource
    params: {}
- name: comments
  endpoint:
    path: /contacts/{contactIdentity}/comments
    method: POST
    data_selector: resource
    params: {}
- name: profile_properties
  endpoint:
    path: /profile
    method: POST
    data_selector: resource
    params: {}
- name: delete_profile_property
  endpoint:
    path: /profile/{propertyIdentifier}
    method: DELETE
    data_selector: status
    params: {}
- name: get_profile_property_messages
  endpoint:
    path: /profile/{propertyIdentifier}
    method: GET
    data_selector: resource
    params: {}
- name: set_start_message
  endpoint:
    path: /profile/get-started
    method: POST
    data_selector: status
    params: {}
- name: set_start_button
  endpoint:
    path: /profile/get-started-label
    method: POST
    data_selector: status
    params: {}
- name: set_complex_persistent_menu
  endpoint:
    path: /profile/persistent-menu
    method: POST
    data_selector: status
    params: {}
- name: set_greeting_message
  endpoint:
    path: /profile/greeting
    method: POST
    data_selector: status
    params: {}
- name: contact
  endpoint:
    path: /contacts
    method: GET
    data_selector: resource.items
    params: {}
- name: close_ticket
  endpoint:
    path: /tickets/{ticketId}/close
    method: SET
    data_selector: resource
    params: {}
- name: forward_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: tags
  endpoint:
    path: /tags/active
    method: GET
    data_selector: resource.items
    params: {}
- name: tickets
  endpoint:
    path: /tickets
    method: SET
    data_selector: resource
    params: {}
- name: ticket_status
  endpoint:
    path: /tickets/change-status
    method: SET
    data_selector: resource
    params: {}
- name: tickets
  endpoint:
    path: /tickets
    method: POST
    data_selector: resource
- name: attendance-queues
  endpoint:
    path: /attendance-queues
    method: POST
    data_selector: resource
- name: rules
  endpoint:
    path: /rules
    method: POST
    data_selector: resource
- name: priority-rules
  endpoint:
    path: /priority-rules
    method: POST
    data_selector: resource
- name: delete_custom_reply_category
  endpoint:
    path: /replies/{categoryId}
    method: DELETE
- name: delete_rule
  endpoint:
    path: /rules/{ruleId}
    method: DELETE
- name: delete_priority_rule
  endpoint:
    path: /priority-rules/{priorityRuleId}
    method: DELETE
- name: delete_agent
  endpoint:
    path: /attendants/{agentId}
    method: DELETE
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: ''
    params: {}
- name: commands
  endpoint:
    path: /commands
    method: POST
    data_selector: ''
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: ''
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: messages
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notifications
- name: commands
  endpoint:
    path: /commands
    method: POST
    data_selector: commands
- name: copy_and_paste
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: input
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: collection
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: input
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: location
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: location
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: media_link
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: document_select
  endpoint:
    path: /messages
    method: POST
    data_selector: content.items
    params: {}
- name: message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: reaction
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: redirect
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: reply_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: resource_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: sensitive_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: web_link
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: event_track
  endpoint:
    path: /event-track
    method: POST
    data_selector: resource
    params: {}
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: resource
    params: {}
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: resource
    params: {}
- name: Account
  endpoint:
    path: /services/data/vXX.X/sobjects/Account
    method: GET
    data_selector: records
- name: AccountContact
  endpoint:
    path: /services/data/vXX.X/sobjects/AccountContact
    method: GET
    data_selector: records
- name: AgentProductivitySummary
  endpoint:
    path: /services/data/vXX.X/sobjects/AgentProductivitySummary
    method: GET
    data_selector: records
- name: event_track
  endpoint:
    path: /event-track
    method: GET
    data_selector: items
    params: {}
- name: event_track_payments
  endpoint:
    path: /event-track/payments
    method: GET
    data_selector: items
    params:
      startDate: '2019-06-21'
      endDate: '2019-06-28'
      $take: 10
- name: event_track_success_order
  endpoint:
    path: /event-track/payments/success-order
    method: GET
    data_selector: items
    params:
      startDate: '2019-06-21'
      endDate: '2019-06-28'
      $take: 10
- name: intentions
  endpoint:
    path: /intentions
    method: set
- name: entities
  endpoint:
    path: /entities
    method: set
- name: analysis
  endpoint:
    path: /analysis
    method: get
- name: get_reports
  endpoint:
    path: /reports
    method: GET
    data_selector: resource.items
- name: get_report_by_id
  endpoint:
    path: /reports/{reportId}
    method: GET
    data_selector: resource
- name: get_charts_in_report
  endpoint:
    path: /reports/{reportId}/charts
    method: GET
    data_selector: resource.items
- name: update_chart_in_report
  endpoint:
    path: /reports/{reportId}/charts/{chartId}
    method: SET
    data_selector: resource
- name: delete_chart
  endpoint:
    path: /reports/{reportId}/charts/{chartId}
    method: DELETE
- name: delete_report
  endpoint:
    path: /reports/{reportId}
    method: DELETE
- name: get_active_messages
  endpoint:
    path: /metrics/active-messages/{interval}
    method: GET
    data_selector: resource.items
- name: get_active_messages_per_domain
  endpoint:
    path: /metrics/active-messages-per-domain/{interval}
    method: GET
    data_selector: resource.items
- name: get_active_users
  endpoint:
    path: /metrics/active-identity/{interval}
    method: GET
- name: analysis
  endpoint:
    path: /analysis
    method: SET
    data_selector: resource
    params: {}
- name: entities
  endpoint:
    path: /entities
    method: SET
    data_selector: resource
    params: {}
- name: intentions
  endpoint:
    path: /intentions/{intentId}/answers
    method: SET
    data_selector: resource
    params: {}
- name: confusion_matrix
  endpoint:
    path: /analytics/confusion-matrix
    method: SET
    data_selector: resource
    params: {}
- name: delete_intent
  endpoint:
    path: /intentions/{intent_id}
    method: DELETE
    data_selector: status
- name: delete_confusion_matrix
  endpoint:
    path: /analytics/confusion-matrix/{confusionMatrixId}
    method: DELETE
    data_selector: status
- name: get_confusion_matrix
  endpoint:
    path: /analytics/confusion-matrix/{confusionMatrixId}
    method: GET
    data_selector: resource
- name: get_model
  endpoint:
    path: /model/{modelId}
    method: GET
    data_selector: resource
- name: get_models_summary
  endpoint:
    path: /models/summary
    method: GET
    data_selector: resource
- name: get_entities
  endpoint:
    path: /entities
    method: GET
    data_selector: resource
- name: entities
  endpoint:
    path: /entities
    method: GET
    data_selector: items
    params:
      skip: 0
      take: 100
      ascending: true
- name: intents
  endpoint:
    path: /intentions
    method: GET
    data_selector: items
    params:
      skip: 0
      take: 100
      ascending: true
- name: models
  endpoint:
    path: /models
    method: GET
    data_selector: items
    params:
      skip: 0
      take: 100
      ascending: true
- name: confusion_matrices
  endpoint:
    path: /analytics/confusion-matrix
    method: GET
    data_selector: items
    params:
      skip: 0
      take: 100
      ascending: true
- name: content_analysis
  endpoint:
    path: /content/analysis
    method: SET
    data_selector: resource
- name: content_feedback
  endpoint:
    path: /analysis/feedback
    method: SET
    data_selector: resource
- name: content_results
  endpoint:
    path: /content
    method: GET
    data_selector: resource
- name: intent_questions
  endpoint:
    path: /intentions/{intentId}/questions
    method: GET
    data_selector: resource.items
    params:
      skip: 0
      take: 100
      ascending: true
- name: analysis
  endpoint:
    path: /analysis?$skip=0&$take=10
    method: GET
    data_selector: resource.items
    params:
      skip: 0
      take: 10
- name: merge_intent
  endpoint:
    path: /intentions
    method: MERGE
    data_selector: resource.id
    params: {}
- name: publish_model
  endpoint:
    path: /models
    method: SET
    data_selector: resource.id
    params: {}
- name: set_analysis_feedback
  endpoint:
    path: /analysis/{analyze_id}/feedback
    method: SET
    data_selector: status
    params:
      feedback: approved
- name: recipients
  endpoint:
    path: /lists/your_distributionList@broadcast.msging.net/recipients
    method: GET
    data_selector: items
- name: buckets
  endpoint:
    path: /buckets
    method: GET
    data_selector: items
- name: content
  endpoint:
    path: /content
    method: POST
    data_selector: resource
- name: delete_content
  endpoint:
    path: /content/{id}
    method: DELETE
    data_selector: null
- name: delete_all_contents
  endpoint:
    path: /content
    method: DELETE
    data_selector: null
- name: distribution_list
  endpoint:
    path: /lists
    method: POST
    data_selector: resource
- name: get_all_lists
  endpoint:
    path: /lists
    method: GET
    data_selector: resource.items
- name: delete_list
  endpoint:
    path: /lists/{{distribution_list_name}}@broadcast.msging.net
    method: DELETE
    data_selector: null
- name: add_member_to_list
  endpoint:
    path: /lists/your_distributionList@broadcast.msging.net/recipients
    method: POST
    data_selector: resource
- name: remove_member_from_list
  endpoint:
    path: /lists/your_distributionList@broadcast.msging.net/recipients/551100001111@0mn.io
    method: DELETE
    data_selector: null
- name: get_all_members_of_list
  endpoint:
    path: /lists/your_distributionList@broadcast.msging.net/recipients?$skip=0&$take=5
    method: GET
    data_selector: resource.items
- name: context_variable
  endpoint:
    path: /contexts/{identity}/{variableName}
    method: DELETE
- name: get_context_variables
  endpoint:
    path: /contexts/{identity}
    method: GET
- name: get_context_variable
  endpoint:
    path: /contexts/{identity}/{variableName}
    method: GET
- name: ping
  endpoint:
    path: /ping
    method: GET
- name: change_user_state
  endpoint:
    path: /contexts/{{user-identity}}/stateid@{{flow-identifier}}
    method: SET
- name: change_builder_flow
  endpoint:
    path: /buckets/blip_portal:builder_working_flow
    method: SET
- name: change_builder_flow_subflow
  endpoint:
    path: /subflows/{{shotname-of-subflow}}/publish
    method: SET
- name: get_user_state
  endpoint:
    path: /contexts/{{user-identity}}/stateid@{{flow-identifier}}
    method: GET
    data_selector: resource.items
- name: reset_user_state
  endpoint:
    path: /contexts/{{user-identity}}/stateid@{{flow-identifier}}
    method: DELETE
    data_selector: resource.items
- name: get_last_messages
  endpoint:
    path: /threads/{{user_identity}}?refreshExpiredMedia=true
    method: GET
    data_selector: resource.items
- name: get_logged_messages
  endpoint:
    path: /messages
    method: GET
    data_selector: resource.items
- name: get_logged_notifications
  endpoint:
    path: /notifications
    method: GET
    data_selector: resource.items
- name: get_notifications_of_message
  endpoint:
    path: /notifications?id={messageId}
    method: GET
    data_selector: resource.items
- name: contacts
  endpoint:
    path: /contacts
    method: SET
    data_selector: resource
    params: {}
- name: persistent_menu
  endpoint:
    path: /profile/persistent-menu
    method: SET
    data_selector: resource
    params: {}
- name: greeting
  endpoint:
    path: /profile/greeting
    method: SET
    data_selector: resource
    params: {}
- name: log_configurations
  endpoint:
    path: /log-configurations
    method: POST
    data_selector: resource
    params: {}
- name: profile
  endpoint:
    path: /profile
    method: POST
    data_selector: resource
    params: {}
- name: get_started
  endpoint:
    path: /profile/get-started
    method: POST
    data_selector: resource
    params: {}
- name: get_started_label
  endpoint:
    path: /profile/get-started-label
    method: POST
    data_selector: resource
    params: {}
- name: persistent_menu
  endpoint:
    path: /profile/persistent-menu
    method: POST
    data_selector: resource
    params: {}
- name: tickets
  endpoint:
    path: /tickets
    method: SET
    data_selector: resource
    params: {}
- name: active_tags
  endpoint:
    path: /tags/active
    method: GET
    data_selector: resource.items
    params: {}
- name: comments
  endpoint:
    path: /contacts/{contactIdentity}/comments
    method: GET
    data_selector: resource.items
- name: contact
  endpoint:
    path: /contacts/{contactIdentity}
    method: GET
    data_selector: resource
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: resource.items
    params:
      $skip: '0'
      $take: '3'
- name: attendants
  endpoint:
    path: /attendants
    method: SET
    data_selector: resource
- name: custom_replies
  endpoint:
    path: /replies/{categoryId}
    method: SET
    data_selector: resource
- name: tickets
  endpoint:
    path: /tickets
    method: POST
    data_selector: resource
- name: attendance-queues
  endpoint:
    path: /attendance-queues
    method: POST
    data_selector: resource
- name: rules
  endpoint:
    path: /rules
    method: POST
    data_selector: resource
- name: priority-rules
  endpoint:
    path: /priority-rules
    method: POST
    data_selector: resource
- name: replies
  endpoint:
    path: /replies/{categoryId}
    method: DELETE
- name: delete_rule
  endpoint:
    path: /rules/{ruleId}
    method: DELETE
- name: delete_priority_rule
  endpoint:
    path: /priority-rules/{priorityRuleId}
    method: DELETE
- name: delete_agent
  endpoint:
    path: /attendants/{agentId}
    method: DELETE
- name: tickets
  endpoint:
    path: /tickets/{ticketId}/close
    method: SET
    data_selector: resource
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: agent
  endpoint:
    path: /agents
    method: GET
    data_selector: agents
- name: ticket
  endpoint:
    path: /tickets
    method: GET
    data_selector: tickets
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: messages
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notifications
- name: message
  endpoint:
    path: /messages
    method: POST
    data_selector: messages
- name: notification
  endpoint:
    path: /notifications
    method: POST
    data_selector: notifications
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: content
- name: commands
  endpoint:
    path: /commands
    method: POST
    data_selector: resource
- name: location_request
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: location_response
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: document_select
  endpoint:
    path: /messages
    method: POST
    data_selector: content.items
    params: {}
- name: location
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: media_link
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: audio
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: document
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: gif
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: image
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: video
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: send_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: Contact
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: reply_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: resource_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: sensitive_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: web_link_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: extensions
  endpoint:
    path: /extensions
    method: GET
    data_selector: extensions
    params: {}
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: reports
    params: {}
- name: event_track
  endpoint:
    path: /event-track
    method: GET
    data_selector: resource.items
    params: {}
- name: event_category_actions_counter
  endpoint:
    path: /event-track/payments
    method: GET
    data_selector: resource.items
    params:
      startDate: '2019-06-21'
      endDate: '2019-06-28'
      $take: 10
- name: event_details
  endpoint:
    path: /event-track/payments/success-order
    method: GET
    data_selector: resource.items
    params:
      startDate: '2019-06-21'
      endDate: '2019-06-28'
      $take: 10
- name: create_report
  endpoint:
    path: /reports
    method: POST
    data_selector: resource
    params: {}
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: items
- name: charts
  endpoint:
    path: /reports/{reportId}/charts
    method: GET
    data_selector: items
- name: active_messages
  endpoint:
    path: /metrics/active-messages/{interval}
    method: GET
    data_selector: items
- name: active_messages_per_domain
  endpoint:
    path: /metrics/active-messages-per-domain/{interval}
    method: GET
    data_selector: items
- name: active_users
  endpoint:
    path: /metrics/active-identity/{interval}
    method: GET
    data_selector: items
- name: active_identity_metrics
  endpoint:
    path: /metrics/active-identity/{interval}
    method: get
- name: engaged_identity_metrics
  endpoint:
    path: /metrics/engaged-identity/{interval}
    method: get
- name: received_messages_metrics
  endpoint:
    path: /metrics/received-messages/{interval}
    method: get
- name: sent_messages_metrics
  endpoint:
    path: /metrics/sent-messages/{interval}
    method: get
- name: intentions
  endpoint:
    path: /intentions
    method: get
- name: entities
  endpoint:
    path: /entities
    method: get
- name: analysis
  endpoint:
    path: /analysis
    method: get
- name: confusion_matrix
  endpoint:
    path: /analytics/confusion-matrix/{confusionMatrixId}
    method: GET
- name: model
  endpoint:
    path: /model/{modelId}
    method: GET
- name: model_summary
  endpoint:
    path: /models/summary
    method: GET
- name: entities
  endpoint:
    path: /entities
    method: GET
- name: analysis
  endpoint:
    path: /analysis
    method: POST
    data_selector: resource
    params: {}
- name: entities
  endpoint:
    path: /entities
    method: POST
    data_selector: resource
    params: {}
- name: intentions
  endpoint:
    path: /intentions/{intentId}/answers
    method: POST
    data_selector: resource
    params: {}
- name: confusion_matrix
  endpoint:
    path: /analytics/confusion-matrix
    method: POST
    data_selector: resource
    params: {}
- name: entities
  endpoint:
    path: /entities
    method: GET
    data_selector: items
    params:
      skip: '0'
      take: '100'
      ascending: 'true'
- name: intents
  endpoint:
    path: /intentions
    method: GET
    data_selector: items
    params:
      skip: '0'
      take: '100'
      ascending: 'true'
- name: models
  endpoint:
    path: /models
    method: GET
    data_selector: items
    params:
      skip: '0'
      take: '100'
      ascending: 'true'
- name: confusion_matrices
  endpoint:
    path: /analytics/confusion-matrix
    method: GET
    data_selector: items
    params:
      skip: '0'
      take: '100'
      ascending: 'true'
- name: intent_questions
  endpoint:
    path: /intentions/{intentId}/questions
    method: GET
    data_selector: resource.items
    params:
      skip: '0'
      take: '100'
      ascending: 'true'
- name: analysis
  endpoint:
    path: /analysis?$skip=0&$take=10
    method: GET
    data_selector: resource.items
- name: merge_intent
  endpoint:
    path: /intentions
    method: MERGE
    data_selector: resource
    params: {}
- name: publish_model
  endpoint:
    path: /models
    method: SET
    data_selector: resource
    params: {}
- name: send_rejected_feedback
  endpoint:
    path: /analysis/{analyze_id}/feedback
    method: SET
    data_selector: resource
    params:
      feedback: rejected
- name: send_approved_feedback
  endpoint:
    path: /analysis/{analyze_id}/feedback
    method: SET
    data_selector: resource
    params:
      feedback: approved
- name: content_analysis
  endpoint:
    path: /content/analysis
    method: SET
    data_selector: resource
- name: content_feedback
  endpoint:
    path: /analysis/feedback
    method: SET
    data_selector: resource
- name: train_model
  endpoint:
    path: /models
    method: SET
    data_selector: resource
- name: get_contents
  endpoint:
    path: /content
    method: GET
    data_selector: resource.items
- name: get_content
  endpoint:
    path: /content/{id}
    method: GET
    data_selector: resource
- name: set_content
  endpoint:
    path: /content/{id}
    method: SET
    data_selector: resource
- name: content
  endpoint:
    path: /content
    method: POST
    data_selector: resource
- name: distribution_list
  endpoint:
    path: /lists
    method: POST
    data_selector: resource
- name: recipients
  endpoint:
    path: /lists/your_distributionList@broadcast.msging.net/recipients
    method: GET
    data_selector: items
    params:
      skip: '0'
      take: '5'
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: event
    params: {}
- name: buckets
  endpoint:
    path: /buckets
    method: GET
    data_selector: items
    params: {}
- name: change_user_state
  endpoint:
    path: /contexts/{{user-identity}}/stateid@{{flow-identifier}}
    method: set
    data_selector: resource
- name: get_user_context_variables
  endpoint:
    path: /contexts/{identity}
    method: get
    data_selector: resource
- name: get_specific_context_variable
  endpoint:
    path: /contexts/{identity}/{variableName}
    method: get
    data_selector: resource
- name: delete_context_variable
  endpoint:
    path: /contexts/{identity}/{variableName}
    method: delete
    data_selector: resource
- name: get_user_state
  endpoint:
    path: /contexts/{{user-identity}}/stateid@{{flow-identifier}}
    method: GET
    data_selector: resource.items
    params: {}
- name: reset_user_state
  endpoint:
    path: /contexts/{{user-identity}}/stateid@{{flow-identifier}}
    method: DELETE
    data_selector: resource.items
    params: {}
- name: get_last_messages
  endpoint:
    path: /threads/{{user_identity}}?refreshExpiredMedia=true
    method: GET
    data_selector: resource.items
    params: {}
- name: get_logged_messages
  endpoint:
    path: /messages
    method: GET
    data_selector: resource.items
    params: {}
- name: get_logged_notifications
  endpoint:
    path: /notifications
    method: GET
    data_selector: resource.items
    params: {}
- name: get_notifications_of_message
  endpoint:
    path: /notifications?id={messageId}
    method: GET
    data_selector: resource.items
    params: {}
- name: greeting_message
  endpoint:
    path: /profile/greeting
    method: SET
    data_selector: resource
- name: persistent_menu
  endpoint:
    path: /profile/persistent-menu
    method: SET
    data_selector: resource
- name: contacts
  endpoint:
    path: /contacts
    method: SET
    data_selector: resource
- name: update_contact
  endpoint:
    path: /contacts
    method: MERGE
    data_selector: resource
- name: log_configurations
  endpoint:
    path: /log-configurations
    method: POST
    data_selector: resource
    params:
      enabled: true
- name: profile
  endpoint:
    path: /profile
    method: POST
    data_selector: resource
    params: {}
- name: get_started
  endpoint:
    path: /profile/get-started
    method: POST
    data_selector: resource
    params: {}
- name: get_started_label
  endpoint:
    path: /profile/get-started-label
    method: POST
    data_selector: resource
    params: {}
- name: persistent_menu
  endpoint:
    path: /profile/persistent-menu
    method: POST
    data_selector: resource
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: resource.items
- name: comments
  endpoint:
    path: /contacts/{contactIdentity}/comments
    method: GET
    data_selector: resource.items
- name: contact
  endpoint:
    path: /contacts/{contactIdentity}
    method: GET
    data_selector: resource
- name: attendants
  endpoint:
    path: /attendants
    method: SET
    data_selector: resource
- name: custom_replies
  endpoint:
    path: /replies/{categoryId}
    method: SET
    data_selector: resource.items
- name: tickets
  endpoint:
    path: /tickets
    method: SET
    data_selector: resource
    params: {}
- name: tags
  endpoint:
    path: /tags/active
    method: GET
    data_selector: resource.items
    params: {}
- name: close_ticket
  endpoint:
    path: /tickets/{ticketId}/close
    method: SET
    data_selector: resource
    params: {}
- name: send_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: tickets
  endpoint:
    path: /tickets
    method: POST
    data_selector: resource
- name: attendance-queues
  endpoint:
    path: /attendance-queues
    method: POST
    data_selector: resource
- name: rules
  endpoint:
    path: /rules
    method: POST
    data_selector: resource
- name: priority-rules
  endpoint:
    path: /priority-rules
    method: POST
    data_selector: resource
- name: custom-replies
  endpoint:
    path: /replies/{categoryId}
    method: DELETE
- name: attendance-rule
  endpoint:
    path: /rules/{ruleId}
    method: DELETE
- name: priority-rule
  endpoint:
    path: /priority-rules/{priorityRuleId}
    method: DELETE
- name: agent
  endpoint:
    path: /attendants/{agentId}
    method: DELETE
- name: rule
  endpoint:
    path: /rules/{ruleId}
    method: GET
- name: priority_rule
  endpoint:
    path: /priority-rules/{priorityRuleId}
    method: GET
- name: ticket
  endpoint:
    path: /ticket/{ticketId}
    method: GET
- name: agents_metrics
  endpoint:
    path: /monitoring/attendants?version=2
    method: GET
- name: agents_productivity
  endpoint:
    path: /analytics/reports/attendants/productivity?beginDate=2019-04-15&endDate=2019-06-22
    method: GET
- name: active_tickets
  endpoint:
    path: /monitoring/tickets?version=2
    method: GET
- name: all_agents
  endpoint:
    path: /attendants
    method: GET
- name: closed_tickets
  endpoint:
    path: /tickets?$filter=(CustomerIdentity%20eq%20'{customer_identity}')&$closed=true&$skip=0&$take=100
    method: GET
- name: custom_replies
  endpoint:
    path: /replies/{categoryId}
    method: POST
    data_selector: resource.items
    params: {}
- name: agents_report
  endpoint:
    path: /analytics/reports/attendants?beginDate=2019-04-15&endDate=2019-06-22
    method: POST
    data_selector: resource.items
    params: {}
- name: attendance_time_report
  endpoint:
    path: /analytics/reports/attendancetime?beginDate=2019-04-15&endDate=2019-06-22
    method: POST
    data_selector: resource.attendanceTime
    params: {}
- name: tags_report
  endpoint:
    path: /analytics/reports/tags?beginDate=2019-04-15&endDate=2019-06-22
    method: POST
    data_selector: resource.items
    params: {}
- name: teams_report
  endpoint:
    path: /analytics/reports/teams?beginDate=2019-04-15&endDate=2019-06-22
    method: POST
    data_selector: resource.items
    params: {}
- name: ticket_timing_report
  endpoint:
    path: /analytics/reports/timings?beginDate=2019-04-15&endDate=2019-06-22
    method: POST
    data_selector: resource
    params: {}
- name: priority_rule
  endpoint:
    path: /priority-rules/{priorityRuleId}
    method: POST
    data_selector: resource
    params: {}
- name: ticket
  endpoint:
    path: /ticket/{ticketId}
    method: POST
    data_selector: resource
    params: {}
- name: messages
  endpoint:
    path: /tickets/{ticketId}/messages
    method: GET
    data_selector: resource.items
    params:
      $take: 100
      $ascending: true
      getFromOwnerIfTunnel: true
- name: teams
  endpoint:
    path: /teams
    method: GET
    data_selector: resource.items
    params: {}
- name: tickets
  endpoint:
    path: /tickets
    method: GET
    data_selector: resource.items
    params:
      $take: 10
- name: rules
  endpoint:
    path: /rules
    method: GET
    data_selector: resource.items
    params: {}
- name: priority_rules
  endpoint:
    path: /priority-rules
    method: GET
    data_selector: resource.items
    params: {}
- name: custom_replies
  endpoint:
    path: /replies
    method: GET
    data_selector: resource.items
    params: {}
- name: agents_online
  endpoint:
    path: /teams/agents-online
    method: GET
    data_selector: resource.items
    params: {}
- name: attendance_history
  endpoint:
    path: /attendance-history/send-by-email
    method: POST
    data_selector: resource
    params: {}
- name: ticket_transfer
  endpoint:
    path: /tickets/{ticketId}/transfer
    method: POST
    data_selector: resource
    params: {}
- name: media_refresh
  endpoint:
    path: /refresh-media-uri
    method: POST
    data_selector: resource
    params: {}
- name: media_upload_token
  endpoint:
    path: /upload-media-uri
    method: POST
    data_selector: resource
    params: {}
- name: resource_management
  endpoint:
    path: /resources
    method: POST
    data_selector: resource
    params: {}
- name: open_tickets
  endpoint:
    path: /monitoring/open-tickets?version=2
    method: POST
    data_selector: resource.items
    params: {}
- name: teams
  endpoint:
    path: /monitoring/teams?version=2
    method: POST
    data_selector: resource.items
    params: {}
- name: ticket_metrics
  endpoint:
    path: /monitoring/ticket-metrics?version=2
    method: POST
    data_selector: resource
    params: {}
- name: tickets
  endpoint:
    path: /monitoring/tickets?version=2
    method: POST
    data_selector: resource
    params: {}
- name: tickets_per_hour
  endpoint:
    path: /monitoring/tickets-per-hour?version=2
    method: POST
    data_selector: resource.items
    params: {}
- name: waiting_tickets
  endpoint:
    path: /tickets?$filter=status%20eq%20'waiting'&$skip=0&$take=100
    method: POST
    data_selector: resource.items
    params: {}
- name: waiting_tickets_metrics
  endpoint:
    path: /monitoring/waiting-tickets?version=2
    method: POST
    data_selector: resource.items
    params: {}
- name: schedules
  endpoint:
    path: /schedules
    method: GET
    data_selector: items
- name: delegations
  endpoint:
    path: /delegations/{target}/{instance}
    method: GET
    data_selector: resource
- name: account_keys
  endpoint:
    path: /account/keys
    method: GET
    data_selector: items
- name: delete_resource
  endpoint:
    path: /resources/abcd%c3%a9%201234
    method: DELETE
    data_selector: ''
    params: {}
- name: get_resource
  endpoint:
    path: /resources/abcd%c3%a9%201234
    method: GET
    data_selector: ''
    params: {}
- name: get_all_resources
  endpoint:
    path: /resources
    method: GET
    data_selector: ''
    params: {}
- name: store_resource
  endpoint:
    path: /resources/abcd%c3%a9%201234
    method: SET
    data_selector: ''
    params: {}
- name: schedule_message
  endpoint:
    path: /schedules
    method: SET
    data_selector: ''
    params: {}
- name: get_scheduled_message
  endpoint:
    path: /schedules/ad19adf8-f5ec-4fff-8aeb-2e7ebe9f7a67
    method: GET
    data_selector: ''
    params: {}
- name: cancel_schedule
  endpoint:
    path: /schedules/{messageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: session_events
  endpoint:
    path: /sessions/{stripeSessionId}/events
    method: GET
    data_selector: items
- name: get_tunnel_info
  endpoint:
    path: /tunnels/{tunnelId}
    method: GET
    data_selector: resource
- name: payment_intent
  endpoint:
    path: /payment/{contactIdentity}/payment-intent
    method: POST
    data_selector: resource
    params: {}
- name: confirm_payment_intent
  endpoint:
    path: /payment/{contactIdentity}/confirm-payment-intent
    method: POST
    data_selector: resource
    params: {}
- name: payment_methods
  endpoint:
    path: /payment-methods
    method: GET
    data_selector: resource.items
    params: {}
- name: payment_intent_history
  endpoint:
    path: /payment/{contactIdentity}/payment-intent-history
    method: GET
    data_selector: resource.items
    params: {}
- name: session_history
  endpoint:
    path: /payment/{contactIdentity}/session-history
    method: GET
    data_selector: resource.items
    params: {}
- name: payment_intent_events
  endpoint:
    path: /payment-intents/{stripePaymentIntentId}/events
    method: GET
    data_selector: resource.items
    params: {}
- name: directory_query
  endpoint:
    path: /commands
    method: POST
    data_selector: resource
    params: {}
- name: client_info_messenger
  endpoint:
    path: /commands
    method: POST
    data_selector: resource
    params: {}
- name: client_info_telegram
  endpoint:
    path: /commands
    method: POST
    data_selector: resource
    params: {}
- name: verify_customer_identifier
  endpoint:
    path: /commands
    method: POST
    data_selector: resource
    params: {}
- name: send_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: notification
  endpoint:
    path: /notifications
    method: POST
    data_selector: ''
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: id
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: id
- name: ticket
  endpoint:
    path: /ticket/{ticketId}
    method: POST
    data_selector: resource
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: messages
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notifications
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: id
    params: {}
- name: ticket
  endpoint:
    path: /commands
    method: POST
    data_selector: resource
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: messages
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notifications
    params: {}
- name: chatbot
  endpoint:
    path: /chatbot
    method: POST
    data_selector: data
    params: {}
- name: ticket
  endpoint:
    path: /commands
    method: POST
    data_selector: resource
    params: {}
- name: priority_rule
  endpoint:
    path: /priority-rules/{priorityRuleId}
    method: POST
    data_selector: resource
    params: {}
- name: collection
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: copy_and_paste
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: input
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: list
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: location
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: media_link
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: media_link
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: select_menu
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: document_collection
  endpoint:
    path: /messages
    method: POST
    data_selector: content.items
    params: {}
- name: native_content
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: plain_text
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: reaction
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: redirect
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: resource
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: sensitive_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: weblink_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: contact
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: custom_reply
  endpoint:
    path: /custom-replies
    method: GET
    data_selector: records
- name: distribution_list
  endpoint:
    path: /distribution-lists
    method: GET
    data_selector: records
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: event_track
  endpoint:
    path: /event-track
    method: GET
    data_selector: resource.items
- name: category_actions_counter
  endpoint:
    path: /event-track/{category}?startDate={startDate}&endDate={endDate}&$take={take}
    method: GET
    data_selector: resource.items
- name: event_details
  endpoint:
    path: /event-track/payments/success-order
    method: GET
    data_selector: resource.items
    params:
      startDate: '2019-06-21'
      endDate: '2019-06-28'
      $take: 10
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: resource.items
    params: {}
- name: charts
  endpoint:
    path: /reports/{reportId}/charts
    method: GET
    data_selector: resource.items
    params: {}
- name: received_messages
  endpoint:
    path: /metrics/received-messages/{interval}
    method: GET
    data_selector: resource.items
- name: sent_messages
  endpoint:
    path: /metrics/sent-messages/{interval}
    method: GET
    data_selector: resource.items
- name: analysis
  endpoint:
    path: /analysis
    method: GET
    data_selector: resource.items
- name: active_messages
  endpoint:
    path: /metrics/active-messages/{interval}
    method: GET
    data_selector: resource.items
    params: {}
- name: active_messages_per_domain
  endpoint:
    path: /metrics/active-messages-per-domain/{interval}
    method: GET
    data_selector: resource.items
    params: {}
- name: active_users
  endpoint:
    path: /metrics/active-identity/{interval}
    method: GET
    data_selector: resource.items
    params: {}
- name: engaged_users
  endpoint:
    path: /metrics/engaged-identity/{interval}
    method: GET
    data_selector: resource.items
    params: {}
- name: analysis
  endpoint:
    path: /analysis
    method: POST
    data_selector: resource
    params: {}
- name: intentions
  endpoint:
    path: /intentions
    method: POST
    data_selector: resource
    params: {}
- name: entities
  endpoint:
    path: /entities
    method: POST
    data_selector: resource
    params: {}
- name: confusion_matrix
  endpoint:
    path: /analytics/confusion-matrix
    method: POST
    data_selector: resource
    params: {}
- name: entities
  endpoint:
    path: /entities
    method: GET
    data_selector: items
- name: intents
  endpoint:
    path: /intentions
    method: GET
    data_selector: items
- name: confusion_matrix
  endpoint:
    path: /analytics/confusion-matrix/{confusionMatrixId}
    method: GET
    data_selector: resource
- name: model
  endpoint:
    path: /model/{modelId}
    method: GET
    data_selector: resource
- name: model_summary
  endpoint:
    path: /models/summary
    method: GET
    data_selector: resource
- name: intents
  endpoint:
    path: /intentions
    method: GET
    data_selector: items
    params:
      skip: 0
      take: 100
      ascending: true
- name: models
  endpoint:
    path: /models
    method: GET
    data_selector: items
    params:
      skip: 0
      take: 100
- name: entities
  endpoint:
    path: /entities/{entityId}
    method: GET
    data_selector: resource
- name: confusion_matrices
  endpoint:
    path: /analytics/confusion-matrix
    method: GET
    data_selector: items
    params:
      skip: 0
      take: 100
      ascending: true
- name: intent_questions
  endpoint:
    path: /intentions/{intentId}/questions
    method: GET
    data_selector: items
- name: analysis
  endpoint:
    path: /analysis?$skip=0&$take=10
    method: GET
    data_selector: items
- name: merge_intent
  endpoint:
    path: /intentions
    method: MERGE
    data_selector: resource
- name: publish_model
  endpoint:
    path: /models
    method: SET
    data_selector: resource
- name: set_analysis_feedback
  endpoint:
    path: /analysis/{analyze_id}/feedback
    method: SET
    data_selector: resource
- name: content
  endpoint:
    path: /content
    method: POST
    data_selector: resource
    params: {}
- name: content_with_id
  endpoint:
    path: /content/{id}
    method: DELETE
    data_selector: resource
    params: {}
- name: distribution_list
  endpoint:
    path: /lists
    method: POST
    data_selector: resource
    params: {}
- name: all_distribution_lists
  endpoint:
    path: /lists
    method: GET
    data_selector: resource
    params: {}
- name: delete_distribution_list
  endpoint:
    path: /lists/{{distribution_list_name}}@broadcast.msging.net
    method: DELETE
    data_selector: resource
    params: {}
- name: content_analysis
  endpoint:
    path: /content/analysis
    method: POST
    data_selector: resource
    params: {}
- name: get_content
  endpoint:
    path: /content/{id}
    method: GET
    data_selector: resource
    params: {}
- name: send_analysis_by_email
  endpoint:
    path: /enhancement/send-by-email
    method: POST
    data_selector: resource
    params: {}
- name: feedback_analysis
  endpoint:
    path: /analysis/feedback
    method: POST
    data_selector: resource
    params: {}
- name: train_model
  endpoint:
    path: /models
    method: POST
    data_selector: resource
    params: {}
- name: get_contents
  endpoint:
    path: /content
    method: GET
    data_selector: resource
    params: {}
- name: user_context_variables
  endpoint:
    path: /contexts/{identity}
    method: GET
- name: user_context_variables_with_values
  endpoint:
    path: /contexts/{identity}?withContextValues=true
    method: GET
- name: specific_context_variable
  endpoint:
    path: /contexts/{identity}/{variableName}
    method: GET
- name: user_state
  endpoint:
    path: /contexts/{{user-identity}}/stateid@{{flow-identifier}}
    method: GET
- name: reset_user_state
  endpoint:
    path: /contexts/{{user-identity}}/stateid@{{flow-identifier}}
    method: DELETE
- name: add_recipient
  endpoint:
    path: /lists/your_distributionList@broadcast.msging.net/recipients
    method: POST
    data_selector: resource
- name: remove_recipient
  endpoint:
    path: /lists/your_distributionList@broadcast.msging.net/recipients/551100001111@0mn.io
    method: DELETE
    data_selector: ''
- name: get_recipients
  endpoint:
    path: /lists/your_distributionList@broadcast.msging.net/recipients
    method: GET
    data_selector: resource.items
    params:
      skip: 0
      take: 5
- name: send_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: delete_document
  endpoint:
    path: /buckets/abcd%c3%a9%201234
    method: DELETE
    data_selector: ''
- name: get_document
  endpoint:
    path: /buckets/abcd%c3%a9%201234
    method: GET
    data_selector: resource
- name: get_document_collection
  endpoint:
    path: /buckets
    method: GET
    data_selector: resource.items
- name: change_user_state
  endpoint:
    path: /contexts/{{user-identity}}/stateid@{{flow-identifier}}
    method: POST
    data_selector: resource
- name: change_subflow_context
  endpoint:
    path: /contexts/{{user-identity}}/currentFlowSession@{{flow-identifier}}
    method: POST
    data_selector: resource
- name: create_context_variable
  endpoint:
    path: /contexts/{identity}/{variableName}
    method: POST
    data_selector: resource
- name: change_builder_flow
  endpoint:
    path: /buckets/blip_portal:builder_working_flow
    method: POST
    data_selector: resource
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: resource.items
- name: notifications
  endpoint:
    path: /notifications
    method: GET
    data_selector: resource.items
- name: thread_messages
  endpoint:
    path: /threads/{{user_identity}}
    method: GET
    data_selector: resource.items
- name: persistent_menu
  endpoint:
    path: /profile/persistent-menu
    method: POST
    data_selector: resource
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: POST
    data_selector: resource
    params: {}
- name: comments
  endpoint:
    path: /contacts/{contactIdentity}/comments
    method: GET
    data_selector: resource
    params: {}
- name: profile_property
  endpoint:
    path: /profile/{propertyIdentifier}
    method: POST
    data_selector: resource
    params: {}
- name: profile_properties
  endpoint:
    path: /profile
    method: POST
    data_selector: resource.items
    params: {}
- name: greeting_message
  endpoint:
    path: /profile/greeting
    method: POST
    data_selector: resource
    params: {}
- name: get_started_message
  endpoint:
    path: /profile/get-started
    method: POST
    data_selector: resource
    params: {}
- name: persistent_menu
  endpoint:
    path: /profile/persistent-menu
    method: POST
    data_selector: resource
    params: {}
- name: contact
  endpoint:
    path: /contacts
    method: GET
    data_selector: resource.items
    params:
      $skip: '0'
      $take: '3'
- name: tickets
  endpoint:
    path: /tickets
    method: SET
    data_selector: resource
    params: {}
- name: tags
  endpoint:
    path: /tags/active
    method: GET
    data_selector: resource.items
    params: {}
- name: change-status
  endpoint:
    path: /tickets/change-status
    method: SET
    data_selector: resource
    params: {}
- name: close_ticket
  endpoint:
    path: /tickets/{ticketId}/close
    method: SET
    data_selector: resource
    params: {}
- name: forward_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
- name: tickets
  endpoint:
    path: /tickets
    method: GET
- name: tickets
  endpoint:
    path: /tickets
    method: POST
    data_selector: resource
    params: {}
- name: attendance-queues
  endpoint:
    path: /attendance-queues
    method: POST
    data_selector: resource
    params: {}
- name: rules
  endpoint:
    path: /rules
    method: POST
    data_selector: resource
    params: {}
- name: priority-rules
  endpoint:
    path: /priority-rules
    method: POST
    data_selector: resource
    params: {}
- name: delete_custom_reply_category
  endpoint:
    path: /replies/{categoryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: delete_rule
  endpoint:
    path: /rules/{ruleId}
    method: DELETE
    data_selector: ''
    params: {}
- name: delete_priority_rule
  endpoint:
    path: /priority-rules/{priorityRuleId}
    method: DELETE
    data_selector: ''
    params: {}
- name: delete_agent
  endpoint:
    path: /attendants/{agentId}
    method: DELETE
    data_selector: ''
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: ''
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: ''
    params: {}
- name: message
  endpoint:
    path: /messages
    method: POST
    data_selector: messages
- name: notification
  endpoint:
    path: /notifications
    method: POST
    data_selector: notifications
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: ''
    params: {}
- name: commands
  endpoint:
    path: /commands
    method: POST
    data_selector: ''
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: ''
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: messages
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notifications
- name: commands
  endpoint:
    path: /commands
    method: POST
    data_selector: commands
- name: message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: send_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: input
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: location
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: location
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: media_link
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: audio
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: document
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: gif
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: image
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: video
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: document_select
  endpoint:
    path: /messages
    method: POST
    data_selector: content.items
    params: {}
- name: message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: event_track
  endpoint:
    path: /event-track
    method: POST
    data_selector: resource
    params: {}
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: resource
    params: {}
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: resource
    params: {}
- name: reply_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: resource_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: sensitive_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: web_link
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: Contact
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: event_track
  endpoint:
    path: /event-track
    method: GET
    data_selector: resource.items
    params: {}
- name: event_details
  endpoint:
    path: /event-track/payments/success-order
    method: GET
    data_selector: resource.items
    params:
      startDate: '2019-06-21'
      endDate: '2019-06-28'
      $take: 10
- name: event_categories
  endpoint:
    path: /event-track
    method: GET
    data_selector: resource.items
    params: {}
- name: create_report
  endpoint:
    path: /reports
    method: POST
    data_selector: resource
    params: {}
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: items
- name: charts
  endpoint:
    path: /reports/{reportId}/charts
    method: GET
    data_selector: items
- name: active_messages
  endpoint:
    path: /metrics/active-messages/{interval}
    method: GET
    data_selector: items
- name: active_messages_per_domain
  endpoint:
    path: /metrics/active-messages-per-domain/{interval}
    method: GET
    data_selector: items
- name: active_users
  endpoint:
    path: /metrics/active-identity/{interval}
    method: GET
    data_selector: items
- name: metrics_engaged_identity
  endpoint:
    path: /metrics/engaged-identity/{interval}
    method: get
- name: metrics_received_messages
  endpoint:
    path: /metrics/received-messages/{interval}
    method: get
- name: metrics_sent_messages
  endpoint:
    path: /metrics/sent-messages/{interval}
    method: get
- name: intentions
  endpoint:
    path: /intentions
    method: get
- name: entities
  endpoint:
    path: /entities
    method: get
- name: analysis
  endpoint:
    path: /analysis
    method: get
- name: confusion_matrix
  endpoint:
    path: /analytics/confusion-matrix/{confusionMatrixId}
    method: GET
- name: model
  endpoint:
    path: /model/{modelId}
    method: GET
- name: model_summary
  endpoint:
    path: /models/summary
    method: GET
- name: entities
  endpoint:
    path: /entities
    method: GET
- name: analysis
  endpoint:
    path: /analysis
    method: POST
    data_selector: resource
    params: {}
- name: entities
  endpoint:
    path: /entities
    method: POST
    data_selector: resource
    params: {}
- name: intentions
  endpoint:
    path: /intentions/{intentId}/answers
    method: POST
    data_selector: resource
    params: {}
- name: confusion_matrix
  endpoint:
    path: /analytics/confusion-matrix
    method: POST
    data_selector: resource
    params: {}
- name: entities
  endpoint:
    path: /entities
    method: GET
    data_selector: items
- name: intents
  endpoint:
    path: /intentions
    method: GET
    data_selector: items
- name: models
  endpoint:
    path: /models
    method: GET
    data_selector: items
- name: confusion_matrices
  endpoint:
    path: /analytics/confusion-matrix
    method: GET
    data_selector: items
- name: content_analysis
  endpoint:
    path: /content/analysis
    method: POST
    data_selector: resource
    params: {}
- name: content
  endpoint:
    path: /content/{id}
    method: GET
    data_selector: resource
    params: {}
- name: train_model
  endpoint:
    path: /models
    method: POST
    data_selector: resource
    params: {}
- name: feedback
  endpoint:
    path: /analysis/feedback
    method: POST
    data_selector: resource
    params: {}
- name: get_contents
  endpoint:
    path: /content
    method: GET
    data_selector: resource
    params: {}
- name: content
  endpoint:
    path: /content
    method: POST
    data_selector: resource
- name: delete_content
  endpoint:
    path: /content/{id}
    method: DELETE
- name: delete_all_contents
  endpoint:
    path: /content
    method: DELETE
- name: distribution_lists
  endpoint:
    path: /lists
    method: GET
    data_selector: resource.items
- name: questions
  endpoint:
    path: /intentions/{intentId}/questions
    method: GET
    data_selector: items
    params:
      skip: 0
      take: 100
      ascending: true
- name: analysis
  endpoint:
    path: /analysis?$skip=0&$take=10
    method: GET
    data_selector: items
    params:
      skip: 0
      take: 10
- name: merge_intent
  endpoint:
    path: /intentions
    method: MERGE
    data_selector: resource
- name: publish_model
  endpoint:
    path: /models
    method: SET
    data_selector: resource
- name: set_analysis_feedback
  endpoint:
    path: /analysis/{analyze_id}/feedback
    method: SET
    data_selector: resource
- name: recipients
  endpoint:
    path: /lists/your_distributionList@broadcast.msging.net/recipients
    method: GET
    params:
      $skip: '0'
      $take: '5'
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: resource
- name: buckets
  endpoint:
    path: /buckets
    method: GET
- name: custom_document
  endpoint:
    path: /buckets/abcd9876
    method: SET
    data_selector: resource
- name: get_user_state
  endpoint:
    path: /contexts/{{user-identity}}/stateid@{{flow-identifier}}
    method: GET
- name: reset_user_state
  endpoint:
    path: /contexts/{{user-identity}}/stateid@{{flow-identifier}}
    method: DELETE
- name: get_last_messages
  endpoint:
    path: /threads/{{user_identity}}?refreshExpiredMedia=true
    method: GET
- name: get_logged_messages
  endpoint:
    path: /messages
    method: GET
- name: get_logged_notifications
  endpoint:
    path: /notifications
    method: GET
- name: get_notifications_of_message
  endpoint:
    path: /notifications?id={messageId}
    method: GET
- name: change_user_state
  endpoint:
    path: /contexts/{{user-identity}}/stateid@{{flow-identifier}}
    method: set
    data_selector: resource
- name: change_subflow_context
  endpoint:
    path: /contexts/{{user-identity}}/currentFlowSession@{{flow-identifier}}
    method: set
    data_selector: resource
- name: create_context_variable
  endpoint:
    path: /contexts/{identity}/{variableName}
    method: set
    data_selector: resource
- name: change_builder_flow
  endpoint:
    path: /buckets/blip_portal:builder_working_flow
    method: set
    data_selector: resource
- name: delete_context_variable
  endpoint:
    path: /contexts/{identity}/{variableName}
    method: delete
    data_selector: ''
- name: get_all_user_context_variables
  endpoint:
    path: /contexts/{identity}
    method: get
    data_selector: ''
- name: get_user_state
  endpoint:
    path: /contexts/{identity}/{variableName}
    method: get
    data_selector: ''
- name: greeting
  endpoint:
    path: /profile/greeting
    method: POST
    data_selector: resource
- name: persistent_menu
  endpoint:
    path: /profile/persistent-menu
    method: POST
    data_selector: resource
- name: contacts
  endpoint:
    path: /contacts
    method: POST
    data_selector: resource
- name: log_configurations
  endpoint:
    path: /log-configurations
    method: POST
    data_selector: resource
    params:
      enabled: true
- name: profile
  endpoint:
    path: /profile
    method: POST
    data_selector: resource
    params: {}
- name: profile_property
  endpoint:
    path: /profile/{propertyIdentifier}
    method: POST
    data_selector: resource
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: resource.items
    params:
      $skip: '0'
      $take: '3'
- name: comments
  endpoint:
    path: /contacts/{contactIdentity}/comments
    method: GET
    data_selector: resource.items
- name: attendants
  endpoint:
    path: /attendants
    method: SET
    data_selector: status
- name: custom_replies
  endpoint:
    path: /replies/{categoryId}
    method: SET
    data_selector: status
- name: tickets
  endpoint:
    path: /tickets
    method: SET
    data_selector: resource
    params: {}
- name: tags
  endpoint:
    path: /tags/active
    method: GET
    data_selector: resource.items
    params: {}
- name: close_ticket
  endpoint:
    path: /tickets/{ticketId}/close
    method: SET
    data_selector: resource
    params: {}
- name: send_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: tickets
  endpoint:
    path: /tickets
    method: POST
    data_selector: resource
    params: {}
- name: attendance-queues
  endpoint:
    path: /attendance-queues
    method: POST
    data_selector: resource
    params: {}
- name: rules
  endpoint:
    path: /rules
    method: POST
    data_selector: resource
    params: {}
- name: priority-rules
  endpoint:
    path: /priority-rules
    method: POST
    data_selector: resource
    params: {}
- name: delete_ticket
  endpoint:
    path: /replies/{categoryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: delete_rule
  endpoint:
    path: /rules/{ruleId}
    method: DELETE
    data_selector: ''
    params: {}
- name: delete_priority_rule
  endpoint:
    path: /priority-rules/{priorityRuleId}
    method: DELETE
    data_selector: ''
    params: {}
- name: delete_agent
  endpoint:
    path: /attendants/{agentId}
    method: DELETE
    data_selector: ''
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
- name: tickets
  endpoint:
    path: /tickets
    method: GET
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: event
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: ''
    params: {}
- name: commands
  endpoint:
    path: /commands
    method: POST
    data_selector: ''
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: content
- name: commands
  endpoint:
    path: /commands
    method: POST
    data_selector: resource
- name: send_location
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: send_media_link
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: media_link
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: select_menu
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: document_select
  endpoint:
    path: /messages
    method: POST
    data_selector: content.items
    params: {}
- name: send_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
- name: reply_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: resource_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: sensitive_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: web_link
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: input
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: location
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: Contact
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params: {}
- name: Account
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
    params: {}
- name: event_track
  endpoint:
    path: /event-track
    method: GET
    data_selector: resource.items
- name: event_details
  endpoint:
    path: /event-track/payments/success-order
    method: GET
    data_selector: resource.items
- name: event_categories
  endpoint:
    path: /event-track/categories
    method: GET
    data_selector: resource.items
- name: event_counters
  endpoint:
    path: /event-track/payments
    method: GET
    data_selector: resource.items
- name: create_report
  endpoint:
    path: /reports
    method: POST
    data_selector: resource
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: items
- name: charts
  endpoint:
    path: /reports/{reportId}/charts
    method: GET
    data_selector: items
- name: active_messages
  endpoint:
    path: /metrics/active-messages/{interval}
    method: GET
    data_selector: items
- name: active_messages_per_domain
  endpoint:
    path: /metrics/active-messages-per-domain/{interval}
    method: GET
    data_selector: items
- name: active_users
  endpoint:
    path: /metrics/active-identity/{interval}
    method: GET
    data_selector: items
- name: analysis
  endpoint:
    path: /analysis
    method: POST
    data_selector: resource
    params: {}
- name: confusion_matrix
  endpoint:
    path: /analytics/confusion-matrix
    method: POST
    data_selector: resource
    params: {}
- name: entities
  endpoint:
    path: /entities
    method: POST
    data_selector: resource
    params: {}
- name: intentions
  endpoint:
    path: /intentions/{intentId}/answers
    method: POST
    data_selector: resource
    params: {}
- name: metrics_active_identity
  endpoint:
    path: /metrics/active-identity/{interval}
    method: GET
- name: metrics_engaged_identity
  endpoint:
    path: /metrics/engaged-identity/{interval}
    method: GET
- name: metrics_received_messages
  endpoint:
    path: /metrics/received-messages/{interval}
    method: GET
- name: metrics_sent_messages
  endpoint:
    path: /metrics/sent-messages/{interval}
    method: GET
- name: intentions
  endpoint:
    path: /intentions
    method: GET
- name: entities
  endpoint:
    path: /entities
    method: GET
- name: analysis
  endpoint:
    path: /analysis
    method: GET
- name: entities
  endpoint:
    path: /entities
    method: GET
    data_selector: items
- name: intents
  endpoint:
    path: /intentions
    method: GET
    data_selector: items
- name: models
  endpoint:
    path: /models
    method: GET
    data_selector: items
- name: confusion_matrices
  endpoint:
    path: /analytics/confusion-matrix
    method: GET
    data_selector: items
- name: intention
  endpoint:
    path: /intentions
    method: DELETE
    data_selector: ''
    params: {}
- name: confusion_matrix
  endpoint:
    path: /analytics/confusion-matrix/{confusionMatrixId}
    method: GET
    data_selector: ''
    params: {}
- name: model
  endpoint:
    path: /model/{modelId}
    method: GET
    data_selector: ''
    params: {}
- name: model_summary
  endpoint:
    path: /models/summary
    method: GET
    data_selector: ''
    params: {}
- name: entities
  endpoint:
    path: /entities
    method: GET
    data_selector: ''
    params: {}
- name: open_ticket_summary
  endpoint:
    path: /extensions/open-ticket-summary
    method: GET
    data_selector: records
- name: payment_intent
  endpoint:
    path: /stripe/payment-intent
    method: GET
    data_selector: records
- name: payment_intent_confirm
  endpoint:
    path: /stripe/payment-intent-confirm
    method: GET
    data_selector: records
- name: payment_method
  endpoint:
    path: /stripe/payment-method
    method: GET
    data_selector: records
- name: plan
  endpoint:
    path: /billing/plan
    method: GET
    data_selector: records
- name: question
  endpoint:
    path: /ai/question
    method: GET
    data_selector: records
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: records
- name: resource
  endpoint:
    path: /resource
    method: GET
    data_selector: records
- name: response_time
  endpoint:
    path: /response-time
    method: GET
    data_selector: records
- name: role
  endpoint:
    path: /portal/role
    method: GET
    data_selector: records
- name: role_permission
  endpoint:
    path: /portal/role-permission
    method: GET
    data_selector: records
- name: rule
  endpoint:
    path: /desk/rule
    method: GET
    data_selector: records
- name: schedules
  endpoint:
    path: /schedule
    method: GET
    data_selector: records
- name: service_time_summary
  endpoint:
    path: /desk/service-time-summary
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /stripe/session
    method: GET
    data_selector: records
- name: subscription_plan
  endpoint:
    path: /billing/subscription
    method: GET
    data_selector: records
- name: tag_tickets_summary
  endpoint:
    path: /desk/tag-tickets-summary
    method: GET
    data_selector: records
- name: team
  endpoint:
    path: /desk/team
    method: GET
    data_selector: records
- name: team_tickets_summary
  endpoint:
    path: /desk/team-tickets-summary
    method: GET
    data_selector: records
- name: tenant
  endpoint:
    path: /portal/tenant
    method: GET
    data_selector: records
- name: tenant_information
  endpoint:
    path: /portal/tenant-information
    method: GET
    data_selector: records
- name: tenant_user_information
  endpoint:
    path: /portal/tenant-user-information
    method: GET
    data_selector: records
- name: thread
  endpoint:
    path: /thread
    method: GET
    data_selector: records
- name: ticket
  endpoint:
    path: /ticket
    method: GET
    data_selector: records
- name: tickets_metrics_summary
  endpoint:
    path: /desk/tickets-metrics-summary
    method: GET
    data_selector: records
- name: tickets_summary
  endpoint:
    path: /desk/tickets-summary
    method: GET
    data_selector: records
- name: waiting_ticket_summary
  endpoint:
    path: /desk/waiting-ticket-summary
    method: GET
    data_selector: records
- name: wallet
  endpoint:
    path: /billing/wallet
    method: GET
    data_selector: records
- name: wallet_transaction
  endpoint:
    path: /billing/wallet-transaction
    method: GET
    data_selector: records
- name: questions
  endpoint:
    path: /intentions/{intentId}/questions
    method: GET
    data_selector: resource.items
    params:
      skip: 0
      take: 100
      ascending: true
- name: analysis
  endpoint:
    path: /analysis?$skip=0&$take=10
    method: GET
    data_selector: resource.items
    params:
      skip: 0
      take: 10
- name: merge_intent
  endpoint:
    path: /intentions
    method: MERGE
    data_selector: resource.id
    params: {}
- name: publish_model
  endpoint:
    path: /models
    method: SET
    data_selector: resource.id
    params: {}
- name: feedback
  endpoint:
    path: /analysis/{analyze_id}/feedback
    method: SET
    data_selector: status
    params:
      feedback: approved
- name: content_analysis
  endpoint:
    path: /content/analysis
    method: SET
    data_selector: resource
    params: {}
- name: content_feedback
  endpoint:
    path: /analysis/feedback
    method: SET
    data_selector: resource
    params: {}
- name: content
  endpoint:
    path: /content/{id}
    method: GET
    data_selector: resource
    params: {}
- name: train_model
  endpoint:
    path: /models
    method: SET
    data_selector: resource
    params: {}
- name: content
  endpoint:
    path: /content
    method: POST
- name: delete_content
  endpoint:
    path: /content/{id}
    method: DELETE
- name: delete_all_contents
  endpoint:
    path: /content
    method: DELETE
- name: create_list
  endpoint:
    path: /lists
    method: SET
- name: get_all_lists
  endpoint:
    path: /lists
    method: GET
- name: delete_list
  endpoint:
    path: /lists/{{distribution_list_name}}@broadcast.msging.net
    method: DELETE
- name: add_member_to_list
  endpoint:
    path: /lists/your_distributionList@broadcast.msging.net/recipients
    method: SET
- name: remove_member_from_list
  endpoint:
    path: /lists/your_distributionList@broadcast.msging.net/recipients/551100001111@0mn.io
    method: DELETE
- name: get_all_members_of_list
  endpoint:
    path: /lists/your_distributionList@broadcast.msging.net/recipients?$skip=0&$take=5
    method: GET
- name: context_variable
  endpoint:
    path: /contexts/{identity}/{variableName}
    method: delete
- name: all_context_variables
  endpoint:
    path: /contexts/{identity}
    method: get
- name: specific_context_variable
  endpoint:
    path: /contexts/{identity}/{variableName}
    method: get
- name: check_connectivity
  endpoint:
    path: /ping
    method: get
- name: buckets
  endpoint:
    path: /buckets
    method: GET
    data_selector: resource.items
- name: recipients
  endpoint:
    path: /lists/your_distributionList@broadcast.msging.net/recipients
    method: GET
    data_selector: resource.items
    params:
      skip: '0'
      take: '5'
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: resource
    params: {}
- name: user_state
  endpoint:
    path: /contexts/{{user-identity}}/stateid@{{flow-identifier}}
    method: GET
- name: reset_user_state
  endpoint:
    path: /contexts/{{user-identity}}/stateid@{{flow-identifier}}
    method: DELETE
- name: last_messages
  endpoint:
    path: /threads/{{user_identity}}?refreshExpiredMedia=true
    method: GET
- name: logged_messages
  endpoint:
    path: /messages
    method: GET
- name: logged_notifications
  endpoint:
    path: /notifications
    method: GET
- name: message_notifications
  endpoint:
    path: /notifications?id={messageId}
    method: GET
- name: log_configurations
  endpoint:
    path: /log-configurations
    method: POST
    data_selector: resource.enabled
- name: profile_properties
  endpoint:
    path: /profile
    method: POST
    data_selector: resource.items
- name: get_started
  endpoint:
    path: /profile/get-started
    method: POST
    data_selector: resource
- name: get_started_label
  endpoint:
    path: /profile/get-started-label
    method: POST
    data_selector: resource
- name: persistent_menu
  endpoint:
    path: /profile/persistent-menu
    method: POST
    data_selector: resource
- name: contacts
  endpoint:
    path: /contacts
    method: SET
    data_selector: resource
    params: {}
- name: greeting
  endpoint:
    path: /profile/greeting
    method: SET
    data_selector: resource
    params: {}
- name: persistent-menu
  endpoint:
    path: /profile/persistent-menu
    method: SET
    data_selector: resource
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: resource.items
    params:
      $skip: '0'
      $take: '3'
- name: comments
  endpoint:
    path: /contacts/{contactIdentity}/comments
    method: GET
    data_selector: resource.items
- name: contact
  endpoint:
    path: /contacts/{contactIdentity}
    method: GET
    data_selector: resource
- name: attendants
  endpoint:
    path: /attendants
    method: SET
    data_selector: resource
- name: custom_replies
  endpoint:
    path: /replies/{categoryId}
    method: SET
    data_selector: resource.items
- name: tags
  endpoint:
    path: /tags/active
    method: GET
    data_selector: resource.items
    params: {}
- name: tickets
  endpoint:
    path: /tickets/{ticketId}/change-tags
    method: SET
    data_selector: resource
    params: {}
- name: create_ticket
  endpoint:
    path: /tickets
    method: SET
    data_selector: resource
    params: {}
- name: tickets
  endpoint:
    path: /tickets
    method: POST
    data_selector: resource
    params: {}
- name: attendance-queues
  endpoint:
    path: /attendance-queues
    method: POST
    data_selector: resource
    params: {}
- name: rules
  endpoint:
    path: /rules
    method: POST
    data_selector: resource
    params: {}
- name: priority-rules
  endpoint:
    path: /priority-rules
    method: POST
    data_selector: resource
    params: {}
- name: delete_replies
  endpoint:
    path: /replies/{categoryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: delete_rules
  endpoint:
    path: /rules/{ruleId}
    method: DELETE
    data_selector: ''
    params: {}
- name: delete_priority_rules
  endpoint:
    path: /priority-rules/{priorityRuleId}
    method: DELETE
    data_selector: ''
    params: {}
- name: delete_agent
  endpoint:
    path: /attendants/{agentId}
    method: DELETE
    data_selector: ''
    params: {}
- name: tickets
  endpoint:
    path: /tickets/{ticketId}/close
    method: SET
    data_selector: ''
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: ''
    params: {}
- name: messages
  endpoint:
    path: /tickets/{ticketId}/messages
    method: GET
    data_selector: items
    params:
      $take: 100
      $ascending: true
      getFromOwnerIfTunnel: true
- name: teams
  endpoint:
    path: /teams
    method: GET
    data_selector: items
    params: {}
- name: tickets
  endpoint:
    path: /tickets
    method: GET
    data_selector: items
    params:
      $take: 10
- name: rules
  endpoint:
    path: /rules
    method: GET
    data_selector: items
    params: {}
- name: priority_rules
  endpoint:
    path: /priority-rules
    method: GET
    data_selector: items
    params: {}
- name: custom_replies
  endpoint:
    path: /replies
    method: GET
    data_selector: items
    params: {}
- name: agents_online
  endpoint:
    path: /teams/agents-online
    method: GET
    data_selector: items
    params: {}
- name: attendance_rule
  endpoint:
    path: /rules/{ruleId}
    method: POST
    data_selector: resource
    params: {}
- name: priority_rule
  endpoint:
    path: /priority-rules/{priorityRuleId}
    method: POST
    data_selector: resource
    params: {}
- name: ticket
  endpoint:
    path: /ticket/{ticketId}
    method: POST
    data_selector: resource
    params: {}
- name: agents_metrics
  endpoint:
    path: /monitoring/attendants?version=2
    method: POST
    data_selector: resource
    params: {}
- name: agents_productivity
  endpoint:
    path: /analytics/reports/attendants/productivity?beginDate=2019-04-15&endDate=2019-06-22
    method: POST
    data_selector: resource
    params: {}
- name: active_tickets
  endpoint:
    path: /monitoring/tickets?version=2
    method: POST
    data_selector: resource
    params: {}
- name: all_attendants
  endpoint:
    path: /attendants
    method: POST
    data_selector: resource
    params: {}
- name: closed_tickets
  endpoint:
    path: /tickets?$filter=(CustomerIdentity%20eq%20'{customer_identity}')&$closed=true&$skip=0&$take=100
    method: POST
    data_selector: resource
    params: {}
- name: custom_replies
  endpoint:
    path: /replies/{categoryId}
    method: GET
    data_selector: resource.items
- name: agents_report
  endpoint:
    path: /analytics/reports/attendants
    method: GET
    data_selector: resource.items
    params:
      beginDate: '2019-04-15'
      endDate: '2019-06-22'
- name: attendance_time_report
  endpoint:
    path: /analytics/reports/attendancetime
    method: GET
    data_selector: resource.attendanceTime
    params:
      beginDate: '2019-04-15'
      endDate: '2019-06-22'
- name: tags_report
  endpoint:
    path: /analytics/reports/tags
    method: GET
    data_selector: resource.items
    params:
      beginDate: '2019-04-15'
      endDate: '2019-06-22'
- name: teams_report
  endpoint:
    path: /analytics/reports/teams
    method: GET
    data_selector: resource.items
    params:
      beginDate: '2019-04-15'
      endDate: '2019-06-22'
- name: ticket_timing_report
  endpoint:
    path: /analytics/reports/timings
    method: GET
    data_selector: resource
    params:
      beginDate: '2019-04-15'
      endDate: '2019-06-22'
- name: priority_rule
  endpoint:
    path: /priority-rules/{priorityRuleId}
    method: GET
    data_selector: resource
- name: ticket
  endpoint:
    path: /ticket/{ticketId}
    method: GET
    data_selector: resource
- name: resource
  endpoint:
    path: /resources
    method: GET
    data_selector: resource.items
- name: scheduled_message
  endpoint:
    path: /schedules/{messageId}
    method: GET
    data_selector: resource
    params: {}
- name: attendance_history
  endpoint:
    path: /attendance-history/send-by-email
    method: POST
    data_selector: resource
    params: {}
- name: ticket_transfer
  endpoint:
    path: /tickets/{ticketId}/transfer
    method: POST
    data_selector: resource
    params: {}
- name: refresh_media_uri
  endpoint:
    path: /refresh-media-uri
    method: POST
    data_selector: resource
    params: {}
- name: upload_media_uri
  endpoint:
    path: /upload-media-uri?secure=true
    method: POST
    data_selector: resource
    params: {}
- name: resources
  endpoint:
    path: /resources
    method: POST
    data_selector: resource
    params: {}
- name: open_tickets
  endpoint:
    path: /monitoring/open-tickets?version=2
    method: POST
    data_selector: resource.items
    params: {}
- name: teams
  endpoint:
    path: /monitoring/teams?version=2
    method: POST
    data_selector: resource.items
    params: {}
- name: ticket_metrics
  endpoint:
    path: /monitoring/ticket-metrics?version=2
    method: POST
    data_selector: resource
    params: {}
- name: tickets_counters
  endpoint:
    path: /monitoring/tickets?version=2
    method: POST
    data_selector: resource
    params: {}
- name: tickets_per_hour
  endpoint:
    path: /monitoring/tickets-per-hour?version=2
    method: POST
    data_selector: resource.items
    params: {}
- name: waiting_tickets
  endpoint:
    path: /tickets?$filter=status%20eq%20'waiting'&$skip=0&$take=100
    method: POST
    data_selector: resource.items
    params: {}
- name: waiting_tickets_metrics
  endpoint:
    path: /monitoring/waiting-tickets?version=2
    method: POST
    data_selector: resource.items
    params: {}
- name: schedules
  endpoint:
    path: /schedules
    method: GET
    data_selector: resource.items
- name: delegations
  endpoint:
    path: /delegations/postmaster@broadcast.msging.net?envelopeTypes=message
    method: GET
    data_selector: resource.target
- name: account_keys
  endpoint:
    path: /account/keys
    method: GET
    data_selector: resource.items
- name: session_events
  endpoint:
    path: /sessions/{stripeSessionId}/events
    method: POST
    data_selector: items
    params: {}
- name: tunnel_info
  endpoint:
    path: /tunnels/{tunnelId}
    method: GET
    data_selector: resource
    params: {}
- name: payment_intent
  endpoint:
    path: /payment/{contactIdentity}/payment-intent
    method: POST
    data_selector: resource
    params: {}
- name: confirm_payment_intent
  endpoint:
    path: /payment/{contactIdentity}/confirm-payment-intent
    method: POST
    data_selector: resource
    params: {}
- name: payment_methods
  endpoint:
    path: /payment-methods
    method: POST
    data_selector: resource
    params:
      customer: '{stripeCustomerId}'
- name: payment_intent_history
  endpoint:
    path: /payment/{contactIdentity}/payment-intent-history
    method: POST
    data_selector: resource
    params: {}
- name: session_history
  endpoint:
    path: /payment/{contactIdentity}/session-history
    method: POST
    data_selector: resource
    params: {}
- name: payment_intent_events
  endpoint:
    path: /payment-intents/{stripePaymentIntentId}/events
    method: POST
    data_selector: resource
    params: {}
- name: directory_query
  endpoint:
    path: /commands
    method: POST
    data_selector: resource
    params:
      id: '{{$guid}}'
      to: postmaster@tunnel.msging.net
      method: get
      uri: lime://tunnel.msging.net/accounts/ecb99cf5-fb5c-4376-8acd-4b478091de15
- name: client_info
  endpoint:
    path: /commands
    method: POST
    data_selector: resource
    params:
      id: '{{$guid}}'
      to: postmaster@messenger.gw.msging.net
      method: get
      uri: lime://messenger.gw.msging.net/accounts/1042221589186385
- name: telegram_client_info
  endpoint:
    path: /commands
    method: POST
    data_selector: resource
    params:
      id: '{{$guid}}'
      to: postmaster@telegram.gw.msging.net
      method: get
      uri: lime://telegram.gw.msging.net/accounts/255600202
- name: verify_customer_identifier
  endpoint:
    path: /commands
    method: POST
    data_selector: resource
    params: {}
- name: send_message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
notes:
- Authorization requires a key token
- Every message needs to be sent through your unique HTTP endpoint.
- Remember to replace {{contract_id}} with your id!
- In order to correctly show the message history, it is important that the chatbots
  send notifications of messages processed to originator clients.
- This extension is still in beta, which means it's not available for everyone yet.
- Each notification needs to be sent through your unique HTTP endpoint.
- From April 2020, an SDK bot may have a limit of 100 simultaneous connections to
  the platform. We recommend using 5 maximum instances.
- Remember to replace {{contract_id}} with your id.
- From April 2020, an SDK bot may have a limit of 100* simultaneous connections to
  the platform. We recommend using 5 maximum instances.
- Each command has a mandatory URI value.
- A response command may have status and reason properties.
- Allows sending multiple contents of the same type in a single message.
- Allows sending and receiving of geographic information.
- Allows sending and receiving of links for multimedia content.
- You can send documents like PDFs by uploading them or sharing a URL using the Media
  Link content type.
- Some channels support the options scope limitation, which determines for how much
  time they are valid for the user selection.
- Authorization requires a key
- Uses API key for authentication — requires setup of authorized tokens
- Allows sending of native content using JSON format.
- For a multi-channel chatbot, developers must send the correct content type to each
  channel.
- Requires permission to send messages on behalf of the chatbot.
- By default, the request returns only today's data. Use the filters to increase the
  date range.
- 'Your interval must have one of these statistics intervals: Daily, Monthly, or NoInterval.'
- 'Your interval must have one of the statistics intervals: Daily, Monthly, NoInterval.'
- Replace the variable {intentId} and {confusionMatrixId} with actual IDs during usage.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Requires setup of connected app for authentication
- Remember to replace the variable {{user-identity}} for the user identity you want
  to reset.
- This command only changes JSON in the flow, but you still need to go to Builder
  and publish it manually.
- Both storageDate filter and date response parameter uses ISO 8601 format.
- You need to enable message and notification logs for them to be stored.
- Messenger doesn't allow the label to be changed
- When not provided on the request, the default take value will be 100.
- The tags property can be hidden if you didn't set the Tags configurations in Portal.
- If you omit the ClosedBy property, we'll use the bot identity to identify the responsible
  to finish the ticket.
- The API requires a valid customerIdentity to create tickets.
- The extension is still in beta, which means it's not available for everyone yet.
- Limit of 3 options for Facebook Messenger, otherwise messages will not be delivered.
- Allows sending of structured information requests to the user.
- Asks the user for her location.
- Allows sending an options menu to customers with various content types.
- It is possible to use any channel's available resource, even if this content is
  not yet supported as a Blip canonical type.
- Wraps a message content in order to signal that the information is confidential
  or sensitive.
- The server will not store the message content in any moment.
- The command 'delegation' is used to grant permission for sending messages in the
  name of the chatbot.
- It is possible to associate a specific contact in an event.
- Use filters to increase the date range for event retrieval.
- Requires setup of connected app in API
- The API requires an API key for authorization.
- Authentication requires an API key passed in the header.
- Endpoints for merging intents and publishing models do not have a complete implementation
  in C# SDK.
- To get all members of a distribution list, you must send a command with GET method
  and command URI with the list identifier.
- If expiration date is not provided, the document will never expire.
- Remember to replace variables such as {{user-identity}}, {{flow-identifier}}, and
  {{state-id}} with actual values.
- Some commands require you to manually publish changes in the Builder interface.
- You need to enable message and notification logs for them to be available.
- Data is recorded asynchronously and delays may occur during the process.
- Logs are stored for a maximum period of 3 days from the current date.
- Uses API key for authentication.
- The identity must be in the form jonh%2540email.com@blip.ai for an identity jonh%40email.com.
- OAuth2 authentication is required.
- Must have an available and public HTTPS endpoint to receive Blip's requests.
- Authorization token is required to connect to Blip.
- Uses API key for authentication
- Allows sending an options menu to customers where the header and options can be
  of any content type.
- The platform will receive the messages that the user reacted, with the message id.
- It is the chatbot developer's responsibility to send the correct content type to
  each channel.
- It is not possible to send reply messages.
- Replace {intentId} and {YOUR_TOKEN} with actual values when using the API.
- Uses API key for authentication — requires setup of authorization key.
- Broadcast service is available in multiple domains with varying requirements for
  user interaction.
- To get all members of a distribution list, send a command with GET method and command
  URI with the list identifier.
- Remember to replace placeholders with actual values.
- This API supports various context management operations.
- Toggle message and notification logs to be stored for a maximum period of 3 days.
- Ensure to replace {customerIdentity} and {ticketId} with actual values in requests
- This feature only works for bots using REDIS as distribution type.
- From April 2021, this method will have a return limit of 1000 scheduled messages.
- Uses API key for authorization
- Support for scheduling messages
- The command should be sent directly to the server node responsible for the channel.
- The availability and detail level of the information depend on the channel.
- WhatsApp only retrieves the identifier if the MSISDN is in complete form
- Sending notifications is a paid operation
- In case of problems, the chatbot must send a notification with the failed event.
- Each command has a mandatory uri property.
- Each command's response must include a status property.
- A notification provides information about a sent message.
- Python version 3.7 or above is required.
- Recommended to use pipenv for environment management.
- This component only works for the BLiP Chat channel right now.
- Allows sending and receiving geographic information.
- Metadata support varies per channel. It may be ignored if not supported.
- Quick replies require scope to be 'immediate'.
- You can send videos by uploading them or sharing a URL using the Media Link content
  type.
- You can send voice audio by recording them or sharing a URL using the Media Link
  content type.
- Allows sending of a native content of some channel using JSON format.
- For a multi channel chatbot, it is the chatbot developer's responsibility to send
  the correct content type to each channel.
- Redirection is only supported on chatbots configured as services in the master template.
- The API allows tracking of events for analytics.
- 'Your interval must have one of these statistics intervals: Daily, Monthly, NoInterval.'
- Replace {intentId} and {confusionMatrixId} with actual IDs in requests.
- Replace {intentId} with the actual intent ID when calling the questions endpoint.
- Replace {your_model_id} with the model ID when publishing a model.
- Replace {analyze_id} and {other_intent_id} with the respective IDs for feedback.
- The filter can be sent empty.
- Authorization requires a valid token.
- 'To use the bucket extension, send a command with the properties: id, method, resource,
  type, uri, to.'
- You must also define what is the new state you want to send the user.
- By default, Blip returns the last 20 thread messages.
- You can get a message after a maximum period of 3 days from the current date.
- SET command is recommended to add new contacts.
- Using MERGE command will update only properties present in the request.
- The API requires a valid token for Authorization.
- Responses may vary based on the method used.
- Each message has a unique identifier.
- The receipt of messages is done using the interface IMessageReceiver.
- Must have an available and public HTTPS endpoint to receive requests.
- Limit of 3 options for Facebook Messenger.
- Allows sending of structured information requests to the user, where it is possible
  to define validations rules.
- Commands must be sent to postmaster@analytics.msging.net for analytics features
- Replace {confusionMatrixId} and {modelId} with the appropriate IDs.
- Ensure to replace {intentId} with the actual intent identifier.
- Optional parameters include skip, take, and ascending for paginated results.
- The API is rate-limited and may require handling for retry logic.
- Requires setup of API key for authentication
- Replace {intentId}, {your_model_id}, and {analyze_id} with actual values.
- The persistent menu is only applicable to the Facebook Messenger channel.
- Before using the desk extension, ensure proper setup of a customer service tool.
- The API requires the use of a valid token in the Authorization header.
- The `tags` property can be hidden if you didn't set the Tags configurations in Portal.
- If you omit the `ClosedBy` property, we'll use the bot identity to identify the
  responsible to finish the ticket.
- Authorization requires a token in the header
- Each message needs to be sent through your unique HTTP endpoint.
- Sending a message to a Messenger recipient requires the correct content type.
- The message ID must be unique.
- Remember to replace the variable modelId for the model identifier you want to use.
- Optional parameters include skip, take, and ascending for pagination.
- Feedback can be either 'approved' or 'rejected'.
- Remember to replace {identity} and {variableName} with actual values.
- This API requires an API key for authorization.
- You need to enable this feature for messages to be stored and available.
- You need to enable this feature for notifications to be stored and available.
- The contact's properties must be sent explicitly for updates; missing properties
  will be deleted.
- The greeting and persistent menu can be set using specific URIs.
- Ensure to set up a customer service tool before using the desk extension.
- Use the correct ticket ID format when sending commands.
- Ensure the customer identity is provided for ticket creation.
- The API uses a token-based authentication scheme.
- WhatsApp only retrieves the identifier if the MSISDN is in complete form.
- Sending notifications is a paid operation.
errors:
- '400 (Bad Request): Alert to some problem with format or fields of sent envelope.'
- '401 (Unauthorized): Alert to some problem or Authorization header missing.'
- '504 (Gateway Timeout): The server was unable to return a response within 60 seconds.'
- 'Destination not found: Code 42'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '429: Too many requests - Exceeded throughput limits'
- '202 (Accepted): Envelope was accepted by the server'
- '400 (Bad Request): Alert to some problem with the format or fields of sent envelope.'
- '401 (Unauthorized): Alert to some problem or Authorization header missing'
- '202: Envelope was accepted by the server'
- '400: Alert to some problem with the format or fields of sent envelope.'
- '401: Alert to some problem or Authorization header missing.'
- '401 Unauthorized: Recheck API key or token'
- '400 Bad Request: Check the request format or parameters'
- '401 (Unauthorized): Alert to some problem or *Authorization* header missing'
- '401 (Unauthorized): Alert to some problem or *Authorization* header missing.'
- '401 Unauthorized: Recheck API key or permissions'
- '401 Unauthorized: Recheck API key'
- '400 Bad Request: Check query parameters for correctness'
- '401 Unauthorized: Recheck API key or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck API token or authorization'
- '404 Not Found: Check if the resource exists'
- '401 Unauthorized: Check your API key or token.'
- '404 Not Found: Verify the endpoint path and parameters.'
- '401 Unauthorized: Recheck API key or token.'
- '404 Not Found: Verify the ticket ID or endpoint path.'
- '400 Bad Request: Check the payload structure.'
- '429: Too many requests - throttle API calls'
- '401 Unauthorized: Check API key or token'
- '400 Bad Request: Check the request structure and data types.'
- '401 Unauthorized: Ensure the provided API key is valid.'
- '404 Not Found: The endpoint or resource does not exist.'
- '400 Bad Request: Check query parameters for validity.'
- '404 Not Found: Ensure the endpoint is correct.'
- '400 Bad Request: Check request format and parameters'
- '404 Not Found: Check endpoint path'
- '404 Not Found: Verify endpoint path and parameters'
- '400 Bad Request: Check the request body and parameters'
- '401 Unauthorized: Check your API key.'
- '404 Not Found: Ensure that the endpoint URI is correct.'
- '400 Bad Request: Check the request syntax and parameters.'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Invalid API key or token.'
- '400 Bad Request: Check the request body format.'
- '400 Bad Request: Check the message structure and content type.'
- '401 Unauthorized: Ensure the API key is correct.'
- '404 Not Found: Verify the endpoint path.'
- '400 Bad Request: Verify the request payload.'
- '404 Not Found: The requested resource could not be found.'
- '404 Not Found: Ensure the context variable exists.'
- '401 Unauthorized: Check your API key or token'
- '404 Not Found: Verify the endpoint or resource ID'
- '401 Unauthorized: Recheck API key or permissions.'
- '404 Not Found: Check if the URI is correct'
- '429: Too Many Requests - Exceeding throughput limits'
- '202 (Accepted): Envelope was accepted by the server.'
- 'Invalid request: Ensure valid JSON format and required fields are present.'
- 'Invalid Token: Ensure the token is correct and not expired.'
- '401 Unauthorized: Verify API key and permissions.'
- '400 Bad Request: Check your query parameters for correctness.'
- '401 Unauthorized: Ensure your API key is valid.'
- '401 Unauthorized: Recheck API Key or token expiration'
- '400 Bad Request: Validate the request payload and parameters.'
- '401 Unauthorized: Check API key or token validity.'
- '404 Not Found: Ensure the endpoint exists and the IDs are correct.'
- '400 Bad Request: Check the request parameters'
- '404 Not Found: The requested resource does not exist'
- '400 Bad Request: Check the request format and required fields.'
- '404 Not Found: Ensure the endpoint and contact identity are correct.'
- '404 Not Found: Ensure the ticket ID is valid'
- '400 Bad Request: Check the request payload for errors'
- 'Invalid Key: Check the authorization key used.'
- '404 Not Found: Check the endpoint URL and resource path.'
- '500 Internal Server Error: Check the server status.'
- 'Invalid message ID: Ensure the message ID is unique and does not contain invalid
  characters.'
- '404 Not Found: Check the endpoint or resource ID'
- '400 Bad Request: Check the request format and parameters.'
- '404 Not Found: Ensure the requested resource exists.'
- '404 Not Found: The requested resource was not found'
- '401 Unauthorized: Recheck API key or token expiration.'
- '404 Not Found: Verify the endpoint and resource.'
- 'Invalid Character: Do not use special URLs characters: ?, {, }'
- 'HTTP 200 OK: Request was successful.'
- 'HTTP 400 Bad Request: The request was invalid.'
- 'HTTP 401 Unauthorized: Check your API key.'
- '401 Unauthorized: Recheck API key validity'
- 'Unauthorized: Recheck your API key or token expiration'
- '200 OK: Successful request'
- '400 Bad Request: Check request format or parameters'
- '401 Unauthorized: Invalid API key'
- '400 Bad Request: Invalid parameters provided.'
- '401 Unauthorized: Check API key or token.'
auth_info:
  mentioned_objects:
  - OAuthToken
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Command
  - Message
  - LimeUri
  - Authorization
  - Lime.Guid
  - CommandMethod
client:
  base_url: https://{{contract_id}}.http.msging.net
  headers:
    Content-Type: application/json
source_metadata: null
