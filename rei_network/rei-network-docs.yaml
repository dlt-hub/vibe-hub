resources:
- name: REI Mainnet
  endpoint:
    path: /rpc
    method: GET
- name: REI Testnet
  endpoint:
    path: /rpc-testnet
    method: GET
- name: REI Mainnet
  endpoint:
    path: /
    method: GET
    data_selector: result
    params:
      chainID: '47805'
- name: REI Testnet
  endpoint:
    path: /
    method: GET
    data_selector: result
    params:
      chainID: '12357'
- name: Wrapped REI
  endpoint:
    path: /token_addresses/wrei
    method: GET
    data_selector: data
    params: {}
- name: Wrapped BTC
  endpoint:
    path: /token_addresses/wbtc
    method: GET
    data_selector: data
    params: {}
- name: Tether USD
  endpoint:
    path: /token_addresses/usdt
    method: GET
    data_selector: data
    params: {}
- name: USD Coin
  endpoint:
    path: /token_addresses/usdc
    method: GET
    data_selector: data
    params: {}
- name: Wrapped Ether
  endpoint:
    path: /token_addresses/weth
    method: GET
    data_selector: data
    params: {}
- name: Dai Stablecoin
  endpoint:
    path: /token_addresses/dai
    method: GET
    data_selector: data
    params: {}
- name: StakeManager
  endpoint:
    path: /developer/system-contracts/stakemanager
    method: GET
    data_selector: address
- name: Fee
  endpoint:
    path: /developer/system-contracts/fee
    method: GET
    data_selector: address
- name: ContractFee
  endpoint:
    path: /developer/system-contracts/contractfee
    method: GET
    data_selector: address
- name: Config
  endpoint:
    path: /developer/system-contracts/config
    method: GET
    data_selector: address
- name: UnstakePool
  endpoint:
    path: /developer/system-contracts/unstakepool
    method: GET
    data_selector: address
- name: ValidatorRewardPool
  endpoint:
    path: /developer/system-contracts/validatorrewardpool
    method: GET
    data_selector: address
- name: CommmissionShare
  endpoint:
    path: /developer/system-contracts/commissionshare
    method: GET
    data_selector: address
- name: FreeFee
  endpoint:
    path: /developer/system-contracts/freefee
    method: GET
    data_selector: address
- name: FeePool
  endpoint:
    path: /developer/system-contracts/feepool
    method: GET
    data_selector: address
- name: Router
  endpoint:
    path: /developer/system-contracts/router
    method: GET
    data_selector: address
- name: FeeToken
  endpoint:
    path: /developer/system-contracts/feetoken
    method: GET
    data_selector: address
- name: FreeFeeToken
  endpoint:
    path: /developer/system-contracts/freefeetoken
    method: GET
    data_selector: address
- name: StakeManager
  endpoint:
    path: /developer/system-contracts/stakemanager
    method: GET
    data_selector: address
    params: {}
- name: Fee
  endpoint:
    path: /developer/system-contracts/fee
    method: GET
    data_selector: address
    params: {}
- name: ContractFee
  endpoint:
    path: /developer/system-contracts/contractfee
    method: GET
    data_selector: address
    params: {}
- name: Config
  endpoint:
    path: /developer/system-contracts/config
    method: GET
    data_selector: address
    params: {}
- name: UnstakePool
  endpoint:
    path: /developer/system-contracts/unstakepool
    method: GET
    data_selector: address
    params: {}
- name: ValidatorRewardPool
  endpoint:
    path: /developer/system-contracts/validatorrewardpool
    method: GET
    data_selector: address
    params: {}
- name: CommmissionShare
  endpoint:
    path: /developer/system-contracts/commissionshare
    method: GET
    data_selector: address
    params: {}
- name: FreeFee
  endpoint:
    path: /developer/system-contracts/freefee
    method: GET
    data_selector: address
    params: {}
- name: FeePool
  endpoint:
    path: /developer/system-contracts/feepool
    method: GET
    data_selector: address
    params: {}
- name: Router
  endpoint:
    path: /developer/system-contracts/router
    method: GET
    data_selector: address
    params: {}
- name: FeeToken
  endpoint:
    path: /developer/system-contracts/feetoken
    method: GET
    data_selector: address
    params: {}
- name: FreeFeeToken
  endpoint:
    path: /developer/system-contracts/freefeetoken
    method: GET
    data_selector: address
    params: {}
- name: indexedValidators
  endpoint:
    path: /developer/system-contracts/stakemanager/indexedValidators
    method: GET
    data_selector: validators
    params: {}
- name: activeValidators
  endpoint:
    path: /developer/system-contracts/stakemanager/activeValidators
    method: GET
    data_selector: activeValidators
    params: {}
- name: Fee
  endpoint:
    path: /developer/system-contracts/fee
    method: GET
    data_selector: records
    params: {}
- name: fee
  endpoint:
    path: /developer/system-contracts/fee
    method: GET
    data_selector: records
- name: deposit
  endpoint:
    path: /developer/system-contracts/deposit
    method: POST
    data_selector: records
- name: withdraw
  endpoint:
    path: /developer/system-contracts/withdraw
    method: POST
    data_selector: records
- name: generateAddress
  endpoint:
    path: /generateAddress
    method: POST
    data_selector: address
- name: generateAddress2
  endpoint:
    path: /generateAddress2
    method: POST
    data_selector: address
- name: register
  endpoint:
    path: /register
    method: POST
    data_selector: registration
- name: setFee
  endpoint:
    path: /setFee
    method: POST
    data_selector: feeSet
- name: generateAddress
  endpoint:
    path: /generateAddress
    method: POST
    data_selector: address
- name: generateAddress2
  endpoint:
    path: /generateAddress2
    method: POST
    data_selector: address
- name: register
  endpoint:
    path: /register
    method: POST
    data_selector: registration
- name: setFee
  endpoint:
    path: /setFee
    method: POST
    data_selector: fee
- name: Router
  endpoint:
    path: /developer/system-contracts/router
    method: GET
    data_selector: records
    params: {}
- name: constructor
  endpoint:
    path: /developer/system-contracts/commissionshare/constructor
    method: public
    data_selector: ERC20
    params: {}
- name: estimateSharesToAmount
  endpoint:
    path: /developer/system-contracts/commissionshare/estimateSharesToAmount
    method: external
    data_selector: shares
    params: {}
- name: estimateAmountToShares
  endpoint:
    path: /developer/system-contracts/commissionshare/estimateAmountToShares
    method: external
    data_selector: amount
    params: {}
- name: mint
  endpoint:
    path: /developer/system-contracts/commissionshare/mint
    method: external
    data_selector: to
    params: {}
- name: burn
  endpoint:
    path: /developer/system-contracts/commissionshare/burn
    method: external
    data_selector: shares
    params: {}
- name: reward
  endpoint:
    path: /developer/system-contracts/commissionshare/reward
    method: external
    data_selector: ''
    params: {}
- name: slash
  endpoint:
    path: /developer/system-contracts/commissionshare/slash
    method: external
    data_selector: factor
    params: {}
- name: constructor
  endpoint:
    path: /developer/system-contracts/commissionshare
    method: GET
    data_selector: constructor
    params: {}
- name: estimateSharesToAmount
  endpoint:
    path: /developer/system-contracts/commissionshare
    method: GET
    data_selector: estimateSharesToAmount
    params: {}
- name: estimateAmountToShares
  endpoint:
    path: /developer/system-contracts/commissionshare
    method: GET
    data_selector: estimateAmountToShares
    params: {}
- name: mint
  endpoint:
    path: /developer/system-contracts/commissionshare
    method: GET
    data_selector: mint
    params: {}
- name: burn
  endpoint:
    path: /developer/system-contracts/commissionshare
    method: GET
    data_selector: burn
    params: {}
- name: reward
  endpoint:
    path: /developer/system-contracts/commissionshare
    method: GET
    data_selector: reward
    params: {}
- name: slash
  endpoint:
    path: /developer/system-contracts/commissionshare
    method: GET
    data_selector: slash
    params: {}
- name: validatorsLength
  endpoint:
    path: /validatorsLength
    method: GET
    data_selector: validatorsLength
    params: {}
- name: earn
  endpoint:
    path: /earn
    method: POST
    data_selector: earn
    params: {}
- name: accumulate
  endpoint:
    path: /accumulate
    method: POST
    data_selector: accumulate
    params: {}
- name: onAssignBlockReward
  endpoint:
    path: /onAssignBlockReward
    method: POST
    data_selector: onAssignBlockReward
    params: {}
- name: validatorsLength
  endpoint:
    path: /validatorsLength
    method: GET
    data_selector: validatorsLength
    params: {}
- name: earn
  endpoint:
    path: /earn
    method: POST
    data_selector: earn
    params: {}
- name: accumulate
  endpoint:
    path: /accumulate
    method: POST
    data_selector: accumulate
    params: {}
- name: onAssignBlockReward
  endpoint:
    path: /onAssignBlockReward
    method: POST
    data_selector: onAssignBlockReward
    params: {}
- name: claim
  endpoint:
    method: POST
- name: reward
  endpoint:
    method: POST
- name: slash
  endpoint:
    method: POST
- name: constructor
  endpoint:
    path: /constructor
    method: public
    data_selector: None
    params: {}
- name: claim
  endpoint:
    path: /claim
    method: external
    data_selector: None
    params:
      validator: address
      amount: uint256
- name: reward
  endpoint:
    path: /reward
    method: external
    data_selector: None
    params:
      validator: address
- name: slash
  endpoint:
    path: /slash
    method: external
    data_selector: None
    params:
      validator: address
      factor: uint8
- name: estimateTotalLeft
  endpoint:
    path: /estimateTotalLeft
    method: POST
    data_selector: totalLeft
- name: estimateUsage
  endpoint:
    path: /estimateUsage
    method: POST
    data_selector: usage
- name: estimateFreeFee
  endpoint:
    path: /estimateFreeFee
    method: POST
    data_selector: freeFee
- name: consume
  endpoint:
    path: /consume
    method: POST
    data_selector: usage
- name: onAfterBlock
  endpoint:
    path: /onAfterBlock
    method: POST
    data_selector: globalTimestamp
- name: estimateTotalLeft
  endpoint:
    path: /estimateTotalLeft
    method: POST
    data_selector: totalLeft
- name: estimateUsage
  endpoint:
    path: /estimateUsage
    method: POST
    data_selector: usage
- name: estimateFreeFee
  endpoint:
    path: /estimateFreeFee
    method: POST
    data_selector: freeFee
- name: consume
  endpoint:
    path: /consume
    method: POST
    data_selector: usage
- name: onAfterBlock
  endpoint:
    path: /onAfterBlock
    method: POST
    data_selector: callback
- name: deposit
  endpoint:
    path: /unstakepool/deposit
    method: POST
    data_selector: shares
    params: {}
- name: withdraw
  endpoint:
    path: /unstakepool/withdraw
    method: POST
    data_selector: amount
    params: {}
- name: slash
  endpoint:
    path: /unstakepool/slash
    method: POST
    data_selector: amount
    params: {}
- name: deposit
  endpoint:
    path: /unstakepool/deposit
    method: POST
    data_selector: shares
    params:
      validator: address
- name: withdraw
  endpoint:
    path: /unstakepool/withdraw
    method: POST
    data_selector: amount
    params:
      validator: address
      shares: uint256
      to: address payable
- name: slash
  endpoint:
    path: /unstakepool/slash
    method: POST
    data_selector: amount
    params:
      validator: address
      factor: uint8
- name: multisig_wallet
  endpoint:
    path: /multisig/wallet
    method: GET
    data_selector: wallet_details
- name: funds_management
  endpoint:
    path: /funds/management
    method: GET
    data_selector: funds_flow
- name: ecosystem_grants
  endpoint:
    path: /ecosystem/grants
    method: GET
    data_selector: grants
- name: marketing
  endpoint:
    path: /marketing
    method: GET
    data_selector: marketing_data
- name: developer_incentives
  endpoint:
    path: /developer/incentives
    method: GET
    data_selector: incentives
- name: admin_addresses
  endpoint:
    path: /admin/addresses
    method: GET
    data_selector: addresses
    params: {}
- name: proposal_generation
  endpoint:
    path: /rei-dao/proposal-generation
    method: GET
    data_selector: proposals
    params: {}
- name: proposal_voting_process
  endpoint:
    path: /rei-dao/proposal-voting-process
    method: GET
    data_selector: voting_process
    params: {}
- name: principles_of_proposal_implementation
  endpoint:
    path: /rei-dao/principles-of-proposal-implementation
    method: GET
    data_selector: principles
    params: {}
- name: proposal_generation
  endpoint:
    path: /rei-dao/proposal-generation
    method: GET
- name: voting_process
  endpoint:
    path: /rei-dao/voting-process
    method: GET
- name: governance
  endpoint:
    path: /services/data/vXX.X/governance
    method: GET
    data_selector: records
    params: {}
- name: Jail Mechanism
  endpoint:
    path: /rei-dao/guides/jail-mechanism
    method: GET
    data_selector: content
    params: {}
- name: jail_mechanism
  endpoint:
    path: /rei-dao/guides/jail-mechanism
    method: GET
    data_selector: data
    params: {}
- name: bls_keystore
  endpoint:
    path: /bls/keystore
    method: POST
    data_selector: keystore
    params: {}
- name: bls_publicKey
  endpoint:
    path: /bls/publicKey
    method: GET
    data_selector: publicKey
    params: {}
- name: bls_registration
  endpoint:
    path: /bls/register
    method: POST
    data_selector: registration
    params: {}
- name: setBLSKey
  endpoint:
    path: /setBLSPublicKey
    method: POST
    data_selector: key
    params: {}
- name: getBLSKey
  endpoint:
    path: /getBLSPublicKey
    method: GET
    data_selector: key
    params: {}
- name: isRegistered
  endpoint:
    path: /isRegistered
    method: GET
    data_selector: isRegistered
    params: {}
- name: isBLSKeyExist
  endpoint:
    path: /isBLSPublicKeyExist
    method: GET
    data_selector: isExist
    params: {}
- name: REI Mainnet
  endpoint:
    path: /
    method: POST
- name: REI Testnet
  endpoint:
    path: /
    method: POST
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: records
    params: {}
notes:
- 'P2P TCP Port: 4191'
- 'P2P UDP Port: 9810'
- 'P2P NAT: 127.0.0.1'
- 'RPC Port: 11451'
- 'RPC host: 127.0.0.1'
- 'RPC API: eth,net,web3'
- No description available for the StakeManager.
- Indexing blockchain data is really, really hard.
- Due to the support of Ethereum tracing modules in REI network, The Graph is capable
  of indexing blockchain data in REI.
- Gnosis Safe wallet is now live
- REI Network is compatible with all data structures and RPC interfaces of Ethereum
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses Gnosis multisig wallet for fund management
- Requires 3/4 approval from four addresses to use funds
- All expenses for marketing, operation, and ecosystem development are managed and
  spent in the way of DAO.
- The team uses the Genosis multisig wallet to ensure the centralization and transparency
  of the DAO.
- The use of funds requires a multi-sig wallet, which is suitable for the decision-making
  scenario of the muti-people or institution.
- REI Network decided to use the multisig wallet management to implement distributed
  management of the overall capital flow.
- It minimizes the risk of asset loss when a single private key is lost, and the use
  of this part of the funds must be approved by 3/4 of the following four addresses
  to take effect.
- The first batch of REI DAO Council members will be generated within 10 working days.
- Voting duration for proposals is usually 7 days.
- Proposals must promote the development of REI Network.
- Uses OAuth2 with refresh token — requires setup of connected app in REI Network
- Some objects may return nulls in deeply nested fields
- Snapshot is a decentralized, gasless voting system.
- The dashboard provides more information about the REI Network, such as charts for
  Total stake, Total gas stake, Total voting stake, Amount Of Gas Saved For Users.
- Commission rate represents the proportion of the validator's reward, which is a
  number from 0 to 100. It can only be set by the validator, and the interval between
  2 modifications cannot be less than 24 hours.
- The reward will be vested for 7 days before you can finally claim it.
- Commission rate represents the proportion of the validator's reward, which is a
  number from 0 to 100.
- The interval between 2 modifications of the commission rate cannot be less than
  24 hours.
- The introduction of the Jail Mechanism will solve the problem that the continuous
  block loss of validators which affects the network stability.
- Single slashing ratio set by the rei-network mainnet is 20%.
- If the 'super node' misses blocks ≥ 300 in one day, it will be thrown into jail.
- During this period, block production will be prohibited, and validators can choose
  to pay a fine of 20,000 REI to re-participate in block production.
- There will be a vesting period after unvote/unstake, find the pending unstake record
  in Pending Unstake Dashboard.
- The single slashing ratio set by the rei-network mainnet is 20%.
- The specified path for the bls keystore file should be the original validator datadir.
- Use Node.js version 16.0.0 or greater to run the validator client.
- BLS keystore must be kept secure and backed up.
- Before rei-dao fork, the contract address is `0x5b84072EE3e72a58A906FA15182beEdaB5298076`,
  after rei-dao fork, the contract address is `0x0000000000000000000000000000000001009`
- After the registration is complete, you can call the isRegistered method to check
  whether the registration is successful or call the getBLSPublicKey method to check
  whether the bls public key is consistent with the registered one
- It may take 1 to 2 minutes for the registration record to be updated after registering
  with the BLS public key.
- Make sure the node turns on rpc module, and turns on rei API
- Before rei-dao fork, the contract address is 0x5b84072EE3e72a58A906FA15182beEdaB5298076,
  after rei-dao fork, the contract address is 0x0000000000000000000000000000000001009
- Compatible with EVM
- Supports Ethereum's RPC and Websocket interfaces
- The document is constantly being updated and improved
- P2P TCP Port is 4191
- P2P UDP Port is 9810
- P2P NAT is 127.0.0.1
- RPC Port is 11451
- RPC host is 127.0.0.1
- RPC API includes eth, net, web3
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Possible reasons for a Validator to be slashed include running two validators with
  the same address at the same time, private key leakage, or malicious tampering with
  the validator program.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://rpc-mainnet.rei.network
source_metadata: null
