resources:
- name: wallets
  endpoint:
    path: /reference/get-wallets
    method: GET
- name: accounts
  endpoint:
    path: /reference/get-account-profile
    method: GET
- name: transactions
  endpoint:
    path: /reference/get-transactions
    method: GET
- name: crypto
  endpoint:
    path: /reference/fetch-asset-chains
    method: GET
- name: wallets
  endpoint:
    path: /wallets
    method: GET
- name: account_profile
  endpoint:
    path: /get-account-profile
    method: GET
- name: transactions
  endpoint:
    path: /get-transactions
    method: GET
- name: wallets
  endpoint:
    path: /wallets
    method: GET
- name: account_profile
  endpoint:
    path: /accounts
    method: GET
- name: beneficiaries
  endpoint:
    path: /beneficiaries
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: cards
  endpoint:
    path: /cards
    method: GET
- name: wallets
  endpoint:
    path: /wallets
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: beneficiaries
  endpoint:
    path: /beneficiaries
    method: GET
- name: wallets
  endpoint:
    path: /get-wallets
    method: GET
- name: beneficiaries
  endpoint:
    path: /get-beneficiaries
    method: GET
- name: transactions
  endpoint:
    path: /get-transactions
    method: GET
- name: card_transactions
  endpoint:
    path: /webhooks/card_transactions
    method: POST
    data_selector: card_transactions
- name: check_account_exists
  endpoint:
    path: /v1/beneficiaries/accounts/eversend
    method: POST
    data_selector: data
    params: {}
- name: create_transfer_quotation
  endpoint:
    path: /v1/payouts/quotation/eversend
    method: POST
    data_selector: data
    params: {}
- name: create_transfer
  endpoint:
    path: /v1/payouts/eversend
    method: POST
    data_selector: data
    params: {}
- name: create_a_card_user
  endpoint:
    path: /reference/create-a-card-user
    method: POST
- name: get_all_card_users
  endpoint:
    path: /reference/get-a-card
    method: GET
- name: create_a_card
  endpoint:
    path: /reference/create-a-card
    method: POST
- name: get_all_cards
  endpoint:
    path: /reference/get-all-cards
    method: GET
- name: get_a_single_card
  endpoint:
    path: /reference/get-a-single-card
    method: GET
- name: get_single_card_transactions
  endpoint:
    path: /reference/get-a-single-card-transactions
    method: GET
- name: fund_a_card
  endpoint:
    path: /reference/fund-a-card
    method: POST
- name: withdraw_from_a_card
  endpoint:
    path: /reference/withdraw-from-card
    method: POST
- name: freeze_a_card
  endpoint:
    path: /reference/freeze-a-card
    method: POST
- name: unfreeze_a_card
  endpoint:
    path: /reference/unfreeze-a-card
    method: POST
- name: terminate_a_card
  endpoint:
    path: /reference/terminate-a-card
    method: POST
- name: get_all_card_analytics
  endpoint:
    path: /reference/get-all-card-analytics
    method: GET
- name: generate_token
  endpoint:
    path: /v1/auth/token
    method: GET
- name: wallets
  endpoint:
    path: /v1/wallets
    method: GET
    data_selector: data
- name: wallet
  endpoint:
    path: /v1/wallets/{walletId}
    method: GET
    data_selector: data.wallet
    params: {}
- name: activate_wallet
  endpoint:
    path: /v1/wallets/activate
    method: POST
    data_selector: data
    params: {}
- name: deactivate_wallet
  endpoint:
    path: /v1/wallets/deactivate
    method: POST
    data_selector: data
    params:
      wallet: UGX
- name: account_profile
  endpoint:
    path: /account
    method: GET
    data_selector: data
- name: create_quotation
  endpoint:
    path: /v1/exchanges/quotation
    method: POST
    data_selector: json
    params: {}
- name: create_exchange
  endpoint:
    path: /exchanges
    method: POST
- name: beneficiaries
  endpoint:
    path: /v1/beneficiaries
    method: POST
    data_selector: object
- name: beneficiaries
  endpoint:
    path: /v1/beneficiaries
    method: GET
    data_selector: beneficiaries
    params:
      type: momo
      search: frank
      limit: 100
      page: 1
- name: beneficiary
  endpoint:
    path: /v1/beneficiaries/{beneficiaryId}
    method: GET
    data_selector: data.beneficiary
- name: edit_a_beneficiary
  endpoint:
    path: /v1/beneficiaries/{beneficiaryId}
    method: PUT
- name: delete_a_beneficiary
  endpoint:
    path: /v1/beneficiaries/{beneficiaryId}
    method: DELETE
    data_selector: object
    params: {}
- name: get_bank_details
  endpoint:
    path: /v1/beneficiaries/accounts/banks
    method: POST
    data_selector: data
    params: {}
- name: check_eversend_account
  endpoint:
    path: /v1/beneficiaries/accounts/eversend
    method: POST
- name: delivery_countries
  endpoint:
    path: /v1/payouts/countries
    method: GET
    data_selector: data.countries
- name: delivery_banks
  endpoint:
    path: /v1/payouts/banks/{country}
    method: GET
- name: create_payout_quotation
  endpoint:
    path: /payouts/quotation
    method: POST
    data_selector: data
    params: {}
- name: create_payout_transaction_non_beneficiary_momo
  endpoint:
    path: /v1/payouts
    method: POST
    data_selector: transaction
    params: {}
- name: create_payout_transaction_non_beneficiary_bank
  endpoint:
    path: /v1/payouts
    method: POST
- name: create_payout_transaction_beneficiary
  endpoint:
    path: /payouts
    method: POST
    data_selector: data
    params: {}
- name: Create Payout Quotation - Eversend
  endpoint:
    path: /v1/payouts/quotation/eversend
    method: POST
- name: create_payout_transaction_eversend
  endpoint:
    path: /v1/payouts/eversend
    method: POST
- name: collection_fees
  endpoint:
    path: /v1/collections/fees
    method: POST
    data_selector: data
- name: get_collection_otp
  endpoint:
    path: /collections/otp
    method: POST
    data_selector: object
- name: mobile_money_collection
  endpoint:
    path: /v1/collections/momo
    method: POST
- name: validate_transaction_ghs
  endpoint:
    path: /v1/collections/sendOTP
    method: POST
    data_selector: data
    params: {}
- name: ngn_collection
  endpoint:
    path: /v1/collections/bankAccounts
    method: POST
    data_selector: object
    params: {}
- name: ngn_temporary_virtual_account
  endpoint:
    path: /v1/collections/tempVirtualAccounts
    method: POST
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
    params:
      search: BE11640235387619
      range: day
      limit: 10
      page: 1
      from: YYYY-MM-dd
      to: YYYY-MM-dd
      type: payout
      currency: UGX
      status: pending
- name: get_a_transaction
  endpoint:
    path: /v1/transactions/{transactionId}
    method: GET
- name: fetch_asset_chains
  endpoint:
    path: /v1/crypto/assets/{coin}
    method: GET
    data_selector: data.chains
- name: create_crypto_address
  endpoint:
    path: /v1/crypto/addresses
    method: POST
    data_selector: data
    params: {}
- name: fetch_addresses
  endpoint:
    path: /v1/crypto/addresses
    method: GET
    data_selector: data.addresses
- name: transactions
  endpoint:
    path: /v1/crypto/transactions
    method: GET
    data_selector: transactions
- name: fetch_single_address_transactions
  endpoint:
    path: /v1/crypto/addresses/{cryptoCoinAddress}/transactions
    method: GET
    data_selector: transactions
- name: create_a_card_user
  endpoint:
    path: /cards/user
    method: POST
    data_selector: data
    params: {}
- name: edit_card_user
  endpoint:
    path: /v1/cards/user
    method: PATCH
    data_selector: data
    params: {}
- name: card_users
  endpoint:
    path: /v1/cards/getUsers
    method: GET
    data_selector: data
    params:
      page: '1'
      limit: '20'
- name: create_card
  endpoint:
    path: /cards
    method: POST
    data_selector: data
- name: get_all_cards
  endpoint:
    path: /get-all-cards
    method: GET
    data_selector: data
- name: get_all_card_users
  endpoint:
    path: /get-a-card
    method: GET
    data_selector: data
- name: cards
  endpoint:
    path: /cards
    method: GET
    data_selector: cards
- name: get_a_single_card
  endpoint:
    path: /v1/cards/{cardId}
    method: GET
- name: get_a_single_card_transactions
  endpoint:
    path: /v1/cards/transactions/{cardId}
    method: GET
- name: fetch_all_cards_transactions
  endpoint:
    path: /v1/cards/transactions
    method: GET
- name: fund_a_card
  endpoint:
    path: /v1/cards/fund
    method: POST
    data_selector: object
    params: {}
- name: withdraw_from_card
  endpoint:
    path: /v1/cards/withdraw
    method: POST
    data_selector: object
    params: {}
- name: freeze_a_card
  endpoint:
    path: /cards/freeze
    method: POST
    data_selector: code
    params: {}
- name: unfreeze_card
  endpoint:
    path: /v1/cards/unfreeze
    method: POST
    data_selector: object
    params:
      cardId: string
- name: get_all_card_analytics
  endpoint:
    path: /v1/cards/analytics
    method: GET
    data_selector: data
- name: generate_token
  endpoint:
    path: /v1/auth/token
    method: GET
- name: account_profile
  endpoint:
    path: /account
    method: GET
    data_selector: data
- name: quotation
  endpoint:
    path: /v1/exchanges/quotation
    method: POST
    data_selector: object
- name: beneficiaries
  endpoint:
    path: /v1/beneficiaries
    method: POST
    data_selector: object
- name: get_beneficiaries
  endpoint:
    path: /v1/beneficiaries
    method: GET
    data_selector: object
- name: get_a_beneficiary
  endpoint:
    path: /v1/beneficiaries/{id}
    method: GET
    data_selector: object
- name: delivery_countries
  endpoint:
    path: /v1/payouts/countries
    method: GET
    data_selector: countries
- name: collection_fees
  endpoint:
    path: /v1/collections/fees
    method: POST
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
    params:
      search: BE11640235387619
      range: day
      limit: 10
      page: 1
      from: YYYY-MM-dd
      to: YYYY-MM-dd
      type: payout
      currency: UGX
      status: pending
- name: fetch_asset_chains
  endpoint:
    path: /v1/crypto/assets/{coin}
    method: GET
- name: create_card_user
  endpoint:
    path: /cards/user
    method: POST
    data_selector: data
notes:
- Integrate Eversend's Crypto API into your applications.
- API access is restricted to whitelisted IP addresses.
- All API requests must be made over HTTPS. Calls made over plain HTTP will fail.
- Ensure your webhook URL is publicly available (localhost URLs cannot receive events)
- Headers tend to be automatically converted to lowercase as per HTTP/2 specifications.
- Please note that only one of email or phone should be passed. If both are filled
  in, only phone will be used.
errors:
- '400: Bad Request -- The request could not be understood by the server due to malformed
  syntax.'
- '401: Unauthorized -- Invalid Token.'
- '402: Request Failed -- The parameters were valid but the request failed.'
- '403: Forbidden -- The API key doesn''t have permission to perform the request.'
- '404: Not Found -- The specified endpoint could not be found.'
- '500: Internal Server Error -- We had a problem with our server. Try again later.'
- '503: Service Unavailable -- We''re temporarily offline for maintenance. Please
  try again later.'
- '400: Bad Request'
- '400: Invalid request parameters'
- 400 Bad Request
- '400'
- '200'
- '200: Success'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.eversend.co
  auth:
    type: apikey
  headers:
    clientId: your-id
    clientSecret: your-secret
source_metadata: null
