resources:
- name: get_user
  endpoint:
    path: /management/v1/users
    method: GET
    data_selector: data
- name: get_users
  endpoint:
    path: /management/v1/users
    method: GET
    data_selector: data
- name: create_or_update_user
  endpoint:
    path: /management/v1/users
    method: POST
    data_selector: data
- name: deactivate_user
  endpoint:
    path: /management/v1/users/deactivate
    method: POST
    data_selector: null
- name: get_grants
  endpoint:
    path: /repository/{repositoryId}/grants
    method: GET
    data_selector: data.grants
    params: {}
- name: get_grants_filtered
  endpoint:
    path: /repository/{repositoryId}/grants
    method: GET
    data_selector: data.grants
    params:
      filterByGrantee: example_grantee_filter
- name: get_item_grants
  endpoint:
    path: /repository/{repositoryId}/items/{itemId}/grants
    method: GET
    data_selector: data.grants
    params: {}
- name: get_item_grants_filtered
  endpoint:
    path: /repository/{repositoryId}/items/{itemId}/grants
    method: GET
    data_selector: data.grants
    params:
      filterByGrantee: example_grantee_filter
- name: place_purchase_order
  endpoint:
    path: /management/v1/medias
    method: POST
    data_selector: data
    params: {}
- name: place_subscription_order
  endpoint:
    path: /place_subscription_order
    method: POST
    data_selector: data
    params: {}
- name: edit_subscription_order
  endpoint:
    path: /edit_subscription_order
    method: POST
    data_selector: data
    params: {}
- name: cancel_order
  endpoint:
    path: /cancel_order
    method: POST
    data_selector: data
    params: {}
- name: get_order_by_id
  endpoint:
    path: /get_order_by_id
    method: GET
    data_selector: data
    params: {}
- name: get_order_refund_preview_by_id
  endpoint:
    path: /get_order_refund_preview_by_id
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /management/v1/user/{userId}
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /management/v1/users
    method: GET
    data_selector: data
    params: {}
- name: user_facebook_pages
  endpoint:
    path: /management/v1/user/{userId}/facebook/pages
    method: GET
    data_selector: data
    params: {}
- name: user_media
  endpoint:
    path: /management/v1/user/{userId}/media
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /management/v1/groups
    method: GET
    data_selector: data
    params: {}
- name: create_or_update_group_batch
  endpoint:
    path: /management/v1/groups
    method: POST
    data_selector: data
    params: {}
- name: repository_grants
  endpoint:
    path: /management/v1/repository/{repositoryId}/grants
    method: GET
    data_selector: data.grants
    params:
      repositoryId: repositoryId
- name: item_grants
  endpoint:
    path: /management/v1/repository/{repositoryId}/items/{itemId}/grants
    method: GET
    data_selector: data.grants
    params:
      repositoryId: repositoryId
      itemId: itemId
- name: access_records
  endpoint:
    path: /management/v1/repository/{repositoryId}/access
    method: GET
    data_selector: data
    params:
      repositoryId: repositoryId
- name: item_access_records
  endpoint:
    path: /management/v1/repository/{repositoryId}/access/item/{contentItemId}
    method: GET
    data_selector: data
    params:
      repositoryId: repositoryId
      contentItemId: contentItemId
- name: report_errors
  endpoint:
    path: /management/v1/items/report/{reportId}/errors
    method: GET
    data_selector: data
    params:
      reportId: required
- name: place_purchase_order
  endpoint:
    path: /management/v1/order
    method: POST
    data_selector: data
    params: {}
- name: place_subscription_order
  endpoint:
    path: /management/v1/order
    method: POST
    data_selector: data
    params: {}
- name: edit_purchase_order
  endpoint:
    path: /management/v1/order/{orderId}
    method: PUT
    data_selector: data
    params:
      orderId: required
- name: edit_subscription_order
  endpoint:
    path: /management/v1/order/{orderId}
    method: PUT
    data_selector: data
    params:
      orderId: required
- name: cancel_order
  endpoint:
    path: /management/v1/order/{orderId}/cancel
    method: POST
    data_selector: data
    params:
      orderId: required
- name: order
  endpoint:
    path: /management/v1/order/{orderId}
    method: GET
    data_selector: data
    params: {}
- name: order_refund_preview
  endpoint:
    path: /management/v1/order/{orderId}/refundpreview
    method: GET
    data_selector: data
    params: {}
- name: client_leads_webhook
  endpoint:
    path: /webhooks/client_leads
    method: POST
    data_selector: leads
    params: {}
- name: create_audience_placeholder
  endpoint:
    path: /management/v1/audience
    method: POST
    data_selector: data
    params:
      placeholderId: 'true'
- name: upload_audience_data_csv
  endpoint:
    path: /management/v1/audience/{placeholderId}/csv/upload
    method: POST
    data_selector: null
    params: {}
- name: user
  endpoint:
    path: management/v1/user/{userId}
    method: GET
- name: users
  endpoint:
    path: management/v1/users
    method: GET
- name: users
  endpoint:
    path: /management/v1/users
    method: POST
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /management/v1/groups
    method: GET
    data_selector: data
    params: {}
- name: repository
  endpoint:
    path: /management/v1/repository/{repositoryId}
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /management/v1/repository/{repositoryId}/items
    method: POST
    data_selector: data
    params: {}
- name: grants
  endpoint:
    path: /repository/{repositoryId}/grants
    method: GET
    data_selector: data.grants
    params:
      repositoryId: string
- name: item_grants
  endpoint:
    path: /repository/{repositoryId}/items/{itemId}/grants
    method: GET
    data_selector: data.grants
    params:
      repositoryId: string
      itemId: string
- name: access_records
  endpoint:
    path: /repository/{repositoryId}/access
    method: GET
    data_selector: data
    params:
      repositoryId: string
- name: item_access_records
  endpoint:
    path: /repository/{repositoryId}/access/item/{contentItemId}
    method: GET
    data_selector: data
    params:
      repositoryId: string
      contentItemId: string
- name: report_errors
  endpoint:
    path: /management/v1/items/report/{reportId}/errors
    method: GET
    data_selector: data
    params:
      reportId: 'true'
- name: purchase_order
  endpoint:
    path: /management/v1/order
    method: POST
    data_selector: data
- name: subscription_order
  endpoint:
    path: /management/v1/order
    method: POST
    data_selector: data
- name: edit_purchase_order
  endpoint:
    path: /management/v1/order/{orderId}
    method: PUT
    data_selector: data
    params:
      orderId: 'true'
- name: edit_subscription_order
  endpoint:
    path: /management/v1/order/{orderId}
    method: PUT
    data_selector: data
    params:
      orderId: 'true'
- name: cancel_order
  endpoint:
    path: /management/v1/order/{orderId}/cancel
    method: POST
    data_selector: data
    params:
      orderId: 'true'
- name: order
  endpoint:
    path: /management/v1/order/{orderId}
    method: GET
    data_selector: data
    params: {}
- name: order_refund_preview
  endpoint:
    path: /management/v1/order/{orderId}/refundpreview
    method: GET
    data_selector: data
    params: {}
- name: create_audience_placeholder
  endpoint:
    path: /management/v1/audience
    method: POST
    data_selector: data
    params: {}
- name: upload_audience_data_csv
  endpoint:
    path: /management/v1/audience/{placeholderId}/csv/upload
    method: POST
    data_selector: data
    params: {}
- name: audience_upload
  endpoint:
    path: /management/v1/audience/{placeholderId}/csv/upload
    method: POST
    data_selector: audiencePlaceholderId
    params:
      placeholderId: 'true'
- name: media_creation
  endpoint:
    path: /management/v1/medias
    method: POST
    data_selector: data
- name: audience_provided
  endpoint:
    path: /management/v1/audience/provided
    method: POST
    data_selector: audiencePlaceholderId
- name: audience_grants
  endpoint:
    path: /management/v1/audience/{placeholderId}/grants
    method: POST
    data_selector: audiencePlaceholderDetails
    params:
      placeholderId: 'true'
- name: audience_details
  endpoint:
    path: /management/v1/audience/{placeholderId}
    method: GET
    data_selector: audienceDetails
    params:
      placeholderId: 'true'
- name: audience_list
  endpoint:
    path: /management/v1/audience
    method: GET
    data_selector: audiencePlaceholders
- name: query_parameters
  endpoint:
    path: /filters
    method: GET
    data_selector: filters
    params: {}
notes:
- Requests with a timestamp over a minute old will not be accepted.
- Empty permissions lists are currently not supported by this endpoint. Use the DELETE
  endpoint instead.
- Each lead may be delivered more than once.
- The HTTPS request will time out after 5 seconds.
- Batches are limited to 1000 items at a time.
- The creation option is asynchronous - rather than returning the newly created items,
  you will receive a report_id.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Special consideration should be taken not to fail if a new field is present in your
  data that you did not expect.
- READ is the only valid permission for content access.
- Successfully created Audience Placeholders will have a `pending` status.
- Audience creation can take up to 24 hours to complete.
errors:
- 'EV_UNAUTHORIZED_MISSING_HEADERS: Ensure all required authentication headers are
  included.'
- '400 BAD REQUEST: When the request is malformed or you attempt to associate to a
  non existent group.'
- '400 BAD REQUEST: Malformed request.'
- 200 - Success
- 404 NOT FOUND - The order ID does not exist.
- '404 NOT FOUND: When it can''t locate the user.'
- 202 ACCEPTED - List has been received and submitted for processing.
- 400 BAD REQUEST - Malformed request.
- '404 NOT FOUND: When we are unable to locate a report with that ID.'
- '400 BAD REQUEST: Request is malformed or contains invalid data.'
- '200 OK: Returning the order information.'
- '404 NOT FOUND: The order ID does not exist.'
- 'EV_UNAUTHORIZED_MISSING_HEADERS: Unauthorized Request'
- '200 OK: Successful response'
- '400 BAD REQUEST: Malformed request'
- '404 NOT FOUND: Resource not found'
- '404 NOT FOUND: When unable to locate a report with that ID.'
- 200 OK - Successfully cancelled the order.
- 400 BAD REQUEST - Request is malformed or contains invalid data.
- '400 BAD REQUEST: When the request is malformed, or you attempt to associate to
  a non-existent user or group.'
- '400 BAD REQUEST: When the request is malformed, the audience is already processing
  changes, or the CSV is invalid.'
- '403 FORBIDDEN: User has insufficient privileges or Audience Placeholder does not
  exist.'
- '404 NOT FOUND: When the request is malformed.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://partner-api-production.evocalize.com
  auth:
    type: Shared Secret
  headers:
    Content-Type: application/json
source_metadata: null
