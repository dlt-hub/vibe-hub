resources:
- name: CI job status
  endpoint:
    path: /continuous-integration-jobs/{CI_JOB_ID}/status
    method: GET
    data_selector: State
    params: {}
- name: CI job run
  endpoint:
    path: /continuous-integration-jobs/{CI_JOB_ID}/run-requests
    method: POST
    data_selector: RunRequestId
    params: {}
- name: CI job run status
  endpoint:
    path: /continuous-integration-jobs/{CI_JOB_ID}/run-requests/{RUN_REQUEST_ID}
    method: GET
    data_selector: State
    params: {}
- name: Custom object
  endpoint:
    path: /services/data/vXX.X/sobjects/CustomObject
    method: GET
    data_selector: records
    params: {}
- name: combined_deployment
  endpoint:
    path: /deployments/combine
    method: POST
    data_selector: results
    params: {}
- name: deployment_history
  endpoint:
    path: /deployments/deployed
    method: GET
    data_selector: deployments
- name: deployment_history
  endpoint:
    path: /deployments/deployed
    method: GET
    data_selector: deployments
- name: data_tier
  endpoint:
    path: /services/data/vXX.X/sobjects/DataTier
    method: GET
    data_selector: records
- name: programmability
  endpoint:
    path: /services/data/vXX.X/sobjects/Programmability
    method: GET
    data_selector: records
- name: presentation
  endpoint:
    path: /services/data/vXX.X/sobjects/Presentation
    method: GET
    data_selector: records
- name: permissions_security_model
  endpoint:
    path: /services/data/vXX.X/sobjects/PermissionsSecurityModel
    method: GET
    data_selector: records
- name: other
  endpoint:
    path: /services/data/vXX.X/sobjects/Other
    method: GET
    data_selector: records
- name: flow_changes
  endpoint:
    path: /api/v1/flow_changes
    method: GET
    data_selector: changes
    params: {}
- name: Salesforce organization
  endpoint:
    path: /compare-and-deploy
    method: GET
    data_selector: metadata
    params: {}
- name: source control
  endpoint:
    path: /compare-and-deploy
    method: GET
    data_selector: metadata
    params: {}
- name: local folder
  endpoint:
    path: /compare-and-deploy
    method: GET
    data_selector: metadata
    params: {}
- name: listMetadata
  endpoint:
    path: /services/metadata/vXX.X/listMetadata
    method: GET
    data_selector: components
    params: {}
- name: Custom object
  endpoint:
    path: /services/data/vXX.X/sobjects/CustomObject
    method: GET
    data_selector: records
    params: {}
- name: Custom object
  endpoint:
    path: /services/data/vXX.X/sobjects/CustomObject
    method: GET
    data_selector: records
    params: {}
- name: Quick Action
  endpoint:
    path: /services/data/vXX.X/sobjects/QuickAction
    method: GET
    data_selector: records
    params: {}
- name: Compact Layout Assignments
  endpoint:
    path: /api/compact-layout-assignments
    method: GET
    data_selector: records
    params: {}
- name: Experience bundle
  endpoint:
    path: /services/data/vXX.X/ExperienceBundle
    method: GET
    data_selector: records
    params: {}
- name: Network
  endpoint:
    path: /services/data/vXX.X/Network
    method: GET
    data_selector: records
    params: {}
- name: Custom site
  endpoint:
    path: /services/data/vXX.X/CustomSite
    method: GET
    data_selector: records
    params: {}
- name: Wave application
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Wave component
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Wave dashboard
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Wave dataflow
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Wave dataset
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Wave lens
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Wave recipe
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Wave XMD
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Email Alerts
  endpoint:
    path: /services/data/vXX.X/sobjects/WorkflowAlert
    method: GET
    data_selector: records
    params: {}
- name: expression_set
  endpoint:
    path: /expression_sets
    method: GET
    data_selector: records
    params: {}
- name: CustomObject
  endpoint:
    path: /services/data/vXX.X/sobjects/CustomObject
    method: GET
    data_selector: records
    params: {}
- name: CustomField
  endpoint:
    path: /services/data/vXX.X/sobjects/CustomField
    method: GET
    data_selector: records
    params: {}
- name: GlobalAction
  endpoint:
    path: /services/data/vXX.X/sobjects/GlobalAction
    method: GET
    data_selector: records
    params: {}
- name: knowledge__kav
  endpoint:
    path: /services/data/vXX.X/sobjects/Knowledge__kav
    method: GET
    data_selector: records
- name: knowledge_article
  endpoint:
    path: /services/data/vXX.X/sobjects/KnowledgeArticle
    method: GET
    data_selector: records
    params: {}
- name: Custom Field
  endpoint:
    path: /services/custom/CustomField
    method: POST
    data_selector: records
- name: Field Level Security
  endpoint:
    path: /services/custom/FieldLevelSecurity
    method: POST
    data_selector: records
- name: Custom application
  endpoint:
    path: /services/data/vXX.X/sobjects/CustomApplication
    method: GET
- name: Profile
  endpoint:
    path: /services/data/vXX.X/sobjects/Profile
    method: GET
- name: Permission set
  endpoint:
    path: /services/data/vXX.X/sobjects/PermissionSet
    method: POST
    data_selector: records
- name: Permission set assignments
  endpoint:
    path: /services/data/vXX.X/sobjects/PermissionSetAssignment
    method: POST
    data_selector: records
- name: Standard value set
  endpoint:
    path: /services/data/vXX.X/sobjects/StandardValueSet
    method: GET
    data_selector: records
    params: {}
- name: Settings
  endpoint:
    path: /services/data/vXX.X/sobjects/Settings
    method: GET
    data_selector: records
    params: {}
- name: Custom object
  endpoint:
    path: /services/data/vXX.X/sobjects/CustomObject
    method: GET
    data_selector: records
    params: {}
- name: Custom object translation
  endpoint:
    path: /services/data/vXX.X/sobjects/CustomObjectTranslation
    method: GET
    data_selector: records
    params: {}
- name: Public Group
  endpoint:
    path: /services/data/v62.0/metadata/Group
    method: GET
    data_selector: records
- name: permission_set
  endpoint:
    path: /services/data/vXX.X/PermissionSet
    method: GET
    data_selector: records
- name: GiftTransaction
  endpoint:
    path: /services/data/v59.0/sobjects/GiftTransaction
    method: GET
    data_selector: records
- name: GiftCommitment
  endpoint:
    path: /services/data/v59.0/sobjects/GiftCommitment
    method: GET
    data_selector: records
- name: Custom Object
  endpoint:
    path: /services/data/vXX.X/sobjects/CustomObject
    method: GET
    data_selector: records
- name: Platform event subscriber config
  endpoint:
    path: /services/data/vXX.X/sobjects/PlatformEventSubscriberConfig
    method: GET
    data_selector: records
- name: Platform event channel member
  endpoint:
    path: /services/data/vXX.X/sobjects/PlatformEventChannelMember
    method: GET
    data_selector: records
- name: Platform event channel
  endpoint:
    path: /services/data/vXX.X/sobjects/PlatformEventChannel
    method: GET
    data_selector: records
- name: Event relay config
  endpoint:
    path: /services/data/vXX.X/sobjects/EventRelayConfig
    method: GET
    data_selector: records
- name: Flow
  endpoint:
    path: /services/data/vXX.X/sobjects/Flow
    method: GET
    data_selector: records
- name: Apex Trigger
  endpoint:
    path: /services/data/vXX.X/sobjects/ApexTrigger
    method: GET
    data_selector: records
- name: Apex class
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Apex component
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Apex page
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Apex trigger
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Custom object
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Global Value Set
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Profile
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Standard Value Set
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Account sharing rules
  endpoint:
    path: deprecated
    method: GET
- name: Analytic snapshot
  endpoint:
    path: ''
    method: GET
- name: Apex class
  endpoint:
    path: ''
    method: GET
- name: Apex component
  endpoint:
    path: ''
    method: GET
- name: Apex page
  endpoint:
    path: ''
    method: GET
- name: Apex test suite
  endpoint:
    path: ''
    method: GET
- name: Apex trigger
  endpoint:
    path: ''
    method: GET
- name: Apex menu
  endpoint:
    path: ''
    method: GET
- name: Approval process
  endpoint:
    path: ''
    method: GET
- name: Assignment rules
  endpoint:
    path: ''
    method: GET
- name: Auth. provider
  endpoint:
    path: ''
    method: GET
- name: Auto-response rules
  endpoint:
    path: ''
    method: GET
- name: Call center
  endpoint:
    path: ''
    method: GET
- name: Connected app
  endpoint:
    path: ''
    method: GET
- name: Custom application
  endpoint:
    path: ''
    method: GET
- name: Custom labels
  endpoint:
    path: ''
    method: GET
- name: Custom metadata
  endpoint:
    path: ''
    method: GET
- name: Custom object
  endpoint:
    path: ''
    method: GET
- name: Custom object translation
  endpoint:
    path: ''
    method: GET
- name: Custom permission
  endpoint:
    path: ''
    method: GET
- name: Data category group
  endpoint:
    path: ''
    method: GET
- name: Email template
  endpoint:
    path: ''
    method: GET
- name: External data source
  endpoint:
    path: ''
    method: GET
- name: Flow
  endpoint:
    path: ''
    method: GET
- name: Global Value Set
  endpoint:
    path: ''
    method: GET
- name: Group
  endpoint:
    path: ''
    method: GET
- name: Home page layout
  endpoint:
    path: ''
    method: GET
- name: Installed package
  endpoint:
    path: ''
    method: GET
- name: Layout
  endpoint:
    path: ''
    method: GET
- name: Letterhead
  endpoint:
    path: ''
    method: GET
- name: Lightning page
  endpoint:
    path: ''
    method: GET
- name: Matching rules
  endpoint:
    path: ''
    method: GET
- name: Permission Set
  endpoint:
    path: ''
    method: GET
- name: Profile
  endpoint:
    path: ''
    method: GET
- name: Queue
  endpoint:
    path: ''
    method: GET
- name: Role
  endpoint:
    path: ''
    method: GET
- name: SAML SSO config
  endpoint:
    path: ''
    method: GET
- name: Settings
  endpoint:
    path: ''
    method: GET
- name: Sharing rules
  endpoint:
    path: ''
    method: GET
- name: Standard Value Set
  endpoint:
    path: ''
    method: GET
- name: Translations
  endpoint:
    path: ''
    method: GET
- name: Workflow
  endpoint:
    path: ''
    method: GET
- name: Apex class
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Audience
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Aura component
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Branding Set
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Content asset
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Custom object
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Custom site
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Digital experience bundle
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Experience bundle
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Managed topics (Community)
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Navigation menu
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Network (Community)
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Network branding (Community branding)
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Sharing set
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Site.com
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Static resource
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Apex class
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Apex page
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Custom application
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Custom object
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Custom permission
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Custom tab
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: External data source
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Flow definition
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Layout
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Muting permission set
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Permission Set
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Permission Set Group
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Profile
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Profile Password Policy
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Profile Session Setting
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Custom Object
  endpoint:
    path: /api/v1/custom_objects
    method: GET
- name: Layout
  endpoint:
    path: /api/v1/layouts
    method: GET
- name: repository
  endpoint:
    path: /linked-service-connections
    method: GET
    data_selector: repositories
- name: data_backup_jobs
  endpoint:
    path: /data-backup-jobs
    method: GET
    data_selector: jobs
    params: {}
- name: backup_job
  endpoint:
    path: /backup_job
    method: GET
    data_selector: jobs
    params: {}
- name: Data backup jobs
  endpoint:
    path: /data-backup-jobs
    method: GET
    data_selector: jobs
- name: records_changed
  endpoint:
    path: /backup/records/changed
    method: GET
    data_selector: data
- name: metadata_history
  endpoint:
    path: /backup/metadata/history
    method: GET
    data_selector: data
- name: audit_history
  endpoint:
    path: /backup/audit/history
    method: GET
    data_selector: data
- name: backup_job
  endpoint:
    path: /data-backup-jobs
    method: GET
    data_selector: jobs
    params: {}
- name: data_backup_jobs
  endpoint:
    path: /data-backup-jobs
    method: GET
    data_selector: jobs
    params: {}
- name: backup_job
  endpoint:
    path: /data-backup-jobs
    method: GET
    data_selector: jobs
    params: {}
- name: Integration / Service user permissions
  endpoint:
    path: /permissions/integration_service_user
    method: GET
    data_selector: permissions
    params: {}
- name: ContentDocument
  endpoint:
    path: /services/data/vXX.X/sobjects/ContentDocument
    method: GET
    data_selector: records
    params: {}
- name: ContentVersion
  endpoint:
    path: /services/data/vXX.X/sobjects/ContentVersion
    method: GET
    data_selector: records
    params: {}
- name: ContentDocumentLink
  endpoint:
    path: /services/data/vXX.X/sobjects/ContentDocumentLink
    method: GET
    data_selector: records
    params: {}
- name: Custom_Metadata_Type
  endpoint:
    path: /services/data/vXX.X/sobjects/CustomMetadataType__mdt
    method: GET
    data_selector: records
    params: {}
- name: Knowledge__kav
  endpoint:
    path: /services/data/vXX.X/sobjects/Knowledge__kav
    method: GET
    data_selector: records
    params: {}
- name: AbcCustomArticleType__kav
  endpoint:
    path: /services/data/vXX.X/sobjects/AbcCustomArticleType__kav
    method: GET
    data_selector: records
    params: {}
- name: AWS Regions
  endpoint:
    path: /available-regions
    method: GET
    data_selector: regions
    params: {}
- name: data_problem_analyzer
  endpoint:
    path: /data/problem/analyzer
    method: GET
- name: standard_objects
  endpoint:
    path: /standard_objects
    method: GET
    data_selector: records
- name: custom_objects
  endpoint:
    path: /custom_objects
    method: GET
    data_selector: records
- name: attachments_files
  endpoint:
    path: /attachments_files
    method: GET
    data_selector: records
- name: permissions
  endpoint:
    path: /permissions
    method: GET
- name: problem_analyzers
  endpoint:
    path: /problem-analyzers
    method: GET
    data_selector: analyzers
- name: new_items_with_permissions
  endpoint:
    path: /new/items/permissions
    method: GET
    data_selector: permissions
    params: {}
- name: CustomSite
  endpoint:
    path: /services/data/vXX.X/sobjects/CustomSite
    method: GET
    data_selector: records
    params: {}
- name: Custom site
  endpoint:
    path: /custom_site
    method: GET
    data_selector: records
    params: {}
- name: Dashboard
  endpoint:
    path: /dashboard
    method: GET
    data_selector: records
    params: {}
- name: ReportFolder
  endpoint:
    path: /report_folder
    method: GET
    data_selector: records
    params: {}
- name: WorkflowAlert
  endpoint:
    path: /workflow_alert
    method: GET
    data_selector: records
    params: {}
- name: Queue
  endpoint:
    path: /queue
    method: GET
    data_selector: records
    params: {}
- name: Custom field
  endpoint:
    path: /custom_field
    method: GET
    data_selector: records
    params: {}
- name: Approval process
  endpoint:
    path: /approval_process
    method: GET
    data_selector: records
    params: {}
- name: data_deployment_history
  endpoint:
    path: /data-deployment-history
    method: GET
    data_selector: deployments
- name: previous_deployments
  endpoint:
    path: /previous-deployments
    method: GET
    data_selector: deployments
- name: Account
  endpoint:
    path: /services/data/deployments
    method: GET
    data_selector: records
    params: {}
- name: deployment_method
  endpoint:
    path: /deployment/methods
    method: GET
    data_selector: methods
    params: {}
- name: matching_records
  endpoint:
    path: /matching/records
    method: GET
    data_selector: matchingFields
    params: {}
- name: related_objects
  endpoint:
    path: /related/objects
    method: GET
    data_selector: relatedObjects
    params: {}
- name: Work Order
  endpoint:
    path: /services/data/vXX.X/sobjects/WorkOrder
    method: GET
    data_selector: records
    params: {}
- name: Asset
  endpoint:
    path: /services/data/vXX.X/sobjects/Asset
    method: GET
    data_selector: records
    params: {}
- name: Maintenance Plan
  endpoint:
    path: /services/data/vXX.X/sobjects/MaintenancePlan
    method: GET
    data_selector: records
    params: {}
- name: Maintenance Asset
  endpoint:
    path: /services/data/vXX.X/sobjects/MaintenanceAsset
    method: GET
    data_selector: records
    params: {}
- name: Asset Relationship
  endpoint:
    path: /services/data/vXX.X/sobjects/AssetRelationship
    method: GET
    data_selector: records
    params: {}
- name: Product Required
  endpoint:
    path: /services/data/vXX.X/sobjects/ProductRequired
    method: GET
    data_selector: records
    params: {}
- name: Skill Requirement
  endpoint:
    path: /services/data/vXX.X/sobjects/SkillRequirement
    method: GET
    data_selector: records
    params: {}
- name: Work Order Line Item
  endpoint:
    path: /services/data/vXX.X/sobjects/WorkOrderLineItem
    method: GET
    data_selector: records
    params: {}
- name: Product Item
  endpoint:
    path: /services/data/vXX.X/sobjects/ProductItem
    method: GET
    data_selector: records
    params: {}
- name: ContentDocument
  endpoint:
    path: /services/data/vXX.X/sobjects/ContentDocument
    method: GET
    data_selector: records
- name: ContentVersion
  endpoint:
    path: /services/data/vXX.X/sobjects/ContentVersion
    method: GET
    data_selector: records
- name: ContentDocumentLink
  endpoint:
    path: /services/data/vXX.X/sobjects/ContentDocumentLink
    method: GET
    data_selector: records
- name: Custom objects
  endpoint:
    path: /services/data/vXX.X/sobjects/CustomObject
    method: GET
    data_selector: records
    params: {}
- name: Attachment
  endpoint:
    path: /services/data/vXX.X/sobjects/Attachment
    method: GET
    data_selector: records
- name: Document
  endpoint:
    path: /services/data/vXX.X/sobjects/Document
    method: GET
- name: Document Folder
  endpoint:
    path: /services/data/vXX.X/sobjects/DocumentFolder
    method: GET
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params: {}
- name: opportunity
  endpoint:
    path: /opportunities
    method: GET
    data_selector: records
    params: {}
- name: case
  endpoint:
    path: /cases
    method: GET
    data_selector: records
    params: {}
- name: Opportunity
  endpoint:
    path: /services/data/vXX.X/sobjects/Opportunity
    method: GET
    data_selector: records
    params: {}
- name: OpportunityLineItem
  endpoint:
    path: /services/data/vXX.X/sobjects/OpportunityLineItem
    method: GET
    data_selector: records
    params: {}
- name: Account
  endpoint:
    path: /services/data/vXX.X/sobjects/Account
    method: GET
    data_selector: records
    params: {}
- name: Contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Case
  endpoint:
    path: /services/data/vXX.X/sobjects/Case
    method: GET
    data_selector: records
    params: {}
- name: CaseTeamRole
  endpoint:
    path: /services/data/vXX.X/sobjects/CaseTeamRole
    method: GET
    data_selector: records
    params: {}
- name: Case
  endpoint:
    path: /services/data/vXX.X/sobjects/Case
    method: GET
    data_selector: records
    params: {}
- name: SupportTier__c
  endpoint:
    path: /services/data/vXX.X/sobjects/SupportTier__c
    method: POST
    data_selector: records
- name: AuthorizedDiscountLevel__c
  endpoint:
    path: /services/data/vXX.X/sobjects/AuthorizedDiscountLevel__c
    method: POST
    data_selector: records
notes:
- You need any tier of Automation Platform license to use this feature.
- No HTTP body is required in the POST request for starting a CI job.
- One common reason for Backup's failing is after a sandbox refresh. This may mean
  you need to reauthorise your org.
- Uses OAuth2 — requires setup of connected app in Gearset
- If the `Unblock` button is greyed out, you may need to click `Install` for both
  Gearset Deploy and Gearset apps.
- We recommend connecting via O-Auth / Salesforce Authentication.
- Avoid Salesforce Sandbox login if you can
- We won't deploy to this org or read the metadata from it unless you separately add
  it as an org connection
- When Salesforce sandbox orgs are refreshed, your Salesforce user account is sometimes
  deleted and recreated
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Selecting a specific metadata type on the menu (left hand side) will show only that
  metadata type in the comparison grid.
- If you want to preview both New and Changed items at the same time, make sure you're
  viewing them in the All items tab.
- Gearset automatically breaks down profiles into their constituent metadata components.
- Standard Objects are classed as Custom Objects
- Eliminating the need for manual XML diff or change tracking documents.
- Profiles and Permissions work differently from most metadata types in the Salesforce
  Metadata API.
- Gearset suggestions takes a number of problem analyzer fixes and brings them into
  a new tab in the comparison screen.
- Saved comparisons represent the state of your source and target at the time of the
  original comparison - any changes made since then will not be shown in the saved
  snapshots.
- You can't create a validated package when deploying to a source control repository
  (e.g. GitHub, Bitbucket, etc)
- When a package is deployed, it is removed from the Validated packages page and added
  to your Deployment history page.
- Gearset validated packages expire 10 days after creation.
- Deploying a package outside of the 10 day validity window will mean tests will have
  to be re-run on deployment.
- To use this feature, a user needs either Deployment Teams or Enterprise license
  assigned.
- Managed packages are not included in the comparison filter by default.
- Although Gearset retrieves components across versions by default, these may fail
  to deploy if the versions are in conflict.
- Deployment history lists every deployment made via Compare and deploy.
- You can download a detailed PDF report for any successful deployment in your history.
- You can download a detailed PDF report for any successful deployment.
- For a full list of the metadata items deployed, you can download a CSV export of
  the deployment.
- Identify issues to start with and manage dependencies.
- Uses environment variables for deployment configurations.
- You must be the owner of an org connection to add or edit an environment variable
  with that connection as the target.
- You cannot create conflicting entries (i.e. variables that have the same target
  value to find in the same metadata type and item).
- You cannot modify XML tags within metadata using this feature, only the properties
  encompassed by the tags.
- This functionality is designed to enable you to quickly make bulk updates using
  Excel, Google Sheets, or other CSV handling software to manage the environment variable
  changes, and quickly allow you to setup or edit environment targets in the system.
- Requires setup of connected app in api
- You can only select the new view on any Lightning record pages.
- Default comparison includes Custom Objects, Profiles, Permissions, Apex code, etc.
- Gearset runs a listMetadata call to gather details about the components in your
  org
- This can occur when Salesforce does not return complete 'Changed on' or 'Changed
  by' information for certain metadata items via the API.
- The date range feature is only available with manual comparisons (run via Compare
  and deploy page), not CI jobs.
- Gearset relies on the 'Changed On' date from Salesforce being populated.
- Dependencies that were modified outside of your chosen date range won't typically
  be included.
- Some deletions may not appear.
- Custom object metadata is included in all the default (pre-defined) metadata filters.
- Without an index, the object isn't retrievable via the Metadata API.
- If you try to deploy CustomSite metadata from an org with a certificate defined
  into an org without the certificate, the deployment is expected to fail. You would
  first need to get the identical certificate in the target org.
- If you are deploying the Site.com (the binary blob that contains the site content)
  metadata, you may want to hit publish to see the changes in the front end UI.
- You need to include Profile and Custom object in your metadata filter before the
  comparison.
- You need to include Permission set in your metadata filter for permission sets.
- Compact layout assignments are stored in the `Custom object` metadata within the
  `RecordType` sub-component.
- Deploying communities can be challenging due to numerous moving parts needed for
  a successful deployment.
- Salesforce requires a complete Experience bundle for deployments made through the
  metadata API.
- Wave type metadata is required for the deployment of Einstein components
- Like Profiles, these pieces of metadata reference the wider structure of your org,
  so including referenced Custom objects will make your deployment more likely to
  succeed.
- Email Alerts are represented in the Metadata API as WorkflowAlert, which is a subcomponent
  of the Workflow metadata type.
- The EmailServicesFunction metadata type is not included in the Gearset Default comparison
  metadata filter.
- You cannot deploy a deletion of an Apex class that is referenced by EmailServicesFunction
  without removing the EmailServicesFunction too.
- 'Users have reported validation error when deploying Expression sets: ''We couldn''t
  find the parent record for the version <xxx>'''
- You cannot delete existing Field dependencies; this is due to a limitation of the
  Salesforce Metadata API.
- To deploy trackHistory with Gearset, select it on the CustomField and click Next
  and then Deploy Now.
- Validation may fail if history tracking is not enabled on the target org.
- By default, flows are deployed as inactive in a production environment.
- Global Actions are found under User Interface > Global Actions in Salesforce orgs.
- Due to a quirk in how Salesforce stores and retrieves rich text fields, you are
  not able to deploy knowledge articles that include pictures in the rich text field.
  Any text that is written after the first picture in the article will not be deployed.
- The article becomes a draft version automatically in the target the version number
  is not preserved
- Uses default metadata filter including Custom object, Profile and Permission set.
- Gearset is designed to suppress the resulting XML for fields with both readable
  and editable permissions set to false.
- Salesforce users are granted access to Custom Applications by profiles.
- If a Custom Application's profile assignment has changed, you can use Gearset to
  migrate the changes to another org or source control system.
- Data deployment requires the Permission set ID to find associated assignments.
- The API cannot delete picklist values, they just become inactive.
- It’s not possible to select individual lines of code within `Apex component` metadata
  type during a comparison.
- Flows are not currently supported by precision deployments in Gearset.
- Profiles are different to many other metadata types on the Metadata API.
- If a profile is completely new, it will always appear as a single item in your comparison
  results with a change type of New.
- Gearset should be able to retrieve Standard value sets on Financial Services Cloud
  orgs.
- You can use the Metadata API to edit existing states, countries, and territories
  in state and country/territory picklists. You can’t use the Metadata API to create
  or delete new states, countries, or territories.
- To edit the existing states and countries in a picklist, configure your state and
  country/territory picklists in your sandbox org.
- To deploy these changes you'd normally need to include in your filter Custom object
  and Custom object translation metadata types.
- Include managed packages option is set to All.
- Users assigned to a Public Group are treated as data, not metadata, and cannot be
  retrieved via the Metadata API.
- The record page itself has the Lightning page metadata type, and the Lightning app
  is a Custom application metadata type.
- If you want to deploy the assignments, simply deploy the Custom App!
- The name for the permission in both your orgs will be different to 'WMFA', as this
  is a custom name given to this permission in the Salesforce orgs used in this article.
- Both GiftCommitment and GiftTransaction objects have special access rules in Salesforce
  - they're only available for retrieval if the Fundraising Access license is enabled,
  and the Fundraising User system permission is assigned to users.
- Permissions should be assigned both in the source and target org if you're comparing
  two Salesforce orgs.
- No rollback mechanism exists for Anonymous Apex. Apex is a powerful tool, so please
  ensure that your code is correct to avoid adverse effects.
- Execute Anonymous Apex is only supported on the Deployment Teams and Enterprise
  tiers.
- The user doing the execution will need both the 'Author Apex' permission and the
  'API Enabled' permission.
- Allows specification of metadata types to include or exclude in comparisons.
- Uses Quick refresh to fetch recently changed metadata.
- Full refresh can be used when Salesforce does not update timestamps correctly.
- List of above metadata types, and references to articles in the right column were
  last updated on the 8th of May 2025.
- The On-demand comparison filter has no pre-selected metadata types.
- List of all the metadata types (291 in total) included in our default metadata filter.
- Currently this automatic inclusion will only run on comparisons utilizing the On-demand
  or 'Compared Types' filter, and not any named default or custom filters.
- Initial repository seed
- Initial deployment with Gearset.
- Log into your source org and add a new field to the Case object
- 'Set the field-level security to so it''s only visible to the Custom: Support Profile
  and System Administrator profiles'
- Leave the page layouts on their default values, and click Save
- Creating backup jobs is a feature reserved for Gearset team owners.
- If a backup job is created from a user-owned Salesforce org connection, then backup
  job creator is the sole owner of such backup job.
- If a backup job is created for a team-shared org connection added to Gearset, then
  every Team Owner on a Gearset team becomes the owner of that job.
- Once you're on 'Include data' page during backup job creation, it isn't possible
  to go back to the previous page to re-configure job details.
- By default, every new backup job is configured to use Gearset's recommended filter.
- Backup jobs can be run on demand by clicking 'Back up now'.
- When the job is running, the status changes to blue. When completed, it changes
  to green.
- By default, each backup run will contain your organisation's metadata, plus the
  data for Salesforce standard objects, your custom objects, and managed packages.
- Allows viewing and restoring deleted records.
- Metadata differences may not always be reported.
- Backup job will show 'Pending first run' status once set up.
- Jobs can be run on demand by clicking 'Back up now'.
- Salesforce allocates a daily API limit for each org across all platforms.
- By default, each Gearset team can have up to 2 standard backup jobs.
- If there is no data storage location displayed, then by default your data location
  is the EU.
- The Gearset EU data center is located in Ireland.
- The job will continue to belong to you and run as normal until the teammate you
  have sent the transfer to accepts the request, or until you cancel the transfer.
- By default, the backup job owner will always have full access to the backup job.
- All team owners on the Gearset team will have View and Delete permissions.
- Use a dedicated Integration or Service user following the principle of least-privileges.
- Assignment of additional Permissions to Users is most common via a Permission Set.
- Enabling Gearset PK chunking can make backup jobs significantly slower, so if it's
  not necessary it's better to not enable it.
- You must be a team owner to be able to see the Gearset PK chunking setting.
- Salesforce has a complex permission and settings model and some of the behavior
  can be unexpected.
- If restoring files, disable the Query non-vetoed files permission to avoid the INVALID_CROSS_REFERENCE_KEY
  error.
- By default, when restoring deleted records originally created many months ago, the
  Created Date and Last Modified Date on the restored records will be set to the date
  of the deployment.
- If the 'Create Audit Fields' permission is enabled in the target org, and the user
  performing the restore has this permission, then inserting the Created Date and
  Last Modified Date should be possible.
- Changes to Custom Metadata types will not be shown in the New/Changed/Deleted within
  your backup job.
- Manual metadata filtering is an advanced feature in Gearset which allows you to
  edit the metadata filter used on your backup job.
- Gearset does not recommend enabling this setting except for cases where you have
  been instructed to do so.
- The improper use of this feature can lead to incorrect configuration of your backup,
  which could result in objects not being backed up and failed restores.
- You'll need a Backup Starter, Teams or Enterprise license to use the Data Dashboard.
- The data updates once a week, so the impact of any data clean ups, archiving or
  storage increases won't be reflected immediately.
- BYOK feature is available only for customer on Backup Enterprise licenses.
- With BYOK, the key existence and maintenance will be solely your responsibility.
- You'll need a Backup Enterprise license to use this feature.
- Do not create a backup job until you have heard back from the team that everything
  is set up.
- BYOK is available only on Gearset's Enterprise license.
- Self-Service Encryption Key is automatically generated for all teams.
- Common errors can occur, such as incorrect permissions, missing data, or other issues.
- Gearset includes a data problem analyzer which will scan the restore/deployment
  plan to identify any problems.
- Archiving is offered as an Upgrade to Backup Enterprise licenses. Contrary to Deployment
  and Automation solutions, Archiving isn't quoted per Gearset user.
- Data from any child object in a master-detail relationship is backed up.
- Compound fields are reconstructed in any restore process.
- CVV fields are not saved to maintain compliance with security standards.
- Use of a dedicated ‘Integration' or 'Service’ user is advised.
- Assignment of additional permissions is most common via a permission set.
- To do this using the Salesforce Lighting Experience type 'Permission' into the Quick
  Find box and select 'Permission Sets'.
- Fill in the Label and API Name fields (e.g. 'ArchivingPermissions').
- This will bring you to an overview of the permission set, we want to scroll down
  and select 'System Permissions'.
- This will take you to a new page, press the 'Edit' button at the top left.
- Scroll down until you see 'Bulk Api Hard Delete' permission, enable it.
- Scroll down further and enable the 'Modify All Data' permission.
- Finally, we want to enable the 'Query All Files' permission which is an App Permission.
- 'If you run into a problem with assigning the permission set to the user and you
  get the following error: This permission set contains an object that requires a
  license. Before continuing, assign the user to the related permission set license.'
- You will need to define the licence for the permission set when you create it -
  for example setting the required licence type as Salesforce for a standard licence.
- Other similar issues with permission set assignments can happen if you are not assigned
  the full Permission Set Licence Assignments for a particular managed package to
  your user - for example your archiving user does not have a CPQ Permission Set Licence
  Assignment. You will need to fix this by Edit Assignments in the User section.
- 'Archiving limitations during the trial period: You will be unable to select production
  orgs during an archive trial. This limitation is removed once the feature is purchased.'
- If the proper permissions aren't detected, you'll see a notice prompting you to
  log in to the selected org and enable the necessary permissions to proceed.
- 'In the Field permissions section, Gearset will check for Read permissions within
  the org. If it detects that they are missing, you''ll be presented with two options:
  Create a permission set (Recommended) or Keep permissions the same.'
- Preview feature allows users to verify that the correct records are being archived.
- Users can add more filters to their policy if needed.
- Daily API call usage limit can be adjusted.
- Retention policy can be set to automatically delete records older than a selected
  amount of years.
- Problem Analyzers in Gearset are available on any active license.
- Gearset scans for a large number of these kinds of dependencies for the most commonly
  deployed components.
- As of Summer '18 (v43 of the metadata API), Salesforce requires the activateRSS
  value to be defined when adding or editing Installed Packages.
- Validation or deployment to Salesforce will fail unless you have defined activateRSS
  to be true or false.
- Connected apps must have a unique consumerKey
- Once set, this value is not writable
- Automatically set visibility to false for all the record types when the object doesn't
  have a default one.
- If you do not set a default or set all visibility to false, validating or deploying
  to Salesforce will fail.
- Gearset removes managed fields on standard objects from your deployment package
  to ensure the success of your deployment.
- Automatically remove references to the objects which are not in the target when
  deploying Profile or Permission sets.
- It isn't possible to remove a Workflow Action via the Salesforce metadata API, although
  new Workflow Actions can be deployed.
- Automatically create a blank value for the queueRoutingConfig element when you want
  to remove the configured routing from a queue
- Removing the entire element will result in a successful deployment, in the sense
  that Salesforce won't return an error. However, the desired change — removal of
  the linked queue routing config — will not have been registered by Salesforce.
- If the CustomSite already exists in the target, Gearset will swap the siteAdmin
  for the user already specified in the target org.
- If your CustomSite is completely new, Gearset will swap the siteAdmin for the user
  that was used to connect the target org to Gearset.
- Some WorkflowOutboundMessages have different values for endpoint URL in source and
  target.
- Enabling this problem analyzer will ensure that this value within your target is
  maintained.
- Usernames are unique to each org, therefore it isn't possible to deploy referenced
  user from a source to target's existing item that has new or changed user in the
  target.
- Uses OAuth2 with refresh token — requires setup of connected app in Gearset
- It is important that refreshing and masking records is completed with the least
  disruption to your development team.
- Masking unnecessary data will extend the timeframe, therefore it is important to
  choose just the fields needed.
- If you are masking tens of millions of records, please reach out to Gearset customer
  support.
- Choose whether you'd like the data deployment to continue if it hits an error deploying
  a record.
- If Create Audit Fields permission is enabled in the target org, users can fill audit
  fields on record creation only through API tools. Future edits (updates) cannot
  be made.
- Masking data in-place in Gearset is a quick and simple process.
- Team-owned orgs cannot be used for in-place masking.
- Deployments can be successful even if no records were deployed.
- Deployments that were set to continue on error will also be marked as successful
  if all steps were completed.
- We cannot control the record ID of a new record being created in a target org to
  match a source org.
- It is not best practice to hard code static IDs in tests or workflows. It's better
  to use the Name field or other unique fields.
- Every record, regardless of entity type, has a globally unique identification value
  in its ID field which is generated at the time of record creation.
- Data deployment templates bring the usual benefits of automating a process.
- It's harder to make mistakes through human error.
- It saves you time by letting you specify the configuration once and re-use it.
- It gives you confidence that the deployment will be the same every time.
- Gearset allows you to temporarily disable validation rules, duplicate rules, triggers,
  and flows before starting your data deployment.
- This will not delete any of the historical field values. It will only disable the
  creation of these values when masking and deploying the data.
- Data masking only masks existing data and does not create data for blank/empty fields.
- Create a formula field to filter accounts
- Filter values can be set to true for deployment
- New User records will never be deployed by Gearset.
- A Maintenance Plan might have active the option to auto-generate Work Orders.
- Auto-Generate Service Appointment may create automatically Service Appointment records.
- A Maintenance Plan might have active the option to auto-generate Work Orders. This
  option might cause duplicate work orders (one from the deployment, and one auto-generated),
  but it can be deactivated.
- If Auto-Generate Service Appointment is selected for the Work Type associated with
  the Maintenance Plan, new Work Orders might also create automatically Service Appointment
  records.
- It's possible to configure the deployment for one object at the time (for example
  all files attached to Account)
- The deployment tool only deploys the latest version of the file
- Attachments represent a file that a user has uploaded and attached to a parent object.
- Attachments have been deprecated in Lightning Experience.
- Documents aren’t available in Lightning Experience. To use Documents in Lightning
  Experience, export them in your weekly export or using Data Loader. Then upload
  them into Lightning Experience as Salesforce Files.
- Deployment of Documents is supported through both the data deployment route or through
  metadata compare and deploy.
- Uses OAuth2 with refresh token — requires setup of connected app in Gearset.
- Dependencies must be explicitly selected for deployment.
- Clone with related is not available on custom objects as Salesforce has not added
  support for this as of the time of writing.
- To ensure good performance from your repo, we recommend that the size of Revenue
  Cloud configuration in your repository should not exceed 1GB. Typically, this would
  correspond to an upper limit of approx. 1 million pricebook entries, or around 20,000-30,000
  products.
- Validations will be run on metadata in a PR, but not on the Revenue Cloud config
  data. If the metadata config passes validation, the PR may be merged and deployment
  started, but if there are issues with the Revenue Cloud deployment, this may cause
  the deployment to be only partially successful.
- If you add a new field to a single Revenue Cloud Product then Gearset will add this
  new field to all of your Revenue Cloud Products in order to keep them in sync.
errors:
- '200 OK: Successful request'
- '401 Unauthorized: Recheck token validity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- 'LIMIT_EXCEEDED: Try deploying again.'
- 'UNKNOWN_EXCEPTION: An unexpected error occurred. Please include this ErrorId if
  you contact support'
- 'In field: siteAdmin - no User named matt-communities-source@gearset.com found'
- An Apex Class must be specified when creating an Email Service.
- 'This InboundEmailHandler class is in use. : Apex Class'
- 'Validation error: ''We couldn''t find the parent record for the version <xxx>'''
- 'The entity: Account does not have history tracking enabled.'
- You can’t deploy new ISO codes or update ISO code values using any API.
- 'LIMIT_EXCEEDED: Try deploying again. Your deployment exceeded its maximum retry
  limit.'
- Backup jobs may fail if set up with a team-shared org connection without minimum
  Backup Teams or Deployment Teams licenses purchased.
- query timeout exceptions
- permissions issues exacerbating timeout issues
- 'INVALID_CROSS_REFERENCE_KEY: Disable the Query non-vetoed files permission during
  restoration.'
- No changes are picked up in the backup job.
- Problems requiring manual intervention include permission issues or missing data
  that is not in backup/source org.
- 'REQUIRED_FIELD_MISSING: Required fields are missing <xxx>'
- Data in fields without the Read permission may be irreversibly deleted
- 'Missing permissions: If the proper permissions aren''t detected, you''ll see a
  notice prompting you to log in to the selected org and enable the necessary permissions
  to proceed.'
- 'Cannot modify managed object: entity=StaticResource, component=0814J000000pP6E,
  field=Body, state=install.'
- Cannot remove WorkflowRuleActions
- 'In field: siteAdmin - no User named communities-source@example.com found.'
- Cannot find a user that matches any of the following usernames
- 'CANNOT_UPDATE CONVERTED_LEAD: Permission missing. Assign the permission for editing
  converted leads to the user.'
- 'UNABLE_TO_LOCK ROW: A user or process has locked the record we are trying to mask.
  Run in-place masking when other users aren''t accessing the sandbox.'
- 'Timeout: The Salesforce org is under heavy load. Run in-place masking when other
  users and processes aren''t accessing the sandbox.'
- 'FIELD_CUSTOM_VALIDATION_EXCEPTION: Active validation rules in the target org are
  a frequent cause of errors in data deployments.'
- 'CANNOT_EXECUTE_FLOW_TRIGGER: We can''t save this record because the process failed.'
- 'System.LimitException: Apex CPU time limit exceeded'
- 'INVALID_CROSS_REFERENCE_KEY: Record Type ID'
- Duplicate work orders may be created if auto-generation is active.
- Auto-Generate Service Appointment may create duplicate records.
- Documents in a user's private library must always be owned by that user
- Required field is missing [ParentId]
- 'Required fields are missing: [FolderId]'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://app.gearset.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
