resources:
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    params:
      limit: '1'
- name: users
  endpoint:
    path: /users
    method: GET
    params:
      limit: '5'
      usernames: frank,fred
- name: timesheets_deleted
  endpoint:
    path: /timesheets/deleted
    method: GET
    data_selector: records
- name: custom_fields
  endpoint:
    path: /customfields
    method: GET
    data_selector: records
- name: timesheets
  endpoint:
    path: /timesheets
    method: GET
    params:
      start_date: 12-05-2017
      modified_since: 12-05-2018
- name: current_user
  endpoint:
    path: /current_user
    method: GET
- name: jobcode_assignments
  endpoint:
    path: /api/v1/jobcode_assignments
    method: DELETE
    params:
      ids: 56788,58078
- name: customfields
  endpoint:
    path: /api/v1/customfields
    method: GET
    data_selector: results.customfields
- name: custom_field_item
  endpoint:
    path: /customfielditems
    method: GET
    data_selector: records
    params: {}
- name: customfields
  endpoint:
    path: /customfields
    method: POST
    data_selector: results.customfields
    params: {}
- name: customfielditems
  endpoint:
    path: /
    method: GET
    params: {}
- name: customfielditems
  endpoint:
    path: /customfielditems
    method: GET
    data_selector: results.customfielditems
    params:
      customfield_id: '195923'
      name: '*ate'
- name: customfielditems
  endpoint:
    path: /customfielditems
    method: POST
    data_selector: results.customfielditems
    params: {}
- name: customfielditems
  endpoint:
    path: /customfielditems
    method: PUT
    data_selector: results.customfielditems
    params: {}
- name: customfielditem_filters
  endpoint:
    path: /customfielditem_filters
    method: GET
    data_selector: results.customfielditem_filters
    params:
      modified_since: '2018-07-17T00:00:00-00:00'
- name: customfielditemfilters
  endpoint:
    path: /customfielditemfilters
    method: POST
    data_selector: results.customfielditems
    params: {}
- name: customfielditem_user_filters
  endpoint:
    path: /customfielditem_user_filters
    method: GET
    data_selector: results.customfielditem_user_filters
    params:
      modified_since: '2018-07-17T00:00:00-00:00'
- name: customfielditem_jobcode_filters
  endpoint:
    path: /customfielditem_jobcode_filters
    method: GET
    data_selector: results.customfielditem_jobcode_filters
    params:
      modified_since: '2018-07-17T00:00:00-00:00'
- name: effective_settings
  endpoint:
    path: /effective_settings
    method: GET
    data_selector: results.effective_settings
    params: {}
- name: estimate_items
  endpoint:
    path: /estimate_items
    method: GET
    data_selector: results.estimate_items
- name: estimate_items
  endpoint:
    path: /estimate_items
    method: POST
    data_selector: results.estimate_items
    params: {}
- name: estimate_items_update
  endpoint:
    path: /estimate_items
    method: PUT
    data_selector: results.estimate_items
    params: {}
- name: estimates
  endpoint:
    path: /estimates
    method: GET
    data_selector: results.estimates
    params: {}
- name: estimates
  endpoint:
    path: /estimates
    method: POST
    data_selector: results.estimates
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: POST
    data_selector: results.estimates
    params: {}
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: results.files
    params: {}
- name: upload_files
  endpoint:
    path: /files
    method: POST
    data_selector: results.files
    params: {}
- name: files
  endpoint:
    path: /files
    method: PUT
    data_selector: results.files
    params: {}
- name: download_file
  endpoint:
    path: /files/raw
    method: GET
    data_selector: Content-Type
    params: {}
- name: geofence_configs
  endpoint:
    path: /geofence_configs
    method: GET
- name: geolocations
  endpoint:
    path: /geolocations
    method: GET
    params:
      modified_since: '2018-08-01T12:00:00-06:00'
- name: timesheets_deleted
  endpoint:
    path: /files
    method: DELETE
    data_selector: results.files
    params: {}
- name: geofence_config
  endpoint:
    path: /geofence
    method: GET
    data_selector: results
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: results.groups
- name: geolocations
  endpoint:
    path: /api/v1/geolocations
    method: POST
    data_selector: results.geolocations
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: PUT
    data_selector: results
    params: {}
- name: groups
  endpoint:
    path: /
    method: POST
    data_selector: results.groups
    params: {}
- name: update_groups
  endpoint:
    path: /
    method: PUT
    data_selector: results.groups
    params: {}
- name: invitations
  endpoint:
    path: /invitations
    method: POST
    data_selector: results.invites
    params: {}
- name: jobcodes
  endpoint:
    path: /jobcodes
    method: GET
    data_selector: results.jobcodes
    params:
      ids: '11377903'
      customfields: 'true'
- name: jobcodes
  endpoint:
    path: /api/v1/jobcodes
    method: GET
    data_selector: results.jobcodes
- name: jobcode_assignments
  endpoint:
    path: /api/v1/jobcodes
    method: PUT
    data_selector: results.jobcodes
    params: {}
- name: general
  endpoint:
    settings:
      calculate_overtime: '1'
      clockout_override: 1
      clockout_override_hours: 10
      clockout_override_notify_admin: 1
      clockout_override_notify_mgrs: 0
      daily_doubletime: '0'
      daily_overtime: '0'
      daily_regular_hours: 8
      date_locale: us
      emp_panel: 1
      emp_panel_email: '0'
      emp_panel_passwd: '0'
      emp_panel_tz: '0'
      employee_pto_entry: 0
      enable_timesheet_notes: '1'
      hide_working_time: '0'
      jc_label: Job
      lunch_deduct: 0
      lunch_length: 1
      lunch_threshold: 9
      max_customfielditems: '-1'
      max_jobcodes: '-1'
      parent_clockin_display: 0
      payroll_end_date: '2018-09-28'
      payroll_first_end_day: '1'
      payroll_last_end_day: '16'
      payroll_month_end_day: '1'
      payroll_type: biweekly
      pto_entry: 1
      pto_overtime: 0
      simple_clockin: 0
      time_format: 12
      timecard_fields: JOBCODE,134913,143369,143377
      timeclock_label: Time Clock
      timesheet_edit_notes_for_all_users: 0
      timesheet_notes_notify_admin: 0
      timesheet_notes_notify_mgrs: 0
      timesheet_notes_required: 0
      tz: America/Denver
      week_start: 0
      weekly_regular_hours: '40'
    last_modified: '2019-02-11T17:45:18+00:00'
- name: alerts
  endpoint:
    settings:
      installed: 0
    last_modified: '2001-01-01T12:00:00+00:00'
- name: approvals
  endpoint:
    settings:
      installed: '1'
    last_modified: '2019-01-25T20:53:52+00:00'
- name: breaks
  endpoint:
    settings:
      hide_pre_clockout_option: 0
    last_modified: '2019-01-25T20:53:52+00:00'
- name: dcaa
  endpoint:
    settings:
      installed: 0
    last_modified: '2001-01-01T12:00:00+00:00'
- name: dialin
  endpoint:
    settings:
      installed: 0
    last_modified: '2001-01-01T12:00:00+00:00'
- name: files
  endpoint:
    settings:
      installed: '1'
      files_addon_app_discovery_notification: '1'
    last_modified: '2019-01-25T20:53:52+00:00'
- name: invoicing
  endpoint:
    settings:
      installed: 0
    last_modified: '2001-01-01T12:00:00+00:00'
- name: location_aware
  endpoint:
    settings:
      installed: 1
      show_location: '1'
    last_modified: '2019-01-25T20:53:52+00:00'
- name: mobile_app_integrations
  endpoint:
    settings:
      installed: 1
      apps:
        expensify:
          triggers:
            TSMTriggerButton:
              id: 553
              active: true
              jobcode_ids:
              - 0
              android_playstore_uri: org.me.mobiexpensifyg
              android_call_scheme: http://mobile.expensify.com/SmartScan
              iphone_appstore_url: https://itunes.apple.com/us/app/expensify-expense-reports/id471713959
              iphone_call_scheme: http://mobile.expensify.com
              call_url_host: SmartScan
              call_uri_format: tag=%JOBCODE_NAME%&billable=%JOBCODE_BILLABLE%&email=%EMAIL%&callbackURL=%TSHEETS_RETURN_URL%
              callback_uri_format: ''
    last_modified: '2019-01-25T20:53:52+00:00'
- name: mobile_app_settings
  endpoint:
    settings:
      installed: '1'
      location_tracking: 'off'
      mandatory_location_services: '0'
    last_modified: '2019-02-09T18:39:20+00:00'
- name: reminders
  endpoint:
    settings:
      installed: 1
    last_modified: '2019-01-25T20:53:52+00:00'
- name: projects
  endpoint:
    settings:
      installed: 0
    last_modified: '2001-01-01T12:00:00+00:00'
- name: quickbooks
  endpoint:
    settings:
      installed: '1'
      connector: qbia_online
      connector_type: payroll_single_sku
      two_way_sync_enabled_for_user: 0
    last_modified: '2019-01-25T20:53:52+00:00'
- name: restapi
  endpoint:
    settings:
      installed: '1'
    last_modified: '2019-01-25T20:53:52+00:00'
- name: rounding
  endpoint:
    settings:
      installed: 0
    last_modified: '2001-01-01T12:00:00+00:00'
- name: schedule
  endpoint:
    settings:
      installed: '1'
      business_hours_end: '17:00:00'
      business_hours_start: 08:00:00
      drafted_first_schedule_event_occurred: '1'
      manage_schedule_permission: company
      published_first_schedule_event_occurred: '1'
      trial_expiration_date: '2018-10-17'
      view_schedule_permission: company
      learning_step: '7'
      employee_view: company
      manager_view: company
    last_modified: '2019-02-09T18:03:55+00:00'
- name: sms
  endpoint:
    settings:
      installed: 0
    last_modified: '2001-01-01T12:00:00+00:00'
- name: sounds
  endpoint:
    settings:
      installed: 0
    last_modified: '2001-01-01T12:00:00+00:00'
- name: customfields
  endpoint:
    settings:
      maximum_allowed_timesheet_custom_fields: 6
      installed: '1'
    last_modified: '2019-02-10T20:34:10+00:00'
- name: time_entry
  endpoint:
    settings:
      installed: 1
      time_entry_method: timecard
      mtc_format_time_display: hhmm
      time_entry: 0
      timecard: 1
      weekly_timecard: 1
      timecard_daily: 0
      timesheet_edit: 0
      timesheet_map: 1
      pto_entry: 1
      timesheet_list_date_range_selection: month
      timesheet_list_show_days_with_no_time: 0
      timesheet_list_wrap_text: 0
      timesheet_list_column_selection: time,job,location,kiosk,attachments,notes
      timesheet_list_bottomless_scroll: 1
      mtc_combine_regular_timesheets: '0'
    last_modified: '2019-01-25T20:53:52+00:00'
- name: toodledo
  endpoint:
    settings:
      installed: 0
    last_modified: '2001-01-01T12:00:00+00:00'
- name: twitter
  endpoint:
    settings:
      installed: 0
    last_modified: '2001-01-01T12:00:00+00:00'
- name: xero
  endpoint:
    settings:
      installed: 0
    last_modified: '2001-01-01T12:00:00+00:00'
- name: zenpayroll
  endpoint:
    settings:
      installed: 0
    last_modified: '2001-01-01T12:00:00+00:00'
- name: jobcodes
  endpoint:
    path: /api/v1/jobcodes
    method: POST
    data_selector: results.jobcodes
    params: {}
- name: jobcode_assignments
  endpoint:
    path: /jobcode_assignments
    method: GET
    data_selector: results.jobcode_assignments
    params:
      user_ids: '1242515'
- name: create_jobcode_assignments
  endpoint:
    path: /
    method: POST
    data_selector: results.jobcode_assignments
    params: {}
- name: delete_jobcode_assignments
  endpoint:
    path: /
    method: DELETE
    data_selector: results.jobcode_assignments
    params:
      ids: 56788052,58078296,,1234
- name: last_modified_timestamps
  endpoint:
    path: /last_modified_timestamps
    method: GET
    data_selector: results.last_modified_timestamps
    params: {}
- name: timesheets_deleted
  endpoint:
    path: /timesheets_deleted
    method: GET
    data_selector: results.last_modified_timestamps
    params: {}
- name: location
  endpoint:
    path: /locations
    method: GET
    data_selector: locations
    params: {}
- name: locations
  endpoint:
    path: /locations
    method: GET
    data_selector: results.locations
    params: {}
- name: locations
  endpoint:
    path: /
    method: GET
    data_selector: response
    params: {}
- name: locations
  endpoint:
    path: /locations
    method: PUT
- name: locations
  endpoint:
    path: /api/v1/locations
    method: POST
    data_selector: results.locations
    params: {}
- name: locations_map
  endpoint:
    path: /locations_map
    method: GET
    data_selector: results.locations_map
- name: managed_clients
  endpoint:
    path: /managed_clients
    method: GET
    data_selector: results.managed_clients
- name: notifications
  endpoint:
    path: /notifications
    method: GET
    data_selector: results.notifications
    params:
      user_id: '1242515'
- name: managed_clients
  endpoint:
    path: /managed_clients
    method: GET
    data_selector: results.managed_clients
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: results.notifications
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: results.projects
- name: projects
  endpoint:
    path: /projects
    method: POST
    data_selector: results.projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: PUT
    data_selector: results.projects
    params: {}
- name: users
  endpoint:
    path: /users
    method: PUT
    data_selector: results.users
    params: {}
- name: project_activity
  endpoint:
    path: /project_activities
    method: GET
    data_selector: results.project_activities
    params:
      project_id: '1234'
- name: project_activity_read_times
  endpoint:
    path: /project_activity_read_times
    method: GET
    data_selector: results.project_activity_read_times
- name: project_activity_replies
  endpoint:
    path: /project_activity_replies
    method: GET
    data_selector: results.project_activity_replies
    params:
      project_activity_id: '40001'
- name: project_activity_read_times
  endpoint:
    path: /api/v1/project_activity_read_times
    method: POST
    data_selector: results.project_activity_read_times
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: PUT
    data_selector: results
    params: {}
- name: project_activity_replies
  endpoint:
    path: /api/v1/project_activity_replies
    method: POST
    data_selector: results.project_activity_replies
    params: {}
- name: project_notes
  endpoint:
    path: /project_notes
    method: GET
    params: {}
- name: project_activity_replies
  endpoint:
    path: /project_activity_replies
    method: POST
    data_selector: results.project_activity_replies
    params: {}
- name: project_notes
  endpoint:
    path: /api/v1/project_notes
    method: GET
    params:
      user_ids: 21,673,4893
      project_id: '1234'
- name: reminders
  endpoint:
    path: /api/v1/users
    method: PUT
    data_selector: data
- name: project_notes
  endpoint:
    path: /project_notes
    method: POST
    data_selector: results.project_notes
    params: {}
- name: project_notes
  endpoint:
    path: /project_notes
    method: POST
    data_selector: results.project_notes
    params: {}
- name: reminders
  endpoint:
    path: /reminders
    method: GET
    data_selector: results.reminders
    params:
      user_ids: 0,37
      reminder_types: clock-in,clock-out
- name: create_reminders
  endpoint:
    path: /reminders
    method: POST
    data_selector: results.reminders
    params: {}
- name: update_reminders
  endpoint:
    path: /reminders
    method: PUT
    data_selector: results.reminders
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: PUT
- name: current_totals_report
  endpoint:
    path: /api/v1/reports/current_totals
    method: GET
    data_selector: results.current_totals
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params:
      limit: '5'
- name: authorize
  endpoint:
    path: /authorize
    method: GET
    params:
      response_type: code
      client_id: MYAPPCLIENTID
      redirect_uri: https://somedomain.com/callback
      state: MYSTATE
- name: grant
  endpoint:
    path: /grant
    method: POST
    params:
      grant_type: authorization_code
      client_id: MYAPPCLIENTID
      client_secret: MYAPPSECRET
      code: bbcaef03191517dfb60d0305bfea38ea995af1az
      redirect_uri: https%3A%2F%2Fsomedomain.com%2Fcallback
- name: users
  endpoint:
    path: /users
    method: GET
    params:
      limit: '1'
- name: users
  endpoint:
    path: /users
    method: POST
- name: jobcode_assignments
  endpoint:
    path: /jobcode_assignments
    method: DELETE
- name: timesheets
  endpoint:
    path: /timesheets
    method: GET
- name: customfields
  endpoint:
    path: /api/v1/customfields
    method: GET
    params: {}
- name: timesheets
  endpoint:
    path: /timesheets
    method: GET
    data_selector: results.timesheets
    params:
      start_date: 12-05-2017
      modified_since: 12-05-2018
- name: current_user
  endpoint:
    path: /current_user
    method: GET
    data_selector: results.users
- name: customfields
  endpoint:
    path: /customfields
    method: GET
    data_selector: results.customfields
- name: customfields
  endpoint:
    path: /customfields
    method: POST
    data_selector: results.customfields
    params: {}
- name: customfielditems
  endpoint:
    path: /customfielditems
    method: GET
    data_selector: results.customfielditems
    params: {}
- name: customfielditems
  endpoint:
    path: /customfielditems
    method: GET
    data_selector: records
    params: {}
- name: customfielditem
  endpoint:
    path: /customfielditems
    method: GET
    data_selector: results.customfielditems
    params:
      customfield_id: required
- name: customfielditem_filters
  endpoint:
    path: /api/v1/customfielditem_filters
    method: GET
    data_selector: results.customfielditem_filters
    params:
      modified_since: '2018-07-17T00:00:00-00:00'
- name: create_customfielditem_filters
  endpoint:
    path: /api/v1/customfielditemfilters
    method: POST
    data_selector: results.customfielditems
- name: customfielditem_user_filters
  endpoint:
    path: /api/v1/customfielditem_user_filters
    method: GET
    params:
      modified_since: '2018-07-17T00:00:00-00:00'
- name: effective_settings
  endpoint:
    path: /api/v1/effective_settings
    method: GET
    params:
      user_id: '1234'
- name: customfielditemfilters
  endpoint:
    path: /api/v1/customfielditemfilters
    method: POST
    data_selector: results.customfielditemfilters
    params: {}
- name: customfielditem_jobcode_filters
  endpoint:
    path: /api/v1/customfielditem_jobcode_filters
    method: GET
    data_selector: results.customfielditem_jobcode_filters
    params: {}
- name: customfielditem_user_filters
  endpoint:
    path: /api/v1/customfielditem_user_filters
    method: GET
    data_selector: results.customfielditem_user_filters
    params: {}
- name: effective_settings
  endpoint:
    path: /effective_settings
    method: GET
    params:
      user_id: '1234'
      modified_since: 2018-03-01T00:00:00-0600
- name: estimate_items
  endpoint:
    path: /estimate_items
    method: GET
- name: estimate_items
  endpoint:
    path: /estimate_items
    method: GET
    data_selector: results.estimate_items
    params: {}
- name: estimates
  endpoint:
    path: /estimates
    method: GET
    data_selector: results.estimates
    params: {}
- name: create_estimate
  endpoint:
    path: /estimates
    method: POST
    data_selector: results.estimates
    params: {}
- name: update_estimate
  endpoint:
    path: /estimates
    method: PUT
    data_selector: results.estimates
    params: {}
- name: estimates
  endpoint:
    path: /estimates
    method: PUT
    data_selector: results.estimates
    params: {}
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: results.files
    params: {}
- name: files
  endpoint:
    path: /api/v1/files
    method: POST
    data_selector: results.files
    params:
      limit: '200'
- name: files_raw
  endpoint:
    path: /api/v1/files/raw
    method: GET
    data_selector: results.files
    params: {}
- name: geolocations
  endpoint:
    path: /geolocations
    method: GET
    data_selector: results.geolocations
    params:
      modified_since: '2018-08-01T12:00:00-06:00'
- name: files_raw
  endpoint:
    path: /files/raw
    method: GET
    data_selector: ''
    params:
      id: '123828'
- name: files_delete
  endpoint:
    path: /files
    method: DELETE
    data_selector: ''
    params:
      ids: 129526,129524,13455,89999
- name: geofence_configs
  endpoint:
    path: /geofence_configs
    method: GET
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: results.groups
    params:
      limit: '200'
- name: jobcodes
  endpoint:
    path: /jobcodes
    method: GET
    data_selector: results.jobcodes
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: PUT
- name: invitations
  endpoint:
    path: /invitations
    method: POST
- name: jobcodes
  endpoint:
    path: /jobcodes
    method: GET
- name: jobcodes
  endpoint:
    path: /jobcodes
    method: GET
    data_selector: results.jobcodes
    params:
      ids: optional
      parent_ids: optional
      name: optional
      type: optional
      active: optional
      customfields: optional
      modified_before: optional
      modified_since: optional
      supplemental_data: optional
      limit: optional
      page: optional
- name: jobcodes
  endpoint:
    path: /jobcodes
    method: PUT
    data_selector: results.jobcodes
    params: {}
- name: jobcode_assignments
  endpoint:
    path: /jobcode_assignments
    method: GET
    data_selector: results.jobcodes
    params:
      user_ids: '1242515'
- name: jobcode_assignments
  endpoint:
    path: /jobcode_assignments
    method: GET
    data_selector: results.jobcode_assignments
    params:
      modified_since: 2018-03-01T00:00:00-0600
      limit: '10'
- name: jobcode_assignments
  endpoint:
    path: /jobcode_assignments
    method: DELETE
    params:
      ids: comma separated list of jobcode assignment ids
- name: last_modified_timestamps
  endpoint:
    path: /last_modified_timestamps
    method: GET
    params:
      endpoints: optional comma separated list of endpoints
- name: locations
  endpoint:
    path: /locations
    method: GET
    data_selector: records
    params: {}
- name: locations
  endpoint:
    path: /locations
    method: GET
    data_selector: results.locations
    params: {}
- name: locations
  endpoint:
    path: /locations
    method: PUT
    data_selector: results.locations
    params: {}
- name: locations_map
  endpoint:
    path: /locations_map
    method: GET
    data_selector: results.locations
    params: {}
- name: locations_map
  endpoint:
    path: /locations_map
    method: GET
    data_selector: results.locations_map
    params:
      modified_since: '2018-01-01T00:00:00-06:00'
- name: managed_clients
  endpoint:
    path: /managed_clients
    method: GET
    data_selector: results.managed_clients
- name: notifications
  endpoint:
    path: /notifications
    method: GET
    data_selector: results.notifications
    params:
      user_id: '1242515'
- name: notifications
  endpoint:
    path: /notifications
    method: DELETE
    params:
      ids: required
- name: projects
  endpoint:
    path: /projects
    method: GET
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: POST
    data_selector: results.projects
    params: {}
- name: project_activity
  endpoint:
    path: /project_activities
    method: GET
    params:
      project_id: '1234'
- name: project_activities
  endpoint:
    path: /project_activities
    method: GET
    data_selector: results.project_activities
    params:
      project_id: ''
      ids: ''
      activity_types: ''
      modified_before: ''
      modified_since: ''
      supplemental_data: ''
      limit: '200'
      page: '1'
      max_id: ''
- name: project_activity_read_times
  endpoint:
    path: /project_activity_read_times
    method: GET
    data_selector: results.project_activity_read_times
    params:
      ids: ''
- name: project_activity_replies
  endpoint:
    path: /project_activity_replies
    method: GET
    data_selector: results.project_activity_replies
    params:
      project_activity_id: project_activity_id
- name: project_activity_read_times
  endpoint:
    path: /project_activity_read_times
    method: POST
    data_selector: results.project_activity_read_times
    params:
      limit: 200
- name: project_activity_replies
  endpoint:
    path: /project_activity_replies
    method: GET
    data_selector: results
    params:
      project_activity_id: 40001
- name: project_notes
  endpoint:
    path: /project_notes
    method: GET
    params:
      project_id: '1234'
- name: project_activity_replies
  endpoint:
    path: /project_activity_replies
    method: POST
    data_selector: results.project_activity_replies
    params: {}
- name: project_notes
  endpoint:
    path: /project_notes
    method: GET
    data_selector: results.project_notes
    params: {}
- name: project_notes
  endpoint:
    path: /project_notes
    method: POST
    data_selector: results.project_notes
    params:
      project_id: required
      user_ids: optional
      active: optional
      modified_before: optional
      modified_since: optional
      supplemental_data: optional
      limit: optional
      page: optional
- name: project_notes
  endpoint:
    path: /project_notes
    method: POST
    data_selector: results.project_notes
    params: {}
- name: reminders
  endpoint:
    path: /reminders
    method: GET
    data_selector: results.reminders
    params:
      user_ids: 0,37
      reminder_types: clock-in,clock-out
- name: reminders
  endpoint:
    path: /api/v1/reminders
    method: GET
    params:
      user_ids: 0,37
      reminder_types: clock-in
      modified_since: '2018-07-15T19:32:00-06:00'
- name: reminders
  endpoint:
    path: /reminders
    method: PUT
    data_selector: results.reminders
    params: {}
- name: current_totals
  endpoint:
    path: /reports/current_totals
    method: POST
    data_selector: results.current_totals
    params: {}
- name: schedule_calendars
  endpoint:
    path: /schedule_calendars
    method: GET
    data_selector: results.schedule_calendars
- name: schedule_calendars
  endpoint:
    path: /schedule_calendars
    method: GET
    data_selector: results.schedule_calendars
- name: schedule_calendars
  endpoint:
    path: /schedule_calendars
    method: GET
    data_selector: results.schedule_calendars
- name: schedule_calendars
  endpoint:
    path: /schedule_calendars
    method: GET
    data_selector: results.schedule_calendars
    params: {}
- name: project_estimate
  endpoint:
    path: /reports/project_estimate
    method: POST
    data_selector: results
    params: {}
- name: schedule_calendars
  endpoint:
    path: /schedule_calendars
    method: GET
    data_selector: results.schedule_calendars
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: response
    params:
      limit: '5'
- name: authorize
  endpoint:
    path: /authorize
    method: GET
    params:
      response_type: code
      client_id: MYAPPCLIENTID
      redirect_uri: https://somedomain.com/callback
      state: MYSTATE
- name: grant
  endpoint:
    path: /grant
    method: POST
    params:
      grant_type: authorization_code
      client_id: MYAPPCLIENTID
      client_secret: MYAPPSECRET
      code: bbcaef03191517dfb60d0305bfea38ea995af1az
      redirect_uri: https%3A%2F%2Fsomedomain.com%2Fcallback
- name: users
  endpoint:
    path: /users
    method: GET
    params:
      limit: '1'
- name: users
  endpoint:
    path: /users
    method: POST
    data_selector: null
    params: {}
- name: jobcode_assignments
  endpoint:
    path: /jobcode_assignments
    method: DELETE
    data_selector: null
    params: {}
- name: timesheets
  endpoint:
    path: /timesheets
    method: GET
    data_selector: results
    params:
      start_date: ''
      modified_since: ''
- name: customfields
  endpoint:
    path: /api/v1/customfields
    method: GET
    data_selector: results.customfields
- name: timesheets
  endpoint:
    path: /timesheets
    method: GET
    data_selector: results.timesheets
    params:
      start_date: 12-05-2017
      modified_since: 12-05-2018
- name: current_user
  endpoint:
    path: /current_user
    method: GET
    data_selector: results.users
- name: customfields
  endpoint:
    path: /customfields
    method: GET
    data_selector: ''
- name: customfields
  endpoint:
    path: /customfields
    method: POST
    data_selector: results.customfields
    params: {}
- name: customfields_update
  endpoint:
    path: /customfields
    method: PUT
    data_selector: results.customfields
    params: {}
- name: customfielditems
  endpoint:
    path: /customfielditems
    method: GET
    data_selector: results.customfielditems
    params: {}
- name: customfielditems
  endpoint:
    path: /customfielditems
    method: GET
    data_selector: records
    params: {}
- name: customfielditems
  endpoint:
    path: /customfielditems
    method: GET
    data_selector: results.customfielditems
    params:
      customfield_id: required
- name: create_customfielditems
  endpoint:
    path: /customfielditems
    method: POST
    data_selector: results.customfielditems
    params: {}
- name: update_customfielditems
  endpoint:
    path: /customfielditems
    method: PUT
    data_selector: results.customfielditems
    params: {}
- name: customfielditem_filters
  endpoint:
    path: /api/v1/customfielditem_filters
    method: GET
    params:
      modified_since: '2018-07-17T00:00:00-00:00'
- name: create_customfielditem_filters
  endpoint:
    path: /api/v1/customfielditemfilters
    method: POST
- name: customfielditemfilters
  endpoint:
    path: /customfielditemfilters
    method: POST
    data_selector: results.customfielditemfilters
- name: customfielditem_jobcode_filters
  endpoint:
    path: /customfielditem_jobcode_filters
    method: GET
    data_selector: results.customfielditem_jobcode_filters
- name: customfielditem_user_filters
  endpoint:
    path: /customfielditem_user_filters
    method: GET
    data_selector: results.customfielditem_user_filters
- name: customfielditem_user_filters
  endpoint:
    path: /customfielditem_user_filters
    method: GET
    params:
      modified_since: '2018-07-17T00:00:00-00:00'
- name: effective_settings
  endpoint:
    path: /effective_settings
    method: GET
    params:
      user_id: '1234'
- name: effective_settings
  endpoint:
    path: /effective_settings
    method: GET
    params:
      user_id: optional
      modified_since: optional
      modified_before: optional
- name: estimate_items
  endpoint:
    path: /estimate_items
    method: GET
    params: {}
- name: estimate_items
  endpoint:
    path: /estimate_items
    method: GET
    data_selector: results.estimate_items
    params: {}
- name: estimates
  endpoint:
    path: /estimates
    method: GET
    data_selector: results.estimates
    params: {}
- name: create_estimates
  endpoint:
    path: /estimates
    method: POST
    data_selector: results.estimates
    params: {}
- name: update_estimates
  endpoint:
    path: /estimates
    method: PUT
    data_selector: results.estimates
    params: {}
- name: estimates
  endpoint:
    path: /estimates
    method: PUT
    data_selector: results.estimates
    params: {}
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: results.files
    params: {}
- name: upload_file
  endpoint:
    path: /api/v1/files
    method: POST
    data_selector: results.files
    params:
      limit: 200
- name: update_file
  endpoint:
    path: /api/v1/files
    method: PUT
    data_selector: results.files
- name: download_file
  endpoint:
    path: /api/v1/files/raw
    method: GET
    data_selector: results.files
- name: files_raw
  endpoint:
    path: /files/raw
    method: GET
    data_selector: body
    params:
      id: '123828'
- name: files_delete
  endpoint:
    path: /files
    method: DELETE
    data_selector: body
    params:
      ids: 129526,129524,13455,89999
- name: geofence_configs
  endpoint:
    path: /geofence_configs
    method: GET
    data_selector: results.geofence_configs
- name: geolocations
  endpoint:
    path: /geolocations
    method: GET
    data_selector: results.geolocations
    params:
      modified_since: '2018-08-01T12:00:00-06:00'
- name: jobcodes
  endpoint:
    path: ''
    method: GET
    data_selector: results.jobcodes
    params: {}
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: results.groups
    params:
      limit: '200'
- name: groups
  endpoint:
    path: /groups
    method: PUT
- name: invitations
  endpoint:
    path: /invitations
    method: POST
- name: jobcodes
  endpoint:
    path: /jobcodes
    method: GET
- name: jobcodes
  endpoint:
    path: /api/v1/jobcodes
    method: GET
    data_selector: results.jobcodes
    params: {}
- name: jobcodes
  endpoint:
    path: /jobcodes
    method: PUT
    data_selector: results.jobcodes
    params: {}
- name: jobcode_assignments
  endpoint:
    path: /jobcode_assignments
    method: GET
    data_selector: results.jobcodes
    params:
      user_ids: '1242515'
- name: jobcode_assignments
  endpoint:
    path: /jobcode_assignments
    method: GET
    data_selector: results.jobcode_assignments
    params:
      modified_since: 2018-03-01T00:00:00-0600
      limit: 10
- name: locations
  endpoint:
    path: /locations
    method: GET
    params:
      geocoding_status: complete
      limit: '10'
      active: both
- name: jobcode_assignments
  endpoint:
    path: /api/v1/jobcode_assignments
    method: DELETE
    data_selector: results.jobcode_assignments
    params:
      ids: optional
- name: last_modified_timestamps
  endpoint:
    path: /api/v1/last_modified_timestamps
    method: GET
    data_selector: results.last_modified_timestamps
    params:
      endpoints: optional
- name: locations
  endpoint:
    path: /locations
    method: GET
    data_selector: results.locations
    params: {}
- name: create_locations
  endpoint:
    path: /locations
    method: POST
    data_selector: results.locations
    params: {}
- name: update_locations
  endpoint:
    path: /locations
    method: PUT
    data_selector: results.locations
    params: {}
- name: locations
  endpoint:
    path: /locations
    method: PUT
    data_selector: results.locations
    params: {}
- name: locations_map
  endpoint:
    path: /locations_map
    method: GET
    data_selector: results.locations_map
    params: {}
- name: locations_map
  endpoint:
    path: /locations_map
    method: GET
    data_selector: results.locations_map
    params:
      modified_since: '2018-01-01T00:00:00-06:00'
- name: managed_clients
  endpoint:
    path: /managed_clients
    method: GET
    data_selector: results.managed_clients
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: GET
    data_selector: results.notifications
    params:
      user_id: optional
- name: create_notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: results.notifications
    params: {}
- name: delete_notifications
  endpoint:
    path: /notifications
    method: DELETE
    data_selector: results.notifications
    params:
      ids: optional
- name: notifications
  endpoint:
    path: /notifications
    method: DELETE
    data_selector: results.notifications
    params:
      ids: required
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: results.projects
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: POST
    data_selector: results.projects
    params: {}
- name: project_activity
  endpoint:
    path: /project_activities
    method: GET
    params:
      project_id: '1234'
- name: project_activities
  endpoint:
    path: /project_activities
    method: GET
- name: project_activity_read_times
  endpoint:
    path: /project_activity_read_times
    method: GET
- name: project_activity_replies
  endpoint:
    path: /project_activity_replies
    method: GET
    data_selector: results.project_activity_replies
    params:
      project_activity_id: required
- name: project_activity_read_times
  endpoint:
    path: /project_activity_read_times
    method: POST
    data_selector: results.project_activity_read_times
    params: {}
- name: project_activity_replies
  endpoint:
    path: /project_activity_replies
    method: GET
    data_selector: results.project_activity_replies
    params:
      project_activity_id: '40001'
- name: project_activity_replies
  endpoint:
    path: /project_activity_replies
    method: POST
    data_selector: results.project_activity_replies
    params: {}
- name: project_notes
  endpoint:
    path: /project_notes
    method: GET
    data_selector: results.project_notes
    params:
      project_id: '1234'
- name: project_notes
  endpoint:
    path: /project_notes
    method: GET
    data_selector: results.project_notes
    params:
      project_id: '1234'
- name: project_notes
  endpoint:
    path: /project_notes
    method: POST
    data_selector: results.project_notes
    params: {}
- name: project_notes
  endpoint:
    path: /project_notes
    method: POST
    data_selector: results.project_notes
    params: {}
- name: reminders
  endpoint:
    path: /reminders
    method: GET
    data_selector: results.reminders
    params:
      user_ids: 0,37
      reminder_types: clock-in,clock-out
- name: reminders
  endpoint:
    path: /api/v1/reminders
    method: GET
    data_selector: results.reminders
    params:
      user_ids: 0,37
      reminder_types: clock-in
      modified_since: '2018-07-15T19:32:00-06:00'
- name: create_reminders
  endpoint:
    path: /api/v1/reminders
    method: POST
    data_selector: results.reminders
    params: {}
- name: update_reminders
  endpoint:
    path: /api/v1/reminders
    method: PUT
    data_selector: results.reminders
    params: {}
- name: reminders
  endpoint:
    path: /reminders
    method: PUT
- name: current_totals
  endpoint:
    path: /reports/current_totals
    method: POST
- name: payroll
  endpoint:
    path: /reports/payroll
    method: POST
- name: payroll_report
  endpoint:
    path: /reports/payroll
    method: POST
    data_selector: results.payroll_report
    params: {}
- name: payroll_by_jobcode_report
  endpoint:
    path: /reports/payroll_by_jobcode
    method: POST
    data_selector: results.payroll_by_jobcode_report
    params: {}
- name: payroll_by_jobcode_report
  endpoint:
    path: /reports/payroll_by_jobcode
    method: POST
    data_selector: results
- name: project_estimate_report
  endpoint:
    path: /reports/project_estimate
    method: POST
    data_selector: results
- name: project_estimate
  endpoint:
    path: /reports/project_estimate
    method: POST
    data_selector: results
    params:
      limit: 200
- name: project_estimate_detail
  endpoint:
    path: /reports/project_estimate_detail
    method: POST
    data_selector: projects
- name: schedule_calendars
  endpoint:
    path: /schedule_calendars
    method: GET
    data_selector: results.schedule_calendars
    params: {}
- name: project_report
  endpoint:
    path: /project
    method: POST
    data_selector: results
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: PUT
    data_selector: data
- name: schedule_events
  endpoint:
    path: /schedule_events
    method: GET
    data_selector: results.schedule_events
    params:
      modified_since: '2018-01-01T13:00:00-06:00'
      schedule_calendar_ids: '72595'
- name: schedule_events
  endpoint:
    path: /schedule_events
    method: POST
    data_selector: results.schedule_events
    params: {}
- name: timesheets
  endpoint:
    path: /api/v1/timesheets
    method: GET
    params: {}
- name: timesheets
  endpoint:
    path: /timesheets
    method: GET
    data_selector: results.timesheets
    params:
      modified_since: '2018-01-01T00:00:00-06:00'
- name: timesheets_deleted
  endpoint:
    path: /timesheets_deleted
    method: GET
    data_selector: ''
- name: timesheets
  endpoint:
    path: /api/v1/timesheets
    method: POST
    data_selector: results.timesheets
    params:
      limit: 200
      page: 1
- name: time_off_requests
  endpoint:
    path: /api/v1/time_off_requests
    method: GET
    params:
      user_ids: 423,467
- name: time_off_request_entries
  endpoint:
    params:
      limit: 200
- name: time_off_requests
  endpoint:
    path: /time_off_requests
    method: POST
    data_selector: results.time_off_requests
    params:
      limit: 200
      page: 1
- name: time_off_request_entries
  endpoint:
    path: /time_off_request_entries
    method: GET
    data_selector: results.time_off_request_entries
    params:
      time_off_request_ids: '1546922'
- name: time_off_request_entries
  endpoint:
    path: /time_off_request_entries
    method: POST
    data_selector: results.time_off_request_entries
    params: {}
- name: users
  endpoint:
    path: /users
    method: PUT
    data_selector: data
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: results.users
    params:
      limit: '200'
- name: users
  endpoint:
    path: /users
    method: PUT
    data_selector: data
- name: users
  endpoint:
    path: /api/v1/users
    method: POST
    data_selector: results.users
    params: {}
notes:
- You must include a JSON representation of the object in your POST body.
- 'The Content-Type: application/json header must be set in your request.'
- Retrieves a list of all customfields associated with your company, with optional
  filters to narrow down the results.
- Request requires a Bearer token for authorization.
- Authorization token must be provided in the header.
- Requires a valid bearer token in Authorization header.
- Custom field item filters are used to limit the choices that should be made available
  for selecting customfielditems for a particular customfield based on a user or selected
  jobcode.
- Custom field item filters are used to limit the choices for selecting customfielditems
  based on a user.
- Custom field item filters are used to limit the choices that should be made available
  for selecting customfielditems for a particular customfield based on a jobcode.
- Retrieves a list of all effective settings associated with a single user, with optional
  filters to narrow down the results.
- Retrieves a list of all estimate items associated with your company, with optional
  filters to narrow down the results.
- Bearer token is required for authentication.
- A project can only have one active estimate at a time.
- If the value passed in is the same as it was previously, or if a particular property
  is not passed in at all, it will be ignored.
- Uses OAuth2 with Bearer token for authorization.
- Public documentation for Files endpoint
- Currently we only allow .png, .jpeg, .jpg file formats.
- Use 'Bearer <TOKEN>' for authorization in the headers
- Deleted timesheets will be kept on the server and accessible for 180 days since
  their deletion.
- Retrieves a list of all groups associated with your company, with optional filters
  to narrow down the results.
- By default, users will be created with the time_tracking permission set to false.
- Requires valid authorization token in the header.
- Invite one or more users to your company.
- 'Requests to create a timesheet for users in this state will result in a `403: Forbidden.
  TS-1006: User is not allowed to track time` HTTP response.'
- Only active jobcodes will be considered assigned, as once a jobcode is archived,
  it is no longer available for selection for time entry.
- To enable a user for time tracking, ensure you are setting the time_tracking permission
  to true for the user at create time.
- Frequent notifications to the same device may overwrite each other. Some notifications
  in quick succession may not be delivered.
- Notifications are not guaranteed to be delivered. They are dependent on the device's
  notification provider.
- Only administrators may create notifications for users other than themselves.
- Request body must include project details like name, parent_jobcode_id, description,
  start_date, due_date.
- Pass an array of user objects as the value to a 'data' property.
- Retrieves a list of all project activities associated with a project, with optional
  filters to narrow down the results.
- Retrieves a list of all project activity replies associated with a project, with
  optional filters to narrow down the results.
- 'Requests to create a timesheet for users in the state of not having time_tracking
  permission will result in a 403: Forbidden. TS-1006: User is not allowed to track
  time.'
- All access to the API occurs over a TLS-encrypted secure channel.
- Access tokens can be created through the web UI via the API Add-on preferences page.
- The maximum batch size is 50 customfields.
- Custom field item filters are used to limit the choices that should be made available
  for selecting customfielditems based on a user or selected jobcode.
- The maximum batch size is 50 customfielditemfilters.
- 'If exceeded, a 413: Request entity too large HTTP response will be returned.'
- Some endpoints require specific request formats.
- Use 'Bearer <TOKEN>' for authentication.
- Currently files can only be attached to Timesheet objects.
- The maximum batch size is 50 files.
- Default limit for results is 200. Max is 200.
- Authorization requires a Bearer token.
- For a more efficient way of retrieving jobcodes assigned to a specific user, see
  the Jobcode Assignments endpoint.
- Only active jobcodes will be considered assigned.
- Maximum batch size for creating locations is 50.
- The maximum batch size is 50 locations.
- You cannot edit a location that is archived.
- To use this endpoint you must be an admin on your account and have the External
  Access add-on installed.
- Frequent notifications to the same device may overwrite each other.
- Notifications are not guaranteed to be delivered.
- Each project that is created will come back with a _status_code and _status_message
  that will indicate whether the project was created successfully.
- The maximum batch size is 50 project_activity_reply.
- 'The maximum batch size is 50 project_notes. If exceeded, a `413: Request entity
  too large` HTTP response will be returned.'
- Maximum batch size is 50 reminders.
- Requires setup of access and OAuth token.
- Retrieve a list of schedule calendars associated with your employees, with filters
  to narrow down the results.
- The project estimate report combines information about each project and time tracked
  against it.
- Default limit for results is 200.
- Each request response will return a maximum of 200 results per page.
- If you exceed the current rate limit, you will receive a 429 'Too many requests'
  response.
- Maximum batch size is 50 customfields.
- 'If exceeded, a 413: Request entity too large response will be returned.'
- Maximum batch size for create or update requests is 50 customfielditems.
- Limit parameter must be an integer greater than zero and not greater than 200.
- Updating the 'estimate_by' or 'estimate_by__id' fields is not permitted.
- Uses OAuth2 with bearer token for authorization.
- 'The maximum batch size is 50 groups. If exceeded, a 413: Request entity too large
  HTTP response will be returned.'
- Custom fields can be included in the response by setting the customfields parameter
  to true.
- To view jobcode assignments for users other than yourself, you must be an admin
  or a group manager.
- The maximum batch size is 50 jobcode assignments.
- Limit parameter for requests is set to a maximum of 200.
- Maximum batch size for project_activity_read_times is 50.
- If the limit is less than 1 or greater than 200, an error will result.
- Retrieves a list of all project notes associated with a project, with optional filters
  to narrow down the results.
- The maximum batch size is 50 project_note.
- Retrieve a payroll report associated with a timeframe, with filters to narrow down
  the results.
- Filters can be applied to narrow down results.
- Each employee/user may only ever have a single active timesheet (no `end_time` defined)
  at any given point in time.
- The maximum batch size is 50 schedule events.
- The maximum batch size is 50 timesheets.
- To receive the full result, increment the page parameter and iterate through the
  requests until you receive 'more':false as part of the response.
- Maximum batch size is 50 requests.
- 'The maximum batch size is 50 requests. If exceeded, a 413: Request entity too large
  HTTP response will be returned.'
- 'Maximum batch size is 50 users. If exceeded, a 413: Request entity too large HTTP
  response will be returned.'
errors:
- '401 Unauthorized: Failure to include the access token or using an expired token
  will result in a 401 response.'
- '499: Could fail with this status if the request comes from an unauthorized IP address.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check if the token is valid and has the right scopes.'
- '400 Bad Request: There was something wrong with your request.'
- '401 Unauthorized: You don''t have sufficient permission to perform the action you
  requested.'
- '402 Billing not current: Your account billing is not current, so access was denied.'
- '405 Method Not Allowed: The action you are trying to perform is not allowed.'
- '409 Conflict: There is a conflict with the operation you''re trying to perform.'
- '413 Max Items Exceeded: The number of objects you are listing or editing or adding
  is too large.'
- '417 Expectation Failed: Your request was missing required parameters or was malformed.'
- '429 Too Many Requests: You have sent too many requests to the API in too short
  a time.'
- '500 Internal Server Error: There was an unspecified error on the TSheets side.'
- '501 Method not implemented: This method is not implemented for this object.'
- '503 (Various messages): A 503 response code indicates that the service is temporarily
  unavailable.'
- '400 Bad Request: Check request body format.'
- '401 Unauthorized: Invalid or expired token.'
- '404 Not Found: Resource not found.'
- '403: Forbidden. TS-1006: User is not allowed to track time'
- '417: Expectation Failed'
- '200 OK: Successful update'
- '400 Bad Request: Invalid request body'
- '401 Unauthorized: Invalid or missing authentication token'
- '417 Expectation Failed: The applies_to value must be one of the following: jobcodes,
  users, groups.'
- '200 OK: Request was successful.'
- '401 Unauthorized: Check the authorization token.'
- '404: File not found!'
- '401 Unauthorized: Recheck authorization token.'
- 'Duplicate entry: Check for existing users.'
- '417: Expectation Failed: Oops! That Short Code is already in use'
- '417 Expectation Failed: That id is not found in the database'
- '417 Expectation Failed: Oops! You don''t have permission to remove jobcodes for
  that user.'
- '413: Request entity too large'
- '401 Unauthorized: Recheck OAuth token or authorization header'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '200 OK: Successful update of project notes.'
- '200 OK: Reminder created or updated successfully'
- '429 ''Too many requests'': Rate limit exceeded.'
- '200: OK. customfield was created successfully.'
- '417: Expectation Failed. Something was wrong or missing with the properties supplied
  for this customfield.'
- '200: OK. customfielditem was created successfully.'
- '417: Expectation Failed. Something was wrong or missing with the properties supplied
  for this customfielditem.'
- '200 OK: Success'
- '417: Expectation Failed - The applies_to value must be one of the following: jobcodes,
  users, groups.'
- '200: OK. customfielditemfilter was created successfully.'
- '417: Expectation Failed. Something was wrong or missing with the properties supplied
  for this customfielditemfilter.'
- '200: OK'
- '417: Expectation Failed. Something was wrong or missing with the properties supplied
  for this estimate item.'
- '200: OK. Estimate was edited successfully.'
- '417: Expectation Failed. Something was wrong or missing with the properties supplied
  for this estimate.'
- '200: OK. File was uploaded successfully.'
- '417: Expectation Failed. Something was wrong or missing with the properties supplied
  for this file.'
- '404: Not Found. File either has never existed or has been deleted.'
- '200: OK. Group was created successfully.'
- '417: Expectation Failed. Something was wrong or missing with the properties supplied
  for this group.'
- '200 OK: Jobcode was created successfully.'
- '202 OK: Jobcode accepted but not created because a jobcode with the same parent_id,
  name and type already exists.'
- '417 Expectation Failed: Something was wrong or missing with the properties supplied
  for this jobcode.'
- '200: OK. Jobcode assignment was created successfully.'
- '417: Expectation Failed. Something was wrong or missing with the properties supplied.'
- '200: OK. Location was created successfully.'
- '417: Expectation Failed. Something was wrong or missing with the properties supplied
  for this location.'
- '200: OK. Location was edited successfully.'
- '200: OK. Notification was created successfully.'
- '417: Expectation Failed. Something was wrong or missing with the properties supplied
  for this notification.'
- '200: OK. Notification was deleted successfully.'
- '404: Not Found. Notification either has never existed or has already been delivered
  or deleted.'
- '413: Request entity too large.'
- '200: Project was created successfully.'
- '417: Expectation Failed. Something was wrong or missing with the properties supplied
  for this project.'
- 200 OK
- 417 Expectation Failed
- '201: Created. Project Activity Reply was created successfully.'
- '400: Bad Request. See the _status_extra value for more detail.'
- '201: Created. Project Note was created successfully.'
- '400: Bad Request. See the `_status_extra` value for more detail.'
- '200: OK. Reminder was edited successfully.'
- '406: Failed. Duplicate entry.'
- '417: Expectation Failed. Something was wrong or missing with the properties supplied
  for this reminder.'
- '401 Unauthorized: Recheck OAuth token.'
- '429 ''Too many requests'': You have exceeded the request limit.'
- '200: OK. customfielditem was created/updated successfully.'
- '200: OK. Estimate Item was created successfully.'
- '200: OK. Estimate was created successfully.'
- '200: OK. Jobcode was created successfully.'
- '202: OK. Jobcode accepted but not created because a jobcode with the same parent_id,
  name and type already exists.'
- '417: Expectation Failed. Something was wrong or missing with the properties supplied
  for this jobcode.'
- '200 OK: Location was edited successfully.'
- '417 Expectation Failed: Something was wrong or missing with the properties supplied
  for this location.'
- '200 OK: Notification was deleted successfully.'
- '200: OK. Project was created successfully.'
- '400 Bad Request: Check filter parameters or limit.'
- '400: Bad Request'
- '200: Created. Project Note was created successfully.'
- '400 Bad Request: Check request body and parameters.'
- '200 OK: Successful request.'
- '200: OK. Event was created successfully.'
- '201: Fulfilled. Event was created successfully and additional events that were
  created as a result are included in the supplemental data section of the response.'
- '403: Permission Denied. The requesting user did not have high enough manage schedule
  permissions to create the event.'
- '417: Expectation Failed. Something was wrong or missing with the properties supplied
  for this event.'
- '403 Forbidden: TS-1006: User is not allowed to track time.'
- '404 Not Found: Timesheet either has never existed or has been deleted.'
- '409 Conflict: Because a conflict would have resulted in the change requested, the
  timesheet was not modified.'
- '413 Request entity too large: The maximum batch size is 50 timesheets.'
- '403: Permission Denied. The requesting user does not have permission to create
  the time off request for this user.'
- '417: Expectation Failed. Something was wrong or missing with the properties supplied
  for this time off request.'
- '200: OK. Time off request was updated successfully.'
- '403: Permission Denied. The requesting user did not have permission to edit the
  time off request for this user.'
- '404: Not Found. Time off request either has never existed or has been deleted.'
- '200: OK. Time off request entry was created successfully.'
- '403: Permission Denied. The requesting user does not have permission to create
  the time off request entry for this user.'
- '417: Expectation Failed. Something was wrong or missing with the properties supplied
  for this time off request entry.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '200: OK. User was edited successfully.'
- '417: Expectation Failed. Something was wrong or missing with the properties supplied
  for this user.'
- '200: OK. User was created successfully.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://rest.tsheets.com/api/v1
  auth:
    type: oauth2
  paginator:
    default_page_size: 200
source_metadata: null
