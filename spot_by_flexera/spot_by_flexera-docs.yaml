resources:
- name: user_groups
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
- name: accounts
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
- name: create_user
  endpoint:
    path: /organizations/create_user
    method: POST
    data_selector: null
    params:
      generateToken: 'true'
- name: Create Cluster
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: response.items
    params:
      accountId: string
- name: list_accounts
  endpoint:
    path: /setup/account
    method: GET
    data_selector: items
    params:
      cloudAccountId: string
- name: set_credentials_for_gcp
  endpoint:
    path: /setup/credentials/gcp
    method: POST
    data_selector: response
    params:
      accountId: string
- name: Get Users
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      accountId: string
- name: Get Policies
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params: {}
- name: Get User Details
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      userId: string
- name: Delete User
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: DELETE
    data_selector: items
    params:
      userId: string
- name: Update User Group Mapping
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: PUT
    data_selector: items
    params:
      userId: string
- name: Update Policy Mapping
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: PUT
    data_selector: items
    params:
      userId: string
- name: Get User
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      userEmail: string
- name: Delete Organization
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: DELETE
    data_selector: items
    params:
      organizationId: string
- name: Create Programmatic User
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: POST
    data_selector: items
    params: {}
- name: Create Organization
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: POST
    data_selector: items
    params: {}
- name: Get Access Policy Actions
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      category: string
      name: string
      resourcePattern: string
      scope: string
      service: string
- name: Create Access Policy
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: POST
    data_selector: items
    params: {}
- name: Update Access Policy
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: PUT
    data_selector: items
    params:
      policyId: string
- name: Delete Access Policy
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: DELETE
    data_selector: items
    params:
      policyId: string
- name: Attach Load Balancers
  endpoint:
    path: /attach/load-balancers
    method: POST
    data_selector: loadBalancers
    params:
      oceanClusterId: required
      accountId: required
- name: Detach Load Balancers
  endpoint:
    path: /detach/load-balancers
    method: POST
    data_selector: loadBalancers
    params:
      oceanClusterId: required
      accountId: required
- name: Upgrade Elastigroup To Ocean
  endpoint:
    path: /upgrade/elastigroup
    method: POST
    data_selector: roll
    params:
      accountId: required
      groupId: required
- name: Initiate Roll
  endpoint:
    path: /initiate/roll
    method: POST
    data_selector: roll
    params:
      oceanClusterId: required
      accountId: required
- name: List Rolls
  endpoint:
    path: /list/rolls
    method: GET
    data_selector: rolls
    params:
      oceanClusterId: required
      accountId: required
- name: Update Roll
  endpoint:
    path: /update/roll
    method: POST
    data_selector: roll
    params:
      oceanId: required
      rollId: required
      accountId: required
- name: Get Roll
  endpoint:
    path: /get/roll
    method: GET
    data_selector: roll
    params:
      oceanClusterId: required
      rollId: required
      accountId: required
- name: Get Cluster Nodes
  endpoint:
    path: /get/cluster/nodes
    method: GET
    data_selector: nodes
    params:
      oceanClusterId: required
      accountId: required
      instanceName: optional
      launchSpecId: optional
- name: Detach Instances
  endpoint:
    path: /detach/instances
    method: POST
    data_selector: instances
    params:
      groupId: required
      accountId: required
- name: Get Cluster Aggregated Detailed Costs
  endpoint:
    path: /get/cluster/aggregated/detailed/costs
    method: POST
    data_selector: costs
    params:
      oceanClusterId: required
      accountId: required
- name: List Clusters
  endpoint:
    path: /api/spotinst.io/security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      accountId: string
      controllerClusterId: string
      fromDate: string
      state: any
      toDate: string
- name: Delete Cluster
  endpoint:
    path: /api/spotinst.io/security/v1/assets/filters/{filterKey}
    method: DELETE
    data_selector: items
    params:
      clusterId: string
      accountId: string
- name: Get Cluster
  endpoint:
    path: /api/spotinst.io/security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      clusterId: string
      accountId: string
- name: Update Cluster
  endpoint:
    path: /api/spotinst.io/security/v1/assets/filters/{filterKey}
    method: PATCH
    data_selector: items
    params:
      clusterId: string
      accountId: string
- name: Get Heartbeat Status
  endpoint:
    path: /api/spotinst.io/security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      oceanClusterId: string
      accountId: string
- name: Fetch Elastilog
  endpoint:
    path: /api/spotinst.io/security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      oceanClusterId: string
      accountId: string
      fromDate: string
      limit: integer
      resourceId: string
      severity: string
      toDate: string
- name: Import ASG To Ocean Cluster
  endpoint:
    path: /api/spotinst.io/security/v1/assets/filters/{filterKey}
    method: POST
    data_selector: items
    params:
      accountId: string
      autoScalingGroupName: string
      region: string
- name: Fetch Right Sizing Recommendations
  endpoint:
    path: /api/spotinst.io/security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      oceanClusterId: string
      accountId: string
- name: Instance Types Filters Simulation
  endpoint:
    path: /api/spotinst.io/security/v1/assets/filters/{filterKey}
    method: POST
    data_selector: items
    params:
      oceanClusterId: string
      accountId: string
- name: Allowed Instance Types
  endpoint:
    path: /api/spotinst.io/security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      oceanClusterId: string
      accountId: string
- name: Get Cluster Aggregated Summary Costs
  endpoint:
    path: /api/cluster/aggregated/summary/costs
    method: GET
- name: Initiate EKS AMI Auto Update
  endpoint:
    path: /api/eks/ami/auto/update
    method: POST
- name: Create Virtual Node Group
  endpoint:
    path: /api/vng/create
    method: POST
- name: List Virtual Node Groups
  endpoint:
    path: /api/vng/list
    method: GET
- name: Delete Virtual Node Group
  endpoint:
    path: /api/vng/delete/{virtualNodeGroupId}
    method: DELETE
- name: Update Virtual Node Group
  endpoint:
    path: /api/vng/update/{virtualNodeGroupId}
    method: PATCH
- name: Get Virtual Node Group
  endpoint:
    path: /api/vng/get/{virtualNodeGroupId}
    method: GET
- name: List Clusters
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    params:
      accountId: act-123456789
- name: Create Cluster
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: POST
    params:
      accountId: act-123456789
- name: Get Cluster
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    params:
      accountId: act-123456789
- name: Update Cluster
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: PATCH
    params:
      accountId: act-123456789
- name: instance_types_filters
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      accountId: act-123456789
- name: import_asg
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      accountId: act-123456789
      autoScalingGroupName: myAutoScalingGroup
      oceanId: o-12345abc
- name: import_eks_cluster
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      accountId: act-123456789
      eksClusterName: MyEksCluster
      eksNodeGroupName: MyEksClusterNodeGroup
      oceanId: o-12345abc
- name: launch_nodes
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: POST
    data_selector: response
    params:
      accountId: act-123456789
- name: create_extended_resource_definition
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: POST
    data_selector: response
    params:
      accountId: act-123456789
- name: list_extended_resource_definitions
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      accountId: act-123456789
- name: get_extended_resource_definition
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: response
    params:
      accountId: act-123456789
      oceanExtendedResourceDefinitionId: erd-12345abc
- name: update_extended_resource_definition
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: PATCH
    data_selector: response
    params:
      accountId: act-123456789
      oceanExtendedResourceDefinitionId: erd-12345abc
- name: Get Cluster Container Instances
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: response.items
    params:
      accountId: required
- name: Detach Instances
  endpoint:
    path: /detach/instances
    method: POST
    data_selector: response
    params:
      accountId: required
- name: Create VNG
  endpoint:
    path: /create/vng
    method: POST
    data_selector: response
    params:
      accountId: required
- name: List VNGs
  endpoint:
    path: /list/vngs
    method: GET
    data_selector: response.items
    params:
      accountId: required
      oceanId: required
- name: Get VNG
  endpoint:
    path: /get/vng
    method: GET
    data_selector: response
    params:
      accountId: required
- name: Delete VNG
  endpoint:
    path: /delete/vng
    method: DELETE
    data_selector: response
    params:
      accountId: required
- name: Update VNG
  endpoint:
    path: /update/vng
    method: PUT
    data_selector: response
    params:
      accountId: required
- name: Import Fargate To Existing Ocean Cluster
  endpoint:
    path: /import/fargate
    method: POST
    data_selector: response
    params:
      accountId: required
- name: Get Fargate Services Discovery
  endpoint:
    path: /get/fargate/services
    method: GET
    data_selector: response.items
    params:
      accountId: required
- name: Get Fargate Migration Status
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: ''
    params:
      accountId: required
- name: Get Ecs Cluster Aggregated Detailed Costs
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: ''
    params:
      accountId: required
      oceanClusterId: required
- name: Get Heartbeat Status
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: ''
    params:
      accountId: required
      oceanClusterId: required
- name: Create Cluster
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: POST
    data_selector: ''
    params:
      accountId: required
- name: List Clusters
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: ''
    params:
      accountId: optional
      controllerClusterId: optional
      fromDate: optional
      state: optional
      toDate: optional
- name: Get Cluster Aggregated Summary Costs
  endpoint:
    path: /get/cluster/aggregated/summary/costs
    method: GET
    data_selector: response.items
    params:
      accountId: string
- name: Get Cluster Aggregated Detailed Costs
  endpoint:
    path: /get/cluster/aggregated/detailed/costs
    method: GET
    data_selector: response.items
    params:
      accountId: string
- name: delete_cluster
  endpoint:
    path: /delete/cluster
    method: DELETE
    params:
      clusterId: oceanSparkClusterId
      accountId: act-123456789
- name: import_cluster
  endpoint:
    path: /import/cluster
    method: GET
    params:
      accountId: act-123456789
      aksClusterName: test-cluster
      resourceGroupName: test-clust_group
- name: fetch_elastilog
  endpoint:
    path: /fetch/elastilog
    method: GET
    params:
      oceanClusterId: o-abcd1234
      accountId: act-123456789
      fromDate: yyyy-mm-dd
      toDate: yyyy-mm-dd
- name: get_right_sizing_recommendations
  endpoint:
    path: /get/right/sizing/recommendations
    method: GET
    params:
      oceanId: o-abcd1234
      accountId: act-123456789
- name: instance_types_filters_simulation
  endpoint:
    path: /instance/types/filters/simulation
    method: POST
    params:
      oceanClusterId: o-12345abc
      accountId: act-123456789
- name: allowed_instance_types
  endpoint:
    path: /allowed/instance/types
    method: GET
    params:
      oceanClusterId: o-12345abc
      accountId: act-123456789
- name: upgrade_elastigroup_to_ocean
  endpoint:
    path: /upgrade/elastigroup/to/ocean
    method: POST
    params:
      accountId: act-123456789
      groupId: sig-1234abcd
- name: initiate_roll
  endpoint:
    path: /initiate/roll
    method: POST
    params:
      oceanClusterId: o-abcd1234
      accountId: act-123456789
- name: list_rolls
  endpoint:
    path: /list/rolls
    method: GET
    params:
      oceanClusterId: o-abcd1234
      accountId: act-123456789
- name: update_roll
  endpoint:
    path: /update/roll
    method: PUT
    params:
      oceanId: o-abcd1234
      rollId: scr-12345abc
      accountId: act-123456789
- name: get_roll
  endpoint:
    path: /get/roll
    method: GET
    params:
      oceanClusterId: o-abcd1234
      rollId: acr-12345abc
      accountId: act-123456789
- name: create_cluster
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: POST
    data_selector: response.items
    params:
      accountId: act-123456789
- name: list_clusters
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: response.items
    params:
      accountId: act-123456789
- name: get_cluster
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: response.items
    params:
      accountId: act-123456789
- name: filter
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      accountId: string
- name: create_vng
  endpoint:
    path: /create/vng
    method: POST
    data_selector: response
    params:
      accountId: string
      oceanId: string
- name: delete_vng
  endpoint:
    path: /delete/vng/{launchSpecId}
    method: DELETE
    data_selector: response
    params:
      accountId: string
      deleteNodes: boolean
- name: update_vng
  endpoint:
    path: /update/vng/{launchSpecId}
    method: PUT
    data_selector: response
    params:
      accountId: string
- name: get_vng
  endpoint:
    path: /get/vng/{launchSpecId}
    method: GET
    data_selector: response
    params:
      accountId: string
- name: initiate_roll
  endpoint:
    path: /initiate/roll/{oceanClusterId}
    method: POST
    data_selector: response
    params:
      accountId: string
- name: List Migrations
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      accountId: act-123456789
- name: Get Migration Discovery
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      accountId: act-123456789
      shouldFetchPods: true
- name: Create Migration
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: POST
    data_selector: response
    params:
      accountId: act-123456789
- name: Get Migration
  endpoint:
    path: /get/migration
    method: GET
    params:
      migrationId: required
      oceanClusterId: required
      accountId: required
- name: Stop Migration
  endpoint:
    path: /stop/migration
    method: GET
    params:
      migrationId: required
      oceanClusterId: required
      accountId: required
- name: Fetch Right Sizing Recommendations
  endpoint:
    path: /fetch/right-sizing-recommendations
    method: GET
    params:
      oceanClusterId: required
      accountId: required
- name: Fetch Elastilogs
  endpoint:
    path: /fetch/elastilogs
    method: GET
    params:
      oceanClusterId: required
      accountId: required
      fromDate: required
      toDate: required
      limit: optional
      resourceId: optional
      severity: optional
- name: Get all auto-upgrades
  endpoint:
    path: /get/auto-upgrades
    method: GET
    params:
      oceanClusterId: required
      accountId: required
- name: Initiate Auto upgrade
  endpoint:
    path: /initiate/auto-upgrade
    method: GET
    params:
      oceanClusterId: required
      accountId: required
      aksClusterName: required
      resourceGroupName: required
- name: Start system node pool upgrade
  endpoint:
    path: /start/system-node-pool-upgrade
    method: GET
    params:
      oceanClusterId: required
      accountId: required
- name: Get system node pool upgrade operation
  endpoint:
    path: /get/system-node-pool-upgrade-operation
    method: GET
    params:
      oceanClusterId: required
      systemNodePoolsOperationId: required
      accountId: required
- name: Get Cluster Aggregated Detailed Costs
  endpoint:
    path: /get/cluster-aggregated-detailed-costs
    method: GET
    params:
      oceanClusterId: required
      accountId: required
      startTime: required
      endTime: required
      filter: optional
      groupBy: optional
- name: Update Virtual Node Group
  endpoint:
    path: /api/v1/virtualNodeGroups/{virtualNodeGroupId}
    method: PATCH
    params:
      accountId: string
- name: Delete Cluster
  endpoint:
    path: /api/v1/clusters/{clusterId}
    method: DELETE
    params:
      accountId: string
- name: Import Cluster
  endpoint:
    path: /api/v1/clusters/import
    method: GET
    params:
      accountId: string
      aksClusterName: string
      resourceGroupName: string
- name: Launch New Nodes
  endpoint:
    path: /api/v1/clusters/{oceanId}/nodes
    method: POST
    params:
      accountId: string
- name: Detach Nodes
  endpoint:
    path: /api/v1/clusters/{oceanId}/detachNodes
    method: POST
    params:
      accountId: string
- name: Create Virtual Node Group
  endpoint:
    path: /api/v1/virtualNodeGroups
    method: POST
    params:
      accountId: string
- name: List Virtual Node Groups
  endpoint:
    path: /api/v1/virtualNodeGroups
    method: GET
    params:
      accountId: string
      oceanId: string
- name: Get Virtual Node Group
  endpoint:
    path: /api/v1/virtualNodeGroups/{virtualNodeGroupId}
    method: GET
    params:
      accountId: string
- name: List Ocean CD Clusters
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
- name: Get Ocean CD Cluster
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
- name: Create Ocean CD Verification Provider
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: POST
- name: List Ocean CD Verification Providers
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
- name: Get Ocean CD Verification Provider
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
- name: Update Ocean CD Verification Provider
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: PUT
- name: ocean_cd_verification_provider
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
- name: ocean_cd_verification_template
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
- name: ocean_cd_strategy
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
- name: ocean_cd_rollout_spec
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
- name: List Ocean CD Workloads
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
- name: Get Ocean CD Rollout by ID
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
- name: Get Ocean CD Rollout Status
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
- name: Get Ocean CD Latest Rollouts
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
- name: Get Ocean CD Ongoing Rollouts Number
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
- name: Get Ocean CD Rollout Verification
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
- name: Get Ocean CD Rollout Definition
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
- name: Get Ocean CD Rollout Resource
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
- name: Get Ocean CD Rollout Phase
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
- name: Get Ocean CD Rollout Strategy Override
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
- name: List Ocean CD Rollouts
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
- name: List Jobs
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
- name: Get Job
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
- name: Create Ocean Rightsizing Rule
  endpoint:
    path: /create/ocean/rightsizing/rule
    method: POST
    data_selector: response
    params:
      accountId: act-123456789
- name: List Ocean Rightsizing Rules
  endpoint:
    path: /list/ocean/rightsizing/rules
    method: GET
    data_selector: response
    params:
      accountId: act-123456789
- name: List Applications
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    params:
      accountId: accountId=act-123456789
      after: after
      appType: appType=notebook
      before: before
      clusterId: clusterId=osc-20fac3f1
      jobId: jobId=daily-reporting
      maxCreatedAt: maxCreatedAt=2021-11-22T00:00
      maxUpdatedAt: maxUpdatedAt=2021-11-22T00:00
      minCreatedAt: minCreatedAt=2021-11-22T00:00
      minUpdatedAt: minUpdatedAt=2021-11-22T00:00
      order: DESC
      orderBy: CREATED_AT
      pageSize: 20
      searchTerm: searchTerm
      state: state=RUNNING
      submissionSource: submissionSource=public-api
      userId: userId=59438
- name: Get Application
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    params:
      applicationId: applicationId=daily-reporting-2021-08-18
      clusterId: clusterId=osc-20fac3f1
      accountId: accountId=act-123456789
- name: Delete or kill an Application
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: DELETE
    params:
      applicationId: applicationId=daily-reporting-2021-08-18
      clusterId: clusterId=osc-20fac3f1
      accountId: accountId=act-123456789
- name: get_ocean_rightsizing_savings
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      oceanId: string
      accountId: string
- name: set_cluster_recommendations_percentile
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: POST
    data_selector: items
    params:
      oceanId: string
      accountId: string
      clusterIdentifier: string
- name: Get Ocean CD Workload's Active Operation
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: response.items
    params:
      clusterId: prod-cluster
      kind: SpotDeployment
- name: Get Ocean CD Workload's Revision
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: response.items
    params:
      clusterId: prod-cluster
      kind: SpotDeployment
- name: Restart Ocean CD Workload
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: response.items
    params:
      clusterId: prod-cluster
      kind: SpotDeployment
- name: Retry Ocean CD Workload
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: response.items
    params:
      clusterId: prod-cluster
      kind: SpotDeployment
- name: Rollback Ocean CD Workload
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: response.items
    params:
      clusterId: prod-cluster
      kind: SpotDeployment
- name: Get Ocean CD Workload Graph
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: response.items
    params:
      clusterId: prod-cluster
      kind: SpotDeployment
- name: Create Cluster
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: POST
    data_selector: response.items
    params:
      accountId: act-123456789
- name: List Clusters
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: response.items
    params:
      accountId: act-123456789
- name: Get Cluster
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: response.items
    params:
      clusterId: osc-20fac3f1
      accountId: act-123456789
- name: Delete Cluster
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: DELETE
    data_selector: response.items
    params:
      clusterId: osc-20fac3f1
      accountId: act-123456789
- name: Update Cluster
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: PATCH
    data_selector: response.items
    params:
      clusterId: osc-20fac3f1
      accountId: act-123456789
- name: Cluster Spark Core Hours
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: response.items
    params:
      accountId: act-123456789
      clusterId: osc-20fac3f1
      period: 2021-11
- name: Cluster application completion trend
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: response.items
    params:
      accountId: act-123456789
      clusterId: osc-20fac3f1
      since: '2021-11-22'
- name: Get Stateful Import Status
  endpoint:
    path: /get/stateful_import_status
    method: GET
    data_selector: items
    params:
      accountId: string
- name: Delete Stateful Import Status
  endpoint:
    path: /delete/stateful_import_status/{statefulMigrationGroupId}
    method: DELETE
    data_selector: response
    params:
      accountId: string
- name: Terminate Stateful Instance During Import Process
  endpoint:
    path: /terminate/stateful_instance/{statefulMigrationGroupId}
    method: POST
    data_selector: response
    params:
      accountId: string
- name: Get Elastigroup Status
  endpoint:
    path: /get/elastigroup_status/{groupId}
    method: GET
    data_selector: status
    params:
      accountId: string
- name: Get Elastilog
  endpoint:
    path: /get/elastilog/{groupId}
    method: GET
    data_selector: logs
    params:
      accountId: string
      fromDate: string
      toDate: string
- name: Update Capacity
  endpoint:
    path: /update/capacity/{groupId}
    method: POST
    data_selector: response
    params:
      accountId: string
- name: Scale Up
  endpoint:
    path: /scale/up/{groupId}
    method: POST
    data_selector: response
    params:
      accountId: string
      adjustment: integer
- name: Import EC2 Instance
  endpoint:
    path: /import/ec2/instance
    method: GET
    data_selector: request
    params:
      accountId: accountId=act-123456789
      instanceId: instanceId=i-008a13360040aa88e
      region: region=us-east-2
- name: Get Costs per Elastigroup
  endpoint:
    path: /get/costs/elastigroup
    method: GET
    data_selector: response
    params:
      fromDate: fromDate=2018-06-20
      toDate: toDate=2018-11-20
      accountId: accountId=act-123abc
      aggregationPeriod: aggregationPeriod=daily
- name: Detailed Cost
  endpoint:
    path: /detailed/cost
    method: GET
    data_selector: response
    params:
      fromDate: fromDate=2018-06-20
      toDate: toDate=2018-11-20
      accountId: accountId=act-123abc
      aggregationPeriod: aggregationPeriod=daily
- name: Instance Status
  endpoint:
    path: /instance/status
    method: GET
    data_selector: response
    params:
      instanceId: instanceId=i-123456
      accountId: accountId=act-123abc
- name: List All Elastigroups
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      accountId: required
- name: Create Elastigroup
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: POST
    data_selector: items
    params:
      accountId: required
- name: Update Elastigroup
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: PUT
    data_selector: items
    params:
      accountId: required
      groupId: required
- name: Delete Elastigroup
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: DELETE
    data_selector: items
    params:
      accountId: required
      groupId: required
- name: List Stateful Instances
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      accountId: required
      groupId: required
- name: Pause Stateful Instance
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: POST
    data_selector: items
    params:
      accountId: required
      groupId: required
      statefulInstanceId: required
- name: Resume Stateful Instance
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: POST
    data_selector: items
    params:
      accountId: required
      groupId: required
      statefulInstanceId: required
- name: Recycle Stateful Instance
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: POST
    data_selector: items
    params:
      accountId: required
      groupId: required
      statefulInstanceId: required
- name: De-allocate Stateful Instance
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: DELETE
    data_selector: items
    params:
      accountId: required
      groupId: required
      statefulInstanceId: required
- name: Delete Volume in a Stateful Instance
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: DELETE
    data_selector: items
    params:
      accountId: required
      groupId: required
      statefulInstanceId: required
      volumeId: required
- name: scalers
  endpoint:
    path: /security/v1/assets/scalers
    method: GET
    data_selector: items
    params:
      accountId: string
- name: create_scaler
  endpoint:
    path: /security/v1/assets/scalers
    method: POST
    data_selector: null
    params:
      accountId: string
- name: get_scaler
  endpoint:
    path: /security/v1/assets/scalers/{mrScalerId}
    method: GET
    data_selector: null
    params:
      accountId: string
- name: update_scaler
  endpoint:
    path: /security/v1/assets/scalers/{mrScalerId}
    method: PUT
    data_selector: null
    params:
      accountId: string
- name: Get status of a specific deployment
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    params:
      groupId: string
      accountId: string
- name: Get a list of instances with health status
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    params:
      groupId: string
      accountId: string
- name: Detach instances from your Elastigroup
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    params:
      groupId: string
      accountId: string
- name: Create a new Elastigroup
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    params:
      accountId: string
      autoScalingGroupName: string
      dryRun: boolean
      region: string
- name: Get available spot instances types
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    params:
      region: string
- name: Simulate an Instance Interruption
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    params:
      accountId: string
- name: Create Instance Signal
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    params:
      accountId: string
- name: Instance Standby
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    params:
      instanceId: string
      accountId: string
- name: Exit Instance Standby
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    params:
      instanceId: string
      accountId: string
- name: Get list of all the deployments of a specific Elastigroup and their status
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    params:
      groupId: string
      accountId: string
      limit: integer
      sort: string
- name: start_deployment
  endpoint:
    path: /start/deployment
    method: POST
    data_selector: body
    params:
      groupId: required
      accountId: required
- name: stop_deployment
  endpoint:
    path: /stop/deployment
    method: POST
    data_selector: body
    params:
      groupId: required
      rollId: required
      accountId: required
- name: deployment_status
  endpoint:
    path: /deployment/status
    method: GET
    data_selector: body
    params:
      groupId: required
      rollId: required
      accountId: optional
- name: initiate_cluster_roll
  endpoint:
    path: /initiate/cluster/roll
    method: POST
    data_selector: body
    params:
      groupId: required
      accountId: required
- name: update_cluster_roll_status
  endpoint:
    path: /update/cluster/roll/status
    method: POST
    data_selector: body
    params:
      groupId: required
      accountId: required
- name: get_all_cluster_rolls
  endpoint:
    path: /get/all/cluster/rolls
    method: GET
    data_selector: body
    params:
      groupId: required
      accountId: required
- name: get_cluster_roll_status
  endpoint:
    path: /get/cluster/roll/status
    method: GET
    data_selector: body
    params:
      groupId: required
      rollId: required
      accountId: required
- name: start_beanstalk_maintenance
  endpoint:
    path: /start/beanstalk/maintenance
    method: POST
    data_selector: body
    params:
      groupId: required
      accountId: required
- name: finish_beanstalk_maintenance
  endpoint:
    path: /finish/beanstalk/maintenance
    method: POST
    data_selector: body
    params:
      groupId: required
      accountId: required
- name: get_beanstalk_maintenance_status
  endpoint:
    path: /get/beanstalk/maintenance/status
    method: GET
    data_selector: body
    params:
      groupId: required
      accountId: required
- name: List Elastigroups
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      accountId: act-123456789
- name: Get Elastigroup
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      accountId: act-123456789
- name: Create Elastigroup
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: POST
    data_selector: items
    params:
      accountId: act-123456789
- name: Delete Elastigroup
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: DELETE
    data_selector: items
    params:
      accountId: act-123456789
- name: Update Elastigroup
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: PUT
    data_selector: items
    params:
      accountId: act-123456789
- name: Get Elastigroup Status
  endpoint:
    path: /get/security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      accountId: act-123456789
- name: List Activity Events
  endpoint:
    path: /get/activity/events
    method: GET
    params:
      groupId: required
      accountId: required
      fromDate: required
      toDate: required
- name: Get Elastilog
  endpoint:
    path: /get/elastilog
    method: GET
    params:
      groupId: required
      accountId: required
      fromDate: required
      toDate: required
      limit: optional
      RESOURCE_ID: optional
      SEVERITY: optional
- name: Scale Up
  endpoint:
    path: /scale/up
    method: POST
    params:
      groupId: required
      accountId: required
      adjustment: required
- name: Scale Down
  endpoint:
    path: /scale/down
    method: POST
    params:
      groupId: required
      accountId: required
      adjustment: required
- name: Get Costs Per Account
  endpoint:
    path: /get/costs/account
    method: GET
    params:
      accountId: optional
      fromDate: required
      toDate: required
- name: Get Elastigroup Costs
  endpoint:
    path: /get/elastigroup/costs
    method: GET
    params:
      groupId: required
      accountId: required
      fromDate: required
      toDate: required
- name: List Deployments
  endpoint:
    path: /get/deployments
    method: GET
    params:
      groupId: required
      accountId: required
- name: Start Deployment
  endpoint:
    path: /start/deployment
    method: POST
    params:
      groupId: required
      accountId: required
- name: Get Deployment
  endpoint:
    path: /get/deployment
    method: GET
    params:
      deploymentId: required
      groupId: required
      accountId: required
- name: Stop Deployment
  endpoint:
    path: /stop/deployment
    method: POST
    params:
      groupId: required
      rollId: required
      accountId: required
- name: Suspend Group
  endpoint:
    path: /suspendGroup
    method: POST
- name: Resume Group
  endpoint:
    path: /resumeGroup
    method: POST
- name: Detach VMs
  endpoint:
    path: /detachVms
    method: POST
- name: Scale Down
  endpoint:
    path: /scaleDown
    method: POST
- name: Scale Up
  endpoint:
    path: /scaleUp
    method: POST
- name: Start Deployment
  endpoint:
    path: /startDeployment
    method: POST
- name: Get All Deployments
  endpoint:
    path: /getAllDeployments
    method: GET
- name: Get Deployment
  endpoint:
    path: /getDeployment
    method: GET
- name: Get Deployment Status
  endpoint:
    path: /getDeploymentStatus
    method: GET
- name: Import Group From Scale Set
  endpoint:
    path: /importGroupFromScaleSet
    method: POST
- name: Import Group From Virtual Machine
  endpoint:
    path: /importGroupFromVirtualMachine
    method: POST
- name: Create Stateful Node
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: POST
    data_selector: body
    params:
      accountId: act-123456789
- name: Get All Stateful Nodes
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: body
    params:
      accountId: act-123456789
- name: Get Stateful Node
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: body
    params:
      accountId: act-123456789
- name: Update Stateful Node
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: PATCH
    data_selector: body
    params:
      accountId: act-123456789
- name: detach_instances
  endpoint:
    path: /detach_instances
    method: POST
    data_selector: body
    params:
      groupId: sig-12345
      accountId: act-123456789
- name: get_instance_status
  endpoint:
    path: /get_instance_status
    method: GET
    data_selector: body
    params:
      instanceId: GCP_Instance_ID
      accountId: act-123456789
- name: lock_instance
  endpoint:
    path: /lock_instance
    method: POST
    data_selector: body
    params:
      instanceId: GCP_Instance_ID
      accountId: act-123456789
      ttlInMinutes: string
- name: unlock_instance
  endpoint:
    path: /unlock_instance
    method: POST
    data_selector: body
    params:
      instanceId: GCP_Instance_ID
      accountId: act-123456789
- name: update_elastigroup
  endpoint:
    path: /update_elastigroup
    method: POST
    data_selector: body
    params:
      groupId: sig-123123
      accountId: act-123456789
- name: get_elastigroup
  endpoint:
    path: /get_elastigroup
    method: GET
    data_selector: body
    params:
      groupId: sig-12345
      accountId: act-123456789
- name: delete_elastigroup
  endpoint:
    path: /delete_elastigroup
    method: DELETE
    data_selector: body
    params:
      groupId: sig-12345
      accountId: act-123456789
- name: update_capacity
  endpoint:
    path: /update_capacity
    method: POST
    data_selector: body
    params:
      groupId: sig-12345
      accountId: act-123456789
- name: create_elastigroup
  endpoint:
    path: /create_elastigroup
    method: POST
    data_selector: body
    params:
      accountId: act-123456789
- name: list_elastigroups
  endpoint:
    path: /list_elastigroups
    method: GET
    data_selector: body
    params:
      accountId: act-123456789
- name: get_elastigroup_status
  endpoint:
    path: /get_elastigroup_status
    method: GET
    data_selector: body
    params:
      groupId: sig-12345
      accountId: act-123456789
- name: vm_healthiness
  endpoint:
    path: /vm_healthiness
    method: GET
    data_selector: body
    params:
      groupId: sig-123123
      accountId: act-123456789
- name: audit_log_events
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      accountId: act-123abc
      fromDate: '1598918400000'
      toDate: '1598918400000'
- name: Get Stateful Node
  endpoint:
    path: /GetStatefulNode
    method: GET
    params:
      MI_ID: required
      accountId: required
- name: Get Stateful Node Resources
  endpoint:
    path: /GetStatefulNodeResources
    method: GET
    params:
      nodeId: required
      accountId: required
- name: Get Stateful Node Status
  endpoint:
    path: /GetStatefulNodeStatus
    method: GET
    params:
      MI_ID: required
      accountId: required
- name: Get All Stateful Node Statuses
  endpoint:
    path: /GetAllStatefulNodeStatuses
    method: GET
    params:
      accountId: required
- name: Update Stateful Node State
  endpoint:
    path: /UpdateStatefulNodeState
    method: POST
    params:
      nodeId: required
      accountId: required
- name: Get Stateful Node from an Azure VM
  endpoint:
    path: /GetStatefulNodeFromAzureVM
    method: GET
    params:
      resourceGroupName: required
      virtualMachineName: required
      accountId: required
- name: Import VM to a Stateful Node
  endpoint:
    path: /ImportVMToStatefulNode
    method: POST
    params:
      accountId: required
- name: Get Stateful Node Import Status
  endpoint:
    path: /GetStatefulNodeImportStatus
    method: GET
    params:
      importId: required
      accountId: required
- name: Swap OS Disk to Stateful Node
  endpoint:
    path: /SwapOSDiskToStatefulNode
    method: POST
    params:
      nodeId: required
      accountId: required
- name: Attach Data Disk to Stateful Node
  endpoint:
    path: /AttachDataDiskToStatefulNode
    method: POST
    params:
      nodeId: required
      accountId: required
- name: Detach Data Disk From Stateful Node
  endpoint:
    path: /DetachDataDiskFromStatefulNode
    method: POST
    params:
      nodeId: required
      accountId: required
- name: potential_savings
  endpoint:
    path: /potential_savings
    method: GET
    data_selector: items
    params:
      accountId: string
- name: instances_potential_savings
  endpoint:
    path: /instances_potential_savings
    method: GET
    data_selector: items
    params:
      accountId: string
      instanceIds: string
      region: string
- name: Get Stateful Node Logs
  endpoint:
    path: /get/stateful/node/logs
    method: GET
    params:
      accountId: required
      fromDate: required
      limit: optional
      resourceId: optional
      severity: optional
      toDate: required
- name: Get All Stateful Node Costs
  endpoint:
    path: /get/all/stateful/node/costs
    method: GET
    params:
      accountId: required
      fromDate: required
      ownerId: optional
      toDate: required
- name: Get All Stateful Node Aggregated Daily Costs
  endpoint:
    path: /get/all/stateful/node/aggregated/daily/costs
    method: GET
    params:
      accountId: required
      fromDate: required
      ownerId: optional
      toDate: required
- name: Get Stateful Node Size Usage
  endpoint:
    path: /get/stateful/node/size/usage
    method: GET
    params:
      accountId: required
      fromDate: required
      ownerId: optional
      toDate: required
- name: Create Stateful Node
  endpoint:
    path: /create/stateful/node
    method: POST
    params:
      accountId: required
- name: List Stateful Nodes
  endpoint:
    path: /list/stateful/nodes
    method: GET
    params:
      accountId: required
- name: Update Stateful Node
  endpoint:
    path: /update/stateful/node/{MI_ID}
    method: PATCH
    params:
      accountId: required
- name: Get Stateful Node
  endpoint:
    path: /get/stateful/node/{MI_ID}
    method: GET
    params:
      accountId: required
- name: Delete Stateful Node
  endpoint:
    path: /delete/stateful/node/{MI_ID}
    method: DELETE
    params:
      accountId: required
- name: Pause Stateful Node
  endpoint:
    path: /pause/stateful/node/{MI_ID}
    method: POST
    params:
      accountId: required
- name: Resume Stateful Node
  endpoint:
    path: /resume/stateful/node/{MI_ID}
    method: POST
    params:
      accountId: required
- name: Get Account Notification Policy
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: response.items
    params:
      accountId: string
- name: Update Account Notification Policy
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: PUT
    data_selector: response.items
    params:
      accountId: string
- name: create_entry
  endpoint:
    path: /create_entry
    method: POST
    data_selector: response.items
    params:
      workspace_id: string
- name: get_accounts
  endpoint:
    path: /get_accounts
    method: GET
    data_selector: response.items
    params:
      workspace_id: string
- name: Get API Key
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
- name: Create API Key
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: POST
- name: Update API Key
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: PUT
- name: List Enabled Connectors
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
- name: Get Quotas
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
- name: List Public IPs
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
- name: List Workspaces
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
- name: Create Workspace
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: POST
    data_selector: response
    params: {}
- name: List Subscriptions
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      accountId: string
- name: Get Subscription
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    data_selector: items
    params:
      accountId: string
- name: Update Subscription
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: PUT
    data_selector: items
    params:
      accountId: string
- name: Delete Schedule
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: DELETE
    data_selector: items
    params:
      workflow_name: string
      version: string
      workspace_id: string
- name: Create Schedule
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: POST
    data_selector: items
    params:
      workspace_id: string
- name: Get Misconfigurations
  endpoint:
    path: /get/misconfigurations
    method: GET
    data_selector: items
    params: {}
- name: Get Misconfigurations Count
  endpoint:
    path: /get/misconfigurations/count
    method: GET
    data_selector: count
    params: {}
- name: Get Asset Sim Filter
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    params:
      paginationSize: 100
- name: Get Rules Count
  endpoint:
    path: /security/v1/assets/filters/{filterKey}
    method: GET
    params: {}
notes:
- 'Names cannot include these characters: + = @'
- This API supports partial updates, so specific fields can be updated separately.
- This service is deprecated. Use the Notification Center Service.
- Response contains error and request information
- Response includes pagination info
errors:
- 400 Bad Request
- 404 Not Found
- 422 Validation Error
- '400: Bad Request'
- '404: Not Found'
- '422: Validation Error'
- '422: Unprocessable Entity'
auth_info:
  mentioned_objects:
  - Organization Viewer
  - setup:describeAllAuditEvents
client:
  base_url: https://api.spotinst.io
  auth:
    type: oauth2
source_metadata: null
