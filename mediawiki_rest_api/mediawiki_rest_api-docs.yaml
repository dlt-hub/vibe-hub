resources:
- name: Get page
  endpoint:
    path: /wiki/Special:Search
    method: GET
    data_selector: query
    params: {}
- name: Get languages
  endpoint:
    path: /wiki/Special:Languages
    method: GET
    data_selector: languages
    params: {}
- name: Get page
  endpoint:
    path: /w/api.php?action=query&format=json&list=pages
    method: GET
    data_selector: query.pages
- name: Get languages
  endpoint:
    path: /w/api.php?action=query&format=json&meta=siteinfo&siprop=languages
    method: GET
    data_selector: query.languages
- name: search_pages
  endpoint:
    path: /search/page
    method: GET
    data_selector: pages
- name: search
  endpoint:
    path: /w/api.php?action=query&list=search
    method: GET
    data_selector: search
    params: {}
- name: get_page
  endpoint:
    path: /w/api.php?action=query&prop=revisions
    method: GET
    data_selector: revisions
    params: {}
- name: search_page
  endpoint:
    path: /v1/search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '20'
- name: search_page
  endpoint:
    path: /v1/search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '20'
- name: search
  endpoint:
    path: /w/api.php
    method: GET
    data_selector: query.search
    params:
      list: search
      srsearch: Jupiter
      srlimit: '20'
- name: search_page
  endpoint:
    path: /search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '20'
- name: search_title
  endpoint:
    path: /search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '5'
- name: create_page
  endpoint:
    path: /page
    method: POST
    data_selector: source
- name: page_create
  endpoint:
    path: /v1/page
    method: POST
    data_selector: source
    params: {}
- name: page_update
  endpoint:
    path: /v1/page/{title}
    method: PUT
    data_selector: source
    params: {}
- name: page_get
  endpoint:
    path: /v1/page/{title}/bare
    method: GET
    data_selector: source
    params: {}
- name: page_with_html
  endpoint:
    path: /v1/page/{title}/with_html
    method: GET
    data_selector: source
    params: {}
- name: page_jupiter
  endpoint:
    path: /v1/page/Jupiter
    method: GET
    data_selector: source
- name: page_jupiter_html
  endpoint:
    path: /v1/page/Jupiter/html
    method: GET
    data_selector: html
- name: page_jupiter_language_links
  endpoint:
    path: /v1/page/Jupiter/links/language
    method: GET
    data_selector: languages
- name: page_jupiter_media_links
  endpoint:
    path: /v1/page/Jupiter/links/media
    method: GET
    data_selector: files
- name: transform_wikitext_to_html
  endpoint:
    path: /v1/transform/wikitext/to/html/Jupiter
    method: POST
    data_selector: html
- name: transform_html_to_wikitext
  endpoint:
    path: /v1/transform/html/to/wikitext/Jupiter
    method: POST
    data_selector: wikitext
- name: revision
  endpoint:
    path: /v1/revision/{id}
    method: GET
    data_selector: revision
- name: revision_html
  endpoint:
    path: /v1/revision/{id}/html
    method: GET
    data_selector: revision
- name: revision_with_html
  endpoint:
    path: /v1/revision/{id}/with_html
    method: GET
    data_selector: revision
- name: get_file
  endpoint:
    path: /v1/file/{title}
    method: GET
    data_selector: file
    params: {}
- name: get_page_history
  endpoint:
    path: /v1/page/{title}/history
    method: GET
    data_selector: revisions
    params: {}
- name: get_revision
  endpoint:
    path: /v1/revision/{id}/bare
    method: GET
    data_selector: revision
    params: {}
- name: page
  endpoint:
    path: /page
    method: POST
    data_selector: source
- name: get_page
  endpoint:
    path: /page/{title}/bare
    method: GET
    data_selector: html_url
- name: update_page
  endpoint:
    path: /page/{title}
    method: PUT
    data_selector: source
- name: search_page
  endpoint:
    path: /search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '20'
- name: search_title
  endpoint:
    path: /search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '5'
- name: create_page
  endpoint:
    path: /page
    method: POST
    data_selector: source
- name: page
  endpoint:
    path: /v1/page/{title}
    method: GET
    data_selector: source
- name: page_html
  endpoint:
    path: /v1/page/{title}/html
    method: GET
    data_selector: files
- name: page_languages
  endpoint:
    path: /v1/page/{title}/links/language
    method: GET
    data_selector: languages
- name: page_media
  endpoint:
    path: /v1/page/{title}/links/media
    method: GET
    data_selector: media
- name: transform_wikitext_to_html
  endpoint:
    path: /v1/transform/wikitext/to/html/{title}
    method: POST
    data_selector: html
- name: transform_html_to_wikitext
  endpoint:
    path: /v1/transform/html/to/wikitext/{title}
    method: POST
    data_selector: wikitext
- name: create_page
  endpoint:
    path: /page
    method: POST
    data_selector: source
    params: {}
- name: update_page
  endpoint:
    path: /page/{title}
    method: PUT
    data_selector: source
    params: {}
- name: get_page
  endpoint:
    path: /page/{title}/bare
    method: GET
    data_selector: html_url
    params: {}
- name: get_page_with_html
  endpoint:
    path: /page/{title}/with_html
    method: GET
    data_selector: html
    params: {}
- name: get_page_source
  endpoint:
    path: /page/{title}
    method: GET
    data_selector: source
    params: {}
- name: sandbox_page
  endpoint:
    path: /w/rest.php/v1/page/Wikipedia:Sandbox
    method: GET
    data_selector: content
    params: {}
- name: revision_bare
  endpoint:
    path: /v1/revision/{id}/bare
    method: GET
- name: revision_html
  endpoint:
    path: /v1/revision/{id}/html
    method: GET
- name: revision_with_html
  endpoint:
    path: /v1/revision/{id}/with_html
    method: GET
- name: file
  endpoint:
    path: /file/{title}
    method: GET
    data_selector: file
- name: page_history
  endpoint:
    path: /page/{title}/history
    method: GET
    data_selector: revisions
- name: page_history_counts
  endpoint:
    path: /page/{title}/history/counts/{type}
    method: GET
    data_selector: count
- name: revision
  endpoint:
    path: /revision/{id}/bare
    method: GET
    data_selector: revision
- name: page
  endpoint:
    path: /w/api.php
    method: GET
    data_selector: query.pages
- name: create_page
  endpoint:
    path: /v1/page
    method: POST
    data_selector: source
    params: {}
- name: update_page
  endpoint:
    path: /v1/page/{title}
    method: PUT
    data_selector: source
    params: {}
- name: search_page
  endpoint:
    path: /search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '20'
- name: search_title
  endpoint:
    path: /search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '5'
- name: create_page
  endpoint:
    path: /page
    method: POST
    data_selector: source
- name: search_page
  endpoint:
    path: /search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: search_title
  endpoint:
    path: /search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: create_page
  endpoint:
    path: /page
    method: POST
    data_selector: source
- name: page
  endpoint:
    path: /v1/page
    method: POST
    data_selector: source
- name: update_page
  endpoint:
    path: /v1/page/{title}
    method: PUT
    data_selector: source
- name: get_page
  endpoint:
    path: /w/api.php
    method: GET
- name: page
  endpoint:
    path: /v1/page/{title}/bare
    method: GET
    data_selector: Page object
- name: search_page
  endpoint:
    path: /v1/search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: search_title
  endpoint:
    path: /v1/search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: create_page
  endpoint:
    path: /page
    method: POST
    data_selector: ''
    params: {}
- name: page
  endpoint:
    path: /v1/page/{title}
    method: GET
    data_selector: source
- name: page_html
  endpoint:
    path: /v1/page/{title}/html
    method: GET
    data_selector: html
- name: page_language_links
  endpoint:
    path: /v1/page/{title}/links/language
    method: GET
    data_selector: languages
- name: page_media_files
  endpoint:
    path: /v1/page/{title}/links/media
    method: GET
    data_selector: files
- name: transform_wikitext
  endpoint:
    path: /v1/transform/wikitext/to/html/{title}
    method: POST
    data_selector: html
- name: transform_html
  endpoint:
    path: /v1/transform/html/to/wikitext/{title}
    method: POST
    data_selector: wikitext
- name: file
  endpoint:
    path: /file/{title}
    method: GET
    data_selector: file
    params: {}
- name: page_history
  endpoint:
    path: /page/{title}/history
    method: GET
    data_selector: revisions
    params: {}
- name: page_history_counts
  endpoint:
    path: /page/{title}/history/counts/{type}
    method: GET
    data_selector: count
    params: {}
- name: revision
  endpoint:
    path: /revision/{id}/bare
    method: GET
    data_selector: revision
    params: {}
- name: page_with_html
  endpoint:
    path: /page/{title}/with_html
    method: GET
    data_selector: html
- name: create_page
  endpoint:
    path: /page
    method: POST
    data_selector: source
    params: {}
- name: update_page
  endpoint:
    path: /page/{title}
    method: PUT
    data_selector: source
    params: {}
- name: get_page
  endpoint:
    path: /page/{title}/bare
    method: GET
    data_selector: html_url
    params: {}
- name: get_page_with_html
  endpoint:
    path: /page/{title}/with_html
    method: GET
    data_selector: html
    params: {}
- name: get_page_source
  endpoint:
    path: /page/{title}
    method: GET
    data_selector: source
    params: {}
- name: revision
  endpoint:
    path: /v1/revision/{id}
    method: GET
    data_selector: revision
    params:
      id: required
- name: revision_html
  endpoint:
    path: /v1/revision/{id}/html
    method: GET
    data_selector: revision
    params:
      id: required
- name: revision_with_html
  endpoint:
    path: /v1/revision/{id}/with_html
    method: GET
    data_selector: revision
    params:
      id: required
- name: search_page
  endpoint:
    path: /v1/search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: search_title
  endpoint:
    path: /v1/search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: create_page
  endpoint:
    path: /v1/page
    method: POST
    data_selector: source
- name: create_page
  endpoint:
    path: /v1/page
    method: POST
    data_selector: source
    params: {}
- name: update_page
  endpoint:
    path: /v1/page/{title}
    method: PUT
    data_selector: source
    params: {}
- name: get_page
  endpoint:
    path: /v1/page/{title}/bare
    method: GET
    data_selector: ''
    params: {}
- name: get_page_with_html
  endpoint:
    path: /v1/page/{title}/with_html
    method: GET
    data_selector: ''
    params: {}
- name: search_page
  endpoint:
    path: /search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: search_title
  endpoint:
    path: /search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: page
  endpoint:
    path: /page
    method: POST
    data_selector: source
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: query
    params: {}
- name: get_page
  endpoint:
    path: /get_page
    method: GET
    data_selector: page
    params: {}
- name: create_page
  endpoint:
    path: /v1/page
    method: POST
    data_selector: source
    params: {}
- name: update_page
  endpoint:
    path: /v1/page/{title}
    method: PUT
    data_selector: source
    params: {}
- name: get_page
  endpoint:
    path: /v1/page/{title}/bare
    method: GET
    data_selector: html_url
    params: {}
- name: get_page_with_html
  endpoint:
    path: /v1/page/{title}/with_html
    method: GET
    data_selector: html
    params: {}
- name: search_page
  endpoint:
    path: /v1/search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: search_title
  endpoint:
    path: /v1/search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: page
  endpoint:
    path: /v1/page
    method: POST
    data_selector: source
- name: page_create
  endpoint:
    path: /v1/page
    method: POST
    data_selector: source
    params: {}
- name: page_update
  endpoint:
    path: /v1/page/{title}
    method: PUT
    data_selector: source
    params: {}
- name: page_get
  endpoint:
    path: /v1/page/{title}/bare
    method: GET
    data_selector: source
    params: {}
- name: page_get_with_html
  endpoint:
    path: /v1/page/{title}/with_html
    method: GET
    data_selector: html
    params: {}
- name: file
  endpoint:
    path: /v1/file/{title}
    method: GET
    data_selector: file
    params: {}
- name: page_history
  endpoint:
    path: /v1/page/{title}/history
    method: GET
    data_selector: revisions
    params: {}
- name: page_history_counts
  endpoint:
    path: /v1/page/{title}/history/counts/{type}
    method: GET
    data_selector: count
    params: {}
- name: revision
  endpoint:
    path: /v1/revision/{id}/bare
    method: GET
    data_selector: revision
    params: {}
- name: revision_bare
  endpoint:
    path: /v1/revision/{id}/bare
    method: GET
    data_selector: revision
- name: revision_html
  endpoint:
    path: /v1/revision/{id}/html
    method: GET
    data_selector: revision
- name: revision_with_html
  endpoint:
    path: /v1/revision/{id}/with_html
    method: GET
    data_selector: revision
- name: Jupiter
  endpoint:
    path: /v1/page/Jupiter
    method: GET
    data_selector: source
- name: Jupiter HTML
  endpoint:
    path: /v1/page/Jupiter/html
    method: GET
    data_selector: html
- name: Jupiter language links
  endpoint:
    path: /v1/page/Jupiter/links/language
    method: GET
    data_selector: languages
- name: Jupiter media files
  endpoint:
    path: /v1/page/Jupiter/links/media
    method: GET
    data_selector: files
- name: Wikitext to HTML
  endpoint:
    path: /v1/transform/wikitext/to/html/Jupiter
    method: POST
    data_selector: html
- name: HTML to Wikitext
  endpoint:
    path: /v1/transform/html/to/wikitext/Jupiter
    method: POST
    data_selector: wikitext
- name: page_html
  endpoint:
    path: /page/{title}/html
    method: GET
    data_selector: HTML content
- name: get_page
  endpoint:
    path: /w/api.php
    method: GET
    data_selector: query.pages
    params:
      action: query
      format: json
- name: search_page
  endpoint:
    path: /search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '20'
- name: search_title
  endpoint:
    path: /search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '5'
- name: create_page
  endpoint:
    path: /page
    method: POST
    data_selector: source
- name: page
  endpoint:
    path: /page/{title}
    method: GET
    data_selector: source
- name: page_with_html
  endpoint:
    path: /page/{title}/with_html
    method: GET
    data_selector: html
- name: page_bare
  endpoint:
    path: /page/{title}/bare
    method: GET
    data_selector: html_url
- name: jupiter_page
  endpoint:
    path: /page/Jupiter
    method: GET
    data_selector: data
- name: jupiter_page_html
  endpoint:
    path: /page/Jupiter/html
    method: GET
    data_selector: data
- name: jupiter_language_links
  endpoint:
    path: /page/Jupiter/links/language
    method: GET
    data_selector: data
- name: jupiter_media_links
  endpoint:
    path: /page/Jupiter/links/media
    method: GET
    data_selector: data
- name: transform_wikitext
  endpoint:
    path: /transform/wikitext/to/html/Jupiter
    method: POST
    data_selector: data
- name: transform_html
  endpoint:
    path: /transform/html/to/wikitext/Jupiter
    method: POST
    data_selector: data
- name: revision_bare
  endpoint:
    path: /v1/revision/{id}/bare
    method: GET
    data_selector: data
- name: revision_html
  endpoint:
    path: /v1/revision/{id}/html
    method: GET
    data_selector: data
- name: revision_with_html
  endpoint:
    path: /v1/revision/{id}/with_html
    method: GET
    data_selector: data
- name: Get HTML
  endpoint:
    path: /w/api.php?action=parse&prop=text&page=Jupiter&format=json
    method: GET
    data_selector: parse.text
- name: Get metadata
  endpoint:
    path: /w/api.php?action=query&titles=Jupiter&prop=extracts&format=json
    method: GET
    data_selector: query.pages
- name: file
  endpoint:
    path: /file/{title}
    method: GET
    data_selector: file
    params: {}
- name: page_history
  endpoint:
    path: /page/{title}/history
    method: GET
    data_selector: revisions
    params: {}
- name: page_history_counts
  endpoint:
    path: /page/{title}/history/counts/{type}
    method: GET
    data_selector: count
    params: {}
- name: revision
  endpoint:
    path: revision/{id}/bare
    method: GET
    data_selector: revision
    params: {}
- name: create_page
  endpoint:
    path: /v1/page
    method: POST
    data_selector: source
    params: {}
- name: update_page
  endpoint:
    path: /v1/page/{title}
    method: PUT
    data_selector: source
    params: {}
- name: get_page
  endpoint:
    path: /v1/page/{title}/bare
    method: GET
    data_selector: html_url
    params: {}
- name: get_page_with_html
  endpoint:
    path: /v1/page/{title}/with_html
    method: GET
    data_selector: html
    params: {}
- name: get_page_source
  endpoint:
    path: /v1/page/{title}
    method: GET
    data_selector: source
    params: {}
- name: jupiter
  endpoint:
    path: /v1/page/Jupiter
    method: GET
    data_selector: data
- name: jupiter_html
  endpoint:
    path: /v1/page/Jupiter/html
    method: GET
    data_selector: data
- name: search_page
  endpoint:
    path: /search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: search_title
  endpoint:
    path: /search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: create_page
  endpoint:
    path: /page
    method: POST
    data_selector: source
- name: links
  endpoint:
    path: /v1/page/Jupiter/links/language
    method: GET
    data_selector: records
    params: {}
- name: create_page
  endpoint:
    path: /v1/page
    method: POST
    data_selector: source
- name: update_page
  endpoint:
    path: /v1/page/{title}
    method: PUT
    data_selector: source
- name: get_page
  endpoint:
    path: /v1/page/{title}/bare
    method: GET
    data_selector: source
- name: get_page_with_html
  endpoint:
    path: /v1/page/{title}/with_html
    method: GET
    data_selector: source
- name: get_page_source
  endpoint:
    path: /v1/page/{title}
    method: GET
    data_selector: source
- name: search_page
  endpoint:
    path: /v1/search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '20'
- name: search_title
  endpoint:
    path: /v1/search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '5'
- name: create_page
  endpoint:
    path: /v1/page
    method: POST
    data_selector: source
- name: jupiter_page_metadata
  endpoint:
    path: /v1/page/Jupiter
    method: GET
    data_selector: data
- name: jupiter_page_html
  endpoint:
    path: /v1/page/Jupiter/html
    method: GET
    data_selector: data
- name: jupiter_page_languages
  endpoint:
    path: /v1/page/Jupiter/links/language
    method: GET
    data_selector: data
- name: jupiter_page_media
  endpoint:
    path: /v1/page/Jupiter/links/media
    method: GET
    data_selector: data
- name: transform_wikitext_to_html
  endpoint:
    path: /v1/transform/wikitext/to/html/Jupiter
    method: POST
    data_selector: data
- name: transform_html_to_wikitext
  endpoint:
    path: /v1/transform/html/to/wikitext/Jupiter
    method: POST
    data_selector: data
- name: file
  endpoint:
    path: /file/{title}
    method: GET
    data_selector: file
    params: {}
- name: page_history
  endpoint:
    path: /page/{title}/history
    method: GET
    data_selector: revisions
    params: {}
- name: history_counts
  endpoint:
    path: /page/{title}/history/counts/{type}
    method: GET
    data_selector: count
    params: {}
- name: revision
  endpoint:
    path: /revision/{id}/bare
    method: GET
    data_selector: revision
    params: {}
- name: revision
  endpoint:
    path: /v1/revision/{id}
    method: GET
    data_selector: revision
- name: revision_html
  endpoint:
    path: /v1/revision/{id}/html
    method: GET
    data_selector: revision
- name: revision_with_html
  endpoint:
    path: /v1/revision/{id}/with_html
    method: GET
    data_selector: revision
- name: media_files
  endpoint:
    path: /v1/page/{title}/links/media
    method: GET
    data_selector: files
    params:
      title: required
- name: Get HTML
  endpoint:
    path: /action/render
    method: GET
    data_selector: HTML content
- name: Search
  endpoint:
    path: /action/query
    method: GET
    data_selector: search results
- name: search_pages
  endpoint:
    path: /v1/search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '20'
- name: autocomplete_page_title
  endpoint:
    path: /v1/search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '5'
- name: create_page
  endpoint:
    path: /v1/page
    method: POST
    data_selector: source
- name: jupiter_article
  endpoint:
    path: /page/Jupiter
    method: GET
    data_selector: ''
    params: {}
- name: jupiter_article_html
  endpoint:
    path: /page/Jupiter/html
    method: GET
    data_selector: ''
    params: {}
- name: jupiter_article_languages
  endpoint:
    path: /page/Jupiter/links/language
    method: GET
    data_selector: ''
    params: {}
- name: jupiter_article_media
  endpoint:
    path: /page/Jupiter/links/media
    method: GET
    data_selector: ''
    params: {}
- name: transform_wikitext_to_html
  endpoint:
    path: /transform/wikitext/to/html/Jupiter
    method: POST
    data_selector: ''
    params: {}
- name: transform_html_to_wikitext
  endpoint:
    path: /transform/html/to/wikitext/Jupiter
    method: POST
    data_selector: ''
    params: {}
- name: create_page
  endpoint:
    path: /v1/page
    method: POST
    data_selector: source
    params: {}
- name: update_page
  endpoint:
    path: /v1/page/{title}
    method: PUT
    data_selector: source
    params: {}
- name: get_page
  endpoint:
    path: /v1/page/{title}/bare
    method: GET
    data_selector: html_url
    params: {}
- name: get_page_with_html
  endpoint:
    path: /v1/page/{title}/with_html
    method: GET
    data_selector: html
    params: {}
- name: get_page_source
  endpoint:
    path: /v1/page/{title}
    method: GET
    data_selector: source
    params: {}
- name: file
  endpoint:
    path: /file/{title}
    method: GET
    data_selector: file
    params: {}
- name: page_history
  endpoint:
    path: /page/{title}/history
    method: GET
    data_selector: revisions
    params: {}
- name: page_history_counts
  endpoint:
    path: /page/{title}/history/counts/{type}
    method: GET
    data_selector: count
    params: {}
- name: revision
  endpoint:
    path: /revision/{id}/bare
    method: GET
    data_selector: revision
    params: {}
- name: convert_wikitext_to_html
  endpoint:
    path: /transform/wikitext/to/html/{title}
    method: POST
    data_selector: HTML document
- name: convert_html_to_wikitext
  endpoint:
    path: /transform/html/to/wikitext/{title}
    method: POST
    data_selector: wikitext document
- name: revision
  endpoint:
    path: /v1/revision/{id}
    method: GET
    data_selector: revision
- name: revision_html
  endpoint:
    path: /v1/revision/{id}/html
    method: GET
    data_selector: revision
- name: revision_with_html
  endpoint:
    path: /v1/revision/{id}/with_html
    method: GET
    data_selector: revision
- name: search
  endpoint:
    path: /w/api.php
    method: GET
    data_selector: searchresults
    params: {}
- name: get_page
  endpoint:
    path: /w/api.php
    method: GET
    data_selector: page
    params: {}
- name: search_page
  endpoint:
    path: /search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '20'
- name: search_title
  endpoint:
    path: /search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '5'
- name: create_page
  endpoint:
    path: /page
    method: POST
    data_selector: source
- name: jupiter
  endpoint:
    path: /v1/page/Jupiter
    method: GET
    data_selector: ''
- name: jupiter_html
  endpoint:
    path: /v1/page/Jupiter/html
    method: GET
    data_selector: ''
- name: jupiter_languages
  endpoint:
    path: /v1/page/Jupiter/links/language
    method: GET
    data_selector: ''
- name: jupiter_media
  endpoint:
    path: /v1/page/Jupiter/links/media
    method: GET
    data_selector: ''
- name: transform_wikitext_to_html
  endpoint:
    path: /v1/transform/wikitext/to/html/Jupiter
    method: POST
    data_selector: ''
- name: transform_html_to_wikitext
  endpoint:
    path: /v1/transform/html/to/wikitext/Jupiter
    method: POST
    data_selector: ''
- name: page_create
  endpoint:
    path: /v1/page
    method: POST
    data_selector: page
    params: {}
- name: page_update
  endpoint:
    path: /v1/page/{title}
    method: PUT
    data_selector: page
    params: {}
- name: page_get
  endpoint:
    path: /v1/page/{title}/bare
    method: GET
    data_selector: page
    params: {}
- name: page_get_html
  endpoint:
    path: /v1/page/{title}/with_html
    method: GET
    data_selector: page
    params: {}
- name: page_get_source
  endpoint:
    path: /v1/page/{title}
    method: GET
    data_selector: page
    params: {}
- name: file
  endpoint:
    path: /v1/file/{title}
    method: GET
    data_selector: file
- name: file
  endpoint:
    path: /file/{title}
    method: GET
    data_selector: file
- name: page_history
  endpoint:
    path: /page/{title}/history
    method: GET
    data_selector: revisions
- name: page_history_counts
  endpoint:
    path: /page/{title}/history/counts/{type}
    method: GET
- name: revision
  endpoint:
    path: /revision/{id}/bare
    method: GET
- name: search
  endpoint:
    path: /api.php
    method: GET
    data_selector: query.search
    params: {}
- name: get_page
  endpoint:
    path: /api.php
    method: GET
    data_selector: query.pages
    params: {}
- name: search_pages
  endpoint:
    path: /v1/search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: autocomplete_page_title
  endpoint:
    path: /v1/search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: create_page
  endpoint:
    path: /page
    method: POST
    data_selector: source
- name: revision_bare
  endpoint:
    path: /v1/revision/{id}/bare
    method: GET
    data_selector: data
- name: revision_html
  endpoint:
    path: /v1/revision/{id}/html
    method: GET
    data_selector: data
- name: revision_with_html
  endpoint:
    path: /v1/revision/{id}/with_html
    method: GET
    data_selector: data
- name: page_create
  endpoint:
    path: /v1/page
    method: POST
    data_selector: source
    params: {}
- name: page_update
  endpoint:
    path: /v1/page/{title}
    method: PUT
    data_selector: source
    params: {}
- name: page_get
  endpoint:
    path: /v1/page/{title}/bare
    method: GET
    data_selector: html_url
    params: {}
- name: page_get_with_html
  endpoint:
    path: /v1/page/{title}/with_html
    method: GET
    data_selector: html
    params: {}
- name: page_source
  endpoint:
    path: /v1/page/{title}
    method: GET
    data_selector: source
    params: {}
- name: file
  endpoint:
    path: /file/{title}
    method: GET
    data_selector: file
    params: {}
- name: page_history
  endpoint:
    path: /page/{title}/history
    method: GET
    data_selector: revisions
    params: {}
- name: page_history_counts
  endpoint:
    path: /page/{title}/history/counts/{type}
    method: GET
    data_selector: count
    params: {}
- name: revision
  endpoint:
    path: /revision/{id}/bare
    method: GET
    data_selector: revision
    params: {}
- name: revision
  endpoint:
    path: /v1/revision/{id}
    method: GET
    data_selector: revision
- name: revision_html
  endpoint:
    path: /v1/revision/{id}/html
    method: GET
    data_selector: revision
- name: revision_with_html
  endpoint:
    path: /v1/revision/{id}/with_html
    method: GET
    data_selector: revision
- name: page_history
  endpoint:
    path: /page/{title}/history
    method: GET
    data_selector: revisions
- name: page_jupiter
  endpoint:
    path: /page/Jupiter
    method: GET
    data_selector: source
- name: page_jupiter_html
  endpoint:
    path: /page/Jupiter/html
    method: GET
    data_selector: files
- name: page_jupiter_languages
  endpoint:
    path: /page/Jupiter/links/language
    method: GET
    data_selector: languages
- name: page_jupiter_media
  endpoint:
    path: /page/Jupiter/links/media
    method: GET
    data_selector: files
- name: transform_wikitext_to_html
  endpoint:
    path: /transform/wikitext/to/html/Jupiter
    method: POST
    data_selector: html
- name: transform_html_to_wikitext
  endpoint:
    path: /transform/html/to/wikitext/Jupiter
    method: POST
    data_selector: wikitext
- name: get_page
  endpoint:
    path: /w/api.php
    method: GET
    data_selector: query.pages
    params: {}
- name: search_page
  endpoint:
    path: /search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '20'
- name: search_title
  endpoint:
    path: /search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '5'
- name: create_page
  endpoint:
    path: /page
    method: POST
    data_selector: source
- name: create_page
  endpoint:
    path: /v1/page
    method: POST
    data_selector: source
    params: {}
- name: update_page
  endpoint:
    path: /v1/page/{title}
    method: PUT
    data_selector: source
    params: {}
- name: get_page
  endpoint:
    path: /v1/page/{title}/bare
    method: GET
    data_selector: html_url
    params: {}
- name: get_page_with_html
  endpoint:
    path: /v1/page/{title}/with_html
    method: GET
    data_selector: html
    params: {}
- name: get_page_source
  endpoint:
    path: /v1/page/{title}
    method: GET
    data_selector: source
    params: {}
- name: jupiter_page
  endpoint:
    path: /v1/page/Jupiter
    method: GET
    data_selector: data
- name: jupiter_page_html
  endpoint:
    path: /v1/page/Jupiter/html
    method: GET
    data_selector: data
- name: jupiter_language_links
  endpoint:
    path: /v1/page/Jupiter/links/language
    method: GET
    data_selector: data
- name: jupiter_media_links
  endpoint:
    path: /v1/page/Jupiter/links/media
    method: GET
    data_selector: data
- name: transform_wikitext_to_html
  endpoint:
    path: /v1/transform/wikitext/to/html/Jupiter
    method: POST
    data_selector: data
- name: transform_html_to_wikitext
  endpoint:
    path: /v1/transform/html/to/wikitext/Jupiter
    method: POST
    data_selector: data
- name: file
  endpoint:
    path: /file/{title}
    method: GET
    data_selector: file
    params: {}
- name: page_history
  endpoint:
    path: /page/{title}/history
    method: GET
    data_selector: revisions
    params: {}
- name: page_history_counts
  endpoint:
    path: /page/{title}/history/counts/{type}
    method: GET
    data_selector: count
    params: {}
- name: revision
  endpoint:
    path: /revision/{id}/bare
    method: GET
    data_selector: revision
    params: {}
- name: Search
  endpoint:
    path: /api.php?action=query&list=search
    method: GET
    data_selector: query.search
    params: {}
- name: Get page
  endpoint:
    path: /api.php?action=parse
    method: GET
    data_selector: parse
    params: {}
- name: revision
  endpoint:
    path: /v1/revision/{id}
    method: GET
    data_selector: ''
    params:
      id: required
- name: revision_html
  endpoint:
    path: /v1/revision/{id}/html
    method: GET
    data_selector: ''
    params:
      id: required
- name: revision_with_html
  endpoint:
    path: /v1/revision/{id}/with_html
    method: GET
    data_selector: ''
    params:
      id: required
- name: search_page
  endpoint:
    path: /search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: search_title
  endpoint:
    path: /search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: page
  endpoint:
    path: /page
    method: POST
    data_selector: source
- name: create_page
  endpoint:
    path: /v1/page
    method: POST
    data_selector: data
    params: {}
- name: update_page
  endpoint:
    path: /v1/page/{title}
    method: PUT
    data_selector: data
    params: {}
- name: get_page
  endpoint:
    path: /v1/page/{title}/bare
    method: GET
    data_selector: data
    params: {}
- name: get_page_with_html
  endpoint:
    path: /v1/page/{title}/with_html
    method: GET
    data_selector: data
    params: {}
- name: get_page_source
  endpoint:
    path: /v1/page/{title}
    method: GET
    data_selector: data
    params: {}
- name: get_file
  endpoint:
    path: /v1/file/{title}
    method: GET
    data_selector: file
    params: {}
- name: get_page_history
  endpoint:
    path: /v1/page/{title}/history
    method: GET
    data_selector: revisions
    params:
      filter: bot
- name: page_history_counts
  endpoint:
    path: /page/{title}/history/counts/{type}
    method: GET
    data_selector: History count object
    params: {}
- name: jupiter_page
  endpoint:
    path: /v1/page/Jupiter
    method: GET
    data_selector: data
- name: jupiter_page_html
  endpoint:
    path: /v1/page/Jupiter/html
    method: GET
    data_selector: data
- name: jupiter_page_languages
  endpoint:
    path: /v1/page/Jupiter/links/language
    method: GET
    data_selector: data
- name: jupiter_page_media
  endpoint:
    path: /v1/page/Jupiter/links/media
    method: GET
    data_selector: data
- name: transform_wikitext_to_html
  endpoint:
    path: /v1/transform/wikitext/to/html/Jupiter
    method: POST
    data_selector: data
- name: transform_html_to_wikitext
  endpoint:
    path: /v1/transform/html/to/wikitext/Jupiter
    method: POST
    data_selector: data
- name: search_page
  endpoint:
    path: /search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '20'
- name: search_title
  endpoint:
    path: /search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '5'
- name: create_page
  endpoint:
    path: /page
    method: POST
    data_selector: ''
    params: {}
- name: page_create
  endpoint:
    path: /v1/page
    method: POST
    data_selector: source
    params: {}
- name: page_update
  endpoint:
    path: /v1/page/{title}
    method: PUT
    data_selector: source
    params: {}
- name: page_get
  endpoint:
    path: /v1/page/{title}
    method: GET
    data_selector: source
    params: {}
- name: page_get_bare
  endpoint:
    path: /v1/page/{title}/bare
    method: GET
    data_selector: source
    params: {}
- name: page_get_with_html
  endpoint:
    path: /v1/page/{title}/with_html
    method: GET
    data_selector: source
    params: {}
- name: jupiter_page
  endpoint:
    path: /v1/page/Jupiter
    method: GET
    data_selector: source
- name: jupiter_page_html
  endpoint:
    path: /v1/page/Jupiter/html
    method: GET
    data_selector: html
- name: jupiter_language_links
  endpoint:
    path: /v1/page/Jupiter/links/language
    method: GET
    data_selector: languages
- name: jupiter_media_links
  endpoint:
    path: /v1/page/Jupiter/links/media
    method: GET
    data_selector: files
- name: transform_wikitext_to_html
  endpoint:
    path: /v1/transform/wikitext/to/html/Jupiter
    method: POST
    data_selector: rendered_html
- name: transform_html_to_wikitext
  endpoint:
    path: /v1/transform/html/to/wikitext/Jupiter
    method: POST
    data_selector: wikitext
- name: revision
  endpoint:
    path: /v1/revision/764138197/bare
    method: GET
    data_selector: ''
- name: file
  endpoint:
    path: /file/{title}
    method: GET
    data_selector: file
- name: page_history
  endpoint:
    path: /page/{title}/history
    method: GET
    data_selector: revisions
- name: page_history_counts
  endpoint:
    path: /page/{title}/history/counts/{type}
    method: GET
- name: get_file
  endpoint:
    path: /w/api.php
    method: GET
    data_selector: query
    params: {}
- name: search_page
  endpoint:
    path: /search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: search_title
  endpoint:
    path: /search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: create_page
  endpoint:
    path: /page
    method: POST
    data_selector: source
- name: create_page
  endpoint:
    path: /v1/page
    method: POST
    data_selector: null
    params: {}
- name: update_page
  endpoint:
    path: /v1/page/{title}
    method: PUT
    data_selector: null
    params: {}
- name: get_page
  endpoint:
    path: /v1/page/{title}/bare
    method: GET
    data_selector: null
    params: {}
- name: get_page_with_html
  endpoint:
    path: /v1/page/{title}/with_html
    method: GET
    data_selector: null
    params: {}
- name: get_page_source
  endpoint:
    path: /v1/page/{title}
    method: GET
    data_selector: null
    params: {}
- name: page
  endpoint:
    path: /page/{title}
    method: GET
    data_selector: source
    params: {}
- name: page_html
  endpoint:
    path: /page/{title}/html
    method: GET
    data_selector: html
    params: {}
- name: page_languages
  endpoint:
    path: /page/{title}/links/language
    method: GET
    data_selector: languages
    params: {}
- name: page_media
  endpoint:
    path: /page/{title}/links/media
    method: GET
    data_selector: files
    params: {}
- name: transform_wikitext_to_html
  endpoint:
    path: /transform/wikitext/to/html/{title}
    method: POST
    data_selector: html
    params: {}
- name: transform_html_to_wikitext
  endpoint:
    path: /transform/html/to/wikitext/{title}
    method: POST
    data_selector: wikitext
    params: {}
- name: revision
  endpoint:
    path: /v1/revision/{id}/bare
    method: GET
    data_selector: revision
    params:
      id: required
- name: revision
  endpoint:
    path: revision/{id}
    method: GET
    data_selector: Revision
- name: revision_html
  endpoint:
    path: revision/{id}/html
    method: GET
    data_selector: Revision
- name: revisions
  endpoint:
    path: /w/api.php?action=query&prop=revisions
    method: GET
    data_selector: query.revisions
    params: {}
- name: file
  endpoint:
    path: /file/{title}
    method: GET
    data_selector: file
    params: {}
- name: page_history
  endpoint:
    path: /page/{title}/history
    method: GET
    data_selector: revisions
    params: {}
- name: page_history_counts
  endpoint:
    path: /page/{title}/history/counts/{type}
    method: GET
    data_selector: count
    params: {}
- name: revision
  endpoint:
    path: /revision/{id}/bare
    method: GET
    data_selector: revision
    params: {}
- name: search_page
  endpoint:
    path: /search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: search_title
  endpoint:
    path: /search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: page
  endpoint:
    path: /page
    method: POST
    data_selector: ''
    params: {}
- name: create_page
  endpoint:
    path: /v1/page
    method: POST
    data_selector: source
    params: {}
- name: update_page
  endpoint:
    path: /v1/page/{title}
    method: PUT
    data_selector: source
    params: {}
- name: get_page
  endpoint:
    path: /v1/page/{title}/bare
    method: GET
    data_selector: source
    params: {}
- name: get_page_with_html
  endpoint:
    path: /v1/page/{title}/with_html
    method: GET
    data_selector: html
    params: {}
- name: get_page_source
  endpoint:
    path: /v1/page/{title}
    method: GET
    data_selector: source
    params: {}
- name: jupiter_article
  endpoint:
    path: /page/Jupiter
    method: GET
    data_selector: null
    params: {}
- name: jupiter_article_html
  endpoint:
    path: /page/Jupiter/html
    method: GET
    data_selector: null
    params: {}
- name: jupiter_article_languages
  endpoint:
    path: /page/Jupiter/links/language
    method: GET
    data_selector: null
    params: {}
- name: jupiter_article_media
  endpoint:
    path: /page/Jupiter/links/media
    method: GET
    data_selector: null
    params: {}
- name: transform_wikitext_to_html
  endpoint:
    path: /transform/wikitext/to/html/Jupiter
    method: POST
    data_selector: null
    params: {}
- name: transform_html_to_wikitext
  endpoint:
    path: /transform/html/to/wikitext/Jupiter
    method: POST
    data_selector: null
    params: {}
- name: get_revisions
  endpoint:
    path: /w/api.php
    method: GET
    data_selector: revisions
    params:
      action: query
      prop: revisions
      rvprop: content
      rvlimit: max
- name: get_file
  endpoint:
    path: /file/{title}
    method: GET
    data_selector: file
    params: {}
- name: get_page_history
  endpoint:
    path: /page/{title}/history
    method: GET
    data_selector: revisions
    params:
      filter: bot
      older_than: '939967546'
- name: get_page_history_counts
  endpoint:
    path: /page/{title}/history/counts/{type}
    method: GET
    data_selector: count
    params:
      from: '384955912'
      to: '406217369'
- name: get_revision
  endpoint:
    path: revision/{id}/bare
    method: GET
    data_selector: revision
    params: {}
- name: revision
  endpoint:
    path: /v1/revision/{id}
    method: GET
    data_selector: revision
- name: revision_html
  endpoint:
    path: /v1/revision/{id}/html
    method: GET
    data_selector: revision
- name: revision_with_html
  endpoint:
    path: /v1/revision/{id}/with_html
    method: GET
    data_selector: revision
- name: search_page
  endpoint:
    path: /search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '20'
- name: search_title
  endpoint:
    path: /search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '5'
- name: create_page
  endpoint:
    path: /page
    method: POST
- name: create_page
  endpoint:
    path: /page
    method: POST
    data_selector: source
    params: {}
- name: update_page
  endpoint:
    path: /page/{title}
    method: PUT
    data_selector: source
    params: {}
- name: get_page
  endpoint:
    path: /page/{title}/bare
    method: GET
    data_selector: html_url
    params: {}
- name: get_page_with_html
  endpoint:
    path: /page/{title}/with_html
    method: GET
    data_selector: html
    params: {}
- name: get_page_source
  endpoint:
    path: /page/{title}
    method: GET
    data_selector: source
    params: {}
- name: get_file
  endpoint:
    path: /file/{title}
    method: GET
    data_selector: file
    params: {}
- name: get_page_history
  endpoint:
    path: /page/{title}/history
    method: GET
    data_selector: revisions
    params:
      filter: bot
      older_than: '939967546'
- name: get_revision
  endpoint:
    path: /revision/{id}/bare
    method: GET
    data_selector: revision
    params: {}
- name: page
  endpoint:
    path: /page/{title}
    method: GET
    data_selector: page
    params:
      title: Jupiter
- name: page_html
  endpoint:
    path: /page/{title}/html
    method: GET
    data_selector: html
    params:
      title: Jupiter
- name: page_languages
  endpoint:
    path: /page/{title}/links/language
    method: GET
    data_selector: languages
    params:
      title: Jupiter
- name: page_media
  endpoint:
    path: /page/{title}/links/media
    method: GET
    data_selector: files
    params:
      title: Jupiter
- name: transform_wikitext_to_html
  endpoint:
    path: /transform/wikitext/to/html/{title}
    method: POST
    data_selector: html
    params:
      title: Jupiter
- name: transform_html_to_wikitext
  endpoint:
    path: /transform/html/to/wikitext/{title}
    method: POST
    data_selector: wikitext
    params:
      title: Jupiter
- name: revision
  endpoint:
    path: /v1/revision/764138197/with_html
    method: GET
    data_selector: html
- name: revision_bare
  endpoint:
    path: /v1/revision/{id}/bare
    method: GET
    data_selector: revision
    params:
      id: required
- name: revision_html
  endpoint:
    path: /v1/revision/{id}/html
    method: GET
    data_selector: revision
    params:
      id: required
- name: page_history_counts
  endpoint:
    path: /api.php?action=query&prop=revisions&rvlimit=1&rvprop=timestamp|user|comment&rvstartid=384955912&rvendid=406217369
    method: GET
    data_selector: query.pages
    params: {}
- name: search_page
  endpoint:
    path: /search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '20'
- name: search_title
  endpoint:
    path: /search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '5'
- name: create_page
  endpoint:
    path: /page
    method: POST
    data_selector: source
- name: page
  endpoint:
    path: /page/{title}
    method: GET
    data_selector: source
- name: page_html
  endpoint:
    path: /page/{title}/html
    method: GET
    data_selector: HTML
- name: page_languages
  endpoint:
    path: /page/{title}/links/language
    method: GET
    data_selector: languages
- name: page_media
  endpoint:
    path: /page/{title}/links/media
    method: GET
    data_selector: files
- name: create_page
  endpoint:
    path: /v1/page
    method: POST
    data_selector: source
    params: {}
- name: update_page
  endpoint:
    path: /v1/page/{title}
    method: PUT
    data_selector: source
    params:
      latest: latest.id
- name: get_page
  endpoint:
    path: /v1/page/{title}/bare
    method: GET
    data_selector: html_url
    params: {}
- name: get_page_with_html
  endpoint:
    path: /v1/page/{title}/with_html
    method: GET
    data_selector: html
    params: {}
- name: get_page_source
  endpoint:
    path: /v1/page/{title}
    method: GET
    data_selector: source
    params: {}
- name: file
  endpoint:
    path: /file/{title}
    method: GET
    data_selector: file
- name: page_history
  endpoint:
    path: /page/{title}/history
    method: GET
    data_selector: revisions
- name: page_history_counts
  endpoint:
    path: /page/{title}/history/counts/{type}
    method: GET
- name: revision
  endpoint:
    path: /revision/{id}/bare
    method: GET
- name: revision
  endpoint:
    path: /v1/revision/{id}
    method: GET
    data_selector: data
    params:
      id: required
- name: revision_html
  endpoint:
    path: /v1/revision/{id}/html
    method: GET
    data_selector: data
    params:
      id: required
- name: revision_with_html
  endpoint:
    path: /v1/revision/{id}/with_html
    method: GET
    data_selector: data
    params:
      id: required
- name: compare_revision
  endpoint:
    path: /v1/revision/{from}/compare/{to}
    method: GET
    data_selector: diff
- name: search_page
  endpoint:
    path: /search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: search_title
  endpoint:
    path: /search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: create_page
  endpoint:
    path: /page
    method: POST
    data_selector: source
- name: page_create
  endpoint:
    path: /v1/page
    method: POST
    data_selector: source
- name: page_update
  endpoint:
    path: /v1/page/{title}
    method: PUT
    data_selector: source
- name: page_get
  endpoint:
    path: /v1/page/{title}/bare
    method: GET
    data_selector: source
- name: page_get_with_html
  endpoint:
    path: /v1/page/{title}/with_html
    method: GET
    data_selector: html
- name: page_source
  endpoint:
    path: /v1/page/{title}
    method: GET
    data_selector: source
- name: page
  endpoint:
    path: /page/{title}
    method: GET
    data_selector: source
- name: page_html
  endpoint:
    path: /page/{title}/html
    method: GET
    data_selector: html
- name: page_languages
  endpoint:
    path: /page/{title}/links/language
    method: GET
    data_selector: languages
- name: page_media
  endpoint:
    path: /page/{title}/links/media
    method: GET
    data_selector: files
- name: transform_wikitext_to_html
  endpoint:
    path: /transform/wikitext/to/html/{title}
    method: POST
    data_selector: html
- name: transform_html_to_wikitext
  endpoint:
    path: /transform/html/to/wikitext/{title}
    method: POST
    data_selector: wikitext
- name: file
  endpoint:
    path: /file/{title}
    method: GET
    data_selector: file
    params: {}
- name: page_history
  endpoint:
    path: /page/{title}/history
    method: GET
    data_selector: revisions
    params: {}
- name: page_history_counts
  endpoint:
    path: /page/{title}/history/counts/{type}
    method: GET
    data_selector: count
    params: {}
- name: revision
  endpoint:
    path: /revision/{id}/bare
    method: GET
    data_selector: revision
    params: {}
- name: get_revision
  endpoint:
    path: /w/api.php
    method: GET
    data_selector: query.pages
    params: {}
- name: revision
  endpoint:
    path: /v1/revision/{id}
    method: GET
    data_selector: revision
- name: revision_html
  endpoint:
    path: /v1/revision/{id}/html
    method: GET
    data_selector: revision
- name: revision_with_html
  endpoint:
    path: /v1/revision/{id}/with_html
    method: GET
    data_selector: revision
- name: search_page
  endpoint:
    path: /v1/search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '20'
- name: search_title
  endpoint:
    path: /v1/search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '5'
- name: create_page
  endpoint:
    path: /page
    method: POST
    data_selector: source
- name: create_page
  endpoint:
    path: /v1/page
    method: POST
    data_selector: data
- name: update_page
  endpoint:
    path: /v1/page/{title}
    method: PUT
    data_selector: data
- name: get_page
  endpoint:
    path: /v1/page/{title}/bare
    method: GET
    data_selector: data
- name: get_page_with_html
  endpoint:
    path: /v1/page/{title}/with_html
    method: GET
    data_selector: data
- name: get_page_source
  endpoint:
    path: /v1/page/{title}
    method: GET
    data_selector: data
- name: page_jupiter
  endpoint:
    path: /v1/page/Jupiter
    method: GET
    data_selector: data
- name: page_jupiter_html
  endpoint:
    path: /v1/page/Jupiter/html
    method: GET
    data_selector: data
- name: page_jupiter_language_links
  endpoint:
    path: /v1/page/Jupiter/links/language
    method: GET
    data_selector: data
- name: page_jupiter_media_links
  endpoint:
    path: /v1/page/Jupiter/links/media
    method: GET
    data_selector: data
- name: transform_wikitext_to_html
  endpoint:
    path: /v1/transform/wikitext/to/html/Jupiter
    method: POST
    data_selector: data
- name: transform_html_to_wikitext
  endpoint:
    path: /v1/transform/html/to/wikitext/Jupiter
    method: POST
    data_selector: data
- name: file
  endpoint:
    path: /file/{title}
    method: GET
    data_selector: file
    params: {}
- name: page_history
  endpoint:
    path: /page/{title}/history
    method: GET
    data_selector: revisions
    params: {}
- name: page_history_counts
  endpoint:
    path: /page/{title}/history/counts/{type}
    method: GET
    data_selector: count
    params: {}
- name: revision
  endpoint:
    path: /revision/{id}/bare
    method: GET
    data_selector: revision
    params: {}
- name: get_html_revision
  endpoint:
    path: /action/revision
    method: GET
    data_selector: html
    params: {}
- name: revision
  endpoint:
    path: /v1/revision/{id}
    method: GET
    data_selector: revision
    params:
      id: required
- name: revision_html
  endpoint:
    path: /v1/revision/{id}/html
    method: GET
    data_selector: revision
    params:
      id: required
- name: revision_with_html
  endpoint:
    path: /v1/revision/{id}/with_html
    method: GET
    data_selector: revision
    params:
      id: required
- name: create_page
  endpoint:
    path: /page
    method: POST
    data_selector: source
    params: {}
- name: update_page
  endpoint:
    path: /page/{title}
    method: PUT
    data_selector: source
    params: {}
- name: get_page
  endpoint:
    path: /page/{title}/bare
    method: GET
    data_selector: source
    params: {}
- name: get_page_with_html
  endpoint:
    path: /page/{title}/with_html
    method: GET
    data_selector: html
    params: {}
- name: get_page_source
  endpoint:
    path: /page/{title}
    method: GET
    data_selector: source
    params: {}
- name: page
  endpoint:
    path: /page/{title}
    method: GET
    data_selector: source
- name: page_html
  endpoint:
    path: /page/{title}/html
    method: GET
    data_selector: html
- name: page_languages
  endpoint:
    path: /page/{title}/links/language
    method: GET
    data_selector: languages
- name: page_media
  endpoint:
    path: /page/{title}/links/media
    method: GET
    data_selector: files
- name: transform_wikitext_to_html
  endpoint:
    path: /transform/wikitext/to/html/{title}
    method: POST
    data_selector: html
- name: transform_html_to_wikitext
  endpoint:
    path: /transform/html/to/wikitext/{title}
    method: POST
    data_selector: wikitext
- name: revision
  endpoint:
    path: /v1/revision/{id}
    method: GET
    data_selector: revision
- name: revision_html
  endpoint:
    path: /v1/revision/{id}/html
    method: GET
    data_selector: revision
- name: revision_with_html
  endpoint:
    path: /v1/revision/{id}/with_html
    method: GET
    data_selector: revision
- name: get_revision
  endpoint:
    path: /
    method: GET
    data_selector: query.revisions
    params:
      action: query
      prop: revisions
      rvprop: content
      format: json
- name: search_page
  endpoint:
    path: /search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: search_title
  endpoint:
    path: /search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: create_page
  endpoint:
    path: /page
    method: POST
    data_selector: ''
    params: {}
- name: file
  endpoint:
    path: /file/{title}
    method: GET
    data_selector: file
    params: {}
- name: page_history
  endpoint:
    path: /page/{title}/history
    method: GET
    data_selector: revisions
    params: {}
- name: page_history_counts
  endpoint:
    path: /page/{title}/history/counts/{type}
    method: GET
    data_selector: count
    params: {}
- name: revision
  endpoint:
    path: /revision/{id}/bare
    method: GET
    data_selector: revision
    params: {}
- name: search_page
  endpoint:
    path: /v1/search/page
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: search_title
  endpoint:
    path: /v1/search/title
    method: GET
    data_selector: pages
    params:
      q: search terms
      limit: '50'
- name: create_page
  endpoint:
    path: /page
    method: POST
    data_selector: source
- name: create_page
  endpoint:
    path: /v1/page
    method: POST
    data_selector: source
    params: {}
- name: update_page
  endpoint:
    path: /v1/page/{title}
    method: PUT
    data_selector: source
    params: {}
- name: get_page
  endpoint:
    path: /v1/page/{title}/bare
    method: GET
    data_selector: html_url
    params: {}
- name: get_page_with_html
  endpoint:
    path: /v1/page/{title}/with_html
    method: GET
    data_selector: html
    params: {}
- name: get_page_source
  endpoint:
    path: /v1/page/{title}
    method: GET
    data_selector: source
    params: {}
- name: file
  endpoint:
    path: /file/{title}
    method: GET
    data_selector: file
- name: page_history
  endpoint:
    path: /page/{title}/history
    method: GET
    data_selector: revisions
- name: page_history_counts
  endpoint:
    path: /page/{title}/history/counts/{type}
    method: GET
- name: revision
  endpoint:
    path: /revision/{id}/bare
    method: GET
- name: page_jupiter
  endpoint:
    path: /v1/page/Jupiter
    method: GET
    data_selector: data
- name: page_jupiter_html
  endpoint:
    path: /v1/page/Jupiter/html
    method: GET
    data_selector: data
- name: page_jupiter_links_language
  endpoint:
    path: /v1/page/Jupiter/links/language
    method: GET
    data_selector: data
- name: page_jupiter_links_media
  endpoint:
    path: /v1/page/Jupiter/links/media
    method: GET
    data_selector: data
- name: transform_wikitext_to_html
  endpoint:
    path: /v1/transform/wikitext/to/html/Jupiter
    method: POST
    data_selector: data
- name: transform_html_to_wikitext
  endpoint:
    path: /v1/transform/html/to/wikitext/Jupiter
    method: POST
    data_selector: data
- name: revision
  endpoint:
    path: /v1/revision/{id}
    method: GET
    data_selector: revision
- name: revision_html
  endpoint:
    path: /v1/revision/{id}/html
    method: GET
    data_selector: revision
- name: revision_with_html
  endpoint:
    path: /v1/revision/{id}/with_html
    method: GET
    data_selector: revision
- name: mediawiki_download
  endpoint:
    path: /mediawiki-1.44.0.tar.gz
    method: GET
    data_selector: records
    params: {}
- name: latest_release
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.zip
    method: GET
    data_selector: download
    params: {}
- name: long_term_support
  endpoint:
    path: /mediawiki/1.43/mediawiki-1.43.3.zip
    method: GET
    data_selector: download
    params: {}
- name: legacy_long_term_support
  endpoint:
    path: /mediawiki/1.39/mediawiki-1.39.13.zip
    method: GET
    data_selector: download
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: live_statistics
  endpoint:
    path: /wiki/Development_statistics
    method: GET
    data_selector: statistics
    params: {}
- name: other_selected_statistics
  endpoint:
    path: /wiki/Development_statistics
    method: GET
    data_selector: statistics
    params: {}
- name: historical_statistics
  endpoint:
    path: /wiki/Development_statistics
    method: GET
    data_selector: statistics
    params: {}
- name: user_creation
  endpoint:
    path: /wiki/Special:Log/newusers
    method: GET
    data_selector: records
- name: block_log
  endpoint:
    path: /wiki/Special:Log/block
    method: GET
    data_selector: records
- name: page_translation_log
  endpoint:
    path: /wiki/Special:Log/pagetranslation
    method: GET
    data_selector: records
- name: user_creation_log
  endpoint:
    path: /api/user_creation_log
    method: GET
    data_selector: records
- name: Broken redirects
  endpoint:
    path: /wiki/Special:BrokenRedirects
    method: GET
- name: Dead-end pages
  endpoint:
    path: /wiki/Special:DeadendPages
    method: GET
- name: Double redirects
  endpoint:
    path: /wiki/Special:DoubleRedirects
    method: GET
- name: Lint errors
  endpoint:
    path: /wiki/Special:LintErrors
    method: GET
- name: Long pages
  endpoint:
    path: /wiki/Special:LongPages
    method: GET
- name: Oldest pages
  endpoint:
    path: /wiki/Special:AncientPages
    method: GET
- name: Orphaned pages
  endpoint:
    path: /wiki/Special:LonelyPages
    method: GET
- name: Pages not connected to items
  endpoint:
    path: /wiki/Special:UnconnectedPages
    method: GET
- name: Pages with the fewest revisions
  endpoint:
    path: /wiki/Special:FewestRevisions
    method: GET
- name: Pages without language links
  endpoint:
    path: /wiki/Special:WithoutInterwiki
    method: GET
- name: Protected pages
  endpoint:
    path: /wiki/Special:ProtectedPages
    method: GET
- name: Protected titles
  endpoint:
    path: /wiki/Special:ProtectedTitles
    method: GET
- name: Short pages
  endpoint:
    path: /wiki/Special:ShortPages
    method: GET
- name: Uncategorized categories
  endpoint:
    path: /wiki/Special:UncategorizedCategories
    method: GET
- name: Uncategorized files
  endpoint:
    path: /wiki/Special:UncategorizedFiles
    method: GET
- name: Uncategorized pages
  endpoint:
    path: /wiki/Special:UncategorizedPages
    method: GET
- name: Uncategorized templates
  endpoint:
    path: /wiki/Special:UncategorizedTemplates
    method: GET
- name: Unused categories
  endpoint:
    path: /wiki/Special:UnusedCategories
    method: GET
- name: Unused files
  endpoint:
    path: /wiki/Special:UnusedFiles
    method: GET
- name: Unused templates
  endpoint:
    path: /wiki/Special:UnusedTemplates
    method: GET
- name: Wanted categories
  endpoint:
    path: /wiki/Special:WantedCategories
    method: GET
- name: Wanted files
  endpoint:
    path: /wiki/Special:WantedFiles
    method: GET
- name: Wanted pages
  endpoint:
    path: /wiki/Special:WantedPages
    method: GET
- name: Wanted templates
  endpoint:
    path: /wiki/Special:WantedTemplates
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: recent_changes
  endpoint:
    path: /w/api.php
    method: GET
    data_selector: query.recentchanges
    params:
      limit: 50
- name: download_mediawiki
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
    data_selector: downloads
- name: download_mediawiki
  endpoint:
    path: /mediawiki/download
    method: GET
    data_selector: releases
- name: MediaWiki 1.44
  endpoint:
    path: /mediawiki/1.44
    method: GET
    data_selector: downloads
    params: {}
- name: MediaWiki 1.43.3
  endpoint:
    path: /mediawiki/1.43
    method: GET
    data_selector: downloads
    params: {}
- name: MediaWiki 1.39.13
  endpoint:
    path: /mediawiki/1.39
    method: GET
    data_selector: downloads
    params: {}
- name: download_zip
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.zip
    method: GET
- name: download_tar
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
- name: mediawiki_download
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
- name: MediaWiki 1.44.0
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
- name: MediaWiki 1.43.3
  endpoint:
    path: /mediawiki/1.43/mediawiki-1.43.3.tar.gz
    method: GET
- name: MediaWiki 1.39.13
  endpoint:
    path: /mediawiki/1.39/mediawiki-1.39.13.tar.gz
    method: GET
- name: mediawiki_download
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
    data_selector: downloads
    params: {}
- name: release_notes
  endpoint:
    path: /wiki/Special:MyLanguage/MediaWiki_1.44
    method: GET
    data_selector: records
    params: {}
- name: installation_guide
  endpoint:
    path: /wiki/Special:MyLanguage/Manual:Installation_guide
    method: GET
    data_selector: records
    params: {}
- name: upgrading
  endpoint:
    path: /wiki/Special:MyLanguage/Manual:Upgrading
    method: GET
    data_selector: records
    params: {}
- name: version_lifecycle
  endpoint:
    path: /wiki/Special:MyLanguage/Version_lifecycle
    method: GET
    data_selector: records
    params: {}
- name: mediawiki_download
  endpoint:
    path: /mediawiki/{version}/mediawiki-{version}.tar.gz
    method: GET
    data_selector: tarballs
    params: {}
- name: mediawiki_download
  endpoint:
    path: /mediawiki-1.44.0.tar.gz
    method: GET
    data_selector: download
- name: mediawiki_signature
  endpoint:
    path: /mediawiki-1.44.0.tar.gz.sig
    method: GET
    data_selector: signature
- name: MediaWiki 1.44.0
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
    data_selector: download
    params: {}
- name: MediaWiki 1.43.3
  endpoint:
    path: /mediawiki/1.43/mediawiki-1.43.3.tar.gz
    method: GET
    data_selector: download
    params: {}
- name: MediaWiki 1.39.13
  endpoint:
    path: /mediawiki/1.39/mediawiki-1.39.13.tar.gz
    method: GET
    data_selector: download
    params: {}
- name: MediaWiki 1.44.0
  endpoint:
    path: /mediawiki-1.44.0.tar.gz
    method: GET
    data_selector: records
- name: MediaWiki 1.43.3
  endpoint:
    path: /mediawiki-1.43.3.tar.gz
    method: GET
    data_selector: records
- name: MediaWiki 1.39.13
  endpoint:
    path: /mediawiki-1.39.13.tar.gz
    method: GET
    data_selector: records
- name: download_zip
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.zip
    method: GET
- name: download_targz
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
- name: download
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
    data_selector: download
- name: legacy_release_1.43.3
  endpoint:
    path: /mediawiki/1.43/mediawiki-1.43.3.tar.gz
    method: GET
    data_selector: download
- name: legacy_release_1.39.13
  endpoint:
    path: /mediawiki/1.39/mediawiki-1.39.13.tar.gz
    method: GET
    data_selector: download
- name: download_mediawiki
  endpoint:
    path: /mediawiki/download
    method: GET
    data_selector: downloads
    params: {}
- name: system_requirements
  endpoint:
    path: /mediawiki/system_requirements
    method: GET
    data_selector: requirements
    params: {}
- name: mediawiki_version_1_44
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.zip
    method: GET
    data_selector: zip
- name: mediawiki_version_1_43
  endpoint:
    path: /mediawiki/1.43/mediawiki-1.43.3.zip
    method: GET
    data_selector: zip
- name: mediawiki_version_1_39
  endpoint:
    path: /mediawiki/1.39/mediawiki-1.39.13.zip
    method: GET
    data_selector: zip
- name: version_1_44_0
  endpoint:
    path: https://releases.wikimedia.org/mediawiki/1.44/mediawiki-1.44.0.tar.gz.sig
    method: GET
    data_selector: sig
    params: {}
- name: version_1_43_3
  endpoint:
    path: https://releases.wikimedia.org/mediawiki/1.43/mediawiki-1.43.3.tar.gz.sig
    method: GET
    data_selector: sig
    params: {}
- name: version_1_39_13
  endpoint:
    path: https://releases.wikimedia.org/mediawiki/1.39/mediawiki-1.39.13.tar.gz.sig
    method: GET
    data_selector: sig
    params: {}
- name: MediaWiki 1.44.0 zip
  endpoint:
    path: https://releases.wikimedia.org/mediawiki/1.44/mediawiki-1.44.0.zip
    method: GET
    data_selector: download
    params: {}
- name: MediaWiki 1.44.0 tar.gz
  endpoint:
    path: https://releases.wikimedia.org/mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
    data_selector: download
    params: {}
- name: latest_version
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
- name: long_term_support
  endpoint:
    path: /mediawiki/1.43/mediawiki-1.43.3.tar.gz
    method: GET
- name: legacy_long_term_support
  endpoint:
    path: /mediawiki/1.39/mediawiki-1.39.13.tar.gz
    method: GET
- name: download
  endpoint:
    path: /wiki/Download
    method: GET
    data_selector: records
- name: MediaWiki Download
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
    data_selector: null
    params: {}
- name: download_mediawiki
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
- name: Download
  endpoint:
    path: /wiki/Download
    method: GET
    data_selector: records
- name: System requirements
  endpoint:
    path: /wiki/MediaWiki:Requirements
    method: GET
    data_selector: records
- name: download_zip
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.zip
    method: GET
- name: download_tar_gz
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
- name: download_zip
  endpoint:
    path: https://releases.wikimedia.org/mediawiki/1.44/mediawiki-1.44.0.zip
    method: GET
- name: download_tar_gz
  endpoint:
    path: https://releases.wikimedia.org/mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
- name: download_old_versions
  endpoint:
    path: https://releases.wikimedia.org/mediawiki/
    method: GET
- name: mediawiki_download
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
    data_selector: downloads
    params: {}
- name: download
  endpoint:
    path: /mediawiki/1.44
    method: GET
    data_selector: releases
    params: {}
- name: download_zip
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.zip
    method: GET
- name: download_tar_gz
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
- name: download
  endpoint:
    path: /wiki/Download
    method: GET
    data_selector: records
    params: {}
- name: MediaWiki 1.44.0
  endpoint:
    path: /mediawiki-1.44.0.tar.gz
    method: GET
- name: MediaWiki 1.43.3
  endpoint:
    path: /mediawiki-1.43.3.tar.gz
    method: GET
- name: MediaWiki 1.39.13
  endpoint:
    path: /mediawiki-1.39.13.tar.gz
    method: GET
- name: mediawiki_version_1.44
  endpoint:
    path: /mediawiki-1.44.0.tar.gz
    method: GET
- name: mediawiki_version_1.43
  endpoint:
    path: /mediawiki-1.43.3.tar.gz
    method: GET
- name: mediawiki_version_1.39
  endpoint:
    path: /mediawiki-1.39.13.tar.gz
    method: GET
- name: MediaWiki 1.44.0
  endpoint:
    path: /releases/mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
- name: MediaWiki 1.43.3
  endpoint:
    path: /releases/mediawiki/1.43/mediawiki-1.43.3.tar.gz
    method: GET
- name: MediaWiki 1.39.13
  endpoint:
    path: /releases/mediawiki/1.39/mediawiki-1.39.13.tar.gz
    method: GET
- name: download_zip
  endpoint:
    path: https://releases.wikimedia.org/mediawiki/1.44/mediawiki-1.44.0.zip
    method: GET
- name: download_tar_gz
  endpoint:
    path: https://releases.wikimedia.org/mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
- name: MediaWiki 1.44.0
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
    data_selector: records
- name: MediaWiki 1.43.3
  endpoint:
    path: /mediawiki/1.43/mediawiki-1.43.3.tar.gz
    method: GET
    data_selector: records
- name: MediaWiki 1.39.13
  endpoint:
    path: /mediawiki/1.39/mediawiki-1.39.13.tar.gz
    method: GET
    data_selector: records
- name: MediaWiki 1.44.0
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
    data_selector: release
- name: MediaWiki 1.43.3
  endpoint:
    path: /mediawiki/1.43/mediawiki-1.43.3.tar.gz
    method: GET
    data_selector: release
- name: MediaWiki 1.39.13
  endpoint:
    path: /mediawiki/1.39/mediawiki-1.39.13.tar.gz
    method: GET
    data_selector: release
- name: MediaWiki Download
  endpoint:
    path: /mediawiki/1.44
    method: GET
    data_selector: downloads
    params: {}
- name: MediaWiki
  endpoint:
    path: /mediawiki/1.44
    method: GET
    data_selector: ''
    params: {}
- name: MediaWiki 1.44.0
  endpoint:
    path: /mediawiki-1.44.0.tar.gz
    method: GET
    data_selector: tar.gz
- name: MediaWiki 1.44.0 .zip
  endpoint:
    path: /mediawiki-1.44.0.zip
    method: GET
    data_selector: zip
- name: MediaWiki 1.44.0
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
- name: MediaWiki 1.43.3
  endpoint:
    path: /mediawiki/1.43/mediawiki-1.43.3.tar.gz
    method: GET
- name: MediaWiki 1.39.13
  endpoint:
    path: /mediawiki/1.39/mediawiki-1.39.13.tar.gz
    method: GET
- name: mediawiki_1.44
  endpoint:
    path: /mediawiki-1.44.0.tar.gz
    method: GET
    data_selector: downloads
    params: {}
- name: mediawiki_1.44_zip
  endpoint:
    path: /mediawiki-1.44.0.zip
    method: GET
    data_selector: downloads
    params: {}
- name: mediawiki_download
  endpoint:
    path: /mediawiki/1.44
    method: GET
    data_selector: downloads
    params: {}
- name: mediawiki_download
  endpoint:
    path: /1.44/mediawiki-1.44.0.tar.gz
    method: GET
    data_selector: records
    params: {}
- name: mediawiki_archive
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: MediaWiki 1.44.0
  endpoint:
    path: https://releases.wikimedia.org/mediawiki/1.44/mediawiki-1.44.0.zip
    method: GET
- name: MediaWiki 1.43.3
  endpoint:
    path: https://releases.wikimedia.org/mediawiki/1.43/mediawiki-1.43.3.zip
    method: GET
- name: MediaWiki 1.39.13
  endpoint:
    path: https://releases.wikimedia.org/mediawiki/1.39/mediawiki-1.39.13.zip
    method: GET
- name: Download
  endpoint:
    path: /mediawiki/1.44
    method: GET
    data_selector: releases
    params: {}
- name: download_zip
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.zip
    method: GET
- name: download_tar
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
- name: mediawiki_download
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
- name: mediawiki_previous_versions
  endpoint:
    path: /mediawiki/
    method: GET
- name: MediaWiki
  endpoint:
    path: /wiki/Special:MyLanguage/MediaWiki_1.44
    method: GET
    data_selector: release_notes
    params: {}
- name: Download MediaWiki
  endpoint:
    path: /releases.wikimedia.org/mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
- name: download_zip
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.zip
    method: GET
    data_selector: records
    params: {}
- name: download_tar_gz
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
    data_selector: records
    params: {}
- name: download_zip
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.zip
    method: GET
- name: download_tar_gz
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.tar.gz
    method: GET
- name: SQLite
  endpoint:
    path: /wiki/Special:MyLanguage/Manual:SQLite
    method: GET
- name: MariaDB/MySQL
  endpoint:
    path: /wiki/Special:MyLanguage/Manual:MariaDB
    method: GET
- name: PostgreSQL
  endpoint:
    path: /wiki/Special:MyLanguage/Manual:PostgreSQL
    method: GET
- name: latest_release
  endpoint:
    path: /mediawiki/1.44/mediawiki-1.44.0.zip
    method: GET
    data_selector: download_link
- name: legacy_releases
  endpoint:
    path: /mediawiki/1.39/mediawiki-1.39.13.zip
    method: GET
    data_selector: download_link
- name: mediawiki_download
  endpoint:
    path: /mediawiki-1.44.0.tar.gz
    method: GET
    data_selector: downloads
    params: {}
- name: mediawiki_legacy_release
  endpoint:
    path: /mediawiki-1.43.3.tar.gz
    method: GET
    data_selector: downloads
    params: {}
- name: mediawiki_legacy_lts_release
  endpoint:
    path: /mediawiki-1.39.13.tar.gz
    method: GET
    data_selector: downloads
    params: {}
- name: runJobs
  endpoint:
    path: /wiki/Special:MyLanguage/Manual:RunJobs.php
    method: GET
    data_selector: ''
    params: {}
- name: backUpExistingFiles
  endpoint:
    path: /wiki/Special:MyLanguage/Manual:Backing_up_a_wiki
    method: GET
    data_selector: ''
    params: {}
- name: updateScript
  endpoint:
    path: /wiki/Special:MyLanguage/Manual:update.php
    method: GET
    data_selector: ''
    params: {}
- name: mediawiki_core
  endpoint:
    path: /mediawiki
    method: GET
    data_selector: data
- name: mediawiki_skins
  endpoint:
    path: /mediawiki/skins/Vector
    method: GET
    data_selector: data
- name: mediawiki_core
  endpoint:
    path: /api.php
    method: GET
    data_selector: query
    params: {}
- name: rename_user
  endpoint:
    path: /wiki/Special:RenameUser
    method: GET
    data_selector: records
    params: {}
- name: siteinfo
  endpoint:
    path: /api.php?action=query&meta=siteinfo
    method: GET
    data_selector: query
    params: {}
- name: list_blocks
  endpoint:
    path: /api.php?action=list&list=blocks
    method: GET
    data_selector: blocks
    params:
      parsedreason: true
- name: installation_requirements
  endpoint:
    path: /wiki/Manual:Installation_requirements
    method: GET
    data_selector: content
    params: {}
- name: download
  endpoint:
    path: /wiki/Download
    method: GET
    data_selector: content
    params: {}
- name: extract
  endpoint:
    path: /wiki/Manual:Installing_MediaWiki#Extract_the_MediaWiki_software
    method: GET
    data_selector: content
    params: {}
- name: upload
  endpoint:
    path: /wiki/Manual:Installing_MediaWiki#Upload_files_to_your_web_server
    method: GET
    data_selector: content
    params: {}
- name: setup_database
  endpoint:
    path: /wiki/Manual:Installing_MediaWiki#Set_up_the_database
    method: GET
    data_selector: content
    params: {}
- name: run_installation_script
  endpoint:
    path: /wiki/Manual:Installing_MediaWiki#Run_the_installation_script
    method: GET
    data_selector: content
    params: {}
- name: further_configuration
  endpoint:
    path: /wiki/Manual:System_administration#Configuration
    method: GET
    data_selector: content
    params: {}
- name: database
  endpoint:
    path: /wiki/Manual:MySQL
    method: GET
- name: Example
  endpoint:
    path: /wiki/Manual:MySQL
    method: GET
    data_selector: data
    params: {}
- name: Chris Steipp
  endpoint:
    path: /pgp/ChrisSteipp
    method: GET
- name: Mark Hershberger
  endpoint:
    path: /pgp/MarkHershberger
    method: GET
- name: Markus Glaser
  endpoint:
    path: /pgp/MarkusGlaser
    method: GET
- name: software_bundles
  endpoint:
    path: /wiki/Software_bundles
    method: GET
    data_selector: content
    params: {}
- name: mediawiki
  endpoint:
    path: /wiki/MediaWiki
    method: GET
    data_selector: records
    params: {}
- name: mediawiki_core
  endpoint:
    path: /r/mediawiki/core
    method: GET
    data_selector: repository
    params: {}
- name: mediawiki_extensions
  endpoint:
    path: /r/admin/repos/q/filter:mediawiki/extensions
    method: GET
    data_selector: extensions
    params: {}
- name: mediawiki_core
  endpoint:
    path: /r/mediawiki/core.git
    method: GET
    data_selector: repository
    params: {}
- name: mediawiki_extensions
  endpoint:
    path: /admin/repos/q/filter:mediawiki/extensions
    method: GET
    data_selector: extensions
    params: {}
- name: page
  endpoint:
    path: /page
    method: GET
    data_selector: page
- name: MediaWiki core
  endpoint:
    path: /wiki/Special:MyLanguage/Manual:What_is_MediaWiki
    method: GET
- name: MediaWiki extensions
  endpoint:
    path: /wiki/Special:MyLanguage/MediaWiki_extensions
    method: GET
- name: MediaWiki Docker
  endpoint:
    path: /wiki/Special:MyLanguage/MediaWiki-Docker
    method: GET
- name: Local development quickstart
  endpoint:
    path: /wiki/Special:MyLanguage/Local_development_quickstart
    method: GET
- name: MediaWiki Vagrant
  endpoint:
    path: /wiki/Special:MyLanguage/MediaWiki-Vagrant
    method: GET
- name: Phabricator
  endpoint:
    path: /wiki/Special:MyLanguage/Phabricator
    method: GET
    data_selector: tasks
    params: {}
- name: MediaWiki core
  endpoint:
    path: /wiki/Special:MyLanguage/Manual:What_is_MediaWiki
    method: GET
    data_selector: content
- name: Wikimedia
  endpoint:
    path: /wiki/Special:MyLanguage/Differences_between_Wikipedia,_Wikimedia,_MediaWiki,_and_wiki
    method: GET
    data_selector: content
- name: MediaWiki Docker
  endpoint:
    path: /wiki/Special:MyLanguage/MediaWiki-Docker
    method: GET
    data_selector: content
- name: Local development quickstart
  endpoint:
    path: /wiki/Special:MyLanguage/Local_development_quickstart
    method: GET
    data_selector: content
- name: MediaWiki Vagrant
  endpoint:
    path: /wiki/Special:MyLanguage/MediaWiki-Vagrant
    method: GET
    data_selector: content
- name: Gerrit Tutorial
  endpoint:
    path: /wiki/Special:MyLanguage/Gerrit/Tutorial
    method: GET
    data_selector: content
- name: ProjectAbout
  endpoint:
    path: /wiki/Project:About
    method: GET
    data_selector: content
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: MediaWiki Errors
  endpoint:
    path: /wiki/Special:MyLanguage/Manual:Common_errors_and_symptoms
    method: GET
    data_selector: errors
    params: {}
- name: api
  endpoint:
    path: /w/api.php
    method: GET
- name: PageImages
  endpoint:
    path: /extensions/PageImages
    method: GET
    data_selector: records
    params: {}
- name: JsonConfig
  endpoint:
    path: /services/data/vXX.X/sobjects/JsonConfig
    method: GET
    data_selector: records
- name: Babel
  endpoint:
    path: /extensions/Babel
    method: GET
- name: CategoryTree
  endpoint:
    path: /extensions/CategoryTree
    method: GET
- name: CharInsert
  endpoint:
    path: /extensions/CharInsert
    method: GET
- name: Chart
  endpoint:
    path: /extensions/Chart
    method: GET
- name: Cite
  endpoint:
    path: /extensions/Cite
    method: GET
- name: DynamicPageList
  endpoint:
    path: /extensions/DynamicPageList
    method: GET
- name: EasyTimeline
  endpoint:
    path: /extensions/EasyTimeline
    method: GET
- name: ImageMap
  endpoint:
    path: /extensions/ImageMap
    method: GET
- name: InputBox
  endpoint:
    path: /extensions/InputBox
    method: GET
- name: Kartographer
  endpoint:
    path: /extensions/Kartographer
    method: GET
- name: LabeledSectionTransclusion
  endpoint:
    path: /extensions/LabeledSectionTransclusion
    method: GET
- name: Math
  endpoint:
    path: /extensions/Math
    method: GET
- name: ParserFunctions
  endpoint:
    path: /extensions/ParserFunctions
    method: GET
- name: Phonos
  endpoint:
    path: /extensions/Phonos
    method: GET
- name: Poem
  endpoint:
    path: /extensions/Poem
    method: GET
- name: RSS
  endpoint:
    path: /extensions/RSS
    method: GET
- name: Score
  endpoint:
    path: /extensions/Score
    method: GET
- name: Scribunto
  endpoint:
    path: /extensions/Scribunto
    method: GET
- name: SyntaxHighlight
  endpoint:
    path: /extensions/SyntaxHighlight
    method: GET
- name: TemplateData
  endpoint:
    path: /extensions/TemplateData
    method: GET
- name: TemplateStyles
  endpoint:
    path: /extensions/TemplateStyles
    method: GET
- name: WikiHiero
  endpoint:
    path: /extensions/WikiHiero
    method: GET
- name: IndexPager
  endpoint:
    path: /includes/pager/Pager.php
    method: GET
    data_selector: pager_class
    params: {}
- name: UserTalk
  endpoint:
    path: /User_talk:Ciencia_Al_Poder
    method: GET
    data_selector: records
- name: Gadget-site.css
  endpoint:
    path: /w/index.php?title=MediaWiki:Gadget-site.css
    method: GET
    data_selector: records
- name: Common.js
  endpoint:
    path: /w/index.php?title=Mediawiki:Common.js
    method: GET
    data_selector: records
- name: Community Insights Survey
  endpoint:
    path: /surveys/community_insights
    method: GET
    data_selector: responses
- name: grabFiles
  endpoint:
    path: /grabFiles.php
    method: POST
    data_selector: files
    params: {}
- name: Support desk
  endpoint:
    path: /w/index.php?title=User_talk:Ciencia_Al_Poder&action=edit&section=75
    method: GET
- name: Manual:MWDumper
  endpoint:
    path: /wiki/Manual:MWDumper
    method: GET
- name: Yugipedia
  endpoint:
    path: /wiki/User_talk:Ciencia_Al_Poder&action=edit&section=77
    method: GET
- name: Unblocking a possible candidate of outreach programs
  endpoint:
    path: /User_talk:Ciencia_Al_Poder&action=edit&section=78
    method: GET
- name: Make these pages available for translation
  endpoint:
    path: /User_talk:Ciencia_Al_Poder&action=edit&section=79
    method: GET
- name: Hello!
  endpoint:
    path: /User_talk:Ciencia_Al_Poder&action=edit&section=80
    method: GET
- name: Referring
  endpoint:
    path: /User_talk:Ciencia_Al_Poder&action=edit&section=81
    method: GET
- name: Referral
  endpoint:
    path: /User_talk:Ciencia_Al_Poder&action=edit&section=82
    method: GET
- name: settings
  endpoint:
    path: /wiki/Manual:$wgConf
    method: GET
- name: settings
  endpoint:
    path: /$wgConf->settings
    method: GET
    data_selector: settings
    params: {}
- name: foreignFileRepos
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: Tabular.JsonConfig
  endpoint:
    path: /Tabular.JsonConfig
    method: GET
    data_selector: records
    params: {}
- name: discussion_tools
  endpoint:
    path: /wiki/Special:MyLanguage/Help:DiscussionTools
    method: GET
    data_selector: results
    params: {}
- name: deployment_status
  endpoint:
    path: /deployment/status
    method: GET
    data_selector: status
    params: {}
- name: user_testing
  endpoint:
    path: /user/testing
    method: GET
    data_selector: tests
    params: {}
- name: usability_test
  endpoint:
    path: /wiki/Talk_pages_project/Replying
    method: GET
    data_selector: summary
    params: {}
- name: user_talk
  endpoint:
    path: /w/index.php?title=User_talk:Lofty_abyss
    method: GET
    data_selector: comments
    params: {}
- name: contributions
  endpoint:
    path: /w/api.php?action=feedcontributions&user=TheDJ&feedformat=atom
    method: GET
    data_selector: feed
    params: {}
- name: user_talk
  endpoint:
    path: /User_talk:Ammarpad
    method: GET
    data_selector: comments
    params: {}
- name: temporary_account
  endpoint:
    path: /wiki/Help:Temporary_accounts
    method: GET
    data_selector: content
- name: categorytree
  endpoint:
    path: /wiki/Special:MyLanguage/Extension:Categorytree
    method: null
    data_selector: null
    params: {}
- name: math
  endpoint:
    path: /wiki/Special:MyLanguage/Extension:Math
    method: null
    data_selector: null
    params: {}
- name: charinsert
  endpoint:
    path: /wiki/Special:MyLanguage/Extension:Charinsert
    method: null
    data_selector: null
    params: {}
- name: gallery
  endpoint:
    path: /wiki/Special:MyLanguage/Core
    method: null
    data_selector: null
    params: {}
- name: graph
  endpoint:
    path: /wiki/Special:MyLanguage/Extension:Graph
    method: null
    data_selector: null
    params: {}
- name: hiero
  endpoint:
    path: /wiki/Special:MyLanguage/Extension:Hiero
    method: null
    data_selector: null
    params: {}
- name: imagemap
  endpoint:
    path: /wiki/Special:MyLanguage/Extension:Imagemap
    method: null
    data_selector: null
    params: {}
- name: inputbox
  endpoint:
    path: /wiki/Special:MyLanguage/Extension:Inputbox
    method: null
    data_selector: null
    params: {}
- name: kartographer
  endpoint:
    path: /wiki/Special:MyLanguage/Extension:Kartographer
    method: null
    data_selector: null
    params: {}
- name: math
  endpoint:
    path: /wiki/Special:MyLanguage/Extension:Math
    method: null
    data_selector: null
    params: {}
- name: poem
  endpoint:
    path: /wiki/Special:MyLanguage/Extension:Poem
    method: null
    data_selector: null
    params: {}
- name: syntaxhighlight
  endpoint:
    path: /wiki/Special:MyLanguage/Extension:Syntaxhighlight
    method: null
    data_selector: null
    params: {}
- name: templatedata
  endpoint:
    path: /wiki/Special:MyLanguage/Extension:Templatedata
    method: null
    data_selector: null
    params: {}
- name: templatestyles
  endpoint:
    path: /wiki/Special:MyLanguage/Extension:TemplateStyles
    method: null
    data_selector: null
    params: {}
- name: timeline
  endpoint:
    path: /wiki/Special:MyLanguage/Extension:Timeline
    method: null
    data_selector: null
    params: {}
- name: ReplaceText
  endpoint:
    path: /wiki/Special:ReplaceText
    method: GET
    data_selector: results
    params: {}
- name: ReplaceText
  endpoint:
    path: /wiki/Special:ReplaceText
    method: GET
    data_selector: records
    params: {}
- name: replaceAll
  endpoint:
    path: /extensions/ReplaceText/maintenance/replaceAll.php
    method: POST
- name: mediawiki_installation
  endpoint:
    path: /installation/mediawiki
    method: GET
    data_selector: installation_steps
    params: {}
- name: what_links_here
  endpoint:
    path: /wiki/Special:WhatLinksHere/Help:What_links_here
    method: GET
    data_selector: links
    params: {}
- name: Special:Export
  endpoint:
    path: /wiki/Special:Export
    method: GET
    data_selector: articles
    params: {}
- name: Extension:Multi-select Namespace Search
  endpoint:
    path: /wiki/Extension:Multi-select_Namespace_Search
    method: GET
    data_selector: namespace_search
    params: {}
- name: Extension:GroupPortal
  endpoint:
    path: /wiki/Extension:GroupPortal
    method: GET
    data_selector: group_portal
    params: {}
- name: Extension:Multi-Category Search
  endpoint:
    path: /wiki/Extension:Multi-Category_Search
    method: GET
    data_selector: multi_category_search
    params: {}
- name: Extension:Review
  endpoint:
    path: /wiki/Extension:Review
    method: GET
    data_selector: review
    params: {}
- name: Extension:FlaggedRevs
  endpoint:
    path: /wiki/Extension:FlaggedRevs
    method: GET
    data_selector: flagged_revisions
    params: {}
- name: User Sidebar
  endpoint:
    path: /api/user/sidebar
    method: GET
- name: Automatic Talk page Maker
  endpoint:
    path: /api/talk/page/maker
    method: GET
- name: Accepted Projects
  endpoint:
    path: /w/index.php?title=Google_Summer_of_Code/2017&action=edit&section=1
    method: GET
    data_selector: records
- name: Recommended Steps for Current Students
  endpoint:
    path: /w/index.php?title=Google_Summer_of_Code/2017&action=edit&section=2
    method: GET
    data_selector: records
- name: Coding Period
  endpoint:
    path: /w/index.php?title=Google_Summer_of_Code/2017&action=edit&section=3
    method: GET
    data_selector: records
- name: user
  endpoint:
    path: /w/api.php
    method: GET
    data_selector: query
- name: attacks
  endpoint:
    path: /wiki/User:MZMcBride/Attacks
    method: GET
    data_selector: content
    params: {}
- name: LocalSettings
  endpoint:
    path: /wiki/Manual:LocalSettings.php
    method: GET
    data_selector: records
- name: Config script
  endpoint:
    path: /wiki/Manual:Config_script
    method: GET
    data_selector: records
- name: Short URL
  endpoint:
    path: /wiki/Manual:Short_URL
    method: GET
    data_selector: records
- name: DBname
  endpoint:
    path: /wiki/Manual:$wgDBname
    method: GET
    data_selector: records
- name: DBprefix
  endpoint:
    path: /wiki/Manual:$wgDBprefix
    method: GET
    data_selector: records
- name: wiki
  endpoint:
    path: /w/api.php
    method: GET
    data_selector: query
- name: wiki1_settings
  endpoint:
    path: /wiki/wiki1
    method: GET
    data_selector: settings
- name: wiki2_settings
  endpoint:
    path: /wiki/wiki2
    method: GET
    data_selector: settings
- name: langlinks
  endpoint:
    path: /action/query
    method: GET
    data_selector: query.pages
    params:
      prop: langlinks
      llprop: langname
      lllimit: '20'
      titles: Main Page
      action: query
- name: pageviews
  endpoint:
    path: /pageviews
    method: GET
    data_selector: items
    params: {}
- name: site
  endpoint:
    path: /w/api.php
    method: GET
    data_selector: query
- name: page_generators
  endpoint:
    path: /wiki/Manual:Pywikibot/Cookbook/Page_generators
    method: GET
    data_selector: page_generators
    params: {}
- name: working_with_users
  endpoint:
    path: /wiki/Manual:Pywikibot/Cookbook/Working_with_users
    method: GET
    data_selector: working_with_users
    params: {}
- name: working_with_page_histories
  endpoint:
    path: /wiki/Manual:Pywikibot/Cookbook/Working_with_page_histories
    method: GET
    data_selector: working_with_page_histories
    params: {}
- name: page
  endpoint:
    path: /w/index.php
    method: GET
    data_selector: articles
    params: {}
- name: category
  endpoint:
    path: /w/index.php
    method: GET
    data_selector: categories
    params: {}
- name: revisions
  endpoint:
    path: /w/api.php?action=query&format=json&prop=revisions
    method: GET
    data_selector: query.pages.revisions
    params: {}
- name: FilePage
  endpoint:
    path: /pywikibot/page/FilePage
    method: GET
    data_selector: file_info
- name: User
  endpoint:
    path: /pywikibot/page/User
    method: GET
    data_selector: user_info
- name: categories
  endpoint:
    path: /w/api.php
    method: GET
    data_selector: categories
    params: {}
- name: lists
  endpoint:
    path: /w/api.php
    method: GET
    data_selector: lists
    params: {}
- name: watchlist
  endpoint:
    path: /api/watchlist
    method: GET
- name: ActiveUsers
  endpoint:
    path: /wiki/Special:ActiveUsers
    method: GET
    data_selector: active_users
    params: {}
- name: AutoblockList
  endpoint:
    path: /wiki/Special:AutoblockList
    method: GET
    data_selector: autoblock_list
    params: {}
- name: BlockList
  endpoint:
    path: /wiki/Special:BlockList
    method: GET
    data_selector: block_list
    params: {}
- name: Contribs
  endpoint:
    path: /wiki/Special:Contribs
    method: GET
    data_selector: contributions
    params: {}
- name: EmailUser
  endpoint:
    path: /wiki/Special:EmailUser
    method: GET
    data_selector: email_user
    params: {}
- name: ListUsers
  endpoint:
    path: /wiki/Special:ListUsers
    method: GET
    data_selector: list_users
    params: {}
- name: AllMessages
  endpoint:
    path: /wiki/Special:AllMessages
    method: GET
    data_selector: messages
    params: {}
- name: ApiSandbox
  endpoint:
    path: /wiki/Special:ApiSandbox
    method: GET
    data_selector: sandbox
    params: {}
- name: BookSources
  endpoint:
    path: /wiki/Special:BookSources
    method: GET
    data_selector: book_sources
    params: {}
- name: ExpandTemplates
  endpoint:
    path: /wiki/Special:ExpandTemplates
    method: GET
    data_selector: expanded_templates
    params: {}
- name: Gadgets
  endpoint:
    path: /wiki/Special:Gadgets
    method: GET
    data_selector: gadgets
    params: {}
- name: GadgetUsage
  endpoint:
    path: /wiki/Special:GadgetUsage
    method: GET
    data_selector: gadget_usage
    params: {}
- name: Interwiki
  endpoint:
    path: /wiki/Special:Interwiki
    method: GET
    data_selector: interwiki
    params: {}
- name: NamespaceInfo
  endpoint:
    path: /wiki/Special:NamespaceInfo
    method: GET
    data_selector: namespace_info
    params: {}
- name: SpecialPages
  endpoint:
    path: /wiki/Special:SpecialPages
    method: GET
    data_selector: special_pages
    params: {}
- name: Statistics
  endpoint:
    path: /wiki/Special:Statistics
    method: GET
    data_selector: statistics
    params: {}
- name: Version
  endpoint:
    path: /wiki/Special:Version
    method: GET
    data_selector: version_info
    params: {}
- name: allusers
  endpoint:
    path: /action=query
    method: GET
    data_selector: query.allusers
- name: userinfo
  endpoint:
    path: /action/query
    method: GET
    data_selector: query.userinfo
- name: pages
  endpoint:
    path: /w/api.php
    method: GET
    data_selector: query.pages
    params:
      incremental: lastrevid
- name: snapshots
  endpoint:
    path: /mediawiki-core/master
    method: GET
    data_selector: records
- name: Gadget-LocalLiveClock
  endpoint:
    path: /wiki/MediaWiki:Gadget-LocalLiveClock.js
    method: GET
    data_selector: records
    params: {}
- name: Gadget-contribsrange
  endpoint:
    path: /wiki/MediaWiki:Gadget-contribsrange.js
    method: GET
    data_selector: records
    params: {}
- name: user_talk
  endpoint:
    path: /w/index.php
    method: GET
    data_selector: comments
- name: page_translation
  endpoint:
    path: /w/index.php?title=Help:Extension:Translate/Page_translation_administration
    method: GET
    data_selector: records
    params: {}
- name: status_updates
  endpoint:
    path: /wiki/Evaluating_and_Improving_MediaWiki_web_API_client_libraries/Status_updates
    method: GET
    data_selector: records
    params: {}
- name: user_talk
  endpoint:
    path: /User_talk:Shirayuki/Archive_1
    method: GET
    data_selector: records
- name: tech_news
  endpoint:
    path: /w/api.php?action=featuredfeed&feed=technews&feedformat=atom
    method: GET
    data_selector: items
    params: {}
- name: tech_news_rss
  endpoint:
    path: /w/api.php?action=featuredfeed&feed=technews&feedformat=rss
    method: GET
    data_selector: items
    params: {}
- name: mediawiki_version
  endpoint:
    path: /wiki/MediaWiki_1.24
    method: GET
    data_selector: version
    params: {}
- name: tech_news
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News
    method: GET
    data_selector: records
    params: {}
- name: tech_news
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News
    method: GET
    data_selector: records
- name: VisualEditor
  endpoint:
    path: /api/visualeditor
    method: GET
    data_selector: records
- name: tech_news_2015_32
  endpoint:
    path: /Tech/News/2015/32
    method: GET
    data_selector: records
- name: tech_news_2015_33
  endpoint:
    path: /Tech/News/2015/33
    method: GET
    data_selector: records
- name: tech_news_2015_34
  endpoint:
    path: /Tech/News/2015/34
    method: GET
    data_selector: records
- name: tech_news_2015_35
  endpoint:
    path: /Tech/News/2015/35
    method: GET
    data_selector: records
- name: recent_changes
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News
    method: GET
    data_selector: changes
    params: {}
- name: problems
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News
    method: GET
    data_selector: problems
    params: {}
- name: changes_this_week
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News
    method: GET
    data_selector: changes_this_week
    params: {}
- name: meetings
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News
    method: GET
    data_selector: meetings
    params: {}
- name: future_changes
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News
    method: GET
    data_selector: future_changes
    params: {}
- name: tech_news_2016_21
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News/2016/21
    method: GET
    data_selector: latest_changes
- name: tech_news_2016_22
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News/2016/22
    method: GET
    data_selector: latest_changes
- name: tech_news_2016_23
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News/2016/23
    method: GET
    data_selector: latest_changes
- name: tech_news_2016_24
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News/2016/24
    method: GET
    data_selector: latest_changes
- name: tech_news
  endpoint:
    path: /Special:MyLanguage/Tech/News
    method: GET
    data_selector: news_items
    params: {}
- name: tech_news_2017_20
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News/2017/20
    method: GET
    data_selector: records
- name: tech_news_2017_21
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News/2017/21
    method: GET
    data_selector: records
- name: tech_news_2017_22
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News/2017/22
    method: GET
    data_selector: records
- name: tech_news_2017_23
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News/2017/23
    method: GET
    data_selector: records
- name: tech_news_2020_19
  endpoint:
    path: /Special:MyLanguage/Tech/News/2020/19
    method: GET
    data_selector: news
    params: {}
- name: tech_news_2020_20
  endpoint:
    path: /Special:MyLanguage/Tech/News/2020/20
    method: GET
    data_selector: news
    params: {}
- name: tech_news_2020_21
  endpoint:
    path: /Special:MyLanguage/Tech/News/2020/21
    method: GET
    data_selector: news
    params: {}
- name: tech_news_2020_22
  endpoint:
    path: /Special:MyLanguage/Tech/News/2020/22
    method: GET
    data_selector: news
    params: {}
- name: tech_news_2020_13
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News/2020/13
    method: GET
    data_selector: records
    params: {}
- name: tech_news_2020_14
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News/2020/14
    method: GET
    data_selector: records
    params: {}
- name: tech_news_2020_15
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News/2020/15
    method: GET
    data_selector: records
    params: {}
- name: tech_news_2020_16
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News/2020/16
    method: GET
    data_selector: records
    params: {}
- name: tech_news_2020_17
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News/2020/17
    method: GET
    data_selector: records
    params: {}
- name: recent_changes
  endpoint:
    path: /Tech/News
    method: GET
    data_selector: changes
    params: {}
- name: tech_news_2021_13
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News/2021/13
    method: GET
    data_selector: records
- name: tech_news_2021_14
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News/2021/14
    method: GET
    data_selector: records
- name: tech_news_2021_16
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News/2021/16
    method: GET
    data_selector: records
- name: tech_news_2021_17
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News/2021/17
    method: GET
    data_selector: records
- name: Section-level Image Suggestions
  endpoint:
    path: /wiki/Special:MyLanguage/Structured_Data_Across_Wikimedia/Section-level_Image_Suggestions
    method: GET
    data_selector: records
- name: Global abuse filters
  endpoint:
    path: /wiki/Special:MyLanguage/Global_AbuseFilter
    method: GET
    data_selector: records
- name: Special:BlockedExternalDomains
  endpoint:
    path: /wiki/Special:BlockedExternalDomains
    method: GET
    data_selector: records
- name: WikiEditor extension
  endpoint:
    path: /wiki/Special:MyLanguage/Extension:WikiEditor
    method: GET
    data_selector: records
- name: Commons Impact Metrics
  endpoint:
    path: /generated-data-platform/aqs/analytics-api/reference/commons.html
    method: GET
    data_selector: metrics
    params: {}
- name: upload_wizard
  endpoint:
    path: /commons/uploadWizard
    method: GET
    data_selector: records
    params: {}
- name: mediawiki_version
  endpoint:
    path: /mediawiki/version
    method: GET
    data_selector: records
    params: {}
- name: feature_news
  endpoint:
    path: /tech-news/feature
    method: GET
    data_selector: features
    params: {}
- name: project_updates
  endpoint:
    path: /tech-news/project-updates
    method: GET
    data_selector: projects
    params: {}
- name: learn_more
  endpoint:
    path: /tech-news/learn-more
    method: GET
    data_selector: learn_more
    params: {}
- name: tech_news
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News
    method: GET
    data_selector: tech_news
    params: {}
- name: Tech News
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News
    method: GET
    data_selector: records
    params: {}
- name: tech_news
  endpoint:
    path: /wiki/Special:MyLanguage/Tech/News
    method: GET
    data_selector: records
- name: tech_news_2025_08
  endpoint:
    path: /tech-news/2025-08
    method: GET
    data_selector: news
    params: {}
- name: tech_news_2025_09
  endpoint:
    path: /tech-news/2025-09
    method: GET
    data_selector: news
    params: {}
- name: tech_news_2025_10
  endpoint:
    path: /tech-news/2025-10
    method: GET
    data_selector: news
    params: {}
- name: CampaignEvents
  endpoint:
    path: /wiki/Special:MyLanguage/CampaignEvents
    method: GET
    data_selector: events
- name: Wiki Replicas
  endpoint:
    path: /wiki/Special:MyLanguage/Wiki_Replicas
    method: GET
    data_selector: replicas
- name: Edge Uniques
  endpoint:
    path: /edge/uniques
    method: GET
    data_selector: records
    params: {}
- name: Event Registration
  endpoint:
    path: /event/registration
    method: GET
    data_selector: records
    params: {}
- name: Wikifunctions
  endpoint:
    path: /wikifunctions
    method: GET
    data_selector: records
    params: {}
- name: User_page
  endpoint:
    path: /wiki/User:AKlapper_(WMF)
    method: GET
- name: Discussion
  endpoint:
    path: /wiki/User_talk:AKlapper_(WMF)
    method: GET
- name: tasks
  endpoint:
    path: /maniphest/query/open/
    method: GET
    data_selector: tasks
    params: {}
- name: user_talk
  endpoint:
    path: /user_talk
    method: GET
    data_selector: records
- name: bug_report
  endpoint:
    path: /api/task.search
    method: GET
    data_selector: tasks
    params: {}
- name: discussion
  endpoint:
    path: /api/discussion.search
    method: GET
    data_selector: discussions
    params: {}
- name: graph
  endpoint:
    path: /Module:Graph
    method: GET
    data_selector: chart
- name: task
  endpoint:
    path: /api/task.search
    method: GET
    data_selector: result
    params: {}
- name: user_talk
  endpoint:
    path: /w/api.php
    method: GET
    data_selector: query
- name: notifications
  endpoint:
    path: /notifications
    method: GET
    data_selector: notifications
    params: {}
- name: user_talk
  endpoint:
    path: /w/api.php?action=query&list=usercontribs
    method: GET
    data_selector: query.usercontribs
    params:
      ucuser: GZWDer
- name: user_talk
  endpoint:
    path: /User_talk:Bene*
    method: GET
    data_selector: content
- name: user_talk
  endpoint:
    path: /wiki/User_talk:Darenwelsh
    method: GET
    data_selector: comments
    params: {}
- name: translate_quicklinks
  endpoint:
    path: /wiki/Special:Preferences
    method: GET
    data_selector: records
    params: {}
- name: help_special_pages_preparation
  endpoint:
    path: /wiki/Help:Extension:Translate/Page_translation_administration
    method: GET
    data_selector: records
    params: {}
- name: user_space
  endpoint:
    path: /wiki/User:BPositive
    method: GET
    data_selector: records
    params: {}
- name: gsoc_opw_irc_meeting
  endpoint:
    path: /wiki/Google_Summer_of_Code_2014#Status
    method: GET
    data_selector: records
    params: {}
- name: today
  endpoint:
    path: /wiki/User_talk:BPositive
    method: GET
    data_selector: records
    params: {}
- name: migrators
  endpoint:
    path: /wiki/User_talk:BPositive
    method: GET
    data_selector: records
    params: {}
- name: MailgunDomain
  endpoint:
    path: /v3/kingswiki.com
    method: GET
notes:
- This endpoint uses the search engine configured in the $wgSearchType configuration
  setting and returns results in the namespaces configured by $wgNamespacesToBeSearchedDefault.
- Requires setup of OAuth for create page endpoint.
- Uses OAuth2 with Bearer token for authentication.
- Returns details for an individual revision.
- The API supports one filter per request.
- This endpoint is designed to be used with the OAuth extension authorization process.
- Uses OAuth2 for authentication.
- 'MediaWiki version: ≥ 1.35'
- The REST API lets you interact with MediaWiki by sending HTTP requests to unique
  URLs.
- Maximum number of search results for search_page is 100, default is 50.
- Uses OAuth2 with bearer token for authenticated requests.
- Requires setup of OAuth for creating pages.
- The API supports a variety of endpoints for retrieving file and page revision history.
- Default limit for search results is 50.
- Uses OAuth2 authorization.
- Returns results in the namespaces configured by [$wgNamespacesToBeSearchedDefault].
- Requires setup of an OAuth application for token generation.
- id is a required path parameter.
- Searches wiki page titles and contents for the provided search terms.
- Uses OAuth2 authorization process for creating pages.
- Uses OAuth2 with Bearer token for authorization.
- The API does not require authentication.
- API supports filtering revisions by tags and can limit results.
- Requires OAuth token for creating pages.
- The search results may vary based on the search backend configuration.
- Requires setup of connected app in api
- Returns information about a file, including links to download the file in thumbnail,
  preview, and original formats.
- Uses OAuth2 for authorization.
- For the create page endpoint, a CSRF token is required for cookie-based authentication.
- Requires OAuth token for authentication
- Ensure the content model is valid when creating or updating a page
- Search endpoint uses the search engine configured in the $wgSearchType setting.
- Requires OAuth token for authorization.
- Endpoint is designed to be used with the OAuth extension authorization process.
- Returns information about the latest revisions to a wiki page, in segments of 20
  revisions.
- API version must be ≥ 1.35
- Search results can return an empty array if no results are found.
- Uses OAuth2 — requires setup of connected app in MediaWiki
- Content type for revision is application/json
- Content type for revision HTML is text/HTML
- Requires MediaWiki version ≥ 1.35 for media files and ≥ 1.41 for transforms.
- This API requires OAuth authorization for certain endpoints.
- API does not require authentication for public access.
- Requires setup of OAuth token for authentication.
- Requires OAuth authorization for creating pages.
- Requires setup of OAuth token for authorization.
- Page titles must be URL encoded.
- Returns HTML for an individual revision.
- Returns HTML and meta-data for an individual revision.
- Uses OAuth2 with Bearer token for authentication
- Maximum number of search results to return can be set between 1 and 100
- Substitute your OAuth token for $TOKEN.
- Most extensions listed here are not maintained by people affiliated with the MediaWiki
  software development team.
- Inclusion of an extension on this site is not an endorsement by the MediaWiki developers
  or the Wikimedia Foundation.
- Content of all Wikimedia projects is released under free licenses.
- Sometimes, the installer fails to create the default user, or the user table is
  lost for some reason.
- You should not let outsiders access your wiki while you do this, if you use this
  method. This method may leave your wiki temporarily vulnerable to attack while you
  do the procedure.
- Some HTML tags can be unsafe and may be misused to harm users or create security
  vulnerabilities. Only allow them if you are certain they are safe.
- Some objects may return nulls in deeply nested fields
- The display of 'Deprecated' notices should be disabled on production sites. They
  are not errors. This is a php configuration. Also, be sure you have upgraded your
  extensions and skins too, to match MediaWiki 1.44.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Logs user creation events, blocks, and page translations.
- 'Note: "translatewiki.net page translation model"/"Miraheze Meta page translation
  model" refer to the same translation model.'
- You can only search for pages in one language.
- This field will only be visible in wikis that have the translatewiki extension enabled.
- You can only search for one file type.
- You can only select the given file types from the drop-down menu.
- This is only applicable to file types that have width and height, like videos and
  images.
- This API does not require authentication.
- MediaWiki is licensed free of charge, there is no warranty, to the extent permitted
  by applicable law.
- MediaWiki versions 1.40-1.42 and 1.38 and earlier are no longer supported.
- Uses MediaWiki versions 1.44.0, 1.43.3, and 1.39.13
- MediaWiki ist Freie Software lizenziert unter Version 2 der GNU General Public License.
- Die Verwendung von MariaDB oder MySQL wird empfohlen, da Wikimedia MariaDB verwendet.
- MediaWiki is free software licensed under version 2 (or later version) of the GNU
  General Public License.
- These versions are no longer supported. Please update to a newer version of MediaWiki.
- MediaWiki is free software licensed under version 2 of the GNU General Public License.
- MediaWiki requires PHP 8.1.0+, a webserver software, and either MariaDB 10.3.0+,
  MySQL 5.7.0+, SQLite 3.24.0+ or PostgreSQL 10.0+.
- Requires setup of connected app in MediaWiki
- MediaWiki requires PHP 8.1.0+, web server software and MariaDB 10.3.0+, MySQL 5.7.0+,
  SQLite 3.24.0+ or PostgreSQL 10.0+.
- MediaWiki is free software licensed under the GNU General Public License version
  2.
- MediaWiki er fri software licenseret under version 2 af GNU General Public License
- MediaWiki es Software libre licenciado bajo la versión 2 (o posterior) de la Licencia
  Pública General de GNU.
- Cualquier otro servidor de base de datos está menos probado y es probable que encuentre
  algunos errores.
- MediaWiki requires PHP 8.1.0+, a web server software, and either MariaDB 10.3.0+,
  MySQL 5.7.0+, SQLite 3.24.0+, or PostgreSQL 10.0+.
- MediaWiki requires PHP 8.1.0 or higher, and either MySQL or MariaDB.
- Uses GNU General Public License
- No guarantees beyond those required by law
- MediaWiki requires PHP 8.1.0+, a webserver software, and either MariaDB 10.3.0+,
  MySQL 5.7.0+, SQLite 3.24.0+, or PostgreSQL 10.0+.
- MediaWiki is free software under the GNU General Public License version 2.
- MediaWiki requires PHP 8.1.0+, web server software and either MariaDB 10.3.0+, MySQL
  5.7.0+, SQLite 3.24.0+ or PostgreSQL 10.0+.
- Recommended to use MariaDB or MySQL as Wikipedia uses MariaDB.
- MediaWiki is free software offered under the terms of the GNU GPL license version
  2 (or newer version).
- MediaWiki requires PHP 8.1.0+, web server software, and either MariaDB 10.3.0+,
  MySQL 5.7.0+, SQLite 3.24.0+, or PostgreSQL 10.0+.
- It is recommended to use MariaDB or MySQL.
- MediaWiki requires PHP 8.1.0+ and one of MariaDB 10.3.0+, MySQL 5.7.0+, SQLite 3.24.0+
  or PostgreSQL 10.0+.
- These versions are no longer supported.
- Using MariaDB or MySQL is recommended as Wikipedia uses MariaDB.
- Keep in mind that you are downloading the latest alpha version of MediaWiki, which
  is not recommended for production use!
- MediaWiki is free software licensed under version 2 (or later) of the GNU General
  Public License.
- برمجيات ميدياويكي مرخصة بموجب النسخة 2 من رخصة جنو العمومية
- مدیاویکی نیازمند PHP 8.1.0+، یک نرم‌افزار وب‌سرور، و یکی از MariaDB 10.3.0+، MySQL
  5.7.0+، SQLite 3.24.0+ یا PostgreSQL 10.0+.
- MediaWiki is licensed free of charge under version 2 (or later version) of the GNU
  General Public License.
- MediaWiki 1.44.0 is a stable release.
- Older versions like 1.40-1.42 and 1.38 and earlier are no longer supported.
- MediaWiki is a free software licensed under the GNU General Public License.
- Updates for MediaWiki versions 1.40-1.42 and before 1.38 are no longer supported.
- MediaWiki is licensed free of charge, there is no warranty.
- MediaWiki is licensed free of charge under the GNU General Public License.
- Requires setup of a MediaWiki OAuth application
- 保持最新的发布信息，以及保持你的服务器安全！
- 若您对MediaWiki进行了大量修改，可能会在应用最新的官方变更或更新时遇到困难。
- MediaWiki 1.44.0 is the stable version.
- 미디어위키는 무료로 배포되며, 법이 허가하는 한도 내에서 품질에 대한 어떠한 보증도 하지 않습니다.
- The current stable version is MediaWiki 1.44.0.
- For a quicker local server setup of MediaWiki, refer to the Local development quickstart.
- MySQL/MariaDB logs all queries in a history file. It will include the database password
  for the user account.
- Beware of the list of known issues when running MediaWiki with PostgreSQL.
- Make sure to also check the Release notes of the MediaWiki version that you plan
  to install.
- Older versions may contain critical security vulnerabilities and other major bugs,
  including the threat of possible data loss and/or corruption.
- MediaWiki requires at least PHP 8.1.0.
- Some features may require PHP functions that execute external processes.
- ImageMagick or GD is required for image thumbnailing.
- Shell access is required to run maintenance scripts; upgrading MediaWiki may be
  more difficult without it.
- Sending email notifications via the server itself requires a message transfer agent
  (MTA).
- GNU diff3 can be used to automatically resolve conflicts.
- memcached can be used for object caching.
- MediaWiki requires at least PHP 8.1.0
- Using MariaDB or MySQL is recommended as Wikimedia uses MariaDB.
- Optional dependencies include ImageMagick or GD for image thumbnailing.
- Shell access is required to run maintenance scripts.
- Sending email notifications via the server requires a message transfer agent (MTA).
- Memcached can be used for object caching.
- LocalSettings.php stores the database user's password in plain text
- Set stringent file permissions for LocalSettings.php
- It's strongly recommended to run those pending jobs before upgrading the wiki, to
  avoid them failing in case the parameter specification of those jobs change on the
  new version.
- While the upgrade scripts are well-maintained and robust, things could still go
  awry.
- Always back up before performing database maintenance.
- If you use the web updater, make sure to change the name of the .htaccess file back
  after running the upgrade script!
- MediaWiki versions 1.32 through 1.35.4, 1.36.2, and 1.37.0 contain a security issue
  that allow unprivileged editing of arbitrary pages and arbitrary JavaScript execution.
- If you are using PostgreSQL, please also read Manual:Upgrading Postgres.
- Make a full backup of the wiki, including both the database and the files
- Ensure that the web server and database are running before running update.php
- Suitable for local development only.
- Default HTML markup used for headings has changed. Some skins may need updates.
- MySQL/MariaDB logs all queries in a history file. It will include the database password
  for the user account. If this concerns you, delete and disable the .mysql_history
  file after running these queries by following the MySQL documentation.
- Leaving the root password blank can seriously compromise the security of the MediaWiki
  installation.
- If possible, ensure you have the APCu php extension installed and $wgMainCacheType
  set to CACHE_ACCEL.
- Make sure your SQLite database is in WAL mode (Write-Ahead Logging).
- MediaWiki supports SQLite since 1.17, but please note that this is second-class
  support, and you may likely run into some bugs.
- The database most commonly used with MediaWiki is MySQL.
- Make sure your SQLite database is in WAL mode.
- If your wiki may depend on using these extensions, or it may need to use a primary-replica
  database system, it is best to use a MySQL database for your wiki.
- MediaWiki supports PostgreSQL since 1.7, but please note that this is second-class
  support, and you may likely run into some bugs.
- Most of the common maintenance scripts work with PostgreSQL; however, some of the
  more obscure ones might have problems.
- MediaWiki no longer supports using Oracle or Microsoft SQL Server as of version
  1.34.
- As long as an extension or skin is properly maintained, the master branch of the
  extension or skin should be compatible with the master branch of MediaWiki.
- For determining compatibility with older MediaWiki versions, there are common policies
  used by extensions and skins.
- Third-party packages are not reviewed by core developers, and there is no guarantee
  that they will work.
- These packages may contain outdated versions of MediaWiki.
- Wikis are only created by request to hosting's owner.
- Wikis created automatically in under 5 minutes with 40+ extensions preinstalled.
- The Wikimedia Foundation does not guarantee the quality of, nor does it endorse,
  any of the services listed.
- Hosting services that offer automatic installation of MediaWiki may provide outdated
  versions or have other issues.
- You should not use master code for production under any circumstances as it is not
  considered stable.
- The development branch, 'master', is not considered stable.
- If you do not want to develop software patches but want to clone the stable release
  branch 1.44, use git clone https://gerrit.wikimedia.org/r/mediawiki/core.git --branch
  REL1_44 mediawiki.
- MediaWiki runs on most platforms that can support PHP.
- The MediaWiki API provides access to the content and metadata of MediaWiki installations.
- This code of conduct applies to Wikimedia technical spaces.
- Requires setup of personal API token for access
- DDoS protection may impact API usage
- The display of "Deprecated" notices should be disabled on production sites. They
  are not errors. This is a php configuration.
- Be sure you have upgraded your extensions and skins too, to match MediaWiki 1.44.
- Uses personal API token for access.
- The display of 'Deprecated' notices should be disabled on production sites. They
  are not errors. This is a php configuration.
- Shell access is highly recommended for installation and maintenance tasks.
- Attempting to save an edit gives you a 403 Forbidden error, or you get redirected
  to the main page
- A blank white page indicates a PHP error which isn't being printed to the screen.
- 'Error reports may include: Warning [...] It is not safe to rely on the system''s
  timezone settings.'
- If generating thumbnails with ImageMagick fails with a web server error log message
  like 'Memory allocation failed', the '$wgMaxShellMemory' value may need to be increased.
- If images are not displayed on the pages, and manually opening the URL of any image
  results in an Internal Server Error page, the problem is most likely caused by the
  .htaccess file from the images directory.
- Many people report blank pages in recent versions after submitting articles to their
  new wiki.
- MediaWiki requires PHP 7.4.3 or higher; you are using PHP 7.3.17
- Error reports may include missing timezone settings in php.ini.
- Increasing memory_limit in php.ini may resolve blank page issues.
- If styles aren't applied even when browsing the wiki from the server where it's
  hosted, the problem may be a PHP error on the ResourceLoader load.php script.
- If you recently upgraded MediaWiki, or recently installed or upgraded extensions,
  try running the update.php maintenance script.
- Your system does not support `/dev/urandom` so the key was generated with `mt_rand()`.
- MediaWiki requires PHP 7.4.3 or higher; you are using PHP 7.3.17.
- If the PHP version on your web server should be recent enough, check if you have
  several PHP versions installed in parallel.
- This error can often happen for other reasons. Look for Unicode usage on systems
  that do not support it properly.
- When you edit this page, you agree to release your contribution under the CC0.
- Wikimedia wikis use discussion tools as a default feature for talk pages.
- Messages are not private, and others can join in the conversation.
- Requires setup of OAuth2 for API access
- Some endpoints may have rate limiting
- This page is outdated. It was written for an older version of MediaWiki and may
  not apply to the most recent version.
- Problem is permission, open_basedir restrictions, SELinux, whatever, but not MediaWiki
  and not the lock manager.
- Uses OAuth2 with refresh token — requires setup of connected app in MediaWiki
- CSS placed here will be applied to all skins
- Allows you to create a site configuration object.
- It is currently needed by Extension:CentralAuth to fetch per-site information.
- Wikimedia Commons can only be accessed using HTTPS.
- Structured Discussions boards are read-only on this wiki as of March 2025.
- Enable Tabular data namespace on Commons - T148745
- The Reply Tool is available as an opt-in Beta Feature at all remaining Wikipedias
  except for certain projects.
- The reply tool is an extra button that appears at the end of a post on a talk page.
- This API is currently in use for testing on multiple Wikipedias.
- Version 1.0 introduces basic reply functionality for talk pages.
- 'This test highlighted an important tension many Junior Contributors seem to face:
  they finish the task they set out to complete without realizing they might have
  done so incorrectly.'
- Requires setup of OAuth2 for API access.
- This page used the Structured Discussions extension to give structured discussions.
- Due to different authentication mechanics in previous versions it may not work with
  a high probability.
- 'Temporary account names follow the pattern: ~YYYY-XXXXX-XX'
- Temporary accounts last for a period of 90 days.
- Temporary accounts are different from registered accounts. They are short-lived
  and offer limited features.
- Temporary accounts do not have access to all the features available for logged-in
  users.
- Temporary accounts have their own user pages and user talk pages, but they will
  eventually delink from the person who made the page.
- Temporary accounts can receive notifications and see a banner about new messages
  on their user talk page.
- Temporary accounts can receive thanks from logged-in editors but can't send thanks.
- Temporary accounts can ping other users, and they can be pinged in return.
- Replace Text only processes 250 pages at a time by default.
- ReplaceText only processes 250 pages at a time by default.
- All of the replacements are placed in the job queue.
- The replacement actions themselves are structured as MediaWiki 'jobs', to ensure
  that the system is not overloaded if the user wants to do many at the same time.
- This API may require OAuth2 for certain endpoints.
- Command 'gksudo' not found, consider using 'sudo' instead.
- Packages like php5 and mariadb-server-10.0 may not be available.
- The list of links to an article is useful in a number of ways.
- Facilitates proper disambiguation.
- Some objects may not be 100% useful.
- For XSS security reasons, various translation calls from within wiki should be implemented.
- Some extensions may require additional configuration in LocalSettings.php
- A problem might be what the sidebar displays after enabling the gadget and the user's
  config page doesn't exist yet.
- It could also created automatically (with default content) when a new user registers.
- This page is obsolete. It is being retained for archival purposes. It may document
  extensions or features that are obsolete and/or no longer supported.
- Access to the Toolserver can be revoked at any time by the management of Wikimedia
  Germany or any person designated for account approval.
- First evaluation is due June 30th.
- 'Join bi-weekly IRC meeting on #wikimedia-devrel to meet and greet with fellow GSOC
  & Outreachy participants.'
- Namespaces, interwikis and article titles should be split
- Don't copy HTML together with its ERRORS! Lesson has been learnt that numbered headings
  are poor solution
- Parsoid is not working in non-english language with MediaWiki 1.35.1, shows a Parsoid/Rest
  error curl 7 when using spanish language.
- SELINUX is disabled, firewall is open and listening port 8000
- Parsoid is running on the same server as the Apache Webserver.
- HTTP 500 error appears when trying to save an article with Visual Editor.
- This page was last edited on 29 December 2011, at 21:01.
- No authentication required for public API access.
- Articles without references may be quickly deleted.
- After publishing, you may have to bypass your browser's cache to see the changes.
- Text is available under the Creative Commons Attribution-ShareAlike License
- 'Text in the Help: namespace is available under the Creative Commons CC0 License'
- This setup allows for the installation of multiple wikis using the same source code.
- Setup allows installation of more than one wiki using different databases on a single
  server
- LocalSettings.php must be moved into a sites directory that matches the site URL
- Make images directory writable as necessary
- It is imperative, that you modify LocalSettings.php of your different wiki installations
  right from the start.
- Make sure that folder 'images' of the pool-wiki is writable.
- If you want to password protect your site, see commented section for configuration.
- You can use a different unique MySQL database for each wiki.
- You can use a different table prefix for each wiki.
- This setup allows you to install more than one wiki using different databases on
  a single server, using the same source code.
- This approach is based on the work of Mizanur Rahman.
- All new API users should use JSON.
- Clients written in PHP should avoid using the PHP format because it is fundamentally
  insecure.
- This page is under construction. You can help improve it by reviewing and editing
  the content.
- All Python 3 source files MUST be UTF-8 without a BOM.
- The scripts/userscripts directory is designed to host your scripts.
- Uses OAuth2 for authentication
- Python is case sensitive, and in its world `Site` and `Page` mean classes.
- Getting the content of the page does not contact live wiki until the first access.
- Save is hard to follow because it calls _save() which calls APISite.editpage()
- Iterates contributions using `usercontribs`
- Does not retrieve page content until necessary
- Page generators form one of the most powerful tools of Pywikibot.
- Most page generators are available via command line arguments for end users.
- MediaWiki always stores times in UTC.
- Some revisions may be deleted or hidden by admins
- 'FilePage represents a file description page in the File: namespace.'
- User is a subclass of Page.
- Uses standard MediaWiki API for operations
- UnicodeEncodeError may occur on Windows with non-ASCII characters
- Uses user-config.py for authentication
- Watchlist may contain both content pages and talk pages
- Dumps are created by Wikimedia staff for our convenience (usually twice a month),
  and contain more or less extracted content from most wikis for offline use.
- Dumps are in XML form compressed as bz2 or gz. Unlike for other bot products, they
  are ready for use as bz2, so you don't have to unpack them.
- Authentication is required for certain API actions.
- Looks like the crontab got corrupted. Fixed.
- Seems something got corrupted again.
- Errors in Gadget-contribsrange.js were fixed as per user feedback.
- This account has been renamed as part of single-user login finalisation
- bzimport is processing the data of more than 800 users.
- Some pages may return incomplete data due to API limitations
- Feedback is required by specific deadlines for design iterations.
- This page is an archive. Do not edit the contents of this page.
- The log-in system for external tools (OAuth) was broken on wikis that tested the
  new search tool.
- The newsletter will now show on the English Planet Wikimedia every Monday.
- You can now use guided tours on the Arabic, Bengali and Norwegian Wikipedias.
- Not all changes will affect you.
- Latest tech news from the Wikimedia technical community.
- Some wikis have a template to track bugs in Bugzilla.
- You can test a new system to see math using MathML.
- All accounts are now unique and work on all wikis.
- Some wikis can now be used only with HTTPS. This includes the English, Russian and
  Chinese Wikipedias, among others.
- JavaScript was broken on some wikis due to a code error. VisualEditor and other
  tools that use JavaScript were broken.
- The maximum character length when you search for something on the Wikimedia wikis
  is now 300 characters.
- Tech News is sent out regularly by the Wikimedia technical community.
- Not all changes will affect you
- The `rest.wikimedia.org` domain will be shut down. This is planned to happen in
  March. You should use /api/rest_v1/ at each individual project domain instead.
- Some changes may not affect all users.
- The block log sometimes showed blocks as being much longer than they were. This
  has now been fixed.
- 'Some pages show the error Lua error in mw.wikibase.entity.lua at line 34: The entity
  data must be a table obtained via mw.wikibase.getEntityObject.'
- The next issue of Tech News will be sent out on 8 January 2018.
- Changes may affect users differently.
- Tidy will be removed on all wikis before July 2018.
- Tech News writers, editors and translators wish you a pleasant 2019 year.
- There will be no Tech News issue next week. The next issue of Tech News will be
  sent out on 2 September 2019.
- Some abuse filters stopped working because of a code change.
- Some articles have tables that can be sorted in different ways.
- There are some new tools to make it easier for newcomers to start editing.
- All wikis will be read-only for a few minutes on September 1. This is planned between
  14:00 and 15:00 UTC.
- Users who use old TLS versions will not be able to connect to Wikimedia projects.
- Because of the holidays the next issue of Tech News will be sent out on 11 January
  2021.
- There is no new MediaWiki version this week or next week.
- Please tell other users about these changes.
- Starting this week, apps using identification-only or basic authorizations will
  not require review.
- Recent changes and future changes are noted in the tech news.
- Commons Impact Metrics are now available via data dumps and API.
- New features and bug fixes are regularly updated in the Tech News.
- Editors who want to re-use references will be able to do so by the end of 2024.
- All wikis will be read-only for a few minutes on Wednesday September 25 at 15:00
  UTC.
- Wikimedia REST API users may be affected by ongoing upgrades.
- Editors and volunteer developers interested in data visualization can now test the
  new software for charts.
- A new draft text of a policy discussing the use of Wikimedia's APIs has been published
  on Meta-Wiki.
- OAuth2 with refresh token is required.
- The `/page/data-parsoid` REST API endpoint is no longer in use and will be deprecated.
- Gadgets and user scripts that interact with Special:Block may need to be updated.
- This account has been renamed as part of single-user login finalisation.
- This site is dedicated to documenting the MediaWiki software.
- This API is used for accessing MediaWiki data.
- Some issues may require a separate login.
- Users who rely on password authentication will need to reset their password after
  their username is changed (their username is part of the salt in the password hash).
- Contact the Collaboration team for issues related to PageCuration.
- Some users report issues accessing their accounts due to approval status.
- 'The problem is this: Thousands of people use the mobile apps.'
- This is damaging to the reputation of Wikipedia and WMF.
- Requires setup of OAuth consumer on mediawiki.org
- Uses REST API for accessing tasks and discussions.
- Ensure to follow the Etiquette in discussions
- You can write in your language.
- Requires OAuth2 setup in Phabricator
- Please join the Wikimedia India mailing list to keep up with the Indian Wikimedia
  community.
- MediaWiki.org exists solely for the documentation of the MediaWiki software and
  that off-topic material is not accepted here.
- This site is dedicated to documenting the MediaWiki software, the software behind
  many wikis, including that of Wikipedia.
- Uses SUL for Wikimedia sites
- You should be able to log into English Wikipedia using exactly the same password
  as you use here
- Requires OAuth2 setup for API access.
- MediaWiki API requires OAuth2 authentication.
- This page was last edited on 13 August 2013, at 17:24.
- Survey information is public, you can find the relevant links.
- It's important to find out what it is about Media Viewer that people do not like.
- Instead of the IP we will show a masked identity.
- Admins will still be able to access the IP.
- Some API calls may return nulls in deeply nested fields
- This page is dedicated to documenting the MediaWiki software.
- Do not edit the contents of this page.
- This site allows anonymous editing, but creating an account provides benefits.
- This site is dedicated to documenting the MediaWiki software
- Requires OAuth2 setup for access to user-related data
- Text is available under the Creative Commons Attribution-ShareAlike License; additional
  terms may apply.
- This API may require specific permissions for certain operations.
- Requires setup of OAuth for API access
- MediaWiki.org exists solely for the documentation of the MediaWiki software and
  off-topic material is not accepted here.
- This site is dedicated to documenting the MediaWiki software, the software behind
  many wikis, including that of Wikipedia and the Wikimedia Foundation projects.
- Check if any of the most active translations editors is interested in getting translation
  admin bit and helping migrating pages.
- MailgunDomain should be 'kingswiki.com'
- Please direct any additional comments to the current talk page.
- MediaWiki.org exists solely for the documentation of the MediaWiki software.
errors:
- '400: Query parameter not set. Add `q` parameter.'
- '400: Invalid limit requested. Set `limit` parameter to between 1 and 100.'
- '500: Search error'
- '400: Query parameter not set. Add ''q'' parameter.'
- '400: Invalid limit requested. Set ''limit'' parameter to between 1 and 100.'
- '400: Missing token when using cookie-based authentication.'
- '409: Page already exists.'
- '415: Unsupported Content-Type.'
- '404: Revision not found'
- '404: Title not found'
- '400: Invalid parameter'
- '400: Query parameter not set. Add q parameter.'
- '400: Invalid limit requested. Set limit parameter to between 1 and 100.'
- '400: Bad content model.'
- '409: Edit conflict.'
- '400: Invalid parameter or combination of parameters'
- '400: Missing token when using cookie-based authentication. Add a CSRF token to
  the request body, or use an OAuth authorization flow.'
- '400: Bad content model. Include a valid content model based on available content
  handlers.'
- '409: Page already exists'
- '415: Unsupported Content-Type. Add the request header Content-Type: application/json.'
- '400: Bad content model. Include a valid content_model based on available content
  handlers.'
- '400: Missing `token` when using cookie-based authentication. Add a CSRF token to
  the request body, or use OAuth authorization flow.'
- '400: Bad content model. Include a valid `content_model` based on available content
  handlers.'
- '415: Unsupported Content-Type. Add the request header `Content-Type: application/json`.'
- 404 Revision not found
- '400: Query parameter not set.'
- '400: Invalid limit requested.'
- '400: Missing `token` when using cookie-based authentication.'
- '404: Title or revision not found.'
- '500: Minor edit count exceeds 2000'
- '400: Page contains more than 100 media files'
- 404 Title or revision not found
- '400: Bad request.'
- '404: Not found.'
- '409: Conflict.'
- '400: Missing token when using cookie-based authentication'
- '400: Bad content model'
- '409: Edit conflict'
- '415: Unsupported Content-Type'
- '400: Missing `token` when using cookie-based authentication. Add a CSRF token to
  the request body, or use an OAuth authorization flow.'
- '400: Revision identifier must be greater than 0'
- '400: Parameters `older_than` and `newer_than` cannot both be specified'
- 404 Title not found
- '400: Revision IDs are for different pages or for pages that can''t be compared'
- '400: Invalid content type'
- '403: Revision not publicly accessible'
- '500: Wikidiff2 extension 1.9.0 or later not installed'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API token or permissions'
- 'Deprecated: Use of MediaWiki\Skin\Skin::appendSpecialPagesLinkIfAbsent was deprecated
  in MediaWiki 1.44.'
- 'Warning: preg_replace(): Unknown modifier ''h'' in /www/wwwroot/wiki/extensions/ReplaceText/src/SpecialReplaceText.php
  on line 1015'
- 'Warning: Cannot modify header information - headers already sent by (output started
  at /www/wwwroot/wiki/extensions/ReplaceText/src/SpecialReplaceText.php:1015)'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'You are missing a required extension to PHP that MediaWiki requires to run. Please
  install: intl'
- 'Warning: MediaWiki versions 1.32 through 1.35.4, 1.36.2, and 1.37.0 contain a security
  issue that allow unprivileged editing of arbitrary pages and arbitrary JavaScript
  execution.'
- ALTER command denied to user
- Cannot get command line arguments, register_argc_argv is set to false
- SQLite does not scale beyond one server.
- Some popular extensions do not support SQLite.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck API token or permissions.'
- '403 Forbidden: You don''t have permission to access /mediawiki/ on this server.'
- 'Error creating thumbnail: File missing'
- 'Error creating thumbnail: Invalid thumbnail parameters'
- 'Error creating thumbnail: Incomplete GD library configuration: missing function
  imagecreatefromjpeg'
- 'Error creating thumbnail: Unable to save thumbnail to destination'
- DATABASE returned error "1044 Access denied for user 'username'@'localhost' to database
  'wikidb'"
- Could not find a suitable database driver!
- Warning [...] It is not safe to rely on the system's timezone settings. You are
  *required* to use the date.timezone setting or the date_default_timezone_set() function.
- 'Error creating thumbnail: File missing:'
- 'Error generating thumbnail / Error creating thumbnail: Unable to save thumbnail
  to destination'
- 'Error: Could not open lock file for "mwstore://local-backend/local-public/./../image.png"'
- 'Error creating thumbnail: File with dimensions greater than 12.5 MP'
- 1044 Access denied for user 'username'@'localhost' to database 'wikidb'
- CREATE command denied to user 'username'@'localhost' for table 'user_properties'
- failed with error [2002] Can't connect to local MySQL server through socket '/var/lib/mysql/mysql.sock'
  (13)
- '429 Too Many Requests: Reduce the frequency of API calls'
- '401 Unauthorized: Check your OAuth token and permissions'
- 'DBConnectionError: Cannot access the database: No such file or directory'
- Missing JsonConfig extension; Cannot load https://commons.wikimedia.org/wiki/Data:I18n/Documentation.tab.
- 'Lua error: bad argument #1 to "get" (not a valid title)'
- '401 Unauthorized: Recheck OAuth credentials.'
- 'E: The package ''php5'' has no version that can be installed.'
- 'mv: unable to move ''mediawiki-1.34.2/cache'' to ''/var/lib/mediawiki/cache'':
  The folder is not empty.'
- Internal Server Error
- '401 Unauthorized: Check Kerberos authentication'
- 'invalidparammix: The title parameter may only be used with lang.'
- 'NoPageError: Page doesn''t exist.'
- 'IsRedirectPageError: Page is a redirect page.'
- Possible errors related to API calls
- 'NoPageError: Raised for non-existing pages'
- '403 Forbidden: Check API permissions.'
- '404 Not Found: Verify endpoint URL.'
- '401 Unauthorized: Ensure valid authentication.'
- '404 Not Found: Check if the URL is correct'
- Throttle API calls or reduce frequency
- 'Unknown error: "titleblacklist-forbidden-edit"'
- '400 Bad Request: Check parameters and their formats'
- '401 Unauthorized: Verify OAuth scopes or token validity'
- '404 Not Found: The requested endpoint does not exist'
- 'SERVER_ERROR: High server load or configuration error'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- 'USER_NOT_FOUND: Check the user ID provided'
- 'ACCOUNT_BLOCKED: Contact support for assistance'
- '403 Forbidden: Check user permissions or scopes'
- '400 Bad Request: Verify request parameters'
- '404 Not Found: Check the endpoint path'
- '401 Unauthorized: Ensure proper authentication'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Check OAuth token validity'
- '404 Not Found: Verify task ID or endpoint'
- '401 Unauthorized: Check OAuth credentials.'
- '401 Unauthorized: Check OAuth credentials'
- '403 Forbidden: User may not have access rights'
- '401 Unauthorized: Check if your OAuth token is valid.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthToken
client:
  base_url: https://en.wikipedia.org/w/rest.php
  headers:
    User-Agent: MediaWiki REST API docs examples/0.1 (https://www.mediawiki.org/wiki/API_talk:REST_API)
source_metadata: null
