resources:
- name: document
  endpoint:
    path: /
    method: POST
    data_selector: document
    params:
      document_content: ''
      document_url: ''
      name: ''
      test: 'false'
      referrer: document_url
      pipeline: '10.1'
- name: document
  endpoint:
    path: /doc
    method: POST
    data_selector: document
- name: document_generation
  endpoint:
    path: /docs
    method: POST
    data_selector: response.data
- name: document
  endpoint:
    path: /docs
    method: post
    data_selector: response
    params:
      user_credentials: YOUR_API_KEY_HERE
      test: true
      document_type: xls
      document_url: https://docraptor.com/examples/report.html
- name: document
  endpoint:
    path: /docs
    method: post
    data_selector: response
    params: {}
- name: report
  endpoint:
    path: /docs
    method: post
    data_selector: data
    params: {}
- name: cohort_analysis
  endpoint:
    path: /docs
    method: post
    data_selector: data
    params: {}
- name: invoice
  endpoint:
    path: /docs
    method: post
    data_selector: data
    params: {}
- name: ebook
  endpoint:
    path: /docs
    method: post
    data_selector: data
    params: {}
- name: invoice
  endpoint:
    path: /docs
    method: POST
    data_selector: document
    params:
      test: true
      document_type: pdf
      document_url: https://docraptor.com/examples/invoice.html
- name: cohort_analysis
  endpoint:
    path: /docs
    method: POST
    data_selector: document
    params:
      test: true
      document_type: xls
      document_url: https://docraptor.com/examples/cohort_analysis.html
- name: report
  endpoint:
    path: /docs
    method: POST
    data_selector: document
    params:
      test: true
      document_type: xls
      document_url: https://docraptor.com/examples/report.html
- name: ebook
  endpoint:
    path: /docs
    method: POST
    data_selector: document
    params:
      test: true
      document_type: pdf
      document_url: https://docraptor.com/examples/ebook.html
- name: report
  endpoint:
    path: /docs
    method: POST
    data_selector: response
    params:
      document_type: xls
      document_url: https://docraptor.com/examples/report.html
      test: true
- name: cohort_analysis
  endpoint:
    path: /docs
    method: POST
    data_selector: response
    params:
      document_type: xls
      document_url: https://docraptor.com/examples/cohort_analysis.html
      test: true
- name: invoice
  endpoint:
    path: /docs
    method: POST
    data_selector: response
    params:
      document_type: pdf
      document_url: https://docraptor.com/examples/invoice.html
      test: true
- name: ebook
  endpoint:
    path: /docs
    method: POST
    data_selector: response
    params:
      document_type: pdf
      document_url: https://docraptor.com/examples/ebook.html
      test: true
- name: create_document
  endpoint:
    path: /docs
    method: POST
    data_selector: document
    params: {}
- name: example-report
  endpoint:
    path: /docs
    method: POST
    data_selector: response
    params:
      test: true
      document_type: xls
      document_url: https://docraptor.com/examples/report.html
- name: example-cohort-analysis
  endpoint:
    path: /docs
    method: POST
    data_selector: response
    params:
      test: true
      document_type: xls
      document_url: https://docraptor.com/examples/cohort_analysis.html
- name: example-invoice
  endpoint:
    path: /docs
    method: POST
    data_selector: response
    params:
      test: true
      document_type: pdf
      document_url: https://docraptor.com/examples/invoice.html
- name: example-ebook
  endpoint:
    path: /docs
    method: POST
    data_selector: response
    params:
      test: true
      document_type: pdf
      document_url: https://docraptor.com/examples/ebook.html
- name: invoice
  endpoint:
    path: /api/invoices
    method: POST
    data_selector: data
    params: {}
- name: ebook
  endpoint:
    path: /api/ebooks
    method: POST
    data_selector: data
    params: {}
- name: document
  endpoint:
    path: /createDoc
    method: POST
    data_selector: document
    params: {}
- name: document
  endpoint:
    path: /docs
    method: POST
    data_selector: document_content
- name: make_document
  endpoint:
    path: /docs
    method: POST
    data_selector: response
    params: {}
- name: referrer_based_documents
  endpoint:
    path: /docs/from_site
    method: GET
    data_selector: documents
- name: document_listing
  endpoint:
    path: /docs.json
    method: GET
    data_selector: documents
    params:
      page: '1'
      per_page: '100'
- name: ips
  endpoint:
    path: /ips.json
    method: GET
    data_selector: response
- name: document
  endpoint:
    path: /docs
    method: POST
    data_selector: document
    params: {}
- name: doc
  endpoint:
    path: /createDoc
    method: POST
    data_selector: doc
    params: {}
- name: create_doc
  endpoint:
    path: /docs
    method: POST
    data_selector: response
    params:
      test: true
      document_type: pdf
      document_content: <html><body>Hello World!</body></html>
- name: create_async_doc
  endpoint:
    path: /async_docs
    method: POST
    data_selector: response
    params:
      test: true
      document_type: pdf
      document_content: <html><body>Hello World!</body></html>
- name: create_document
  endpoint:
    path: /doc
    method: POST
    data_selector: response
    params:
      test: 'True'
      document_type: pdf
      document_content: <html><body>Hello World!</body></html>
- name: document
  endpoint:
    path: /createDoc
    method: POST
    data_selector: document
    params: {}
- name: documents
  endpoint:
    path: /docs
    method: POST
    data_selector: document
    params: {}
- name: createHostedDoc
  endpoint:
    path: /api/documents
    method: POST
    data_selector: response
    params: {}
- name: documents
  endpoint:
    path: /docs
    method: POST
    data_selector: doc
    params: {}
- name: doc
  endpoint:
    path: /documents
    method: POST
    data_selector: document
- name: document
  endpoint:
    path: /api/create
    method: POST
    data_selector: document
    params: {}
- name: documents
  endpoint:
    path: /docs
    method: POST
    data_selector: response
    params: {}
- name: documents
  endpoint:
    path: /docs
    method: POST
    data_selector: doc
    params:
      test: true
      type: pdf
- name: document
  endpoint:
    path: /createDoc
    method: POST
    data_selector: document
    params:
      test: 'true'
      document_content: <html><body>Hello World</body></html>
      document_type: pdf
      name: docraptor-java.pdf
- name: document
  endpoint:
    path: /documents
    method: POST
    data_selector: data
    params: {}
- name: document
  endpoint:
    path: /documents
    method: POST
    data_selector: data
    params: {}
- name: document_listing
  endpoint:
    path: /documents
    method: GET
    data_selector: documents
    params: {}
- name: documents
  endpoint:
    path: /docs
    method: POST
    data_selector: response
    params:
      test: true
      document_type: pdf
- name: document
  endpoint:
    path: /docs
    method: POST
    data_selector: response
    params:
      test: 'true'
      document_type: pdf
      document_content: '<h1>This document has printer''s marks!</h1><style>@page
        {-prince-mark-length: 1cm;-prince-mark-offset: 0.25cm; -prince-mark-width:
        1px;marks: crop cross;size: 8cm 8cm;-prince-trim: 0.25cm;bleed: 0.75cm;margin:
        0;background-color: #489bcf;}</style>'
- name: documents
  endpoint:
    path: /docs
    method: POST
    data_selector: doc
- name: document
  endpoint:
    path: /docs
    method: POST
    data_selector: response
    params:
      test: true
      document_type: pdf
      document_content: <h1>This document has printer's marks!</h1>
- name: create_doc
  endpoint:
    path: /create_doc
    method: POST
    data_selector: response
- name: documents
  endpoint:
    path: /docs
    method: POST
    data_selector: document
    params:
      test: true
      document_type: pdf
      document_content: <h1>This document has printer's marks!</h1>
- name: document
  endpoint:
    path: /createDoc
    method: POST
    data_selector: response
    params:
      test: true
      document_type: pdf
- name: documents
  endpoint:
    path: /docs
    method: POST
    data_selector: null
    params:
      test: true
      document_type: pdf
      document_content: <h1>This document has printer's marks!</h1>
- name: document_creation
  endpoint:
    path: /create_doc
    method: POST
    data_selector: response
    params:
      test: true
      document_type: pdf
      document_content: '<h1>This document has printer''s marks!</h1><style>@page
        {-prince-mark-length: 1cm;-prince-mark-offset: 0.25cm;/* offset between marks
        and page area, defaults to bleed */-prince-mark-width: 1px;marks: crop cross;size:
        8cm 8cm;-prince-trim: 0.25cm;bleed: 0.75cm;margin: 0;background-color: #489bcf;}</style>'
- name: documents
  endpoint:
    path: /docs
    method: POST
    data_selector: document
    params:
      test: 'true'
- name: document
  endpoint:
    path: /docs
    method: POST
    data_selector: doc
- name: documents
  endpoint:
    path: /docs
    method: POST
    data_selector: document
    params:
      test: 'true'
- name: document
  endpoint:
    path: /docs
    method: POST
    data_selector: response
    params:
      test: 'true'
- name: documents
  endpoint:
    path: /docs
    method: POST
    data_selector: document
    params: {}
- name: document
  endpoint:
    path: /create_doc
    method: POST
    data_selector: response
    params:
      test: 'false'
      document_type: pdf
      document_content: document_content
- name: documents
  endpoint:
    path: /docs
    method: POST
    data_selector: document
    params:
      test: 'false'
      document_type: pdf
      document_content: '<div id="watermark"><img src="https://docraptor-production-cdn.s3.amazonaws.com/tutorials/raptor.png"
        /></div><div style="page-break-after: always;">Page 1</div><div style="page-break-after:
        always;">Page 2</div><div style="page-break-after: always;">Page 3</div>'
- name: create_doc
  endpoint:
    path: /docs
    method: POST
    data_selector: document
    params:
      test: 'true'
      document_type: pdf
      document_content: content
- name: document_generation
  endpoint:
    path: /docs
    method: POST
    data_selector: document
    params:
      required:
      - type
      - document_content
      - hosted
      optional:
      - hosted_expires_at
      - hosted_download_limit
- name: document_generation
  endpoint:
    path: /api/documents
    method: POST
    data_selector: document
    params: {}
notes:
- If there is an error creating your document, the callback_url will never be called.
- DocRaptor provides a public API key for testing without creating an account.
- Test documents are free but watermarked
- test documents are free but watermarked
- DocRaptor supports creating PDF and Excel files.
- Requires API key for authentication
- Uses API key for authentication.
- Test documents are free, but production documents require a paid account.
- DocRaptor's licensing model fits perfectly for cloud infrastructure
- DocRaptor is the perfect solution to get our automated typesetting workflow running
  quickly, easily, and affordably
- Test documents are free but watermarked.
- This code exposes your API key in your website source code. This code should not
  be used in a publicly-accessible location.
- HIPAA compliance is available on all paid DocRaptor plans at no additional charge.
- DocRaptor requires an API key for authentication.
- DocRaptor doesn't support CSS <style> blocks when generating Excel documents.
- Ready to get started? Try DocRaptor for free with unlimited test documents.
- Uses HTTP Basic Authentication or Query Parameter Authentication
- We limit generation time, simultaneous requests, and documents created per billing
  period.
- Test PDFs will be watermarked.
- Test Excel documents will be cut off after 20 rows.
- Test hosted documents will be limited to 5 downloads.
- Test hosted documents will expire after 1 day.
- Hosted documents output must be less than 100mb.
- Using IPs for securing assets is not recommended, as these addresses will change
  over time without notice.
- Instead, the recommended approach is to use HTTP basic auth over HTTPS.
- 'Warning: This code exposes your API key in your website source code. This code
  should not be used in a publicly-accessible location, instead try using a server-side
  agent such as PHP or Ruby.'
- 'Warning: Code exposes your API key in the website source code.'
- 'Warning: Exposes your API key in your website source code'
- 'Warning: This code exposes your API key in your website source code. This code
  should not be used in a publicly-accessible location.'
- API key should not be exposed in publicly-accessible locations
- Pricing is based on your DocRaptor plan level.
- Using the API key in client-side code exposes it; use server-side agents instead.
- Requires an API key to authenticate requests.
- 'Support Hours: Monday-Friday, 10am-6pm EST'
- Expected Behavior reserves the right to update and change the Terms of Service from
  time to time without notice.
- Abuse or excessively frequent requests to DocRaptor via the API may result in the
  temporary or permanent suspension of your account’s access to the API.
- Expected Behavior shall not be liable to you or to any third party for any modification,
  price change, suspension or discontinuance of the Service.
- All paid plans must enter a valid credit card. Free accounts are not required to
  provide a credit card number.
- The Service is billed in advance on a monthly basis and is non-refundable.
- You are solely responsible for properly canceling your account.
- Uses API key for authentication
- DocRaptor pricing starts at $15/mo.
- Supports multiple versions of Prince.
- DocRaptor has a free plan and paid plans start at $15/month.
- As an API-based tool, there's no need to manage additional infrastructure.
- Using the account setting is more convenient, while the parameter lets you test
  your documents before upgrading your entire account.
- ignore_console_messages is now enabled by default.
- Relative path assets without a base URL now result in a document failure.
- Support for CSS variables (aka custom properties)
- Flexbox single-column and row containers can now break across pages
- Pipelines often contain breaking changes, so we strongly recommend reviewing the
  release notes and testing your documents before changing your settings.
- To avoid any breaking changes, we never automatically upgrade your documents.
- Some libraries may struggle with complex PDF generation elements.
- 99.999% uptime guarantee
- SOC2, HIPAA, and GDPR compliance
- We are SOC2 and HIPAA compliant.
- All documents are encrypted in transit and at rest.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Supports footnotes in PDF generation.
- JavaScript is disabled by default (to speed up document generation), but if you
  want charts, custom fonts, or any other JavaScript-based functionality, you will
  need to enable JavaScript on your API call.
- Multi-pass rendering can cause timeout if not managed properly
- DocRaptor supports CSS CMYK colors and CMYK images by default.
- The document will be converted to CMYK if you set prince_options[profile] to PDF/X-1a
  and define your output intent with CSS.
- The API key shown here, 'YOUR_API_KEY_HERE', actually works! Use it for testing
  without creating an account. The only requirement is test mode must be used ('test'
  parameter set to true).
- The API key works in test mode
- This API key works in test mode!
- The API key shown here, `YOUR_API_KEY_HERE`, actually works! Use it for testing
  without creating an account.
- API key must be used in test mode for testing without creating an account.
- The API key must be used in test mode for testing without creating an account.
- The API key shown here, `YOUR_API_KEY_HERE`, actually works in test mode.
- The only requirement is test mode must be used (`test` parameter set to `true`).
- The API key works in test mode.
- The only requirement is test mode must be used (`test` parameter set to `true`)
- Test mode must be used for testing without creating an account.
- API key works in test mode with test parameter set to true.
- Use test mode (test parameter set to true) for testing without creating an account.
- The API key shown here, 'YOUR_API_KEY_HERE', actually works! Use it for testing
  without creating an account.
- DocRaptor guarantees 99.99% uptime and is SOC2, HIPAA, and GDPR compliant.
- DocRaptor supports PDF text annotations through Prince's custom CSS extensions.
- DocRaptor's free tier is limited to 5 document conversions per month
- Unlimited test, watermarked documents are included in every plan, including the
  free plan
errors:
- 'ERROR: Invalid API Key'
- 'API_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API key or token expiration'
- '400 Bad Request: Check the request format and parameters.'
- '401 Unauthorized: Ensure your API key is valid.'
- '429 Too Many Requests: Rate limit exceeded.'
- 'ApiException: Check the API key or other configuration settings'
- 'INVALID_API_KEY: Check the API Key provided.'
- 'DOCUMENT_NOT_FOUND: The requested document does not exist.'
- '400 Bad Request: Check if required parameters are missing.'
- '401 Unauthorized: Ensure API key is correct.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Invalid API key: Ensure the API key is valid'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Invalid API Key.'
- Error downloading document content from supplied url.
- '400 - Bad Request: Your request can not be completed as expected.'
- '401 - Unauthorized: Authorization is required, but has either not been provided
  or is incorrect.'
- '403 - Forbidden: The request was made correctly, but the server is refusing to
  respond.'
- '422 - Unprocessable Entity: Your input document has syntax errors.'
- 'Document generation time exceeded limit: Document will be killed.'
- '[Invalid Action Error] Requested document cannot be expired.'
- '401 Unauthorized: Check your API key'
- '400 Bad Request: Check your request parameters'
- 'ApiError: Error during document creation'
- 'ApiException: Check your API key and request parameters.'
- '401 Unauthorized: Recheck API key'
- 'API_KEY_INVALID: Check if the API key is correctly set'
- 'DOCUMENT_NOT_FOUND: Ensure the document ID is correct'
- '401 Unauthorized: Check API key'
- '400 Bad Request: Invalid parameters or document content'
- '400 Bad Request: Check the document content or parameters.'
- '401 Unauthorized: Recheck API key.'
- 'Invalid API key: Check your API key and try again'
- 'Document generation failed: Check your document content and settings'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Invalid API key.'
- Expected Behavior shall not be liable for any direct, indirect, incidental, special,
  consequential or exemplary damages, including but not limited to, damages for loss
  of profits, goodwill, use, data or other intangible losses.
- Abuse or excessively frequent requests to DocRaptor via the API may result in the
  temporary or permanent suspension of your account’s access to the API.
- '401 Unauthorized: API key is required.'
- Error messages are contained in the response body
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Invalid API key'
- '429 Too Many Requests: Rate limit exceeded'
- '401 Unauthorized: Recheck API key or permissions'
- 'ApiException: Check error details for more information'
- '401 Unauthorized: Check API key and permissions'
- '400 Bad Request: Ensure all required parameters are provided'
- 'ApiException: Error occurred while creating document'
- DocRaptor error messages are contained in the response body.
- '401 Unauthorized: Check API key or test mode'
- 'API_CALL_LIMIT_EXCEEDED: Reduce frequency of API calls'
- 'INVALID_API_KEY: Check the API key and try again'
- 'ApiException: Error occurred during API call'
- '401 Unauthorized: Recheck API key or account status.'
- 'ApiException: Handle API exceptions for error responses.'
- 'Invalid API Key: Check your API key and ensure it''s valid'
- 'QUERY_TIMEOUT: Adjust your request parameters for better performance'
- '401 Unauthorized: Check API key or account status'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck API key or token expiration.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://docraptor.com
source_metadata: null
