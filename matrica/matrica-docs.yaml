resources:
- name: user_profile
  endpoint:
    path: /oauth2/user/profile
    method: GET
- name: user_wallets
  endpoint:
    path: /oauth2/user/wallets
    method: GET
- name: user_nfts
  endpoint:
    path: /oauth2/user/nfts
    method: GET
- name: user_discord
  endpoint:
    path: /oauth2/user/discord
    method: GET
- name: user_twitter
  endpoint:
    path: /oauth2/user/twitter
    method: GET
- name: user_telegram
  endpoint:
    path: /oauth2/user/telegram
    method: GET
- name: user
  endpoint:
    path: /api/user
    method: GET
    data_selector: data
    params: {}
- name: wallet
  endpoint:
    path: /api/wallet
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
    params: {}
- name: wallets
  endpoint:
    path: /wallets
    method: GET
    data_selector: wallets
    params: {}
- name: floor
  endpoint:
    path: /floor
    method: GET
    data_selector: floor_prices
    params: {}
- name: refresh
  endpoint:
    path: /refresh
    method: POST
    data_selector: refresh_function
    params: {}
- name: help
  endpoint:
    path: /help
    method: GET
    data_selector: collection_holdings
    params: {}
- name: collections
  endpoint:
    path: /api/v1/collections
    method: GET
    data_selector: data
    params: {}
- name: proposals
  endpoint:
    path: /proposals
    method: POST
    data_selector: proposal
    params: {}
- name: customer_support
  endpoint:
    path: /customer/support
    method: GET
- name: staking_transactions
  endpoint:
    path: /api/staking/transactions
    method: GET
    data_selector: transactions
- name: unstaking_transactions
  endpoint:
    path: /api/unstaking/transactions
    method: GET
    data_selector: transactions
- name: user_profile
  endpoint:
    path: /oauth2/v2/user/profile
    method: GET
    data_selector: profile
- name: user_wallets
  endpoint:
    path: /oauth2/v2/user/wallets
    method: GET
    data_selector: wallets
- name: user_email
  endpoint:
    path: /oauth2/v2/user/email
    method: GET
    data_selector: email
- name: user_twitter
  endpoint:
    path: /oauth2/v2/user/twitter
    method: GET
    data_selector: twitter
- name: user_discord
  endpoint:
    path: /oauth2/v2/user/discord
    method: GET
    data_selector: discord
- name: user_telegram
  endpoint:
    path: /oauth2/v2/user/telegram
    method: GET
    data_selector: telegram
- name: user_roles
  endpoint:
    path: /oauth2/v2/user/roles
    method: GET
    data_selector: roles
- name: user_nfts
  endpoint:
    path: /oauth2/v2/user/nfts
    method: GET
    data_selector: nfts
- name: user_tokens
  endpoint:
    path: /user/tokens
    method: GET
    data_selector: object[]
- name: user_domains
  endpoint:
    path: /user/domains
    method: GET
    data_selector: object[]
- name: enterprise_feed
  endpoint:
    path: /v1/feed
    method: GET
    params:
      skip: 0
- name: user
  endpoint:
    path: /v1/user/{username}
    method: GET
    data_selector: No content
    params: {}
- name: nft_collection_counts
  endpoint:
    path: /v1/user/{userId}/nft-collections
    method: GET
    data_selector: Returns the NFT collection counts for the user.
    params:
      collectionId: Optional
- name: user_pfp
  endpoint:
    path: /v1/user/{userId}/pfp
    method: GET
    data_selector: Returns the user PFP.
    params: {}
- name: wallet
  endpoint:
    path: /v1/wallet/{walletId}
    method: GET
    data_selector: wallet
    params:
      apiKey: string
- name: wallet_collections
  endpoint:
    path: /v1/wallet/{walletId}/collections
    method: GET
    data_selector: collections
    params:
      apiKey: string
      skip: number
      take: number
      sortBy: string
      sortDirection: string
      queryBy: string
      queryValue: string
      queryExact: boolean
- name: wallet_nfts
  endpoint:
    path: /v1/wallet/{walletId}/nfts
    method: GET
    data_selector: nfts
    params:
      apiKey: string
      skip: number
      take: number
      sortBy: string
      sortDirection: string
      queryBy: string
      queryValue: string
      queryExact: boolean
- name: events
  endpoint:
    path: /v1/event
    method: GET
    data_selector: events
    params:
      skip: 0
      take: 25
- name: event_details
  endpoint:
    path: /v1/event/:eventId
    method: GET
    data_selector: event
    params: {}
- name: issue_ticket
  endpoint:
    path: /v1/event/:eventId/member/:userId
    method: POST
    data_selector: ticket
    params: {}
- name: void_ticket
  endpoint:
    path: /v1/event/:eventId/ticket/:ticketId
    method: PATCH
    data_selector: voided_ticket
    params: {}
- name: get_nft_by_id
  endpoint:
    path: /v1/nft/{nftId}/royalty
    method: GET
    data_selector: NFT
    params:
      apiKey: ''
- name: refresh_nft
  endpoint:
    path: /v1/nft/{nftId}/refresh
    method: GET
    data_selector: NFT
    params: {}
- name: snapshot
  endpoint:
    path: /v1/snapshot/role/{roleId}
    method: GET
    data_selector: snapshot
    params:
      roleId: string
      apiKey: string
- name: Onboard Community
  endpoint:
    path: /api/reference/onboard
    method: POST
    data_selector: community
    params: {}
- name: search
  endpoint:
    path: /v1/search
    method: GET
    data_selector: object[]
    params:
      querystring: Required
      form: Optional
- name: collection
  endpoint:
    path: /v1/collection
    method: GET
    data_selector: '[]'
- name: collection_by_nft
  endpoint:
    path: /v1/collection/nft/{nftId}
    method: GET
    data_selector: '{}'
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
notes:
- Payments can be made via Stripe or Crypto.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Signing an off-chain message won't give Matrica access to your wallet. It is only
  used to verify ownership.
- All users need to select their reward wallets across all chains, to be eligible
  for Whitelist and Airdrop campaigns.
- Welcome to Matrica Business!
- If you would like to add a Coin/Token/Rune to your community, please reach out to
  the Matrica Team in your Support Channel.
- Get your Discord holder verification started!
- Get your Telegram holder verification started!
- Web-hooks allows for automated notifications sent directly to your Discord, Twitter
  or Telegram.
- 'Run the /setup command in your server to create the channel called #ðŸ”³-matrica-verify.'
- To get started with staking, contact your Matrica representative and provide them
  with a staking transaction and an unstaking transaction.
- If staking does not have a contract, provide an API to read a list of stakers and
  their NFTs.
- a minimum of one scope must be required by your app.
- Make sure to include params url encoded as query string params.
- The code has a short expiration time (~ 1minute).
- Store the refresh_token safely and use it to get a new access_token once it has
  expired.
- Use the user's OAuth2 access token to make these calls.
- Some APIs will only work with Solana wallets.
- Fetch feeds based on given parameters. This route is exclusive to Enterprise plans.
- Some objects like Contact may return nulls in deeply nested fields
errors:
- 400 Bad request.
- 401 JWT is missing or invalid.
- 404 Unknown Application
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'access_denied: If the user has denied the request.'
- '400: Bad request.'
- '404: User not found.'
- '400: Invalid user ID or user not found.'
- '400: Bad Request Event not found.'
- '400: Bad Request User not found.'
- '400: Bad Request User was blocked by the community to join this event.'
- '400: Bad Request Ticket not found.'
- 404 NFT not found.
- 404 Role not found.
- '400: Query parameter is required.'
- '404: No collections found.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Resource Owner
  - Client
  - Resource Server
  - Authorization Server
client:
  base_url: https://api.matrica.io
  auth:
    type: oauth2
    token_url: https://api.matrica.io/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: '*/*'
source_metadata: null
