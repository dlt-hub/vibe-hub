resources:
- name: accounts
  endpoint:
    path: /v1/accounts
    method: GET
    data_selector: records
    params:
      limit: 10
      descending: true
- name: airdrops
  endpoint:
    path: /v1/airdrops
    method: GET
    data_selector: records
    params: {}
- name: disputes
  endpoint:
    path: /v1/disputes
    method: GET
    data_selector: walletId
    params:
      descending: 'true'
      limit: 10
- name: airdrops
  endpoint:
    path: /v1/airdrops
    method: GET
    data_selector: walletId
    params:
      descending: 'true'
      limit: 10
- name: airdrop_programs
  endpoint:
    path: /v1/airdrop-programs
    method: GET
    data_selector: walletId
    params:
      descending: 'true'
      limit: 10
- name: create_dispute
  endpoint:
    path: /v1/disputes
    method: POST
    data_selector: dispute
    params: {}
- name: submit_dispute
  endpoint:
    path: /v1/disputes/{disputeId}/submit
    method: POST
    data_selector: dispute
    params:
      disputeId: required
- name: request_information_for_dispute
  endpoint:
    path: /v1/disputes/{disputeId}/request-information
    method: POST
    data_selector: dispute
    params:
      disputeId: required
- name: reject_dispute
  endpoint:
    path: /v1/disputes/{disputeId}/reject
    method: POST
    data_selector: dispute
    params:
      disputeId: required
- name: create_dispute_item
  endpoint:
    path: /v1/disputes/{disputeId}/item
    method: POST
    data_selector: dispute_item
    params:
      disputeId: required
- name: close_dispute
  endpoint:
    path: /v1/disputes/{disputeId}/close
    method: POST
    data_selector: dispute
    params:
      disputeId: required
- name: accept_dispute
  endpoint:
    path: /v1/disputes/{disputeId}/accept
    method: POST
    data_selector: dispute
    params:
      disputeId: required
- name: get_dispute
  endpoint:
    path: /v1/disputes/{disputeId}
    method: GET
    data_selector: dispute
    params:
      disputeId: required
- name: get_dispute_item_file
  endpoint:
    path: /v1/disputes/{disputeId}/item/{disputeItemId}/download
    method: GET
    data_selector: dispute_item_file
    params:
      disputeId: required
      disputeItemId: required
- name: get_document
  endpoint:
    path: /v1/documents/{documentId}
    method: GET
    data_selector: document
    params:
      documentId: required
- name: update_document
  endpoint:
    path: /v1/documents/{documentId}
    method: PUT
    data_selector: document
    params:
      documentId: required
- name: delete_document
  endpoint:
    path: /v1/documents/{documentId}
    method: DELETE
    data_selector: document
    params:
      documentId: required
- name: get_documents
  endpoint:
    path: /v1/documents
    method: GET
    data_selector: documents
    params: {}
- name: create_document
  endpoint:
    path: /v1/documents
    method: POST
    data_selector: document
    params: {}
- name: detach_wallet
  endpoint:
    path: /v1/documents/{documentId}/wallets/{walletId}/detach
    method: POST
    data_selector: detach_wallet
    params:
      documentId: required
      walletId: required
- name: attach_wallet
  endpoint:
    path: /v1/documents/{documentId}/wallets/{walletId}/attach
    method: POST
    data_selector: attach_wallet
    params:
      documentId: required
      walletId: required
- name: detach_transaction
  endpoint:
    path: /v1/documents/{documentId}/transactions/{transactionId}/detach
    method: POST
    data_selector: detach_transaction
    params:
      documentId: required
      transactionId: required
- name: attach_transaction
  endpoint:
    path: /v1/documents/{documentId}/transactions/{transactionId}/attach
    method: POST
- name: detach_account
  endpoint:
    path: /v1/documents/{documentId}/accounts/{accountId}/detach
    method: POST
- name: attach_account
  endpoint:
    path: /v1/documents/{documentId}/accounts/{accountId}/attach
    method: POST
- name: get_document_file
  endpoint:
    path: /v1/documents/{documentId}/download
    method: GET
- name: resend_event
  endpoint:
    path: /v1/events/{eventId}/resend
    method: POST
- name: get_list_events
  endpoint:
    path: /v1/events
    method: GET
- name: get_event
  endpoint:
    path: /v1/events/{eventId}
    method: GET
- name: get_grant
  endpoint:
    path: /v1/grants/{grantId}
    method: GET
- name: update_grant
  endpoint:
    path: /v1/grants/{grantId}
    method: PUT
- name: delete_grant
  endpoint:
    path: /v1/grants/{grantId}
    method: DELETE
- name: patch_grant
  endpoint:
    path: /v1/grants/{grantId}
    method: PATCH
- name: get_list_grants
  endpoint:
    path: /v1/grants
    method: GET
- name: create_grant
  endpoint:
    path: /v1/grants
    method: POST
- name: close_grant
  endpoint:
    path: /v1/grants/{grantId}/close
    method: POST
- name: get_identity
  endpoint:
    path: /v1/identities/{identityId}
    method: GET
- name: identities
  endpoint:
    path: /v1/identities
    method: GET
    data_selector: records
    params:
      limit: 10
      descending: true
- name: inventory_categories
  endpoint:
    path: /v1/inventory-categories
    method: GET
    data_selector: records
    params:
      limit: 10
      descending: true
- name: inventory_items
  endpoint:
    path: /v1/inventory-items
    method: GET
    data_selector: records
    params:
      limit: 10
      descending: true
- name: invoices
  endpoint:
    path: /v1/invoices
    method: GET
    data_selector: records
    params:
      descending: true
- name: invoice
  endpoint:
    path: /v1/invoices/{invoiceId}
    method: GET
    data_selector: records
    params: {}
- name: create_invoice
  endpoint:
    path: /v1/invoices
    method: POST
    data_selector: records
    params: {}
- name: update_invoice
  endpoint:
    path: /v1/invoices/{invoiceId}
    method: PUT
    data_selector: records
    params: {}
- name: delete_invoice
  endpoint:
    path: /v1/invoices/{invoiceId}
    method: DELETE
    data_selector: records
    params: {}
- name: invoices
  endpoint:
    path: /v1/invoices
    method: POST
    data_selector: invoice
    params: {}
- name: void_invoice
  endpoint:
    path: /v1/invoices/{invoiceId}/void
    method: POST
    data_selector: invoice
    params: {}
- name: send_invoice
  endpoint:
    path: /v1/invoices/{invoiceId}/send
    method: POST
    data_selector: invoice
    params: {}
- name: invoice_items
  endpoint:
    path: /v1/invoices/{invoiceId}/invoice-items
    method: POST
    data_selector: invoiceItem
    params: {}
- name: wallet_provider_metadata
  endpoint:
    path: /v1/metadata/wallet-providers
    method: GET
    data_selector: walletProviders
    params: {}
- name: blockchain_metadata
  endpoint:
    path: /v1/metadata/blockchains
    method: GET
    data_selector: blockchains
    params: {}
- name: organizations
  endpoint:
    path: /v1/network
    method: GET
    data_selector: organizations
    params: {}
- name: organization
  endpoint:
    path: /v1/network/{organizationId}
    method: GET
    data_selector: organization
    params: {}
- name: find_by_identifier
  endpoint:
    path: /v1/network/identifier/{type}/{value}
    method: GET
    data_selector: identifier
    params: {}
- name: unlink_payment_method
  endpoint:
    path: /v1/transactions/{transactionId}/unlink
    method: POST
    data_selector: unlinkResponse
    params: {}
- name: return_transaction
  endpoint:
    path: /v1/transactions/{transactionId}/return
    method: POST
    data_selector: returnTransactionResponse
    params: {}
- name: refund_transaction
  endpoint:
    path: /v1/transactions/{transactionId}/refund
    method: POST
    data_selector: refundTransactionResponse
    params: {}
- name: link_qr_code
  endpoint:
    path: /v1/transactions/{transactionId}/link-qr-code
    method: POST
    data_selector: response
    params: {}
- name: decline_transaction
  endpoint:
    path: /v1/transactions/{transactionId}/decline
    method: POST
    data_selector: response
    params: {}
- name: analyze_transaction
  endpoint:
    path: /v1/transactions/{transactionId}/compliance-integrations/{complianceIntegrationId}/analyze
    method: POST
    data_selector: response
    params: {}
- name: complete_transaction
  endpoint:
    path: /v1/transactions/{transactionId}/complete
    method: POST
    data_selector: response
    params: {}
- name: commit_transaction
  endpoint:
    path: /v1/transactions/{transactionId}/commit
    method: POST
    data_selector: response
    params: {}
- name: approve_transaction
  endpoint:
    path: /v1/transactions/{transactionId}/approve
    method: POST
    data_selector: response
    params: {}
- name: withdraw_transaction
  endpoint:
    path: /v1/transactions/withdraw
    method: POST
    data_selector: response
    params: {}
- name: transfer_transaction
  endpoint:
    path: /v1/transactions/transfer
    method: POST
    data_selector: response
    params: {}
- name: search_transactions
  endpoint:
    path: /v1/transactions/search
    method: POST
    data_selector: response
    params: {}
- name: payout_transaction
  endpoint:
    path: /v1/transactions/payout
    method: POST
    data_selector: response
    params: {}
- name: create_payment_session
  endpoint:
    path: /v1/transactions/payment
    method: POST
    data_selector: response
    params: {}
- name: network_transaction
  endpoint:
    path: /v1/transactions/network
    method: POST
- name: grant_transaction
  endpoint:
    path: /v1/transactions/grant
    method: POST
- name: airdrop_transaction
  endpoint:
    path: /v1/transactions/airdrop
    method: POST
- name: transaction_list
  endpoint:
    path: /v1/transactions
    method: GET
- name: transaction_detail
  endpoint:
    path: /v1/transactions/{transactionId}
    method: GET
- name: wallet_detail
  endpoint:
    path: /v1/wallets/{walletId}
    method: GET
- name: wallet_update
  endpoint:
    path: /v1/wallets/{walletId}
    method: PUT
- name: wallet_delete
  endpoint:
    path: /v1/wallets/{walletId}
    method: DELETE
- name: wallet_patch
  endpoint:
    path: /v1/wallets/{walletId}
    method: PATCH
- name: wallet_list
  endpoint:
    path: /v1/wallets
    method: GET
- name: wallet_monitor
  endpoint:
    path: /v1/wallets/{walletId}/monitor
    method: POST
- name: add_wallet_currency
  endpoint:
    path: /v1/wallets/{walletId}/currency
    method: POST
    data_selector: records
- name: commit_wallet_currency
  endpoint:
    path: /v1/wallets/{walletId}/currency/commit
    method: POST
    data_selector: records
- name: analyze_wallet
  endpoint:
    path: /v1/wallets/{walletId}/compliance-integrations/{complianceIntegrationId}/analyze
    method: POST
    data_selector: records
- name: search_wallets
  endpoint:
    path: /v1/wallets/search
    method: POST
    data_selector: records
- name: get_wallet_balance
  endpoint:
    path: /v1/wallets/{walletId}/balance
    method: GET
    data_selector: records
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
    params:
      incremental: updated
- name: airdrop
  endpoint:
    path: /airdrops
    method: GET
    data_selector: records
    params: {}
- name: airdropProgram
  endpoint:
    path: /airdrops/programs
    method: GET
    data_selector: records
    params: {}
- name: event
  endpoint:
    path: /services/data/vXX.X/sobjects/Event
    method: GET
    data_selector: records
    params: {}
- name: grant
  endpoint:
    path: /services/data/vXX.X/sobjects/Grant
    method: GET
    data_selector: records
    params: {}
- name: identity
  endpoint:
    path: /services/data/vXX.X/sobjects/Identity
    method: GET
    data_selector: records
    params: {}
- name: inventory_category
  endpoint:
    path: /services/data/vXX.X/sobjects/InventoryCategory
    method: GET
    data_selector: records
    params: {}
- name: inventory_item
  endpoint:
    path: /services/data/vXX.X/sobjects/InventoryItem
    method: GET
    data_selector: records
- name: invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    data_selector: transactions
- name: wallet
  endpoint:
    path: /api/wallets
    method: GET
    data_selector: records
- name: Currency
  endpoint:
    path: /currencies
    method: GET
    data_selector: currencies
    params: {}
notes:
- Default pagination limit is 10.
- Descending order is the default for list endpoints.
- All endpoints require a valid UUID for disputeId, documentId, walletId, and transactionId
  where specified.
- Default values for query parameters like descending is true and limit is 10.
- Requires unique accountId for each account.
- API supports fetching multiple related models.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Some objects like InventoryItem may return nulls in deeply nested fields
- string
errors:
- '400: Bad Request'
- '404: Not Found'
- '400 Bad Request: Check required fields and data format.'
- '404 Not Found: Verify the resource identifier.'
- 400 Bad Request
- 404 Not Found
- '400 Bad Request: Check if all required fields are provided.'
- '404 Not Found: Verify endpoint path or resource identifier.'
- code: PARAMETER_REQUIRED
  parameter: email
  message: A required parameter was missing.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- ACCOUNT_ID_REQUIRED
- ACCOUNT_LOCKED
- ACCOUNT_NOT_FOUND
- ACCOUNT_TYPE_REQUIRED
- ADDRESS_CITY_REQUIRED
- ADDRESS_COUNTRY_REQUIRED
- ADDRESS_LINE_1_REQUIRED
- ADDRESS_POSTCODE_REQUIRED
- AIRDROP_LOCKED
- AIRDROP_NOT_FOUND
- AIRDROP_NOT_OPEN
- AIRDROP_PROGRAM_LOCKED
- AIRDROP_PROGRAM_NOT_FOUND
- AIRDROP_PROGRAM_NOT_OPEN
- AMOUNT_REQUIRED
- APPROVE_NOT_ALLOWED
- ATTACHMENT_INVALID
- AUTHENTICATION_NOT_FOUND
- BLOCKCHAIN_REQUIRED
- COMMIT_NOT_ALLOWED
- COMPLETE_NOT_ALLOWED
- CONTENT_TYPE_NOT_SUPPORTED
- CONVERSION_KEY_NOT_CREATED
- CONVERSION_KEY_NOT_FOUND
- CONVERSION_KEY_NOT_ONLINE
- CURRENCY_NOT_IN_BLOCKCHAIN
- CURRENCY_NOT_IN_ORGANIZATION
- CURRENCY_NOT_IN_WALLET
- CURRENCY_NOT_SUPPORTED
- CURRENCY_REQUIRED
- DISPUTE_ITEM_NOT_FOUND
- DISPUTE_NOT_FOUND
- DISPUTE_REASON_REQUIRED
- DOCUMENT_NOT_FOUND
- DUPLICATE_TRANSACTION
- EVENT_DELIVERED
- EVENT_NOT_FOUND
- FEATURE_NOT_ENABLED
- FEATURE_NOT_SUPPORTED
- FIRST_NAME_REQUIRED
- GRANT_LOCKED
- GRANT_NOT_FOUND
- GRANT_NOT_OPEN
- HTTP_METHOD_NOT_SUPPORTED
- IDENTIFIER_EXISTS
- IDENTIFIER_NOT_FOUND
- IDENTITY_EXISTS
- IDENTITY_ID_REQUIRED
- IDENTITY_LOCKED
- IDENTITY_NOT_FOUND
- IDENTITY_TYPE_REQUIRED
- IDENTITY_VALUE_REQUIRED
- INSUFFICIENT_FUNDS
- INVENTORY_CATEGORY_LOCKED
- INVENTORY_CATEGORY_NOT_FOUND
- INVENTORY_ITEM_LOCKED
- INVENTORY_ITEM_NOT_FOUND
- INVOICE_ITEM_NOT_FOUND
- INVOICE_LOCKED
- INVOICE_NOT_FOUND
- LAST_NAME_REQUIRED
- MAXIMUM_LIMIT
- NATIONAL_ID_NUMBER_REQUIRED
- NEGATIVE_LIMIT
- NEGATIVE_OFFSET
- NUMBER_REQUIRED
- OPERATOR_WALLET_ID_REQUIRED
- OPERATOR_WALLET_NOT_FOUND
- ORGANIZATION_ID_REQUIRED
- ORGANIZATION_NOT_FOUND
- PARAMETER_MISMATCH
- PARAMETER_REQUIRED
- PAYMENT_WALL_NOT_FOUND
- PLATFORM_KEY_NOT_CREATED
- PLATFORM_KEY_NOT_FOUND
- PLATFORM_KEY_NOT_ONLINE
- REFERENCE_TOKEN_INVALID
- REFERENCE_TOKEN_REQUIRED
- REFUND_EXCEEDS_TOTAL
- REFUND_NOT_ALLOWED
- RETURN_EXCEEDS_TOTAL
- RETURN_NOT_ALLOWED
- SIGNATURE_COUNT_REQUIRED
- SIGNATURE_PAYLOAD_INVALID
- SIGNATURE_PAYLOAD_REQUIRED
- SIGNATURE_PAYLOAD_UNSIGNED
- SIGNER_INVALID
- SIGNER_KEY_NOT_CREATED
- SIGNER_KEY_NOT_FOUND
- SIGNER_KEY_NOT_ONLINE
- SIGNER_REQUIRED
- TRANSACTION_ID_REQUIRED
- TRANSACTION_IS_CLOSED
- TRANSACTION_NOT_APPROVABLE
- TRANSACTION_NOT_COMPLETABLE
- TRANSACTION_NOT_DECLINABLE
- TRANSACTION_NOT_DISPUTABLE
- TRANSACTION_NOT_FOUND
- TRANSACTION_NOT_REFUNDABLE
- TRANSACTION_NOT_RETURNABLE
- TRANSACTION_ROUTE_FAILURE
- TRANSACTION_SUBTYPE_INVALID
- TYPE_MISMATCH
- UNEXPECTED_ERROR
- WALLET_ADDRESS_INVALID
- WALLET_ADDRESS_REQUIRED
- WALLET_COUNT_LIMIT
- WALLET_ID_REQUIRED
- WALLET_LOCKED
- WALLET_NOT_FOUND
- WALLET_VERSION_INVALID
- WEBHOOK_DISABLED
- WEBHOOK_NOT_FOUND
- 'CONTENT_TYPE_NOT_SUPPORTED: The content type specified in the header is not supported.'
- 'HTTP_METHOD_NOT_SUPPORTED: The HTTP method used is not supported.'
- 'UNEXPECTED_ERROR: An unexpected error occurred.'
- 'ACCOUNT_NOT_FOUND: The specified account is not found.'
- 'AIRDROP_NOT_FOUND: The specified airdrop is not found.'
- 'AIRDROP_PROGRAM_NOT_FOUND: The specified airdropProgram is not found.'
- 'AUTHENTICATION_NOT_FOUND: The specified authentication is not found.'
- 'CONVERSION_KEY_NOT_FOUND: The specified conversionKeyId is not found.'
- 'EVENT_NOT_FOUND: The specified event is not found.'
- 'GRANT_NOT_FOUND: The specified grant is not found.'
- 'IDENTIFIER_NOT_FOUND: The specified identifier is not found.'
- 'IDENTITY_NOT_FOUND: The specified identity is not found.'
- 'INVENTORY_CATEGORY_NOT_FOUND: The specified inventory category is not found.'
- 'INVENTORY_ITEM_NOT_FOUND: The specified inventory item is not found.'
- 'INVOICE_ITEM_NOT_FOUND: The specified invoice item is not found.'
- 'INVOICE_NOT_FOUND: The specified invoice is not found.'
- 'OPERATOR_WALLET_NOT_FOUND: The specified wallet is not found.'
- 'ORGANIZATION_NOT_FOUND: The specified organization is not found.'
- 'PAYMENT_WALL_NOT_FOUND: The specified paymentWall is not found.'
- 'PLATFORM_KEY_NOT_FOUND: The specified platformKey is not found.'
- 'SIGNER_KEY_NOT_FOUND: The specified signerKeyId is not found.'
- 'TRANSACTION_NOT_FOUND: The specified transaction is not found.'
- 'WALLET_NOT_FOUND: The specified wallet is not found.'
- 'WEBHOOK_NOT_FOUND: The specified webhook is not found.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.versal.money
source_metadata: null
