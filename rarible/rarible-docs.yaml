resources:
- name: NFT Ownerships
  endpoint:
    path: /reference/getownershipbyid
    method: GET
- name: NFT Activities
  endpoint:
    path: /reference/getactivitiesbyuser
    method: GET
- name: NFT Collections
  endpoint:
    path: /reference/getcollectionbyid
    method: GET
- name: NFT Data and Historical Statistics
  endpoint:
    path: /reference/getuserrankingbyvolume
    method: GET
- name: collection
  endpoint:
    path: /reference/getcollectionbyid
    method: GET
- name: item
  endpoint:
    path: /reference/getitembyid
    method: GET
- name: supported_chains
  endpoint:
    path: /supported-chains
    method: GET
- name: ERC-721
  endpoint:
    path: /erc-721
    method: GET
    data_selector: tokens
    params: {}
- name: ERC-1155
  endpoint:
    path: /erc-1155
    method: GET
    data_selector: tokens
    params: {}
- name: ERC-20
  endpoint:
    path: /erc-20
    method: GET
    data_selector: tokens
    params: {}
- name: item
  endpoint:
    path: /item/{id}
    method: GET
- name: order
  endpoint:
    path: /order/{id}
    method: GET
- name: sell_orders_by_item
  endpoint:
    path: /orders/sell/{itemId}
    method: GET
- name: mcp_server
  endpoint:
    path: /mcp/start
    method: POST
- name: collection
  endpoint:
    path: /reference/getcollectionbyid
    method: GET
- name: item
  endpoint:
    path: /reference/getitembyid
    method: GET
- name: NFT
  endpoint:
    path: /reference/getallitems
    method: GET
- name: NFT Items
  endpoint:
    path: /reference/getallitems
    method: GET
- name: NFT Ownerships
  endpoint:
    path: /reference/getownershipsbyitem
    method: GET
- name: NFT Sales
  endpoint:
    path: /reference/getordersall
    method: GET
- name: NFT Activities
  endpoint:
    path: /reference/getactivitiesbyitem
    method: GET
- name: NFT Collections
  endpoint:
    path: /reference/getallcollections
    method: GET
- name: NFT Items
  endpoint:
    path: /reference/getitembyid
    method: GET
- name: NFT Ownerships
  endpoint:
    path: /reference/getownershipbyid
    method: GET
- name: NFT Sales
  endpoint:
    path: /reference/getorderbyid
    method: GET
- name: NFT Activities
  endpoint:
    path: /reference/getactivitiesbyuser
    method: GET
- name: NFT Collections
  endpoint:
    path: /reference/getcollectionbyid
    method: GET
- name: NFT Items
  endpoint:
    path: /reference/getitembyid
    method: GET
- name: NFT Ownerships
  endpoint:
    path: /reference/getownershipbyid
    method: GET
- name: NFT Sales
  endpoint:
    path: /reference/getorderbyid
    method: GET
- name: NFT Activities
  endpoint:
    path: /reference/getactivitiesbyuser
    method: GET
- name: NFT Collections
  endpoint:
    path: /reference/getcollectionbyid
    method: GET
- name: create_bid
  endpoint:
    path: /reference/create-bid
    method: POST
    data_selector: bid
    params: {}
- name: create_bid
  endpoint:
    path: /reference/create-bid
    method: POST
    data_selector: bid
    params: {}
- name: item
  endpoint:
    path: /reference/getitembyid
    method: GET
    data_selector: item
- name: order
  endpoint:
    path: /reference/accept-bid
    method: POST
    data_selector: transaction
- name: item
  endpoint:
    path: /item
    method: GET
    data_selector: records
- name: order
  endpoint:
    path: /order
    method: POST
    data_selector: records
- name: fee_settings
  endpoint:
    path: /reference/getorderfees
    method: GET
- name: list_nft
  endpoint:
    path: /reference/list-nft
    method: POST
- name: purchase_nft
  endpoint:
    path: /reference/purchase-nft
    method: POST
- name: create_bid
  endpoint:
    path: /reference/create-bid
    method: POST
- name: accept_bid
  endpoint:
    path: /reference/accept-bid
    method: POST
- name: NFT Items
  endpoint:
    path: /reference/getitembyid
    method: GET
- name: NFT Ownerships
  endpoint:
    path: /reference/getownershipbyid
    method: GET
- name: NFT Sales
  endpoint:
    path: /reference/getorderbyid
    method: GET
- name: NFT Activities
  endpoint:
    path: /reference/getactivitiesbyuser
    method: GET
- name: NFT Collections
  endpoint:
    path: /reference/getcollectionbyid
    method: GET
- name: Currencies and rates
  endpoint:
    path: /reference/getusdrate
    method: GET
- name: User balances
  endpoint:
    path: /reference/getbalance
    method: GET
- name: Indexer blocks
  endpoint:
    path: /reference/getlatestindexedblock
    method: GET
- name: NFT Items
  endpoint:
    path: /reference/nft-items
    method: GET
- name: NFT Ownerships
  endpoint:
    path: /reference/nft-ownerships
    method: GET
- name: NFT Sales
  endpoint:
    path: /reference/nft-sales
    method: GET
- name: NFT Activities
  endpoint:
    path: /reference/nft-activities
    method: GET
- name: NFT Collections
  endpoint:
    path: /reference/nft-collections
    method: GET
- name: NFT Data and Historical Statistics
  endpoint:
    path: /reference/nft-data-and-historical-statistics
    method: GET
- name: Signature operations
  endpoint:
    path: /reference/signature-operations
    method: POST
- name: Encode operations
  endpoint:
    path: /reference/encode-operations
    method: POST
- name: Currencies and rates
  endpoint:
    path: /reference/currencies-and-rates
    method: GET
- name: User balances
  endpoint:
    path: /reference/user-balances
    method: GET
- name: Indexer blocks
  endpoint:
    path: /reference/indexer-blocks
    method: GET
- name: NFT Items
  endpoint:
    path: /reference/nft-items
    method: GET
- name: NFT Ownerships
  endpoint:
    path: /reference/nft-ownerships
    method: GET
- name: NFT Sales
  endpoint:
    path: /reference/nft-sales
    method: GET
- name: NFT Activities
  endpoint:
    path: /reference/nft-activities
    method: GET
- name: NFT Collections
  endpoint:
    path: /reference/nft-collections
    method: GET
- name: NFT Data and Historical Statistics
  endpoint:
    path: /reference/nft-data-and-historical-statistics
    method: GET
- name: Signature operations
  endpoint:
    path: /reference/signature-operations
    method: POST
- name: Encode operations
  endpoint:
    path: /reference/encode-operations
    method: POST
- name: Currencies and rates
  endpoint:
    path: /reference/currencies-and-rates
    method: GET
- name: User balances
  endpoint:
    path: /reference/user-balances
    method: GET
- name: Indexer blocks
  endpoint:
    path: /reference/indexer-blocks
    method: GET
- name: NFT Items
  endpoint:
    path: /reference/getallitems
    method: GET
- name: NFT Ownerships
  endpoint:
    path: /reference/getownershipsbyitem
    method: GET
- name: NFT Sales
  endpoint:
    path: /reference/getorderbyid
    method: GET
- name: NFT Activities
  endpoint:
    path: /reference/getactivitiesbyuser
    method: GET
- name: NFT Collections
  endpoint:
    path: /reference/getallcollections
    method: GET
- name: NFT Items
  endpoint:
    path: /reference/getitembyid
    method: GET
- name: NFT Ownerships
  endpoint:
    path: /reference/getownershipbyid
    method: GET
- name: NFT Sales
  endpoint:
    path: /reference/getorderbyid
    method: GET
- name: NFT Activities
  endpoint:
    path: /reference/getactivitiesbyuser
    method: GET
- name: NFT Collections
  endpoint:
    path: /reference/getcollectionbyid
    method: GET
- name: NFT Data and Historical Statistics
  endpoint:
    path: /reference/getuserrankingbyvolume
    method: GET
- name: Signature operations
  endpoint:
    path: /reference/validate
    method: POST
- name: Encode operations
  endpoint:
    path: /reference/encode
    method: POST
- name: Currencies and rates
  endpoint:
    path: /reference/getusdrate
    method: GET
- name: User balances
  endpoint:
    path: /reference/getbalance
    method: GET
- name: Indexer blocks
  endpoint:
    path: /reference/getlatestindexedblock
    method: GET
- name: nft_items
  endpoint:
    path: /reference/getallitems
    method: GET
- name: nft_collections
  endpoint:
    path: /reference/getallcollections
    method: GET
- name: nft_activities
  endpoint:
    path: /reference/getallactivities
    method: GET
- name: Search NFT
  endpoint:
    path: /reference/searchitems
    method: POST
- name: NFT Items
  endpoint:
    path: /reference/getitembyid
    method: GET
- name: NFT Ownerships
  endpoint:
    path: /reference/getownershipbyid
    method: GET
- name: NFT Sales
  endpoint:
    path: /reference/getorderbyid
    method: GET
- name: NFT Activities
  endpoint:
    path: /reference/getactivitiesbyuser
    method: GET
- name: NFT Collections
  endpoint:
    path: /reference/getcollectionbyid
    method: GET
- name: NFT Data and Historical Statistics
  endpoint:
    path: /reference/getuserrankingbyvolume
    method: GET
- name: Signature operations
  endpoint:
    path: /reference/validate
    method: POST
- name: Encode operations
  endpoint:
    path: /reference/encode
    method: POST
- name: Currencies and rates
  endpoint:
    path: /reference/getusdrate
    method: GET
- name: User balances
  endpoint:
    path: /reference/getbalance
    method: GET
- name: Indexer blocks
  endpoint:
    path: /reference/getlatestindexedblock
    method: GET
- name: NFT Items
  endpoint:
    path: /reference/getitembyid
    method: GET
- name: NFT Ownerships
  endpoint:
    path: /reference/getownershipbyid
    method: GET
- name: NFT Sales
  endpoint:
    path: /reference/getorderbyid
    method: GET
- name: NFT Activities
  endpoint:
    path: /reference/getactivitiesbyuser
    method: GET
- name: NFT Collections
  endpoint:
    path: /reference/getcollectionbyid
    method: GET
- name: NFT Data and Historical Statistics
  endpoint:
    path: /reference/getuserrankingbyvolume
    method: GET
- name: Signature operations
  endpoint:
    path: /reference/validate
    method: POST
- name: Encode operations
  endpoint:
    path: /reference/encode
    method: POST
- name: Currencies and rates
  endpoint:
    path: /reference/getusdrate
    method: GET
- name: User balances
  endpoint:
    path: /reference/getbalance
    method: GET
- name: Indexer blocks
  endpoint:
    path: /reference/getlatestindexedblock
    method: GET
- name: NFT
  endpoint:
    path: /reference/getitembyid
    method: GET
    data_selector: Item
- name: NFT Items
  endpoint:
    path: /reference/getitembyid
    method: GET
    data_selector: Item
- name: NFT Ownerships
  endpoint:
    path: /reference/getownershipbyid
    method: GET
    data_selector: Ownership
- name: NFT Sales
  endpoint:
    path: /reference/getorderbyid
    method: GET
    data_selector: Order
- name: NFT Activities
  endpoint:
    path: /reference/getactivitiesbyuser
    method: GET
    data_selector: Activity
- name: NFT Collections
  endpoint:
    path: /reference/getcollectionbyid
    method: GET
    data_selector: Collection
- name: NFT Object Data Model
  endpoint:
    path: /nft-object-data-model
    method: GET
    data_selector: records
    params: {}
- name: Metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: records
    params: {}
- name: Metadata content
  endpoint:
    path: /metadata-content
    method: GET
    data_selector: records
    params: {}
- name: NFT Item
  endpoint:
    path: /nft-items
    method: GET
    data_selector: records
- name: NFT Collection
  endpoint:
    path: /nft-collections
    method: GET
    data_selector: records
- name: NFT Activities
  endpoint:
    path: /nft-activities
    method: GET
    data_selector: records
- name: order
  endpoint:
    path: /reference/getorderbyid
    method: GET
    data_selector: Order
    params: {}
- name: nft
  endpoint:
    path: /reference/getallitems
    method: GET
    data_selector: NFT
    params: {}
- name: activity
  endpoint:
    path: /reference/getallactivities
    method: GET
    data_selector: Activity
    params: {}
- name: activities
  endpoint:
    path: /reference/getactivitiesbyuser
    method: GET
    data_selector: activities
- name: orders
  endpoint:
    path: /reference/getorderbyid
    method: GET
- name: nft_items
  endpoint:
    path: /reference/nft-items
    method: GET
- name: nft_ownerships
  endpoint:
    path: /reference/nft-ownerships
    method: GET
- name: nft_sales
  endpoint:
    path: /reference/nft-sales
    method: GET
- name: nft_activities
  endpoint:
    path: /reference/nft-activities
    method: GET
- name: nft_collections
  endpoint:
    path: /reference/nft-collections
    method: GET
- name: OrderCancelListActivity
  endpoint:
    path: /reference/order-data-model
    method: GET
    data_selector: records
- name: OrderCancelBidActivity
  endpoint:
    path: /reference/order-data-model
    method: GET
    data_selector: records
- name: Contract Addresses
  endpoint:
    path: /reference/contract-addresses
    method: GET
- name: activities
  endpoint:
    path: /reference/getactivitiesbyuser
    method: GET
    data_selector: activities
- name: nft_items
  endpoint:
    path: /reference/getitembyid
    method: GET
    data_selector: nft_items
- name: nft_ownerships
  endpoint:
    path: /reference/getownershipbyid
    method: GET
    data_selector: nft_ownerships
- name: nft_sales
  endpoint:
    path: /reference/getorderbyid
    method: GET
    data_selector: nft_sales
- name: nft_collections
  endpoint:
    path: /reference/getcollectionbyid
    method: GET
    data_selector: nft_collections
- name: OrderCancelListActivity
  endpoint:
    path: /OrderCancelListActivity
    method: GET
    data_selector: records
- name: OrderCancelBidActivity
  endpoint:
    path: /OrderCancelBidActivity
    method: GET
    data_selector: records
- name: search_nfts
  endpoint:
    path: /items/search
    method: POST
    data_selector: items
    params: {}
- name: contract_addresses
  endpoint:
    path: /reference/contract-addresses
    method: GET
    data_selector: addresses
    params: {}
- name: nft_ownerships
  endpoint:
    path: /ownerships/search
    method: POST
    data_selector: ownerships
    params:
      size: '50'
- name: search_nfts
  endpoint:
    path: /items/search
    method: POST
    data_selector: items
    params:
      size: 50
- name: search_activities
  endpoint:
    path: /activities/search
    method: POST
    data_selector: activities
    params:
      size: '50'
- name: nft_ownerships
  endpoint:
    path: /ownerships/search
    method: POST
    data_selector: ownerships
    params:
      size: '50'
- name: nft_collections
  endpoint:
    path: /collections/search
    method: POST
    data_selector: collections
    params:
      size: 50
- name: search_activities
  endpoint:
    path: /activities/search
    method: POST
    data_selector: activities
    params:
      size: '50'
- name: nft_item
  endpoint:
    path: /items/{itemId}
    method: GET
    data_selector: object
- name: items
  endpoint:
    path: /items/{itemId}
    method: GET
- name: search_nft_collections
  endpoint:
    path: /collections/search
    method: POST
    data_selector: collections
- name: get_nft_by_ids
  endpoint:
    path: /items/byIds
    method: POST
    data_selector: items
- name: nft_royalties
  endpoint:
    path: /items/{itemId}/royalties
    method: GET
    data_selector: royalties
- name: nft_item
  endpoint:
    path: /items/{itemId}
    method: GET
    data_selector: object
- name: reset_nft_metadata
  endpoint:
    path: /items/{itemId}/resetMeta
    method: DELETE
- name: items
  endpoint:
    path: /items/{itemId}
    method: GET
- name: nft_by_ids
  endpoint:
    path: /items/byIds
    method: POST
    data_selector: items
- name: nft_owned_by_user
  endpoint:
    path: /items/byOwner
    method: GET
    data_selector: items
    params:
      owner: string
      blockchains: array of strings
      continuation: string
      size: integer
- name: nft_royalties
  endpoint:
    path: /items/{itemId}/royalties
    method: GET
    data_selector: royalties
- name: ownership
  endpoint:
    path: /ownerships/{ownershipId}
    method: GET
    data_selector: object
- name: reset_nft_metadata
  endpoint:
    path: /items/{itemId}/resetMeta
    method: DELETE
- name: nft_ownerships_by_ids
  endpoint:
    path: /ownerships/byIds
    method: POST
    data_selector: ownerships
    params:
      ids: array of strings
- name: get_nft_owned_by_user
  endpoint:
    path: /items/byOwner
    method: GET
    data_selector: items
    params:
      owner: string
      blockchains: array of strings
      continuation: string
      size: integer
- name: nft_collection_ownerships
  endpoint:
    path: /ownerships/byCollection
    method: GET
    data_selector: ownerships
    params:
      collection: string
      continuation: string
      size: integer
- name: nft_ownership
  endpoint:
    path: /ownerships/{ownershipId}
    method: GET
    data_selector: object
- name: nft_ownerships
  endpoint:
    path: /ownerships/byItem
    method: GET
    data_selector: ownerships
    params:
      itemId: string
      continuation: string
      size: integer
- name: nft_ownerships_by_ids
  endpoint:
    path: /ownerships/byIds
    method: POST
    data_selector: ownerships
    params: {}
- name: get_order
  endpoint:
    path: /orders/{id}
    method: GET
    data_selector: object
    params: {}
- name: nft_collection_ownerships
  endpoint:
    path: /ownerships/byCollection
    method: GET
    data_selector: ownerships
    params:
      collection: string
      continuation: string
      size: integer
- name: prepare_order_transaction
  endpoint:
    path: /orders/{id}/prepareTx
    method: POST
- name: prepare_order_cancel_transaction
  endpoint:
    path: /orders/{id}/prepareCancelTx
    method: POST
    data_selector: object
    params: {}
- name: nft_ownerships
  endpoint:
    path: /ownerships/byItem
    method: GET
    data_selector: ownerships
    params:
      itemId: string
      continuation: string
      size: integer
- name: order
  endpoint:
    path: /orders/{id}
    method: GET
    data_selector: object
    params: {}
- name: create_or_update_order
  endpoint:
    path: /orders
    method: POST
- name: validated_order
  endpoint:
    path: /orders/{id}/validate
    method: GET
- name: prepare_order_transaction
  endpoint:
    path: /orders/{id}/prepareTx
    method: POST
- name: orders_by_ids
  endpoint:
    path: /orders/byIds
    method: POST
    data_selector: orders
    params: {}
- name: prepare_order_cancel_transaction
  endpoint:
    path: /orders/{id}/prepareCancelTx
    method: POST
- name: orders
  endpoint:
    path: /orders/all
    method: GET
    data_selector: orders
    params: {}
- name: create_or_update_order
  endpoint:
    path: /upsertorder
    method: POST
- name: get_all_orders_sync
  endpoint:
    path: /orders/sync
    method: GET
    data_selector: orders
    params:
      blockchain: APTOS
- name: validated_order
  endpoint:
    path: /orders/{id}/validate
    method: GET
    data_selector: object
    params: {}
- name: sell_orders
  endpoint:
    path: /orders/sell/byItem
    method: GET
    data_selector: orders
    params: {}
- name: orders
  endpoint:
    path: /orders/byIds
    method: POST
    data_selector: orders
    params:
      ids: array of strings
- name: sell_orders
  endpoint:
    path: /orders/sell
    method: GET
    data_selector: orders
    params: {}
- name: orders
  endpoint:
    path: /orders/all
    method: GET
    data_selector: orders
    params:
      blockchains: []
      continuation: ''
      size: 100
      sort: LAST_UPDATE_DESC
      status: []
- name: user_bid_orders
  endpoint:
    path: /orders/bids/byMaker
    method: GET
    data_selector: orders
    params:
      maker: ''
      blockchains: ''
      platform: ''
      collection: ''
      status: ''
      currencies: ''
      start: ''
      end: ''
      continuation: ''
      size: 10
- name: orders
  endpoint:
    path: /orders/sync
    method: GET
    params:
      blockchain: ''
      continuation: ''
      size: ''
      sort: ''
- name: bid_orders
  endpoint:
    path: /orders/bids/byItem
    method: GET
    data_selector: orders
    params: {}
- name: sell_orders
  endpoint:
    path: /orders/sell/byItem
    method: GET
    data_selector: orders
    params:
      size: 1
- name: floor_bids
  endpoint:
    path: /orders/floorBids/byCollection
    method: GET
    data_selector: orders
    params:
      collectionId: ETHEREUM:${token}
- name: sell_orders
  endpoint:
    path: /orders/sell
    method: GET
    data_selector: orders
    params:
      blockchains: array of strings
      platform: string
      continuation: string
      size: int32
- name: fee_settings
  endpoint:
    path: /orders/settings/fees
    method: GET
- name: user_bid_orders
  endpoint:
    path: /orders/bids/byMaker
    method: GET
    data_selector: orders
- name: user_activities
  endpoint:
    path: /activities/byUser
    method: GET
    data_selector: activities
    params:
      user: user
      type: type
- name: bid_orders_for_nft
  endpoint:
    path: /orders/bids/byItem
    method: GET
    data_selector: orders
    params: {}
- name: users_activities
  endpoint:
    path: /activities/byUsers
    method: POST
- name: floor_bids
  endpoint:
    path: /orders/floorBids/byCollection
    method: GET
- name: activities
  endpoint:
    path: /activities/byItem
    method: GET
- name: fee_settings
  endpoint:
    path: /orders/settings/fees
    method: GET
    data_selector: fees
    params: {}
- name: nft_collection_activities
  endpoint:
    path: /activities/byCollection
    method: GET
    data_selector: activities
- name: user_activities
  endpoint:
    path: /activities/byUser
    method: GET
    data_selector: activities
    params:
      type: required
      user: required
- name: activities
  endpoint:
    path: /activities/sync
    method: GET
    data_selector: activities
    params:
      blockchain: APTOS
- name: users_activities
  endpoint:
    path: /activities/byUsers
    method: POST
- name: activities
  endpoint:
    path: /activities/all
    method: GET
    data_selector: activities
- name: activities
  endpoint:
    path: /activities/byItem
    method: GET
    data_selector: activities
- name: reset_collection_metadata
  endpoint:
    path: /collections/{collection}/resetMeta
    method: DELETE
- name: nft_collection_activities
  endpoint:
    path: /activities/byCollection
    method: GET
    data_selector: activities
    params:
      type: ADD
      collection: ADD
      bidCurrencies: ADD
      continuation: ''
      cursor: ''
      size: 0
      sort: LATEST_FIRST
- name: activities
  endpoint:
    path: /activities/sync
    method: GET
    data_selector: activities
    params:
      blockchain: ''
      continuation: ''
      size: ''
      sort: ''
      type: ''
- name: NFT Collections owned by user
  endpoint:
    path: /collections/byOwner
    method: GET
    data_selector: collections
    params:
      owner: string
      blockchains: array of strings
      continuation: string
      size: integer
- name: activities
  endpoint:
    path: /activities/all
    method: GET
    data_selector: activities
- name: reset_collection_metadata
  endpoint:
    path: /collections/{collection}/resetMeta
    method: DELETE
    data_selector: object
    params: {}
- name: nft_collections
  endpoint:
    path: /collections/all
    method: GET
    data_selector: collections
- name: nft_collections_owned_by_user
  endpoint:
    path: /collections/byOwner
    method: GET
    data_selector: collections
    params:
      owner: string
      blockchains: array of strings
      continuation: string
      size: integer
- name: user_volume
  endpoint:
    path: /data/rankings/{entity}/volume
    method: GET
    data_selector: result
    params:
      limit: '10'
- name: nft_collections
  endpoint:
    path: /collections/all
    method: GET
    data_selector: collections
- name: nft_collections_volume
  endpoint:
    path: /data/rankings/collections/volume
    method: GET
    data_selector: result
- name: user_volume
  endpoint:
    path: /data/rankings/{entity}/volume
    method: GET
    data_selector: result
    params:
      limit: 10
- name: nft_collection_tx_stats
  endpoint:
    path: /collections/{collection}/transactions
    method: GET
    data_selector: object
    params: {}
- name: nft_collections_volume
  endpoint:
    path: /data/rankings/collections/volume
    method: GET
    data_selector: result
    params: {}
- name: nft_collection_stats
  endpoint:
    path: /data/collections/{collection}/stats
    method: GET
    data_selector: object
- name: NFT Collection tx stats
  endpoint:
    path: /gettransactions
    method: GET
    data_selector: historicalValues
    params:
      collection: string
      filters: string
- name: NFT Collection Statistics
  endpoint:
    path: /data/collections/{collection}/statistics
    method: GET
    data_selector: object
- name: collection_stats
  endpoint:
    path: /data/collections/{collection}/stats
    method: GET
    data_selector: object
    params: {}
- name: nft_collection_buyer_stats
  endpoint:
    path: /data/collections/{collection}/buyers
    method: GET
    data_selector: object
- name: NFT Collection statistics
  endpoint:
    path: /collections/{collection}/statistics
    method: GET
- name: nft_collection_listing_stats
  endpoint:
    path: /data/collections/{collection}/listed
    method: GET
    data_selector: object
- name: nft_collection_buyer_stats
  endpoint:
    path: /data/collections/{collection}/buyers
    method: GET
    data_selector: object
    params: {}
- name: get_usd_rate
  endpoint:
    path: /currencies/{currencyId}/rates/usd
    method: GET
- name: supported_currencies
  endpoint:
    path: /currencies/all
    method: GET
- name: NFT Collection listing stats
  endpoint:
    path: /data/collections/{collection}/listed
    method: GET
    data_selector: object
    params: {}
- name: get_usd_rate
  endpoint:
    path: /{currencyId}/rates/usd
    method: GET
- name: get_balance
  endpoint:
    path: /balances/{currencyId}/{owner}
    method: GET
    data_selector: object
    params: {}
- name: supported_currencies
  endpoint:
    path: /currencies/all
    method: GET
- name: latest_indexed_block
  endpoint:
    path: /blocks/latestIndexed
    method: GET
    data_selector: blockchain
- name: user_balance
  endpoint:
    path: /balances/{currencyId}/{owner}
    method: GET
    data_selector: object
    params: {}
- name: check_order_signature
  endpoint:
    path: /signature/validate
    method: POST
    data_selector: boolean
- name: latest_indexed_block
  endpoint:
    path: /blocks/latestIndexed
    method: GET
    data_selector: blockNumber
    params:
      blockchain: APTOS
- name: generate_order_encode_data
  endpoint:
    path: /encode/order
    method: POST
- name: check_order_signature
  endpoint:
    path: /signature/validate
    method: POST
    data_selector: boolean
- name: get_usd_rate
  endpoint:
    path: /currencies/{currencyId}/rates/usd
    method: GET
    data_selector: object
- name: balance
  endpoint:
    path: /balances/{currencyId}/{owner}
    method: GET
- name: generate_order_encode_data
  endpoint:
    path: /encode/order
    method: POST
- name: currency_usd_rate
  endpoint:
    path: /currencies/{currencyId}/rates/usd
    method: GET
- name: user_balance
  endpoint:
    path: /balances/{currencyId}/{owner}
    method: GET
    data_selector: object
notes:
- Rarible provides access to the tools that the team has been developing for the past
  4 years, with wide functionality and data on all the NFTs created.
- 99,99% uptime for our API
- Replace XXXXX with the API key which you got on https://rarible.org
- The maximum royalties value is 10000 (100%).
- There can be different addresses on each chain.
- This example will help you get started with the Rarible SDK.
- Verify API key permissions and spec version.
- Handle rate limits (`429` errors) per Rarible's documentation.
- To check the status page of the Rarible API, simply visit https://status.rarible.org/
- Rarible Protocol Exchange contract has flexible fee structure and allows to set
  up these types of fees and royalties
- Purchasing an NFT using the Rarible SDK is a straightforward process.
- Remember to handle exceptions and errors appropriately to ensure a smooth user experience.
- Bid must be at least 75% for the floor price to avoid spam.
- Ensure the user's wallet is connected.
- Addresses in EVM-compatible blockchain networks are the same, so to correctly filter
  by owner or creator, you must use the prefixes appropriate for each specific network.
- This API is deprecated in favor of `Search Activities`.
errors:
- '429: Rate limit exceeded'
- 'BAD_REQUEST: Validation failed'
- 'UNKNOWN: Internal server error'
- 'BAD_REQUEST: Defaults to BAD_REQUEST'
- 'UNKNOWN: Defaults to UNKNOWN'
- 'BAD_REQUEST: Error message'
- 'UNKNOWN: Error message'
- 'BAD_REQUEST: Validation failed for the request'
- 'UNKNOWN: An unexpected error occurred'
- 'BAD_REQUEST: Validation error'
- 'NOT_FOUND: Error message'
- '400 Bad Request: Validation error in the request body.'
- '500 Internal Server Error: An unknown error occurred.'
- '400 Bad Request: Error message'
- '500 Internal Server Error: Error message'
- 'BAD_REQUEST: Validation errors'
- 'NOT_FOUND: The requested resource could not be found'
- 400 Bad Request
- 500 Internal Server Error
- '404 Not Found: Error message'
- 'BAD_REQUEST: Validation error in the request'
- 'VALIDATION: Error message'
- BAD_REQUEST
- NOT_FOUND
- UNKNOWN
- VALIDATION
- 'BAD_REQUEST: Validation error occurred'
- 'NOT_FOUND: Requested resource was not found'
- 'UNKNOWN: Internal server error occurred'
- '400 Bad Request: Defaults to BAD_REQUEST'
- '404 Not Found: Defaults to NOT_FOUND'
- '500 Internal Server Error: Defaults to UNKNOWN'
- 'BAD_REQUEST: Validation errors may occur'
- 'UNKNOWN: An internal server error occurred'
- '400 Bad Request: Check parameters for correctness'
- '500 Internal Server Error: Retry the request'
- '400 Bad Request: BAD_REQUEST'
- '500 Internal Server Error: UNKNOWN'
- 'BAD_REQUEST: Validation errors in request parameters'
- INVALID_INPUT
- 'INVALID_INPUT: Check input values for correctness'
- 'NOT_FOUND: Verify the requested resource exists'
- '400 Bad Request: Invalid input'
- '404 Not found: Not found'
- '500 Internal Server Error: Unknown error'
- 'INVALID_INPUT: Check your input parameters'
- 'NOT_FOUND: The requested resource was not found'
- 'UNKNOWN: An unknown error occurred'
- '400 Bad Request: INVALID_INPUT, NOT_FOUND, UNKNOWN'
- '404 Not found: INVALID_INPUT, NOT_FOUND, UNKNOWN'
- '500 Internal Server Error: INVALID_INPUT, NOT_FOUND, UNKNOWN'
- '400 Bad Request: Check input parameters'
- '404 Not found: Verify collection identifier'
- '500 Internal Server Error: Try again later'
- '400 Bad Request: Code INVALID_INPUT, NOT_FOUND, UNKNOWN'
- '404 Not found: Code INVALID_INPUT, NOT_FOUND, UNKNOWN'
- '500 Internal Server Error: Code INVALID_INPUT, NOT_FOUND, UNKNOWN'
- 'BAD_REQUEST: Validation errors occurred'
- 'NOT_FOUND: The resource was not found'
- 'NOT_FOUND: Resource not found'
auth_info:
  mentioned_objects: []
client:
  base_url: https://environment.rarible.org/v0.1/ownerships/search
  headers:
    accept: application/json
    content-type: application/json
source_metadata: null
