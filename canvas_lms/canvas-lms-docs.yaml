resources:
- name: authentication_events_by_login
  endpoint:
    path: /logins/:login_id
    method: GET
    data_selector: events
    params:
      start_time: DateTime
      end_time: DateTime
- name: authentication_events_by_account
  endpoint:
    path: /accounts/:account_id
    method: GET
    data_selector: events
    params:
      start_time: DateTime
      end_time: DateTime
- name: authentication_events_by_user
  endpoint:
    path: /users/:user_id
    method: GET
    data_selector: events
    params:
      start_time: DateTime
      end_time: DateTime
- name: authentication_events
  endpoint:
    path: /api/v1/audit/authentication/users/:user_id
    method: GET
    params: {}
- name: course
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.course
    params: {}
- name: course
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.course
    params: {}
- name: courses
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.course
    params: {}
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
- name: file_upload
  endpoint:
    path: /api/v1/users/self/files
    method: POST
    data_selector: upload_url
    params: {}
- name: file_uploads
  endpoint:
    path: /api/v1/users/self/files
    method: POST
    data_selector: upload_url
- name: session_token
  endpoint:
    path: /login/session_token
    method: GET
    data_selector: session_url
- name: account_calendars
  endpoint:
    path: /api/v1/account_calendars
    method: GET
    data_selector: AccountCalendar
    params: {}
- name: account_notifications
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: GET
    data_selector: AccountNotification
    params: {}
- name: account_calendars
  endpoint:
    path: /api/v1/account_calendars
    method: GET
- name: account_notifications
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: GET
- name: account_notifications
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: POST
    data_selector: null
    params:
      account_notification[subject]: Required
      account_notification[message]: Required
      account_notification[start_at]: Required
      account_notification[end_at]: Required
- name: reports
  endpoint:
    path: /api/v1/accounts/:account_id/reports
    method: GET
    data_selector: null
    params:
      include[]: null
- name: account_notifications
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: POST
    data_selector: subject
    params:
      account_notification[subject]: Required
      account_notification[message]: Required
      account_notification[start_at]: Required
      account_notification[end_at]: Required
- name: reports
  endpoint:
    path: /api/v1/accounts/:account_id/reports
    method: GET
    data_selector: name
    params:
      include[]: optional
- name: sub_accounts
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts
    method: GET
    data_selector: sub_accounts
    params:
      recursive: optional
      order: optional
      include[]: optional
- name: courses
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: GET
    data_selector: courses
    params: {}
- name: update_account
  endpoint:
    path: /api/v1/accounts/:id
    method: PUT
    data_selector: account
    params: {}
- name: delete_user
  endpoint:
    path: /api/v1/accounts/:account_id/users/:user_id
    method: DELETE
    data_selector: user
    params: {}
- name: bulk_update_users
  endpoint:
    path: /api/v1/accounts/:account_id/users/bulk_update
    method: PUT
    data_selector: users
    params: {}
- name: restore_user
  endpoint:
    path: /api/v1/accounts/:account_id/users/:user_id/restore
    method: PUT
    data_selector: user
    params: {}
- name: create_sub_account
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts
    method: POST
    data_selector: sub_account
    params: {}
- name: delete_sub_account
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts/:id
    method: DELETE
    data_selector: sub_account
    params: {}
- name: get_account
  endpoint:
    path: /api/lti/accounts/:account_id
    method: GET
    data_selector: account
    params: {}
- name: list_admins
  endpoint:
    path: /api/v1/accounts/:account_id/admins
    method: GET
    data_selector: admins
    params: {}
- name: make_account_admin
  endpoint:
    path: /api/v1/accounts/:account_id/admins
    method: POST
    data_selector: admin
    params: {}
- name: remove_account_admin
  endpoint:
    path: /api/v1/accounts/:account_id/admins/:user_id
    method: DELETE
    data_selector: admin
    params: {}
- name: courses
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: GET
    data_selector: courses
    params: {}
- name: update_account
  endpoint:
    path: /api/v1/accounts/:id
    method: PUT
    data_selector: account
    params: {}
- name: delete_user
  endpoint:
    path: /api/v1/accounts/:account_id/users/:user_id
    method: DELETE
    data_selector: user
    params: {}
- name: delete_multiple_users
  endpoint:
    path: /api/v1/accounts/:account_id/users
    method: DELETE
    data_selector: users
    params: {}
- name: update_multiple_users
  endpoint:
    path: /api/v1/accounts/:account_id/users/bulk_update
    method: PUT
    data_selector: users
    params: {}
- name: restore_user
  endpoint:
    path: /api/v1/accounts/:account_id/users/:user_id/restore
    method: PUT
    data_selector: user
    params: {}
- name: create_sub_account
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts
    method: POST
    data_selector: sub_account
    params: {}
- name: delete_sub_account
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts/:id
    method: DELETE
    data_selector: sub_account
    params: {}
- name: get_account
  endpoint:
    path: /api/lti/accounts/:account_id
    method: GET
    data_selector: account
    params: {}
- name: list_admins
  endpoint:
    path: /api/v1/accounts/:account_id/admins
    method: GET
    data_selector: admins
    params: {}
- name: make_account_admin
  endpoint:
    path: /api/v1/accounts/:account_id/admins
    method: POST
    data_selector: admin
    params: {}
- name: remove_account_admin
  endpoint:
    path: /api/v1/accounts/:account_id/admins/:user_id
    method: DELETE
    data_selector: admin
    params: {}
- name: list_my_admin_roles
  endpoint:
    path: /api/v1/accounts/:account_id/admins/self_roles
    method: GET
    data_selector: roles
    params: {}
- name: current_user_roles
  endpoint:
    path: /api/v1/accounts/:account_id/admins/self
    method: GET
    data_selector: Admin
    params: {}
- name: department_participation
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/current/activity
    method: GET
    data_selector: page view hits
    params: {}
- name: department_grades
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/current/grades
    method: GET
    data_selector: grades distribution
    params: {}
- name: department_statistics
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/current/statistics
    method: GET
    data_selector: statistics
    params: {}
- name: course_participation
  endpoint:
    path: /api/v1/courses/:course_id/analytics/activity
    method: GET
    data_selector: participation details
    params: {}
- name: course_assignments
  endpoint:
    path: /api/v1/courses/:course_id/analytics/assignments
    method: GET
    data_selector: assignments list
    params: {}
- name: course_student_summaries
  endpoint:
    path: /api/v1/courses/:course_id/analytics/student_summaries
    method: GET
    data_selector: student summaries
    params: {}
- name: current_user_roles
  endpoint:
    path: /api/v1/accounts/:account_id/admins/self
    method: GET
    data_selector: Admin
    params: {}
- name: department_participation
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/current/activity
    method: GET
    data_selector: activity
    params: {}
- name: department_grades
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/current/grades
    method: GET
    data_selector: grades
    params: {}
- name: department_statistics
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/current/statistics
    method: GET
    data_selector: statistics
    params: {}
- name: course_participation
  endpoint:
    path: /api/v1/courses/:course_id/analytics/activity
    method: GET
    data_selector: activity
    params: {}
- name: course_assignments
  endpoint:
    path: /api/v1/courses/:course_id/analytics/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: student_summaries
  endpoint:
    path: /api/v1/courses/:course_id/analytics/student_summaries
    method: GET
    data_selector: student_summaries
    params: {}
- name: announcements
  endpoint:
    path: /api/v1/announcements
    method: GET
    data_selector: announcements
- name: appointment_groups
  endpoint:
    path: /api/v1/appointment_groups
    method: GET
    data_selector: appointment_groups
- name: assignment_groups
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups
    method: GET
    data_selector: assignment_groups
- name: announcements
  endpoint:
    path: /api/v1/announcements
    method: GET
    data_selector: records
    params:
      context_codes[]: ''
      start_date: ''
      end_date: ''
      available_after: ''
      active_only: ''
      latest_only: ''
      include[]: ''
- name: appointment_groups
  endpoint:
    path: /api/v1/appointment_groups
    method: GET
    data_selector: records
    params:
      scope: reservable
      context_codes[]: ''
      include_past_appointments: ''
      include[]: ''
- name: assignment_groups
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups
    method: GET
    data_selector: records
    params:
      include[]: ''
      assignment_ids[]: ''
      exclude_assignment_submission_types[]: ''
      override_assignment_dates: ''
      grading_period_id: ''
      scope_assignments_to_student: ''
- name: assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups/:assignment_group_id
    method: GET
    data_selector: AssignmentGroup
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: GET
    data_selector: Assignment
- name: assignment_groups
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups
    method: POST
    data_selector: AssignmentGroup
    params: {}
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: GET
    data_selector: Assignment
    params: {}
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: POST
    data_selector: assignment
    params: {}
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: POST
    data_selector: assignment
    params: {}
- name: edit_assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: PUT
    data_selector: assignment
    params: {}
- name: bulk_update_assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments/bulk_update
    method: PUT
    data_selector: assignment
    params: {}
- name: assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: GET
- name: assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: GET
- name: bulk_update_assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments/bulk_update
    method: PUT
- name: create_assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: POST
- name: update_assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides/:id
    method: PUT
- name: delete_assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides/:id
    method: DELETE
- name: batch_create_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/overrides
    method: POST
- name: batch_update_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/overrides
    method: PUT
- name: list_authentication_providers
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers
    method: GET
- name: authentication_providers
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers
    method: POST
    data_selector: AuthenticationProvider
    params: {}
- name: sso_settings
  endpoint:
    path: /api/v1/accounts/:account_id/sso_settings
    method: GET
    data_selector: SSOSettings
    params: {}
- name: blackout_dates
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates
    method: POST
    data_selector: BlackoutDate
    params: {}
- name: bookmarks
  endpoint:
    path: /api/v1/users/self/bookmarks
    method: GET
    data_selector: Bookmark
    params: {}
- name: authentication_providers
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers
    method: POST
    data_selector: authentication_provider
    params: {}
- name: sso_settings
  endpoint:
    path: /api/v1/accounts/:account_id/sso_settings
    method: GET
    data_selector: sso_settings
    params: {}
- name: bookmarks
  endpoint:
    path: /api/v1/users/self/bookmarks/:id
    method: GET
    data_selector: Bookmark
- name: calendar_events
  endpoint:
    path: /api/v1/calendar_events
    method: GET
    data_selector: CalendarEvent
- name: timetable_events
  endpoint:
    path: /api/v1/courses/:course_id/calendar_events/timetable
    method: POST
    data_selector: timetables
    params: {}
- name: course_timetable
  endpoint:
    path: /api/v1/courses/:course_id/calendar_events/timetable
    method: GET
    data_selector: timetable
    params: {}
- name: switch_experience
  endpoint:
    path: /api/v1/career/switch_experience
    method: POST
    data_selector: experience
    params: {}
- name: switch_role
  endpoint:
    path: /api/v1/career/switch_role
    method: POST
    data_selector: role
    params: {}
- name: communication_channels
  endpoint:
    path: /api/v1/users/:user_id/communication_channels
    method: GET
    data_selector: communication_channels
    params: {}
- name: content_exports
  endpoint:
    path: /api/v1/courses/:course_id/content_exports
    method: GET
    data_selector: content_exports
    params: {}
- name: migration_issues
  endpoint:
    path: /api/v1/users/:user_id/content_migrations/:content_migration_id/migration_issues
    method: GET
    data_selector: MigrationIssue
- name: content_migrations
  endpoint:
    path: /api/v1/users/:user_id/content_migrations
    method: GET
    data_selector: ContentMigration
- name: create_content_migration
  endpoint:
    path: /api/v1/users/:user_id/content_migrations
    method: POST
    data_selector: ContentMigration
- name: update_content_migration
  endpoint:
    path: /api/v1/users/:user_id/content_migrations/:id
    method: PUT
    data_selector: ContentMigration
- name: blackout_dates
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates/:id
    method: GET
- name: blackout_dates_new
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates/new
    method: GET
- name: create_blackout_date
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates
    method: POST
- name: update_blackout_date
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates/:id
    method: PUT
- name: delete_blackout_date
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates/:id
    method: DELETE
- name: content_migrations_selective_data
  endpoint:
    path: /api/v1/users/:user_id/content_migrations/:id/selective_data
    method: GET
    data_selector: property
- name: asset_id_mapping
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:id/asset_id_mapping
    method: GET
    data_selector: asset_id_mapping
- name: csp_settings
  endpoint:
    path: /api/v1/courses/:course_id/csp_settings
    method: GET
    data_selector: settings
- name: content_shares
  endpoint:
    path: /api/v1/users/:user_id/content_shares
    method: POST
    data_selector: content_share
- name: bookmarks
  endpoint:
    path: /api/v1/users/self/bookmarks/:id
    method: GET
- name: update_bookmark
  endpoint:
    path: /api/v1/users/self/bookmarks/:id
    method: PUT
- name: delete_bookmark
  endpoint:
    path: /api/v1/users/self/bookmarks/:id
    method: DELETE
- name: brand_variables
  endpoint:
    path: /api/v1/brand_variables
    method: GET
- name: user_calendar_events
  endpoint:
    path: /api/v1/users/:user_id/calendar_events
    method: GET
- name: create_calendar_event
  endpoint:
    path: /api/v1/calendar_events
    method: POST
- name: update_calendar_event
  endpoint:
    path: /api/v1/calendar_events/:id
    method: PUT
- name: delete_calendar_event
  endpoint:
    path: /api/v1/calendar_events/:id
    method: DELETE
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: records
    params: {}
- name: create_conversation
  endpoint:
    path: /api/v1/conversations
    method: POST
    data_selector: records
    params: {}
- name: get_running_batches
  endpoint:
    path: /api/v1/conversations/batches
    method: GET
    data_selector: records
    params: {}
- name: get_single_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: GET
    data_selector: records
    params: {}
- name: edit_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: PUT
    data_selector: records
    params: {}
- name: mark_all_as_read
  endpoint:
    path: /api/v1/conversations/mark_all_as_read
    method: POST
    data_selector: records
    params: {}
- name: delete_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: DELETE
    data_selector: records
    params: {}
- name: add_recipients
  endpoint:
    path: /api/v1/conversations/:id/add_recipients
    method: POST
    data_selector: records
    params: {}
- name: add_message
  endpoint:
    path: /api/v1/conversations/:id/add_message
    method: POST
    data_selector: records
    params: {}
- name: timetable_events
  endpoint:
    path: /api/v1/courses/:course_id/calendar_events/timetable
    method: POST
- name: course_timetable
  endpoint:
    path: /api/v1/courses/:course_id/calendar_events/timetable
    method: GET
- name: timetable_events_direct
  endpoint:
    path: /api/v1/courses/:course_id/calendar_events/timetable_events
    method: POST
- name: experience_summary
  endpoint:
    path: /api/v1/career/experience_summary
    method: GET
- name: switch_experience
  endpoint:
    path: /api/v1/career/switch_experience
    method: POST
- name: switch_role
  endpoint:
    path: /api/v1/career/switch_role
    method: POST
- name: collaborations
  endpoint:
    path: /api/v1/courses/:course_id/collaborations
    method: GET
- name: collaboration_members
  endpoint:
    path: /api/v1/collaborations/:id/members
    method: GET
- name: potential_collaborators
  endpoint:
    path: /api/v1/courses/:course_id/potential_collaborators
    method: GET
- name: comm_messages
  endpoint:
    path: /api/v1/comm_messages
    method: GET
- name: communication_channels
  endpoint:
    path: /api/v1/users/:user_id/communication_channels
    method: GET
- name: create_communication_channel
  endpoint:
    path: /api/v1/users/:user_id/communication_channels
    method: POST
- name: delete_communication_channel
  endpoint:
    path: /api/v1/users/:user_id/communication_channels/:id
    method: DELETE
- name: conferences
  endpoint:
    path: /api/v1/courses/:course_id/conferences
    method: GET
- name: user_conferences
  endpoint:
    path: /api/v1/conferences
    method: GET
- name: content_exports
  endpoint:
    path: /api/v1/courses/:course_id/content_exports
    method: GET
- name: show_content_export
  endpoint:
    path: /api/v1/courses/:course_id/content_exports/:id
    method: GET
- name: export_content
  endpoint:
    path: /api/v1/courses/:course_id/content_exports
    method: POST
- name: migration_issues
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:content_migration_id/migration_issues
    method: GET
- name: migration_issues
  endpoint:
    path: /api/v1/users/:user_id/content_migrations/:content_migration_id/migration_issues
    method: GET
- name: content_migrations
  endpoint:
    path: /api/v1/users/:user_id/content_migrations
    method: GET
- name: add_message
  endpoint:
    path: /api/v1/conversations/:id/add_message
    method: POST
    data_selector: messages
    params:
      body: Required
      attachment_ids[]: ''
      media_comment_id: ''
      media_comment_type: ''
      recipients[]: ''
      included_messages[]: ''
- name: remove_messages
  endpoint:
    path: /api/v1/conversations/:id/remove_messages
    method: POST
    data_selector: messages
    params:
      remove[]: Required
- name: batch_update
  endpoint:
    path: /api/v1/conversations
    method: PUT
    data_selector: conversations
    params:
      conversation_ids[]: Required
      event: Required
- name: unread_count
  endpoint:
    path: /api/v1/conversations/unread_count
    method: GET
    data_selector: unread_count
    params: {}
- name: for_course
  endpoint:
    path: /api/v1/audit/course/courses/:course_id
    method: GET
    data_selector: course_events
    params:
      start_time: ''
      end_time: ''
- name: for_account
  endpoint:
    path: /api/v1/audit/course/accounts/:account_id
    method: GET
    data_selector: course_events
    params:
      start_time: ''
      end_time: ''
- name: course_pacing_show
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing/:id
    method: GET
    data_selector: course_pace
    params:
      course_id: Required
      course_pace_id: Required
- name: course_pacing_create
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing
    method: POST
    data_selector: course_pace
    params:
      course_id: Required
- name: course_pacing_update
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing/:id
    method: PUT
    data_selector: course_pace
    params:
      course_id: Required
      course_pace_id: Required
- name: course_pacing_destroy
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing/:id
    method: DELETE
    data_selector: course_pace
    params:
      course_id: Required
      course_pace_id: Required
- name: quiz_extensions
  endpoint:
    path: /api/v1/courses/:course_id/quiz_extensions
    method: POST
    data_selector: quiz_extensions
    params:
      user_id: Required
- name: course_reports_show
  endpoint:
    path: /api/v1/courses/:course_id/reports/:report_type/:id
    method: GET
    data_selector: report
    params: {}
- name: course_reports_create
  endpoint:
    path: /api/v1/courses/:course_id/reports/:report_type
    method: POST
    data_selector: report
    params:
      course_id: ''
      report_type: ''
- name: course_reports_last
  endpoint:
    path: /api/v1/courses/:course_id/reports/:report_type
    method: GET
    data_selector: report
    params: {}
- name: list_courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
    params: {}
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
    params: {}
- name: user_courses
  endpoint:
    path: /api/v1/users/:user_id/courses
    method: GET
    data_selector: courses
    params: {}
- name: user_progress
  endpoint:
    path: /api/v1/courses/:course_id/users/:user_id/progress
    method: GET
    data_selector: progress
    params: {}
- name: create_course
  endpoint:
    path: /api/v1/courses
    method: POST
    data_selector: course
    params: {}
- name: selective_data
  endpoint:
    path: /api/v1/users/:user_id/content_migrations/:id/selective_data
    method: GET
    data_selector: content
    params:
      type: context_modules,assignments,quizzes,assessment_question_banks,discussion_topics,wiki_pages,context_external_tools,tool_profiles,announcements,calendar_events,rubrics,groups,learning_outcomes,attachments
- name: asset_id_mapping
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:id/asset_id_mapping
    method: GET
- name: csp_settings
  endpoint:
    path: /api/v1/courses/:course_id/csp_settings
    method: GET
- name: update_csp_settings
  endpoint:
    path: /api/v1/courses/:course_id/csp_settings
    method: PUT
- name: add_domain
  endpoint:
    path: /api/v1/accounts/:account_id/csp_settings/domains
    method: POST
- name: remove_domain
  endpoint:
    path: /api/v1/accounts/:account_id/csp_settings/domains
    method: DELETE
- name: create_content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares
    method: POST
- name: list_content_shares
  endpoint:
    path: /api/v1/users/:user_id/content_shares/sent
    method: GET
- name: get_unread_shares_count
  endpoint:
    path: /api/v1/users/:user_id/content_shares/unread_count
    method: GET
- name: courses
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: POST
    data_selector: course
    params: {}
- name: students
  endpoint:
    path: /api/v1/courses/:course_id/students
    method: GET
    data_selector: students
    params: {}
- name: users
  endpoint:
    path: /api/v1/courses/:course_id/users
    method: GET
    data_selector: users
    params: {}
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: records
    params: {}
- name: create_conversation
  endpoint:
    path: /api/v1/conversations
    method: POST
    data_selector: records
    params: {}
- name: get_running_batches
  endpoint:
    path: /api/v1/conversations/batches
    method: GET
    data_selector: records
    params: {}
- name: get_single_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: GET
    data_selector: records
    params: {}
- name: edit_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: PUT
    data_selector: records
    params: {}
- name: mark_all_as_read
  endpoint:
    path: /api/v1/conversations/mark_all_as_read
    method: POST
    data_selector: records
    params: {}
- name: delete_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: DELETE
    data_selector: records
    params: {}
- name: add_recipients
  endpoint:
    path: /api/v1/conversations/:id/add_recipients
    method: POST
    data_selector: records
    params: {}
- name: add_message
  endpoint:
    path: /api/v1/conversations/:id/add_message
    method: POST
    data_selector: records
    params: {}
- name: show_access_token
  endpoint:
    path: /api/v1/users/:user_id/tokens/:id
    method: GET
    data_selector: ''
    params: {}
- name: create_access_token
  endpoint:
    path: /api/v1/users/:user_id/tokens
    method: POST
    data_selector: ''
    params: {}
- name: update_access_token
  endpoint:
    path: /api/v1/users/:user_id/tokens/:id
    method: PUT
    data_selector: ''
    params: {}
- name: delete_access_token
  endpoint:
    path: /api/v1/users/:user_id/tokens/:id
    method: DELETE
    data_selector: ''
    params: {}
- name: add_message
  endpoint:
    path: /api/v1/conversations/:id/add_message
    method: POST
- name: remove_messages
  endpoint:
    path: /api/v1/conversations/:id/remove_messages
    method: POST
- name: batch_update
  endpoint:
    path: /api/v1/conversations
    method: PUT
- name: unread_count
  endpoint:
    path: /api/v1/conversations/unread_count
    method: GET
- name: account_calendars
  endpoint:
    path: /api/v1/account_calendars
    method: GET
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
    params: {}
- name: user_courses
  endpoint:
    path: /api/v1/users/:user_id/courses
    method: GET
    data_selector: courses
    params: {}
- name: user_progress
  endpoint:
    path: /api/v1/courses/:course_id/users/:user_id/progress
    method: GET
    data_selector: progress
    params: {}
- name: account_calendar
  endpoint:
    path: /api/v1/account_calendars/:account_id
    method: GET
    data_selector: AccountCalendar
- name: update_calendar
  endpoint:
    path: /api/v1/account_calendars/:account_id
    method: PUT
    data_selector: AccountCalendar
- name: bulk_update_calendars
  endpoint:
    path: /api/v1/accounts/:account_id/account_calendars
    method: PUT
    data_selector: count
- name: all_calendars
  endpoint:
    path: /api/v1/accounts/:account_id/account_calendars
    method: GET
    data_selector: AccountCalendar
- name: visible_calendars_count
  endpoint:
    path: /api/v1/accounts/:account_id/visible_calendars_count
    method: GET
    data_selector: count
- name: courses
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: POST
- name: course_files
  endpoint:
    path: /api/v1/courses/:course_id/files
    method: POST
- name: course_students
  endpoint:
    path: /api/v1/courses/:course_id/students
    method: GET
- name: course_users
  endpoint:
    path: /api/v1/courses/:course_id/users
    method: GET
- name: search_users
  endpoint:
    path: /api/v1/courses/:course_id/search_users
    method: GET
- name: search_account_domains
  endpoint:
    path: /api/v1/accounts/search
    method: GET
    data_selector: ''
- name: show_access_token
  endpoint:
    path: /api/v1/users/:user_id/tokens/:id
    method: GET
- name: create_access_token
  endpoint:
    path: /api/v1/users/:user_id/tokens
    method: POST
- name: update_access_token
  endpoint:
    path: /api/v1/users/:user_id/tokens/:id
    method: PUT
- name: delete_access_token
  endpoint:
    path: /api/v1/users/:user_id/tokens/:id
    method: DELETE
- name: account_calendars
  endpoint:
    path: /api/v1/account_calendars
    method: GET
- name: account_notifications
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: GET
    data_selector: notifications
    params:
      include_past: boolean
      include_all: boolean
      show_is_closed: boolean
- name: show_global_notification
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications/:id
    method: GET
    data_selector: notification
    params: {}
- name: create_global_notification
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: POST
    data_selector: subject
    params:
      account_notification[subject]: Required
      account_notification[message]: Required
      account_notification[start_at]: Required
      account_notification[end_at]: Required
- name: update_global_notification
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications/:id
    method: PUT
    data_selector: subject
    params: {}
- name: close_notification
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications/:id
    method: DELETE
    data_selector: remove
    params:
      remove: boolean
- name: account_calendar
  endpoint:
    path: /api/v1/account_calendars/:account_id
    method: GET
    data_selector: AccountCalendar
- name: update_calendar
  endpoint:
    path: /api/v1/account_calendars/:account_id
    method: PUT
    data_selector: AccountCalendar
- name: bulk_update_calendars
  endpoint:
    path: /api/v1/accounts/:account_id/account_calendars
    method: PUT
    data_selector: count
- name: all_calendars
  endpoint:
    path: /api/v1/accounts/:account_id/account_calendars
    method: GET
    data_selector: AccountCalendar
- name: visible_calendars_count
  endpoint:
    path: /api/v1/accounts/:account_id/visible_calendars_count
    method: GET
    data_selector: count
- name: search_account_domains
  endpoint:
    path: /api/v1/accounts/search
    method: GET
    data_selector: records
    params: {}
- name: available_reports
  endpoint:
    path: /account_reports/available_reports
    method: GET
- name: start_report
  endpoint:
    path: /account_reports/create
    method: POST
- name: index_reports
  endpoint:
    path: /account_reports/index
    method: GET
- name: status_report
  endpoint:
    path: /account_reports/show
    method: GET
- name: delete_report
  endpoint:
    path: /account_reports/destroy
    method: DELETE
- name: abort_report
  endpoint:
    path: /account_reports/abort
    method: POST
- name: account_notifications
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: GET
    data_selector: AccountNotification
    params:
      include_past: boolean
      include_all: boolean
      show_is_closed: boolean
- name: show_notification
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications/:id
    method: GET
    data_selector: AccountNotification
    params: {}
- name: available_reports
  endpoint:
    path: /api/v1/accounts/:account_id/reports
    method: GET
- name: start_report
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report
    method: POST
- name: index_reports
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report
    method: GET
- name: status_of_report
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report/:id
    method: GET
- name: delete_report
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report/:id
    method: DELETE
- name: abort_report
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report/:id/abort
    method: PUT
- name: create_global_notification
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: POST
    data_selector: subject
    params:
      account_notification[subject]: Required
      account_notification[message]: Required
      account_notification[start_at]: Required
      account_notification[end_at]: Required
- name: update_global_notification
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications/:id
    method: PUT
    data_selector: subject
    params: {}
- name: close_notification
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications/:id
    method: DELETE
    data_selector: remove
    params:
      remove: boolean
- name: account
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
- name: available_reports
  endpoint:
    path: /account_reports/available_reports
    method: GET
- name: create_report
  endpoint:
    path: /account_reports/create
    method: POST
- name: index_reports
  endpoint:
    path: /account_reports/index
    method: GET
- name: show_report
  endpoint:
    path: /account_reports/show
    method: GET
- name: destroy_report
  endpoint:
    path: /account_reports/destroy
    method: DELETE
- name: abort_report
  endpoint:
    path: /account_reports/abort
    method: POST
- name: available_reports
  endpoint:
    path: /api/v1/accounts/:account_id/reports
    method: GET
    data_selector: null
    params: {}
- name: start_report
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report
    method: POST
    data_selector: null
    params: {}
- name: index_reports
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report
    method: GET
    data_selector: null
    params: {}
- name: status_report
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report/:id
    method: GET
    data_selector: null
    params: {}
- name: delete_report
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report/:id
    method: DELETE
    data_selector: null
    params: {}
- name: abort_report
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report/:id/abort
    method: PUT
    data_selector: null
    params: {}
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
- name: sub_accounts
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts
    method: GET
    data_selector: sub_accounts
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
- name: manageable_accounts
  endpoint:
    path: /api/v1/manageable_accounts
    method: GET
    data_selector: accounts
- name: course_creation_accounts
  endpoint:
    path: /api/v1/course_creation_accounts
    method: GET
    data_selector: accounts
- name: course_accounts
  endpoint:
    path: /api/v1/course_accounts
    method: GET
    data_selector: accounts
- name: account_details
  endpoint:
    path: /api/v1/accounts/:id
    method: GET
    data_selector: account
- name: account_settings
  endpoint:
    path: /api/v1/accounts/:account_id/settings
    method: GET
    data_selector: settings
- name: environment_settings
  endpoint:
    path: /api/v1/settings/environment
    method: GET
    data_selector: settings
- name: permissions
  endpoint:
    path: /api/v1/accounts/:account_id/permissions
    method: GET
    data_selector: permissions
- name: sub_accounts
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts
    method: GET
    data_selector: sub_accounts
- name: terms_of_service
  endpoint:
    path: /api/v1/accounts/:account_id/terms_of_service
    method: GET
    data_selector: terms_of_service
- name: help_links
  endpoint:
    path: /api/v1/accounts/:account_id/help_links
    method: GET
    data_selector: help_links
- name: manually_created_courses_account
  endpoint:
    path: /api/v1/manually_created_courses_account
    method: GET
    data_selector: account
- name: courses
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: GET
    data_selector: courses
- name: update_account
  endpoint:
    path: /api/v1/accounts/:account_id
    method: PUT
    data_selector: account
- name: accounts
  endpoint:
    path: /api/v1/accounts/:id
    method: PUT
    data_selector: null
    params: {}
- name: remove_user
  endpoint:
    path: /api/v1/accounts/:account_id/users/:user_id
    method: DELETE
    data_selector: null
    params: {}
- name: remove_users
  endpoint:
    path: /api/v1/accounts/:account_id/users
    method: DELETE
    data_selector: null
    params: {}
- name: update_users
  endpoint:
    path: /api/v1/accounts/:account_id/users/bulk_update
    method: PUT
    data_selector: null
    params: {}
- name: restore_user
  endpoint:
    path: /api/v1/accounts/:account_id/users/:user_id/restore
    method: PUT
    data_selector: null
    params: {}
- name: create_sub_account
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts
    method: POST
    data_selector: null
    params: {}
- name: delete_sub_account
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts/:id
    method: DELETE
    data_selector: null
    params: {}
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: Account
    params: {}
- name: manageable_accounts
  endpoint:
    path: /api/v1/manageable_accounts
    method: GET
    data_selector: Account
    params: {}
- name: course_creation_accounts
  endpoint:
    path: /api/v1/course_creation_accounts
    method: GET
    data_selector: Account
    params: {}
- name: course_accounts
  endpoint:
    path: /api/v1/course_accounts
    method: GET
    data_selector: Account
    params: {}
- name: single_account
  endpoint:
    path: /api/v1/accounts/:id
    method: GET
    data_selector: Account
    params: {}
- name: account_settings
  endpoint:
    path: /api/v1/accounts/:account_id/settings
    method: GET
    data_selector: settings
    params: {}
- name: environment_settings
  endpoint:
    path: /api/v1/settings/environment
    method: GET
    data_selector: settings
    params: {}
- name: account_permissions
  endpoint:
    path: /api/v1/accounts/:account_id/permissions
    method: GET
    data_selector: permissions
    params: {}
- name: sub_accounts
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts
    method: GET
    data_selector: Account
    params: {}
- name: terms_of_service
  endpoint:
    path: /api/v1/accounts/:account_id/terms_of_service
    method: GET
    data_selector: TermsOfService
    params: {}
- name: help_links
  endpoint:
    path: /api/v1/accounts/:account_id/help_links
    method: GET
    data_selector: HelpLinks
    params: {}
- name: manually_created_courses_account
  endpoint:
    path: /api/v1/manually_created_courses_account
    method: GET
    data_selector: Account
    params: {}
- name: courses_in_account
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: GET
    data_selector: Course
    params: {}
- name: account
  endpoint:
    path: /accounts/:account_id
    method: GET
    data_selector: Account
- name: account_admins
  endpoint:
    path: /api/v1/accounts/:account_id/admins
    method: GET
- name: make_account_admin
  endpoint:
    path: /api/v1/accounts/:account_id/admins
    method: POST
- name: remove_account_admin
  endpoint:
    path: /api/v1/accounts/:account_id/admins/:user_id
    method: DELETE
- name: admin_roles
  endpoint:
    path: /api/v1/accounts/:account_id/admins/self
    method: GET
    data_selector: Admin
- name: update_account
  endpoint:
    path: /api/v1/accounts/:id
    method: PUT
    data_selector: null
    params: {}
- name: delete_user
  endpoint:
    path: /api/v1/accounts/:account_id/users/:user_id
    method: DELETE
    data_selector: null
    params: {}
- name: delete_multiple_users
  endpoint:
    path: /api/v1/accounts/:account_id/users
    method: DELETE
    data_selector: null
    params: {}
- name: update_multiple_users
  endpoint:
    path: /api/v1/accounts/:account_id/users/bulk_update
    method: PUT
    data_selector: null
    params: {}
- name: restore_user
  endpoint:
    path: /api/v1/accounts/:account_id/users/:user_id/restore
    method: PUT
    data_selector: null
    params: {}
- name: create_sub_account
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts
    method: POST
    data_selector: null
    params: {}
- name: delete_sub_account
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts/:id
    method: DELETE
    data_selector: null
    params: {}
- name: account
  endpoint:
    path: /api/lti/accounts/:account_id
    method: GET
    data_selector: Account
- name: department_participation
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/current/activity
    method: GET
- name: department_grades
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/current/grades
    method: GET
- name: department_statistics
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/current/statistics
    method: GET
- name: course_participation
  endpoint:
    path: /api/v1/courses/:course_id/analytics/activity
    method: GET
- name: course_assignments
  endpoint:
    path: /api/v1/courses/:course_id/analytics/assignments
    method: GET
- name: admins
  endpoint:
    path: /api/v1/accounts/:account_id/admins
    method: GET
    data_selector: admins
    params:
      include_deleted: 'false'
- name: make_account_admin
  endpoint:
    path: /api/v1/accounts/:account_id/admins
    method: POST
    data_selector: admin
    params: {}
- name: remove_account_admin
  endpoint:
    path: /api/v1/accounts/:account_id/admins/:user_id
    method: DELETE
    data_selector: admin
    params: {}
- name: student_summaries
  endpoint:
    path: /api/v1/courses/:course_id/analytics/student_summaries
    method: GET
    data_selector: records
    params: {}
- name: user_activity
  endpoint:
    path: /api/v1/courses/:course_id/analytics/users/:student_id/activity
    method: GET
    data_selector: records
    params: {}
- name: user_assignments
  endpoint:
    path: /api/v1/courses/:course_id/analytics/users/:student_id/assignments
    method: GET
    data_selector: records
    params: {}
- name: user_communication
  endpoint:
    path: /api/v1/courses/:course_id/analytics/users/:student_id/communication
    method: GET
    data_selector: records
    params: {}
- name: admin_roles
  endpoint:
    path: /api/v1/accounts/:account_id/admins/self
    method: GET
    data_selector: Admin
- name: external_feeds
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds
    method: GET
    data_selector: ExternalFeed
- name: create_external_feed
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds
    method: POST
- name: department_participation
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/current/activity
    method: GET
    data_selector: activity
- name: department_grades
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/current/grades
    method: GET
    data_selector: grades
- name: department_statistics
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/current/statistics
    method: GET
    data_selector: statistics
- name: course_participation
  endpoint:
    path: /api/v1/courses/:course_id/analytics/activity
    method: GET
    data_selector: activity
- name: course_assignments
  endpoint:
    path: /api/v1/courses/:course_id/analytics/assignments
    method: GET
    data_selector: assignments
- name: external_feed
  endpoint:
    path: /api/v1/groups/:group_id/external_feeds
    method: POST
    data_selector: ExternalFeed
    params:
      url: http://example.com/rss.xml
      header_match: news flash!
      verbosity: full
- name: delete_external_feed
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds/:external_feed_id
    method: DELETE
    data_selector: ExternalFeed
- name: delete_group_external_feed
  endpoint:
    path: /api/v1/groups/:group_id/external_feeds/:external_feed_id
    method: DELETE
    data_selector: ExternalFeed
- name: student_summaries
  endpoint:
    path: /api/v1/courses/:course_id/analytics/student_summaries
    method: GET
    data_selector: records
    params: {}
- name: student_activity
  endpoint:
    path: /api/v1/courses/:course_id/analytics/users/:student_id/activity
    method: GET
    data_selector: records
    params: {}
- name: student_assignments
  endpoint:
    path: /api/v1/courses/:course_id/analytics/users/:student_id/assignments
    method: GET
    data_selector: records
    params: {}
- name: student_communication
  endpoint:
    path: /api/v1/courses/:course_id/analytics/users/:student_id/communication
    method: GET
    data_selector: records
    params: {}
- name: announcements
  endpoint:
    path: /api/v1/announcements
    method: GET
    data_selector: announcements
    params:
      context_codes[]: required
      start_date: ''
      end_date: ''
      available_after: ''
      active_only: ''
      latest_only: ''
      include: ''
- name: scopes
  endpoint:
    path: /api/v1/accounts/:account_id/scopes
    method: GET
- name: external_feeds
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds
    method: GET
    data_selector: ExternalFeed
    params: {}
- name: create_external_feed
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds
    method: POST
    data_selector: ExternalFeed
    params: {}
- name: appointment_groups
  endpoint:
    path: /appointment_groups
    method: GET
    data_selector: records
- name: external_feed_create
  endpoint:
    path: /api/v1/groups/:group_id/external_feeds
    method: POST
    data_selector: null
    params:
      url: Required
      header_match: null
      verbosity: null
- name: external_feed_delete_course
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds/:external_feed_id
    method: DELETE
    data_selector: null
    params: {}
- name: external_feed_delete_group
  endpoint:
    path: /api/v1/groups/:group_id/external_feeds/:external_feed_id
    method: DELETE
    data_selector: null
    params: {}
- name: appointment_groups
  endpoint:
    path: /api/v1/appointment_groups
    method: GET
    data_selector: appointment_groups
- name: single_appointment_group
  endpoint:
    path: /api/v1/appointment_groups/:id
    method: GET
    data_selector: appointment_group
- name: create_appointment_group
  endpoint:
    path: /api/v1/appointment_groups
    method: POST
    data_selector: appointment_group
- name: update_appointment_group
  endpoint:
    path: /api/v1/appointment_groups/:id
    method: PUT
    data_selector: appointment_group
- name: delete_appointment_group
  endpoint:
    path: /api/v1/appointment_groups/:id
    method: DELETE
    data_selector: appointment_group
- name: list_participants
  endpoint:
    path: /api/v1/appointment_groups/:id/users
    method: GET
    data_selector: participants
- name: list_student_group_participants
  endpoint:
    path: /api/v1/appointment_groups/:id/groups
    method: GET
    data_selector: groups
- name: next_appointment
  endpoint:
    path: /api/v1/appointment_groups/next_appointment
    method: GET
    data_selector: next_appointment
- name: announcements
  endpoint:
    path: /api/v1/announcements
    method: GET
    data_selector: announcements
    params:
      context_codes[]: course_123
- name: scopes
  endpoint:
    path: /api/v1/accounts/:account_id/scopes
    method: GET
    data_selector: scopes
    params:
      group_by: resource_name
- name: appointment_groups
  endpoint:
    path: /appointment_groups
    method: GET
    data_selector: appointment_groups
- name: assignment_extensions
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/extensions
    method: POST
    data_selector: assignment_extensions
- name: assignment_group
  endpoint:
    path: /assignment_groups
    method: GET
- name: assignment_groups
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups
    method: GET
    data_selector: AssignmentGroup
- name: assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups/:assignment_group_id
    method: GET
    data_selector: AssignmentGroup
- name: create_assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups
    method: POST
    data_selector: AssignmentGroup
- name: edit_assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups/:assignment_group_id
    method: PUT
    data_selector: AssignmentGroup
- name: delete_assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups/:assignment_group_id
    method: DELETE
    data_selector: AssignmentGroup
- name: assignments
  endpoint:
    path: /assignments
    method: GET
- name: assignment_overrides
  endpoint:
    path: /assignment_overrides
    method: GET
- name: appointment_groups
  endpoint:
    path: /api/v1/appointment_groups
    method: GET
    data_selector: appointment_groups
- name: single_appointment_group
  endpoint:
    path: /api/v1/appointment_groups/:id
    method: GET
    data_selector: appointment_group
- name: create_appointment_group
  endpoint:
    path: /api/v1/appointment_groups
    method: POST
    data_selector: appointment_group
- name: update_appointment_group
  endpoint:
    path: /api/v1/appointment_groups/:id
    method: PUT
    data_selector: appointment_group
- name: delete_appointment_group
  endpoint:
    path: /api/v1/appointment_groups/:id
    method: DELETE
    data_selector: appointment_group
- name: list_users
  endpoint:
    path: /api/v1/appointment_groups/:id/users
    method: GET
    data_selector: users
- name: list_groups
  endpoint:
    path: /api/v1/appointment_groups/:id/groups
    method: GET
    data_selector: groups
- name: next_appointment
  endpoint:
    path: /api/v1/appointment_groups/next_appointment
    method: GET
    data_selector: next_appointment
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: GET
- name: delete_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: DELETE
- name: assignment_extensions
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/extensions
    method: POST
    data_selector: assignment_extensions
- name: assignment_groups
  endpoint:
    path: /assignment_groups
    method: GET
    data_selector: assignment_groups
- name: assignment_group
  endpoint:
    path: /assignment_groups/{id}
    method: GET
    data_selector: assignment_group
- name: create_assignment_group
  endpoint:
    path: /assignment_groups
    method: POST
    data_selector: assignment_group
- name: edit_assignment_group
  endpoint:
    path: /assignment_groups/{id}
    method: PUT
    data_selector: assignment_group
- name: destroy_assignment_group
  endpoint:
    path: /assignment_groups/{id}
    method: DELETE
    data_selector: assignment_group
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups/:assignment_group_id/assignments
    method: GET
    data_selector: assignments
- name: user_assignments
  endpoint:
    path: /api/v1/users/:user_id/courses/:course_id/assignments
    method: GET
    data_selector: assignments
- name: duplicate_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/duplicate
    method: POST
    data_selector: assignment
- name: group_members
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/users/:user_id/group_members
    method: GET
    data_selector: group_members
- name: single_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: GET
    data_selector: assignment
- name: create_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: POST
    data_selector: assignment
- name: edit_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id
    method: PUT
    data_selector: assignment
- name: assignment_groups
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups
    method: GET
    data_selector: assignment_groups
- name: assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups/:assignment_group_id
    method: GET
    data_selector: assignment_group
- name: create_assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups
    method: POST
    data_selector: assignment_group
- name: update_assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups/:assignment_group_id
    method: PUT
    data_selector: assignment_group
- name: destroy_assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups/:assignment_group_id
    method: DELETE
    data_selector: assignment_group
- name: assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: POST
- name: bulk_update_assignment_dates
  endpoint:
    path: /api/v1/courses/:course_id/assignments/bulk_update
    method: PUT
- name: list_assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: GET
- name: get_single_assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides/:id
    method: GET
- name: update_assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides/:id
    method: PUT
- name: delete_assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides/:id
    method: DELETE
- name: assignments
  endpoint:
    path: /assignments
    method: GET
- name: assignment_overrides
  endpoint:
    path: /assignment_overrides
    method: GET
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: GET
- name: delete_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: DELETE
- name: assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/overrides
    method: GET
    data_selector: AssignmentOverride
- name: batch_create_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/overrides
    method: POST
    data_selector: AssignmentOverride
- name: batch_update_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/overrides
    method: PUT
    data_selector: AssignmentOverride
- name: authentication_providers
  endpoint:
    path: /authentication_providers
    method: GET
- name: sso_settings
  endpoint:
    path: /sso_settings
    method: GET
- name: authentication_providers
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers
    method: GET
    data_selector: AuthenticationProvider
    params: {}
- name: authentication_provider
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers/:id
    method: GET
    data_selector: AuthenticationProvider
    params: {}
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups/:assignment_group_id/assignments
    method: GET
    data_selector: assignments
- name: user_assignments
  endpoint:
    path: /api/v1/users/:user_id/courses/:course_id/assignments
    method: GET
    data_selector: assignments
- name: duplicate_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/duplicate
    method: POST
    data_selector: assignment
- name: group_members
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/users/:user_id/group_members
    method: GET
    data_selector: group_members
- name: single_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: GET
    data_selector: assignment
- name: create_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: POST
    data_selector: assignment
- name: edit_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id
    method: PUT
    data_selector: assignment
- name: sso_settings
  endpoint:
    path: /api/v1/accounts/:account_id/sso_settings
    method: PUT
- name: assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: PUT
    data_selector: assignment
    params: {}
- name: bulk_update_assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments/bulk_update
    method: PUT
    data_selector: assignments
    params: {}
- name: assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: GET
    data_selector: overrides
    params: {}
- name: blackout_dates
  endpoint:
    path: /courses/:course_id/blackout_dates
    method: GET
- name: single_blackout_date
  endpoint:
    path: /courses/:course_id/blackout_dates/:id
    method: GET
- name: new_blackout_date
  endpoint:
    path: /courses/:course_id/blackout_dates/new
    method: GET
- name: create_blackout_date
  endpoint:
    path: /courses/:course_id/blackout_dates
    method: POST
- name: update_blackout_date
  endpoint:
    path: /courses/:course_id/blackout_dates/:id
    method: PUT
- name: delete_blackout_date
  endpoint:
    path: /courses/:course_id/blackout_dates/:id
    method: DELETE
- name: bulk_update_blackout_dates
  endpoint:
    path: /courses/:course_id/blackout_dates/bulk_update
    method: PUT
- name: assignment_overrides_batch_retrieve
  endpoint:
    path: /api/v1/courses/:course_id/assignments/overrides
    method: GET
    data_selector: AssignmentOverride
    params: {}
- name: assignment_overrides_batch_create
  endpoint:
    path: /api/v1/courses/:course_id/assignments/overrides
    method: POST
    data_selector: AssignmentOverride
    params: {}
- name: assignment_overrides_batch_update
  endpoint:
    path: /api/v1/courses/:course_id/assignments/overrides
    method: PUT
    data_selector: AssignmentOverride
    params: {}
- name: assignment_overrides_delete
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides/:id
    method: DELETE
    data_selector: AssignmentOverride
    params: {}
- name: authentication_providers
  endpoint:
    path: /authentication_providers
    method: GET
    data_selector: null
    params: {}
- name: block_editor_templates
  endpoint:
    path: /api/v1/courses/:course_id/block_editor_templates
    method: GET
    data_selector: BlockEditorTemplate
    params: {}
- name: authentication_providers
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers
    method: GET
    data_selector: AuthenticationProvider
    params: {}
- name: authentication_provider
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers/:id
    method: GET
    data_selector: AuthenticationProvider
    params: {}
- name: sso_settings
  endpoint:
    path: /api/v1/accounts/:account_id/sso_settings
    method: PUT
    data_selector: SSOSettings
- name: blueprint_template
  endpoint:
    path: /master_courses/master_templates
    method: GET
    data_selector: templates
    params: {}
- name: blueprint_migration
  endpoint:
    path: /master_courses/master_templates/migrations
    method: GET
    data_selector: migrations
    params: {}
- name: blueprint_restriction
  endpoint:
    path: /master_courses/master_templates/restrictions
    method: GET
    data_selector: restrictions
    params: {}
- name: blueprint_templates
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id
    method: GET
- name: associated_courses
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/associated_courses
    method: GET
- name: update_associations
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/update_associations
    method: PUT
- name: migrations
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/migrations
    method: POST
- name: unsynced_changes
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/unsynced_changes
    method: GET
- name: blueprint_subscriptions
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_subscriptions
    method: GET
- name: blackout_dates
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates
    method: GET
- name: blackout_date
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates/:id
    method: GET
- name: new_blackout_date
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates/new
    method: GET
- name: create_blackout_date
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates
    method: POST
- name: update_blackout_date
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates/:id
    method: PUT
- name: delete_blackout_date
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates/:id
    method: DELETE
- name: bulk_update_blackout_dates
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates/bulk_update
    method: PUT
- name: block_editor_templates
  endpoint:
    path: /api/v1/courses/:course_id/block_editor_templates
    method: GET
    data_selector: BlockEditorTemplate
    params:
      sort: name
      order: asc
      drafts: true
- name: bookmarks
  endpoint:
    path: /api/v1/users/self/bookmarks
    method: GET
    data_selector: Bookmark
- name: create_bookmark
  endpoint:
    path: /api/v1/users/self/bookmarks
    method: POST
    data_selector: Bookmark
- name: get_bookmark
  endpoint:
    path: /api/v1/users/self/bookmarks/:id
    method: GET
    data_selector: Bookmark
- name: update_bookmark
  endpoint:
    path: /api/v1/users/self/bookmarks/:id
    method: PUT
    data_selector: Bookmark
- name: blueprint_template
  endpoint:
    path: /master_courses/master_templates
    method: GET
    data_selector: records
- name: blueprint_migration
  endpoint:
    path: /master_courses/master_templates/migrations
    method: GET
    data_selector: records
- name: blueprint_restriction
  endpoint:
    path: /master_courses/master_templates/restrict_item
    method: POST
    data_selector: records
- name: update_bookmark
  endpoint:
    path: /api/v1/users/self/bookmarks/:id
    method: PUT
- name: delete_bookmark
  endpoint:
    path: /api/v1/users/self/bookmarks/:id
    method: DELETE
- name: brand_variables
  endpoint:
    path: /api/v1/brand_variables
    method: GET
- name: brand_variables_for_account
  endpoint:
    path: /api/v1/accounts/:account_id/brand_variables
    method: GET
- name: brand_variables_for_course
  endpoint:
    path: /api/v1/courses/:course_id/brand_variables
    method: GET
- name: blueprint_templates
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id
    method: GET
- name: associated_courses
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/associated_courses
    method: GET
- name: update_associations
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/update_associations
    method: PUT
- name: queue_migration
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/migrations
    method: POST
- name: unsynced_changes
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/unsynced_changes
    method: GET
- name: migrations_index
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/migrations
    method: GET
- name: migrations_show
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/migrations/:id
    method: GET
- name: imports_index
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_subscriptions/:subscription_id/migrations
    method: GET
- name: imports_show
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_subscriptions/:subscription_id/migrations/:id
    method: GET
- name: calendar_events
  endpoint:
    path: /calendar_events
    method: GET
- name: bookmarks
  endpoint:
    path: /api/v1/users/self/bookmarks
    method: GET
    data_selector: bookmarks
- name: create_bookmark
  endpoint:
    path: /api/v1/users/self/bookmarks
    method: POST
    data_selector: bookmark
- name: get_bookmark
  endpoint:
    path: /api/v1/users/self/bookmarks/:id
    method: GET
    data_selector: bookmark
- name: update_bookmark
  endpoint:
    path: /api/v1/users/self/bookmarks/:id
    method: PUT
    data_selector: bookmark
- name: calendar_events
  endpoint:
    path: /api/v1/calendar_events
    method: GET
- name: user_calendar_events
  endpoint:
    path: /api/v1/users/:user_id/calendar_events
    method: GET
- name: create_calendar_event
  endpoint:
    path: /api/v1/calendar_events
    method: POST
- name: single_calendar_event
  endpoint:
    path: /api/v1/calendar_events/:id
    method: GET
- name: reserve_time_slot
  endpoint:
    path: /api/v1/calendar_events/:id/reservations
    method: POST
- name: update_calendar_event
  endpoint:
    path: /api/v1/calendar_events/:id
    method: PUT
- name: update_bookmark
  endpoint:
    path: /api/v1/users/self/bookmarks/:id
    method: PUT
    data_selector: Folder
- name: delete_bookmark
  endpoint:
    path: /api/v1/users/self/bookmarks/:id
    method: DELETE
- name: brand_variables
  endpoint:
    path: /api/v1/brand_variables
    method: GET
    data_selector: redirected_url
- name: account_brand_variables
  endpoint:
    path: /api/v1/accounts/:account_id/brand_variables
    method: GET
    data_selector: redirected_url
- name: course_brand_variables
  endpoint:
    path: /api/v1/courses/:course_id/brand_variables
    method: GET
    data_selector: redirected_url
- name: calendar_event
  endpoint:
    path: /api/v1/calendar_events/:id
    method: PUT
    data_selector: calendar_event
    params: {}
- name: delete_calendar_event
  endpoint:
    path: /api/v1/calendar_events/:id
    method: DELETE
    data_selector: delete_event
    params: {}
- name: save_enabled_account_calendars
  endpoint:
    path: /api/v1/calendar_events/save_enabled_account_calendars
    method: POST
    data_selector: enabled_account_calendars
    params: {}
- name: set_course_timetable
  endpoint:
    path: /api/v1/courses/:course_id/calendar_events/timetable
    method: POST
    data_selector: timetable_events
    params: {}
- name: get_course_timetable
  endpoint:
    path: /api/v1/courses/:course_id/calendar_events/timetable
    method: GET
    data_selector: course_timetable
    params: {}
- name: set_course_timetable_events
  endpoint:
    path: /api/v1/courses/:course_id/calendar_events/timetable_events
    method: POST
    data_selector: course_timetable_events
    params: {}
- name: calendar_events
  endpoint:
    path: /calendar_events
    method: GET
- name: experience_summary
  endpoint:
    path: /api/v1/career/experience_summary
    method: GET
    data_selector: ExperienceSummary
- name: switch_experience
  endpoint:
    path: /api/v1/career/switch_experience
    method: POST
    data_selector: ''
- name: switch_role
  endpoint:
    path: /api/v1/career/switch_role
    method: POST
    data_selector: ''
    params:
      role: learner
- name: calendar_events
  endpoint:
    path: /api/v1/calendar_events
    method: GET
    data_selector: CalendarEvent
    params: {}
- name: user_calendar_events
  endpoint:
    path: /api/v1/users/:user_id/calendar_events
    method: GET
    data_selector: CalendarEvent
    params: {}
- name: create_calendar_event
  endpoint:
    path: /api/v1/calendar_events
    method: POST
    data_selector: CalendarEvent
    params: {}
- name: single_calendar_event
  endpoint:
    path: /api/v1/calendar_events/:id
    method: GET
    data_selector: CalendarEvent
    params: {}
- name: reserve_time_slot
  endpoint:
    path: /api/v1/calendar_events/:id/reservations
    method: POST
    data_selector: Reservation
    params: {}
- name: update_calendar_event
  endpoint:
    path: /api/v1/calendar_events/:id
    method: PUT
    data_selector: CalendarEvent
    params: {}
- name: collaborations
  endpoint:
    path: /api/v1/courses/:course_id/collaborations
    method: GET
    data_selector: collaborations
- name: group_collaborations
  endpoint:
    path: /api/v1/groups/:group_id/collaborations
    method: GET
    data_selector: collaborations
- name: collaboration_members
  endpoint:
    path: /api/v1/collaborations/:id/members
    method: GET
- name: potential_collaborators_courses
  endpoint:
    path: /api/v1/courses/:course_id/potential_collaborators
    method: GET
- name: potential_collaborators_groups
  endpoint:
    path: /api/v1/groups/:group_id/potential_collaborators
    method: GET
- name: calendar_event
  endpoint:
    path: /api/v1/calendar_events/:id
    method: PUT
    data_selector: calendar_event
    params: {}
- name: calendar_event_delete
  endpoint:
    path: /api/v1/calendar_events/:id
    method: DELETE
    data_selector: cancel_reason
    params: {}
- name: save_enabled_account_calendars
  endpoint:
    path: /api/v1/calendar_events/save_enabled_account_calendars
    method: POST
    data_selector: mark_feature_as_seen
    params: {}
- name: set_course_timetable
  endpoint:
    path: /api/v1/courses/:course_id/calendar_events/timetable
    method: POST
    data_selector: timetables
    params: {}
- name: get_course_timetable
  endpoint:
    path: /api/v1/courses/:course_id/calendar_events/timetable
    method: GET
    data_selector: ''
    params: {}
- name: set_course_timetable_events
  endpoint:
    path: /api/v1/courses/:course_id/calendar_events/timetable_events
    method: POST
    data_selector: events
    params: {}
- name: comm_messages
  endpoint:
    path: /comm_messages
    method: GET
    data_selector: CommMessage
    params:
      user_id: required
      start_time: ''
      end_time: ''
- name: experience_summary
  endpoint:
    path: /api/v1/career/experience_summary
    method: GET
    data_selector: ExperienceSummary
- name: switch_experience
  endpoint:
    path: /api/v1/career/switch_experience
    method: POST
    data_selector: response
    params:
      experience: required
- name: communication_channels
  endpoint:
    path: /api/v1/users/:user_id/communication_channels
    method: GET
    data_selector: communication_channels
- name: switch_role
  endpoint:
    path: /api/v1/career/switch_role
    method: POST
    data_selector: null
    params:
      role: learner
- name: communication_channel
  endpoint:
    path: /api/v1/users/:user_id/communication_channels
    method: POST
    data_selector: CommunicationChannel
    params: {}
- name: delete_communication_channel
  endpoint:
    path: /api/v1/users/:user_id/communication_channels/:id
    method: DELETE
    data_selector: CommunicationChannel
    params: {}
- name: delete_push_notification_endpoint
  endpoint:
    path: /api/v1/users/self/communication_channels/push
    method: DELETE
    data_selector: CommunicationChannel
    params: {}
- name: collaborations
  endpoint:
    path: /api/v1/courses/:course_id/collaborations
    method: GET
    data_selector: collaborations
- name: group_collaborations
  endpoint:
    path: /api/v1/groups/:group_id/collaborations
    method: GET
    data_selector: collaborations
- name: conferences
  endpoint:
    path: /api/v1/courses/:course_id/conferences
    method: GET
- name: collaboration_members
  endpoint:
    path: /api/v1/collaborations/:id/members
    method: GET
- name: potential_collaborators_courses
  endpoint:
    path: /api/v1/courses/:course_id/potential_collaborators
    method: GET
- name: potential_collaborators_groups
  endpoint:
    path: /api/v1/groups/:group_id/potential_collaborators
    method: GET
- name: conferences_for_group
  endpoint:
    path: /api/v1/groups/:group_id/conferences
    method: GET
    data_selector: conferences
- name: conferences_for_user
  endpoint:
    path: /api/v1/conferences
    method: GET
    data_selector: conferences
    params:
      state: live
- name: CommMessages
  endpoint:
    path: /comm_messages
    method: GET
    data_selector: CommMessage
    params:
      user_id: required
      start_time: ''
      end_time: ''
- name: communication_channels
  endpoint:
    path: /api/v1/users/:user_id/communication_channels
    method: GET
    data_selector: communication_channels
- name: content_exports
  endpoint:
    path: /courses/:course_id/content_exports
    method: GET
    data_selector: ContentExport
- name: show_content_export
  endpoint:
    path: /courses/:course_id/content_exports/:id
    method: GET
    data_selector: ContentExport
- name: export_content
  endpoint:
    path: /courses/:course_id/content_exports
    method: POST
    data_selector: ContentExport
- name: content_exports
  endpoint:
    path: /users/:user_id/content_exports
    method: POST
    data_selector: ContentExport
- name: communication_channel
  endpoint:
    path: /api/v1/users/:user_id/communication_channels
    method: POST
    data_selector: CommunicationChannel
    params:
      communication_channel[address]: string
      communication_channel[type]: string
      communication_channel[token]: string
      skip_confirmation: boolean
- name: delete_communication_channel
  endpoint:
    path: /api/v1/users/:user_id/communication_channels/:id
    method: DELETE
    data_selector: CommunicationChannel
- name: delete_push_notification_endpoint
  endpoint:
    path: /api/v1/users/self/communication_channels/push
    method: DELETE
    data_selector: CommunicationChannel
- name: migration_issues
  endpoint:
    path: /migration_issues
    method: GET
    data_selector: migration_issues
    params: {}
- name: content_migrations
  endpoint:
    path: /content_migrations
    method: GET
    data_selector: content_migrations
    params: {}
- name: conferences
  endpoint:
    path: /api/v1/courses/:course_id/conferences
    method: GET
- name: migration_issues
  endpoint:
    path: /api/v1/accounts/:account_id/content_migrations/:content_migration_id/migration_issues
    method: GET
- name: content_migrations
  endpoint:
    path: /api/v1/accounts/:account_id/content_migrations
    method: GET
- name: conferences_for_context
  endpoint:
    path: /api/v1/groups/:group_id/conferences
    method: GET
    data_selector: conferences
- name: conferences_for_user
  endpoint:
    path: /api/v1/conferences
    method: GET
    data_selector: conferences
    params:
      state: live
- name: content_exports
  endpoint:
    path: /courses/:course_id/content_exports
    method: GET
- name: show_content_export
  endpoint:
    path: /courses/:course_id/content_exports/:id
    method: GET
- name: export_content
  endpoint:
    path: /courses/:course_id/content_exports
    method: POST
- name: selective_data
  endpoint:
    path: /api/v1/accounts/:account_id/content_migrations/:id/selective_data
    method: GET
- name: selective_data_courses
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:id/selective_data
    method: GET
- name: selective_data_groups
  endpoint:
    path: /api/v1/groups/:group_id/content_migrations/:id/selective_data
    method: GET
- name: selective_data_users
  endpoint:
    path: /api/v1/users/:user_id/content_migrations/:id/selective_data
    method: GET
- name: asset_id_mapping
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:id/asset_id_mapping
    method: GET
- name: content_exports
  endpoint:
    path: /api/v1/users/:user_id/content_exports
    method: POST
    data_selector: ContentExport
    params: {}
- name: Get current settings for account or course
  endpoint:
    path: /api/v1/accounts/:account_id/csp_settings
    method: GET
    data_selector: enabled
    params: {}
- name: Remove a domain from account
  endpoint:
    path: /api/v1/accounts/:account_id/csp_settings/domains
    method: DELETE
    data_selector: null
    params:
      domain: ''
- name: migration_issues
  endpoint:
    path: /api/v1/migration_issues
    method: GET
    data_selector: migration_issues
- name: content_migrations
  endpoint:
    path: /api/v1/content_migrations
    method: GET
    data_selector: content_migrations
- name: migration_issues
  endpoint:
    path: /accounts/:account_id/content_migrations/:content_migration_id/migration_issues
    method: GET
- name: content_migrations
  endpoint:
    path: /accounts/:account_id/content_migrations
    method: GET
- name: remove_domain
  endpoint:
    path: /api/v1/accounts/:account_id/csp_settings/domains
    method: DELETE
    data_selector: null
    params:
      domain: required
- name: set_csp
  endpoint:
    path: /api/v1/accounts/:account_id/csp_settings
    method: PUT
    data_selector: null
    params:
      status: required
- name: content_share
  endpoint:
    path: /content_shares
    method: POST
    data_selector: content_share
- name: selective_data_accounts
  endpoint:
    path: /api/v1/accounts/:account_id/content_migrations/:id/selective_data
    method: GET
- name: selective_data_courses
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:id/selective_data
    method: GET
- name: selective_data_groups
  endpoint:
    path: /api/v1/groups/:group_id/content_migrations/:id/selective_data
    method: GET
- name: selective_data_users
  endpoint:
    path: /api/v1/users/:user_id/content_migrations/:id/selective_data
    method: GET
- name: asset_id_mapping
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:id/asset_id_mapping
    method: GET
- name: Get current settings for account or course
  endpoint:
    path: /api/v1/accounts/:account_id/csp_settings
    method: GET
- name: Enable, disable, or clear explicit CSP setting
  endpoint:
    path: /api/v1/accounts/:account_id/csp_settings
    method: POST
- name: Remove a domain from account
  endpoint:
    path: /api/v1/accounts/:account_id/csp_settings/domains
    method: DELETE
- name: content_shares_sent
  endpoint:
    path: /api/v1/users/:user_id/content_shares/sent
    method: GET
- name: content_shares_received
  endpoint:
    path: /api/v1/users/:user_id/content_shares/received
    method: GET
- name: unread_count
  endpoint:
    path: /api/v1/users/:user_id/content_shares/unread_count
    method: GET
- name: content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares/:id
    method: GET
- name: remove_content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares/:id
    method: DELETE
- name: add_users_to_content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares/:id/add_users
    method: POST
- name: update_content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares/:id
    method: PUT
- name: remove_domain
  endpoint:
    path: /api/v1/accounts/:account_id/csp_settings/domains
    method: DELETE
    data_selector: null
    params:
      domain: ''
- name: set_csp
  endpoint:
    path: /api/v1/accounts/:account_id/csp_settings
    method: PUT
    data_selector: null
    params:
      status: ''
- name: add_domain
  endpoint:
    path: /api/v1/accounts/:account_id/csp_settings/domains
    method: POST
    data_selector: null
    params:
      domain: ''
- name: add_multiple_domains
  endpoint:
    path: /api/v1/accounts/:account_id/csp_settings/domains
    method: POST
    data_selector: null
    params:
      domains: ''
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: conversations
- name: content_share
  endpoint:
    path: /content_shares
    method: POST
    data_selector: content_share
- name: list_content_shares
  endpoint:
    path: /content_shares
    method: GET
    data_selector: content_shares
- name: get_unread_shares_count
  endpoint:
    path: /content_shares/unread_count
    method: GET
    data_selector: unread_count
- name: get_content_share
  endpoint:
    path: /content_shares/{id}
    method: GET
    data_selector: content_share
- name: remove_content_share
  endpoint:
    path: /content_shares/{id}
    method: DELETE
    data_selector: content_share
- name: add_users_to_content_share
  endpoint:
    path: /content_shares/{id}/add_users
    method: POST
    data_selector: content_share
- name: update_content_share
  endpoint:
    path: /content_shares/{id}
    method: PUT
    data_selector: content_share
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: conversations
- name: create_conversation
  endpoint:
    path: /api/v1/conversations
    method: POST
    data_selector: conversation
- name: get_running_batches
  endpoint:
    path: /api/v1/conversations/batches
    method: GET
    data_selector: batches
- name: get_single_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: GET
    data_selector: conversation
- name: edit_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: PUT
    data_selector: conversation
- name: mark_all_as_read
  endpoint:
    path: /api/v1/conversations/mark_all_as_read
    method: POST
    data_selector: result
- name: delete_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: DELETE
    data_selector: conversation
- name: content_shares_sent
  endpoint:
    path: /api/v1/users/:user_id/content_shares/sent
    method: GET
- name: content_shares_received
  endpoint:
    path: /api/v1/users/:user_id/content_shares/received
    method: GET
- name: unread_count
  endpoint:
    path: /api/v1/users/:user_id/content_shares/unread_count
    method: GET
- name: content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares/:id
    method: GET
- name: remove_content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares/:id
    method: DELETE
- name: add_users_to_content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares/:id/add_users
    method: POST
- name: update_content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares/:id
    method: PUT
- name: add_recipients
  endpoint:
    path: /api/v1/conversations/:id/add_recipients
    method: POST
    data_selector: response
    params: {}
- name: add_message
  endpoint:
    path: /api/v1/conversations/:id/add_message
    method: POST
    data_selector: response
    params: {}
- name: remove_messages
  endpoint:
    path: /api/v1/conversations/:id/remove_messages
    method: POST
    data_selector: response
    params: {}
- name: batch_update
  endpoint:
    path: /api/v1/conversations
    method: PUT
    data_selector: response
    params: {}
- name: unread_count
  endpoint:
    path: /api/v1/conversations/unread_count
    method: GET
    data_selector: unread_count
    params: {}
- name: course_audit_log
  endpoint:
    path: /api/course_audit_log
    method: GET
    data_selector: events
- name: list_conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: conversations
- name: create_conversation
  endpoint:
    path: /api/v1/conversations
    method: POST
    data_selector: conversation
- name: get_single_conversation
  endpoint:
    path: /api/v1/conversations/{id}
    method: GET
    data_selector: conversation
- name: edit_conversation
  endpoint:
    path: /api/v1/conversations/{id}
    method: PUT
    data_selector: conversation
- name: mark_all_as_read
  endpoint:
    path: /api/v1/conversations/mark_all_as_read
    method: POST
    data_selector: success
- name: delete_conversation
  endpoint:
    path: /api/v1/conversations/{id}
    method: DELETE
    data_selector: success
- name: course_change_events_by_course
  endpoint:
    path: /api/v1/audit/course/courses/:course_id
    method: GET
    params:
      start_time: ''
      end_time: ''
- name: course_change_events_by_account
  endpoint:
    path: /api/v1/audit/course/accounts/:account_id
    method: GET
    params:
      start_time: ''
      end_time: ''
- name: course_pace
  endpoint:
    path: /course_paces
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: conversations
- name: create_conversation
  endpoint:
    path: /api/v1/conversations
    method: POST
    data_selector: conversation
- name: get_running_batches
  endpoint:
    path: /api/v1/conversations/batches
    method: GET
    data_selector: batches
- name: get_single_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: GET
    data_selector: conversation
- name: edit_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: PUT
    data_selector: conversation
- name: mark_all_as_read
  endpoint:
    path: /api/v1/conversations/mark_all_as_read
    method: POST
    data_selector: mark_all_as_read
- name: delete_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: DELETE
    data_selector: conversation
- name: add_recipients
  endpoint:
    path: /api/v1/conversations/:id/recipients
    method: POST
    data_selector: recipients
- name: course_pace_show
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing/:id
    method: GET
    data_selector: CoursePace
    params: {}
- name: course_pace_create
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing
    method: POST
    data_selector: CoursePace
    params: {}
- name: course_pace_update
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing/:id
    method: PUT
    data_selector: CoursePace
    params: {}
- name: course_pace_delete
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing/:id
    method: DELETE
    data_selector: CoursePace
    params: {}
- name: course_quiz_extension
  endpoint:
    path: /quizzes/course_quiz_extensions
    method: POST
    data_selector: course_quiz_extension
- name: add_recipients
  endpoint:
    path: /api/v1/conversations/:id/add_recipients
    method: POST
    data_selector: latest_message
- name: add_message
  endpoint:
    path: /api/v1/conversations/:id/add_message
    method: POST
    data_selector: latest_message
- name: remove_messages
  endpoint:
    path: /api/v1/conversations/:id/remove_messages
    method: POST
    data_selector: response
- name: batch_update
  endpoint:
    path: /api/v1/conversations
    method: PUT
    data_selector: progress
- name: unread_count
  endpoint:
    path: /api/v1/conversations/unread_count
    method: GET
    data_selector: unread_count
- name: quiz_extensions
  endpoint:
    path: /courses/:course_id/quiz_extensions
    method: POST
- name: course_audit_log
  endpoint:
    path: /api/course_audit_log
    method: GET
    data_selector: events
- name: course_events_by_course
  endpoint:
    path: /api/v1/audit/course/courses/:course_id
    method: GET
    data_selector: CourseEvent
    params:
      start_time: ''
      end_time: ''
- name: course_events_by_account
  endpoint:
    path: /api/v1/audit/course/accounts/:account_id
    method: GET
    data_selector: CourseEvent
    params:
      start_time: ''
      end_time: ''
- name: status_of_a_report
  endpoint:
    path: /api/v1/courses/:course_id/reports/:report_type/:id
    method: GET
    data_selector: Report
- name: start_a_report
  endpoint:
    path: /api/v1/courses/:course_id/reports/:report_type
    method: POST
    data_selector: Report
- name: last_report
  endpoint:
    path: /api/v1/courses/:course_id/reports/:report_type
    method: GET
- name: course_pace
  endpoint:
    path: /api/course_paces
    method: GET
    data_selector: course_paces
- name: module
  endpoint:
    path: /api/modules
    method: GET
    data_selector: modules
- name: module_item
  endpoint:
    path: /api/module_items
    method: GET
    data_selector: module_items
- name: courses
  endpoint:
    path: /courses
    method: GET
- name: user_progress
  endpoint:
    path: /courses/user_progress
    method: GET
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
    params: {}
- name: course_pacing_show
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing/:id
    method: GET
    data_selector: CoursePace
    params:
      course_id: required
      course_pace_id: required
- name: course_pacing_create
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing
    method: POST
    data_selector: CoursePace
    params:
      course_id: required
- name: course_pacing_update
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing/:id
    method: PUT
    data_selector: CoursePace
    params:
      course_id: required
      course_pace_id: required
- name: course_pacing_destroy
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing/:id
    method: DELETE
    data_selector: CoursePace
    params:
      course_id: required
      course_pace_id: required
- name: course_quiz_extensions
  endpoint:
    path: /quizzes/course_quiz_extensions
    method: POST
    data_selector: CourseQuizExtension
- name: quiz_extensions
  endpoint:
    path: /courses/:course_id/quiz_extensions
    method: POST
    data_selector: quiz_extensions
    params: {}
- name: user_courses
  endpoint:
    path: /api/v1/users/:user_id/courses
    method: GET
    data_selector: courses
    params: {}
- name: user_progress
  endpoint:
    path: /api/v1/courses/:course_id/users/:user_id/progress
    method: GET
    data_selector: progress
    params: {}
- name: create_course
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: POST
    data_selector: course
    params: {}
- name: list_students
  endpoint:
    path: /api/v1/courses/:course_id/students
    method: GET
    data_selector: students
    params: {}
- name: list_users
  endpoint:
    path: /api/v1/courses/:course_id/users
    method: GET
    data_selector: users
    params: {}
- name: recent_students
  endpoint:
    path: /api/v1/courses/:course_id/recent_students
    method: GET
    data_selector: recent_students
    params: {}
- name: single_user
  endpoint:
    path: /api/v1/courses/:course_id/users/:id
    method: GET
    data_selector: user
    params: {}
- name: report_status
  endpoint:
    path: /api/v1/courses/:course_id/reports/:report_type/:id
    method: GET
    data_selector: Report
- name: start_report
  endpoint:
    path: /api/v1/courses/:course_id/reports/:report_type
    method: POST
    data_selector: Report
- name: course_report
  endpoint:
    path: /api/v1/courses/:course_id/reports/:report_type
    method: GET
- name: courses
  endpoint:
    path: /courses
    method: GET
- name: content_share_users
  endpoint:
    path: /api/v1/courses/:course_id/content_share_users
    method: GET
    data_selector: User
    params:
      search_term: required
- name: preview_html
  endpoint:
    path: /api/v1/courses/:course_id/preview_html
    method: POST
    data_selector: html
    params:
      html: string
- name: activity_stream
  endpoint:
    path: /api/v1/courses/:course_id/activity_stream
    method: GET
    data_selector: activity_stream
- name: activity_stream_summary
  endpoint:
    path: /api/v1/courses/:course_id/activity_stream/summary
    method: GET
    data_selector: activity_stream_summary
- name: todo_items
  endpoint:
    path: /api/v1/courses/:course_id/todo
    method: GET
    data_selector: todo_items
- name: delete_course
  endpoint:
    path: /api/v1/courses/:id
    method: DELETE
    data_selector: delete
    params:
      event: required
- name: course_settings
  endpoint:
    path: /api/v1/courses/:course_id/settings
    method: GET
    data_selector: settings
- name: update_course_settings
  endpoint:
    path: /api/v1/courses/:course_id/settings
    method: PUT
    data_selector: update_settings
- name: student_view_student
  endpoint:
    path: /api/v1/courses/:course_id/student_view_student
    method: GET
    data_selector: User
- name: single_course
  endpoint:
    path: /api/v1/courses/:id
    method: GET
    data_selector: Course
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
    params: {}
- name: update_course
  endpoint:
    path: /api/v1/courses/:id
    method: PUT
    data_selector: null
    params: {}
- name: update_multiple_courses
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: PUT
    data_selector: null
    params: {}
- name: reset_course
  endpoint:
    path: /api/v1/courses/:course_id/reset_content
    method: POST
    data_selector: null
    params: {}
- name: effective_due_dates
  endpoint:
    path: /api/v1/courses/:course_id/effective_due_dates
    method: GET
    data_selector: null
    params: {}
- name: permissions
  endpoint:
    path: /api/v1/courses/:course_id/permissions
    method: GET
    data_selector: null
    params: {}
- name: bulk_user_progress
  endpoint:
    path: /api/v1/courses/:course_id/bulk_user_progress
    method: GET
    data_selector: null
    params: {}
- name: dismiss_migration_limitation_message
  endpoint:
    path: /api/v1/courses/:id/dismiss_migration_limitation_message
    method: POST
    data_selector: null
    params: {}
- name: course_copy_status
  endpoint:
    path: /api/v1/courses/:course_id/course_copy/:id
    method: GET
    data_selector: null
    params: {}
- name: user_courses
  endpoint:
    path: /api/v1/users/:user_id/courses
    method: GET
    data_selector: courses
    params: {}
- name: user_progress
  endpoint:
    path: /api/v1/courses/:course_id/users/:user_id/progress
    method: GET
    data_selector: progress
    params: {}
- name: create_course
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: POST
    data_selector: course
    params: {}
- name: upload_file
  endpoint:
    path: /api/v1/courses/:course_id/files
    method: POST
    data_selector: file
    params: {}
- name: list_students
  endpoint:
    path: /api/v1/courses/:course_id/students
    method: GET
    data_selector: students
    params: {}
- name: list_users
  endpoint:
    path: /api/v1/courses/:course_id/users
    method: GET
    data_selector: users
    params: {}
- name: recent_students
  endpoint:
    path: /api/v1/courses/:course_id/recent_students
    method: GET
    data_selector: recent_students
    params: {}
- name: single_user
  endpoint:
    path: /api/v1/courses/:course_id/users/:id
    method: GET
    data_selector: user
    params: {}
- name: course_copy
  endpoint:
    path: /api/v1/courses/:course_id/course_copy
    method: POST
    params: {}
- name: custom_gradebook_columns
  endpoint:
    path: /courses/:course_id/custom_gradebook_columns
    method: GET
    data_selector: CustomColumn
    params:
      include_hidden: false
- name: create_custom_gradebook_column
  endpoint:
    path: /courses/:course_id/custom_gradebook_columns
    method: POST
    data_selector: CustomColumn
- name: content_share_users
  endpoint:
    path: /api/v1/courses/:course_id/content_share_users
    method: GET
    data_selector: users
    params:
      search_term: string
- name: preview_html
  endpoint:
    path: /api/v1/courses/:course_id/preview_html
    method: POST
    data_selector: html
    params:
      html: string
- name: activity_stream
  endpoint:
    path: /api/v1/courses/:course_id/activity_stream
    method: GET
- name: activity_stream_summary
  endpoint:
    path: /api/v1/courses/:course_id/activity_stream/summary
    method: GET
- name: todo_items
  endpoint:
    path: /api/v1/courses/:course_id/todo
    method: GET
- name: delete_course
  endpoint:
    path: /api/v1/courses/:id
    method: DELETE
    params:
      event: string
- name: api_settings
  endpoint:
    path: /api/v1/courses/:course_id/settings
    method: GET
- name: update_settings
  endpoint:
    path: /api/v1/courses/:course_id/settings
    method: PUT
- name: student_view_student
  endpoint:
    path: /api/v1/courses/:course_id/student_view_student
    method: GET
- name: get_single_course
  endpoint:
    path: /api/v1/courses/:id
    method: GET
- name: update_custom_gradebook_column
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id
    method: PUT
- name: delete_custom_gradebook_column
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id
    method: DELETE
- name: reorder_custom_columns
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/reorder
    method: POST
- name: list_entries_for_column
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id/data
    method: GET
- name: update_column_data
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id/data/:user_id
    method: PUT
- name: bulk_update_column_data
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_column_data
    method: PUT
- name: developer_key_account_binding
  endpoint:
    path: /api/v1/accounts/:account_id/developer_keys/:developer_key_id/developer_key_account_bindings
    method: POST
    data_selector: DeveloperKeyAccountBinding
    params:
      workflow_state: 'off'
- name: Developer Keys
  endpoint:
    path: /developer_keys
    method: GET
- name: update_existing_course
  endpoint:
    path: /api/v1/courses/:id
    method: PUT
    data_selector: course
    params: {}
- name: update_multiple_courses
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: PUT
    data_selector: courses
    params:
      event: offer
- name: reset_course
  endpoint:
    path: /api/v1/courses/:course_id/reset_content
    method: POST
    data_selector: ''
    params: {}
- name: get_effective_due_dates
  endpoint:
    path: /api/v1/courses/:course_id/effective_due_dates
    method: GET
    data_selector: ''
    params: {}
- name: get_permissions
  endpoint:
    path: /api/v1/courses/:course_id/permissions
    method: GET
    data_selector: ''
    params: {}
- name: get_bulk_user_progress
  endpoint:
    path: /api/v1/courses/:course_id/bulk_user_progress
    method: GET
    data_selector: ''
    params: {}
- name: remove_quiz_migration_alert
  endpoint:
    path: /api/v1/courses/:id/dismiss_migration_limitation_message
    method: POST
    data_selector: ''
    params: {}
- name: get_course_copy_status
  endpoint:
    path: /api/v1/courses/:course_id/course_copy/:id
    method: GET
    data_selector: ''
    params: {}
- name: course_copy
  endpoint:
    path: /courses/:course_id/course_copy
    method: POST
    data_selector: ''
    params: {}
- name: developer_keys
  endpoint:
    path: /api/v1/accounts/:account_id/developer_keys
    method: GET
    data_selector: developer_keys
    params:
      inherited: false
- name: create_developer_key
  endpoint:
    path: /api/v1/accounts/:account_id/developer_keys
    method: POST
    data_selector: developer_key
    params: {}
- name: update_developer_key
  endpoint:
    path: /api/v1/developer_keys/:id
    method: PUT
    data_selector: developer_key
    params: {}
- name: delete_developer_key
  endpoint:
    path: /api/v1/developer_keys/:id
    method: DELETE
    data_selector: developer_key
    params: {}
- name: custom_gradebook_columns
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns
    method: GET
    data_selector: CustomColumn
    params:
      include_hidden: 'false'
- name: create_custom_gradebook_column
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns
    method: POST
    data_selector: CustomColumn
    params: {}
- name: discussion_topics
  endpoint:
    path: /discussion_topics
    method: GET
    data_selector: records
- name: discussion_topics
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics
    method: GET
    data_selector: discussion_topics
    params: {}
- name: create_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics
    method: POST
    data_selector: discussion_topic
    params: {}
- name: update_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: PUT
    data_selector: discussion_topic
    params: {}
- name: delete_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: DELETE
    data_selector: success
    params: {}
- name: update_custom_gradebook_column
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id
    method: PUT
- name: delete_custom_gradebook_column
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id
    method: DELETE
- name: reorder_custom_columns
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/reorder
    method: POST
- name: list_entries_for_a_column
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id/data
    method: GET
- name: update_column_data
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id/data/:user_id
    method: PUT
- name: bulk_update_column_data
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_column_data
    method: PUT
- name: developer_key_account_bindings
  endpoint:
    path: /api/v1/accounts/:account_id/developer_keys/:developer_key_id/developer_key_account_bindings
    method: POST
    data_selector: DeveloperKeyAccountBinding
    params:
      workflow_state: 'off'
- name: Developer Keys
  endpoint:
    path: /developer_keys
    method: GET
- name: discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: GET
- name: discussion_topic_summary
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries
    method: GET
- name: create_discussion_topic_summary
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries
    method: POST
- name: disable_summary
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries/disable
    method: PUT
- name: summary_feedback
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries/:summary_id/feedback
    method: POST
- name: view_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/view
    method: GET
- name: add_entry
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries
    method: POST
- name: duplicate_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/duplicate
    method: POST
- name: list_topic_entries
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries
    method: GET
- name: add_reply
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/replies
    method: POST
- name: list_entry_replies
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/replies
    method: GET
- name: developer_keys
  endpoint:
    path: /api/v1/accounts/:account_id/developer_keys
    method: GET
    data_selector: developer_keys
    params:
      inherited: false
- name: create_developer_key
  endpoint:
    path: /api/v1/accounts/:account_id/developer_keys
    method: POST
    data_selector: developer_key
    params: {}
- name: update_developer_key
  endpoint:
    path: /api/v1/developer_keys/:id
    method: PUT
    data_selector: developer_key
    params: {}
- name: delete_developer_key
  endpoint:
    path: /api/v1/developer_keys/:id
    method: DELETE
    data_selector: developer_key
    params: {}
- name: discussion_topics
  endpoint:
    path: /api/v1/discussion_topics
    method: GET
    data_selector: topics
- name: discussion_topics
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics
    method: GET
    data_selector: discussion_topics
    params: {}
- name: create_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics
    method: POST
    data_selector: discussion_topic
    params: {}
- name: update_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: PUT
    data_selector: discussion_topic
    params: {}
- name: delete_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: DELETE
    data_selector: discussion_topic
    params: {}
- name: entry_list
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entry_list
    method: GET
    data_selector: entries
    params:
      ids[]: string
- name: mark_topic_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read
    method: PUT
    data_selector: response
    params: {}
- name: mark_all_topic_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/read_all
    method: PUT
    data_selector: response
    params: {}
- name: mark_topic_unread
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read
    method: DELETE
    data_selector: response
    params: {}
- name: mark_all_entries_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read_all
    method: PUT
    data_selector: response
    params: {}
- name: mark_all_entries_unread
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read_all
    method: DELETE
    data_selector: response
    params: {}
- name: rate_entry
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/rating
    method: POST
    data_selector: response
    params:
      rating: integer
- name: subscribe_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/subscribed
    method: PUT
    data_selector: response
    params: {}
- name: unsubscribe_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/subscribed
    method: DELETE
    data_selector: response
    params: {}
- name: enrollment_terms
  endpoint:
    path: /api/v1/enrollment_terms
    method: GET
    data_selector: enrollment_terms
- name: discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: GET
- name: discussion_topic_summaries
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries
    method: GET
- name: create_or_update_summary
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries
    method: POST
- name: disable_summary
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries/disable
    method: PUT
- name: summary_feedback
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries/:summary_id/feedback
    method: POST
- name: get_full_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/view
    method: GET
- name: post_entry
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries
    method: POST
- name: duplicate_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/duplicate
    method: POST
- name: list_entries
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries
    method: GET
- name: add_reply
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/replies
    method: POST
- name: list_entry_replies
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/replies
    method: GET
- name: enrollment_terms
  endpoint:
    path: /api/v1/accounts/:account_id/terms
    method: GET
    data_selector: enrollment_terms
    params:
      workflow_state[]: active
      include[]: overrides
- name: create_enrollment_term
  endpoint:
    path: /api/v1/accounts/:account_id/terms
    method: POST
    data_selector: enrollment_term
    params: {}
- name: update_enrollment_term
  endpoint:
    path: /api/v1/accounts/:account_id/terms/:id
    method: PUT
    data_selector: enrollment_term
    params: {}
- name: delete_enrollment_term
  endpoint:
    path: /api/v1/accounts/:account_id/terms/:id
    method: DELETE
    data_selector: enrollment_term
    params: {}
- name: retrieve_enrollment_term
  endpoint:
    path: /api/v1/accounts/:account_id/terms/:id
    method: GET
    data_selector: enrollment_term
    params: {}
- name: enrollments
  endpoint:
    path: /enrollments
    method: GET
- name: enrollments
  endpoint:
    path: /api/v1/courses/:course_id/enrollments
    method: GET
- name: section_enrollments
  endpoint:
    path: /api/v1/sections/:section_id/enrollments
    method: GET
- name: user_enrollments
  endpoint:
    path: /api/v1/users/:user_id/enrollments
    method: GET
- name: enrollment_by_id
  endpoint:
    path: /api/v1/accounts/:account_id/enrollments/:id
    method: GET
- name: enroll_user
  endpoint:
    path: /api/v1/courses/:course_id/enrollments
    method: POST
- name: bulk_enroll
  endpoint:
    path: /api/v1/accounts/:account_id/bulk_enrollment
    method: POST
- name: entry_list
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entry_list
    method: GET
    data_selector: entries
    params:
      ids[]: string
- name: mark_topic_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read
    method: PUT
    data_selector: ''
    params: {}
- name: mark_all_topic_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/read_all
    method: PUT
    data_selector: ''
    params: {}
- name: mark_topic_unread
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read
    method: DELETE
    data_selector: ''
    params: {}
- name: mark_all_entries_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read_all
    method: PUT
    data_selector: ''
    params:
      forced_read_state: boolean
- name: mark_all_entries_unread
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read_all
    method: DELETE
    data_selector: ''
    params:
      forced_read_state: boolean
- name: mark_entry_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/read
    method: PUT
    data_selector: ''
    params:
      forced_read_state: boolean
- name: mark_entry_unread
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/read
    method: DELETE
    data_selector: ''
    params:
      forced_read_state: boolean
- name: rate_entry
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/rating
    method: POST
    data_selector: ''
    params:
      rating: integer
- name: subscribe_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/subscribed
    method: PUT
    data_selector: ''
    params: {}
- name: unsubscribe_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/subscribed
    method: DELETE
    data_selector: ''
    params: {}
- name: temporary_enrollment_status
  endpoint:
    path: /api/v1/users/:user_id/temporary_enrollment_status
    method: GET
- name: accept_course_invitation
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id/accept
    method: POST
- name: reject_course_invitation
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id/reject
    method: POST
- name: reactivate_enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id/reactivate
    method: PUT
- name: last_attended_date
  endpoint:
    path: /api/v1/courses/:course_id/users/:user_id/last_attended
    method: PUT
- name: delete_enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id
    method: DELETE
    params:
      task: conclude
- name: enrollment_terms
  endpoint:
    path: /api/v1/enrollment_terms
    method: GET
    data_selector: enrollment_terms
- name: e_portfolios
  endpoint:
    path: /users/:user_id/eportfolios
    method: GET
    data_selector: ePortfolio
    params:
      include[]: deleted
- name: enrollment_terms
  endpoint:
    path: /api/v1/accounts/:account_id/terms
    method: GET
    data_selector: enrollment_terms
    params:
      workflow_state[]: active
      include[]: overrides
- name: create_enrollment_term
  endpoint:
    path: /api/v1/accounts/:account_id/terms
    method: POST
    data_selector: enrollment_term
    params: {}
- name: update_enrollment_term
  endpoint:
    path: /api/v1/accounts/:account_id/terms/:id
    method: PUT
    data_selector: enrollment_term
    params: {}
- name: delete_enrollment_term
  endpoint:
    path: /api/v1/accounts/:account_id/terms/:id
    method: DELETE
    data_selector: enrollment_term
    params: {}
- name: retrieve_enrollment_term
  endpoint:
    path: /api/v1/accounts/:account_id/terms/:id
    method: GET
    data_selector: enrollment_term
    params: {}
- name: eportfolio
  endpoint:
    path: /api/v1/eportfolios/:id
    method: GET
- name: delete_eportfolio
  endpoint:
    path: /api/v1/eportfolios/:id
    method: DELETE
- name: eportfolio_pages
  endpoint:
    path: /api/v1/eportfolios/:eportfolio_id/pages
    method: GET
- name: moderate_eportfolio
  endpoint:
    path: /api/v1/eportfolios/:eportfolio_id/moderate
    method: PUT
- name: moderate_all_user_eportfolios
  endpoint:
    path: /api/v1/users/:user_id/eportfolios
    method: PUT
- name: restore_eportfolio
  endpoint:
    path: /api/v1/eportfolios/:eportfolio_id/restore
    method: PUT
- name: enrollments
  endpoint:
    path: /enrollments
    method: GET
    data_selector: enrollments
    params: {}
- name: epub_exports
  endpoint:
    path: /epub_exports
    method: GET
    data_selector: CourseEpubExport
- name: create_epub_export
  endpoint:
    path: /courses/:course_id/epub_exports
    method: POST
    data_selector: EpubExport
- name: show_epub_export
  endpoint:
    path: /epub_exports/:id
    method: GET
    data_selector: EpubExport
- name: epub_export
  endpoint:
    path: /courses/:course_id/epub_exports/:id
    method: GET
    data_selector: EpubExport
- name: enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments
    method: GET
- name: section_enrollment
  endpoint:
    path: /api/v1/sections/:section_id/enrollments
    method: GET
- name: user_enrollment
  endpoint:
    path: /api/v1/users/:user_id/enrollments
    method: GET
- name: enrollment_by_id
  endpoint:
    path: /api/v1/accounts/:account_id/enrollments/:id
    method: GET
- name: create_enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments
    method: POST
- name: bulk_enrollment
  endpoint:
    path: /api/v1/accounts/:account_id/bulk_enrollment
    method: POST
- name: error_reports
  endpoint:
    path: /api/v1/error_reports
    method: POST
    data_selector: error
    params: {}
- name: external_tools
  endpoint:
    path: /external_tools
    method: GET
- name: temporary_enrollment_status
  endpoint:
    path: /api/v1/users/:user_id/temporary_enrollment_status
    method: GET
    data_selector: is_recipient
    params:
      account_id: string
- name: enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id
    method: DELETE
    data_selector: Enrollment
    params:
      task: string
- name: accept_enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id/accept
    method: POST
    data_selector: success
    params: {}
- name: reject_enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id/reject
    method: POST
    data_selector: success
    params: {}
- name: reactivate_enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id/reactivate
    method: PUT
    data_selector: Enrollment
    params: {}
- name: last_attended
  endpoint:
    path: /api/v1/courses/:course_id/users/:user_id/last_attended
    method: PUT
    data_selector: Enrollment
    params:
      date: Date
- name: ePortfolios
  endpoint:
    path: /users/:user_id/eportfolios
    method: GET
    data_selector: ePortfolios
    params:
      include[]: deleted
- name: external_tools
  endpoint:
    path: /api/v1/courses/:course_id/external_tools
    method: GET
    data_selector: ContextExternalTool
    params: {}
- name: sessionless_launch
  endpoint:
    path: /api/v1/courses/:course_id/external_tools/sessionless_launch
    method: GET
    data_selector: sessionless_launch_url
    params: {}
- name: single_external_tool
  endpoint:
    path: /api/v1/courses/:course_id/external_tools/:external_tool_id
    method: GET
    data_selector: ContextExternalTool
    params: {}
- name: create_external_tool
  endpoint:
    path: /api/v1/courses/:course_id/external_tools
    method: POST
    data_selector: created_external_tool
    params: {}
- name: eportfolio
  endpoint:
    path: /api/v1/eportfolios/:id
    method: GET
- name: delete_eportfolio
  endpoint:
    path: /api/v1/eportfolios/:id
    method: DELETE
- name: eportfolio_pages
  endpoint:
    path: /api/v1/eportfolios/:eportfolio_id/pages
    method: GET
- name: moderate_eportfolio
  endpoint:
    path: /api/v1/eportfolios/:eportfolio_id/moderate
    method: PUT
- name: moderate_all_eportfolios
  endpoint:
    path: /api/v1/users/:user_id/eportfolios
    method: PUT
- name: restore_eportfolio
  endpoint:
    path: /api/v1/eportfolios/:eportfolio_id/restore
    method: PUT
- name: epub_exports
  endpoint:
    path: /epub_exports
    method: GET
    data_selector: CourseEpubExport
- name: create_epub_export
  endpoint:
    path: /courses/:course_id/epub_exports
    method: POST
    data_selector: EpubExport
- name: show_epub_export
  endpoint:
    path: /epub_exports/:id
    method: GET
    data_selector: EpubExport
- name: create_external_tool
  endpoint:
    path: /api/v1/accounts/:account_id/external_tools
    method: POST
- name: update_external_tool
  endpoint:
    path: /api/v1/accounts/:account_id/external_tools/:external_tool_id
    method: PUT
- name: delete_external_tool
  endpoint:
    path: /api/v1/accounts/:account_id/external_tools/:external_tool_id
    method: DELETE
- name: mark_tool_as_rce_favorite
  endpoint:
    path: /api/v1/accounts/:account_id/external_tools/rce_favorites/:id
    method: POST
- name: unmark_tool_as_rce_favorite
  endpoint:
    path: /api/v1/accounts/:account_id/external_tools/rce_favorites/:id
    method: DELETE
- name: add_tool_to_top_navigation_favorites
  endpoint:
    path: /api/v1/accounts/:account_id/external_tools/top_nav_favorites/:id
    method: POST
- name: remove_tool_from_top_navigation_favorites
  endpoint:
    path: /api/v1/accounts/:account_id/external_tools/top_nav_favorites/:id
    method: DELETE
- name: get_visible_course_navigation_tools
  endpoint:
    path: /api/v1/external_tools/visible_course_nav_tools
    method: GET
- name: get_visible_course_navigation_tools_for_single_course
  endpoint:
    path: /api/v1/courses/:course_id/external_tools/visible_course_nav_tools
    method: GET
- name: epub_export
  endpoint:
    path: /courses/:course_id/epub_exports/:id
    method: GET
    data_selector: EpubExport
- name: favorite_courses
  endpoint:
    path: /api/v1/users/self/favorites/courses
    method: GET
    params:
      exclude_blueprint_courses: boolean
- name: favorite_groups
  endpoint:
    path: /api/v1/users/self/favorites/groups
    method: GET
- name: error_report
  endpoint:
    path: /api/v1/error_reports
    method: POST
    data_selector: error
    params: {}
- name: external_tools
  endpoint:
    path: /external_tools
    method: GET
- name: external_tools
  endpoint:
    path: /api/v1/courses/:course_id/external_tools
    method: GET
    data_selector: external_tools
    params: {}
- name: sessionless_launch
  endpoint:
    path: /api/v1/courses/:course_id/external_tools/sessionless_launch
    method: GET
    data_selector: sessionless_launch
    params: {}
- name: single_external_tool
  endpoint:
    path: /api/v1/courses/:course_id/external_tools/:external_tool_id
    method: GET
    data_selector: external_tool
    params: {}
- name: create_external_tool
  endpoint:
    path: /api/v1/courses/:course_id/external_tools
    method: POST
    data_selector: external_tool
    params: {}
- name: add_course_to_favorites
  endpoint:
    path: /api/v1/users/self/favorites/courses/:id
    method: POST
    data_selector: Favorite
    params:
      id: Required
- name: add_group_to_favorites
  endpoint:
    path: /api/v1/users/self/favorites/groups/:id
    method: POST
    data_selector: Favorite
    params:
      id: Required
- name: remove_course_from_favorites
  endpoint:
    path: /api/v1/users/self/favorites/courses/:id
    method: DELETE
    data_selector: Favorite
    params:
      id: Required
- name: remove_group_from_favorites
  endpoint:
    path: /api/v1/users/self/favorites/groups/:id
    method: DELETE
    data_selector: Favorite
    params:
      id: Required
- name: reset_course_favorites
  endpoint:
    path: /api/v1/users/self/favorites/courses
    method: DELETE
    data_selector: Favorite
    params: {}
- name: reset_group_favorites
  endpoint:
    path: /api/v1/users/self/favorites/groups
    method: DELETE
    data_selector: Favorite
    params: {}
- name: features
  endpoint:
    path: /api/v1/courses/:course_id/features
    method: GET
- name: create_external_tool
  endpoint:
    path: /api/v1/accounts/:account_id/external_tools
    method: POST
    data_selector: created_tool
- name: update_external_tool
  endpoint:
    path: /api/v1/accounts/:account_id/external_tools/:external_tool_id
    method: PUT
    data_selector: updated_tool
- name: delete_external_tool
  endpoint:
    path: /api/v1/accounts/:account_id/external_tools/:external_tool_id
    method: DELETE
    data_selector: deleted_tool
- name: mark_tool_as_favorite
  endpoint:
    path: /api/v1/accounts/:account_id/external_tools/rce_favorites/:id
    method: POST
    data_selector: marked_favorite
- name: unmark_tool_as_favorite
  endpoint:
    path: /api/v1/accounts/:account_id/external_tools/rce_favorites/:id
    method: DELETE
    data_selector: unmarked_favorite
- name: get_visible_course_nav_tools
  endpoint:
    path: /api/v1/external_tools/visible_course_nav_tools
    method: GET
    data_selector: visible_nav_tools
- name: get_visible_course_nav_tools_for_single_course
  endpoint:
    path: /api/v1/courses/:course_id/external_tools/visible_course_nav_tools
    method: GET
    data_selector: visible_nav_tools_course
- name: account_features
  endpoint:
    path: /api/v1/accounts/:account_id/features
    method: GET
- name: user_features
  endpoint:
    path: /api/v1/users/:user_id/features
    method: GET
- name: course_features
  endpoint:
    path: /api/v1/courses/:course_id/features
    method: GET
- name: enabled_account_features
  endpoint:
    path: /api/v1/accounts/:account_id/features/enabled
    method: GET
- name: enabled_user_features
  endpoint:
    path: /api/v1/users/:user_id/features/enabled
    method: GET
- name: enabled_course_features
  endpoint:
    path: /api/v1/courses/:course_id/features/enabled
    method: GET
- name: environment_features
  endpoint:
    path: /api/v1/features/environment
    method: GET
- name: feature_flag
  endpoint:
    path: /api/v1/courses/:course_id/features/flags/:feature
    method: GET
- name: set_feature_flag
  endpoint:
    path: /api/v1/courses/:course_id/features/flags/:feature
    method: PUT
- name: remove_feature_flag
  endpoint:
    path: /api/v1/courses/:course_id/features/flags/:feature
    method: DELETE
- name: favorite_courses
  endpoint:
    path: /api/v1/users/self/favorites/courses
    method: GET
    data_selector: courses
    params:
      exclude_blueprint_courses: boolean
- name: favorite_groups
  endpoint:
    path: /api/v1/users/self/favorites/groups
    method: GET
    data_selector: groups
    params: {}
- name: file
  endpoint:
    path: /files
    method: GET
    data_selector: files
- name: folder
  endpoint:
    path: /folders
    method: GET
    data_selector: folders
- name: quota
  endpoint:
    path: /api/v1/courses/:course_id/files/quota
    method: GET
- name: list_files
  endpoint:
    path: /api/v1/courses/:course_id/files
    method: GET
- name: get_file
  endpoint:
    path: /api/v1/files/:id
    method: GET
- name: delete_file
  endpoint:
    path: /api/v1/files/:id
    method: DELETE
- name: list_folders
  endpoint:
    path: /api/v1/courses/:course_id/folders
    method: GET
- name: get_folder
  endpoint:
    path: /api/v1/courses/:course_id/folders/:id
    method: GET
- name: add_course_to_favorites
  endpoint:
    path: /api/v1/users/self/favorites/courses/:id
    method: POST
    data_selector: Favorite
    params:
      id: Required
- name: add_group_to_favorites
  endpoint:
    path: /api/v1/users/self/favorites/groups/:id
    method: POST
    data_selector: Favorite
    params:
      id: Required
- name: remove_course_from_favorites
  endpoint:
    path: /api/v1/users/self/favorites/courses/:id
    method: DELETE
    data_selector: Favorite
    params:
      id: Required
- name: remove_group_from_favorites
  endpoint:
    path: /api/v1/users/self/favorites/groups/:id
    method: DELETE
    data_selector: Favorite
    params:
      id: Required
- name: reset_course_favorites
  endpoint:
    path: /api/v1/users/self/favorites/courses
    method: DELETE
    data_selector: Favorite
- name: reset_group_favorites
  endpoint:
    path: /api/v1/users/self/favorites/groups
    method: DELETE
    data_selector: Favorite
- name: features
  endpoint:
    path: /api/v1/courses/:course_id/features
    method: GET
- name: create_folder
  endpoint:
    path: /api/v1/courses/:course_id/folders
    method: POST
- name: delete_folder
  endpoint:
    path: /api/v1/folders/:id
    method: DELETE
- name: upload_file
  endpoint:
    path: /api/v1/folders/:folder_id/files
    method: POST
- name: copy_file
  endpoint:
    path: /api/v1/folders/:dest_folder_id/copy_file
    method: POST
- name: copy_folder
  endpoint:
    path: /api/v1/folders/:dest_folder_id/copy_folder
    method: POST
- name: get_uploaded_media_folder
  endpoint:
    path: /api/v1/courses/:course_id/folders/media
    method: GET
- name: set_usage_rights
  endpoint:
    path: /api/v1/courses/:course_id/usage_rights
    method: PUT
- name: remove_usage_rights
  endpoint:
    path: /api/v1/courses/:course_id/usage_rights
    method: DELETE
- name: list_licenses
  endpoint:
    path: /api/v1/courses/:course_id/content_licenses
    method: GET
- name: grade_change_event
  endpoint:
    path: /grade_change_audit
    method: GET
    data_selector: events
    params: {}
- name: account_features
  endpoint:
    path: /api/v1/accounts/:account_id/features
    method: GET
- name: user_features
  endpoint:
    path: /api/v1/users/:user_id/features
    method: GET
- name: course_features
  endpoint:
    path: /api/v1/courses/:course_id/features
    method: GET
- name: enabled_account_features
  endpoint:
    path: /api/v1/accounts/:account_id/features/enabled
    method: GET
- name: enabled_user_features
  endpoint:
    path: /api/v1/users/:user_id/features/enabled
    method: GET
- name: enabled_course_features
  endpoint:
    path: /api/v1/courses/:course_id/features/enabled
    method: GET
- name: environment_features
  endpoint:
    path: /api/v1/features/environment
    method: GET
- name: get_feature_flag
  endpoint:
    path: /api/v1/courses/:course_id/features/flags/:feature
    method: GET
- name: set_feature_flag
  endpoint:
    path: /api/v1/courses/:course_id/features/flags/:feature
    method: PUT
- name: remove_feature_flag
  endpoint:
    path: /api/v1/courses/:course_id/features/flags/:feature
    method: DELETE
- name: files
  endpoint:
    path: /files
    method: GET
- name: folders
  endpoint:
    path: /folders
    method: GET
- name: usage_rights
  endpoint:
    path: /usage_rights
    method: GET
- name: grade_change_assignments
  endpoint:
    path: /api/v1/audit/grade_change/assignments/:assignment_id
    method: GET
    data_selector: GradeChangeEvent
    params:
      start_time: DateTime
      end_time: DateTime
- name: grade_change_courses
  endpoint:
    path: /api/v1/audit/grade_change/courses/:course_id
    method: GET
    data_selector: GradeChangeEvent
    params:
      start_time: DateTime
      end_time: DateTime
- name: grade_change_students
  endpoint:
    path: /api/v1/audit/grade_change/students/:student_id
    method: GET
    data_selector: GradeChangeEvent
    params:
      start_time: DateTime
      end_time: DateTime
- name: grade_change_graders
  endpoint:
    path: /api/v1/audit/grade_change/graders/:grader_id
    method: GET
    data_selector: GradeChangeEvent
    params:
      start_time: DateTime
      end_time: DateTime
- name: grade_change_advanced_query
  endpoint:
    path: /api/v1/audit/grade_change
    method: GET
    data_selector: GradeChangeEvent
    params:
      course_id: integer
      assignment_id: integer
      student_id: integer
      grader_id: integer
      start_time: DateTime
      end_time: DateTime
- name: gradebook_history
  endpoint:
    path: /gradebook_history
    method: GET
    data_selector: records
- name: day_details
  endpoint:
    path: /gradebook_history/day_details
    method: GET
    data_selector: records
- name: submissions
  endpoint:
    path: /gradebook_history/submissions
    method: GET
    data_selector: records
- name: uncollated_submission_versions
  endpoint:
    path: /gradebook_history/feed
    method: GET
    data_selector: records
- name: quota
  endpoint:
    path: /api/v1/courses/:course_id/files/quota
    method: GET
- name: list_files
  endpoint:
    path: /api/v1/courses/:course_id/files
    method: GET
- name: public_url
  endpoint:
    path: /api/v1/files/:id/public_url
    method: GET
- name: get_file
  endpoint:
    path: /api/v1/files/:id
    method: GET
- name: list_folders
  endpoint:
    path: /api/v1/folders/:id/folders
    method: GET
- name: get_folder
  endpoint:
    path: /api/v1/courses/:course_id/folders/:id
    method: GET
- name: gradebook_history_days
  endpoint:
    path: /api/v1/courses/:course_id/gradebook_history/days
    method: GET
    data_selector: days
- name: gradebook_history_day_details
  endpoint:
    path: /api/v1/courses/:course_id/gradebook_history/:date
    method: GET
    data_selector: graders
- name: submissions
  endpoint:
    path: /api/v1/courses/:course_id/gradebook_history/:date/graders/:grader_id/assignments/:assignment_id/submissions
    method: GET
    data_selector: versions
- name: uncollated_submission_versions
  endpoint:
    path: /api/v1/courses/:course_id/gradebook_history/feed
    method: GET
    data_selector: versions
- name: grading_period_set
  endpoint:
    path: /api/v1/accounts/:account_id/grading_period_sets
    method: GET
    data_selector: grading_period_set
- name: create_grading_period_set
  endpoint:
    path: /api/v1/accounts/:account_id/grading_period_sets
    method: POST
    data_selector: grading_period_set
- name: update_grading_period_set
  endpoint:
    path: /api/v1/accounts/:account_id/grading_period_sets
    method: PUT
    data_selector: grading_period_set
- name: delete_grading_period_set
  endpoint:
    path: /api/v1/accounts/:account_id/grading_period_sets
    method: DELETE
    data_selector: grading_period_set
- name: folders
  endpoint:
    path: /api/v1/folders/:folder_id/folders
    method: POST
- name: courses_folders
  endpoint:
    path: /api/v1/courses/:course_id/folders
    method: POST
- name: users_folders
  endpoint:
    path: /api/v1/users/:user_id/folders
    method: POST
- name: groups_folders
  endpoint:
    path: /api/v1/groups/:group_id/folders
    method: POST
- name: accounts_folders
  endpoint:
    path: /api/v1/accounts/:account_id/folders
    method: POST
- name: delete_folder
  endpoint:
    path: /api/v1/folders/:id
    method: DELETE
- name: upload_file
  endpoint:
    path: /api/v1/folders/:folder_id/files
    method: POST
- name: copy_file
  endpoint:
    path: /api/v1/folders/:dest_folder_id/copy_file
    method: POST
- name: copy_folder
  endpoint:
    path: /api/v1/folders/:dest_folder_id/copy_folder
    method: POST
- name: media_folder
  endpoint:
    path: /api/v1/courses/:course_id/folders/media
    method: GET
- name: set_usage_rights
  endpoint:
    path: /api/v1/courses/:course_id/usage_rights
    method: PUT
- name: remove_usage_rights
  endpoint:
    path: /api/v1/courses/:course_id/usage_rights
    method: DELETE
- name: list_licenses
  endpoint:
    path: /api/v1/courses/:course_id/content_licenses
    method: GET
- name: grade_change_event
  endpoint:
    path: /grade_change_audit
    method: GET
    data_selector: events
    params: {}
- name: grading_period_set_update
  endpoint:
    path: /api/v1/accounts/:account_id/grading_period_sets/:id
    method: PATCH
    data_selector: 204 No Content
    params: {}
- name: grading_period_set_delete
  endpoint:
    path: /api/v1/accounts/:account_id/grading_period_sets/:id
    method: DELETE
    data_selector: 204 No Content
    params: {}
- name: grading_periods
  endpoint:
    path: /accounts/:account_id/grading_periods
    method: GET
    data_selector: grading_periods
- name: single_grading_period
  endpoint:
    path: /courses/:course_id/grading_periods/:id
    method: GET
    data_selector: grading_periods
- name: grading_period
  endpoint:
    path: /api/v1/courses/:course_id/grading_periods/:id
    method: PUT
    data_selector: grading_periods
    params: {}
- name: batch_update_grading_periods
  endpoint:
    path: /api/v1/courses/:course_id/grading_periods/batch_update
    method: PATCH
    data_selector: grading_periods
    params:
      set_id: required
- name: grade_change_assignments
  endpoint:
    path: /api/v1/audit/grade_change/assignments/:assignment_id
    method: GET
    data_selector: GradeChangeEvent
    params:
      start_time: DateTime
      end_time: DateTime
- name: grade_change_courses
  endpoint:
    path: /api/v1/audit/grade_change/courses/:course_id
    method: GET
    data_selector: GradeChangeEvent
    params:
      start_time: DateTime
      end_time: DateTime
- name: grade_change_students
  endpoint:
    path: /api/v1/audit/grade_change/students/:student_id
    method: GET
    data_selector: GradeChangeEvent
    params:
      start_time: DateTime
      end_time: DateTime
- name: grade_change_graders
  endpoint:
    path: /api/v1/audit/grade_change/graders/:grader_id
    method: GET
    data_selector: GradeChangeEvent
    params:
      start_time: DateTime
      end_time: DateTime
- name: grade_change_advanced_query
  endpoint:
    path: /api/v1/audit/grade_change
    method: GET
    data_selector: GradeChangeEvent
    params:
      course_id: integer
      assignment_id: integer
      student_id: integer
      grader_id: integer
      start_time: DateTime
      end_time: DateTime
- name: grading_standard
  endpoint:
    path: /api/v1/accounts/:account_id/grading_standards
    method: POST
    data_selector: null
    params: {}
- name: gradebook_history
  endpoint:
    path: /gradebook_history
    method: GET
    data_selector: submissions
- name: day_details
  endpoint:
    path: /gradebook_history/day_details
    method: GET
    data_selector: details
- name: submissions
  endpoint:
    path: /gradebook_history/submissions
    method: GET
    data_selector: submissions
- name: feed
  endpoint:
    path: /gradebook_history/feed
    method: GET
    data_selector: uncollated_submission_versions
- name: grading_standards
  endpoint:
    path: /api/v1/courses/:course_id/grading_standards
    method: GET
- name: grading_standard_create
  endpoint:
    path: /api/v1/courses/:course_id/grading_standards
    method: POST
- name: grading_standard_get
  endpoint:
    path: /api/v1/courses/:course_id/grading_standards/:grading_standard_id
    method: GET
- name: grading_standard_update
  endpoint:
    path: /api/v1/courses/:course_id/grading_standards/:grading_standard_id
    method: PUT
- name: grading_standard_delete
  endpoint:
    path: /api/v1/courses/:course_id/grading_standards/:grading_standard_id
    method: DELETE
- name: group_categories
  endpoint:
    path: /api/v1/group_categories
    method: GET
- name: gradebook_history_days
  endpoint:
    path: /courses/:course_id/gradebook_history/days
    method: GET
    data_selector: days
    params:
      course_id: ''
- name: gradebook_history_day_details
  endpoint:
    path: /courses/:course_id/gradebook_history/:date
    method: GET
    data_selector: graders
    params:
      course_id: ''
      date: ''
- name: gradebook_history_submissions
  endpoint:
    path: /courses/:course_id/gradebook_history/:date/graders/:grader_id/assignments/:assignment_id/submissions
    method: GET
    data_selector: submissions
    params:
      course_id: ''
      date: ''
      grader_id: ''
      assignment_id: ''
- name: gradebook_history_feed
  endpoint:
    path: /courses/:course_id/gradebook_history/feed
    method: GET
    data_selector: submission_versions
    params:
      course_id: ''
      assignment_id: ''
      user_id: ''
      ascending: ''
- name: group_categories
  endpoint:
    path: /api/v1/accounts/:account_id/group_categories
    method: GET
    data_selector: group_categories
    params:
      collaboration_state: all
- name: group_category
  endpoint:
    path: /api/v1/group_categories/:group_category_id
    method: GET
    data_selector: group_category
    params: {}
- name: create_group_category
  endpoint:
    path: /api/v1/accounts/:account_id/group_categories
    method: POST
    data_selector: group_category
    params: {}
- name: bulk_manage_differentiation_tag
  endpoint:
    path: /api/v1/courses/:course_id/group_categories/bulk_manage_differentiation_tag
    method: POST
    data_selector: group_categories
    params: {}
- name: import_tags
  endpoint:
    path: /api/v1/courses/:course_id/group_categories/import_tags
    method: POST
    data_selector: tags
    params: {}
- name: list_groups_in_category
  endpoint:
    path: /api/v1/group_categories/:group_category_id/groups
    method: GET
    data_selector: groups
    params: {}
- name: grading_period_sets
  endpoint:
    path: /api/v1/accounts/:account_id/grading_period_sets
    method: GET
    data_selector: grading_period_set
- name: create_grading_period_set
  endpoint:
    path: /api/v1/accounts/:account_id/grading_period_sets
    method: POST
    data_selector: grading_period_set
- name: update_grading_period_set
  endpoint:
    path: /api/v1/accounts/:account_id/grading_period_sets
    method: PUT
    data_selector: grading_period_set
- name: delete_grading_period_set
  endpoint:
    path: /api/v1/accounts/:account_id/grading_period_sets
    method: DELETE
    data_selector: grading_period_set
- name: group_users
  endpoint:
    path: /api/v1/group_categories/:group_category_id/users
    method: GET
    data_selector: users
    params: {}
- name: assign_unassigned_members
  endpoint:
    path: /api/v1/group_categories/:group_category_id/assign_unassigned_members
    method: POST
    data_selector: progress
    params: {}
- name: grading_period_set
  endpoint:
    path: /api/v1/accounts/:account_id/grading_period_sets/:id
    method: PATCH
    data_selector: ''
    params: {}
- name: grading_period_set_destroy
  endpoint:
    path: /api/v1/accounts/:account_id/grading_period_sets/:id
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
- name: group_memberships
  endpoint:
    path: /api/v1/group_memberships
    method: GET
- name: grading_periods
  endpoint:
    path: /accounts/:account_id/grading_periods
    method: GET
    data_selector: grading_periods
    params: {}
- name: single_grading_period
  endpoint:
    path: /courses/:course_id/grading_periods/:id
    method: GET
    data_selector: grading_periods
    params: {}
- name: groups
  endpoint:
    path: /api/v1/users/self/groups
    method: GET
    data_selector: groups
    params: {}
- name: group_memberships
  endpoint:
    path: /api/v1/groups/:group_id/memberships
    method: GET
    data_selector: memberships
    params: {}
- name: grading_periods_batch_update
  endpoint:
    path: /api/v1/courses/:course_id/grading_periods/batch_update
    method: PATCH
    data_selector: grading_periods
    params:
      set_id: required
- name: grading_periods_update
  endpoint:
    path: /api/v1/courses/:course_id/grading_periods/:id
    method: PUT
    data_selector: grading_periods
    params: {}
- name: grading_periods_destroy
  endpoint:
    path: /api/v1/courses/:course_id/grading_periods/:id
    method: DELETE
    data_selector: null
    params: {}
- name: grading_standard
  endpoint:
    path: /api/v1/accounts/:account_id/grading_standards
    method: POST
- name: group_memberships_create
  endpoint:
    path: /api/v1/groups/:group_id/memberships
    method: POST
    params: {}
- name: group_memberships_update
  endpoint:
    path: /api/v1/groups/:group_id/memberships/:membership_id
    method: PUT
    params: {}
- name: group_memberships_destroy
  endpoint:
    path: /api/v1/groups/:group_id/memberships/:membership_id
    method: DELETE
    params: {}
- name: group_memberships_destroy_bulk
  endpoint:
    path: /api/v1/groups/:group_id/users
    method: DELETE
    params: {}
- name: grading_standards
  endpoint:
    path: /api/v1/courses/:course_id/grading_standards
    method: POST
- name: grading_standards_list
  endpoint:
    path: /api/v1/courses/:course_id/grading_standards
    method: GET
- name: grading_standard
  endpoint:
    path: /api/v1/courses/:course_id/grading_standards/:grading_standard_id
    method: GET
- name: update_grading_standard
  endpoint:
    path: /api/v1/courses/:course_id/grading_standards/:grading_standard_id
    method: PUT
- name: delete_grading_standard
  endpoint:
    path: /api/v1/courses/:course_id/grading_standards/:grading_standard_id
    method: DELETE
- name: history
  endpoint:
    path: /api/v1/users/:user_id/history
    method: GET
    data_selector: HistoryEntry
- name: group_categories
  endpoint:
    path: /api/v1/group_categories
    method: GET
    data_selector: group_categories
- name: inst_access_tokens
  endpoint:
    path: /api/v1/inst_access_tokens
    method: POST
- name: create_jwt
  endpoint:
    path: /api/v1/jwts
    method: POST
- name: refresh_jwt
  endpoint:
    path: /api/v1/jwts/refresh
    method: POST
- name: group_categories
  endpoint:
    path: /api/v1/accounts/:account_id/group_categories
    method: GET
- name: group_category
  endpoint:
    path: /api/v1/group_categories/:group_category_id
    method: GET
- name: create_group_category
  endpoint:
    path: /api/v1/accounts/:account_id/group_categories
    method: POST
- name: bulk_manage_differentiation_tag
  endpoint:
    path: /api/v1/courses/:course_id/group_categories/bulk_manage_differentiation_tag
    method: POST
- name: import_tags
  endpoint:
    path: /api/v1/courses/:course_id/group_categories/import_tags
    method: POST
- name: users_in_group_category
  endpoint:
    path: /api/v1/group_categories/:group_category_id/users
    method: GET
- name: late_policy
  endpoint:
    path: /api/v1/courses/:id/late_policy
    method: GET
    data_selector: late_policy
- name: group_category_users
  endpoint:
    path: /api/v1/group_categories/:group_category_id/users
    method: GET
    data_selector: users
    params:
      search_term: string
      unassigned: boolean
- name: assign_unassigned_members
  endpoint:
    path: /api/v1/group_categories/:group_category_id/assign_unassigned_members
    method: POST
    data_selector: progress
    params:
      sync: boolean
- name: late_policy_create
  endpoint:
    path: /api/v1/courses/:id/late_policy
    method: POST
- name: late_policy_update
  endpoint:
    path: /api/v1/courses/:id/late_policy
    method: PATCH
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: groups
- name: group_memberships
  endpoint:
    path: /api/v1/group_memberships
    method: GET
    data_selector: memberships
- name: modules_date_details
  endpoint:
    path: /courses/:course_id/modules/:context_module_id/date_details
    method: GET
- name: assignments_date_details
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/date_details
    method: GET
- name: quizzes_date_details
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/date_details
    method: GET
- name: discussion_topics_date_details
  endpoint:
    path: /courses/:course_id/discussion_topics/:discussion_topic_id/date_details
    method: GET
- name: groups
  endpoint:
    path: /api/v1/users/self/groups
    method: GET
    data_selector: groups
- name: group_memberships
  endpoint:
    path: /api/v1/groups/:group_id/memberships
    method: GET
    data_selector: memberships
- name: date_details_courses_pages
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id/date_details
    method: GET
- name: date_details_courses_files
  endpoint:
    path: /api/v1/courses/:course_id/files/:attachment_id/date_details
    method: GET
- name: update_date_details_assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/date_details
    method: PUT
- name: update_date_details_quizzes
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/date_details
    method: PUT
- name: update_date_details_discussion_topics
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:discussion_topic_id/date_details
    method: PUT
- name: update_date_details_pages
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id/date_details
    method: PUT
- name: update_date_details_files
  endpoint:
    path: /api/v1/courses/:course_id/files/:attachment_id/date_details
    method: PUT
- name: group_memberships_create
  endpoint:
    path: /api/v1/groups/:group_id/memberships
    method: POST
    data_selector: null
    params: {}
- name: group_memberships_update
  endpoint:
    path: /api/v1/groups/:group_id/memberships/:membership_id
    method: PUT
    data_selector: null
    params: {}
- name: group_memberships_leave
  endpoint:
    path: /api/v1/groups/:group_id/memberships/:membership_id
    method: DELETE
    data_selector: null
    params: {}
- name: group_memberships_bulk_delete
  endpoint:
    path: /api/v1/groups/:group_id/users
    method: DELETE
    data_selector: null
    params: {}
- name: line_items
  endpoint:
    path: /lti/ims/line_items
    method: GET
- name: user_history
  endpoint:
    path: /api/v1/users/:user_id/history
    method: GET
    data_selector: HistoryEntry
- name: line_items
  endpoint:
    path: /api/lti/courses/:course_id/line_items
    method: GET
- name: create_line_item
  endpoint:
    path: /api/lti/courses/:course_id/line_items
    method: POST
- name: update_line_item
  endpoint:
    path: /api/lti/courses/:course_id/line_items/:id
    method: PUT
- name: show_line_item
  endpoint:
    path: /api/lti/courses/:course_id/line_items/:id
    method: GET
- name: delete_line_item
  endpoint:
    path: /api/lti/courses/:course_id/line_items/:id
    method: DELETE
- name: InstAccess tokens
  endpoint:
    path: /inst_access_tokens
    method: POST
- name: live_assessment_results
  endpoint:
    path: /courses/:course_id/live_assessments/:assessment_id/results
    method: POST
    data_selector: results
- name: list_live_assessment_results
  endpoint:
    path: /courses/:course_id/live_assessments/:assessment_id/results
    method: GET
    data_selector: results
- name: inst_access_tokens
  endpoint:
    path: /api/v1/inst_access_tokens
    method: POST
    data_selector: token
- name: live_assessment_results
  endpoint:
    path: /courses/:course_id/live_assessments/:assessment_id/results
    method: GET
    data_selector: results
    params:
      user_id: integer
- name: create_live_assessment
  endpoint:
    path: /courses/:course_id/live_assessments
    method: POST
    data_selector: assessments
- name: list_live_assessments
  endpoint:
    path: /courses/:course_id/live_assessments
    method: GET
    data_selector: assessments
- name: jwts
  endpoint:
    path: /api/v1/jwts
    method: POST
- name: refresh_jwts
  endpoint:
    path: /api/v1/jwts/refresh
    method: POST
- name: late_policy
  endpoint:
    path: /courses/:id/late_policy
    method: GET
    data_selector: late_policy
- name: user_logins
  endpoint:
    path: /api/v1/accounts/:account_id/logins
    method: GET
    data_selector: logins
- name: reset_password
  endpoint:
    path: /api/v1/users/reset_password
    method: POST
    data_selector: requested
- name: create_user_login
  endpoint:
    path: /api/v1/accounts/:account_id/logins
    method: POST
    data_selector: login
- name: edit_user_login
  endpoint:
    path: /api/v1/accounts/:account_id/logins/:id
    method: PUT
    data_selector: login
- name: delete_user_login
  endpoint:
    path: /api/v1/users/:user_id/logins/:id
    method: DELETE
    data_selector: login
- name: create_late_policy
  endpoint:
    path: /api/v1/courses/:id/late_policy
    method: POST
    data_selector: late_policy
- name: update_late_policy
  endpoint:
    path: /api/v1/courses/:id/late_policy
    method: PATCH
    data_selector: late_policy
- name: launch_definitions
  endpoint:
    path: /api/v1/courses/:course_id/lti_apps/launch_definitions
    method: GET
    data_selector: launch_definitions
- name: account_launch_definitions
  endpoint:
    path: /api/v1/accounts/:account_id/lti_apps/launch_definitions
    method: GET
    data_selector: launch_definitions
- name: lti_registrations
  endpoint:
    path: /lti/registrations
    method: GET
- name: learning_object_dates
  endpoint:
    path: /api/v1/courses/:course_id/modules/:context_module_id/date_details
    method: GET
- name: assignment_dates
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/date_details
    method: GET
- name: quiz_dates
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/date_details
    method: GET
- name: discussion_topic_dates
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:discussion_topic_id/date_details
    method: GET
- name: overlay_history
  endpoint:
    path: /api/v1/accounts/:account_id/lti_registrations/:id/overlay_history
    method: GET
    data_selector: data
    params:
      limit: 50
- name: date_details_courses_pages
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id/date_details
    method: GET
- name: date_details_courses_files
  endpoint:
    path: /api/v1/courses/:course_id/files/:attachment_id/date_details
    method: GET
- name: date_details_assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/date_details
    method: PUT
- name: date_details_quizzes
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/date_details
    method: PUT
- name: date_details_discussion_topics
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:discussion_topic_id/date_details
    method: PUT
- name: date_details_courses_pages_update
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id/date_details
    method: PUT
- name: date_details_courses_files_update
  endpoint:
    path: /api/v1/courses/:course_id/files/:attachment_id/date_details
    method: PUT
- name: overlay_history
  endpoint:
    path: /api/v1/accounts/:account_id/lti_registrations/:id/overlay_history
    method: GET
    data_selector: Lti::OverlayVersion
    params:
      limit: 50
- name: line_item
  endpoint:
    path: /ims/line_items
    method: GET
    data_selector: line_items
- name: List LTI Resource Links
  endpoint:
    path: /lti/resource_links
    method: GET
- name: Show an LTI Resource Link
  endpoint:
    path: /lti/resource_links/{id}
    method: GET
- name: Create an LTI Resource Link
  endpoint:
    path: /lti/resource_links
    method: POST
- name: Bulk Create LTI Resource Links
  endpoint:
    path: /lti/resource_links/bulk_create
    method: POST
- name: Update an LTI Resource Link
  endpoint:
    path: /lti/resource_links/{id}
    method: PUT
- name: Delete an LTI Resource Link
  endpoint:
    path: /lti/resource_links/{id}
    method: DELETE
- name: line_items
  endpoint:
    path: /api/lti/courses/:course_id/line_items
    method: GET
    data_selector: LineItem
    params: {}
- name: create_line_item
  endpoint:
    path: /api/lti/courses/:course_id/line_items
    method: POST
    data_selector: LineItem
    params: {}
- name: update_line_item
  endpoint:
    path: /api/lti/courses/:course_id/line_items/:id
    method: PUT
    data_selector: LineItem
    params: {}
- name: show_line_item
  endpoint:
    path: /api/lti/courses/:course_id/line_items/:id
    method: GET
    data_selector: LineItem
    params: {}
- name: delete_line_item
  endpoint:
    path: /api/lti/courses/:course_id/line_items/:id
    method: DELETE
    data_selector: LineItem
    params: {}
- name: live_assessment_results
  endpoint:
    path: /courses/:course_id/live_assessments/:assessment_id/results
    method: POST
    data_selector: results
    params: {}
- name: list_live_assessment_results
  endpoint:
    path: /courses/:course_id/live_assessments/:assessment_id/results
    method: GET
    data_selector: results
    params: {}
- name: lti_resource_links
  endpoint:
    path: /api/v1/courses/:course_id/lti_resource_links
    method: GET
    data_selector: resource_links
- name: lti_resource_link_details
  endpoint:
    path: /api/v1/courses/:course_id/lti_resource_links/:id
    method: GET
    data_selector: resource_link
- name: create_lti_resource_link
  endpoint:
    path: /api/v1/courses/:course_id/lti_resource_links
    method: POST
    data_selector: resource_link
- name: bulk_create_lti_resource_links
  endpoint:
    path: /api/v1/courses/:course_id/lti_resource_links/bulk
    method: POST
    data_selector: resource_links
- name: update_lti_resource_link
  endpoint:
    path: /api/v1/courses/:course_id/lti_resource_links/:id
    method: PUT
    data_selector: resource_link
- name: delete_lti_resource_link
  endpoint:
    path: /api/v1/courses/:course_id/lti_resource_links/:id
    method: DELETE
    data_selector: resource_link
- name: live_assessment_results
  endpoint:
    path: /api/v1/courses/:course_id/live_assessments/:assessment_id/results
    method: GET
    data_selector: results
    params:
      user_id: integer
- name: live_assessments
  endpoint:
    path: /api/v1/courses/:course_id/live_assessments
    method: GET
    data_selector: assessments
    params: {}
- name: media_tracks
  endpoint:
    path: /media_tracks
    method: GET
- name: media_objects
  endpoint:
    path: /media_objects
    method: GET
- name: media_objects
  endpoint:
    path: /api/v1/media_objects
    method: GET
    data_selector: media_objects
    params: {}
- name: media_tracks
  endpoint:
    path: /api/v1/media_objects/:media_object_id/media_tracks
    method: GET
    data_selector: media_tracks
    params:
      include[]: content
- name: user_logins
  endpoint:
    path: /api/v1/accounts/:account_id/logins
    method: GET
    data_selector: logins
    params: {}
- name: password_recovery
  endpoint:
    path: /api/v1/users/reset_password
    method: POST
    data_selector: requested
    params: {}
- name: create_user_login
  endpoint:
    path: /api/v1/accounts/:account_id/logins
    method: POST
    data_selector: login
    params: {}
- name: edit_user_login
  endpoint:
    path: /api/v1/accounts/:account_id/logins/:id
    method: PUT
    data_selector: login
    params: {}
- name: delete_user_login
  endpoint:
    path: /api/v1/users/:user_id/logins/:id
    method: DELETE
    data_selector: login
    params: {}
- name: moderated_students
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/moderated_students
    method: GET
    data_selector: User
- name: select_students_for_moderation
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/moderated_students
    method: POST
    data_selector: User
- name: bulk_select_provisional_grades
  endpoint:
    path: /provisional_grades/bulk_select
    method: POST
    data_selector: ''
- name: launch_definitions
  endpoint:
    path: /api/v1/courses/:course_id/lti_apps/launch_definitions
    method: GET
    data_selector: launch_definitions
- name: account_launch_definitions
  endpoint:
    path: /api/v1/accounts/:account_id/lti_apps/launch_definitions
    method: GET
    data_selector: launch_definitions
- name: LTI Registrations
  endpoint:
    path: /lti/registrations
    method: GET
- name: overlay_history
  endpoint:
    path: /api/v1/accounts/:account_id/lti_registrations/:id/overlay_history
    method: GET
    data_selector: data
    params:
      limit: 101
- name: modules
  endpoint:
    path: /api/v1/modules
    method: GET
- name: module_items
  endpoint:
    path: /api/v1/module_items
    method: GET
- name: assignment_overrides
  endpoint:
    path: /api/v1/assignment_overrides
    method: GET
- name: overlay_history
  endpoint:
    path: /api/v1/accounts/:account_id/lti_registrations/:id/overlay_history
    method: GET
    data_selector: Lti::OverlayVersion
    params:
      limit: '50'
- name: modules
  endpoint:
    path: /api/v1/courses/:course_id/modules
    method: GET
    data_selector: modules
- name: module_items
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items
    method: GET
    data_selector: module_items
- name: List LTI Resource Links
  endpoint:
    path: /lti/resource_links
    method: GET
- name: Show an LTI Resource Link
  endpoint:
    path: /lti/resource_links/{id}
    method: GET
- name: Create an LTI Resource Link
  endpoint:
    path: /lti/resource_links
    method: POST
- name: Bulk Create LTI Resource Links
  endpoint:
    path: /lti/resource_links/bulk_create
    method: POST
- name: Update an LTI Resource Link
  endpoint:
    path: /lti/resource_links/{id}
    method: PUT
- name: Delete an LTI Resource Link
  endpoint:
    path: /lti/resource_links/{id}
    method: DELETE
- name: LTI Resource Links
  endpoint:
    path: /api/v1/courses/:course_id/lti_resource_links
    method: GET
    data_selector: Lti::ResourceLink
    params: {}
- name: Show LTI Resource Link
  endpoint:
    path: /api/v1/courses/:course_id/lti_resource_links/:id
    method: GET
    data_selector: Lti::ResourceLink
    params: {}
- name: Create LTI Resource Link
  endpoint:
    path: /api/v1/courses/:course_id/lti_resource_links
    method: POST
    data_selector: Lti::ResourceLink
    params: {}
- name: Bulk Create LTI Resource Links
  endpoint:
    path: /api/v1/courses/:course_id/lti_resource_links/bulk
    method: POST
    data_selector: Lti::ResourceLink
    params: {}
- name: Update LTI Resource Link
  endpoint:
    path: /api/v1/courses/:course_id/lti_resource_links/:id
    method: PUT
    data_selector: Lti::ResourceLink
    params: {}
- name: Delete LTI Resource Link
  endpoint:
    path: /api/v1/courses/:course_id/lti_resource_links/:id
    method: DELETE
    data_selector: Lti::ResourceLink
    params: {}
- name: module_item
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items
    method: POST
    data_selector: ModuleItem
    params: {}
- name: update_module_item
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items/:id
    method: PUT
    data_selector: ModuleItem
    params: {}
- name: select_mastery_path
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items/:id/select_mastery_path
    method: POST
    data_selector: ModuleItem
    params: {}
- name: delete_module_item
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items/:id
    method: DELETE
    data_selector: ModuleItem
    params: {}
- name: mark_module_item_as_done
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items/:id/done
    method: PUT
    data_selector: ModuleItem
    params: {}
- name: get_module_item_sequence
  endpoint:
    path: /api/v1/courses/:course_id/module_item_sequence
    method: GET
    data_selector: ModuleItemSequence
    params: {}
- name: mark_module_item_read
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items/:id/mark_read
    method: POST
    data_selector: ModuleItem
    params: {}
- name: list_module_assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/modules/:context_module_id/assignment_overrides
    method: GET
    data_selector: ModuleAssignmentOverride
    params: {}
- name: update_module_assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/modules/:context_module_id/assignment_overrides
    method: PUT
    data_selector: ModuleAssignmentOverride
    params: {}
- name: media_tracks
  endpoint:
    path: /media_tracks
    method: GET
    data_selector: records
- name: media_objects
  endpoint:
    path: /media_objects
    method: GET
    data_selector: records
- name: List Course Memberships
  endpoint:
    path: /lti/ims/names_and_roles/course_index
    method: GET
- name: List Group Memberships
  endpoint:
    path: /lti/ims/names_and_roles/group_index
    method: GET
- name: media_objects
  endpoint:
    path: /api/v1/media_objects
    method: GET
    data_selector: media_objects
    params:
      exclude[]:
      - sources
      - tracks
- name: media_tracks
  endpoint:
    path: /api/v1/media_objects/:media_object_id/media_tracks
    method: GET
    data_selector: media_tracks
    params:
      include[]: content
- name: course_memberships
  endpoint:
    path: /courses/:course_id/names_and_roles
    method: GET
    data_selector: members
    params:
      limit: '50'
- name: group_memberships
  endpoint:
    path: /groups/:group_id/names_and_roles
    method: GET
    data_selector: members
    params:
      limit: '50'
- name: quiz_item
  endpoint:
    path: /api/v1/quiz_items
    method: GET
    data_selector: quiz_items
- name: moderated_students
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/moderated_students
    method: GET
- name: select_students_for_moderation
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/moderated_students
    method: POST
- name: bulk_select_provisional_grades
  endpoint:
    path: /provisional_grades/bulk_select
    method: POST
- name: provisional_grades_bulk_select
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/provisional_grades/bulk_select
    method: PUT
- name: provisional_grades_status
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/provisional_grades/status
    method: GET
    params:
      student_id: integer
- name: select_provisional_grade
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/provisional_grades/:provisional_grade_id/select
    method: PUT
- name: publish_provisional_grades
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/provisional_grades/publish
    method: POST
- name: anonymous_provisional_grades_status
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/anonymous_provisional_grades/status
    method: GET
    params:
      anonymous_id: string
- name: quiz_item
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id/items/:item_id
    method: GET
    data_selector: QuizItem
    params: {}
- name: list_quiz_items
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id/items
    method: GET
    data_selector: QuizItem
    params: {}
- name: create_quiz_item
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id/items
    method: POST
    data_selector: QuizItem
    params: {}
- name: update_quiz_item
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id/items/:item_id
    method: PATCH
    data_selector: QuizItem
    params: {}
- name: delete_quiz_item
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id/items/:item_id
    method: DELETE
    data_selector: QuizItem
    params: {}
- name: media_upload_url
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id/items/media_upload_url
    method: GET
    data_selector: url
    params: {}
- name: modules
  endpoint:
    path: /api/v1/modules
    method: GET
- name: module_items
  endpoint:
    path: /api/v1/module_items
    method: GET
- name: assignment_overrides
  endpoint:
    path: /api/v1/assignment_overrides
    method: GET
- name: media_upload_url
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id/items/media_upload_url
    method: GET
- name: upload_image
  endpoint:
    path: <media_upload_url>
    method: PUT
- name: create_question_item
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id/items
    method: POST
- name: quizzes
  endpoint:
    path: /quizzes
    method: GET
- name: modules
  endpoint:
    path: /api/v1/courses/:course_id/modules
    method: GET
    data_selector: Module
    params: {}
- name: module
  endpoint:
    path: /api/v1/courses/:course_id/modules/:id
    method: GET
    data_selector: Module
    params: {}
- name: module_items
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items
    method: GET
    data_selector: ModuleItem
    params: {}
- name: module_item
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items/:id
    method: GET
    data_selector: ModuleItem
    params: {}
- name: get_quiz
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id
    method: GET
- name: list_quizzes
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes
    method: GET
- name: create_quiz
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes
    method: POST
- name: quizzes
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id
    method: PATCH
    data_selector: NewQuiz
    params: {}
- name: quizzes
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id
    method: DELETE
    data_selector: NewQuiz
    params: {}
- name: set_quiz_level_accommodations
  endpoint:
    path: /new_quizzes/accommodation_api.quiz_level_accommodations
    method: POST
- name: set_course_level_accommodations
  endpoint:
    path: /new_quizzes/accommodation_api.course_level_accommodations
    method: POST
- name: create_module_item
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items
    method: POST
- name: update_module_item
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items/:id
    method: PUT
- name: select_mastery_path
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items/:id/select_mastery_path
    method: POST
- name: delete_module_item
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items/:id
    method: DELETE
- name: mark_module_item_done
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items/:id/done
    method: PUT
- name: get_module_item_sequence
  endpoint:
    path: /api/v1/courses/:course_id/module_item_sequence
    method: GET
- name: mark_module_item_read
  endpoint:
    path: /api/v1/courses/:course_id/modules/:module_id/items/:id/mark_read
    method: POST
- name: list_module_assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/modules/:context_module_id/assignment_overrides
    method: GET
- name: update_module_assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/modules/:context_module_id/assignment_overrides
    method: PUT
- name: List Course Memberships
  endpoint:
    path: /lti/ims/names_and_roles/course_index
    method: GET
- name: List Group Memberships
  endpoint:
    path: /lti/ims/names_and_roles/group_index
    method: GET
- name: quiz_accommodations
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id/accommodations
    method: POST
    data_selector: '[]'
    params:
      course_id: required
      assignment_id: required
      user_id: required
      extra_time: ''
      extra_attempts: ''
      reduce_choices_enabled: ''
- name: course_accommodations
  endpoint:
    path: /api/quiz/v1/courses/:course_id/accommodations
    method: POST
    data_selector: '[]'
    params:
      course_id: required
      user_id: required
      extra_time: ''
      apply_to_in_progress_quiz_sessions: ''
      reduce_choices_enabled: ''
- name: List Course Memberships
  endpoint:
    path: /api/lti/courses/:course_id/names_and_roles
    method: GET
    params:
      rlid: string
      role: string
      limit: string
- name: List Group Memberships
  endpoint:
    path: /api/lti/groups/:group_id/names_and_roles
    method: GET
    params:
      rlid: string
      role: string
      limit: string
- name: quiz_items
  endpoint:
    path: /new_quizzes/quiz_items
    method: GET
- name: quiz_reports
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id/reports
    method: POST
    data_selector: Progress
    params:
      quiz_report[report_type]: string
      quiz_report[format]: string
- name: notice_handlers
  endpoint:
    path: /api/lti/notice-handlers/:context_external_tool_id
    method: GET
    data_selector: notice_handlers
    params: {}
- name: set_notice_handler
  endpoint:
    path: /api/lti/notice-handlers
    method: POST
    data_selector: notice_handlers
    params: {}
- name: notice_handler
  endpoint:
    path: /api/lti/notice-handlers/:context_external_tool_id
    method: PUT
    data_selector: handler
    params:
      notice_type: LtiHelloWorldNotice
      handler: ''
      max_batch_size: null
- name: quiz_item
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id/items/:item_id
    method: GET
    data_selector: QuizItem
    params: {}
- name: list_quiz_items
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id/items
    method: GET
    data_selector: QuizItem
    params: {}
- name: create_quiz_item
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id/items
    method: POST
    data_selector: QuizItem
    params: {}
- name: update_quiz_item
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id/items/:item_id
    method: PATCH
    data_selector: QuizItem
    params: {}
- name: delete_quiz_item
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id/items/:item_id
    method: DELETE
    data_selector: QuizItem
    params: {}
- name: media_upload_url
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id/items/media_upload_url
    method: GET
    data_selector: url
    params: {}
- name: notification_preferences
  endpoint:
    path: /api/v1/users/:user_id/communication_channels/:communication_channel_id/notification_preferences
    method: GET
- name: preference_categories
  endpoint:
    path: /api/v1/users/:user_id/communication_channels/:communication_channel_id/notification_preference_categories
    method: GET
- name: get_preference
  endpoint:
    path: /api/v1/users/:user_id/communication_channels/:communication_channel_id/notification_preferences/:notification
    method: GET
- name: update_preference
  endpoint:
    path: /api/v1/users/self/communication_channels/:communication_channel_id/notification_preferences/:notification
    method: PUT
- name: question_type_choice
  endpoint:
    path: /quiz/items/choice
    method: POST
    data_selector: item
    params: {}
- name: question_type_true_false
  endpoint:
    path: /quiz/items/true-false
    method: POST
    data_selector: item
    params: {}
- name: question_type_categorization
  endpoint:
    path: /quiz/items/categorization
    method: POST
    data_selector: item
    params: {}
- name: question_type_matching
  endpoint:
    path: /quiz/items/matching
    method: POST
    data_selector: item
    params: {}
- name: question_type_file_upload
  endpoint:
    path: /quiz/items/file-upload
    method: POST
    data_selector: item
    params: {}
- name: question_type_formula
  endpoint:
    path: /quiz/items/formula
    method: POST
    data_selector: item
    params: {}
- name: question_type_ordering
  endpoint:
    path: /quiz/items/ordering
    method: POST
    data_selector: item
    params: {}
- name: update_single_notification
  endpoint:
    path: /api/v1/users/self/communication_channels/:type/:address/notification_preferences/:notification
    method: PUT
    data_selector: notification_preferences
    params:
      notification_preferences[frequency]: Required
- name: update_preferences_by_category
  endpoint:
    path: /api/v1/users/self/communication_channels/:communication_channel_id/notification_preference_categories/:category
    method: PUT
    data_selector: notification_preferences
    params:
      category: string
      notification_preferences[frequency]: Required
- name: update_multiple_preferences
  endpoint:
    path: /api/v1/users/self/communication_channels/:communication_channel_id/notification_preferences
    method: PUT
    data_selector: notification_preferences
- name: interaction_data
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id/items
    method: POST
    data_selector: interaction_data
- name: media_upload_url
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id/items/media_upload_url
    method: GET
    data_selector: media_upload_url
- name: originality_report
  endpoint:
    path: /lti/originality_reports
    method: POST
    data_selector: originality_report
- name: new_quiz
  endpoint:
    path: /quizzes
    method: GET
- name: quizzes
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes
    method: GET
    data_selector: NewQuiz
    params: {}
- name: quiz_details
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id
    method: GET
    data_selector: NewQuiz
    params: {}
- name: create_quiz
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes
    method: POST
    data_selector: NewQuiz
    params: {}
- name: outcome_group
  endpoint:
    path: /api/v1/accounts/{account_id}/outcome_groups/{group_id}
    method: GET
    data_selector: outcome_group
    params: {}
- name: quizzes
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id
    method: PATCH
    data_selector: null
    params: {}
- name: quizzes
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id
    method: DELETE
    data_selector: null
    params: {}
- name: Set Quiz-Level Accommodations
  endpoint:
    path: /new_quizzes/accommodation_api.quiz_level_accommodations
    method: POST
    data_selector: successful
    params: {}
- name: Set Course-Level Accommodations
  endpoint:
    path: /new_quizzes/accommodation_api.course_level_accommodations
    method: POST
    data_selector: successful
    params: {}
- name: quiz_accommodations
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id/accommodations
    method: POST
    data_selector: responses
    params:
      course_id: required
      assignment_id: required
      user_id: required
      extra_time: ''
      extra_attempts: ''
      reduce_choices_enabled: ''
- name: course_accommodations
  endpoint:
    path: /api/quiz/v1/courses/:course_id/accommodations
    method: POST
    data_selector: responses
    params:
      course_id: required
      user_id: required
      extra_time: ''
      apply_to_in_progress_quiz_sessions: ''
      reduce_choices_enabled: ''
- name: create_quiz_report
  endpoint:
    path: /api/quiz/v1/courses/:course_id/quizzes/:assignment_id/reports
    method: POST
    data_selector: Progress
    params: {}
- name: notice_handlers
  endpoint:
    path: /api/lti/notice-handlers/:context_external_tool_id
    method: GET
    data_selector: notice_handlers
    params: {}
- name: set_notice_handler
  endpoint:
    path: /api/lti/notice-handlers/:context_external_tool_id
    method: POST
    data_selector: 'null'
    params: {}
- name: root_outcome_group_global
  endpoint:
    path: /api/v1/global/root_outcome_group
    method: GET
    data_selector: null
    params: {}
- name: root_outcome_group_account
  endpoint:
    path: /api/v1/accounts/:account_id/root_outcome_group
    method: GET
    data_selector: null
    params: {}
- name: root_outcome_group_course
  endpoint:
    path: /api/v1/courses/:course_id/root_outcome_group
    method: GET
    data_selector: null
    params: {}
- name: outcome_groups_account
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_groups
    method: GET
    data_selector: null
    params: {}
- name: outcome_groups_course
  endpoint:
    path: /api/v1/courses/:course_id/outcome_groups
    method: GET
    data_selector: null
    params: {}
- name: outcome_group_links_account
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_group_links
    method: GET
    data_selector: null
    params: {}
- name: outcome_group_links_course
  endpoint:
    path: /api/v1/courses/:course_id/outcome_group_links
    method: GET
    data_selector: null
    params: {}
- name: outcome_group_show_global
  endpoint:
    path: /api/v1/global/outcome_groups/:id
    method: GET
    data_selector: null
    params: {}
- name: outcome_group_show_account
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_groups/:id
    method: GET
    data_selector: null
    params: {}
- name: outcome_group_show_course
  endpoint:
    path: /api/v1/courses/:course_id/outcome_groups/:id
    method: GET
    data_selector: null
    params: {}
- name: outcome_group_update_global
  endpoint:
    path: /api/v1/global/outcome_groups/:id
    method: PUT
    data_selector: null
    params: {}
- name: outcome_group_update_account
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_groups/:id
    method: PUT
    data_selector: null
    params: {}
- name: outcome_group_update_course
  endpoint:
    path: /api/v1/courses/:course_id/outcome_groups/:id
    method: PUT
    data_selector: null
    params: {}
- name: outcome_group_destroy_global
  endpoint:
    path: /api/v1/global/outcome_groups/:id
    method: DELETE
    data_selector: null
    params: {}
- name: outcome_group_destroy_account
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_groups/:id
    method: DELETE
    data_selector: null
    params: {}
- name: outcome_group_destroy_course
  endpoint:
    path: /api/v1/courses/:course_id/outcome_groups/:id
    method: DELETE
    data_selector: null
    params: {}
- name: outcomes_group
  endpoint:
    path: /api/v1/global/outcome_groups/:id/outcomes
    method: GET
    data_selector: null
    params: {}
- name: outcomes_group_account
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_groups/:id/outcomes
    method: GET
    data_selector: null
    params: {}
- name: outcomes_group_course
  endpoint:
    path: /api/v1/courses/:course_id/outcome_groups/:id/outcomes
    method: GET
    data_selector: null
    params: {}
- name: link_outcome
  endpoint:
    path: /api/v1/global/outcome_groups/:id/outcomes
    method: POST
    data_selector: null
    params: {}
- name: unlink_outcome
  endpoint:
    path: /api/v1/global/outcome_groups/:id/outcomes/:outcome_id
    method: DELETE
    data_selector: null
    params: {}
- name: subgroups_group
  endpoint:
    path: /api/v1/global/outcome_groups/:id/subgroups
    method: GET
    data_selector: null
    params: {}
- name: create_subgroup
  endpoint:
    path: /api/v1/global/outcome_groups/:id/subgroups
    method: POST
    data_selector: null
    params: {}
- name: import_outcome_group
  endpoint:
    path: /api/v1/global/outcome_groups/:id/import
    method: POST
    data_selector: null
    params: {}
- name: notice_handler
  endpoint:
    path: /api/lti/notice-handlers/:context_external_tool_id
    method: PUT
    data_selector: NoticeHandler
    params:
      notice_type: LtiHelloWorldNotice
      handler: ''
- name: import_outcome_group
  endpoint:
    path: /api/v1/courses/:course_id/outcome_groups/:id/import
    method: POST
    params:
      source_outcome_group_id: integer
      async: boolean
- name: list_preferences
  endpoint:
    path: /api/v1/users/:user_id/communication_channels/:communication_channel_id/notification_preferences
    method: GET
- name: list_preference_categories
  endpoint:
    path: /api/v1/users/:user_id/communication_channels/:communication_channel_id/notification_preference_categories
    method: GET
- name: get_a_preference
  endpoint:
    path: /api/v1/users/:user_id/communication_channels/:communication_channel_id/notification_preferences/:notification
    method: GET
- name: update_a_preference
  endpoint:
    path: /api/v1/users/self/communication_channels/:communication_channel_id/notification_preferences/:notification
    method: PUT
- name: import_outcomes
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_imports(/group/:learning_outcome_group_id)
    method: POST
- name: get_outcome_import_status
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_imports/:id
    method: GET
- name: get_created_group_ids
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_imports/:id/created_group_ids
    method: GET
- name: outcome_import
  endpoint:
    path: /api/v1/courses/:course_id/outcome_imports
    method: POST
    data_selector: OutcomeImport
    params:
      import_type: instructure_csv
      attachment: required
- name: outcome_import_status
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_imports/:id
    method: GET
    data_selector: OutcomeImport
    params: {}
- name: created_group_ids
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_imports/:id/created_group_ids
    method: GET
    data_selector: OutcomeImport
    params: {}
- name: outcome_results
  endpoint:
    path: /outcome_results
    method: GET
- name: create_originality_report
  endpoint:
    path: /lti/originality_reports_api.create
    method: POST
- name: edit_originality_report
  endpoint:
    path: /lti/originality_reports_api.update
    method: PUT
- name: show_originality_report
  endpoint:
    path: /lti/originality_reports_api.show
    method: GET
- name: outcome_results
  endpoint:
    path: /api/v1/courses/:course_id/outcome_results
    method: GET
    data_selector: outcome_results
- name: outcome_rollups
  endpoint:
    path: /api/v1/courses/:course_id/outcome_rollups
    method: GET
    data_selector: rollups
- name: enqueue_outcome_rollup_calculation
  endpoint:
    path: /api/v1/enqueue_outcome_rollup_calculation
    method: POST
- name: outcome
  endpoint:
    path: /api/v1/outcomes/:id
    method: GET
    data_selector: outcomes
    params:
      add_defaults: boolean
- name: outcome_group
  endpoint:
    path: /api/v1/accounts/{account_id}/outcome_groups/{outcome_group_id}
    method: GET
    data_selector: outcome_group
    params: {}
- name: outcome
  endpoint:
    path: /api/v1/outcomes/:id
    method: PUT
    data_selector: Outcome
    params: {}
- name: outcome_alignments
  endpoint:
    path: /api/v1/courses/:course_id/outcome_alignments
    method: GET
    data_selector: OutcomeAlignment
    params: {}
- name: pages
  endpoint:
    path: /api/v1/courses/:course_id/pages
    method: GET
    data_selector: pages
- name: root_outcome_group
  endpoint:
    path: /api/v1/global/root_outcome_group
    method: GET
    data_selector: ''
    params: {}
- name: account_root_outcome_group
  endpoint:
    path: /api/v1/accounts/:account_id/root_outcome_group
    method: GET
    data_selector: ''
    params: {}
- name: course_root_outcome_group
  endpoint:
    path: /api/v1/courses/:course_id/root_outcome_group
    method: GET
    data_selector: ''
    params: {}
- name: outcome_groups
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_groups
    method: GET
    data_selector: ''
    params: {}
- name: course_outcome_groups
  endpoint:
    path: /api/v1/courses/:course_id/outcome_groups
    method: GET
    data_selector: ''
    params: {}
- name: outcome_group_links
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_group_links
    method: GET
    data_selector: ''
    params: {}
- name: course_outcome_group_links
  endpoint:
    path: /api/v1/courses/:course_id/outcome_group_links
    method: GET
    data_selector: ''
    params: {}
- name: outcome_group
  endpoint:
    path: /api/v1/global/outcome_groups/:id
    method: GET
    data_selector: ''
    params: {}
- name: account_outcome_group
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_groups/:id
    method: GET
    data_selector: ''
    params: {}
- name: course_outcome_group
  endpoint:
    path: /api/v1/courses/:course_id/outcome_groups/:id
    method: GET
    data_selector: ''
    params: {}
- name: subgroups
  endpoint:
    path: /api/v1/global/outcome_groups/:id/subgroups
    method: GET
    data_selector: ''
    params: {}
- name: account_subgroups
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_groups/:id/subgroups
    method: GET
    data_selector: ''
    params: {}
- name: course_subgroups
  endpoint:
    path: /api/v1/courses/:course_id/outcome_groups/:id/subgroups
    method: GET
    data_selector: ''
    params: {}
- name: front_page
  endpoint:
    path: /api/v1/courses/:course_id/front_page
    method: GET
- name: duplicate_page
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id/duplicate
    method: POST
- name: update_front_page
  endpoint:
    path: /api/v1/courses/:course_id/front_page
    method: PUT
- name: list_pages
  endpoint:
    path: /api/v1/courses/:course_id/pages
    method: GET
- name: create_page
  endpoint:
    path: /api/v1/courses/:course_id/pages
    method: POST
- name: show_page
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id
    method: GET
- name: update_page
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id
    method: PUT
- name: delete_page
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id
    method: DELETE
- name: list_revisions
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id/revisions
    method: GET
- name: show_revision
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id/revisions/latest
    method: GET
- name: revert_revision
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id/revisions/:revision_id
    method: POST
- name: outcome_group_import
  endpoint:
    path: /api/v1/courses/:course_id/outcome_groups/:id/import
    method: POST
    data_selector: OutcomeGroup
    params:
      source_outcome_group_id: '2'
      async: boolean
- name: outcome_imports
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_imports
    method: POST
    data_selector: null
    params: {}
- name: peer_reviews
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/peer_reviews
    method: GET
    data_selector: PeerReview
    params:
      include[]: submission_comments, user
- name: peer_reviews_for_submission
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/submissions/:submission_id/peer_reviews
    method: GET
    data_selector: PeerReview
    params:
      include[]: submission_comments, user
- name: outcome_imports
  endpoint:
    path: /api/v1/courses/:course_id/outcome_imports
    method: POST
    data_selector: OutcomeImport
    params:
      import_type: instructure_csv
      attachment: required
- name: outcome_import_status
  endpoint:
    path: /api/v1/courses/:course_id/outcome_imports/:id
    method: GET
    data_selector: OutcomeImport
    params: {}
- name: created_group_ids
  endpoint:
    path: /api/v1/courses/:course_id/outcome_imports/:id/created_group_ids
    method: GET
    data_selector: group_ids
    params: {}
- name: create_peer_review
  endpoint:
    path: /api/v1/sections/:section_id/assignments/:assignment_id/submissions/:submission_id/peer_reviews
    method: POST
    data_selector: PeerReview
    params:
      user_id: required
- name: delete_peer_review
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:submission_id/peer_reviews
    method: DELETE
    data_selector: PeerReview
    params:
      user_id: required
- name: delete_peer_review_section
  endpoint:
    path: /api/v1/sections/:section_id/assignments/:assignment_id/submissions/:submission_id/peer_reviews
    method: DELETE
    data_selector: PeerReview
    params:
      user_id: required
- name: outcome_results
  endpoint:
    path: /outcome_results
    method: GET
    data_selector: results
- name: outcome_rollups
  endpoint:
    path: /outcome_rollups
    method: GET
    data_selector: rollups
- name: outcome_order
  endpoint:
    path: /outcome_order
    method: POST
    data_selector: order
- name: enqueue_outcome_rollup_calculation
  endpoint:
    path: /enqueue_outcome_rollup_calculation
    method: POST
    data_selector: enqueue
- name: planner_items
  endpoint:
    path: /planner/items
    method: GET
- name: planner_notes
  endpoint:
    path: /planner/notes
    method: GET
- name: planner_overrides
  endpoint:
    path: /planner/overrides
    method: GET
- name: planner_items
  endpoint:
    path: /api/v1/planner/items
    method: GET
    data_selector: items
    params: {}
- name: planner_notes
  endpoint:
    path: /api/v1/planner_notes
    method: GET
    data_selector: notes
    params: {}
- name: planner_overrides
  endpoint:
    path: /api/v1/planner/overrides
    method: GET
    data_selector: overrides
    params: {}
- name: outcome_results
  endpoint:
    path: /api/v1/courses/:course_id/outcome_results
    method: GET
    data_selector: outcome_results
    params: {}
- name: outcome_rollups
  endpoint:
    path: /api/v1/courses/:course_id/outcome_rollups
    method: GET
    data_selector: rollups
    params: {}
- name: poll_sessions
  endpoint:
    path: /polls/:poll_id/poll_sessions
    method: GET
    data_selector: poll_sessions
- name: poll_session_results
  endpoint:
    path: /polls/:poll_id/poll_sessions/:id
    method: GET
    data_selector: poll_sessions
- name: outcome
  endpoint:
    path: /outcomes/:id
    method: GET
    data_selector: outcome
- name: outcome_alignment
  endpoint:
    path: /outcomes/:id/alignments
    method: GET
    data_selector: alignments
- name: outcome
  endpoint:
    path: /api/v1/outcomes/:id
    method: PUT
    data_selector: Outcome
    params: {}
- name: outcome_alignments
  endpoint:
    path: /api/v1/courses/:course_id/outcome_alignments
    method: GET
    data_selector: OutcomeAlignment
    params: {}
- name: opened_poll_sessions
  endpoint:
    path: /api/v1/poll_sessions/opened
    method: GET
    data_selector: poll_sessions
- name: closed_poll_sessions
  endpoint:
    path: /api/v1/poll_sessions/closed
    method: GET
    data_selector: poll_sessions
- name: create_poll_session
  endpoint:
    path: /api/v1/polls/:poll_id/poll_sessions
    method: POST
    data_selector: poll_sessions
- name: update_poll_session
  endpoint:
    path: /api/v1/polls/:poll_id/poll_sessions/:id
    method: PUT
    data_selector: poll_sessions
- name: delete_poll_session
  endpoint:
    path: /api/v1/polls/:poll_id/poll_sessions/:id
    method: DELETE
- name: open_poll_session
  endpoint:
    path: /api/v1/polls/:poll_id/poll_sessions/:id/open
    method: GET
- name: close_poll_session
  endpoint:
    path: /api/v1/polls/:poll_id/poll_sessions/:id/close
    method: GET
- name: pages
  endpoint:
    path: /api/v1/courses/:course_id/pages
    method: GET
    data_selector: pages
- name: poll_choices
  endpoint:
    path: /api/v1/polls/:poll_id/poll_choices
    method: GET
    data_selector: poll_choices
- name: single_poll_choice
  endpoint:
    path: /api/v1/polls/:poll_id/poll_choices/:id
    method: GET
    data_selector: poll_choices
- name: create_poll_choice
  endpoint:
    path: /api/v1/polls/:poll_id/poll_choices
    method: POST
    data_selector: poll_choices
- name: update_poll_choice
  endpoint:
    path: /api/v1/polls/:poll_id/poll_choices/:id
    method: PUT
    data_selector: poll_choices
- name: delete_poll_choice
  endpoint:
    path: /api/v1/polls/:poll_id/poll_choices/:id
    method: DELETE
    data_selector: poll_choices
- name: polls
  endpoint:
    path: /polls
    method: GET
    data_selector: polls
- name: front_page
  endpoint:
    path: /api/v1/courses/:course_id/front_page
    method: GET
- name: duplicate_page
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id/duplicate
    method: POST
- name: update_front_page
  endpoint:
    path: /api/v1/courses/:course_id/front_page
    method: PUT
- name: list_pages
  endpoint:
    path: /api/v1/courses/:course_id/pages
    method: GET
- name: create_page
  endpoint:
    path: /api/v1/courses/:course_id/pages
    method: POST
- name: show_page
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id
    method: GET
- name: update_page
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id
    method: PUT
- name: delete_page
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id
    method: DELETE
- name: list_revisions
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id/revisions
    method: GET
- name: show_revision
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id/revisions/latest
    method: GET
- name: revert_to_revision
  endpoint:
    path: /api/v1/courses/:course_id/pages/:url_or_id/revisions/:revision_id
    method: POST
- name: poll
  endpoint:
    path: /api/v1/polls/:id
    method: DELETE
- name: poll_submission
  endpoint:
    path: /api/v1/polls/:poll_id/poll_sessions/:poll_session_id/poll_submissions/:id
    method: GET
    data_selector: poll_submissions
- name: create_poll_submission
  endpoint:
    path: /api/v1/polls/:poll_id/poll_sessions/:poll_session_id/poll_submissions
    method: POST
    data_selector: poll_submissions
- name: peer_reviews
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/peer_reviews
    method: GET
    data_selector: PeerReview
    params:
      include[]: submission_comments,user
- name: peer_reviews_submission
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/submissions/:submission_id/peer_reviews
    method: GET
    data_selector: PeerReview
    params:
      include[]: submission_comments,user
- name: outcome_proficiency
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_proficiency
    method: POST
    data_selector: ratings
    params: {}
- name: course_outcome_proficiency
  endpoint:
    path: /api/v1/courses/:course_id/outcome_proficiency
    method: POST
    data_selector: ratings
    params: {}
- name: create_peer_review
  endpoint:
    path: /api/v1/sections/:section_id/assignments/:assignment_id/submissions/:submission_id/peer_reviews
    method: POST
    data_selector: PeerReview
    params:
      user_id: required
- name: delete_peer_review
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:submission_id/peer_reviews
    method: DELETE
    data_selector: PeerReview
    params:
      user_id: required
- name: delete_peer_review_section
  endpoint:
    path: /api/v1/sections/:section_id/assignments/:assignment_id/submissions/:submission_id/peer_reviews
    method: DELETE
    data_selector: PeerReview
    params:
      user_id: required
- name: outcome_proficiency_account
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_proficiency
    method: GET
- name: outcome_proficiency_course
  endpoint:
    path: /api/v1/courses/:course_id/outcome_proficiency
    method: GET
- name: planner_items
  endpoint:
    path: /planner/items
    method: GET
- name: planner_notes
  endpoint:
    path: /planner/notes
    method: GET
- name: planner_overrides
  endpoint:
    path: /planner/overrides
    method: GET
- name: progress
  endpoint:
    path: /api/v1/progress/:id
    method: GET
    data_selector: Progress
- name: cancel_progress
  endpoint:
    path: /api/v1/progress/:id/cancel
    method: POST
    data_selector: Progress
- name: lti_progress
  endpoint:
    path: /api/lti/courses/:course_id/progress/:id
    method: GET
    data_selector: Progress
- name: planner_items
  endpoint:
    path: /api/v1/planner/items
    method: GET
    data_selector: items
- name: planner_notes
  endpoint:
    path: /api/v1/planner_notes
    method: GET
    data_selector: notes
- name: planner_overrides
  endpoint:
    path: /api/v1/planner/overrides
    method: GET
    data_selector: overrides
- name: Update Public JWK
  endpoint:
    path: /api/lti/developer_key/update_public_jwk
    method: PUT
    data_selector: DeveloperKey
    params:
      public_jwk: Required
- name: poll_sessions
  endpoint:
    path: /polls/:poll_id/poll_sessions
    method: GET
    data_selector: poll_sessions
- name: poll_session_results
  endpoint:
    path: /polls/:poll_id/poll_sessions/:id
    method: GET
    data_selector: poll_sessions
- name: quiz_assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/assignment_overrides
    method: GET
    data_selector: quiz_assignment_overrides
    params: {}
- name: quiz_assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/new_quizzes/assignment_overrides
    method: GET
    data_selector: quiz_assignment_overrides
- name: quiz_extension
  endpoint:
    path: /quizzes/quiz_extensions
    method: POST
    data_selector: quiz_extension
- name: quiz_extensions
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/extensions
    method: POST
    data_selector: quiz_extensions
- name: poll_sessions_opened
  endpoint:
    path: /poll_sessions/opened
    method: GET
    data_selector: poll_sessions
- name: poll_sessions_closed
  endpoint:
    path: /poll_sessions/closed
    method: GET
    data_selector: poll_sessions
- name: create_poll_session
  endpoint:
    path: /polls/:poll_id/poll_sessions
    method: POST
    data_selector: poll_sessions
- name: update_poll_session
  endpoint:
    path: /polls/:poll_id/poll_sessions/:id
    method: PUT
    data_selector: poll_sessions
- name: delete_poll_session
  endpoint:
    path: /polls/:poll_id/poll_sessions/:id
    method: DELETE
- name: open_poll_session
  endpoint:
    path: /polls/:poll_id/poll_sessions/:id/open
    method: GET
- name: close_poll_session
  endpoint:
    path: /polls/:poll_id/poll_sessions/:id/close
    method: GET
- name: quiz_ip_filters
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/ip_filters
    method: GET
    data_selector: quiz_ip_filters
- name: poll_choices
  endpoint:
    path: /polls/:poll_id/poll_choices
    method: GET
    data_selector: poll_choices
- name: poll_choice
  endpoint:
    path: /polls/:poll_id/poll_choices/:id
    method: GET
    data_selector: poll_choices
- name: create_poll_choice
  endpoint:
    path: /polls/:poll_id/poll_choices
    method: POST
    data_selector: poll_choices
- name: update_poll_choice
  endpoint:
    path: /polls/:poll_id/poll_choices
    method: PUT
    data_selector: poll_choices
- name: delete_poll_choice
  endpoint:
    path: /polls/:poll_id/poll_choices/:id
    method: DELETE
    data_selector: poll_choices
- name: quiz_group
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/groups/:id
    method: GET
- name: create_quiz_group
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/groups
    method: POST
- name: update_quiz_group
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/groups/:id
    method: PUT
- name: delete_quiz_group
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/groups/:id
    method: DELETE
- name: reorder_quiz_groups
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/groups/reorder
    method: POST
- name: poll_choice
  endpoint:
    path: /polls/:poll_id/poll_choices/:id
    method: PUT
    data_selector: poll_choices
    params: {}
- name: poll_choice_delete
  endpoint:
    path: /polls/:poll_id/poll_choices/:id
    method: DELETE
    data_selector: ''
    params: {}
- name: polls
  endpoint:
    path: /api/v1/polls
    method: GET
    data_selector: polls
- name: update_question_group
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/groups/:id
    method: PUT
    data_selector: quiz_groups
- name: delete_question_group
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/groups/:id
    method: DELETE
- name: reorder_question_groups
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/groups/:id/reorder
    method: POST
- name: poll
  endpoint:
    path: /api/v1/polls/:id
    method: DELETE
- name: quiz_questions
  endpoint:
    path: /quizzes/quiz_questions
    method: GET
- name: poll_submission
  endpoint:
    path: /polls/:poll_id/poll_sessions/:poll_session_id/poll_submissions/:id
    method: GET
    data_selector: poll_submissions
- name: create_poll_submission
  endpoint:
    path: /polls/:poll_id/poll_sessions/:poll_session_id/poll_submissions
    method: POST
    data_selector: poll_submissions
- name: outcome_proficiency
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_proficiency
    method: POST
    data_selector: ratings
    params: {}
- name: course_outcome_proficiency
  endpoint:
    path: /api/v1/courses/:course_id/outcome_proficiency
    method: POST
    data_selector: ratings
    params: {}
- name: quiz_questions
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/questions
    method: GET
    data_selector: QuizQuestion
    params: {}
- name: single_quiz_question
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/questions/:id
    method: GET
    data_selector: QuizQuestion
    params: {}
- name: create_quiz_question
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/questions
    method: POST
    data_selector: QuizQuestion
    params: {}
- name: update_quiz_question
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/questions/:id
    method: PUT
    data_selector: QuizQuestion
    params: {}
- name: delete_quiz_question
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/questions/:id
    method: DELETE
    data_selector: null
    params: {}
- name: account_outcome_proficiency
  endpoint:
    path: /api/v1/accounts/:account_id/outcome_proficiency
    method: GET
- name: course_outcome_proficiency
  endpoint:
    path: /api/v1/courses/:course_id/outcome_proficiency
    method: GET
- name: quiz_reports
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/reports
    method: GET
    data_selector: QuizReport
- name: progress
  endpoint:
    path: /progress/:id
    method: GET
- name: cancel_progress
  endpoint:
    path: /progress/:id/cancel
    method: POST
- name: update_public_jwk
  endpoint:
    path: /api/lti/developer_key/update_public_jwk
    method: PUT
    data_selector: DeveloperKey
- name: quiz_statistics
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/statistics
    method: GET
    data_selector: quiz_statistics
- name: quiz_assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/assignment_overrides
    method: GET
    data_selector: quiz_assignment_overrides
- name: quiz_statistics
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/statistics
    method: GET
    data_selector: quiz_statistics
- name: quiz_assignment_overrides
  endpoint:
    path: /courses/:course_id/new_quizzes/assignment_overrides
    method: GET
    data_selector: quiz_assignment_overrides
- name: quiz_extensions
  endpoint:
    path: /quizzes/quiz_extensions
    method: POST
    data_selector: quiz_extensions
- name: quiz_submission_events
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/submissions/:id/events
    method: POST
    data_selector: quiz_submission_events
- name: retrieve_quiz_submission_events
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/submissions/:id/events
    method: GET
    data_selector: quiz_submission_events
- name: quiz_extensions
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/extensions
    method: POST
    data_selector: quiz_extensions
- name: quiz_submission_events
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions/:id/events
    method: GET
    data_selector: quiz_submission_events
    params:
      attempt: latest
- name: quiz_ip_filters
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/ip_filters
    method: GET
    data_selector: quiz_ip_filters
- name: upload_quiz_submission_file
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions/self/files
    method: POST
    data_selector: attachments
- name: quiz_submission_questions
  endpoint:
    path: /quiz_submissions/:quiz_submission_id/questions
    method: GET
    data_selector: quiz_submission_questions
- name: quiz_group
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/groups/:id
    method: GET
    data_selector: QuizGroup
- name: create_quiz_group
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/groups
    method: POST
    data_selector: quiz_groups
    params: {}
- name: quiz_submission_questions
  endpoint:
    path: /api/v1/quiz_submissions/:quiz_submission_id/questions
    method: POST
    data_selector: quiz_questions
    params:
      attempt: integer
      validation_token: string
      access_code: string
- name: formatted_answer
  endpoint:
    path: /api/v1/quiz_submissions/:quiz_submission_id/questions/:id/formatted_answer
    method: GET
    data_selector: formatted_answer
    params:
      answer: Numeric
- name: flag_question
  endpoint:
    path: /api/v1/quiz_submissions/:quiz_submission_id/questions/:id/flag
    method: PUT
    data_selector: {}
    params:
      attempt: integer
      validation_token: string
      access_code: string
- name: unflag_question
  endpoint:
    path: /api/v1/quiz_submissions/:quiz_submission_id/questions/:id/unflag
    method: PUT
    data_selector: {}
    params:
      attempt: integer
      validation_token: string
      access_code: string
- name: submission_users
  endpoint:
    path: /courses/:course_id/quizzes/:id/submission_users
    method: POST
    data_selector: users
    params: {}
- name: quiz_questions
  endpoint:
    path: /quizzes/quiz_questions
    method: GET
    data_selector: null
    params: {}
- name: quiz_submissions
  endpoint:
    path: /quizzes/quiz_submissions
    method: GET
    data_selector: quiz_submissions
    params: {}
- name: quiz_submission
  endpoint:
    path: /quizzes/quiz_submissions/{id}
    method: GET
    data_selector: quiz_submission
    params: {}
- name: create_quiz_submission
  endpoint:
    path: /quizzes/{quiz_id}/submissions
    method: POST
    data_selector: quiz_submission
    params: {}
- name: update_quiz_submission
  endpoint:
    path: /quizzes/quiz_submissions/{id}
    method: PUT
    data_selector: quiz_submission
    params: {}
- name: complete_quiz_submission
  endpoint:
    path: /quizzes/quiz_submissions/{id}/complete
    method: POST
    data_selector: quiz_submission
    params: {}
- name: quiz_submission_time
  endpoint:
    path: /quizzes/quiz_submissions/{id}/time
    method: GET
    data_selector: quiz_submission_time
    params: {}
- name: quiz_questions
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/questions
    method: GET
    data_selector: QuizQuestion
    params: {}
- name: single_quiz_question
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/questions/:id
    method: GET
    data_selector: QuizQuestion
    params: {}
- name: create_quiz_question
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/questions
    method: POST
    data_selector: QuizQuestion
    params: {}
- name: update_quiz_question
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/questions/:id
    method: PUT
    data_selector: QuizQuestion
    params: {}
- name: delete_quiz_question
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/questions/:id
    method: DELETE
    data_selector: 204 No Content
    params: {}
- name: quiz_reports
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/reports
    method: GET
    data_selector: QuizReport
    params:
      includes_all_versions: 'false'
- name: quiz_submissions
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions
    method: GET
    data_selector: quiz_submissions
    params: {}
- name: quiz_submission
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submission
    method: GET
    data_selector: quiz_submissions
    params: {}
- name: single_quiz_submission
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions/:id
    method: GET
    data_selector: quiz_submissions
    params: {}
- name: create_quiz_submission
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions
    method: POST
    data_selector: quiz_submissions
    params: {}
- name: update_quiz_submission
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions/:id
    method: PUT
    data_selector: quiz_submissions
    params: {}
- name: complete_quiz_submission
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions/:id/complete
    method: POST
    data_selector: quiz_submissions
    params: {}
- name: current_quiz_submission_times
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions/:id/time
    method: GET
    data_selector: end_at, time_left
    params: {}
- name: quizzes
  endpoint:
    path: /api/v1/courses/:course_id/quizzes
    method: GET
- name: quiz_statistics
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/statistics
    method: GET
    data_selector: quiz_statistics
- name: quiz_statistics
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/statistics
    method: GET
    data_selector: quiz_statistics
    params:
      all_versions: boolean
- name: quizzes
  endpoint:
    path: /api/v1/courses/:course_id/quizzes
    method: GET
    data_selector: quizzes
    params: {}
- name: single_quiz
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:id
    method: GET
    data_selector: quiz
    params: {}
- name: create_quiz
  endpoint:
    path: /api/v1/courses/:course_id/quizzes
    method: POST
    data_selector: quiz
    params: {}
- name: edit_quiz
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:id
    method: PUT
    data_selector: quiz
    params: {}
- name: delete_quiz
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:id
    method: DELETE
    data_selector: quiz
    params: {}
- name: quiz_submission_events
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/submissions/:id/events
    method: POST
    data_selector: quiz_submission_events
    params: {}
- name: results
  endpoint:
    path: /courses/:course_id/line_items/:line_item_id/results
    method: GET
- name: result
  endpoint:
    path: /courses/:course_id/line_items/:line_item_id/results/:id
    method: GET
- name: quiz_submission_events
  endpoint:
    path: /courses/:course_id/quizzes/:quiz_id/submissions/:id/events
    method: GET
    data_selector: quiz_submission_events
    params:
      attempt: latest
- name: role_permissions
  endpoint:
    path: /roles/permissions
    method: GET
    data_selector: permissions
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
- name: upload_file
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions/self/files
    method: POST
    data_selector: attachments
    params: {}
- name: quiz_submission_questions
  endpoint:
    path: /quiz_submissions/:quiz_submission_id/questions
    method: GET
    data_selector: quiz_submission_questions
    params: {}
- name: quiz_submission_questions
  endpoint:
    path: /api/v1/quiz_submissions/:quiz_submission_id/questions
    method: POST
    data_selector: ''
    params: {}
- name: formatted_answer
  endpoint:
    path: /api/v1/quiz_submissions/:quiz_submission_id/questions/:id/formatted_answer
    method: GET
    data_selector: ''
    params: {}
- name: flag_question
  endpoint:
    path: /api/v1/quiz_submissions/:quiz_submission_id/questions/:id/flag
    method: PUT
    data_selector: ''
    params: {}
- name: unflag_question
  endpoint:
    path: /api/v1/quiz_submissions/:quiz_submission_id/questions/:id/unflag
    method: PUT
    data_selector: ''
    params: {}
- name: list_roles
  endpoint:
    path: /api/v1/accounts/:account_id/roles
    method: GET
    data_selector: roles
    params:
      account_id: required
      state[]: ''
      show_inherited: ''
- name: get_single_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles/:id
    method: GET
    data_selector: role
    params:
      account_id: required
      role_id: required
      role: ''
- name: create_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles
    method: POST
    data_selector: role
    params:
      label: required
      role: ''
      base_role_type: ''
      permissions: {}
- name: deactivate_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles/:id
    method: DELETE
    data_selector: role
    params:
      role_id: required
      role: ''
- name: activate_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles/:id/activate
    method: POST
    data_selector: role
    params:
      role_id: required
      role: ''
- name: update_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles/:id
    method: PUT
    data_selector: role
    params:
      label: ''
      permissions: {}
- name: list_assignable_permissions
  endpoint:
    path: /api/v1/accounts/:account_id/roles/permissions
    method: GET
    data_selector: permissions
    params:
      search_term: ''
- name: get_help_text_for_permissions
  endpoint:
    path: /api/v1/permissions/:context_type/:permission/help
    method: GET
    data_selector: help_text
    params: {}
- name: retrieve_permission_groups
  endpoint:
    path: /api/v1/permissions/groups
    method: GET
    data_selector: permission_groups
    params: {}
- name: quiz_submission_user_list
  endpoint:
    path: /courses/:course_id/quizzes/:id/submission_users
    method: POST
    data_selector: users
- name: rubric
  endpoint:
    path: /rubrics
    method: GET
    data_selector: rubrics
- name: rubric_assessment
  endpoint:
    path: /rubric_assessments
    method: GET
    data_selector: rubric_assessments
- name: rubric_association
  endpoint:
    path: /rubric_associations
    method: GET
    data_selector: rubric_associations
- name: rubric
  endpoint:
    path: /api/v1/courses/:course_id/rubrics
    method: POST
    data_selector: rubric
    params: {}
- name: rubric_association
  endpoint:
    path: /api/v1/courses/:course_id/rubric_associations
    method: POST
    data_selector: rubric_association
    params: {}
- name: quiz_submissions
  endpoint:
    path: /quizzes/quiz_submissions
    method: GET
    data_selector: quiz_submissions
    params: {}
- name: quiz_submission
  endpoint:
    path: /quizzes/quiz_submissions/{id}
    method: GET
    data_selector: quiz_submission
    params: {}
- name: create_quiz_submission
  endpoint:
    path: /quizzes/quiz_submissions
    method: POST
    data_selector: quiz_submission
    params: {}
- name: update_quiz_submission
  endpoint:
    path: /quizzes/quiz_submissions/{id}
    method: PATCH
    data_selector: quiz_submission
    params: {}
- name: complete_quiz_submission
  endpoint:
    path: /quizzes/quiz_submissions/{id}/complete
    method: POST
    data_selector: quiz_submission
    params: {}
- name: UUID Mapping
  endpoint:
    path: /api/lti/uuid_map
    method: GET
    data_selector: CSV
- name: Score
  endpoint:
    path: /lti/ims/scores.create
    method: POST
- name: scores
  endpoint:
    path: /api/lti/courses/:course_id/line_items/:line_item_id/scores
    method: POST
    data_selector: resultUrl
- name: quiz_submissions
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions
    method: GET
    data_selector: quiz_submissions
    params: {}
- name: quiz_submission
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submission
    method: GET
    data_selector: quiz_submissions
    params: {}
- name: single_quiz_submission
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions/:id
    method: GET
    data_selector: quiz_submissions
    params: {}
- name: create_quiz_submission
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions
    method: POST
    data_selector: quiz_submissions
    params: {}
- name: update_quiz_submission
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions/:id
    method: PUT
    data_selector: quiz_submissions
    params: {}
- name: complete_quiz_submission
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions/:id/complete
    method: POST
    data_selector: quiz_submissions
    params: {}
- name: current_quiz_submission_times
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:quiz_id/submissions/:id/time
    method: GET
    data_selector: null
    params: {}
- name: quizzes
  endpoint:
    path: /api/v1/courses/:course_id/quizzes
    method: GET
- name: find_recipients
  endpoint:
    path: /api/v1/search/recipients
    method: GET
- name: all_courses
  endpoint:
    path: /api/v1/search/all_courses
    method: GET
- name: sections
  endpoint:
    path: /api/v1/courses/:course_id/sections
    method: GET
    data_selector: sections
- name: quizzes
  endpoint:
    path: /api/v1/courses/:course_id/quizzes
    method: GET
- name: single_quiz
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:id
    method: GET
- name: create_quiz
  endpoint:
    path: /api/v1/courses/:course_id/quizzes
    method: POST
- name: edit_quiz
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:id
    method: PUT
- name: delete_quiz
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:id
    method: DELETE
- name: reorder_quiz_items
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:id/reorder
    method: POST
- name: validate_access_code
  endpoint:
    path: /api/v1/courses/:course_id/quizzes/:id/validate_access_code
    method: POST
- name: sections
  endpoint:
    path: /api/v1/sections/:id
    method: GET
    data_selector: Section
- name: create_section
  endpoint:
    path: /api/v1/courses/:course_id/sections
    method: POST
    data_selector: Section
- name: crosslist_section
  endpoint:
    path: /api/v1/sections/:id/crosslist/:new_course_id
    method: POST
    data_selector: Section
- name: uncrosslist_section
  endpoint:
    path: /api/v1/sections/:id/crosslist
    method: DELETE
    data_selector: Section
- name: update_section
  endpoint:
    path: /api/v1/sections/:id
    method: PUT
    data_selector: Section
- name: delete_section
  endpoint:
    path: /api/v1/sections/:id
    method: DELETE
    data_selector: Section
- name: results
  endpoint:
    path: /courses/:course_id/line_items/:line_item_id/results
    method: GET
- name: result
  endpoint:
    path: /courses/:course_id/line_items/:line_item_id/results/:id
    method: GET
- name: kaltura_config
  endpoint:
    path: /api/v1/services/kaltura
    method: GET
    data_selector: enabled
    params: {}
- name: kaltura_session
  endpoint:
    path: /api/v1/services/kaltura_session
    method: POST
    data_selector: ks
    params: {}
- name: role_permissions
  endpoint:
    path: /roles/permissions
    method: GET
    data_selector: permissions
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
- name: shared_brand_config
  endpoint:
    path: /api/v1/accounts/:account_id/shared_brand_configs
    method: POST
    data_selector: SharedBrandConfig
    params: {}
- name: shared_brand_config
  endpoint:
    path: /api/v1/accounts/:account_id/shared_brand_configs/:id
    method: PUT
    data_selector: SharedBrandConfig
- name: shared_brand_config_destroy
  endpoint:
    path: /api/v1/shared_brand_configs/:id
    method: DELETE
    data_selector: SharedBrandConfig
- name: sis_import_errors
  endpoint:
    path: /api/v1/accounts/:account_id/sis_import_errors
    method: GET
    data_selector: SisImportError
- name: sis_import_error_list
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/:id/errors
    method: GET
    data_selector: SisImportError
- name: list_roles
  endpoint:
    path: /api/v1/accounts/:account_id/roles
    method: GET
    data_selector: roles
    params:
      account_id: required
- name: get_single_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles/:id
    method: GET
    data_selector: role
    params:
      account_id: required
      role_id: required
- name: create_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles
    method: POST
    data_selector: role
    params:
      account_id: required
      label: required
- name: deactivate_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles/:id
    method: DELETE
    data_selector: role
    params:
      role_id: required
- name: activate_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles/:id/activate
    method: POST
    data_selector: role
    params:
      role_id: required
- name: update_role
  endpoint:
    path: /api/v1/accounts/:account_id/roles/:id
    method: PUT
    data_selector: role
    params:
      role_id: required
- name: list_assignable_permissions
  endpoint:
    path: /api/v1/accounts/:account_id/roles/permissions
    method: GET
    data_selector: permissions
    params:
      account_id: required
- name: get_help_text_for_permissions
  endpoint:
    path: /api/v1/permissions/:context_type/:permission/help
    method: GET
    data_selector: help_text
    params: {}
- name: retrieve_permission_groups
  endpoint:
    path: /api/v1/permissions/groups
    method: GET
    data_selector: permission_groups
    params: {}
- name: rubrics
  endpoint:
    path: /rubrics
    method: GET
- name: rubric_assessments
  endpoint:
    path: /rubric_assessments
    method: GET
- name: rubric_associations
  endpoint:
    path: /rubric_associations
    method: GET
- name: sis_imports
  endpoint:
    path: /api/v1/sis_imports
    method: GET
- name: current_importing
  endpoint:
    path: /api/v1/sis_imports/importing
    method: GET
- name: import_sis_data
  endpoint:
    path: /api/v1/sis_imports
    method: POST
- name: sis_import_status
  endpoint:
    path: /api/v1/sis_imports/:id
    method: GET
- name: restore_workflow_states
  endpoint:
    path: /api/v1/sis_imports/restore_states
    method: POST
- name: abort_import
  endpoint:
    path: /api/v1/sis_imports/abort
    method: POST
- name: abort_all_pending_imports
  endpoint:
    path: /api/v1/sis_imports/abort_all_pending
    method: POST
- name: rubric
  endpoint:
    path: /api/v1/courses/:course_id/rubrics
    method: POST
    data_selector: rubric
    params: {}
- name: rubric_association
  endpoint:
    path: /api/v1/courses/:course_id/rubric_associations
    method: POST
    data_selector: rubric_association
    params: {}
- name: uuid_mapping
  endpoint:
    path: /api/lti/uuid_map
    method: GET
    data_selector: CSV
    params: {}
- name: sis_imports
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports
    method: GET
- name: current_importing_sis_import
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/importing
    method: GET
- name: import_sis_data
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports
    method: POST
- name: get_sis_import_status
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/:id
    method: GET
- name: restore_workflow_states
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/:id/restore_states
    method: PUT
- name: abort_sis_import
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/:id/abort
    method: PUT
- name: abort_all_pending_sis_imports
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/abort_all_pending
    method: PUT
- name: create_score
  endpoint:
    path: /lti/ims/scores.create
    method: POST
    data_selector: score
    params: {}
- name: assignments
  endpoint:
    path: /sis_assignments
    method: GET
- name: scores
  endpoint:
    path: /api/lti/courses/:course_id/line_items/:line_item_id/scores
    method: POST
    data_selector: resultUrl
    params: {}
- name: find_recipients
  endpoint:
    path: /api/v1/search/recipients
    method: GET
- name: list_all_courses
  endpoint:
    path: /api/v1/search/all_courses
    method: GET
- name: sections
  endpoint:
    path: /courses/:course_id/sections
    method: GET
    data_selector: sections
    params: {}
- name: assignments
  endpoint:
    path: /api/sis/accounts/:account_id/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: disable_post_to_sis
  endpoint:
    path: /api/sis/courses/:course_id/disable_post_to_sis
    method: PUT
    data_selector: response
    params: {}
- name: search_course_content
  endpoint:
    path: /courses/:course_id/smartsearch
    method: GET
    data_selector: SearchResult
    params:
      q: search_query
- name: kaltura_config
  endpoint:
    path: /api/v1/services/kaltura
    method: GET
    data_selector: enabled
    params: {}
- name: kaltura_session
  endpoint:
    path: /api/v1/services/kaltura_session
    method: POST
    data_selector: ks
    params: {}
- name: edit_submission_comment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/comments/:id
    method: PUT
    data_selector: SubmissionComment
- name: delete_submission_comment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/comments/:id
    method: DELETE
    data_selector: SubmissionComment
- name: upload_file
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/comments/files
    method: POST
    data_selector: ''
- name: submissions
  endpoint:
    path: /api/v1/submissions
    method: GET
- name: shared_brand_config
  endpoint:
    path: /api/v1/accounts/:account_id/shared_brand_configs
    method: POST
    data_selector: shared_brand_config
    params: {}
- name: shared_brand_config
  endpoint:
    path: /api/v1/accounts/:account_id/shared_brand_configs/:id
    method: PUT
    data_selector: SharedBrandConfig
- name: shared_brand_config_destroy
  endpoint:
    path: /api/v1/shared_brand_configs/:id
    method: DELETE
    data_selector: SharedBrandConfig
- name: submission
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions
    method: POST
    data_selector: submission
    params: {}
- name: submission_list
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions
    method: GET
    data_selector: submissions
    params: {}
- name: sis_import_errors
  endpoint:
    path: /api/v1/accounts/:account_id/sis_import_errors
    method: GET
    data_selector: SisImportError
- name: sis_import_errors_for_import
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/:id/errors
    method: GET
    data_selector: SisImportError
- name: submissions
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id
    method: PUT
    data_selector: submission
    params: {}
- name: gradeable_students
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/gradeable_students
    method: GET
    data_selector: students
    params: {}
- name: bulk_update_submissions
  endpoint:
    path: /api/v1/courses/:course_id/submissions/update_grades
    method: POST
    data_selector: progress
    params: {}
- name: SIS import list
  endpoint:
    path: /sis_imports
    method: GET
- name: current importing SIS import
  endpoint:
    path: /sis_imports/importing
    method: GET
- name: Import SIS data
  endpoint:
    path: /sis_imports
    method: POST
- name: SIS import status
  endpoint:
    path: /sis_imports/:id
    method: GET
- name: Restore workflow_states of SIS imported items
  endpoint:
    path: /sis_imports/restore_states
    method: POST
- name: Abort SIS import
  endpoint:
    path: /sis_imports/abort
    method: POST
- name: Abort all pending SIS imports
  endpoint:
    path: /sis_imports/abort_all_pending
    method: POST
- name: bulk_mark_read
  endpoint:
    path: /api/v1/sections/:section_id/submissions/bulk_mark_read
    method: PUT
    data_selector: ''
    params: {}
- name: mark_submission_item_as_read
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/read/:item
    method: PUT
    data_selector: ''
    params: {}
- name: clear_unread_submissions
  endpoint:
    path: /api/v1/courses/:course_id/submissions/:user_id/clear_unread
    method: PUT
    data_selector: ''
    params: {}
- name: rubric_assessments_read_state
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/rubric_assessments/read
    method: GET
    data_selector: ''
    params: {}
- name: document_annotations_read_state
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/document_annotations/read
    method: GET
    data_selector: ''
    params: {}
- name: submission_summary
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submission_summary
    method: GET
    data_selector: ''
    params: {}
- name: sis_imports
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports
    method: GET
- name: current_importing_sis_import
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/importing
    method: GET
- name: import_sis_data
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports
    method: POST
- name: sis_import_status
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/:id
    method: GET
- name: restore_sis_import_states
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/:id/restore_states
    method: PUT
- name: abort_sis_import
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/:id/abort
    method: PUT
- name: abort_all_pending_sis_imports
  endpoint:
    path: /api/v1/accounts/:account_id/sis_imports/abort_all_pending
    method: PUT
- name: tabs
  endpoint:
    path: /api/v1/accounts/:account_id/tabs
    method: GET
- name: course_tabs
  endpoint:
    path: /api/v1/courses/:course_id/tabs
    method: GET
- name: group_tabs
  endpoint:
    path: /api/v1/groups/:group_id/tabs
    method: GET
- name: user_tabs
  endpoint:
    path: /api/v1/users/:user_id/tabs
    method: GET
- name: assignments
  endpoint:
    path: /sis_api/sis_assignments
    method: GET
    data_selector: assignments
    params: {}
- name: disable_assignments
  endpoint:
    path: /disable_post_to_sis_api/disable_post_to_sis
    method: POST
    data_selector: results
    params: {}
- name: tabs
  endpoint:
    path: /api/v1/courses/:course_id/tabs/:tab_id
    method: PUT
    data_selector: tab
    params: {}
- name: assignments
  endpoint:
    path: /api/sis/accounts/:account_id/assignments
    method: GET
    data_selector: assignments
- name: disable_post_to_sis
  endpoint:
    path: /api/sis/courses/:course_id/disable_post_to_sis
    method: PUT
    data_selector: response
- name: search_course_content
  endpoint:
    path: /api/v1/courses/:course_id/smartsearch
    method: GET
    data_selector: SearchResult
    params:
      q: string
- name: temporary_enrollment_pairings
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings
    method: GET
    data_selector: TemporaryEnrollmentPairing
- name: single_temporary_enrollment_pairing
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings/:id
    method: GET
    data_selector: TemporaryEnrollmentPairing
- name: new_temporary_enrollment_pairing
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings/new
    method: GET
    data_selector: TemporaryEnrollmentPairing
- name: create_temporary_enrollment_pairing
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings
    method: POST
    data_selector: TemporaryEnrollmentPairing
- name: delete_temporary_enrollment_pairing
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings/:id
    method: DELETE
    data_selector: TemporaryEnrollmentPairing
- name: edit_submission_comment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/comments/:id
    method: PUT
    data_selector: SubmissionComment
- name: delete_submission_comment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/comments/:id
    method: DELETE
    data_selector: SubmissionComment
- name: upload_file
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/comments/files
    method: POST
    data_selector: attachment data
- name: temporary_enrollment_pairings
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings
    method: POST
    data_selector: TemporaryEnrollmentPairing
    params: {}
- name: delete_temporary_enrollment_pairing
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings/:id
    method: DELETE
    data_selector: TemporaryEnrollmentPairing
    params: {}
- name: submissions
  endpoint:
    path: /submissions
    method: GET
- name: observees
  endpoint:
    path: /api/v1/users/:user_id/observees
    method: GET
    data_selector: observees
    params:
      include[]: avatar_url
- name: submission_create
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/submissions
    method: POST
- name: submission_list
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/submissions
    method: GET
- name: submission_single
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/submissions/:user_id
    method: GET
- name: submission_upload_file
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/submissions/:user_id/files
    method: POST
- name: submission_update
  endpoint:
    path: /courses/:course_id/assignments/:assignment_id/submissions/:user_id
    method: PUT
- name: observers
  endpoint:
    path: /api/v1/users/:user_id/observers
    method: GET
    data_selector: observers
- name: observees
  endpoint:
    path: /api/v1/users/:user_id/observees
    method: POST
    data_selector: observee
- name: show_observee
  endpoint:
    path: /api/v1/users/:user_id/observees/:observee_id
    method: GET
    data_selector: observee
- name: show_observer
  endpoint:
    path: /api/v1/users/:user_id/observers/:observer_id
    method: GET
    data_selector: observer
- name: update_observee
  endpoint:
    path: /api/v1/users/:user_id/observees/:observee_id
    method: PUT
    data_selector: observee
- name: destroy_observee
  endpoint:
    path: /api/v1/users/:user_id/observees/:observee_id
    method: DELETE
    data_selector: observee
- name: create_observer_pairing_code
  endpoint:
    path: /api/v1/users/:user_id/observer_pairing_codes
    method: POST
    data_selector: pairing_code
- name: submissions
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id
    method: PUT
- name: gradeable_students
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/gradeable_students
    method: GET
- name: bulk_update_grades
  endpoint:
    path: /api/v1/courses/:course_id/submissions/update_grades
    method: POST
- name: mark_read
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/read
    method: PUT
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: users
  endpoint:
    path: /api/v1/accounts/:account_id/users
    method: GET
    data_selector: users
    params: {}
- name: activity_stream
  endpoint:
    path: /api/v1/users/self/activity_stream
    method: GET
    data_selector: activity_stream
    params: {}
- name: todo_items
  endpoint:
    path: /api/v1/users/self/todo
    method: GET
    data_selector: todo_items
    params: {}
- name: todo_item_count
  endpoint:
    path: /api/v1/users/self/todo_item_count
    method: GET
    data_selector: todo_item_count
    params: {}
- name: upcoming_events
  endpoint:
    path: /api/v1/users/self/upcoming_events
    method: GET
    data_selector: upcoming_events
    params: {}
- name: bulk_mark_read
  endpoint:
    path: /api/v1/sections/:section_id/submissions/bulk_mark_read
    method: PUT
    data_selector: null
    params:
      submissionIds[]: ''
- name: mark_submission_item_as_read
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/read/:item
    method: PUT
    data_selector: null
    params: {}
- name: clear_unread_status
  endpoint:
    path: /api/v1/courses/:course_id/submissions/:user_id/clear_unread
    method: PUT
    data_selector: null
    params: {}
- name: rubric_assessments_read_state
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/rubric_assessments/read
    method: GET
    data_selector: null
    params: {}
- name: document_annotations_read_state
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submissions/:user_id/document_annotations/read
    method: GET
    data_selector: null
    params: {}
- name: submission_summary
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/submission_summary
    method: GET
    data_selector: null
    params:
      grouped: ''
      include_deactivated: ''
- name: tabs_for_account
  endpoint:
    path: /api/v1/accounts/:account_id/tabs
    method: GET
- name: tabs_for_course
  endpoint:
    path: /api/v1/courses/:course_id/tabs
    method: GET
- name: tabs_for_group
  endpoint:
    path: /api/v1/groups/:group_id/tabs
    method: GET
- name: tabs_for_user
  endpoint:
    path: /api/v1/users/:user_id/tabs
    method: GET
- name: tabs
  endpoint:
    path: /api/v1/courses/:course_id/tabs/:tab_id
    method: PUT
    data_selector: tab
    params: {}
- name: upcoming_events
  endpoint:
    path: /api/v1/users/self/upcoming_events
    method: GET
    data_selector: events
- name: missing_submissions
  endpoint:
    path: /api/v1/users/:user_id/missing_submissions
    method: GET
    data_selector: submissions
- name: activity_stream_item
  endpoint:
    path: /api/v1/users/self/activity_stream/:id
    method: DELETE
    data_selector: hidden
- name: activity_stream
  endpoint:
    path: /api/v1/users/self/activity_stream
    method: DELETE
    data_selector: hidden
- name: upload_file
  endpoint:
    path: /api/v1/users/:user_id/files
    method: POST
- name: user_details
  endpoint:
    path: /api/v1/users/:id
    method: GET
    data_selector: user
- name: create_user
  endpoint:
    path: /api/v1/accounts/:account_id/users
    method: POST
- name: self_register_user
  endpoint:
    path: /api/v1/accounts/:account_id/self_registration
    method: POST
- name: update_user_settings
  endpoint:
    path: /api/v1/users/:id/settings
    method: PUT
- name: get_custom_colors
  endpoint:
    path: /api/v1/users/:id/colors
    method: GET
- name: get_custom_color
  endpoint:
    path: /api/v1/users/:id/colors/:asset_string
    method: GET
- name: set_custom_color
  endpoint:
    path: /api/v1/users/:id/colors/:asset_string
    method: PUT
- name: temporary_enrollment_pairings
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings
    method: GET
    data_selector: TemporaryEnrollmentPairing
- name: temporary_enrollment_pairing_show
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings/:id
    method: GET
    data_selector: TemporaryEnrollmentPairing
- name: temporary_enrollment_pairing_new
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings/new
    method: GET
    data_selector: TemporaryEnrollmentPairing
- name: temporary_enrollment_pairing_create
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings
    method: POST
    data_selector: TemporaryEnrollmentPairing
- name: temporary_enrollment_pairing_destroy
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings/:id
    method: DELETE
    data_selector: TemporaryEnrollmentPairing
- name: temporary_enrollment_pairing
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings
    method: POST
- name: temporary_enrollment_pairing_delete
  endpoint:
    path: /api/v1/accounts/:account_id/temporary_enrollment_pairings/:id
    method: DELETE
- name: observees
  endpoint:
    path: /api/v1/users/:user_id/observees
    method: GET
    data_selector: User
    params: {}
- name: user_profile
  endpoint:
    path: /api/v1/users/:user_id/profile
    method: GET
- name: text_editor_preference
  endpoint:
    path: /api/v1/users/:id/text_editor_preference
    method: PUT
- name: files_ui_version_preference
  endpoint:
    path: /api/v1/users/:id/files_ui_version_preference
    method: PUT
- name: dashboard_positions
  endpoint:
    path: /api/v1/users/:id/dashboard_positions
    method: GET
- name: update_dashboard_positions
  endpoint:
    path: /api/v1/users/:id/dashboard_positions
    method: PUT
- name: edit_user
  endpoint:
    path: /api/v1/users/:id
    method: PUT
- name: terminate_sessions
  endpoint:
    path: /api/v1/users/:id/sessions
    method: DELETE
- name: expire_mobile_sessions
  endpoint:
    path: /api/v1/users/mobile_sessions
    method: DELETE
- name: merge_user
  endpoint:
    path: /api/v1/users/:id/merge_into/:destination_user_id
    method: PUT
- name: split_user
  endpoint:
    path: /api/v1/users/:id/split
    method: POST
- name: pandata_events_token
  endpoint:
    path: /api/v1/users/self/pandata_events_token
    method: POST
- name: graded_submissions
  endpoint:
    path: /api/v1/users/:id/graded_submissions
    method: GET
- name: user_avatars
  endpoint:
    path: /api/v1/users/:user_id/avatars
    method: GET
    data_selector: records
- name: user_page_views
  endpoint:
    path: /api/v1/users/:user_id/page_views
    method: GET
    data_selector: records
- name: user_custom_data
  endpoint:
    path: /api/v1/users/:user_id/custom_data
    method: PUT
    data_selector: data
- name: course_nicknames
  endpoint:
    path: /api/v1/users/self/course_nicknames
    method: GET
    data_selector: records
- name: observers
  endpoint:
    path: /api/v1/users/:user_id/observers
    method: GET
    data_selector: observers
    params: {}
- name: observees
  endpoint:
    path: /api/v1/users/:user_id/observees
    method: POST
    data_selector: observee
    params: {}
- name: observee_info
  endpoint:
    path: /api/v1/users/:user_id/observees/:observee_id
    method: GET
    data_selector: observee
    params: {}
- name: observer_info
  endpoint:
    path: /api/v1/users/:user_id/observers/:observer_id
    method: GET
    data_selector: observer
    params: {}
- name: update_observee
  endpoint:
    path: /api/v1/users/:user_id/observees/:observee_id
    method: PUT
    data_selector: observee
    params: {}
- name: remove_observee
  endpoint:
    path: /api/v1/users/:user_id/observees/:observee_id
    method: DELETE
    data_selector: observee
    params: {}
- name: create_observer_pairing_code
  endpoint:
    path: /api/v1/users/:user_id/observer_pairing_codes
    method: POST
    data_selector: pairing_code
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: users
  endpoint:
    path: /api/v1/accounts/:account_id/users
    method: GET
    data_selector: users
- name: activity_stream
  endpoint:
    path: /api/v1/users/self/activity_stream
    method: GET
    data_selector: activity_stream
- name: todo_items
  endpoint:
    path: /api/v1/users/self/todo
    method: GET
    data_selector: todo_items
- name: todo_item_count
  endpoint:
    path: /api/v1/users/self/todo_item_count
    method: GET
    data_selector: todo_item_count
- name: update_submission
  endpoint:
    path: /what_if_grades_api/update
    method: POST
- name: reset_for_student_course
  endpoint:
    path: /what_if_grades_api/reset_for_student_course
    method: POST
- name: group_category
  endpoint:
    path: /api/v1/group_categories
    method: POST
    data_selector: data
- name: upcoming_events
  endpoint:
    path: /api/v1/users/self/upcoming_events
    method: GET
    data_selector: ''
- name: missing_submissions
  endpoint:
    path: /api/v1/users/:user_id/missing_submissions
    method: GET
    data_selector: ''
- name: activity_stream_item
  endpoint:
    path: /api/v1/users/self/activity_stream/:id
    method: DELETE
    data_selector: ''
- name: all_activity_stream_items
  endpoint:
    path: /api/v1/users/self/activity_stream
    method: DELETE
    data_selector: ''
- name: upload_file
  endpoint:
    path: /api/v1/users/:user_id/files
    method: POST
    data_selector: ''
- name: user_details
  endpoint:
    path: /api/v1/users/:id
    method: GET
    data_selector: ''
- name: create_user
  endpoint:
    path: /api/v1/accounts/:account_id/users
    method: POST
    data_selector: ''
- name: self_register_user
  endpoint:
    path: /api/v1/accounts/:account_id/self_registration
    method: POST
    data_selector: ''
- name: user_settings
  endpoint:
    path: /api/v1/users/:id/settings
    method: GET
    data_selector: ''
- name: update_user_settings
  endpoint:
    path: /api/v1/users/:id/settings
    method: PUT
    data_selector: ''
- name: custom_colors
  endpoint:
    path: /api/v1/users/:id/colors
    method: GET
    data_selector: ''
- name: custom_color
  endpoint:
    path: /api/v1/users/:id/colors/:asset_string
    method: GET
    data_selector: ''
- name: update_custom_color
  endpoint:
    path: /api/v1/users/:id/colors/:asset_string
    method: PUT
    data_selector: ''
- name: text_editor_preference
  endpoint:
    path: /api/v1/users/:id/text_editor_preference
    method: PUT
    data_selector: text_editor_preference
- name: files_ui_version_preference
  endpoint:
    path: /api/v1/users/:id/files_ui_version_preference
    method: PUT
    data_selector: files_ui_version
- name: dashboard_positions
  endpoint:
    path: /api/v1/users/:id/dashboard_positions
    method: GET
    data_selector: dashboard_positions
- name: update_user
  endpoint:
    path: /api/v1/users/:id
    method: PUT
    data_selector: user
- name: terminate_sessions
  endpoint:
    path: /api/v1/users/:id/sessions
    method: DELETE
- name: expire_mobile_sessions
  endpoint:
    path: /api/v1/users/mobile_sessions
    method: DELETE
- name: merge_into
  endpoint:
    path: /api/v1/users/:id/merge_into/:destination_user_id
    method: PUT
- name: split
  endpoint:
    path: /api/v1/users/:id/split
    method: POST
- name: pandata_events_token
  endpoint:
    path: /api/v1/users/self/pandata_events_token
    method: POST
- name: graded_submissions
  endpoint:
    path: /api/v1/users/:id/graded_submissions
    method: GET
- name: user_profile
  endpoint:
    path: /api/v1/users/:user_id/profile
    method: GET
- name: profile_pics
  endpoint:
    path: /api/v1/users/:id/profile_pics
    method: GET
- name: user_avatars
  endpoint:
    path: /api/v1/users/:user_id/avatars
    method: GET
    data_selector: records
- name: user_page_views
  endpoint:
    path: /api/v1/users/:user_id/page_views
    method: GET
    data_selector: records
- name: user_custom_data
  endpoint:
    path: /api/v1/users/:user_id/custom_data
    method: PUT
    data_selector: data
- name: course_nicknames
  endpoint:
    path: /api/v1/users/self/course_nicknames
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: accounts.csv
    method: GET
    data_selector: records
- name: terms
  endpoint:
    path: terms.csv
    method: GET
    data_selector: records
- name: courses
  endpoint:
    path: courses.csv
    method: GET
    data_selector: records
- name: sections
  endpoint:
    path: sections.csv
    method: GET
    data_selector: records
- name: enrollments
  endpoint:
    path: enrollments.csv
    method: GET
    data_selector: records
- name: group_categories
  endpoint:
    path: group_categories.csv
    method: GET
    data_selector: records
- name: groups
  endpoint:
    path: groups.csv
    method: GET
    data_selector: records
- name: groups_membership
  endpoint:
    path: groups_membership.csv
    method: GET
    data_selector: records
- name: differentiation_tag_sets
  endpoint:
    path: differentiation_tag_sets.csv
    method: GET
    data_selector: records
- name: differentiation_tags
  endpoint:
    path: differentiation_tags.csv
    method: GET
    data_selector: records
- name: differentiation_tag_membership
  endpoint:
    path: differentiation_tag_membership.csv
    method: GET
    data_selector: records
- name: xlists
  endpoint:
    path: xlists.csv
    method: GET
    data_selector: records
- name: user_observers
  endpoint:
    path: user_observers.csv
    method: GET
    data_selector: records
- name: admins
  endpoint:
    path: admins.csv
    method: GET
    data_selector: records
- name: logins
  endpoint:
    path: /logins.csv
    method: POST
    data_selector: records
    params: {}
- name: change_sis_id
  endpoint:
    path: /change_sis_id.csv
    method: POST
    data_selector: records
    params: {}
- name: group_categories
  endpoint:
    path: /api/v1/group_categories
    method: GET
    data_selector: group_categories
- name: differentiation_tag
  endpoint:
    path: /differentiation_tags
    method: POST
- name: openid_configuration
  endpoint:
    path: /api/lti/security/openid-configuration
    method: GET
    data_selector: issuer
    params: {}
- name: registration
  endpoint:
    path: /api/lti/registrations
    method: POST
    data_selector: client_id
    params: {}
- name: authentication_request
  endpoint:
    path: /api/lti/authorize_redirect
    method: GET
- name: LTI Launch
  endpoint:
    path: /api/lti/security/jwks
    method: GET
- placement: file_menu
  accept_media_types: image/jpeg,image/png
- placement: account_navigation
  default: enabled
- placement: course_navigation
  default: enabled
- placement: global_navigation
  icon_svg_path_64: ''
- placement: editor_button
  use_tray: true
- placement: account_navigation
  windowTarget: _blank
- placement: course_navigation
  windowTarget: _blank
- placement: global_navigation
  windowTarget: _blank
- placement: user_navigation
  windowTarget: _blank
- name: accounts
  endpoint:
    path: /accounts.csv
    method: GET
    data_selector: records
- name: terms
  endpoint:
    path: /terms.csv
    method: GET
    data_selector: records
- name: courses
  endpoint:
    path: /courses.csv
    method: GET
    data_selector: records
- name: sections
  endpoint:
    path: /sections.csv
    method: GET
    data_selector: records
- name: enrollments
  endpoint:
    path: /enrollments.csv
    method: GET
    data_selector: records
- name: group_categories
  endpoint:
    path: /group_categories.csv
    method: GET
    data_selector: records
- name: groups
  endpoint:
    path: /groups.csv
    method: GET
    data_selector: records
- name: groups_membership
  endpoint:
    path: /groups_membership.csv
    method: GET
    data_selector: records
- name: differentiation_tag_sets
  endpoint:
    path: /differentiation_tag_sets.csv
    method: GET
    data_selector: records
- name: differentiation_tags
  endpoint:
    path: /differentiation_tags.csv
    method: GET
    data_selector: records
- name: differentiation_tag_membership
  endpoint:
    path: /differentiation_tag_membership.csv
    method: GET
    data_selector: records
- name: xlists
  endpoint:
    path: /xlists.csv
    method: GET
    data_selector: records
- name: user_observers
  endpoint:
    path: /user_observers.csv
    method: GET
    data_selector: records
- name: admins
  endpoint:
    path: /admins.csv
    method: GET
    data_selector: records
- name: logins
  endpoint:
    path: /logins.csv
    method: GET
    data_selector: records
    params: {}
- name: change_sis_id
  endpoint:
    path: /change_sis_id.csv
    method: GET
    data_selector: records
    params: {}
- name: openid_configuration
  endpoint:
    path: /api/lti/security/openid-configuration
    method: GET
    data_selector: ''
    params: {}
- name: registrations
  endpoint:
    path: /api/lti/registrations
    method: POST
    data_selector: ''
    params: {}
- name: UserSectionNames
  endpoint:
    path: /com/instructure/User/sectionNames
    method: GET
    data_selector: sectionNames
- name: RCSAppHost
  endpoint:
    path: /com/instructure/RCS/app_host
    method: GET
    data_selector: app_host
- name: StudentView
  endpoint:
    path: /com/instructure/User/student_view
    method: GET
    data_selector: student_view
- name: ObserveeSisIds
  endpoint:
    path: /com/instructure/Observee/sisIds
    method: GET
    data_selector: sisIds
- name: ContextTitle
  endpoint:
    path: /Context/title
    method: GET
    data_selector: title
- name: CourseOfferingSourcedId
  endpoint:
    path: /CourseOffering/sourcedId
    method: GET
    data_selector: sourcedId
- name: GlobalId
  endpoint:
    path: /com/instructure/Context/globalId
    method: GET
    data_selector: globalId
- name: Uuid
  endpoint:
    path: /com/instructure/Context/uuid
    method: GET
    data_selector: uuid
- name: AccountUsageMetricsEnabled
  endpoint:
    path: /com/instructure/Account/usage_metrics_enabled
    method: GET
    data_selector: usage_metrics_enabled
- name: CourseId
  endpoint:
    path: /Canvas/course/id
    method: GET
    data_selector: id
- name: CourseName
  endpoint:
    path: /Canvas/course/name
    method: GET
    data_selector: name
- name: authentication_request
  endpoint:
    path: /api/lti/authorize_redirect
    method: GET
- name: public_jwk
  endpoint:
    path: /api/lti/security/jwks
    method: GET
- placement: file_menu
  accept_media_types: image/jpeg,image/png
- placement: account_navigation
  default: enabled
- placement: course_navigation
  default: enabled
- placement: global_navigation
  icon_svg_path_64: M10 20v-6h4v6h5v-8h-6V8h6V3H10v17z
- placement: editor_button
  use_tray: true
- placement: account_navigation
  windowTarget: _blank
- placement: course_navigation
  windowTarget: _blank
- placement: global_navigation
  windowTarget: _blank
- placement: user_navigation
  windowTarget: _blank
- name: membership_roles
  endpoint:
    path: /canvas/membership/roles
    method: GET
- name: concludedRoles
  endpoint:
    path: /canvas/membership/concludedRoles
    method: GET
- name: permissions
  endpoint:
    path: /canvas/membership/permissions
    method: GET
- name: previousContextIds
  endpoint:
    path: /canvas/course/previousContextIds
    method: GET
- name: previousContextIds_recursive
  endpoint:
    path: /canvas/course/previousContextIds/recursive
    method: GET
- name: previousCourseIds
  endpoint:
    path: /canvas/course/previousCourseIds
    method: GET
- name: full_name
  endpoint:
    path: /person/name/full
    method: GET
- name: display_name
  endpoint:
    path: /person/name/display
    method: GET
- name: family_name
  endpoint:
    path: /person/name/family
    method: GET
- name: given_name
  endpoint:
    path: /person/name/given
    method: GET
- name: sortable_name
  endpoint:
    path: /com.instructure/person/name_sortable
    method: GET
- name: primary_email
  endpoint:
    path: /person/email/primary
    method: GET
- name: pronouns
  endpoint:
    path: /com.instructure/person/pronouns
    method: GET
- name: timezone
  endpoint:
    path: /person/address/timezone
    method: GET
- name: profile_picture
  endpoint:
    path: /user/image
    method: GET
- name: user_id
  endpoint:
    path: /user/id
    method: GET
- name: user_uuid
  endpoint:
    path: /vnd.instructure/user/uuid
    method: GET
- name: user_globalId
  endpoint:
    path: /canvas/user/globalId
    method: GET
- name: isRootAccountAdmin
  endpoint:
    path: /canvas/user/isRootAccountAdmin
    method: GET
- name: tool_settings
  endpoint:
    path: /api/lti/tool_settings/<proxy_id>
    method: GET
- name: tool_consumer_profile
  endpoint:
    path: /api/lti/courses/<course_id>/tool_consumer_profile/<opaque_id>
    method: GET
- name: tool_consumer_profile_account
  endpoint:
    path: /api/lti/accounts/<account_id>/tool_consumer_profile/<opaque_id>
    method: GET
- name: originality_report
  endpoint:
    path: /api/lti/assignments/{assignment_id}/submissions/{submission_id}/originality_report
    method: GET
- name: submission
  endpoint:
    path: /api/lti/assignments/{assignment_id}/submissions/{submission_id}
    method: GET
- name: submission_history
  endpoint:
    path: /api/lti/assignments/{assignment_id}/submissions/{submission_id}/history
    method: GET
- name: editor_button
  endpoint:
    path: /editor_button
    method: POST
    data_selector: data
    params:
      message_type: LtiDeepLinkingRequest
- name: assignment_selection
  endpoint:
    path: /assignment_selection
    method: POST
    data_selector: data
    params:
      message_type: LtiDeepLinkingRequest
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
- name: content_items
  endpoint:
    path: /messages/launch
    method: GET
    data_selector: '@graph'
- name: line_items
  endpoint:
    path: /line_items
    method: GET
- name: score
  endpoint:
    path: /score
    method: GET
- name: result
  endpoint:
    path: /result
    method: GET
- name: replaceResultRequest
  endpoint:
    path: /replaceResultRequest
    method: POST
    data_selector: submissionDetails
    params: {}
- name: Names and Role API
  endpoint:
    path: /api/names_and_role
    method: GET
- name: context_memberships
  endpoint:
    path: /lti/names_and_roles
    method: GET
    data_selector: context_memberships
- name: collaboration_members
  endpoint:
    path: /api/v1/collaborations/1/members
    method: GET
- name: membership_service
  endpoint:
    path: /api/lti/courses/1/membership_service
    method: GET
- name: requestFullWindowLaunch
  endpoint:
    path: /requestFullWindowLaunch
    method: POST
    data_selector: data
    params: {}
- name: lti.resourceImported
  endpoint:
    path: /lti.resourceImported
    method: POST
    data_selector: data
    params: {}
- name: lti.hideRightSideWrapper
  endpoint:
    path: /lti.hideRightSideWrapper
    method: POST
    data_selector: data
    params: {}
- name: lti.frameResize
  endpoint:
    path: /lti.frameResize
    method: POST
    data_selector: data
    params: {}
- name: lti.fetchWindowSize
  endpoint:
    path: /lti.fetchWindowSize
    method: POST
    data_selector: data
    params: {}
- name: lti.showModuleNavigation
  endpoint:
    path: /lti.showModuleNavigation
    method: POST
    data_selector: data
    params: {}
- name: lti.scrollToTop
  endpoint:
    path: /lti.scrollToTop
    method: POST
    data_selector: data
    params: {}
- name: lti.setUnloadMessage
  endpoint:
    path: /lti.setUnloadMessage
    method: POST
    data_selector: data
    params: {}
- name: lti.removeUnloadMessage
  endpoint:
    path: /lti.removeUnloadMessage
    method: POST
    data_selector: data
    params: {}
- name: lti.screenReaderAlert
  endpoint:
    path: /lti.screenReaderAlert
    method: POST
    data_selector: data
    params: {}
- name: lti.showAlert
  endpoint:
    path: /lti.showAlert
    method: POST
    data_selector: data
    params: {}
- name: lti.enableScrollEvents
  endpoint:
    path: /lti.enableScrollEvents
    method: POST
    data_selector: data
    params: {}
- name: showNavigationMenu
  endpoint:
    path: /showNavigationMenu
    method: POST
    data_selector: data
    params: {}
- name: hideNavigationMenu
  endpoint:
    path: /hideNavigationMenu
    method: POST
    data_selector: data
    params: {}
- name: notice_handlers
  endpoint:
    path: /api/lti/notice-handlers/106
    method: PUT
    data_selector: notice_handlers
    params: {}
- name: registered_notice_handlers
  endpoint:
    path: /api/lti/notice-handlers/106
    method: GET
    data_selector: notice_handlers
    params: {}
- name: membership_roles
  endpoint:
    path: /canvas/membership/roles
    method: GET
- name: membership_concludedRoles
  endpoint:
    path: /canvas/membership/concludedRoles
    method: GET
- name: membership_permissions
  endpoint:
    path: /canvas/membership/permissions
    method: GET
- name: course_previousContextIds
  endpoint:
    path: /canvas/course/previousContextIds
    method: GET
- name: course_previousContextIds_recursive
  endpoint:
    path: /canvas/course/previousContextIds/recursive
    method: GET
- name: course_previousCourseIds
  endpoint:
    path: /canvas/course/previousCourseIds
    method: GET
- name: person_name_full
  endpoint:
    path: /person/name/full
    method: GET
- name: person_name_display
  endpoint:
    path: /person/name/display
    method: GET
- name: person_name_family
  endpoint:
    path: /person/name/family
    method: GET
- name: person_name_given
  endpoint:
    path: /person/name/given
    method: GET
- name: person_email_primary
  endpoint:
    path: /person/email/primary
    method: GET
- name: person_address_timezone
  endpoint:
    path: /person/address/timezone
    method: GET
- name: user_image
  endpoint:
    path: /user/image
    method: GET
- name: user_id
  endpoint:
    path: /user/id
    method: GET
- name: user_globalId
  endpoint:
    path: /user/globalId
    method: GET
- name: user_isRootAccountAdmin
  endpoint:
    path: /user/isRootAccountAdmin
    method: GET
- name: tool_settings
  endpoint:
    path: /tool_settings/<proxy_id>
    method: GET
- name: tool_consumer_profile
  endpoint:
    path: /courses/<course_id>/tool_consumer_profile/<opaque_id>
    method: GET
- name: tool_consumer_profile_account
  endpoint:
    path: /accounts/<account_id>/tool_consumer_profile/<opaque_id>
    method: GET
- name: originality_report
  endpoint:
    path: /assignments/{assignment_id}/submissions/{submission_id}/originality_report
    method: GET
- name: submission
  endpoint:
    path: /assignments/{assignment_id}/submissions/{submission_id}
    method: GET
- name: submission_history
  endpoint:
    path: /assignments/{assignment_id}/submissions/{submission_id}/history
    method: GET
- name: Deep Linking Tool
  endpoint:
    path: /deeplinkexample
    method: POST
    data_selector: items
    params: {}
- name: editor_button
  endpoint:
    path: /api/v1/editor_button
    method: GET
- name: assignment_selection
  endpoint:
    path: /api/v1/assignment_selection
    method: GET
- name: content_items
  endpoint:
    path: /messages/launch
    method: GET
    data_selector: '@graph'
- name: Line Items
  endpoint:
    path: /line_items
    method: GET
- name: Score
  endpoint:
    path: /score
    method: GET
- name: Result
  endpoint:
    path: /result
    method: GET
- name: replaceResultRequest
  endpoint:
    path: /replaceResultRequest
    method: POST
    data_selector: submissionDetails
- name: Names and Role API
  endpoint:
    path: /lti/names_and_roles
    method: GET
- name: account_navigation
  endpoint:
    path: /placements/account_navigation
    method: GET
- name: assignment_edit
  endpoint:
    path: /placements/assignment_edit
    method: GET
- name: assignment_group_menu
  endpoint:
    path: /placements/assignment_group_menu
    method: GET
- name: assignment_index_menu
  endpoint:
    path: /placements/assignment_index_menu
    method: GET
- name: assignment_menu
  endpoint:
    path: /placements/assignment_menu
    method: GET
- name: assignment_selection
  endpoint:
    path: /placements/assignment_selection
    method: GET
- name: assignment_view
  endpoint:
    path: /placements/assignment_view
    method: GET
- name: collaboration
  endpoint:
    path: /placements/collaboration
    method: GET
- name: course_assignments_menu
  endpoint:
    path: /placements/course_assignments_menu
    method: GET
- name: course_home_sub_navigation
  endpoint:
    path: /placements/course_home_sub_navigation
    method: GET
- name: course_navigation
  endpoint:
    path: /placements/course_navigation
    method: GET
- name: course_settings_sub_navigation
  endpoint:
    path: /placements/course_settings_sub_navigation
    method: GET
- name: discussion_topic_index_menu
  endpoint:
    path: /placements/discussion_topic_index_menu
    method: GET
- name: discussion_topic_menu
  endpoint:
    path: /placements/discussion_topic_menu
    method: GET
- name: editor_button
  endpoint:
    path: /placements/editor_button
    method: GET
- name: file_index_menu
  endpoint:
    path: /placements/file_index_menu
    method: GET
- name: file_menu
  endpoint:
    path: /placements/file_menu
    method: GET
- name: global_navigation
  endpoint:
    path: /placements/global_navigation
    method: GET
- name: homework_submission
  endpoint:
    path: /placements/homework_submission
    method: GET
- name: link_selection
  endpoint:
    path: /placements/link_selection
    method: GET
- name: migration_selection
  endpoint:
    path: /placements/migration_selection
    method: GET
- name: module_group_menu
  endpoint:
    path: /placements/module_group_menu
    method: GET
- name: module_index_menu_modal
  endpoint:
    path: /placements/module_index_menu_modal
    method: GET
- name: module_index_menu
  endpoint:
    path: /placements/module_index_menu
    method: GET
- name: module_menu_modal
  endpoint:
    path: /placements/module_menu_modal
    method: GET
- name: module_menu
  endpoint:
    path: /placements/module_menu
    method: GET
- name: wiki_index_menu
  endpoint:
    path: /placements/wiki_index_menu
    method: GET
- name: wiki_page_menu
  endpoint:
    path: /placements/wiki_page_menu
    method: GET
- name: quiz_index_menu
  endpoint:
    path: /placements/quiz_index_menu
    method: GET
- name: quiz_menu
  endpoint:
    path: /placements/quiz_menu
    method: GET
- name: student_context_card
  endpoint:
    path: /placements/student_context_card
    method: GET
- name: submission_type_selection
  endpoint:
    path: /placements/submission_type_selection
    method: GET
- name: post_grades
  endpoint:
    path: /placements/post_grades
    method: GET
- name: tool_configuration
  endpoint:
    path: /placements/tool_configuration
    method: GET
- name: top_navigation
  endpoint:
    path: /placements/top_navigation
    method: GET
- name: user_navigation
  endpoint:
    path: /placements/user_navigation
    method: GET
- name: resource_selection ⚠️
  endpoint:
    path: /placements/resource_selection
    method: GET
- name: user_navigation
  endpoint:
    path: /user_navigation
    method: POST
    data_selector: url
    params:
      enabled: true
- name: Names and Role Provisioning Service
  endpoint:
    path: /api/lti/names_and_roles
    method: GET
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: user_navigation
  endpoint:
    path: /user_navigation
    method: POST
    data_selector: links
    params:
      enabled: true
      visibility: public
- name: account_calendars
  endpoint:
    path: /api/v1/account_calendars
    method: GET
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
- name: user_navigation
  endpoint:
    path: /user_navigation
    method: POST
    data_selector: links
    params:
      enabled: true
- name: requestFullWindowLaunch
  endpoint:
    path: ''
    method: POST
    data_selector: data
    params: {}
- name: lti.resourceImported
  endpoint:
    path: ''
    method: POST
    data_selector: ''
    params: {}
- name: lti.hideRightSideWrapper
  endpoint:
    path: ''
    method: POST
    data_selector: ''
    params: {}
- name: lti.frameResize
  endpoint:
    path: ''
    method: POST
    data_selector: height
    params: {}
- name: lti.fetchWindowSize
  endpoint:
    path: ''
    method: POST
    data_selector: ''
    params: {}
- name: lti.showModuleNavigation
  endpoint:
    path: ''
    method: POST
    data_selector: show
    params: {}
- name: lti.scrollToTop
  endpoint:
    path: ''
    method: POST
    data_selector: ''
    params: {}
- name: lti.setUnloadMessage
  endpoint:
    path: ''
    method: POST
    data_selector: message
    params: {}
- name: lti.removeUnloadMessage
  endpoint:
    path: ''
    method: POST
    data_selector: ''
    params: {}
- name: lti.screenReaderAlert
  endpoint:
    path: ''
    method: POST
    data_selector: body
    params: {}
- name: lti.showAlert
  endpoint:
    path: ''
    method: POST
    data_selector: body
    params: {}
- name: lti.enableScrollEvents
  endpoint:
    path: ''
    method: POST
    data_selector: ''
    params: {}
- name: showNavigationMenu
  endpoint:
    path: ''
    method: POST
    data_selector: ''
    params: {}
- name: hideNavigationMenu
  endpoint:
    path: ''
    method: POST
    data_selector: ''
    params: {}
- name: notice_handlers
  endpoint:
    path: /api/lti/notice-handlers/106
    method: PUT
    data_selector: notice_handlers
- name: get_notice_handlers
  endpoint:
    path: /api/lti/notice-handlers/106
    method: GET
    data_selector: notice_handlers
- name: user_navigation
  endpoint:
    path: /user_navigation
    method: POST
    data_selector: links
    params:
      enabled: true
- name: top_navigation
  endpoint:
    path: /top_navigation
    method: POST
    data_selector: data
    params: {}
- name: user_navigation
  endpoint:
    path: /user_navigation
    method: POST
    data_selector: data
    params:
      enabled: true
- name: homework_submission
  endpoint:
    path: /homework_submission
    method: POST
- name: editor_button
  endpoint:
    path: /editor_button
    method: GET
- name: migration_selection
  endpoint:
    path: /lti/migration_selection
    method: GET
- name: link_selection
  endpoint:
    path: /link_selection
    method: GET
- name: assignment_selection
  endpoint:
    path: /assignment_selection
    method: GET
- name: collaborations
  endpoint:
    path: /lti/collaboration
    method: POST
- name: account_navigation
  endpoint:
    path: /account_navigation
    method: GET
    data_selector: records
- name: assignment_edit
  endpoint:
    path: /assignment_edit
    method: GET
    data_selector: records
- name: assignment_group_menu
  endpoint:
    path: /assignment_group_menu
    method: GET
    data_selector: records
- name: assignment_index_menu
  endpoint:
    path: /assignment_index_menu
    method: GET
    data_selector: records
- name: assignment_menu
  endpoint:
    path: /assignment_menu
    method: GET
    data_selector: records
- name: assignment_selection
  endpoint:
    path: /assignment_selection
    method: GET
    data_selector: records
- name: assignment_view
  endpoint:
    path: /assignment_view
    method: GET
    data_selector: records
- name: collaboration
  endpoint:
    path: /collaboration
    method: GET
    data_selector: records
- name: course_assignments_menu
  endpoint:
    path: /course_assignments_menu
    method: GET
    data_selector: records
- name: course_home_sub_navigation
  endpoint:
    path: /course_home_sub_navigation
    method: GET
    data_selector: records
- name: course_navigation
  endpoint:
    path: /course_navigation
    method: GET
    data_selector: records
- name: course_settings_sub_navigation
  endpoint:
    path: /course_settings_sub_navigation
    method: GET
    data_selector: records
- name: discussion_topic_index_menu
  endpoint:
    path: /discussion_topic_index_menu
    method: GET
    data_selector: records
- name: discussion_topic_menu
  endpoint:
    path: /discussion_topic_menu
    method: GET
    data_selector: records
- name: editor_button
  endpoint:
    path: /editor_button
    method: GET
    data_selector: records
- name: file_index_menu
  endpoint:
    path: /file_index_menu
    method: GET
    data_selector: records
- name: file_menu
  endpoint:
    path: /file_menu
    method: GET
    data_selector: records
- name: global_navigation
  endpoint:
    path: /global_navigation
    method: GET
    data_selector: records
- name: homework_submission
  endpoint:
    path: /homework_submission
    method: GET
    data_selector: records
- name: link_selection
  endpoint:
    path: /link_selection
    method: GET
    data_selector: records
- name: migration_selection
  endpoint:
    path: /migration_selection
    method: GET
    data_selector: records
- name: module_group_menu
  endpoint:
    path: /module_group_menu
    method: GET
    data_selector: records
- name: module_index_menu_modal
  endpoint:
    path: /module_index_menu_modal
    method: GET
    data_selector: records
- name: module_index_menu
  endpoint:
    path: /module_index_menu
    method: GET
    data_selector: records
- name: module_menu_modal
  endpoint:
    path: /module_menu_modal
    method: GET
    data_selector: records
- name: module_menu
  endpoint:
    path: /module_menu
    method: GET
    data_selector: records
- name: wiki_index_menu
  endpoint:
    path: /wiki_index_menu
    method: GET
    data_selector: records
- name: wiki_page_menu
  endpoint:
    path: /wiki_page_menu
    method: GET
    data_selector: records
- name: quiz_index_menu
  endpoint:
    path: /quiz_index_menu
    method: GET
    data_selector: records
- name: quiz_menu
  endpoint:
    path: /quiz_menu
    method: GET
    data_selector: records
- name: student_context_card
  endpoint:
    path: /student_context_card
    method: GET
    data_selector: records
- name: submission_type_selection
  endpoint:
    path: /submission_type_selection
    method: GET
    data_selector: records
- name: post_grades
  endpoint:
    path: /post_grades
    method: GET
    data_selector: records
- name: tool_configuration
  endpoint:
    path: /tool_configuration
    method: GET
    data_selector: records
- name: top_navigation
  endpoint:
    path: /top_navigation
    method: GET
    data_selector: records
- name: user_navigation
  endpoint:
    path: /user_navigation
    method: GET
    data_selector: records
- name: resource_selection ⚠️
  endpoint:
    path: /resource_selection
    method: GET
    data_selector: records
- name: tool_consumer_profile
  endpoint:
    path: /api/lti/courses/{course_id}/tool_consumer_profile/{profile_id}
    method: GET
- name: submission_event
  endpoint:
    path: /api/lti/courses/{course_id}/submission_event
    method: POST
- name: user_navigation
  endpoint:
    path: /user_navigation
    method: POST
    data_selector: settings
    params:
      url: <url>
      text: <text>
      enabled: true
- name: tool_setting
  endpoint:
    path: /api/lti/tool_proxy/<tool proxy guid>/courses/24/resource_link_id/<lti assignment
      id>/tool_setting
    method: PUT
    data_selector: ''
    params: {}
- name: assignment_data
  endpoint:
    path: /api/lti/tool_proxy/<tool proxy guid>/courses/24/resource_link_id/<lti assignment
      id>/tool_setting
    method: GET
    data_selector: ''
    params: {}
- name: assignment
  endpoint:
    path: /api/lti/assignments/:assignment_id
    method: GET
    data_selector: LtiAssignment
    params: {}
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: user_navigation
  endpoint:
    path: /user_navigation
    method: POST
    data_selector: navigation_links
    params:
      enabled: true
- name: user
  endpoint:
    path: /api/lti/users/:id
    method: GET
- name: group_users
  endpoint:
    path: /api/lti/groups/:group_id/users
    method: GET
- name: submission
  endpoint:
    path: /api/lti/assignments/:assignment_id/submissions/:submission_id
    method: GET
    data_selector: submission
    params: {}
- name: submission_history
  endpoint:
    path: /api/lti/assignments/:assignment_id/submissions/:submission_id/history
    method: GET
    data_selector: history
    params: {}
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
- name: submission_history
  endpoint:
    path: /api/lti/assignments/:assignment_id/submissions/:submission_id/history
    method: GET
- name: user_navigation_settings
  endpoint:
    path: /user_navigation/settings
    method: POST
    data_selector: settings
    params: {}
- name: top_navigation
  endpoint:
    path: /top_navigation
    method: POST
    data_selector: settings
    params:
      url: <url>
      text: <text>
- name: user_navigation_links
  endpoint:
    path: /user_navigation_links
    method: POST
    data_selector: settings
    params:
      url: <url>
      text: <text>
      enabled: <boolean>
- name: Webhook Subscription
  endpoint:
    path: /api/lti/subscriptions
    method: POST
- name: Delete Webhook Subscription
  endpoint:
    path: /api/lti/subscriptions/:id
    method: DELETE
- name: Show Webhook Subscription
  endpoint:
    path: /api/lti/subscriptions/:id
    method: GET
- name: Update Webhook Subscription
  endpoint:
    path: /api/lti/subscriptions/:id
    method: PUT
- name: List Webhook Subscriptions
  endpoint:
    path: /api/lti/subscriptions
    method: GET
- name: user_navigation
  endpoint:
    path: /user_navigation
    method: POST
- name: originality_report
  endpoint:
    path: /api/lti/assignments/{assignment_id}/submissions/{submission_id}/originality_report/{report_id}
    method: GET
    data_selector: originality_report
    params: {}
- name: top_navigation
  endpoint:
    path: /top_navigation
    method: POST
    data_selector: data
    params:
      url: <url>
      text: <text>
      icon_url: <url>
      allow_fullscreen: <boolean>
- name: user_navigation
  endpoint:
    path: /user_navigation
    method: POST
    data_selector: data
    params:
      url: <url>
      text: <text>
      enabled: <boolean>
      visibility: public
      windowTarget: _blank
- name: editor_button
  endpoint:
    path: /lti/editor_button
    method: POST
- name: Event Metadata
  endpoint:
    path: /events
    method: GET
    data_selector: metadata
- name: Event Body
  endpoint:
    path: /events/body
    method: GET
    data_selector: body
- name: assignment_selection
  endpoint:
    path: /api/v1/assignments
    method: POST
- name: account_created
  endpoint:
    path: /accounts
    method: POST
    data_selector: body
- name: account_notification_created
  endpoint:
    path: /accounts/notifications
    method: POST
    data_selector: body
- name: account_updated
  endpoint:
    path: /accounts
    method: POST
    data_selector: body
- name: collaboration
  endpoint:
    path: /lti/collaboration
    method: POST
- name: asset_accessed
  endpoint:
    path: /events/asset_accessed
    method: GET
    data_selector: body
- name: asset_accessed
  endpoint:
    path: /groups/144/collaborations
    method: GET
    data_selector: metadata
- name: asset_accessed
  endpoint:
    path: /groups/144/collaborations
    method: GET
    data_selector: metadata
    params: {}
- name: asset_accessed
  endpoint:
    path: /groups/144/collaborations
    method: GET
    data_selector: metadata
    params: {}
- name: asset_accessed
  endpoint:
    path: /events/asset_accessed
    method: GET
    data_selector: metadata
    params: {}
- name: tool_consumer_profile
  endpoint:
    path: /api/lti/courses/3/tool_consumer_profile
    method: GET
    data_selector: services
- name: tool_proxy_create
  endpoint:
    path: /api/lti/courses/3/tool_proxy
    method: POST
    data_selector: tool_proxy
- name: submission_event
  endpoint:
    path: /api/lti/courses/3/submission_event
    method: POST
    data_selector: event
- name: assignment_created
  endpoint:
    path: /courses/{course_id}/assignments/{assignment_id}
    method: PUT
    data_selector: body
    params: {}
- name: assignment_group_created
  endpoint:
    path: /courses/{course_id}/assignment_groups
    method: POST
    data_selector: body
    params: {}
- name: tool_setting
  endpoint:
    path: /api/lti/tool_proxy/<tool proxy guid>/courses/24/resource_link_id/<lti assignment
      id>/tool_setting
    method: PUT
    data_selector: null
    params: {}
- name: assignment_data
  endpoint:
    path: /api/lti/tool_proxy/<tool proxy guid>/courses/24/resource_link_id/<lti assignment
      id>/tool_setting
    method: GET
    data_selector: null
    params: {}
- name: assignment_updated
  endpoint:
    path: /api/v1/courses/{course_id}/assignments/{assignment_id}
    method: PUT
    data_selector: body
- name: assignment_override_created
  endpoint:
    path: /api/v1/courses/{course_id}/assignments/{assignment_id}/overrides
    method: POST
    data_selector: body
- name: assignment_override_updated
  endpoint:
    path: /api/v1/courses/{course_id}/assignments/{assignment_id}/overrides/{override_id}
    method: PUT
    data_selector: body
- name: assignment
  endpoint:
    path: /api/lti/assignments/:assignment_id
    method: GET
    data_selector: LtiAssignment
- name: assignment_updated
  endpoint:
    path: /courses/{course_id}/assignments/{assignment_id}
    method: PUT
    data_selector: body
- name: user
  endpoint:
    path: /api/lti/users/:id
    method: GET
- name: group_users
  endpoint:
    path: /api/lti/groups/:group_id/users
    method: GET
- name: submission
  endpoint:
    path: /api/lti/assignments/:assignment_id/submissions/:submission_id
    method: GET
- name: submission_history
  endpoint:
    path: /api/lti/assignments/:assignment_id/submissions/:submission_id/history
    method: GET
- name: attachment_created
  endpoint:
    path: /files
    method: PUT
    data_selector: body
    params: {}
- name: attachment_deleted
  endpoint:
    path: /files
    method: DELETE
    data_selector: body
    params: {}
- name: attachment_updated
  endpoint:
    path: /files
    method: PUT
    data_selector: body
    params: {}
- name: submission_history
  endpoint:
    path: /api/lti/assignments/:assignment_id/submissions/:submission_id/history
    method: GET
- name: content_migration_completed
  endpoint:
    path: /content_migration_completed
    method: POST
    data_selector: body
- name: Webhook Subscription
  endpoint:
    path: /api/lti/subscriptions
    method: POST
- name: originality_report
  endpoint:
    path: /api/lti/assignments/{assignment_id}/submissions/{submission_id}/originality_report/{report_id}
    method: GET
    data_selector: id
- name: conversation_message_created
  endpoint:
    path: /conversations/53/add_message
    method: POST
    data_selector: body
- name: conversation_forwarded
  endpoint:
    path: /conversations/53/add_message
    method: POST
    data_selector: body
- name: course_completed
  endpoint:
    path: /courses/course_completed
    method: GET
    data_selector: body
- name: course_created
  endpoint:
    path: /courses/course_created
    method: GET
    data_selector: body
- name: course_progress
  endpoint:
    path: /courses/course_progress
    method: GET
    data_selector: body
- name: course_section_created
  endpoint:
    path: /courses/course_section_created
    method: GET
    data_selector: body
- name: course_section_updated
  endpoint:
    path: /courses/course_section_updated
    method: GET
    data_selector: body
- name: course_updated
  endpoint:
    path: /course_updated
    method: GET
    data_selector: body
    params: {}
- name: discussion_topic_created
  endpoint:
    path: /api/v1/courses/{course_id}/discussion_topics
    method: POST
    data_selector: body
- name: discussion_entry_created
  endpoint:
    path: /api/v1/courses/{course_id}/discussion_topics/{discussion_topic_id}/entries
    method: POST
    data_selector: body
- name: discussion_entry_submitted
  endpoint:
    path: /api/v1/courses/{course_id}/discussion_topics/{discussion_topic_id}/entries
    method: POST
    data_selector: body
- name: event_metadata
  endpoint:
    path: /events/metadata
    method: GET
    data_selector: records
- name: discussion_topic_updated
  endpoint:
    path: /courses/{course_id}/discussion_topics/{discussion_topic_id}
    method: PUT
    data_selector: body
    params: {}
- name: account_created
  endpoint:
    path: /accounts
    method: POST
    data_selector: metadata
    params: {}
- name: account_notification_created
  endpoint:
    path: /accounts
    method: POST
    data_selector: metadata
    params: {}
- name: account_updated
  endpoint:
    path: /accounts
    method: POST
    data_selector: metadata
    params: {}
- name: enrollment_updated
  endpoint:
    path: /enrollment_updated
    method: POST
    data_selector: body
- name: enrollment_state_created
  endpoint:
    path: /enrollment_state_created
    method: POST
    data_selector: body
- name: enrollment_state_updated
  endpoint:
    path: /enrollment_state_updated
    method: POST
    data_selector: body
- name: enrollment_created
  endpoint:
    path: /enrollment_created
    method: POST
    data_selector: body
- name: asset_accessed
  endpoint:
    path: /events/asset_accessed
    method: GET
    data_selector: body
- name: enrollment_updated
  endpoint:
    path: /enrollments
    method: GET
    data_selector: records
- name: metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: metadata
- name: body
  endpoint:
    path: /body
    method: GET
    data_selector: body
- name: asset_accessed
  endpoint:
    path: /groups/144/collaborations
    method: GET
    data_selector: metadata
- name: grade_change
  endpoint:
    path: /grade_change
    method: POST
    data_selector: body
- name: grade_override
  endpoint:
    path: /grade_override
    method: POST
    data_selector: body
- name: metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: metadata
    params: {}
- name: body
  endpoint:
    path: /body
    method: GET
    data_selector: body
    params: {}
- name: asset_accessed
  endpoint:
    path: /groups/144/collaborations
    method: GET
    data_selector: metadata
    params: {}
- name: group_category_created
  endpoint:
    path: /api/v1/group_category_created
    method: GET
    data_selector: body
- name: group_category_updated
  endpoint:
    path: /api/v1/group_category_updated
    method: GET
    data_selector: body
- name: group_created
  endpoint:
    path: /api/v1/group_created
    method: GET
    data_selector: body
- name: group_membership_created
  endpoint:
    path: /api/v1/group_membership_created
    method: GET
    data_selector: body
- name: assignment_created
  endpoint:
    path: /api/v1/assignments
    method: PUT
    data_selector: body
- name: assignment_group_created
  endpoint:
    path: /api/v1/assignment_groups
    method: PUT
    data_selector: body
- name: group_updated
  endpoint:
    path: /groups/updated
    method: GET
    data_selector: body
- name: assignment_updated
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id
    method: PUT
    data_selector: body
- name: assignment_override_created
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: POST
    data_selector: body
- name: assignment_override_updated
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides/:override_id
    method: PUT
    data_selector: body
- name: outcome_proficiency
  endpoint:
    path: /accounts/1/outcome_proficiency
    method: POST
    data_selector: body
    params: {}
- name: outcome_proficiency
  endpoint:
    path: /accounts/1/outcome_proficiency
    method: POST
    data_selector: body
- name: assignment_updated
  endpoint:
    path: /courses/{course_id}/assignments/{assignment_id}
    method: PUT
    data_selector: body
    params: {}
- name: attachment_updated
  endpoint:
    path: /files
    method: PUT
    data_selector: body
    params: {}
- name: attachment_created
  endpoint:
    path: /files
    method: POST
    data_selector: body
    params: {}
- name: attachment_deleted
  endpoint:
    path: /files
    method: DELETE
    data_selector: body
    params: {}
- name: module_created
  endpoint:
    path: /api/modules/created
    method: POST
    data_selector: body
- name: module_item_created
  endpoint:
    path: /api/modules/items/created
    method: POST
    data_selector: body
- name: module_item_updated
  endpoint:
    path: /api/modules/items/updated
    method: POST
    data_selector: body
- name: module_updated
  endpoint:
    path: /api/modules/updated
    method: POST
    data_selector: body
- name: module
  endpoint:
    path: /courses/:course_id/modules
    method: POST
    data_selector: body
    params: {}
- name: content_migration_completed
  endpoint:
    path: /content_migration_completed
    method: POST
    data_selector: body
- name: outcome_calculation_method_updated
  endpoint:
    path: /outcome_calculation_method_updated
    method: POST
    data_selector: body
- name: conversation_created
  endpoint:
    path: /conversations
    method: POST
    data_selector: body
- name: conversation_forwarded
  endpoint:
    path: /conversations
    method: POST
    data_selector: body
- name: conversation_message_created
  endpoint:
    path: /conversations/add_message
    method: POST
    data_selector: body
- name: retry_outcome_alignment_clone
  endpoint:
    path: /api/v1/courses/1/assignments/2/retry_alignment_clone
    method: POST
    data_selector: body
    params: {}
- name: course_completed
  endpoint:
    path: /courses/course_completed
    method: GET
    data_selector: body
- name: course_created
  endpoint:
    path: /courses/course_created
    method: GET
    data_selector: body
- name: course_progress
  endpoint:
    path: /courses/course_progress
    method: GET
    data_selector: body
- name: course_section_created
  endpoint:
    path: /courses/course_section_created
    method: GET
    data_selector: body
- name: course_section_updated
  endpoint:
    path: /courses/course_section_updated
    method: GET
    data_selector: body
- name: plagiarism_resubmit
  endpoint:
    path: /plagiarism_detection_platform_submissions
    method: POST
    data_selector: body
- name: quiz_submitted
  endpoint:
    path: /api/v1/quizzes/submissions
    method: POST
    data_selector: body
- name: course_updated
  endpoint:
    path: /api/v1/courses/updated
    method: POST
    data_selector: body
    params: {}
- name: rubric_assessed
  endpoint:
    path: /rubric_assessed
    method: POST
- name: discussion_topic_created
  endpoint:
    path: /api/v1/courses/{course_id}/discussion_topics
    method: POST
    data_selector: body
- name: discussion_entry_created
  endpoint:
    path: /api/v1/courses/{course_id}/discussion_topics/{discussion_topic_id}/entries
    method: POST
    data_selector: body
- name: discussion_entry_submitted
  endpoint:
    path: /api/v1/courses/{course_id}/discussion_topics/{discussion_topic_id}/entries
    method: POST
    data_selector: body
- name: sis_batch_updated
  endpoint:
    path: /api/v1/accounts/1/sis_imports.json
    method: POST
    data_selector: body
    params:
      import_type: instructure_csv
      override_sis_stickiness: 'true'
      extension: csv
- name: discussion_topic_updated
  endpoint:
    path: /api/v1/courses/{course_id}/discussion_topics/{discussion_topic_id}
    method: PUT
    data_selector: body
    params: {}
- name: submission_comment_created
  endpoint:
    path: /submission_comment_created
    method: POST
- name: submission_created
  endpoint:
    path: /submission_created
    method: POST
- name: submission_updated
  endpoint:
    path: /submission_updated
    method: POST
- name: submission
  endpoint:
    path: /courses/{course_id}/assignments/{assignment_id}/submissions
    method: POST
    data_selector: body
    params: {}
- name: enrollment_created
  endpoint:
    path: /enrollments
    method: POST
    data_selector: body
    params: {}
- name: enrollment_state_created
  endpoint:
    path: /enrollments
    method: POST
    data_selector: body
    params: {}
- name: enrollment_state_updated
  endpoint:
    path: /enrollments
    method: PATCH
    data_selector: body
    params: {}
- name: enrollment_updated
  endpoint:
    path: /enrollments
    method: PATCH
    data_selector: body
    params: {}
- name: syllabus_updated
  endpoint:
    path: /api/v1/courses/:course_id/syllabus
    method: POST
    data_selector: body
    params: {}
- name: grade_change
  endpoint:
    path: /courses/:course_id/grade_change
    method: POST
    data_selector: body
- name: grade_override
  endpoint:
    path: /courses/:course_id/grade_override
    method: POST
    data_selector: body
- name: user_created
  endpoint:
    path: /user_created
    method: POST
    data_selector: body
- name: user_updated
  endpoint:
    path: /user_updated
    method: POST
    data_selector: body
- name: group_category_created
  endpoint:
    path: /groups
    method: POST
    data_selector: body
- name: group_category_updated
  endpoint:
    path: /groups
    method: PUT
    data_selector: body
- name: group_created
  endpoint:
    path: /groups
    method: POST
    data_selector: body
- name: group_membership_created
  endpoint:
    path: /groups/{group_id}/memberships
    method: POST
    data_selector: body
- name: wiki_page_created
  endpoint:
    path: /wiki_page_created
    method: POST
- name: wiki_page_deleted
  endpoint:
    path: /wiki_page_deleted
    method: POST
- name: wiki_page_updated
  endpoint:
    path: /wiki_page_updated
    method: POST
- name: group_updated
  endpoint:
    path: /groups
    method: GET
    data_selector: body
    params: {}
- name: quiz_submitted
  endpoint:
    path: /services/canvas/quiz_submitted
    method: POST
    data_selector: data
- name: learning_outcome_created
  endpoint:
    path: /accounts/{account_id}/outcome_proficiency
    method: POST
- name: learning_outcome_group_created
  endpoint:
    path: /accounts/{account_id}/outcome_proficiency
    method: POST
- name: assignment_updated
  endpoint:
    path: /api/v1/assignments/updated
    method: POST
    data_selector: data
    params: {}
- name: attachment_created
  endpoint:
    path: /api/v1/attachments/created
    method: POST
    data_selector: data
    params: {}
- name: attachment_deleted
  endpoint:
    path: /api/v1/attachments/deleted
    method: POST
    data_selector: data
    params: {}
- name: attachment_updated
  endpoint:
    path: /api/v1/attachments/updated
    method: POST
    data_selector: data
    params: {}
- name: outcome_proficiency
  endpoint:
    path: /accounts/1/outcome_proficiency
    method: POST
    data_selector: metadata
    params:
      incremental: updated_at
- name: outcome_proficiency
  endpoint:
    path: /accounts/{account_id}/outcome_proficiency
    method: POST
    data_selector: body
    params: {}
- name: course_created
  endpoint:
    path: /api/v1/courses
    method: POST
    data_selector: data
- name: course_updated
  endpoint:
    path: /api/v1/courses
    method: PUT
    data_selector: data
- name: enrollment_created
  endpoint:
    path: /api/v1/enrollments
    method: POST
    data_selector: data
- name: enrollment_state_created
  endpoint:
    path: /api/v1/enrollment_states
    method: POST
    data_selector: data
- name: event_data
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: data
    params: {}
- name: module_created
  endpoint:
    path: /module_created
    method: POST
    data_selector: body
- name: module_item_created
  endpoint:
    path: /module_item_created
    method: POST
    data_selector: body
- name: module_item_updated
  endpoint:
    path: /module_item_updated
    method: POST
    data_selector: body
- name: module_updated
  endpoint:
    path: /module_updated
    method: POST
    data_selector: body
- name: module_updated
  endpoint:
    path: /courses/:course_id/modules/reorder
    method: POST
    data_selector: body
    params: {}
- name: group_membership_created
  endpoint:
    path: /api/v1/courses/565/pages/collaborative-project-team-sign-up
    method: GET
    data_selector: data
    params: {}
- name: submission_created
  endpoint:
    path: /api/v1/courses/565/pages/collaborative-project-team-sign-up
    method: GET
    data_selector: data
    params: {}
- name: submission_updated
  endpoint:
    path: /api/v1/courses/565/pages/collaborative-project-team-sign-up
    method: GET
    data_selector: data
    params: {}
- name: syllabus_updated
  endpoint:
    path: /api/v1/courses/565/pages/collaborative-project-team-sign-up
    method: GET
    data_selector: data
    params: {}
- name: outcome_calculation_method_updated
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: body
- name: outcomes.retry_outcome_alignment_clone
  endpoint:
    path: /api/v1/courses/1/assignments/2/retry_alignment_clone
    method: POST
- name: plagiarism_resubmit
  endpoint:
    path: /plagiarism_detection_platform_assignments
    method: POST
- name: user_account_association_created
  endpoint:
    path: /api/v1/user_account_association_created
    method: POST
    data_selector: data[0]
    params: {}
- name: wiki_page_created
  endpoint:
    path: /api/v1/wiki_page_created
    method: POST
    data_selector: data[0]
    params: {}
- name: wiki_page_updated
  endpoint:
    path: /api/v1/wiki_page_updated
    method: POST
    data_selector: data[0]
    params: {}
- name: wiki_page_deleted
  endpoint:
    path: /api/v1/wiki_page_deleted
    method: POST
    data_selector: data[0]
    params: {}
- name: quiz_submitted
  endpoint:
    path: /quiz_submitted
    method: POST
- name: wiki_page
  endpoint:
    path: /api/v1/courses/565/pages/collaborative-project-team-sign-up
    method: GET
    data_selector: data
- name: rubric_assessed
  endpoint:
    path: /rubric_assessed
    method: POST
- name: sis_batch_updated
  endpoint:
    path: /sis_imports.json
    method: POST
    data_selector: body
- name: discussion_entry_created
  endpoint:
    path: /courses/:course_id/discussion_topics/:discussion_topic_id
    method: POST
    data_selector: data
    params: {}
- name: discussion_topic_created
  endpoint:
    path: /courses/:course_id/discussion_topics
    method: POST
    data_selector: data
    params: {}
- name: grade_change
  endpoint:
    path: /api/v1/courses/565/assignments/355/submissions/48
    method: GET
    data_selector: data
    params: {}
- name: submission_created
  endpoint:
    path: /submission_created
    method: POST
- name: submission_updated
  endpoint:
    path: /submission_updated
    method: POST
- name: submission
  endpoint:
    path: /courses/{course_id}/assignments/{assignment_id}/submissions
    method: POST
    data_selector: body
    params: {}
- name: asset_accessed
  endpoint:
    path: /data/events/asset_accessed
    method: POST
    data_selector: data
    params: {}
- name: syllabus_updated
  endpoint:
    path: /courses/:course_id/syllabus
    method: POST
    data_selector: body
    params: {}
- name: asset_accessed
  endpoint:
    path: /
    method: POST
    data_selector: data
- name: asset_accessed
  endpoint:
    path: /
    method: POST
    data_selector: data
- name: user_created
  endpoint:
    path: /users
    method: POST
    data_selector: body
- name: user_updated
  endpoint:
    path: /users
    method: POST
    data_selector: body
- name: asset_accessed
  endpoint:
    path: /
    method: POST
    data_selector: data
- name: asset_accessed
  endpoint:
    path: /
    method: POST
    data_selector: data
- name: wiki_page_updated
  endpoint:
    path: /wiki_page_updated
    method: POST
    data_selector: body
    params: {}
- name: wiki_page_deleted
  endpoint:
    path: /wiki_page_deleted
    method: POST
    data_selector: body
    params: {}
- name: wiki_page_created
  endpoint:
    path: /wiki_page_created
    method: POST
    data_selector: body
    params: {}
- name: event
  endpoint:
    path: /
    method: POST
    data_selector: data
- name: quiz_submitted
  endpoint:
    path: /quiz_submitted
    method: POST
    data_selector: data
- name: asset_accessed
  endpoint:
    path: /asset_accessed
    method: GET
    data_selector: data
    params: {}
- name: asset_accessed
  endpoint:
    path: /
    method: POST
    data_selector: data
- name: asset_accessed
  endpoint:
    path: /
    method: GET
    data_selector: data
- name: assignment_updated
  endpoint:
    path: /api/v1/assignments/updated
    method: POST
    data_selector: data
    params: {}
- name: attachment_created
  endpoint:
    path: /api/v1/attachments/created
    method: POST
    data_selector: data
    params: {}
- name: attachment_deleted
  endpoint:
    path: /api/v1/attachments/deleted
    method: POST
    data_selector: data
    params: {}
- name: attachment_updated
  endpoint:
    path: /api/v1/attachments/updated
    method: POST
    data_selector: data
    params: {}
- name: asset_accessed
  endpoint:
    path: /asset_accessed
    method: POST
    data_selector: data
- name: asset_accessed
  endpoint:
    path: /path/to/asset_accessed
    method: GET
    data_selector: data
    params: {}
- name: course_created
  endpoint:
    path: /api/v1/courses
    method: POST
    data_selector: data
    params: {}
- name: course_updated
  endpoint:
    path: /api/v1/courses
    method: PUT
    data_selector: data
    params: {}
- name: enrollment_created
  endpoint:
    path: /api/v1/enrollments
    method: POST
    data_selector: data
    params: {}
- name: enrollment_state_created
  endpoint:
    path: /api/v1/enrollment_states
    method: POST
    data_selector: data
    params: {}
- name: session_logged_in
  endpoint:
    path: /api/session/logged_in
    method: GET
    data_selector: data
    params: {}
- name: session_logged_out
  endpoint:
    path: /api/session/logged_out
    method: GET
    data_selector: data
    params: {}
- name: enrollment_state_updated
  endpoint:
    path: /api/v1/courses/565/pages/collaborative-project-team-sign-up
    method: POST
    data_selector: data
    params: {}
- name: enrollment_updated
  endpoint:
    path: /api/v1/courses/565/pages/collaborative-project-team-sign-up
    method: POST
    data_selector: data
    params: {}
- name: group_category_created
  endpoint:
    path: /api/v1/courses/565/pages/collaborative-project-team-sign-up
    method: POST
    data_selector: data
    params: {}
- name: group_created
  endpoint:
    path: /api/v1/courses/565/pages/collaborative-project-team-sign-up
    method: POST
    data_selector: data
    params: {}
- name: group_membership_created
  endpoint:
    path: /api/v1/courses/565/pages/collaborative-project-team-sign-up
    method: GET
    data_selector: data
    params: {}
- name: submission_created
  endpoint:
    path: /api/v1/courses/565/pages/collaborative-project-team-sign-up
    method: GET
    data_selector: data
    params: {}
- name: submission_updated
  endpoint:
    path: /api/v1/courses/565/pages/collaborative-project-team-sign-up
    method: GET
    data_selector: data
    params: {}
- name: syllabus_updated
  endpoint:
    path: /api/v1/courses/565/pages/collaborative-project-team-sign-up
    method: GET
    data_selector: data
    params: {}
- name: user_account_association_created
  endpoint:
    path: /api/v1/users
    method: POST
    data_selector: data
    params: {}
- name: wiki_page_created
  endpoint:
    path: /api/v1/wikis
    method: POST
    data_selector: data
    params: {}
- name: wiki_page_updated
  endpoint:
    path: /api/v1/wikis/:id
    method: PUT
    data_selector: data
    params: {}
- name: wiki_page_deleted
  endpoint:
    path: /api/v1/wikis/:id
    method: DELETE
    data_selector: data
    params: {}
- name: discussion_entry_created
  endpoint:
    path: /api/v1/courses/565/discussion_topics
    method: POST
    data_selector: data
    params: {}
- name: discussion_topic_created
  endpoint:
    path: /api/v1/courses/565/discussion_topics
    method: POST
    data_selector: data
    params: {}
- name: grade_change
  endpoint:
    path: /api/v1/courses/565/assignments/355/submissions/48
    method: GET
    data_selector: data
    params: {}
- name: asset_accessed
  endpoint:
    path: /data_service_canvas_asset
    method: GET
    data_selector: data
- name: asset_accessed
  endpoint:
    path: /path/to/asset_accessed
    method: POST
    data_selector: data
    params: {}
- name: asset_accessed
  endpoint:
    path: /api/asset_accessed
    method: POST
    data_selector: data
- name: navigation_event
  endpoint:
    path: /data
    method: POST
    data_selector: data
- name: asset_accessed
  endpoint:
    path: /api/navigation_events
    method: POST
    data_selector: data
- name: asset_accessed
  endpoint:
    path: /path/to/asset_accessed
    method: POST
    data_selector: data
    params: {}
- name: asset_accessed
  endpoint:
    path: /asset_accessed
    method: POST
    data_selector: data
- name: asset_accessed
  endpoint:
    path: /
    method: GET
    data_selector: data
- name: data
  endpoint:
    path: /
    method: GET
    data_selector: data
- name: data
  endpoint:
    path: /
    method: POST
    data_selector: data
- name: asset_accessed
  endpoint:
    path: /api/navigation_events
    method: POST
    data_selector: data
    params: {}
- name: session_logged_in
  endpoint:
    path: /api/v1/sessions/logged_in
    method: GET
- name: session_logged_out
  endpoint:
    path: /api/v1/sessions/logged_out
    method: GET
notes:
- Authentication logs are stored for one year.
- API authentication is done with OAuth2.
- Using the HTTP Authorization header is recommended.
- All API access is over HTTPS.
- OAuth2 Token sent in header is recommended.
- GraphQL endpoint permissions mirror permissions for the REST API.
- id arguments will always take either GraphQL or rest-style ids
- The GraphQL API does not include everything that is currently in the REST API.
- Requests from the selected environment will always return that environment’s data.
- Requests that return multiple items will be paginated to 10 items by default.
- To retrieve additional pages, the returned Link headers should be used.
- Canvas includes a built in dynamic throttling mechanism to prevent a single user
  from abusing the system and causing adverse effects for others.
- The request is signed, and will be denied if any parameters from the upload_params
  response are added, removed or modified.
- Canvas' file management is in a moment of transition.
- The request is signed and will be denied if any parameters from the upload_params
  response are added, removed or modified.
- Canvas adds attributes to links in returned HTML snippets to make it easier for
  API consumers to digest the referenced resources.
- Masquerading is making an API call on behalf of another user.
- Masquerading is making an API call on behalf of another user. It will behave as
  if the target user had made the API call with their own access token.
- To masquerade, add an as_user_id parameter to any request.
- Developer keys issued after Oct 2015 generate tokens with a 1 hour expiration.
- Developer keys issued after Oct 2015 generate tokens with a 1 hour expiration. Applications
  must use refresh tokens to generate new access tokens.
- Canvas uses OAuth2 for authentication and authorization of the Canvas API.
- Access tokens only work in the context of where a tool has been deployed.
- Access tokens must be included as a Bearer token in the Authorization header.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Developer keys are OAuth2 client ID and secret pairs stored in Canvas that allow
  third-party applications to request access to Canvas API endpoints via the OAuth2
  flow.
- Unscoped keys will have access to all Canvas resources available to the authorizing
  user.
- Requires setup of connected app for authentication
- The API uses a Bearer token for authentication
- The assignment_visibility option requires that the Differentiated Assignments course
  feature be turned on.
- Requires admin-level token with the 'Manage SIS' permission for SIS integrations.
- Each authentication provider must include an ‘auth_type’ parameter.
- You cannot update an existing provider to a new authentication type.
- 'BETA: This API endpoint is not finalized, and there could be breaking changes before
  its final release.'
- Some parameters are marked as obsolete.
- Conversations can be filtered by scope.
- Returns a paginated list of active courses for the current user.
- Only those with the 'Manage Files' permission on a course can upload files to the
  course.
- All account calendars are hidden by default, but administrators with the manage_account_calendar_visibility
  permission may set calendars as visible.
- Admins can request all global notifications for the account by passing in an include_all
  parameter.
- Requires the 'manage_account_calendar_visibility' permission on the account.
- Partial match on name/domain are supported
- Distance is always nil, but preserved in the API response for backwards compatibility
- API for accessing account data.
- The account's state can be 'active' or 'deleted'.
- Requires the account lookup scope on the LTI key.
- Only courses are presently supported.
- The call will fail unless the caller has View Announcements permission in all listed
  courses.
- Appointment groups provide a way of creating a bundle of time slots that users can
  sign up for.
- Requires setup of connected app in Canvas
- API for accessing Assignment Group and Assignment information.
- The bulk update is performed in a background job.
- API for accessing assignment information.
- If multi-factor authentication is required when logging in with this authentication
  provider, the account must not have MFA disabled.
- Just In Time provisioning. Valid for all providers except Canvas (which has the
  similar in concept self_registration setting).
- Blueprint templates support associated courses and migrations.
- BlockEditorTemplate API allows you to create, retrieve, update, and delete templates.
- Requires setup of OAuth2 for authentication
- Endpoints require specific context codes for filtering events
- 'A paginated list of collaborations the current user has access to in the context
  of the course provided in the url. NOTE: this only returns ExternalToolCollaboration
  type collaborations.'
- The :user_id parameter can always be replaced with self if the requesting user is
  asking for his/her own information.
- Use the Progress API to track the progress of the export.
- When the export completes, use the Show content export endpoint to retrieve a download
  URL.
- This API resource is not finalized, and there could be breaking changes before its
  final release.
- This API endpoint is not finalized, and there could be breaking changes before its
  final release.
- API for creating, accessing and updating user conversations.
- The primary collection of event objects is paginated, ordered by date descending.
- API for setting extensions on student quiz submissions at the course level
- The extend_from_now and extend_from_end_at parameters are mutually exclusive.
- API for accessing course information.
- DeveloperKeys are also (currently) used for LTI 1.3 registration and OIDC access
- Creating an LTI 1.3 registration is not supported here and should be done via the
  LTI Registration API.
- Custom gradebook columns will be displayed with the other frozen gradebook columns.
- Discussion topics can be created, updated, and deleted via the API.
- The developer key specified in the request URL must be available in the requested
  account or the requested account’s account chain.
- Developer Keys are used for OAuth access to this API.
- May require that the user has posted in the topic to access entries.
- The specified account must be a root account and the caller must have permission
  to manage the account when called on non-root accounts.
- Only a root level admin user can return other users’ enrollments.
- A user can return his/her own enrollments.
- For all actions, the specified account must be a root account and the caller must
  have permission to manage the account.
- Performs the same action as when a user uses the 'help -> report a problem' dialog.
- API for accessing and configuring external tools on accounts and courses.
- Returns a paginated list of external tools for the current context.
- Manage optional features in Canvas.
- Deprecated feature locking_account_id field; its value is always null.
- FeatureFlags previously had a locking_account_id field; it was never used, and has
  been removed.
- Query audit log of grade change events.
- Primary collection of event objects is paginated, ordered by date descending.
- This API allows for the creation, listing, retrieval, updating, and deletion of
  grading standards.
- Group Categories allow grouping of groups together in canvas.
- Groups created using the '/api/v1/groups/' endpoint will be community groups.
- Returns a paginated list of the user’s recent history.
- Short term JWT tokens that can be used to authenticate with Canvas and other Instructure
  services.
- InstAccess tokens expire after one hour.
- 'There are built-in group categories: ''communities'', ''student_organized'', and
  ''imported''.'
- JWTs have no value or use directly against the Canvas API, and expire after one
  hour
- Returns a paginated list of group categories in a context. The list returned depends
  on the permissions of the current user and the specified collaboration state.
- Only community groups can be made public.
- Certain types of groups have special role designations.
- 'A LineItem object looks like: {"id": "http://institution.canvas.com/api/lti/courses/5/line_items/2",
  "scoreMaximum": 50, "label": "50", "tag": "50", "resourceId": "50", "resourceLinkId":
  "50"}'
- History entries are returned in descending order, newest to oldest.
- The per_page pagination argument is not supported and the number of history entries
  returned per page will vary.
- Creates live assessment results and adds them to a live assessment
- This endpoint is cached for 10 minutes!
- 'BETA: This API resource is not finalized, and there could be breaking changes before
  its final release.'
- Resource Links are usually created by the tool via LTI Deep Linking.
- Changing existing links may result in launch errors.
- Returns media objects created by the user making the request.
- API for creating and viewing user logins under an account
- Canvas may omit module items if deemed too numerous to return inline.
- Use of this API requires the manage_lti_add and manage_assignments_add permissions.
- Resource Links are usually managed by the tool that created them via LTI Deep Linking.
- Requires JWT OAuth2 Access Tokens with the https://purl.imsglobal.org/spec/lti-nrps/scope/contextmembership.readonly
  scope
- Response Content-Type is application/vnd.ims.lti-nrps.v2.membershipcontainer+json
- By excluding 'sources' and 'tracks', the API will not need to query kaltura, which
  greatly speeds up its response.
- Quiz items can be retrieved (GET), but some types are restricted to only that functionality.
- Quiz Items can be among several types as described here.
- Stimulus items can only be retrieved with the API.
- Requires LTI Advantage (JWT OAuth2) tokens with the https://purl.imsglobal.org/spec/lti/scope/noticehandlers
  scope.
- Must use JWT access tokens with this API.
- Learning outcome groups organize outcomes within a context.
- An outcome can be linked into a context multiple times, but only once in a particular
  group.
- API for accessing learning outcome results
- If defaults are requested, then color and mastery level defaults will be added to
  outcome ratings in the result. This will only take effect if the Account Level Mastery
  Scales FF is DISABLED
- Most Pages API endpoints accept identification of the Page as either a URL or an
  ID.
- The source group must be either global, from the same context as this outcome group,
  or from an associated account.
- The source group cannot be the root outcome group of its context.
- Returns the paginated list of PollSessions in this poll.
- Pages are rich content associated with Courses and Groups in Canvas.
- Quiz Questions API allows listing, retrieving, creating, updating, and deleting
  quiz questions.
- Create or update account-level proficiency ratings. These ratings will apply to
  all sub-accounts, unless they have their own account-level proficiency ratings defined.
- Returns a list of all available reports.
- Defaults to retrieving only the most recent submissions unless specified.
- API for querying the progress of asynchronous API operations.
- Retrieve assignment-overridden dates for Classic Quizzes
- On success, the response will be 204 No Content with an empty body.
- Get a list of all the question records for this quiz submission.
- Contains meta information for pagination.
- API for managing account- and course-level roles, and their associated permissions.
- Send a message to unsubmitted or submitted users for the quiz.
- Must use JWT access tokens with this API
- Score object requires userId, scoreGiven, scoreMaximum, and timestamp.
- A submission record will be created for the associated assignment when gradingProgress
  is set to FullyGraded or PendingManual.
- Returns a url pointing to the Result.
- A paginated list of the list of sections for this course.
- Returns a list of Section objects.
- Name to share this BrandConfig (theme) as is required.
- Score API for 1EdTech (IMS) Assignment and Grade Services.
- Includes helpers for integration with SIS systems.
- A submission comment with an unknown author will be created when the comment value
  is included.
- It is also possible to submit a file along with this score, which will attach the
  file to the submission that is created.
- A paginated list of the list of sections for this course
- Retrieve a list of published assignments flagged as 'post_to_sis'.
- Disable all assignments flagged as 'post_to_sis' with the option of making it specific
  to a grading period.
- Create a SharedBrandConfig to share a theme with other users.
- All online turn-in submission types are supported in this API.
- The user must have permission to manage grades in the appropriate context (course
  or section).
- Home and Settings tabs are not manageable, and can’t be hidden or moved
- All users are allowed to list their own observees. Administrators can list other
  users’ observees.
- All users are allowed to list their own observers.
- Administrators can list other users’ observers.
- All users are allowed to add their own observees given the observee’s credentials
  or access token.
- API for accessing information on the current and other users.
- The user must be the student, an admin, or a parent observer to access certain endpoints.
- Data is generated from Canvas logs files, not a transactional database.
- Responses may not be complete or wholly accurate.
- all users are allowed to list their own observers. Administrators can list other
  users’ observers.
- all users are allowed to add their own observees, given the observee’s credentials
  or access token are provided.
- Update a submission's what-if score and calculate grades
- Reset the what-if scores for the current user for an entire course and recalculate
  grades
- Grade calculation is a costly operation, so this API should be used sparingly.
- All timestamps are sent and returned in ISO 8601 format.
- Standard CSV rules apply (including adherence to the CSV RFC 4180 format)
- All text should be UTF-8 encoded.
- The tool installs itself using a registration token to access the registration REST
  JSON service.
- Default to UTC time zone unless specified.
- Tools should validate the request is actually coming from Canvas using Canvas' public
  JWKs.
- Tools must validate that the request is coming from Canvas.
- The tool uses a registration token to access the registration REST JSON service.
- The tool should show a UI that guides the user through setting up a registration.
- Tools must validate the request is actually coming from Canvas using Canvas' public
  JWKs.
- Canvas' public keys are environment-specific.
- Tools wishing to implement the Platform Storage spec are required to use the new
  domain for the public JWKs endpoint.
- Deep linking is supported in the LTI 1.1 Outcomes Service and LTI Advantage specifications.
- Some placements support deep linking with LTI 1.3/Advantage tools.
- Uses url to specify the lti launch point
- mediaType specifies that it is an lti launch
- Includes multiple tags to augment the submission details such as submittedAt, prioritizeNonToolGrade,
  and needsAdditionalReview.
- Requires implementation of additional authentication systems.
- Results in non-interoperable integrations.
- If using Canvas APIs to sync entire accounts, can be slow for large accounts due
  to API throttling and the sheer volume of requests being made.
- Reports can take hours to generate for large accounts; breaking into many smaller
  reports broken by term or object is recommended.
- Canvas Data is not updated in real-time.
- Canvas REST API access is not required (i.e. no additional authorization UI)
- 'Unidirectional: cannot push new enrollments to Canvas'
- Accessing Canvas API's requires an institution to issue a Developer Key.
- Access token issued to access LTI advantage services will not work to access REST
  APIs.
- Messages sent by a tool that has been launched from a Canvas mobile app will not
  receive any response messages.
- Uses OAuth2 with refresh token — requires setup of connected app in Canvas
- Use LTI Advantage token for authentication.
- Notice handler endpoint must be public, without any authentication.
- Canvas does not retry delivery of a notice if the notice handler is unavailable.
- Deep Linking is supported in the LTI 1.1 Outcomes Service and LTI Advantage specifications.
- Uses LTI 1.1 for content-item configuration
- Must have knowledge of the Canvas course_id/group_id or context_memberships_url
- URL for user navigation should be over SSL (https) to prevent security warnings.
- Canvas does not support Deep Linking from this placement
- There is no 'resource' context, only course context
- The feature flag top_navigation_placement needs to be enabled.
- The tool must be added to the allow list for the placement either by Global Developer
  Key ID or by the Launch Domain.
- The tool is configured with a placement entry for top_navigation.
- This placement does not provide any course or resource level context in the Launch
- This placement does not provide any course or resource level context in the Launch.
- This is primarily a one-way launch. Returning data to Canvas requires using Canvas
  API.
- Domain and URL matching are not enforced for top_navigation launches.
- It is recommended that these URLs be over SSL (https).
- Allows Canvas to have a full copy of the file, which may be of importance for auditing
  or other administrative purposes.
- Allows students to choose whether or not they want to use the tool to submit.
- Files can be checked for plagiarism by tools that use the Plagiarism Detection Platform.
- Integrates into the native Canvas submission workflow that students are already
  familiar with.
- Requires UI interactions to generate content. To generate content server-to-server,
  use of Canvas API is required.
- Requires support for IMS Common Cartridge or Thin Common Cartridge by the tool.
- Tools must provide a download URL that is reachable by Canvas.
- External tools can be configured to be selectable as an LTI resource link during
  module item creation.
- Only one LTI resource can be returned at a time.
- Assignment selection placement is enabled by default in Canvas for LTI 1.1.
- Placement will only be enabled for LTI 1.3 if listed in the placements in the JSON
  configuration.
- For configuration examples and links to the specification, please refer to the LTI
  Deep Linking documentation.
- TPs leveraging the new plagiarism detection platform must go through the standard
  LTI2 registration flow, with some additional steps along the way.
- Canvas will automatically create a subscription on behalf of the tool for a submissions
  webhook, allowing the TP to be notified when a submission has been made.
- Canvas requires the tool provider to use JWT access token for requests.
- Domain and URL matching are not enforced for user navigation links.
- Recommended to use SSL (https) for user navigation links.
- Canvas does not support Deep Linking from this placement.
- The tool that will use the placement must be added to the allow list for the placement
  either by Global Developer Key ID or by the Launch Domain.
- Webhooks from Canvas are your way to know that a change has taken place.
- Avoid creating multiple identical subscriptions.
- JWT access tokens are only valid for tools who register as described in section
  1 of this document.
- It is recommended that URLs be over SSL (https).
- Live Events should not be used for applications that need their data immediately
  and as up-to-date as possible.
- If a customer's HTTPS service experiences an outage, the events will not be delivered
  until the service is recovered.
- Common failures include HTTP 4xx or 5xx errors, suggesting some part of your endpoint's
  infrastructure has rejected requests due to authorization or load issues, or outages.
- Grades cannot be applied to editor content; use the assignment_selection placement
  if grades are desired.
- Requires UI interactions to generate content.
- Caliper live events are Canvas live events transformed into Caliper format.
- Each event consists of a JSON payload with a defined structure.
- Event data is not aggregated over time and should not be used as a single source
  for your data warehouse.
- Events are delivered in a 'best-effort' fashion.
- Placement is enabled by default in Canvas for LTI 1.1.
- Tools must support Deep Linking.
- This placement is enabled by default in Canvas for LTI 1.1.
- Only LTI links are allowed.
- Timestamps will be in ISO8601 format, including an offset.
- External tools can be configured to appear as a collaboration provider.
- asset_accessed events are triggered for viewing various objects in Canvas.
- Payload includes metadata and body information about the asset.
- Canvas will automatically create a subscription on behalf of the tool for a submissions
  webhook.
- Some objects like Contact may return nulls in deeply nested fields
- Tools configured will be available for 'File Upload' or 'Text Entry' submission
  types.
- Webhook transmission order is not guaranteed.
- The API emits events for assignment and assignment group creation.
- Canvas will create a Tool Setting for the TP associated with the assignment when
  the Canvas.placements.similarityDetection launch occurs for the first time.
- When using the update endpoint the request body should contain JSON defining the
  key/value pairs the TP wishes Canvas to store in the Tool Setting.
- The event is emitted anytime an assignment is updated by an end user or API request.
- We cannot guarantee the transmission order of webhooks.
- Timestamps will be in ISO8601 format, including an offset. Be sure to take that
  into account when parsing.
- JWT access tokens allow Tool Providers to make Canvas API calls on behalf of a tool
  itself rather than a specific Canvas user.
- Event data is not aggregated over time.
- Triggered when a variety of assets are viewed.
- Triggered when a group is modified.
- Triggered when an assignment has been modified.
- Timestamps will be in ISO8601 format, including an offset. Be sure to take that
  into account when parsing, since it’s unspecified which offset timestamps will use.
- Timestamps will be in ISO8601 format, including an offset. Be sure to take that
  into account when parsing, since it’s unspecified which offset timestamps will use,
  and the offset may even change between different timestamps within a single event.
- Event is emitted anytime a user submits a quiz assignment in Canvas.
- Some objects like Page may return truncated fields.
- The body of the new page will be truncated to only include the first 8192 characters.
- Some objects may return nulls in deeply nested fields
- Use appropriate course_id and discussion_topic_id when calling the endpoints.
- Triggered anytime a grade is created or modified.
- Payload includes navigation events with various attributes including actor, object,
  and session details.
- Payload includes detailed event information.
- Payload includes detailed navigation event information.
- Payload includes navigation events with various attributes such as actor, object,
  and extensions.
- Payload includes details about navigation events in the Canvas LMS.
- Payloads follow the caliper specification.
- Only changes to fields included in the body of the event payload will emit the updated
  event.
- Payload includes various attributes related to navigation events.
- Use of context_type is essential for understanding the action context.
- The body field for new pages is limited to the first 8192 characters.
- This documentation is generated directly from the Canvas LMS source code, available
  on Github.
- Event emitted when a new discussion topic is created.
- Payload includes detailed event data
- Payload contains detailed event data including actor, action, object, and context
  information.
errors:
- '403 Forbidden (Rate Limit Exceeded): Your application should be prepared for this
  error, and retry the request at a later time.'
- '301 Moved Permanently: Follow the Location header for redirect.'
- '201 Created: Confirm the upload''s success.'
- '301 Moved Permanently: The request was redirected.'
- '201 Created: The upload has been complete.'
- '401 Unauthorized: Perform the OAuth flow again to receive a new token if the token
  is deleted or expires.'
- '401 Unauthorized: Check the WWW-Authenticate header for more details.'
- '401 Unauthorized: Token expired or not valid.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'unauthorized_client: Developer key not enabled for the requested account'
- '401 Unauthorized: Recheck token'
- '400 Bad Request: Check the request parameters for correctness.'
- '404 Not Found: Ensure the course ID is valid.'
- '401 Unauthorized: Recheck API token or permissions'
- '404 Not Found: Ensure the conversation ID is correct.'
- '400 Bad Request: Check that required fields are provided.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '404 Not Found: The requested account does not exist.'
- '403 Forbidden: You do not have permission to access this account.'
- '400 Bad Request: Ensure context_codes are valid and permission is granted.'
- '403 Forbidden: if you are not allowed to extend assignments for this course'
- '400 Bad Request: if any of the extensions are invalid'
- '403 Forbidden: if you are not allowed to extend quizzes for this course'
- '403 Forbidden: require_initial_post'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: User does not have permission to update accommodations'
- '404 Not Found: The course or assignment was not found'
- '400 Bad Request: Validation error (e.g., invalid JSON, missing user IDs)'
- '400 Bad Request: if the specified report type or format is invalid'
- '409 Conflict: if a quiz report of the specified type is already being generated'
- '200 OK: Accommodations were processed with some successes and failures'
- '400 Bad Request: if the specified report type is invalid'
- '204 No Content: if your request was accepted'
- '422 Unprocessable Entity: if the report is not being generated or can not be aborted
  at this stage'
- '422: user not found in Canvas or is not a student'
- '400: timestamp is earlier than the updated_at time of the Result'
- '422: scoreMaximum must be present if scoreGiven is present.'
- 422 if user not found in Canvas or is not a student.
- 400 if the timestamp is earlier than the updated_at time of the Result.
- 422 if scoreMaximum is not present when scoreGiven is present.
- '400: Submission type not allowed'
- '401: Unauthorized access - check your authentication'
- '401 Unauthorized: Ensure the registration token is included in the Authorization
  header.'
- '400: <parameter> is missing'
- '401: Invalid Developer Key'
- '404: The specified resource does not exist.'
- Throttle API calls or reduce frequency
- Reports can take hours to generate for large accounts
- '422: This course has concluded. AGS requests will no longer be accepted for this
  course.'
- API throttling may slow down synchronization for large accounts.
- Reports can take hours to generate for large accounts.
- 'Unauthorized: Ensure proper permissions are set for tool access.'
- Tools cannot use LTI grading services to sync grades.
- If the tool wants to update/alter the submission, the student must resubmit the
  new version.
- HTTP 4xx or 5xx errors, suggesting some part of your endpoint's infrastructure has
  rejected requests due to authorization or load issues, or outages
- Timeout errors, suggesting your endpoint's HTTP server may be down or overloaded,
  or there is a network misconfiguration
- SSL/certificate errors
- Only one LTI resource can be returned at a time.
- Tools cannot synchronize grades and submissions back to the course gradebook.
- Timeout errors, suggesting your endpoint's HTTP server may be down or overloaded,
  or there is a network misconfiguration.
- Event delivery failure may result in lost events.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - LTI developer key
  - public JWK
  - NamedCredential
  - TokensController
  - AccountCalendarsApiController
  - AccountNotificationsController
  - AuthenticationProvider
  - SSOSettings
  - Authorization
  - Admin
  - Access Tokens
  - LtiDeepLinkingRequest
  - Developer Key
  - LTI Tool
  - $com.instructure.PostMessageToken
  - PostMessageToken
  - AccessTokens
  - OAuth2
client:
  base_url: https://<canvas>
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
