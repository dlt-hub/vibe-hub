resources:
- name: main
  endpoint:
    path: /
    method: GET
    data_selector: tableData
- name: batch_operations
  endpoint:
    path: /api/batch-operations
    method: GET
    data_selector: operations
    params: {}
- name: undo-redo
  endpoint:
    path: /guide/undo-redo
    method: GET
    data_selector: actions
    params: {}
- name: sorting_data
  endpoint:
    path: /api/sorting
    method: POST
    data_selector: data
    params:
      sort_order: ascending
- name: built_in_functions
  endpoint:
    path: /api/built-in-functions
    method: GET
    data_selector: functions
- name: available_functions
  endpoint:
    path: /api/available-functions
    method: GET
    data_selector: functions
- name: logical_functions
  endpoint:
    path: /built-in-functions/logical
    method: GET
    data_selector: functions
    params: {}
- name: lookup_reference_functions
  endpoint:
    path: /built-in-functions/lookup-and-reference
    method: GET
    data_selector: functions
    params: {}
- name: math_trigonometry_functions
  endpoint:
    path: /built-in-functions/math-and-trigonometry
    method: GET
    data_selector: functions
    params: {}
- name: matrix_functions
  endpoint:
    path: /built-in-functions/matrix-functions
    method: GET
    data_selector: functions
    params: {}
- name: operator_functions
  endpoint:
    path: /built-in-functions/operator
    method: GET
    data_selector: functions
    params: {}
- name: statistical_functions
  endpoint:
    path: /guide/list-of-available-functions/statistical
    method: GET
    data_selector: functions
    params: {}
- name: text_functions
  endpoint:
    path: /guide/list-of-available-functions/text
    method: GET
    data_selector: functions
    params: {}
- name: named_expressions
  endpoint:
    path: /named-expressions
    method: POST
    data_selector: expressions
- name: array_formulas
  endpoint:
    path: /guide/arrays.html
    method: GET
    data_selector: content
    params: {}
- name: array_arithmetic_mode
  endpoint:
    path: /guide/arrays.html#array-arithmetic-mode
    method: GET
    data_selector: content
    params: {}
- name: dateFormats
  endpoint:
    path: /api/interfaces/configparams.html#dateformats
    method: GET
- name: timeFormats
  endpoint:
    path: /api/interfaces/configparams.html#timeformats
    method: GET
- name: nullYear
  endpoint:
    path: /api/interfaces/configparams.html#nullyear
    method: GET
- name: parseDateTime
  endpoint:
    path: /api/interfaces/configparams.html#parsedatetime
    method: GET
- name: stringifyDateTime
  endpoint:
    path: /api/interfaces/configparams.html#stringifydatetime
    method: GET
- name: stringifyDuration
  endpoint:
    path: /api/interfaces/configparams.html#stringifyduration
    method: GET
- name: custom_function
  endpoint:
    path: /guide/custom-functions.html
    method: GET
    data_selector: contents
- name: MY_FUNCTION
  endpoint:
    path: /myFunctionMethod
    method: POST
    data_selector: parameters
    params: {}
- name: getAllSheetsSerialized
  endpoint:
    path: /getAllSheetsSerialized
    method: GET
    data_selector: records
- name: getAllSheetsValues
  endpoint:
    path: /getAllSheetsValues
    method: GET
    data_selector: records
- name: getSheetDimensions
  endpoint:
    path: /getSheetDimensions
    method: GET
    data_selector: records
- name: getSheetFormulas
  endpoint:
    path: /getSheetFormulas
    method: GET
    data_selector: records
- name: getSheetId
  endpoint:
    path: /getSheetId
    method: GET
    data_selector: records
- name: getSheetName
  endpoint:
    path: /getSheetName
    method: GET
    data_selector: records
- name: getSheetNames
  endpoint:
    path: /getSheetNames
    method: GET
    data_selector: records
- name: getSheetSerialized
  endpoint:
    path: /getSheetSerialized
    method: GET
    data_selector: records
- name: getSheetValues
  endpoint:
    path: /getSheetValues
    method: GET
    data_selector: records
- name: isItPossibleToAddSheet
  endpoint:
    path: /isItPossibleToAddSheet
    method: GET
    data_selector: records
- name: isItPossibleToClearSheet
  endpoint:
    path: /isItPossibleToClearSheet
    method: GET
    data_selector: records
- name: isItPossibleToRemoveSheet
  endpoint:
    path: /isItPossibleToRemoveSheet
    method: GET
    data_selector: records
- name: isItPossibleToRenameSheet
  endpoint:
    path: /isItPossibleToRenameSheet
    method: GET
    data_selector: records
- name: isItPossibleToReplaceSheetContent
  endpoint:
    path: /isItPossibleToReplaceSheetContent
    method: GET
    data_selector: records
- name: removeSheet
  endpoint:
    path: /removeSheet
    method: POST
    data_selector: records
- name: renameSheet
  endpoint:
    path: /renameSheet
    method: POST
    data_selector: records
- name: setSheetContent
  endpoint:
    path: /setSheetContent
    method: POST
    data_selector: ExportedChange
    params: {}
- name: getFillRangeData
  endpoint:
    path: /getFillRangeData
    method: POST
    data_selector: RawCellContent
    params: {}
- name: getRangeFormulas
  endpoint:
    path: /getRangeFormulas
    method: POST
    data_selector: string | undefined
    params: {}
- name: getRangeSerialized
  endpoint:
    path: /getRangeSerialized
    method: POST
    data_selector: RawCellContent
    params: {}
- name: getRangeValues
  endpoint:
    path: /getRangeValues
    method: POST
    data_selector: CellValue
    params: {}
- name: addRows
  endpoint:
    path: /addRows
    method: POST
    data_selector: ExportedChange
    params: {}
- name: isItPossibleToAddRows
  endpoint:
    path: /isItPossibleToAddRows
    method: POST
    data_selector: boolean
    params: {}
- name: isItPossibleToMoveRows
  endpoint:
    path: /isItPossibleToMoveRows
    method: POST
    data_selector: boolean
    params: {}
- name: isItPossibleToRemoveRows
  endpoint:
    path: /isItPossibleToRemoveRows
    method: POST
    data_selector: boolean
    params: {}
- name: isItPossibleToSetRowOrder
  endpoint:
    path: /isItPossibleToSetRowOrder
    method: POST
    data_selector: boolean
    params: {}
- name: isItPossibleToSwapRowIndexes
  endpoint:
    path: /isItPossibleToSwapRowIndexes
    method: POST
    data_selector: boolean
    params: {}
- name: moveRows
  endpoint:
    path: /moveRows
    method: POST
    data_selector: ExportedChange
    params: {}
- name: removeRows
  endpoint:
    path: /removeRows
    method: POST
    data_selector: ExportedChange[]
    params: {}
- name: setRowOrder
  endpoint:
    path: /setRowOrder
    method: POST
    data_selector: ExportedChange[]
    params: {}
- name: swapRowIndexes
  endpoint:
    path: /swapRowIndexes
    method: POST
    data_selector: ExportedChange[]
    params: {}
- name: addColumns
  endpoint:
    path: /addColumns
    method: POST
    data_selector: ExportedChange[]
    params: {}
- name: isItPossibleToAddColumns
  endpoint:
    path: /isItPossibleToAddColumns
    method: GET
    data_selector: boolean
    params: {}
- name: isItPossibleToMoveColumns
  endpoint:
    path: /isItPossibleToMoveColumns
    method: GET
    data_selector: boolean
    params: {}
- name: isItPossibleToRemoveColumns
  endpoint:
    path: /isItPossibleToRemoveColumns
    method: GET
    data_selector: boolean
    params: {}
- name: isItPossibleToSetColumnOrder
  endpoint:
    path: /isItPossibleToSetColumnOrder
    method: GET
    data_selector: boolean
    params: {}
- name: isItPossibleToSwapColumnIndexes
  endpoint:
    path: /isItPossibleToSwapColumnIndexes
    method: GET
    data_selector: boolean
    params: {}
- name: moveColumns
  endpoint:
    path: /moveColumns
    method: POST
    data_selector: ExportedChange[]
    params: {}
- name: removeColumns
  endpoint:
    path: /removeColumns
    method: POST
    data_selector: ExportedChange[]
    params: {}
- name: setColumnOrder
  endpoint:
    path: /setColumnOrder
    method: POST
    data_selector: ExportedChange[]
    params: {}
- name: swapColumnIndexes
  endpoint:
    path: /swapColumnIndexes
    method: POST
    data_selector: ExportedChange[]
    params: {}
- name: doesCellHaveFormula
  endpoint:
    path: /doesCellHaveFormula
    method: GET
    data_selector: boolean
    params: {}
- name: doesCellHaveSimpleValue
  endpoint:
    path: /doesCellHaveSimpleValue
    method: GET
    data_selector: boolean
    params: {}
- name: getCellFormula
  endpoint:
    path: /getCellFormula
    method: GET
    data_selector: string | undefined
    params: {}
- name: getCellHyperlink
  endpoint:
    path: /getCellHyperlink
    method: GET
    data_selector: string | undefined
    params: {}
- name: getCellSerialized
  endpoint:
    path: /getCellSerialized
    method: GET
    data_selector: RawCellContent
    params: {}
- name: getCellType
  endpoint:
    path: /getCellType
    method: GET
    data_selector: CellType
    params: {}
- name: getCellValue
  endpoint:
    path: /getCellValue
    method: GET
    data_selector: CellValue
    params: {}
- name: getCellValueDetailedType
  endpoint:
    path: /getCellValueDetailedType
    method: GET
    data_selector: CellValueDetailedType
    params: {}
- name: getCellValueFormat
  endpoint:
    path: /getCellValueFormat
    method: GET
    data_selector: FormatInfo
- name: getCellValueType
  endpoint:
    path: /getCellValueType
    method: GET
    data_selector: CellValueType
- name: isCellEmpty
  endpoint:
    path: /isCellEmpty
    method: GET
    data_selector: boolean
- name: isCellPartOfArray
  endpoint:
    path: /isCellPartOfArray
    method: GET
    data_selector: boolean
- name: isItPossibleToMoveCells
  endpoint:
    path: /isItPossibleToMoveCells
    method: GET
    data_selector: boolean
- name: isItPossibleToSetCellContents
  endpoint:
    path: /isItPossibleToSetCellContents
    method: GET
    data_selector: boolean
- name: moveCells
  endpoint:
    path: /moveCells
    method: POST
    data_selector: ExportedChange[]
- name: setCellContents
  endpoint:
    path: /setCellContents
    method: POST
    data_selector: ExportedChange[]
- name: addNamedExpression
  endpoint:
    path: /addNamedExpression
    method: POST
    data_selector: ExportedChange[]
- name: changeNamedExpression
  endpoint:
    path: /changeNamedExpression
    method: POST
    data_selector: ExportedChange[]
- name: getAllNamedExpressionsSerialized
  endpoint:
    path: /getAllNamedExpressionsSerialized
    method: GET
    data_selector: SerializedNamedExpression
- name: getNamedExpression
  endpoint:
    path: /getNamedExpression
    method: GET
    data_selector: NamedExpression
- name: getNamedExpressionFormula
  endpoint:
    path: /getNamedExpressionFormula
    method: GET
    data_selector: string
- name: getNamedExpressionValue
  endpoint:
    path: /getNamedExpressionValue
    method: GET
    data_selector: CellValue
- name: isItPossibleToAddNamedExpression
  endpoint:
    path: /isItPossibleToAddNamedExpression
    method: GET
    data_selector: boolean
- name: isItPossibleToChangeNamedExpression
  endpoint:
    path: /isItPossibleToChangeNamedExpression
    method: GET
    data_selector: boolean
- name: isItPossibleToRemoveNamedExpression
  endpoint:
    path: /isItPossibleToRemoveNamedExpression
    method: GET
    data_selector: boolean
- name: listNamedExpressions
  endpoint:
    path: /listNamedExpressions
    method: GET
    data_selector: string[]
- name: removeNamedExpression
  endpoint:
    path: /removeNamedExpression
    method: POST
    data_selector: ExportedChange[]
- name: calculateFormula
  endpoint:
    path: /calculateFormula
    method: POST
    data_selector: CellValue
- name: getCellDependents
  endpoint:
    path: /getCellDependents
    method: GET
    data_selector: '[SimpleCellRange | SimpleCellAddress]'
- name: getCellPrecedents
  endpoint:
    path: /getCellPrecedents
    method: GET
- name: getNamedExpressionsFromFormula
  endpoint:
    path: /getNamedExpressionsFromFormula
    method: GET
- name: normalizeFormula
  endpoint:
    path: /normalizeFormula
    method: GET
- name: numberToDate
  endpoint:
    path: /numberToDate
    method: GET
- name: numberToDateTime
  endpoint:
    path: /numberToDateTime
    method: GET
- name: numberToTime
  endpoint:
    path: /numberToTime
    method: GET
- name: simpleCellAddressFromString
  endpoint:
    path: /simpleCellAddressFromString
    method: GET
- name: simpleCellAddressToString
  endpoint:
    path: /simpleCellAddressToString
    method: GET
- name: simpleCellRangeFromString
  endpoint:
    path: /simpleCellRangeFromString
    method: GET
- name: simpleCellRangeToString
  endpoint:
    path: /simpleCellRangeToString
    method: GET
- name: validateFormula
  endpoint:
    path: /validateFormula
    method: GET
- name: clearClipboard
  endpoint:
    path: /clearClipboard
    method: GET
- name: copy
  endpoint:
    path: /copy
    method: GET
- name: function_plugins
  endpoint:
    path: /getAllFunctionPlugins
    method: GET
    data_selector: FunctionPluginDefinition[]
- name: function_plugin
  endpoint:
    path: /getFunctionPlugin
    method: GET
    data_selector: FunctionPluginDefinition | undefined
- name: registered_function_names
  endpoint:
    path: /getRegisteredFunctionNames
    method: GET
    data_selector: string[]
- name: registered_languages_codes
  endpoint:
    path: /getRegisteredLanguagesCodes
    method: GET
    data_selector: string[]
- name: evaluationResumed
  endpoint:
    path: /api/evaluationResumed
    method: GET
    data_selector: changes
    params: {}
- name: evaluationSuspended
  endpoint:
    path: /api/evaluationSuspended
    method: GET
    data_selector: changes
    params: {}
- name: namedExpressionAdded
  endpoint:
    path: /api/namedExpressionAdded
    method: GET
    data_selector: namedExpressionName
    params: {}
- name: namedExpressionRemoved
  endpoint:
    path: /api/namedExpressionRemoved
    method: GET
    data_selector: namedExpressionName
    params: {}
- name: sheetAdded
  endpoint:
    path: /api/sheetAdded
    method: GET
    data_selector: addedSheetDisplayName
    params: {}
- name: sheetRemoved
  endpoint:
    path: /api/sheetRemoved
    method: GET
    data_selector: removedSheetDisplayName
    params: {}
- name: sheetRenamed
  endpoint:
    path: /api/sheetRenamed
    method: GET
    data_selector: oldDisplayName
    params: {}
- name: valuesUpdated
  endpoint:
    path: /api/valuesUpdated
    method: GET
    data_selector: changes
    params: {}
- name: NamedExpression
  endpoint:
    path: /api/classes/hyperformula.html
    method: GET
    data_selector: properties
- name: ProtectedFunctionTranslationError
  endpoint:
    path: /api/classes/protectedfunctiontranslationerror.html
    method: GET
    data_selector: properties
    params: {}
notes:
- HyperFormula is a headless spreadsheet built in TypeScript, serving as both a parser
  and evaluator of spreadsheet formulas.
- Uses HyperFormula for calculations.
- The copied or cut data is stored as a memory reference, not directly in the system
  clipboard.
- By default, you can undo 20 actions. The undoLimit can be changed.
- Undo and redo work together as a synced pair.
- Supports sorting of rows and columns.
- Requires valid permissions to access sorting features.
- For better compatibility with other spreadsheet software, HyperFormula stores date
  and time values as numbers.
- HyperFormula has a collection of 395 functions.
- The return value of this function is compliant with the OpenDocument standard.
- Compatibility notes apply.
- Dynamic ranges are supported through functions such as INDEX and OFFSET.
- HyperFormula doesn't support relative references inside named expressions.
- Inline arrays are not recomputed after initialization.
- Due to the configuration of separators, it might not be fully compatible with formulas
  coming from other spreadsheet software.
- Currently, HyperFormula supports 17 languages, with British English as the default.
- By default, HyperFormula uses the European date and time formats.
- For accuracy and performance, HyperFormula needs to process cells in a correct and
  optimal order.
- The complete implementation of custom functions is included in the demo.
- 'Release date: October 22, 2020'
- The usage of the internal clipboard is described thoroughly in the Clipboard Operations
  guide.
- For more information, see the Undo-Redo guide.
- FunctionPlugins must be registered prior to the creation of HyperFormula instances
  in which they are used.
- Some objects like Contact may return nulls in deeply nested fields
errors:
- 'SORTING_NOT_POSSIBLE: Check if the sorting order is valid.'
- '401 Unauthorized: Ensure proper authentication is provided.'
- 'INVALID_EXPRESSION: Check the syntax of your expression.'
- 'NAME_ALREADY_EXISTS: Expression name must be unique within the scope.'
- 'ExpectedValueOfTypeError: if source is of wrong type'
- 'SheetsNotEqual: if range provided has distinct sheet numbers for start and end'
- 'NoSheetWithIdError: when the given sheet ID does not exist'
- 'NoOperationToRedoError: when there is no operation running that can be re-done'
- 'NothingToPasteError: when clipboard is empty'
- 'TargetLocationHasArrayError: when the selected target area has array inside'
- 'SheetSizeLimitExceededError: when performing this operation would result in sheet
  size limits exceeding'
- 'EvaluationSuspendedError: when the evaluation is suspended'
- 'InvalidArgumentsError: Error thrown when the given arguments are invalid'
- 'ExpectedValueOfTypeError: Error thrown when the expected value type differs from
  the given value type.'
- 'SheetNameAlreadyTakenError: Error thrown when the sheet of a given name already
  exists.'
- 'NoSheetWithIdError: Error thrown when the sheet of a given ID does not exist'
- 'EvaluationSuspendedError: Error thrown when computations become suspended.'
- Error thrown when the given sheets are not equal.
- 'TargetLocationHasArrayError: Error thrown when selected target location has an
  array.'
- 'NamedExpressionNameIsAlreadyTakenError: Error thrown when the given named expression
  already exists in the workbook and therefore it cannot be added.'
- NamedExpressionNameIsInvalidError
- 'NamedExpressionDoesNotExistError: Error thrown when the given named expression
  does not exist.'
- 'LanguageNotRegisteredError: Error thrown when trying to retrieve not registered
  language'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.hypothetical.com
  auth:
    type: oauth2
    flow: authorization_code
    token_url: https://login.hypothetical.com/oauth/token
    client_id: '{{ dlt.secrets[''hyperformula_client_id''] }}'
    client_secret: '{{ dlt.secrets[''hyperformula_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''hyperformula_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
