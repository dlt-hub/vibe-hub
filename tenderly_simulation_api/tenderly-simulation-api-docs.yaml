resources:
- name: simulate
  endpoint:
    path: /api/v1/account/{accountId}/project/{projectId}/simulate
    method: POST
    data_selector: simulation
    params:
      save: true
      save_if_fails: true
      simulation_type: full
      generate_access_list: false
      source: tenderly-metamask-snap
- name: share_simulation
  endpoint:
    path: /api/v1/account/{accountId}/project/{projectId}/simulations/{simulationId}/share
    method: POST
    data_selector: null
    params: {}
- name: simulate_transaction
  endpoint:
    path: /tenderly_simulateTransaction
    method: POST
    data_selector: params
    params: {}
- name: simulate_transaction
  endpoint:
    path: /tenderly_simulateTransaction
    method: POST
    data_selector: result
    params: {}
- name: Ethereum Mainnet
  endpoint:
    path: /node/rpc-reference/ethereum-mainnet
    method: GET
- name: Ethereum Sepolia
  endpoint:
    path: /node/rpc-reference/ethereum-sepolia
    method: GET
- name: Ethereum Holesky
  endpoint:
    path: /node/rpc-reference/ethereum-holesky
    method: GET
- name: Ethereum Hoodi
  endpoint:
    path: /node/rpc-reference/hoodi
    method: GET
- name: Arbitrum One
  endpoint:
    path: /node/rpc-reference/arbitrum
    method: GET
- name: Arbitrum Nova
  endpoint:
    path: /node/rpc-reference/arbitrum-nova
    method: GET
- name: Arbitrum Sepolia
  endpoint:
    path: /node/rpc-reference/arbitrum-sepolia
    method: GET
- name: Avalanche C-Chain
  endpoint:
    path: /node/rpc-reference/avalanche
    method: GET
- name: Avalanche C-Chain Fuji
  endpoint:
    path: /node/rpc-reference/avalanche-fuji
    method: GET
- name: Linea
  endpoint:
    path: /node/rpc-reference/linea
    method: GET
- name: Linea Sepolia
  endpoint:
    path: /node/rpc-reference/linea-sepolia
    method: GET
- name: Base Mainnet
  endpoint:
    path: /node/rpc-reference/base-mainnet
    method: GET
- name: Base Sepolia
  endpoint:
    path: /node/rpc-reference/base-sepolia
    method: GET
- name: simulate_transaction
  endpoint:
    path: /tenderly_simulateTransaction
    method: POST
    data_selector: params
    params: {}
- name: Virtual TestNets
  endpoint:
    path: /virtual-testnets
    method: GET
    data_selector: data
    params: {}
- name: fund_erc20_balance
  endpoint:
    path: /virtual-testnets/admin-rpc#tenderly_seterc20balance
    method: POST
    data_selector: params
    params: {}
- name: fund_native_balance
  endpoint:
    path: /virtual-testnets/admin-rpc#tenderly_setbalance
    method: POST
    data_selector: params
    params: {}
- name: evm_setNextBlockTimestamp
  endpoint:
    path: /evm_setNextBlockTimestamp
    method: POST
    data_selector: result
    params: {}
- name: evm_increaseTime
  endpoint:
    path: /evm_increaseTime
    method: POST
    data_selector: result
    params: {}
- name: evm_increaseBlocks
  endpoint:
    path: /evm_increaseBlocks
    method: POST
    data_selector: result
    params: {}
- name: eth_sendTransaction
  endpoint:
    path: /eth_sendTransaction
    method: POST
    data_selector: result
    params: {}
- name: eth_createAccessList
  endpoint:
    path: /eth_createAccessList
    method: POST
    data_selector: result
    params: {}
- name: evm_getLatest
  endpoint:
    path: /evm_getLatest
    method: POST
    data_selector: result
    params: {}
- name: tenderly_setBalance
  endpoint:
    path: /tenderly_setBalance
    method: POST
    data_selector: result
    params: {}
- name: tenderly_addBalance
  endpoint:
    path: /tenderly_addBalance
    method: POST
    data_selector: result
    params: {}
- name: tenderly_setErc20Balance
  endpoint:
    path: /tenderly_setErc20Balance
    method: POST
    data_selector: result
    params: {}
- name: tenderly_setStorageAt
  endpoint:
    path: /tenderly_setStorageAt
    method: POST
    data_selector: result
    params: {}
- name: evm_snapshot
  endpoint:
    path: /evm_snapshot
    method: POST
    data_selector: result
    params: {}
- name: evm_revert
  endpoint:
    path: /evm_revert
    method: POST
    data_selector: result
    params: {}
- name: tenderly_setCode
  endpoint:
    path: /tenderly_setCode
    method: POST
    data_selector: result
    params: {}
- name: vMainnet
  endpoint:
    path: /explorer/vnet/47cdac98-cda3-431a-8fce-9f31037a3d0c
    method: GET
    data_selector: data
    params: {}
- name: verification
  endpoint:
    path: /api/v1/account/me/project/project/etherscan/verify/network/8253
    method: GET
- name: public_verification
  endpoint:
    path: /api/v1/account/me/project/project/etherscan/verify/network/8253/public
    method: GET
- name: node_extensions
  endpoint:
    path: /node-extensions
    method: POST
    data_selector: extensions
    params: {}
- name: simulate_transaction
  endpoint:
    path: /api/v1/account/${TENDERLY_ACCOUNT_SLUG}/project/${TENDERLY_PROJECT_SLUG}/simulate
    method: POST
    data_selector: data
    params: {}
- name: simulate_bundle
  endpoint:
    path: /api/v1/account/${TENDERLY_ACCOUNT_SLUG}/project/${TENDERLY_PROJECT_SLUG}/simulate-bundle
    method: POST
    data_selector: simulations
- name: simulate
  endpoint:
    path: /api/v1/account/${TENDERLY_ACCOUNT_SLUG}/project/${TENDERLY_PROJECT_SLUG}/simulate
    method: GET
    data_selector: transaction.transaction_info.asset_changes
- name: simulate-bundle
  endpoint:
    path: /api/v1/account/${TENDERLY_ACCOUNT_SLUG}/project/${TENDERLY_PROJECT_SLUG}/simulate-bundle
    method: GET
    data_selector: transaction.transaction_info.balance_changes
- name: simulate_transaction
  endpoint:
    path: /api/v1/account/{TENDERLY_ACCOUNT_SLUG}/project/{TENDERLY_PROJECT_SLUG}/simulate
    method: POST
    data_selector: data
    params:
      estimate_gas: 'true'
- name: simulation
  endpoint:
    path: /api/v1/account/{account_slug}/project/{project_slug}/simulate
    method: POST
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /developer-explorer/transaction-listing
    method: GET
    data_selector: transactions
- name: contracts
  endpoint:
    path: /developer-explorer/contracts
    method: GET
    data_selector: transactions
- name: alerts
  endpoint:
    path: /alerts/api
    method: GET
    data_selector: alerts
    params: {}
- name: webhook
  endpoint:
    path: /alerts/destinations/webhook
    method: POST
    data_selector: payload
    params: {}
- name: successful_transaction
  endpoint:
    path: /alerts/successful-transaction
    method: POST
- name: failed_transaction
  endpoint:
    path: /alerts/failed-transaction
    method: POST
- name: function_call
  endpoint:
    path: /alerts/function-call
    method: POST
- name: event_emitted
  endpoint:
    path: /alerts/event-emitted
    method: POST
- name: event_parameter
  endpoint:
    path: /alerts/event-parameter
    method: POST
- name: erc20_token_transfer
  endpoint:
    path: /alerts/erc20-token-transfer
    method: POST
- name: allowlisted_callers
  endpoint:
    path: /alerts/allowlisted-callers
    method: POST
- name: blocklisted_callers
  endpoint:
    path: /alerts/blocklisted-callers
    method: POST
- name: balance_change
  endpoint:
    path: /alerts/balance-change
    method: POST
- name: transaction_value
  endpoint:
    path: /alerts/transaction-value
    method: POST
- name: state_change
  endpoint:
    path: /alerts/state-change
    method: POST
- name: view_function
  endpoint:
    path: /alerts/view-function
    method: POST
- name: Ethereum Mainnet
  endpoint:
    path: /
    method: GET
- name: Ethereum Sepolia
  endpoint:
    path: /
    method: GET
- name: Ethereum Holesky
  endpoint:
    path: /
    method: GET
- name: test
  endpoint:
    path: /vnet-github-action
    method: POST
    data_selector: data
    params:
      mode: CI
      access_key: ${{ secrets.TENDERLY_ACCESS_KEY }}
      project_name: ${{ vars.TENDERLY_PROJECT_NAME }}
      account_name: ${{ vars.TENDERLY_ACCOUNT_NAME }}
      testnet_name: Testing
      network_id: 1
      chain_id_prefix: 7357
      public_explorer: true
      verification_visibility: src
      push_on_complete: true
- name: deploy
  endpoint:
    path: /vnet-github-action
    method: POST
    data_selector: data
    params:
      mode: CD
      access_key: ${{ secrets.TENDERLY_ACCESS_KEY }}
      project_name: ${{ vars.TENDERLY_PROJECT_NAME }}
      account_name: ${{ vars.TENDERLY_ACCOUNT_NAME }}
      testnet_name: Staging
      network_id:
      - 1
      - 8453
      public_explorer: true
      verification_visibility: src
      push_on_complete: true
- name: Virtual TestNet
  endpoint:
    path: /virtual-testnets
    method: GET
- name: Node RPC
  endpoint:
    path: /node-rpc
    method: GET
- name: Virtual TestNet
  endpoint:
    path: /reference/api#/operations/createVnet
    method: POST
    data_selector: result
    params: {}
- name: Unlimited Faucet
  endpoint:
    path: /virtual-testnets/unlimited-faucet
    method: POST
    data_selector: result
    params: {}
- name: create_virtual_testnet
  endpoint:
    path: /virtual-testnets/create
    method: POST
- name: send_transaction
  endpoint:
    path: /virtual-testnets/interact/send-transactions
    method: POST
- name: simulate_transaction
  endpoint:
    path: /reference/api#/operations/simulateTx
    method: POST
    data_selector: params
- name: Virtual TestNet
  endpoint:
    path: /virtual-testnets/interact/add-virtual-testnet-to-wallets
    method: POST
    data_selector: network
    params: {}
- name: virtual_contracts
  endpoint:
    path: /virtual-testnets/develop/deploy-contracts
    method: POST
    data_selector: contracts
    params: {}
- name: virtual_networks
  endpoint:
    path: /api/v1/account/me/project/project/vnets
    method: POST
    data_selector: rpcs
    params: {}
- name: snapshot
  endpoint:
    path: /virtual-testnets/admin-rpc#evm_snapshot
    method: POST
    data_selector: result
- name: revert
  endpoint:
    path: /virtual-testnets/admin-rpc#evm_revert
    method: POST
    data_selector: result
- name: tenderly_setCode
  endpoint:
    path: /virtual-testnets/admin-rpc#tenderly_setcode
    method: POST
    data_selector: result
    params: {}
- name: eth_call
  endpoint:
    path: /virtual-testnets/admin-rpc#eth_call
    method: POST
    data_selector: result
    params: {}
- name: evm_setNextBlockTimestamp
  endpoint:
    path: /admin-rpc/evm_setnextblocktimestamp
    method: POST
    data_selector: result
- name: evm_increaseTime
  endpoint:
    path: /admin-rpc/evm_increasetime
    method: POST
    data_selector: result
- name: Virtual TestNet
  endpoint:
    path: /api/virtual-testnet
    method: POST
- name: Foundry CI/CD
  endpoint:
    path: /virtual-testnets/ci-cd/github-actions-foundry
    method: GET
    data_selector: data
- name: Virtual TestNets
  endpoint:
    path: /virtual-testnets
    method: GET
- name: Node RPC
  endpoint:
    path: /node-rpc
    method: GET
- name: virtual_testnet
  endpoint:
    path: /virtual-testnets
    method: POST
    data_selector: data
- name: simulate_transaction
  endpoint:
    path: /node/rpc-reference/ethereum-mainnet/tenderly_simulateTransaction
    method: POST
    data_selector: result
- name: trace_transaction
  endpoint:
    path: /node/guides/trace-json-rpc
    method: POST
    data_selector: result
- name: verify_contract
  endpoint:
    path: /verify/etherscan
    method: POST
- name: Create a TestNet
  endpoint:
    path: /virtual-testnets/create
    method: POST
    data_selector: data
- name: Virtual TestNet
  endpoint:
    path: /virtual-testnets
    method: POST
    data_selector: data
    params:
      id: 73571
- name: Virtual Ethereum Mainnet
  endpoint:
    path: /virtual-testnets
    method: GET
    data_selector: records
    params:
      id: 73571
- name: Virtual Ethereum Mainnet
  endpoint:
    path: /explorer/vnet/47cdac98-cda3-431a-8fce-9f31037a3d0c
    method: GET
    data_selector: chains
    params: {}
- name: vMainnet
  endpoint:
    path: /defineChain
    method: POST
    data_selector: id
    params: {}
- name: Ethereum Mainnet
  endpoint:
    path: https://mainnet.gateway.tenderly.co
    method: GET
- name: Ethereum Sepolia
  endpoint:
    path: https://sepolia.gateway.tenderly.co
    method: GET
- name: Ethereum Holesky
  endpoint:
    path: https://holesky.gateway.tenderly.co
    method: GET
- name: Ethereum Hoodi
  endpoint:
    path: https://hoodi.gateway.tenderly.co
    method: GET
- name: contract_verification
  endpoint:
    path: /verify/etherscan
    method: POST
    data_selector: contracts
- name: verifyMultiCompilerAPI
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: single_transaction_simulation
  endpoint:
    path: /simulations/single-simulations
    method: POST
- name: bundled_transaction_simulation
  endpoint:
    path: /simulations/bundled-simulations
    method: POST
- name: simulation
  endpoint:
    path: /simulations/single-simulations
    method: POST
    data_selector: params
- name: transaction_preview
  endpoint:
    path: /simulations/transaction-preview
    method: POST
    data_selector: simulationResult
- name: simulation
  endpoint:
    path: /api/simulations
    method: GET
    data_selector: data
    params: {}
- name: simulate_transaction
  endpoint:
    path: /api/v1/account/{accountId}/project/{projectId}/simulate
    method: POST
    data_selector: data
    params: {}
- name: share_simulation
  endpoint:
    path: /api/v1/account/{accountId}/project/{projectId}/simulations/{simulationID}/share
    method: POST
    data_selector: data
    params: {}
- name: simulate_transaction
  endpoint:
    path: /simulate
    method: POST
    data_selector: simulation
    params:
      network_id: '1'
      from: senderAddr
      to: contract.address
      input: unsignedTx.data
      gas: 21204
      gas_price: '0'
      value: 0
      save_if_fails: true
- name: simulation
  endpoint:
    path: /api/v1/account/{TENDERLY_ACCOUNT_SLUG}/project/{TENDERLY_PROJECT_SLUG}/simulate
    method: POST
    data_selector: transaction
    params:
      simulation_type: full
      network_id: '1'
      save: false
      save_if_fails: false
      gas: 8000000
      gas_price: 0
      value: 0
- name: simulate
  endpoint:
    path: /simulate
    method: POST
- name: transaction_call
  endpoint:
    path: /simulateTransaction
    method: POST
    data_selector: result
    params: {}
- name: transaction_call
  endpoint:
    path: /tenderly/simulateTransaction
    method: POST
    data_selector: results
    params: {}
- name: transaction_simulation
  endpoint:
    path: /simulator/simulateTransaction
    method: POST
    data_selector: transaction
- name: transaction_simulation
  endpoint:
    path: /simulateTransaction
    method: POST
    data_selector: result
- name: simulate_bundle
  endpoint:
    path: /api/simulator/simulate_bundle
    method: POST
    data_selector: simulatedBundle
    params: {}
- name: simulations
  endpoint:
    path: /simulator/simulateBundle
    method: POST
    data_selector: results
    params:
      blockNumber: '0x103a957'
      transactions:
      - mint2DaiTx()
      - approveUniswapV3RouterTx()
      - swapSomeDaiForWethTx()
      overrides:
        daiAddressMainnet:
          state:
            wards[fakeWardAddressEOA]: '0x0000000000000000000000000000000000000000000000000000000000000001'
- name: contracts
  endpoint:
    path: /contracts
    method: POST
    data_selector: contract
    params: {}
- name: wallets
  endpoint:
    path: /wallets
    method: GET
    data_selector: wallets
- name: single_simulation
  endpoint:
    path: /simulations/single-simulations
    method: POST
- name: bundled_simulation
  endpoint:
    path: /simulations/bundled-simulations
    method: POST
notes:
- Requires setup of access key in header
- Access tokens are required to authenticate access to the Tenderly APIs.
- Uses Tenderly for blockchain exploration
- Node RPC works with the most popular client libraries, smart contract frameworks,
  and UI libraries.
- Web3 Action must be set up as a non-authenticated webhook event before initializing
  Node Extensions.
- Request batching is supported over HTTPS only.
- There is no batching support over WSS currently.
- Simulations are executed on the latest state of the chosen network.
- Simulations via RPC are only available on supported networks.
- 'Set estimate_gas: true in the request to get gas estimates.'
- Tenderly will automatically backfill the latest transactions originating from that
  contract and display them in the Dashboard.
- Alerts can be used as a monitoring tool to track user activity on smart contracts.
- Alerts can inform you about suspicious behavior on your smart contracts or wallets.
- Alerts help you detect errors, security issues, or failed transactions.
- Web3 Actions are rate-limited. The current usage rate limit for the execution of
  Web3 Actions is 100 executions/5 minutes, per user.
- The Sandbox eliminates the need to install anything locally to run your code.
- JavaScript execution time is limited to 60 seconds.
- Tenderly units represent a measure of the total computational resources your applications
  are consuming on Tenderly.
- The CD mode keeps the Virtual TestNet active and you can work with deployed contracts.
- The CI mode pauses the Virtual TestNet after the step completes.
- Ensure configuration of GitHub secrets and environment variables for CI/CD
- Behavior of mainnet contracts that cache `block.number` is unpredictable when running
  Virtual TestNet transactions.
- Transactions on TestNets don’t need to be signed.
- Use the Unlimited Faucet to top up any account.
- Transactions simulations are supported on Virtual TestNets.
- WebSocket access is necessary for using the eth_subscribe and eth_unsubscribe methods.
- It’s recommended to verify your contracts as you deploy them.
- Get Tenderly Access Key and export the value to your terminal environment
- Uses Tenderly access key for authentication.
- Ensure to set up required environment variables for deployment.
- Uses API key for authentication — requires setup of access key in secrets
- Uses API key for authentication — requires setup of API access in Tenderly
- Uses environment variables for configuration.
- Virtual TestNets support the most popular client libraries, smart contract frameworks,
  and UI libraries.
- Uses RPC methods for interacting with Virtual TestNets
- By default, contracts verified on a TestNet are private.
- Check the Public Explorer option for external code visibility.
- Contracts verified on a TestNet are private by default.
- Use a Virtual Testnet for UI development, testing, and dapp demo mode.
- Public Explorer is turned on for the TestNet.
- Uses Testnet RPC and Block Explorer URL
- Uses environment variable for RPC URLs and initial chain setup
- Diagnosing Web3 errors is complex and hard, that’s why development teams have adopted
  War Rooms in response to high-stakes errors and hacks.
- Swap transactions are time-sensitive, they take into account the block.timestamp
  value.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- For verification to succeed, it’s necessary to configure `cbor_metadata=true` in
  `foundry.toml`.
- Contracts deployed to public mainnets and testnets that are verified using the Tenderly-Hardhat
  plugin are public by default.
- You need to set the verification mode to private if you don’t want your verification
  to be publicly visible.
- Tenderly TX Preview Snap simulates your transactions without sending them on-chain.
- Simulate transactions in a virtual environment that is a replica of the real blockchain.
- Uses OAuth2 with refresh token — requires setup of connected app in Tenderly
- Requires setup of OAuth2 credentials in Tenderly dashboard
- Simulate transactions before sending them on-chain to avoid financial losses.
- Wrap every blockchain interaction into a Tenderly simulation for better error handling.
- Full simulations take more time depending on the depth of the call trace.
- Use quick simulations when decoded information isn’t necessary.
- Simulates a transaction as it would execute on the given block, allowing overrides
  of state variables and balances of all accounts.
- Requires Tenderly account with an API key
- Project must be set up in the Tenderly Dashboard
- Requires setup of project in Tenderly
- Contract address must be a valid Ethereum address
- Uses OAuth2 authentication for accessing wallet information.
- Transaction Simulations let you predict a transaction’s exact outcome before it
  is executed on the network.
- Tenderly simulates transactions in a virtual environment that is a replica of the
  real blockchain.
errors:
- '400 Bad Request: Check request payload structure'
- '401 Unauthorized: Ensure the access key is valid'
- '403 Forbidden: Access denied for the provided key'
- '400 Bad Request: Check the request format and parameters'
- '401 Unauthorized: Verify your API access key'
- '404 Not Found: Ensure the endpoint is correct'
- '200 OK: The batch request will return HTTP status even if a particular request
  fails.'
- '401 Unauthorized: Recheck API key or permissions'
- '401 Unauthorized: Check TENDERLY_ACCESS_KEY validity.'
- '401 Unauthorized: Check API key and permissions'
- '401 Unauthorized: Recheck API key validity'
- '403 Forbidden: Check account permissions'
- 'Error Message: UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT'
- '401 Unauthorized: Please check your credentials'
- '403 Forbidden: Access denied for the requested resource'
- '401 Unauthorized: Check API key and access permissions'
- '400 Bad Request: Check contract address and input parameters'
- '401 Unauthorized: Verify API key and permissions'
- '404 Not Found: Contract not found'
auth_info:
  mentioned_objects:
  - TENDERLY_ACCESS_KEY
  - TENDERLY_PROJECT_NAME
  - TENDERLY_ACCOUNT_NAME
  - DEPLOYER_PRIVATE_KEY
  - DEPLOYER_WALLET_ADDRESS
  - OauthToken
  - AuthProvider
client:
  base_url: https://dashboard.tenderly.co
  headers:
    Content-Type: application/json
source_metadata: null
