resources:
- name: customers
  endpoint:
    path: /reference/get_customers
    method: GET
- name: businesses
  endpoint:
    path: /reference/businesses-1
    method: GET
- name: beneficial_owners
  endpoint:
    path: /reference/beneficial-owner
    method: GET
- name: cards
  endpoint:
    path: /reference/cards
    method: GET
- name: credit_applications
  endpoint:
    path: /reference/post-credit-applications
    method: POST
- name: accounts
  endpoint:
    path: /reference/get-accounts
    method: GET
- name: transactions
  endpoint:
    path: /reference/transactions
    method: GET
- name: webhooks
  endpoint:
    path: /reference/webhooks
    method: GET
- name: simulate
  endpoint:
    path: /reference/simulate
    method: POST
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: POST
- name: customer
  endpoint:
    path: /customers/{customer_id}
    method: GET
- name: customers
  endpoint:
    path: /customers/{customer_id}
    method: PATCH
- name: delete_customer
  endpoint:
    path: /customers/{customer_id}
    method: DELETE
- name: KYC
  endpoint:
    path: /customers/{customer_id}/verification-kyc
    method: POST
- name: KYC Status
  endpoint:
    path: /customers/{customer_id}/verification-kyc
    method: GET
    data_selector: response
- name: Resume a Persona Inquiry
  endpoint:
    path: /customers/{customer_id}/inquiries/{inquiry_id}/resume
    method: POST
- name: customers
  endpoint:
    path: /reference/get_customers
    method: GET
- name: businesses
  endpoint:
    path: /reference/get_businesses
    method: GET
- name: business_address
  endpoint:
    path: /reference/get_business_addresses
    method: GET
- name: beneficial_owners
  endpoint:
    path: /reference/get_beneficial_owners
    method: GET
- name: beneficial_owners_address
  endpoint:
    path: /reference/get_beneficial_owner_addresses
    method: GET
- name: kyb
  endpoint:
    path: /reference/get_kyb
    method: GET
- name: cards
  endpoint:
    path: /reference/get_cards
    method: GET
- name: credit
  endpoint:
    path: /reference/get-credit-applications
    method: GET
- name: accounts
  endpoint:
    path: /reference/get-accounts
    method: GET
- name: transactions
  endpoint:
    path: /reference/get_transactions
    method: GET
- name: webhooks
  endpoint:
    path: /reference/get_webhooks
    method: GET
- name: businesses
  endpoint:
    path: /businesses
    method: GET
    data_selector: data
    params:
      page: 1
- name: business
  endpoint:
    path: /businesses
    method: POST
- name: business
  endpoint:
    path: /businesses/{business_id}
    method: GET
- name: business
  endpoint:
    path: /businesses/{business_id}
    method: DELETE
- name: business
  endpoint:
    path: /businesses/{business_id}
    method: PATCH
- name: business_addresses
  endpoint:
    path: /reference/get_business_addresses
    method: GET
- name: business_address
  endpoint:
    path: /reference/get_business_address
    method: GET
- name: business_addresses
  endpoint:
    path: /businesses/{business_id}/addresses
    method: GET
- name: business_address
  endpoint:
    path: /businesses/{business_id}/addresses
    method: POST
- name: business_address
  endpoint:
    path: /businesses/{business_id}/addresses/{address_id}
    method: GET
- name: delete_business_address
  endpoint:
    path: /businesses/{business_id}/addresses/{address_id}
    method: DELETE
- name: business_address
  endpoint:
    path: /businesses/{business_id}/addresses/{address_id}
    method: PATCH
- name: customers
  endpoint:
    path: /reference/get_customers
    method: GET
- name: beneficial_owners
  endpoint:
    path: /reference/get_beneficial_owners
    method: GET
- name: businesses
  endpoint:
    path: /reference/get_businesses
    method: GET
- name: beneficial_owners
  endpoint:
    path: /businesses/{business_id}/beneficial_owners
    method: GET
    data_selector: records
- name: beneficial_owner
  endpoint:
    path: /businesses/{business_id}/beneficial_owners
    method: POST
- name: beneficial_owner
  endpoint:
    path: /businesses/{business_id}/beneficial_owners/{beneficial_owner_id}
    method: GET
- name: beneficial_owner
  endpoint:
    path: /businesses/{business_id}/beneficial_owners/{beneficial_owner_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: beneficial_owner
  endpoint:
    path: /businesses/{business_id}/beneficial_owners/{beneficial_owner_id}
    method: PATCH
- name: kyc_status
  endpoint:
    path: /businesses/{business_id}/beneficial_owners/{beneficial_owner_id}/verification-kyc
    method: GET
- name: beneficial_owner_kyc
  endpoint:
    path: /businesses/{business_id}/beneficial_owners/{beneficial_owner_id}/verification-kyc
    method: POST
- name: beneficial_owner_addresses
  endpoint:
    path: /reference/get_beneficial_owner_addresses
    method: GET
- name: beneficial_owner_address
  endpoint:
    path: /reference/get_beneficial_owner_address
    method: GET
- name: beneficial_owner_addresses
  endpoint:
    path: /businesses/{business_id}/beneficial_owners/{beneficial_owner_id}/addresses
    method: GET
    data_selector: records
- name: beneficial_owner_address
  endpoint:
    path: /businesses/{business_id}/beneficial_owners/{beneficial_owner_id}/addresses
    method: POST
- name: beneficial_owner_address
  endpoint:
    path: /businesses/{business_id}/beneficial_owners/{beneficial_owner_id}/addresses/{address_id}
    method: GET
- name: delete_beneficial_owner_address
  endpoint:
    path: /businesses/{business_id}/beneficial_owners/{beneficial_owner_id}/addresses/{address_id}
    method: DELETE
- name: beneficial_owner_address
  endpoint:
    path: /businesses/{business_id}/beneficial_owners/{beneficial_owner_id}/addresses/{address_id}
    method: PATCH
- name: KYB
  endpoint:
    path: /kyb
    method: POST
- name: resume_kyb
  endpoint:
    path: /kyb/{inquiry_id}/resume
    method: POST
- name: kyb_status
  endpoint:
    path: /businesses/{business_id}/verification-kyb
    method: GET
    data_selector: response
- name: business_verification_kyb
  endpoint:
    path: /businesses/{business_id}/verification-kyb
    method: POST
- name: customers
  endpoint:
    path: /reference/get_customers
    method: GET
- name: businesses
  endpoint:
    path: /reference/businesses-1
    method: GET
- name: credit
  endpoint:
    path: /reference/post-credit-applications
    method: POST
- name: accounts
  endpoint:
    path: /reference/get-accounts
    method: GET
- name: transactions
  endpoint:
    path: /reference/transactions
    method: GET
- name: webhooks
  endpoint:
    path: /reference/webhooks
    method: GET
- name: simulation
  endpoint:
    path: /reference/simulate
    method: POST
- name: cards
  endpoint:
    path: /cards
    method: POST
- name: cards
  endpoint:
    path: /cards
    method: GET
- name: cards
  endpoint:
    path: /cards/{card_id}
    method: GET
- name: cards
  endpoint:
    path: /cards/{card_id}
    method: PATCH
- name: reissue_card
  endpoint:
    path: /cards/{card_id}/reissue
    method: POST
- name: cards
  endpoint:
    path: /cards/{card_id}/activate
    method: POST
- name: close_card
  endpoint:
    path: /cards/{card_id}/close
    method: POST
- name: card_restriction
  endpoint:
    path: /reference/get_cards_restrictions
    method: GET
- name: card_restriction_by_id
  endpoint:
    path: /reference/get_cards_restrictions_id
    method: GET
- name: card_restrictions
  endpoint:
    path: /cards/{card_id}/restrictions
    method: GET
- name: card_restriction
  endpoint:
    path: /cards/{card_id}/restrictions
    method: POST
- name: card_restriction
  endpoint:
    path: /cards/{card_id}/restrictions/{restriction_id}
    method: GET
- name: card_restriction
  endpoint:
    path: /cards/{card_id}/restrictions/{restriction_id}
    method: PATCH
- name: delete_card_restriction
  endpoint:
    path: /cards/{card_id}/restrictions/{restriction_id}
    method: DELETE
- name: credit_application
  endpoint:
    path: /credit/applications
    method: POST
- name: credit_applications
  endpoint:
    path: /credit/applications
    method: GET
    data_selector: response
- name: credit_application
  endpoint:
    path: /credit/applications/{application_id}
    method: GET
- name: credit_application
  endpoint:
    path: /credit/applications/{application_id}
    method: PATCH
- name: credit_application
  endpoint:
    path: /credit/applications/{application_id}/submit
    method: POST
- name: adverse_actions
  endpoint:
    path: /v0.1/credit/applications/{application_id}/adverse-actions
    method: GET
- name: transfer
  endpoint:
    path: /transfers
    method: POST
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: POST
- name: accounts_processor_tokens
  endpoint:
    path: /accounts/processor_tokens
    method: POST
- name: account
  endpoint:
    path: /accounts/{account_id}
    method: GET
- name: accounts
  endpoint:
    path: /accounts/{account_id}
    method: PATCH
- name: close_account
  endpoint:
    path: /accounts/{account_id}/close
    method: POST
- name: statements
  endpoint:
    path: /accounts/{account_id}/statements/{yyyy}/{mm}
    method: GET
- name: statements
  endpoint:
    path: /accounts/{account_id}/statements
    method: GET
- name: transactions
  endpoint:
    path: /reference/get_transactions
    method: GET
    data_selector: ''
    params: {}
- name: transaction_by_id
  endpoint:
    path: /reference/get_transaction_id
    method: GET
    data_selector: ''
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: transaction
  endpoint:
    path: /transactions/{transaction_id}
    method: GET
    data_selector: ''
    params: {}
- name: webhook_subscription
  endpoint:
    path: /reference/webhooks
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: POST
- name: webhook_subscriptions
  endpoint:
    path: /webhooks
    method: GET
- name: webhook_subscription
  endpoint:
    path: /v0.1/webhooks/{webhook_id}
    method: PATCH
- name: webhooks
  endpoint:
    path: /webhooks/{webhook_id}
    method: DELETE
- name: customers
  endpoint:
    path: /reference/get_customers
    method: GET
- name: businesses
  endpoint:
    path: /reference/businesses-1
    method: GET
- name: cards
  endpoint:
    path: /reference/cards
    method: GET
- name: credit
  endpoint:
    path: /reference/post-credit-applications
    method: POST
- name: transfer
  endpoint:
    path: /reference/post-transfer
    method: POST
- name: accounts
  endpoint:
    path: /reference/get-accounts
    method: GET
- name: transactions
  endpoint:
    path: /reference/transactions
    method: GET
- name: webhooks
  endpoint:
    path: /reference/webhooks
    method: GET
- name: simulate
  endpoint:
    path: /reference/simulate
    method: POST
- name: simulate_authorization
  endpoint:
    path: /simulate/authorization
    method: POST
- name: simulate_settlement
  endpoint:
    path: /simulate/settlement
    method: POST
- name: simulate_kyc_passed
  endpoint:
    path: /simulate/kyc-pass
    method: POST
- name: simulate_kyc_failed
  endpoint:
    path: /simulate/kyc-fail
    method: POST
- name: webhooks
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook_id
- name: document_required
  endpoint:
    path: /kyc/verification/document_required
    method: GET
    data_selector: documents
    params: {}
- name: under_review
  endpoint:
    path: /kyc/verification/under_review
    method: GET
    data_selector: {}
    params: {}
- name: success
  endpoint:
    path: /kyc/verification/success
    method: GET
    data_selector: {}
    params: {}
- name: failure
  endpoint:
    path: /kyc/verification/failure
    method: GET
    data_selector: {}
    params: {}
- name: timeout
  endpoint:
    path: /kyc/verification/timeout
    method: GET
    data_selector: {}
    params: {}
- name: credit_application
  endpoint:
    path: /credit/application
    method: GET
    data_selector: details.data
    params: {}
- name: customer_updated
  endpoint:
    path: /customer/updated
    method: GET
    data_selector: details
    params: {}
- name: portal_data_export
  endpoint:
    path: /portal/data_export
    method: GET
    data_selector: details
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transaction
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook_subscription
    params:
      url: https://hostname.com/webhook/route
      description: KYC state changes.
      version: '0.1'
      status: STATUS_ENABLED
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhook_subscriptions
- name: customers
  endpoint:
    path: /customers/
    method: POST
    data_selector: customer_id
- name: credit_applications
  endpoint:
    path: /credit/applications
    method: POST
    data_selector: application_id
- name: submit_credit_application
  endpoint:
    path: /credit/applications/{application_id}/submit
    method: POST
- name: get_credit_application
  endpoint:
    path: /credit/applications/{application_id}
    method: GET
    data_selector: application_status
- name: adverse_actions
  endpoint:
    path: /api/v0.1/credit/applications/{application_id}/adverse-actions
    method: GET
    data_selector: reasons
- name: create_card
  endpoint:
    path: /api/v0.1/cards
    method: POST
    data_selector: card_id
- name: transfers
  endpoint:
    path: /transfers
    method: POST
    data_selector: null
    params: {}
- name: accounts
  endpoint:
    path: /accounts/{account_id}
    method: GET
    data_selector: null
    params: {}
- name: transfers
  endpoint:
    path: /api/v0.1/transfers
    method: POST
    data_selector: transfer_id
- name: customer
  endpoint:
    path: /customers/
    method: POST
    data_selector: customer_id
    params: {}
- name: credit_application
  endpoint:
    path: /credit/applications
    method: POST
    data_selector: application_id
    params: {}
- name: submit_credit_application
  endpoint:
    path: /credit/applications/{application_id}/submit
    method: POST
    data_selector: application_id
    params: {}
- name: credit_application
  endpoint:
    path: /credit/applications
    method: POST
    data_selector: application_id
    params: {}
- name: adverse_actions
  endpoint:
    path: /credit/applications/{application_id}/adverse-actions
    method: GET
    data_selector: reasons
    params: {}
- name: verification_kyc
  endpoint:
    path: /customers/{customer_id}/verification-kyc
    method: GET
    data_selector: kyc_status
    params:
      program_id: <YOUR_PROGRAM_ID>
- name: transfer
  endpoint:
    path: /transfers
    method: POST
    data_selector: transfer_id
    params: {}
- name: account
  endpoint:
    path: /accounts/{account_id}
    method: GET
    data_selector: account_id
    params: {}
- name: cards
  endpoint:
    path: /cards
    method: POST
    data_selector: card_id
- name: transfers
  endpoint:
    path: /transfers
    method: POST
    data_selector: transfer_id
- name: close_credit_account
  endpoint:
    path: /accounts/{credit_account_id}/close
    method: POST
- name: close_security_deposit_account
  endpoint:
    path: /accounts/{security_deposit_account_id}/close
    method: POST
- name: transfers
  endpoint:
    path: /api/v0.1/transfers
    method: POST
    data_selector: transactions
- name: accounts
  endpoint:
    path: /v0/reference/post_accounts
    method: POST
    data_selector: account
- name: card
  endpoint:
    path: /cards/{card_id}
    method: GET
    data_selector: card
    params: {}
- name: cards
  endpoint:
    path: /cards
    method: GET
    data_selector: cards
    params:
      customer_id: 057c6074-a02d-4a5a-bad9-bbc64b047df7
      show_closed: 'true'
      page: '1'
      count: '10'
      order_by: asc
- name: activate_card
  endpoint:
    path: /cards/{card_id}/activate
    method: POST
    data_selector: card_id
- name: cards
  endpoint:
    path: /cards/{card_id}
    method: PATCH
    data_selector: response
    params: {}
- name: reissue_card
  endpoint:
    path: /cards/{card_id}/reissue
    method: POST
    data_selector: card_id
- name: card_restriction
  endpoint:
    path: /cards/{card_id}/restrictions
    method: POST
    data_selector: string
    params: {}
- name: get_card_restrictions
  endpoint:
    path: /cards/{card_id}/restrictions
    method: GET
    data_selector: string
    params: {}
- name: get_specific_card_restriction
  endpoint:
    path: /cards/{card_id}/restrictions/{restriction_id}
    method: GET
    data_selector: string
    params: {}
- name: edit_card_restriction
  endpoint:
    path: /cards/{card_id}/restrictions/{restriction_id}
    method: PATCH
    data_selector: string
    params: {}
- name: remove_card_restriction
  endpoint:
    path: /api/v0.1/cards/{card_id}/restrictions/{restriction_id}
    method: DELETE
    data_selector: Status
- name: close_card
  endpoint:
    path: /cards/close/{card_id}
    method: POST
    data_selector: response
    params: {}
- name: temporary_auth_key
  endpoint:
    path: /auth/key/temporary
    method: POST
    data_selector: response
    params: {}
- name: temporary_security_token
  endpoint:
    path: /auth/key/temporary
    method: POST
    data_selector: response
    params: {}
- name: temporary_security_token
  endpoint:
    path: /auth/key/temporary
    method: POST
    data_selector: response
- name: customers
  endpoint:
    path: /api/v0/customers
    method: POST
    data_selector: ''
    params: {}
- name: auth_token
  endpoint:
    path: /api/auth/token
    method: POST
    data_selector: ''
    params: {}
- name: revoke_auth_token
  endpoint:
    path: /api/auth/token/revoke
    method: POST
    data_selector: ''
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
- name: account_types
  endpoint:
    path: /api/account-types
    method: GET
    data_selector: data
    params: {}
- name: account_states
  endpoint:
    path: /account_states
    method: GET
    data_selector: states
    params: {}
- name: accounts
  endpoint:
    path: /accounts/{account_id}
    method: PATCH
    data_selector: ''
    params:
      status: active
- name: close_account
  endpoint:
    path: /accounts/{account_id}/close
    method: POST
    data_selector: ''
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: POST
    data_selector: account_id
    params: {}
- name: credit_account
  endpoint:
    path: /showing-credit-account-data
    method: GET
    data_selector: account
    params: {}
- name: customer
  endpoint:
    path: /customers
    method: POST
    data_selector: customer_id
- name: kyc
  endpoint:
    path: /customers/{customer_id}/verification-kyc
    method: POST
    data_selector: kyc_status
- name: account
  endpoint:
    path: /accounts
    method: POST
    data_selector: account_id
- name: balance
  endpoint:
    path: /balances/{account_id}
    method: GET
    data_selector: balance
- name: transfer
  endpoint:
    path: /transfers
    method: POST
    data_selector: transfer_id
- name: transactions
  endpoint:
    path: /api/v0.1/transactions
    method: GET
    params:
      account_id: f5425ea7-ec5e-4873-b3ed-a3e862f27d2a
- name: business
  endpoint:
    path: /businesses
    method: POST
    data_selector: null
    params: {}
- name: beneficial_owner_kyc
  endpoint:
    path: /businesses/{business_id}/beneficial_owners/{beneficial_owner_id}/verification-kyc
    method: POST
    data_selector: null
    params: {}
- name: business_kyb
  endpoint:
    path: /businesses/{business_id}/verification-kyb
    method: POST
    data_selector: null
    params: {}
- name: create_account
  endpoint:
    path: /api/v0.1/accounts
    method: POST
    data_selector: account_id
    params: {}
- name: get_account_by_id
  endpoint:
    path: /api/v0.1/accounts/{account_id}
    method: GET
    data_selector: balance
    params: {}
- name: get_transactions
  endpoint:
    path: /api/v0.1/transactions
    method: GET
    data_selector: transactions
    params:
      account_id: a90708df-72a5-4cc3-a497-e1ad27ccae46
- name: create_transfer
  endpoint:
    path: /api/v0.1/transfers
    method: POST
    data_selector: transfer_id
    params: {}
- name: statements
  endpoint:
    path: /statements
    method: GET
    data_selector: statements
    params: {}
- name: statements_single_month
  endpoint:
    path: /accounts/{account_id}/statements/{yyyy}/{mm}
    method: GET
    data_selector: response
    params: {}
- name: statements_all
  endpoint:
    path: /accounts/{account_id}/statements
    method: GET
    data_selector: data
    params: {}
- name: customer
  endpoint:
    path: /customers/
    method: POST
    data_selector: ''
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: ''
    params:
      page: '1'
      per_page: '20'
- name: customers
  endpoint:
    path: /customers/{customer_id}
    method: DELETE
    data_selector: Customer resource deleted
    params: {}
- name: update_customer
  endpoint:
    path: /customers/{customer_id}
    method: PATCH
    data_selector: customer_id
    params: {}
- name: customer_addresses
  endpoint:
    path: /customers/{customer_id}/addresses
    method: POST
    data_selector: addresses
- name: delete_customer_address
  endpoint:
    path: /customers/{customer_id}/addresses/{address_id}
    method: DELETE
    data_selector: ''
- name: simulate_kyc_pass
  endpoint:
    path: /simulate/kyc-pass
    method: POST
    data_selector: customer_id
    params: {}
- name: simulate_kyc_fail
  endpoint:
    path: /simulate/kyc-fail
    method: POST
    data_selector: customer_id
    params: {}
- name: KYC Verification
  endpoint:
    path: /customers/{customer_id}/verification-kyc
    method: POST
    data_selector: customer_id
    params:
      program_id: required
      ip: conditionally required based on program configuration
- name: verification_kyc
  endpoint:
    path: /api/v0.1/customers/{customer_id}/verification-kyc
    method: GET
    data_selector: kyc_status
    params:
      program_id: required
- name: document_upload
  endpoint:
    path: /kyc/documentation
    method: POST
    data_selector: documents
    params: {}
- name: business_verification_kyb
  endpoint:
    path: /businesses/{business_id}/verification-kyb
    method: POST
    data_selector: initiated
- name: business_status_verification_kyb
  endpoint:
    path: /businesses/{business_id}/verification-kyb
    method: GET
    data_selector: kyb_status
- name: business
  endpoint:
    path: /businesses
    method: POST
- name: business
  endpoint:
    path: /businesses
    method: POST
    data_selector: null
    params: {}
- name: businesses
  endpoint:
    path: /businesses
    method: GET
    data_selector: businesses
    params: {}
- name: business
  endpoint:
    path: /businesses/{business_id}
    method: GET
    data_selector: business
    params: {}
- name: delete_business
  endpoint:
    path: /businesses/{business_id}
    method: DELETE
    data_selector: '{}'
    params: {}
- name: update_business
  endpoint:
    path: /businesses/{business_id}
    method: PATCH
    data_selector: '{}'
    params: {}
- name: business_address
  endpoint:
    path: /businesses/{business_id}/addresses
    method: POST
    data_selector: address
    params: {}
- name: business_addresses
  endpoint:
    path: /businesses/{business_id}/addresses
    method: GET
    data_selector: data
- name: single_business_address
  endpoint:
    path: /businesses/{business_id}/addresses/{address_id}
    method: GET
    data_selector: data
- name: update_business_address
  endpoint:
    path: /businesses/{business_id}/addresses/{address_id}
    method: PATCH
    data_selector: data
- name: delete_business_address
  endpoint:
    path: /businesses/{business_id}/addresses/{address_id}
    method: DELETE
    data_selector: data
- name: beneficial_owners
  endpoint:
    path: /businesses/{business_id}/beneficial_owners
    method: POST
    data_selector: ''
    params: {}
- name: beneficial_owner
  endpoint:
    path: /businesses/{business_id}/beneficial_owners/{beneficial_owner_id}
    method: GET
    data_selector: data
- name: beneficial_owners
  endpoint:
    path: /businesses/{business_id}/beneficial_owners
    method: GET
    data_selector: data
- name: beneficial_owner
  endpoint:
    path: /businesses/{business_id}/beneficial_owners/{beneficial_owner_id}
    method: PATCH
    data_selector: response
    params: {}
- name: beneficial_owner_delete
  endpoint:
    path: /businesses/{business_id}/beneficial_owners/{beneficial_owner_id}
    method: DELETE
    data_selector: response
    params: {}
- name: beneficial_owner_address
  endpoint:
    path: /businesses/{business_id}/beneficial_owners/{beneficial_owner_id}/addresses
    method: POST
    data_selector: address
    params:
      address_type: MAILING
      street: ''
      city: ''
      state: ''
      zip_code: ''
      country: ''
      is_primary: true
- name: beneficial_owners_addresses
  endpoint:
    path: /businesses/{business_id}/beneficial_owners/{beneficial_owner_id}/addresses
    method: GET
    data_selector: data
- name: beneficial_owner_address
  endpoint:
    path: /businesses/{business_id}/beneficial_owners/{beneficial_owner_id}/addresses/{address_id}
    method: GET
    data_selector: data
- name: update_beneficial_owner_address
  endpoint:
    path: /businesses/{business_id}/beneficial_owners/{beneficial_owner_id}/addresses/{address_id}
    method: PATCH
    data_selector: data
- name: beneficial_owner_address
  endpoint:
    path: /businesses/{business_id}/beneficial_owners/{beneficial_owner_id}/addresses/{address_id}
    method: DELETE
    data_selector: response
    params: {}
- name: beneficial_owner_verification
  endpoint:
    path: /businesses/{business_id}/beneficial_owners/{beneficial_owner_id}/verification-kyc
    method: POST
    data_selector: response
    params: {}
- name: kyc_status
  endpoint:
    path: /api/v0.1/customers/{business_id}/beneficial_owners/{beneficial_owner_id}/verification-kyc
    method: GET
    data_selector: results
    params:
      program_id: required
- name: upload_documents
  endpoint:
    path: /customers/{customer_id}/verification-kyc/documents
    method: POST
    data_selector: documents
    params: {}
- name: processor_token
  endpoint:
    path: /accounts/processor_tokens
    method: POST
    data_selector: account_id
    params: {}
- name: external_accounts
  endpoint:
    path: /v0/accounts/{customer_id}/external_accounts
    method: GET
    data_selector: records
    params:
      list_full_account: 'true'
- name: remove_external_account
  endpoint:
    path: /v0/accounts/{account_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: ACH Transfers
  endpoint:
    path: /ach/transfers
    method: POST
    data_selector: transfer
    params: {}
- name: ach_return_codes
  endpoint:
    path: /ach/return_codes
    method: GET
    data_selector: return_codes
- name: transfers
  endpoint:
    path: /transfers
    method: POST
    data_selector: transfer
    params: {}
- name: internal_transfer
  endpoint:
    path: /transfers
    method: POST
    data_selector: ''
    params: {}
- name: ach_external_transfer
  endpoint:
    path: /transfers
    method: POST
    data_selector: ''
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params:
      customer_id: string
      account_id: string
      payment_type: string
      start_date: string
      end_date: date
      page: int32
      count: int32
      order_by: string
      transaction_state: string
- name: transaction_history
  endpoint:
    path: /api/v0/transactions/{transaction_id}/history
    method: GET
    data_selector: transactions
    params:
      page: 1
      count: 10
- name: card_payments
  endpoint:
    path: /docs/transaction-types/card-payments
    method: GET
    data_selector: transactions
    params: {}
- name: ach_payments
  endpoint:
    path: /docs/transaction-types/ach-payments
    method: GET
    data_selector: transactions
    params: {}
- name: account_payments
  endpoint:
    path: /docs/transaction-types/account-payments
    method: GET
    data_selector: transactions
    params: {}
- name: transaction_payloads
  endpoint:
    path: /transaction-payloads
    method: GET
    data_selector: records
    params: {}
- name: transaction_payload_debit_credit
  endpoint:
    path: /transaction/debit_credit
    method: POST
    data_selector: transaction
    params: {}
- name: transaction_payload_deposit
  endpoint:
    path: /transaction/deposit
    method: POST
    data_selector: transaction
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: log_entries
  endpoint:
    path: /api/v0.1/logs
    method: GET
    data_selector: logs
    params: {}
- name: cards
  endpoint:
    path: /reference/post_cards
    method: POST
- name: accounts
  endpoint:
    path: /docs/account
    method: GET
- name: transactions
  endpoint:
    path: /docs/retrieving-transactions
    method: GET
- name: customer
  endpoint:
    path: /reference/post_customers
    method: POST
    data_selector: customer_id
    params: {}
- name: customer_verification
  endpoint:
    path: /reference/post_verification_kyc
    method: POST
    data_selector: verification_status
    params:
      customer_id: required
      program_id: required
- name: issue_card
  endpoint:
    path: /reference/post_cards
    method: POST
    data_selector: card_id
    params:
      account_id: required
- name: link_external_account
  endpoint:
    path: /reference/link-external-account
    method: POST
    data_selector: external_account_id
    params: {}
- name: view_transactions
  endpoint:
    path: /reference/transactions
    method: GET
    data_selector: transactions
    params:
      customer_id: required
- name: view_balance
  endpoint:
    path: /reference/get-accounts
    method: GET
    data_selector: balance
    params:
      customer_id: required
- name: customer_verification
  endpoint:
    path: /verification/kyc
    method: POST
    data_selector: response
    params:
      customer_id: required
      program_id: required
notes:
- Header field names are not case sensitive.
- Your Bond API key is managed in our Bond Portal.
- All API keys generated have access to all the endpoints within the Bond platform.
- Creates a customer
- Retrieve the KYB status of a Business
- Start a KYB verification for a Business
- Uses OAuth2 with refresh token — requires setup of connected app in api
- All fields on the application must be populated before submitting.
- The customer must have passed KYC for the program in question.
- API keys are associated with your Bond account and not with individual user accounts.
- Authorization is confidential to your brand and is used to verify your identity.
- If you are using Postman with our Production environment, enter your Production
  credentials you received from Bond instead of your Sandbox credentials.
- Webhook transmissions might be configured as publicly accessible URLs.
- You can also use wildcards when managing webhooks.
- Webhook events include credit.application.created, credit.application.submitted,
  credit.application.approved, credit.application.resubmit_required, credit.application.adverse_action.
- All webhook requests come from bond.tech domain which must be whitelisted on your
  system for further authentication.
- Some objects like Contact may return nulls in deeply nested fields
- Users can't spend on their charge cards without funding the security deposit account.
- Requires setup of customer and credit application prior to submission.
- To be able to make purchases on a credit builder card you need to fund the security
  deposit account.
- In the sandbox, the routing_number and account_number values are not real and will
  not be accessible via direct deposit.
- Use origination_account_id to dictate the source account for transfers.
- Webhook registration can be done through Bond Portal or via API
- KYC is integrated into the credit application process
- ACH timelines typically include time for transactions to be processed and to be
  considered settled before the funds are made available.
- The expiry dates for cards are configurable for your live program, but the recommended
  Bond default for expiry is 36 months from card issue.
- Credit account balance must be zero to close the account.
- A physical card is always issued as inactive and must be activated before use.
- You can only change the status of a physical card after you have activated it.
- When a card is reissued, it defaults to an inactive status. You must activate the
  new card to be able to use it.
- If a card is lost or stolen, use `new_card_number`. The card number, CVV, and expiry
  date change.
- If a card is old or damaged, use `same_card_number_updated_expiry`. Only the CVV
  and expiry date change, the card number stays the same.
- Restrictions can be placed at the program level or at the card level.
- Cards can only have one amount restriction. When you set a new card restriction,
  any existing restriction is overwritten.
- Uses DELETE method to remove a card restriction
- To close a card, the Account the card is associated with must have a $0 balance.
- The temporary tokens last for a maximum of five API calls or up to five minutes.
- For a business resource, use `business_id` in place of the customer_id.
- Uses temporary security tokens for authentication
- Uses API key for authentication.
- Tokens must be issued with API keys from a backend service.
- Refresh tokens have a 24-hour lifespan.
- Linking an external account is currently only supported by our v0 APIs.
- All numeric fields that represent amounts are in cents.
- The frozen state can only be set by Bond compliance.
- Once an account is closed it cannot be reactivated.
- Either customer_id or business_id is required for creating a credit account.
- API provides credit account information for secured charge card customers.
- Identity and Authorization API keys are required in the request headers
- A program ID is a UUID value that represents a relationship between you and a bank.
- The KYB process requires valid EIN and phone values.
- Use the stored account_id for balance and transaction requests.
- Bond provides you with the ability to build your own statements with our Statement
  Data API.
- Bond's global rate limit across all your API calls is 1000 API calls per minute
- For security purposes, the script masks the account numbers provided in the account_response
  before substitution into the HTML statement template.
- You can deliver the statement via email after the close date of the payment period
  is completed.
- At least one primary address required
- Only email_address, phone_number, and any secondary addresses can be updated after
  a customer has passed KYC.
- Most of a customer's details can't be updated after they've passed KYC as the new
  information needs to be verified before the update can occur.
- The KYC endpoint is idempotent and repeated requests using the same Idempotency-Key
  within a 24 hour period will fail.
- Most of a customer's details can't be updated after they've passed KYC.
- KYC requires additional supporting information may be signaled by the kyc.verification.document_required
  event.
- KYC may require further review as indicated by the kyc.verification.under_review
  webhook.
- Documents must be uploaded as base64-encoded strings.
- 'Supported file types: .jpg, .png, .heic, .pdf.'
- 'Supported document types: Government ID, Proof of address, Social security card.'
- Before running KYB, make sure that the business resource contains `ein` and `phone`
  values.
- A business must comprise at least one Beneficial Owner that you add to the Business
  resource.
- If the business fails the KYB, you cannot provide them with a card.
- Identity and Authorization headers are required for access.
- Identity and Authorization headers are required for requests.
- The is_primary field is deprecated.
- Ensure to provide a valid business_id and address_id when retrieving, updating,
  or deleting addresses.
- A business must have one or more Beneficial Owners.
- Requires setup of API key and authorization headers
- The endpoint requires parameters for creating a Beneficial Owner's address.
- Use DELETE method to remove a Beneficial Owner's address
- The KYC request for the Beneficial Owner is asynchronous.
- Webhook events are used to receive KYC status updates.
- A KYC process may require one or more documents to be submitted.
- If a 422 error code is returned, ensure that Bond is enabled as an integration.
- If your brand is enabled for Identity Match then you might receive an error if you
  have a Customer Account that does not match Plaid records.
- To link external accounts, you need to use the v0 APIs.
- Currently, only transfers in USD currency are supported.
- ACH transfers must be submitted before certain cut-off times to ensure that the
  transfers are included in the appropriate NACHA batch files.
- Idempotency key is optional and prevents duplicate operations.
- A successful request results in a completed status.
- Bond's simplified set of transaction states is compatible across all vendors.
- Payload examples provided for various transaction types.
- When organizing transaction payloads, exclude $0 transactions unless details.merchant_amount
  is positive.
- Updated about 3 years ago
- Generating and retrieving linked external accounts requires using the v0 APIs.
- The Transactions section provides tools for monitoring day-to-day activity of transactions.
- You must perform a KYC check for customers before you can issue an account or card
  to them.
- ACH fund transfers between an account and an external account can take up to a few
  days to clear.
- A card can be virtual, physical, or dual, which is determined by the program_id
  provided by Bond.
- The KYC request for the customer is asynchronous — must configure a webhook to listen
  for KYC events.
- Uses API key for authentication
- Suggests how to retrieve one or more of a customer's transactions and the transaction
  details.
errors:
- '422: Standardizing error codes'
- '404: Account not found'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Missing Required Field(s): ''amount'''
- Could not create Transfer. Contact Support
- Service has been disabled. Contact Support
- 'create_transfer_schema: Missing Required Field(s): ''amount'''
- 'create_transfer_schema: Missing Required Field(s): ''card_id'''
- account_data_err
- acc_dne
- account_dne
- account_history_schema
- account_not_linked_error
- account_patch_schema
- account_post_schema
- activate_card_data
- apr_decline
- auth_err
- business_dne
- card_active
- card_account_dne
- card_dne
- card_fraud
- card_program_dne
- card_status_dne
- closed_card
- create_account_schema
- create_card_account_data
- create_card_data
- create_card_program
- create_card_schema
- create_customer_schema
- create_dispute_error
- create_dispute_schema
- create_hosted_schema
- create_kyc_schema
- create_more_schema
- create_rest_data
- create_transfer_data
- create_transfer_schema
- customer_bsa
- customer_dne
- customer_invalid_uuid4
- data_err_rdc
- del_rest_data
- delete_customer_schema
- delete_related_schema
- duplicate_account
- edit_account_schema
- edit_customer_schema
- email_args_schema
- email_error
- expired_card
- ext_acc_unknown
- get_customer_schema
- get_kyc_schema
- idempotency_key_exists
- inactive_card
- input_error
- insufficient_funds
- invalid_aac
- invalid_account_id
- invalid_account_status
- invalid_amount
- invalid_bank_info
- invalid_bin
- invalid_card
- invalid_date
- invalid_parameter
- invalid_program
- invalid_reference
- invalid_request
- invalid_transfer_date
- invalid_transfer_status
- kba_dne
- kyb_dne
- kyc_dne
- kyc_error
- kyc_init_fail
- kyc_reinit_fail
- kyc_requests
- kyc_retries
- kyc_webhook_schema
- large_amount
- linked_closed
- linked_dne
- list_external_accounts_schema
- load_funds_dis
- max_cards
- migrate_account_schema
- no_card_for_customer
- no_trans
- no_trans_set
- person_id_dup
- preactive_card
- processor_error
- program_not_configured
- program_mismatch
- process_connection
- query_params
- rest_dne
- replace_rest_data
- restriction_types
- restriction_payload_schema
- resource_conflict
- request_err
- rdc_cred_err
- rdc_process_err
- rdc_schema
- routing_invalid
- server_error
- service_disabled
- statement_args_schema
- statement_dne
- too_many_trans
- transfer_dne
- transfer_ref_dne
- token_exchange_post_schema
- unknown
- unknown_activate_card
- unknown_create_account
- unknown_create_card
- unknown_create_customer
- unknown_create_hosted
- unknown_create_more
- unknown_create_transfer
- unknown_customer_auth
- unknown_delete_account
- unknown_delete_customer
- unknown_delete_related
- unknown_edit_account
- unknown_edit_customer
- unknown_get_customer
- unknown_get_card_restr
- unknown_get_card_status
- unknown_get_card
- unknown_get_payment_history
- unknown_get_transfer
- unknown_kba_post
- unknown_kyc_get
- unknown_kyc_webhook
- unknown_query_card_profile
- unknown_rdc
- unknown_reissue_card
- unknown_reset_card_pin
- unknown_set_card_restr
- unknown_spec_card
- unknown_start_kyc
- unknown_update_card_profile
- unknown_update_card_status
- unknown_verify_card
- user_ref_dne
- webhooks_err
- 400—Failure - Bad Request. The request is malformed in some way. Typically, these
  are problems with the schema.
- 403—Failure - Forbidden. You are not authorized to access the resource that you
  are attempting to access.
- 404—Failure - Resource Nonexistent. The resource currently being edited or deleted
  does not exist. Try to reference a different resource.
- 424—Failure - Resource Reference. The inter-service resource reference has failed.
  This may be due to data inconsistencies or service liveliness. Contact support.
- 500—Failure - Internal Server Error. The request created an internal error in the
  service. Some of these are unknown. Others are known, depending on the Bond error
  code.
- 503—Failure - Service Unhealthy. The service is unavailable. Check the status page
  to see when it will be back online.
- 504—Failure - Gateway Timeout. The load balancing for the service is taking too
  long to process. This may be due to high traffic loads or other related outages.
- 'Required parameter is missing: dob, first_name, last_name'
- Person id, target type, and target id are required.
- 'date_added: Not a valid date.'
- One legal name is required
- The requested URL was not found on the server. If you entered the URL manually.
  Please check your spelling and try again.
- If a 200 or 201 response code is not received, the Webhooks API retries the request
  using exponential backoff for up to three days.
- '401 Unauthorized: Recheck authentication details.'
- '400 Bad Request: Ensure all required fields are included.'
- '404: Not found.'
- '3001: Not found.'
- '3010: Customer has exceeded maximum number of KYC attempts.'
- '401 Unauthorized: Check your Identity or Authorization headers'
- 'ERROR_CODE_CREDIT_APPLICATION_GENERIC: Not found.'
- 'ERROR_CODE_CREDIT_APPLICATION_MAX_KYC_ATTEMPTS: Customer has exceeded maximum number
  of KYC attempts.'
- '200: Card account status has been updated to Closed'
- 'invalidToken: Indicates that the refresh token is expired or invalid.'
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Ensure you have valid API keys'
- '400 Bad Request: Check your request parameters'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Invalid or missing API key.'
- '404 Not Found: The requested resource does not exist.'
- '409: KYC is already initialized for the customer'
- 4XX excluding 409
- 5XX
- '400: {''Message'': {''last_name'': [''Missing data for required field.'']}, ''Status'':
  400, ''Code'': ''create_customer_schema'', ''Type'': ''Request Error''}'
- Customer resource deleted
- KYC attempts are not allowed after a customer has been successfully vetted.
- 'kyc.verification.error: KYC request has encountered a server error.'
- 'kyc.verification.timeout: KYC request has encountered a networking error.'
- '400 Bad Request: Check the format of the uploaded document.'
- '401 Unauthorized: Recheck API key or authentication method.'
- '400: Missing data for required field.'
- '401 Unauthorized: Invalid Identity or Authorization headers.'
- '400: A business must have at least one active address'
- '401 Unauthorized: Check authorization headers'
- 'kyc.verification.error: KYC failed to complete due to a server error.'
- 'kyc.verification.failure: KYC failed due to low confidence in identity validation.'
- 'kyc.verification.timeout: KYC failed to complete due to a connection timeout.'
- 'kyc.verification.document_required: KYC requires further information to continue.'
- 'kyc.verification.document_required: Document is required for verification.'
- 'kyc.verification.success: Verification was successful.'
- 'kyc.verification.under_review: Verification is currently under review.'
- '422: Ensure that Bond is enabled as an integration'
- '400: Failed to exchange token due to identity failure, accounts were not linked.'
- Insufficient Funds
- Account Closed
- No Account/Unable to Locate Account
- Invalid Account number
- Unauthorized Corporate Debit to Consumer Account
- Returned per ODFI Request
- Authorization Revoked By Customer
- Payment Stopped
- Uncollected Funds
- Customer Advises Not Authorized
- Check Truncation Entry Return (Specify)
- Account Sold to Another DFI
- Invalid ACH Routing Number
- Rep. Payee Deceased/Incapacitated
- Beneficiary or Account Holder Deceased
- Account Frozen/Entry returned per OFAC instruction
- File Record Edit Criteria (Specify) (Not Currently Supported by CU*BASE)
- Improper Effective Entry Date
- Amount Field Error
- Non-Transaction Account
- Invalid Company Identification
- Invalid Individual ID Number
- Credit Entry Refused by Receiver
- Duplicate Entry
- Addenda Error
- Mandatory Field Error
- Trace number error
- Routing number or check digit error
- Corporate Customer Advises Not Authorized
- RDFI not participant in check truncation program
- Permissible Return Entry (CCD, CTX)
- RDFI non-settlement
- Return of XCK Entry
- Return of improper debit entry
- Return of improper credit entry
- Source Document Presented for Payment (ARC, POP, BOC)
- Stop Payment on Source Document (ARC, BOC)
- Improper Source Document (ARC, POP, BOC)
- Return of ENR Entry by Federal Government Agency
- Invalid Transaction Code
- Routing Number/Check Digit error
- Invalid DFI Account number
- Invalid individual ID Number/Identification number
- Invalid Individual Name/Company Name
- Invalid Representative Payee Indicator
- Duplicate Enrollment
- State Law Affecting RCK Acceptance
- Item related to RCK entry is ineligible or RCK entry is improper
- Stop Payment on Item (RCK)
- Item and RCK entry presented for payment
- Misrouted Return
- Return of erroneous or reversing debit
- Duplicate return
- Untimely return
- Field Error(s)
- Permissible return entry not accepted/return not requested by ODFI
- Misrouted dishonored return
- Untimely dishonored return
- Timely Original Return
- Corrected Return
- Return not a duplicate
- No errors found
- Non-acceptance of R62 Dishonored Return
- 'Idempotency-Key: repeated requests using the same key within a 24 hour period will
  fail.'
- '200: Successful request'
- '400: Bad request - check the input data'
- '401: Unauthorized - check your authorization'
- Invalid ACH routing number
- '400 Bad Request: Check the request format and parameters'
- '404 Not Found: Verify the endpoint and resource exist'
- '500 Internal Server Error: Retry the request later'
- Card does not exist.
- '404: Not Found'
- Request Error
- 'Missing Required Field(s): ''card_id'''
- 'account_data_err: An issue writing data associated with the account being created.
  This may result in the account being created, but not yet being recorded in the
  system.'
- 'acc_dne: A reference to an account that does not exist in the Bond system.'
- 'account_dne: A reference to an account that does not exist in the Bond system.'
- 'account_history_schema: Error processing accounts history request.'
- 'account_not_linked_error: Account needs to finish linking with external vendor.'
- 'account_patch_schema: Schema on the pacth account route is malformed.'
- 'account_post_schema: Schema on the account external/migrate account is malformed.'
- 'activate_card_data: An issue writing data associated with the card being activated.
  This may result in the card being active, but not yet activated in the Bond system.'
- 'apr_decline: The APR specified does not permit this action.'
- 'auth_err: Unauthorized to access the relevant resources.'
- 'business_dne: Business ID does not exist.'
- 'card_active: Card is already activated.'
- 'card_account_dne: Card account does not exist in the Bond System.'
- 'card_dne: Card does not exist in the Bond system.'
- 'card_fraud: Card is closed due to a fraud investigation.'
- 'card_program_dne: Card program does not exist in the Bond system.'
- 'card_status_dne: Card status does not exist in the Bond system.'
- 'closed_card: Card is closed.'
- 'create_account_schema: Schema on the account being created route is malformed.'
- 'create_card_account_data: Unable to create a card account.'
- 'create_card_data: Problem writing data associated with the card being created.
  This may result in the card being created, but not yet recorded in the system.'
- 'create_card_program: Problem writing data associated with the card program being
  created. Program not found in baas_config.'
- 'create_card_schema: Schema on the create card route is malformed.'
- 'create_customer_schema: Schema on the create customer route is malformed.'
- 'create_dispute_error: Error occurred while creating dispute.'
- 'create_dispute_schema: Schema on the create dispute route is malformed.'
- 'create_hosted_schema: Schema on the create hosted route is malformed.'
- 'create_kyc_schema: Schema on the create KYC route is malformed.'
- 'create_more_schema: Schema on the create more customer route is malformed.'
- 'create_rest_data: Unable to create new restriction. Contact Support.'
- 'create_transfer_data: Problem writing data associated with the transfer being created.
  This may result in the transfer being created, but not yet recorded in the system.'
- 'create_transfer_schema: Schema on the create transfer route is malformed.'
- 'customer_bsa: BSA does not exist for this customer.'
- 'customer_dne: Customer that does not exist in the Bond system.'
- 'customer_invalid_uuid4: Invalid uuid for customer service.'
- 'data_err_rdc: Error saving check data'
- 'del_rest_data: Unable to delete restriction.'
- 'delete_customer_schema: Schema on the delete customer route is malformed.'
- 'delete_related_schema: Schema on the delete related customer route is malformed.'
- 'duplicate_account: An account with these credentials already exists.'
- 'edit_account_schema: Schema on the edit account route is malformed.'
- 'edit_customer_schema: Schema on the edit customer route is malformed.'
- 'email_args_schema: Invalid arguements passed for email statements'
- 'email_error: Unauthorized email domain attempt to approve a KYC.'
- 'expired_card: Card referenced has expired.'
- 'ext_acc_unknown: Could not query external accounts for Account id.'
- 'get_customer_schema: Schema on the get customer route is malformed.'
- 'get_kyc_schema: Schema on the KYC retrieval route is malformed.'
- 'idempotency_key_exists: A request was made with this idempotency key in the past
  24 hours'
- 'inactive_card: Card referenced is no longer active.'
- 'input_error: Schema is malformed.'
- 'insufficient_funds: Not enough funds available in the account to execute the action.'
- 'invalid_aac: AAC is incorrect.'
- 'invalid_account_id: No access_token found for this linked_account_id.'
- 'invalid_account_status: Cannot reinitialize account due to account verification
  status.'
- 'invalid_amount: Amount specified is not acceptable.'
- 'invalid_bank_info: Invalid bank information.'
- 'invalid_bin: BIN is invalid.'
- 'invalid_card: Invalid parent card provided'
- 'invalid_date: Date in the field specified is invalid.'
- 'invalid_parameter: Parameter referenced in transfer is invalid.'
- 'invalid_program: Card program referenced is invalid.'
- 'invalid_reference: Object reference is incorrect.'
- 'invalid_request: Invalid request arguments.'
- 'invalid_transfer_date: Date selected for the transfer is not acceptable.'
- 'invalid_transfer_status: Unable to cancel the transfer.'
- 'kyc_customer: A successfully KYC''d customer may not have their information changed.'
- 'kyb_dne: Business id has not passed KYB'
- 'kyc_dne: KYC result could not be found.'
- 'kyc_error: An error occurred while initiating KYC.'
- 'kyc_init_fail: Failure in the initialization of the KYC process. Contact Support.'
- 'kyc_reinit_fail: Failure in the reinitialization of the KYC process. Contact Support.'
- 'kyc_requests: Not allowed to manually add additional KYC requests.'
- 'kyc_retries: Excessive KYC retries attempted.'
- 'kyc_webhook_schema: Schema in the KYC webhook route is malformed.'
- 'large_amount: Transfer amount is too high.'
- 'linked_closed: Linked account is closed.'
- 'linked_dne: External account does not exist.'
- 'list_external_accounts_schema: Schema on the list external account route is malformed.'
- 'load_funds_dis: Load Funds not enabled on this account.'
- 'max_cards: Maximum number of cards for the given program has been reached.'
- 'migrate_account_schema: Schema on the migrate account route is malformed.'
- 'no_card_for_customer: No cards for customer with this id.'
- 'no_trans: Card does not have any transactions.'
- 'no_trans_set: Card has no transactions for the given search criteria.'
- 'person_id_dup: A person with this ID already exists.'
- 'preactive_card: Card has not yet been activated.'
- 'processor_error: Failed perform action with processor.'
- 'program_not_configured: Parent/Child card creation not supported by program_id.'
- 'program_mismatch: Program ID must match parent card''s program ID'
- 'process_connection: i2c connection timed out.'
- 'query_params: There are no accounts in this query set.'
- 'rest_dne: The restriction reference does not exist.'
- 'replace_rest_data: Unable to replace restriction. Contact Support.'
- 'restriction_types: Missing restriction type.'
- 'restriction_payload_schema: Schema error for restrictions api.'
- 'resource_conflict: Error with corresponding resource while performing this action.'
- 'request_err: Could fetch account.'
- 'rdc_cred_err: Remote Deposit Failure.'
- 'rdc_process_err: Check processing failed.'
- 'rdc_schema: Schema on the RDC is malformed.'
- 'routing_invalid: Routing number is invalid.'
- 'server_error: Error while performing action on account.'
- 'service_disabled: Service not enabled for Debit/Prepaid Cards.'
- 'statement_args_schema: Invalid arguments passed when requesting statements'
- 'statement_dne: Statement does not exist.'
- 'too_many_trans: Max 250 transactions allowed. Reduce search scope.'
- 'transfer_dne: Transfer referenced does not exist in the Bond system.'
- 'transfer_ref_dne: Transfer process referenced is not found. Similar to transfer_dne.'
- 'token_exchange_post_schema: Error validating Plaid tokens.'
- 'unknown: Uknown processor error. Contact Support.'
- 'unknown_activate_card: Unknown error on the activate card route.'
- 'unknown_create_account: Unknown error on the create account route.'
- 'unknown_create_card: Unknown error on the create card route.'
- 'unknown_create_customer: Unknown error on the create customer route.'
- 'unknown_create_hosted: Unknown error on the create hosted flow route.'
- 'unknown_create_more: Unknown error on the create more customer route.'
- 'unknown_create_transfer: Unknown error on the create transfer route.'
- 'unknown_customer_auth: Unknown error with authorization.'
- 'unknown_delete_account: Unknown error on the delete account route.'
- 'unknown_delete_customer: Unknown error on the delete customer route.'
- 'unknown_delete_related: Unknown error on the delete related customer route.'
- 'unknown_edit_account: Unknown error on the edit account route.'
- 'unknown_edit_customer: Unknown error on the edit customer route.'
- 'unknown_get_customer: Unknown error on the get customer route.'
- 'unknown_get_card_restr: Unknown error on the get card restrictions route.'
- 'unknown_get_card_status: Unknown error on the get card status route.'
- 'unknown_get_card: Unknown error on the get card route.'
- 'unknown_get_payment_history: Unknown error on the get card payment history route.'
- 'unknown_get_transfer: Unknown error in the get transfer route.'
- 'unknown_kyc_get: Unknown error when retrieving KYC results.'
- 'unknown_kyc_webhook: Unknown error on the KYC webhook route.'
- 'unknown_query_card_profile: Unknown error on the get card profile route.'
- 'unknown_rdc: Unknown error on check deposit could not deposit check'
- 'unknown_reissue_card: Unknown error on the re-issue card route.'
- 'unknown_reset_card_pin: Could not reset card pin.'
- 'unknown_set_card_restr: Unknown error on the set card restrictions route.'
- 'unknown_spec_card: Could not query external account.'
- 'unknown_start_kyc: Unknown error on the start KYC route.'
- 'unknown_update_card_profile: Unknown error on the update card profile route.'
- 'unknown_update_card_status: Unknown error on the update card status route.'
- 'unknown_verify_card: Unknown error on the verify card route.'
- 'user_ref_dne: User does not exist.'
- 'webhooks_err: Webhook related error.'
- 'KYC_REQUEST_FAILED: Ensure customer_id and program_id are correctly provided.'
auth_info:
  mentioned_objects:
  - Identity
  - Authorization
client:
  base_url: https://sandbox.bond.tech/api/v0.1
  headers:
    Authorization: <YOUR_AUTHORIZATION>
    Identity: <YOUR_IDENTITY>
source_metadata: null
