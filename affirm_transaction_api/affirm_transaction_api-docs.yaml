resources:
- name: transaction
  endpoint:
    path: /api/transactions
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
- name: authorize_transaction
  endpoint:
    path: /v1/transactions
    method: POST
- name: void_transaction
  endpoint:
    path: /v1/transactions/id/void
    method: POST
- name: capture_transaction
  endpoint:
    path: /v1/transactions/id/capture
    method: POST
- name: refund_transaction
  endpoint:
    path: /v1/transactions/id/refund
    method: POST
- name: update_transaction
  endpoint:
    path: /v1/transactions/id
    method: POST
- name: read_transaction
  endpoint:
    path: /v1/transactions/id
    method: GET
- name: list_transaction_events
  endpoint:
    path: /v1/transactions/events
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: payments
  endpoint:
    path: /v1/payments
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
- name: cards
  endpoint:
    path: /v1/cards
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /v1/users
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: billing
  endpoint:
    path: /developers/reference/shipping-billing-object
    method: GET
    data_selector: billing object
    params: {}
- name: checkout
  endpoint:
    path: /developers/reference/read_checkout-1
    method: GET
    data_selector: checkout object
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
    params: {}
- name: cards
  endpoint:
    path: /cards
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: cards
  endpoint:
    path: /v1/cards
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: checkout
  endpoint:
    path: /checkout
    method: POST
    data_selector: data
    params: {}
- name: checkout
  endpoint:
    path: /checkout
    method: POST
    data_selector: checkoutObject
- name: checkout
  endpoint:
    path: /services/data/vXX.X/sobjects/Checkout
    method: GET
    data_selector: records
    params: {}
- name: checkout
  endpoint:
    path: /checkout
    method: POST
    data_selector: checkoutObject
- name: checkout
  endpoint:
    path: /checkout
    method: POST
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
    params: {}
- name: checkout
  endpoint:
    path: /checkout
    method: POST
    data_selector: checkout
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: checkout
  endpoint:
    path: /api/v2/checkout/direct
    method: POST
    data_selector: checkout_id
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
- name: checkout
  endpoint:
    path: /v1/checkout
    method: POST
    data_selector: data
- name: promotional_messaging
  endpoint:
    path: /developers/docs/promos-api-integration-overview
    method: GET
    data_selector: records
- name: promotional_messaging
  endpoint:
    path: /v1/promotional_messaging
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: promotional_messaging
  endpoint:
    path: /promotional-messaging
    method: POST
    data_selector: data
    params: {}
- name: checkout
  endpoint:
    path: /checkout
    method: POST
    data_selector: data
    params: {}
- name: custom_template
  endpoint:
    path: /upload-custom-template
    method: POST
    data_selector: template
- name: tag_configuration
  endpoint:
    path: /configure-tag
    method: POST
    data_selector: tag
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
    params: {}
- name: authorize_transaction
  endpoint:
    path: /transactions
    method: POST
    data_selector: status
    params: {}
- name: capture_transaction
  endpoint:
    path: /transactions/{id}/capture
    method: POST
    data_selector: amount
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: transactions
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: POST
    data_selector: transaction
    params: {}
- name: capture
  endpoint:
    path: /api/v1/transactions/{transaction_id}/capture
    method: POST
    data_selector: transaction
    params: {}
- name: void
  endpoint:
    path: /api/v1/transactions/{transaction_id}/void
    method: POST
    data_selector: transaction
    params: {}
- name: refund
  endpoint:
    path: /api/v1/transactions/{transaction_id}/refund
    method: POST
    data_selector: transaction
    params: {}
- name: manage_cards
  endpoint:
    path: /managing/cards
    method: GET
- name: cancel_card
  endpoint:
    path: /cancel/card
    method: POST
- name: read_card_details
  endpoint:
    path: /read/card/details
    method: GET
- name: finalize_card
  endpoint:
    path: /finalize/card
    method: POST
- name: cancel_card
  endpoint:
    path: /developers/docs/cancel-a-card
    method: POST
    data_selector: confirmation_response
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: card_details
  endpoint:
    path: /read/card/details
    method: GET
    data_selector: records
- name: Read Card Details
  endpoint:
    path: /developers/docs/read-card-details
    method: GET
    data_selector: card_details
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: finalize_card
  endpoint:
    path: /api/v2/cards/{checkout_id}/finalize
    method: POST
    data_selector: message
- name: finalize_card
  endpoint:
    path: /v1/cards/finalize
    method: POST
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: transaction
  endpoint:
    path: /services/data/vXX.X/sobjects/Transaction
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: POST
    data_selector: id
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: split_capture
  endpoint:
    path: /payments/split-capture
    method: POST
- name: authorization
  endpoint:
    path: /payments/docs/split-capture-api-reference#authorization
    method: POST
- name: capture
  endpoint:
    path: /payments/docs/split-capture-api-reference#capture
    method: POST
- name: refund
  endpoint:
    path: /payments/docs/split-capture-api-reference#refund
    method: POST
- name: void
  endpoint:
    path: /payments/docs/split-capture-api-reference#void
    method: POST
- name: transactions
  endpoint:
    path: /services/data/v1.0/transaction
    method: GET
    data_selector: records
    params: {}
- name: split_capture
  endpoint:
    path: /payments/docs/split-capture
    method: GET
- name: split_capture
  endpoint:
    path: /payments/docs/split-capture-api-reference
    method: POST
    data_selector: records
- name: transaction
  endpoint:
    path: /services/data/vXX.X/sobjects/Transaction
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: checkout
  endpoint:
    path: /checkout
    method: POST
    data_selector: checkout_data
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: cards
  endpoint:
    path: /v1/cards
    method: GET
    data_selector: cards
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: landing_page
  endpoint:
    path: /payments/docs/affirm-landing-page
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Virtual Card
  endpoint:
    path: /payments/docs/render-affirm-checkout-vcn
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: cards
  endpoint:
    path: /v1/cards
    method: GET
    data_selector: data
    params: {}
- name: virtual_card_in_store
  endpoint:
    path: /payments/docs/vcn-in-store
    method: GET
    data_selector: records
- name: checkout_store
  endpoint:
    path: /api/v2/checkout/store
    method: POST
    data_selector: checkout_token
    params: {}
- name: virtual_card
  endpoint:
    path: /v1/virtual_card
    method: POST
    data_selector: data
    params: {}
- name: checkout
  endpoint:
    path: /checkout
    method: POST
    data_selector: checkout_token
- name: promotion
  endpoint:
    path: /promotion
    method: GET
    data_selector: promotion_message
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
    params: {}
- name: checkout_store
  endpoint:
    path: /api/v2/checkout/store
    method: POST
    data_selector: redirect_url
- name: checkout
  endpoint:
    path: /developers/reference/store
    method: POST
    data_selector: checkout_object
- name: in_store_checkout
  endpoint:
    path: /api/v2/checkout/store
    method: POST
    data_selector: checkout_link
    params: {}
- name: transactions
  endpoint:
    path: /services/data/v1.0/transactions
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /api/transactions
    method: GET
    data_selector: records
    params: {}
- name: cards
  endpoint:
    path: /api/cards
    method: GET
    data_selector: records
    params: {}
- name: affirm
  endpoint:
    path: /platforms/docs/configure-affirm-for-adyen
    method: GET
    data_selector: records
    params: {}
- name: operations
  endpoint:
    path: /platforms/docs/adyen-operations
    method: GET
    data_selector: records
    params: {}
- name: promotional_messaging
  endpoint:
    path: /platforms/docs/adyen-on-site-messaging
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: records
- name: Affirm Settings
  endpoint:
    path: /settings/checkout/alternative-payment-settings
    method: POST
    data_selector: settings
    params:
      public_key: your_public_key
      private_key: your_private_key
      min_amount: min_cart_threshold
      max_amount: max_cart_threshold
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: records
- name: cards
  endpoint:
    path: /v1/cards
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: payment_processing
  endpoint:
    path: /platforms/docs/fexco
    method: GET
    data_selector: payment_processing
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: cards
  endpoint:
    path: /cards
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: payment_options
  endpoint:
    path: /payment/options
    method: GET
    data_selector: options
- name: Affirm Transactions
  endpoint:
    path: /processing-affirm-transactions-in-magento-2
    method: GET
    data_selector: transactions
- name: FAQ
  endpoint:
    path: /magento-faqs
    method: GET
    data_selector: faqs
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Affirm
  endpoint:
    path: /platforms/docs/bigcommerce-integration
    method: GET
- name: transaction
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: records
    params: {}
- name: cards
  endpoint:
    path: /v1/cards
    method: GET
    data_selector: records
    params: {}
- name: Affirm Cartridge
  endpoint:
    path: /platforms/docs/sfcc-installation
    method: GET
- name: Enable Affirm as Payment Method
  endpoint:
    path: /platforms/docs/sfcc-configuring-affirm
    method: GET
- name: Add Promotional Messaging
  endpoint:
    path: /platforms/docs/add-promotional-messaging-to-sfcc
    method: GET
- name: Processing Transactions
  endpoint:
    path: /platforms/docs/transaction-management-with-jobs
    method: GET
- name: Enable Partial Capture
  endpoint:
    path: /platforms/docs/using-partial-capture
    method: GET
- name: SFCC FAQ
  endpoint:
    path: /platforms/docs/sfcc-faqs
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: cards
  endpoint:
    path: /cards
    method: GET
    data_selector: records
- name: Affirm Integration
  endpoint:
    path: /platforms/docs/woocommerce-setup-configuration
    method: GET
    data_selector: resources
    params: {}
- name: Processing Transactions
  endpoint:
    path: /affirm-platforms/docs/process-affirm-transactions-on-woocommerce
    method: GET
    data_selector: resources
    params: {}
- name: FAQ
  endpoint:
    path: /affirm-platforms/docs/woocommerce-faqs
    method: GET
    data_selector: resources
    params: {}
- name: transaction
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: card
  endpoint:
    path: /v1/cards
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: POST
    data_selector: transactions
    params: {}
- name: card
  endpoint:
    path: /read/card
    method: GET
    data_selector: records
- name: card
  endpoint:
    path: /{checkout_id}
    method: GET
    data_selector: object
- name: checkout
  endpoint:
    path: /api/v2/checkout/{checkout_id}
    method: GET
    data_selector: object
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: Get Dispute
  endpoint:
    path: /developers/reference/get_dispute-disputes-api
    method: GET
- name: Close Dispute
  endpoint:
    path: /developers/reference/close_dispute-disputes-api
    method: POST
- name: Submit Dispute Evidence
  endpoint:
    path: /developers/reference/submit_dispute_evidence-disputes-api
    method: POST
- name: Upload File
  endpoint:
    path: /developers/reference/create_file_upload-files-api
    method: POST
- name: Download File
  endpoint:
    path: /developers/reference/get_file_download-files-api
    method: GET
- name: transaction
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: transactions
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params:
      transaction_type: charge
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: records
    params: {}
- name: trackOrderConfirmed
  endpoint:
    path: /js/v2/affirm.js
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: trackOrderConfirmed
  endpoint:
    path: /js/v2/affirm.js
    method: GET
    data_selector: trackOrderConfirmed
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
- name: cards
  endpoint:
    path: /v1/cards
    method: GET
    data_selector: data
- name: trackOrderConfirmed
  endpoint:
    path: /js/v2/affirm.js
    method: GET
    data_selector: currency, orderId, paymentMethod, total
- name: transaction
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: transaction
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: card
  endpoint:
    path: /v1/cards
    method: GET
    data_selector: cards
    params: {}
- name: track_order_confirmed
  endpoint:
    path: /js/v2/affirm.js
    method: GET
    data_selector: records
- name: checkout_inline
  endpoint:
    path: /checkout/inline
    method: POST
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: trackOrderConfirmed
  endpoint:
    path: /trackOrderConfirmed
    method: POST
    data_selector: trackOrderConfirmedData
    params:
      currency: USD
      orderId: AA-87654
      paymentMethod: Affirm
      total: 23595
      products: null
- name: track_order_confirmed
  endpoint:
    path: /v1/track_order_confirmed
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: POST
- name: list_transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: cards
  endpoint:
    path: /v1/cards
    method: GET
    data_selector: data
    params: {}
- name: metadata
  endpoint:
    path: /checkout/metadata
    method: POST
    data_selector: metadata
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: cards
  endpoint:
    path: /v1/cards
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: card
  endpoint:
    path: /cards
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: As Low As Messaging
  endpoint:
    path: /promos/v2/{YOUR_PUBLIC_KEY}
    method: GET
    data_selector: promo
    params:
      amount: amount
      field: ala
      use_best_terms: 'true'
      show_cta: 'true'
- name: promo
  endpoint:
    path: /{YOUR_PUBLIC_KEY}
    method: GET
    data_selector: promo
    params:
      amount: '{AMOUNT_IN_CENTS}'
      field: modal
      use_best_terms: 'true'
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: promotional_messaging
  endpoint:
    path: /developers/docs/promotional-messaging-and-prequalification
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions/
    method: POST
- name: transaction
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: checkout
  endpoint:
    path: /checkout
    method: GET
    data_selector: records
- name: cards
  endpoint:
    path: /cards
    method: GET
    data_selector: records
- name: disputes
  endpoint:
    path: /disputes
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
- name: transaction_events
  endpoint:
    path: /transaction_events
    method: GET
    data_selector: events
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: authorize_transaction
  endpoint:
    path: /api/v1/transactions
    method: POST
- name: transaction_events
  endpoint:
    path: /v1/transaction_events
    method: GET
    data_selector: events
    params: {}
- name: transaction_events
  endpoint:
    path: /transactions/events
    method: GET
    data_selector: transactions
    params:
      transaction_type: charge
      transaction_event_type: authorize
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: records
- name: cards
  endpoint:
    path: /v1/cards
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /api/v1/transactions/{transaction_id}
    method: GET
    data_selector: object
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /v1/transactions
    method: POST
- name: update_transaction
  endpoint:
    path: /api/v1/transactions/{transaction_id}
    method: POST
- name: transaction
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: records
- name: capture_transaction
  endpoint:
    path: /{transaction_id}/capture
    method: POST
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
    params: {}
- name: refund_transaction
  endpoint:
    path: /api/v1/transactions/{transaction_id}/refund
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: void_transaction
  endpoint:
    path: /transactions/{transaction_id}/void
    method: POST
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: settlement_event
  endpoint:
    path: /v1/settlement_events
    method: GET
    data_selector: data
- name: settlement_events
  endpoint:
    path: /list_settlement_events
    method: GET
- name: list_settlement_events
  endpoint:
    path: /settlements/events
    method: GET
    data_selector: data
    params:
      merchant_id: string
      limit: integer
      after: date
      before: date
      from_cursor_uuid: uuid
      from_cursor_date: date
      to_cursor_uuid: uuid
      to_cursor_date: date
      ordering: string
- name: settlement_event_summaries
  endpoint:
    path: /api/v1/settlements/daily
    method: GET
    params:
      merchant_id: string
      limit: integer
      after: date
      before: date
      from_cursor_uuid: uuid
      from_cursor_date: date
      to_cursor_uuid: uuid
      to_cursor_date: date
      ordering: string
- name: settlement_event_summary
  endpoint:
    path: /v1/settlement_event_summaries
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /developers/reference/list_transactions
    method: GET
- name: transaction_events
  endpoint:
    path: /developers/reference/list_transaction_events
    method: GET
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: checkout
  endpoint:
    path: /checkout
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: merchant
  endpoint:
    path: /merchants
    method: POST
    data_selector: merchant
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: records
- name: merchant
  endpoint:
    path: /v1/merchants
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /developers/reference/list_transactions
    method: GET
- name: authorization
  endpoint:
    path: /developers/reference/authorize_transaction
    method: POST
- name: settlement_events
  endpoint:
    path: /developers/reference/list_settlement_events
    method: GET
- name: settlement_event_summaries
  endpoint:
    path: /developers/reference/list_settlement_event_summaries
    method: GET
- name: dispute
  endpoint:
    path: /developers/reference/get_dispute-disputes-api
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
- name: transaction
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: transactions
- name: card
  endpoint:
    path: /v1/cards
    method: GET
    data_selector: cards
- name: store
  endpoint:
    path: /developers/reference/the-store-object
    method: GET
    data_selector: store
    params: {}
- name: transaction
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: records
- name: item
  endpoint:
    path: /the-item-object
    method: GET
    data_selector: item
    params: {}
- name: vacation_rental
  endpoint:
    path: /vacation_rental
    method: GET
    data_selector: attributes
- name: rental_car
  endpoint:
    path: /rental_car
    method: GET
    data_selector: attributes
- name: event
  endpoint:
    path: /event
    method: GET
    data_selector: attributes
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: shipping
  endpoint:
    path: /checkout/shipping
    method: POST
    data_selector: shipping
- name: billing
  endpoint:
    path: /checkout/billing
    method: POST
    data_selector: billing
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: address
  endpoint:
    path: /address
    method: GET
    data_selector: address
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: records
    params: {}
- name: checkout
  endpoint:
    path: /api/v2/checkout/direct
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Update Checkout
  endpoint:
    path: /{checkout_id}/update
    method: POST
- name: checkout
  endpoint:
    path: /checkout
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: resend_checkout
  endpoint:
    path: /checkout/resend
    method: POST
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: checkout
  endpoint:
    path: /checkout
    method: POST
    data_selector: data
- name: cancel_card
  endpoint:
    path: /api/v2/cards/{checkout_id}/cancel
    method: POST
- name: cancel_card
  endpoint:
    path: /services/data/vXX.X/sobjects/CancelCard
    method: POST
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
    params: {}
- name: finalize_card
  endpoint:
    path: /finalize/card
    method: POST
- name: Finalize a card
  endpoint:
    path: /api/v2/cards/{checkout_id}/finalize
    method: POST
- name: get_dispute
  endpoint:
    path: /api/v1/disputes/{dispute_id}
    method: GET
- name: close_dispute
  endpoint:
    path: /api/v1/disputes/{dispute_id}/close
    method: POST
- name: dispute
  endpoint:
    path: /api/v1/disputes/{dispute_id}/submit_evidence
    method: POST
    data_selector: evidence
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dispute
  endpoint:
    path: /disputes
    method: GET
- name: get_dispute
  endpoint:
    path: /{dispute_id}
    method: GET
    data_selector: object
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: close_dispute
  endpoint:
    path: /api/v1/disputes/{dispute_id}/close
    method: POST
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: Submit Dispute Evidence
  endpoint:
    path: /api/v1/disputes/{dispute_id}/submit_evidence
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: list_disputes
  endpoint:
    path: /api/partner/v1/merchants/{merchant_id}/disputes
    method: GET
    data_selector: disputes
    params: {}
- name: get_dispute
  endpoint:
    path: /api/partner/v1/merchants/{merchant_id}/disputes/{dispute_id}
    method: GET
    data_selector: dispute
    params: {}
- name: close_dispute
  endpoint:
    path: /api/partner/v1/merchants/{merchant_id}/disputes/{dispute_id}/close
    method: POST
    data_selector: dispute
    params: {}
- name: submit_evidence
  endpoint:
    path: /merchants/{merchant_id}/disputes/{dispute_id}/submit_evidence
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: list_disputes
  endpoint:
    path: /list_disputes-partner-disputes-api
    method: GET
- name: get_dispute
  endpoint:
    path: /get_dispute-partner-disputes-api
    method: GET
- name: close_dispute
  endpoint:
    path: /close_dispute-partner-disputes-api
    method: POST
- name: submit_dispute_evidence
  endpoint:
    path: /submit_dispute_evidence-partner-disputes-api
    method: POST
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
- name: checkout
  endpoint:
    path: /v1/checkout
    method: POST
    data_selector: data
- name: list_disputes
  endpoint:
    path: /merchants/{merchant_id}/disputes
    method: GET
- name: dispute
  endpoint:
    path: /api/v1/disputes
    method: GET
    data_selector: data
    params: {}
- name: dispute
  endpoint:
    path: /disputes
    method: GET
- name: Get Dispute
  endpoint:
    path: /merchants/{merchant_id}/disputes/{dispute_id}
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: upload_dispute_evidence
  endpoint:
    path: /api/v1/files/upload
    method: POST
- name: download_dispute_evidence
  endpoint:
    path: /api/v1/files/{file id}
    method: GET
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: cards
  endpoint:
    path: /v1/cards
    method: GET
    data_selector: cards
    params: {}
- name: upload_file
  endpoint:
    path: /files/upload
    method: POST
    data_selector: file_id
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: POST
    data_selector: data
    params: {}
- name: checkout
  endpoint:
    path: /checkout
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: cards
  endpoint:
    path: /cards
    method: GET
    data_selector: records
- name: upload_dispute_evidence
  endpoint:
    path: /api/partner/v1/files
    method: POST
    data_selector: file_id
    params: {}
- name: download_dispute_evidence
  endpoint:
    path: /api/partner/v1/files/{file_id}
    method: GET
    data_selector: id
    params: {}
- name: transaction
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: transactions
- name: card
  endpoint:
    path: /v1/cards
    method: GET
    data_selector: cards
- name: upload_file
  endpoint:
    path: /create_file_upload-partner-files-api
    method: POST
- name: download_file
  endpoint:
    path: /get_file_download-partner-files-api
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: upload_file
  endpoint:
    path: /api/partner/v1/files/upload
    method: POST
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    params:
      transaction_type: charge
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
    params: {}
- name: checkout
  endpoint:
    path: /api/v2/checkout/{checkout_id}
    method: GET
- name: checkout
  endpoint:
    path: /api/v2/checkout/{checkout_id}
    method: GET
    data_selector: object
- name: transactions
  endpoint:
    path: /api/transactions
    method: GET
    data_selector: records
    params: {}
- name: card
  endpoint:
    path: /api/v2/cards/{checkout_id}
    method: GET
- name: card
  endpoint:
    path: /v1/cards
    method: GET
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Learn how Affirm works, including financing options, and digital wallet integrations
  to help merchants deliver flexible payment solutions.
- Requires setup of connected app in Affirm
- Some responses may include null values in nested fields
- Requires setup of connected app in Affirm.
- Some responses may include nulls in certain fields
- Cookies may impact your experience of the site and the services we are able to offer.
- Merchants are responsible for the custom code that leverages Affirm's MFP functionality.
- 'Plan to configure key Affirm settings in your admin dashboard, including: Sandbox
  vs. Production Mode, Authorization flow (Auth Only vs. Auth + Capture), Checkout
  flow (Redirect vs. Modal).'
- Incorporate Affirm as a payment method using a radio button or dropdown menu, supported
  by the required JS snippet to power the Affirm checkout.
- Use only your test API keys for testing and development. This ensures that you don't
  accidentally modify your live charges.
- Some objects may return nulls in deeply nested fields
- Uses API Keys for authentication.
- Ensure you have valid API keys and token before making requests.
- You do not need to confirm a full order or initiate an actual Affirm loan during
  this process.
- Uses OAuth2 with refresh token — requires setup of connected app in Affirm
- Some API endpoints may have rate limits
- Start your Affirm integration with essential guides, tools, and resources designed
  to help developers launch quickly and efficiently.
- 'Every account is provided with two pairs of keys per environment: One pair for
  sandbox, and One pair for running production transactions.'
- The Affirm Checkout Process is designed for ease of use and smooth integration.
- Uses OAuth2 for authentication.
- Blocking some types of cookies may impact your experience of the site and the services
  we are able to offer.
- Use only your sandbox API keys and domain for testing and development
- Affirm checkout opens in a modal that floats on top of your checkout page
- Ensure to set up the required permissions for API access
- Modal checkout keeps users on your site with a pop-up, while Redirect takes them
  to Affirm’s site for authentication.
- Uses OAuth2 with refresh token — requires setup of connected app in api.
- Set up and manage Affirm’s promotional messaging and prequalification tools.
- Prequalification is enabled by default on all messaging and educational modals on
  product pages.
- Confirm your public API keys are available in the Affirm Merchant Portal.
- Promotional messaging components help reduce latency and offer you more flexibility.
- Requires OAuth2 authentication setup.
- Requires setup of Google Tag Manager account.
- Email campaigns must comply with the CAN-SPAM Act.
- Requires setup of connected app in api
- You can interact with transactions via the Transactions API to change the state
  of that transaction, update metadata, or retrieve details.
- API may have rate limits
- Authorize each Affirm loan only once for the full amount of the transaction being
  purchased.
- Transactions can move through a series of states from capturing to refunding a transaction.
- Uses Basic authentication with public_key and private_key
- API requires proper OAuth token setup.
- API requires setup of OAuth credentials.
- Authorization window is set to 30 days.
- Learn how to manage Affirm virtual cards, including how to cancel, read, and finalize
  card details for a seamless checkout experience.
- The cancel API should not be used after order fulfillment and/or when the card will
  be captured.
- API usage is rate limited, ensure to handle throttling.
- In order to block credit card details from being shared on the client-side callback,
  you will need to contact Affirm to configure your account appropriately.
- Finalizing the card improves the user experience by ensuring that your customers
  receive timely refunds.
- Affirm recommends executing the finalize API request on a virtual card at least
  1 week after the last anticipated capture.
- The integration gives you complete control over the customer experience while ensuring
  secure, end-to-end payment processing.
- Ensure that all required scopes are granted
- Use only your sandbox API keys and domain during testing and development.
- You can initiate multiple Capture requests within a specified authorization window.
- Once you refund an amount, you cannot capture it again.
- Set Up Split Capture
- Use only sandbox API keys and domain during testing and development.
- Affirm Lite has been renamed to Affirm Landing Page. No changes are required for
  existing integrations.
- API requires OAuth2 authentication for all endpoints.
- Affirm Lite has been renamed to Affirm Landing Page.
- Set Up Affirm Landing Page (In-Store Only)
- Uses QR codes or SMS for in-store financing solution
- SMS text messaging is only available in the Live environment. In Sandbox, email
  or direct response URLs must be used for testing.
- Customer must have a mobile phone to complete the Affirm application.
- Use of the Virtual Card is limited to one-time use.
- The Store API will send SMS text messages only in the Affirm Live environment. During
  Sandbox environment testing, please rely on email messages to receive the Checkout
  URL to complete your Affirm purchase.
- The checkout object contains details about the order. Amounts should be in dollar
  amounts represented as Floats.
- The minimum requirements are to initialize the AffirmCheckout object with the item(s),
  shipping details, and payout Amount
- Affirm SDK converts the float total to integer cents before initiating the checkout,
  so may round up or down depending on the decimal places.
- When you visit any website, it may store or retrieve information on your browser,
  mostly in the form of cookies.
- The Store API sends SMS text messages only in the Affirm Live environment. During
  Sandbox environment testing, you can use only email messages to receive the Checkout
  URL to complete your Affirm purchase.
- Affirm requires a data-sharing agreement to enable webhook event sharing.
- The Store API will send SMS text messages only in the Affirm Live environment.
- Some API calls may require specific permissions.
- Affirm is accessible to eligible US merchants within the APEXX merchant ecosystem.
- Enable Affirm in the Bolt Merchant Dashboard.
- Add promotional messaging using affirm.js JavaScript library.
- BridgerPay currently operates under a private documentation model, which is not
  publicly accessible to integrators.
- Cybersource offers a swift and streamlined checkout process.
- The integration requires minimal effort.
- Available to any cruise line company that is already integrated with the Fexco OpenConnect
  payment gateway.
- The integration requires minimal effort and is set-up by your Account Manager.
- If you are already a Global Payments merchant, reach out to your Relationship Manager
  to enable Affirm.
- This integration is available in both the United States and Canada.
- Empower your customers with the versatility of an in-store pay-over-time solution
  through the seamless integration of Affirm with Verifone.
- Merchants located in the United States can now take advantage of Affirm's integration
  with Verifone.
- The integration requires minimal effort and is set up by your Account Manager.
- Existing Worldpay merchants must contact their Relationship Manager to enable Affirm.
- Some customization may be required.
- Integrates with Affirm for flexible payment options and order management.
- Users can download Affirm apps from the Shopify App Store.
- OAuth2 with refresh token required.
- Uses OAuth2 with refresh token — requires setup of connected app in affirm
- Some transactions may return nulls in deeply nested fields
- Uses OAuth2 with refresh token.
- Requires setup of OAuth2 for API access
- Requires setup of Affirm.js for Enhanced Analytics
- Requires API key for integration
- Affirm on Apple Pay is only available for use at checkout online and in apps - not
  when shopping in stores.
- Additionally, it’s only available on iPhone and iPad and requires end users to update
  their Apple devices to iOS 18 or iPadOS 18.
- Affirm is available online wherever the Google Pay button is offered—on apps, mobile
  web (both Android and iOS), and desktop.
- Include platform metadata in your Affirm checkout integration to ensure accurate
  tracking and compatibility.
- Some endpoints may have rate limits
- All interactions between your server and Affirm must use TLS 1.2.
- The key of amount changes to unit_price for the informational URL.
- Explore key planning considerations for integrating Affirm, including setup and
  testing.
- All API requests must be made over HTTPS.
- Sandbox mode and production mode will have a different set of keys and endpoints.
- Do not store any sensitive information as metadata.
- Ensure proper API key permissions are set up in the Affirm dashboard.
- Some objects may return nulls in deeply nested fields.
- Requires a valid API key and secret.
- Some endpoints may have rate limits.
- User confirmation and cancel URLs are required in the merchant object.
- Some responses may vary based on user permissions.
- Ensure proper OAuth2 setup for authentication.
- API requires setup of connected app in Affirm
- The item object requires display_name, sku, unit_price, and can include qty, item_image_url,
  item_url, categories.
- If you are a travel merchant, you are required to include the itinerary object in
  your checkout flow.
- Please ensure that you have the necessary permissions for the API access.
- Providing Affirm with customer shipping and billing addresses improves credit approval
  and fraud prevention.
- Requires OAuth2 authentication to access the API.
- Idempotency key has an expiration date of 24 hours. Idempotency keys are passed
  in using the Idempotency-Key header.
- Idempotency key has an expiration date of 24 hours.
- Idempotency keys are passed in using the Idempotency-Key header.
- Requires setup of connected app in API
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: Check request parameters and body'
- '401 Unauthorized: Verify API key or token'
- '429 Too Many Requests: Reduce request frequency'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Token may be expired or invalid.'
- '404 Not Found: Verify the endpoint path.'
- '401 Unauthorized: Ensure your API key is valid and active'
- '404 Not Found: Check the endpoint URL for correctness'
- '400 Bad Request: Check request parameters and structure.'
- '401 Unauthorized: Verify client ID and secret.'
- '404 Not Found: Ensure the endpoint is correct.'
- '401 Unauthorized: Invalid client credentials or invalid token.'
- '401 Unauthorized: Recheck API key'
- '401 Unauthorized: Recheck API keys'
- '401 Unauthorized: Check your credentials'
- '404 Not Found: Verify the endpoint URL'
- '500 Internal Server Error: Try again later'
- '401 Unauthorized: Recheck OAuth credentials.'
- '400 Bad Request: Incorrect input parameters.'
- '401 Unauthorized: API key is incorrect or missing.'
- '404 Not Found: The specified transaction ID does not exist.'
- 'BAD_REQUEST: The merchant is not a Platforms VCN merchant.'
- 'BAD_REQUEST: There is no checkout_id with that checkout_id.'
- 'BAD_REQUEST: There is no card associated with the checkout_id.'
- 'INVALID_REQUEST: Check the request parameters.'
- 'AUTHENTICATION_FAILED: Verify your client credentials.'
- 'Bad request: The merchant is not a Platforms.vcn merchant.'
- 'Bad request: There is no checkout token with that checkout_token.'
- 'Bad request: There is no card associated with the checkout_token.'
- 'INVALID_REQUEST: Check the request parameters'
- '401 Unauthorized: Verify client credentials'
- '404 Not Found: Resource does not exist'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify API key and permissions.'
- Duplicate requests may generate errors.
- Authorization requests that exceed the window will void uncollected funds.
- '401 Unauthorized: Check your API keys and authentication setup.'
- '400 Bad Request: Ensure all required parameters are provided.'
- Declined customers may still provide an alternative form of payment.
- '401 Unauthorized: Check OAuth credentials'
- '401 Unauthorized: Check your API keys and permissions.'
- '404 Not Found: Endpoint does not exist.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '400 Bad Request: The error message.'
- '401 Unauthorized: The error message.'
- '404 Not Found: The error message.'
- '401 Unauthorized: Check your API key'
- '400 Bad Request: Ensure request parameters are valid'
- API requests without authentication will also fail.
- '200 - Success: The API call worked as expected.'
- '400 - Bad request: The request was improper. This is often due to missing information
  in the request fields.'
- '401 - Unauthorized: No valid API key provided'
- '402 - Request failed: The parameters were valid but the request failed.'
- '404 - Not found: The requested resource could not be found.'
- '409 - Conflict: Charges on this instrument cannot be captured for an amount that
  is greater than the total capturable balance.'
- '500, 502, 503, 504 - Server Errors: Something went wrong on Affirm''s end. Please
  check our status page.'
- '401 Unauthorized: Check your API key and permissions.'
- '404 Not Found: Verify the endpoint URL.'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Recheck your authentication credentials.'
- '404 Not Found: Verify the transaction ID.'
- 400 Bad Request
- 401 Unauthorized
- 404 Not Found
- '409 Conflict: The error message.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '500 Internal Server Error: Human readable message.'
- '503 Unexpected Error: Human readable message.'
- '500 Internal Server Error: internal_server_error'
- '503 Unexpected Error: The error message.'
- '401 Unauthorized: Check API key and permissions.'
- '404 Not Found: Verify endpoint path.'
- '401 Unauthorized: Check your API keys or OAuth token.'
- '403 Forbidden: You do not have permission to access this resource.'
- '401 Unauthorized: Check your OAuth token or credentials.'
- 'INVALID_REQUEST: Check your request parameters.'
- 'UNAUTHORIZED: Invalid API key or token.'
- '400 Bad Request: The error message, HTTP status code, error type, code.'
- '401 Unauthorized: The error message, HTTP status code, error type, code, token.'
- '404 Not Found: The error message, HTTP status code, error type, code, token.'
- '401 Unauthorized: Check your client credentials.'
- '429 Too Many Requests: Rate limit exceeded.'
- 'INVALID_REQUEST: Recheck request parameters.'
- 'UNAUTHORIZED: Ensure valid authentication credentials.'
- 'RATE_LIMIT_EXCEEDED: Reduce request frequency.'
- 400 HTTP 400 Bad Request
- 401 HTTP 401 Unauthorized
- 404 HTTP 404 Not Found
- '401 Unauthorized: You have provided an invalid API key pair.'
- '401 Unauthorized: You did not provide an API key pair.'
- '404: Not found'
- '500: Internal server error'
- '400: Evidence file token missing'
- '400: Invalid dispute evidence field names for evidence submission'
- '400: Cannot close or submit evidence for an already closed dispute'
- '400: Evidence fields not found'
- '400: Evidence past dispute window'
- '400: Idempotency key has been reused with different request data.'
- '400: Idempotency key must be <= 36 chars.'
- '409: The request with this idempotency key is processing. Please wait to retry
  or use a different idempotency key.'
- '401 Unauthorized: api-key-pair-invalid'
- '404 Not found: not_found'
- '500 Internal server error: internal_server_error'
- 400 Invalid Input
- 404 Not found
- 409 Conflict
- 500 Internal server error
- dispute_already_closed
- evidence_fields_not_found
- evidence_file_id_not_found
- evidence_past_dispute_window
- idempotency_data_conflict
- idempotency_key_invalid
- invalid_dispute_evidence_fields
- api-key-pair-invalid
- not_found
- dispute_close_reason_not_found
- unauthorized_access
- idempotent_request_in_progress
- internal_server_error
- '401: You have provided an invalid API key pair.'
- '401: You did not provide an API key pair.'
- '409: The request with this idempotency key is processing.'
- '404 Not found: Human readable message with details about the error'
- '500 Internal server error: Human readable message with details about the error'
- '400 Invalid Input: invalid_file_mime_type, invalid_file_name, idempotency_data_conflict,
  idempotency_key_invalid'
- '401 Unauthorized: api-key-pair-invalid, unauthorized'
- '403 Forbidden: forbidden'
- '413 Request entity too large: request_entity_too_large'
- '401 Unauthorized: Human readable message with details about the error.'
- '403 Not Authorized (Forbidden): Human readable message with details about the error.'
- '404 Not found: NotFoundError'
- '500 Internal server error: Human readable message with details about the error.'
- 403 Forbidden
- 413 Request entity too large
- '403 Not Authorized (Forbidden): Corresponding File ID still pending virus scanning'
- '400: Bad Request'
- '401: Unauthorized'
- '404: Not Found'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthToken
client:
  base_url: https://api.affirm.com
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
