resources:
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: array of objects
    params: {}
- name: checklists
  endpoint:
    path: /v2/checklists
    method: GET
- name: checklists
  endpoint:
    path: /v2/checklists
    method: GET
- name: company
  endpoint:
    path: /v2/company
    method: GET
- name: current_user
  endpoint:
    path: /v2/users/current
    method: GET
    data_selector: ''
- name: users
  endpoint:
    path: /v2/users
    method: GET
- name: create_user
  endpoint:
    path: /v2/users
    method: POST
- name: user
  endpoint:
    path: /v2/users/{id}
    method: GET
- name: update_user
  endpoint:
    path: /v2/users/{id}
    method: PUT
- name: delete_user
  endpoint:
    path: /v2/users/{id}
    method: DELETE
- name: projects
  endpoint:
    path: /v2/projects
    method: POST
- name: projects
  endpoint:
    path: /v2/projects/{id}
    method: GET
- name: projects
  endpoint:
    path: /v2/projects/{id}
    method: PUT
- name: projects
  endpoint:
    path: /v2/projects/{id}
    method: DELETE
- name: archive_project
  endpoint:
    path: /v2/projects/{id}/archive
    method: PATCH
- name: restore_project
  endpoint:
    path: /v2/projects/{id}/restore
    method: PUT
- name: photos
  endpoint:
    path: /projects/{project_id}/photos
    method: GET
- name: photos
  endpoint:
    path: /v2/projects/{project_id}/photos
    method: POST
- name: assigned_users
  endpoint:
    path: /v2/projects/{project_id}/assigned_users
    method: GET
- name: assign_user_to_project
  endpoint:
    path: /v2/projects/{project_id}/assigned_users/{user_id}
    method: PUT
- name: remove_assigned_user
  endpoint:
    path: /v2/projects/{project_id}/assigned_users/{user_id}
    method: DELETE
- name: update_project_notepad
  endpoint:
    path: /v2/projects/{project_id}/notepad
    method: PUT
- name: project_collaborators
  endpoint:
    path: /v2/projects/{project_id}/collaborators
    method: GET
- name: project_invitations
  endpoint:
    path: /v2/projects/{project_id}/invitations
    method: GET
- name: project_invitation
  endpoint:
    path: /v2/projects/{project_id}/invitations
    method: POST
- name: project_labels
  endpoint:
    path: /v2/projects/{project_id}/labels
    method: GET
- name: projects
  endpoint:
    path: /v2/projects/{project_id}/labels
    method: POST
- name: delete_label
  endpoint:
    path: /v2/projects/{project_id}/labels/{id}
    method: DELETE
- name: project_documents
  endpoint:
    path: /v2/projects/{project_id}/documents
    method: GET
- name: upload_document
  endpoint:
    path: /v2/projects/{project_id}/documents
    method: POST
- name: project_comments
  endpoint:
    path: /v2/projects/{project_id}/comments
    method: GET
- name: project_comment
  endpoint:
    path: /v2/projects/{project_id}/comments
    method: POST
- name: project_checklists
  endpoint:
    path: /v2/projects/{project_id}/checklists
    method: GET
- name: project_checklists
  endpoint:
    path: /v2/projects/{project_id}/checklists
    method: GET
- name: create_checklist
  endpoint:
    path: /v2/projects/{project_id}/checklists
    method: POST
- name: create_checklist
  endpoint:
    path: /v2/projects/{project_id}/checklists
    method: POST
- name: project_checklist
  endpoint:
    path: /v2/projects/{project_id}/checklists/{id}
    method: GET
- name: project_checklist
  endpoint:
    path: /v2/projects/{project_id}/checklists/{id}
    method: GET
- name: photos
  endpoint:
    path: /v2/photos
    method: GET
- name: photos
  endpoint:
    path: /photos
    method: GET
- name: photos
  endpoint:
    path: /v2/photos/{id}
    method: GET
- name: photos
  endpoint:
    path: /v2/photos/{id}
    method: GET
- name: photo
  endpoint:
    path: /v2/photos/{id}
    method: PUT
- name: delete_photo
  endpoint:
    path: /v2/photos/{id}
    method: DELETE
- name: update_photo
  endpoint:
    path: /v2/photos/{id}
    method: PUT
- name: list_photo_tags
  endpoint:
    path: /v2/photos/{photo_id}/tags
    method: GET
- name: photo
  endpoint:
    path: /v2/photos/{id}
    method: DELETE
- name: photos
  endpoint:
    path: /v2/photos/{photo_id}/tags
    method: POST
- name: list_photo_tags
  endpoint:
    path: /v2/photos/{photo_id}/tags
    method: GET
- name: photo_comments
  endpoint:
    path: /v2/photos/{photo_id}/comments
    method: GET
- name: photos
  endpoint:
    path: /v2/photos/{photo_id}/tags
    method: POST
- name: photos
  endpoint:
    path: /v2/photos/{photo_id}/comments
    method: POST
- name: photo_comments
  endpoint:
    path: /v2/photos/{photo_id}/comments
    method: GET
- name: update_photo_description
  endpoint:
    path: /v2/photos/{photo_id}/descriptions
    method: POST
- name: tags
  endpoint:
    path: /v2/tags
    method: GET
- name: photos
  endpoint:
    path: /v2/photos/{photo_id}/comments
    method: post
- name: tags
  endpoint:
    path: /v2/tags
    method: POST
- name: tag
  endpoint:
    path: /v2/tags/{id}
    method: GET
- name: update_photo_description
  endpoint:
    path: /v2/photos/{photo_id}/descriptions
    method: POST
- name: tags
  endpoint:
    path: /v2/tags/{id}
    method: PUT
- name: tags
  endpoint:
    path: /v2/tags
    method: GET
- name: tag
  endpoint:
    path: /v2/tags/{id}
    method: DELETE
- name: tags
  endpoint:
    path: /v2/tags
    method: POST
- name: checklist_templates
  endpoint:
    path: /v2/templates/checklists
    method: GET
- name: tag
  endpoint:
    path: /v2/tags/{id}
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: GET
- name: tag
  endpoint:
    path: /v2/tags/{id}
    method: PUT
- name: groups
  endpoint:
    path: /v2/groups
    method: POST
- name: tags
  endpoint:
    path: /v2/tags/{id}
    method: DELETE
- name: group
  endpoint:
    path: /v2/groups/{id}
    method: GET
- name: checklist_templates
  endpoint:
    path: /v2/templates/checklists
    method: GET
- name: groups
  endpoint:
    path: /v2/groups/{id}
    method: PUT
- name: groups
  endpoint:
    path: /v2/groups
    method: GET
- name: group
  endpoint:
    path: /v2/groups/{id}
    method: DELETE
- name: groups
  endpoint:
    path: /v2/groups
    method: POST
- name: webhooks
  endpoint:
    path: /v2/webhooks
    method: GET
- name: group
  endpoint:
    path: /v2/groups/{id}
    method: GET
- name: webhook
  endpoint:
    path: /v2/webhooks
    method: POST
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: GET
- name: group
  endpoint:
    path: /v2/groups/{id}
    method: PUT
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: PUT
- name: groups
  endpoint:
    path: /v2/groups/{id}
    method: DELETE
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: DELETE
- name: webhooks
  endpoint:
    path: /v2/webhooks
    method: GET
- name: webhook
  endpoint:
    path: /v2/webhooks
    method: POST
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: GET
- name: checklists
  endpoint:
    path: /reference/listchecklists
    method: GET
- name: company
  endpoint:
    path: /reference/getcurrentcompany
    method: GET
- name: users
  endpoint:
    path: /reference/getcurrentuser
    method: GET
- name: projects
  endpoint:
    path: /reference/listprojects
    method: GET
- name: photos
  endpoint:
    path: /reference/listphotos
    method: GET
- name: tags
  endpoint:
    path: /reference/listtags
    method: GET
- name: templates
  endpoint:
    path: /reference/listchecklisttemplates
    method: GET
- name: groups
  endpoint:
    path: /reference/listgroups
    method: GET
- name: webhooks
  endpoint:
    path: /reference/listwebhooks
    method: GET
- name: users
  endpoint:
    path: /reference/listusers
    method: GET
    data_selector: records
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: PUT
- name: projects
  endpoint:
    path: /reference/listprojects
    method: GET
    data_selector: records
- name: photos
  endpoint:
    path: /reference/listphotos
    method: GET
    data_selector: records
- name: Contact
  endpoint:
    path: /reference/contact
    method: GET
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: DELETE
- name: comment
  endpoint:
    path: /reference/comment
    method: GET
    data_selector: records
- name: Address
  endpoint:
    path: /reference/address
    method: GET
- name: checklists
  endpoint:
    path: /reference/listchecklists
    method: GET
- name: company
  endpoint:
    path: /reference/getcurrentcompany
    method: GET
- name: users
  endpoint:
    path: /reference/getcurrentuser
    method: GET
- name: ImageURI
  endpoint:
    path: /reference/imageuri
    method: GET
    data_selector: uri
- name: Users
  endpoint:
    path: /reference/listusers
    method: GET
    data_selector: records
    params: {}
- name: Retrieve Current User
  endpoint:
    path: /reference/getcurrentuser
    method: GET
    data_selector: records
    params: {}
- name: Create User
  endpoint:
    path: /reference/createuser
    method: POST
    data_selector: records
    params: {}
- name: Retrieve User
  endpoint:
    path: /reference/getuser
    method: GET
    data_selector: records
    params: {}
- name: Update User
  endpoint:
    path: /reference/updateuser
    method: PUT
    data_selector: records
    params: {}
- name: Delete User
  endpoint:
    path: /reference/deleteuser
    method: DELETE
    data_selector: records
    params: {}
- name: checklists
  endpoint:
    path: /reference/listchecklists
    method: GET
- name: company
  endpoint:
    path: /reference/getcurrentcompany
    method: GET
- name: users
  endpoint:
    path: /reference/getcurrentuser
    method: GET
- name: projects
  endpoint:
    path: /reference/listprojects
    method: GET
- name: photos
  endpoint:
    path: /reference/listphotos
    method: GET
- name: tags
  endpoint:
    path: /reference/listtags
    method: GET
- name: templates
  endpoint:
    path: /reference/listchecklisttemplates
    method: GET
- name: groups
  endpoint:
    path: /reference/listgroups
    method: GET
- name: webhooks
  endpoint:
    path: /reference/listwebhooks
    method: GET
- name: projects
  endpoint:
    path: /reference/listprojects
    method: GET
    data_selector: records
- name: company
  endpoint:
    path: /reference/getcurrentcompany
    method: GET
    data_selector: records
- name: user
  endpoint:
    path: /reference/getcurrentuser
    method: GET
    data_selector: records
- name: photos
  endpoint:
    path: /reference/listphotos
    method: GET
    data_selector: photos
- name: photo
  endpoint:
    path: /reference/getphoto
    method: GET
    data_selector: photo
- name: update_photo
  endpoint:
    path: /reference/updatephoto
    method: PUT
    data_selector: photo
- name: delete_photo
  endpoint:
    path: /reference/deletephoto
    method: DELETE
    data_selector: photo
- name: Contact
  endpoint:
    path: /reference/contact
    method: GET
    data_selector: records
- name: checklists
  endpoint:
    path: /reference/listchecklists
    method: GET
- name: company
  endpoint:
    path: /reference/getcurrentcompany
    method: GET
- name: users
  endpoint:
    path: /reference/listusers
    method: GET
- name: projects
  endpoint:
    path: /reference/listprojects
    method: GET
- name: photos
  endpoint:
    path: /reference/listphotos
    method: GET
- name: tags
  endpoint:
    path: /reference/listtags
    method: GET
- name: templates
  endpoint:
    path: /reference/listchecklisttemplates
    method: GET
- name: groups
  endpoint:
    path: /reference/listgroups
    method: GET
- name: webhooks
  endpoint:
    path: /reference/listwebhooks
    method: GET
- name: comment
  endpoint:
    path: /reference/comment
    method: GET
    data_selector: records
- name: Tags
  endpoint:
    path: /reference/listtags
    method: GET
    data_selector: records
- name: Address
  endpoint:
    path: /address
    method: GET
- name: groups
  endpoint:
    path: /reference/listgroups
    method: GET
    data_selector: groups
    params: {}
- name: ImageURI
  endpoint:
    path: /reference/imageuri
    method: GET
- name: webhook
  endpoint:
    path: /reference/listwebhooks
    method: GET
    data_selector: records
- name: Coordinate
  endpoint:
    path: /coordinate
    method: GET
    data_selector: coordinate
    params: {}
- name: document
  endpoint:
    path: /documents
    method: GET
    data_selector: documents
- name: Tag
  endpoint:
    path: /reference/listtags
    method: GET
    data_selector: ''
- name: groups
  endpoint:
    path: /reference/listgroups
    method: GET
    data_selector: groups
- name: webhook
  endpoint:
    path: /reference/listwebhooks
    method: GET
- name: projects
  endpoint:
    path: /v2/projects
    method: POST
    data_selector: null
    params: {}
- name: checklists
  endpoint:
    path: /v2/checklists
    method: GET
- name: company
  endpoint:
    path: /v2/company
    method: GET
- name: current_user
  endpoint:
    path: /v2/users/current
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
- name: checklists
  endpoint:
    path: /v2/checklists
    method: GET
- name: photos
  endpoint:
    path: /photos
    method: GET
- name: company
  endpoint:
    path: /v2/company
    method: GET
- name: tags
  endpoint:
    path: /tags
    method: GET
- name: current_user
  endpoint:
    path: /v2/users/current
    method: GET
- name: checklist_templates
  endpoint:
    path: /v2/templates/checklists
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: GET
- name: photos
  endpoint:
    path: /photos
    method: GET
- name: webhook
  endpoint:
    path: /v2/webhooks
    method: GET
- name: tags
  endpoint:
    path: /v2/tags
    method: GET
- name: checklist_templates
  endpoint:
    path: /v2/templates/checklists
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
notes:
- Partner integrations are required to use OAuth if at all possible.
- CompanyCam uses a Bearer Token to authorize the request, so make sure you prepend
  your token with Bearer.
- Each time you request a new access_token, you will receive a new refresh_token as
  well.
- A webhook with a total error count above 25 will be disabled.
- Total error count is reset with each successful response.
- CompanyCam rate limits API requests to protect against excessive use.
- It is recommended that you implement a sufficient retry mechanism in order to account
  for potential requests that might be denied because of a rate limit.
- CompanyCam uses a Bearer Token to authorize the request
- To designate a different CompanyCam User as the creator or editor, send the User's
  CompanyCam email in the request header.
- Uses OAuth2 with authorization code flow — requires setup of a client.
- Webhook requests expect an HTTP 200 response code.
- Webhook will retry with exponential backoff strategy for responses other than 200.
- CompanyCam rate limits API requests to protect against excessive use. It is recommended
  that you implement a sufficient retry mechanism in order to account for potential
  requests that might be denied because of a rate limit.
- The current User is defined by the person who authenticated with CompanyCam using
  the OAuth2.0 flow.
- To designate a different User as the creator or editor, send that User's email in
  the request header as X_COMPANYCAM_USER.
errors:
- '400: Bad Request'
- '404: Not Found'
- '500: Internal Server Error'
- HTTP Status Codes
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 401 Unauthorized
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: Bad Request – The request is invalid'
- '401: Unauthorized – The user needs to authenticate or authentication failed'
- '402: Payment Required – The user''s subscription has expired'
- '403: Forbidden – The user doesn’t have privilege to access the resource'
- '404: Not Found – The specified resource could not be found'
- '409: Conflict – The entity is not unique'
- '422: Unprocessable Entity – There was an issue persisting your request due to invalid
  data'
- '500: Internal Server Error – We had a problem with our server'
- Any response code that is not exactly a 200 will result in the Webhook to retry
- 'Rate limit exceeded: Implement retry mechanism'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.companycam.com
  auth:
    type: Bearer
source_metadata: null
