resources:
- name: coherence_sdk
  endpoint:
    path: /Packages/manifest.json
    method: EDIT
    data_selector: dependencies
    params: {}
- name: authority_transfer
  endpoint:
    path: /manual/authority/authority-transfer
    method: GET
    data_selector: content
    params: {}
- name: lifetime
  endpoint:
    path: /manual/lifetime
    method: GET
    data_selector: content
    params: {}
- name: uniqueness
  endpoint:
    path: /manual/lifetime/uniqueness
    method: GET
    data_selector: content
    params: {}
- name: simulate_in
  endpoint:
    path: /manual/simulate-in
    method: GET
    data_selector: content
    params: {}
- name: ClientConnections
  endpoint:
    path: /api/ClientConnections
    method: GET
    data_selector: connections
    params: {}
- name: Worlds
  endpoint:
    path: /api/Worlds
    method: GET
    data_selector: worlds
    params: {}
- name: Rooms
  endpoint:
    path: /api/Rooms
    method: GET
    data_selector: rooms
    params: {}
- name: child_game_objects
  endpoint:
    path: /manual/networking-state-changes/child-gameobjects
    method: GET
    data_selector: records
- name: InventoryBinding
  endpoint:
    path: /manual/networking-state-changes/supported-types
    method: GET
    data_selector: bindings
    params: {}
- name: rigid_bodies
  endpoint:
    path: /manual/networking-state-changes/rigid-bodies
    method: GET
    data_selector: records
- name: advanced_rigid_body_support
  endpoint:
    path: /manual/networking-state-changes/rigid-bodies
    method: GET
    data_selector: records
- name: CoherenceCommsNetwork
  endpoint:
    path: /manual/networking-voice/coherencecommsnetwork
    method: GET
    data_selector: components
    params: {}
- name: CoherenceSyncVoice
  endpoint:
    path: /manual/networking-voice/coherencesyncvoice
    method: GET
    data_selector: components
    params: {}
- name: CoherencePlayer
  endpoint:
    path: /manual/networking-voice/coherenceplayer
    method: GET
    data_selector: components
    params: {}
- name: Coherence Sync Voice
  endpoint:
    path: /path/to/coherence/sync/voice
    method: GET
    data_selector: records
    params: {}
- name: Coherence Player
  endpoint:
    path: /path/to/coherence/player
    method: GET
    data_selector: records
    params: {}
- name: authority_models
  endpoint:
    path: /manual/authority
    method: GET
    data_selector: authority_models
    params: {}
- name: server_side_authority
  endpoint:
    path: /manual/authority/server-side-authority
    method: GET
    data_selector: server_side_authority
    params: {}
- name: client_authority
  endpoint:
    path: /manual/authority/distributed-client-authority
    method: GET
    data_selector: client_authority
    params: {}
- name: authority_transfer
  endpoint:
    path: /manual/authority/authority-transfer
    method: GET
    data_selector: authority_transfer_data
    params: {}
- name: persistent_objects
  endpoint:
    path: /manual/lifetime/persistence
    method: GET
    data_selector: ''
- name: deleting_persistent_object
  endpoint:
    path: /manual/lifetime/deleting-a-persistent-object
    method: GET
    data_selector: ''
- name: limits_to_persistence
  endpoint:
    path: /manual/lifetime/limits-to-persistence
    method: GET
    data_selector: ''
- name: limits_to_persistent_object_count
  endpoint:
    path: /manual/lifetime/limits-to-persistent-object-count
    method: GET
    data_selector: ''
- name: Counter
  endpoint:
    path: /manual/lifetime/example-a-global-counter
    method: GET
    data_selector: records
- name: NumberRequester
  endpoint:
    path: /manual/lifetime/numberrequester
    method: GET
    data_selector: records
- name: CoherenceNode
  endpoint:
    path: /manual/components/coherence-node
    method: GET
    data_selector: records
    params: {}
- name: CoherenceSync
  endpoint:
    path: /manual/components/coherence-sync
    method: GET
    data_selector: records
    params: {}
- name: PrefabSyncGroup
  endpoint:
    path: /manual/parenting-network-entities/nesting-prefabs-at-edit-time
    method: GET
    data_selector: records
    params: {}
- name: CoherenceNode
  endpoint:
    path: /manual/parenting-network-entities/deeply-nested-entities
    method: GET
    data_selector: records
    params: {}
- name: CoherenceSyncConfig
  endpoint:
    path: /manual/asset-management/coherencesyncconfig-assets
    method: GET
    data_selector: assets
    params: {}
- name: CoherenceSyncConfigRegistry
  endpoint:
    path: /manual/asset-management/coherence-sync-config-registry
    method: GET
    data_selector: registry
    params: {}
- name: CoherenceSync
  endpoint:
    path: /manual/asset-management/using-coherencesyncconfig-to-instantiate-gameobjects
    method: GET
    data_selector: instances
    params: {}
- name: Default
  endpoint:
    path: /default
    method: GET
    data_selector: records
- name: Pool
  endpoint:
    path: /pool
    method: GET
    data_selector: records
- name: DestroyCoherenceSync
  endpoint:
    path: /destroy-coherence-sync
    method: GET
    data_selector: records
- name: Resources
  endpoint:
    path: /manual/asset-management/load-via
    method: GET
    data_selector: records
- name: Direct Reference
  endpoint:
    path: /manual/asset-management/load-via
    method: GET
    data_selector: records
- name: Addressables
  endpoint:
    path: /manual/asset-management/load-via
    method: GET
    data_selector: records
- name: Creating your own asset loader
  endpoint:
    path: /manual/asset-management/load-via#creating-your-own-asset-loader
    method: GET
    data_selector: records
- name: CoherenceBridge
  endpoint:
    path: /manual/components/coherence-bridge
    method: GET
- name: CoherenceSceneLoader
  endpoint:
    path: /manual/components/coherence-sceneloader
    method: GET
- name: CoherenceScene
  endpoint:
    path: /manual/components/coherence-scene
    method: GET
- name: CoherenceSceneLoader
  endpoint:
    path: /coherence/scene/loader
    method: GET
    data_selector: loaders
    params: {}
- name: CoherenceScene
  endpoint:
    path: /coherence/scene
    method: GET
    data_selector: scenes
    params: {}
- name: Replication Server API
  endpoint:
    path: /manual/replication-server/replication-server-api
    method: GET
    data_selector: records
- name: rooms
  endpoint:
    path: /hosting/coherence-cloud/coherence-cloud-apis/rooms
    method: GET
- name: worlds
  endpoint:
    path: /hosting/coherence-cloud/coherence-cloud-apis/worlds
    method: GET
- name: lobbies
  endpoint:
    path: /hosting/coherence-cloud/coherence-cloud-apis/lobbies
    method: GET
- name: simulator
  endpoint:
    path: /simulator
    method: GET
- name: simulator
  endpoint:
    path: /coherence/simulator
    method: GET
- name: room
  endpoint:
    path: /coherence/room
    method: POST
- name: simulator
  endpoint:
    path: /manual/simulation-server
    method: GET
- name: SimulatorUtility
  endpoint:
    path: /api/SimulatorUtility
    method: GET
- name: ClientConnection
  endpoint:
    path: /client/connections
    method: GET
    data_selector: connections
- name: Replication Server
  endpoint:
    path: /manual/replication-server
    method: GET
    data_selector: parameters
    params:
      min-query-distance: '0.1'
      send-frequency: '20'
      recv-frequency: '60'
      port: '32001'
      signalling-port: '32002'
      schema: /Users/coherence/unity/Coherence.Toolkit/Toolkit.schema,/Users/coherence/MyProject/Library/coherence/Gathered.schema
- name: rooms
  endpoint:
    path: /rooms
    method: GET
- name: Rooms
  endpoint:
    path: /hosting/coherence-cloud/coherence-cloud-apis/rooms
    method: GET
- name: Lobbies
  endpoint:
    path: /hosting/coherence-cloud/coherence-cloud-apis/lobbies
    method: GET
- name: Worlds
  endpoint:
    path: /hosting/coherence-cloud/coherence-cloud-apis/worlds
    method: GET
- name: worlds
  endpoint:
    path: /hosting/coherence-cloud/coherence-cloud-apis/worlds
    method: GET
    data_selector: records
    params: {}
- name: rooms
  endpoint:
    path: /hosting/coherence-cloud/coherence-cloud-apis/rooms
    method: GET
    data_selector: records
    params: {}
- name: lobbies
  endpoint:
    path: /hosting/coherence-cloud/coherence-cloud-apis/lobbies
    method: GET
    data_selector: records
    params: {}
- name: rooms
  endpoint:
    path: /coherence-cloud/coherence-cloud-apis/rooms
    method: GET
- name: Login As Guest
  endpoint:
    path: /hosting/coherence-cloud/authentication-service-player-accounts#login-as-guest
    method: POST
- name: Login With Password
  endpoint:
    path: /hosting/coherence-cloud/authentication-service-player-accounts#login-with-password
    method: POST
- name: Authentication
  endpoint:
    path: /hosting/coherence-cloud/authentication-service-player-accounts
    method: GET
- name: Lobbies
  endpoint:
    path: /hosting/coherence-cloud/game-services/lobbies
    method: GET
- name: Cloud Storage
  endpoint:
    path: /hosting/coherence-cloud/game-services/cloud-storage
    method: GET
- name: PlayerAccount
  endpoint:
    path: /api/Coherence.Cloud.PlayerAccount
    method: GET
- name: CloudService
  endpoint:
    path: /api/Coherence.Cloud.CloudService
    method: GET
- name: replication_server
  endpoint:
    path: /manual/replication-server
    method: GET
    data_selector: records
    params: {}
- name: custom_transport
  endpoint:
    path: /custom/transport
    method: GET
    data_selector: data
    params: {}
- name: custom_relay
  endpoint:
    path: /custom/relay
    method: GET
    data_selector: data
    params: {}
- name: worlds
  endpoint:
    path: /api/v1.8/worlds
    method: GET
    data_selector: data
- name: rooms
  endpoint:
    path: /api/v1.8/rooms
    method: GET
    data_selector: data
- name: CoherenceCloudLogin
  endpoint:
    path: /coherence/cloud/login
    method: POST
    data_selector: services
- name: worlds
  endpoint:
    path: /api/worlds
    method: GET
    data_selector: records
- name: rooms
  endpoint:
    path: /api/rooms
    method: GET
    data_selector: records
- name: Replication Server
  endpoint:
    path: /manual/replication-server
    method: GET
    data_selector: replication_server_data
- name: Rooms UI
  endpoint:
    path: /getting-started/samples-and-tutorials/samples-connection-uis#room-connect-dialog
    method: GET
- name: Worlds UI
  endpoint:
    path: /getting-started/samples-and-tutorials/samples-connection-uis#world-connect-dialog
    method: GET
- name: Lobbies UI
  endpoint:
    path: /getting-started/samples-and-tutorials/samples-connection-uis#lobbies-ui
    method: GET
- name: Matchmaking UI
  endpoint:
    path: /getting-started/samples-and-tutorials/samples-connection-uis#matchmaking-ui
    method: GET
- name: ReplicationServer
  endpoint:
    path: /replication-server
    method: GET
    data_selector: entities
    params: {}
- name: Worlds
  endpoint:
    path: /worlds
    method: GET
    data_selector: worlds
    params: {}
- name: Rooms
  endpoint:
    path: /rooms
    method: GET
    data_selector: rooms
    params: {}
- name: ClientConnection
  endpoint:
    path: /manual/client-connections#clientconnection-objects
    method: GET
    data_selector: records
- name: CoherenceSync
  endpoint:
    path: /manual/components/coherence-sync
    method: GET
    data_selector: records
- name: Rigid Bodies
  endpoint:
    path: /manual/networking-state-changes/rigid-bodies
    method: GET
- name: CoherenceCommsNetwork
  endpoint:
    path: /manual/networking-voice
    method: GET
- name: CoherenceSyncVoice
  endpoint:
    path: /manual/networking-voice
    method: GET
- name: CoherencePlayer
  endpoint:
    path: /manual/networking-voice
    method: GET
- name: Coherence Sync Voice
  endpoint:
    path: /manual/components/coherence-bridge
    method: GET
- name: Coherence Player
  endpoint:
    path: /manual/client-connections
    method: GET
- name: counter
  endpoint:
    path: /counter
    method: GET
    data_selector: counter
    params: {}
- name: number_requester
  endpoint:
    path: /number_requester
    method: GET
    data_selector: number_requester
    params: {}
- name: CoherenceSync
  endpoint:
    path: /manual/parenting-network-entities
    method: GET
    data_selector: records
- name: Resources
  endpoint:
    path: /manual/asset-management/load-via
    method: GET
    data_selector: records
- name: Direct Reference
  endpoint:
    path: /manual/asset-management/load-via/direct-reference
    method: GET
    data_selector: records
- name: Addressables
  endpoint:
    path: /manual/asset-management/load-via/addressables
    method: GET
    data_selector: records
- name: CoherenceBridge
  endpoint:
    path: /manual/components/coherence-bridge
    method: GET
- name: CoherenceSceneLoader
  endpoint:
    path: /manual/components/coherence-sceneloader
    method: GET
- name: CoherenceScene
  endpoint:
    path: /manual/components/coherence-scene
    method: GET
- name: CoherenceSceneLoader
  endpoint:
    path: /coherence/scene-loader
    method: GET
    data_selector: sceneLoaders
    params: {}
- name: CoherenceScene
  endpoint:
    path: /coherence/scene
    method: GET
    data_selector: scenes
    params: {}
- name: Replication Server API
  endpoint:
    path: /manual/replication-server/replication-server-api
    method: GET
    data_selector: data
    params: {}
- name: Rooms
  endpoint:
    path: /hosting/coherence-cloud/coherence-cloud-apis/rooms
    method: GET
- name: Worlds
  endpoint:
    path: /hosting/coherence-cloud/coherence-cloud-apis/worlds
    method: GET
- name: Lobbies
  endpoint:
    path: /hosting/coherence-cloud/game-services/lobbies
    method: GET
- name: simulator_parameters
  endpoint:
    path: /manual/simulation-server/simulator-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: simulator
  endpoint:
    path: /simulator
    method: GET
- name: simulator
  endpoint:
    path: /manual/simulation-server
    method: GET
- name: Host Authority Features
  endpoint:
    path: /hosting/coherence-cloud/coherence-cloud-apis/worlds
    method: GET
    data_selector: features
    params: {}
- name: ClientConnections
  endpoint:
    path: /manual/client-connections
    method: GET
    data_selector: ClientConnections
    params: {}
- name: ClientConnections
  endpoint:
    path: /ClientConnections
    method: GET
    data_selector: connections
    params: {}
- name: Replication Server API
  endpoint:
    path: /manual/replication-server/replication-server-api
    method: GET
- name: world
  endpoint:
    path: /replication-server/world
    method: GET
    params: {}
- name: rooms
  endpoint:
    path: /rooms
    method: GET
- name: rooms
  endpoint:
    path: /hosting/coherence-cloud/coherence-cloud-apis/rooms
    method: GET
- name: lobbies
  endpoint:
    path: /hosting/coherence-cloud/coherence-cloud-apis/lobbies
    method: GET
- name: worlds
  endpoint:
    path: /hosting/coherence-cloud/coherence-cloud-apis/worlds
    method: GET
- name: rooms
  endpoint:
    path: /hosting/coherence-cloud/coherence-cloud-apis/rooms
    method: GET
    data_selector: rooms
    params: {}
- name: Authentication
  endpoint:
    path: /hosting/coherence-cloud/authentication-service-player-accounts
    method: GET
- name: Lobbies
  endpoint:
    path: /hosting/coherence-cloud/game-services/lobbies
    method: GET
- name: Cloud Storage
  endpoint:
    path: /hosting/coherence-cloud/game-services/cloud-storage
    method: GET
- name: CloudService
  endpoint:
    path: /api/Coherence.Cloud.CloudService
    method: GET
- name: PlayerAccount
  endpoint:
    path: /api/Coherence.Cloud.PlayerAccount
    method: GET
- name: Replication Server
  endpoint:
    path: /hosting/client-hosting
    method: GET
- name: replication_server
  endpoint:
    path: /replication-server
    method: GET
    data_selector: logs
- name: CoherenceCloudLogin
  endpoint:
    path: /coherence/cloud/login
    method: POST
    data_selector: services
    params: {}
- name: Worlds
  endpoint:
    path: /coherence-cloud/Worlds
    method: GET
    data_selector: records
- name: Rooms
  endpoint:
    path: /coherence-cloud/Rooms
    method: GET
    data_selector: records
- name: Lobbies
  endpoint:
    path: /coherence-cloud/Lobbies
    method: GET
    data_selector: records
- name: Replication Server
  endpoint:
    path: /coherence/replication-server
    method: GET
    data_selector: data
    params: {}
- name: Game Client
  endpoint:
    path: /coherence/game-client
    method: GET
    data_selector: data
    params: {}
- name: Simulation Server
  endpoint:
    path: /coherence/simulation-server
    method: GET
    data_selector: data
    params: {}
- name: Schema
  endpoint:
    path: /coherence/schema
    method: GET
    data_selector: data
    params: {}
- name: rooms
  endpoint:
    path: /rooms
    method: GET
- name: worlds
  endpoint:
    path: /worlds
    method: GET
- name: lobbies
  endpoint:
    path: /lobbies
    method: GET
- name: coherence
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: coherence_sdk
  endpoint:
    path: /dependencies/io.coherence.sdk
    method: ADD
    data_selector: dependencies
- name: CoherenceBridge
  endpoint:
    path: /coherence/SceneSetup/CreateCoherenceBridge
    method: POST
- name: LiveQuery
  endpoint:
    path: /coherence/SceneSetup/CreateLiveQuery
    method: POST
- name: Connect Dialog UI
  endpoint:
    path: /coherence/ExploreSamples
    method: GET
- name: Prefab
  endpoint:
    path: /prefab
    method: GET
    data_selector: records
- name: CoherenceSyncConfig
  endpoint:
    path: /coherence/sync/config
    method: GET
    data_selector: configs
- name: CoherenceSyncConfigRegistry
  endpoint:
    path: /coherence/sync/config/registry
    method: GET
    data_selector: registry
- name: ClientFixedSimulationFrame
  endpoint:
    path: /api/Coherence.Core.NetworkTime
    method: GET
    data_selector: ClientFixedSimulationFrame
    params: {}
- name: NetworkTimeScale
  endpoint:
    path: /api/Coherence.Core.NetworkTime
    method: GET
    data_selector: NetworkTimeScale
    params: {}
- name: OnFixedNetworkUpdate
  endpoint:
    path: /api/Coherence.Core.NetworkTime
    method: GET
    data_selector: OnFixedNetworkUpdate
    params: {}
- name: Replication Server
  endpoint:
    path: /replication/server
    method: GET
    data_selector: state
    params: {}
- name: simulator
  endpoint:
    path: /simulators
    method: POST
- name: simulator
  endpoint:
    path: /simulator/utility
    method: GET
    data_selector: parameters
    params: {}
- name: replication_server
  endpoint:
    path: /replication/server
    method: POST
    data_selector: server
    params:
      mode: World
      APIPort: 64002
      UDPPort: 32001
      SignallingPort: 32002
      SendFrequency: 20
      ReceiveFrequency: 60
      AutoShutdown: false
- name: client_connection
  endpoint:
    path: /client/connections
    method: GET
    data_selector: connections
    params: {}
- name: rooms
  endpoint:
    path: /api/rooms
    method: POST
    data_selector: rooms
    params: {}
- name: simulators
  endpoint:
    path: /api/simulators
    method: GET
    data_selector: simulators
    params: {}
- name: lobby
  endpoint:
    path: /lobbies
    method: GET
    data_selector: lobbies
    params: {}
- name: Lobby
  endpoint:
    path: /1.2/coherence-cloud/using-coherence-cloud-in-unity/lobbies
    method: GET
    data_selector: lobbies
    params: {}
- name: game_account
  endpoint:
    path: /1.2/coherence-cloud/enabling-features/game-account
    method: GET
- name: key_value_store
  endpoint:
    path: /1.2/coherence-cloud/enabling-features/key-value-store
    method: GET
- name: Worlds
  endpoint:
    path: /coherence/cloud/worlds
    method: GET
- name: Rooms
  endpoint:
    path: /coherence/cloud/rooms
    method: GET
- name: Game Services
  endpoint:
    path: /coherence/cloud/game-services
    method: GET
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Fast network engine with cloud scaling, state replication, persistence and auto
  load balancing.
- The coherence SDK only supports Unity at the moment.
- Add an entry for the coherence SDK under the dependencies object
- Add one for the scoped registry in the scopedRegistries array
- All Clients have to connect to a Replication Server, which can run locally or in
  our cloud.
- If scenes show up magenta/pink, convert materials using the Render Pipeline Converter.
- The Matchmaking connect dialog
- Before launching the sample scene, you need to log in to coherence Cloud via coherence
  > Hub > Cloud > Signup / Login and select a cloud Project to use.
- You will also need to have at least one Region enabled in the Project Settings section
  of your Online Dashboard.
- Some objects like Contact may return nulls in deeply nested fields
- Ensure you have baked the netcode.
- For local RS, shut down the Replication Server and launch it again.
- For cloud RS, ensure you have uploaded the schema to the cloud, then retry.
- Press Esc with the Command Prompt having focus to clear any selected text and resume
  the application.
- You can also disable the Quick Edit Mode in Command Prompt's Properties to make
  it more difficult to accidentally select text.
- Ensure you only have one Replication Server running.
- Authority requests can succeed or fail based on transfer settings.
- Persistent Entities remain even after owner disconnects.
- Allows multiple connections at the same time from the game or within the Unity Editor.
- Having at least one query in the scene is necessary to receive any network update.
- Working with multiple LiveQueries is an additive operation and not a subtractive
  one.
- The component provides a no-code solution for logging in to coherence Cloud.
- User / Password Auth Enabled must be ticked in Project Settings on your Online Dashboard
  for this authentication method to be usable.
- Steam Auth Enabled must be ticked in Project Settings on your Online Dashboard for
  this authentication method to be usable.
- Epic Auth Enabled must be ticked in Project Settings on your Online Dashboard for
  this authentication method to be usable.
- One-Time Code Auth Enabled must be ticked in Project Settings on your Online Dashboard
  for this authentication method to be usable.
- JWT Auth Enabled must be ticked in Project Settings on your Online Dashboard for
  this authentication method to be usable.
- PSN Auth Enabled must be ticked in Project Settings on your Online Dashboard for
  this authentication method to be usable.
- Xbox Auth Enabled must be ticked in Project Settings on your Online Dashboard for
  this authentication method to be usable.
- Nintendo Auth Enabled must be ticked in Project Settings on your Online Dashboard
  for this authentication method to be usable.
- The goal of the CoherenceNode component is to keep track of where the object is
  in the hierarchy.
- Clients cannot directly destroy entities they don't have authority over.
- You can take authority over the entity first, then destroy it locally.
- Commands might be received by other Clients in a completely different order than
  they were sent.
- Sending commands as ordered should be used only where necessary, since each ordered
  command slightly increases bandwidth and latency in case of bad network conditions.
- When a Client receives a command targeted at StateAuthorityOnly but it has already
  transferred an authority of that entity, the command is simply discarded.
- Cyclic references are undefined behavior for now.
- Advanced Rigid Body support
- Interpolation settings can be tweaked in Play mode where you can see the result
  on the screen immediately, but the changes you make will be reverted again once
  you exit Play mode.
- Interpolation only happens on remote objects, so you need to select a remote object
  to experiment with interpolation settings in Play mode.
- Requires a copy of Dissonance on your project for integration to work.
- Authority over an entity is transferrable.
- Entities can become orphaned and are not simulated.
- Uses CoherenceInput for server-side simulation.
- Uses Client-side prediction for responsive input handling.
- Misprediction detection and reconciliation are essential for accurate state representation.
- coherence supports session persistence only
- Currently, the maximum number of persistent objects supported by the Replication
  Server is 32 000.
- Uniqueness is about naming entities and guaranteeing that a named entity can only
  exist once.
- When Manual Unique ID is left empty, Prefab Instance Unique ID will be used instead.
- Parenting network entities directly doesn't require any extra work.
- When the parent CoherenceSync is destroyed, by default its CoherenceSync children
  get destroyed together with it.
- Hierarchies have to be identical on all Clients.
- Position and rotation of intermediate children need to be the same on all Clients.
- coherence creates a CoherenceSyncConfig ScriptableObject to track network entities.
- Instead of hard referencing Prefabs in your scripts to instantiate them using Unity's
  own Instantiate(), you can reference a CoherenceSyncConfig and instantiate Prefab
  instances through our API.
- 'Limitations: It is not possible to move entities to other scenes without the client
  connection also moving there.'
- You can't currently query for entities in other scenes.
- The only thing strictly necessary for coherence scene support is to call CoherenceBridge.SceneManager.SetClientScene(uint
  sceneIndex);
- Make sure the scene you're working on is part of the Build Profile's Scene List.
- If using coherence Cloud, make sure the schemas are uploaded.
- If using a local Replication Server, make sure it's stopped/started after baking.
- Baking generates C# baked scripts specifically tuned for each Prefab with a CoherenceSync
  component.
- Low and consistent send rates from the Replication Server allow for optimal bandwidth
  use and still support a smooth stream of updates to Clients.
- Adjusting the send and receive frequencies on the dashboard is available for paid
  plans.
- The unlock token needs to be added to the coherence RuntimeSettings (Assets/coherence/RuntimeSettings.asset)
- The unlock token will now be automatically passed to all the Replication Server
  instances started via Unity editor or the Coherence.Toolkit.ReplicationServer API
- Only Paid and Enterprise plans offer Simulators external network connectivity.
- Simulators must be built for Linux 64-bit.
- Keep in mind that all regular Unity arguments are supported.
- Known limitations
- Advanced Simulator Authority is a specific feature set meant for advanced use cases.
- Most projects should consider simpler setups first, like distributed authority or
  simple server-authoritative.
- Connection validation is subject to a 5-second timeout.
- The Client receives a 'Connection denied' error with ConnectionCloseReason.ConnectionRejectedByHost
  if the connection is rejected.
- The payload size for custom host payload is limited to 512 bytes.
- All of the connection retrieving calls may return null if the connection system
  was not turned on, not initialized yet, or simply if the connection was not found.
- Bandwidth is limited
- Conserving bandwidth will always be important.
- You need at least one query in your scene, or you won't see anything update over
  the network.
- Queries are per-Client, meaning that each Client (or Simulator!) has its own queries
  and thus sees different parts of the simulation.
- This feature requires baking.
- You can only decrease the fidelity, so a field can't use more data on a lower (more
  far away) LOD.
- You can also disable components at later LOD levels if they are not needed.
- The Data Cost Overview shows us that this takes the original 913 bits down to just
  372 bits at LOD level 2.
- coherence will automatically limit the target framerate of uploaded Simulators to
  30 frames per second
- Uses OAuth2 with refresh token
- Setting code stripping above Minimal level is risky and might break your game by
  removing code that's needed for it to run.
- To start the Replication Server, you need to give it the location of the schema.
- The hard limit of max clients in a Room is 100, enforced at Room creation.
- coherence is a networking solution that can be used both online and offline.
- Connected Prefabs can be instantiated and destroyed while offline.
- Prefabs marked as Persistent will not persist after an offline game session.
- Online Dashboard is required for development.
- The Online Dashboard is where the cloud services behind your coherence-based game
  can be managed.
- The adjustment of frequencies is accessible only for paid plans.
- Suspended Worlds retain their state and it only takes seconds to bring them back
  up and running.
- Players default setting is 10, can be specified between 2 and 100
- Entities default is 1000, can be increased up to 65535 in local development or client-hosted
  scenarios
- Guest Auth Enabled must be ticked in Project Settings on your Online Dashboard for
  this authentication method to be usable.
- Some objects may return nulls in deeply nested fields
- If set to Auto Login As Guest, the Cloud Service will automatically log in with
  the coherence Cloud using a guest player account.
- Server costs will be paid by those who provide the networking service, i.e. Valve
  in the case of relying on Steam Networking.
- Players will be running the Replication Server on their personal devices, so their
  specs and network conditions will have some impact on performance and reliability
  for all players.
- You will not have access to the full range of features included when you're using
  the coherence Cloud services.
- It lets your players keep playing the game over the Internet, even if your company
  or coherence goes out of business.
- The Bundle In Build option in Project Settings
- It is very important to keep track of your child process (via the IReplicationServer
  object) and close it down properly
- Uses custom relay implementation for networking services
- The coherence Cloud can host a Replication Server.
- Client-hosting allows for peer-to-peer connections without a cloud server.
- WebGL has no multi-threading support.
- WebGL builds running locally can't connect to the coherence Cloud on Firefox.
- Changes made right before disconnect are not replicated
- WebGL builds running locally don't work with Firefox
- Making any synchronized state changes right before the call to disconnect in the
  same frame are unlikely to be replicated.
- Steam Relay can sometimes suffer from intermittent lag spikes, followed by packet
  bursts.
- This is an issue you can encounter when updating your project from coherence v1.2
  to v1.3.
- If you're getting errors such as the ones below, the issue is that your Prefab has
  multiple AnimationControllers, but coherence only supports a single AnimationController.
- If you still need multiple AnimationControllers, a workaround is detailed in the
  Animations article.
- When using CoherenceNode on your CoherenceSync, if CoherenceNode's networked variables
  have interpolation applied, you'll experience this issue. Turn off interpolation
  for such variables.
- Check that all your Clients are using the same Schema ID.
- When working with Prefab Variants, Unity leaks managed references (fields marked
  with [SerializeReference]). This can make your Prefab grow big and use more memory
  than necessary.
- In 1.8 and later it's preferable to access cloud services via CoherenceCloudLogin.Services.
- Multi-Room Simulators have been removed from the SDK.
- Multi-Room Simulators is deprecated and will be removed from the SDK.
- Reflection Mode was removed.
- APIs marked as deprecated on 1.3 and earlier are removed on 1.5. Make sure your
  project is not using them before upgrading.
- APIs marked as deprecated on 1.2 and earlier are removed on 1.4.
- APIs marked as deprecated on 1.1 and earlier are removed on 1.3. Make sure your
  project is not using them before upgrading.
- APIs marked as depracted on 1.0 and earlier are removed on 1.2.
- If your project is using the Source Generator baking strategy, it is recommended
  to switch to Assets strategy before upgrading.
- Uses OAuth2 with refresh token — requires setup of connected app in coherence
- Version 1.0.0 includes breaking changes to the baked scripts, which means your current
  ones will cause compilation errors.
- It is recommended to delete your current baked scripts under Assets/coherence/baked
  before performing a coherence Unity SDK update.
- No Domain Reload is a Unity Editor option that allows users to enter Play mode very
  fast without having to recompile all your code.
- Client Connection instances now live in the DontDestroyOnLoad scene.
- Credits are only consumed when you use the coherence Cloud resources - you only
  pay for what you use.
- Unused included credits don't carry over to the following month.
- Reporting a bug with the right details can greatly improve the chances that it will
  be fixed soon.
- Unreal Engine support is planned.
- You can run a local Replication Server directly on your machine
- Multiple instances of the game can be run on the same device
- If scenes show up magenta/pink, convert materials for URP or HDRP.
- Basic syncing project demonstrating features of coherence
- Requires playing in built instances alongside Unity Editor
- Try running one locally, before trying the coherence Cloud.
- For local RS, shut down the the Replication Server and launch it again.
- You can also disable the Quick Edit Mode in Command Prompt's Properties.
- Bridge establishes a connection between your scene and the coherence Replication
  Server.
- At least one query in the scene is necessary to receive any network update.
- Multiple LiveQueries in a single scene are additive.
- Currently, only a single tag per GameObject and TagQuery is supported.
- Log In On Load option enables automatic login to coherence Cloud when loaded.
- Log In Simulators option logs in Simulators using the provided session token.
- The goal of the CoherenceNode component is to keep track of where the object is
  in the hierarchy, so when it's reparented by its owner coherence is able to replicate
  the same hierarchy structure on each connected Client.
- Depending on the reason for a disconnection the onDisconnected event can be raised
  from different places in the code, including LateUpdate.
- Coherence has no concept of a 'player Prefab' that maps 1:1 with each Client.
- You can take full control of how network entities are instantiated.
- 'When a Prefab is not using a baked script there are some restrictions for what
  types can be sent in a single command: 4 entity references, maximum of 511 bytes
  total of data in other arguments, a single Byte[] argument can be no longer than
  509 bytes because of overhead.'
- If a command is bigger than the supported packet size, it won't work even with baked
  code.
- coherence only replicates animation parameters, not state.
- Latency can create scenarios where different Clients reproduce different animations.
- Entity references can become null if the client does not have the referenced entity
  in its LiveQuery.
- Cyclic references are undefined behavior and may not sync properly.
- Built-in interpolation settings for position and rotation are provided out-of-the-box,
  but you are free to create your own and use them instead.
- If you are using Rigidbody for movement of a GameObject, it is recommended to set
  Interpolate On to FixedUpdate.
- Fix any problems when referencing a client connection prefab. In this case, it's
  suggesting to disable authority transfer, since that's not supported by Client Connections.
- Authority over an entity is transferrable
- Entities can be orphaned if they have no authority
- coherence currently only supports using CoherenceInput in a centralized way
- Client-side prediction is enabled for a binding.
- Incoming network data is ignored when Client-side prediction is enabled.
- coherence supports session persistence only.
- Limits to persistence
- Limits to persistent object count
- No persistence for session-based entities
- Persistent entities remain until the World is shut down or the Replication Server
  is restarted
- Maximum number of persistent objects supported by the Replication Server is 32,000
- When preparing a CoherenceSync Prefab for use as a child object it is important
  to always configure the bindings so that position, rotation, and scale are bound.
- Intermediate children objects need to have the same position and rotation on all
  Clients.
- coherence supports all Prefab-related Unity workflows, and nesting is one of them.
- A CoherenceSyncConfig object holds information on how a certain type of network
  entity is loaded and instantiated.
- The default location of all CoherenceSyncConfig objects is Assets/coherence/CoherenceSyncConfigs.
- Custom implementations can be Serializable and have your own custom serialized data.
- Limitations
- It is not possible to move entities to other scenes without the client connection
  also moving there.
- The only thing strictly necessary for coherence scene support is to call CoherenceBridge.SceneManager.SetClientScene(uint
  sceneIndex); so that the Replication Server knows in which scene each Client is
  located.
- CoherenceScene provides a handy Deactivate On Load list to disable unwanted GameObjects.
- Baking takes care of generating a schema file based on selected variables, commands
  and other settings.
- Baked scripts access your code directly, changing networked variables may lead to
  compilation errors.
- Check Run in Background in the Unity settings under Project Settings > Player so
  that the Clients continue to run even when they're not the active window.
- To use Simulators, you need to enter your credit card details.
- coherence includes an auto-connect MonoBehaviour out of the box for Room- and World-based
  Simulators.
- Local simulator builds require the Dedicated Server module to be installed for your
  version on Unity.
- The COHERENCE_SIMULATOR symbol is added during the local simulator build.
- Simulators per room can be enabled in the dashboard for the project.
- The Simulator used is matched according to the Simulator slug in the RuntimeSettings
  scriptable object file.
- Some games require enhanced security against cheating or player griefing.
- This approach adds complexity, especially around object creation and error handling.
- The Client Connections system is not fully operable when Entity creation restriction
  is enabled.
- For a cloud build, Headless Mode is always enabled by default.
- Global Query should be on in the CoherenceBridge for ClientConnections.
- All connection retrieving calls may return null if the connection system was not
  turned on, not initialized yet, or simply if the connection was not found.
- Delta-compression (automatic). When possible, only send differences in data, not
  the entire state every frame.
- Compression and quantization (automatic and configurable). Various data types can
  be compressed to consume less bandwidth that they naturally would.
- Simulation frequency (configurable). Most Entities do not need to be simulated at
  60+ frames per second.
- Levels of detail (configurable). Entities need to consume less and less bandwidth
  the farther away they move from the observer.
- Area of interest. Only replicate what we can see.
- Queries only filter network entities that are non-authoritative.
- Detection of LOD changes on the client only happens when the entity sends a component
  update.
- coherence will automatically limit the target framerate of uploaded Simulators to
  30 frames per second.
- The default packet send frequency of the Replication Server is 20Hz.
- coherence has several key features that makes big worlds viable.
- Version Control integration
- Continuous Integration
- Uses OAuth2
- The default value is used during local development only.
- Connected Prefabs that feature a CoherenceSync can be instantiated and destroyed
  like usual while offline.
- When offline, no check happens for uniqueness, meaning that unique entities can
  be instantiated multiple times.
- You can change a game from being hosted on our cloud to being client-hosted, with
  minimal effort.
- The networking is the same.
- Coherence Cloud APIs require authentication setup.
- The default setting is 10 players hosted, but you can specify your own value anywhere
  between 2 and 100 players.
- To support more than a 100 players per room, write to devrel@coherence.io.
- 1000 entities by default, but can be increased up to 65535 in local development
  or client-hosted scenarios.
- If set to Main User, the Cloud Service will not log in to coherence automatically.
- Replication Server will output its logs to the standard output.
- You can call _SetTransportFactory(null)_ to disable the custom transport and connect
  as normal.
- You can call SetRelay(null) to disable relaying.
- CoherenceCloudLogin component can be used to log in using all the different methods
  offered by the CoherenceCloud API.
- The Unreal SDK is under development.
- WebGL builds use WebRTC to connect to the Replication Server.
- ECS entities require work on the developer's side to network with GameObjects.
- Problems when using MPPM on Unity 6
- RS can rarely start dropping packets with Steam Relay
- RS rejects mismatched persistent save data
- Warning messages when running GGPO network rollback
- When using CoherenceNode on your CoherenceSync, if CoherenceNode's networked variables
  have interpolation applied, you'll experience issues. Turn off interpolation for
  such variables.
- This can happen if coherence fails to set a Unique ID on your scene instances. Check
  the CoherenceSync inspector on Prefab instances.
- There is a bug in some early versions of Unity 2022 LTS that causes Prefabs to be
  corrupted on reimport, leading to all sorts of issues.
- The current workaround to avoid rendering issues is to open your CoherenceSync Prefabs
  in Prefab mode.
- When working with Prefab Variants, Unity leaks managed references, which can make
  your Prefab grow big and use more memory than necessary.
- If you are instantiating a Prefab from a coherence event and changing its bindings
  in the same frame, the remote Clients will not instantly get updated values.
- 'Make sure you allow HTTP connections in Editor to avoid `InvalidOperationException:
  Insecure connection not allowed` errors.'
- Recommended to use CoherenceCloudLogin for logging in to coherence Cloud.
- APIs marked as deprecated on 1.2 and earlier are removed on 1.4. Make sure your
  project is not using them before upgrading.
- APIs marked as deprecated on 1.1 and earlier are removed on 1.3.
- It is important that you perform the migration from sub-assets as soon as possible.
- Notable API changes include removal of `Coherence.Network`.
- Every month we calculate your credit cost based on the total consumption of CCU
  hours and bandwidth.
- Before we calculate the total credit cost based on the aforementioned formulas,
  we deduct the included CCU hours and bandwidth in your plan.
- Individual Rooms are limited to 100 CCUs.
- The total number of Rooms is unlimited provided the credit usage stays within plan
  limits but there's a limit of 1000 CCUs across all rooms. This limit only applies
  to non-Enterprise tiers.
- Individual Worlds are limited to 1000 CCUs.
- The total number of Worlds is unlimited provided that the credit usage is within
  plan limits but there's a limit of 1000 CCUs across all worlds. This limit only
  applies to non-Enterprise tiers.
- Enterprise customers can negotiate custom sizes and limits for both Rooms and Worlds.
- Costs per session or World will increase if additional features such as Simulators
  or KV-Store are utilized.
- Each plan comes with a maximum amount of purchasable extra credits. Exceeding that
  limit will result in throttling CCUs and an extra charge at the end of the billing
  cycle for features that can't be throttled like storage.
- Reporting a bug can improve chances of it being fixed soon.
- Smooth state replication
- Server-side, Client-side, distributed authority
- 'The minimum supported Unity LTS versions are: 2021.3.18+, 2022.2.5+'
- Currently, only Prefabs are supported.
- Setting up a Prefab for networking requires a Prefab with a `CoherenceSync` added
  to it
- Baking the netcode is necessary for changes to take effect
- coherence will automatically create a CoherenceSyncConfig object that will be added
  to the CoherenceSyncConfigRegistry asset found in the Assets/coherence folder.
- You can inspect all your prefabs in the CoherenceSync Objects window, found under
  the coherence => CoherenceSync Objects menu item.
- coherence can use C# reflection to sync data at runtime.
- For optimal runtime performance and a complete feature set, we need to create a
  schema and perform code generation specific to our project.
- Baked scripts will be located in Assets/coherence/baked.
- The watchdog is able to catch compilation problems related with this.
- Projects that don't use scenes will implicitly put all their entities into scene
  0.
- Unity will destroy all game objects not marked as DontDestroyOnLoad whenever a new
  Unity scene is loaded.
- If you ever load another Unity scene, the CoherenceBridge that connects to the server
  needs to be kept alive.
- Client authority is easier to set up but has drawbacks such as higher latency and
  exposure to cheating.
- Server authority is advisable for competitive PvP games.
- Persistent objects remain on the Replication Server even when the Client or Simulator
  that created or last simulated it is gone.
- Optimization techniques include delta-compression, compression and quantization,
  simulation frequency, levels of detail, and area of interest.
- Supporting Unity physics in a network environment requires managing the state of
  rigid bodies on replicated Prefabs.
- Only the transform of the rigid body is actually replicated.
- Settings window is located in coherence > Settings.
- Every Client tries to match the Client simulation frame with the Server simulation
  frame.
- The Replication Server replicates data defined in schema files.
- Low and consistent send rates from the Replication Server allow for optimal bandwidth
  use.
- By default, the number of players that can connect to a locally hosted Replication
  Server is limited to 100.
- Replication Servers running in the coherence Cloud have no player limit.
- It may take up to 10 minutes for the Simulators to have their external connectivity
  enabled when switching from Free plan to a Paid or Enterprise plan.
- Players will be running the Replication Server on their personal devices, so their
  specs and network conditions will have a big impact on performance and reliability
  for all players.
- Launching a child process is not supported in Unity IL2CPP builds.
- AutoShutdown defaults to 10 seconds when no Clients are connected.
- ClientConnections are global and replicated across Clients.
- Global Query should be turned on in CoherenceBridge.
- GGPO is not recommended for FPS-style games. The correct rollback networking solution
  for those is planned to be added in the future.
- InitialBufferSize value can be set directly in code before the Awake of the baked
  component.
- Initial buffer delay can be changed freely at runtime but is not recommended due
  to inconsistent input feeling.
- If set to true, the input system will automatically issue a disconnect on an attempt
  to resync time with the Server.
- If set to true, the input system will use the IClient.ClientFixedSimulationFrame
  frame for simulation.
- Unity has a well-known limitation of offering high precision positioning only within
  a few kilometers from the center of the world.
- To represent the absolute position of Game Objects on the Replication Server, we
  use the 64-bit floating-point format.
- coherence is a networking solution that can function offline.
- Connected Prefabs can be instantiated and destroyed like usual while offline.
- Uniqueness is verified within the context of the Room or World the Client is connected
  to.
- Minimum parameters set includes port, signalling-port, send-frequency, recv-frequency,
  web-support, env, schema
- Setting Code Stripping above Minimal level is risky and might break your game by
  removing code that's needed for it to run.
- You can ignore (as in, not version) Assets/coherence/baked and its .meta file in
  most cases, but it's completely safe to include them too.
- Make sure Assets/coherence/Gathered.schema is treated as a binary and not as a text
  file.
- coherence supports multiple hosting options, and offers a full platform for effortless
  cloud hosting.
- coherence offers comprehensive hosting, scaling, and networking for your game.
- While a local Replication Server is available as part of the Unity SDK, in order
  to host multiplayer services like the Replication Server in the cloud, your team
  must have a project in the Developer Portal.
- Requires setup of connected app in coherence
- Managing Worlds in the Developer Portal
- The state of the World is automatically managed by default.
- Uses OAuth2 for authentication.
- A lobby is a virtual room that is not backed by a Replication Server.
- Lobbies have attributes and contain up to a certain number of players.
- Players also have attributes and can exchange messages in real time.
- 'Auto Login As Guest: If enabled, Cloud Service will automatically log in with the
  coherence Cloud using a player Guest Account.'
- A single schema cannot have more than 10 million characters
- A component/command name cannot be more than 512 characters
- A field/archetype/input/enum name cannot be longer than 128 characters
- A component cannot have more than 128 fields
- coherence SDK supports networking in WebGL without any additional setup.
- coherence’s pricing is designed to be accessible for all developers
- Credits are coherence’s virtual unit of cost that can be converted into various
  resources
- Rooms are limited to 100 CCUs. The total number of Rooms is unlimited provided the
  credit usage stays within plan limits.
- Worlds are limited to 1000 CCUs. The total number of Worlds is unlimited provided
  that the credit usage is within plan limits.
- Enterprise customers can negotiate custom sizes for both Rooms and Worlds.
- Byte arrays don't sync when changing values by index
- Warnings about missing hashes
- Changing parent teleports the Entity to world zero for a frame
- CoherenceSync Prefab instances on the scene not appearing when using 'No Duplicates'
  uniqueness setting
- Types missing the ExtensionOfNativeClass attribute
- Scripts losing references to Prefabs, Fix Serialized Data button appears
- The Optimize window stops rendering components
- I can't see Rooms or Worlds
- Prefab Variants use excessive memory
- Binding is interpolated into correct position after instantiating
- 'Clicking on a Prefab instance logs ''CoherenceSyncEditor: Upgraded legacy archetype
  name on the CoherenceSync Prefab instance'''
- 'InvalidOperationException: Insecure connection not allowed'
- CoherenceSync Prefab instances on the scene not appearing when using "No Duplicates"
  uniqueness setting
- Types missing the `ExtensionOfNativeClass` attribute
- 'Clicking on a Prefab instance logs "CoherenceSyncEditor: Upgraded legacy archetype
  name on the CoherenceSync Prefab instance"'
errors:
- 'Invalid bindings: Occurs when there are modifications to fields or methods with
  Sync or Command attributes.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Mis-ordered arguments, type mis-match, or unresolvable types will result in errors
  logged and the command not being sent.
- 'Request not sent: The sync is not ready yet.'
- 'Request not sent: The entity is not allowed to be transferred.'
- 'Request not sent: There is already a request underway.'
- 'Request not sent: The entity is orphaned.'
- If a Client sends packets to the Replication Server at a higher than expected frequency,
  that Client will receive a command to slow down sending.
- If the Client doesn't respect the command to throttle packet sending then the Client
  is disconnected after a time.
- 'ConnectionCloseReason.HostNotReady: Connection denied if a Client tries to connect
  before a Simulator.'
- 'ConnectionCloseReason.HostDisconnected: All other Clients will be forcefully disconnected
  if a Simulator disconnects.'
- 'Connection denied: Reason - ConnectionRejectedByHost'
- 'Connection denied: Reason - ConnectionValidationTimeout'
- '401 Unauthorized: Check client credentials and token validity.'
- '404 Not Found: Verify endpoint path and parameters.'
- '429 Too Many Requests: Implement exponential backoff for retries.'
- 'InvalidOperationException: Insecure connection not allowed'
- 'InvalidOperationException: Insecure connection not allowed: Make sure you allow
  HTTP connections in Editor to avoid this error.'
- 'Login failed: Check credentials or method enabled in Project Settings.'
- The Client is disconnected after a time if it doesn't respect the command to throttle
  packet sending.
- Extra packets received by the Replication Server are dropped and not processed if
  sent at a higher than expected frequency.
- 'ConnectionCloseReason.HostNotReady: A Client tried to connect before a Simulator.'
- 'ConnectionCloseReason.HostDisconnected: A Simulator disconnected while other Clients
  are connected.'
- 'Connection denied: ConnectionCloseReason.ConnectionRejectedByHost'
- 'Connection denied: ConnectionCloseReason.ConnectionValidationTimeout'
- 'Connection denied: ConnectionCloseReason.KickedByHost'
- Obsolete parameters should be avoided.
- Invalid filter could be shown by the Lobbies UI sample.
- Client is disconnected after a time if it doesn't respect the command to throttle
  packet sending.
- LiveQuery components will throw an error if the CoherenceBridge is not present.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - CoherenceCloudLogin
client:
  base_url: https://unityapi.coherence.io
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
