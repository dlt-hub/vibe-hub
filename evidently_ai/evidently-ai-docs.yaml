resources:
- name: calculations
  endpoint:
    path: /api/v1/calculations
    method: GET
    data_selector: results
    params: {}
- name: metrics
  endpoint:
    path: /api/v1/metrics
    method: GET
    data_selector: results
    params: {}
- name: calculations
  endpoint:
    path: /api/v1/calculations
    method: GET
    data_selector: records
- name: metrics
  endpoint:
    path: /api/v1/metrics
    method: GET
    data_selector: records
- name: tracing_dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: traces
- name: traces
  endpoint:
    path: /datasets
    method: GET
    data_selector: traces
- name: project
  endpoint:
    path: /projects
    method: POST
    data_selector: project
    params: {}
- name: report
  endpoint:
    path: /reports
    method: POST
    data_selector: report
    params: {}
- name: project
  endpoint:
    path: /projects
    method: POST
    data_selector: projects
    params: {}
- name: report
  endpoint:
    path: /reports
    method: POST
    data_selector: reports
    params: {}
- name: projects
  endpoint:
    path: /api/projects
    method: POST
    data_selector: project
- name: reports
  endpoint:
    path: /api/reports
    method: POST
    data_selector: report
- name: text_evaluations
  endpoint:
    path: /evaluations
    method: POST
    data_selector: results
    params: {}
- name: Data Quality
  endpoint:
    path: /presets/data-quality
    method: GET
    data_selector: dataset statistics and feature behavior
    params:
      requirements: model inputs
- name: Data Drift
  endpoint:
    path: /presets/data-drift
    method: GET
    data_selector: distribution shift in the model features
    params:
      requirements: model inputs, a reference dataset
- name: Target Drift
  endpoint:
    path: /presets/target-drift
    method: GET
    data_selector: distribution shift in the model predictions
    params:
      requirements: model predictions and/or target, a reference dataset
- name: Classification Performance
  endpoint:
    path: /presets/class-performance
    method: GET
    data_selector: classification model quality and errors
    params:
      requirements: model predictions and true labels
- name: Regression Performance
  endpoint:
    path: /presets/reg-performance
    method: GET
    data_selector: regression model quality and errors
    params:
      requirements: model predictions and actuals
- name: Text Overview
  endpoint:
    path: /presets/text-overview
    method: GET
    data_selector: text data drift and descriptive statistics
    params:
      requirements: model inputs (raw text data)
- name: NoTargetPerformance
  endpoint:
    path: /presets/no-target-performance
    method: GET
    data_selector: model performance without ground truth or actuals
    params:
      requirements: model inputs, predictions, a reference dataset
- name: Data Stability
  endpoint:
    path: /presets/data-quality#data-stability-test-suite
    method: GET
    data_selector: similarity to reference
    params:
      requirements: inputs, a reference dataset
- name: Data Quality
  endpoint:
    path: /presets/data-quality
    method: GET
    data_selector: dataset_statistics
    params: {}
- name: Data Drift
  endpoint:
    path: /presets/data-drift
    method: GET
    data_selector: distribution_shift
    params: {}
- name: Target Drift
  endpoint:
    path: /presets/target-drift
    method: GET
    data_selector: target_distribution_shift
    params: {}
- name: Classification Performance
  endpoint:
    path: /presets/class-performance
    method: GET
    data_selector: classification_quality
    params: {}
- name: Regression Performance
  endpoint:
    path: /presets/reg-performance
    method: GET
    data_selector: regression_quality
    params: {}
- name: Text Overview
  endpoint:
    path: /presets/text-overview
    method: GET
    data_selector: text_data_drift
    params: {}
- name: data_drift_report
  endpoint:
    path: /data-drift/report
    method: GET
    data_selector: report_data
- name: data_drift_test_suite
  endpoint:
    path: /data-drift/test-suite
    method: POST
    data_selector: test_suite_results
- name: DataDriftPreset
  endpoint:
    path: /api/v0.6/data-drift/preset
    method: POST
    data_selector: result
- name: DataDriftTestPreset
  endpoint:
    path: /api/v0.6/data-drift/test-preset
    method: POST
    data_selector: result
- name: DataQualityReport
  endpoint:
    path: /data-quality/report
    method: GET
    data_selector: report
    params: {}
- name: TestSuite
  endpoint:
    path: /test-suite
    method: POST
    data_selector: result
    params: {}
- name: data_quality
  endpoint:
    path: /data_quality
    method: GET
    data_selector: data
- name: TargetDriftPreset
  endpoint:
    path: /api/target-drift
    method: POST
    data_selector: report
    params: {}
- name: TargetDriftPreset
  endpoint:
    path: /target-drift
    method: POST
    data_selector: report
    params: {}
- name: num_target_drift
  endpoint:
    path: /num_target_drift
    method: GET
    data_selector: data
- name: Regression Performance
  endpoint:
    path: /regression/performance
    method: GET
    data_selector: results
- name: regression_performance
  endpoint:
    path: /regression_performance
    method: POST
    data_selector: results
    params: {}
- name: metrics
  endpoint:
    path: /regression_performance/metrics
    method: GET
    data_selector: data.metrics
- name: error_bias
  endpoint:
    path: /regression_performance/error_bias
    method: GET
    data_selector: data.error_bias
- name: utility_columns
  endpoint:
    path: /regression_performance/utility_columns
    method: GET
    data_selector: data
- name: metrics
  endpoint:
    path: /regression_performance/metrics
    method: GET
    data_selector: data
- name: Classification Performance Report
  endpoint:
    path: /reports/classification-performance
    method: GET
    data_selector: performance
    params: {}
- name: Test Suite
  endpoint:
    path: /tests/classification
    method: POST
    data_selector: results
    params: {}
- name: classification_performance_report
  endpoint:
    path: /classification/performance/report
    method: GET
    data_selector: report_data
- name: probabilistic_classification_performance
  endpoint:
    path: /probabilistic_classification_performance
    method: GET
    data_selector: data
- name: classification_performance
  endpoint:
    path: /classification/performance
    method: GET
    data_selector: data
    params: {}
- name: NoTargetPerformanceTestPreset
  endpoint:
    path: /tests/NoTargetPerformance
    method: POST
    data_selector: tests
- name: NoTargetPerformanceTestSuite
  endpoint:
    path: /notargetperformance/testsuite
    method: POST
    data_selector: tests
    params: {}
- name: text_evals_report
  endpoint:
    path: /text-evals/report
    method: GET
    data_selector: report
    params: {}
- name: TextEvals
  endpoint:
    path: /text-evals
    method: POST
    data_selector: metrics
    params: {}
- name: RecsysPreset
  endpoint:
    path: /recsys/preset
    method: POST
- name: RecsysTestPreset
  endpoint:
    path: /recsys/testpreset
    method: POST
- name: Recommendation Quality Report
  endpoint:
    path: /recommendation_quality_report
    method: GET
    data_selector: reports
    params: {}
- name: Recommender System Test Suite
  endpoint:
    path: /recommender_system_test_suite
    method: GET
    data_selector: tests
    params: {}
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: tracing_dataset
  endpoint:
    path: /datasets
    method: POST
    data_selector: traces
    params: {}
- name: tracing_dataset
  endpoint:
    path: /api/tracing/datasets
    method: POST
    data_selector: datasets
    params:
      project_id: YOUR_PROJECT_ID
- name: project
  endpoint:
    path: /projects
    method: POST
    data_selector: data
- name: report
  endpoint:
    path: /reports
    method: POST
    data_selector: data
- name: test_suite
  endpoint:
    path: /test_suites
    method: POST
    data_selector: data
- name: project
  endpoint:
    path: /projects
    method: POST
    data_selector: project
    params: {}
- name: report
  endpoint:
    path: /reports
    method: POST
    data_selector: report
    params: {}
- name: test_suite
  endpoint:
    path: /test_suites
    method: POST
    data_selector: test_suite
    params: {}
- name: text_evals_report
  endpoint:
    path: /report
    method: POST
    data_selector: report
    params: {}
- name: semantic_similarity
  endpoint:
    path: /semantic_similarity
    method: POST
    data_selector: similarity_score
    params: {}
- name: project
  endpoint:
    path: /projects
    method: POST
    data_selector: project
    params: {}
- name: reports
  endpoint:
    path: /reports
    method: POST
    data_selector: report
- name: test_suites
  endpoint:
    path: /test_suites
    method: POST
    data_selector: test_suite
- name: text_evals_report
  endpoint:
    path: /metrics/text_evals_report
    method: POST
    data_selector: report
    params: {}
- name: text_evals_report
  endpoint:
    path: /reports
    method: POST
    data_selector: report
- name: test_suite
  endpoint:
    path: /test_suites
    method: POST
    data_selector: test_suite
- name: workspace
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: project
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: workspace
  endpoint:
    path: /create_workspace
    method: POST
- name: project
  endpoint:
    path: /create_project
    method: POST
- name: report
  endpoint:
    path: /add_report
    method: POST
- name: test_suite
  endpoint:
    path: /add_test_suite
    method: POST
- name: golden_dataset
  endpoint:
    path: /create_dataset
    method: POST
    data_selector: data
    params: {}
- name: correctness_eval
  endpoint:
    path: /evaluate/correctness
    method: POST
    data_selector: evaluation_results
    params: {}
- name: verbosity_eval
  endpoint:
    path: /evaluate/verbosity
    method: POST
    data_selector: evaluation_results
    params: {}
- name: golden_dataset
  endpoint:
    path: /create_dataset
    method: POST
    data_selector: data
    params: {}
- name: correctness_report
  endpoint:
    path: /run_correctness_evaluation
    method: POST
    data_selector: report
    params: {}
- name: verbosity_report
  endpoint:
    path: /run_verbosity_evaluation
    method: POST
    data_selector: report
    params: {}
- name: project
  endpoint:
    path: /projects
    method: POST
    data_selector: project
    params:
      org_id: YOUR_ORG_ID
- name: projects
  endpoint:
    path: /projects
    method: POST
    data_selector: project
    params: {}
- name: eval_data
  endpoint:
    path: /eval_data
    method: POST
    data_selector: data
    params: {}
- name: test_suite
  endpoint:
    path: /test_suite
    method: POST
    data_selector: results
    params: {}
- name: eval_data
  endpoint:
    path: /eval_data
    method: GET
- name: eval_data_2
  endpoint:
    path: /eval_data_2
    method: GET
- name: workspace
  endpoint:
    path: /workspace
    method: POST
    data_selector: workspace
- name: workspace
  endpoint:
    path: /workspace
    method: POST
- name: project
  endpoint:
    path: /ws.create_project
    method: POST
    data_selector: project
    params: {}
- name: project
  endpoint:
    path: /ws/create_project
    method: POST
    data_selector: project
    params: {}
- name: delete_project
  endpoint:
    path: /ws/delete_project
    method: DELETE
    data_selector: response
    params: {}
- name: get_project
  endpoint:
    path: /ws/get_project
    method: GET
    data_selector: project
    params: {}
- name: list_projects
  endpoint:
    path: /ws/list_projects
    method: GET
    data_selector: projects
    params: {}
- name: search_project
  endpoint:
    path: /ws/search_project
    method: GET
    data_selector: project
    params: {}
- name: tracing
  endpoint:
    path: /tracing
    method: POST
    data_selector: data
    params:
      project_id: YOUR_PROJECT_ID
      export_name: YOUR_TRACING_DATASET_NAME
- name: tracing
  endpoint:
    path: /tracing
    method: POST
    data_selector: data
    params:
      project_id: YOUR_PROJECT_ID
      export_name: YOUR_TRACING_DATASET_NAME
- name: column_mapping
  endpoint:
    path: /user-guide/input-data/column-mapping
    method: GET
- name: column_mapping
  endpoint:
    path: /user-guide/input-data/column-mapping
    method: GET
    data_selector: records
- name: column_mapping
  endpoint:
    path: /user-guide/input-data/column-mapping
    method: GET
    data_selector: records
- name: Pandas DataFrame
  endpoint:
    path: /user-guide/input-data/load-data-to-pandas
    method: GET
    data_selector: data
    params: {}
- name: current_data
  endpoint:
    path: /user-guide/input-data/data-requirements
    method: GET
    data_selector: current
    params: {}
- name: additional_data
  endpoint:
    path: /user-guide/input-data/data-requirements
    method: GET
    data_selector: additional
    params: {}
- name: tests
  endpoint:
    path: /user-guide/tests-and-reports
    method: GET
- name: reports
  endpoint:
    path: /user-guide/tests-and-reports/get-reports
    method: GET
- name: report
  endpoint:
    path: /user-guide/tests-and-reports/get-reports
    method: GET
    data_selector: ''
    params: {}
- name: test_suite
  endpoint:
    path: /user-guide/tests-and-reports/run-tests
    method: GET
    data_selector: ''
    params: {}
- name: descriptors
  endpoint:
    path: /user-guide/tests-and-reports/text-descriptors
    method: GET
    data_selector: ''
    params: {}
- name: tensorflow_ds
  endpoint:
    path: /tensorflow/datasets
    method: GET
    data_selector: datasets
    params: {}
- name: pytorch_datapipes
  endpoint:
    path: /pytorch/datapipes
    method: GET
    data_selector: datapipes
    params: {}
- name: get_report
  endpoint:
    path: /get-a-report
    method: GET
    data_selector: report_data
    params: {}
- name: get_custom_report
  endpoint:
    path: /get-a-custom-report
    method: GET
    data_selector: custom_report_data
    params: {}
- name: tensorflow_datasets
  endpoint:
    path: /user-guide/input-data/load-data-to-pandas
    method: GET
    data_selector: datasets
- name: pytorch_datapipes
  endpoint:
    path: /user-guide/input-data/load-data-to-pandas
    method: GET
    data_selector: datasets
- name: pyspark_dataframes
  endpoint:
    path: /user-guide/input-data/load-data-to-pandas
    method: GET
    data_selector: datasets
- name: TestSuite
  endpoint:
    path: /run-test-suite
    method: POST
    data_selector: results
- name: TestPresets
  endpoint:
    path: /test-presets
    method: GET
    data_selector: presets
- name: drift_report
  endpoint:
    path: /drift_report
    method: GET
    data_selector: results
    params: {}
- name: tensor_flow
  endpoint:
    path: /user-guide/input-data/load-data-to-pandas
    method: GET
    data_selector: datasets
    params: {}
- name: pytorch
  endpoint:
    path: /user-guide/input-data/load-data-to-pandas
    method: GET
    data_selector: datasets
    params: {}
- name: pyspark
  endpoint:
    path: /user-guide/input-data/load-data-to-pandas
    method: GET
    data_selector: datasets
    params: {}
- name: Reports
  endpoint:
    path: /user-guide/tests-and-reports/get-reports
    method: GET
    data_selector: reports
    params: {}
- name: Test Suite
  endpoint:
    path: /user-guide/tests-and-reports/run-tests
    method: GET
    data_selector: tests
    params: {}
- name: evaluations
  endpoint:
    path: /user-guide/evaluations
    method: GET
    data_selector: records
- name: report
  endpoint:
    path: /get-report
    method: POST
    data_selector: report_data
    params: {}
- name: snapshots
  endpoint:
    path: /api/snapshots
    method: POST
    data_selector: snapshot
    params: {}
- name: TestSuite
  endpoint:
    path: /test_suite
    method: POST
    data_selector: results
- name: DataQualityTestPreset
  endpoint:
    path: /data_quality_test_preset
    method: POST
    data_selector: results
- name: DataStabilityTestPreset
  endpoint:
    path: /data_stability_test_preset
    method: POST
    data_selector: results
- name: NoTargetPerformanceTestPreset
  endpoint:
    path: /no_target_performance_test_preset
    method: POST
    data_selector: results
- name: no_code_evals
  endpoint:
    path: /evaluations/no_code_evals
    method: POST
    data_selector: results
- name: text_evaluations
  endpoint:
    path: /evaluate/text
    method: POST
    data_selector: results
- name: Monitoring
  endpoint:
    path: /user-guide/monitoring
    method: GET
    data_selector: monitoring_overview
    params: {}
- name: metrics
  endpoint:
    path: /metrics
    method: POST
    data_selector: report
- name: tests
  endpoint:
    path: /tests
    method: POST
    data_selector: test_suite
- name: drift_report
  endpoint:
    path: /drift_report
    method: GET
    data_selector: results
    params: {}
- name: batch_monitoring
  endpoint:
    path: /user-guide/monitoring/batch_monitoring
    method: GET
    data_selector: results
    params: {}
- name: snapshots
  endpoint:
    path: /user-guide/evaluations/snapshots
    method: GET
    data_selector: results
    params: {}
- name: dashboard
  endpoint:
    path: /user-guide/dashboard/dashboard_overview
    method: GET
    data_selector: results
    params: {}
- name: alerts
  endpoint:
    path: /user-guide/monitoring/alerting
    method: GET
    data_selector: results
    params: {}
- name: collector_config
  endpoint:
    path: /collector/config
    method: POST
    data_selector: snapshot
    params: {}
- name: collector_config
  endpoint:
    path: /collector_config
    method: POST
    data_selector: collector
    params: {}
- name: Column Drift Metric
  endpoint:
    path: /ColumnDriftMetric
    method: GET
- name: Data Drift Table
  endpoint:
    path: /DataDriftTable
    method: GET
- name: Dataset Drift Metric
  endpoint:
    path: /DatasetDriftMetric
    method: GET
- name: Data Drift Preset
  endpoint:
    path: /DataDriftPreset
    method: GET
- name: Test Column Drift
  endpoint:
    path: /TestColumnDrift
    method: GET
- name: Test Share Of Drifted Columns
  endpoint:
    path: /TestShareOfDriftedColumns
    method: GET
- name: Test Number Of Drifted Columns
  endpoint:
    path: /TestNumberOfDriftedColumns
    method: GET
- name: Data Drift Test Preset
  endpoint:
    path: /DataDriftTestPreset
    method: GET
- name: notification_channels
  endpoint:
    path: /send_alerts/notification_channels
    method: GET
    data_selector: channels
- name: alert_conditions
  endpoint:
    path: /send_alerts/alert_conditions
    method: GET
    data_selector: conditions
- name: evaluations
  endpoint:
    path: /api/evaluations
    method: GET
    data_selector: data
    params: {}
- name: snapshots
  endpoint:
    path: /add_snapshot
    method: POST
    data_selector: snapshot
- name: no_code_evals
  endpoint:
    path: /evaluations/no_code_evals
    method: GET
    data_selector: evaluations
    params: {}
- name: Panel
  endpoint:
    path: /user-guide/dashboard/design_dashboard_api
    method: POST
    data_selector: panel
    params: {}
- name: Tab
  endpoint:
    path: /user-guide/dashboard/design_dashboard_api
    method: POST
    data_selector: tab
    params: {}
- name: CollectorConfig
  endpoint:
    path: /collector/config
    method: POST
- name: upload_dataset
  endpoint:
    path: /datasets/upload
    method: POST
    data_selector: dataset
    params: {}
- name: download_dataset
  endpoint:
    path: /datasets/download
    method: GET
    data_selector: dataset
    params: {}
- name: include_dataset
  endpoint:
    path: /reports/add
    method: POST
    data_selector: report
    params:
      include_data: 'True'
- name: collector_config
  endpoint:
    path: /collector_config
    method: POST
    data_selector: config
    params: {}
- name: notification_channels
  endpoint:
    path: /user-guide/monitoring/notification-channels
    method: GET
    data_selector: channels
- name: alert_conditions
  endpoint:
    path: /user-guide/monitoring/alert-conditions
    method: GET
    data_selector: conditions
- name: DataDriftTable
  endpoint:
    path: /reference/data-drift-table
    method: GET
    data_selector: records
    params: {}
- name: DatasetDriftMetric
  endpoint:
    path: /reference/dataset-drift-metric
    method: GET
    data_selector: records
    params: {}
- name: ColumnDriftMetric
  endpoint:
    path: /reference/column-drift-metric
    method: GET
    data_selector: records
    params: {}
- name: monitoring_panel
  endpoint:
    path: /api/v0.6/monitoring/panel
    method: GET
    data_selector: panels
- name: drift_detection
  endpoint:
    path: /drift_detection
    method: POST
    data_selector: report
    params:
      dist: euclidean
      threshold: 0.2
      bootstrap: true
      quantile_probability: 0.95
      pca_components: null
- name: TestSuitePanelType
  endpoint:
    path: /TestSuitePanelType
    method: GET
- name: DashboardPanelDistribution
  endpoint:
    path: /DashboardPanelDistribution
    method: GET
- name: HistBarMode
  endpoint:
    path: /HistBarMode
    method: GET
- name: LLMEval
  endpoint:
    path: /user-guide/customization/llm_as_a_judge
    method: GET
    data_selector: metrics
    params: {}
- name: OpenAIPrompting
  endpoint:
    path: /user-guide/customization/openaiprompting
    method: GET
    data_selector: metrics
    params: {}
- name: panel
  endpoint:
    path: /user-guide/dashboard/design_dashboard_api
    method: POST
- name: tab
  endpoint:
    path: /user-guide/dashboard/add_dashboard_tabs
    method: POST
- name: descriptor_parameters
  endpoint:
    path: /user-guide/customization/text-evals
    method: GET
    data_selector: parameters
- name: Counter
  endpoint:
    path: /dashboard/panel/counter
    method: GET
    data_selector: records
- name: Plot
  endpoint:
    path: /dashboard/panel/plot
    method: GET
    data_selector: records
- name: Distribution
  endpoint:
    path: /dashboard/panel/distribution
    method: GET
    data_selector: records
- name: TestCounter
  endpoint:
    path: /dashboard/panel/test_counter
    method: GET
    data_selector: records
- name: TestPlot
  endpoint:
    path: /dashboard/panel/test_plot
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /user-guide/datasets
    method: GET
    data_selector: datasets_overview
- name: upload_dataset
  endpoint:
    path: /datasets/upload
    method: POST
    data_selector: dataset
    params: {}
- name: download_dataset
  endpoint:
    path: /datasets/download
    method: GET
    data_selector: dataset
    params: {}
- name: ColorOptions
  endpoint:
    path: /options/color_scheme
    method: GET
    data_selector: color_scheme_options
- name: NoTargetPerformanceTestPreset
  endpoint:
    path: /reference/all-tests/NoTargetPerformanceTestPreset
    method: GET
    data_selector: tests
    params: {}
- name: DataStabilityTestPreset
  endpoint:
    path: /reference/all-tests/DataStabilityTestPreset
    method: GET
    data_selector: tests
    params: {}
- name: DataQualityTestPreset
  endpoint:
    path: /reference/all-tests/DataQualityTestPreset
    method: GET
    data_selector: tests
    params: {}
- name: DataDriftTestPreset
  endpoint:
    path: /reference/all-tests/DataDriftTestPreset
    method: GET
    data_selector: tests
    params: {}
- name: RegressionTestPreset
  endpoint:
    path: /reference/all-tests/RegressionTestPreset
    method: GET
    data_selector: tests
    params: {}
- name: MulticlassClassificationTestPreset
  endpoint:
    path: /reference/all-tests/MulticlassClassificationTestPreset
    method: GET
    data_selector: tests
    params: {}
- name: BinaryClassificationTopKTestPreset
  endpoint:
    path: /reference/all-tests/BinaryClassificationTopKTestPreset
    method: GET
    data_selector: tests
    params: {}
- name: BinaryClassificationTestPreset
  endpoint:
    path: /reference/all-tests/BinaryClassificationTestPreset
    method: GET
    data_selector: tests
    params: {}
- name: RecsysTestPreset
  endpoint:
    path: /reference/all-tests/RecsysTestPreset
    method: GET
    data_selector: tests
    params: {}
- name: Data Drift
  endpoint:
    path: /data-drift
    method: GET
    data_selector: drift_parameters
    params: {}
- name: Text Drift
  endpoint:
    path: /text-drift
    method: GET
    data_selector: drift_parameters
    params: {}
- name: descriptor_parameters
  endpoint:
    path: /api/descriptor_parameters
    method: GET
    data_selector: parameters
    params: {}
- name: TestColumnValueMin
  endpoint:
    path: /TestColumnValueMin
    method: GET
    data_selector: records
    params:
      column_name: num-column
- name: TestColumnValueMax
  endpoint:
    path: /TestColumnValueMax
    method: GET
    data_selector: records
    params:
      column_name: num-column
- name: TestColumnValueMean
  endpoint:
    path: /TestColumnValueMean
    method: GET
    data_selector: records
    params:
      column_name: num-column
- name: TestColumnValueMedian
  endpoint:
    path: /TestColumnValueMedian
    method: GET
    data_selector: records
    params:
      column_name: num-column
- name: TestColumnValueStd
  endpoint:
    path: /TestColumnValueStd
    method: GET
    data_selector: records
    params:
      column_name: num-column
- name: TestColumnQuantile
  endpoint:
    path: /TestColumnQuantile
    method: GET
    data_selector: records
    params:
      column_name: num_column
      quantile: 0.25
- name: TestMeanInNSigmas
  endpoint:
    path: /TestMeanInNSigmas
    method: GET
    data_selector: records
    params:
      column_name: num-column
- name: TestValueRange
  endpoint:
    path: /TestValueRange
    method: GET
    data_selector: records
    params:
      column_name: num_column
- name: TestShareOfOutRangeValues
  endpoint:
    path: /TestShareOfOutRangeValues
    method: GET
    data_selector: records
    params:
      column_name: num_column
- name: TestNumberOfOutRangeValues
  endpoint:
    path: /TestNumberOfOutRangeValues
    method: GET
    data_selector: records
    params:
      column_name: num_column
- name: TestCategoryShare
  endpoint:
    path: /TestCategoryShare
    method: GET
    data_selector: records
    params:
      column_name: education
      category: Some-college
      lt: 0.5
- name: TestCategoryCount
  endpoint:
    path: /TestCategoryCount
    method: GET
    data_selector: records
    params:
      column_name: education
      category: Some-college
      lt: 0.5
- name: TestValueList
  endpoint:
    path: /TestValueList
    method: GET
    data_selector: records
    params:
      column_name: cat_column
- name: TestNumberOfOutListValues
  endpoint:
    path: /TestNumberOfOutListValues
    method: GET
    data_selector: records
    params:
      column_name: cat_column
- name: TestShareOfOutListValues
  endpoint:
    path: /TestShareOfOutListValues
    method: GET
    data_selector: records
    params:
      column_name: cat_column
- name: TestNumberOfDriftedColumns
  endpoint:
    path: /TestNumberOfDriftedColumns
    method: GET
    data_selector: records
    params: {}
- name: TestShareOfDriftedColumns
  endpoint:
    path: /TestShareOfDriftedColumns
    method: GET
    data_selector: records
    params: {}
- name: TestColumnDrift
  endpoint:
    path: /TestColumnDrift
    method: GET
    data_selector: records
    params:
      column_name: name
- name: TestEmbeddingsDrift
  endpoint:
    path: /TestEmbeddingsDrift
    method: GET
    data_selector: records
    params:
      embeddings_name: small_subset
- name: TestValueMAE
  endpoint:
    path: /TestValueMAE
    method: GET
    data_selector: records
    params: {}
- name: TestValueRMSE
  endpoint:
    path: /TestValueRMSE
    method: GET
    data_selector: records
    params: {}
- name: TestValueMeanError
  endpoint:
    path: /TestValueMeanError
    method: GET
    data_selector: records
    params: {}
- name: TestValueMAPE
  endpoint:
    path: /TestValueMAPE
    method: GET
    data_selector: records
    params: {}
- name: TestValueAbsMaxError
  endpoint:
    path: /TestValueAbsMaxError
    method: GET
    data_selector: records
    params: {}
- name: TestValueR2Score
  endpoint:
    path: /TestValueR2Score
    method: GET
    data_selector: records
    params: {}
- name: TestAccuracyScore
  endpoint:
    path: /TestAccuracyScore
    method: GET
    data_selector: records
    params: {}
- name: TestPrecisionScore
  endpoint:
    path: /TestPrecisionScore
    method: GET
    data_selector: records
    params: {}
- name: TestRecallScore
  endpoint:
    path: /TestRecallScore
    method: GET
    data_selector: records
    params: {}
- name: TestF1Score
  endpoint:
    path: /TestF1Score
    method: GET
    data_selector: records
    params: {}
- name: TestTPR
  endpoint:
    path: /TestTPR
    method: GET
    data_selector: records
    params: {}
- name: TestTNR
  endpoint:
    path: /TestTNR
    method: GET
    data_selector: records
    params: {}
- name: TestFPR
  endpoint:
    path: /TestFPR
    method: GET
    data_selector: records
    params: {}
- name: TestFNR
  endpoint:
    path: /TestFNR
    method: GET
    data_selector: records
    params: {}
- name: TestRocAuc
  endpoint:
    path: /TestRocAuc
    method: GET
    data_selector: records
    params: {}
- name: TestLogLoss
  endpoint:
    path: /TestLogLoss
    method: GET
    data_selector: records
    params: {}
- name: TestPrecisionTopK
  endpoint:
    path: /reference/all-metrics/ranking-metrics
    method: GET
    data_selector: metrics
    params: {}
- name: TestRecallTopK
  endpoint:
    path: /reference/all-metrics/ranking-metrics
    method: GET
    data_selector: metrics
    params: {}
- name: TestFBetaTopK
  endpoint:
    path: /reference/all-metrics/ranking-metrics
    method: GET
    data_selector: metrics
    params: {}
- name: TestHitRateK
  endpoint:
    path: /reference/all-metrics/ranking-metrics
    method: GET
    data_selector: metrics
    params: {}
- name: TestMAPK
  endpoint:
    path: /reference/all-metrics/ranking-metrics
    method: GET
    data_selector: metrics
    params: {}
- name: TestMRRK
  endpoint:
    path: /reference/all-metrics/ranking-metrics
    method: GET
    data_selector: metrics
    params: {}
- name: TestNDCGK
  endpoint:
    path: /reference/all-metrics/ranking-metrics
    method: GET
    data_selector: metrics
    params: {}
- name: TestNovelty
  endpoint:
    path: /reference/all-metrics/ranking-metrics
    method: GET
    data_selector: metrics
    params: {}
- name: TestPersonalization
  endpoint:
    path: /reference/all-metrics/ranking-metrics
    method: GET
    data_selector: metrics
    params: {}
- name: TestSerendipity
  endpoint:
    path: /reference/all-metrics/ranking-metrics
    method: GET
    data_selector: metrics
    params: {}
- name: TestDiversity
  endpoint:
    path: /reference/all-metrics/ranking-metrics
    method: GET
    data_selector: metrics
    params: {}
- name: TestARP
  endpoint:
    path: /reference/all-metrics/ranking-metrics
    method: GET
    data_selector: metrics
    params: {}
- name: TestGiniIndex
  endpoint:
    path: /reference/all-metrics/ranking-metrics
    method: GET
    data_selector: metrics
    params: {}
- name: TestCoverage
  endpoint:
    path: /reference/all-metrics/ranking-metrics
    method: GET
    data_selector: metrics
    params: {}
- name: NoTargetPerformanceTestPreset
  endpoint:
    path: /reference/all-tests
    method: GET
    data_selector: tests
    params: {}
- name: DataStabilityTestPreset
  endpoint:
    path: /reference/all-tests
    method: GET
    data_selector: tests
    params: {}
- name: DataQualityTestPreset
  endpoint:
    path: /reference/all-tests
    method: GET
    data_selector: tests
    params: {}
- name: DataDriftTestPreset
  endpoint:
    path: /reference/all-tests
    method: GET
    data_selector: tests
    params: {}
- name: RegressionTestPreset
  endpoint:
    path: /reference/all-tests
    method: GET
    data_selector: tests
    params: {}
- name: MulticlassClassificationTestPreset
  endpoint:
    path: /reference/all-tests
    method: GET
    data_selector: tests
    params: {}
- name: BinaryClassificationTopKTestPreset
  endpoint:
    path: /reference/all-tests
    method: GET
    data_selector: tests
    params: {}
- name: BinaryClassificationTestPreset
  endpoint:
    path: /reference/all-tests
    method: GET
    data_selector: tests
    params: {}
- name: RecsysTestPreset
  endpoint:
    path: /reference/all-tests
    method: GET
    data_selector: tests
    params: {}
- name: TestNumberOfRows
  endpoint:
    params: {}
- name: TestNumberOfColumns
  endpoint:
    params: {}
- name: TestNumberOfConstantColumns
  endpoint:
    params: {}
- name: TestNumberOfEmptyRows
  endpoint:
    params: {}
- name: TestNumberOfEmptyColumns
  endpoint:
    params: {}
- name: TestNumberOfDuplicatedRows
  endpoint:
    params: {}
- name: TestNumberOfDuplicatedColumns
  endpoint:
    params: {}
- name: TestConflictTarget
  endpoint:
    params: {}
- name: TestConflictPrediction
  endpoint:
    params: {}
- name: TestColumnsType
  endpoint:
    params: {}
- name: TestColumnAllConstantValues
  endpoint:
    params: {}
- name: TestColumnAllUniqueValues
  endpoint:
    params: {}
- name: TestNumberOfUniqueValues
  endpoint:
    params: {}
- name: TestUniqueValuesShare
  endpoint:
    params: {}
- name: TestMostCommonValueShare
  endpoint:
    params: {}
- name: TestColumnRegExp
  endpoint:
    params: {}
- name: TestNumberOfMissingValues
  endpoint:
    params: {}
- name: TestShareOfMissingValues
  endpoint:
    params: {}
- name: TestNumberOfColumnsWithMissingValues
  endpoint:
    params: {}
- name: TestShareOfColumnsWithMissingValues
  endpoint:
    params: {}
- name: TestNumberOfRowsWithMissingValues
  endpoint:
    params: {}
- name: TestShareOfRowsWithMissingValues
  endpoint:
    params: {}
- name: TestNumberOfDifferentMissingValues
  endpoint:
    params: {}
- name: TestColumnNumberOfMissingValues
  endpoint:
    params: {}
- name: TestColumnShareOfMissingValues
  endpoint:
    params: {}
- name: TestColumnNumberOfDifferentMissingValues
  endpoint:
    params: {}
- name: TestTargetPredictionCorrelation
  endpoint:
    params: {}
- name: TestHighlyCorrelatedColumns
  endpoint:
    params: {}
- name: TestTargetFeaturesCorrelations
  endpoint:
    params: {}
- name: TestPredictionFeaturesCorrelations
  endpoint:
    params: {}
- name: TestCorrelationChanges
  endpoint:
    params: {}
- name: ClassificationDummyMetric
  endpoint:
    path: /metrics/classification/dummy
    method: GET
    data_selector: metrics
    params: {}
- name: ClassificationQualityMetric
  endpoint:
    path: /metrics/classification/quality
    method: GET
    data_selector: metrics
    params: {}
- name: ClassificationClassBalance
  endpoint:
    path: /metrics/classification/class_balance
    method: GET
    data_selector: metrics
    params: {}
- name: ClassificationConfusionMatrix
  endpoint:
    path: /metrics/classification/confusion_matrix
    method: GET
    data_selector: metrics
    params: {}
- name: ClassificationQualityByClass
  endpoint:
    path: /metrics/classification/quality_by_class
    method: GET
    data_selector: metrics
    params: {}
- name: ClassificationClassSeparationPlot
  endpoint:
    path: /metrics/classification/class_separation
    method: GET
    data_selector: metrics
    params: {}
- name: ClassificationProbDistribution
  endpoint:
    path: /metrics/classification/prob_distribution
    method: GET
    data_selector: metrics
    params: {}
- name: ClassificationRocCurve
  endpoint:
    path: /metrics/classification/roc_curve
    method: GET
    data_selector: metrics
    params: {}
- name: ClassificationPRCurve
  endpoint:
    path: /metrics/classification/pr_curve
    method: GET
    data_selector: metrics
    params: {}
- name: ClassificationPRTable
  endpoint:
    path: /metrics/classification/pr_table
    method: GET
    data_selector: metrics
    params: {}
- name: ClassificationQualityByFeatureTable
  endpoint:
    path: /metrics/classification/quality_by_feature
    method: GET
    data_selector: metrics
    params: {}
- name: RegressionDummyMetric
  endpoint:
    path: /metrics/regression/dummy
    method: GET
    data_selector: metrics
    params: {}
- name: RegressionQualityMetric
  endpoint:
    path: /metrics/regression/quality
    method: GET
    data_selector: metrics
    params: {}
- name: RegressionPredictedVsActualScatter
  endpoint:
    path: /metrics/regression/predicted_vs_actual_scatter
    method: GET
    data_selector: metrics
    params: {}
- name: RegressionPredictedVsActualPlot
  endpoint:
    path: /metrics/regression/predicted_vs_actual_plot
    method: GET
    data_selector: metrics
    params: {}
- name: RegressionErrorPlot
  endpoint:
    path: /metrics/regression/error_plot
    method: GET
    data_selector: metrics
    params: {}
- name: RegressionAbsPercentageErrorPlot
  endpoint:
    path: /metrics/regression/abs_percentage_error_plot
    method: GET
    data_selector: metrics
    params: {}
- name: RegressionErrorDistribution
  endpoint:
    path: /metrics/regression/error_distribution
    method: GET
    data_selector: metrics
    params: {}
- name: RegressionErrorNormality
  endpoint:
    path: /metrics/regression/error_normality
    method: GET
    data_selector: metrics
    params: {}
- name: RegressionTopErrorMetric
  endpoint:
    path: /metrics/regression/top_error
    method: GET
    data_selector: metrics
    params: {}
- name: RegressionErrorBiasTable
  endpoint:
    path: /metrics/regression/error_bias_table
    method: GET
    data_selector: metrics
    params: {}
- name: RecallTopKMetric
  endpoint:
    path: /metrics/ranking/recall_top_k
    method: GET
    data_selector: metrics
    params: {}
- name: PrecisionTopKMetric
  endpoint:
    path: /metrics/ranking/precision_top_k
    method: GET
    data_selector: metrics
    params: {}
- name: FBetaTopKMetric
  endpoint:
    path: /metrics/ranking/fbeta_top_k
    method: GET
    data_selector: metrics
    params: {}
- name: MAPKMetric
  endpoint:
    path: /metrics/ranking/map_k
    method: GET
    data_selector: metrics
    params: {}
- name: MARKMetric
  endpoint:
    path: /metrics/ranking/mark
    method: GET
    data_selector: metrics
    params: {}
- name: NDCGKMetric
  endpoint:
    path: /metrics/ranking/ndcg_k
    method: GET
    data_selector: metrics
    params: {}
- name: MRRKMetric
  endpoint:
    path: /metrics/ranking/mrr_k
    method: GET
    data_selector: metrics
    params: {}
- name: HitRateKMetric
  endpoint:
    path: /metrics/ranking/hit_rate_k
    method: GET
    data_selector: metrics
    params: {}
- name: DiversityMetric
  endpoint:
    path: /metrics/ranking/diversity
    method: GET
    data_selector: metrics
    params: {}
- name: NoveltyMetric
  endpoint:
    path: /metrics/ranking/novelty
    method: GET
    data_selector: metrics
    params: {}
- name: SerendipityMetric
  endpoint:
    path: /metrics/ranking/serendipity
    method: GET
    data_selector: metrics
    params: {}
- name: PersonalizationMetric
  endpoint:
    path: /metrics/ranking/personalization
    method: GET
    data_selector: metrics
    params: {}
- name: PopularityBias
  endpoint:
    path: /metrics/ranking/popularity_bias
    method: GET
    data_selector: metrics
    params: {}
- name: ItemBiasMetric
  endpoint:
    path: /metrics/ranking/item_bias
    method: GET
    data_selector: metrics
    params: {}
- name: UserBiasMetric
  endpoint:
    path: /metrics/ranking/user_bias
    method: GET
    data_selector: metrics
    params: {}
- name: ScoreDistribution
  endpoint:
    path: /metrics/ranking/score_distribution
    method: GET
    data_selector: metrics
    params: {}
- name: RecCasesTable
  endpoint:
    path: /metrics/ranking/rec_cases
    method: GET
    data_selector: metrics
    params: {}
- name: RecallTopKMetric
  endpoint:
    path: /ranking/recall
    method: GET
    data_selector: metrics
    params: {}
- name: PrecisionTopKMetric
  endpoint:
    path: /ranking/precision
    method: GET
    data_selector: metrics
    params: {}
- name: FBetaTopKMetric
  endpoint:
    path: /ranking/fbeta
    method: GET
    data_selector: metrics
    params: {}
- name: MAPKMetric
  endpoint:
    path: /ranking/map
    method: GET
    data_selector: metrics
    params: {}
- name: TestColumnValueMin
  endpoint:
    params:
      column_name: num-column
- name: TestColumnValueMax
  endpoint:
    params:
      column_name: num-column
- name: TestColumnValueMean
  endpoint:
    params:
      column_name: num-column
- name: TestColumnValueMedian
  endpoint:
    params:
      column_name: num-column
- name: TestColumnValueStd
  endpoint:
    params:
      column_name: num-column
- name: TestColumnQuantile
  endpoint:
    params:
      column_name: num_column
      quantile: 0.25
- name: TestMeanInNSigmas
  endpoint:
    params:
      column_name: num-column
- name: TestValueRange
  endpoint:
    params:
      column_name: num_column
- name: TestShareOfOutRangeValues
  endpoint:
    params:
      column_name: num_column
- name: TestNumberOfOutRangeValues
  endpoint:
    params:
      column_name: num_column
- name: TestCategoryShare
  endpoint:
    params:
      column_name: education
      category: Some-college
      lt: 0.5
- name: TestCategoryCount
  endpoint:
    params:
      column_name: education
      category: Some-college
      lt: 0.5
- name: TestValueList
  endpoint:
    params:
      column_name: cat_column
- name: TestNumberOfOutListValues
  endpoint:
    params:
      column_name: cat_column
- name: TestShareOfOutListValues
  endpoint:
    params:
      column_name: cat_column
- name: TestNumberOfDriftedColumns
  endpoint:
    params: {}
- name: TestShareOfDriftedColumns
  endpoint:
    params: {}
- name: TestColumnDrift
  endpoint:
    params:
      column_name: name
- name: TestEmbeddingsDrift
  endpoint:
    params:
      embeddings_name: small_subset
- name: TestValueMAE
  endpoint:
    params: {}
- name: TestValueRMSE
  endpoint:
    params: {}
- name: TestValueMeanError
  endpoint:
    params: {}
- name: TestValueMAPE
  endpoint:
    params: {}
- name: TestValueAbsMaxError
  endpoint:
    params: {}
- name: TestValueR2Score
  endpoint:
    params: {}
- name: TestAccuracyScore
  endpoint:
    params: {}
- name: TestPrecisionScore
  endpoint:
    params: {}
- name: TestRecallScore
  endpoint:
    params: {}
- name: TestF1Score
  endpoint:
    params: {}
- name: TestPrecisionByClass
  endpoint:
    params:
      label: classN
- name: TestRecallByClass
  endpoint:
    params:
      label: classN
- name: TestF1ByClass
  endpoint:
    params:
      label: classN
- name: TestTPR
  endpoint:
    params: {}
- name: TestTNR
  endpoint:
    params: {}
- name: TestFPR
  endpoint:
    params: {}
- name: TestFNR
  endpoint:
    params: {}
- name: TestRocAuc
  endpoint:
    params: {}
- name: TestLogLoss
  endpoint:
    params: {}
- name: mean_average_recall
  endpoint:
    path: /metrics/mean_average_recall
    method: GET
    data_selector: metrics
- name: normalized_discounted_cumulative_gain
  endpoint:
    path: /metrics/normalized_discounted_cumulative_gain
    method: GET
    data_selector: metrics
- name: hit_rate
  endpoint:
    path: /metrics/hit_rate
    method: GET
    data_selector: metrics
- name: mean_reciprocal_rank
  endpoint:
    path: /metrics/mean_reciprocal_rank
    method: GET
    data_selector: metrics
- name: diversity
  endpoint:
    path: /metrics/diversity
    method: GET
    data_selector: metrics
- name: novelty
  endpoint:
    path: /metrics/novelty
    method: GET
    data_selector: metrics
- name: serendipity
  endpoint:
    path: /metrics/serendipity
    method: GET
    data_selector: metrics
- name: personalization
  endpoint:
    path: /metrics/personalization
    method: GET
    data_selector: metrics
- name: popularity_bias
  endpoint:
    path: /metrics/popularity_bias
    method: GET
    data_selector: metrics
- name: RecCasesTable
  endpoint:
    path: /RecCasesTable
    method: GET
    data_selector: recommendations
    params: {}
- name: ScoreDistribution
  endpoint:
    path: /ScoreDistribution
    method: GET
    data_selector: score_entropy
    params: {}
- name: ItemBiasMetric
  endpoint:
    path: /ItemBiasMetric
    method: GET
    data_selector: item_bias_distribution
    params: {}
- name: UserBiasMetric
  endpoint:
    path: /UserBiasMetric
    method: GET
    data_selector: user_bias_distribution
    params: {}
- name: TestPrecisionTopK
  endpoint:
    params:
      k: required
      no_feedback_users: optional
      min_rel_score: optional
- name: TestRecallTopK
  endpoint:
    params:
      k: required
      no_feedback_users: optional
      min_rel_score: optional
- name: TestFBetaTopK
  endpoint:
    params:
      k: required
      no_feedback_users: optional
      min_rel_score: optional
- name: TestHitRateK
  endpoint:
    params:
      k: required
      no_feedback_users: optional
      min_rel_score: optional
- name: TestMAPK
  endpoint:
    params:
      k: required
      no_feedback_users: optional
      min_rel_score: optional
- name: TestMRRK
  endpoint:
    params:
      k: required
      no_feedback_users: optional
      min_rel_score: optional
- name: TestNDCGK
  endpoint:
    params:
      k: required
      no_feedback_users: optional
      min_rel_score: optional
- name: TestNovelty
  endpoint:
    params:
      k: required
- name: TestPersonalization
  endpoint:
    params:
      k: required
- name: TestSerendipity
  endpoint:
    params:
      k: required
      item_features: required
      min_rel_score: optional
- name: TestDiversity
  endpoint:
    params:
      k: required
      item_features: required
- name: TestARP
  endpoint:
    params:
      k: required
      normalize_arp: optional
- name: TestGiniIndex
  endpoint:
    params:
      k: required
- name: TestCoverage
  endpoint:
    params:
      k: required
- name: ClassificationQualityByClassResult
  endpoint:
    path: /reference/api-reference/evidently.metrics/evidently.metrics.classification_performance#evidently.metrics.classification_performance.quality_by_class_metric.ClassificationQualityByClassResult
    method: GET
    data_selector: columns
    params: {}
- name: ClassificationQualityByFeatureTable
  endpoint:
    path: /reference/api-reference/evidently.metrics/evidently.metrics.classification_performance#evidently.metrics.classification_performance.quality_by_feature_table.ClassificationQualityByFeatureTable
    method: GET
    data_selector: columns
    params: {}
- name: ColumnDriftMetric
  endpoint:
    path: /reference/api-reference/evidently.metrics/evidently.metrics.data_drift#evidently.metrics.data_drift.column_drift_metric.ColumnDriftMetric
    method: GET
    data_selector: column_name
    params: {}
- name: DataDriftTable
  endpoint:
    path: /reference/api-reference/evidently.metrics/evidently.metrics.data_drift#evidently.metrics.data_drift.data_drift_table.DataDriftTable
    method: GET
    data_selector: columns
    params: {}
- name: DatasetSummaryMetric
  endpoint:
    path: /dataset_summary_metric
    method: GET
    data_selector: dataset_summary
    params: {}
- name: DatasetMissingValuesMetric
  endpoint:
    path: /dataset_missing_values_metric
    method: GET
    data_selector: missing_values
    params: {}
- name: DatasetCorrelationsMetric
  endpoint:
    path: /dataset_correlations_metric
    method: GET
    data_selector: correlations
    params: {}
- name: ColumnSummaryMetric
  endpoint:
    path: /column_summary_metric
    method: GET
    data_selector: column_summary
    params:
      column_name: column_name
- name: ColumnMissingValuesMetric
  endpoint:
    path: /column_missing_values_metric
    method: GET
    data_selector: missing_values_column
    params: {}
- name: ColumnRegExpMetric
  endpoint:
    path: /column_regexp_metric
    method: GET
    data_selector: regexp_results
    params:
      column_name: column_name
      reg_exp: reg_exp
- name: ColumnDistributionMetric
  endpoint:
    path: /column_distribution_metric
    method: GET
    data_selector: distribution
    params:
      column_name: column_name
- name: ColumnValuePlot
  endpoint:
    path: /column_value_plot
    method: GET
    data_selector: value_plot
    params:
      column_name: column_name
- name: ColumnQuantileMetric
  endpoint:
    path: /column_quantile_metric
    method: GET
    data_selector: quantile
    params:
      column_name: column_name
      quantile: quantile
- name: ColumnCorrelationsMetric
  endpoint:
    path: /column_correlations_metric
    method: GET
    data_selector: correlations_column
    params:
      column_name: column_name
- name: ColumnValueListMetric
  endpoint:
    path: /column_value_list_metric
    method: GET
    data_selector: value_list
    params:
      column_name: column_name
      values: values
- name: ColumnValueRangeMetric
  endpoint:
    path: /column_value_range_metric
    method: GET
    data_selector: value_range
    params:
      column_name: column_name
      left: left
      right: right
- name: recall
  endpoint:
    path: /reference/all-metrics/ranking-metrics/recall
    method: GET
    data_selector: RecallTopKMetric
- name: precision
  endpoint:
    path: /reference/all-metrics/ranking-metrics/precision
    method: GET
    data_selector: PrecisionTopKMetric
- name: f_beta
  endpoint:
    path: /reference/all-metrics/ranking-metrics/f-beta
    method: GET
    data_selector: FBetaTopKMetric
- name: mean_average_precision
  endpoint:
    path: /reference/all-metrics/ranking-metrics/map
    method: GET
    data_selector: MAPKMetric
- name: classification_performance
  endpoint:
    path: /reference/api-reference/evidently.metrics.classification_performance
    method: GET
    data_selector: metrics
    params: {}
- name: data_drift
  endpoint:
    path: /reference/api-reference/evidently.metrics.data_drift
    method: GET
    data_selector: metrics
    params: {}
- name: data_quality
  endpoint:
    path: /reference/api-reference/evidently.metrics.data_quality
    method: GET
    data_selector: metrics
    params: {}
- name: regression_performance
  endpoint:
    path: /reference/api-reference/evidently.metrics.regression_performance
    method: GET
    data_selector: metrics
    params: {}
- name: target_drift
  endpoint:
    path: /reference/api-reference/evidently.metrics.target_drift
    method: GET
    data_selector: metrics
    params: {}
- name: mean_average_recall
  endpoint:
    path: /metrics/mar
    method: GET
    data_selector: metrics
- name: ndcg
  endpoint:
    path: /metrics/ndcg
    method: GET
    data_selector: metrics
- name: hit_rate
  endpoint:
    path: /metrics/hit_rate
    method: GET
    data_selector: metrics
- name: mean_reciprocal_rank
  endpoint:
    path: /metrics/mrr
    method: GET
    data_selector: metrics
- name: diversity
  endpoint:
    path: /metrics/diversity
    method: GET
    data_selector: metrics
- name: novelty
  endpoint:
    path: /metrics/novelty
    method: GET
    data_selector: metrics
- name: serendipity
  endpoint:
    path: /metrics/serendipity
    method: GET
    data_selector: metrics
- name: personalization
  endpoint:
    path: /metrics/personalization
    method: GET
    data_selector: metrics
- name: popularity_bias
  endpoint:
    path: /metrics/popularity_bias
    method: GET
    data_selector: metrics
- name: color_options
  endpoint:
    params: {}
- name: data_drift_options
  endpoint:
    params: {}
- name: quality_metrics_options
  endpoint:
    params: {}
- name: RecCasesTable
  endpoint:
    path: /RecCasesTable
    method: GET
    data_selector: recommendations
    params: {}
- name: ScoreDistribution
  endpoint:
    path: /ScoreDistribution
    method: GET
    data_selector: score_distribution
    params: {}
- name: ItemBiasMetric
  endpoint:
    path: /ItemBiasMetric
    method: GET
    data_selector: item_bias
    params: {}
- name: UserBiasMetric
  endpoint:
    path: /UserBiasMetric
    method: GET
    data_selector: user_bias
    params: {}
- name: Report
  endpoint:
    path: /reference/api-reference/evidently.report
    method: GET
    data_selector: metrics
    params: {}
- name: FeatureQualityStats
  endpoint:
    path: /feature_quality_stats
    method: GET
    data_selector: records
    params: {}
- name: RegressionPerformanceMetrics
  endpoint:
    path: /regression_performance_metrics
    method: GET
    data_selector: records
    params: {}
- name: BinaryClassificationTestPreset
  endpoint:
    path: /BinaryClassificationTestPreset
    method: GET
    data_selector: records
    params: {}
- name: BinaryClassificationTopKTestPreset
  endpoint:
    path: /BinaryClassificationTopKTestPreset
    method: GET
    data_selector: records
    params: {}
- name: MulticlassClassificationTestPreset
  endpoint:
    path: /MulticlassClassificationTestPreset
    method: GET
    data_selector: records
    params: {}
- name: DataDriftTestPreset
  endpoint:
    path: /DataDriftTestPreset
    method: GET
    data_selector: records
    params: {}
- name: DataQualityTestPreset
  endpoint:
    path: /DataQualityTestPreset
    method: GET
    data_selector: records
    params: {}
- name: DataStabilityTestPreset
  endpoint:
    path: /DataStabilityTestPreset
    method: GET
    data_selector: records
    params: {}
- name: NoTargetPerformanceTestPreset
  endpoint:
    path: /NoTargetPerformanceTestPreset
    method: GET
    data_selector: records
    params: {}
- name: RegressionTestPreset
  endpoint:
    path: /RegressionTestPreset
    method: GET
    data_selector: records
    params: {}
- name: RegressionErrorBiasTableResults
  endpoint:
    path: /reference/api-reference/evidently.metrics/evidently.metrics.regression_performance#error_bias_table
    method: GET
    data_selector: results
    params: {}
- name: RegressionErrorDistribution
  endpoint:
    path: /reference/api-reference/evidently.metrics/evidently.metrics.regression_performance#error_distribution
    method: GET
    data_selector: results
    params: {}
- name: RegressionErrorPlot
  endpoint:
    path: /reference/api-reference/evidently.metrics/evidently.metrics.regression_performance#error_in_time
    method: GET
    data_selector: results
    params: {}
- name: RegressionErrorNormality
  endpoint:
    path: /reference/api-reference/evidently.metrics/evidently.metrics.regression_performance#error_normality
    method: GET
    data_selector: results
    params: {}
- name: RegressionPredictedVsActualPlot
  endpoint:
    path: /reference/api-reference/evidently.metrics/evidently.metrics.regression_performance#predicted_and_actual_in_time
    method: GET
    data_selector: results
    params: {}
- name: RegressionPredictedVsActualScatter
  endpoint:
    path: /reference/api-reference/evidently.metrics/evidently.metrics.regression_performance#predicted_vs_actual
    method: GET
    data_selector: results
    params: {}
- name: RegressionDummyMetric
  endpoint:
    path: /reference/api-reference/evidently.metrics/evidently.metrics.regression_performance#regression_dummy_metric
    method: GET
    data_selector: results
    params: {}
- name: RegressionPerformanceMetrics
  endpoint:
    path: /reference/api-reference/evidently.metrics/evidently.metrics.regression_performance#regression_performance_metrics
    method: GET
    data_selector: results
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ClassificationPreset
  endpoint:
    path: /reference/api-reference/evidently.metric_preset/classification_performance
    method: GET
    data_selector: metrics
    params: {}
- name: DataDriftPreset
  endpoint:
    path: /reference/api-reference/evidently.metric_preset/data_drift
    method: GET
    data_selector: drift_metrics
    params: {}
- name: DataQualityPreset
  endpoint:
    path: /reference/api-reference/evidently.metric_preset/data_quality
    method: GET
    data_selector: quality_metrics
    params: {}
- name: RegressionPreset
  endpoint:
    path: /reference/api-reference/evidently.metric_preset/regression_performance
    method: GET
    data_selector: regression_metrics
    params: {}
- name: TargetDriftPreset
  endpoint:
    path: /reference/api-reference/evidently.metric_preset/target_drift
    method: GET
    data_selector: target_drift_metrics
    params: {}
- name: DataDriftPreset
  endpoint:
    path: /data_drift_preset
    method: GET
    data_selector: metrics
    params: {}
- name: DataQualityPreset
  endpoint:
    path: /data_quality_preset
    method: GET
    data_selector: metrics
    params: {}
- name: RegressionPreset
  endpoint:
    path: /regression_preset
    method: GET
    data_selector: metrics
    params: {}
- name: TargetDriftPreset
  endpoint:
    path: /target_drift_preset
    method: GET
    data_selector: metrics
    params: {}
- name: DataDriftOptions
  endpoint:
    path: /DataDriftOptions
    method: GET
- name: QualityMetricsOptions
  endpoint:
    path: /QualityMetricsOptions
    method: GET
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
- name: reports
  endpoint:
    path: /api/reports
    method: GET
    data_selector: data
- name: Report
  endpoint:
    path: /reference/api-reference/evidently.report
    method: GET
    data_selector: metrics
    params: {}
- name: Context
  endpoint:
    path: /evidently/suite/context
    method: GET
    data_selector: metrics
    params: {}
- name: ExecutionGraph
  endpoint:
    path: /evidently/suite/execution_graph
    method: GET
    data_selector: metrics
    params: {}
- name: data_drift_report
  endpoint:
    path: /api/data_drift_report
    method: POST
    data_selector: report
    params: {}
- name: BinaryClassificationTestPreset
  endpoint:
    path: /api/test_preset/binary_classification
    method: GET
    data_selector: data
    params: {}
- name: experiment
  endpoint:
    path: /api/v1/experiments
    method: GET
    data_selector: experiments
    params: {}
- name: BinaryClassificationTestPreset
  endpoint:
    path: /evidently/test_preset/BinaryClassificationTestPreset
    method: GET
- name: BinaryClassificationTopKTestPreset
  endpoint:
    path: /evidently/test_preset/BinaryClassificationTopKTestPreset
    method: GET
- name: MulticlassClassificationTestPreset
  endpoint:
    path: /evidently/test_preset/MulticlassClassificationTestPreset
    method: GET
- name: DataDriftTestPreset
  endpoint:
    path: /evidently/test_preset/DataDriftTestPreset
    method: GET
- name: DataQualityTestPreset
  endpoint:
    path: /evidently/test_preset/DataQualityTestPreset
    method: GET
- name: DataStabilityTestPreset
  endpoint:
    path: /evidently/test_preset/DataStabilityTestPreset
    method: GET
- name: NoTargetPerformanceTestPreset
  endpoint:
    path: /evidently/test_preset/NoTargetPerformanceTestPreset
    method: GET
- name: RegressionTestPreset
  endpoint:
    path: /evidently/test_preset/RegressionTestPreset
    method: GET
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: TestSuite
  endpoint:
    path: /reference/api-reference/evidently.test_suite
    method: GET
    data_selector: records
- name: event_log
  endpoint:
    path: /events/log
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: BaseCheckValueTest
  endpoint:
    path: /base_check_value_test
    method: GET
    data_selector: records
- name: BaseConditionsTest
  endpoint:
    path: /base_conditions_test
    method: GET
    data_selector: records
- name: GroupData
  endpoint:
    path: /group_data
    method: GET
    data_selector: records
- name: GroupTypeData
  endpoint:
    path: /group_type_data
    method: GET
    data_selector: records
- name: GroupingTypes
  endpoint:
    path: /grouping_types
    method: GET
    data_selector: records
- name: Test
  endpoint:
    path: /test
    method: GET
    data_selector: records
- name: TestResult
  endpoint:
    path: /test_result
    method: GET
    data_selector: records
- name: TestValueCondition
  endpoint:
    path: /test_value_condition
    method: GET
    data_selector: records
- name: ByClassClassificationTest
  endpoint:
    path: /by_class_classification_test
    method: GET
    data_selector: records
- name: SimpleClassificationTest
  endpoint:
    path: /simple_classification_test
    method: GET
    data_selector: records
- name: SimpleClassificationTestTopK
  endpoint:
    path: /simple_classification_test_top_k
    method: GET
    data_selector: records
- name: TestAccuracyScore
  endpoint:
    path: /test_accuracy_score
    method: GET
    data_selector: records
- name: TestF1ByClass
  endpoint:
    path: /test_f1_by_class
    method: GET
    data_selector: records
- name: TestF1Score
  endpoint:
    path: /test_f1_score
    method: GET
    data_selector: records
- name: TestFNR
  endpoint:
    path: /test_fnr
    method: GET
    data_selector: records
- name: reports
  endpoint:
    path: /user-guide/tests-and-reports/get-reports
    method: GET
    data_selector: reports
    params: {}
- name: test_suites
  endpoint:
    path: /user-guide/tests-and-reports/run-tests
    method: GET
    data_selector: test_suites
    params: {}
- name: TestColumnValueMin
  endpoint:
    path: /tests/column_value_min
    method: GET
    data_selector: results
    params:
      column_name: num-column
- name: TestColumnValueMax
  endpoint:
    path: /tests/column_value_max
    method: GET
    data_selector: results
    params:
      column_name: num-column
- name: TestColumnValueMean
  endpoint:
    path: /tests/column_value_mean
    method: GET
    data_selector: results
    params:
      column_name: num-column
- name: TestColumnValueMedian
  endpoint:
    path: /tests/column_value_median
    method: GET
    data_selector: results
    params:
      column_name: num-column
- name: TestColumnValueStd
  endpoint:
    path: /tests/column_value_std
    method: GET
    data_selector: results
    params:
      column_name: num-column
- name: TestColumnQuantile
  endpoint:
    path: /tests/column_quantile
    method: GET
    data_selector: results
    params:
      column_name: num_column
      quantile: 0.25
- name: TestMeanInNSigmas
  endpoint:
    path: /tests/mean_in_n_sigmas
    method: GET
    data_selector: results
    params:
      column_name: num-column
- name: TestValueRange
  endpoint:
    path: /tests/value_range
    method: GET
    data_selector: results
    params:
      column_name: num_column
- name: TestShareOfOutRangeValues
  endpoint:
    path: /tests/share_of_out_range_values
    method: GET
    data_selector: results
    params:
      column_name: num_column
- name: TestNumberOfOutRangeValues
  endpoint:
    path: /tests/number_of_out_range_values
    method: GET
    data_selector: results
    params:
      column_name: num_column
- name: TestCategoryShare
  endpoint:
    path: /tests/category_share
    method: GET
    data_selector: results
    params:
      column_name: education
      category: Some-college
      lt: 0.5
- name: TestCategoryCount
  endpoint:
    path: /tests/category_count
    method: GET
    data_selector: results
    params:
      column_name: education
      category: Some-college
      lt: 0.5
- name: TestValueList
  endpoint:
    path: /tests/value_list
    method: GET
    data_selector: results
    params:
      column_name: cat_column
- name: TestNumberOfOutListValues
  endpoint:
    path: /tests/number_of_out_list_values
    method: GET
    data_selector: results
    params:
      column_name: cat_column
- name: TestShareOfOutListValues
  endpoint:
    path: /tests/share_of_out_list_values
    method: GET
    data_selector: results
    params:
      column_name: cat_column
- name: Data Drift Evaluation
  endpoint:
    path: /api/v1/data-drift
    method: POST
    data_selector: results
    params: {}
- name: TestPrecisionTopK
  endpoint:
    path: /reference/all-metrics/ranking-metrics/TestPrecisionTopK
    method: GET
    data_selector: k
    params: {}
- name: TestRecallTopK
  endpoint:
    path: /reference/all-metrics/ranking-metrics/TestRecallTopK
    method: GET
    data_selector: k
    params: {}
- name: TestFBetaTopK
  endpoint:
    path: /reference/all-metrics/ranking-metrics/TestFBetaTopK
    method: GET
    data_selector: k
    params: {}
- name: TestHitRateK
  endpoint:
    path: /reference/all-metrics/ranking-metrics/TestHitRateK
    method: GET
    data_selector: k
    params: {}
- name: TestMAPK
  endpoint:
    path: /reference/all-metrics/ranking-metrics/TestMAPK
    method: GET
    data_selector: k
    params: {}
- name: TestMRRK
  endpoint:
    path: /reference/all-metrics/ranking-metrics/TestMRRK
    method: GET
    data_selector: k
    params: {}
- name: TestNDCGK
  endpoint:
    path: /reference/all-metrics/ranking-metrics/TestNDCGK
    method: GET
    data_selector: k
    params: {}
- name: TestNovelty
  endpoint:
    path: /reference/all-metrics/ranking-metrics/TestNovelty
    method: GET
    data_selector: k
    params: {}
- name: TestPersonalization
  endpoint:
    path: /reference/all-metrics/ranking-metrics/TestPersonalization
    method: GET
    data_selector: k
    params: {}
- name: TestSerendipity
  endpoint:
    path: /reference/all-metrics/ranking-metrics/TestSerendipity
    method: GET
    data_selector: k
    params: {}
- name: TestDiversity
  endpoint:
    path: /reference/all-metrics/ranking-metrics/TestDiversity
    method: GET
    data_selector: k
    params: {}
- name: TestARP
  endpoint:
    path: /reference/all-metrics/ranking-metrics/TestARP
    method: GET
    data_selector: k
    params: {}
- name: TestGiniIndex
  endpoint:
    path: /reference/all-metrics/ranking-metrics/TestGiniIndex
    method: GET
    data_selector: k
    params: {}
- name: TestCoverage
  endpoint:
    path: /reference/all-metrics/ranking-metrics/TestCoverage
    method: GET
    data_selector: k
    params: {}
- name: contact
  endpoint:
    path: /api/contact
    method: GET
    data_selector: records
    params: {}
- name: event_log
  endpoint:
    path: /event_log
    method: GET
    data_selector: records
- name: TestPrecisionTopK
  endpoint:
    params:
      k: null
      no_feedback_users: false
      min_rel_score: null
- name: TestRecallTopK
  endpoint:
    params:
      k: null
      no_feedback_users: false
      min_rel_score: null
- name: TestFBetaTopK
  endpoint:
    params:
      k: null
      no_feedback_users: false
      min_rel_score: null
- name: TestHitRateK
  endpoint:
    params:
      k: null
      no_feedback_users: false
      min_rel_score: null
- name: TestMAPK
  endpoint:
    params:
      k: null
      no_feedback_users: false
      min_rel_score: null
- name: TestMRRK
  endpoint:
    params:
      k: null
      no_feedback_users: false
      min_rel_score: null
- name: TestNDCGK
  endpoint:
    params:
      k: null
      no_feedback_users: false
      min_rel_score: null
- name: TestNovelty
  endpoint:
    params:
      k: null
- name: TestPersonalization
  endpoint:
    params:
      k: null
- name: TestSerendipity
  endpoint:
    params:
      k: null
      item_features: null
      min_rel_score: null
- name: TestDiversity
  endpoint:
    params:
      k: null
      item_features: null
- name: TestARP
  endpoint:
    params:
      k: null
      normalize_arp: false
- name: TestGiniIndex
  endpoint:
    params:
      k: null
- name: TestCoverage
  endpoint:
    params:
      k: null
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in Evidently
- Evidently is available both as an open-source Python library and Evidently Cloud
  platform.
- Requires OAuth2 configuration.
- Instrument your LLM application to send inputs and outputs to Evidently Cloud.
- Evaluate and monitor data drift, data quality, or ML model performance.
- Evaluate and monitor the quality of LLM system inputs and outputs.
- Upload a CSV file to run evaluations directly in the Evidently Cloud.
- Uses API key for authentication
- Requires setup of a project and organization in Evidently Cloud
- Requires setup of Evidently Cloud account and project.
- Requires setup of an API token for authentication.
- You must create an Organization to get an ID.
- API token is required for accessing the Evidently Cloud.
- Requires an API token for authentication
- Users must create an organization to use the API
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Get your API token from the token page after signing up.
- You can use the open-source tracely library to collect inputs and outputs from a
  live LLM app.
- Check this Guide on how to upload a CSV file and run an eval.
- This API is available with versions 0.6.7 or lower and Evidently Cloud v1.
- Run evaluations for tabular data (data drift, data quality) and ML models (classification,
  regression, ranking).
- You can use the open-source `tracely` library to collect inputs and outputs from
  a live LLM app.
- You can detect and analyze changes in the input feature distributions.
- The default report includes 4 components.
- API is available with versions 0.6.7 or lower.
- You can customize the drift detection methods and thresholds
- You can create a different report from scratch taking this one as an inspiration
- For production pipeline tests, use Test Suites.
- For exploratory analysis and debugging, use Report.
- This API is available with versions 0.6.7 or lower.
- All visuals in the Evidently Reports are aggregated by default starting from v 0.3.2.
- You can specify the drift detection methods and thresholds.
- You can add a custom drift detection method.
- You can use a different color schema for the report.
- You can create a different report or test suite from scratch taking this one as
  an inspiration.
- You can monitor and analyze the performance of a regression model.
- To run this report, you need to have input features, and both target and prediction
  columns available.
- The tool does not yet work for multi-label classification. It expects a single true
  label.
- To run this report, you need to have both target and prediction columns available.
- Uses report options to customize metrics calculation
- Test presets available for classification tasks
- You can explore and compare text datasets.
- If you don’t specify descriptors, the Preset will use default statistics.
- You can pass one or two datasets. Evidently will compute descriptors both for the
  current production data and the reference data.
- You can monitor and analyze the performance of a recommender system.
- Ensure to set up OAuth2 credentials correctly.
- API may have rate limits.
- Requires setup of connected app in Evidently
- API is available with versions 0.6.7 or lower
- By default, Evidently Cloud does not store raw data or model inferences.
- Ensure to set the API key as an environment variable for security.
- Data security by design. By default, Evidently Cloud does not store raw data or
  model inferences.
- API requires an access token to connect to Evidently Cloud.
- You must provide a valid access token to connect to the Evidently Cloud workspace.
- Evaluation results can be exported in various formats.
- Using LLMs may incur costs.
- To connect to Evidently Cloud, pass your API key to connect.
- Evaluation metrics include text length, sentiment, and semantic similarity.
- Can use LLMs for complex evaluations.
- ML monitoring is available starting from Evidently version 0.4.0.
- Uses Evidently for monitoring ML models.
- You will need an OpenAI API key to use for LLM evaluator.
- Each project can include multiple panels that appear on the monitoring dashboard.
- Uses manual labels for evaluating the LLM's responses
- The evaluator can be refined iteratively
- Requires an OpenAI API key for LLM evaluator
- Requires an Evidently Cloud account
- Requires an OpenAI API key for LLM evaluations.
- Connect to Evidently Cloud with your API token.
- Use the LLM app to score inputs and add to a DataFrame.
- Evaluate judges after implementation.
- Evidently is available as a Python package.
- All new responses must be between 80 and 200 symbols.
- All new responses should give the same answer without contradictions.
- All new responses should match the style of the reference.
- You can view data, edit dashboards, upload CSVs and run no-code evaluations without
  the token.
- You must create a Workspace to store your data.
- The Monitoring UI service will interface with the filesystem where the snapshots
  are stored.
- API requires authentication
- In self-hosted open-source installation, you do not need to pass the Team ID.
- After creating a Project, you can click to open a Dashboard. Since there's no data
  yet, it will be empty.
- This feature is in active development, expect more detailed documentation soon.
- Tracing is optional on the Evidently Platform.
- You can delete a Project, which will delete all the snapshots stored inside it.
- The API is available with versions 0.6.7 or lower.
- For Evidently Cloud, set https://app.evidently.cloud/
- It's best always to use column mapping. Without it, Evidently will apply its own
  heuristics to map the input data automatically.
- Uses default mapping strategy if column_mapping is not specified
- Mapping the 'Datetime' and 'ID' columns excludes them from analyses like data drift
  detection
- Evidently works with datasets in Pandas DataFrame format only.
- Datasets should fit into memory to be processed correctly.
- Make sure to run as_dataframe on a sample from your dataset to control for its size.
- At the moment Evidently works with datasets in Pandas DataFrame format only.
- The target column with the interaction result or relevance label can contain either
  a binary label or any true labels or scores.
- 'You can set up your Test conditions in two ways: Automatic or Manual.'
- You can mix both approaches in the same Test Suite.
- For bigger datasets that do not fit into memory use sampling before conversion.
- 'You are looking at the old Evidently documentation: this API is available with
  versions 0.6.7 or lower.'
- No authentication required for accessing reports and tests.
- Last updated 5 months ago
- A single upload to Evidently Cloud should not exceed 50MB (Free plan) or 500MB (Pro
  plan).
- Text Evals require a bit more setup. You must choose which column to evaluate and
  how.
- You can include evals for multiple columns at once.
- You can mix both approaches in the same Test Suite, where some Tests run with defaults
  and others with custom conditions.
- Descriptors range from regular expressions and text statistics to ML- and LLM-based
  checks.
- Batch monitoring jobs are best for batch ML pipelines, regression testing, and near
  real-time ML systems that don’t need instant evaluations.
- Near real-time monitoring is for scenarios where you need frequent insights into
  your AI system's performance.
- You can export results from Evidently Reports or Test Suites in multiple formats.
- The collector service can simultaneously run multiple collectors that compute and
  save snapshots to different Workspaces or Projects.
- You can run distributed computation using Spark if you work with large datasets.
- Scheduled evaluations are in beta. Detailed docs are coming soon.
- Built-in alerting is a Pro feature available in the Evidently Cloud and Enterprise.
- Ensure that the correct OAuth scopes are granted for accessing evaluations.
- Dashboard templates is a Pro feature available in the Evidently Cloud and Enterprise.
- Multiple tabs is a Pro feature available in the Evidently Cloud.
- Scheduled evaluations are in beta on Evidently Cloud.
- Evidently lets you backdate snapshots, so you can log them retroactively.
- You can also delete and re-upload snapshots if necessary.
- Default for text data when <= 1000 objects.
- 'Default threshold: 0.95 (95th percentile)'
- Default for text data when > 1000 objects.
- 'Default threshold: 0.55'
- Default distance metric is Euclidean distance
- Threshold for drift detection is set to 0.2
- You will incur costs when running this eval.
- You cannot use context and context_column simultaneously.
- Default JSON and Python dictionary output includes the values of Metrics and Test
  results but does not include visualizations.
- Raw data is not available on Spark.
- By default, Evidently widgets use the red-grey color scheme.
- Tests the number of rows against the reference or a defined condition.
- Tests the number of columns against the reference or a defined condition.
- Tests the number of columns with all constant values against reference or a defined
  condition.
- Tests the number of empty rows against reference or a defined condition.
- Tests the number of empty columns against reference or a defined condition.
- Tests the number of duplicate rows against reference or a defined condition.
- Tests the number of duplicate columns against reference or a defined condition.
- Tests if there are conflicts in the target.
- Tests if there are conflicts in the prediction.
- Tests the types of all columns against the reference.
- Tests if all the values in a given column are constant.
- Tests if all the values in a given column are unique.
- Tests the number of unique values in a given column against reference or a defined
  condition.
- Tests the share of unique values in a given column against reference or a defined
  condition.
- Tests the share of the most common value in a given column against reference or
  a defined condition.
- Tests the number of values in a column that do not match a defined regular expression,
  against reference or a defined condition.
- Tests the number of missing values in the dataset against the reference or a defined
  condition.
- Tests the share of missing values in the dataset against the reference or a defined
  condition.
- Tests the number of columns that contain missing values in the dataset against the
  reference or a defined condition.
- Tests the share of columns that contain missing values in the dataset against the
  reference or a defined condition.
- Tests the number of rows that contain missing values against the reference or a
  defined condition.
- Tests the share of rows that contain missing values against the reference or a defined
  condition.
- Tests the number of differently encoded missing values in the dataset against the
  reference or a defined condition.
- Tests the number of missing values in a given column against the reference or a
  defined condition.
- Tests the share of missing values in a given column against the reference or a defined
  condition.
- Tests the number of differently encoded missing values in the column against reference
  or a defined condition.
- Tests the strength of correlation between the target and prediction.
- Tests the strongest correlation between a pair of features, against reference or
  a defined condition.
- Tests if any of the features is highly correlated with the target.
- Tests if any of the features is highly correlated with the prediction.
- Tests the number of correlation violations.
- Default threshold for drift detection is 0.2
- Default bootstrap is True if <= 1000 objects, False if > 1000 objects
- Default quantile_probability is 0.95
- Default pca_components is None
- Includes prompt and context parameters for LLM evaluation.
- Evidently supports using HuggingFace models.
- Metrics range from 0 to 1, where higher values indicate better performance.
- Cosine distance is used for measuring diversity and unexpectedness.
- Uses OAuth2 with refresh token
- Collection of colors for data visualization
- Uses default Data Drift Detection algorithm.
- You can modify the drift detection logic and parameters.
- Some objects like Contact may return nulls in deeply nested fields
- Configuration for Data Drift calculations.
- Configuration for Quality Metrics.
- Ensure proper OAuth2 setup is completed before accessing the API.
- You can generate the visual reports in Jupyter notebooks on MAC OS and Linux.
- You can also generate visual reports in Google Collaboratory.
- You can use Evidently to calculate metrics, and MLflow Tracking to log and view
  the results.
- Evidently calculates a rich set of metrics and statistical tests.
- You can generate the calculation output in a Python dictionary format.
- Predefined Test Presets for Test Suite
- Starting from Evidently 0.1.59, the old API that uses Dashboards and json profiles
  was deprecated.
- In Evidently 0.3.0, the old API was removed from the code base.
- Requires setup of connected app in api
- You can self-host an Evidently ML Monitoring dashboard to track the model performance
  over time.
- Telemetry is collected only when using Evidently Monitoring UI.
- No personal data is collected.
- Telemetry helps prioritize development of new features and tests performance in
  popular environments.
- Tests the number of values in a column that do not match a defined regular expression.
- Evidently is tested to work in Jupyter notebook on MAC OS and Linux and Google Colab.
- Evidently is available as a PyPI package.
- In a Jupyter notebook environment, you can show the plots as a cell output simply
  by using `Live(report="notebook")`.
- You can access the experiments results using the Python DVC api.
- Telemetry is collected in Evidently starting from version 0.4.0
- By default, telemetry is enabled.
- 'Defaults for Missing Values: The metrics that calculate the number or share of
  missing values detect four types of the values by default: Pandas nulls (None, NAN,
  etc.), "" (empty string), Numpy "-inf" value, Numpy "inf" value.'
- Uses standard parameters for tests.
errors:
- 'INVALID_REQUEST: Check your request parameters'
- 'UNAUTHORIZED: Invalid credentials or token'
- 'NOT_FOUND: The requested resource was not found'
- '401 Unauthorized: Check credentials or token expiration.'
- '404 Not Found: Verify endpoint URL.'
- '401 Unauthorized: Recheck API token validity.'
- '401 Unauthorized: Check your API token'
- '403 Forbidden: Ensure you have the right permissions'
- '404 Not Found: Verify the endpoint path'
- '400 Bad Request: Verify the request parameters.'
- '404 Not Found: Ensure the endpoint is correct.'
- '401 Unauthorized: Check if the token is valid.'
- '429 Too Many Requests: Reduce the frequency of requests.'
- '401 Unauthorized: Recheck API key or token expiration'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '401 Unauthorized: Check your API token.'
- '400 Bad Request: Ensure all required fields are provided in the request.'
- 'Invalid API token: Recheck your API token.'
- 'Project not found: Ensure the project ID is correct.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check if the access token is valid.'
- '401 Unauthorized: Check your credentials.'
- '403 Forbidden: You do not have permission to access this resource.'
- no module named 'evidently.dashboard'
- 'modulenotfounderror: no module named ''evidently.dashboard'''
- '401 Unauthorized: Recheck API key validity'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - API key
  - Project_id
  - Dataset_name
  - NamedCredential
  - Test
  - TestPreset
  - BaseGenerator
client:
  base_url: https://evidentlyai.com
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
