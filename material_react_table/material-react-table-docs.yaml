resources:
- name: rowCount
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: rowNumberDisplayMode
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: rowPinningDisplayMode
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: selectAllMode
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: table_options
  endpoint:
    path: /docs/api/table-options
    method: GET
- name: table_instance
  endpoint:
    path: /docs/api/table-instance-apis
    method: GET
    data_selector: methods
    params: {}
- name: table_instance_api
  endpoint:
    path: /api/table-instance-apis
    method: GET
    data_selector: records
- name: rowCount
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: rowNumberDisplayMode
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: rowPinningDisplayMode
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: selectAllMode
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: sortingFns
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: state
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: table_options
  endpoint:
    path: /docs/api/table-options
    method: GET
- name: tableInstanceAPI
  endpoint:
    path: /api/table-instance-apis
    method: GET
- name: example_data
  endpoint:
    path: /docs/examples/basic
    method: GET
    data_selector: data
    params: {}
- name: example
  endpoint:
    path: /docs/examples/minimal
    method: GET
    data_selector: table
    params: {}
- name: example_data
  endpoint:
    path: /docs/examples/basic
    method: GET
    data_selector: data
    params: {}
- name: employee
  endpoint:
    path: /api/employees
    method: GET
    data_selector: data
    params: {}
- name: example
  endpoint:
    path: /docs/examples/minimal
    method: GET
    data_selector: rows
- name: employee
  endpoint:
    path: /api/employee
    method: GET
    data_selector: data
    params: {}
- name: custom_headless_example
  endpoint:
    path: /docs/examples/custom-headless
    method: GET
    data_selector: rows
    params: {}
- name: export_csv
  endpoint:
    path: /docs/examples/export-csv
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: example_data
  endpoint:
    path: /docs/examples/expanding-tree
    method: GET
    data_selector: data
    params: {}
- name: custom_headless_example
  endpoint:
    path: /docs/examples/custom-headless
    method: GET
- name: filter_variants
  endpoint:
    path: /docs/examples/filter-variants
    method: GET
    data_selector: records
- name: column_ordering_example
  endpoint:
    path: /docs/examples/column-ordering
    method: GET
- name: sticky_header_example
  endpoint:
    path: /docs/examples/sticky-header
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/data
    method: GET
    data_selector: data
    params:
      incremental: start
- name: example_data
  endpoint:
    path: /docs/examples/expanding-tree
    method: GET
    data_selector: data
    params: {}
- name: filter_variants
  endpoint:
    path: /docs/examples/filter-variants
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /api/data
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Example
  endpoint:
    path: /example
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: data_columns
  endpoint:
    path: /docs/guides/data-columns
    method: GET
    data_selector: columns
    params: {}
- name: data_columns
  endpoint:
    path: /docs/guides/data-columns
    method: GET
    data_selector: columns
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: display_columns
  endpoint:
    path: /docs/guides/display-columns
    method: GET
    data_selector: columns
    params: {}
- name: display_columns
  endpoint:
    path: /docs/guides/display-columns
    method: GET
    data_selector: columns
    params: {}
- name: Row Selection
  endpoint:
    path: /docs/guides/row-selection
    method: GET
- name: Editing
  endpoint:
    path: /docs/guides/editing
    method: GET
- name: Column Filtering
  endpoint:
    path: /docs/guides/column-filtering
    method: GET
- name: Global Filtering
  endpoint:
    path: /docs/guides/global-filtering
    method: GET
- name: Column Hiding
  endpoint:
    path: /docs/guides/column-hiding
    method: GET
- name: Detail Panel
  endpoint:
    path: /docs/guides/detail-panel
    method: GET
- name: Expanding Sub-Rows
  endpoint:
    path: /docs/guides/expanding-sub-rows
    method: GET
- name: Column Grouping
  endpoint:
    path: /docs/guides/column-grouping
    method: GET
- name: Aggregation
  endpoint:
    path: /docs/guides/aggregation
    method: GET
- name: Sticky Header/Footer
  endpoint:
    path: /docs/guides/sticky-header
    method: GET
- name: Column Pinning
  endpoint:
    path: /docs/guides/column-pinning
    method: GET
- name: Row Pinning
  endpoint:
    path: /docs/guides/row-pinning
    method: GET
- name: Sorting
  endpoint:
    path: /docs/guides/sorting
    method: GET
- name: Row Ordering and Dragging
  endpoint:
    path: /docs/guides/row-ordering-dnd
    method: GET
- name: Column Ordering and Dragging
  endpoint:
    path: /docs/guides/column-ordering-dnd
    method: GET
- name: Row Numbers
  endpoint:
    path: /docs/guides/row-numbers
    method: GET
- name: Column Actions
  endpoint:
    path: /docs/guides/column-actions
    method: GET
- name: Cell Actions
  endpoint:
    path: /docs/guides/cell-actions
    method: GET
- name: Row Actions
  endpoint:
    path: /docs/guides/row-actions
    method: GET
- name: Click to Copy
  endpoint:
    path: /docs/guides/click-to-copy
    method: GET
- name: table_event_listeners
  endpoint:
    path: /docs/guides/table-event-listeners
    method: GET
- name: table
  endpoint:
    path: /docs/guides/customize-components
    method: GET
    data_selector: components
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: localization
  endpoint:
    path: /docs/guides/localization
    method: GET
    data_selector: ''
    params: {}
- name: custom_icons
  endpoint:
    path: /docs/guides/customize-icons
    method: GET
    data_selector: icons
    params: {}
- name: custom_toolbar
  endpoint:
    path: /docs/guides/toolbar-customization
    method: GET
    data_selector: table
    params: {}
- name: localization
  endpoint:
    path: /docs/guides/localization
    method: GET
    data_selector: localization
- name: defaultColumn
  endpoint:
    path: /docs/guides/column-size#default-column
    method: GET
    data_selector: defaultColumn
    params: {}
- name: custom_toolbar
  endpoint:
    path: /docs/guides/toolbar-customization
    method: GET
- name: column_size
  endpoint:
    path: /docs/guides/column-size
    method: GET
    data_selector: defaultColumn
- name: column_resizing_options
  endpoint:
    path: /docs/guides/column-resizing
    method: GET
    data_selector: options
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: async_loading
  endpoint:
    path: /docs/guides/async-loading
    method: GET
    data_selector: records
    params: {}
- name: column_resizing
  endpoint:
    path: /docs/guides/column-resizing
    method: GET
- name: user
  endpoint:
    path: /api/data
    method: GET
    params:
      start: pagination.pageIndex * pagination.pageSize
      size: pagination.pageSize
      filters: columnFilters ?? []
      globalFilter: globalFilter ?? ''
      sorting: sorting ?? []
- name: pagination
  endpoint:
    path: /api/data
    method: GET
    data_selector: data
    params:
      start: pagination.pageIndex * pagination.pageSize
      size: pagination.pageSize
      filters: columnFilters
      globalFilter: globalFilter
      sorting: sorting
- name: density_toggle
  endpoint:
    path: /docs/guides/density-toggle
    method: GET
    data_selector: relevant-table-options
    params: {}
- name: user
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: full_screen_toggle
  endpoint:
    path: /docs/guides/full-screen-toggle
    method: GET
    data_selector: relevant-table-options
    params: {}
- name: row_virtualization
  endpoint:
    path: /guides/virtualization#enable-row-virtualization
    method: GET
    data_selector: example
    params:
      enablePagination: false
      enableRowVirtualization: true
- name: column_virtualization
  endpoint:
    path: /guides/virtualization#enable-column-virtualization
    method: GET
    data_selector: example
    params:
      enableColumnVirtualization: true
- name: loading_ui
  endpoint:
    path: /docs/guides/async-loading
    method: GET
    data_selector: loading_ui_examples
- name: row_selection
  endpoint:
    path: /docs/guides/row-selection
    method: GET
    data_selector: rowSelection
- name: user
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: person
  endpoint:
    path: /data
    method: GET
    data_selector: data
    params: {}
- name: data
  endpoint:
    path: /data
    method: GET
    data_selector: rows
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: example
  endpoint:
    path: /docs/guides/column-filtering
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: person
  endpoint:
    path: /data/person
    method: GET
    data_selector: records
- name: global_filter
  endpoint:
    path: /docs/guides/global-filtering
    method: GET
    data_selector: rows
    params: {}
- name: person
  endpoint:
    path: /api/person
    method: GET
    data_selector: data
- name: column_hiding
  endpoint:
    path: /guides/column-hiding
    method: GET
    data_selector: columnHidingOptions
- name: global_filter
  endpoint:
    path: /docs/guides/global-filtering
    method: GET
    data_selector: filter
    params: {}
- name: search_text_field
  endpoint:
    path: /docs/guides/global-filtering
    method: GET
    data_selector: search
    params: {}
- name: users
  endpoint:
    path: /api/data
    method: GET
    data_selector: data
    params:
      filters: columnFilters
      globalFilter: globalFilter
      pageIndex: pagination.pageIndex
      pageSize: pagination.pageSize
      sorting: sorting
- name: column_hiding
  endpoint:
    path: /docs/guides/column-hiding
    method: GET
    data_selector: column_hiding
- name: expanding_sub_rows
  endpoint:
    path: /docs/guides/expanding-sub-rows
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/treedata
    method: GET
    params:
      pagination: pagination
      sorting: sorting
      expandedRowIds: expandedRowIds
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: detail_panel
  endpoint:
    path: /docs/guides/detail-panel
    method: GET
- name: example
  endpoint:
    params:
      pagination:
        pageSize: 20
- name: user
  endpoint:
    path: /api/data
    method: GET
    data_selector: data
    params:
      start: pagination.pageIndex * pagination.pageSize
      size: pagination.pageSize
      filters: JSON.stringify(columnFilters ?? [])
      globalFilter: globalFilter ?? ''
      sorting: JSON.stringify(sorting ?? [])
- name: user_detail
  endpoint:
    path: /api/moredata/{phoneNumber}
    method: GET
    data_selector: data
    params: {}
- name: salary
  endpoint:
    aggregationFn:
    - count
    - mean
    - median
    - min
    - max
- name: expanding_sub_rows
  endpoint:
    path: /docs/guides/expanding-sub-rows
    method: GET
    data_selector: records
- name: sticky_header
  endpoint:
    path: /docs/guides/sticky-header
    method: GET
    data_selector: relevantTableOptions
    params: {}
- name: employees
  endpoint:
    path: /employees
    method: GET
    data_selector: records
- name: column_pinning
  endpoint:
    path: /docs/guides/column-pinning
    method: GET
    data_selector: columnPinning
    params: {}
- name: users
  endpoint:
    path: /api/treedata
    method: GET
    data_selector: data
    params:
      start: pagination.pageIndex * pagination.pageSize
      size: pagination.pageSize
      sorting: JSON.stringify(sorting ?? [])
      expandedRowIds: 'expandedRowIds === ''all'' ? ''all'' : JSON.stringify(expandedRowIds
        ?? [])'
- name: table
  endpoint:
    path: /useMaterialReactTable
    method: GET
    data_selector: table
- name: example
  endpoint:
    path: /docs/guides/row-pinning
    method: GET
- name: example
  endpoint:
    params:
      pagination:
        pageSize: 20
- name: sorting
  endpoint:
    path: /docs/guides/sorting
    method: GET
    data_selector: sorting
    params: {}
- name: users
  endpoint:
    path: /api/data
    method: GET
    data_selector: data
    params:
      start: pagination.pageIndex * pagination.pageSize
      size: pagination.pageSize
      filters: JSON.stringify(columnFilters ?? [])
      globalFilter: globalFilter ?? ''
      sorting: JSON.stringify(sorting ?? [])
- name: Salary
  endpoint:
    aggregationFn:
    - count
    - mean
    - median
    - min
    - max
- name: row_ordering
  endpoint:
    path: /docs/guides/row-ordering-dnd
    method: GET
    data_selector: rows
    params: {}
- name: sticky_header_footer
  endpoint:
    path: /docs/guides/sticky-header
    method: GET
    data_selector: sticky-header-and-footer-feature-guide
    params: {}
- name: column_pinning
  endpoint:
    path: /docs/guides/column-pinning
    method: GET
    data_selector: columnPinning
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: row_pinning
  endpoint:
    path: /docs/guides/row-pinning
    method: GET
    data_selector: rowPinning
    params: {}
- name: Example
  endpoint:
    params: {}
- name: column_ordering
  endpoint:
    path: /guides/column-ordering-dnd
    method: GET
    data_selector: columnOrder
    params: {}
- name: sorting
  endpoint:
    path: /docs/guides/sorting
    method: GET
    data_selector: sortingOptions
    params: {}
- name: row_numbers
  endpoint:
    path: /docs/guides/row-numbers
    method: GET
    data_selector: records
- name: user
  endpoint:
    path: /api/data
    method: GET
    data_selector: data
    params:
      start: pagination.pageIndex * pagination.pageSize
      size: pagination.pageSize
      filters: columnFilters
      globalFilter: globalFilter
      sorting: sorting
- name: column_actions
  endpoint:
    path: /docs/guides/column-actions
    method: GET
    data_selector: column_actions_data
    params: {}
- name: row_ordering
  endpoint:
    path: /docs/guides/row-ordering-dnd
    method: GET
    data_selector: rows
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cell_actions
  endpoint:
    path: /docs/guides/cell-actions
    method: GET
    data_selector: cell_actions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: column_ordering
  endpoint:
    path: /docs/guides/column-ordering-dnd
    method: GET
    data_selector: state
    params: {}
- name: row_numbers_static_mode
  endpoint:
    path: /docs/guides/row-numbers#enable-row-numbers-(static-mode)
    method: GET
    data_selector: ''
    params: {}
- name: row_numbers_original_mode
  endpoint:
    path: /docs/guides/row-numbers#enable-row-numbers-(original-mode)
    method: GET
    data_selector: ''
    params: {}
- name: column_actions
  endpoint:
    path: /docs/guides/column-actions
    method: GET
    data_selector: tableOptions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: table_options
  endpoint:
    path: /docs/guides/click-to-copy
    method: GET
    data_selector: options
    params: {}
- name: column_options
  endpoint:
    path: /docs/api/column-options
    method: GET
    data_selector: columnOptions
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cell_actions
  endpoint:
    path: /docs/guides/cell-actions
    method: GET
    data_selector: actions
    params: {}
- name: row_actions
  endpoint:
    path: /docs/guides/row-actions
    method: GET
    data_selector: rows
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: click_to_copy
  endpoint:
    path: /docs/guides/click-to-copy
    method: GET
    data_selector: docs
    params: {}
- name: column_options
  endpoint:
    path: /docs/api/column-options
    method: GET
    data_selector: columnOptions
    params: {}
- name: row_instance_apis
  endpoint:
    path: /docs/api/row-instance-apis
    method: GET
    data_selector: rowInstanceAPI
    params: {}
- name: state_options
  endpoint:
    path: /docs/api/state-options
    method: GET
    data_selector: stateOptions
    params: {}
- name: column_instance_apis
  endpoint:
    path: /docs/api/column-instance-apis
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: row_instance_APIs
  endpoint:
    path: /docs/api/row-instance-apis
    method: GET
    data_selector: rowInstanceAPI
    params: {}
- name: cell_instance_apis
  endpoint:
    path: /docs/api/cell-instance-apis
    method: GET
    data_selector: records
    params: {}
- name: cell_instance_api
  endpoint:
    path: /docs/api/cell-instance-apis
    method: GET
    data_selector: cellInstances
- name: useMaterialReactTable
  endpoint:
    path: /api/mrt-hooks/useMaterialReactTable
    method: GET
    data_selector: table
    params: {}
- name: useMRT_TableOptions
  endpoint:
    path: /api/mrt-hooks/useMRT_TableOptions
    method: GET
    data_selector: transformedTableOptions
    params: {}
- name: useMRT_TableInstance
  endpoint:
    path: /api/mrt-hooks/useMRT_TableInstance
    method: GET
    data_selector: table
    params: {}
- name: useMRT_Effects
  endpoint:
    path: /api/mrt-hooks/useMRT_Effects
    method: GET
    data_selector: effects
    params: {}
- name: useMRT_Rows
  endpoint:
    path: /api/mrt-hooks/useMRT_Rows
    method: GET
    data_selector: rows
    params: {}
- name: useMRT_ColumnVirtualizer
  endpoint:
    path: /api/mrt-hooks/useMRT_ColumnVirtualizer
    method: GET
    data_selector: columnVirtualizer
    params: {}
- name: useMRT_RowVirtualizer
  endpoint:
    path: /api/mrt-hooks/useMRT_RowVirtualizer
    method: GET
    data_selector: rowVirtualizer
    params: {}
- name: useMaterialReactTable
  endpoint:
    path: /docs/api/mrt-hooks#usematerialreacttable
    method: GET
    data_selector: options
    params: {}
- name: useMRT_TableOptions
  endpoint:
    path: /docs/api/mrt-hooks#usemrt_tableoptions
    method: GET
    data_selector: options
    params: {}
- name: useMRT_TableInstance
  endpoint:
    path: /docs/api/mrt-hooks#usemrt_tableinstance
    method: GET
    data_selector: options
    params: {}
- name: useMRT_Effects
  endpoint:
    path: /docs/api/mrt-hooks#usemrt_effects
    method: GET
    data_selector: effects
    params: {}
- name: useMRT_Rows
  endpoint:
    path: /docs/api/mrt-hooks#usemrt_rows
    method: GET
    data_selector: rows
    params: {}
- name: useMRT_ColumnVirtualizer
  endpoint:
    path: /docs/api/mrt-hooks#usemrt_columnvirtualizer
    method: GET
    data_selector: columnVirtualizer
    params: {}
- name: useMRT_RowVirtualizer
  endpoint:
    path: /docs/api/mrt-hooks#usemrt_rowvirtualizer
    method: GET
    data_selector: rowVirtualizer
    params: {}
- name: export_pdf_example
  endpoint:
    path: /docs/examples/export-pdf
    method: GET
    data_selector: Example
    params: {}
- name: row_dragging_example
  endpoint:
    path: /docs/examples/row-dragging
    method: GET
    data_selector: example
- name: row_ordering_example
  endpoint:
    path: /docs/examples/row-ordering
    method: GET
    data_selector: examples
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: Nice List
  endpoint:
    path: /examples/row-dragging/nice-list
    method: GET
    data_selector: data1
    params: {}
- name: Naughty List
  endpoint:
    path: /examples/row-dragging/naughty-list
    method: GET
    data_selector: data2
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: records
- name: expanding_parsed_tree_example
  endpoint:
    path: /docs/examples/expanding-tree-flat-parse
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: column_grouping_example
  endpoint:
    path: /docs/examples/column-grouping
    method: GET
- name: example
  endpoint:
    path: /docs/examples/customized-grouping
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: records
    params: {}
- name: aggregation_example
  endpoint:
    path: /docs/examples/aggregation-and-grouping
    method: GET
    data_selector: records
- name: Grouped Column Mode
  endpoint:
    path: /docs/examples/column-grouping
    method: GET
    data_selector: records
    params: {}
- name: example
  endpoint:
    path: /docs/examples/customized-grouping
    method: GET
- name: global_filtering
  endpoint:
    path: /docs/guides/global-filtering
    method: GET
- name: column_hiding
  endpoint:
    path: /docs/guides/column-hiding
    method: GET
- name: detail_panel
  endpoint:
    path: /docs/guides/detail-panel
    method: GET
- name: expanding_sub_rows
  endpoint:
    path: /docs/guides/expanding-sub-rows
    method: GET
- name: column_grouping
  endpoint:
    path: /docs/guides/column-grouping
    method: GET
- name: aggregation
  endpoint:
    path: /docs/guides/aggregation
    method: GET
- name: sticky_header
  endpoint:
    path: /docs/guides/sticky-header
    method: GET
- name: column_pinning
  endpoint:
    path: /docs/guides/column-pinning
    method: GET
- name: row_pinning
  endpoint:
    path: /docs/guides/row-pinning
    method: GET
- name: sorting
  endpoint:
    path: /docs/guides/sorting
    method: GET
- name: row_ordering
  endpoint:
    path: /docs/guides/row-ordering-dnd
    method: GET
- name: column_ordering
  endpoint:
    path: /docs/guides/column-ordering-dnd
    method: GET
- name: row_numbers
  endpoint:
    path: /docs/guides/row-numbers
    method: GET
- name: column_actions
  endpoint:
    path: /docs/guides/column-actions
    method: GET
- name: cell_actions
  endpoint:
    path: /docs/guides/cell-actions
    method: GET
- name: row_actions
  endpoint:
    path: /docs/guides/row-actions
    method: GET
- name: click_to_copy
  endpoint:
    path: /docs/guides/click-to-copy
    method: GET
- name: detail_panel
  endpoint:
    path: /docs/examples/detail-panel
    method: GET
    data_selector: rows
- name: chart_detail_panel
  endpoint:
    path: /docs/examples/chart-detail-panel
    method: GET
    data_selector: data
    params: {}
- name: detail_panel_example
  endpoint:
    path: /docs/examples/detail-panel
    method: GET
    data_selector: records
- name: faceted_values_example
  endpoint:
    path: /docs/examples/faceted-values
    method: GET
    data_selector: data
    params: {}
- name: chart_detail_panel
  endpoint:
    path: /docs/examples/chart-detail-panel
    method: GET
- name: faceted_values_example
  endpoint:
    path: /docs/examples/faceted-values
    method: GET
    data_selector: records
- name: filter_switching_example
  endpoint:
    path: /docs/examples/filter-switching
    method: GET
    data_selector: examples
    params: {}
- name: popover_filters_example
  endpoint:
    path: /docs/examples/popover-filters
    method: GET
    data_selector: example
    params: {}
- name: custom_filter_ui_example
  endpoint:
    path: /docs/examples/custom-filter-ui
    method: GET
    data_selector: records
- name: popover_filters_example
  endpoint:
    path: /docs/examples/popover-filters
    method: GET
- name: column_pinning_example
  endpoint:
    path: /docs/examples/column-pinning
    method: GET
    data_selector: records
- name: custom_filter_ui_example
  endpoint:
    path: /docs/examples/custom-filter-ui
    method: GET
    data_selector: data
- name: sticky_row_pinning_example
  endpoint:
    path: /docs/examples/sticky-row-pinning
    method: GET
    data_selector: example_data
- name: column_pinning_example
  endpoint:
    path: /docs/examples/column-pinning
    method: GET
- name: static_row_pinning_example
  endpoint:
    path: /docs/examples/static-row-pinning
    method: GET
    data_selector: records
- name: row_pinning_example
  endpoint:
    path: /examples/sticky-row-pinning
    method: GET
    data_selector: demoData
    params: {}
- name: example
  endpoint:
    path: /docs/examples/static-row-pinning
    method: GET
    data_selector: data
    params: {}
- name: sticky_row_selection
  endpoint:
    path: /docs/examples/sticky-row-selection
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /api/data
    method: GET
    data_selector: data
    params:
      start: pagination.pageIndex * pagination.pageSize
      size: pagination.pageSize
      filters: columnFilters
      globalFilter: globalFilter
      sorting: sorting
- name: users
  endpoint:
    path: /api/data
    method: GET
    data_selector: data
    params:
      start: pagination.pageIndex * pagination.pageSize
      size: pagination.pageSize
      filters: columnFilters
      globalFilter: globalFilter
      sorting: sorting
- name: user
  endpoint:
    path: /api/data
    method: GET
    data_selector: data
    params:
      start: '0'
      size: '10'
      filters: '[]'
      globalFilter: ''
      sorting: '[]'
- name: users
  endpoint:
    path: /api/data
    method: GET
    data_selector: data
    params:
      start: pagination.pageIndex * pagination.pageSize
      size: pagination.pageSize
      filters: JSON.stringify(columnFilters ?? [])
      globalFilter: globalFilter ?? ''
      sorting: JSON.stringify(sorting ?? [])
- name: users
  endpoint:
    path: /api/data
    method: GET
    data_selector: data
    params:
      pageIndex: 0
      pageSize: 5
- name: user_info
  endpoint:
    path: /api/moredata/{phoneNumber}
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/data
    method: GET
    data_selector: data
    params:
      start: pagination.pageIndex * pagination.pageSize
      size: pagination.pageSize
      filters: JSON.stringify(columnFilters ?? [])
      globalFilter: globalFilter ?? ''
      sorting: JSON.stringify(sorting ?? [])
- name: user_info
  endpoint:
    path: /api/moredata/{phoneNumber}
    method: GET
    data_selector: userInfo
- name: users
  endpoint:
    path: /api/treedata
    method: GET
    data_selector: data
    params:
      start: pagination.pageIndex * pagination.pageSize
      size: pagination.pageSize
      sorting: JSON.stringify(sorting ?? [])
      expandedRowIds: 'expandedRowIds === ''all'' ? ''all'' : JSON.stringify(expandedRowIds
        ?? [])'
- name: users
  endpoint:
    path: /api/treedata
    method: GET
    params:
      incremental: pagination
- name: row_virtualization_example
  endpoint:
    path: /docs/examples/row-virtualization
    method: GET
    data_selector: examples
    params: {}
- name: users
  endpoint:
    path: /api/data
    method: GET
    data_selector: data
    params:
      start: pageParam
      size: 25
      filters: columnFilters
      globalFilter: globalFilter
      sorting: sorting
- name: users
  endpoint:
    path: /api/data
    method: GET
    data_selector: data
    params:
      size: '25'
- name: Example
  endpoint:
    path: /docs/guides/column-grouping
    method: GET
- name: example_table
  endpoint:
    path: /example
    method: GET
notes:
- Material React Table was released September 5th, 2024!
- Material React Table has most of the features you would expect from a modern table
  library including Pagination, Sorting, Filtering, Row Selection, Row Expansion,
  Column Resizing, Column Reordering, etc.
- Material React Table also has advanced features that you may not find in other table
  libraries such as Virtualization, Aggregation and Grouping, Advanced Filter UIs,
  Fuzzy Search, Full Editing (CRUD), Column Pinning, Row Pinning, Row Numbers, Click
  to Copy, and more.
- Material React Table is licensed under the MIT License and is free to use in both
  personal and commercial projects.
- Material React Table is free to use in both personal and commercial projects.
- Requires Material UI and Emotion as peer dependencies.
- Only small feature releases and bug fixes are planned for Material React Table V3.
- Work on MRT V4 will be the priority.
- Version 3's main purpose is to be an easy upgrade target for those who are looking
  to upgrade their Material UI packages to V6.
- Material React Table requires Material UI V6 packages as dependencies.
- Material React Table V3 is mostly just a peer dependency bump to Material UI V6.
- Keyboard navigation for table cells in now enabled by default.
- material-react-table requires Material UI V6 packages as dependencies in your project.
- React 18 is required for Material React Table.
- Keyboard navigation improvements are now included by default.
- Almost no other changes.
- Removed deprecated MRT_Virtualizer type in favor of separate MRT_RowVirtualizer
  and MRT_ColumnVirtualizer types.
- Removed deprecated text in favor of the more consistent label type in dropdown/autocomplete/select
  option types.
- Some objects may return nulls in deeply nested fields
- These are just static methods on a table instance that you can use.
- Uses Material React Table for displaying data
- Some rows may not have descriptions
- Some objects like Contact may return nulls in deeply nested fields
- Uses Material React Table for displaying APIs
- Material React Table gives you a lot out of the box, but it's also easy to turn
  off any features that you do not need.
- Every feature has an enable... table option that lets you turn it on or off.
- Material React Table enables client-side sorting, filtering, search, pagination,
  column hiding, and more by default.
- Uses Material UI for styling and components
- Pagination mode is set to 'pages'
- Uses client-side features.
- For server-side logic and remote data, refer to the Remote Data Example.
- For advanced use cases where you want to be in 100% control of your UI components.
- Material React Table does not have a data exporting feature built in.
- Material React Table has built-in support for column drag and drop re-ordering.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Material React Table supports showing rows in a expanding tree structure.
- If your app is still using MRT V1, either Upgrade to MRT V3 or use the V1 Docs.
- Material React Table does not have a data exporting feature built in. However, you
  can easily integrate your own exporting feature, if desired.
- Material React Table allows you to easily make the header and footer sticky while
  scrolling.
- Uses the default modal editing mode.
- Your API response shape will probably be different. Knowing a total row count is
  important though.
- Uses expanding tree structure for rows with potential subRows
- You should only enable row virtualization if you have a large number of rows or
  columns.
- Material React Table not only has filtering built in, but it also has a lot of different
  filter variants.
- This example is written for MRT V3.
- Consider storing fetching logic in a custom hook.
- No TypeScript is required to use Material React Table.
- Uses built-in virtualization features — recommended for large data sets.
- TypeScript is not required to use Material React Table.
- Material React Table can be easier to debug than other data grid libraries.
- See the Column Options API Reference for all column options you can use.
- Data columns are used to display data and are the default columns that are created
  when you create a column with an accessorKey or accessorFn.
- Display columns are used to display non-data elements in a table.
- Display columns do not have any processing features, such as sorting, filtering,
  grouping, etc. enabled on them by default.
- You can add ANY event listener to ANY component in Material React Table.
- Be careful when using onChange, as it can trigger re-renders with every keystroke,
  which can lead to performance issues.
- Material React Table already uses some memoization techniques to improve performance
  for you automatically under the hood.
- Don't use memoMode unless you know what you're doing and have a specific use case
  for it.
- If you use both initialState and state, the state initializer in state table option
  will take precedence and overwrite the same state values in initialState.
- You can pretty much add ANY event listener to ANY component in Material React Table.
- Material React Table tries to get the basics of data grid accessibility right out
  of the box.
- A tabIndex={0} is automatically added to all cells, headers, and footers when enableKeyboardShortcuts
  is enabled to allow for keyboard focus.
- Now in V3, a focus trap is applied to the table when in full screen mode.
- Material React Table already uses some memoization techniques to improve performance
  for you automatically under the hood to improve performance during some events like
  column resizing.
- Persistent state is not a built-in feature of Material React Table, but it is an
  easy feature to implement yourself using the above patterns with the state table
  option and the on[StateName]Change callbacks.
- Material React Table uses Material Icons by default for all of its internal icons.
- Some icons have style props that get applied to them internally.
- Material React Table has full support for localization (i18n).
- Some locales are included by default, but if your language is not yet supported,
  you can still easily add your own custom translations to the localization table
  option.
- To replace a default icon, specify the icon in the icons table option.
- By default, columns will have a minSize of 40, maxSize of 1000, size of 180.
- 'Default column properties are minSize: 40, maxSize: 1000, size: 180.'
- MRT V3 has a built-in column resizing draggable handle feature.
- The default columnResizeMode is 'onChange'.
- Material React Table includes a density toggle button in the top toolbar by default
  that lets you toggle between three different density levels.
- A density toggle is shown by default to let a user change the density to cycle through
  spacious, comfortable, and compact densities.
- The full screen toggle button is enabled by default. You can hide it by setting
  the enableFullScreenToggle table option to false.
- The Loading Overlay UI makes the table container non-interactive while it is showing.
- Client-side pagination is enabled by default.
- To disable pagination, set enablePagination to false.
- Virtualization only becomes necessary when you have more than 50 rows or so at the
  same time with no pagination.
- Do not enable row or column virtualization conditionally.
- In MRT Versions 1.4 and later, the layoutMode table option is automatically set
  to the 'grid' value.
- Client-side pagination is enabled by default in Material React Table.
- If you want to use the Material Pagination component instead, set the paginationDisplayMode
  table option to 'pages'.
- Selection checkboxes can be enabled with the enableRowSelection table option.
- You can enable row selection conditionally per row.
- Uses Material React Table for rendering
- Pagination and sorting are handled manually
- Uses row virtualization for performance when rendering large datasets without pagination.
- Column virtualization is useful for tables with many columns.
- In MRT Versions 1.4 and later, the layoutMode table option is automatically set
  to the 'grid' value when either row or column virtualization is enabled.
- The enableStickyHeader table option is automatically set to true when row virtualization
  is enabled.
- To enable editing, you first need to set the enableEditing table option to true.
- There are five different editDisplayModes to choose from. The default is 'modal'.
- 'Uses CRUD functionality with five editing modes: modal, row, cell, table, and custom.'
- If your app is still using MRT V1, either Upgrade to MRT V3 or use the V1 Docs
- Various subsets of filtering features can be disabled.
- Material React Table has several built-in filter variants for advanced filtering.
- If your app is still using MRT V1, either Upgrade to MRT V3 or use the V1 Docs instead.
- Filtering is enabled by default.
- Client-side filtering is enabled by default.
- Manual filtering can be enabled to control filtering on the server.
- You can customize the position of the global filter (search box) in the top toolbar
  by setting the `positionGlobalFilter` table option to `left` or `right`. It is shown
  on the right by default.
- Filter match highlighting is a new featured enabled by default that will highlight
  text in the table body cells that matches the current search query.
- Column hiding feature is enabled by default and allows users to hide data columns.
- Client-side filtering (and global filtering) is enabled by default.
- Specifying manualFiltering turns off all client-side filtering and assumes that
  the data you pass to <MaterialReactTable /> is already filtered.
- If you don't want to show the expand all button, you can set the enableExpandAll
  table option to false.
- Fetching additional data for detail panels only after expansion can improve performance
- The column hiding feature is enabled by default.
- Uses tree data for expanding sub-rows feature.
- The API response includes a total row count.
- If your app is still using MRT V1, either upgrade to MRT V3 or use the V1 Docs.
- Uses built-in aggregation features for automatic client-side grouping and aggregation.
- Uses lazy loading for detail panels to improve performance.
- This feature is for expanding rows of the same data type.
- The sticky header and footer feature allows you to keep the header and footer of
  the table visible while scrolling through the table.
- If no maxHeight is specified, the table container will default to a 100vh maxHeight
  when enableStickyHeader is enabled.
- Column pinning can simply be enabled by setting the enableColumnPinning table option
  to true.
- Columns can start out pinned in your table by setting the columnPinning states in
  initialState or state.
- Sticky Row Pinning is not currently compatible with row virtualization.
- Enable grouping by setting the enableGrouping table option to true.
- 'Grouped columns can be displayed with different modes: ''reorder'', ''remove'',
  or false.'
- Client-side sorting is enabled by default
- Multi-sorting is enabled by default
- Uses manual pagination — requires handling of pagination state.
- Enabling the sticky header is as simple as setting the enableStickyHeader table
  option to true.
- Enabling the sticky footer is as simple as setting the enableStickyFooter table
  option to true.
- Column pinning can be enabled by setting the enableColumnPinning table option to
  true.
- Columns can start out pinned by setting the columnPinning states in initialState.
- By Default, Material React Table will order the columns in the order they are defined
  in the columns table option.
- If the number of columns and the length of the columnOrder state do not match, MRT
  will automatically re-generate the columnOrder state internally as of v2.10.0.
- Client-side sorting is enabled by default.
- Multi-sorting is also enabled by default.
- Material React Table has an easy to implement row number features.
- There are two row number modes that you can enable.
- Drag and drop features are not limited to just internally within the same table.
- Uses cell actions feature for context menus.
- Material React Table has a built-in drag and drop feature to reorder columns.
- In the default rowNumberDisplayMode (`static`), row numbers are just a static part
  of the table in their own column.
- Alternatively, use the `original` rowNumberDisplayMode to have row numbers linked
  to the original index of the data array.
- Enable click to copy globally by setting the enableClickToCopy table option to true.
- Drop to group by
- A 'Copy' action will be included when the enableClickToCopy option is set to 'context-menu'
  (instead of true) for the table or column.
- An 'Edit' action will be included when the enableEditing option is set to true and
  the editDisplayMode option is set to 'cell'.
- The row actions feature is optional and can be enabled by setting enableRowActions
  to true.
- Using Material React Table V3
- The click to copy feature is built on top of the Material UnstyledButton and CopyButton
  components.
- If your app is still using MRT V1, either upgrade to MRT V3 or use the V1 Docs instead.
- These are NOT props or column options for Material React Table. These are just static
  methods on a row instance that you can use.
- If your app is still using MRT V1, either upgrade to MRT V3 or use the V1 Docs
- Using useMaterialReactTable only exists in V2 and V3
- These are NOT props or column options for Material React Table. These are just static
  methods on a cell instance that you can use.
- Material React Table does not have a data exporting feature built-in. However, you
  can easily integrate your own exporting features.
- Material React Table has built-in support for row drag and drop re-ordering.
- Example written for MRT V3
- Uses inline editing mode for CRUD functionality
- Full CRUD functionality can be easily implemented with Material React Table.
- Full CRUD (Create, Read, Update, Delete) functionality can be easily implemented.
- CRUD functionality can be implemented with Material React Table.
- Grouped Column Mode can be set to 'remove' or 'reorder'.
- Initial state can expand all groups by default.
- Pagination by page size is supported.
- Grouping and Aggregation features are usually hard to implement, but MRT makes it
  easy.
- The Grouping and Aggregation features work hand in hand with the Expanding and Sorting
  features.
- Uses MRT V3.
- Uses multiple types of expanding row features.
- Material React Table supports rendering your own custom filter UI.
- Material React Table has an easy-to-enable column pinning feature.
- Material React Table has the ability to pin rows and keep them in view while scrolling.
- When rows are pinned, they will be pinned statically to either the top or bottom
  of the table.
- Uses Material React Table features like row pinning, pagination, and sticky headers.
- Data is fetched remotely and can be filtered, paginated, and sorted on the server.
- Uses manual pagination, filtering, and sorting.
- Pagination is manual and controlled through state.
- Uses manual pagination and filtering
- Only fetch user info when the detail panel is opened
- Data is cached for a certain period of time to improve performance
- 'getSubRows: (row) => data.filter((r) => r.managerId === row.id) is used to parse
  flat array into tree structure.'
- Virtualization only becomes necessary when you have over 50 rows or so at the same
  time with no pagination or dozens of columns.
- Using a library like @tanstack/react-query makes it easy to implement an infinite
  scrolling table.
- Enabling virtualization is encouraged if the table will render more than 100 rows
  at a time.
- Keyboard navigation for table cells is now enabled by default.
errors:
- Breaking changes with minimum required versions for dependencies.
- You might be able to get away with lower MUI versions for a while, but eventually
  MUI V6 APIs will be used internally by MRT and your project will break.
- '401 Unauthorized: Check if the request is properly authenticated.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Error loading data
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- Throttle API calls or reduce frequency
- Break down filters or add selectivity
- Try out the performance of the fully virtualized example with 10,000 rows and over
  a dozen columns!
- No specific error messages documented.
- Breaking changes may occur if Material UI packages are not updated.
- Breaking changes regarding minimum required versions for dependencies.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: /api/data
  paginator:
    type: page
    page_size_param: size
    default_page_size: 10
source_metadata: null
