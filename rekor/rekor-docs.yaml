resources:
- name: plate
  endpoint:
    path: /api/search/plate
    method: GET
- name: platecandidate
  endpoint:
    path: /api/search/platecandidate
    method: GET
- name: alert
  endpoint:
    path: /api/search/alert
    method: GET
- name: detail_platecandidate
  endpoint:
    path: /api/detail/platecandidate/{group_id}
    method: GET
- name: agents
  endpoint:
    path: /api/agents/
    method: GET
- name: cameras
  endpoint:
    path: /api/cameras/
    method: GET
- name: alert_lists
  endpoint:
    path: /api/alert-lists/
    method: GET
- name: users
  endpoint:
    path: /api/users/
    method: GET
- name: image_agent
  endpoint:
    path: /img/{agent_uid}/{image_uuid}
    method: GET
- name: image
  endpoint:
    path: /img/{image_uuid}.jpg
    method: GET
- name: plate_search
  endpoint:
    path: /api/search/plate
    method: GET
    data_selector: object[]
    params:
      api_key: required
- name: plate_candidate_search
  endpoint:
    path: /api/search/platecandidate
    method: GET
    data_selector: object[]
    params:
      api_key: required
- name: alert_search
  endpoint:
    path: /api/search/alert
    method: GET
    data_selector: object[]
    params:
      api_key: required
- name: plate_candidate_detail
  endpoint:
    path: /api/detail/platecandidate/{group_id}
    method: GET
    data_selector: object
    params:
      api_key: required
- name: agents_list
  endpoint:
    path: /api/agents/
    method: GET
    data_selector: No content
- name: cameras_list
  endpoint:
    path: /api/cameras/
    method: GET
    data_selector: No content
- name: alert_lists
  endpoint:
    path: /api/alert-lists/
    method: GET
    data_selector: No content
- name: users_list
  endpoint:
    path: /api/users/
    method: GET
    data_selector: No content
- name: image_by_agent_and_uuid
  endpoint:
    path: /img/{agent_uid}/{image_uuid}
    method: GET
    data_selector: No content
    params:
      api_key: required
- name: image_by_uuid
  endpoint:
    path: /img/{image_uuid}.jpg
    method: GET
    data_selector: No content
- name: Vehicle Recognition Image API
  endpoint:
    path: /developers/vehicle-recognition-sdk/vehicle-recognition-image-api
    method: GET
- name: Vehicle Recognition Stream API
  endpoint:
    path: /developers/vehicle-recognition-sdk/vehicle-recognition-stream-api
    method: GET
- name: Rekor CarCheck Starter
  endpoint:
    path: /developers/carcheck/create-an-account
    method: POST
    data_selector: account_creation
    params: {}
- name: Rekor CarCheck Plus
  endpoint:
    path: /developers/carcheck/create-an-account
    method: POST
    data_selector: account_creation
    params: {}
- name: Rekor CarCheck Advanced
  endpoint:
    path: /developers/carcheck/create-an-account
    method: POST
    data_selector: account_creation
    params: {}
- name: Rekor CarCheck Enterprise
  endpoint:
    path: /developers/carcheck/create-an-account
    method: POST
    data_selector: account_creation
    params: {}
- name: recognize
  endpoint:
    path: /v3/recognize
    method: POST
    data_selector: results
    params:
      secret_key: any
      country: any
- name: recognize_url
  endpoint:
    path: /v3/recognize_url
    method: POST
    data_selector: results
    params:
      image_url: string
      secret_key: any
      country: any
- name: recognize_bytes
  endpoint:
    path: /v3/recognize_bytes
    method: POST
    data_selector: results
    params:
      secret_key: any
      country: any
- name: config
  endpoint:
    path: /v3/config
    method: GET
    data_selector: results
- name: results
  endpoint:
    path: /api/alpr
    method: GET
    data_selector: results
    params: {}
- name: recognize_vehicle
  endpoint:
    path: /v3/recognize_bytes
    method: POST
    data_selector: results
    params:
      recognize_vehicle: 1
      country: us
      secret_key: sk_DEMODEMODEMODEMODEMODEMO
- name: Vehicle Recognition Image API
  endpoint:
    path: /developers/vehicle-recognition-sdk/vehicle-recognition-image-api
    method: GET
- name: Vehicle Recognition Stream API
  endpoint:
    path: /developers/vehicle-recognition-sdk/vehicle-recognition-stream-api
    method: GET
- name: countries_supported
  endpoint:
    path: /scout/getting-started/countries-and-regions-supported
    method: GET
    data_selector: countries
- name: australia_regions_supported
  endpoint:
    path: /scout/getting-started/countries-and-regions-supported#australia-regions-supported
    method: GET
    data_selector: regions
- name: canada_regions_supported
  endpoint:
    path: /scout/getting-started/countries-and-regions-supported#canada-regions-supported
    method: GET
    data_selector: regions
- name: iran_regions_supported
  endpoint:
    path: /scout/getting-started/countries-and-regions-supported#iran-regions-supported
    method: GET
    data_selector: regions
- name: iraq_regions_supported
  endpoint:
    path: /scout/getting-started/countries-and-regions-supported#iraq-regions-supported
    method: GET
    data_selector: regions
- name: japan_regions_supported
  endpoint:
    path: /scout/getting-started/countries-and-regions-supported#japan-regions-supported
    method: GET
    data_selector: regions
- name: mexico_regions_supported
  endpoint:
    path: /scout/getting-started/countries-and-regions-supported#mexico-regions-supported
    method: GET
    data_selector: regions
- name: russia_regions_supported
  endpoint:
    path: /scout/getting-started/countries-and-regions-supported#russia-regions-supported
    method: GET
    data_selector: regions
- name: south_africa_regions_supported
  endpoint:
    path: /scout/getting-started/countries-and-regions-supported#south-africa-regions-supported
    method: GET
    data_selector: regions
- name: thailand_regions_supported
  endpoint:
    path: /scout/getting-started/countries-and-regions-supported#thailand-regions-supported
    method: GET
    data_selector: regions
- name: united_arab_emirates_regions_supported
  endpoint:
    path: /scout/getting-started/countries-and-regions-supported#united-arab-emirates-regions-supported
    method: GET
    data_selector: regions
- name: united_states_regions_supported
  endpoint:
    path: /scout/getting-started/countries-and-regions-supported#united-states-regions-supported
    method: GET
    data_selector: regions
- name: vehicle_characteristics
  endpoint:
    path: /vehicle/characteristics
    method: GET
    data_selector: characteristics
    params: {}
- name: Basic
  endpoint:
    path: /scout/getting-started/subscriptions-and-licensing/basic
    method: GET
- name: Pro
  endpoint:
    path: /scout/getting-started/subscriptions-and-licensing/pro
    method: GET
- name: Enterprise
  endpoint:
    path: /scout/getting-started/subscriptions-and-licensing/enterprise
    method: GET
- name: cameras
  endpoint:
    path: /scout/dashboard/quick-view-panels/cameras
    method: GET
- name: sites
  endpoint:
    path: /scout/dashboard/quick-view-panels/sites
    method: GET
- name: plates_this_week
  endpoint:
    path: /scout/dashboard/quick-view-panels/plates-this-week
    method: GET
- name: recent_alerts
  endpoint:
    path: /scout/dashboard/quick-view-panels/recent-alerts
    method: GET
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: alert_list
  endpoint:
    path: /api/alerts
    method: GET
    data_selector: alerts
- name: search_plates
  endpoint:
    path: /api/search
    method: GET
    data_selector: results
- name: video_review
  endpoint:
    path: /api/video_review
    method: GET
    data_selector: videos
    params: {}
- name: Interdiction Analysis
  endpoint:
    path: /scout/analytic-reports/interdiction
    method: POST
    data_selector: results
    params: {}
- name: Convoy Analysis
  endpoint:
    path: /scout/analytic-reports/convoy
    method: POST
    data_selector: results
    params: {}
- name: Common Vehicle Analysis
  endpoint:
    path: /scout/analytic-reports/common-vehicle
    method: POST
    data_selector: results
    params: {}
- name: Bulk Search Analysis
  endpoint:
    path: /scout/analytic-reports/bulk-search
    method: POST
    data_selector: results
    params: {}
- name: Vehicle Speed Analysis
  endpoint:
    path: /scout/analytic-reports/vehicle-speed
    method: POST
    data_selector: results
    params: {}
- name: plates
  endpoint:
    path: /advanced_search/plates
    method: POST
- name: plate_candidates
  endpoint:
    path: /advanced_search/plate_candidates
    method: POST
- name: alerts
  endpoint:
    path: /advanced_search/alerts
    method: POST
- name: search_audit
  endpoint:
    path: /search_audit
    method: GET
    data_selector: results
- name: license_plate_data
  endpoint:
    path: /api/v1/license-plates
    method: GET
    data_selector: data
    params: {}
- name: billing_subscriptions
  endpoint:
    path: /api/v1/billing/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: plate_results
  endpoint:
    path: /path/to/plate/results
    method: POST
    data_selector: results
- name: group_results
  endpoint:
    path: /path/to/group/results
    method: POST
    data_selector: results
- name: http_post
  endpoint:
    path: /application-integration/receiving-http-posts
    method: POST
    data_selector: data
    params:
      upload_data: '1'
      upload_address: '[your HTTP server endpoint]'
      websockets_enabled: '0'
      web_server_enabled: '1'
- name: queue_results
  endpoint:
    path: /pulling/from/the/queue
    method: GET
    data_selector: results
    params: {}
- name: alpr_results
  endpoint:
    path: /scout/application-integration/json-plate-results
    method: POST
    data_selector: results
- name: license_plate_image
  endpoint:
    path: /img/[plate_event_uuid].jpg
    method: GET
- name: cropped_license_plate_image
  endpoint:
    path: /crop/[plate_event_uuid]
    method: GET
    params:
      x1: 477
      y1: 258
      x2: 632
      y2: 297
- name: license_plate_data
  endpoint:
    path: /api/license-plates
    method: GET
    data_selector: records
notes:
- Requires setup of connected app in Rekor
- Rekor One Intelligence Engine operates on a powerful flywheel effect.
- Integration of machine learning enhances the capabilities.
- Rekor CarCheck® utilizes artificial intelligence and machine learning to identify
  over 2000 unique vehicle characteristics and capture the complete vehicle signature.
- Upon successful use of the API, the JSON response will provide detailed information
  in a structured format.
- Use base64 string of an actual image in the request.
- Rekor's Vehicle Recognition SDK utilizes artificial intelligence and machine learning
  to identify over 2000 unique vehicle characteristics and capture the complete vehicle
  signature.
- A license key is required to use the Vehicle Recognition SDK.
- Ensure that your system meets the prerequisites for installation.
- Vehicle recognition is CPU/GPU intensive.
- Supports over 2000 unique vehicle characteristics.
- You will be asked for First Name, Last Name, Email Address, Phone Number, Password,
  Company, Company Size, What industry are you in, and How will you use ALPR?
- Requires setup of connected app in Rekor.
- Some objects may return nulls in deeply nested fields.
- Online Licensing is the most traditional and simplest way to associate your paid
  license or subscription with the Scout Agent.
- Legacy (Offline) Licensing is used primarily for On-Premises setups.
- Ensure the URL is correctly formatted and there are no firewall/network issues.
- Essential to configure its various components with meticulous attention to detail
- The accuracy of our LPR system relies heavily on the quality of the input video
  it receives.
- The most important factors affecting LPR accuracy are camera placement and video
  quality.
- Accuracy degrades beyond a 30-degree horizontal or vertical angle.
- Mount the camera at a maximum range of 40 pixels per foot (or 131 pixels per meter)
  to ensure enough pixels on target.
- Keep the angle of capture less than 40 degrees horizontally and vertically.
- Getting the correct image settings takes some trial and error because no two scenes
  are alike.
- Most modern IP cameras provide good image quality using the default/automatic settings.
- Enable API authentication using Company ID can replace the API Key.
- Auto-Update feature refreshes the list every 30 seconds
- Real-time alert lists and the ability to search for specific plates are available.
- The `Video Review` page shows all the videos that have been captured on a selected
  day and camera.
- Some objects like Contact may return nulls in deeply nested fields
- Search parameters include Plate, Plate Candidate, and Alerts.
- Some responses may contain null values in specific fields
- Ensure that the API credentials are correctly configured in the secrets.
- Management center to introduce and configure all involved items of your LPR system.
- The JSON contains a 'camera_id' field corresponding to the camera's .conf file.
- The 'user_data' field can contain arbitrary strings for additional information.
- Must add a valid on-premises license to /etc/openalpr/license.conf
- Restart the Rekor Scout Agent service to allow the settings to take effect.
- You must add a valid on-premise license to /etc/openalpr/license.conf
- JSON Plate results are sent for every frame of video in which a license plate is
  recognized.
- Results may be delayed up to ten seconds after the vehicle has passed, so it is
  important that the application is not sensitive to this delay.
- Every minute, the Rekor Scout® Agent adds one heartbeat message to the queue.
- Data sent from the Agent to the web server is relatively low-bandwidth because it
  contains text metadata describing the license plates.
errors:
- '400: Bad input provided. Adjust the query parameters and try again.'
- '401: Unauthorized. You must either provide a valid api_key or have a logged in
  session.'
- '404: The requested ID was not found'
- '400: Parameter is invalid'
- '401: User not authorized or invalid secret_key'
- '402: Monthly usage limit exceeded'
- '403: Temporary rate-limit exceeded'
- 'Got non-200 response: status_code'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'INVALID_REQUEST: Check request parameters'
- 'UNAUTHORIZED: Verify API keys and tokens'
- 'SERVER_ERROR: Retry the request'
- '401 Unauthorized: Check your API key or access token.'
- '404 Not Found: Verify the endpoint path.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://rekor.ai
  auth:
    type: oauth2
    flow: refresh_token
  headers:
    Accept: application/json
source_metadata: null
