resources:
- name: rooms
  endpoint:
    path: /v1/rooms
    method: GET
    data_selector: data
    params:
      page: 1
      size: 10
- name: boards
  endpoint:
    path: /v1/boards
    method: GET
- name: board_details
  endpoint:
    path: /v1/boards/{boardId}
    method: GET
- name: rooms
  endpoint:
    path: /v1/rooms
    method: GET
    data_selector: data
    params:
      page: '1'
      size: '10'
- name: users
  endpoint:
    path: /v1/users
    method: GET
    data_selector: records
    params:
      page: 1
      size: 50
- name: boards
  endpoint:
    path: /v1/boards
    method: GET
    data_selector: records
    params:
      page: 1
      size: 50
- name: cards
  endpoint:
    path: /v1/cards
    method: GET
    data_selector: records
    params: {}
- name: get_board_details
  endpoint:
    path: /v1/boards/{boardId}
    method: GET
- name: get_all_accessible_boards
  endpoint:
    path: /v1/boards
    method: GET
    params:
      size: 50
- name: users
  endpoint:
    path: /v1/rooms
    method: GET
    params:
      search: string
      sortColumn: string
      sortDirection: string
      page: 1
      size: 50
- name: card
  endpoint:
    path: /v1/cards/{id}
    method: GET
    params: {}
- name: create_card
  endpoint:
    path: /v1/cards
    method: POST
    data_selector: label
- name: create_cards_in_bulk
  endpoint:
    path: /v1/cards/bulk
    method: POST
    data_selector: label
- name: get_asynchronous_result
  endpoint:
    path: /v1/cards/bulk/result/{id}
    method: GET
- name: retrieve_activity_cards
  endpoint:
    path: /v1/cards/activity
    method: GET
- name: get_all_accessible_domains
  endpoint:
    path: /v1/domains
    method: GET
- name: get_domain_by_id
  endpoint:
    path: /v1/domains/{id}
    method: GET
- name: get_all_events
  endpoint:
    path: /v1/events
    method: GET
- name: get_event_by_id
  endpoint:
    path: /v1/events/{id}
    method: GET
- name: update_existing_gauge
  endpoint:
    path: /v1/gauges/{id}
    method: PUT
- name: update_existing_note
  endpoint:
    path: /v1/notes/{id}
    method: PUT
- name: bulk_update_existing_notes
  endpoint:
    path: /v1/notes/bulk
    method: PUT
- name: get_my_profile_information
  endpoint:
    path: /v1/profile
    method: GET
- name: update_my_profile_information
  endpoint:
    path: /v1/profile
    method: PUT
- name: update_my_language
  endpoint:
    path: /v1/profile/language
    method: PUT
- name: QCD Actions
  endpoint:
    path: /v1/actions
    method: GET
    data_selector: actions
    params:
      roomId: string <uuid>
      since: string or null <date>
      page: integer >= 1
      size: integer [ 0 .. 1000 ]
- name: QCD Letters
  endpoint:
    path: /v1/letters
    method: GET
    data_selector: letters
    params:
      page: integer >= 1
      size: integer [ 0 .. 1000 ]
- name: QCD Indicators
  endpoint:
    path: /v1/indicators
    method: GET
    data_selector: indicators
    params:
      year: integer
      period: 'string Enum: "current" "historicals"'
      roomId: string <uuid>
- name: create_card
  endpoint:
    path: /v1/cards
    method: POST
    data_selector: result
    params: {}
- name: create_cards_in_bulk
  endpoint:
    path: /v1/cards/bulk
    method: POST
    data_selector: result
    params: {}
- name: get_asynchronous_result_of_bulk_creation
  endpoint:
    path: /v1/cards/bulk/result/{id}
    method: GET
    data_selector: result
    params: {}
- name: retrieve_activity_cards
  endpoint:
    path: /v1/cards/activity
    method: GET
    data_selector: result
    params: {}
- name: get_all_accessible_domains
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: result
    params: {}
- name: get_domain_by_id
  endpoint:
    path: /v1/domains/{id}
    method: GET
    data_selector: result
    params: {}
- name: get_list_of_all_events
  endpoint:
    path: /v1/events
    method: GET
    data_selector: result
    params: {}
- name: get_event_by_id
  endpoint:
    path: /v1/events/{id}
    method: GET
    data_selector: result
    params: {}
- name: update_existing_gauge
  endpoint:
    path: /v1/gauges/{id}
    method: PUT
    data_selector: result
    params: {}
- name: update_existing_note
  endpoint:
    path: /v1/notes/{id}
    method: PUT
    data_selector: result
    params: {}
- name: bulk_update_existing_notes
  endpoint:
    path: /v1/notes/bulk
    method: PUT
    data_selector: result
    params: {}
- name: get_my_profile_information
  endpoint:
    path: /v1/profile
    method: GET
    data_selector: result
    params: {}
- name: update_my_profile_information
  endpoint:
    path: /v1/profile
    method: PUT
    data_selector: result
    params: {}
- name: update_my_language
  endpoint:
    path: /v1/profile/language
    method: PUT
    data_selector: result
    params: {}
- name: users
  endpoint:
    path: /v1/users
    method: GET
    data_selector: users
    params:
      search: string
      page: integer
      size: integer
- name: room_details
  endpoint:
    path: /v1/rooms/{id}
    method: GET
    data_selector: room
    params:
      id: string
- name: boards
  endpoint:
    path: /v1/rooms/{roomId}/boards
    method: GET
    data_selector: boards
    params:
      roomId: string
      page: integer
      size: integer
- name: QCD actions
  endpoint:
    path: /v1/actions
    method: GET
    params:
      roomId: string <uuid>
      since: string or null <date>
      page: integer >= 1
      size: integer [0 .. 1000]
- name: QCD letters
  endpoint:
    path: /v1/letters
    method: GET
    params:
      page: integer >= 1
      size: integer [0 .. 1000]
- name: QCD indicators
  endpoint:
    path: /v1/indicators
    method: GET
    params:
      page: integer >= 1
      size: integer [0 .. 1000]
      year: integer
      period: 'string Enum: "current" "historicals"'
      roomId: string <uuid>
- name: users
  endpoint:
    path: /v1/users
    method: GET
    data_selector: users
    params: {}
- name: user_by_id
  endpoint:
    path: /v1/users/{id}
    method: GET
    data_selector: user
    params: {}
- name: rooms
  endpoint:
    path: /v1/rooms
    method: GET
    data_selector: rooms
    params: {}
- name: boards
  endpoint:
    path: /v1/boards
    method: GET
    data_selector: boards
    params: {}
- name: users_access_to_board
  endpoint:
    path: /v1/rooms
    method: GET
    params:
      search: ''
      sortColumn: ''
      sortDirection: ''
      page: 1
      size: 50
- name: current_configuration
  endpoint:
    path: /v1/configuration
    method: GET
- name: configuration_for_data_contexts
  endpoint:
    path: /v1/configuration/data-contexts
    method: GET
- name: board_configuration
  endpoint:
    path: /v1/configuration/board/{boardId}
    method: GET
- name: room_configuration
  endpoint:
    path: /v1/configuration/room/{roomId}
    method: GET
- name: element_configuration
  endpoint:
    path: /v1/configuration/element/{elementId}
    method: GET
- name: help_links
  endpoint:
    path: /v1/help-links
    method: GET
    params:
      search: ''
      page: 1
      size: 50
- name: welcome_popup_configuration
  endpoint:
    path: /v1/welcome-popup
    method: GET
- name: orphan_element_data_context
  endpoint:
    path: /v1/elements/{id}
    method: GET
- name: elements_data_context_for_board
  endpoint:
    path: /v1/boards/{boardId}/elements
    method: GET
    params:
      page: 1
      size: 50
- name: users_access_to_board
  endpoint:
    path: /v1/rooms
    method: GET
    params:
      boardId: string <uuid>
      search: string
      sortColumn: string
      sortDirection: string
      page: integer <int32>
      size: integer <int32>
- name: current_configuration
  endpoint:
    path: /v1/configuration
    method: GET
- name: configuration_for_data_contexts
  endpoint:
    path: /v1/configuration/data-contexts
    method: GET
- name: create_configuration_for_data_contexts
  endpoint:
    path: /v1/configuration/data-contexts
    method: POST
- name: get_configuration_for_board
  endpoint:
    path: /v1/configuration/board
    method: GET
- name: get_configuration_for_room
  endpoint:
    path: /v1/configuration/room
    method: GET
- name: get_configuration_for_element
  endpoint:
    path: /v1/configuration/element
    method: GET
- name: get_help_links_list
  endpoint:
    path: /v1/help-links
    method: GET
    params:
      search: string
      page: integer <int32>
      size: integer <int32>
- name: get_welcome_popup_configuration
  endpoint:
    path: /v1/welcome-popup
    method: GET
- name: get_data_context_for_orphan_element
  endpoint:
    path: /v1/elements
    method: GET
    params:
      id: string <uuid>
- name: create_data_context_for_orphan_element
  endpoint:
    path: /v1/elements
    method: POST
    params:
      id: string <uuid>
- name: delete_orphan_data_context
  endpoint:
    path: /v1/elements
    method: DELETE
    params:
      id: string <uuid>
- name: get_all_elements_data_contexts_for_board
  endpoint:
    path: /v1/boards/{boardId}/elements
    method: GET
    params:
      boardId: string <uuid>
      page: integer <int32>
      size: integer <int32>
- name: get_element_data_context_for_board
  endpoint:
    path: /v1/boards/{boardId}/elements/{id}
    method: GET
    params:
      boardId: string <uuid>
      id: string <uuid>
- name: create_data_context_for_board
  endpoint:
    path: /v1/boards/{boardId}/elements/{id}
    method: POST
    params:
      boardId: string <uuid>
      id: string <uuid>
- name: delete_data_context_for_element
  endpoint:
    path: /v1/boards/{boardId}/elements/{id}
    method: DELETE
    params:
      boardId: string <uuid>
      id: string <uuid>
- name: labels
  endpoint:
    path: /v1/labels/{id}
    method: PUT
    data_selector: label
    params: {}
- name: importQCDData
  endpoint:
    path: /v1/qcd/import
    method: POST
    data_selector: data
    params: {}
- name: exportBoardData
  endpoint:
    path: /v1/boards/{boardId}/export
    method: GET
    data_selector: export
    params: {}
- name: exportDCMTasks
  endpoint:
    path: /v1/boards/{boardId}/dcm/export
    method: GET
    data_selector: export
    params: {}
- name: labels
  endpoint:
    path: /v1/labels/{id}
    method: PUT
    data_selector: label
    params: {}
- name: importQCDData
  endpoint:
    path: /import/qcd
    method: POST
    data_selector: data
    params: {}
- name: exportBoardData
  endpoint:
    path: /export/board/{boardId}
    method: GET
    data_selector: data
    params: {}
- name: exportDCMTasks
  endpoint:
    path: /export/dcm/tasks/{boardId}
    method: GET
    data_selector: data
    params: {}
- name: Rooms
  endpoint:
    path: v1/rooms
    method: GET
    data_selector: item
    params:
      page: '1'
      size: '10'
- name: Boards
  endpoint:
    path: v1/boards
    method: GET
    data_selector: item
    params:
      page: '1'
      size: '2'
- name: Cards
  endpoint:
    path: v1/cards
    method: POST
    data_selector: item
- name: Rooms
  endpoint:
    path: /v1/rooms
    method: GET
    params:
      page: '1'
      size: '10'
- name: Boards
  endpoint:
    path: /v1/boards
    method: GET
    params:
      page: '1'
      size: '2'
- name: Activity Cards
  endpoint:
    path: /v1/cards/activity
    method: GET
    params:
      boardId: 81C93F23-231D-9DFF-C260-E3D65AAB69D9
      from: '2022-02-10'
      to: '2022-02-25'
      page: '1'
      size: '3'
- name: cards
  endpoint:
    path: /v1/cards
    method: POST
- name: bulk_cards
  endpoint:
    path: /v1/cards/bulk
    method: POST
- name: card_by_id
  endpoint:
    path: /v1/cards/{{CARD_ID}}
    method: GET
- name: domains
  endpoint:
    path: /v1/domains
    method: GET
- name: events
  endpoint:
    path: /v1/events
    method: GET
- name: qcd_actions
  endpoint:
    path: /v1/qcd/actions
    method: POST
- name: cards
  endpoint:
    path: /v1/cards
    method: GET
- name: domains
  endpoint:
    path: /v1/domains
    method: GET
- name: events
  endpoint:
    path: /v1/events
    method: GET
- name: qcd actions
  endpoint:
    path: /v1/qcd/actions
    method: GET
- name: Letters
  endpoint:
    path: /v1/qcd/extract/letters
    method: GET
    params:
      page: '1'
      size: '10'
      roomId: 77462df5-7193-45b1-a8db-f3c17f265307
- name: Indicators
  endpoint:
    path: /v1/qcd/extract/indicators
    method: GET
    params:
      page: '1'
      size: '1'
      boardId: B0059ED6-B744-6F09-6845-D3FA309D2E02
      year: '2024'
      period: current
- name: Actions
  endpoint:
    path: /v1/qcd/extract/actions
    method: GET
    params:
      page: '1'
      size: '10'
- name: Me
  endpoint:
    path: /v1/me
    method: GET
- name: Users
  endpoint:
    path: /v1/users
    method: GET
    params:
      search: ad
      page: '1'
      size: '30'
- name: Assets
  endpoint:
    path: /v1/assets
    method: POST
- name: Letters
  endpoint:
    path: /v1/qcd/extract/letters
    method: GET
    params:
      page: '1'
      size: '10'
      roomId: 77462df5-7193-45b1-a8db-f3c17f265307
- name: Indicators
  endpoint:
    path: /v1/qcd/extract/indicators
    method: GET
    params:
      page: '1'
      size: '1'
      boardId: B0059ED6-B744-6F09-6845-D3FA309D2E02
      year: '2024'
      period: current
- name: Actions
  endpoint:
    path: /v1/qcd/extract/actions
    method: GET
    params:
      page: '1'
      size: '10'
- name: Me
  endpoint:
    path: /v1/me
    method: GET
- name: Users
  endpoint:
    path: /v1/users
    method: GET
    params:
      search: ad
      page: '1'
      size: '30'
- name: Upload asset
  endpoint:
    path: /v1/assets
    method: POST
- name: Download asset
  endpoint:
    path: /v1/assets/{{LATEST_ASSET_ID}}
    method: GET
- name: Asset by id
  endpoint:
    path: /v1/assets/{{LATEST_ASSET_ID}}
    method: GET
    params:
      json: 'true'
      targetWidth: '500'
      targetHeight: '300'
- name: Update asset
  endpoint:
    path: /v1/assets/{{LATEST_ASSET_ID}}
    method: PUT
- name: Add asset to board
  endpoint:
    path: /v1/boards/BEC2CFFD-25BD-72B7-582F-B7D223F178CD/board-images
    method: POST
notes:
- Responses that may contain large collections are paginated.
- Responses that may contain large collections are paginated using page and size parameters.
- Requires bearer token for authorization
errors:
- '400: Your request parameters didn''t validate'
- '401: Unauthorized access'
- '404: Resource not found'
- '400: The request is not valid'
- '401: Invalid or expired token'
- '404: A resource was not found'
- '500: The iObeya server returned an error'
auth_info:
  mentioned_objects: []
client:
  base_url: '{{FACADE_URL}}'
  headers:
    X-Iobeya-BaseUrl: '{{BASE_URL}}'
  paginator:
    type: page
    page_size_param: size
    default_page_size: 10
source_metadata: null
