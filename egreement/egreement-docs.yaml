resources:
- name: create_agreement
  endpoint:
    path: /v1/accounts/company
    method: POST
    data_selector: agreement
    params: {}
- name: Create Agreement
  endpoint:
    path: /v1/accounts/company
    method: POST
- name: Fetch Agreement
  endpoint:
    path: /v1/accounts/company
    method: POST
- name: List Agreements
  endpoint:
    path: /v1/accounts/company
    method: POST
- name: Download Agreement
  endpoint:
    path: /v1/accounts/company
    method: POST
- name: Delete Agreement
  endpoint:
    path: /v1/accounts/company
    method: POST
- name: Revoke Agreement
  endpoint:
    path: /v1/accounts/company
    method: POST
- name: Sign Agreement
  endpoint:
    path: /v1/accounts/company
    method: POST
- name: Update Agreement
  endpoint:
    path: /v1/accounts/company
    method: POST
- name: Update Party Email Address
  endpoint:
    path: /v1/accounts/company
    method: POST
- name: Fetch Party Notification
  endpoint:
    path: /v1/accounts/company
    method: POST
- name: Update Party Notification Recipients
  endpoint:
    path: /v1/accounts/company
    method: POST
- name: Delete Party Notification
  endpoint:
    path: /v1/accounts/company
    method: POST
- name: Notify Agreement Party
  endpoint:
    path: /v1/accounts/company
    method: POST
    data_selector: Account
    params: {}
- name: Download Agreement Attachment
  endpoint:
    path: /v1/accounts/company
    method: POST
    data_selector: Account
    params: {}
- name: agreement_configuration
  endpoint:
    path: /agreement/configuration
    method: POST
    data_selector: configurations
    params: {}
- name: attachment
  endpoint:
    path: /attachment
    method: POST
    data_selector: attachments
    params: {}
- name: party
  endpoint:
    path: /parties
    method: GET
    data_selector: parties
- name: identificationConfigurations
  endpoint:
    path: /identificationConfigurations
    method: POST
    data_selector: identificationConfigurations
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notifications
- name: recipients
  endpoint:
    path: /recipients
    method: POST
    data_selector: recipients
- name: party
  endpoint:
    path: /api/party
    method: POST
    data_selector: party
    params: {}
- name: notification
  endpoint:
    path: /api/notification
    method: POST
    data_selector: notifications
    params: {}
- name: access_right
  endpoint:
    path: /api/access_right
    method: POST
    data_selector: accessRights
    params: {}
- name: party
  endpoint:
    path: /parties
    method: GET
    data_selector: parties
- name: webflow_link
  endpoint:
    path: /webflow/links
    method: GET
    data_selector: links
- name: create_account
  endpoint:
    path: /v1/accounts/company
    method: POST
    data_selector: account
    params: {}
notes:
- API tokens are created in the web office via the Settings menu.
- The production environment is available 24/7 with the exception of service windows.
- All data sent through the API must be UTF-8 encoded.
- The Egreement Pro API uses the ISO 8601 format for date and time `yyyyMMdd'T'HHmmss'Z'`.
- If the download does not start automatically after making a call to this API, read
  the presigned (short-lived) download URL from the response body and make a separate
  call to that URL to start the download.
- The API does not require authentication.
- All API requests must have a proper Authorization header.
- Currently the API does not limit the number of transactions. Egreement recommends
  avoiding periodically polling the API and instead using a combination of Webhooks
  for callbacks and user driven API requests.
- If your network infrastructure does not allow the incoming network traffic from
  Webhooks you might be forced to use polling instead. In that case Egreement recommends
  keeping the polling interval as long as possible for your needs.
errors:
- '401 Unauthorized: An unauthorized access to the API will result in an HTTP status
  401 response.'
- '400: Invalid JSON object or contract mismatch'
- '422: One or more JSON fields have issues (i.e. missing mandatory fields, invalid
  date format)'
- '0001: When attribute is not set'
- '0002: When empty value is passed in attribute'
- '0003: When incorrect value is passed in the attribute'
- '0004: When invalid value is set in group'
- '0005: When value is not valid Base64'
- '0006: When email is not valid'
- '0010: When empty value is passed in attribute'
- '0011: When request doesn''t match the desired parameters'
- '0019: When date is not in mentioned format'
- '4301: When JSON is incorrect'
- '5006: When company number is incorrect'
- '9999: When some unexpected error occurs'
auth_info:
  mentioned_objects: []
client:
  base_url: /v1/accounts/company
  headers:
    Authorization: Token {`TOKEN`}
    Content-Type: application/json
source_metadata: null
