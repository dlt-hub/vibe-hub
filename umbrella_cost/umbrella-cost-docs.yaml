resources:
- name: users
  endpoint:
    path: /get-user-list
    method: GET
- name: cost_centers
  endpoint:
    path: /get_apiv1userscos-centers
    method: GET
- name: divisions
  endpoint:
    path: /get_apiv1divisions
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: cost_centers
  endpoint:
    path: /cost-centers
    method: GET
- name: roles
  endpoint:
    path: /roles
    method: GET
- name: public_values
  endpoint:
    path: /public-values
    method: GET
    data_selector: values
    params: {}
- name: recommendations
  endpoint:
    path: /recommendations
    method: GET
    data_selector: recommendations
    params: {}
- name: cost_usage
  endpoint:
    path: /api/v1/cost-usage
    method: GET
    data_selector: data
    params: {}
- name: RI Utilization
  endpoint:
    path: /cost-usage/ri-utilization
    method: GET
    data_selector: utilization_data
- name: cost_usage_report
  endpoint:
    path: /api/v1/cost_usage_report
    method: GET
    data_selector: data
    params: {}
- name: AWS services report
  endpoint:
    path: /cost-usage/assets
    method: GET
- name: unutilized_ri
  endpoint:
    path: /api/unutilized-ri
    method: GET
    data_selector: data
    params: {}
- name: Cost & Usage Explorer
  endpoint:
    path: /cost-usage/explorer
    method: GET
    data_selector: reports
- name: Assets
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
- name: sso_integration
  endpoint:
    path: /saml2/idpresponse
    method: POST
    data_selector: response
    params: {}
- name: sso_integration
  endpoint:
    path: /saml2/idpresponse
    method: POST
    data_selector: response
    params: {}
- name: Umbrella SAML
  endpoint:
    path: /saml2/idpresponse
    method: POST
    data_selector: response
- name: saml_integration
  endpoint:
    path: /saml2/idpresponse
    method: POST
    data_selector: response
    params: {}
- name: saml_app
  endpoint:
    path: /saml2/idpresponse
    method: POST
    data_selector: response
    params:
      ACS_URL: https://mypileus.auth.us-east-1.amazoncognito.com/saml2/idpresponse
      Entity_ID: urn:amazon:cognito:sp:us-east-1_Uv6ArNdSK
      Name_ID_format: EMAIL
      Name_ID: Basic information > Primary email
- name: saml_integration
  endpoint:
    path: /enterprise/applications/new/application
    method: POST
    data_selector: application
    params: {}
- name: sso_url
  endpoint:
    path: /saml2/idpresponse
    data_selector: sso_url
    params: {}
- name: entity_id
  endpoint:
    path: /entity_id
    data_selector: entity_id
    params: {}
- name: email_attribute
  endpoint:
    path: /email_attribute
    data_selector: email_address
    params: {}
- name: Processing Currency
  endpoint:
    path: /docs/accounts-currency#Ô∏è-setting-the-processing-currency
    method: GET
    data_selector: data
    params: {}
- name: User-Session Currency
  endpoint:
    path: /docs/accounts-currency#-setting-the-user-session-currency
    method: GET
    data_selector: data
    params: {}
- name: SSO URL
  endpoint:
    path: /saml2/idpresponse
    method: GET
    data_selector: SSO URL
    params: {}
- name: Audience URI
  endpoint:
    path: /entity_id
    method: GET
    data_selector: Entity ID
    params: {}
- name: Email Attribute
  endpoint:
    path: /email_attribute
    method: GET
    data_selector: Email Attribute
    params: {}
- name: Cost Center
  endpoint:
    path: /api/cost_centers
    method: POST
    data_selector: cost_centers
    params: {}
- name: roles
  endpoint:
    path: /api/v1/roles
    method: GET
    data_selector: roles
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
    params: {}
- name: Cost Center
  endpoint:
    path: /cost-center
    method: POST
    data_selector: cost_center_data
    params: {}
- name: Cost & Usage Explorer
  endpoint:
    path: /cost-usage-explorer
    method: GET
    data_selector: cost_usage_data
    params: {}
- name: Cost Centers
  endpoint:
    path: /cost-centers
    method: GET
    data_selector: cost_centers
- name: permissions
  endpoint:
    path: /permissions
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: linked_accounts
  endpoint:
    path: /linked-accounts
    method: GET
    data_selector: accounts
    params: {}
- name: linked_accounts
  endpoint:
    path: /api/v1/linked_accounts
    method: GET
    data_selector: accounts
- name: alerts
  endpoint:
    path: /alerts
    method: GET
- name: budgets
  endpoint:
    path: /budgets
    method: GET
- name: dashboards
  endpoint:
    path: /dashboards
    method: GET
- name: reports
  endpoint:
    path: /reports
    method: GET
- name: alerts
  endpoint:
    path: /api/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: budgets
  endpoint:
    path: /api/budgets
    method: GET
    data_selector: budgets
    params: {}
- name: dashboards
  endpoint:
    path: /api/dashboards
    method: GET
    data_selector: dashboards
    params: {}
- name: reports
  endpoint:
    path: /api/reports
    method: GET
    data_selector: reports
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: cost_centers
  endpoint:
    path: /cost_centers
    method: GET
    data_selector: data
    params: {}
- name: Cost Centers
  endpoint:
    path: /docs/cost-centers
    method: GET
    data_selector: data
    params: {}
- name: Roles
  endpoint:
    path: /docs/roles
    method: GET
    data_selector: data
    params: {}
- name: Users
  endpoint:
    path: /docs/users
    method: GET
    data_selector: data
    params: {}
- name: okta_application
  endpoint:
    path: /applications
    method: POST
    data_selector: application
    params: {}
- name: okta_application
  endpoint:
    path: /applications
    method: POST
    data_selector: applications
    params: {}
- name: saml_settings
  endpoint:
    path: /auth/realms/REALM_ID/broker/okta-saml/endpoint
    method: POST
    data_selector: saml_settings
    params: {}
- name: saml_app
  endpoint:
    path: /auth/realms/REALM_ID/broker/google-saml/endpoint
    method: POST
    data_selector: SAML response
    params: {}
- name: saml_settings
  endpoint:
    path: /auth/realms/REALM_ID/broker/okta-saml/endpoint
    method: POST
    data_selector: SAMLResponse
    params: {}
- name: app
  endpoint:
    path: /auth/realms/REALM_ID/broker/google-saml/endpoint
    method: POST
    data_selector: attributes
    params: {}
- name: Umbrella Cost
  endpoint:
    path: /auth/realms/REALM_ID/broker/onelogin-oidc/endpoint
    method: GET
    data_selector: ''
    params: {}
- name: CUR File
  endpoint:
    path: /services/data/vXX.X/sobjects/CUR
    method: POST
    data_selector: records
- name: CUR File
  endpoint:
    path: /services/data/vXX.X/sobjects/CURFile
    method: GET
- name: linked_accounts
  endpoint:
    path: /accounts/linked
    method: GET
    data_selector: accounts
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: POST
    data_selector: account_details
    params: {}
- name: billing_export
  endpoint:
    path: /path/to/billing/export
    method: POST
    data_selector: data
    params: {}
- name: storage_account
  endpoint:
    path: /storage/account
    method: POST
    data_selector: storage_account_details
- name: container
  endpoint:
    path: /storage/account/container
    method: POST
    data_selector: container_details
- name: export
  endpoint:
    path: /cost/management/export
    method: POST
    data_selector: export_details
- name: billing_export
  endpoint:
    path: /azure/billing/export
    method: POST
    data_selector: exported_data
- name: app_registration
  endpoint:
    path: /azure/app/registration
    method: POST
    data_selector: app_info
- name: App Registration
  endpoint:
    path: /api/app-registrations
    method: POST
    data_selector: registrationDetails
- name: FOCUS Export
  endpoint:
    path: /path/to/FOCUS/export
    method: POST
    data_selector: export_data
    params:
      export_version: '1.0'
      format: CSV
      compression_type: none
- name: logs
  endpoint:
    path: /logs/router
    method: POST
    data_selector: logs
    params:
      filter: resource.type="bigquery_resource" logName="projects/[PROJECT_ID]/logs/cloudaudit.googleapis.com%2Fdata_access"
- name: field_mapping
  endpoint:
    path: /docs/focus-mapping
    method: GET
    data_selector: field_mappings
    params: {}
- name: billing_dataset
  endpoint:
    path: /billing/data
    method: GET
    data_selector: records
- name: service_account
  endpoint:
    path: /iam/serviceAccounts
    method: POST
    data_selector: serviceAccounts
- name: onboarded_account
  endpoint:
    path: /api/v1/onboarded_accounts
    method: GET
    data_selector: data
    params: {}
- name: bigquery_logs
  endpoint:
    path: /v2/projects/[PROJECT_ID]/logs/cloudaudit.googleapis.com%2Fdata_access
    method: GET
    data_selector: logs
    params: {}
- name: multi_cloud_mapping
  endpoint:
    path: /docs/focus-multicloud-mapping
    method: GET
    data_selector: field_mapping
- name: Umbrella Alerts
  endpoint:
    path: /slack/integration/alerts
    method: POST
- name: Umbrella Reports
  endpoint:
    path: /slack/integration/reports
    method: POST
- name: alerts
  endpoint:
    path: /api/alerts
    method: POST
    data_selector: issue
    params: {}
- name: reports
  endpoint:
    path: /api/reports
    method: POST
    data_selector: report
    params: {}
- name: AWS ALL ACCOUNT
  endpoint:
    path: /aws/all-accounts
    method: GET
- name: Azure ALL ACCOUNT
  endpoint:
    path: /azure/all-accounts
    method: GET
- name: GCP ALL ACCOUNT
  endpoint:
    path: /gcp/all-accounts
    method: GET
- name: microsoft_teams_channel
  endpoint:
    path: /integration/microsoft_teams
    method: POST
    data_selector: webhook
    params: {}
- name: ServiceNow Channel
  endpoint:
    path: /api/v1/channels/servicenow
    method: POST
    data_selector: data
    params: {}
- name: AWS
  endpoint:
    path: /accounts/aws
    method: GET
    data_selector: editable_fields
    params: {}
- name: Azure
  endpoint:
    path: /accounts/azure
    method: GET
    data_selector: editable_fields
    params: {}
- name: GCP
  endpoint:
    path: /accounts/gcp
    method: GET
    data_selector: editable_fields
    params: {}
- name: Cost Summary
  endpoint:
    path: /cost-summary
    method: GET
    data_selector: records
- name: Cost Drill Down
  endpoint:
    path: /cost-drill-down
    method: GET
    data_selector: records
- name: Granular Filtering
  endpoint:
    path: /granular-filtering
    method: GET
    data_selector: records
- name: Trend Analysis
  endpoint:
    path: /trend-analysis
    method: GET
    data_selector: records
- name: Cost Allocation
  endpoint:
    path: /cost-allocation
    method: GET
    data_selector: records
- name: Export & Reporting
  endpoint:
    path: /export-reporting
    method: GET
    data_selector: records
- name: Jira Channel
  endpoint:
    path: /api/v1/channels/jira
    method: POST
    data_selector: channel
    params: {}
- name: Jira Data Center
  endpoint:
    path: /api/jira/data-center
    method: POST
    data_selector: issues
    params:
      channel_name: Umbrella Cost Channel Name
      jira_url: The URL to the Jira Data Center instance
      personal_api_token: The Personal API token
- name: Microsoft Teams Channel
  endpoint:
    path: /api/microsoft-teams/channel
    method: POST
- name: ServiceNow Channel
  endpoint:
    path: /api/v1/channels/servicenow
    method: POST
    data_selector: channel
    params: {}
- name: Goals
  endpoint:
    path: /api/goals
    method: GET
    data_selector: goals
- name: events
  endpoint:
    path: /api/v1/users/events
    method: GET
    data_selector: events
    params: {}
- name: cost_summary
  endpoint:
    path: /cost_summary
    method: GET
    data_selector: data
- name: cost_drill_down
  endpoint:
    path: /cost_drill_down
    method: GET
    data_selector: data
- name: trend_analysis
  endpoint:
    path: /trend_analysis
    method: GET
    data_selector: data
- name: cost_allocation
  endpoint:
    path: /cost_allocation
    method: GET
    data_selector: data
- name: goals
  endpoint:
    path: /api/goals
    method: GET
    data_selector: goals
    params: {}
- name: Cost Type
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Region
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Linked Account
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Service
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Cost Center
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Tags
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Quantity Type
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Virtual Tags
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Operation
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Purchase Option
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Family Type
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Instance Type
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Sub Service
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Charge Type
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Filter Group
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Business Mapping
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Usage Type
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Availability Zone
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Resource
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Enrichment Tags
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Normalization Factor
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Platform
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: DB Engine
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Billing Entity
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Legal Entity
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Payment Option
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Invoice ID
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Commitment ARN
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: events
  endpoint:
    path: /api/v1/users/events
    method: GET
    data_selector: events
- name: carbon_emissions
  endpoint:
    path: /api/v1/carbon_emissions
    method: GET
    data_selector: data
    params: {}
- name: Cost Type
  endpoint:
    path: /cost-type
    method: GET
    data_selector: records
    params: {}
- name: Region
  endpoint:
    path: /region
    method: GET
    data_selector: records
    params: {}
- name: Linked Account
  endpoint:
    path: /linked-account
    method: GET
    data_selector: records
    params: {}
- name: Service
  endpoint:
    path: /service
    method: GET
    data_selector: records
    params: {}
- name: Cost Center
  endpoint:
    path: /cost-center
    method: GET
    data_selector: records
    params: {}
- name: Cost & Usage Explorer
  endpoint:
    path: /cost-usage-explorer
    method: GET
    data_selector: data
    params: {}
- name: Cost & Usage Explorer
  endpoint:
    path: /api/cost-usage-explorer
    method: GET
    data_selector: data
    params: {}
- name: Assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: assets
    params: {}
- name: Dashboards
  endpoint:
    path: /dashboards
    method: GET
    data_selector: data
- name: dashboard
  endpoint:
    path: /defining-dashboard-settings
    method: GET
    data_selector: settings
    params: {}
- name: cost_data
  endpoint:
    path: /data/cost
    method: GET
    data_selector: records
- name: Reports
  endpoint:
    path: /reports
    method: GET
    data_selector: records
- name: dashboards
  endpoint:
    path: /cost-usage/dashboards
    method: GET
    data_selector: dashboards
    params: {}
- name: assets_report
  endpoint:
    path: /cost-usage/assets
    method: GET
    data_selector: report_data
- name: clone_dashboard
  endpoint:
    path: /dashboards/clone
    method: POST
    data_selector: dashboard
    params: {}
- name: delete_dashboard
  endpoint:
    path: /dashboards/delete
    method: DELETE
    data_selector: dashboard
    params: {}
- name: assets_report
  endpoint:
    path: /api/assets/report
    method: GET
    data_selector: data
    params: {}
- name: Assets Report
  endpoint:
    path: /CostAndUsage/Assets
    method: GET
- name: assets_report
  endpoint:
    path: /cost-usage/assets
    method: GET
    data_selector: report
    params: {}
- name: App Service Plan
  endpoint:
    path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.web/serverfarms
    method: GET
    data_selector: value
    params: {}
- name: Web App
  endpoint:
    path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.web/sites
    method: GET
    data_selector: value
    params: {}
- name: k8s_cost
  endpoint:
    path: /api/k8s/cost
    method: GET
    data_selector: metrics
    params: {}
- name: GKE Metadata
  endpoint:
    path: /v1/projects/{project_id}/datasets/{dataset_name}
    method: GET
    data_selector: data
    params: {}
- name: cost_allocation
  endpoint:
    path: /docs/views-virtual-tags-and-categories
    method: GET
    data_selector: cost_allocation_methods
    params: {}
- name: Business Mapping Viewpoints
  endpoint:
    path: /business-mapping/viewpoints
    method: GET
    data_selector: viewpoints
- name: business_mapping_split_shared_costs
  endpoint:
    path: /business_mapping/split_shared_costs
    method: GET
    data_selector: costs
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: K8s Workload Rightsizing
  endpoint:
    path: /recommendations/aws/k8s_workload_rightsizing
    method: GET
- name: EKS Extended Support
  endpoint:
    path: /recommendations/aws/eks_extended_support
    method: GET
- name: EC2 Rightsizing
  endpoint:
    path: /recommendations/aws/ec2_rightsizing
    method: GET
- name: EC2 Generation Upgrade
  endpoint:
    path: /recommendations/aws/ec2_generation_upgrade
    method: GET
- name: Idle EC2 instance
  endpoint:
    path: /recommendations/aws/idle_ec2_instance
    method: GET
- name: Compute Savings Plan
  endpoint:
    path: /recommendations/aws/compute_savings_plan
    method: GET
- name: Stopped EC2 instance
  endpoint:
    path: /recommendations/aws/stopped_ec2_instance
    method: GET
- name: EC2 Unnecessary Data Transfer
  endpoint:
    path: /recommendations/aws/ec2_unnecessary_data_transfer
    method: GET
- name: IP Migration v4 to v6
  endpoint:
    path: /recommendations/aws/ip_migration_v4_to_v6
    method: GET
- name: IP Unattached
  endpoint:
    path: /recommendations/aws/ip_unattached
    method: GET
- name: RDS Right-sizing
  endpoint:
    path: /recommendations/aws/rds_right_sizing
    method: GET
- name: RDS Provisioned IOPS
  endpoint:
    path: /recommendations/aws/rds_provisioned_iops
    method: GET
- name: RDS Generation Upgrade
  endpoint:
    path: /recommendations/aws/rds_generation_upgrade
    method: GET
- name: RDS Reserved Instance
  endpoint:
    path: /recommendations/aws/rds_reserved_instance
    method: GET
- name: Idle RDS Instance
  endpoint:
    path: /recommendations/aws/idle_rds_instance
    method: GET
- name: RDS Extended Support
  endpoint:
    path: /recommendations/aws/rds_extended_support
    method: GET
- name: RDS Storage Type Change
  endpoint:
    path: /recommendations/aws/rds_storage_type_change
    method: GET
- name: RDS Aurora I/O Optimized
  endpoint:
    path: /recommendations/aws/rds_aurora_io_optimized
    method: GET
- name: ECS Fargate Right-sizing
  endpoint:
    path: /recommendations/aws/ecs_fargate_right_sizing
    method: GET
- name: CloudWatch Logs Class Change
  endpoint:
    path: /recommendations/aws/cloudwatch_logs_class_change
    method: GET
- name: Dynamo DB Idle
  endpoint:
    path: /recommendations/aws/dynamo_db_idle
    method: GET
- name: Load Balancer Idle
  endpoint:
    path: /recommendations/aws/load_balancer_idle
    method: GET
- name: S3 Inactive
  endpoint:
    path: /recommendations/aws/s3_inactive
    method: GET
- name: S3 Multipart upload
  endpoint:
    path: /recommendations/aws/s3_multipart_upload
    method: GET
- name: S3 Storage Class
  endpoint:
    path: /recommendations/aws/s3_storage_class
    method: GET
- name: S3 Versioning
  endpoint:
    path: /recommendations/aws/s3_versioning
    method: GET
- name: Unattached EBS
  endpoint:
    path: /recommendations/aws/unattached_ebs
    method: GET
- name: EBS Type Change
  endpoint:
    path: /recommendations/aws/ebs_type_change
    method: GET
- name: Outdated EBS Snapshot
  endpoint:
    path: /recommendations/aws/outdated_ebs_snapshot
    method: GET
- name: AMI Orphaned Snapshot
  endpoint:
    path: /recommendations/aws/ami_orphaned_snapshot
    method: GET
- name: AWS Backup Outdated Snapshot
  endpoint:
    path: /recommendations/aws/aws_backup_outdated_snapshot
    method: GET
- name: Redshift Idle
  endpoint:
    path: /recommendations/aws/redshift_idle
    method: GET
- name: Redshift Reserved Instance
  endpoint:
    path: /recommendations/aws/redshift_reserved_instance
    method: GET
- name: Neptune DB Idle
  endpoint:
    path: /recommendations/aws/neptune_db_idle
    method: GET
- name: Elasticsearch Idle
  endpoint:
    path: /recommendations/aws/elasticsearch_idle
    method: GET
- name: OpenSearch Reserved Instance
  endpoint:
    path: /recommendations/aws/opensearch_reserved_instance
    method: GET
- name: OpenSearch Extended Support
  endpoint:
    path: /recommendations/aws/opensearch_extended_support
    method: GET
- name: ElastiCache Reserved Instance
  endpoint:
    path: /recommendations/aws/elasticache_reserved_instance
    method: GET
- name: ElastiCache Idle
  endpoint:
    path: /recommendations/aws/elasticache_idle
    method: GET
- name: DocumentDB Idle
  endpoint:
    path: /recommendations/aws/documentdb_idle
    method: GET
- name: NAT Gateway Idle
  endpoint:
    path: /recommendations/aws/nat_gateway_idle
    method: GET
- name: Kinesis Idle
  endpoint:
    path: /recommendations/aws/kinesis_idle
    method: GET
- name: Duplicate CloudTrail
  endpoint:
    path: /recommendations/aws/duplicate_cloudtrail
    method: GET
- name: Disabled KMS
  endpoint:
    path: /recommendations/aws/disabled_kms
    method: GET
- name: Old KMS
  endpoint:
    path: /recommendations/aws/old_kms
    method: GET
- name: Unused Secrets
  endpoint:
    path: /recommendations/aws/unused_secrets
    method: GET
- name: Bedrock Provisioned Throughput Commitment
  endpoint:
    path: /recommendations/aws/bedrock_provisioned_throughput_commitment
    method: GET
- name: Bedrock Rightsizing
  endpoint:
    path: /recommendations/aws/bedrock_rightsizing
    method: GET
- name: recommendations
  endpoint:
    path: /api/recommendations
    method: GET
    data_selector: recommendations
    params: {}
- name: recommendation_completion
  endpoint:
    path: /recommendations/completion
    method: GET
    data_selector: recommendations
    params: {}
- name: K8s Workload Rightsizing
  endpoint:
    path: /aws/recommendations/k8s-workload-rightsizing
    method: GET
    data_selector: recommendations
    params: {}
- name: EKS Extended Support
  endpoint:
    path: /aws/recommendations/eks-extended-support
    method: GET
    data_selector: recommendations
    params: {}
- name: EC2 Rightsizing
  endpoint:
    path: /aws/recommendations/ec2-rightsizing
    method: GET
    data_selector: recommendations
    params: {}
- name: EC2 Generation Upgrade
  endpoint:
    path: /aws/recommendations/ec2-generation-upgrade
    method: GET
    data_selector: recommendations
    params: {}
- name: Idle EC2 instance
  endpoint:
    path: /aws/recommendations/idle-ec2-instance
    method: GET
    data_selector: recommendations
    params: {}
- name: Compute Savings Plan
  endpoint:
    path: /aws/recommendations/compute-savings-plan
    method: GET
    data_selector: recommendations
    params: {}
- name: Stopped EC2 instance
  endpoint:
    path: /aws/recommendations/stopped-ec2-instance
    method: GET
    data_selector: recommendations
    params: {}
- name: EC2 Unnecessary Data Transfer
  endpoint:
    path: /aws/recommendations/ec2-unnecessary-data-transfer
    method: GET
    data_selector: recommendations
    params: {}
- name: IP Migration v4 to v6
  endpoint:
    path: /aws/recommendations/ip-migration-v4-to-v6
    method: GET
    data_selector: recommendations
    params: {}
- name: IP Unattached
  endpoint:
    path: /aws/recommendations/ip-unattached
    method: GET
    data_selector: recommendations
    params: {}
- name: RDS Right-sizing
  endpoint:
    path: /aws/recommendations/rds-right-sizing
    method: GET
    data_selector: recommendations
    params: {}
- name: RDS Provisioned IOPS
  endpoint:
    path: /aws/recommendations/rds-provisioned-iops
    method: GET
    data_selector: recommendations
    params: {}
- name: RDS Generation Upgrade
  endpoint:
    path: /aws/recommendations/rds-generation-upgrade
    method: GET
    data_selector: recommendations
    params: {}
- name: RDS Reserved Instance
  endpoint:
    path: /aws/recommendations/rds-reserved-instance
    method: GET
    data_selector: recommendations
    params: {}
- name: Idle RDS Instance
  endpoint:
    path: /aws/recommendations/idle-rds-instance
    method: GET
    data_selector: recommendations
    params: {}
- name: RDS Extended Support
  endpoint:
    path: /aws/recommendations/rds-extended-support
    method: GET
    data_selector: recommendations
    params: {}
- name: RDS Storage Type Change
  endpoint:
    path: /aws/recommendations/rds-storage-type-change
    method: GET
    data_selector: recommendations
    params: {}
- name: RDS Aurora I/O Optimized
  endpoint:
    path: /aws/recommendations/rds-aurora-io-optimized
    method: GET
    data_selector: recommendations
    params: {}
- name: ECS Fargate Right-sizing
  endpoint:
    path: /aws/recommendations/ecs-fargate-rightsizing
    method: GET
    data_selector: recommendations
    params: {}
- name: CloudWatch Logs Class Change
  endpoint:
    path: /aws/recommendations/cloudwatch-logs-class-change
    method: GET
    data_selector: recommendations
    params: {}
- name: Dynamo DB Idle
  endpoint:
    path: /aws/recommendations/dynamo-db-idle
    method: GET
    data_selector: recommendations
    params: {}
- name: Load Balancer Idle
  endpoint:
    path: /aws/recommendations/load-balancer-idle
    method: GET
    data_selector: recommendations
    params: {}
- name: S3 Inactive
  endpoint:
    path: /aws/recommendations/s3-inactive
    method: GET
    data_selector: recommendations
    params: {}
- name: S3 Multipart upload
  endpoint:
    path: /aws/recommendations/s3-multipart-upload
    method: GET
    data_selector: recommendations
    params: {}
- name: S3 Storage Class
  endpoint:
    path: /aws/recommendations/s3-storage-class
    method: GET
    data_selector: recommendations
    params: {}
- name: S3 Versioning
  endpoint:
    path: /aws/recommendations/s3-versioning
    method: GET
    data_selector: recommendations
    params: {}
- name: Unattached EBS
  endpoint:
    path: /aws/recommendations/unattached-ebs
    method: GET
    data_selector: recommendations
    params: {}
- name: EBS Type Change
  endpoint:
    path: /aws/recommendations/ebs-type-change
    method: GET
    data_selector: recommendations
    params: {}
- name: Outdated EBS Snapshot
  endpoint:
    path: /aws/recommendations/outdated-ebs-snapshot
    method: GET
    data_selector: recommendations
    params: {}
- name: AMI Orphaned Snapshot
  endpoint:
    path: /aws/recommendations/ami-orphaned-snapshot
    method: GET
    data_selector: recommendations
    params: {}
- name: AWS Backup Outdated Snapshot
  endpoint:
    path: /aws/recommendations/aws-backup-outdated-snapshot
    method: GET
    data_selector: recommendations
    params: {}
- name: Redshift Idle
  endpoint:
    path: /aws/recommendations/redshift-idle
    method: GET
    data_selector: recommendations
    params: {}
- name: Redshift Reserved Instance
  endpoint:
    path: /aws/recommendations/redshift-reserved-instance
    method: GET
    data_selector: recommendations
    params: {}
- name: Neptune DB Idle
  endpoint:
    path: /aws/recommendations/neptune-db-idle
    method: GET
    data_selector: recommendations
    params: {}
- name: Elasticsearch Idle
  endpoint:
    path: /aws/recommendations/elasticsearch-idle
    method: GET
    data_selector: recommendations
    params: {}
- name: OpenSearch Reserved Instance
  endpoint:
    path: /aws/recommendations/opensearch-reserved-instance
    method: GET
    data_selector: recommendations
    params: {}
- name: OpenSearch Extended Support
  endpoint:
    path: /aws/recommendations/opensearch-extended-support
    method: GET
    data_selector: recommendations
    params: {}
- name: ElastiCache Reserved Instance
  endpoint:
    path: /aws/recommendations/elasticache-reserved-instance
    method: GET
    data_selector: recommendations
    params: {}
- name: ElastiCache Idle
  endpoint:
    path: /aws/recommendations/elasticache-idle
    method: GET
    data_selector: recommendations
    params: {}
- name: DocumentDB Idle
  endpoint:
    path: /aws/recommendations/documentdb-idle
    method: GET
    data_selector: recommendations
    params: {}
- name: NAT Gateway Idle
  endpoint:
    path: /aws/recommendations/nat-gateway-idle
    method: GET
    data_selector: recommendations
    params: {}
- name: Kinesis Idle
  endpoint:
    path: /aws/recommendations/kinesis-idle
    method: GET
    data_selector: recommendations
    params: {}
- name: Duplicate CloudTrail
  endpoint:
    path: /aws/recommendations/duplicate-cloudtrail
    method: GET
    data_selector: recommendations
    params: {}
- name: Disabled KMS
  endpoint:
    path: /aws/recommendations/disabled-kms
    method: GET
    data_selector: recommendations
    params: {}
- name: Old KMS
  endpoint:
    path: /aws/recommendations/old-kms
    method: GET
    data_selector: recommendations
    params: {}
- name: Unused Secrets
  endpoint:
    path: /aws/recommendations/unused-secrets
    method: GET
    data_selector: recommendations
    params: {}
- name: Bedrock Provisioned Throughput Commitment
  endpoint:
    path: /aws/recommendations/bedrock-provisioned-throughput-commitment
    method: GET
    data_selector: recommendations
    params: {}
- name: Bedrock Rightsizing
  endpoint:
    path: /aws/recommendations/bedrock-rightsizing
    method: GET
    data_selector: recommendations
    params: {}
- name: EC2 Right Sizing
  endpoint:
    path: /docs/aws-ec2-usage
    method: GET
- name: EC2 Generation Upgrade
  endpoint:
    path: /docs/aws-ec2-usage
    method: GET
- name: EC2 Idle
  endpoint:
    path: /docs/aws-ec2-usage
    method: GET
- name: Stopped EC2 instance
  endpoint:
    path: /docs/aws-ec2-usage
    method: GET
- name: Compute Savings Plan
  endpoint:
    path: /docs/aws-ec2-usage
    method: GET
- name: EC2 Unnecessary Data Transfer
  endpoint:
    path: /docs/aws-ec2-usage
    method: GET
- name: Waste Map
  endpoint:
    path: /waste-map
    method: GET
    data_selector: recommendations
- name: Waste Chart
  endpoint:
    path: /waste-chart
    method: GET
    data_selector: chart_data
- name: Savings Tracker
  endpoint:
    path: /savings-tracker
    method: GET
    data_selector: savings_overview
- name: Jira
  endpoint:
    path: /recommendations/waste_detector/settings/jira
    method: GET
    data_selector: tickets
    params: {}
- name: Jira Data Center
  endpoint:
    path: /recommendations/waste_detector/settings/jira_data_center
    method: GET
    data_selector: tickets
    params: {}
- name: RDS Right Sizing
  endpoint:
    path: /rds/right-sizing
    method: GET
    data_selector: recommendations
    params: {}
- name: RDS Generation Upgrade
  endpoint:
    path: /rds/generation-upgrade
    method: GET
    data_selector: recommendations
    params: {}
- name: RDS Provisioned IOPS
  endpoint:
    path: /rds/provisioned-iops
    method: GET
    data_selector: recommendations
    params: {}
- name: RDS Reserved Instance
  endpoint:
    path: /rds/reserved-instance
    method: GET
    data_selector: recommendations
    params: {}
- name: RDS Instance Idle
  endpoint:
    path: /rds/instance-idle
    method: GET
    data_selector: recommendations
    params: {}
- name: RDS Storage Type Change
  endpoint:
    path: /rds/storage-type-change
    method: GET
    data_selector: recommendations
    params: {}
- name: RDS Aurora I/O Optimized
  endpoint:
    path: /rds/aurora-io-optimized
    method: GET
    data_selector: recommendations
    params: {}
- name: RDS Extended Support
  endpoint:
    path: /rds/extended-support
    method: GET
    data_selector: recommendations
    params: {}
- name: EBS Unattached
  endpoint:
    path: /ebs/unattached
    method: GET
    data_selector: records
- name: EBS Type Change
  endpoint:
    path: /ebs/type-change
    method: GET
    data_selector: records
- name: EBS Outdated Snapshot
  endpoint:
    path: /ebs/outdated-snapshot
    method: GET
    data_selector: records
- name: AMI Orphaned Snapshot
  endpoint:
    path: /ebs/orphaned-snapshot
    method: GET
    data_selector: records
- name: RDS Right Sizing
  endpoint:
    path: /rds/right-sizing
    method: GET
- name: RDS Generation Upgrade
  endpoint:
    path: /rds/generation-upgrade
    method: GET
- name: RDS Provisioned IOPS
  endpoint:
    path: /rds/provisioned-iops
    method: GET
- name: RDS Reserved Instance
  endpoint:
    path: /rds/reserved-instance
    method: GET
- name: RDS Instance Idle
  endpoint:
    path: /rds/instance-idle
    method: GET
- name: RDS Storage Type Change
  endpoint:
    path: /rds/storage-type-change
    method: GET
- name: RDS Aurora I/O Optimized
  endpoint:
    path: /rds/aurora-io-optimized
    method: GET
- name: RDS Extended Support
  endpoint:
    path: /rds/extended-support
    method: GET
- name: EKS Extended Support
  endpoint:
    path: /eks/extended-support
    method: GET
    data_selector: recommendation
    params:
      trigger_days: 30
- name: EBS Unattached
  endpoint:
    path: /ebs/unattached
    method: GET
    data_selector: records
- name: EBS Type Change
  endpoint:
    path: /ebs/type-change
    method: GET
    data_selector: records
- name: EBS Outdated Snapshot
  endpoint:
    path: /ebs/outdated-snapshot
    method: GET
    data_selector: records
- name: AMI Orphaned Snapshot
  endpoint:
    path: /ebs/orphaned-snapshot
    method: GET
    data_selector: records
- name: OpenSearch Reserved Instance
  endpoint:
    path: /opensearch/reserved-instance
    method: GET
- name: Elasticsearch Idle
  endpoint:
    path: /elasticsearch/idle
    method: GET
- name: OpenSearch Extended Support
  endpoint:
    path: /opensearch/extended-support
    method: GET
- name: Redshift Idle
  endpoint:
    path: /redshift/idle
    method: GET
- name: Redshift Reserved Instance
  endpoint:
    path: /redshift/reserved-instance
    method: GET
- name: VPC Interface endpoint Idle
  endpoint:
    path: /vpc/interface-endpoint-idle
    method: GET
    data_selector: records
- name: NAT Gateway Idle
  endpoint:
    path: /vpc/nat-gateway-idle
    method: GET
    data_selector: records
- name: CloudWatch Logs Class Change
  endpoint:
    path: /cloudwatch/logs/class/change
    method: GET
    data_selector: logs
    params: {}
- name: ecs_fargate_rightsizing
  endpoint:
    path: /ecs-fargate-rightsizing
    method: GET
    data_selector: recommendations
    params: {}
- name: Disabled KMS
  endpoint:
    path: /kms/disabled
    method: GET
    data_selector: disabled_keys
    params: {}
- name: Old KMS
  endpoint:
    path: /kms/old
    method: GET
    data_selector: old_keys
    params: {}
- name: DynamoDB Idle
  endpoint:
    path: /dynamodb/idle
    method: GET
    data_selector: recommendations
    params: {}
- name: ElastiCache Reserved Instance
  endpoint:
    path: /elasticache/reserved-instance
    method: GET
- name: ElastiCache Idle
  endpoint:
    path: /elasticache/idle
    method: GET
- name: VPC Interface endpoint Idle
  endpoint:
    path: /vpc/interface/endpoint/idle
    method: GET
    data_selector: records
- name: NAT Gateway Idle
  endpoint:
    path: /vpc/nat/gateway/idle
    method: GET
    data_selector: records
- name: VM Right Sizing
  endpoint:
    path: /vm/right-sizing
    method: GET
    data_selector: recommendations
- name: Virtual Machine Idle
  endpoint:
    path: /vm/idle
    method: GET
    data_selector: idle_instances
- name: Virtual Machine Stopped
  endpoint:
    path: /vm/stopped
    method: GET
    data_selector: stopped_instances
- name: VM Reserved Instance
  endpoint:
    path: /vm/reserved-instance
    method: GET
    data_selector: reserved_instance_recommendations
- name: Compute Savings Plan
  endpoint:
    path: /vm/savings-plan
    method: GET
    data_selector: savings_plan_recommendations
- name: Neptune Idle
  endpoint:
    path: /neptune/idle
    method: GET
- name: DocumentDB Idle
  endpoint:
    path: /documentdb/idle
    method: GET
- name: Disk Unattached
  endpoint:
    path: /disk/unattached
    method: GET
    data_selector: records
- name: Disk Type Change
  endpoint:
    path: /disk/type-change
    method: GET
    data_selector: records
- name: Outdated Snapshot
  endpoint:
    path: /disk/outdated-snapshot
    method: GET
    data_selector: records
- name: Snapshot Migration
  endpoint:
    path: /disk/snapshot-migration
    method: GET
    data_selector: records
- name: SQL Database Rightsizing
  endpoint:
    path: /sql/database/right-sizing
    method: GET
    data_selector: records
    params: {}
- name: SQL Idle
  endpoint:
    path: /sql/database/idle
    method: GET
    data_selector: records
    params: {}
- name: SQL Reserved Capacity
  endpoint:
    path: /sql/database/reserved-capacity
    method: GET
    data_selector: records
    params: {}
- name: CloudTrail Recommendations
  endpoint:
    path: /cloudtrail/recommendations
    method: GET
    data_selector: recommendations
- name: disabled_kms
  endpoint:
    path: /kms/disabled
    method: GET
    data_selector: disabled_keys
- name: old_kms
  endpoint:
    path: /kms/old
    method: GET
    data_selector: aged_keys
- name: MySQL Idle
  endpoint:
    path: /mysql/idle
    method: GET
- name: MySQL Reserved Capacity
  endpoint:
    path: /mysql/reserved-capacity
    method: GET
- name: Cosmos DB Right Sizing
  endpoint:
    path: /cosmos-db/right-sizing
    method: GET
- name: Cosmos DB Idle
  endpoint:
    path: /cosmos-db/idle
    method: GET
- name: Cosmos DB Reserved Capacity
  endpoint:
    path: /cosmos-db/reserved-capacity
    method: GET
- name: IP Unattached
  endpoint:
    path: /networking/ip/unattached
    method: GET
    data_selector: public_ips
- name: VM Right Sizing
  endpoint:
    path: /vm/rightsizing
    method: GET
    data_selector: recommendations
    params: {}
- name: Virtual Machine Idle
  endpoint:
    path: /vm/idle
    method: GET
    data_selector: recommendations
    params: {}
- name: Virtual Machine Stopped
  endpoint:
    path: /vm/stopped
    method: GET
    data_selector: recommendations
    params: {}
- name: VM Reserved Instance
  endpoint:
    path: /vm/reserved-instance
    method: GET
    data_selector: recommendations
    params: {}
- name: Compute Savings Plan
  endpoint:
    path: /vm/savings-plan
    method: GET
    data_selector: recommendations
    params: {}
- name: data_explorer_reserved_capacity
  endpoint:
    path: /data-explorer/reserved-capacity
    method: GET
    data_selector: records
- name: Disk Unattached
  endpoint:
    path: /disk/unattached
    method: GET
    data_selector: records
- name: Disk Type Change
  endpoint:
    path: /disk/type-change
    method: GET
    data_selector: records
- name: Outdated Snapshot
  endpoint:
    path: /disk/outdated-snapshot
    method: GET
    data_selector: records
- name: Snapshot Migration
  endpoint:
    path: /disk/snapshot-migration
    method: GET
    data_selector: records
- name: sql_data_warehouse_reservations
  endpoint:
    path: /api/sql_data_warehouse/reservations
    method: GET
    data_selector: reservations
    params: {}
- name: SQL Database Rightsizing
  endpoint:
    path: /sql/database/rightsizing
    method: GET
    data_selector: rightsizing
    params: {}
- name: SQL Idle
  endpoint:
    path: /sql/database/idle
    method: GET
    data_selector: idle
    params: {}
- name: SQL Reserved Capacity
  endpoint:
    path: /sql/database/reserved-capacity
    method: GET
    data_selector: reservedCapacity
    params: {}
- name: PostgreSQL Idle
  endpoint:
    path: /postgresql/idle
    method: GET
- name: PostgreSQL Reserved Capacity
  endpoint:
    path: /postgresql/reserved-capacity
    method: GET
- name: MySQL Idle
  endpoint:
    path: /mysql/idle
    method: GET
    data_selector: records
- name: MySQL Reserved Capacity
  endpoint:
    path: /mysql/reserved_capacity
    method: GET
    data_selector: records
- name: Cosmos DB Right Sizing
  endpoint:
    path: /cosmos-db/right-sizing
    method: GET
- name: Cosmos DB Idle
  endpoint:
    path: /cosmos-db/idle
    method: GET
- name: Cosmos DB Reserved Capacity
  endpoint:
    path: /cosmos-db/reserved-capacity
    method: GET
- name: k8s_workload_rightsizing
  endpoint:
    path: /docs/k8s-workload-rightsizing-recommendation
    method: GET
- name: Virtual Machine Right Sizing
  endpoint:
    path: /virtual-machine/right-sizing
    method: GET
    data_selector: records
- name: Virtual Machine Stopped
  endpoint:
    path: /virtual-machine/stopped
    method: GET
    data_selector: records
- name: Virtual Machine Idle
  endpoint:
    path: /virtual-machine/idle
    method: GET
    data_selector: records
- name: disk_unattached
  endpoint:
    path: /disk/unattached
    method: GET
    data_selector: records
- name: sql_data_warehouse
  endpoint:
    path: /sql-data-warehouse
    method: GET
    data_selector: data
    params: {}
- name: redis_reserved_capacity
  endpoint:
    path: /redis/reserved-capacity
    method: GET
    data_selector: recommendations
- name: anomaly_detection
  endpoint:
    path: /anomaly-detection
    method: GET
    data_selector: anomalies
- name: Virtual Machine Right Sizing
- name: Virtual Machine Stopped
- name: Virtual Machine Idle
- name: disk_unattached
  endpoint:
    path: /disk/unattached
    method: GET
    data_selector: records
- name: IP Idle
  endpoint:
    path: /api/ip/idle
    method: GET
    data_selector: data
    params: {}
- name: anomaly_alerts
  endpoint:
    path: /api/anomaly_alerts
    method: POST
    data_selector: alerts
    params: {}
- name: Commitment Usage Discount
  endpoint:
    path: /commitment-usage-discount
    method: GET
    data_selector: records
- name: alerts
  endpoint:
    path: /anomaly-detection/alerts
    method: GET
- name: workload_rightsizing
  endpoint:
    path: /api/k8s/workload_rightsizing
    method: GET
    data_selector: data
    params: {}
- name: budget_monitoring
  endpoint:
    path: /budgets
    method: GET
    data_selector: budgets
    params: {}
- name: budget_summary
  endpoint:
    path: /budget_summary
    method: GET
    data_selector: budgets
    params: {}
- name: s3_usage
  endpoint:
    path: /services/s3/usage
    method: GET
    data_selector: buckets
- name: rds_usage
  endpoint:
    path: /services/data/vXX.X/sobjects/RDS
    method: GET
    data_selector: records
    params: {}
- name: anomaly_alert
  endpoint:
    path: /anomaly_alerts
    method: POST
    data_selector: alert
    params: {}
- name: virtual_machines_usage
  endpoint:
    path: /services/virtual-machines
    method: GET
    data_selector: virtualMachines
    params: {}
- name: alerts
  endpoint:
    path: /api/v1/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: block_blob_storage_usage
  endpoint:
    path: /block_blob_storage_usage
    method: GET
    data_selector: records
- name: anomaly_alerts
  endpoint:
    path: /docs/defining-anomaly-alerts
    method: GET
    data_selector: alerts
    params: {}
- name: sql_db_costs
  endpoint:
    path: /services/db_costs
    method: GET
    data_selector: db_costs
    params: {}
- name: budgets
  endpoint:
    path: /budgets
    method: GET
    data_selector: budgets
    params: {}
- name: billing_rules
  endpoint:
    path: /docs/billing-rules
    method: GET
- name: billing_rules
  endpoint:
    path: /api/v1/billing_rules
    method: GET
    data_selector: rules
- name: savings_plan_utilization
  endpoint:
    path: /api/savings_plan_utilization
    method: GET
    data_selector: utilization_data
    params: {}
- name: reserved_instance_details
  endpoint:
    path: /api/reserved_instances
    method: GET
    data_selector: data
    params: {}
- name: billing_report
  endpoint:
    path: /partner/reports
    method: POST
    data_selector: report
    params: {}
- name: Reservation Reader
  endpoint:
    path: /commitment/ri_utilization
    method: GET
    data_selector: reservations
    params: {}
- name: ec2_usage
  endpoint:
    path: /aws/ec2/usage
    method: GET
    data_selector: usage_records
- name: Credits
  endpoint:
    path: /partners/credits
    method: GET
    data_selector: credits
    params: {}
- name: billing_status
  endpoint:
    path: /billing-status
    method: GET
    data_selector: billing_data
    params: {}
- name: s3_usage
  endpoint:
    path: /s3/usage
    method: GET
    data_selector: buckets
- name: billing_history
  endpoint:
    path: /billing/history
    method: GET
    data_selector: billing_records
- name: rds_usage
  endpoint:
    path: /rds/usage
    method: GET
    data_selector: records
    params: {}
- name: virtual_machines
  endpoint:
    path: /services/data/vXX.X/sobjects/VirtualMachines
    method: GET
    data_selector: records
    params: {}
- name: billing_status
  endpoint:
    path: /billing/status
    method: GET
    data_selector: billing_data
- name: Block Blob Storage Usage
  endpoint:
    path: /services/block_blob_storage
    method: GET
    data_selector: data
    params: {}
- name: billing_history
  endpoint:
    path: /billing/history
    method: GET
    data_selector: billing_data
    params: {}
- name: sql_db_costs
  endpoint:
    path: /services/db_costs
    method: GET
    data_selector: SQLDBs
- name: customer_account
  endpoint:
    path: /docs/msp-deleting-customer-account
    method: DELETE
    data_selector: steps
    params: {}
- name: billing_rules
  endpoint:
    path: /billing/rules
    method: GET
    data_selector: rules
    params: {}
- name: billing_report
  endpoint:
    path: /api/billing/reports
    method: POST
    data_selector: report
    params: {}
- name: users_with_roles
  endpoint:
    path: /api/v1/users/with-roles
    method: GET
- name: Onboard AWS Account
  endpoint:
    path: /reference/get_apiv2onboardingawsaccount_id
    method: GET
- name: Get List of Users
  endpoint:
    path: /reference/get-user-list
    method: GET
- name: Get Divisions
  endpoint:
    path: /reference/get_apiv1divisions
    method: GET
- name: credits
  endpoint:
    path: /partners/credits
    method: GET
    data_selector: credits
    params: {}
- name: billing_status
  endpoint:
    path: /billing/status
    method: GET
    data_selector: billing_records
- name: onboard_aws_account
  endpoint:
    path: /api/v2/onboarding/aws
    method: GET
    params:
      account_id: required
      bucketName: required
      bucketRegion: required
- name: Get SSO Client ID
  endpoint:
    path: /api/v1/users/sso
    method: POST
- name: billing_status
  endpoint:
    path: /billing/status
    method: GET
    data_selector: billing_info
    params: {}
- name: billing_history
  endpoint:
    path: /billing/history
    method: GET
    data_selector: billing_records
- name: roles
  endpoint:
    path: /api/v2/roles
    method: POST
- name: Billing Rules Prioritization
  endpoint:
    path: /docs/billing-rules-prioritization
    method: GET
    data_selector: content
    params: {}
- name: Invoice
  endpoint:
    path: /docs/invoice
    method: GET
    data_selector: content
    params: {}
- name: update_role
  endpoint:
    path: /api/v2/roles/{RoleID}
    method: PUT
    data_selector: null
    params: {}
- name: Delete Customer Users
  endpoint:
    path: /Partner/ManagedCustomer/DeleteCustomerUsers
    method: GET
    data_selector: users
    params: {}
- name: Delete Customer
  endpoint:
    path: /Partner/ManagedCustomer/DeleteCustomer
    method: GET
    data_selector: customers
    params: {}
- name: Remove Account from Assigned Roles
  endpoint:
    path: /Setting/Accounts/RemoveAccountFromRoles
    method: GET
    data_selector: roles
    params: {}
- name: Delete Account
  endpoint:
    path: /Setting/Accounts/DeleteAccount
    method: GET
    data_selector: accounts
    params: {}
- name: roles
  endpoint:
    path: /api/v2/roles/{RoleID}
    method: PUT
    data_selector: object
- name: delete_role
  endpoint:
    path: /api/v2/roles/{RoleID}
    method: DELETE
- name: change_user_role
  endpoint:
    path: /api/v2/roles/{RoleID}/user
    method: PUT
- name: users
  endpoint:
    path: /reference/get_apiv1user
    method: GET
- name: roles
  endpoint:
    path: /reference/get_apiv2roles
    method: GET
- name: cost_centers
  endpoint:
    path: /reference/get_apiv1userscos-centers
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: create_user_in_role
  endpoint:
    path: /api/v2/roles/{RoleID}/user
    method: POST
    data_selector: null
    params: {}
- name: Onboard AWS Account
  endpoint:
    path: /api/v2/onboarding/aws/account
    method: GET
- name: cost_center
  endpoint:
    path: /api/v1/users/cost-centers
    method: POST
- name: cost_center
  endpoint:
    path: /api/v1/users/cost-centers/{costCenterId}
    method: PUT
- name: Get SSO Client ID
  endpoint:
    path: /api/v1/users/sso
    method: POST
- name: cost_center
  endpoint:
    path: /api/v1/users/cost-centers/{costCenterId}
    method: DELETE
- name: divisions
  endpoint:
    path: /api/v1/divisions
    method: GET
    data_selector: records
    params: {}
- name: roles
  endpoint:
    path: /api/v2/roles
    method: POST
- name: Get list of users
  endpoint:
    path: /get-user-list
    method: GET
- name: Get user by user ID
  endpoint:
    path: /get-user-by-user-id
    method: GET
- name: Create Users
  endpoint:
    path: /create-users
    method: POST
- name: Enable or Disable users
  endpoint:
    path: /enable-and-disable-users
    method: POST
- name: Update user roles
  endpoint:
    path: /update-roles-for-users
    method: PUT
- name: update_role
  endpoint:
    path: /api/v2/roles/{RoleID}
    method: PUT
    data_selector: ''
    params: {}
- name: roles
  endpoint:
    path: /api/v2/roles/{RoleID}
    method: PUT
- name: Get Divisions
  endpoint:
    path: /reference/get_apiv1divisions
    method: GET
- name: Get Users and Roles
  endpoint:
    path: /reference/get_apiv1userswith-roles
    method: GET
- name: Get List of Users
  endpoint:
    path: /reference/get_apiv1user
    method: GET
- name: Get Roles
  endpoint:
    path: /reference/get_apiv2roles
    method: GET
- name: Get List of Cost Centers
  endpoint:
    path: /reference/get_apiv1userscos-centers
    method: GET
- name: delete_role
  endpoint:
    path: /api/v2/roles/{RoleID}
    method: DELETE
- name: Change user Role
  endpoint:
    path: /api/v2/roles/{RoleID}/user
    method: PUT
- name: user_key
  endpoint:
    path: /api/v1/authentication/token/generate
    method: POST
    data_selector: apikey
    params: {}
- name: account_key
  endpoint:
    path: /api/v2/user-management/accounts/data-access/payer-accounts
    method: GET
    data_selector: accounts
    params: {}
- name: cost_center_id
  endpoint:
    path: /api/v2/user-management/cost-centers/management/list
    method: GET
    data_selector: cost_centers
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: roles
  endpoint:
    path: /api/v2/roles
    method: GET
- name: cost_centers
  endpoint:
    path: /api/v1/cost-centers
    method: GET
- name: Get List of Users
  endpoint:
    path: /reference/get-user-list
    method: GET
- name: Get Users and Roles
  endpoint:
    path: /reference/get_apiv1userswith-roles
    method: GET
- name: create_user_in_role
  endpoint:
    path: /api/v2/roles/{RoleID}/user
    method: POST
    data_selector: null
    params: {}
- name: users
  endpoint:
    path: /api/v2/user-management/users
    method: GET
- name: user
  endpoint:
    path: /api/v2/user-management/users/{userid}
    method: GET
- name: cost_center
  endpoint:
    path: /api/v1/users/cost-centers
    method: POST
- name: create_users
  endpoint:
    path: /api/v2/user-management/users
    method: POST
- name: enable_disable_users
  endpoint:
    path: /api/v2/user-management/users/enable-disable
    method: POST
- name: cost_center
  endpoint:
    path: /api/v1/users/cost-centers/{costCenterId}
    method: PUT
- name: update_user_roles
  endpoint:
    path: /api/v2/user-management/roles
    method: PUT
- name: cost_center
  endpoint:
    path: /api/v1/users/cost-centers/{costCenterId}
    method: DELETE
- name: roles
  endpoint:
    path: /api/v2/user-management/roles/
    method: GET
- name: divisions
  endpoint:
    path: /api/v1/divisions
    method: GET
    data_selector: divisions
- name: user_roles
  endpoint:
    path: /api/v2/user-management/roles/
    method: GET
- name: users
  endpoint:
    path: /um20-users
    method: GET
- name: roles
  endpoint:
    path: /um20-roles
    method: GET
- name: cost_centers
  endpoint:
    path: /um20-cost-centers
    method: GET
- name: roles
  endpoint:
    path: /api/v2/user-management/roles/
    method: POST
- name: Get Divisions
  endpoint:
    path: /reference/get_apiv1divisions
    method: GET
- name: Get Users and Roles
  endpoint:
    path: /reference/get_apiv1userswith-roles
    method: GET
- name: Get List of Users
  endpoint:
    path: /reference/get_apiv1user
    method: GET
- name: Get List of Cost Centers
  endpoint:
    path: /reference/get_apiv1userscos-centers
    method: GET
- name: Get Roles
  endpoint:
    path: /reference/get_apiv2roles
    method: GET
- name: user_management_roles
  endpoint:
    path: /api/v2/user-management/roles
    method: DELETE
- name: roles
  endpoint:
    path: /api/v2/user-management/roles/{roleId}
    method: PUT
- name: user_list
  endpoint:
    path: /reference/get-user-list
    method: GET
- name: user_by_id
  endpoint:
    path: /reference/get-user-by-user-id
    method: GET
- name: create_user
  endpoint:
    path: /reference/create-users
    method: POST
- name: enable_disable_users
  endpoint:
    path: /reference/enable-and-disable-users
    method: POST
- name: update_user_roles
  endpoint:
    path: /reference/update-roles-for-users
    method: PUT
- name: roles
  endpoint:
    path: /api/v2/user-management/roles/{roleId}
    method: GET
- name: users
  endpoint:
    path: /api/v2/user-management/users
    method: GET
- name: sub_roles
  endpoint:
    path: /api/v2/user-management/roles/{roleId}/sub-roles
    method: PUT
- name: user
  endpoint:
    path: /api/v2/user-management/users/{userid}
    method: GET
- name: role_permissions
  endpoint:
    path: /user-management/roles/{roleId}/permissions
    method: GET
- name: create_users
  endpoint:
    path: /api/v2/user-management/users
    method: POST
- name: role_permissions
  endpoint:
    path: /api/v2/user-management/roles/{roleId}/permissions
    method: PUT
- name: users
  endpoint:
    path: /api/v2/user-management/users/enable-disable
    method: POST
- name: role_data_access
  endpoint:
    path: /{roleId}/data-access
    method: GET
- name: update_role_data_access_accounts
  endpoint:
    path: /{roleId}/data-access/accounts
    method: PUT
- name: update_role_data_access_cost_centers
  endpoint:
    path: /{roleId}/data-access/cost-centers
    method: PUT
- name: update_user_roles
  endpoint:
    path: /api/v2/user-management/roles
    method: PUT
- name: data_access
  endpoint:
    path: /roles/{roleId}/data-access
    method: GET
- name: roles
  endpoint:
    path: /api/v2/user-management/roles/
    method: GET
- name: data_access_accounts
  endpoint:
    path: /api/v2/user-management/roles/{roleId}/data-access/accounts
    method: PUT
- name: cost_centers
  endpoint:
    path: /user-management/roles/{roleId}/data-access/cost-centers
    method: PUT
- name: accounts
  endpoint:
    path: /management/{costCenterId}/accounts
    method: GET
- name: management_list
  endpoint:
    path: /cost-centers/management/list
    method: GET
- name: management
  endpoint:
    path: /cost-centers/management
    method: POST
- name: roles
  endpoint:
    path: /roles/
    method: GET
- name: cost_center
  endpoint:
    path: /management/{costCenterId}
    method: PUT
- name: user_management_roles
  endpoint:
    path: /api/v2/user-management/roles/
    method: POST
- name: roles
  endpoint:
    path: /api/v2/user-management/roles
    method: DELETE
- name: cost_center
  endpoint:
    path: /management/{costCenterId}
    method: DELETE
- name: roles
  endpoint:
    path: /user-management/roles/{roleId}
    method: PUT
- name: customers
  endpoint:
    path: /reference/list
    method: POST
    data_selector: records
    params: {}
- name: customer_accounts
  endpoint:
    path: /reference/getcustomeridaccounts
    method: GET
    data_selector: records
    params: {}
- name: update_customer
  endpoint:
    path: /reference/putcustomerid
    method: PUT
    data_selector: records
    params: {}
- name: delete_customer
  endpoint:
    path: /reference/deletecustomerid
    method: DELETE
    data_selector: records
    params: {}
- name: roles
  endpoint:
    path: /api/v2/user-management/roles/{roleId}
    method: GET
- name: customers
  endpoint:
    path: /api/v2/user-management/customers/list
    method: POST
- name: sub_roles
  endpoint:
    path: /api/v2/user-management/roles/{roleId}/sub-roles
    method: PUT
- name: accounts_for_customer
  endpoint:
    path: /user-management/customers/{customerId}/accounts
    method: GET
- name: role_permissions
  endpoint:
    path: /api/v2/user-management/roles/{roleId}/permissions
    method: GET
- name: update_customer
  endpoint:
    path: /api/v2/user-management/customers/{customerId}
    method: PUT
- name: role_permissions
  endpoint:
    path: /api/v2/user-management/roles/{roleId}/permissions
    method: PUT
- name: data-access
  endpoint:
    path: /{roleId}/data-access
    method: GET
- name: update-data-access-accounts
  endpoint:
    path: /{roleId}/data-access/accounts
    method: PUT
- name: update-data-access-cost-centers
  endpoint:
    path: /{roleId}/data-access/cost-centers
    method: PUT
- name: Get Cost Assets
  endpoint:
    path: /reference/get_apiv2usageassets
    method: GET
- name: Get Cost & Usage 2.0
  endpoint:
    path: /reference/get-cost-usage-20
    method: GET
- name: role_data_access
  endpoint:
    path: /roles/{roleId}/data-access
    method: GET
- name: cost_assets
  endpoint:
    path: /api/v2/usage/assets
    method: GET
    data_selector: assets
    params: {}
- name: data_access_accounts
  endpoint:
    path: /api/v2/user-management/roles/{roleId}/data-access/accounts
    method: PUT
- name: Cost & Usage
  endpoint:
    path: /get-cost-usage-20
    method: GET
    data_selector: records
- name: Customers
  endpoint:
    path: /list
    method: POST
    data_selector: records
- name: data_access_list
  endpoint:
    path: /api/v2/user-management/cost-centers/data-access/list
    method: GET
- name: accounts
  endpoint:
    path: /cost-centers/management/{costCenterId}/accounts
    method: GET
- name: cost_and_usage
  endpoint:
    path: /api/v2/invoices/cost-and-usage
    method: GET
    data_selector: invoices
- name: Get Recommendations
  endpoint:
    path: /get_apiv2recommendationslist
    method: POST
- name: management_list
  endpoint:
    path: /cost-centers/management/list
    method: GET
- name: recommendations
  endpoint:
    path: /recommendations
    method: POST
    data_selector: recommendations
    params: {}
- name: management
  endpoint:
    path: /management
    method: POST
- name: recommendations
  endpoint:
    path: /api/v2/recommendations/list
    method: POST
- name: Recommendation Actions
  endpoint:
    path: /recommendation-actions
    method: POST
- name: cost_center_management
  endpoint:
    path: /management/{costCenterId}
    method: PUT
- name: recommendation_comments
  endpoint:
    path: /api/v2/recommendationsNew/{recId}/comments
    method: POST
- name: cost_center
  endpoint:
    path: /management/{costCenterId}
    method: DELETE
- name: customers
  endpoint:
    path: /reference/list
    method: POST
- name: accounts
  endpoint:
    path: /reference/getcustomeridaccounts
    method: GET
- name: update_customer
  endpoint:
    path: /reference/putcustomerid
    method: PUT
- name: delete_customer
  endpoint:
    path: /reference/deletecustomerid
    method: DELETE
- name: users
  endpoint:
    path: /get_apiv1user
    method: GET
- name: cost_centers
  endpoint:
    path: /get_apiv1userscos-centers
    method: GET
- name: roles
  endpoint:
    path: /get_apiv2roles
    method: GET
- name: recommendations
  endpoint:
    path: /get_apiv2recommendationslist
    method: POST
- name: set_user_status
  endpoint:
    path: /api/v2/recommendationsNew/user-action
    method: POST
- name: recommendations
  endpoint:
    path: /reference/get_apiv2recommendationslist
    method: POST
    data_selector: recommendations
    params: {}
- name: accounts
  endpoint:
    path: /api/v2/user-management/customers/{customerId}/accounts
    method: GET
- name: commitment_utilization
  endpoint:
    path: /api/v1/commitment/utilization
    method: GET
    data_selector: utilization
- name: Update customer by customerId
  endpoint:
    path: /api/v2/user-management/customers/{customerId}
    method: PUT
- name: viewpoints
  endpoint:
    path: /api/v1/usage/business-mapping/viewpoints
    method: GET
- name: delete_customer
  endpoint:
    path: /api/v2/user-management/customers/{customerId}
    method: DELETE
- name: business_mapping
  endpoint:
    path: /api/v1/usage/business-mapping/viewpoints/{viewpoint-uuid}/mappings
    method: GET
- name: cost_assets
  endpoint:
    path: /reference/get_apiv2usageassets
    method: GET
- name: cost_usage
  endpoint:
    path: /reference/get-cost-usage-20
    method: GET
- name: business_mapping
  endpoint:
    path: /api/v1/usage/business-mapping/mappings
    method: POST
- name: business_mapping
  endpoint:
    path: /api/v1/usage/business-mapping/mappings/{business-mapping-id}
    method: PUT
- name: cost_assets
  endpoint:
    path: /api/v2/usage/assets
    method: GET
    data_selector: assets
- name: business_mapping
  endpoint:
    path: /api/v1/usage/business-mapping/mappings/{business-mapping-id}
    method: DELETE
- name: Cost & Usage
  endpoint:
    path: /get-cost-usage-20
    method: GET
    data_selector: records
    params: {}
- name: Update Business Mapping Order
  endpoint:
    path: /api/v1/usage/business-mapping/mappings/rank
    method: PUT
- name: enrichment_tags
  endpoint:
    path: /reference/enrichment-tags
    method: GET
- name: cost_and_usage
  endpoint:
    path: /api/v2/invoices/cost-and-usage
    method: GET
    data_selector: invoices
- name: enrichment_tags
  endpoint:
    path: /api/v1/users/files/enrichment-tags/download
    method: GET
- name: Get Recommendations
  endpoint:
    path: /recommendations
    method: GET
    data_selector: recommendations
- name: enrichment_tags
  endpoint:
    path: /api/v1/users/files/enrichment-tags/upload
    method: POST
- name: recommendations
  endpoint:
    path: /recommendations
    method: POST
- name: kubernetes_cost
  endpoint:
    path: /api/v1/kubernetes/cost-and-usage
    method: GET
    data_selector: data
    params: {}
- name: recommendations
  endpoint:
    path: /api/v2/recommendations/list
    method: POST
- name: Recommendation Actions
  endpoint:
    path: /reference/recommendation-actions
    method: POST
- name: viewpoints
  endpoint:
    path: /api/v2/business-mapping/viewpoints
    method: GET
    data_selector: viewpoints
- name: recommendation_comments
  endpoint:
    path: /api/v2/recommendationsNew/{recId}/comments
    method: POST
- name: viewpoint
  endpoint:
    path: /api/v2/business-mapping/viewpoints/{viewpoint-id}
    method: GET
- name: set_user_status
  endpoint:
    path: /get_apiv2recommendationsnewuser-action
    method: POST
- name: viewpoint
  endpoint:
    path: /api/v2/business-mapping/viewpoints
    method: POST
- name: set_user_status
  endpoint:
    path: /api/v2/recommendationsNew/user-action
    method: POST
- name: clone_viewpoint
  endpoint:
    path: /api/v2/business-mapping/viewpoints/{viewpoint-id}/clone
    method: POST
- name: viewpoint
  endpoint:
    path: /api/v2/business-mapping/viewpoints/{viewpoint-id}
    method: PUT
- name: AWS Recommendations
  endpoint:
    path: /reference/recommendations/aws
    method: GET
- name: Azure Recommendations
  endpoint:
    path: /reference/recommendations/azure
    method: GET
- name: GCP Recommendations
  endpoint:
    path: /reference/recommendations/gcp
    method: GET
- name: Delete Viewpoint
  endpoint:
    path: /api/v2/business-mapping/viewpoints/{viewpoint-id}
    method: DELETE
- name: commitment_utilization
  endpoint:
    path: /commitment/utilization
    method: GET
    data_selector: utilization
- name: viewpoint_mappings
  endpoint:
    path: /api/v2/business-mapping/viewpoints/{viewpoint-id}/mappings
    method: GET
- name: Viewpoint Mappings
  endpoint:
    path: /api/v2/business-mapping/viewpoints/{viewpoint-id}/mappings
    method: POST
- name: business_mapping
  endpoint:
    path: /api/v1/usage/business-mapping/viewpoints/{viewpoint-uuid}/mappings
    method: GET
- name: viewpoint_mapping
  endpoint:
    path: /api/v2/business-mapping/viewpoints/{viewpont-id}/mappings/{mapping-id}
    method: PUT
- name: business_mapping
  endpoint:
    path: /api/v1/usage/business-mapping/mappings
    method: POST
- name: Update Viewpoint Mappings Ranking
  endpoint:
    path: /api/v2/business-mapping/viewpoints/{viewpoint-id}/mappings/rank
    method: PUT
- name: update_business_mapping
  endpoint:
    path: /api/v1/usage/business-mapping/mappings/{business-mapping-id}
    method: PUT
- name: Delete Viewpoint Mapping
  endpoint:
    path: /api/v2/business-mapping/viewpoints/{viewpoint-id}/mappings/{mapping-id}
    method: DELETE
- name: business_mapping
  endpoint:
    path: /api/v1/usage/business-mapping/mappings/{business-mapping-id}
    method: DELETE
- name: global_mappings
  endpoint:
    path: /api/v2/business-mapping/global-mappings
    method: GET
- name: Update Business Mapping Order
  endpoint:
    path: /api/v1/usage/business-mapping/mappings/rank
    method: PUT
- name: global_mapping
  endpoint:
    path: /api/v2/business-mapping/global-mappings
    method: POST
- name: global_mapping
  endpoint:
    path: /api/v2/business-mapping/global-mappings/{global-mapping-id}
    method: PUT
- name: enrichment_tags
  endpoint:
    path: /reference/enrichment-tags
    method: GET
    data_selector: records
    params: {}
- name: Global Mapping
  endpoint:
    path: /api/v2/business-mapping/viewpoints/{viewpoint-id}/global-mappings/{global-mapping-id}
    method: PUT
- name: enrichment_tags
  endpoint:
    path: /api/v1/users/files/enrichment-tags/download
    method: GET
- name: global_mapping
  endpoint:
    path: /api/v2/business-mapping/global-mappings/{ID}
    method: DELETE
- name: enrichment_tags
  endpoint:
    path: /api/v1/users/files/enrichment-tags/upload
    method: POST
- name: Alert Configuration Rules
  endpoint:
    path: /reference/get_apiv1anomaly-detectionrules
    method: GET
- name: Anomalies
  endpoint:
    path: /reference/get_apiv1anomaly-detection
    method: GET
- name: Alerts
  endpoint:
    path: /reference/get_apiv1anomaly-detectionalertedtrue
    method: GET
- name: alert_configuration_rules
  endpoint:
    path: /api/v1/anomaly-detection/rules
    method: GET
- name: create_alert_configuration_rule
  endpoint:
    path: /api/v1/anomaly-detection/rule
    method: POST
- name: Viewpoint
  endpoint:
    path: /api/v2/business-mapping/viewpoints/{viewpoint-id}
    method: GET
- name: Update Alert Configuration Rule
  endpoint:
    path: /api/v1/anomaly-detection/rule
    method: PUT
- name: Create Viewpoint
  endpoint:
    path: /api/v2/business-mapping/viewpoints
    method: POST
- name: delete_alert_configuration_rule
  endpoint:
    path: /api/v1/anomaly-detection/rule/{id}
    method: DELETE
- name: Clone Viewpoint
  endpoint:
    path: /api/v2/business-mapping/viewpoints/{viewpoint-id}/clone
    method: POST
- name: alerts
  endpoint:
    path: /api/v1/anomaly-detection
    method: GET
    data_selector: alerts
    params:
      alerted: 'true'
- name: viewpoint
  endpoint:
    path: /api/v2/business-mapping/viewpoints/{viewpoint-id}
    method: PUT
- name: daily_forecast
  endpoint:
    path: /dashboards/cost-forecast-daily-data
    method: GET
    data_selector: data
- name: delete_viewpoint
  endpoint:
    path: /api/v2/business-mapping/viewpoints/{viewpoint-id}
    method: DELETE
- name: viewpoint_mappings
  endpoint:
    path: /api/v2/business-mapping/viewpoints/{viewpoint-id}/mappings
    method: GET
- name: viewpoint_mapping
  endpoint:
    path: /api/v2/business-mapping/viewpoints/{viewpoint-id}/mappings
    method: POST
- name: viewpoint_mapping
  endpoint:
    path: /api/v2/business-mapping/viewpoints/{viewpont-id}/mappings/{mapping-id}
    method: PUT
- name: Update Viewpoint Mappings Ranking
  endpoint:
    path: /api/v2/business-mapping/viewpoints/{viewpoint-id}/mappings/rank
    method: PUT
- name: delete_viewpoint_mapping
  endpoint:
    path: /business-mapping/viewpoints/{viewpoint-id}/mappings/{mapping-id}
    method: DELETE
- name: global_mapping
  endpoint:
    path: /api/v2/business-mapping/global-mappings
    method: POST
- name: global_mapping
  endpoint:
    path: /api/v2/business-mapping/global-mappings/{global-mapping-id}
    method: PUT
- name: Add Global Mapping to Viewpoint
  endpoint:
    path: /api/v2/business-mapping/viewpoints/{viewpoint-id}/global-mappings/{global-mapping-id}
    method: PUT
- name: global_mapping
  endpoint:
    path: /api/v2/business-mapping/global-mappings/{ID}
    method: DELETE
- name: alert_configuration_rules
  endpoint:
    path: /reference/get_apiv1anomaly-detectionrules
    method: GET
- name: anomalies
  endpoint:
    path: /reference/get_apiv1anomaly-detection
    method: GET
- name: alerts
  endpoint:
    path: /reference/get_apiv1anomaly-detectionalertedtrue
    method: GET
- name: alert_configuration_rules
  endpoint:
    path: /api/v1/anomaly-detection/rules
    method: GET
- name: create_alert_configuration_rule
  endpoint:
    path: /api/v1/anomaly-detection/rule
    method: POST
- name: update_alert_configuration_rule
  endpoint:
    path: /api/v1/anomaly-detection/rule
    method: PUT
- name: Delete Alert Configuration Rule
  endpoint:
    path: /api/v1/anomaly-detection/rule/{id}
    method: DELETE
- name: alerts
  endpoint:
    path: /api/v1/anomaly-detection
    method: GET
    params:
      alerted: 'true'
notes:
- Uses OAuth2 with refresh token ‚Äî requires setup of connected app in api
- Webhook integration is now available, allowing you to get your Alerts or Recommendation
  Reports via webhook.
- Gain visibility into your AWS cloud usage carbon emissions and power consumption
  directly from the Cost & Usage page.
- Customers who will try to use our old domain (mypileus.io) will be redirected to
  our new domain (umbrellacost.io).
- The API will remain untouched. We will deprecate api.mypileus.io for the next six
  months.
- The API will remain untouched.
- For MSPs - Navigating to Customer Pricing Mode, selecting a customer scope, or impersonating
  a customer will reflect rebilling data.
- This dashboard supports Multicloud and All Accounts views for certain panels.
- Uses OAuth2 with refresh token ‚Äî requires setup of connected app in Umbrella Cost
- Users can verify RI utilization via the Umbrella Cost system.
- Some objects like Contact may return nulls in deeply nested fields
- Requires setup of connected app in Umbrella
- Ensure to handle rate limits appropriately
- Reports can be accessed from the Service section for each S3 bucket, RDS DB, and
  EC2.
- Uses OAuth2 for authentication.
- Requires setup of connected app in Umbrella Cost
- Schedule Report is based on Cost & Usage Explorer, Dashboards and Assets.
- Create a new IdP App within OKTA.
- Send the information to Umbrella support and enter the login URL you receive from
  Umbrella in the newly created app.
- Requires setup of connected app in OKTA
- This is Umbrella User Management 1.0 documentation
- For User Management 2.0 please refer to SSO OKTA - UM 2.0
- Users should already be registered to Umbrella
- Follow the steps outlined for SCIM configuration
- Ensure users are registered to Umbrella before adding them in OneLogin.
- After integration, provide the URL value received from Umbrella in the OneLogin
  configuration.
- The SAML file (the metadata file) is required.
- Provide the SAML file (the metadata file) and a list of all email domains.
- To enable auto provisioning (JIT) of users, contact umbrella support to configure
  in accordance with your own Entra ID configuration.
- To enable auto provisioning (JIT) of users, contact Umbrella support to configure
  in accordance with your own Entra ID configuration.
- If you are using JumpCloud, ensure that the 'Declare Redirect Endpoint' checkbox
  is enabled.
- Changing the Processing Currency will immediately update the displayed currency
  for all users with access to the account.
- User-Session Currency setting is temporary and will only persist for the duration
  of your current session.
- Rates are based on the last business day of the previous month for AWS and GCP Accounts.
- Rates for Azure and Multicloud Accounts are based on two business days before the
  end of the previous month.
- The Roles and Users page simplifies the process of controlling data access.
- Simplifies the process of controlling data access.
- Create the required hierarchy, it will serve for data access as well as data viewing.
- Impersonation should be deployed and used sparingly.
- The role is the main building block in the Role Based Access Model (RBAC)
- A role can be assigned to multiple users.
- A user can be assigned multiple roles.
- Uses Cost Centers for data access
- 'The reseller customers permission controls the management of MSP customers: Customers,
  Customer Accounts, Billing rules, Credits, History, customer reports, Re-billing
  preferences.'
- You can assign sub-accounts from all providers to a single Cost Center.
- You can monitor the expenses incurred by that cost center.
- 'Reseller customers permission controls the management of MSP customers: Customers,
  Customer Accounts, Billing rules, Credits, History, customer reports, Re-billing
  preferences.'
- A user is linked to a role or multiple roles
- Cost centers are divisions or departments within your organization.
- Names arriving from the invoice will not be overwritten with the new account name.
- 'Analyze Business Processes: Understand how departments and teams operate, including
  workflows and dependencies.'
- 'Identify Sensitive Data and Systems: Pinpoint critical systems and sensitive data
  that require restricted access.'
- Collaboration features allow sharing of alerts, budgets, dashboards, and reports.
- Using Cost Centers has benefits for Roles and Responsibilities definition, as well
  as data viewing.
- 'Login initiated by: Either Okta or App'
- Configure Direct login from the OKTA App is optional
- Configuration in Okta for SSO
- Optional configuration in Okta for SCIM (role mapping)
- 'Single logout URL: https://login.umbrellacost.io/auth/realms/REALM_ID/broker/okta-saml/endpoint'
- 'SP Issuer: https://login.umbrellacost.io/auth/realms/REALM_ID'
- Single logout requires re-login to Okta app to re-login to Umbrella.
- 'Redirect URI: https://login.umbrellacost.io/auth/realms/REALM_ID/broker/onelogin-oidc/endpoint'
- 'Post Logout redirect URI: https://login.umbrellacost.io/auth/realms/REALM_ID/broker/onelogin-oidc/endpoint/logout_response'
- Requires setup of custom SAML app in Google Workspace
- Requires setup of connected app in OneLogin
- Client ID and Client Secret are needed for configuration
- Notifications are provided to all cloud providers.
- Notification detection is performed on an hourly basis and reflects the current
  system state (there is no history).
- Notifications are not available in All Accounts and Multi-Cloud accounts.
- Access Entra ID and go to Enterprise applications > New application > Non-gallery
  application.
- Umbrella Cost updates data every 24 hours for most provider integrations.
- Notifications are detected per payer account.
- Before starting the flow ensure that you have AWS organization permissions to create
  IAM roles.
- The account you want to onboard is a payer account (not a linked account).
- The bucket should be dedicated to Umbrella's CUR files (not contain any other CUR
  files).
- Umbrella monitors AWS cloud costs and provides personalized savings recommendations
  for companies using AWS services.
- To provide Umbrella read only access to your billing information, follow the steps
  in the onboarding articles.
- Ensure onboarding is performed on a payer account, not a linked account.
- Cost & Usage Reports (CUR) must be enabled and correctly configured.
- Exclusion is limited to one pattern only, and is compared with the linked account
  name (not the ID).
- Ensure that you have AWS organization permissions to create IAM roles.
- Use a Stack in your payer account that grants read-only permissions to all current
  and future linked accounts under your payer account.
- This ensures that any new linked accounts will automatically be included without
  requiring any action.
- The next time your invoice runs (which occurs automatically every day), you will
  start seeing recommendations.
- You have AWS organization permissions to create IAM roles.
- The account you want to onboard is a payer account (not a linked account)
- Customers should configure the process to copy the CUR file directly to our S3 bucket
  daily.
- The exclusion is limited to one pattern only, and is compared with the linked account
  name (not the ID).
- BUCKET_NAME should be replaced with your CUR S3 bucket name.
- To support recommendations for GovCloud regions, the algorithm of a specific set
  of recommendations is based only on the invoice since the CW metrics aren't accessible.
- Updated 2 months ago
- Note that the BUCKET_NAME should be replaced with your CUR S3 bucket name.
- The following policies must be added for the new recommendation to be generated
  and function properly.
- Umbrella integrates with Azure to collect detailed cost and usage data across all
  Azure services.
- This API provides additional insights into Azure commitments & resource metrics
  helping to enhance cost optimization recommendations.
- Ensure you have access to your Umbrella Cost account.
- On the Azure side, you will need the following permissions in order to complete
  the configurations.
- Ensure you have Owner, Contributor, or Global Admin role in Azure environment.
- If your storage account is protected by a firewall, you can create an export using
  an SAS key. Contact Umbrella support for more details and guidance. This option
  is relevant for Microsoft partners only.
- The best practice is to create a FOCUS export that will contain both unblended and
  amortized costs in one export.
- 'Please make sure that you select the following settings: Format = CSV, Compression
  type = none.'
- Make sure the FOCUS export version is 1.0
- Choose format = CSV.
- Choose Compression type = none.
- Your historical data in Umbrella will remain unchanged (unblended OR amortized only).
- Data fetched from the migration date onward will reflect the FOCUS export.
- If you enable historical data in the FOCUS export, please inform our support team
  to ensure it is collected and reflected in Umbrella.
- 'Before you begin, ensure that you have one of the following roles in your Azure
  environment: Owner, Contributor, or Global Admin.'
- Make sure the version of the export is 1.0.
- Best practice is to create a FOCUS export that will contain both unblended and amortized
  costs in one export.
- If the storage account is protected by a firewall, you can create an export using
  an SAS key. Contact Umbrella support for more details and guidance.
- If you are an MSP managing shared Azure billing accounts, create an app registration
  in each customer's Azure environment.
- Umbrella needs Monitoring Reader permission to analyze the usage up to the resource
  level to provide recommendations to optimize costs.
- Save the new name for the directory as you will have to enter it in Umbrella afterward.
- Data in Umbrella is updated daily.
- Umbrella Cost does not support reseller-specific export.
- For the Cloud Billing export choose the Detailed usage cost data type.
- Labels can not be backfilled- Data is available only since the label export is up
  and running
- If you are an MSP managing shared Azure billing accounts (e.g., CSP accounts used
  by multiple customers), you must create an app registration in each customer's Azure
  environment.
- You will see all your subscriptions connected to Umbrella under the Accounts > Subscriptions
  page after the invoice runs (automatically every day). Moreover, you will see new
  recommendations under the Recommendations page after the invoice run.
- The Bring Your Own Data (BYOD) capability allows users to integrate and analyze
  their own cost data within the Umbrella Cost platform.
- This capability provides flexibility by enabling organizations to import external
  cost data‚Äîwhether from cloud providers, SaaS subscriptions, or custom financial
  sources‚Äîinto the platform for deeper visibility and cost optimization insights.
- Remember - File names must not contain spaces
- The maximal size for a single file to be processed is 5Gb
- Time periods in the GCP Cloud Billing report use the Pacific Time Zone (PST) and
  observe daylight saving time shifts. However, Umbrella uses the UTC time zone. You
  may notice some cloud cost differences between Umbrella and the GCP Cloud Billing
  report due to the time zone difference.
- The FOCUS field names are validated in the onboarding process.
- Budget Monitoring is designed to address the challenges associated with managing
  cloud costs in dynamic and ever-evolving cloud environments.
- For MSPs All Account provide a holistic view for all customer cost & usage
- Requires setup of connected app in api
- 'Filter the logs to include using the following filter: resource.type="bigquery_resource"
  logName="projects/[PROJECT_ID]/logs/cloudaudit.googleapis.com%2Fdata_access" where
  [PROJECT_ID] should be replaced with your project ID.'
- Editable fields for AWS include Account Display Name, Bucket Name, Bucket Region,
  Role ARN.
- Editable fields for Azure include Account Display Name, Client Secret Value, Storage
  Account Name, Container Name, Directory Field, Export Type (Unblended, Amortized,
  Focus).
- Editable fields for GCP include Account Display Name, Project ID, Billing Dataset
  Name, Billing Table Name, Service Account Key (JSON).
- File names must not contain spaces
- Maximal size for a single file to be processed is 5Gb
- Integrating Umbrella Cost with your internal processes
- MultiCloud provides a holistic view for all customer cost & usage
- Budget Monitoring is designed to address the challenges associated with managing
  cloud costs in dynamic and ever-evolving cloud environments
- You may need to enable access based to our Allow list article.
- Generate an API token and copy it from your monday.com app.
- The webhook channel can be used as the destination channel for all Alert types and
  recommendation reports.
- It is NOT available to CUE reports and Dashboard reports.
- To use Umbrella servers for integrations, add the specified IP addresses to your
  firewall's allow list.
- The Umbrella app must be invited to the private channel for message sending.
- The user that created the integration must also be invited to the private channel.
- The Public Values list is available across the platform wherever filters are used.
- The *My Values* list may also include Umbrella-specific custom services.
- You need to enable access based to the Allow list article.
- Mandatory custom-fields in the create issue form are not needed.
- Webhook is sent by Umbrella Cost to the defined URL.
- Webhook is received within Microsoft Teams and is posted to the channel.
- Hourly Granularity isn't supported for reseller/MSP customers
- In the monday.com app, generate an API token and copy it.
- Events are shown on the Cost & Usage Explorer graph view, and can be edited and
  deleted as required.
- 'Add the following IP addresses used by Umbrella to your firewall''s allow list:
  54.144.167.4, 50.17.26.79, 54.209.134.151, 52.54.17.32, 34.233.95.115, 3.66.114.227'
- Maximal date range for hourly is 31 days, for daily is 150 days, for weekly is 168
  days, for monthly is 365 days, for quarterly is 365 days, and for yearly is 1095
  days.
- Marketplace charges are distributed evenly over time, starting from the hourly granularity.
- Only one Goal can be selected for display at any one time.
- The capability is currently supported for AWS Cloud cost
- Umbrella integrates with GreenPixie, a leading provider of usage-based sustainability
  data for hyperscaler cloud.
- Customers can enable the GreenOps carbon emission service at any given point in
  time, GreenPixie is committed to retaining the data at any given time.
- Once enabled GreenOps carbon emission data will be available only for the upcoming
  days.
- If historical data is needed Umbrella can manually run historical data per customer
  demand.
- Umbrella and GreenPixie process will not take more than 24 hours. Any failure in
  GreenPixie will not impact the general invoice processing flow.
- In the Dashboard name field, you can add a suffix to the cloned dashboard. Otherwise,
  leave the field blank and _COPY will automatically be suffixed to the dashboard
  name.
- In the Cloned panels name suffix field, add a suffix that will be added to the cloned
  panels. Otherwise, leave the field blank and _COPY will automatically be suffixed
  to the panel.
- Reports can include scheduled Cost & Usage panels, dashboards and Asset reports,
  which can be sent via email or Slack to single/multiple recipients.
- Reports can be tested. When you click 'Test' the configured recipients will receive
  the report.
- All resources that are not in use (CPU, memory, etc.) are considered to be waste.
- Waste at the node level that is not associated to any namespace is shown on the
  Kubernetes Cost & Usage Explorer as 'not allocated'.
- The agent's installation requires an access key from Umbrella, which allows the
  agent to send metrics and logs to Umbrella.
- The visibility of Kubernetes data in Umbrella depends on billing data availability
  which covers the usage data.
- The agent supports a flexible configuration for filtering metrics using PromQL subexpressions.
- Although CloudWatch Kubernetes integration is supported, the recommended option
  is Prometheus.
- K8s version is 1.22 or higher.
- You have kubectl installed and running.
- Umbrella supports metrics collection by AWS CloudWatch Agent, however, only one
  type of an agent is supported under the same Umbrella payer account.
- For more information on attaching a role to an instance, see Attaching an IAM Role
  to an Instance in the Amazon EC2 User Guide for Windows Instances.
- For more information, see Adding and Removing IAM Identity Permissions in the IAM
  User Guide.
- The agent supports flexible configuration for filtering metrics.
- Accessing Prometheus/PromQL server may require username, password, and special headers.
- You can only export data to a BigQuery dataset in the same project as your cluster.
- Umbrella cost supports one dataset per GCP project. Meaning, we support multiple
  datasets per account configuration.
- Prometheus provides a more lightweight and cost-effective solution, while CloudWatch
  may incur higher costs.
- If you're running a Kubernetes cluster outside Amazon EKS, you might not already
  have an IAM role attached to your worker nodes.
- If you want to collect EBS volume IDs in the metrics, you must add another policy
  to the IAM role attached to the instance.
- Query results within the Kubernetes Cost & Usage Explorer are limited to 500,000.
- Uses the Goals feature to monitor cost metrics more closely.
- As a preventive measure to avoid timeout for resource-heavy queries, query results
  within the Kubernetes Assets and Kubernetes Cost & Usage Explorer are limited to
  500,000.
- Query results within the Kubernetes Cost & Usage Explorer and Kubernetes Assets
  are limited to 500,000.
- In the display of tag groups per instance, you will only see the first value for
  the tag key, not multiple values.
- Using filter groups will not show what is not allocated.
- Uses Goals feature to monitor cost metrics.
- You are also prompted to refine your query if there are too many results, instead
  of not getting any data displayed.
- There can be only one GroupBy mapping
- The group by mapping rule will not have its name presented. The groupby dimension
  values will be the names of the (sub)groups created by that rule
- Visualize all your cloud costs, accurately!
- Users love Umbrella‚Äôs Cost Allocation > filter groups for grouping costs.
- 'Umbrella Cost enables you to split costs with four different options: Equal, Ratio,
  Monthly ratio or Custom.'
- Measure the business value of your cloud spend on a granular level with Business
  Mapping.
- Uses business mapping to create unit economics by customer or product.
- A Business Mapping Viewpoint is a collection of rules that enable you to get a granular
  visibility into how much each business unit costs.
- We use business mapping to create unit economics by customer or product for example.
- This approach enables precise cost allocation, better budgeting, and optimized resource
  utilization, helping businesses make informed financial decisions.
- This capability is available for AWS, Azure, GCP
- Only Admin users with Account Editor permissions can manage and apply Virtual Tags.
- 'Enrichment tags are applicable for all cloud providers: AWS, Azure, GCP, MultiCloud
  accounts.'
- If a linked account in the Enrichment Tags file doesn‚Äôt exist under the account
  where the file was uploaded, its records won‚Äôt appear in the file.
- If a linked account was moved to a different account, refresh the Enrichment Tags
  file to (delete and upload the file), in order for the new linked account will reflect
  in the data.
- Unify inconsistent cloud tags into meaningful, reusable groupings
- The CSV file is limited to 10MB (can include K8s data).
- For files larger than 10MB, use the S3 bucket option.
- Umbrella Cost recommendation engine is designed to optimize cloud resource costs.
- Savings calculation (Potential Savings/Actual Savings) is calculated based on Public
  Cost.
- The Waste Detector currently supports manual recommendation integration with Jira
  and Jira Data Center.
- Savings calculation (Potential Savings/Actual Savings) is calculated based on Public
  Cost
- The recommendations provided by Umbrella may include several alternatives, allowing
  you the flexibility to choose recommendations that align with your organization's
  internal considerations.
- All S3 recommendations are active and available without 'S3 storage lens advanced'.
- This recommendation identifies IPs that are active, but are no longer attached to
  any instance.
- AWS charges 0.005 per IP, per hour for all public IPv4 addresses, whether it's attached
  to AWS service or not.
- Over-provisioning Amazon ECS task CPU and memory incurs unnecessary costs, while
  under-provisioning them can lead to poor application performance.
- Since AWS Extended Support for OpenSearch will only take effect starting November
  2025, the exact usage type names and pricing details are not yet available.
- Umbrella delivers actionable recommendations so you can optimize task CPU and memory
  for your Amazon ECS services running on Fargate.
- Provisioned throughput pricing is designed for situations where you need rock-solid,
  consistent performance.
- You can choose between 1-month and 6-month commitments.
- AWS Extended Support for OpenSearch will only take effect starting November 2025.
- Unused secrets can be misused by former users who no longer need access to these
  secrets.
- Many keys are not being deleted even when they are no longer used since no one knows
  about them.
- As long as the old key is not deleted the charges continue.
- Disabled key are still being charged.
- Invoice CUE file does not include any details on KMS which makes it more difficult.
- KMS record does not include usage details, so cannot tell when was the key last
  used.
- Analyzing the usage over the past 30 days and recommending to purchase reserved
  capacity to optimize costs.
- Recommendation is being retrieved from the Azure advisor.
- The recommendation is being retrieved from the Azure advisor, filtering related
  Kusto clusters.
- Identifying resource as idle, if not connected to any IP. The recommendation is
  being retrieved from the Azure advisor.
- Updated 5 months ago
- The effective time frame starts at the day where the workload's request value remained
  consistent.
- Workloads must have sufficient settings consistency to be candidates for rightsizing
  recommendations.
- The recommendation is being retrieved from the Azure advisor.
- The updated preferences will be used from the next invoice for new recommendations.
- The updated preferences will immediately close an existing recommendation, it will
  be effective after 8 days due to a timeout mechanism.
- The platform's median monthly accuracy is 98.5%.
- The anomaly detection engine runs on a daily basis, processing up to 4 previous
  months of cost data.
- Umbrella currently presents anomalies with impact >=50$ to reduce noise.
- The alert can be specific to the account or service.
- If the anomaly is open for several days, you will get notified only once after the
  anomaly meets the alert conditions.
- An Anomaly alert will be sent once the alert was configured with an email recipient.
- Direct customers will receive the alert email including the top 5 anomalies for
  this account, separated by cost center if one was configured.
- MSP will receive the alert email including the top 5 anomalies for this account
  separated by customer.
- Workload rightsizing is about adjusting the workload request of compute resources
  (CPU and Memory) to the actual needs of the workload.
- Workloads are consumers of compute resources, therefore have direct implication
  for incurring costs.
- The summary can be exported into CSV.
- Alert rules can be created for service cost and commitment expiration.
- Age-recive recommendations are are on this age and up
- the report will be generated and send as a test, also in cases where there are no
  recommendations that are ansering the report criteria
- To enable commitment alerts, make sure Umbrella has the required permissions to
  access your commitment data.
- If your Azure account type is EA, make sure you change the scope to 'Tenant Root
  Group'.
- To generate the most accurate forecasts, consider trends, seasonality, special events,
  adaptivity, and robustness to anomalies.
- To allow Umbrella to read your RI utilization, including all current and future
  reservations, you need to provide Umbrella with the 'reader' role.
- Make sure you have permissions to manage reservations, such as 'User Access Administrator'.
- To form the metric baseline you'll need a minimum of one-month historical data on
  a running system.
- S3 Usage data is calculated from the date of onboarding onwards. Historical information
  prior to your first invoice date is not available.
- Alert can be specific to the account or service.
- Daily impact can be set for cost spikes.
- The alert status is set to 'Open' when the rule's criteria are met.
- The alert status is set to 'Closed' when the anomaly is closed or the related alert
  rule is deleted.
- Alert triggers are retained for the same duration as the metric data they contain
  within them.
- Anomalies are retained for good.
- Budget Summary provides a clear, month-by-month view of all budgets.
- The rule changes will not immediately appear in customer costs; rebilling needs
  to run first (automatically occurs daily).
- After creating or modifying a billing rule, the re-billing process must be executed
  to ensure the updated logic is applied to customer costs.
- Displays the realized savings from RIs across each AWS service, helping quantify
  financial impact.
- Identifies reservations that are not being matched by usage, pointing to potential
  overprovisioning or incorrect scoping.
- Users need to provide 'reader' role for Umbrella to access RI utilization.
- Access Control should be set per Reservation if tenant level permissions are not
  available.
- Credits can‚Äôt be given for the previous month after the 20th of the current month.
- Once created, Credits cannot be edited but can be cloned and duplicated (with a
  unique name) along with its defined settings.
- The rebilling process will block EDP, SPP, Private Pricing, and Tax from the customer
  billing for both Single/ Multiple Customers.
- The month-to-date Azure cost reflects the Azure cost but excludes Refund, Solution
  Provider Program Discount, and Tax.
- The SQL DB Costs screen is designed to simplify your SQL DB visibility and provides
  a comprehensive overview of your SQL DB.
- 'The screen includes several columns: DB Name, Subscriptions, Type, Region, Cost,
  Live, Last Active Date.'
- Token is valid for 24 hours
- Recommended to use basic authentication
- Request rate limits are based on requests per apikey and API end point
- Each apikey + API end point combo has its own limit.
- Each paginated API call is limited to returning 12000 rows.
- 'Enhanced Portfolio: Expand your range of offerings without needing in-house development.'
- 'Customer Trust: Strengthen customer loyalty by offering a wider range of branded
  solutions.'
- 'Reduced Risk: Minimize the financial risk associated with new product development.'
- The option to apply or edit Credits for the previous month after the 20th of the
  current month is not permitted.
- Credits cannot be edited but can be cloned and duplicated.
- Your first account must be onboarded using The Umbrella Cost user interface.
- Additional accounts can be onboarded using API requests.
- The displayed months are those that have historically completed the rebilling process
  successfully.
- In order to compare the reseller cost to the Cost and Usage Explorer you should
  perform adjustments regarding 'Service' and 'Cost Type'.
- Billing statements can be downloaded per customer by selecting a customer and the
  file format.
- The Billing status section provides resellers with month-to-date billing visibility,
  including cost and margin breakdowns per customer.
- 'Use AWS terminology in the account fields: accountId, linkedAccountIds'
- If the expected number of records is over 500K, you will receive HTTP response code
  206 and the first 500K records.
- The Get Divisions API has been deprecated. Please use the Get Cost Centers API instead.
- Cost center ID can be blank. To use all cost centers, just keep the 3rd segment
  of the key blank, after the colon.
- Use this API to get K8s and non-K8s cost assets.
- Set the isK8S parameter to '1' to get K8s assets.
- You can use up to two levels of groupBy fields in each request.
- Remember to URL-encode the square brackets and colon before sending the request.
- OAuth2 authentication is required
- Set the isK8S parameter to "1" to get K8s assets.
- The nextToken field will be included in the response to indicate there is additional
  information to retrieve.
- Retrieves recommendations according to status and other filters
- Integrate Umbrella Cost with 3rd party workflow/ticketing platforms and update the
  progress back to Umbrella Cost.
- You need to provide the full list of the mappings in the account for the ranking
  to work.
- Use this request to download the current file to your local drive.
- The commonParams header is relevant for resellers.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- No fundamental changes.
- '401 Unauthorized: Check client credentials and token expiration'
- '429 Too Many Requests: Rate limit exceeded, slow down requests'
- '401 Unauthorized: Check your SAML configuration and user registration.'
- 'USER_NOT_FOUND: Check if the user ID is correct.'
- 'ROLE_NOT_FOUND: Ensure the role exists before assigning.'
- AWS Account Onboarding Failure
- AWS Account Onboarding Validation Failure
- If no action is taken, Umbrella will be unable to provide accurate and complete
  information about your reservations and savings plans, such as alerts for upcoming
  reservation expirations.
- If no action is taken, Umbrella will be unable to provide accurate and complete
  information about your reservations and savings plans.
- 'Access Denied: Ensure your application has the right permissions.'
- 'Invalid Role Assignment: Check the role and ensure it''s correctly assigned.'
- In case your Azure account type is EA, make sure you change the scope to 'Tenant
  Root Group'.
- '429: Requests are blocked with response code 429'
- '401'
- '403'
- '404'
- '500'
- '401 Unauthorized: Recheck API key or token'
auth_info:
  mentioned_objects:
  - Client ID
  - Client secret
  - Issuer
  - Identity Provider
  - Service Provider
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.umbrellacost.io
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.umbrellacost.io/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
