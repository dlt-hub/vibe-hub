resources:
- name: fetch_wishlist_social_count
  endpoint:
    path: /swat/wishlist/getSocialCount
    method: GET
    data_selector: data
    params: {}
- name: swym_wishlist
  endpoint:
    path: /services/data/vXX.X/sobjects/SwymWishlist
    method: GET
    data_selector: settings
    params: {}
- name: wishlist_items
  endpoint:
    path: /fetchWishlist
    method: GET
    data_selector: lists
    params: {}
- name: fetch_wishlist
  endpoint:
    path: /fetch-lists
    method: GET
    data_selector: lists
- name: wishlist_settings
  endpoint:
    path: /settings
    method: GET
    data_selector: settings
    params: {}
- name: swym_wishlist_primary_button_color
  endpoint:
    params:
      default: '#1773B0'
- name: swym_wishlist_primary_button_text_color
  endpoint:
    params:
      default: '#ffffff'
- name: swym_wishlist_title
  endpoint:
    params:
      default: My Wishlist
- name: swym_wishlist_font
  endpoint:
    params:
      default: helvetica_n4
- name: swym_wishlist_show_vendor
  endpoint:
    params:
      default: true
- name: swym_wishlist_show_price
  endpoint:
    params:
      default: true
- name: swym_wishlist_show_addtocart
  endpoint:
    params:
      default: true
- name: swym_wishlist_show_delete_item
  endpoint:
    params:
      default: true
- name: swym_wishlist_item_cta_addtocart
  endpoint:
    params:
      default: Add to cart
- name: swym_wishlist_item_cta_addingtocart
  endpoint:
    params:
      default: Adding to cart
- name: swym_wishlist_item_cta_addedtocart
  endpoint:
    params:
      default: Added to cart
- name: swym_wishlist_item_cta_soldout
  endpoint:
    params:
      default: Sold out
- name: swym_wishlist_item_cta_unavailable
  endpoint:
    params:
      default: Unavailable
- name: swym_wishlist_empty_description
  endpoint:
    params:
      default: Your wishlist is empty.
- name: swym_wishlist_empty_action_button_cta
  endpoint:
    params:
      default: Discover the Collection Now
- name: custom_wishlist
  endpoint:
    path: /swymcs-custom-wishlist
    method: GET
- name: settings
  endpoint:
    path: /settings
    method: GET
    data_selector: settings
    params: {}
- name: fetch_wishlist
  endpoint:
    path: /fetch-lists
    method: GET
    data_selector: lists
- name: wishlist
  endpoint:
    path: /fetchWishlist
    method: GET
    data_selector: lists
    params: {}
- name: wishlist_settings
  endpoint:
    path: /settings
    method: GET
    data_selector: settings
    params: {}
- name: wishlist_presets
  endpoint:
    path: /presets
    method: GET
    data_selector: presets
    params: {}
- name: wishlist_popup
  endpoint:
    path: /swymcs/wishlist/popup
    method: GET
    data_selector: popup_content
- name: product
  endpoint:
    path: /productUrl.js
    method: GET
    data_selector: product
    params: {}
- name: fetchLists
  endpoint:
    path: /fetch-lists
    method: GET
- name: createList
  endpoint:
    path: /create-list
    method: POST
- name: addProductToLists
  endpoint:
    path: /add-product-to-many-lists
    method: POST
- name: removeProductFromLists
  endpoint:
    path: /remove-a-product-from-many-lists
    method: POST
- name: swym-wishlist-popup
  endpoint:
    path: /swym-wishlist-popup
    method: GET
    data_selector: records
- name: wishlist_popup
  endpoint:
    path: /custom-wishlist-page-beta-copy
    method: GET
    data_selector: data
- name: fetch_lists
  endpoint:
    path: /fetch-lists
    method: GET
- name: create_list
  endpoint:
    path: /create-list
    method: POST
- name: add_to_list
  endpoint:
    path: /add-to-list
    method: POST
- name: delete_from_list
  endpoint:
    path: /delete-from-list
    method: DELETE
- name: swym_wishlist_button
  endpoint:
    path: /swymcs-wishlist-button
    method: GET
    data_selector: records
    params: {}
- name: wishlist
  endpoint:
    path: /api/wishlist
    method: GET
    data_selector: items
    params: {}
- name: wishlist
  endpoint:
    path: /wishlist
    method: GET
    data_selector: lists
- name: add_to_wishlist
  endpoint:
    path: /wishlist/add
    method: POST
    data_selector: addedListItem
- name: remove_from_wishlist
  endpoint:
    path: /wishlist/remove
    method: DELETE
    data_selector: deletedProduct
- name: variant_selector
  endpoint:
    path: /swym/collections/variant_selector
    method: GET
    data_selector: variants
- name: product
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: products
- name: wishlist
  endpoint:
    path: /api/v1/wishlists
    method: GET
    data_selector: wishlists
- name: variant_selector
  endpoint:
    path: /services/data/vXX.X/sobjects/VariantSelector
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /products.json
    method: GET
    data_selector: product
    params: {}
- name: swym-collections-logic.js
  endpoint:
    path: /swym-collections-logic.js
    method: GET
- name: swym-collections-modal.liquid
  endpoint:
    path: /swym-collections-modal.liquid
    method: GET
- name: swym-collections.css
  endpoint:
    path: /swym-collections.css
    method: GET
- name: swym-css-variables.liquid
  endpoint:
    path: /swym-css-variables.liquid
    method: GET
- name: settings_schema.json
  endpoint:
    path: /settings_schema.json
    method: GET
- name: settings
  endpoint:
    path: /settings
    method: GET
    data_selector: settings
    params: {}
- name: product
  endpoint:
    path: /products/{{card_product.id}}
    method: GET
    data_selector: product
    params: {}
- name: variant
  endpoint:
    path: /products/{{card_product.id}}/variants/{{card_product.variants[0].id}}
    method: GET
    data_selector: variant
    params: {}
- name: font_weight
  endpoint:
    path: swym_vs_body_select_list_font_weight
    method: GET
    data_selector: default
    params:
      min: 100
      max: 900
      step: 100
      default: 400
- name: text_alignment
  endpoint:
    path: swym_vs_body_select_list_text_alignment
    method: GET
    data_selector: default
    params:
      options:
      - value: left
        label: Left
      - value: center
        label: Center
      - value: right
        label: Right
      default: left
- name: text_color
  endpoint:
    path: swym_vs_body_select_list_text_color
    method: GET
    data_selector: default
    params:
      default: '#4D4D4D'
- name: font_size
  endpoint:
    path: swym_vs_body_lists_font_size
    method: GET
    data_selector: default
    params:
      min: 2
      max: 40
      default: 12
      step: 1
      unit: px
- name: checkbox_placement
  endpoint:
    path: swym_vs_body_lists_checkbox_placement
    method: GET
    data_selector: default
    params:
      default: true
- name: create_list_button_text
  endpoint:
    path: createListButtonText
    method: GET
    data_selector: default
    params:
      default: + Create New Wishlist
- name: create_list_popup_title
  endpoint:
    path: createListModalTitle
    method: GET
    data_selector: default
    params:
      default: Create New Wishlist
- name: list_name_error
  endpoint:
    path: listNameError
    method: GET
    data_selector: default
    params:
      default: List name must be atleast 3 characters and lesser than 50 characters!
- name: swym_vs_text_font_family
  endpoint:
    path: swym_vs_text_font_family
    method: GET
- name: swym_vs_bg_color
  endpoint:
    path: swym_vs_bg_color
    method: GET
- name: swym_vs_overlay_bg_color
  endpoint:
    path: swym_vs_overlay_bg_color
    method: GET
- name: swym_vs_overlay_opacity
  endpoint:
    path: swym_vs_overlay_opacity
    method: GET
- name: swym_vs_enable_border
  endpoint:
    path: swym_vs_enable_border
    method: GET
- name: swym_vs_border_color
  endpoint:
    path: swym_vs_border_color
    method: GET
- name: swym_vs_border_width
  endpoint:
    path: swym_vs_border_width
    method: GET
- name: swym_vs_enable_border_radius
  endpoint:
    path: swym_vs_enable_border_radius
    method: GET
- name: swym_vs_border_radius
  endpoint:
    path: swym_vs_border_radius
    method: GET
- name: swym_vs_layout
  endpoint:
    path: swym_vs_layout
    method: GET
- name: desktopModalTitle
  endpoint:
    path: desktopModalTitle
    method: GET
- name: swym_vs_header_close_icon
  endpoint:
    path: swym_vs_header_close_icon
    method: GET
- name: swym_vs_header_bg_color
  endpoint:
    path: swym_vs_header_bg_color
    method: GET
- name: swym_vs_header_text_color
  endpoint:
    path: swym_vs_header_text_color
    method: GET
- name: swym_vs_header_text_alignment
  endpoint:
    path: swym_vs_header_text_alignment
    method: GET
- name: swym_vs_header_text_font_size
  endpoint:
    path: swym_vs_header_text_font_size
    method: GET
- name: swym_vs_header_text_font_weight
  endpoint:
    path: swym_vs_header_text_font_weight
    method: GET
- name: swym_vs_body_text_color
  endpoint:
    path: swym_vs_body_text_color
    method: GET
- name: swymShowVendor
  endpoint:
    path: swymShowVendor
    method: GET
- name: swym_vs_body_vendor_font_size
  endpoint:
    path: swym_vs_body_vendor_font_size
    method: GET
- name: swym_vs_body_vendor_font_weight
  endpoint:
    path: swym_vs_body_vendor_font_weight
    method: GET
- name: swym_vs_body_vendor_text_color
  endpoint:
    path: swym_vs_body_vendor_text_color
    method: GET
- name: swym_vs_body_title_font_size
  endpoint:
    path: swym_vs_body_title_font_size
    method: GET
- name: swym_vs_body_title_font_weight
  endpoint:
    path: swym_vs_body_title_font_weight
    method: GET
- name: swym_vs_body_title_text_color
  endpoint:
    path: swym_vs_body_title_text_color
    method: GET
- name: swym_vs_body_variant_title_font_size
  endpoint:
    path: swym_vs_body_variant_title_font_size
    method: GET
- name: swym_vs_body_variant_title_font_weight
  endpoint:
    path: swym_vs_body_variant_title_font_weight
    method: GET
- name: swym_vs_body_variant_title_text_color
  endpoint:
    path: swym_vs_body_variant_title_text_color
    method: GET
- name: swym_vs_body_variant_price_font_size
  endpoint:
    path: swym_vs_body_variant_price_font_size
    method: GET
- name: swym_vs_body_variant_price_font_weight
  endpoint:
    path: swym_vs_body_variant_price_font_weight
    method: GET
- name: swym_vs_body_variant_price_text_color
  endpoint:
    path: swym_vs_body_variant_price_text_color
    method: GET
- name: singleWishlistButtonAddText
  endpoint:
    path: singleWishlistButtonAddText
    method: GET
- name: singleWishlistButtonRemoveText
  endpoint:
    path: singleWishlistButtonRemoveText
    method: GET
- name: defaultWishlistTitle
  endpoint:
    path: defaultWishlistTitle
    method: GET
- name: addedToSingleList
  endpoint:
    path: addedToSingleList
    method: GET
- name: addedToMultipleLists
  endpoint:
    path: addedToMultipleLists
    method: GET
- name: selectPreferenceText
  endpoint:
    path: selectPreferenceText
    method: GET
- name: swym_vs_body_preferences_font_size
  endpoint:
    path: swym_vs_body_preferences_font_size
    method: GET
- name: swym_vs_body_preferences_font_weight
  endpoint:
    path: swym_vs_body_preferences_font_weight
    method: GET
- name: swym_vs_body_preferences_text_alignment
  endpoint:
    path: swym_vs_body_preferences_text_alignment
    method: GET
- name: swym_vs_body_preferences_text_color
  endpoint:
    path: swym_vs_body_preferences_text_color
    method: GET
- name: swym_variant_selector_enable_border
  endpoint:
    path: swym_variant_selector_enable_border
    method: GET
- name: swym_variant_selector_border_color
  endpoint:
    path: swym_variant_selector_border_color
    method: GET
- name: swym_variant_selector_border_width
  endpoint:
    path: swym_variant_selector_border_width
    method: GET
- name: swym_variant_selector_enable_border_radius
  endpoint:
    path: swym_variant_selector_enable_border_radius
    method: GET
- name: sswym_variant_selector_border_radius
  endpoint:
    path: sswym_variant_selector_border_radius
    method: GET
- name: swym_variant_selector_padding
  endpoint:
    path: swym_variant_selector_padding
    method: GET
- name: swym_variant_selector_text_alignment
  endpoint:
    path: swym_variant_selector_text_alignment
    method: GET
- name: swym_vs_option_title_font_size
  endpoint:
    path: swym_vs_option_title_font_size
    method: GET
- name: swym_vs_option_title_font_weight
  endpoint:
    path: swym_vs_option_title_font_weight
    method: GET
- name: swym_vs_option_title_text_color
  endpoint:
    path: swym_vs_option_title_text_color
    method: GET
- name: swym_vs_option_values_font_size
  endpoint:
    path: swym_vs_option_values_font_size
    method: GET
- name: swym_vs_option_values_font_weight
  endpoint:
    path: swym_vs_option_values_font_weight
    method: GET
- name: swym_vs_option_values_text_color
  endpoint:
    path: swym_vs_option_values_text_color
    method: GET
- name: swym_selected_filter_label_color
  endpoint:
    path: swym_selected_filter_label_color
    method: GET
- name: swym_selected_filter_label_bg_color
  endpoint:
    path: swym_selected_filter_label_bg_color
    method: GET
- name: addToWishlistTextNoListSelected
  endpoint:
    path: addToWishlistTextNoListSelected
    method: GET
- name: addToWishlistTextAddState
  endpoint:
    path: addToWishlistTextAddState
    method: GET
- name: addToWishlistTextUpdateState
  endpoint:
    path: addToWishlistTextUpdateState
    method: GET
- name: swym_vs_add_to_list_btn_height
  endpoint:
    path: swym_vs_add_to_list_btn_height
    method: GET
- name: swym_vs_add_to_list_btn_font_size
  endpoint:
    path: swym_vs_add_to_list_btn_font_size
    method: GET
- name: swym_vs_add_to_list_btn_font_weight
  endpoint:
    path: swym_vs_add_to_list_btn_font_weight
    method: GET
- name: swym_vs_add_to_list_btn_text_color
  endpoint:
    path: swym_vs_add_to_list_btn_text_color
    method: GET
- name: swym_vs_add_to_list_btn_bg_color
  endpoint:
    path: swym_vs_add_to_list_btn_bg_color
    method: GET
- name: swym_vs_add_to_list_btn_text_alignment
  endpoint:
    path: swym_vs_add_to_list_btn_text_alignment
    method: GET
- name: swym_vs_add_to_list_btn_enable_border
  endpoint:
    path: swym_vs_add_to_list_btn_enable_border
    method: GET
- name: swym_vs_add_to_list_btn_border_color
  endpoint:
    path: swym_vs_add_to_list_btn_border_color
    method: GET
- name: swym_vs_add_to_list_btn_border_width
  endpoint:
    path: swym_vs_add_to_list_btn_border_width
    method: GET
- name: swym_vs_add_to_list_btn_enable_border_radius
  endpoint:
    path: swym_vs_add_to_list_btn_enable_border_radius
    method: GET
- name: swym_vs_add_to_list_btn_border_radius
  endpoint:
    path: swym_vs_add_to_list_btn_border_radius
    method: GET
- name: swym_vs_add_to_list_disabled_btn_text_color
  endpoint:
    path: swym_vs_add_to_list_disabled_btn_text_color
    method: GET
- name: swym_vs_add_to_list_disabled_btn_bg_color
  endpoint:
    path: swym_vs_add_to_list_disabled_btn_bg_color
    method: GET
- name: selectWishlistText
  endpoint:
    path: selectWishlistText
    method: GET
- name: swym_vs_body_select_list_font_size
  endpoint:
    path: swym_vs_body_select_list_font_size
    method: GET
- name: generate_regid
  endpoint:
    path: /storeadmin/v3/user/generate-regid
    method: POST
    data_selector: regid
- name: guest_validate_sync
  endpoint:
    path: /storeadmin/v3/user/guest-validate-sync
    method: POST
    data_selector: sync
- name: generate_regid
  endpoint:
    path: /api/genrateRegid/
    method: POST
    data_selector: data
- name: validate_sync_regid
  endpoint:
    path: /api/validateSyncRegid/
    method: POST
    data_selector: data
- name: update_ctx
  endpoint:
    path: /api/v3/lists/update-ctx
    method: POST
    data_selector: data
- name: fetch_lists
  endpoint:
    path: /api/v3/lists/fetch-lists
    method: POST
    data_selector: data
- name: create_list
  endpoint:
    path: /api/v3/lists/create
    method: POST
    data_selector: data
- name: get_wishlist_social_count
  endpoint:
    path: /api/v3/product/wishlist/social-count
    method: POST
    data_selector: data
- name: wishlist
  endpoint:
    path: /api/wishlist
    method: GET
    data_selector: records
- name: wishlist
  endpoint:
    path: /api/store-apis
    method: GET
    data_selector: lists
    params: {}
- name: wishlist
  endpoint:
    path: /api/wishlist
    method: GET
    data_selector: lists
- name: add_to_wishlist
  endpoint:
    path: /api/wishlist/add
    method: POST
    data_selector: response
- name: create_list
  endpoint:
    path: /api/wishlist/create
    method: POST
    data_selector: response
- name: fetch_list
  endpoint:
    path: /api/wishlist/fetch
    method: GET
    data_selector: response
- name: fetchPublicList
  endpoint:
    path: /callFetchPublicListAPI
    method: GET
    data_selector: response
    params: {}
- name: shareEmail
  endpoint:
    path: /callShareEmailAPI
    method: POST
    data_selector: response
    params: {}
- name: copyLink
  endpoint:
    path: /callCopyLinkAPI
    method: POST
    data_selector: response
    params: {}
- name: wishlist
  endpoint:
    path: /api/wishlist
    method: GET
    data_selector: items
- name: swymAccessToken
  endpoint:
    path: /api/token
    method: POST
    data_selector: token
- name: deleteProductFromWishlist
  endpoint:
    path: /api/wishlist/delete
    method: DELETE
    data_selector: response
- name: fetch_wishlisted_products
  endpoint:
    path: /api/v3/lists/fetch-list-with-contents
    method: POST
- name: delete_product_from_wishlist
  endpoint:
    path: /api/v3/lists/update-ctx
    method: POST
- name: mark_public_list
  endpoint:
    path: /api/v3/lists/markPublic
    method: POST
- name: share_email
  endpoint:
    path: /api/v3/lists/emailList
    method: POST
- name: copy_link
  endpoint:
    path: /api/v3/lists/reportShare
    method: POST
- name: custom_wishlist_settings
  endpoint:
    path: /settings
    method: GET
    data_selector: settings
- name: swymcs-custom-wishlist
  endpoint:
    path: /swymcs-custom-wishlist
    method: GET
    data_selector: lists
    params: {}
- name: fetchWishlist
  endpoint:
    path: /fetchLists
    method: GET
    data_selector: lists
    params: {}
- name: settings
  endpoint:
    path: /services/data/vXX.X/sobjects/Settings
    method: GET
    data_selector: settings
    params: {}
- name: swym_wishlist_primary_button_color
  endpoint:
    path: /settings/swym_wishlist_primary_button_color
    method: GET
    data_selector: default
- name: swym_wishlist_primary_button_text_color
  endpoint:
    path: /settings/swym_wishlist_primary_button_text_color
    method: GET
    data_selector: default
- name: swym_wishlist_title
  endpoint:
    path: /settings/swym_wishlist_title
    method: GET
    data_selector: default
- name: swym_wishlist_font
  endpoint:
    path: /settings/swym_wishlist_font
    method: GET
    data_selector: default
- name: swym_wishlist_show_vendor
  endpoint:
    path: /settings/swym_wishlist_show_vendor
    method: GET
    data_selector: default
- name: swym_wishlist_show_price
  endpoint:
    path: /settings/swym_wishlist_show_price
    method: GET
    data_selector: default
- name: swym_wishlist_show_addtocart
  endpoint:
    path: /settings/swym_wishlist_show_addtocart
    method: GET
    data_selector: default
- name: swym_wishlist_show_delete_item
  endpoint:
    path: /settings/swym_wishlist_show_delete_item
    method: GET
    data_selector: default
- name: swym_wishlist_item_cta_addtocart
  endpoint:
    path: /settings/swym_wishlist_item_cta_addtocart
    method: GET
    data_selector: default
- name: swym_wishlist_item_cta_addingtocart
  endpoint:
    path: /settings/swym_wishlist_item_cta_addingtocart
    method: GET
    data_selector: default
- name: swym_wishlist_item_cta_addedtocart
  endpoint:
    path: /settings/swym_wishlist_item_cta_addedtocart
    method: GET
    data_selector: default
- name: swym_wishlist_item_cta_soldout
  endpoint:
    path: /settings/swym_wishlist_item_cta_soldout
    method: GET
    data_selector: default
- name: swym_wishlist_item_cta_unavailable
  endpoint:
    path: /settings/swym_wishlist_item_cta_unavailable
    method: GET
    data_selector: default
- name: swym_wishlist_empty_description
  endpoint:
    path: /settings/swym_wishlist_empty_description
    method: GET
    data_selector: default
- name: swym_wishlist_empty_action_button_cta
  endpoint:
    path: /settings/swym_wishlist_empty_action_button_cta
    method: GET
    data_selector: default
- name: generateRegID
  endpoint:
    path: storeadmin/v3/user/generate-regid
    method: POST
    data_selector: ''
    params: {}
- name: guestUserSync
  endpoint:
    path: storeadmin/v3/user/guest-validate-sync
    method: POST
    data_selector: ''
    params: {}
- name: fetch_wishlist_social_count
  endpoint:
    path: /fetch-wishlist-social-count
    method: GET
- name: product_data
  endpoint:
    path: /.json
    method: GET
    data_selector: productData
- name: fetch_wishlist_social_count
  endpoint:
    path: /fetch-wishlist-social-count
    method: GET
    data_selector: data
- name: save_for_later
  endpoint:
    path: /save-for-later
    method: POST
    data_selector: data
- name: fetch_wishlist_social_count
  endpoint:
    path: /fetch-wishlist-social-count
    method: GET
- name: save_for_later
  endpoint:
    path: /save-for-later
    method: POST
- name: fetch_lists
  endpoint:
    path: /fetchLists
    method: GET
    data_selector: lists
- name: product_data
  endpoint:
    path: /productData
    method: GET
    data_selector: productData
- name: fetch_wishlist_social_count
  endpoint:
    path: /fetch-wishlist-social-count
    method: GET
    data_selector: data
    params: {}
- name: save_for_later
  endpoint:
    path: /save-for-later
    method: POST
    data_selector: data
    params: {}
- name: product_data
  endpoint:
    path: /.js
    method: GET
    data_selector: productData
    params: {}
- name: fetch_lists
  endpoint:
    path: /lists
    method: GET
    data_selector: items
    params: {}
- name: fetch_list_contents
  endpoint:
    path: /lists/{list_id}/contents
    method: GET
    data_selector: items
    params: {}
- name: create_list
  endpoint:
    path: /api/create-list
    method: POST
    data_selector: list
    params: {}
- name: delete_list
  endpoint:
    path: /docs/delete-a-list
    method: DELETE
    data_selector: success
    params: {}
- name: update_list
  endpoint:
    path: /swat/updateList
    method: POST
    data_selector: updatedListObj
    params: {}
- name: fetchLists
  endpoint:
    path: /fetch-lists
    method: GET
    data_selector: lists
    params: {}
- name: fetch_list_details
  endpoint:
    path: /fetch-list-details
    method: GET
    data_selector: list
    params:
      lid: 59179e9f-139d-4857-bcdd-3ad88a38b47d
- name: list_contents
  endpoint:
    path: /fetch-list-contents
    method: GET
    data_selector: ListContents
- name: fetch_user_lists
  endpoint:
    path: /swat/wishlist/fetchUserLists
    method: GET
    data_selector: data
- name: paginated_list_contents
  endpoint:
    path: /swat/wishlist/fetchPaginatedList
    method: POST
    data_selector: data.listcontents
- name: add_to_list
  endpoint:
    path: /api/v1/addToList
    method: POST
    data_selector: success
    params: {}
- name: delete_from_list
  endpoint:
    path: /swat/deleteFromList
    method: DELETE
    data_selector: deletedProduct
    params: {}
- name: update_list_item
  endpoint:
    path: /docs/update-list-item
    method: POST
    data_selector: records
    params: {}
- name: add_products_to_list
  endpoint:
    path: /api/v2.0/addProductsToList
    method: POST
    data_selector: response
    params: {}
- name: remove_products
  endpoint:
    path: /api/remove-products
    method: POST
    data_selector: removedProducts
    params:
      lid: guid
      products: array
- name: add_product_to_lists
  endpoint:
    path: /add-product-to-many-lists
    method: POST
    data_selector: response
    params: {}
- name: remove_product_from_lists
  endpoint:
    path: /swat/removeProductFromLists
    method: POST
    data_selector: response
    params: {}
- name: custom_item
  endpoint:
    path: /addCustomProductToList
    method: POST
    data_selector: data
    params: {}
- name: markListPublic
  endpoint:
    path: /markListPublic
    method: POST
    data_selector: response
    params:
      lid: guid
- name: generateSharedListURL
  endpoint:
    path: /generateSharedListURL
    method: POST
    data_selector: response
    params: {}
- name: sendListViaEmail
  endpoint:
    path: /swat/sendListViaEmail
    method: POST
    data_selector: response
    params: {}
- name: shareListSocial
  endpoint:
    path: /swat/shareListSocial
    method: POST
    data_selector: response
    params: {}
- name: add_comment
  endpoint:
    path: /swat.addComment
    method: POST
    data_selector: listcomments
- name: list_comments
  endpoint:
    path: /fetch-list-comments
    method: GET
    data_selector: results
    params:
      options.lid: list-id
      options.limit: 100
- name: add_comment
  endpoint:
    path: /add-comment
    method: POST
    data_selector: listitemcomments
    params: {}
- name: fetchListItemComments
  endpoint:
    path: /fetch-comments-in-product
    method: GET
    data_selector: results
    params:
      lid: list-id
      empi: 123
      epi: 111
- name: delete_comment
  endpoint:
    path: /delete-comment
    method: DELETE
    data_selector: d
    params: {}
- name: save_shopper_context
  endpoint:
    path: /save-shopper-context
    method: POST
    data_selector: response
    params: {}
- name: disconnect_shopper_context
  endpoint:
    path: /disconnect-shopper-context
    method: DELETE
    data_selector: response
    params: {}
- name: save_shopper_context
  endpoint:
    path: /docs/save-shopper-context-api
    method: POST
    data_selector: message
    params: {}
- name: disconnect_shopper_context
  endpoint:
    path: /swat/disconnectShopperContext
    method: POST
    data_selector: null
    params: {}
- name: wishlist
  endpoint:
    path: /docs/wishlist
    method: GET
    data_selector: records
- name: unsubscribe
  endpoint:
    path: /unsubscribe
    method: POST
    data_selector: response
- name: Triggered UI Events
  endpoint:
    path: /docs/triggered-ui-events
    method: GET
    data_selector: events
    params: {}
- name: customer_info
  endpoint:
    path: /swat/JSEvents/customerInfoRefreshed
    method: GET
    data_selector: authn
    params: {}
- name: added_to_wishlist_event
  endpoint:
    path: /docs/added-to-wishlist-event
    method: GET
    data_selector: data
    params: {}
- name: removed_from_wishlist_event
  endpoint:
    path: /docs/removed-from-wishlist-event
    method: GET
    data_selector: success.json
    params: {}
- name: added_to_cart_event
  endpoint:
    path: /docs/added-to-cart-from-wishlist-ui-event
    method: GET
    data_selector: console.log
    params: {}
- name: initializeActionButtons
  endpoint:
    path: /swat/initializeActionButtons
    method: POST
    data_selector: response
    params: {}
- name: initialize_save_for_later
  endpoint:
    path: /swat/SaveForLater/init
    method: POST
    data_selector: list
- name: add_product
  endpoint:
    path: /docs/add-product-to-save-for-later
    method: POST
    data_selector: itemsadded
    params: {}
- name: remove_products
  endpoint:
    path: /remove-products
    method: POST
    data_selector: itemsdeleted
    params: {}
- name: fetch_all_products
  endpoint:
    path: /fetch-all-products
    method: GET
    data_selector: response
    params: {}
- name: list
  endpoint:
    path: /api/save-for-later/list
    method: GET
    data_selector: list
    params: {}
- name: userinfo
  endpoint:
    path: /api/save-for-later/userinfo
    method: GET
    data_selector: userinfo
    params: {}
- name: pagination
  endpoint:
    path: /api/save-for-later/pagination
    method: GET
    data_selector: pagination
    params: {}
- name: update_products
  endpoint:
    path: /docs/update-products
    method: POST
    data_selector: itemsupdated
    params: {}
- name: create_list
  endpoint:
    path: /api/v3/lists/sfl/create
    method: POST
    data_selector: list
    params:
      pid: '{{URL Encoded PID}}'
- name: add_to_list
  endpoint:
    path: /api/v3/lists/sfl/add
    method: POST
- name: delete_items
  endpoint:
    path: /api/v3/lists/sfl/remove
    method: POST
    data_selector: itemsdeleted
    params:
      pid: string
- name: fetch_list
  endpoint:
    path: /lists/sfl/fetch
    method: POST
    data_selector: list
    params:
      pid: string (Encoded)
- name: move_to_cart
  endpoint:
    path: /api/v3/lists/sfl/moved-to-cart
    method: POST
    data_selector: itemsmoved
    params:
      pid: string (Encoded)
- name: update_items
  endpoint:
    path: /api/v3/lists/sfl/update
    method: POST
    data_selector: itemsupdated
    params:
      pid: string
- name: subscribeForProductAlert
  endpoint:
    path: /rest-api-subscribe-to-a-product-alert
    method: POST
    data_selector: response
    params: {}
- name: subscriptions
  endpoint:
    path: /fetchSubscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: subscribe_to_back_in_stock_alert
  endpoint:
    path: /rest-api-swym-back-in-stock-alerts/subscribe
    method: POST
    data_selector: response
    params: {}
- name: back_in_stock_alert
  endpoint:
    path: /rest-api-swym-back-in-stock-alerts
    method: POST
    data_selector: response
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/create
    method: POST
    data_selector: message
    params: {}
- name: fetch_subscriptions
  endpoint:
    path: /api/v3/subscriptions/fetch-subs
    method: POST
    data_selector: subscriptions
    params:
      pid: '{{URL Encoded PID}}'
- name: generate_regid
  endpoint:
    path: /generate-regid
    method: POST
- name: generate_regid
  endpoint:
    path: /storeadmin/v3/user/generate-regid
    method: POST
    data_selector: message
    params: {}
- name: guest_validate_sync
  endpoint:
    path: /storeadmin/v3/user/guest-validate-sync
    method: POST
    data_selector: ''
    params: {}
- name: create_list
  endpoint:
    path: /api/v3/lists/create
    method: POST
    params:
      pid: string (Encoded)
      limit: int64
      offset: int64
- name: delete_list
  endpoint:
    path: /api/v3/lists/delete-list
    method: POST
    params:
      pid: Unique identifier for the store available in Swym Admin
- name: update_list_attributes
  endpoint:
    path: /api/v3/lists/update
    method: POST
    data_selector: di
    params:
      pid: Unique identifier for the store available in Swym Admin
- name: update_list
  endpoint:
    path: /lists/update-ctx
    method: POST
    data_selector: a
    params:
      pid: string (Encoded)
- name: fetch_lists
  endpoint:
    path: /api/v3/lists/fetch-lists
    method: POST
    data_selector: listcontents
    params:
      pid: '{{URL Encoded PID}}'
      regid: '{{regid}}'
      sessionid: '{{sessionid}}'
- name: fetch_list_contents
  endpoint:
    path: /api/v3/lists/fetch-list-with-contents
    method: POST
    data_selector: list_contents
    params:
      pid: '{{Url Encoded PID}}'
      limit: null
      offset: null
- name: list
  endpoint:
    path: /fetch-list-contents
    method: GET
    data_selector: list
    params: {}
- name: items
  endpoint:
    path: /fetch-list-contents
    method: GET
    data_selector: items
    params: {}
- name: fetch_user_lists
  endpoint:
    path: /api/v3/lists/fetch-user-lists
    method: POST
    data_selector: data
    params:
      pid: '{{URL Encoded PID}}'
- name: fetch_user_list
  endpoint:
    path: /api/v3/lists/fetch-user-list
    method: POST
    data_selector: data
    params:
      pid: '{{URL Encoded PID}}'
      regid: '{{regid}}'
      sessionid: '{{sessionid}}'
      lid: '{{lid}}'
      next: '{{next}}'
      itemslimit: '{{itemslimit}}'
      sortby: '{{sortby}}'
      sortorder: '{{sortorder}}'
      filterby: '{{filterby}}'
- name: wishlist_social_count
  endpoint:
    path: /api/v3/product/wishlist/social-count
    method: POST
    data_selector: data
    params:
      pid: string (Encoded)
- name: mark_public
  endpoint:
    path: /api/v3/lists/markPublic
    method: POST
    data_selector: listcontents
    params:
      pid: '{{URL Encoded PID}}'
- name: email_wishlist
  endpoint:
    path: /api/v3/lists/emailList
    method: POST
    data_selector: listinfo
    params:
      pid: '{{Url Encoded PID}}'
- name: enabled_features
  endpoint:
    path: /api/v3/config/metafields/enabled-features
    method: POST
    data_selector: value
    params:
      pid: '{{URL Encoded PID}}'
- name: recently_viewed_products
  endpoint:
    path: /swat/shopper/fetchRecentlyViewedProducts
    method: GET
    data_selector: recentlyViewed
    params: {}
- name: saved_cart_products
  endpoint:
    path: /swat/shopper/fetchSavedCartProducts
    method: GET
    data_selector: savedCart
    params: {}
- name: recently_viewed_products
  endpoint:
    path: /api/v3/shopper/fetch-recently-viewed-products
    method: POST
    data_selector: recentlyViewed
    params:
      pid: pid
- name: fetch_saved_cart_products
  endpoint:
    path: /shopper/fetch-saved-cart-products
    method: POST
    data_selector: savedCart
    params:
      pid: string (Encoded)
- name: save_shopper_context
  endpoint:
    path: /api/v3/user/save
    method: POST
    data_selector: ''
    params:
      pid: '{{URL Encoded PID }}'
- name: list
  endpoint:
    path: /list
    method: POST
    data_selector: listConfig
    params: {}
- name: list_update
  endpoint:
    path: /list/update
    method: POST
    data_selector: listUpdateDef
    params: {}
- name: list_contents
  endpoint:
    path: /docs/list-contents
    method: GET
- name: list_item
  endpoint:
    path: /docs/fields-in-list-item
    method: GET
    data_selector: fields
- name: custom_list_item
  endpoint:
    path: /custom/list/item
    method: POST
    data_selector: data
    params: {}
- name: comments
  endpoint:
    path: /comments
    method: GET
- name: list_comment
  endpoint:
    path: /list/comment
    method: POST
    data_selector: listCommentDef
    params: {}
- name: list_comment_delete
  endpoint:
    path: /docs/list-comment-delete-input
    method: DELETE
    data_selector: listCommentDeleteDef
    params: {}
- name: list_comments
  endpoint:
    path: /docs/fields-in-list-comments-response
    method: GET
    data_selector: records
    params: {}
- name: bad_request_error
  endpoint:
    path: /parsing-bad-request-error
    method: GET
    data_selector: errors
    params: {}
- name: wishlist_reminder
  endpoint:
    path: /api/wishlist/reminder
    method: POST
    data_selector: Event
    params: {}
- name: lowstock_event
  endpoint:
    path: /rest-api/lowstock-event
    method: POST
    data_selector: EventName
    params: {}
- name: Back in Stock Alert
  endpoint:
    path: /rest-api-swym-back-in-stock-alerts
    method: POST
    data_selector: EventName
    params: {}
- name: backinstock_event
  endpoint:
    path: /docs/backinstock-events
    method: GET
    data_selector: Event
    params: {}
- name: Back In Stock Alert
  endpoint:
    path: /rest-api-swym-back-in-stock-alerts
    method: POST
    data_selector: Event
    params: {}
- name: coming_soon_event
  endpoint:
    path: /comingsoon
    method: POST
    data_selector: EventName
    params: {}
notes:
- If the submitted product data does not match an existing product, the API will respond
  with a 200 status code and a count of 0.
- Ensure customers stay informed about product restocks
- Uses Shopify's theme customizer for styling.
- Uses Swym API to manage custom wishlists.
- Uses OAuth2 for authentication
- Includes settings for wishlist customization such as button colors and titles.
- Supports multiple or single wishlists.
- Allows modification of the Custom Wishlist page's cosmetic and textual elements
  using Shopify's theme customizer.
- Ensure that all Swym-related code is placed inside SwymCallbacks.
- Uses settings to configure various aspects of the wishlist display.
- Ensure the popup is invoked following the guidelines provided in the Custom Button
  Guide.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- This step contains Javascript to trigger the pop-up and a snippet that houses the
  HTML, script and styling for a multiple wishlists modal.
- The button can be customized in Shopify’s Theme Customizer.
- The popup allows users to create and manage wishlists.
- Requires initialization of wishlist functions to fetch and manage lists.
- Add button code to product tile and render snippets in theme.liquid
- Lists Selection
- Create List
- Create List Popup
- Submit Button design
- Error Strings
- List limit of 10 Wishlists reached, please delete a wishlist to create newer wishlists.
- Add the button code to the theme file responsible for rendering the collections
  product tiles.
- The below APIs must be called on a backend server. They cannot be called on the
  storefront/front-end as they carry sensitive information.
- Uses OAuth2 — requires setup of connected app in api
- Uses OAuth2 for authentication.
- Ensure to set up SWYM_CONFIG with API keys and endpoints.
- Uses OAuth2 with access token — requires setup of Swym API credentials
- Requires setup of SWYM_CONFIG to store API keys, endpoints, etc.
- This API does not require authentication.
- 'Wishlist primary button background color: #1773B0'
- 'Wishlist primary button text color: #ffffff'
- 'Wishlist Title: My Wishlist'
- 'Wishlist font: helvetica_n4'
- 'Wishlist Empty Description: Your wishlist is empty.'
- 'Wishlist Empty Action Button CTA: Discover the Collection Now'
- APIs must be called on a backend server due to sensitive information.
- Requires setup of connected app in api
- Please make sure to house swym code on a file of its own.
- To maintain organized and clean code, create a dedicated asset file within your
  theme for all Swym API calls.
- Outdated APIs are those that are no longer supported and will eventually be removed.
  Using outdated APIs can result in unexpected behaviour and implementation errors.
- The API call is dependent only on the Product ID and not the Variant ID.
- Save for Later functionality must be enabled on the Swym Admin for this implementation
  to function correctly.
- Requires Swym Admin to enable Save for Later functionality.
- Requires proper implementation of JS SDK for full functionality.
- The Lists API can be accessed through our Premium or higher-tier plans.
- List names must be unique.
- If you attempt to create a new list using a name that already exists, the API will
  return the existing list.
- Attempting to delete a non-existent list will result in a List Not Found error.
- This API does not update list contents or products
- This API has a local cache that lasts for 5 minutes.
- This API returns only the list items.
- Sort and filter are not enabled by default and are only available for the Enterprise
  plan.
- You can only add the products that are available on the e-commerce platform.
- Adding a product that is not present in your e-commerce platform, to a List will
  throw an 'unknown product' error.
- The updates are limited only to the products inside the list.
- The cprops object has a limit; you cannot add an indefinite amount of data.
- This API is useful when you want to add many products to a List on a single network
  request.
- You can add up to 10 products in a single request.
- You cannot add invalid products.
- This API is useful when you want to remove many products from a single list at once.
- You can remove up to a maximum of 10 products in a single request.
- You may only add a single product to a maximum of 10 lists on a single request.
- You can remove a product from up to 10 lists at a time with a single request.
- Check if the product exists in the lists before removing it to avoid 'Unknown-product'
  errors.
- This API is useful when you want to add a custom item to a List that does not exist
  on your primary catalog.
- You can add bundle up to 5 products in a custom item.
- Share Feature must be allowed and enabled from Swym Admin.
- This API is only supported for Logged in Users.
- To generate a unique url, the user must have a valid source email address.
- The user must have a valid source email address, which is picked up implicitly by
  the API.
- This API may require additional setup from support before use.
- This API may require setup from support before use.
- Comment APIs are supported only for logged in shoppers.
- This API may require setup from support before use. Please contact support@swymcorp.com
  to enable this in your store.
- Uses swat API to add comments to a product
- Continuation token returned in the response can be used for pagination.
- Create read-only Swym accounts for your shoppers.
- We are working on Improving this API
- If you find any information lacking - kindly contact support@swymcorp.com
- Unsubscribe page is to be hosted on the storefront.
- The page receives query params in the URL to specify the user context, product context
  the unsubscribe came from.
- The usage of these Events API is restricted to actions carried out within the default
  wishlist interface.
- Utilising them for complex business logic or to modify the default wishlist page
  or modal could potentially introduce significant risks and may not be officially
  supported.
- Event triggered when removing a product from wishlist.
- Event triggered when adding all Items to cart from Swym UI.
- Uses Swym's add to cart API for notifications
- JS APIs do not automatically trigger toast notifications.
- Typically used on collections pages that are rendered using varied methods like
  filtering on the fly, sorting in page, dynamic pagination with an API call.
- Designed to reduce shopping cart abandonment by enabling your shoppers to move products
  from their cart that they aren't planning to purchase immediately to a Save for
  Later list.
- This API should be called first before all other Save for Later API.
- The API requires the product data to be available on the e-commerce platform. You
  cannot add invalid products.
- Max 10 products can be removed per request.
- List name must be unique for a given user, allowing 3-50 characters.
- Each product in the Save for Later list is uniquely identified by the epi, empi
  value pair.
- Requires additional steps before you implement
- The REST Lists API is available only on our Premium plans or above.
- APIs are intended for non-headless sites.
- Topics are internal keywords and cannot be altered.
- 'Supports topics: ''comingsoon'' and ''backinstock''.'
- Optional medium parameter filters by 'email' or 'sms'.
- Topics are internal keywords; supported topics are 'comingsoon' and 'backinstock'.
- The Swym Back in Stock Alerts API is a backend-only API that requires store admin
  authentication to work properly.
- Inventory must be handled by the platform.
- Ensure Product Availability Before Requesting Subscriptions
- The Store Admin API uses Basic Authentication to verify the source of the calls.
- Shoppers can add a product to their wishlist using their unique 'regid' and a session
  ID.
- The regid is unique to the uuid or email and remains unchanged unless the uuid or
  email is modified. This consistency enables the wishlist to be persisted.
- This API fetches all list contents in a list.
- JS APIs for Shopper Data
- Contact support for using Beta Shopper APIs.
- By default, the API returns a maximum of 12 recently viewed products.
- REST API for Shopper Data
- Fields that are visible but not documented are for internal usage
- Optional fields include note, cprops, bt, ct, vi, av, cts, uby, lity, and bundle.
- Please contact your CSM or support@swymcorp.com to enable this API for your store
- Comments API is an Addition as part of HTC Implementation of Wishlist
- This may not be supported on the default wishlist; additional configuration might
  be required to use this API. Please contact support.
- This API requires authentication to access.
- If it's not documented, it's not supported.
- This feature is currently in beta and it is provided for early access and feedback
  purposes.
errors:
- '200 status code with count of 0: Indicates that the product does not exist.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Exception: Check the error message for details'
- '400 Bad Request: Check input parameters.'
- '404 Not Found: Ensure the endpoint exists.'
- '500 Internal Server Error: Retry the request.'
- '401 Unauthorized: Check if access token is valid'
- '404 Not Found: The product or wishlist does not exist'
- '500 Internal Server Error: Try again later'
- 'Cannot read properties of undefined: Ensure that the Swym Storefront JS client
  has fully loaded before making API calls.'
- 'REQUEST_TIMEOUT: Check your internet connection or try again later.'
- 'INVALID_PRODUCT_ID: Ensure the product ID is valid and exists in the catalog.'
- 'TypeError: Cannot read properties of undefined (reading ''General'')'
- '401 Unauthorized: Check your OAuth token and permissions.'
- '500 Internal Server Error: Check server logs for more details.'
- '401 Unauthorized: Check your API key or token.'
- '404 Not Found: Ensure the endpoint is correct.'
- '409 Conflict: List name already exists.'
- '400 Bad Request: Invalid parameters supplied.'
- 'List Not Found: Attempting to delete a non-existent list.'
- '400 Bad Request: Check required fields in the request'
- '404 Not Found: Ensure the list ID is correct'
- Error while fetching all Lists
- 'unknown product: Adding a product that is not present in your e-commerce platform'
- Error while deleting the Product
- '400 Bad Request: Ensure all required parameters are included and valid.'
- Error while adding many Products to the List
- Error while removing many Products from the List
- Error while adding a product to many lists
- 'Unknown-product: The specified product does not exist in the lists.'
- 'Mandatory checks failed: Custom item must have du, title & price.'
- Custom item bundle allows maximum of 5 products.
- Error while marking the list public
- There was an Error Sending the email
- There was an Error opening the share platform
- Error while adding Comments to List
- 'Invalid parameters: Ensure all required parameters are included.'
- 'Rate limit exceeded: Reduce the frequency of requests.'
- Error callback function which will be called if there is an error.
- 'unknown product: Adding a product to a Save for Later List that is not present
  in your ecommerce platform will throw an error.'
- There was an Error, while Updating products to the Save For Later List
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '500: Internal Server Error'
- '503: Service Unavailable'
- '401: Unauthorised'
- '400: Bad Request - Your request is invalid, change your request params and query
  and try again.'
- '401: Unauthorised - You are performing an action on a resource that is not granted
  to the current logged-in user.'
- '403: Forbidden - You are not allowed to request this data.'
- '404: Not Found - The specified requested data could not be found.'
- '500: Internal Server Error - We had a problem with our server. Try again later.'
- '503: Service Unavailable - We''re temporarily offline for maintenance. Please try
  again later.'
- Error While subscribing the email for the alert.
- Successfully added a Product alert for user.
- Error while subscribing the email for the alert.
- No onError response; popup opening does not require a response.
- '429: Too Many Requests - You''re raising too many requests! Slow down!'
- '400: Bad Request: Your request is invalid, change your request params and query
  and try again.'
- '401: Unauthorised: You are performing an action on a resource that is not granted
  to the current logged-in user. Additionally, for REST APIs, this could mean your
  API key is wrong.'
- '403: Forbidden: You are not allowed to request this data.'
- '404: Not Found: The specified requested data could not be found.'
- '429: Too Many Requests: You''re raising too many requests! Slow down!'
- '500: Internal Server Error: We had a problem with our server. Try again later.'
- '503: Service Unavailable: We''re temporarily offline for maintenance. Please try
  again later.'
- '401: Unauthorised - You are performing an action on a resource that is not granted
  to the current logged-in user. Additionally, for REST APIs, this could mean your
  API key is wrong.'
- '400 Bad Request: Your request is invalid, change your request params and query
  and try again.'
- '401 Unauthorised: You are performing an action on a resource that is not granted
  to the current logged-in user. Additionally, for REST APIs, this could mean your
  API key is wrong.'
- '403 Forbidden: You are not allowed to request this data.'
- '404 Not Found: The specified requested data could not be found.'
- '429 Too Many Requests: You''re raising too many requests! Slow down!'
- '500 Internal Server Error: We had a problem with our server. Try again later.'
- '503 Service Unavailable: We''re temporarily offline for maintenance. Please try
  again later.'
- '401: Unauthorized - You are performing an action on a resource that is not granted
  to the current logged-in user.'
- 'user-not-logged-in: User is not logged in. This API only supports logged in users.'
- 'min-items-limit-not-met: The given items limit is less than 50. The given limit
  should be between 50 and 100 inclusive.'
- 'max-items-limit-exceeded: The given items limit is more than 100. The given limit
  should be between 50 and 100 inclusive.'
- 'sort-filter-disabled: Sort and filter is disabled. Contact support for enabling
  these features.'
- '401: Unauthorized - You are performing an action on a resource that is not granted
  to the current logged-in user. Additionally, for REST APIs, this could mean your
  API key is wrong.'
- '429: Too Many Requests'
- 'Bad Request: Check the request parameters and formatting'
- '400: Bad Request -- Your request is invalid.'
- '401: Unauthorized -- You are performing an action on a resource that is not granted
  to the current logged-in user. Additionally, for REST APIs, this could mean your
  API key is wrong.'
- '403: Forbidden -- You are not allowed to request this data.'
- '404: Not Found -- The specified requested data could not be found.'
- '429: Too Many Requests -- You''re raising too many requests! Slow down!'
- '500: Internal Server Error -- We had a problem with our server. Try again later.'
- '503: Service Unavailable -- We''re temporarily offline for maintenance. Please
  try again later.'
- 'lid: missing-required-key'
- 'lid2: disallowed-key'
auth_info:
  mentioned_objects:
  - SwymCallbacks
  - swat
  - OauthToken
  - AuthProvider
  - NamedCredential
  - SWYM_CONFIG
  - regid
  - pid
  - sessionid
client:
  base_url: https://{{Swym API Endpoint}}
  headers:
    Content-Type: application/x-www-form-urlencoded
    Accept: application/json
source_metadata: null
