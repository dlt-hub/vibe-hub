resources:
- name: Aes
  endpoint:
    path: /api/aes
    method: POST
    data_selector: status
- name: NFCScan
  endpoint:
    path: /api/nfcScan
    method: POST
    data_selector: status
- name: FaceMatch
  endpoint:
    path: /api/faceMatch
    method: POST
    data_selector: result.status
- name: Phone
  endpoint:
    path: /api/phone
    method: POST
    data_selector: result.resultCode
- name: Email
  endpoint:
    path: /api/email
    method: POST
    data_selector: status
- name: Signature
  endpoint:
    path: /api/signature
    method: POST
    data_selector: result.status
- name: SelfieScan
  endpoint:
    path: /api/selfieScan
    method: POST
    data_selector: result.status
- name: Approve
  endpoint:
    path: /api/approve
    method: POST
    data_selector: result.status
- name: UserScore
  endpoint:
    path: /api/userScore
    method: GET
    data_selector: result.data.status
- name: QrScan
  endpoint:
    path: /api/qrScan
    method: POST
    data_selector: result
- name: VideoSelfie
  endpoint:
    path: /api/videoSelfie
    method: POST
    data_selector: result
- name: Captcha
  endpoint:
    path: /api/captcha
    method: POST
    data_selector: result.status
- name: Phone
  endpoint:
    path: /module/Phone
    method: GET
    data_selector: moduleInfo
    params: {}
- name: DocumentScan
  endpoint:
    path: /module/DocumentScan
    method: GET
    data_selector: moduleInfo
    params: {}
- name: Geolocation
  endpoint:
    path: /module/Geolocation
    method: GET
    data_selector: moduleInfo
    params: {}
- name: UserConsent
  endpoint:
    path: /module/UserConsent
    method: GET
    data_selector: moduleInfo
    params: {}
- name: Signature
  endpoint:
    path: /module/Signature
    method: GET
    data_selector: moduleInfo
    params: {}
- name: VideoSelfie
  endpoint:
    path: /module/VideoSelfie
    method: GET
    data_selector: moduleInfo
    params: {}
- name: IdScan
  endpoint:
    path: /module/IdScan
    method: GET
    data_selector: moduleInfo
    params: {}
- name: ProcessId
  endpoint:
    path: /module/ProcessId
    method: GET
    data_selector: moduleInfo
    params: {}
- name: Conference
  endpoint:
    path: /module/Conference
    method: GET
    data_selector: moduleInfo
    params: {}
- name: SelfieScan
  endpoint:
    path: /module/SelfieScan
    method: GET
    data_selector: moduleInfo
    params: {}
- name: FaceMatch
  endpoint:
    path: /module/FaceMatch
    method: GET
    data_selector: moduleInfo
    params: {}
- name: QrScan
  endpoint:
    path: /module/QrScan
    method: GET
    data_selector: moduleInfo
    params: {}
- name: Email
  endpoint:
    path: /module/Email
    method: GET
    data_selector: moduleInfo
    params: {}
- name: Approve
  endpoint:
    path: /module/Approve
    method: GET
    data_selector: moduleInfo
    params: {}
- name: UserScore
  endpoint:
    path: /module/UserScore
    method: GET
    data_selector: moduleInfo
    params: {}
- name: MLConsent
  endpoint:
    path: /module/MLConsent
    method: GET
    data_selector: moduleInfo
    params: {}
- name: GovernmentValidation
  endpoint:
    path: /module/GovernmentValidation
    method: GET
    data_selector: moduleInfo
    params: {}
- name: Antifraud
  endpoint:
    path: /module/Antifraud
    method: GET
    data_selector: moduleInfo
    params: {}
- name: GlobalWatchlist
  endpoint:
    path: /module/GlobalWatchlist
    method: GET
    data_selector: moduleInfo
    params: {}
- name: CustomWatchlist
  endpoint:
    path: /module/CustomWatchlist
    method: GET
    data_selector: moduleInfo
    params: {}
- name: Aes
  endpoint:
    path: /module/Aes
    method: GET
    data_selector: moduleInfo
    params: {}
- name: Name
  endpoint:
    path: /module/Name
    method: GET
    data_selector: moduleInfo
    params: {}
- name: CURP
  endpoint:
    path: /module/CURP
    method: GET
    data_selector: moduleInfo
    params: {}
- name: OCREdit
  endpoint:
    path: /module/OCREdit
    method: GET
    data_selector: moduleInfo
    params: {}
- name: eKYB
  endpoint:
    path: /module/eKYB
    method: GET
    data_selector: moduleInfo
    params: {}
- name: eKYC
  endpoint:
    path: /module/eKYC
    method: GET
    data_selector: moduleInfo
    params: {}
- name: NFCScan
  endpoint:
    path: /module/NFCScan
    method: GET
    data_selector: moduleInfo
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: onboarding_session
  endpoint:
    path: /startinterview
    method: POST
    data_selector: sessionData
- name: onboarding_status
  endpoint:
    path: /omni/get/onboarding/status
    method: GET
- name: onboarding_session
  endpoint:
    path: /omni/start
    method: POST
    data_selector: session
    params: {}
- name: United States Verification
  endpoint:
    path: /docs/system-of-record-united-states
    method: GET
    data_selector: ''
    params: {}
- name: Mexico Verification
  endpoint:
    path: /docs/system-of-record-mexico
    method: GET
    data_selector: ''
    params: {}
- name: Brazil Verification
  endpoint:
    path: /docs/system-of-record-brazil
    method: GET
    data_selector: ''
    params: {}
- name: India Verification
  endpoint:
    path: /docs/system-of-record-india
    method: GET
    data_selector: ''
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: crosscheck_results
  endpoint:
    path: /services/data/vXX.X/sobjects/CrosscheckResults
    method: GET
    data_selector: records
    params: {}
- name: verification
  endpoint:
    path: /dldv
    method: GET
    data_selector: data
    params: {}
- name: verification
  endpoint:
    path: /renaper/verification
    method: POST
    data_selector: verification_results
    params: {}
- name: data_verification
  endpoint:
    path: /verifications/data
    method: POST
    data_selector: verification_results
    params:
      required: CPF
- name: face_verification
  endpoint:
    path: /verifications/face
    method: POST
    data_selector: verification_results
    params:
      required: CPF, Face
- name: verification
  endpoint:
    path: /sincaofi/verification
    method: POST
    data_selector: verificationResults
    params:
      idNumber: Serie
      personalNumber: RUT/RUN
- name: registraduria
  endpoint:
    path: /api/registraduria
    method: GET
    data_selector: data
    params: {}
- name: INE verification
  endpoint:
    path: /verification/ine
    method: GET
    data_selector: verification_data
- name: RENIEC
  endpoint:
    path: /reniec/verify
    method: POST
    data_selector: verification
    params:
      document_type: DNI
      verification_type: Data
- name: aadhaar_verification
  endpoint:
    path: /aadhaar/verification
    method: POST
    data_selector: verificationData
    params: {}
- name: other_id_verification
  endpoint:
    path: /other/id/verification
    method: POST
    data_selector: verificationData
    params: {}
- name: government_validation
  endpoint:
    path: /omni/process/government-validation
    method: POST
- name: government_validation
  endpoint:
    path: /omni/process/government-validation
    method: POST
    data_selector: governmentValidation
    params:
      countryCode: AUS
- name: session
  endpoint:
    path: /services/session
    method: POST
    data_selector: data
    params: {}
- name: results
  endpoint:
    path: /services/results
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: verification
  endpoint:
    path: /api/v1/verification
    method: GET
    data_selector: data
    params: {}
- name: workflows
  endpoint:
    path: /workflows
    method: GET
    data_selector: workflows
- name: Data Sharing Consent
  endpoint:
    path: /data-sharing-consent
    method: GET
    data_selector: consent_data
- name: ID Capture
  endpoint:
    path: /id-capture
    method: POST
    data_selector: capture_data
- name: ID Validation
  endpoint:
    path: /id-validation
    method: POST
    data_selector: validation_data
- name: Face Capture
  endpoint:
    path: /face-capture
    method: POST
    data_selector: face_data
- name: Face Match
  endpoint:
    path: /face-match
    method: POST
    data_selector: match_data
- name: Final Session Results
  endpoint:
    path: /final-results
    method: GET
    data_selector: session_results
- name: Condition Nodes
  endpoint:
    path: /condition-nodes
    method: POST
    data_selector: nodes
- name: session
  endpoint:
    path: /api/v1/session
    method: POST
    data_selector: session_data
- name: crosscheck
  endpoint:
    path: /api/v1/crosscheck
    method: GET
    data_selector: crosscheck_data
- name: start
  endpoint:
    path: /omni/start
    method: POST
    data_selector: customFields
- name: workflow_session
  endpoint:
    path: /createWorkflowSession
    method: POST
    data_selector: sessionConfig
    params:
      configurationId: WORKFLOW_ID
- name: onboarding_url
  endpoint:
    path: /0/omni/onboarding-url
    method: GET
    data_selector: url
- name: create_session
  endpoint:
    path: /omni/start
    method: POST
    data_selector: token
    params:
      countryCode: ALL
      configurationId: 65283accd410a1dd7e965479
      externalCustomerId: someuser0001
      redirectionUrl: http://example.com/
- name: onboarding_url
  endpoint:
    path: /0/omni/onboarding-url
    method: GET
    data_selector: url
- name: fetch_score
  endpoint:
    path: /fetch-score
    method: GET
    data_selector: status
    params:
      interviewId: interviewId
- name: session
  endpoint:
    path: /omni/start
    method: POST
    data_selector: token
    params:
      countryCode: ALL
      configurationId: 65283accd410a1dd7e965479
      redirectionUrl: http://example.com/
- name: create_session
  endpoint:
    path: /omni/start
    method: POST
    data_selector: token
    params:
      countryCode: ALL
      configurationId: 65283accd410a1dd7e965479
      externalCustomerId: someuser0001
      redirectionUrl: http://example.com/
- name: onboarding_url
  endpoint:
    path: /0/omni/onboarding-url
    method: GET
    data_selector: url
- name: onboarding_status
  endpoint:
    path: /0/omni/get/onboarding/status
    method: GET
    data_selector: onboardingStatus
- name: fetch_score
  endpoint:
    path: /fetch-score
    method: GET
    data_selector: status
- name: session
  endpoint:
    path: /createSession
    method: POST
    data_selector: session
    params: {}
- name: biometricConsent
  endpoint:
    path: /sendFingerprint
    method: POST
    data_selector: response
    params: {}
- name: combinedConsent
  endpoint:
    path: /renderCombinedConsent
    method: POST
    data_selector: response
    params: {}
- name: geolocation
  endpoint:
    path: /sendGeolocation
    method: POST
    data_selector: response
    params: {}
- name: idCapture
  endpoint:
    path: /renderCaptureId
    method: POST
    data_selector: response
    params: {}
- name: processId
  endpoint:
    path: /processId
    method: POST
    data_selector: response
    params: {}
- name: selfieCapture
  endpoint:
    path: /renderCaptureFace
    method: POST
    data_selector: response
    params: {}
- name: finishSession
  endpoint:
    path: /finishSession
    method: POST
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: identity_verification
  endpoint:
    path: /api/v1/identity_verification
    method: POST
    data_selector: data
    params: {}
- name: face_authentication
  endpoint:
    path: /api/v1/face_authentication
    method: POST
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /start
    method: GET
    data_selector: session
- name: start_session
  endpoint:
    path: /omni/start
    method: POST
- name: workflow_redirect
  endpoint:
    path: /docs/workflows#redirect-to-mobile
    method: GET
- name: flow_redirect
  endpoint:
    path: /docs/flows#redirect-to-mobile
    method: GET
- name: sdk_redirect
  endpoint:
    path: /docs/sdk#redirect-to-mobile
    method: GET
- name: IncdOnboarding
  endpoint:
    path: /IncdOnboarding
    method: GET
    data_selector: records
    params: {}
- name: Incode Cordova Plugin
  endpoint:
    path: /cordova-plugin
    method: POST
- name: session
  endpoint:
    path: /0/
    method: GET
- name: session
  endpoint:
    path: /create-session
    method: POST
    data_selector: sessionConfig
    params:
      configurationId: CONFIGURATION_ID
- name: session
  endpoint:
    path: /0/
    method: POST
    data_selector: sessionData
- name: button_cancel
  endpoint:
    path: /incdOnboarding/global/button/cancel
    method: GET
    data_selector: Cancel
- name: button_continue
  endpoint:
    path: /incdOnboarding/global/button/continue
    method: GET
    data_selector: CONTINUE
- name: button_done
  endpoint:
    path: /incdOnboarding/global/button/done
    method: GET
    data_selector: Done
- name: button_next
  endpoint:
    path: /incdOnboarding/global/button/next
    method: GET
    data_selector: Next
- name: button_tryAgain
  endpoint:
    path: /incdOnboarding/global/button/tryAgain
    method: GET
    data_selector: TRY AGAIN
- name: button_quitProcess
  endpoint:
    path: /incdOnboarding/global/button/quitProcess
    method: GET
    data_selector: Quit process
- name: user_consent
  endpoint:
    path: /userConsent
    method: POST
    data_selector: consentDetails
- name: selfie_capture
  endpoint:
    path: /selfieCapture
    method: POST
    data_selector: selfieDetails
- name: signature
  endpoint:
    path: /signature
    method: POST
    data_selector: signatureDetails
- name: incdOnboarding
  endpoint:
    path: /incdOnboarding
    method: GET
    data_selector: incdOnboarding
- name: IDDocumentTutorial
  endpoint:
    path: /incdOnboarding/idDocumentTutorial
    method: GET
    data_selector: titles
- name: IDDocumentPermission
  endpoint:
    path: /incdOnboarding/IDDocumentPermission
    method: GET
    data_selector: permissions
- name: IDRealTimeFeedback
  endpoint:
    path: /incdOnboarding/IDRealTimeFeedback
    method: GET
    data_selector: feedback
- name: IDCaptureHelp
  endpoint:
    path: /incdOnboarding/IDCaptureHelp
    method: GET
    data_selector: help
- name: IDCaptureHeader
  endpoint:
    path: /incdOnboarding/IDCaptureHeader
    method: GET
    data_selector: headers
- name: IDUploadScreen
  endpoint:
    path: /incdOnboarding/idCapture
    method: GET
    data_selector: upload
- name: video_selfie
  endpoint:
    path: /incdOnboarding/videoSelfie
    method: GET
    data_selector: videoSelfie
- name: watchlist_validation
  endpoint:
    path: /incdOnboarding/watchlist/validation
    method: GET
    data_selector: watchlistValidation
- name: face_addition
  endpoint:
    path: /incdWave/addFace
    method: GET
    data_selector: addFace
- name: cameraPermissions
  endpoint:
    path: /camera/permissions
    method: GET
- name: documentVerification
  endpoint:
    path: /document/verification
    method: POST
- name: identityVerification
  endpoint:
    path: /identity/verification
    method: POST
- name: phone
  endpoint:
    path: /incdOnboarding/phone
    method: GET
- name: selfie
  endpoint:
    path: /incdOnboarding/selfie
    method: GET
- name: signature
  endpoint:
    path: /incdOnboarding/signature
    method: GET
- name: userConsent
  endpoint:
    path: /incdOnboarding/userConsent
    method: GET
- name: videoSelfie
  endpoint:
    path: /incdOnboarding/videoSelfie
    method: GET
- name: uploadDocument
  endpoint:
    path: /upload/document
    method: POST
    data_selector: document
    params: {}
- name: addressStatement
  endpoint:
    path: /address/statement
    method: GET
    data_selector: statement
    params: {}
- name: IDDocumentPermission
  endpoint:
    path: /incdOnboarding/IDDocumentPermission
    method: GET
    data_selector: denied
    params: {}
- name: IDRealTimeFeedback
  endpoint:
    path: /incdOnboarding/IDRealTimeFeedback
    method: GET
    data_selector: blurry
    params: {}
- name: IDCaptureHelp
  endpoint:
    path: /incdOnboarding/IDCaptureHelp
    method: GET
    data_selector: switchToManualCapture
    params: {}
- name: IDCaptureHeader
  endpoint:
    path: /incdOnboarding/IDCaptureHeader
    method: GET
    data_selector: running
    params: {}
- name: IDUploadScreen
  endpoint:
    path: /incdOnboarding/idCapture
    method: GET
    data_selector: analyzing
    params: {}
- name: idDocumentTutorial
  endpoint:
    path: /incdOnboarding/idDocumentTutorial
    method: GET
    data_selector: titles
- name: IDDocumentPermission
  endpoint:
    path: /incdOnboarding/IDDocumentPermission
    method: GET
    data_selector: permissions
- name: IDRealTimeFeedback
  endpoint:
    path: /incdOnboarding/IDRealTimeFeedback
    method: GET
    data_selector: feedback
- name: IDCaptureHelp
  endpoint:
    path: /incdOnboarding/IDCaptureHelp
    method: GET
    data_selector: help
- name: IDCaptureHeader
  endpoint:
    path: /incdOnboarding/IDCaptureHeader
    method: GET
    data_selector: header
- name: IDUploadScreen
  endpoint:
    path: /incdOnboarding/idCapture
    method: GET
    data_selector: upload
- name: videoSelfie
  endpoint:
    path: /incdOnboarding/videoSelfie
    method: GET
    data_selector: recordings
- name: idDocumentSelection
  endpoint:
    path: /incdOnboarding/idDocumentSelection
    method: GET
    data_selector: documents
- name: idDocumentTutorial
  endpoint:
    path: /incdOnboarding/idDocumentTutorial
    method: GET
    data_selector: tutorials
- name: IDDocumentPermission
  endpoint:
    path: /incdOnboarding/IDDocumentPermission
    method: GET
    data_selector: permissions
- name: IDRealTimeFeedback
  endpoint:
    path: /incdOnboarding/IDRealTimeFeedback
    method: GET
    data_selector: feedback
- name: IDCaptureHelp
  endpoint:
    path: /incdOnboarding/IDCaptureHelp
    method: GET
    data_selector: help
- name: IDCaptureHeader
  endpoint:
    path: /incdOnboarding/IDCaptureHeader
    method: GET
    data_selector: header
- name: IDUploadScreen
  endpoint:
    path: /incdOnboarding/idUploadScreen
    method: GET
    data_selector: upload
- name: user_consent
  endpoint:
    path: /userConsent
    method: POST
    data_selector: userConsentRecords
- name: video_selfie
  endpoint:
    path: /videoSelfie
    method: POST
    data_selector: videoSelfieRecords
- name: signature
  endpoint:
    path: /signature
    method: POST
    data_selector: signatureRecords
- name: session
  endpoint:
    path: /api/sessions
    method: POST
    data_selector: data
    params: {}
- name: start_session
  endpoint:
    path: /omni/start
    method: POST
    data_selector: token
    params:
      configurationId: 65283accd410a1dd7e965479
      externalCustomerId: someuser0001
      redirectionUrl: http://example.com/
- name: onboarding_url
  endpoint:
    path: /0/omni/onboarding-url
    method: GET
    data_selector: url
    params:
      clientId: <<clientId>>
- name: fetch_scores
  endpoint:
    path: /reference/getscores
    method: GET
- name: ocr_data
  endpoint:
    path: /reference/getocrdata
    method: GET
    data_selector: ocrData
- name: Second Id's images
  endpoint:
    path: /reference/getimagessecondid
    method: GET
- name: Fetch concatenated images
  endpoint:
    path: /reference/getconcatenatedimages
    method: GET
- name: fetch_images
  endpoint:
    path: /reference/getimages
    method: POST
    data_selector: response
    params: {}
- name: fetch_image_links
  endpoint:
    path: /reference/getimageslinks
    method: POST
    data_selector: response
    params: {}
- name: device_info
  endpoint:
    path: /reference/getdeviceinfo
    method: GET
- name: fetch_video_file
  endpoint:
    path: /reference/generatevideoselfiedownloadurl
    method: GET
    data_selector: url
- name: onboarding_session
  endpoint:
    path: /api/onboarding/sessions
    method: POST
    data_selector: data
- name: id_validation
  endpoint:
    path: /api/onboarding/id-validation
    method: POST
    data_selector: data
- name: face_validation
  endpoint:
    path: /api/onboarding/face-validation
    method: POST
    data_selector: data
- name: complete_session
  endpoint:
    path: /api/onboarding/complete
    method: POST
    data_selector: data
- name: start_onboarding
  endpoint:
    path: /omni/start
    method: POST
    data_selector: token
    params: {}
- name: add_front_id
  endpoint:
    path: /omni/add/front-id/v2
    method: POST
- name: add_back_id
  endpoint:
    path: /omni/add/back-id/v2
    method: POST
- name: process_id
  endpoint:
    path: /omni/process/id
    method: POST
- name: front_id
  endpoint:
    path: /omni/add/front-id/v2
    method: POST
    data_selector: response
    params: {}
- name: process_id
  endpoint:
    path: /omni/process/id
    method: POST
    data_selector: response
    params: {}
- name: back_id
  endpoint:
    path: /omni/add/back-id/v2
    method: POST
    data_selector: response
    params: {}
- name: add_front_id
  endpoint:
    path: /omni/add/front-id/v2
    method: POST
    data_selector: ''
    params: {}
- name: add_back_id
  endpoint:
    path: /omni/add/back-id/v2
    method: POST
    data_selector: ''
    params: {}
- name: process_id
  endpoint:
    path: /omni/process/id
    method: POST
    data_selector: ''
    params: {}
- name: add_front_id
  endpoint:
    path: /omni/add/front-id/v2
    method: POST
    data_selector: base64Image
    params: {}
- name: add_back_id
  endpoint:
    path: /omni/add/back-id/v2
    method: POST
    data_selector: base64Image
    params: {}
- name: process_id
  endpoint:
    path: /omni/process/id
    method: POST
    data_selector: response
    params: {}
- name: add_back_id
  endpoint:
    path: /omni/add/back-id/v2
    method: POST
    data_selector: response
    params: {}
- name: add_face
  endpoint:
    path: /omni/add/face/third-party
    method: POST
    data_selector: response
- name: add_face
  endpoint:
    path: /omni/add/face/third-party
    method: POST
    data_selector: response
    params:
      imageType: selfie
- name: process_face
  endpoint:
    path: /omni/process/face
    method: POST
    data_selector: response
    params:
      imageType: selfie
- name: add_face
  endpoint:
    path: /omni/add/face/third-party
    method: POST
    data_selector: ''
    params:
      imageType: selfie
- name: process_face
  endpoint:
    path: /omni/process/face
    method: POST
    data_selector: ''
    params:
      imageType: selfie
- name: add_face
  endpoint:
    path: /omni/add/face/third-party
    method: POST
    data_selector: response
    params:
      imageType: selfie
- name: face_process
  endpoint:
    path: /omni/process/face?imageType=selfie
    method: POST
    data_selector: response
    params: {}
- name: finish_status
  endpoint:
    path: /omni/finish-status
    method: GET
    data_selector: response.data
    params: {}
- name: Standard Flow
  endpoint:
    path: /flows
    method: POST
    data_selector: flow
    params:
      name: Standard Flow
      redirect_url: ''
      mark_session_completed_on_status: Face Validation Finished
      redirect_desktop_attempts_to_mobile: true
      display_result_on_desktop: true
      session_score_pass:
        pass: Approve
        warn: Manual Review
        fail: Deny
- name: verify_authentication
  endpoint:
    path: /omni/authentication/verify
    method: POST
- name: authentication_verify
  endpoint:
    path: /omni/authentication/verify
    method: POST
    data_selector: response
    params: {}
- name: authentication_verify
  endpoint:
    path: /omni/authentication/verify
    method: POST
    data_selector: verified
    params: {}
- name: verify_face_authentication
  endpoint:
    path: /authentication/verify
    method: POST
- name: face_login
  endpoint:
    path: /face/login
    method: POST
    data_selector: result
    params:
      customerUUID: Constant.CUSTOMER_UUID
      lensesCheck: true
      faceMaskCheck: true
- name: onboarding_status_webhook
  endpoint:
    path: /docs/onboarding-status-webhook
    method: GET
- name: videoselfie_upload_webhook
  endpoint:
    path: /docs/video-selfie-webhook
    method: GET
- name: global_watchlists_webhook
  endpoint:
    path: /docs/global-watchlists-webhook
    method: GET
- name: work_history_webhook
  endpoint:
    path: /docs/work-history-webhook
    method: GET
- name: payment_proof_webhook
  endpoint:
    path: /docs/payment-proof-webhook
    method: GET
- name: video_selfie_upload
  endpoint:
    path: /
    method: POST
    data_selector: payload
- name: payment_proof
  endpoint:
    path: /omni/process/payment-proof
    method: POST
    data_selector: success
- name: INE Scraping In Progress
  endpoint:
    path: /omni/get/score
    method: POST
    data_selector: success
    params: {}
- name: INE Scraping Finished
  endpoint:
    path: /omni/get/score
    method: POST
    data_selector: success
    params: {}
- name: watchlist_update
  endpoint:
    path: /
    method: POST
    data_selector: ''
    params: {}
- name: successful_attempts
  endpoint:
    path: /successful_attempts
    method: POST
    data_selector: customerId
    params: {}
- name: failed_attempts
  endpoint:
    path: /failed_attempts
    method: POST
    data_selector: error
    params: {}
- name: authentication_event
  endpoint:
    path: /webhooks/authentication
    method: POST
    data_selector: payload
- name: crosscheck_results
  endpoint:
    path: /omni/cross-doc-data-check/results
    method: GET
    data_selector: additionalProp1
    params: {}
- name: ekyb_request
  endpoint:
    path: /omni/externalVerification/ekyb
    method: POST
    data_selector: results
    params: {}
- name: KYB request
  endpoint:
    path: /omni/externalVerification/ekyb
    method: POST
    data_selector: ''
- name: ekyb_check
  endpoint:
    path: /omni/externalVerification/ekyb
    method: POST
    data_selector: ''
    params: {}
- name: kyb_request
  endpoint:
    path: /omni/externalVerification/ekyb
    method: POST
    data_selector: ''
    params: {}
- name: kyb
  endpoint:
    path: /ekyb/search
    method: POST
    data_selector: kyb
    params: {}
- name: kyb_request
  endpoint:
    path: /omni/externalVerification/ekyb
    method: POST
    data_selector: plugins
    params: {}
- name: KYB request
  endpoint:
    path: /omni/externalVerification/ekyb
    method: POST
    data_selector: plugins
    params: {}
- name: kyb_request
  endpoint:
    path: /omni/externalVerification/ekyb
    method: POST
    data_selector: plugins
    params: {}
- name: ekyb_request
  endpoint:
    path: /omni/externalVerification/ekyb
    method: POST
    data_selector: ''
    params: {}
- name: KYB request
  endpoint:
    path: /omni/externalVerification/ekyb
    method: POST
    data_selector: plugins
    params:
      plugins:
      - ekyb
- name: kyb_request
  endpoint:
    path: /omni/externalVerification/ekyb
    method: POST
    data_selector: plugins
    params:
      plugins:
      - ekyb
      country: CN
      taxId: Unified Social Credit Code format
- name: kyb_request
  endpoint:
    path: /omni/externalVerification/ekyb
    method: POST
    data_selector: ''
    params: {}
- name: ekyb_request
  endpoint:
    path: /omni/externalVerification/ekyb
    method: POST
    data_selector: 'null'
    params: {}
- name: employment_sector
  endpoint:
    path: /employment/sector
    method: GET
    data_selector: employment_type
    params: {}
- name: eKYC request
  endpoint:
    path: /omni/externalVerification/income
    method: POST
    data_selector: income
    params:
      country: br
      taxID: 11 digit CPF
- name: eKYC_check
  endpoint:
    path: /omni/externalVerification/ekyc
    method: POST
    data_selector: ''
    params: {}
- name: phone_analysis
  endpoint:
    path: /api/v1/phone_analysis
    method: GET
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ekyc_request
  endpoint:
    path: /omni/externalVerification/ekyc
    method: POST
    data_selector: response
    params:
      plugins:
      - kyc
      source: US_TELCO_1
      phone: '{{ phone }}'
      firstName: '{{ firstName }}'
      surName: '{{ surName }}'
      country: US
- name: ekyc_request
  endpoint:
    path: /omni/externalVerification/ekyc
    method: POST
    data_selector: response
    params:
      plugins: kyc
      source: US_TELCO_2
- name: ekyc_request
  endpoint:
    path: /omni/externalVerification/ekyc
    method: POST
    data_selector: '{}'
    params: {}
- name: ekyc_request
  endpoint:
    path: /omni/externalVerification/ekyc
    method: POST
    data_selector: kyc
    params:
      plugins: kyc
      source: US_DRIVERS_LICENSE_1
      state: ''
      countryCode: US
      dlNumber: ''
- name: ekyc_request
  endpoint:
    path: /omni/externalVerification/kyc
    method: POST
    data_selector: ''
    params:
      country: BR
      taxID: '23490843490'
      firstName: Renata
      surName: De Maria Santos
- name: userData
  endpoint:
    path: /fetch/userData
    method: GET
    data_selector: userData
- name: riskData
  endpoint:
    path: /fetch/riskData
    method: GET
    data_selector: riskData
- name: eKYC fetch input
  endpoint:
    path: /externalVerification/ekyc/session/{interviewId}
    method: GET
- name: watchlist_result
  endpoint:
    path: /omni/watchlist-result
    method: POST
    data_selector: content.data
    params: {}
- name: updated_watchlist_result
  endpoint:
    path: /omni/updated-watchlist-result
    method: GET
    data_selector: content.data
    params: {}
- name: supported_ids
  endpoint:
    path: /supported_ids
    method: GET
    data_selector: records
- name: country_documents
  endpoint:
    path: /api/country_documents
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/sessions
    method: POST
    data_selector: sessionData
- name: results
  endpoint:
    path: /api/results
    method: GET
    data_selector: resultsData
- name: identification_card
  endpoint:
    path: /services/data/vXX.X/sobjects/IdentificationCard
    method: GET
    data_selector: records
    params: {}
- name: passport
  endpoint:
    path: /services/data/vXX.X/sobjects/Passport
    method: GET
    data_selector: records
    params: {}
- name: residence_document
  endpoint:
    path: /services/data/vXX.X/sobjects/ResidenceDocument
    method: GET
    data_selector: records
    params: {}
- name: travel_document
  endpoint:
    path: /services/data/vXX.X/sobjects/TravelDocument
    method: GET
    data_selector: records
    params: {}
- name: drivers_license
  endpoint:
    path: /services/data/vXX.X/sobjects/DriversLicense
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: IdentificationCard
  endpoint:
    path: /identification_card
    method: GET
    data_selector: records
    params: {}
- name: VoterIdentification
  endpoint:
    path: /voter_identification
    method: GET
    data_selector: records
    params: {}
- name: Passport
  endpoint:
    path: /passport
    method: GET
    data_selector: records
    params: {}
- name: ResidenceDocument
  endpoint:
    path: /residence_document
    method: GET
    data_selector: records
    params: {}
- name: DriversLicense
  endpoint:
    path: /drivers_license
    method: GET
    data_selector: records
    params: {}
- name: TravelDocument
  endpoint:
    path: /travel_document
    method: GET
    data_selector: records
    params: {}
- name: country_identification
  endpoint:
    path: /country_identification
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /sessions
    method: POST
    data_selector: data
- name: results
  endpoint:
    path: /results
    method: GET
    data_selector: data
- name: drivers_license
  endpoint:
    path: /drivers/licenses
    method: GET
    data_selector: licenses
    params: {}
- name: identification_card
  endpoint:
    path: /identification/cards
    method: GET
    data_selector: cards
    params: {}
- name: passport
  endpoint:
    path: /passports
    method: GET
    data_selector: passports
    params: {}
- name: residence_cards
  endpoint:
    path: /api/residence_documents
    method: GET
    data_selector: records
- name: identification_cards
  endpoint:
    path: /identification_cards
    method: GET
    data_selector: documents
    params: {}
- name: disability_identification_card
  endpoint:
    path: /disability_identification_card
    method: GET
    data_selector: records
- name: senior_identification_card
  endpoint:
    path: /senior_identification_card
    method: GET
    data_selector: records
- name: police_identification_card
  endpoint:
    path: /police_identification_card
    method: GET
    data_selector: records
- name: police_clearance_identification_card
  endpoint:
    path: /police_clearance_identification_card
    method: GET
    data_selector: records
- name: professional_identification_card
  endpoint:
    path: /professional_identification_card
    method: GET
    data_selector: records
- name: medical_card
  endpoint:
    path: /medical_card
    method: GET
    data_selector: records
- name: military_card
  endpoint:
    path: /military_card
    method: GET
    data_selector: records
- name: residence_card
  endpoint:
    path: /residence_card
    method: GET
    data_selector: records
- name: countries
  endpoint:
    path: /api/countries
    method: GET
    data_selector: records
- name: country_documents
  endpoint:
    path: /api/country_documents
    method: GET
    data_selector: records
- name: residence_document
  endpoint:
    path: /residence_documents
    method: GET
    data_selector: documents
    params: {}
- name: visa
  endpoint:
    path: /visa
    method: GET
    data_selector: visas
    params: {}
- name: medical_card
  endpoint:
    path: /medical_cards
    method: GET
    data_selector: medical_cards
    params: {}
- name: identification_card
  endpoint:
    path: /identification_cards
    method: GET
    data_selector: identity_cards
    params: {}
- name: other_documents
  endpoint:
    path: /other_documents
    method: GET
    data_selector: other_documents
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: POST
    data_selector: data
    params: {}
- name: drivers_license
  endpoint:
    path: /drivers_license
    method: GET
    data_selector: records
- name: identification_card
  endpoint:
    path: /identification_card
    method: GET
    data_selector: records
- name: passport
  endpoint:
    path: /passport
    method: GET
    data_selector: records
- name: residence_document
  endpoint:
    path: /residence_document
    method: GET
    data_selector: records
- name: visa
  endpoint:
    path: /visa
    method: GET
    data_selector: records
- name: documents
  endpoint:
    path: /api/oceania/documents
    method: GET
    data_selector: records
    params: {}
- name: drivers_license
  endpoint:
    path: /drivers_license
    method: GET
    data_selector: records
- name: identification_card
  endpoint:
    path: /identification_card
    method: GET
    data_selector: records
- name: passport
  endpoint:
    path: /passport
    method: GET
    data_selector: records
- name: identification_cards
  endpoint:
    path: /identification/cards
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /sessions
    method: GET
    data_selector: records
    params: {}
- name: results
  endpoint:
    path: /results
    method: GET
    data_selector: records
    params: {}
- name: FederalID
  endpoint:
    path: /FederalID
    method: GET
    data_selector: records
    params: {}
- name: FederalID
  endpoint:
    path: /federal-id
    method: GET
    data_selector: records
    params: {}
- name: passport_data
  endpoint:
    path: /passport/data
    method: GET
    data_selector: records
- name: identification_card
  endpoint:
    path: /api/identification_card
    method: GET
    data_selector: records
    params: {}
- name: passport
  endpoint:
    path: /api/passport
    method: GET
    data_selector: records
    params: {}
- name: visa
  endpoint:
    path: /api/visa
    method: GET
    data_selector: records
    params: {}
- name: voter_identification
  endpoint:
    path: /api/voter_identification
    method: GET
    data_selector: records
    params: {}
- name: drivers_license
  endpoint:
    path: /api/drivers_license
    method: GET
    data_selector: records
    params: {}
- name: results
  endpoint:
    path: /omni/form/answers
    method: GET
    data_selector: answers
    params:
      interviewId: <interviewId>
- name: form
  endpoint:
    path: /forms
    method: POST
    data_selector: forms
- name: renderCombinedConsent
  endpoint:
    path: /renderCombinedConsent
    method: POST
    data_selector: result
- name: sendGeolocation
  endpoint:
    path: /sendGeolocation
    method: POST
    data_selector: location
- name: sendFingerprint
  endpoint:
    path: /sendFingerprint
    method: POST
    data_selector: success
- name: renderCaptureId
  endpoint:
    path: /renderCaptureId
    method: POST
    data_selector: close
- name: renderCaptureFace
  endpoint:
    path: /renderCaptureFace
    method: POST
    data_selector: close
- name: renderDocumentSelector
  endpoint:
    path: /renderDocumentSelector
    method: POST
    data_selector: result
- name: renderCamera
  endpoint:
    path: /renderCamera
    method: GET
- name: processId
  endpoint:
    path: /processId
    method: POST
    params:
      token: access token
- name: renderVideoSelfie
  endpoint:
    path: /renderVideoSelfie
    method: GET
- name: renderConference
  endpoint:
    path: /renderConference
    method: GET
- name: renderLogin
  endpoint:
    path: /renderLogin
    method: GET
- name: renderEnterCurp
  endpoint:
    path: /renderEnterCurp
    method: GET
- name: renderSignature
  endpoint:
    path: /renderSignature
    method: GET
- name: addPhone
  endpoint:
    path: /addPhone
    method: POST
    params:
      token: access token
      phone: customer's phone number
- name: addCustomFields
  endpoint:
    path: /addCustomFields
    method: POST
    params:
      token: access token
      fields: object of custom fields
- name: renderBiometricConsent
  endpoint:
    path: /renderBiometricConsent
    method: GET
- name: renderMlConsent
  endpoint:
    path: /renderMlConsent
    method: GET
- name: renderQr
  endpoint:
    path: /renderQr
    method: GET
- name: renderQrScanner
  endpoint:
    path: /renderQrScanner
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /services/data/v1/sessions
    method: GET
    data_selector: records
- name: selfie_scan_result
  endpoint:
    path: /face_login/result
    method: POST
    data_selector: selfieScanResult
    params: {}
- name: face_login
  endpoint:
    path: /startFaceLogin
    method: POST
    data_selector: faceLoginResult
- name: face_login
  endpoint:
    path: /face/login
    method: POST
    data_selector: faceLoginResult
- name: face_login_result
  endpoint:
    path: /face_login_result
    method: POST
    data_selector: faceLoginResult
- name: selfie_scan_result
  endpoint:
    path: /services/data/vXX.X/sobjects/SelfieScanResult
    method: GET
    data_selector: records
    params: {}
- name: SelfieScanResult
  endpoint:
    data_selector: faceLoginResult
- name: NfcScanResult
  endpoint:
    path: /nfc/scan/result
    method: GET
    data_selector: result
    params: {}
- name: session_config
  endpoint:
    path: /session/config
    method: POST
    data_selector: sessionConfig
    params:
      e2e_encryption_enabled: true
- name: IdScan
  endpoint:
    path: /IdScan
    method: POST
    data_selector: idScanResult
    params: {}
- name: SelfieScan
  endpoint:
    path: /SelfieScan
    method: POST
    data_selector: selfieScanResult
    params: {}
- name: camera_permissions
  endpoint:
    path: /camera/permissions
    method: GET
- name: location_permissions
  endpoint:
    path: /location/permissions
    method: GET
- name: microphone_permissions
  endpoint:
    path: /microphone/permissions
    method: GET
- name: theme_colors
  endpoint:
    path: /colors.xml
    method: POST
    data_selector: colors
    params: {}
- name: styles
  endpoint:
    path: /styles.xml
    method: POST
    data_selector: styles
    params: {}
- name: CustomTheme
  endpoint:
    path: /theme/configuration
    method: POST
    data_selector: theme
- name: IncdOnboarding
  endpoint:
    path: /IncdOnboarding
    method: GET
- name: onboarding
  endpoint:
    path: /onboarding/start
    method: POST
    data_selector: result
- name: nfc_passport
  endpoint:
    path: /nfc/passport
    method: GET
    data_selector: records
- name: otp_verification
  endpoint:
    path: /otp/verification
    method: POST
    data_selector: records
- name: ekyb_input
  endpoint:
    path: /ekyb/input
    method: POST
    data_selector: records
- name: aes_uploadDocument
  endpoint:
    path: /aes/uploadDocument
    method: POST
    data_selector: records
- name: phone
  endpoint:
    path: /incdOnboarding/phone
    method: GET
- name: processId
  endpoint:
    path: /incdOnboarding/processId
    method: GET
- name: qr
  endpoint:
    path: /incdOnboarding/qr
    method: GET
- name: results
  endpoint:
    path: /incdOnboarding/results
    method: GET
- name: selfie
  endpoint:
    path: /incdOnboarding/selfie
    method: GET
- name: signature
  endpoint:
    path: /incdOnboarding/signature
    method: GET
- name: videoSelfie
  endpoint:
    path: /incdOnboarding/videoSelfie
    method: GET
- name: nfc
  endpoint:
    path: /incdOnboarding/nfc
    method: GET
- name: ocr
  endpoint:
    path: /incdOnboarding/ocr
    method: GET
- name: watchlist
  endpoint:
    path: /incdOnboarding/watchlist
    method: GET
- name: mlConsent
  endpoint:
    path: /incdOnboarding/mlConsent
    method: GET
- name: theme_customization
  endpoint:
    path: /docs/user_guide_incd_theme
    method: GET
    data_selector: resources
- name: logo_customization
  endpoint:
    path: /docs/user_guide_customization
    method: GET
    data_selector: resources
- name: appearance_config
  endpoint:
    path: /path/to/appearance/config
    method: GET
    data_selector: colorPalette
    params: {}
- name: ID Scan
  endpoint:
    method: GET
- name: Selfie Scan
  endpoint:
    method: GET
- name: Document Scan
  endpoint:
    method: GET
- name: Video Selfie
  endpoint:
    method: GET
- name: AESResult
  endpoint:
    path: /aes/result
    method: GET
    data_selector: result
- name: AESError
  endpoint:
    path: /aes/error
    method: GET
    data_selector: error
- name: identity_documents_tokens
  endpoint:
    path: /v1/identity-documents/tokens
    method: POST
    data_selector: access_token
- name: session
  endpoint:
    path: /api/session
    method: POST
    data_selector: data
    params: {}
- name: incode_core
  endpoint:
    path: /dynamic/module/incode_core
    method: GET
    data_selector: module
    params: {}
- name: OnboardingSessionConfiguration
  endpoint:
    params:
      region: ALL
- name: OnboardingFlowConfiguration
  endpoint: {}
- name: VideoSelfie
  endpoint:
    params:
      showTutorials: true
      selfieScanMode: selfieMatch
      selfieLivenessCheck: false
      showIdScan: true
      showDocumentScan: true
      showVoiceConsent: true
      voiceConsentQuestionsCount: 3
      idScanCameraFacing: back
- name: startOnboardingSection
  endpoint:
    path: /startOnboardingSection
    method: POST
    data_selector: winParam
- name: getUserScore
  endpoint:
    path: /getUserScore
    method: POST
    data_selector: winParam
- name: finishOnboarding
  endpoint:
    path: /finishOnboarding
    method: POST
    data_selector: winParam
- name: deleteUserLocalData
  endpoint:
    path: /deleteUserLocalData
    method: POST
    data_selector: winParam
- name: Peru ResidenceDocument
  endpoint:
    path: /residencedocument/peru
    method: GET
    data_selector: document_number
- name: Paraguay IdentificationCard
  endpoint:
    path: /identificationcard/paraguay
    method: GET
    data_selector: document_number
- name: Australia Victoria DriversLicense
  endpoint:
    path: /driverslicense/australia/victoria
    method: GET
    data_selector: given_name
- name: Panama ResidenceDocument
  endpoint:
    path: /residencedocument/panama
    method: GET
    data_selector: document_number
- name: India Telangana DriversLicense
  endpoint:
    path: /driverslicense/india/telangana
    method: GET
    data_selector: document_classification
- name: United States of America Missouri IdentificationCard
  endpoint:
    path: /identificationcard/usa/missouri
    method: GET
    data_selector: ocr_provider
- name: Onboarding
  endpoint:
    path: /onboarding
    method: GET
    data_selector: modules
- name: Dashboard
  endpoint:
    path: /dashboard
    method: GET
    data_selector: session
- name: Server
  endpoint:
    path: /server
    method: GET
    data_selector: csv
- name: ML
  endpoint:
    path: /ml
    method: GET
    data_selector: classification
- name: drivers_license
  endpoint:
    path: /driversLicense
    method: GET
    data_selector: records
- name: identification_card
  endpoint:
    path: /identificationCard
    method: GET
    data_selector: records
- name: passport
  endpoint:
    path: /passport
    method: GET
    data_selector: records
- name: voter_identification
  endpoint:
    path: /voterIdentification
    method: GET
    data_selector: records
- name: Dashboard
  endpoint:
    path: /dashboard
    method: GET
    data_selector: records
    params: {}
- name: Server
  endpoint:
    path: /server
    method: GET
    data_selector: records
    params: {}
- name: ML
  endpoint:
    path: /ml
    method: GET
    data_selector: records
    params: {}
- name: ID templates
  endpoint:
    path: /id-templates
    method: GET
    data_selector: records
    params: {}
- name: Incode ID
  endpoint:
    path: /incode-id
    method: GET
    data_selector: records
    params: {}
- name: user_consent
  endpoint:
    path: /services/data/vXX.X/sobjects/UserConsent
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: auth_stats
  endpoint:
    path: /omni/batch/auth-stats
    method: GET
- name: verification
  endpoint:
    path: /omni/process/current-ocr
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_login
  endpoint:
    path: /api/v1/user/login
    method: POST
    data_selector: data
    params: {}
- name: otp_send
  endpoint:
    path: /api/v1/user/send-otp
    method: POST
    data_selector: data
    params: {}
- name: workflow_module
  endpoint:
    path: /interview-events
    method: GET
    data_selector: events
    params: {}
- name: verification
  endpoint:
    path: /services/data/vXX.X/sobjects/Verification
    method: POST
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /api/session
    method: POST
    data_selector: data
    params: {}
- name: verification
  endpoint:
    path: /api/verification
    method: GET
    data_selector: results
    params: {}
- name: session
  endpoint:
    path: /sessions
    method: POST
    data_selector: data
    params: {}
- name: results
  endpoint:
    path: /results
    method: GET
    data_selector: data
    params: {}
- name: identity_verification
  endpoint:
    path: /v1/identity_verification
    method: POST
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /api/v1/session
    method: POST
    data_selector: data
- name: results
  endpoint:
    path: /api/v1/results
    method: GET
    data_selector: data
- name: identity_verification
  endpoint:
    path: /identity_verification
    method: POST
    data_selector: results
- name: document_capture
  endpoint:
    path: /document_capture
    method: POST
    data_selector: results
- name: session
  endpoint:
    path: /sessions
    method: POST
    data_selector: data
    params: {}
- name: results
  endpoint:
    path: /results
    method: GET
    data_selector: data
    params: {}
- name: documentCapture
  endpoint:
    path: /documentCapture
    method: POST
    data_selector: records
- name: faceAuthentication
  endpoint:
    path: /faceAuthentication
    method: POST
    data_selector: records
- name: document_capture
  endpoint:
    path: /v1/document/capture
    method: POST
    data_selector: data
- name: face_authentication
  endpoint:
    path: /v1/face/authentication
    method: POST
    data_selector: data
- name: session
  endpoint:
    path: /api/session
    method: POST
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /sessions
    method: POST
    data_selector: session_data
    params: {}
- name: results
  endpoint:
    path: /results
    method: GET
    data_selector: results_data
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /sessions
    method: POST
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /sessions
    method: POST
    data_selector: data
    params: {}
- name: acceptedDocuments
  endpoint:
    path: /acceptedDocuments
    method: GET
    data_selector: documents
    params: {}
- name: session
  endpoint:
    path: /sessions
    method: POST
    data_selector: data
    params: {}
- name: result
  endpoint:
    path: /results
    method: GET
    data_selector: results
    params: {}
- name: session
  endpoint:
    path: /api/session
    method: POST
    data_selector: data
- name: result
  endpoint:
    path: /api/result
    method: GET
    data_selector: data
- name: add_face
  endpoint:
    path: /omni/add/face/third-party
    method: POST
    data_selector: ''
    params: {}
- name: core-light
  endpoint:
    path: /services/data/v5.22.0/sdk/core-light
    method: GET
    data_selector: records
    params: {}
- name: kiosk-login
  endpoint:
    path: /services/data/v5.22.0/sdk/kiosk-login
    method: GET
    data_selector: records
    params: {}
- name: video-streaming
  endpoint:
    path: /services/data/v5.22.0/sdk/video-streaming
    method: GET
    data_selector: records
    params: {}
- name: nfc
  endpoint:
    path: /services/data/v5.22.0/sdk/nfc
    method: GET
    data_selector: records
    params: {}
- name: model-face-recognition
  endpoint:
    path: /services/data/v5.22.0/sdk/model-face-recognition
    method: GET
    data_selector: records
    params: {}
- name: model-id-face-detection
  endpoint:
    path: /services/data/v5.22.0/sdk/model-id-face-detection
    method: GET
    data_selector: records
    params: {}
- name: model-liveness-detection
  endpoint:
    path: /services/data/v5.22.0/sdk/model-liveness-detection
    method: GET
    data_selector: records
    params: {}
- name: OnboardingConfigV2
  endpoint:
    path: /api/v2/onboarding
    method: POST
    data_selector: steps
    params: {}
- name: session
  endpoint:
    path: /api/session
    method: POST
    data_selector: data
    params: {}
- name: results
  endpoint:
    path: /api/results
    method: GET
    data_selector: results
    params: {}
- name: identity_verification
  endpoint:
    path: /v1/identity-verification
    method: POST
    data_selector: data
    params: {}
- name: face_authentication
  endpoint:
    path: /v1/face-authentication
    method: POST
    data_selector: data
    params: {}
- name: IDScan
  endpoint:
    path: /services/data/vXX.X/sobjects/IDScan
    method: GET
- name: SelfieScan
  endpoint:
    path: /services/data/vXX.X/sobjects/SelfieScan
    method: GET
- name: camera
  endpoint:
    path: /services/data/v9.3/camera
    method: GET
- name: nfc
  endpoint:
    path: /services/data/v9.3/nfc
    method: GET
- name: addPhone
  endpoint:
    path: /phone/add
    method: POST
    data_selector: result
    params:
      otpVerificationEnabled: 'true'
- name: addEmail
  endpoint:
    path: /email/add
    method: POST
    data_selector: result
    params:
      otpVerificationEnabled: 'true'
- name: workflow_configuration
  endpoint:
    path: /YOUR_WORKFLOW_CONFIGURATION_ID
    method: GET
- name: flow_configuration
  endpoint:
    path: /YOUR_FLOW_CONFIGURATION_ID
    method: GET
- name: deep_link
  endpoint:
    path: /YOUR_DEEP_LINK
    method: GET
- name: session
  endpoint:
    path: /sessions
    method: POST
    data_selector: data
- name: results
  endpoint:
    path: /results
    method: GET
    data_selector: data
- name: workflow
  endpoint:
    path: /api/workflow
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /api/session
    method: POST
    data_selector: session
- name: session
  endpoint:
    path: /api/session
    method: POST
    data_selector: data
    params: {}
- name: onboarding_session
  endpoint:
    path: /services/data/vXX.X/onboarding/session
    method: POST
    data_selector: results
    params: {}
- name: authentication_verify
  endpoint:
    path: /omni/authentication/verify
    method: POST
- name: authentication_verify
  endpoint:
    path: /omni/authentication/verify
    method: POST
    data_selector: null
    params: {}
- name: Face Authentication
  endpoint:
    path: /authentication/verify
    method: POST
- name: face_login
  endpoint:
    path: /startOnlineFaceLogin11
    method: POST
    data_selector: result
    params: {}
- name: onboarding_status
  endpoint:
    path: /onboarding/status
    method: POST
- name: fetch_onboarding_status
  endpoint:
    path: /omni/get/onboarding/status
    method: GET
    data_selector: onboardingStatus
    params:
      id: string
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
    params: {}
- name: identity_verification_request
  endpoint:
    path: /incode
    method: POST
    data_selector: verification_result
- name: zoom_meeting_verification
  endpoint:
    path: /incode-meeting
    method: POST
    data_selector: meeting_verification_result
- name: userinfo
  endpoint:
    path: /userinfo
    method: GET
    data_selector: claims
- name: token
  endpoint:
    path: /oauth2/token
    method: POST
    data_selector: token_response
- name: authorize
  endpoint:
    path: /oauth2/authorize
    method: GET
    data_selector: authorization_response
- name: Request Verification (Employees)
  endpoint:
    path: /docs/requesting-verification
    method: GET
- name: Request Verification (Candidates)
  endpoint:
    path: /docs/request-verification-copy
    method: GET
- name: Fetch Verification Results
  endpoint:
    path: /docs/fetching-verification-results
    method: GET
- name: authorize_server
  endpoint:
    path: /v1/integration/authorize/server
    method: POST
    data_selector: token
    params: {}
- name: generate_verification_link
  endpoint:
    path: /v1/verification/generate-verification-link
    method: POST
    data_selector: verificationLink
    params:
      integrationId: c0fd10ff-c36e-49a6-afde-a00496c1c8e7
      secret: s3cureS3cr3tValue
      loginHint: john.doe@company.com
      loginHintType: EMAIL
- name: verification_link
  endpoint:
    path: /v1/verification/candidate/generate-verification-link
    method: POST
    data_selector: verificationLink
    params: {}
notes:
- 'For SDK versions < 9.0.0: coreLightVersion is required.'
- The SDK uses the camera in order to verify the identity of the customer, e.g. in
  ID scan, Selfie scan and so on.
- The SDK uses the current user location in order to detect exact location for Geolocation
  step.
- The SDK uses microphone for performing a video call during Video Conference step
  or for doing speech recognition during Video Selfie.
- Emulator detected, emulators aren't supported in non test mode!
- Root access detected, rooted devices aren't supported in non test mode!
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- There is a limitation of 10Mb as the maximum possible request/response size in all
  our API endpoints.
- There is a hard limit of 30 seconds for all of our endpoints.
- Onboarding sessions can be created using Incode Flows and Workflows by providing
  a URL for an out-of-the-box web application.
- OCR data extracted from documents provided by the user during the onboarding process.
- Even though the Core Modules are fully supported in all platforms and SDKs, not
  all the add-on modules are.
- The Incode Face Authentication functionality allows you to identify previously registered
  users using face recognition.
- One-to-One facial authentication occurs when a person tries to identify themself
  by providing a selfie and a second authentication factor (customerId).
- Ensure to capture all necessary identification documents and selfies during onboarding.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects may return nulls in deeply nested fields
- Not available in Pennsylvania, Louisiana, California, Utah, Minnesota, and New York.
- 'Verification type: Data and Face - Premium supports various data points.'
- 'Verification type: Data and Face - Basic checks document validity.'
- Data validation against Registraduría Nacional del Estado Civil for personal identification
  details.
- Aadhaar ID verification requires access to phone number registered with Aadhar for
  OTP consent.
- Supports verification of Driver Licenses and other types of IDs.
- Properly collecting customer consent and complying with all regional laws and regulations
  are critical operations for any business.
- Incode supplies the necessary tools to easily collect and manage consent for customers
  in all geographic regions (including GDPR regulated countries).
- For custom integrations using our SDKs or a completely whitelabeled app that only
  uses our API, the above consent policies will need to be collected and sent to Incode.
- Incode is committed to delivering products that adhere to recognized accessibility
  standards.
- Uses OAuth2 with refresh token – requires setup of connected app in Incode
- Used in negative, destructive actions, like error and deletion feedback and actions.
- Used in background colors for the whole screen, and text color.
- Updated color and token system is applied for new ID and face capture modules
- Common Issues related to Tokenization mapping
- Capture review may have visual references
- Native prompts cannot be customized
- We don't allow changing traffic light colors
- Specify redirect URL must be in https://your.desired.url format
- Recommended setting to redirect desktop attempts to mobile
- If checked, option will skip the initial launch screen
- If checked, option will remove support for SMS
- Automatically create an identity on successful workflow execution if face capture
  module is present
- Set up a timeout to mark session as expired after a period of user inactivity
- The Data Sharing Consent module is crucial for legal compliance.
- Limit the number of capture attempts to enhance security and user experience.
- It is advisable to skip the face match animation in production environments.
- Conditionals enable dynamic user journeys based on user inputs and verification
  outcomes.
- 'Ensure the comparison name does not include special characters like !, @, #, $,
  %, ^, &, *, (, ), _, -, /.'
- Custom fields can be passed in the 'customFields' parameter during workflow initialization.
- Minimum supported Android version is 21.
- Minimum supported iOS version is iOS 13.
- No-code integration requires no code and can be accomplished entirely through the
  dashboard.
- Low-code implementation requires backend to generate URL and safely retrieve results.
- This module can be added to your Workflow within Workflow Designer. It is a hard
  requirement for all workflows.
- To redirect the user back to your site at the end of the onboarding, add the `redirectionUrl`.
- During session setup, set redirectionURL to where you want to redirect the user
  back.
- Endpoints only need the Session Token to work.
- Integrating the Web SDK is best suited for experienced front-end and back-end development
  teams.
- While the Incode Web SDK is compatible with most front-end development frameworks,
  some project configurations might require specific settings.
- Full SDK integration is only compatible with Incode Flows. Incode Workflows are
  currently not supported.
- Make sure your web application runs over HTTPS (including your development web server)
  to ensure the correct execution of all SDK methods.
- Ensure you are always using the latest SDK version by checking the release notes
- Include translate="no" attribute at the html tag to prevent undesired DOM mutations
  from Google Chrome's Translate functionality.
- Ensure to obtain biometric consent when required by laws.
- Use the Incode testing environment during development.
- No-Code / Low-Code integrations allow customization of logo, colors, font, shapes
  and borders.
- Web SDK integration allows customization of colors, font, shapes and borders using
  CSS.
- Create beautiful looking apps using these styling techniques.
- If you really want to make your app look nice, all web applications allow for customizations
  using custom CSS stylesheets.
- Incode web products will display in the default language set in the browser, however,
  you can explicitly set up one of the supported translations.
- Ensure to handle token expiration properly.
- Use HTTPS for all requests.
- Fetch the session from a server maintained by your organization.
- The uniqueId is passed in the URL for session continuation.
- The Web SDK takes care of requesting the use of the camera to the user.
- processId() does not return the result of the validation.
- You can let the flow to automatically finish on several situations.
- The Incode Web SDK is primarily designed for client-side rendering.
- Currently, the Incode Web SDK package is not compatible with server-side rendering
  solutions.
- For security reasons, session tokens and data fetching should be handled on the
  backend to protect your API keys and sensitive data.
- Redirect to mobile is just a setting which must be enabled in low code apps.
- Ensure to implement renderRedirectToMobile() only after initializing the SDK and
  obtaining a session token.
- The Incode SDK is dependent on jitpack, so the following maven repository needs
  to be added as well.
- In your module-level `app/build.gradle`, we require a minimum of Java 8 for both
  `source` and `targetCompatibility`.
- The welcome dependency is the main module of the entire Incode Omni SDK. It contains
  all the core functionality of the SDK.
- The core-light dependency is required as it contains the image processing libraries
  used in the Omni SDK.
- The `welcome` dependency is the main module of the entire Incode Omni SDK. It contains
  all the core functionality of the SDK.
- The `core-light` dependency is required as it contains the image processing libraries
  used in the Omni SDK.
- The SDK features the ability to download its resources at runtime using On-Demand
  Resources.
- For variants which use the VideoConference module, there is a bug with CocoaPods
  which links the needed OpenTok dependency twice.
- 'If you are running a Mac computer with Apple Silicon and get errors while trying
  to install the pod, use the commands: sudo arch -x86_64 gem install ffi and arch
  -x86_64 pod install.'
- Change your minSdkVersion to 21 or higher. Set compileSdkVersion to 33 or higher.
- Application has multidex support enabled.
- Modify your project's build.gradle to contain Artifactory username and password,
  provided by Incode.
- Tokens can be obtained from NPM using these instructions
- You must be using SSH authentication for Git and have it configured on your Mac.
- Additional setup for iOS requires changing the Podfile to require deployment target
  13 or higher.
- Verify LFS is installed and running.
- Additional setup for Android requires enabling multiDexEnabled and setting minimum
  API level to 21.
- Add the tools:replace="android:allowBackup" attribute to the <application> element
  in *android/app/src/main/AndroidManifest.xml* and declare the tools namespace in
  the <manifest> element.
- You can try forcing the minSdkVersion setting in the global *android/build.gradle*
  file to make sure all dependencies are using it.
- If the problem persists, you can add tools:overrideLibrary in the *android/app/src/main/AndroidManifest.xml*
  file to force the use of the library.
- API_URL needs to end with /0/ to let the backend manage the request using only the
  token of the session.
- The minimum supported Android version is 23, which supports 98.4% of devices.
- The minimum supported iOS version is iOS 13, which supports 99.6% of devices.
- The API_URL needs to end with /0/ when creating the session in the backend.
- To initialize the SDK, API_URL needs to end with /0/ when creating a session in
  the backend.
- It's very important to understand that you can manage your App UI navigation or
  API calls in TODO section (validateResultWithBusinessLogic method), but by safety
  and best practices, the business rules must be applied in your backend, for example
  user's onboarding approve, change status, etc.
- The SDK provides default texts for English (en), Spanish (es), and Portuguese (pt)
  locales.
- For legal reasons, we must recheck your documents.
- Requires user consent for biometric processing
- Selfie capturing process should ensure adequate lighting and no obstructions
- ID scan failed
- ID type is not accepted
- No internet connection
- 'Waiting time: mins'
- Photo will be taken automatically
- User already exists
- Por favor revisa e intenta de nuevo.
- 'Por razones legales, debemos volver a comprobar sus documentos. Se te pedirá:'
- No se pudo procesar la información
- Procesando informacion...
- Éxito
- Confirmo que he leído y acepto (opcional)
- Continuar
- Sin internet
- Reintente
- ID válida ó Pasaporte
- Pasaporte
- Documento médico válido
- Comprobante de domicilio reciente
- Estar listo para una selfie
- Por favor verifique sus datos
- Número de documento
- Fecha de expiración
- Fecha de nacimiento
- Nombre completo
- Género
- Femenino
- Masculino
- Dirección
- ¿Este símbolo es visible en el frente o  reverso de su ID?
- SÍ
- 'NO'
- Leer el chip en el ID
- 1. Sostener el ID contra la cámara.
- contra la cámara
- 2. Asegúrese de que su ID y su teléfono se están tocando.
- tocando
- 3. Manténgase quieto hasta que finalice el escaneado.
- Manténgase quieto
- Iniciar escaneo
- INTENTAR NUEVAMENTE
- AYUDA
- Problemas comunes
- El teléfono está alejado del documento
- Se movía el teléfono durante el escaneo
- La funda del teléfono interfiere con el escaneo
- Ok, intente de nuevo
- ¿Es visible este símbolo en la cara frontal de su pasaporte?
- Escanee el chip del pasaporte
- Sostenga su teléfono cerca de la cara frontal.
- Si su pasaporte tiene funda, remuévala y sostenga su celular cerca de la cara frontal.
- Intente sostener su celular cerca de la primera página de su pasaporte. Si no pasa
  nada, intente mover lentamente su celular a lo largo de la página.
- Intente sostener su celular cerca de la página de la foto de su pasaporte. Si no
  pasa nada, intente mover lentamente su celular a lo largo de la página.
- Intente sostener su celular cerca del interior de la cara trasera de su pasaporte.
  Si no pasa nada, intente mover lentamente su celular a lo largo de la página.
- Cuando vea un cambio en su pantalla, mantenga su celular estable
- Escaneando, no se mueva…
- No se pude escanear el chip
- Documento leído con éxito
- Chip del documento escaneado exitosamente
- No fue posible autenticar el chip
- Estamos verificando su identidad
- Subiendo, por favor espere...
- Verifica tu número
- Verifica tu correo
- Por favor, ingresa el código que te enviamos por SMS
- Por favor, ingresa el código que te enviamos a tu correo
- Verifying..
- Código incorrecto, por favor intenta de nuevo.
- '¿No recibiste el código? '
- Vuelva a intentarlo en %.0f segundos
- Intenta de nuevo
- o
- cambia de número
- cambia de correo
- Llena tus credenciales de negocio
- Nombre del negocio
- Calle
- Dirección 2 (opcional)
- Número Ext.
- Ciudad
- Estado
- Código postal
- Identificador fiscal
- País
- Procesando..
- Exitoso!
- Negocio no verificado..
- Acepto los términos y condiciones del Centro de Confianza
- Deseo firmar el contrato electrónicamente. Por favor, genere el certificado necesario
  para mí
- Me gustaría firmar el contrato mostrado de manera legalmente vinculante mediante
  los procedimientos de firma subsiguientes
- Confirma tu firma
- Los siguientes documentos serán firmados
- Continuar y finalizar
- Confirmada tu firma
- Los siguientes documentos fueron firmados
- Ver documento
- ¡Éxito!
- Algo salió mal.
- Firma de documento en proceso. Por favor, espere, esto podría tardar un poco.
- Contrato
- Cerrar
- Completa tus credenciales
- Nombre
- Apellido
- Correo electrónico
- Teléfono
- Número de seguro social
- CPF
- Formato de teléfono inválido
- Se requiere el teléfono
- Formato de correo electrónico inválido
- Se requiere el nombre
- Se requiere el apellido
- Se requiere el correo electrónico
- Se requiere la calle
- Se requiere la ciudad
- Se requiere el número de casa
- Se requiere el código postal
- Ingresa un código postal de 5 o 9 dígitos
- Ingresa un código postal de 5 o 8 dígitos
- Se requiere el estado
- Se requiere el número de seguro social
- Ingresa un número válido
- Se requiere la fecha de nacimiento
- Se requiere el país
- Nacionalidad
- Brasileño
- Brasileño Naturalizado
- Extranjero
- Brasileño Nacido en el Extranjero
- ¡Verificado!
- ¡Procesando!
- Algo salió mal
- Esto podría tomar un tiempo, por favor, mantén la aplicación abierta...
- Carga un documento para firmar
- Formato PDF soportado
- Vacío
- Agregar documento
- Quitar
- Cargando documento
- Tu respuesta
- Escribe tu respuesta aquí..
- ¿Cuál es tu nacionalidad?
- Buscar un país
- Empezar de nuevo
- Te llegará un SMS cuando sea tu turno.
- 'Tiempo de espera: '
- minutos
- No hay conexión a internet
- ¿Cómo podemos ayudarte?
- 'Ingresa tu %@:'
- número celular
- Intentar con otro número
- Coloca tu identificación en la base
- Tu foto debe estar boca arriba
- No tengo mi identificación
- ¡Bien! Ahora voltea tu identificación
- Tu foto debe estar boca abajo
- El reverso de mi identificación está dañado
- Verificando
- No pudimos leer el frente de tu identificación
- No pudimos leer el reverso de tu identificación
- Intentar de nuevo
- LECTURA CORRECTA
- RETIRA TU ID
- VOLTEA TU ID
- Ya existe un usuario asignado a este número.
- Quítate los lentes.
- La prueba de vida no fue exitosa.
- TOMAR FOTO
- 'Encuentra otro lugar

  para tomar tu selfie'
- Prepárate…
- 'Aléjate de

  la cámara'
- 'Acércate a

  la cámara'
- 'Mira a la cámara

  para verificar que seas tú'
- 'No se detectó una cara.

  El fondo está muy oscuro'
- 'Borrosa.

  Limpia la cámara y espera'
- Alinea tu cara al frente
- No inclines la cabeza
- Foto desenfocada. Limpia el lente e intenta no moverte
- Mantén tus ojos abiertos
- Mira a la cámara
- Quítate los lentes
- Asegúrate de ser la única persona en la foto
- Por favor espere, ajustando la cámara
- Quítate la mascarilla
- El tiempo de espera ha expirado
- Listo
- Acceso denegado
- Something went wrong
- Subiendo…
- Hubo un error
- Por favor intenta después
- Success!
- Sorry, please try again
- Puede ser cualquier documento que compruebe su dirección.
- Puede ser cualquier documento que compruebe que está asegurado.
- Puede ser cualquier documento que compruebe su identidad.
- Toma una foto o sube un PDF, JPG
- Ajusta el documento completo en el marco
- Por motivos legales, debemos volver a comprobar sus documentos.
- A foto será tirada automaticamente
- Assinatura de documento em andamento. Por favor, aguarde; isso pode levar um certo
  tempo.
- Formato PDF suportado
- Seus dados são protegidos por Incode
- In order to have this multi-language support please enable `Use Base Internationalization`
  inside your project and add languages that you want.
- To customize texts displayed by IncdOnboarding SDK, create a `Localizable.strings`
  file for different languages.
- Your data is protected by Incode
- Processing information may take a while, please keep the app opened.
- Avoid shadows and glare
- Please enter your phone number
- We’re verifying your identity
- Hold on a sec…
- Complete the following, it takes around 2-5 minutes to prove your identity
- Tus datos están protegidos por Incode
- Puede ser un documento bancario o factura eléctrónica que muestre sus ingresos.
- Consents are required for biometric processing.
- CONTINUAR
- Si eso no funcionó...
- Si eso tampoco funcionó...
- verificada por
- Elige el documento para escanear
- Identificación oficial
- Pasaporte de tu país
- Por motivos legais, precisamos verificar seus documentos novamente.
- Ensure to contact the customer success manager for SDK access credentials.
- Master branch contains the latest SDK version.
- It is mandatory to use a configurationId when a session is created.
- It is mandatory to create a new onboarding session every time that an onboarding
  attempt is executed.
- Onboarding Sessions must be created in your application back-end (never directly
  from the front-end application).
- X-Incode-Hardware-Id header is required with it's value set to your Session Token
- You can trigger fetching the Onboarding Results by notifying your backend via Webhook
  when the onboarding process has finished.
- You can check the onboarding's session overall status, or the overall status per
  module validation.
- Response is dynamic based on ID document type.
- The results of these API-based onboardings might not be as good as the ones done
  using the standard onboardings via SDK's, since Incode can't guarantee the quality
  of the images captured.
- x-api-key header is required with its value set to your Api Key
- configurationId field in the request body is required
- externalCustomerId field is optional
- Always call the endpoints in the mentioned order (front -> back -> process)
- Images need to be provided as a base64 encoded string
- Do not use these versions unless otherwise stated
- Endpoint requires base64 encoded image in request body.
- Always call the endpoints in the mentioned order (add face -> process face)
- X-Incode-Hardware-Id header is required with its value set to our Session Token
- You can find the face-match score obtained from it in the dashboard.
- It will now be shown as 'COMPLETED' in the dashboard
- Will set the onboarding status to ONBOADING_FINISHED, and trigger the onboarding
  status webhook with this status.
- 'Choosing flow modules is easy. Click the checkbox to make selections. To create
  the Standard Flow enable the following modules: Privacy consent, Machine learning
  consent, ID capture, ID validation, Face capture, Face match.'
- Activate and save your flow. On the top banner on the right side, click the label
  'Activate Flow' and then click the 'Save Flow'.
- Incode validates the existence of a user based on a biometric template generated
  at the identity creation.
- The authentication attempt can only be verified in your application backend as the
  omni API requires an admin token.
- Use Constants.API_URL and Constants.API_KEY for SDK initialization
- Requires setup of connected app in Incode
- In order to be able to execute an Authentication in offline mode (No Internet connection
  needed) the user needs to have executed a complete and success onboarding in the
  same device.
- Authentication links provide a hosted capture experience and utilize our 1:N API
  endpoints to perform the authentication.
- Webhook retries will be triggered in case of timeout or non-200 status codes.
- Maximum time for a webhook to reach its destination is approximately 32 minutes.
- 'Make sure your endpoint returns one of the following: Status code `204 No content`
  or Status code `200 OK` with a response type `application/json`, for example `{
  "success" : true }`.'
- Webhook is triggered when the video selfie capture process is complete and data
  is uploaded.
- Webhook provides the payment proof data as soon as all asynchronous processes are
  complete.
- Webhook is triggered when the omni/process/imss endpoint is called.
- Return status code 204 No content or 200 OK with response type application/json
  to avoid retry policy.
- Webhook triggers when the INE scraping process has finished.
- Recommended to implement the INE Scraping Webhook to know when results are available.
- Webhook will asynchronously send updates if the search has any updated security
  information.
- Failed attempts as a result of the user wearing lenses, mask or hat wear, are not
  consider errors, so no additional ‘error’ fields are sent within the notification.
- 'A notification will also be sent in case of any Incode API exception (unpredicted
  error). For these cases we don’t have the exact values but all three new fields:
  errorCode, error and errorMessage will be added to payload'
- Webhook triggers during 1:N Authentications.
- Contains information about the login attempt and identity matches.
- Iterate through the response keys for crosscheck results due to metadata appended
  by the system.
- Flows can support only one consent module per flow.
- All endpoints require authentication headers to be specified as stated in Incode
  API Documentation
- All endpoints require authentication headers to be specified.
- All endpoints require authentication headers to be specified
- Currently, Incode supports input that comes in Chinese, English, and Pinyin.
- Directors are not currently supported for CN.
- Endpoint can have empty body {} and in that case information will be pulled from
  module configuration and session details.
- In Israel, the Business Tax ID is known as the 'Mispar Osek' (עסק מספר), which is
  essentially the VAT registration number for businesses.
- Only available in Incode demo environment today, not available in production.
- UBOs and Directors are not currently supported for MX.
- If using the eKYC Brazil Government endpoint, data may not be available even with
  a valid CPF.
- All endpoints require authentication headers to be specified as stated in Incode
  API Documentation.
- Some codes are deprecated and may not be supported in future versions.
- Tax ID checks may not be performed due to invalid input such as dob, email, or phone.
- Phone is a mandatory field for verification.
- The API response includes a 'phoneNameMatch'.
- Before Watchlist module user data needs to be collected via Forms or ID Capture
  + ID Validation modules.
- Once session is deleted, notifications on the search results will no longer be received.
- Users can be added automatically via custom watchlist configuration by specifying
  'Automatically add suspected fraud'
- Bulk upload supports only data upload. Photos can be added manually afterwards
- The Custom Watchlist module is a processing module that operates in the background.
- End users are not aware of the processing within the private watchlist.
- Requires user consent for PII data
- API rate limits apply
- Requires an active session for API calls
- Requires setup of connected app in api
- Forms module allows dynamic collection of user information based on specific needs
  and conditions.
- Forms can have questions spread across one or multiple pages.
- Currently needed when using translations
- Omni Dashboard configuration required for most functions.
- Deprecated
- Some responses may include null values
- The Gradle configuration is now complete!
- To test your implementation, you need to upload your App Bundle to Google Play.
- Dynamic Feature Modules are supported on devices running Android 5.0 (API Level
  21) or higher.
- It is not possible to isolate the whole Incode SDK to a dynamic module.
- User has to be an approved customer by having completed the onboarding flow
- By default, Face Login will complete a liveness check and face match on the server.
- On-device liveness check and face match can be performed for offline use-cases.
- 1:N Face login is suitable if you would like to identify a user by doing a face
  scan.
- 1:1 Face Login is suitable if you want to do a face authentication for a specific
  user that is already pre-authorized.
- The resulting SelfieScanResult object contains faceLoginResult details.
- Specifies if there was a spoof attempt or not.
- You can perform on-device liveness check and face match for offline use-cases.
- SelfieScan.FaceAuthMode.LOCAL can work only in 1:1 mode and if the user's face template
  is already saved locally in the device.
- Templates get saved during successful onboarding or by using the allowFaceAuthModeFallback
  parameter.
- By default, Face Login will complete a liveness check and face match on the server.
  You can perform on-device liveness check and face match for offline use-cases.
- First, the user has to be an approved customer by having completed the onboarding
  flow.
- Assumes the document is a Passport booklet.
- If NfcScan.Builder().setProcessNfcData() is set to true, the data read from the
  NFC chip will be processed on the backend.
- The nfc module is only supported for the first ID if capturing multiple IDs before
  an NFC scan.
- E2EE adds an extra layer of security to your communications by encrypting the data
  transmitted between the server and client.
- You can initialize the SDK in 'Submit-Only Mode' to prevent access to any PII (Personal
  Identifiable Information).
- You need to use a special `apiKey` to create a limited token without read permission.
- To validate the data, you need to sync the onboardings when an Internet connection
  is available.
- APIs perform local checks, auto-capture the photo when conditions are met and return
  the captured photo through a callback.
- API calls are completely decoupled (can be called in any order and any number of
  times) and don't perform any network operations.
- Call deleteUserLocalData() when you are done with the flow.
- Updated 21 days ago
- Optional Risk Analysis feature is available since version 5.17.0.
- Consult their Getting Started documentation for more info on the Risk Analysis feature.
- Make sure you have the extensions dependency in your build.gradle
- Customizing these strings is not recommended
- You’re offline
- If you do the onboarding offline, you’ll have to sync the data when you restore
  connectivity.
- Uses Jetpack Compose for customization
- Theme can be configured via JSON or directly through the theme configuration object
- The API keys that are used for SDK initialization may be rotated for security reasons.
- Please use the Incode dashboard to revoke keys and generate new ones.
- Once an API key is revoked from the dashboard, all currently ongoing onboarding
  sessions that were using that API key will be aborted.
- Incode Welcome is part of Incode Omnichannel Biometric Identity Platform, powered
  by Incode's world class Face Recognition, Liveness detection and ID Validation models.
- Ensure you are using Xcode 15.0 or later.
- The SDK is compatible with Swift 5.9.
- The SDK supports iOS 13.0 and above.
- If you are running a Mac computer with Apple Silicon and get errors while trying
  to install the pod, use the provided commands in Terminal as a fix.
- Standard mode starts the Onboarding flow that consists of specified steps and validates
  user inputs along the way.
- Advanced mode enables you to fully customize the experience of the flow.
- Capture only mode enables you to just retrieve captured images without doing any
  validations.
- To initialize the SDK without an apiKey, follow the relevant documentation section.
- Optionally disable logs, by providing false for loggingEnabled parameter.
- Advanced mode enables you to fully customize the experience of the flow, ie. by
  splitting it into multiple sections, adding your own custom screens between some
  of the steps etc.
- Capture only mode enables you to just retrieve captured images during ie. ID or
  Selfie scan, without doing any validations such as ID validation, Face recognition
  and Liveness detection.
- In order to enable conference background mode, OpenTok requires a key-value pair
  to be added to your app.
- In the Info.plist file for your app, set up the background mode permissions as described
  in the Apple documentation for creating VoIP apps.
- Capture only mode enables you to just retrieve captured images during ID or Selfie
  scan, without doing any validations.
- To enable simulator support, set the testMode parameter to true when initializing
  the IncdOnboardingManager.
- To use Risk Analysis feature prerequisite is to use 'd-ra' framework variant.
- Full guide for E2EE is available [here](USER_GUIDE_E2EE.md)
- Possible values for localizationLanguage are 'en', 'es', and 'pt'.
- Please open Settings and enable Camera
- This can be any legal documentation that proves your address.
- This can be a document that shows you are medically insured.
- This can be a document from your bank or electronic invoice that shows a specific
  transaction.
- Make sure that entire document fits the view
- 'We need to determine

  your location'
- Identity not verified
- Identity verified!
- Common issues
- List of strings to localize VoiceOver functionality
- This API requires user consent for data processing.
- For best results, use an image with a size of around 190 × 34.
- Use Lottie JSON format for custom tutorial videos.
- Customization can be done through JSON or code.
- 'Customization mapping can be found here: https://miro.com/app/board/uXjVOS3DcdE=/?invite_link_id=263926702176'
- 'Assets and Strings mapping can be found here: https://miro.com/app/board/uXjVOS3DcUo=/?invite_link_id=582749738784'
- IncdOnboarding SDK 5.21.0 or later is required.
- Access to Workflows via Incode dashboard is necessary.
- Adding ID Scan without specifying the specific side to be scanned will result in
  adding both front and back side.
- In the Capture-only mode the ID Process module will not be added.
- Capture-only mode should be used in case you would just like to fetch captured ID
  and Selfie images, without doing any validations such as ID validation, Face recognition
  and Liveness detection.
- All the processing inside these modules is being done locally.
- By default Face Login will do a liveness check and face match on the server, and
  we highly suggest switching to on-device liveness check and face match in order
  to improve the speed of Face Login and reduce network traffic.
- FaceAuthMode.hybrid and FaceAuthMode.local require specific Onboarding SDK frameworks
  with FaceAuth models included.
- API key that are used for SDK initialization may be rotated for security reasons.
  Please use the Incode dashboard to revoke keys and generate new ones.
- If integrating through Cocoapods then no further actions are required.
- 'If manually integrating: Add `OpenSSL.xcframework` to your project (should be Embedded
  & signed). In build settings for key `LD_RUNPATH_SEARCH_PATHS` add path `@executable_path/Frameworks`.'
- Default value of the showCertificateOnSuccess is false, and AES the module will
  show only success screen and then close it automatically.
- Kiosk flow will first try to recognize a user by performing a selfie scan.
- If a user isn't recognized, a new onboarding session is created.
- Face match comparisons will be performed between the front photo ID and selfie.
- Kiosk mode is used for building iPad apps where an iPad is embedded into an Aila
  frame and positioned in a landscape orientation.
- If your app supports devices with iOS prior to 13.0, you will also need to set CoreNFC.framework
  and CryptoTokenKit.framework as optional frameworks.
- Once the flow is completed Risk analysis results will be shown on the dashboard.
- You must be using a Static variant of our SDK because the resources (.bundle) file
  is separated from the framework.
- If you are testing your app through a distribution platform (Bitrise, AppCenter
  etc.), please be aware of the 'Embed Asset Packs In Product Bundle' (EMBED_ASSET_PACKS_IN_PRODUCT_BUNDLE)
  build setting.
- Various scenarios for downloading resources using SDK.
- Incode SDK uses `incode_core` as the default name of the on-demand module.
- Dynamic Feature Modules are supported on devices running Android 5.0 (API level
  21) or higher.
- Flutter version >=1.20.0
- After installation, it's necessary to do the linking for the iOS.
- Prerequisites for a successful Face Login is that user has an approved account with
  an enrolled face.
- If you're running the app on a simulator, please set the testMode parameter to true.
- 'Running the app on iOS simulator from VSCode isn''t supported currently. Please
  run the app from Xcode for now if you want to test it on iOS Simulator. NOTE: Don''t
  forget to set testMode to true before running the app.'
- Uses SDK without an API KEY requires specific apiUrl only to the init method.
- 'For localization, supported values are currently: ''en'', ''es'', ''pt''.'
- Selfie camera not opening if flow is started multiple times
- Code Shrinker R8 can't be used for Android apps.
- The SDK requires the camera to capture ID and face images.
- For Geolocation, cordova-plugin-geolocation is required.
- Uses OAuth2 with refresh token — requires setup of connected app in Incode
- Release notes for the Incode Omni API, dashboard, and webflow onboarding changes.
- Onboarding/Face Capture - Face capture were crashing after opening the camera on
  specific devices (e.g. Motorola G6 Plus)
- Onboarding/Video Selfie - The speech term was displayed in incorrect language
- Onboarding/Face Capture - The face was captured before the Face Capture screen opened
  when Face Recording was enabled
- Onboarding/ID capture - A blank screen appeared on the ID Capture screen when a
  specific configuration was applied
- Onboarding/Face capture - The quality of autocaptured selfie images has been improved
- Onboarding/Kiosk - ID image on ID capture screen was flipped
- Onboarding/Language setting - Language support for Hmong and Somali has been added
- Onboarding/OIDC - The trouble scanning link has been removed from the QR code screen
- Onboarding - The 'Try Again' error screen message has been improved
- Onboarding/Face capture - Selfie local lenses check has been enabled
- Onboarding/ID capture - The auto-capture best frame lookup has been implemented,
  and the quality of ID capture has been increased
- Platform Release Notes 2024
- Production release date may be subject of change due to ongoing internal reorganization
- Web app onboarding improvements and fixes.
- Dashboard enhancements including new buttons and fields.
- Incode ID verification wasn't functional via redirect verification page
- Privacy policy checkbox wasn't functional for specific client
- The selfie frame was overlapping with the “incode” logo
- Incode ID logo has been updated in Incode ID website
- SMS and email “Fan ID added to Wallet” was arriving after every sign-in
- The client’s name is shown instead of the logo in the same box if the logo is not
  provided
- Fan ID email & SMS was not arriving after successful verification
- Client id and secret key wasn't mandatory for Authentication
- Template improved in general for various documents
- Specific field improvements for personal number and document number
- Webhook timeout of 5 minutes and monitoring behavior
- If tests are successful, after 1 day, timeout will be reduced to 2 minutes and observed
  closely
- If test is not successful, change will be reverted to the behavior we had before
  production release
- Web app UI for OIDC has been updated by design
- Onboarding/eKYC - Autofill address option has been added for eKYC module
- Dashboard/Session – The correct color wasn’t present for score status badge for
  ID verification and ID OCR
- Server/eKYC - Fixed taxIdNationality to be hidden in API response when not requested
- Server/Compliance - Added audit logs for Workflow
- Server/Workflows - Added support for Antifraud configurations and conditions
- UI issue/Welcome screen illustration, text font and button label weren’t by design
- UI issue/No connectivity screen - Illustration, text font weren’t by design
- Custom fields are missing in module configuration
- Onboarding Link Missing For Manual Session
- Accepted document configuration-When all exceptions are unselected, all document
  types of that country are accepted
- User may encounter issues with OTP sending and login after changing phone number.
- Rappi Mx - OCR data not extracting ocr value from INE type C correctly
- Workflows | Expand WorkflowModule to support custom/dynamic configuration
- Correction is done for desktop platform
- Correction is done
- New approach added for qr onboarding flow
- Correction in dashboard
- Correction is done for older flows
- Onboarding/Face Capture - 'Assisted Onboarding' and 'Show Preview' are not working
  – correction is done
- Onboarding - Wrong text on new tutorial for ID scan – correction is done
- Onboarding /ID Chooser - unexpected doubled VISA category next to passport picker
  – correction is done
- Onboarding/Face Login is not working – correction is done
- Onboarding/Custom flow - Fail to accept back ID – correction is done
- Onboarding/Face Capture - Feedback messages UI – correction is done
- Onboarding - Missing On-Screen Instructions for Desktop Webflow – correction is
  done
- Onboarding- The OTP in onboarding is broken – correction is done
- Onboarding - Mi browser - missing animation on selfie tutorial – correction is done
- Onboarding - Blank screen appears in specific custom flow – correction is done
- Onboarding - POA added to Workflow– correction is done
- Onboarding - On both mobile and desktop platform all UI is on the left – correction
  is done
- Onboarding - End flow screen after VS alignment is wrong – correction is done
- Onboarding - Settings menu is broken – correction is done
- Dashboard - Event Log is not sorted by Time – correction is done
- Dashboard - Create 'Face Age Check' inside Id Validation but without weight in score
  – improvement is done
- Dashboard - Remove deleted watchlist records from redshift – improvement is done
- Dashboard - Add Nfc scan module – improvement is done
- Dashboard - VS is using FaceMatch mode always even if specify selfie mode – Bug
  – correction is done
- Dashboard - Implement nfc scan in the dashboard – improvement is done
- Dashboard - Location from IP Address – improvement is done
- Dashboard - Add 'Add Face to DB' button within Authentication – improvement is done
- Dashboard - Optimized QR redirect screen leads to permission issues – correction
  is done
- Server – QR optimized page urls set as per environments – improvement is done
- Server - CSV export rows count don't match dashboard count – correction is done
- Server - Dashboard | Export CSV - File is empty, with date from before 5 days –
  correction is done
- Server - When INE is not configured for organization, scraping is used, but is timing
  out (Mexican IDs) – correction is done
- Server - Add iso IP code to the start-info endpoint – improvement is done
- Server - Add 'ExpirationDate' to 'Set Rules' tab/Rules Design function in Flow Settings
  – improvement is done
- Server - Add the capability to export CSV file from Custom Watchlists tab – improvement
  is done
- Server - Incorrect checked address (OCR) – correction is done
- Server - Rotate value of Apikey without creating new db and client (keep same clientId
  with different apikey) – improvement is done
- Server - South Africa id showing document type side cross check pass when anything
  irrelevant is passed as back of id. – correction is done
- Updated default biometric user consent
- Browser not supported message
- Forms | Support for Yes/No questions
- Language is added to QR redirects
- Support for Tagalo
- Glare check for Brazilian ID will be skipped
- Adds i18n instance.
- Fixed Languages discrepancy with i18n in SDK.
- Fix a problem when the camara was not opening in certain devices
- Remove useless tutorial page
- Phone input now prefill your area code
- Add missing translations for spanish language
- Selfie screen nows show correct error message when more than one face is detected
- In ID Capture, remove the red frame kd
- Support for ID alphanumeric in start (See this)
- Fix a problem with Tutorial Videos being too small
- Add a timeout in Selfie Capture if no face is detected (See this)
- In Capture Selfie, now a spoof attemp counts like an error
- Camara fixes for some Motorolas
- Capture Preview now shows correctly in all devices
- Returns the number in queue to Hang Out screen
- Add right message in OTP when you do not have the phone in portrait mode
- In Conference, now Chat shows the messages you have
- Fix scroll in Chat
- Some data fields may return nulls in deeply nested responses
- Requires setup of connected app in Incode platform
- Requires setup of connected app in Incode platform.
- Requires setup of OAuth2 on the Incode platform
- Face authentication requires user to take a selfie.
- Requires setup of OAuth2 in the developer console
- Ensure proper scopes are assigned for access
- OAuth2 authentication is required for all requests
- This API does not require authentication.
- Some responses may include null values in nested fields
- Uses OAuth2 with refresh token - requires setup of connected app in API
- Selfie Scan V2 is disabled by default, to enable please contact your Incode representative.
- For more information, please contact the Customer Support team.
- Updated Incode SDK `minSdk` API level to `21`
- '[BETA] `NfcScan` module - Read data from NFC chip in passports and use it for ID
  verification'
- Support for PDF upload for `OTHER_DOCUMENT_1/2/3` and `PAYMENT_PROOF` in `Document
  Scan` module
- Tap-to-focus in `ID Scan` and `Video Selfie` modules
- External `Screen View` and `Session Events` tracking
- Updated Incode SDK minSdk API level to 21
- '[BETA] NfcScan module - Read data from NFC chip in passports and use it for ID
  verification'
- Support for PDF upload for OTHER_DOCUMENT_1/2/3 and PAYMENT_PROOF in Document Scan
  module
- Tap-to-focus in ID Scan and Video Selfie modules
- External Screen View and Session Events tracking
- Providing metadata is mandatory when Deepsight is enabled and Capture-Only mode
  is being used.
- Update core-light dependency to the latest version.
- 'Use sections API instead: IncodeWelcome#startOnboardingSection'
- The default value of waitForTutorials has been changed from true to false for the
  following APIs.
- Using OnboardingConfig is now deprecated and you should be using OnboardingConfigV2
  instead.
- Some API calls may have rate limits
- Requires OAuth2 setup with client ID and secret.
- Check for specific scopes required for each endpoint.
- Android dependency 'com.incode.sdk:core-light:x.y.z' is no longer added by the integrator,
  but is part of the React Native SDK.
- iOS integration requires Podfile update and SSH access being setup on the machine.
- Added support for video streaming via new parameter `streamFrames` for `IDScan`,
  `IDScanFront`, `IDScanBack` and `SelfieScan` modules. It requires RN SDK -vc variant
  (ie. `9.0.0-vc`) and an additional `com.incode.sdk:video-streaming:1.5.5` Android
  dependency added to the `build.gradle`.
- 'Fixed on Android `java.lang.IllegalArgumentException: No enum constant crash`.'
- Update Android minSdkVersion to 23
- Remove com.incode.sdk:camera:1.1.0 dependency in build.gradle
- Some modules may have optional parameters for enhanced functionality
- Ensure proper scopes for OAuth access
- Uses OAuth2 with refresh token — requires setup of connected app in incode
- Ensure to update Android minSdkVersion to 23.
- Remove qr-face-login dependency from your build.gradle.
- Each onboarding attempt must create a new interviewId.
- Images from the front and back sides of ID documents are linked to the onboarding
  session.
- Uses API key for authentication
- 'Make sure your endpoint returns one of the following: Status code `204 No content`
  or Status code `200 OK` with a response type `application/json`, for example `{
  "success" : true }`'
- May return nulls in certain fields
- While using Incode Workforce in Trial mode, only Admin role is available. You can
  assign up to 5 admins for your Trial organization.
- Ensure mandatory user data is added to each employee's profile in Okta.
- Users with higher roles than Help Desk Administrator will not be able to reset their
  Okta password or MFA using Incode Workforce.
- Ensure both Password and Incode Workforce are marked as Required, along with any
  other MFA methods your organization uses.
- Okta adds new IDP authenticator as optional to the default policy, make sure this
  is disabled if it is unwanted for your organization.
- You must have User Administrator, Groups Administrator, Application Administrator
  and App Developer role to perform App Registration, group and user setup.
- You must have Global Administrator role to grant required App permissions.
- If the permissions are rejected, or you do not possess enough sufficient privileges
  to approve them, IAM configuration will remain in incomplete state.
- PKCE is supported for additional security.
- Ensure to include valid redirect_uri in requests.
- Integration requires setup of a verification link.
- Webhook events include verification.started, verification.succeeded, and verification.failed.
- The server token is valid for 15 minutes
- Token is valid for 15 minutes and can be used for multiple result fetch requests.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key or permissions'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '429 Too Many Requests: Max requests exceeded in a second'
- '400: Bad Request - The request was unacceptable, often due to missing a required
  parameter.'
- '401: Unauthorized - Invalid or missing access token.'
- '403: Forbidden - Invalid or missing api key.'
- '404: Not Found - The requested resource doesn''t exist.'
- '405: Method Not Allowed - Unacceptable HTTP method for requested resource.'
- '429: Too Many Requests - Rate limit exceeded.'
- '500: Server Error - Something went wrong on server side.'
- userNotFound
- connectionError
- notEnoughData
- Errors related to token mapping may occur
- '403 Forbidden: Check permissions and API key validity.'
- '500 Internal Server Error: Server error, retry the request.'
- '400 Bad Request: Check request parameters and format.'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Ensure valid authentication credentials.'
- '500 Internal Server Error: Retry later.'
- Couldn't Capture FrontId
- Couldn't Capture Back Id
- Couldn't Capture Selfie
- 'DOMException: Permission denied'
- Attribute application@allowBackup value=(true) from AndroidManifest.xml is also
  present at [com.incode.sdk:welcome:x.x.x] AndroidManifest.xml value=(false).
- 'Static interface methods are only supported starting with Android N (--min-api
  24): Lbutterknife/Unbinder;lambda$static$0()V'
- All modules with native libraries must support the same set of ABIs.
- 'FATAL EXCEPTION: RxCachedThreadScheduler'
- Build was configured to prefer settings repositories over project repositories but
  repository 'Google' was added by build file 'build.gradle'.
- Static interface methods are only supported starting with Android N (--min-api 24).
- 'InvalidUserCodeException: Build was configured to prefer settings.'
- A problem occurred evaluating root project.
- Something went wrong
- No internet connection
- User with this number already exists.
- Take off your glasses.
- Liveness check failed.
- Something went wrong.
- 'Photo

  is blurred'
- ID scan failed
- Couldn't capture
- ID not readable
- Too dark
- Invalid last 4 digits
- Error de conexión con gobierno
- Error de infraestructura de gobierno
- No hay datos suficientes para buscar
- 'Falta el identificador

  del documento'
- Falta la foto
- Módulo no compatible
- Usuario no encontrado
- Usuario no se encuentra en la base de datos del gobierno
- Identidad no verificada
- Algo correu mal.
- O documento não pôde ser carregado
- 'Couldn’t match

  you to the ID'
- Faces do not match
- Liveness failed
- Liveness success
- Matched
- User already exists
- User already in database
- Unable to authenticate document chip
- Invalid phone format
- Invalid email format
- Incorrect code, please try again.
- Government Check connection error
- Identity not verified
- Comparación no exitosa
- Código incorrecto, por favor intenta de nuevo.
- Hubo un error
- Sin conexión a internet
- Falta el identificador del documento
- Módulo not compatible
- Identidad enviada para verificación
- ¡Identidad verificada!
- Comparação mal sucedida
- Rostos não combinam
- Teste de vida falhou
- Teste de vida bem sucedido
- Comparação bem sucedida
- Usuário já existe
- 'USER_ALREADY_EXISTS: User already exists in the database'
- 'INVALID_DIGITS: The captured digits are invalid'
- Não foi possível processar as informações
- Algo deu errado com o processamento do seu video, por favor tente novamente
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'REQUEST_LIMIT_EXCEEDED: API call limit exceeded'
- 'INVALID_IMAGE: Ensure images meet specified requirements'
- '401 Unauthorized: Check admin token.'
- '204 No content: Endpoint returns no content to avoid retry policy.'
- '200 OK: Endpoint returns success response with application/json content.'
- '204 No content: Successful acknowledgment of receipt.'
- '200 OK: Successful acknowledgment with response type application/json.'
- '204 No content: Indicates successful processing of the webhook.'
- '200 OK: Response type application/json is expected.'
- '204 No content: Successful response without content.'
- '200 OK: Successful response with application/json.'
- 'Non existing customer: Can''t find customer by any criteria.'
- 'Spoof attempt detected: Spoof attempt detected. Spoof confidence 1.0'
- User is not recognized
- User blacklisted
- 'User blacklisted: NA'
- 'Non existing customer: Can''t find customer by any criteria'
- 'User is not recognized: NA'
- '400: businessName, taxId, and country are minimum required fields.'
- 'employment_type: failure: Unavailable'
- 'TNPID: taxId check was not performed due to invalid dob'
- 'TNPIE: taxId check was not performed due to invalid email'
- 'TNPIP: taxId check was not performed due to invalid phone'
- 'TNPIR: taxId check was not performed due to invalid request'
- 'TNPIS: taxId check was not performed due to invalid SSN'
- 'TNPIZ: taxId check was not performed due to invalid zip code'
- 'TNPMS: taxId check was not performed due to missing SSN'
- If phone is not in international E.164 format, you will see an error message.
- If both mandatory fields (phone & countryCode) are not submitted, you will see an
  error message.
- 'Unsupported state: Request for a state that is currently not supported'
- 'Missing mandatory fields: Request without appropriate mandatory fields'
- '401 Unauthorized: Check if the authentication token is valid'
- '404 Not Found: Verify the endpoint URL'
- 'SESSION_EXPIRED: Re-authenticate to obtain a new session'
- 'INVALID_TOKEN: Check the validity of the token'
- 'NoMoreTries: The user has reached the maximum attempts configured in the dashboard.'
- 'SessionError: The Session Token is empty, invalid, or otherwise invalid.'
- 'UploadError: Failed to upload the captured ID.'
- 'PermissionDenied: The user denied the camera permissions.'
- 'InconsistentFlowConfiguration: The flow configuration does not include the necessary
  module.'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify OAuth token'
- '500 Internal Server Error: Retry after some time'
- Oops… something went wrong. Please try later.
- The access token has expired
- ID document not accepted
- Scan of the document contains shadows or too dark. Please try scanning your document
  again.
- 'ApiKeyRotationException: Your logic for the rotation of the key'
- 'EXC_BAD_ACCESS: Indicates a memory access error, possibly due to conflicting dependencies.'
- Government Check infrastructure error
- Insufficient lookup data
- Missing document identifier
- Missing selfie
- Module not supported error
- User not found
- User not in government check DB
- 'Couldn''t match

  you to the ID'
- Some error occured
- User's face not found
- 'noDocuments: No documents are available for the onboarding session'
- 'failedToSign: AES signing failed'
- 'notAvailable: NFC scan is not available. Most likely device''s iOS version is below
  13.0.'
- 'userDocumentHasNoChip: User selected NO for NFC chip availability.'
- 'noScanAttemptsRemaining: User has used all NFC scan attempts without success.'
- 'INTERNAL_ERROR: unknown error, please contact Incode to resolve the issue and provide
  the error code.'
- 'NETWORK_ERROR: The download request failed because of a network error, retry again
  later.'
- 'ACCESS_DENIED: The app is unable to register the request because of insufficient
  permissions, retry after user accepts the permissions.'
- 'simulatorDetected: Incode init failed, simulator detected.'
- 'testModeEnabled: Incode init failed, test mode enabled.'
- 'VERIFICATION_FAILED: Check user input and verification method'
- 'PLACEHOLDER_ERROR: Ensure placeholders are properly defined'
- '400 Bad Request: Invalid parameters provided.'
- '401 Unauthorized: Ensure API key is correct.'
- '500 Internal Server Error: An unexpected error occurred on the server.'
- 'INVALID_CREDENTIALS: Check your client ID and secret'
- 'ACCESS_DENIED: Ensure you have the correct permissions'
- 'TOKEN_EXPIRED: Refresh your OAuth token'
- '403 FORBIDDEN: Ensure you have the right permissions'
- '401 Unauthorized: Check your authentication credentials'
- '404 Not Found: The requested resource does not exist'
- '500 Internal Server Error: An unexpected error occurred'
- 'No esperábamos este error, pero estamos tomando nota:'
- Hubo un problema
- Por favor, inténtelo de nuevo
- '401 Unauthorized: Check OAuth token'
- '403 Forbidden: Insufficient permissions'
- '429 Too Many Requests: Rate limit exceeded'
- '400 Bad Request: Validate your request parameters'
- '401 Unauthorized: Check your OAuth token'
- 'errorUnacceptableID: Document fails ID-type validation'
- '401 Unauthorized: Check API key or OAuth token'
- '404 Not Found: Verify endpoint path'
- '500 Internal Server Error: Server error, try again later'
- 'Error: Facelogin failed'
- 'Error: Liveness failed'
- 400 Bad Request
- 'invalid_grant: The provided authorization code is invalid or has expired.'
- 'invalid_request: The request is missing required parameters or has invalid values.'
- 'unauthorized_client: The client is not authorized to use this endpoint.'
- '400 Bad Request: Missing required parameter: integration_id'
- '400 Bad Request: Invalid login hint type. Accepted values are EMAIL or USERNAME.'
- 'INVALID_PARAMETER_INTEGRATION_ID: Missing required parameter: integration_id'
- 'INVALID_LOGIN_HINT_TYPE: Invalid login hint type. Accepted values are EMAIL or
  USERNAME.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - api-key
  - X-Incode-Hardware-Id
  - Authorization
  - OAuth2
  - AccessToken
  - APIKey
  - Service Application
  - Okta API Scopes
  - Help Desk Administrator
client:
  base_url: https://incode.com
  auth:
    type: oauth2
source_metadata: null
