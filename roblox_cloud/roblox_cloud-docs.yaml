resources:
- name: Player
  endpoint:
    path: /docs/en-us/reference/engine/classes/Player
    method: GET
    data_selector: Player
    params: {}
- name: Players
  endpoint:
    path: /docs/en-us/reference/engine/classes/Players
    method: GET
    data_selector: Players
    params: {}
- name: UI objects
  endpoint:
    path: /docs/en-us/ui/ui-objects
    method: GET
    data_selector: objects
    params: {}
- name: On-screen UI
  endpoint:
    path: /docs/en-us/ui/on-screen-ui
    method: GET
    data_selector: containers
    params: {}
- name: In-experience UI
  endpoint:
    path: /docs/en-us/ui/in-experience-ui
    method: GET
    data_selector: containers
    params: {}
- name: Avatar Setup
  endpoint:
    path: /docs/avatar-setup
    method: GET
    data_selector: model
    params: {}
- name: Daily Engagement Rewards
  endpoint:
    path: /daily-engagement-rewards
    method: GET
    data_selector: daily_engagement_data
- name: Audience Expansion Rewards
  endpoint:
    path: /audience-expansion-rewards
    method: GET
    data_selector: audience_expansion_data
- name: avatar_components
  endpoint:
    path: /docs/en-us/avatar/components
    method: GET
    data_selector: components
    params: {}
- name: avatar_creation_process
  endpoint:
    path: /docs/en-us/avatar/creation-process
    method: GET
    data_selector: creation_process
    params: {}
- name: assets
  endpoint:
    path: /docs/projects/assets
    method: GET
    data_selector: assets
    params: {}
- name: group_membership
  endpoint:
    path: /groups/{groupId}/memberships/{membershipId}
    method: PATCH
- name: bundles
  endpoint:
    path: /docs/resources/feature-packages/bundles
    method: GET
    data_selector: ''
    params: {}
- name: missions
  endpoint:
    path: /docs/resources/feature-packages/missions
    method: GET
    data_selector: ''
    params: {}
- name: season_passes
  endpoint:
    path: /docs/resources/feature-packages/season-passes
    method: GET
    data_selector: ''
    params: {}
- name: engagement_rewards
  endpoint:
    path: /docs/resources/feature-packages/engagement-rewards
    method: GET
    data_selector: ''
    params: {}
- name: endorsed_weapons
  endpoint:
    path: /docs/resources/weapons-kit
    method: GET
    data_selector: weapons
    params: {}
- name: ShotEffect
  endpoint:
    path: /WeaponsSystem/Assets/Effects/Shots
    method: GET
    data_selector: shots
- name: HitParticles
  endpoint:
    path: /WeaponsSystem/Assets/Effects/HitMarks
    method: GET
    data_selector: hitMarks
- name: Scope
  endpoint:
    path: /docs/reference/engine/classes/Frame
    method: GET
    data_selector: ScopeImage
- name: SmallTouchscreen
  endpoint:
    path: /docs/reference/engine/classes/Frame
    method: GET
    data_selector: buttons
- name: DirectionalIndicator
  endpoint:
    path: /docs/reference/engine/classes/Frame
    method: POST
    data_selector: Indicator
- name: DamageBillboard
  endpoint:
    path: /docs/reference/engine/classes/DamageBillboardHandler
    method: POST
    data_selector: billboard
- name: ShoulderCamera
  endpoint:
    path: /docs/reference/engine/classes/ShoulderCamera
    method: GET
    data_selector: configuration
- name: SprintAndZoomControl
  endpoint:
    path: /docs/reference/engine/classes/Configuration
    method: GET
    data_selector: sprint
- name: NPCs
  endpoint:
    path: /docs/resources/npc-kit
    method: GET
    data_selector: NPCs
    params: {}
- name: projects
  endpoint:
    path: /docs/projects
    method: GET
    data_selector: projects
    params: {}
- name: data_model
  endpoint:
    path: /docs/projects/data-model
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /docs/projects/groups
    method: GET
    data_selector: data
    params: {}
- name: BasePart
  endpoint:
    path: /docs/reference/engine/classes/BasePart
    method: GET
    data_selector: objects
- name: MeshPart
  endpoint:
    path: /docs/reference/engine/classes/MeshPart
    method: GET
    data_selector: objects
- name: Attachment
  endpoint:
    path: /docs/reference/engine/classes/Attachment
    method: GET
    data_selector: objects
- name: Model
  endpoint:
    path: /docs/reference/engine/classes/Model
    method: GET
    data_selector: objects
- name: Script
  endpoint:
    path: /docs/reference/engine/classes/Script
    method: GET
    data_selector: objects
- name: Terrain
  endpoint:
    path: /docs/reference/engine/classes/Terrain
    method: GET
    data_selector: objects
- name: basic_characters
  endpoint:
    path: /docs/reference/engine/classes/Model
    method: GET
    data_selector: basic_character_data
    params: {}
- name: avatar_characters
  endpoint:
    path: /docs/reference/engine/classes/Model
    method: GET
    data_selector: avatar_character_data
    params: {}
- name: Players
  endpoint:
    path: /docs/reference/engine/classes/Players
    method: GET
    data_selector: instances
    params: {}
- name: Player
  endpoint:
    path: /docs/reference/engine/classes/Player
    method: GET
    data_selector: instances
    params: {}
- name: DataStoreService
  endpoint:
    path: /docs/cloud-services/data-stores
    method: GET
    data_selector: data
    params: {}
- name: MemoryStoreService
  endpoint:
    path: /docs/cloud-services/memory-stores
    method: GET
    data_selector: data
    params: {}
- name: Open Cloud APIs for data stores
  endpoint:
    path: /docs/cloud/reference/DataStore
    method: GET
    data_selector: data
    params: {}
- name: voice_chat_feature
  endpoint:
    path: /voice/chat
    method: GET
    data_selector: voiceChatEnabled
    params: {}
- name: collaborators
  endpoint:
    path: /docs/projects/collaboration
    method: GET
    data_selector: collaborators
    params: {}
- name: comments
  endpoint:
    path: /docs/projects/comments
    method: GET
    data_selector: comments
    params: {}
- name: experiences
  endpoint:
    path: /docs/en-us/experiences
    method: GET
    data_selector: experiences
    params: {}
- name: data_store
  endpoint:
    path: /cloud-services/data-stores
    method: GET
    data_selector: dataStores
    params: {}
- name: Memory stores service
  endpoint:
    path: /docs/cloud-services/memory-stores
    method: GET
    data_selector: service_details
    params: {}
- name: MessagingService
  endpoint:
    path: /docs/reference/engine/classes/MessagingService
    method: GET
    data_selector: messages
    params: {}
- name: basic_info
  endpoint:
    path: /docs/en-us/platform/game-settings/basic-info
    method: GET
    data_selector: settings
- name: communication
  endpoint:
    path: /docs/en-us/platform/game-settings/communication
    method: GET
    data_selector: settings
- name: permissions
  endpoint:
    path: /docs/en-us/platform/game-settings/permissions
    method: GET
    data_selector: settings
- name: monetization
  endpoint:
    path: /docs/en-us/platform/game-settings/monetization
    method: GET
    data_selector: settings
- name: security
  endpoint:
    path: /docs/en-us/platform/game-settings/security
    method: GET
    data_selector: settings
- name: localization
  endpoint:
    path: /docs/en-us/platform/game-settings/localization
    method: GET
    data_selector: settings
- name: world
  endpoint:
    path: /docs/en-us/platform/game-settings/world
    method: GET
    data_selector: settings
- name: other
  endpoint:
    path: /docs/en-us/platform/game-settings/other
    method: GET
    data_selector: settings
- name: insert_modify_scripts
  endpoint:
    path: /docs/studio/script-editor
    method: GET
- name: insert_modify_objects
  endpoint:
    path: /docs/studio/ui-overview
    method: GET
- name: provide_answers_suggestions
  endpoint:
    path: /docs/studio/ui-overview
    method: GET
- name: generate_materials
  endpoint:
    path: /docs/studio/material-generator
    method: GET
- name: generate_3d_models
  endpoint:
    path: /docs/studio/material-generator
    method: GET
- name: Import
  endpoint:
    path: /docs/parts/terrain#heightmaps-and-colormaps
    method: GET
    data_selector: Import tool settings
    params: {}
- name: Generate
  endpoint:
    path: /docs/studio/terrain-editor/Create-Tab-Generate
    method: GET
    data_selector: Biome settings
    params: {}
- name: Clear
  endpoint:
    path: /docs/studio/terrain-editor/Create-Tab-Clear
    method: GET
    data_selector: Clear tool settings
    params: {}
- name: Select
  endpoint:
    path: /docs/studio/terrain-editor/Edit-Tab-Select
    method: GET
    data_selector: Select tool settings
    params: {}
- name: Transform
  endpoint:
    path: /docs/studio/terrain-editor/Edit-Tab-Transform
    method: GET
    data_selector: Transform tool settings
    params: {}
- name: Fill
  endpoint:
    path: /docs/studio/terrain-editor/Edit-Tab-Fill
    method: GET
    data_selector: Fill tool settings
    params: {}
- name: Sea Level
  endpoint:
    path: /docs/studio/terrain-editor/Edit-Tab-Sea-Level
    method: GET
    data_selector: Sea level settings
    params: {}
- name: Draw
  endpoint:
    path: /docs/studio/terrain-editor/Edit-Tab-Draw
    method: GET
    data_selector: Draw tool settings
    params: {}
- name: Sculpt
  endpoint:
    path: /docs/studio/terrain-editor/Edit-Tab-Sculpt
    method: GET
    data_selector: Sculpt tool settings
    params: {}
- name: Smooth
  endpoint:
    path: /docs/studio/terrain-editor/Edit-Tab-Smooth
    method: GET
    data_selector: Smooth tool settings
    params: {}
- name: Paint
  endpoint:
    path: /docs/studio/terrain-editor/Edit-Tab-Paint
    method: GET
    data_selector: Paint tool settings
    params: {}
- name: Flatten
  endpoint:
    path: /docs/studio/terrain-editor/Edit-Tab-Flatten
    method: GET
    data_selector: Flatten tool settings
    params: {}
- name: rig_builder
  endpoint:
    path: /docs/studio/rig-builder
    method: GET
- name: task_scheduler
  endpoint:
    path: /docs/studio/microprofiler/task-scheduler
    method: GET
    data_selector: tasks
- name: tag_reference
  endpoint:
    path: /docs/studio/microprofiler/tag-table
    method: GET
    data_selector: tags
- name: use_microprofiler
  endpoint:
    path: /docs/studio/microprofiler/use-microprofiler
    method: GET
    data_selector: usage
- name: microprofiler_modes
  endpoint:
    path: /docs/studio/microprofiler/modes
    method: GET
    data_selector: modes
- name: web_ui
  endpoint:
    path: /docs/studio/microprofiler/use-the-web-ui
    method: GET
    data_selector: web_ui_features
- name: Accessory Fitting Tool
  endpoint:
    path: /accessory-fitting-tool
    method: GET
    data_selector: tools
- name: Import 3D
  endpoint:
    path: /import-3d
    method: GET
    data_selector: import
- name: Rig Builder
  endpoint:
    path: /rig-builder
    method: GET
    data_selector: rigs
- name: Avatar Setup
  endpoint:
    path: /avatar-setup
    method: GET
    data_selector: avatar
- name: Animation Editor
  endpoint:
    path: /animation-editor
    method: GET
    data_selector: animations
- name: TeleportAsync
  endpoint:
    path: /docs/reference/engine/classes/TeleportService#TeleportAsync
    method: POST
    data_selector: parameters
    params: {}
- name: SetTeleportGui
  endpoint:
    path: /docs/reference/engine/classes/TeleportService#SetTeleportGui
    method: POST
    data_selector: parameters
    params: {}
- name: GetLocalPlayerTeleportData
  endpoint:
    path: /docs/reference/engine/classes/TeleportService#GetLocalPlayerTeleportData
    method: GET
    data_selector: parameters
    params: {}
notes:
- Scripts are plain text files that let you add custom, dynamic behavior to your experiences.
- Adding audio to your experiences is crucial for elevating your experiences to new
  heights.
- Roblox provides built-in UI objects for quick creation of graphical user interfaces.
- Roblox's mission for discovery is to connect every user with the best creation and
  community for them.
- Creators begin earning Daily Engagement Rewards starting July 24, 2025 — no additional
  enrollment is required.
- Audience Expansion Rewards are limited to one per user.
- Roblox provides free tools, hosting, and infrastructure that power automatic, synchronous
  real-time gameplay.
- Only the x-api-key and content-type headers are allowed.
- The x-api-key header must be a Secret.
- Endorsed weapons can be used in any experience.
- Default value for ShouldMovePart is false.
- Default value for HitParticlesUsePartColor is true.
- The visual appearance of an NPC can be customized by adding/modifying various BodyParts
  objects and by adding Accessory objects.
- Roblox projects are stored in the cloud for convenient collaboration, editing, and
  version control.
- Tools mentioned on this page are not maintained by Roblox and may change or stop
  working at any time.
- Characters can range between basic characters and avatar characters.
- Basic characters are often used as NPCs and typically perform one or two simple
  tasks.
- Data stores can only be accessed by server-side scripts.
- Memory stores store temporary data that expires after a certain period of time,
  lasting up to 45 days.
- Voice Chat is only available for places that support a maximum of 50 players.
- Studio automatically saves the project to the cloud every four minutes.
- Accessing data stores in Studio can be dangerous for live experiences because Studio
  accesses the same data stores as the client application.
- Memory stores are suitable for frequent and ephemeral data that change rapidly and
  don't need to be durable.
- Items are evicted after they expire, and memory quota is freed up for new entries.
- Secrets are sensitive information like API keys, passwords, and access tokens that
  you use to authenticate with external services.
- For security reasons, the secrets store for each experience is only available to
  live game servers or Team Test environments.
- Your payment method is charged either at the end of the month when a bill is generated,
  or when your usage reaches $10 USD, whichever comes first.
- Roblox notifies you by email when your usage reaches 80% of your budget, and then
  again when it reaches 100%.
- This tool is currently in beta.
- The script editor in Studio is the primary tool for scripting on Roblox.
- Log files can be accessed on different operating systems.
- Studio offers many debugging tools commonly found in Integrated Development Environments
  (IDEs).
- The Output window displays errors captured from running scripts, messages from Roblox
  Engine, log messages, messages from calls to print(), and errors from calls to warn().
- MicroProfiler provides detailed timing information for task scheduler tasks.
- You can profile critical portions of the code using debug.profilebegin() and debug.profileend().
- Test your changes by using the Avatar Settings preview and by playtesting in Studio
  so that you fully understand the impact on player avatars before publishing changes
  to your live experience.
- You can only call TeleportAsync() from server-side scripts.
- Wrap teleports in protected calls to handle errors.
errors:
- '403 Forbidden: If you try to use a blocked port.'
- 'Number of requests exceeded limit: pcall may fail.'
- 'DataStructureRequestsOverLimit: Exceeds data structure level request unit limit.'
- 'TotalRequestsOverLimit: Exceeds universe-level request unit limit.'
- 'DataStructureItemsOverLimit: Exceeds data structure level item count limit (1M).'
- 'DataStructureMemoryOverLimit: Exceeds data structure level memory size limit (100MB).'
- 'TotalMemoryOverLimit: Exceeds universe-level memory quota.'
- 'TeleportResult.Flooded: Teleport too many times in a short period.'
- 'TeleportResult.Failure: General failure in teleporting.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://create.roblox.com
  headers:
    Accept: application/json
source_metadata: null
