resources:
- name: error_reporting
  endpoint:
    path: /api/store/
    method: POST
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /api/{project_id}/store/
    method: POST
    data_selector: event
- name: public-dsn
  endpoint:
    path: /0
    method: GET
    data_selector: example-org / example-project
    params: {}
- name: session_replay
  endpoint:
    path: /platforms/android/session-replay/
    method: GET
    data_selector: records
- name: tracing
  endpoint:
    path: /platforms/android/tracing/
    method: GET
    data_selector: records
- name: profiling
  endpoint:
    path: /platforms/android/profiling/
    method: GET
    data_selector: records
- name: error_monitoring
  endpoint:
    path: /platforms/android/
    method: GET
    data_selector: records
- name: public-dsn
  endpoint:
    path: /product/sentry-basics/dsn-explainer/
    method: GET
    data_selector: public-dsn
    params: {}
- name: Installation Methods
  endpoint:
    path: /platforms/unreal/install/
    method: GET
    data_selector: installation_methods
    params: {}
- name: Overview of SDK Versions
  endpoint:
    path: /platforms/unreal/install/#overview-of-sdk-versions
    method: GET
    data_selector: sdk_versions
    params: {}
- name: Installing from GitHub Releases
  endpoint:
    path: /platforms/unreal/install/#installing-from-github-releases-recommended
    method: GET
    data_selector: installing_from_github
    params: {}
- name: Installing from Fab
  endpoint:
    path: /platforms/unreal/install/#installing-from-fab
    method: GET
    data_selector: installing_from_fab
    params: {}
- name: Build Yourself
  endpoint:
    path: /platforms/unreal/install/#build-yourself
    method: GET
    data_selector: build_yourself
    params: {}
- name: Confirm Installation
  endpoint:
    path: /platforms/unreal/install/#confirm-installation
    method: GET
    data_selector: confirm_installation
    params: {}
- name: events
  endpoint:
    path: /api/0/organizations/acme/issues/123456/events/
    method: GET
    params: {}
- name: metric_alert_rule
  endpoint:
    path: /api/alerts/create-a-metric-alert-rule-for-an-organization/
    method: POST
- name: spike_protection_notification
  endpoint:
    path: /api/alerts/create-a-spike-protection-notification-action/
    method: POST
- name: issue_alert_rule
  endpoint:
    path: /api/alerts/create-an-issue-alert-rule-for-a-project/
    method: POST
- name: create_monitor
  endpoint:
    path: /api/crons/create-a-monitor/
    method: POST
- name: delete_monitor
  endpoint:
    path: /api/crons/delete-a-monitor-or-monitor-environments/
    method: DELETE
- name: retrieve_monitor
  endpoint:
    path: /api/crons/retrieve-a-monitor/
    method: GET
- name: retrieve_monitors_organization
  endpoint:
    path: /api/crons/retrieve-monitors-for-an-organization/
    method: GET
- name: update_monitor
  endpoint:
    path: /api/crons/update-a-monitor/
    method: PATCH
- name: create_dashboard
  endpoint:
    path: /api/dashboards/create-a-new-dashboard-for-an-organization/
    method: POST
- name: delete_dashboard
  endpoint:
    path: /api/dashboards/delete-an-organizations-custom-dashboard/
    method: DELETE
- name: edit_dashboard
  endpoint:
    path: /api/dashboards/edit-an-organizations-custom-dashboard/
    method: PUT
- name: list_dashboards
  endpoint:
    path: /api/dashboards/list-an-organizations-custom-dashboards/
    method: GET
- name: retrieve_dashboard
  endpoint:
    path: /api/dashboards/retrieve-an-organizations-custom-dashboard/
    method: GET
- name: List a Project's Environments
  endpoint:
    path: /api/environments/list-a-projects-environments/
    method: GET
- name: List an Organization's Environments
  endpoint:
    path: /api/environments/list-an-organizations-environments/
    method: GET
- name: Retrieve a Project Environment
  endpoint:
    path: /api/environments/retrieve-a-project-environment/
    method: GET
- name: Update a Project Environment
  endpoint:
    path: /api/environments/update-a-project-environment/
    method: PATCH
- name: bulk_mutate_issues
  endpoint:
    path: /api/events/bulk-mutate-a-list-of-issues/
    method: POST
- name: bulk_remove_issues
  endpoint:
    path: /api/events/bulk-remove-a-list-of-issues/
    method: POST
- name: list_project_error_events
  endpoint:
    path: /api/events/list-a-projects-error-events/
    method: GET
- name: list_project_issues
  endpoint:
    path: /api/events/list-a-projects-issues/
    method: GET
- name: remove_issue
  endpoint:
    path: /api/events/remove-an-issue/
    method: DELETE
- name: retrieve_issue
  endpoint:
    path: /api/events/retrieve-an-issue/
    method: GET
- name: update_issue
  endpoint:
    path: /api/events/update-an-issue/
    method: PUT
- name: Create or update an External Issue
  endpoint:
    path: /api/integration/create-or-update-an-external-issue/
    method: POST
- name: Delete a custom integration
  endpoint:
    path: /api/integration/delete-a-custom-integration/
    method: DELETE
- name: Delete an External Issue
  endpoint:
    path: /api/integration/delete-an-external-issue/
    method: DELETE
- name: List an Organization's Integration Platform Installations
  endpoint:
    path: /api/integration/list-an-organizations-integration-platform-installations/
    method: GET
- name: Retrieve a custom integration by ID or slug
  endpoint:
    path: /api/integration/retrieve-a-custom-integration-by-id-or-slug/
    method: GET
- name: Retrieve custom integration issue links for the given Sentry issue
  endpoint:
    path: /api/integration/retrieve-custom-integration-issue-links-for-the-given-sentry-issue/
    method: GET
- name: Retrieve the custom integrations created by an organization
  endpoint:
    path: /api/integration/retrieve-the-custom-integrations-created-by-an-organization/
    method: GET
- name: Update an existing custom integration
  endpoint:
    path: /api/integration/update-an-existing-custom-integration/
    method: PUT
- name: add_member
  endpoint:
    path: /api/organizations/add-a-member-to-an-organization/
    method: POST
- name: delete_member
  endpoint:
    path: /api/organizations/delete-an-organization-member/
    method: DELETE
- name: list_repo_commits
  endpoint:
    path: /api/organizations/list-a-repositorys-commits/
    method: GET
- name: list_members
  endpoint:
    path: /api/organizations/list-an-organizations-members/
    method: GET
- name: list_projects
  endpoint:
    path: /api/organizations/list-an-organizations-projects/
    method: GET
- name: list_repositories
  endpoint:
    path: /api/organizations/list-an-organizations-repositories/
    method: GET
- name: list_trusted_relays
  endpoint:
    path: /api/organizations/list-an-organizations-trusted-relays/
    method: GET
- name: resolve_short_id
  endpoint:
    path: /api/organizations/resolve-a-short-id/
    method: GET
- name: resolve_event_id
  endpoint:
    path: /api/organizations/resolve-an-event-id/
    method: GET
- name: retrieve_organization
  endpoint:
    path: /api/organizations/retrieve-an-organization/
    method: GET
- name: retrieve_member
  endpoint:
    path: /api/organizations/retrieve-an-organization-member/
    method: GET
- name: retrieve_events_count_by_project
  endpoint:
    path: /api/organizations/retrieve-an-organizations-events-count-by-project/
    method: GET
- name: retrieve_event_counts
  endpoint:
    path: /api/organizations/retrieve-event-counts-for-an-organization-v2/
    method: GET
- name: update_organization
  endpoint:
    path: /api/organizations/update-an-organization/
    method: PUT
- name: update_member_roles
  endpoint:
    path: /api/organizations/update-an-organization-members-roles/
    method: PUT
- name: repository_upload_token
  endpoint:
    path: /api/prevent/regenerates-a-repository-upload-token-and-returns-the-new-token/
    method: GET
- name: aggregated_test_result_metrics
  endpoint:
    path: /api/prevent/retrieve-aggregated-test-result-metrics-for-repository-owner-and-organization/
    method: GET
- name: paginated_test_results
  endpoint:
    path: /api/prevent/retrieve-paginated-list-of-test-results-for-repository-owner-and-organization/
    method: GET
- name: test_suites
  endpoint:
    path: /api/prevent/retrieve-test-suites-belonging-to-a-repositorys-test-results/
    method: GET
- name: repository_tokens
  endpoint:
    path: /api/prevent/retrieves-a-paginated-list-of-repository-tokens-for-a-given-owner/
    method: GET
- name: branches
  endpoint:
    path: /api/prevent/retrieves-list-of-branches-for-a-given-owner-and-repository/
    method: GET
- name: repositories
  endpoint:
    path: /api/prevent/retrieves-list-of-repositories-for-a-given-owner/
    method: GET
- name: create_project
  endpoint:
    path: /api/projects/create-a-new-project/
    method: POST
- name: delete_project
  endpoint:
    path: /api/projects/delete-a-project/
    method: DELETE
- name: list_projects
  endpoint:
    path: /api/projects/list-your-projects/
    method: GET
- name: Create a Deploy
  endpoint:
    path: /api/releases/create-a-deploy/
    method: POST
- name: Create a New Release for an Organization
  endpoint:
    path: /api/releases/create-a-new-release-for-an-organization/
    method: POST
- name: Delete a Project Release's File
  endpoint:
    path: /api/releases/delete-a-project-releases-file/
    method: DELETE
- name: Delete an Organization Release's File
  endpoint:
    path: /api/releases/delete-an-organization-releases-file/
    method: DELETE
- name: Delete an Organization's Release
  endpoint:
    path: /api/releases/delete-an-organizations-release/
    method: DELETE
- name: List a Project Release's Commits
  endpoint:
    path: /api/releases/list-a-project-releases-commits/
    method: GET
- name: List a Project's Release Files
  endpoint:
    path: /api/releases/list-a-projects-release-files/
    method: GET
- name: List a Release's Deploys
  endpoint:
    path: /api/releases/list-a-releases-deploys/
    method: GET
- name: List an Organization Release's Commits
  endpoint:
    path: /api/releases/list-an-organization-releases-commits/
    method: GET
- name: List an Organization's Release Files
  endpoint:
    path: /api/releases/list-an-organization's-release-files/
    method: GET
- name: List an Organization's Releases
  endpoint:
    path: /api/releases/list-an-organization's-releases/
    method: GET
- name: Retrieve a Project Release's File
  endpoint:
    path: /api/releases/retrieve-a-project-releases-file/
    method: GET
- name: Retrieve an Organization Release's File
  endpoint:
    path: /api/releases/retrieve-an-organization-releases-file/
    method: GET
- name: Retrieve an Organization's Release
  endpoint:
    path: /api/releases/retrieve-an-organizations-release/
    method: GET
- name: Retrieve Files Changed in a Release's Commits
  endpoint:
    path: /api/releases/retrieve-files-changed-in-a-releases-commits/
    method: GET
- name: Retrieve Release Health Session Statistics
  endpoint:
    path: /api/releases/retrieve-release-health-session-statistics/
    method: GET
- name: Retrieve Statuses of Release Thresholds (Alpha)
  endpoint:
    path: /api/releases/retrieve-statuses-of-release-thresholds-alpha/
    method: GET
- name: Update a Project Release File
  endpoint:
    path: /api/releases/update-a-project-release-file/
    method: PUT
- name: Update an Organization Release File
  endpoint:
    path: /api/releases/update-an-organization-release-file/
    method: PUT
- name: Update an Organization's Release
  endpoint:
    path: /api/releases/update-an-organizations-release/
    method: PUT
- name: Upload a New Organization Release File
  endpoint:
    path: /api/releases/upload-a-new-organization-release-file/
    method: POST
- name: Upload a New Project Release File
  endpoint:
    path: /api/releases/upload-a-new-project-release-file/
    method: POST
- name: delete_replay_instance
  endpoint:
    path: /api/replays/delete-a-replay-instance/
    method: DELETE
- name: list_organizations_replays
  endpoint:
    path: /api/replays/list-an-organizations-replays/
    method: GET
- name: list_organizations_selectors
  endpoint:
    path: /api/replays/list-an-organizations-selectors/
    method: GET
- name: list_clicked_nodes
  endpoint:
    path: /api/replays/list-clicked-nodes/
    method: GET
- name: list_recording_segments
  endpoint:
    path: /api/replays/list-recording-segments/
    method: GET
- name: list_users_who_viewed_replay
  endpoint:
    path: /api/replays/list-users-who-have-viewed-a-replay/
    method: GET
- name: retrieve_count_of_replays
  endpoint:
    path: /api/replays/retrieve-a-count-of-replays-for-a-given-issue-or-transaction/
    method: GET
- name: retrieve_recording_segment
  endpoint:
    path: /api/replays/retrieve-a-recording-segment/
    method: GET
- name: retrieve_replay_instance
  endpoint:
    path: /api/replays/retrieve-a-replay-instance/
    method: GET
- name: Add an Organization Member to a Team
  endpoint:
    path: /api/teams/add-an-organization-member-to-a-team/
    method: POST
- name: Create a New Team
  endpoint:
    path: /api/teams/create-a-new-team/
    method: POST
- name: Delete a Team
  endpoint:
    path: /api/teams/delete-a-team/
    method: DELETE
- name: Delete an Organization Member from a Team
  endpoint:
    path: /api/teams/delete-an-organization-member-from-a-team/
    method: DELETE
- name: List a Project's Teams
  endpoint:
    path: /api/teams/list-a-projects-teams/
    method: GET
- name: List a Team's Members
  endpoint:
    path: /api/teams/list-a-teams-members/
    method: GET
- name: List a Team's Projects
  endpoint:
    path: /api/teams/list-a-teams-projects/
    method: GET
- name: List a User's Teams for an Organization
  endpoint:
    path: /api/teams/list-a-users-teams-for-an-organization/
    method: GET
- name: List an Organization's Teams
  endpoint:
    path: /api/teams/list-an-organizations-teams/
    method: GET
- name: Retrieve a Team
  endpoint:
    path: /api/teams/retrieve-a-team/
    method: GET
- name: Update a Team
  endpoint:
    path: /api/teams/update-a-team/
    method: PUT
- name: Update an Organization Member's Team Role
  endpoint:
    path: /api/teams/update-an-organization-members-team-role/
    method: PATCH
- name: users
  endpoint:
    path: /api/users/
    method: GET
- name: list_your_organizations
  endpoint:
    path: /api/users/list-your-organizations/
    method: GET
notes:
- Enable logs to be sent to Sentry
- Sentry captures data by using an SDK within your application's runtime.
- Session Replay is now generally available for mobile.
- The minimum configuration required is the DSN to your project.
- Ensure that the addon is placed exactly as it is in the demo project, in the addons/sentry
  folder, preserving the exact casing.
- Sentry captures data by using an SDK within your application’s runtime.
- Calling sentry_close() before exiting the application is critical.
- You can get started using Sentry on Nintendo Switch without any changes to your
  game, on devkits as well as retail devices.
- Support for Switch 2 as well as the original Switch is available.
- You may need to import the module if you've just installed it.
- If you'd like to include data that potentially includes PII, such as Machine Name
- Sentry saves your configuration to Assets/Resources/Sentry/SentryOptions.asset and
  reads from there both at build time and runtime.
- To capture all errors, even the one during the startup of your application, you
  should initialize the Sentry .NET SDK as soon as possible.
- Profiling uses the Android runtime's tracer under the hood to sample threads.
- There are known issues that this tracer can cause crashes in certain circumstances.
- Pagination in the API is handled via the Link header standard.
- Cursors will always be returned for both a previous and a next page, even if there
  are no results on these pages.
- Sentry rate limits every API request made to prevent abuse and resource overuse.
- The limit is applied to each unique combination of caller and endpoint.
- Sentry SaaS customers must be on a Business Plan with SAML2 Enabled.
- SCIM does not currently support syncing passwords, or setting any User attributes
  other than `active`.
- Sentry's command line interface can be used for release management.
- Debug information files allow Sentry to extract stack traces and provide more information
  about crash reports for most compiled platforms.
errors:
- Not seeing your error in Sentry? Make sure you're running the example from a file
  and not from a Python shell
- Requests are counted into time buckets, determined by the window size.
- Each endpoint has its own maximum number of requests and window size.
- The concurrent rate limiter will reject requests if the caller has too many requests
  in progress at the same time.
auth_info:
  mentioned_objects:
  - Auth Tokens
client:
  base_url: https://sentry.io
source_metadata: null
