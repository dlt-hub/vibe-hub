resources:
- name: raw_text_moderation
  endpoint:
    path: /v1/moderations
    method: POST
    data_selector: results
- name: conversational_moderation
  endpoint:
    path: /v1/chat/moderations
    method: POST
    data_selector: results
- name: classification
  endpoint:
    path: /classification
    method: POST
    data_selector: category
- name: summarization
  endpoint:
    path: /summarization
    method: POST
    data_selector: summary
- name: personalization
  endpoint:
    path: /personalization
    method: POST
    data_selector: response
- name: evaluation
  endpoint:
    path: /evaluation
    method: POST
    data_selector: rating
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: retrieve_payment_status
  endpoint:
    path: /retrieve_payment_status
    method: POST
    data_selector: status
- name: retrieve_payment_date
  endpoint:
    path: /retrieve_payment_date
    method: POST
    data_selector: date
- name: get_information
  endpoint:
    path: get_information
    method: function
    data_selector: null
    params: {}
- name: chat
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: ''
    params: {}
- name: embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
    data_selector: ''
    params: {}
- name: conversations
  endpoint:
    path: /conversations
    method: GET
    data_selector: conversations
    params:
      page: 0
      page_size: 100
- name: conversation_details
  endpoint:
    path: /conversations/<conv_id>
    method: GET
    data_selector: conversation
    params: {}
- name: conversation_history
  endpoint:
    path: /conversations/<conv_id>/history
    method: GET
    data_selector: conversation.history
    params: {}
- name: conversation_messages
  endpoint:
    path: /conversations/<conv_id>/messages
    method: GET
    data_selector: conversation.messages
    params: {}
- name: agents
  endpoint:
    path: /agents
    method: POST
    data_selector: id
- name: conversations
  endpoint:
    path: /conversations
    method: POST
    data_selector: conversation_id
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
- name: Mistral Medium 3
  endpoint:
    path: /mistral-medium-2505
    method: GET
- name: Magistral Medium
  endpoint:
    path: /magistral-medium-2506
    method: GET
- name: Codestral 2
  endpoint:
    path: /codestral-2501
    method: GET
- name: Mistral OCR 2
  endpoint:
    path: /mistral-ocr-2505
    method: GET
- name: Ministral 3B
  endpoint:
    path: /ministral-3b-2410
    method: GET
- name: Ministral 8B
  endpoint:
    path: /ministral-8b-2410
    method: GET
- name: Mistral Large 2.1
  endpoint:
    path: /mistral-large-2411
    method: GET
- name: Pixtral Large
  endpoint:
    path: /pixtral-large-2411
    method: GET
- name: Mistral Small 2
  endpoint:
    path: /mistral-small-2407
    method: GET
- name: Mistral Embed
  endpoint:
    path: /mistral-embed
    method: GET
- name: Codestral Embed
  endpoint:
    path: /codestral-embed
    method: GET
- name: Mistral Moderation
  endpoint:
    path: /mistral-moderation-2411
    method: GET
- name: Mistral Small 3.2
  endpoint:
    path: /mistral-small-2506
    method: GET
- name: Magistral Small
  endpoint:
    path: /magistral-small-2506
    method: GET
- name: Mistral Small 3.1
  endpoint:
    path: /mistral-small-2503
    method: GET
- name: Mistral Small 3
  endpoint:
    path: /mistral-small-2501
    method: GET
- name: Devstral Small
  endpoint:
    path: /devstral-small-2505
    method: GET
- name: Codestral Mamba
  endpoint:
    path: /open-codestral-mamba
    method: GET
- name: Pixtral 12B
  endpoint:
    path: /pixtral-12b-2409
    method: GET
- name: Mistral Nemo 12B
  endpoint:
    path: /open-mistral-nemo
    method: GET
- name: Mathstral 7B
  endpoint:
    path: /mathstral-7b
    method: GET
- name: tokenize
  endpoint:
    path: /tokenize
    method: POST
    data_selector: tokens
    params: {}
- name: embed
  endpoint:
    path: /embed
    method: POST
    data_selector: embeddings
    params: {}
- name: LangSmith
  endpoint:
    path: /integrations/langsmith
    method: GET
- name: Langfuse
  endpoint:
    path: /integrations/langfuse
    method: GET
- name: Phoenix
  endpoint:
    path: /integrations/phoenix
    method: GET
- name: Weights and Biases
  endpoint:
    path: /integrations/wandb
    method: GET
- name: PromptLayer
  endpoint:
    path: /integrations/promptlayer
    method: GET
- name: AgentOps
  endpoint:
    path: /integrations/agentops
    method: GET
- name: phospho
  endpoint:
    path: /integrations/phospho
    method: GET
- name: MLflow
  endpoint:
    path: /integrations/mlflow
    method: GET
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: agents
  endpoint:
    path: /agents
    method: POST
    data_selector: id
- name: conversations
  endpoint:
    path: /conversations
    method: POST
    data_selector: conversation_id
- name: conversation_detail
  endpoint:
    path: /conversations/{conv_id}
    method: POST
    data_selector: content
- name: restart_conversation
  endpoint:
    path: /restart_conversation
    method: POST
    data_selector: response
    params:
      conversation_id: required
      from_entry_id: required
- name: restart_conversation
  endpoint:
    path: /restart_conversation
    method: POST
    data_selector: conversation
    params:
      conversation_id: required
      from_entry_id: required
- name: restart_conversation
  endpoint:
    path: /restart/conversation
    method: POST
    data_selector: inputs
    params:
      conversation_id: required
      from_entry_id: required
- name: chat_completion
  endpoint:
    path: /chat/completion
    method: POST
    data_selector: completion_args
- name: restart_conversation
  endpoint:
    path: /conversation/restart
    method: POST
    data_selector: ConversationInputs
- name: restart_conversation
  endpoint:
    path: /restart_conversation/{conversation_id}
    method: POST
    data_selector: detail
    params:
      conversation_id: required
- name: agents
  endpoint:
    path: /agents
    method: POST
    data_selector: agent
    params: {}
- name: conversations
  endpoint:
    path: /conversations/start
    method: POST
    data_selector: response
    params: {}
- name: fine_tuning_jobs
  endpoint:
    path: /v1/fine_tuning/jobs/<jobid>
    method: GET
    data_selector: object
    params: {}
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: model
    params: {}
- name: fim_completions
  endpoint:
    path: /v1/fim/completions
    method: POST
    data_selector: choices
    params: {}
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
    params: {}
notes:
- Custom policies that depend on category_scores can require recalibration.
- If the resolution of the image sent is higher than the maximum resolution of the
  model, the image will be downscaled to its maximum resolution. An error will be
  sent if the resolution is higher than 10000x10000.
- The current file size limit is 10Mb.
- The maximum number images per request via API is 8.
- Requires API key from environment variables
- Currently, there is a maximum limit of 1 million pending requests per workspace.
- Processing speeds may be adjusted based on current demand and the volume of your
  request.
- Function calling allows Mistral models to connect to external tools.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses OAuth2 with a callback server for authentication
- Penalties are a sensible parameter that can have a significant impact on long context
  and long output queries.
- Currently, predicted outputs do not impact pricing.
- You can only restart conversations on which you used the append() method at least
  once.
- You can query API without creating an Agent.
- The tokenizer supports multiple languages and is designed for efficient text processing.
- No streaming
- Requires API key for authentication.
- Function calling uses defined JSON schema.
- Uses ApiKey for authorization
- Allows for chaining of agent tasks through handoffs.
- Uses API key for authentication
- Integration with Weights & Biases (W&B) is supported for monitoring fine-tuning
  jobs.
- Consider chunk size and overlap for optimal performance in RAG.
- When selecting a vector database, consider speed, scalability, and management.
- Applications built with custom LLMs require an iterative development cycle, relying
  on continuous end user feedback and rigorous evals to ensure that your custom model
  behavior is aligned to the intended application behavior.
- For Content Moderation, look for inspiration from Llama Guard’s categories like
  Privacy, Hate, and Specialized Advice and ML Commons Taxonomy categories like CSAM
  and Hate.
- The process of evaluating LLMs can be complex and confusing.
- It is essential to prioritize quality over quantity when creating labeled data.
- The fine-tuned model excels in generating structured, well-sourced responses and
  accurately translating complex legal terms.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Check API key or token.'
- '400 Bad Request: Validate request parameters.'
- '422: Validation error, check request body'
- '401 Unauthorized: Check API key.'
auth_info:
  mentioned_objects:
  - MISTRAL_API_KEY
  - OAuthCallbackHandler
client:
  base_url: https://api.mistral.ai
  auth:
    type: oauth2
    location: header
    header_name: Authorization
    flow: refresh_token
    token_url: https://login.mistral.ai/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
  headers:
    Content-Type: application/json
    Accept: application/json
  paginator:
    type: page
    page_size_param: page_size
    default_page_size: 100
source_metadata: null
