resources:
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: '200'
    params:
      output-type: string
- name: groups_search
  endpoint:
    path: /groups
    method: GET
    data_selector: '200'
    params: {}
- name: groups_delete
  endpoint:
    path: /groups/{id}
    method: DELETE
    data_selector: '200'
    params: {}
- name: authentication
  endpoint:
    path: /authentication
    method: POST
    data_selector: response
    params: {}
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: response
    params:
      output-type: csv
- name: mfa_register
  endpoint:
    path: /mfa/register
    method: POST
    data_selector: response
    params: {}
- name: mfa_validate_registration
  endpoint:
    path: /mfa/validate-registration
    method: POST
    data_selector: response
    params: {}
- name: Groups
  endpoint:
    path: /Groups
    method: GET
- name: Clients
  endpoint:
    path: /Clients
    method: GET
- name: Loans
  endpoint:
    path: /Loans
    method: GET
- name: Savings
  endpoint:
    path: /Savings
    method: GET
- name: Shares
  endpoint:
    path: /Shares
    method: GET
- name: Collections
  endpoint:
    path: /Collections
    method: GET
- name: Organisation
  endpoint:
    path: /Organisation
    method: GET
- name: Accounting
  endpoint:
    path: /Accounting
    method: GET
- name: Platform Core
  endpoint:
    path: /PlatformCore
    method: GET
- name: Customisation
  endpoint:
    path: /Customisation
    method: GET
- name: Job Scheduling
  endpoint:
    path: /JobScheduling
    method: GET
- name: Access Management
  endpoint:
    path: /AccessManagement
    method: GET
- name: Reports
  endpoint:
    path: /Reports
    method: GET
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: POST
    data_selector: response
    params:
      output-type: csv
- name: clients
  endpoint:
    path: /clients
    method: GET
    data_selector: response
    params: {}
- name: delete_report
  endpoint:
    path: /reports/{reportId}
    method: DELETE
    data_selector: response
    params: {}
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: response
    params:
      output-type: json
- name: clients_accounts
  endpoint:
    path: /clients/{id}/accounts
    method: GET
    data_selector: response
    params: {}
- name: client_charges
  endpoint:
    path: /clients/{id}/charges
    method: GET
    data_selector: entries
    params:
      offset: '0'
      limit: '200'
- name: client_transactions
  endpoint:
    path: /clients/{id}/transactions
    method: GET
    data_selector: entries
    params:
      offset: '0'
      limit: '200'
- name: client_identifiers
  endpoint:
    path: /clients/{id}/identifiers
    method: GET
    data_selector: entries
- name: run_reports
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: entries
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: Report added to queue
- name: blacklist
  endpoint:
    path: /blacklist
    method: POST
    data_selector: Resource created successfully
- name: credit_bureaus
  endpoint:
    path: /creditbureaus
    method: GET
    data_selector: Returns non-paged response of Credit Bureaus that satisfy the request
- name: client_addresses
  endpoint:
    path: /client/{id}/addresses
    method: GET
    data_selector: Returns response contain an array of client addresses
- name: blacklist
  endpoint:
    path: /blacklist
    method: GET
    data_selector: entries
    params:
      offset: 0
      limit: 200
- name: client_identifier_validation
  endpoint:
    path: /client-identifier-validation
    method: GET
    data_selector: validations
    params: {}
- name: client_identifier_type
  endpoint:
    path: /client-identifier-type
    method: GET
    data_selector: types
    params: {}
- name: run_reports_addToQueue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: reportQueue
    params: {}
- name: run_reports
  endpoint:
    path: /api/v1/runreports/addToQueue/{reportName}
    method: GET
    data_selector: response
    params:
      output-type: json
- name: field_configuration_addresses
  endpoint:
    path: /api/v1/fieldconfiguration/addresses
    method: GET
    data_selector: response
    params: {}
- name: savingsproducts
  endpoint:
    path: /savingsproducts
    method: POST
    data_selector: Resource created successfully
    params: {}
- name: runreports_addToQueue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: Report added to queue
    params:
      output-type: csv
- name: savingsaccounts
  endpoint:
    path: /savingsaccounts
    method: GET
    data_selector: Return savings account response if it exists
    params: {}
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: response
    params:
      output-type: csv
- name: savings_accounts_locks
  endpoint:
    path: /savingsaccounts/{accountId}/locks
    method: GET
    data_selector: response
    params: {}
- name: loanproducts
  endpoint:
    path: /loanproducts
    method: POST
    data_selector: resource created successfully
- name: runreports_addToQueue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: report added to queue
- name: loans
  endpoint:
    path: /loans
    method: GET
    data_selector: returns paged response of Loans
- name: loans_queries_search
  endpoint:
    path: /loans/queries/search
    method: POST
    data_selector: returns response for search
- name: loans_transactions
  endpoint:
    path: /loans/{id}/transactions
    method: POST
    data_selector: command request was successfully processed
- name: fixed_deposit_products
  endpoint:
    path: /fixeddepositproducts
    method: POST
    data_selector: resource
    params: {}
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: resource
    params: {}
- name: list_share_product
  endpoint:
    path: /product/share
    method: GET
    data_selector: resource
    params: {}
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: response
    params:
      output-type: csv
- name: share_product_dividend_periods
  endpoint:
    path: /product/share/{id}/dividend
    method: GET
    data_selector: response
    params:
      offset: 0
      limit: 10
- name: list_share_accounts
  endpoint:
    path: /accounts/share
    method: GET
    data_selector: response
    params:
      offset: 0
      limit: 200
- name: list_account_transfers
  endpoint:
    path: /accounttransfers
    method: GET
    data_selector: response
    params:
      offset: 0
      limit: 200
- name: addToQueue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: Report added to queue
    params:
      output-type: string
- name: standingInstructions
  endpoint:
    path: /standinginstructions
    method: GET
    data_selector: Returns paged response of entries that satisfy the request.
    params:
      offset: integer
      limit: integer
- name: collectionSheet
  endpoint:
    path: /collectionsheet
    method: GET
    data_selector: Returns non-paged response of records that satisfy the request.
    params:
      offset: integer
      limit: integer
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: response
    params:
      output-type: string
- name: collection_sheet_save
  endpoint:
    path: /collectionsheet?command=saveGroupCollectionSheet
    method: POST
    data_selector: response
    params: {}
- name: withdrawal_sheet
  endpoint:
    path: /withdrawalsheet
    method: GET
    data_selector: response
    params: {}
- name: list_offices
  endpoint:
    path: /offices
    method: GET
    data_selector: response
    params:
      includeAllOffices: 'false'
      orderBy: id
      sortOrder: ASC
- name: offices
  endpoint:
    path: /api/v1/offices
    method: POST
    data_selector: offices
    params: {}
- name: runreports
  endpoint:
    path: /api/v1/runreports/addToQueue/{reportName}
    method: GET
    data_selector: reports
    params:
      output-type: json
- name: staff
  endpoint:
    path: /api/v1/staff
    method: GET
    data_selector: staff
    params: {}
- name: tasks
  endpoint:
    path: /api/v1/tasks
    method: GET
    data_selector: tasks
    params: {}
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: response
    params:
      output-type: string
- name: tasks
  endpoint:
    path: /tasks/{id}
    method: GET
    data_selector: response
- name: funds
  endpoint:
    path: /funds
    method: GET
    data_selector: response
- name: currencies
  endpoint:
    path: /currencies
    method: GET
    data_selector: response
- name: holidays
  endpoint:
    path: /holidays
    method: GET
    data_selector: response
- name: working_days
  endpoint:
    path: /workingdays
    method: GET
    data_selector: response
- name: holidays
  endpoint:
    path: /holidays
    method: GET
    data_selector: ''
    params: {}
- name: runreports
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: ''
    params: {}
- name: paymenttypes
  endpoint:
    path: /paymenttypes
    method: GET
    data_selector: ''
    params: {}
- name: glaccounts
  endpoint:
    path: /glaccounts
    method: GET
    data_selector: ''
    params: {}
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: null
    params:
      output-type: null
- name: financial_activity_accounts
  endpoint:
    path: /financialactivityaccounts
    method: GET
    data_selector: null
    params: {}
- name: gl_closures
  endpoint:
    path: /glclosures
    method: GET
    data_selector: null
    params:
      limit: '200'
      offset: '0'
- name: accounting_exports
  endpoint:
    path: /accountingexports
    method: GET
    data_selector: null
    params: {}
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: null
    params:
      output-type: string
- name: glclosures_regenerate_accounting_export
  endpoint:
    path: /glclosures/regenerateAccountingExport
    method: POST
    data_selector: null
    params: {}
- name: journal_entries
  endpoint:
    path: /journalentries
    method: GET
    data_selector: null
    params: {}
- name: accounting_rules
  endpoint:
    path: /accountingrules
    method: GET
    data_selector: null
    params: {}
- name: Data Exports
  endpoint:
    path: /dataexports
    method: GET
    data_selector: exports
- name: Run Reports
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: reportQueue
- name: Templates
  endpoint:
    path: /templates
    method: GET
    data_selector: templates
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: Report added to queue
    params:
      output-type: string
- name: run_accruals
  endpoint:
    path: /runaccruals
    method: POST
    data_selector: Resource created successfully
- name: list_data_filters
  endpoint:
    path: /datafilters
    method: GET
    data_selector: Returns paged response listing all the data filters that are in
      scope for the request.
- name: templates
  endpoint:
    path: /templates/{id}
    method: GET
    data_selector: document template
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: Report added to queue
    params:
      output-type: string
- name: metadata_groups
  endpoint:
    path: /metadata/groups
    method: GET
    data_selector: Metadata model response for groups
- name: metadata_loans
  endpoint:
    path: /metadata/loans
    method: GET
    data_selector: Metadata model response for loans
- name: metadata_savingsaccounts
  endpoint:
    path: /metadata/savingsaccounts
    method: GET
    data_selector: Metadata model response for savings accounts
- name: metadata_tasks
  endpoint:
    path: /metadata/tasks
    method: GET
    data_selector: Metadata model response for tasks
- name: lookups
  endpoint:
    path: /lookups/{metadataModelType}/parameters/{apiParameterName}
    method: GET
    data_selector: Success. Returns paged response.
- name: authentication
  endpoint:
    path: /authentication
    method: POST
    data_selector: ''
    params: {}
- name: mfa_register
  endpoint:
    path: /mfa/register
    method: POST
    data_selector: ''
    params: {}
- name: mfa_validate_registration
  endpoint:
    path: /mfa/validate-registration
    method: POST
    data_selector: ''
    params: {}
- name: mfa_verify
  endpoint:
    path: /mfa/verify
    method: POST
    data_selector: ''
    params: {}
- name: add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    params:
      output-type: ''
- name: search
  endpoint:
    path: /search
    method: GET
    params: {}
- name: hooks
  endpoint:
    path: /hooks
    method: GET
    params: {}
- name: delete_report
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: DELETE
    params: {}
- name: retrieve_hooks
  endpoint:
    path: /hooks/{id}
    method: GET
    params: {}
- name: update_hook
  endpoint:
    path: /hooks/{id}
    method: PUT
    params: {}
- name: create_hook
  endpoint:
    path: /hooks
    method: POST
    params: {}
- name: template_hooks
  endpoint:
    path: /hooks/template
    method: GET
    params: {}
- name: sms_messages
  endpoint:
    path: /sms
    method: GET
    params:
      offset: ''
      limit: ''
- name: clients
  endpoint:
    path: /api/v1/clients
    method: GET
    data_selector: clients
    params:
      offset: 0
      limit: 200
- name: group
  endpoint:
    path: /groups
    method: GET
    data_selector: records
    params:
      paged: 'false'
      limit: 200
      offset: 0
- name: create_group
  endpoint:
    path: /groups
    method: POST
    data_selector: ''
    params: {}
- name: update_group
  endpoint:
    path: /groups/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_group
  endpoint:
    path: /groups/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: activate_group
  endpoint:
    path: /groups/{id}?command=activate
    method: POST
    data_selector: ''
    params: {}
- name: associate_clients
  endpoint:
    path: /groups/{id}?command=associateClients
    method: POST
    data_selector: ''
    params: {}
- name: disassociate_clients
  endpoint:
    path: /groups/{id}?command=disassociateClients
    method: POST
    data_selector: ''
    params: {}
- name: assign_staff
  endpoint:
    path: /groups/{id}?command=assignStaff
    method: POST
    data_selector: ''
    params: {}
- name: unassign_staff
  endpoint:
    path: /groups/{id}?command=unassignStaff
    method: POST
    data_selector: ''
    params: {}
- name: unassign_staff
  endpoint:
    path: /groups/{id}
    method: POST
    data_selector: response
    params:
      command: unassignStaff
- name: assign_role
  endpoint:
    path: /groups/{id}
    method: POST
    data_selector: response
    params:
      command: assignRole
- name: update_role
  endpoint:
    path: /groups/{id}
    method: POST
    data_selector: response
    params:
      command: updateRole
- name: unassign_role
  endpoint:
    path: /groups/{id}
    method: POST
    data_selector: response
    params:
      command: unassignRole
- name: transfer_group
  endpoint:
    path: /groups/{id}
    method: POST
    data_selector: response
    params:
      command: transferGroup
- name: close_group
  endpoint:
    path: /groups/{id}
    method: POST
    data_selector: response
    params:
      command: close
- name: accounts_summary
  endpoint:
    path: /groups/{id}/accounts
    method: GET
    data_selector: response
- name: client_charges
  endpoint:
    path: /clients/{id}/charges
    method: GET
    data_selector: pageItems
    params:
      offset: 0
      limit: 200
- name: client_transactions
  endpoint:
    path: /clients/{id}/transactions
    method: GET
    data_selector: pageItems
    params:
      offset: 0
      limit: 200
- name: client_identifiers
  endpoint:
    path: /clients/{id}/identifiers
    method: GET
    data_selector: ''
    params: {}
- name: clients
  endpoint:
    path: /clients
    method: POST
    data_selector: null
    params: {}
- name: client_by_id
  endpoint:
    path: /clients/{id}
    method: GET
    data_selector: null
    params: {}
- name: update_client
  endpoint:
    path: /clients/{id}
    method: PUT
    data_selector: null
    params: {}
- name: delete_client
  endpoint:
    path: /clients/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: activate_client
  endpoint:
    path: /clients/{id}?command=activate
    method: POST
    data_selector: null
    params: {}
- name: reject_client
  endpoint:
    path: /clients/{id}?command=reject
    method: POST
    data_selector: null
    params: {}
- name: transfer_client
  endpoint:
    path: /clients/{id}?command=proposeAndAcceptTransfer
    method: POST
    data_selector: null
    params: {}
- name: client_identifier_validation
  endpoint:
    path: /client-identifier-validation
    method: GET
    data_selector: records
- name: client_identifier_type
  endpoint:
    path: /client-identifier-type
    method: GET
    data_selector: records
- name: blacklist
  endpoint:
    path: /blacklist
    method: GET
    data_selector: totalFilteredRecords
- name: clients_reject
  endpoint:
    path: /clients/{id}?command=reject
    method: POST
    data_selector: resourceId
    params:
      locale: en
      dateFormat: dd MMMM yyyy
      rejectionDate: 01 July 2007
      rejectionReasonId: 345
- name: clients_undo_reject
  endpoint:
    path: /clients/{id}?command=undoRejection
    method: POST
    data_selector: resourceId
    params:
      locale: en
      dateFormat: dd MMMM yyyy
      reopenedDate: 01 July 2007
- name: clients_withdraw
  endpoint:
    path: /clients/{id}?command=withdraw
    method: POST
    data_selector: resourceId
    params:
      locale: en
      dateFormat: dd MMMM yyyy
      withdrawalDate: 01 July 2007
      withdrawalReasonId: 146
- name: clients_undo_withdraw
  endpoint:
    path: /clients/{id}?command=undoWithdrawal
    method: POST
    data_selector: resourceId
    params:
      locale: en
      dateFormat: dd MMMM yyyy
      reopenedDate: 01 July 2007
- name: clients_close
  endpoint:
    path: /clients/{id}?command=close
    method: POST
    data_selector: resourceId
    params:
      locale: en
      dateFormat: dd MMMM yyyy
      closureDate: 01 July 2007
      closureReasonId: 876
- name: clients_reactivate
  endpoint:
    path: /clients/{id}?command=reactivate
    method: POST
    data_selector: resourceId
    params:
      locale: en
      dateFormat: dd MMMM yyyy
      reactivationDate: 01 July 2007
- name: clients_accounts_summary
  endpoint:
    path: /clients/{id}/accounts
    method: GET
    data_selector: loanAccounts
- name: loan_product
  endpoint:
    path: /services/data/vXX.X/sobjects/LoanProduct
    method: GET
    data_selector: records
- name: blacklist_entry
  endpoint:
    path: /blacklist/{id}
    method: DELETE
    data_selector: resourceId
    params: {}
- name: client_blacklist
  endpoint:
    path: /blacklist/{clientId}
    method: POST
    data_selector: clientId
    params: {}
- name: credit_bureaus
  endpoint:
    path: /creditbureaus
    method: GET
    data_selector: records
    params: {}
- name: credit_reference_requests
  endpoint:
    path: /creditbureaus/{bureauId}/creditreferencerequests
    method: GET
    data_selector: records
    params: {}
- name: credit_reference_responses
  endpoint:
    path: /creditbureaus/{bureauId}/creditreferenceresponses
    method: GET
    data_selector: records
    params: {}
- name: client_addresses
  endpoint:
    path: /client/{id}/addresses
    method: GET
    data_selector: addresses
    params: {}
- name: loanproducts
  endpoint:
    path: /loanproducts
    method: POST
    data_selector: resourceId
    params: {}
- name: loans
  endpoint:
    path: /loans
    method: GET
    data_selector: records
    params:
      limit: 200
      offset: 0
- name: create_loan
  endpoint:
    path: /api/v1/loans
    method: POST
    data_selector: resourceId
- name: search_loans_by_state
  endpoint:
    path: /api/v1/loans/queries/search
    method: POST
    data_selector: totalFilteredRecords
- name: find_loan_by_id
  endpoint:
    path: /api/v1/loans/{id}
    method: GET
    data_selector: ''
- name: loan
  endpoint:
    path: /loans/{id}
    method: POST
    data_selector: resourceId
    params: {}
- name: loan_transaction
  endpoint:
    path: /loans/{id}/transactions
    method: POST
    data_selector: resourceId
    params: {}
- name: savings_account_lock
  endpoint:
    path: /savingsaccounts/{accountId}/locks
    method: GET
    data_selector: locks
- name: create_fixed_term_deposit_product
  endpoint:
    path: /fixeddepositproducts
    method: POST
    data_selector: resourceId
- name: create_savings_product
  endpoint:
    path: /savingsproducts
    method: POST
    data_selector: resourceId
    params: {}
- name: activate_savings_product
  endpoint:
    path: /savingsproducts/{id}?command=activate
    method: POST
    data_selector: resourceId
    params: {}
- name: close_savings_product
  endpoint:
    path: /savingsproducts/{id}?command=close
    method: POST
    data_selector: resourceId
    params: {}
- name: create_savings_account
  endpoint:
    path: /savingsaccounts
    method: POST
    data_selector: resourceId
    params: {}
- name: savingsaccounts
  endpoint:
    path: /savingsaccounts
    method: GET
    data_selector: records
    params:
      offset: 0
      limit: 200
- name: find_savings_by_id
  endpoint:
    path: /savingsaccounts/{accountId}
    method: GET
    data_selector: records
    params: {}
- name: enable_disable_deposit_lock
  endpoint:
    path: /savingsaccounts/{accountId}/depositlock
    method: POST
    data_selector: records
    params: {}
- name: share_accounts
  endpoint:
    path: /accounts/share
    method: GET
    data_selector: records
    params:
      limit: '200'
      status: '300'
- name: account_transfers
  endpoint:
    path: /accounttransfers
    method: GET
    data_selector: pageItems
    params:
      limit: '200'
- name: share_product
  endpoint:
    path: /product/share
    method: GET
    data_selector: records
    params: {}
- name: share_product_template
  endpoint:
    path: /product/share/template
    method: GET
    data_selector: records
    params: {}
- name: share_product_by_id
  endpoint:
    path: /product/share/{id}
    method: GET
    data_selector: records
    params: {}
- name: share_product_dividend
  endpoint:
    path: /product/share/{id}/dividend
    method: GET
    data_selector: records
    params: {}
- name: create_share_product_dividend
  endpoint:
    path: /product/share/{id}/dividend
    method: POST
    data_selector: records
    params: {}
- name: fixed_deposit_products
  endpoint:
    path: /fixeddepositproducts/{id}
    method: GET
    data_selector: records
    params: {}
- name: fixed_deposit_accounts
  endpoint:
    path: /fixeddepositaccounts
    method: POST
    data_selector: resourceId
    params: {}
- name: share_products
  endpoint:
    path: /product/share
    method: GET
    data_selector: records
    params: {}
- name: create_share_product
  endpoint:
    path: /product/share
    method: POST
    data_selector: resourceId
    params: {}
- name: collection_sheet
  endpoint:
    path: /collectionsheet
    method: GET
    data_selector: records
- name: withdrawal_sheet
  endpoint:
    path: /withdrawalsheet
    method: GET
    data_selector: records
- name: standing_instructions
  endpoint:
    path: /standinginstructions
    method: GET
    data_selector: pageItems
    params:
      offset: 0
      limit: 200
- name: create_standing_instruction
  endpoint:
    path: /standinginstructions
    method: POST
    data_selector: resourceId
- name: find_standing_instruction_by_id
  endpoint:
    path: /standinginstructions/{id}
    method: GET
- name: update_or_delete_standing_instruction
  endpoint:
    path: /standinginstructions/{id}
    method: PUT
- name: fund
  endpoint:
    path: /funds/{fundId}
    method: GET
    data_selector: id
    params: {}
- name: currencies
  endpoint:
    path: /currencies
    method: GET
    data_selector: ''
    params: {}
- name: working_days
  endpoint:
    path: /workingdays
    method: GET
    data_selector: ''
    params: {}
- name: holidays
  endpoint:
    path: /holidays
    method: GET
    data_selector: ''
    params: {}
- name: payment_types
  endpoint:
    path: /paymenttypes
    method: GET
    data_selector: ''
    params: {}
- name: withdrawal_sheet_generate_staff
  endpoint:
    path: /withdrawalsheet
    method: POST
    data_selector: records
    params:
      command: generateWithdrawalSheet
- name: withdrawal_sheet_generate_group
  endpoint:
    path: /withdrawalsheet
    method: POST
    data_selector: records
    params:
      command: generateGroupWithdrawalSheet
- name: withdrawal_sheet_submit
  endpoint:
    path: /withdrawalsheet
    method: POST
    data_selector: records
    params:
      command: saveCollectionSheet
- name: withdrawal_sheet_approve
  endpoint:
    path: /withdrawalsheet
    method: POST
    data_selector: records
    params:
      command: approve
- name: withdrawal_sheet_reject
  endpoint:
    path: /withdrawalsheet
    method: POST
    data_selector: records
    params:
      command: reject
- name: offices_list
  endpoint:
    path: /offices
    method: GET
    data_selector: records
    params: {}
- name: offices_create
  endpoint:
    path: /offices
    method: POST
    data_selector: records
    params: {}
- name: offices_find_by_id
  endpoint:
    path: /offices/{id}
    method: GET
    data_selector: records
    params: {}
- name: offices_update
  endpoint:
    path: /offices/{id}
    method: PUT
    data_selector: records
    params: {}
- name: staff_list
  endpoint:
    path: /staff
    method: GET
    data_selector: records
    params: {}
- name: staff_create
  endpoint:
    path: /staff
    method: POST
    data_selector: records
    params: {}
- name: staff
  endpoint:
    path: /staff
    method: POST
    data_selector: resourceId
    params: {}
- name: staff_by_id
  endpoint:
    path: /staff/{id}
    method: GET
    data_selector: resource
    params: {}
- name: update_staff
  endpoint:
    path: /staff/{id}
    method: PUT
    data_selector: resourceId
    params: {}
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: totalFilteredRecords
    params: {}
- name: create_task
  endpoint:
    path: /tasks
    method: POST
    data_selector: resourceId
    params: {}
- name: task_by_id
  endpoint:
    path: /tasks/{id}
    method: GET
    data_selector: resource
    params: {}
- name: update_task
  endpoint:
    path: /tasks/{id}
    method: PUT
    data_selector: resourceId
    params: {}
- name: delete_task
  endpoint:
    path: /tasks/{id}
    method: DELETE
    data_selector: resourceId
    params: {}
- name: funds
  endpoint:
    path: /funds
    method: GET
    data_selector: fundsList
    params: {}
- name: payment_types
  endpoint:
    path: /paymenttypes/{paymentTypeId}
    method: DELETE
    params: {}
- name: gl_accounts
  endpoint:
    path: /glaccounts
    method: GET
    params: {}
- name: financial_activity_accounts
  endpoint:
    path: /financialactivityaccounts
    method: GET
    params: {}
- name: accounting_exports
  endpoint:
    path: /accountingexports
    method: GET
    params: {}
- name: batches
  endpoint:
    path: /batches
    method: POST
- name: datafilters
  endpoint:
    path: /datafilters
    method: GET
- name: dataexports
  endpoint:
    path: /dataexports
    method: GET
- name: journal_entries
  endpoint:
    path: /journalentries/{entryId}
    method: GET
    data_selector: records
- name: accounting_rules
  endpoint:
    path: /accountingrules
    method: GET
    data_selector: records
- name: accounting_exports
  endpoint:
    path: /api/v1/accountingexports/{id}
    method: GET
    data_selector: records
- name: gl_closures
  endpoint:
    path: /api/v1/glclosures
    method: GET
    data_selector: records
- name: journal_entries
  endpoint:
    path: /api/v1/journalentries
    method: GET
    data_selector: pageItems
- name: metadata_loans
  endpoint:
    path: /api/v1/metadata/loans
    method: GET
    data_selector: metadata
- name: data_exports
  endpoint:
    path: /dataexports
    method: POST
    data_selector: resourceId
- name: queued_data_export
  endpoint:
    path: /data-export/prepared/{id}
    method: GET
    data_selector: preparedDataExportId
- name: disbursement
  endpoint:
    path: /groups
    method: GET
    data_selector: records
- name: create_template
  endpoint:
    path: /post/templates
    method: POST
    data_selector: resourceId
    params: {}
- name: find_template_by_id
  endpoint:
    path: /get/templates/{id}
    method: GET
    data_selector: resource
    params: {}
- name: update_template
  endpoint:
    path: /put/templates/{id}
    method: PUT
    data_selector: changes
    params: {}
- name: delete_template
  endpoint:
    path: /delete/templates/{id}
    method: DELETE
    data_selector: resourceId
    params: {}
- name: loan
  endpoint:
    path: /loans
    method: GET
    data_selector: records
- name: lookups
  endpoint:
    path: /lookups/groups/parameters/submittedByUserId
    method: GET
    data_selector: queryParams
- name: metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: properties
    params: {}
- name: savingsaccounts
  endpoint:
    path: /api/v1/metadata/savingsaccounts
    method: GET
    data_selector: metadata
- name: hooks_template
  endpoint:
    path: /api/v1/hooks/template
    method: GET
    data_selector: templates
    params: {}
- name: sms
  endpoint:
    path: /api/v1/sms
    method: GET
    data_selector: pageItems
    params:
      offset: '0'
      limit: '200'
      paged: 'true'
- name: tasks
  endpoint:
    path: /metadata/tasks
    method: GET
- name: lookups
  endpoint:
    path: /lookups/{metadataModelType}/parameters/{apiParameterName}
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
- name: hooks
  endpoint:
    path: /hooks
    method: GET
- name: sms
  endpoint:
    path: /sms
    method: GET
    data_selector: ''
    params: {}
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: ''
    params: {}
- name: codes
  endpoint:
    path: /codes
    method: GET
    data_selector: ''
    params: {}
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: application/json
    params:
      output-type: string
- name: maker_checkers
  endpoint:
    path: /makercheckers
    method: GET
    data_selector: application/json
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: application/json
- name: datatables
  endpoint:
    path: /datatables
    method: GET
    data_selector: application/json
- name: addToQueue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: Report added to queue
    params:
      output-type: csv
- name: jobs
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobId
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: id
- name: deleteReport
  endpoint:
    path: /runreports/{reportId}
    method: DELETE
    data_selector: Report deleted
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: resourceId
    params:
      output-type: csv
- name: delete_report
  endpoint:
    path: /reports/{reportId}
    method: DELETE
    data_selector: response
    params: {}
- name: entity_datatable_checks
  endpoint:
    path: /entityDatatableChecks
    method: GET
    data_selector: data
    params: {}
- name: run_report
  endpoint:
    path: /runreports/{reportName}
    method: GET
    data_selector: '0'
    params:
      output-type: json
- name: add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: '0'
    params:
      output-type: json
- name: reports_template
  endpoint:
    path: /reports/template
    method: GET
    data_selector: allowedReportTypes
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: reportName
- name: prepared_reports
  endpoint:
    path: /reports/prepared
    method: GET
    data_selector: pageItems
- name: addToQueue
  endpoint:
    path: /api/v1/runreports/addToQueue/{reportName}
    method: GET
    data_selector: null
    params:
      output-type: csv
- name: roles
  endpoint:
    path: /api/v1/roles
    method: GET
    data_selector: null
    params: {}
- name: permissions
  endpoint:
    path: /api/v1/permissions
    method: GET
    data_selector: null
    params: {}
- name: passwordpreferences
  endpoint:
    path: /api/v1/passwordpreferences
    method: GET
    data_selector: null
    params: {}
- name: clients
  endpoint:
    path: clients/{clientId}/images
    method: POST
- name: savingsaccounts
  endpoint:
    path: savingsaccounts
    method: GET
- name: shareaccounts
  endpoint:
    path: shareaccounts
    method: GET
- name: loans
  endpoint:
    path: loans
    method: GET
- name: clients
  endpoint:
    path: /batches
    method: POST
    data_selector: '[]'
- name: loans
  endpoint:
    path: /batches
    method: POST
    data_selector: '[]'
- name: savingsaccounts
  endpoint:
    path: /batches
    method: POST
    data_selector: '[]'
- name: Retrieve Loan Details Template
  endpoint:
    path: /loans/template
    method: GET
    data_selector: templateData
    params: {}
- name: Retrieve a Loan
  endpoint:
    path: /loans/{id}
    method: GET
    data_selector: loanData
    params: {}
- name: Loan Product
  endpoint:
    path: loanproducts
    method: GET
- name: Savings Product
  endpoint:
    path: savingsproducts
    method: GET
- name: Fixed Deposit Product
  endpoint:
    path: fixeddepositproducts
    method: GET
- name: Charges
  endpoint:
    path: charges
    method: GET
- name: Interest Rate Charts
  endpoint:
    path: charts
    method: GET
- name: Interest Rate Slabs
  endpoint:
    path: slabs
    method: GET
- name: Teller Cash Management
  endpoint:
    path: tellers
    method: GET
- name: Provisioning Criteria
  endpoint:
    path: provisioningcriteria
    method: GET
- name: Floating Rates
  endpoint:
    path: floatingrates
    method: GET
- name: Tax Component
  endpoint:
    path: taxes/component
    method: GET
- name: Tax Group
  endpoint:
    path: taxes/group
    method: GET
- name: loans
  endpoint:
    path: /api/v1/loans
    method: GET
    data_selector: pageItems
    params:
      offset: 0
      limit: 200
- name: loan_details
  endpoint:
    path: /api/v1/loans/{loanId}
    method: GET
    data_selector: id
    params: {}
- name: loans
  endpoint:
    path: /loans
    method: POST
    data_selector: ''
    params: {}
- name: calculateLoanSchedule
  endpoint:
    path: /loans
    method: POST
    data_selector: ''
    params:
      command: calculateLoanSchedule
- name: approveLoan
  endpoint:
    path: /loans/{loanId}
    method: POST
    data_selector: ''
    params:
      command: approve
- name: rejectLoan
  endpoint:
    path: /loans/{loanId}
    method: POST
    data_selector: ''
    params:
      command: reject
- name: withdrawnByApplicant
  endpoint:
    path: /loans/{loanId}
    method: POST
    data_selector: ''
    params:
      command: withdrawnByApplicant
- name: disburseLoan
  endpoint:
    path: /loans/{loanId}
    method: POST
    data_selector: ''
    params:
      command: disburse
- name: undoDisbursal
  endpoint:
    path: /loans/{loanId}
    method: POST
    data_selector: ''
    params:
      command: undoDisbursal
- name: deleteLoan
  endpoint:
    path: /loans/{loanId}
    method: DELETE
    data_selector: ''
    params: {}
- name: loan_charges
  endpoint:
    path: /loans/{loanId}/charges
    method: GET
    data_selector: charges
    params: {}
- name: loan_charge_template
  endpoint:
    path: /loans/{loanId}/charges/template
    method: GET
    data_selector: ''
    params: {}
- name: retrieve_loan_charge
  endpoint:
    path: /loans/{loanId}/charges/{chargeId}
    method: GET
    data_selector: ''
    params: {}
- name: create_loan_charge
  endpoint:
    path: /loans/{loanId}/charges
    method: POST
    data_selector: ''
    params: {}
- name: update_loan_charge
  endpoint:
    path: /loans/{loanId}/charges/{chargeId}
    method: PUT
    data_selector: ''
    params: {}
- name: pay_loan_charge
  endpoint:
    path: /loans/{loanId}/charges/{chargeId}
    method: POST
    params:
      command: pay
- name: delete_loan_charge
  endpoint:
    path: /loans/{loanId}/charges/{chargeId}
    method: DELETE
    data_selector: ''
    params: {}
- name: calculateLoanSchedule
  endpoint:
    path: /loans/{loanId}/schedule?command=calculateLoanSchedule
    method: POST
    data_selector: schedule
- name: addVariations
  endpoint:
    path: /loans/{loanId}/schedule?command=addVariations
    method: POST
    data_selector: variations
- name: deleteVariations
  endpoint:
    path: /loans/{loanId}/schedule?command=deleteVariations
    method: POST
    data_selector: variations
- name: calculate_loan_schedule
  endpoint:
    path: /loans/{loanId}/schedule
    method: POST
    data_selector: exceptions
    params:
      command: calculateLoanSchedule
- name: add_variations
  endpoint:
    path: /loans/{loanId}/schedule
    method: POST
    data_selector: exceptions
    params:
      command: addVariations
- name: delete_variations
  endpoint:
    path: /loans/{loanId}/schedule
    method: POST
    data_selector: removedEntityIds
    params:
      command: deleteVariations
- name: loan_product_template
  endpoint:
    path: /loanproducts/template
    method: GET
    data_selector: '[]'
    params: {}
- name: loan_product
  endpoint:
    path: /loanproducts/{id}
    method: GET
    data_selector: '[]'
    params: {}
- name: list_loan_products
  endpoint:
    path: /loanproducts
    method: GET
    data_selector: '[]'
- name: loan_product_template
  endpoint:
    path: /loanproducts/template
    method: GET
    data_selector: '[]'
- name: loan_transaction_template
  endpoint:
    path: /loans/{loanId}/transactions/template
    method: GET
    data_selector: template_data
    params:
      command: repayment
- name: make_repayment
  endpoint:
    path: /loans/{loanId}/transactions
    method: POST
    data_selector: transaction
    params:
      command: repayment
- name: foreclosure
  endpoint:
    path: /loans/{loanId}/transactions
    method: POST
    data_selector: transaction
    params:
      command: foreclosure
- name: waive_interest
  endpoint:
    path: /loans/{loanId}/transactions
    method: POST
    data_selector: transaction
    params:
      command: waiveInterest
- name: write_off
  endpoint:
    path: /loans/{loanId}/transactions
    method: POST
    data_selector: transaction
    params:
      command: writeoff
- name: make_recovery_payment
  endpoint:
    path: /loans/{loanId}/transactions
    method: POST
    data_selector: transaction
    params:
      command: recoverypayment
- name: undo_loan_write_off
  endpoint:
    path: /loans/{loanId}/transactions
    method: POST
    data_selector: transaction
    params:
      command: undowriteoff
- name: pre_close_template
  endpoint:
    path: /loans/{loanId}/transactions
    method: POST
    data_selector: pre_close_data
    params:
      command: prepayLoan
- name: retrieve_transaction_details
  endpoint:
    path: /loans/{loanId}/transactions/{transactionId}
    method: GET
    data_selector: transaction_details
- name: adjust_transaction
  endpoint:
    path: /loans/{loanId}/transactions/{transactionId}
    method: POST
    data_selector: adjusted_transaction
- name: loanproducts
  endpoint:
    path: /loanproducts
    method: POST
    data_selector: ''
    params: {}
- name: loanproduct_update
  endpoint:
    path: /loanproducts/{loanId}
    method: PUT
    data_selector: ''
    params: {}
- name: Loan Product Mix
  endpoint:
    path: /loanproducts
    method: GET
    data_selector: productOptions
    params: {}
- name: Global Configuration
  endpoint:
    path: /configurations
    method: GET
    data_selector: globalConfiguration
    params: {}
- name: Account Number Formats
  endpoint:
    path: /accountnumberformats
    method: GET
    data_selector: accountTypeOptions
    params: {}
- name: External Services
  endpoint:
    path: /externalservice
    method: GET
    data_selector: services
    params: {}
- name: savings_product_template
  endpoint:
    path: /savingsproducts/template
    method: GET
    data_selector: ''
- name: create_savings_product
  endpoint:
    path: /savingsproducts
    method: POST
    data_selector: ''
- name: retrieve_savings_product
  endpoint:
    path: /savingsproducts/{id}
    method: GET
    data_selector: ''
- name: savings_product
  endpoint:
    path: /savingsproducts
    method: GET
    data_selector: records
    params: {}
- name: update_savings_product
  endpoint:
    path: /savingsproducts/{productId}
    method: PUT
    data_selector: changes
    params: {}
- name: delete_savings_product
  endpoint:
    path: /savingsproducts/{productId}
    method: DELETE
    data_selector: resourceId
    params: {}
- name: charges_template
  endpoint:
    path: /charges/template
    method: GET
    data_selector: null
    params: {}
- name: create_charge
  endpoint:
    path: /charges
    method: POST
    data_selector: null
    params: {}
- name: retrieve_charges
  endpoint:
    path: /charges
    method: GET
    data_selector: null
    params: {}
- name: retrieve_charge
  endpoint:
    path: /charges/{chargeId}
    method: GET
    data_selector: null
    params: {}
- name: update_charge
  endpoint:
    path: /charges/{chargeId}
    method: PUT
    data_selector: null
    params: {}
- name: delete_charge
  endpoint:
    path: /charges/{chargeId}
    method: DELETE
    data_selector: null
    params: {}
- name: fixed_deposit_products
  endpoint:
    path: /fixeddepositproducts
    method: POST
    data_selector: ''
    params: {}
- name: fixed_deposit_product
  endpoint:
    path: /fixeddepositproducts/{productId}
    method: GET
    data_selector: ''
    params: {}
- name: share_application
  endpoint:
    path: /{shareAccountId}
    method: POST
    data_selector: resourceId
    params: {}
- name: list_share_applications
  endpoint:
    path: ''
    method: GET
    data_selector: pageItems
    params: {}
- name: retrieve_share_application
  endpoint:
    path: /{accountId}
    method: GET
    data_selector: ''
    params: {}
- name: modify_share_application
  endpoint:
    path: /{accountsId}
    method: PUT
    data_selector: resourceId
    params: {}
- name: savings_account_template
  endpoint:
    path: /savingsaccounts/template
    method: GET
    data_selector: clientId
    params:
      clientId: '1'
- name: submit_savings_application
  endpoint:
    path: /savingsaccounts
    method: POST
    data_selector: clientId
    params:
      clientId: '1'
      productId: '1'
      submittedOnDate: 01 March 2011
- name: approve_savings_application
  endpoint:
    path: /savingsaccounts/{savingsId}?command=approve
    method: POST
    data_selector: approvedOnDate
    params:
      approvedOnDate: 01 March 2013
- name: undo_approval_savings_application
  endpoint:
    path: /savingsaccounts/{savingsId}?command=undoApproval
    method: POST
    data_selector: changes
    params: {}
- name: reject_savings_application
  endpoint:
    path: /savingsaccounts/{savingsId}?command=reject
    method: POST
    data_selector: rejectedOnDate
    params:
      rejectedOnDate: 03 March 2013
- name: withdraw_savings_application
  endpoint:
    path: /savingsaccounts/{savingsId}?command=withdrawnByApplicant
    method: POST
    data_selector: withdrawnOnDate
    params:
      withdrawnOnDate: 03 March 2013
- name: activate_savings_account
  endpoint:
    path: /savingsaccounts/{savingsId}?command=activate
    method: POST
    data_selector: activatedOnDate
    params:
      activatedOnDate: 01 March 2013
- name: close_savings_account
  endpoint:
    path: /savingsaccounts/{savingsId}?command=close
    method: POST
    data_selector: closedOnDate
    params:
      closedOnDate: 26 August 2013
- name: calculate_interest
  endpoint:
    path: /savingsaccounts/{savingsId}?command=calculateInterest
    method: POST
    data_selector: {}
    params: {}
- name: post_interest
  endpoint:
    path: /savingsaccounts/{savingsId}?command=postInterest
    method: POST
    data_selector: {}
    params: {}
- name: savings_charges
  endpoint:
    path: /savingsaccounts/{accountId}/charges
    method: GET
    data_selector: charges
    params: {}
- name: savings_charge_template
  endpoint:
    path: /savingsaccounts/{accountId}/charges/template
    method: GET
    data_selector: chargeOptions
    params: {}
- name: retrieve_savings_charge
  endpoint:
    path: /savingsaccounts/{accountId}/charges/{savingsAccountChargeId}
    method: GET
    data_selector: ''
    params: {}
- name: create_savings_charge
  endpoint:
    path: /savingsaccounts/{accountId}/charges
    method: POST
    data_selector: ''
    params: {}
- name: update_savings_charge
  endpoint:
    path: /savingsaccounts/{accountId}/charges/{savingsAccountChargeId}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_savings_charge
  endpoint:
    path: /savingsaccounts/{accountId}/charges/{savingsAccountChargeId}
    method: DELETE
    data_selector: ''
    params: {}
- name: pay_savings_charge
  endpoint:
    path: /savingsaccounts/{accountId}/charges/{savingsAccountChargeId}?command=paycharge
    method: POST
    data_selector: ''
    params: {}
- name: waive_savings_charge
  endpoint:
    path: /savingsaccounts/{accountId}/charges/{savingsAccountChargeId}?command=waive
    method: POST
    data_selector: ''
    params: {}
- name: inactivate_savings_charge
  endpoint:
    path: /savingsaccounts/{accountId}/charges/{savingsAccountChargeId}?command=inactivate
    method: POST
    data_selector: ''
    params: {}
- name: savings_account
  endpoint:
    path: /savingsaccounts
    method: GET
    data_selector: pageItems
- name: savings_account_with_id
  endpoint:
    path: /savingsaccounts/{accountId}
    method: GET
    data_selector: data
- name: modify_savings_account
  endpoint:
    path: /savingsaccounts/{accountsId}
    method: PUT
- name: delete_savings_account
  endpoint:
    path: /savingsaccounts/{accountsId}
    method: DELETE
- name: savings_account_transactions
  endpoint:
    path: /savingsaccounts/{accountId}/transactions
    method: GET
- name: retrieve_transaction_template
  endpoint:
    path: /savingsaccounts/{accountId}/transactions/template
    method: GET
- name: retrieve_transaction
  endpoint:
    path: /savingsaccounts/{accountId}/transactions/{transactionId}
    method: GET
- name: deposit_transaction
  endpoint:
    path: /savingsaccounts/{accountsId}/transactions?command=deposit
    method: POST
- name: withdrawal_transaction
  endpoint:
    path: /savingsaccounts/{accountsId}/transactions?command=withdrawal
    method: POST
- name: adjust_transaction
  endpoint:
    path: /savingsaccounts/{accountsId}/transactions/{transactionId}?command=modify
    method: POST
- name: undo_transaction
  endpoint:
    path: /savingsaccounts/{accountsId}/transactions/{transactionId}?command=undo
    method: POST
- name: fixed_deposit_accounts
  endpoint:
    path: /fixeddepositaccounts
    method: GET
    data_selector: '[]'
- name: fixed_deposit_account
  endpoint:
    path: /fixeddepositaccounts/{accountId}
    method: GET
    data_selector: '{}'
- name: modify_fixed_deposit_account
  endpoint:
    path: /fixeddepositaccounts/{accountId}
    method: PUT
    data_selector: '{}'
- name: delete_fixed_deposit_account
  endpoint:
    path: /fixeddepositaccounts/{accountsId}
    method: DELETE
    data_selector: '{}'
- name: standing_instruction_run_history
  endpoint:
    path: /standinginstructionrunhistory
    method: GET
    data_selector: '{}'
- name: notes
  endpoint:
    path: /{resource}/{resourceId}/notes
    method: POST
    data_selector: '{}'
- name: documents
  endpoint:
    path: /{entityType}/{entityId}/documents
    method: GET
    data_selector: '[]'
- name: fixed_deposit_template
  endpoint:
    path: /fixeddepositaccounts/template
    method: GET
    data_selector: records
    params:
      clientId: 1
- name: submit_fixed_deposit_application
  endpoint:
    path: /fixeddepositaccounts
    method: POST
    data_selector: records
- name: approve_fixed_deposit_application
  endpoint:
    path: /fixeddepositaccounts/{accountId}?command=approve
    method: POST
    data_selector: records
- name: undo_approval_fixed_deposit_application
  endpoint:
    path: /fixeddepositaccounts/{accountId}?command=undoApproval
    method: POST
    data_selector: records
- name: reject_fixed_deposit_application
  endpoint:
    path: /fixeddepositaccounts/{accountId}?command=reject
    method: POST
    data_selector: records
- name: withdraw_fixed_deposit_application
  endpoint:
    path: /fixeddepositaccounts/{savingsId}?command=withdrawnByApplicant
    method: POST
    data_selector: records
- name: activate_fixed_deposit_account
  endpoint:
    path: /fixeddepositaccounts/{accountId}?command=activate
    method: POST
    data_selector: records
- name: close_fixed_deposit_account
  endpoint:
    path: /fixeddepositaccounts/{accountId}?command=close
    method: POST
    data_selector: records
- name: premature_close_fixed_deposit_account
  endpoint:
    path: /fixeddepositaccounts/{accountId}?command=prematureClose
    method: POST
    data_selector: records
- name: calculate_premature_amount
  endpoint:
    path: /fixeddepositaccounts/{accountId}?command=calculatePrematureAmount
    method: POST
    data_selector: records
- name: calculate_interest
  endpoint:
    path: /fixeddepositaccounts/{accountId}?command=calculateInterest
    method: POST
    data_selector: records
- name: post_interest
  endpoint:
    path: /fixeddepositaccounts/{accountId}?command=postInterest
    method: POST
    data_selector: records
- name: interest_rate_chart
  endpoint:
    path: /interestratecharts
    method: POST
    data_selector: resourceId
    params: {}
- name: retrieve_all_charts
  endpoint:
    path: /interestratecharts
    method: GET
    data_selector: '[]'
    params:
      productId: mandatory
- name: retrieve_chart
  endpoint:
    path: /interestratecharts/{chartId}
    method: GET
    data_selector: '{}'
    params: {}
- name: update_chart
  endpoint:
    path: /interestratecharts/{chartId}
    method: PUT
    data_selector: resourceId
    params: {}
- name: delete_chart
  endpoint:
    path: /interestratecharts/{chartId}
    method: DELETE
    data_selector: resourceId
    params: {}
- name: retrieve_chart_details_template
  endpoint:
    path: /interestratecharts/template
    method: GET
    data_selector: '{}'
    params: {}
- name: create_slab
  endpoint:
    path: /interestratecharts/{chartId}/chartslabs
    method: POST
    data_selector: resourceId
    params: {}
- name: retrieve_all_slabs
  endpoint:
    path: /interestratecharts/{chartId}/chartslabs
    method: GET
    data_selector: '[]'
    params: {}
- name: retrieve_slab
  endpoint:
    path: /interestratecharts/{chartId}/chartslabs/{slabId}
    method: GET
    data_selector: '{}'
    params: {}
- name: update_slab
  endpoint:
    path: /interestratecharts/{chartId}/chartslabs/{slabId}
    method: PUT
    data_selector: resourceId
    params: {}
- name: delete_slab
  endpoint:
    path: /interestratecharts/{chartId}/chartslabs/{slabId}
    method: DELETE
    data_selector: resourceId
    params: {}
- name: provisioningcriteria
  endpoint:
    path: /provisioningcriteria
    method: POST
    data_selector: resourceId
- name: provisioningcriteria_list
  endpoint:
    path: /provisioningcriteria
    method: GET
    data_selector: ''
- name: provisioningcriteria_retrieve
  endpoint:
    path: /provisioningcriteria/{criteriaId}
    method: GET
    data_selector: ''
- name: provisioningcriteria_update
  endpoint:
    path: /provisioningcriteria/{criteriaId}
    method: PUT
    data_selector: resourceId
- name: provisioningcriteria_delete
  endpoint:
    path: /provisioningcriteria/{criteriaId}
    method: DELETE
    data_selector: resourceId
- name: tellers
  endpoint:
    path: /tellers
    method: GET
    data_selector: ''
    params: {}
- name: create_teller
  endpoint:
    path: /tellers
    method: POST
    data_selector: ''
    params: {}
- name: retrieve_teller
  endpoint:
    path: /tellers/{tellerId}
    method: GET
    data_selector: ''
    params: {}
- name: update_teller
  endpoint:
    path: /tellers/{tellerId}
    method: PUT
    data_selector: ''
    params: {}
- name: list_cashiers
  endpoint:
    path: /tellers/{tellerId}/cashiers
    method: GET
    data_selector: ''
    params: {}
- name: create_cashier
  endpoint:
    path: /tellers/{tellerId}/cashiers
    method: POST
    data_selector: ''
    params: {}
- name: retrieve_cashier
  endpoint:
    path: /tellers/{tellerId}/cashiers/{cashierId}
    method: GET
    data_selector: ''
    params: {}
- name: update_cashier
  endpoint:
    path: /tellers/{tellerId}/cashiers/{cashierId}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_cashier
  endpoint:
    path: /tellers/{tellerId}/cashiers/{cashierId}
    method: DELETE
    data_selector: ''
    params: {}
- name: retrieve_cashier_transaction
  endpoint:
    path: /tellers/{tellerId}/cashiers/{cashierId}/transactions
    method: GET
    data_selector: ''
    params: {}
- name: allocate_cash_to_cashier
  endpoint:
    path: /tellers/{tellerId}/cashiers/{cashierId}/allocate
    method: POST
    data_selector: ''
    params: {}
- name: settle_cash_from_cashier
  endpoint:
    path: /tellers/{tellerId}/cashiers/{cashierId}/settle
    method: POST
    data_selector: ''
    params: {}
- name: transactions_with_summary_for_cashier
  endpoint:
    path: /tellers/{tellerId}/cashiers/{cashierId}/summaryandtransactions
    method: GET
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
- name: clients
  endpoint:
    path: /clients
    method: GET
- name: loans
  endpoint:
    path: /loans
    method: GET
- name: savings
  endpoint:
    path: /savings
    method: GET
- name: reports
  endpoint:
    path: /reports
    method: GET
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: responses
    params:
      output-type: csv
- name: groups_search
  endpoint:
    path: /groups
    method: GET
    data_selector: responses
    params: {}
- name: groups_delete
  endpoint:
    path: /groups/{id}
    method: DELETE
    data_selector: responses
    params: {}
- name: authentication
  endpoint:
    path: /authentication
    method: POST
    data_selector: data
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: data
- name: mfa_register
  endpoint:
    path: /mfa/register
    method: POST
    data_selector: data
- name: mfa_validate_registration
  endpoint:
    path: /mfa/validate-registration
    method: POST
    data_selector: data
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: response
    params:
      output-type: string
- name: clients
  endpoint:
    path: /clients
    method: GET
    data_selector: response
    params: {}
- name: delete_report
  endpoint:
    path: /runreports/delete/{reportId}
    method: DELETE
    data_selector: response
    params: {}
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: response
    params:
      output-type: required
- name: clients_accounts
  endpoint:
    path: /clients/{id}/accounts
    method: GET
    data_selector: response
    params: {}
- name: client_charges
  endpoint:
    path: /clients/{id}/charges
    method: GET
    data_selector: entries
    params:
      offset: 0
      limit: 200
- name: client_transactions
  endpoint:
    path: /clients/{id}/transactions
    method: GET
    data_selector: entries
    params:
      offset: 0
      limit: 200
- name: client_identifiers
  endpoint:
    path: /clients/{id}/identifiers
    method: GET
    data_selector: entries
    params: {}
- name: blacklist
  endpoint:
    path: /blacklist
    method: GET
    data_selector: entries
    params:
      offset: 0
      limit: 200
- name: client_identifier_validation
  endpoint:
    path: /client-identifier-validation
    method: GET
    data_selector: entries
    params: {}
- name: client_identifier_type
  endpoint:
    path: /client-identifier-type
    method: GET
    data_selector: entries
    params: {}
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: response
    params:
      output-type: json
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: response
    params:
      output-type: string
- name: field_configuration_addresses
  endpoint:
    path: /fieldconfiguration/addresses
    method: GET
    data_selector: response
    params: {}
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: response
    params:
      output-type: csv
- name: blacklist
  endpoint:
    path: /blacklist
    method: POST
    data_selector: response
    params: {}
- name: credit_bureaus
  endpoint:
    path: /creditbureaus
    method: GET
    data_selector: response
    params: {}
- name: loanproducts
  endpoint:
    path: /loanproducts
    method: POST
    data_selector: null
    params: {}
- name: runreports_addToQueue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: null
    params: {}
- name: loans
  endpoint:
    path: /loans
    method: GET
    data_selector: null
    params: {}
- name: savingsproducts
  endpoint:
    path: /savingsproducts
    method: POST
    data_selector: Resource created successfully
    params: {}
- name: runreports
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: Report added to queue
    params:
      output-type: csv
- name: savingsaccounts
  endpoint:
    path: /savingsaccounts
    method: GET
    data_selector: Returns paged response of Savings Accounts
    params: {}
- name: addToQueue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: response
    params:
      output-type: csv
- name: savingsAccountLocks
  endpoint:
    path: /savingsaccounts/{accountId}/locks
    method: GET
    data_selector: response
    params: {}
- name: deleteLock
  endpoint:
    path: /savingsaccounts/{accountId}/locks/{lockId}?command=deleteLock
    method: POST
    data_selector: response
    params: {}
- name: fixed_deposit_products
  endpoint:
    path: /fixeddepositproducts
    method: POST
    data_selector: resource
    params: {}
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: resource
    params: {}
- name: fixed_deposit_accounts
  endpoint:
    path: /fixeddepositaccounts
    method: POST
    data_selector: resource
    params: {}
- name: share_products
  endpoint:
    path: /product/share
    method: GET
    data_selector: resource
    params: {}
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: Report added to queue
- name: account_transfers
  endpoint:
    path: /accounttransfers
    method: POST
    data_selector: Resource created successfully
- name: list_standing_instructions
  endpoint:
    path: /standinginstructions
    method: GET
    data_selector: Returns paged response of entries that satisfy the request.
- name: collection_sheet
  endpoint:
    path: /collectionsheet
    method: GET
    data_selector: Returns non-paged response of records that satisfy the request.
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: '200'
    params:
      output-type: csv
- name: product_share
  endpoint:
    path: /product/share/{id}
    method: GET
    data_selector: '200'
    params: {}
- name: list_share_accounts
  endpoint:
    path: /accounts/share
    method: GET
    data_selector: '200'
    params:
      offset: 0
      limit: 200
- name: list_account_transfers
  endpoint:
    path: /accounttransfers
    method: GET
    data_selector: '200'
    params:
      offset: 0
      limit: 200
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: response
    params:
      output-type: string
- name: collection_sheet_save_group
  endpoint:
    path: /collectionsheet?command=saveGroupCollectionSheet
    method: POST
    data_selector: response
    params: {}
- name: withdrawal_sheet
  endpoint:
    path: /withdrawalsheet
    method: GET
    data_selector: response
    params: {}
- name: offices
  endpoint:
    path: /offices
    method: GET
    data_selector: response
    params:
      includeAllOffices: boolean
      orderBy: string
      sortOrder: string
- name: offices
  endpoint:
    path: /offices
    method: POST
    data_selector: response
- name: run_reports
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: response
- name: staff
  endpoint:
    path: /staff
    method: GET
    data_selector: response
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: response
- name: holidays
  endpoint:
    path: /holidays
    method: GET
    data_selector: records
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: records
- name: payment_types
  endpoint:
    path: /paymenttypes
    method: GET
    data_selector: records
- name: gl_accounts
  endpoint:
    path: /glaccounts
    method: GET
    data_selector: records
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: report
    params:
      output-type: string
- name: tasks
  endpoint:
    path: /tasks/{id}
    method: GET
    data_selector: task
    params: {}
- name: funds
  endpoint:
    path: /funds
    method: GET
    data_selector: funds
    params: {}
- name: currencies
  endpoint:
    path: /currencies
    method: GET
    data_selector: currency
    params: {}
- name: working_days
  endpoint:
    path: /workingdays
    method: GET
    data_selector: working_days
    params: {}
- name: holidays
  endpoint:
    path: /holidays
    method: GET
    data_selector: holidays
    params: {}
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: response
    params:
      output-type: string
- name: financial_activity_accounts
  endpoint:
    path: /financialactivityaccounts
    method: GET
    data_selector: response
    params: {}
- name: gl_closures
  endpoint:
    path: /glclosures
    method: GET
    data_selector: response
    params:
      limit: integer
      offset: integer
- name: accounting_exports
  endpoint:
    path: /accountingexports
    method: GET
    data_selector: response
    params: {}
- name: journal_entries
  endpoint:
    path: /journalentries
    method: GET
    data_selector: records
    params: {}
- name: run_reports
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: records
    params: {}
- name: accounting_rules
  endpoint:
    path: /accountingrules
    method: GET
    data_selector: records
    params: {}
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: Report added to queue
    params: {}
- name: run_accruals
  endpoint:
    path: /runaccruals
    method: POST
    data_selector: Resource created successfully
    params: {}
- name: data_filters
  endpoint:
    path: /datafilters
    method: GET
    data_selector: Returns paged response listing all the data filters
    params:
      offset: 0
      limit: 200
- name: delete_report
  endpoint:
    path: /reports/{reportId}
    method: DELETE
    data_selector: Report deleted successfully
    params: {}
- name: data_exports
  endpoint:
    path: /dataexports
    method: GET
    data_selector: returns non-paged response of Data Exports that satisfy the request.
    params: {}
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: Report added to queue
    params:
      output-type: string
- name: document_templates
  endpoint:
    path: /templates
    method: GET
    data_selector: returns non-paged response of Document Templates that satisfy the
      request.
    params: {}
- name: addToQueue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: response
    params:
      output-type: csv
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: response
    params: {}
- name: hooks
  endpoint:
    path: /hooks
    method: GET
    data_selector: response
    params: {}
- name: hooks_template
  endpoint:
    path: /hooks/template
    method: GET
    data_selector: response
    params: {}
- name: templates
  endpoint:
    path: /templates/{id}
    method: GET
- name: runreports
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
- name: metadata_groups
  endpoint:
    path: /metadata/groups
    method: GET
- name: metadata_loans
  endpoint:
    path: /metadata/loans
    method: GET
- name: metadata_savingsaccounts
  endpoint:
    path: /metadata/savingsaccounts
    method: GET
- name: metadata_tasks
  endpoint:
    path: /metadata/tasks
    method: GET
- name: lookups
  endpoint:
    path: /lookups/{metadataModelType}/parameters/{apiParameterName}
    method: GET
- name: lookups_relationships
  endpoint:
    path: /lookups/relationships/{relationshipName}
    method: GET
- name: authentication
  endpoint:
    path: /api/v1/authentication
    method: POST
    data_selector: authenticated
    params: {}
- name: mfa_register
  endpoint:
    path: /api/v1/mfa/register
    method: POST
    data_selector: email
    params: {}
- name: mfa_validate
  endpoint:
    path: /api/v1/mfa/validate-registration
    method: POST
    data_selector: isValid
    params: {}
- name: mfa_verify
  endpoint:
    path: /api/v1/mfa/verify
    method: POST
    data_selector: isValid
    params: {}
- name: groups_unassign_staff
  endpoint:
    path: /groups/{id}
    method: POST
    params:
      command: unassignStaff
- name: groups_assign_role
  endpoint:
    path: /groups/{id}
    method: POST
    params:
      command: assignRole
- name: groups_update_role
  endpoint:
    path: /groups/{id}
    method: POST
    params:
      command: updateRole
- name: groups_unassign_role
  endpoint:
    path: /groups/{id}
    method: POST
    params:
      command: unassignRole
- name: groups_transfer
  endpoint:
    path: /groups/{id}
    method: POST
    params:
      command: transferGroup
- name: groups_close
  endpoint:
    path: /groups/{id}
    method: POST
    params:
      command: close
- name: groups_accounts_summary
  endpoint:
    path: /groups/{id}/accounts
    method: GET
- name: clients
  endpoint:
    path: /clients
    method: GET
    data_selector: clients
    params:
      offset: 0
      limit: 200
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: ''
    params:
      paged: 'false'
      offset: 0
      limit: 200
- name: create_group
  endpoint:
    path: /groups
    method: POST
    data_selector: ''
    params: {}
- name: find_group
  endpoint:
    path: /groups/{id}
    method: GET
    data_selector: ''
    params: {}
- name: update_group
  endpoint:
    path: /groups/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_group
  endpoint:
    path: /groups/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: activate_group
  endpoint:
    path: /groups/{id}?command=activate
    method: POST
    data_selector: ''
    params: {}
- name: associate_clients
  endpoint:
    path: /groups/{id}?command=associateClients
    method: POST
    data_selector: ''
    params: {}
- name: disassociate_clients
  endpoint:
    path: /groups/{id}?command=disassociateClients
    method: POST
    data_selector: ''
    params: {}
- name: assign_staff
  endpoint:
    path: /groups/{id}?command=assignStaff
    method: POST
    data_selector: ''
    params: {}
- name: unassign_staff
  endpoint:
    path: /groups/{id}?command=unassignStaff
    method: POST
    data_selector: ''
    params: {}
- name: clients
  endpoint:
    path: /clients
    method: POST
    data_selector: resourceId
- name: client_by_id
  endpoint:
    path: /clients/{id}
    method: GET
    data_selector: id
- name: update_client
  endpoint:
    path: /clients/{id}
    method: PUT
    data_selector: resourceId
- name: delete_client
  endpoint:
    path: /clients/{id}
    method: DELETE
    data_selector: resourceId
- name: transfer_client
  endpoint:
    path: /clients/{id}?command=proposeAndAcceptTransfer
    method: POST
    data_selector: resourceId
- name: activate_client
  endpoint:
    path: /clients/{id}?command=activate
    method: POST
    data_selector: resourceId
- name: reject_client
  endpoint:
    path: /clients/{id}?command=reject
    method: POST
    data_selector: resourceId
- name: client_charges
  endpoint:
    path: /clients/{id}/charges
    method: GET
    data_selector: pageItems
    params:
      offset: 0
      limit: 200
- name: client_transactions
  endpoint:
    path: /clients/{id}/transactions
    method: GET
    data_selector: pageItems
    params:
      offset: 0
      limit: 200
- name: client_identifiers
  endpoint:
    path: /clients/{id}/identifiers
    method: GET
    data_selector: records
    params: {}
- name: client_identifier_validation
  endpoint:
    path: /client-identifier-validation
    method: GET
    data_selector: records
- name: blacklist
  endpoint:
    path: /blacklist
    method: GET
    data_selector: records
- name: loan_product
  endpoint:
    path: /api/loan_products
    method: GET
    data_selector: loanProducts
- name: clients_reject
  endpoint:
    path: /clients/{id}?command=reject
    method: POST
    data_selector: resourceId
    params:
      locale: en
      dateFormat: dd MMMM yyyy
      rejectionDate: 01 July 2007
      rejectionReasonId: 345
- name: clients_undo_reject
  endpoint:
    path: /clients/{id}?command=undoRejection
    method: POST
    data_selector: resourceId
    params:
      locale: en
      dateFormat: dd MMMM yyyy
      reopenedDate: 01 July 2007
- name: clients_withdraw
  endpoint:
    path: /clients/{id}?command=withdraw
    method: POST
    data_selector: resourceId
    params:
      locale: en
      dateFormat: dd MMMM yyyy
      withdrawalDate: 01 July 2007
      withdrawalReasonId: 146
- name: clients_undo_withdraw
  endpoint:
    path: /clients/{id}?command=undoWithdrawal
    method: POST
    data_selector: resourceId
    params:
      locale: en
      dateFormat: dd MMMM yyyy
      reopenedDate: 01 July 2007
- name: clients_close
  endpoint:
    path: /clients/{id}?command=close
    method: POST
    data_selector: resourceId
    params:
      locale: en
      dateFormat: dd MMMM yyyy
      closureDate: 01 July 2007
      closureReasonId: 876
- name: clients_reactivate
  endpoint:
    path: /clients/{id}?command=reactivate
    method: POST
    data_selector: resourceId
    params:
      locale: en
      dateFormat: dd MMMM yyyy
      reactivationDate: 01 July 2007
- name: clients_accounts_summary
  endpoint:
    path: /clients/{id}/accounts
    method: GET
    data_selector: ''
- name: loanproducts
  endpoint:
    path: /loanproducts
    method: POST
    data_selector: resourceId
- name: loans
  endpoint:
    path: /loans
    method: GET
    data_selector: '[]'
- name: create_loan
  endpoint:
    path: /loans
    method: POST
- name: search_loans_by_state
  endpoint:
    path: /loans/queries/search
    method: POST
- name: find_loan_by_id
  endpoint:
    path: /loans/{id}
    method: GET
- name: blacklist_entry
  endpoint:
    path: /blacklist/{id}
    method: DELETE
    data_selector: resourceId
    params: {}
- name: blacklist_client
  endpoint:
    path: /blacklist/{clientId}
    method: POST
    data_selector: clientId
    params: {}
- name: credit_bureaus
  endpoint:
    path: /creditbureaus
    method: GET
    data_selector: records
    params: {}
- name: credit_reference_requests
  endpoint:
    path: /creditbureaus/{bureauId}/creditreferencerequests
    method: GET
    data_selector: records
    params: {}
- name: credit_reference_responses
  endpoint:
    path: /creditbureaus/{bureauId}/creditreferenceresponses
    method: GET
    data_selector: records
    params: {}
- name: client_addresses
  endpoint:
    path: /client/{id}/addresses
    method: GET
    data_selector: records
    params: {}
- name: create_client_address
  endpoint:
    path: /client/{id}/addresses
    method: POST
    data_selector: resourceId
    params: {}
- name: update_client_address
  endpoint:
    path: /client/{id}/addresses
    method: PUT
    data_selector: resourceId
    params: {}
- name: field_configuration_addresses
  endpoint:
    path: /fieldconfiguration/addresses
    method: GET
    data_selector: records
    params: {}
- name: loans
  endpoint:
    path: /loans/{id}
    method: POST
    data_selector: resourceId
    params: {}
- name: loan_transactions
  endpoint:
    path: /loans/{id}/transactions
    method: POST
    data_selector: resourceId
    params: {}
- name: create_savings_product
  endpoint:
    path: /savingsproducts
    method: POST
    data_selector: resourceId
- name: activate_savings_product
  endpoint:
    path: /savingsproducts/{id}?command=activate
    method: POST
    data_selector: resourceId
- name: close_savings_product
  endpoint:
    path: /savingsproducts/{id}?command=close
    method: POST
    data_selector: resourceId
- name: create_savings_account
  endpoint:
    path: /savingsaccounts
    method: POST
    data_selector: resourceId
- name: savingsaccounts
  endpoint:
    path: /savingsaccounts
    method: GET
    data_selector: records
    params:
      limit: 200
      offset: 0
- name: findSavingsById
  endpoint:
    path: /savingsaccounts/{accountId}
    method: GET
    data_selector: records
    params: {}
- name: enableDisableDepositLock
  endpoint:
    path: /savingsaccounts/{accountId}/depositlock
    method: POST
    data_selector: resource
    params: {}
- name: fixed_deposit_products
  endpoint:
    path: /fixeddepositproducts/{id}
    method: GET
    data_selector: records
    params: {}
- name: fixed_deposit_accounts
  endpoint:
    path: /fixeddepositaccounts
    method: POST
    data_selector: resourceId
    params: {}
- name: share_products
  endpoint:
    path: /product/share
    method: GET
    data_selector: records
    params: {}
- name: share_product
  endpoint:
    path: /product/share
    method: GET
    data_selector: resourceId
- name: share_product_by_id
  endpoint:
    path: /product/share/{id}
    method: GET
    data_selector: resourceId
- name: share_product_dividend
  endpoint:
    path: /product/share/{id}/dividend
    method: GET
    data_selector: totalFilteredRecords
- name: share_accounts
  endpoint:
    path: /accounts/share
    method: GET
    data_selector: results
    params:
      limit: 200
      offset: 0
      status: 300
- name: account_transfers
  endpoint:
    path: /accounttransfers
    method: GET
    data_selector: pageItems
    params:
      limit: 200
      offset: 0
- name: collection_sheet
  endpoint:
    path: /collectionsheet
    method: GET
- name: withdrawal_sheet
  endpoint:
    path: /withdrawalsheet
    method: GET
- name: standing_instructions
  endpoint:
    path: /standinginstructions
    method: GET
    data_selector: pageItems
    params:
      offset: 0
      limit: 200
- name: create_standing_instruction
  endpoint:
    path: /standinginstructions
    method: POST
    data_selector: resourceId
- name: update_or_delete_standing_instruction
  endpoint:
    path: /standinginstructions/{id}
    method: PUT
    data_selector: resourceId
- name: find_standing_instruction_by_id
  endpoint:
    path: /standinginstructions/{id}
    method: GET
    data_selector: id
- name: savings_account_deposit_lock
  endpoint:
    path: /savingsaccounts/{accountId}?command=depositLock
    method: POST
    data_selector: resourceId
    params:
      depositLock: true
- name: savings_account_withdrawal_lock
  endpoint:
    path: /savingsaccounts/{accountId}?command=withdrawalLock
    method: POST
    data_selector: resourceId
    params:
      depositLock: false
- name: list_savings_account_locks
  endpoint:
    path: /savingsaccounts/{accountId}/locks
    method: GET
    data_selector: locks
    params: {}
- name: add_lock_to_savings_account
  endpoint:
    path: /savingsaccounts/{accountId}/locks
    method: POST
    data_selector: resourceId
    params:
      locale: en
      dateFormat: dd MMMM yyyy
      note: A short note in relation to this.
      onHoldAmount: 200
      startDate: '2022-01-20'
      endDate: '2024-01-20'
- name: get_savings_account_lock_by_id
  endpoint:
    path: /savingsaccounts/{accountId}/locks/{lockId}
    method: GET
    data_selector: lock
    params: {}
- name: update_lock
  endpoint:
    path: /savingsaccounts/{accountId}/locks/{lockId}
    method: PUT
    data_selector: resourceId
    params:
      locale: en
      dateFormat: dd MMMM yyyy
      onHoldAmount: 200
      startDate: '2022-01-20'
      endDate: '2024-01-20'
- name: release_lock
  endpoint:
    path: /savingsaccounts/{accountId}/locks/{lockId}?command=releaseLock
    method: POST
    data_selector: resourceId
    params: {}
- name: delete_lock
  endpoint:
    path: /savingsaccounts/{accountId}/locks/{lockId}?command=deleteLock
    method: POST
    data_selector: resourceId
    params: {}
- name: create_fixed_term_deposit_product
  endpoint:
    path: /fixeddepositproducts
    method: POST
    data_selector: resourceId
    params:
      locale: en
      name: Product Name
      shortName: Prod
      description: Description of the product.
      currencyCode: USD
      digitsAfterDecimal: 2
      inMultiplesOf: 10
      productGroupId: 1
      minDepositAmount: 100
      maxDepositAmount: 10000
      depositAmount: 500
      minDepositTerm: 6
      minDepositTermTypeId: 2
      maxDepositTerm: 12
      maxDepositTermTypeId: 2
      interestPostingPeriodType: 4
      interestCompoundingPeriodType: 4
      interestCalculationType: 1
      interestCalculationDaysInYearType: 365
      lockinPeriodEnabled: true
      lockinPeriodFrequency: 2
      lockinPeriodFrequencyType: 3
      accountingRule: 2
- name: fund
  endpoint:
    path: /funds/{fundId}
    method: GET
    data_selector: id
    params: {}
- name: currencies
  endpoint:
    path: /currencies
    method: GET
    data_selector: selectedCurrencyOptions
    params: {}
- name: workingdays
  endpoint:
    path: /workingdays
    method: GET
    data_selector: id
    params: {}
- name: holidays
  endpoint:
    path: /holidays
    method: GET
    data_selector: id
    params: {}
- name: paymenttypes
  endpoint:
    path: /paymenttypes
    method: GET
    data_selector: id
    params: {}
- name: staff
  endpoint:
    path: /staff
    method: POST
    data_selector: resourceId
    params: {}
- name: staff_by_id
  endpoint:
    path: /staff/{id}
    method: GET
    data_selector: id
    params: {}
- name: update_staff
  endpoint:
    path: /staff/{id}
    method: PUT
    data_selector: resourceId
    params: {}
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: totalFilteredRecords
    params: {}
- name: create_task
  endpoint:
    path: /tasks
    method: POST
    data_selector: resourceId
    params: {}
- name: task_by_id
  endpoint:
    path: /tasks/{id}
    method: GET
    data_selector: id
    params: {}
- name: update_task
  endpoint:
    path: /tasks/{id}
    method: PUT
    data_selector: resourceId
    params: {}
- name: delete_task
  endpoint:
    path: /tasks/{id}
    method: DELETE
    data_selector: resourceId
    params: {}
- name: funds
  endpoint:
    path: /funds
    method: GET
    data_selector: funds
    params: {}
- name: withdrawal_sheet_generate
  endpoint:
    path: /withdrawalsheet
    method: POST
    data_selector: records
    params:
      command: generateWithdrawalSheet
- name: withdrawal_sheet_generate_group
  endpoint:
    path: /withdrawalsheet
    method: POST
    data_selector: records
    params:
      command: generateGroupWithdrawalSheet
- name: withdrawal_sheet_submit
  endpoint:
    path: /withdrawalsheet
    method: POST
    data_selector: records
    params:
      command: saveCollectionSheet
- name: withdrawal_sheet_approve
  endpoint:
    path: /withdrawalsheet
    method: POST
    data_selector: records
    params:
      command: approve
- name: withdrawal_sheet_reject
  endpoint:
    path: /withdrawalsheet
    method: POST
    data_selector: records
    params:
      command: reject
- name: list_offices
  endpoint:
    path: /offices
    method: GET
    data_selector: records
- name: create_office
  endpoint:
    path: /offices
    method: POST
    data_selector: resourceId
- name: find_office_by_id
  endpoint:
    path: /offices/{id}
    method: GET
    data_selector: records
- name: update_office
  endpoint:
    path: /offices/{id}
    method: PUT
    data_selector: resourceId
- name: list_staff
  endpoint:
    path: /staff
    method: GET
    data_selector: records
- name: create_staff
  endpoint:
    path: /staff
    method: POST
    data_selector: resourceId
- name: payment_types_delete
  endpoint:
    path: /paymenttypes/{paymentTypeId}
    method: DELETE
    params:
      paymentTypeId: required
- name: gl_accounts_list
  endpoint:
    path: /glaccounts
    method: GET
- name: gl_accounts_create
  endpoint:
    path: /glaccounts
    method: POST
- name: financial_activity_accounts_list
  endpoint:
    path: /financialactivityaccounts
    method: GET
- name: accounting_exports
  endpoint:
    path: /api/v1/accountingexports/{id}
    method: GET
    data_selector: records
- name: gl_closures
  endpoint:
    path: /api/v1/glclosures
    method: GET
    data_selector: records
- name: journal_entries
  endpoint:
    path: /api/v1/journalentries
    method: GET
    data_selector: pageItems
- name: datafilters
  endpoint:
    path: /datafilters
    method: GET
- name: dataexports
  endpoint:
    path: /dataexports
    method: GET
- name: journal_entries
  endpoint:
    path: /journalentries/{entryId}
    method: GET
    data_selector: response
    params: {}
- name: reverse_or_reconcile_journal_entry
  endpoint:
    path: /journalentries/{entryId}
    method: POST
    data_selector: response
    params: {}
- name: accounting_rules
  endpoint:
    path: /accountingrules
    method: GET
    data_selector: response
    params: {}
- name: create_accounting_rule
  endpoint:
    path: /accountingrules
    method: POST
    data_selector: response
    params: {}
- name: find_accounting_rule
  endpoint:
    path: /accountingrules/{id}
    method: GET
    data_selector: response
    params: {}
- name: update_accounting_rule
  endpoint:
    path: /accountingrules/{id}
    method: PUT
    data_selector: response
    params: {}
- name: delete_accounting_rule
  endpoint:
    path: /accountingrules/{id}
    method: DELETE
    data_selector: response
    params: {}
- name: run_accruals
  endpoint:
    path: /runaccruals
    method: POST
    data_selector: response
    params: {}
- name: loans_metadata
  endpoint:
    path: /api/v1/metadata/loans
    method: GET
- name: templates
  endpoint:
    path: /templates
    method: POST
    data_selector: null
    params: {}
- name: document_template
  endpoint:
    path: /templates/{id}
    method: GET
    data_selector: null
    params: {}
- name: hypermedia_resources
  endpoint:
    path: /hypermedia/resources
    method: GET
    data_selector: null
    params: {}
- name: hypermedia_apis
  endpoint:
    path: /hypermedia/apis
    method: GET
    data_selector: null
    params: {}
- name: metadata_groups
  endpoint:
    path: /metadata/groups
    method: GET
    data_selector: null
    params: {}
- name: data_exports
  endpoint:
    path: /dataexports
    method: POST
    data_selector: ''
    params: {}
- name: data_export_by_id
  endpoint:
    path: /dataexports/{id}
    method: GET
    data_selector: ''
    params: {}
- name: download_data_export
  endpoint:
    path: /dataexports/{id}/download
    method: GET
    data_selector: ''
    params: {}
- name: request_data_export
  endpoint:
    path: /data-export/prepared
    method: GET
    data_selector: ''
    params: {}
- name: find_queued_data_export
  endpoint:
    path: /data-export/prepared/{id}
    method: GET
    data_selector: ''
    params: {}
- name: get_queued_data_export_download_link
  endpoint:
    path: /data-export/prepared/{id}/attachment/direct-link
    method: GET
    data_selector: ''
    params: {}
- name: loan
  endpoint:
    path: /loans
    method: GET
    data_selector: records
- name: disbursement
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
- name: lastModifiedByUsername
  endpoint:
    path: /groups/lastModifiedByUsername
    method: GET
    data_selector: records
- name: lastModifiedOnTimestamp
  endpoint:
    path: /groups/lastModifiedOnTimestamp
    method: GET
    data_selector: records
- name: savingsaccounts
  endpoint:
    path: /api/v1/metadata/savingsaccounts
    method: GET
    data_selector: metadata
- name: lookups
  endpoint:
    path: /lookups/groups/parameters/submittedByUserId
    method: GET
    params:
      limit:
        type: integer
      offset:
        type: integer
      searchTerm:
        type: string
        minLength: 0
- name: submittedByUserId
  endpoint:
    path: /lookups/groups/parameters/submittedByUserId
    method: GET
    data_selector: options
- name: approvedByUserId
  endpoint:
    path: /lookups/groups/parameters/submittedByUserId
    method: GET
    data_selector: options
- name: rejectedByUserId
  endpoint:
    path: /lookups/groups/parameters/submittedByUserId
    method: GET
    data_selector: options
- name: withdrawnByUserId
  endpoint:
    path: /lookups/groups/parameters/submittedByUserId
    method: GET
    data_selector: options
- name: hooks_template
  endpoint:
    path: /hooks/template
    method: GET
    data_selector: templates
- name: sms_messages
  endpoint:
    path: /sms
    method: GET
    data_selector: pageItems
    params:
      offset: 0
      limit: 200
      paged: true
- name: sms
  endpoint:
    path: /sms
    method: GET
    data_selector: records
- name: runreports_addToQueue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
- name: codes
  endpoint:
    path: /codes
    method: GET
    data_selector: records
- name: code_values
  endpoint:
    path: /codes/{codeId}/codevalues
    method: GET
    data_selector: records
- name: tasks
  endpoint:
    path: /metadata/tasks
    method: GET
- name: lookups
  endpoint:
    path: /lookups/{metadataModelType}/parameters/{apiParameterName}
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
- name: hooks
  endpoint:
    path: /hooks
    method: GET
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: resourceId
    params:
      output-type: csv
- name: maker_checkers
  endpoint:
    path: /makercheckers
    method: GET
    data_selector: records
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: records
- name: data_tables
  endpoint:
    path: /datatables
    method: GET
    data_selector: records
- name: run_reports_add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    params:
      output-type: string
- name: reports_delete_one
  endpoint:
    path: /runreports/delete/{reportId}
    method: DELETE
    params: {}
- name: entity_datatable_checks
  endpoint:
    path: /entityDatatableChecks
    method: GET
    params: {}
- name: addToQueue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: statusList
    params:
      output-type: json
- name: jobs
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: addToQueue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: null
    params:
      output-type: null
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: null
    params: {}
- name: permissions
  endpoint:
    path: /permissions
    method: GET
    data_selector: null
    params: {}
- name: passwordpreferences
  endpoint:
    path: /passwordpreferences
    method: GET
    data_selector: null
    params: {}
- name: reports_template
  endpoint:
    path: /api/v1/reports/template
    method: GET
    data_selector: allowedReportTypes
- name: run_reports_add_to_queue
  endpoint:
    path: /api/v1/runreports/addToQueue/{reportName}
    method: GET
    data_selector: reportName
- name: prepared_reports
  endpoint:
    path: /api/v1/reports/prepared
    method: GET
    data_selector: pageItems
- name: run_report
  endpoint:
    path: /runreports/{reportName}
    method: GET
    data_selector: response
    params: {}
- name: add_to_queue
  endpoint:
    path: /runreports/addToQueue/{reportName}
    method: GET
    data_selector: response
    params:
      output-type: json
notes:
- Multi-factor authentication may require a secondary security token.
- Username and password are required for authentication.
- Uses musoniBasicAuth for authorization.
- Requires TenantIdentifierKey and MusoniApiKey for authentication.
- Requires musoniBasicAuth with TenantIdentifierKey and MusoniApiKey.
- Some endpoints may return non-paged responses.
- Usage of the API requires a user-specific api-key which can be requested via the
  Musoni Service Desk.
- MFA cannot be enabled on Client Users (users where isSelfServiceUser = true)
- A group can be deleted if it is in pending state and has no associations.
- dateFormat and locale are required even with no date fields at present.
- Authorization requires TenantIdentifierKey and MusoniApiKey.
- API requires specific formatting for loan product fields.
- Requires setup of authorization credentials for API.
- Pagination should be used to retrieve subsequent pages of data.
- Includes fixed deposit and share product functionalities
- Ensure to provide valid authentication credentials
- Uses musoniBasicAuth for authentication
- Task creation and updates require specific permissions.
- Use appropriate authorization headers for API requests.
- Pagination should be used to retrieve subsequent pages of data, limit is 200 by
  default.
- Batch API is capable of executing all requests in a single transaction by setting
  a Query Parameter, 'enclosingTransaction=true'.
- Pagination and sorting supported for loan listing.
- Only loans in 'Submitted and awaiting approval' status can be deleted.
- Mandatory fields for requests include exceptions, locale, and dateFormat.
- Mandatory fields vary based on transaction type.
- Mandatory fields include name, shortName, currencyCode, digitsAfterDecimal, inMultiplesOf,
  principal, numberOfRepayments, repaymentEvery, repaymentFrequencyType, interestRatePerPeriod,
  interestRateFrequencyType, amortizationType, interestType, interestCalculationPeriodType,
  transactionProcessingStrategyId, accountingRule.
- Mandatory fields must be provided when creating a fixed deposit product.
- Share application can only be modified when in 'Submitted and pending approval'
  state.
- The API requires setup of authentication credentials.
- Dev deployment
- The request could not be understood by the server due to malformed syntax or validation
  errors.
- A group can be deleted if it is in pending state and has no associations - clients,
  loans or savings.
- The documentation specifies various attributes for loan products.
- Requires setup of connected app in api
- Authorization requires TenantIdentifierKey and MusoniApiKey
- Responses may vary based on the endpoint and request parameters
- Requires setup of authorized tenants and API keys.
errors:
- '400: Bad Request - The request could not be understood by the server due to malformed
  syntax or validation errors.'
- '401: Unauthorized access. Auth credentials not provided or invalid.'
- '404: Not Found - The requested resource could not be found.'
- '401 Unauthorized: Auth credentials not provided or invalid.'
- '400 Bad Request: The request could not be understood by the server.'
- '404 Not Found: The requested resource could not be found.'
- '400 Bad Request: The request could not be understood by the server due to malformed
  syntax or validation errors.'
- 400 Bad Request - The request could not be understood by the server due to malformed
  syntax or validation errors.
- 401 Unauthorized access. Auth credentials not provided or invalid.
- 404 Not Found - The requested resource could not be found.
- 400 Bad Request - The request could not be understood.
- 401 Unauthorized - Auth credentials not provided or invalid.
- '403: Bad request due to validation error on request. The request should not be
  tried again by API client without modification.'
- '401 Unauthorized: Auth credentials not provided or invalid'
- '403 Forbidden: The request was valid, but the server is refusing action. The user
  might not have the necessary permissions for a resource.'
- '500 Internal Server Error: The server encountered an unexpected condition that
  prevented it from fulfilling the request.'
- '403: Forbidden - The request was valid, but the server is refusing action.'
- '400 Bad Request: The request could not be understood due to malformed syntax or
  validation errors.'
- 400 Bad Request - Invalid Parameter or Data Integrity Issue.
- 401 Authentication Error.
- 403 Unauthorized Request.
- 404 Resource Not Found
- '404 Not Found: The requested resource could not be found'
- 403 Forbidden - The request was valid, but the server is refusing action. The user
  might not have the necessary permissions for a resource.
- 500 Internal Server Error - The server encountered an unexpected condition that
  prevented it from fulfilling the request.
auth_info:
  mentioned_objects:
  - TenantIdentifierKey
  - MusoniApiKey
  - musoniBasicAuth
client:
  base_url: https://dev.irl.musoniservices.com:8443/api/v1
  auth:
    type: musoniBasicAuth
    location: header
source_metadata: null
