resources:
- name: geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params:
      key: YOUR-API-KEY
- name: reverse_geocode_json
  endpoint:
    path: /json
    method: GET
    data_selector: results
    params: {}
- name: reverse_geocode_geojson
  endpoint:
    path: /geojson
    method: GET
    data_selector: features
    params: {}
- name: reverse_geocode_xml
  endpoint:
    path: /xml
    method: GET
    data_selector: results
    params: {}
- name: forward_geocoding
  endpoint:
    path: /json
    method: GET
    data_selector: results
    params:
      q: Rua Cafelândia, Carapicuíba, Brasil
- name: forward_geocoding_geojson
  endpoint:
    path: /geojson
    method: GET
    data_selector: features
    params:
      q: Rua Cafelândia, Carapicuíba, Brasil
- name: forward_geocoding_xml
  endpoint:
    path: /xml
    method: GET
    data_selector: result
    params:
      q: Rua Cafelândia, Carapicuíba, Brasil
- name: geocode
  endpoint:
    path: /geocode/json
    method: GET
    data_selector: results
    params: {}
- name: geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params:
      address: address
      key: key
- name: reverse_geocode
  endpoint:
    path: /json
    method: GET
    data_selector: results
    params:
      language: es
      limit: 5
- name: geocode
  endpoint:
    path: /json
    method: GET
    data_selector: results
    params: {}
- name: geocoding
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params:
      key: YOUR-API-KEY
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
- name: geocoding
  endpoint:
    path: /geocode/v1
    method: GET
    data_selector: results
    params: {}
- name: autosuggest
  endpoint:
    path: /geosearch
    method: GET
    data_selector: results
    params: {}
- name: geosearch
  endpoint:
    path: /geosearch
    method: GET
    data_selector: results
    params:
      key: YOUR-GEOSEARCH-KEY
- name: geosearch
  endpoint:
    path: /geosearch
    method: GET
    data_selector: results
    params: {}
- name: geocode
  endpoint:
    path: /geocode/json
    method: GET
    data_selector: results
    params: {}
- name: geocoding
  endpoint:
    path: /api
    method: GET
- name: geosearch
  endpoint:
    path: /geosearch
    method: GET
- name: geocode
  endpoint:
    path: /api/geocode
    method: GET
    data_selector: results
- name: geocode
  endpoint:
    path: /geocode/v1
    method: GET
    data_selector: results
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
- name: reverse_geocode
  endpoint:
    path: /geocode/reverse
    method: GET
    data_selector: results
- name: geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
- name: reverse_geocode
  endpoint:
    path: /geocode/v1/reverse.json
    method: GET
    data_selector: results
- name: geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
- name: reverse_geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params:
      language: en
- name: geocode
  endpoint:
    path: /api
    method: GET
    data_selector: results
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: results
- name: geocode
  endpoint:
    path: /api
    method: GET
    data_selector: results
- name: reverse_geocoding
  endpoint:
    path: /geocode/reverse
    method: GET
    data_selector: results
- name: forward_geocoding
  endpoint:
    path: /geocode/forward
    method: GET
    data_selector: results
- name: reverse_geocoding
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
- name: forward_geocoding
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
- name: reverse_geocoding
  endpoint:
    path: /geocode/reverse
    method: GET
    data_selector: results
- name: forward_geocoding
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
- name: reverse_geocoding
  endpoint:
    path: /geocode/reverse
    method: GET
    data_selector: results
- name: forward_geocoding
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
- name: bulk_geocoding
  endpoint:
    path: /geocode/bulk
    method: POST
    data_selector: results
- name: reverse_geocoding
  endpoint:
    path: /geocode/reverse
    method: GET
    data_selector: results
- name: forward_geocoding
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
- name: reverse_geocoding
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params:
      key: YOUR-API-KEY
- name: forward_geocoding
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params:
      key: YOUR-API-KEY
- name: geocode
  endpoint:
    path: /api
    method: GET
    data_selector: results
- name: reverse_geocode
  endpoint:
    path: /api/reverse
    method: GET
    data_selector: results
- name: geocode
  endpoint:
    path: /api/geocode
    method: GET
    data_selector: results
- name: reverse_geocode
  endpoint:
    path: /api/reverse
    method: GET
    data_selector: results
- name: geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params: {}
- name: reverse_geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params: {}
- name: geocode
  endpoint:
    path: /api
    method: GET
    data_selector: results
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params: {}
- name: geosearch
  endpoint:
    path: /geosearch
    method: GET
    data_selector: results
    params: {}
- name: geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params: {}
- name: geocode
  endpoint:
    path: /json
    method: GET
    data_selector: results
    params: {}
- name: geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
- name: reverse_geocode
  endpoint:
    path: /json
    method: GET
    data_selector: results
    params: {}
- name: NUTS Codes
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params:
      q: coordinates
      pretty: '1'
- name: timezone
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params: {}
- name: geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params: {}
- name: county
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params:
      q: address
- name: unlocode_lookup
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params:
      q: LOCODE:DEBRV
- name: un_locode
  endpoint:
    path: /geocode/v1
    method: GET
    data_selector: results
    params:
      q: LOCODE:DEBRV
- name: geocoding
  endpoint:
    path: /geocode/v1
    method: GET
    data_selector: results
    params:
      key: YOUR_API_KEY
      q: ''
- name: geocode
  endpoint:
    path: /json
    method: GET
    data_selector: results
    params:
      key: YOUR-API-KEY
- name: geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params: {}
- name: reverse_geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params: {}
- name: geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params: {}
- name: geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params: {}
- name: geocoding
  endpoint:
    path: /api
    method: GET
    data_selector: results
    params:
      key: YOUR-API-KEY
- name: geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params: {}
- name: forward_geocoding
  endpoint:
    path: /geocode/v1
    method: GET
    data_selector: results
    params:
      location: Псковская улица, Санкт-Петербург, Россия
      language: ru
      countrycode: ru
- name: reverse_geocoding
  endpoint:
    path: /geocode/v1
    method: GET
    data_selector: results
    params:
      lat: -22.6792
      lng: 14.5272
- name: forward_geocoding
  endpoint:
    path: /geocode/v1
    method: GET
    data_selector: results
- name: reverse_geocoding
  endpoint:
    path: /geocode/v1/reverse
    method: GET
    data_selector: results
- name: geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params: {}
- name: reverse_geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params: {}
- name: geocoding
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params:
      api_key: --api-key
      input: --input
      output: --output
- name: geocoding
  endpoint:
    path: /geocode/v1/json
    method: GET
- name: geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params:
      key: YOUR-API-KEY
- name: geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params:
      key: YOUR-API-KEY
- name: geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params:
      key: YOUR-API-KEY
      limit: 1
- name: geocoding
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params:
      key: YOUR-API-KEY
      q: '{{query_column}}'
- name: geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params: {}
- name: reverse_geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params: {}
- name: geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
    params:
      limit: '10'
      proximity: 51.52255,-0.10249
- name: geocoder
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
- name: coordinates
  endpoint:
    path: /public/address-lists/v1/coordinates
    method: GET
    data_selector: coordinates
    params: {}
- name: addresses
  endpoint:
    path: /public/address-lists/v1/addresses
    method: GET
    data_selector: addresses
    params: {}
- name: postal_codes
  endpoint:
    path: /public/address-lists/v1/eu_postcodes
    method: GET
    data_selector: postal_codes
    params: {}
- name: cities
  endpoint:
    path: /public/address-lists/v1/cities
    method: GET
    data_selector: cities
    params: {}
- name: shops
  endpoint:
    path: /public/address-lists/v1/pois
    method: GET
    data_selector: shops
    params: {}
- name: geocode_forward
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
- name: geocode_reverse
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
- name: geocode
  endpoint:
    path: /geocode/v1/json
    method: GET
    data_selector: results
- name: reverse_geocode
  endpoint:
    path: /geocode/reverse
    method: GET
    data_selector: results
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
notes:
- Rate limit is 10000 requests per day
- Results are ordered from most relevant to least.
- Results are NOT ordered by confidence score.
- Annotations can be turned off by setting the optional `no_annotations` parameter.
- The API does NOT return a unique permanent identifier for each result.
- We provide the optional no_record parameter. When this parameter is set we keep
  no record of your query.
- Use one of the many SDKs that already exist for accessing our API.
- Support for the google-v3-json format may be discontinued in the future as it is
  not used much.
- API key is required for accessing the service.
- 2,500 geocoding API requests/day - No credit card required
- The API supports additional optional parameters.
- Free trial accounts can geocode spreadsheets of up to 100 rows.
- Subscription customers can geocode spreadsheets up to 10,000 rows.
- One-time customers can geocode spreadsheets up to the number of requests they have
  remaining or 10,000 rows.
- OpenCage pricing assumes a monthly subscription (which can be cancelled anytime),
  but is even more affordable via an annual subscription.
- Unexpected surges will result in additional costs with Google, but do not with OpenCage.
- Geosearch is a tool to let users select a location to fill in a form or change the
  location of a map.
- You will need to become a customer to get a geosearch key
- Free trial - free while testing, 2,500 requests/day, no credit card required
- API key will allow 2,500 geocoding API requests per day while testing.
- OpenCage is an EU-based (German) business, and thus fully bound by GDPR.
- Please make all your requests via https.
- Our geocoding API is authenticated via an API key set as the value of the key parameter
  of the HTTP GET request.
- Free trial is limited to 2,500 requests per day.
- Easy, affordable, worldwide geocoding and geosearch using open data.
- 'Create a .env file with: OPENCAGE_API_KEY=YOUR-API-KEY'
- Rate limiting applies based on your plan.
- Requires an API key for usage.
- Requires an API key for authentication.
- Requires an OpenCage geocoding API key.
- This is a tutorial for using the OpenCage geocoding API in Ruby.
- Requires API key for access.
- Geocoding API key required for access.
- The API key is required for all requests.
- Requires a valid API key for access.
- Ensure queries are at least two characters long.
- Do not send undefined values or placeholders.
- API requests can be made without a credit card.
- The geocoding API allows for 2,500 requests per day for free.
- Customers have the option to use industry standard SSL encryption (HTTPS) when using
  our API.
- Unencrypted transfer via standard HTTP is discouraged for all customers.
- Uses API key for authentication
- The way addresses are formatted varies from country to country.
- Treat postcodes as strings not numbers.
- API does not provide permanent location identifiers.
- Do not use a proxy or VPN
- Requesting in parallel rather than in series is recommended
- Reduce geocoding costs by using OpenCage as your first pass geocoder
- Some services have severe restrictions on how long you can store data returned by
  their API.
- You can restrict results to only certain countries or a specific region using the
  countrycode or bounds parameters.
- Files can be at most 10 MB.
- You are free to display results on any mapping software you like.
- API does not return country values for locations that belong to no country.
- Currently we return NUTS codes only for EU member states, EFTA countries, and some
  EU candidate countries.
- 'We return five different bits of information about the time zone: name, now_in_dst,
  offset_sec, offset_string, short_name'
- Time zones can and do change, sometimes with very little notice.
- Returns various ISO codes for the location if possible.
- Returns the county name and FIPS code for the location.
- UN/LOCODEs data quality is variable.
- Some codes do not have coordinates at all in the official data.
- UN/LOCODEs data quality is variable. Some codes do not have coordinates.
- Searching for specific UN/LOCODEs is available to all API users.
- Uses API key supplied in the key= parameter.
- Supports JSON, XML, and GeoJSON output formats.
- API requires an API key, supplied in the key parameter.
- Free trial and one-time plan are limited to one key at a time, subscription customers
  can have multiple keys.
- Usage statistics are tied to your account, not to a specific API key.
- Please do NOT put your API key in a public repository on GitHub
- Subscription customers can add IP address restriction to their API keys.
- Your library should NOT make a request unless you have a valid API key.
- Please do not store a key in the library, we recommend setting it via an environment
  variable.
- Geosearch makes location searches easier by connecting the dots between what you
  search and what you want to find.
- Geosearch can draw connections within a user's search to pull the results closest
  to what they intended.
- Geosearch tools must account for user expectations around usability, accessibility,
  and multilingual support.
- Account for technical issues such as too many results, typos, and abbreviations.
- Browser geolocation requires user consent.
- Geocoding accuracy depends on the technology used for obtaining coordinates.
- IP geolocation is subject to accuracy limitations.
- Putting your API key in client side javascript means that it is visible to anyone
  executing that javascript.
- Subscription customers can define a value for the Access-Control-Allow-Origin header
  in their account dashboard which will limit AJAX requests to a specific domain.
- Stata does not do well with parsing API responses that contain place names with
  apostrophes in the place name.
- In older versions of this software there is an optional parameter 'paidkey' which
  needs to be set if you are an OpenCage customer.
- API is not designed for high volume production use.
- This Google sheets plugin is designed as a way to quickly test our service or to
  do a small (< 1,000) volume of geocoding. It is not designed for high volume production
  use.
- The API is accessed via an HTTP GET request with a few parameters.
- There is no need to set any headers or cookies.
- You can create an API key by signing up for an account
- Authentication via the key parameter.
- Set the value of geocoder.language to the two-letter language code of the language
  you want results to appear in - en for English.
- This configuration is only available in versions of Traccar released after March
  of 2022.
- Data is under permissive licenses.
- Response varies based on region.
- We allow non-https access, CORS
errors:
- '400: Invalid request'
- '401: Unable to authenticate - missing, invalid, or unknown API key'
- '402: Valid request but quota exceeded'
- '403: Forbidden'
- '404: Invalid API endpoint'
- '405: Method not allowed'
- '429: Too many requests'
- '401 Unauthorized: Invalid API key'
- '403 Forbidden: API key not allowed for this endpoint'
- '429 Too Many Requests: Rate limit exceeded'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Check the API key.'
- '429 Too Many Requests: Rate limit exceeded.'
- '200: No results found for the query.'
- 403 - IP address rejected
- '403 Forbidden: Check API key validity'
- '404 Not Found: Verify the endpoint path'
- '400 Bad Request: Check request parameters'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '400: "Invalid request (bad request; a required parameter is missing)!"'
- '401: "Invalid or missing API key!"'
- '402: "Valid request but quota exceeded (payment required)!"'
- '403: "Forbidden. API key blocked"'
- '402: hit free trial daily limit'
- 'InvalidInputError: Check the input parameters.'
- 'RateLimitExceededError: Reduce the number of requests.'
- 'RateLimitExceededError: You have used the requests available on your plan.'
- 'InvalidInputError: This happens for example with invalid unicode in the input data.'
- 400 - missing or bad query
- 400 - query too long
- 'INVALID_REQUEST: Check the parameters passed in the request'
- 'OVER_QUERY_LIMIT: Too many requests in a given time frame'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key or token expiration'
- '403 Forbidden: API key is disabled'
- '401 Unauthorized: Recheck API key validity'
- 'unable to geocode! Response code: 401'
- unable to connect to server
- 'INVALID_REQUEST: Check your parameters or API key'
- '404 Not Found: The requested UN/LOCODE does not exist.'
- '400 Bad Request: The request was invalid.'
- '401 Unauthorized: Check your API key.'
- '402: Your request was not processed due to insufficient funds.'
- '403: Access denied. Check your API key and permissions.'
- 'INVALID_API_KEY: Check your API key.'
- 'REQUEST_LIMIT_EXCEEDED: Reduce the number of requests.'
- '401 Unauthorized: Invalid API key.'
- '422 Unprocessable Entity: Invalid request parameters.'
- '401: invalid API key'
- '200: Success'
- '500: Server error'
- 'Status codes: Various error messages based on the API response.'
- 'REQUEST_LIMIT_EXCEEDED: You have exceeded the daily limit of requests.'
- 'INVALID_REQUEST: Check the parameters provided.'
- '401 Unauthorized: Check API key'
- 'REQUEST_LIMIT_EXCEEDED: Exceeded the limit of API requests.'
- 'INVALID_REQUEST: Check the request parameters.'
- '400: Query was probably empty, missing or contained invalid coordinates'
- '402: Out of quota'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.opencagedata.com
  headers:
    Accept: application/json
source_metadata: null
