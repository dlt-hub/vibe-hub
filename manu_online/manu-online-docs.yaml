resources:
- name: accounts
  endpoint:
    path: /Accounts
    method: GET
    data_selector: records
    params:
      pageSize: '100'
      pageIndex: '0'
- name: tax_codes
  endpoint:
    path: /TaxCodes
    method: GET
    data_selector: records
    params:
      pageSize: '100'
      pageIndex: '0'
- name: accounts
  endpoint:
    path: /Accounts
    method: GET
    data_selector: records
    params:
      pageIndex: '0'
      pageSize: '100'
- name: tax_codes
  endpoint:
    path: /TaxCodes
    method: GET
    data_selector: records
    params:
      pageIndex: '0'
      pageSize: '100'
- name: delivery_methods
  endpoint:
    path: /v2/Admin/DeliveryMethods
    method: POST
    data_selector: DeliveryMethod
    params: {}
- name: agreement_search
  endpoint:
    path: /v2/Agreement/Search
    method: GET
    data_selector: Result
    params: {}
- name: agreement_get
  endpoint:
    path: /v2/Agreement/{id}
    method: GET
    data_selector: Result
    params: {}
- name: delivery_methods
  endpoint:
    path: /v2/Admin/DeliveryMethods
    method: POST
    data_selector: DeliveryMethod
    params: {}
- name: APILog
  endpoint:
    path: /v2/APILog
    method: GET
    data_selector: Result
- name: Mapping
  endpoint:
    path: /v2/Mapping
    method: POST
    data_selector: Result
- name: Agreement
  endpoint:
    path: /v2/Agreement
    method: GET
    data_selector: AgreementMessage
- name: Agreement
  endpoint:
    path: /v2/Agreement
    method: GET
    data_selector: AgreementMessage
    params: {}
- name: APILog
  endpoint:
    path: /v2/APILog
    method: GET
    data_selector: APILog
    params: {}
- name: direct_sales
  endpoint:
    path: /DirectSales
    method: GET
    data_selector: Result
    params:
      pageIndex: 0
      pageSize: 100
- name: direct_sales_payment_type
  endpoint:
    path: /DirectSalesPaymentType
    method: GET
    data_selector: Result
    params:
      pageIndex: 0
      pageSize: 100
- name: direct_sales_register
  endpoint:
    path: /DirectSalesRegister
    method: GET
    data_selector: Result
    params:
      pageIndex: 0
      pageSize: 100
- name: DirectSales
  endpoint:
    path: /DirectSales
    method: GET
    data_selector: Result
    params:
      pageIndex: 0
      pageSize: 100
- name: DirectSalesPaymentType
  endpoint:
    path: /DirectSalesPaymentType
    method: GET
    data_selector: Result
    params:
      pageIndex: 0
      pageSize: 100
- name: DirectSalesRegister
  endpoint:
    path: /DirectSalesRegister
    method: GET
    data_selector: Result
    params:
      pageIndex: 0
      pageSize: 100
- name: direct_sales_register
  endpoint:
    path: /v2/DirectSalesRegister
    method: POST
    data_selector: Result
- name: purchase_order_receipt
  endpoint:
    path: /v2/Fulfilment/PurchaseOrderReceipt
    method: POST
    data_selector: Result
- name: sales_dispatch
  endpoint:
    path: /v2/Fulfilment/SalesDispatch
    method: POST
    data_selector: Result
- name: direct_sales_register
  endpoint:
    path: /v2/DirectSalesRegister
    method: POST
    data_selector: Result
    params: {}
- name: fulfilment
  endpoint:
    path: /v2/Fulfilment/PurchaseOrderReceipt
    method: POST
    data_selector: Result
    params: {}
- name: SalesDispatch
  endpoint:
    path: /v2/Fulfilment/OrderFill
    method: POST
    data_selector: Result
    params: {}
- name: SalesDispatch
  endpoint:
    path: /v2/Fulfilment/OrderFill
    method: POST
    data_selector: Result
    params: {}
- name: product_return
  endpoint:
    path: /v2/Fulfilment/ProductReturn
    method: POST
    data_selector: Result
- name: direct_sales
  endpoint:
    path: /v2/Fulfilment/DirectSales
    method: POST
    data_selector: Result
- name: ProductReturn
  endpoint:
    path: /v2/Fulfilment/ProductReturn
    method: POST
- name: DirectSales
  endpoint:
    path: /v2/Fulfilment/DirectSales
    method: POST
- name: DirectSales
  endpoint:
    path: /v2/Fulfilment/ServiceWorkOrder
    method: POST
    data_selector: Result
    params: {}
- name: service_work_order
  endpoint:
    path: /v2/Fulfilment/StockTransfer
    method: POST
    data_selector: Result
- name: stock_adjust
  endpoint:
    path: /v2/Fulfilment/StockAdjust
    method: POST
    data_selector: Result
- name: DirectSales
  endpoint:
    path: /v2/DirectSales
    method: POST
    data_selector: DirectSales
    params: {}
- name: ServiceWorkOrder
  endpoint:
    path: /v2/Fulfilment/ServiceWorkOrder
    method: POST
    data_selector: ServiceWorkOrder
    params: {}
- name: item_search
  endpoint:
    path: /Item/Search
    method: GET
    data_selector: Result
    params:
      pageIndex: 0
      pageSize: 100
- name: item_get_by_id
  endpoint:
    path: /Item/{id}
    method: GET
    data_selector: Result
    params: {}
- name: stock_transfer
  endpoint:
    path: /v2/Fulfilment/StockTransfer
    method: POST
    data_selector: Result
- name: stock_adjust
  endpoint:
    path: /v2/Fulfilment/StockAdjust
    method: POST
    data_selector: Result
- name: item
  endpoint:
    path: /v2/Item
    method: GET
    data_selector: Result
    params:
      pageIndex: '0'
      pageSize: '100'
- name: Item_Search
  endpoint:
    path: /v2/Item/Search
    method: GET
    data_selector: Result
    params:
      PageIndex: 0
      PageSize: 100
- name: Item_GetById
  endpoint:
    path: /v2/Item/{id}
    method: GET
    data_selector: Result
    params: {}
- name: item
  endpoint:
    path: /v2/Item
    method: POST
    data_selector: Result
    params: {}
- name: item
  endpoint:
    path: /v2/Item
    method: GET
    data_selector: Result
    params: {}
- name: Item
  endpoint:
    path: /v2/Item
    method: POST
    data_selector: Result
- name: item
  endpoint:
    path: /api/items
    method: GET
    data_selector: items
- name: ItemHeader
  endpoint:
    path: /ItemHeader
    method: GET
    data_selector: ItemHeader
    params: {}
- name: ItemHeader
  endpoint:
    path: /api/itemheader
    method: GET
    data_selector: id
    params: {}
- name: ItemDesc
  endpoint:
    path: /api/itemdesc
    method: GET
    data_selector: Descriptions
    params: {}
- name: ItemMaterialProperties
  endpoint:
    path: /api/itemmaterialproperties
    method: GET
    data_selector: MaterialProperties
    params: {}
- name: ItemSubcontractJobProperties
  endpoint:
    path: /api/itemsubcontractjobproperties
    method: GET
    data_selector: SubcontractJobProperties
    params: {}
- name: ItemMachineTimeProperties
  endpoint:
    path: /api/itemmachinetimeproperties
    method: GET
    data_selector: MachineTimeProperties
    params: {}
- name: ItemWorkTimeProperties
  endpoint:
    path: /api/itemworktimeproperties
    method: GET
    data_selector: WorkTimeProperties
    params: {}
- name: ItemOtherCostItemProperties
  endpoint:
    path: /api/itemothercostitemproperties
    method: GET
    data_selector: OtherCostItemProperties
    params: {}
- name: ItemCustomProperties
  endpoint:
    path: /api/itemcustomproperties
    method: GET
    data_selector: CustomProperties
    params: {}
- name: ItemManufacturer
  endpoint:
    path: /api/itemmanufacturer
    method: GET
    data_selector: ItemManufacturers
    params: {}
- name: ItemHeader
  endpoint:
    path: /ManuOnline/ApiModels/Item_Product/ItemHeader
    method: GET
    data_selector: ItemHeader
    params: {}
- name: product_structure
  endpoint:
    path: /v2/ProductStructure
    method: POST
    data_selector: records
- name: ProductStructure
  endpoint:
    path: /v2/ProductStructure
    method: POST
    data_selector: string
- name: ProductStructure
  endpoint:
    path: /v2/ProductStructure
    method: POST
    data_selector: ProductID
    params: {}
- name: ManufactureTemplateTest
  endpoint:
    path: /v2/ManufactureTemplate/Tests
    method: POST
    data_selector: ProductID
    params: {}
- name: ProductStructure
  endpoint:
    path: /v2/ManufactureTemplate/Tests
    method: POST
    data_selector: ProductID
    params: {}
- name: Me
  endpoint:
    path: /v2/Me
    method: GET
    data_selector: UserInfo
- name: Partner
  endpoint:
    path: /v2/Partner/{id}
    method: GET
    data_selector: Partner
- name: Me
  endpoint:
    path: /v2/Me
    method: GET
    data_selector: UserInfo
    params: {}
- name: Partner
  endpoint:
    path: /v2/Partner/{id}
    method: GET
    data_selector: Partner
    params: {}
- name: Partner_GetByEmail
  endpoint:
    path: /v2/Partner/GetByEmail
    method: GET
    data_selector: Result
- name: Partner_GetStockLocations
  endpoint:
    path: /v2/Partner/GetStockLocations
    method: GET
    data_selector: Result
- name: get_by_email
  endpoint:
    path: /v2/Partner/GetByEmail
    method: GET
    data_selector: Result
- name: get_stock_locations
  endpoint:
    path: /v2/Partner/GetStockLocations
    method: GET
    data_selector: Result
- name: partner
  endpoint:
    path: /v2/Partner
    method: GET
    data_selector: Result
    params:
      pageIndex: integer
      pageSize: integer
      orderBy: string
      orderType: string
- name: partner
  endpoint:
    path: /Partner
    method: GET
    data_selector: Result
    params:
      pageIndex: 0
      pageSize: 100
- name: partner
  endpoint:
    path: /v2/Partner
    method: POST
    data_selector: Result
- name: partner
  endpoint:
    path: /api/partner
    method: GET
    data_selector: records
- name: partner
  endpoint:
    path: /v2/Partner
    method: POST
    data_selector: Result
    params: {}
- name: partner_contact
  endpoint:
    path: /partner/contact
    method: POST
    data_selector: Partner_Contact
    params: {}
- name: partner_contact
  endpoint:
    path: /api/partner/contact
    method: GET
    data_selector: records
- name: pickList
  endpoint:
    path: /v2/PickList
    method: GET
    data_selector: Result
    params:
      pageIndex: ''
      pageSize: ''
- name: pickListById
  endpoint:
    path: /v2/PickList/{id}
    method: GET
    data_selector: Result
    params:
      id: ''
- name: partner_contact
  endpoint:
    path: /api/partner/contact
    method: POST
    data_selector: Partner_Contact
    params: {}
- name: pick_list
  endpoint:
    path: /v2/PickList
    method: GET
    data_selector: Result
    params:
      pageIndex: '0'
      pageSize: '100'
- name: pick_list_by_id
  endpoint:
    path: /v2/PickList/{id}
    method: GET
    data_selector: Result
    params: {}
- name: price_list_detail
  endpoint:
    path: /v2/PriceList/Detail
    method: GET
    data_selector: Result
    params:
      filter: ''
      pageIndex: ''
      pageSize: ''
      orderBy: ''
      orderType: ''
- name: PriceList
  endpoint:
    path: /api/PriceList
    method: GET
    data_selector: Result
    params:
      pageIndex: query
      pageSize: query
      orderBy: query
      orderType: query
- name: ProductionPlanner
  endpoint:
    path: /v2/ProductionPlanner/
    method: GET
    data_selector: Result
    params:
      filter: query
      pageIndex: query
      pageSize: query
      orderBy: query
      orderType: query
- name: ProductionWorkOrder
  endpoint:
    path: /v2/ProductionWorkOrder/Search
    method: GET
    data_selector: Result
    params:
      ProductId: query
      WorkOrderNbr: query
      Status: query
      LastModifiedDateAfter: query
      FinishDateAfter: query
- name: Projects
  endpoint:
    path: /v2/Projects
    method: GET
    data_selector: Result
    params:
      filter: query
      pageIndex: query
      pageSize: query
      orderBy: query
      orderType: query
- name: PriceList
  endpoint:
    path: /v2/PriceList
    method: GET
    data_selector: Result
    params:
      pageIndex: pageIndex
      pageSize: pageSize
      orderBy: orderBy
      orderType: orderType
- name: PurchaseInvoice
  endpoint:
    path: /v2/PurchaseInvoice/Search
    method: GET
    data_selector: Result
    params:
      pageIndex: 0
      pageSize: 100
- name: PurchaseInvoiceById
  endpoint:
    path: /v2/PurchaseInvoice/{id}
    method: GET
    data_selector: Result
    params: {}
- name: purchase_invoice
  endpoint:
    path: /v2/PurchaseInvoice
    method: GET
    data_selector: Result
    params:
      pageIndex: '0'
      pageSize: '100'
- name: PurchaseInvoice
  endpoint:
    path: /v2/PurchaseInvoice/Search
    method: GET
    data_selector: Result
    params:
      PageIndex: 0
      PageSize: 100
- name: PurchaseInvoiceById
  endpoint:
    path: /v2/PurchaseInvoice/{id}
    method: GET
    data_selector: Result
    params: {}
- name: PurchaseOrder
  endpoint:
    path: /api/PurchaseOrder/{id}
    method: GET
    data_selector: Result
- name: PurchaseInvoice
  endpoint:
    path: /v2/PurchaseInvoice
    method: GET
    data_selector: Result
    params:
      pageIndex: '0'
      pageSize: '100'
- name: PurchaseOrder
  endpoint:
    path: /v2/PurchaseOrder/Search/{key}
    method: GET
    data_selector: Result
    params: {}
- name: PurchaseOrder
  endpoint:
    path: /api/PurchaseOrder/{id}
    method: GET
    data_selector: Result
    params: {}
- name: PurchaseOrder
  endpoint:
    path: /v2/PurchaseOrder
    method: GET
    data_selector: Result
    params: {}
- name: DeletePlannedPurchaseOrder
  endpoint:
    path: /v2/PurchaseOrder/DeletePlanned
    method: POST
    data_selector: Result
    params: {}
- name: PurchaseOrder
  endpoint:
    path: /v2/PurchaseOrder
    method: GET
    data_selector: Result
    params:
      pageSize: '100'
- name: DeletePlanned
  endpoint:
    path: /v2/PurchaseOrder/DeletePlanned
    method: POST
    data_selector: Result
    params: {}
- name: PurchaseOrder
  endpoint:
    path: /v2/PurchaseOrder
    method: POST
- name: PurchaseOrder
  endpoint:
    path: /v2/PurchaseOrder
    method: POST
    data_selector: Result
- name: purchase_order
  endpoint:
    path: /api/purchase_orders
    method: GET
    data_selector: records
- name: PurchaseOrder
  endpoint:
    path: /api/purchaseorders
    method: GET
    data_selector: PurchaseOrder
    params: {}
- name: PurchaseOrderReceipt
  endpoint:
    path: /v2/PurchaseOrderReceipt
    method: GET
    data_selector: Result
    params:
      pageSize: 50
- name: ItemStockValue
  endpoint:
    path: /v2/Reports/ItemStockValue
    method: GET
    data_selector: Result
    params:
      pageSize: 100
- name: StockTurnoverAnalysis
  endpoint:
    path: /v2/Reports/StockTurnoverAnalysis
    method: GET
    data_selector: Result
    params:
      pageSize: 100
- name: OpenWorkOrdersValue
  endpoint:
    path: /v2/Reports/OpenWorkOrdersValue
    method: GET
    data_selector: Result
    params: {}
- name: PurchaseOrderReceipt
  endpoint:
    path: /v2/PurchaseOrderReceipt
    method: GET
    data_selector: Result
    params:
      PageSize: 50
- name: ItemStockValue
  endpoint:
    path: /v2/Reports/ItemStockValue
    method: GET
    data_selector: Result
    params:
      PageSize: 100
- name: StockTurnoverAnalysis
  endpoint:
    path: /v2/Reports/StockTurnoverAnalysis
    method: GET
    data_selector: Result
    params:
      PageSize: 100
- name: OpenWorkOrdersValue
  endpoint:
    path: /v2/Reports/OpenWorkOrdersValue
    method: GET
    data_selector: Result
- name: SalesDispatch
  endpoint:
    path: /v2/SalesDispatch/Search
    method: GET
    params:
      PageIndex: '0'
      PageSize: '100'
- name: SalesDispatch
  endpoint:
    path: /v2/SalesDispatch/Search
    method: GET
    data_selector: Result
    params:
      PageIndex: 0
      PageSize: 100
- name: SalesInvoice
  endpoint:
    path: /v2/SalesInvoice/Search
    method: GET
    data_selector: Result
    params:
      PageIndex: '0'
      PageSize: '100'
- name: SalesDispatch_Complete
  endpoint:
    path: /v2/SalesDispatch/Complete
    method: POST
- name: SalesInvoice_Search
  endpoint:
    path: /v2/SalesInvoice/Search
    method: GET
- name: sales_invoice
  endpoint:
    path: /SalesInvoice
    method: GET
    data_selector: Result
    params:
      pageIndex: '0'
      pageSize: '10'
- name: sales_invoice_by_id
  endpoint:
    path: /SalesInvoice/{id}
    method: GET
    data_selector: Result
    params: {}
- name: sales_invoice
  endpoint:
    path: /SalesInvoice
    method: GET
    data_selector: Result
    params:
      pageIndex: '0'
      pageSize: '100'
- name: sales_invoice_by_id
  endpoint:
    path: /SalesInvoice/{id}
    method: GET
    data_selector: Result
    params: {}
- name: sales_invoice
  endpoint:
    path: /v2/SalesInvoice
    method: GET
    data_selector: Result
    params:
      pageIndex: 0
      pageSize: 100
- name: update_status
  endpoint:
    path: /v2/SalesInvoice/UpdateStatusToTransferred
    method: POST
    data_selector: Result
    params: {}
- name: sales_invoice
  endpoint:
    path: /v2/SalesInvoice
    method: GET
    data_selector: Result
    params: {}
- name: update_status_to_transferred
  endpoint:
    path: /v2/SalesInvoice/UpdateStatusToTransferred
    method: POST
    data_selector: Result
    params:
      invoiceNbr: ''
- name: SalesOrder
  endpoint:
    path: /Search
    method: GET
    data_selector: Result
    params: {}
- name: sales_order
  endpoint:
    path: /v2/SalesOrder/Search
    method: GET
    data_selector: Result
    params:
      pageIndex: 0
      pageSize: 100
- name: SalesOrder
  endpoint:
    path: /v2/SalesOrder/{id}
    method: GET
    data_selector: Result
    params: {}
- name: SalesOrder
  endpoint:
    path: /SalesOrder
    method: GET
    data_selector: SalesOrders
- name: SalesOrder
  endpoint:
    path: /SalesOrder
    method: GET
    data_selector: Result
    params: {}
- name: SalesOrderById
  endpoint:
    path: /SalesOrder/{id}
    method: GET
    data_selector: Result
    params: {}
- name: SalesOrderLinePromiseDate
  endpoint:
    path: /LinePromiseDate
    method: GET
    data_selector: Result
    params:
      id: ''
      lineNbr: ''
      modifedAfter: ''
      pageIndex: ''
      pageSize: ''
- name: UpdateLinePromiseDate
  endpoint:
    path: /LinePromiseDate
    method: POST
    data_selector: ''
    params: {}
- name: SalesOrder
  endpoint:
    path: /SalesOrder
    method: GET
    data_selector: SalesOrders
- name: SalesOrder
  endpoint:
    path: /v2/SalesOrder
    method: GET
- name: SalesOrderDeliveryMethod
  endpoint:
    path: /v2/SalesOrder/DeliveryMethod
    method: POST
- name: sales_order
  endpoint:
    path: /v2/SalesOrder
    method: POST
    data_selector: Result
    params: {}
- name: sales_order
  endpoint:
    path: /salesorder
    method: GET
    data_selector: records
- name: LinePromiseDate
  endpoint:
    path: /v2/SalesOrder/LinePromiseDate
    method: GET
    data_selector: Result
    params:
      id: Sales Order Id
      lineNbr: Sales Order Line Nbr
      modifedAfter: Modifed After
      pageIndex: ''
      pageSize: ''
- name: UpdateLinePromiseDate
  endpoint:
    path: /v2/SalesOrder/LinePromiseDate
    method: POST
    data_selector: ''
    params: {}
- name: sales_order
  endpoint:
    path: /v2/SalesOrder
    method: GET
    data_selector: Result
    params:
      pageSize: 100
- name: delivery_method
  endpoint:
    path: /v2/SalesOrder/DeliveryMethod
    method: POST
    data_selector: SalesOrderDeliveryMethod
- name: sales_order
  endpoint:
    path: /salesorder
    method: GET
    data_selector: SalesOrder
    params: {}
- name: SalesQuote
  endpoint:
    path: /v2/SalesQuote/Search
    method: GET
    data_selector: Result
    params:
      PageSize: 100
- name: sales_order
  endpoint:
    path: /v2/SalesOrder
    method: POST
    data_selector: Result
    params: {}
- name: sales_order
  endpoint:
    path: /api/sales_order
    method: GET
    data_selector: records
- name: sales_quote
  endpoint:
    path: /v2/SalesQuote/{id}
    method: GET
    data_selector: Result
- name: sales_quote
  endpoint:
    path: /sales_quote_endpoint
    method: GET
    data_selector: SalesQuotes
    params: {}
- name: SalesOrder
  endpoint:
    path: /SalesOrder
    method: GET
    data_selector: SalesOrder
    params: {}
- name: SalesQuote
  endpoint:
    path: /v2/SalesQuote
    method: GET
    data_selector: Result
    params:
      id: Sales quote Id
- name: SalesQuote
  endpoint:
    path: /v2/SalesQuote/Search
    method: GET
    data_selector: Result
    params:
      PageSize: 100
- name: sales_quote
  endpoint:
    path: /api/SalesQuote/{id}
    method: GET
    data_selector: Result
- name: SalesQuote
  endpoint:
    path: /v2/SalesQuote
    method: POST
    data_selector: SalesQuoteID
    params: {}
- name: sales_quote
  endpoint:
    path: /services/data/vXX.X/sobjects/SalesQuote
    method: GET
    data_selector: records
- name: SalesQuote
  endpoint:
    path: /SalesQuote
    method: GET
    data_selector: SalesQuote
    params: {}
- name: SalesQuote
  endpoint:
    path: /v2/SalesQuote
    method: GET
    data_selector: Result
    params:
      id: ''
- name: SalesQuote
  endpoint:
    path: /salesquote
    method: POST
    data_selector: SalesQuoteUpload
    params: {}
- name: sales_quote
  endpoint:
    path: /v2/SalesQuote
    method: POST
    data_selector: SalesQuote
    params: {}
- name: sales_quote
  endpoint:
    path: /sales_quote
    method: GET
    data_selector: records
    params: {}
- name: service_work_order_search
  endpoint:
    path: /v2/ServiceWorkOrder/Search
    method: GET
    data_selector: Result
    params: {}
- name: service_work_order_get
  endpoint:
    path: /v2/ServiceWorkOrder
    method: GET
    data_selector: Result
    params: {}
- name: stock_available
  endpoint:
    path: /v2/Stock/Availablestock
    method: GET
    data_selector: Result
    params: {}
- name: stock_search
  endpoint:
    path: /v2/Stock/Availablestock/Search
    method: GET
    data_selector: Result
    params: {}
- name: SalesQuote
  endpoint:
    path: /services/data/vXX.X/sobjects/SalesQuote
    method: POST
    data_selector: SalesQuoteUpload
    params: {}
- name: available_stock
  endpoint:
    path: /Availablestock
    method: GET
    data_selector: Result
    params:
      pageIndex: 0
      pageSize: 100
- name: available_stock_search
  endpoint:
    path: /Availablestock/Search
    method: GET
    data_selector: Result
    params: {}
- name: StockLocation
  endpoint:
    path: /StockLocation/Search
    method: GET
    data_selector: Result
    params:
      pageIndex: 0
      pageSize: 100
- name: InventoryTransaction
  endpoint:
    path: /Stock/InventoryTransaction/Search
    method: GET
    data_selector: Result
    params:
      pageIndex: 0
      pageSize: 100
- name: TimeClock
  endpoint:
    path: /TimeClock
    method: GET
    data_selector: Result
    params:
      pageIndex: 0
      pageSize: 100
- name: SerialNumberStatus
  endpoint:
    path: /Traceability/SerialNumberStatus
    method: GET
    data_selector: Result
    params: {}
- name: StockLocation
  endpoint:
    path: /v2/StockLocation/Search
    method: GET
    data_selector: Result
    params:
      pageIndex: 0
      pageSize: 100
- name: TimeClock
  endpoint:
    path: /v2/TimeClock
    method: GET
    data_selector: Result
    params:
      pageIndex: 0
      pageSize: 100
- name: Traceability
  endpoint:
    path: /v2/Traceability/SerialNumberStatus
    method: GET
    data_selector: Result
    params: {}
- name: LotRequests
  endpoint:
    path: /v2/Traceability/LotRequests/Search
    method: GET
    data_selector: Result
    params:
      pageIndex: '0'
      pageSize: '100'
- name: BayTransferLog
  endpoint:
    path: /v2/Traceability/BayTransferLog
    method: GET
    data_selector: Result
    params:
      pageIndex: '0'
      pageSize: '100'
- name: UserSearch
  endpoint:
    path: /v2/User/Search
    method: GET
    data_selector: Result
    params:
      pageIndex: '0'
      pageSize: '100'
- name: Webhook
  endpoint:
    path: /v2/WebHook
    method: POST
    data_selector: WebhookInfo
- name: LotRequests
  endpoint:
    path: /v2/Traceability/LotRequests/Search
    method: GET
    data_selector: Result
    params:
      modifiedAfter: date-time
      pageIndex: integer
      pageSize: integer
- name: BayTransferLog
  endpoint:
    path: /v2/Traceability/BayTransferLog
    method: GET
    data_selector: Result
    params:
      pageIndex: integer
      pageSize: integer
- name: UserSearch
  endpoint:
    path: /v2/User/Search
    method: GET
    data_selector: Result
    params:
      pageIndex: integer
      pageSize: integer
- name: WorkCellStatus
  endpoint:
    path: /v2/WorkCellStatus
    method: GET
    data_selector: Result
    params:
      filter: ''
      pageIndex: ''
      pageSize: ''
      orderBy: ''
      orderType: ''
- name: WebhookInfo
  endpoint:
    path: /v2/WorkCellStatus
    method: GET
    data_selector: Result
    params:
      pageIndex: 0
      pageSize: 10
notes:
- Response Content Type can be application/json, text/json, application/xml, text/xml.
- Posts one or more delivery methods. Adding additional blocks allows you to update
  more than one delivery method in a single call.
- Response Content Type can be application/json, text/json, application/xml, text/xml,
  or application/x-www-form-urlencoded.
- Create or update a direct sales register for instance as used in an external Point
  of Sale system.
- An individual register can be marked as allowing invoicing.
- Post a new pick list fill. This marks material items to an open work order picklist.
- Post a new pick list fill. This marks material items to an open work order picklist.
  The work order pick list extension needs to be licensed for this.
- Direct sales are used for over-the-counter sales or POS transactions.
- When entering a direct sale, it can be entered as either 'Under construction' or
  'Complete'.
- Response content type can be application/json, text/json, application/xml, or text/xml
- Default page size is 100.
- Post a new stock transfer.
- Post a new stock adjustment.
- Gets all items paginated by 100. To specify pagination, add 'pageIndex|pageSize'
  as Pager in the httpHeader.
- Please note that we have written redundant fields for compatibility with version
  1. Please do not use them, we will delete them in the following update.
- The key is the filters parameter that contains a list of filter criteria for the
  returned data.
- If the filter parameter cannot be parsed then it will return an error.
- Post a new item to Manu Online, or update an existing one. The different item types
  use different sets of properties.
- Post a new item to Manu Online, or update an existing one.
- 'Response Content Type: application/json, text/json, application/xml, text/xml'
- Create or update a product structure for an item.
- To create a new product for manufacturing, first create the item (POST /api/Item),
  then post the product structure.
- Uses application/json content type for requests and responses.
- Partners with negative id numbers are for the 'One-off delivery address' feature
  in sales orders, and they are not otherwise visible in the UI.
- Please note that following properties will be changed/removed on v2, do not use
  those v1 property anymore , and modify your current app to use v2 properties ASAP.
- Returns the first name, last name and email of the user currently granted access.
- Partners with negative id numbers are for the 'One-off delivery address' feature
  in sales orders.
- Gets all partners paginated by 100.
- Filters are separated by a semicolon and the filter name and its value is separated
  by an equals sign.
- Post a new Partner
- Post a new Partner requires specific properties to be set.
- Gets all picklists paginated by 100.
- Gets all picklists paginated by 100. To specify pagination, add 'pageIndex|pageSize'
  as 'Pager' in the httpHeader.
- Gets all PriceLists paginated by 100. To specify pagination, add 'pageIndex|pageSize'
  as 'Pager' in the httpHeader.
- The filter parameter contains a list of filter criteria for the returned data. Filters
  are separated by a semicolon and the filter name and its value is separated by an
  equals sign.
- Gets all Purchase invoices paginated by 100.
- Returns the latest version of a Purchase invoice and will not return earlier versions.
- Returns a single purchase order with data expanded using the purchase order number.
  Note that it will return the latest version of the purchase order and will not return
  an under construction purchase order.
- Gets all purchase orders paginated by 100.
- To specify pagination, add 'pageIndex|pageSize' as Pager in the httpHeader.
- Post a new purchase order to Manu Online. The purchase order will be entered into
  the system with a status of 'Under construction'.
- Response can be in JSON or XML format.
- Response Content Type includes application/json, text/json, application/xml, text/xml
- Returns related Sales dispatch based on DateAfter, Location and DispatchNbr.
- 'Request Methods: Get by filters'
- Returns the latest version of the sales invoice and will not return an under construction
  sales invoice.
- Returns the latest version of the sales invoice and does not return an under construction
  sales invoice.
- Gets all sales invoices paginated by 100. To specify pagination, add 'pageIndex|pageSize'
  as Pager in the httpHeader.
- Returns sales orders that meet the specified filter criteria.
- Under construction and earlier versions of sales orders can not be returned.
- Under construction and earlier versions of sales orders cannot be returned.
- Returns a single sales order with data expanded using the sales order number.
- Will return the latest version of the sales order and will not return an 'Under
  construction' sales order.
- Post a new sales order to Manu Online. The sales order will be entered into the
  system with a status of 'Under construction'.
- Updates the promise date on a sales order. If 'UpdateSchedule' is 'true' then the
  scheduling will also be updated.
- Uses OAuth2 for authentication
- Returns a single sales quote with data expanded using the sales quote number.
- Gets all sales quotes paginated by 100. To specify pagination, add 'pageIndex|pageSize'
  as Pager in the httpHeader.
- Returns sales quotes that meet the specified filter criteria.
- Returns a single sales quote with data expanded using the sales quote number. Note
  that it will return the latest version of the sales quote and will not return an
  'Under construction' sales quote.
- Post a new sales quote to Manu Online. The sales quote will be entered into the
  system with a status of 'Under construction'.
- Returns service work orders that meet the specified filter criteria.
- returns all stock info at the specified location id.
- Returns all stock info (material items) at the specified location id.
- The available stock (Qty) is the total amount of stock currently on hand.
- The key is the parameter that contains a list of filter criteria for the returned
  data. Filters are separated by a semicolon and the filter name and its value is
  separated by an equals sign.
- Response Content Type includes application/json and text/json
- Response Content Type can be application/json or text/json.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check request parameters and body content.'
- 'Invalid filter: Ensure filter is correctly formatted and all required parameters
  are included.'
- '400 Bad Request: Filter parameter cannot be parsed'
- '404 Not Found: Purchase invoice not found'
- '404 Not Found: Check the sales invoice number or ID.'
- '400 Bad Request: Ensure parameters are correctly formatted.'
- '400 Bad Request: Check filter parameters for correctness'
- 'InvalidParameter: Ensure all parameters are correctly formatted.'
- 'NotFound: Specified sales order does not exist.'
- '404 Not Found: Check if the SalesOrder ID exists'
- '400 Bad Request: Check your request parameters'
- '404 Not Found: Verify the endpoint URL'
- '500 Internal Server Error: Retry the request later'
- 'Invalid filter parameter: Ensure the filter parameter can be parsed.'
- '400 Bad Request: Check filter parameters'
- '401 Unauthorized: Check API key or token'
- 'FILTER_PARSE_ERROR: If the filter parameter cannot be parsed.'
auth_info:
  mentioned_objects:
  - AgreementMessage
  - APILog
client:
  base_url: /api
  paginator:
    type: page
    page_size_param: pageSize
    default_page_size: 100
source_metadata: null
