resources:
- name: entity
  endpoint:
    path: /v1/entity
    method: POST
    data_selector: entity
    params: {}
- name: verify_profile_simple
  endpoint:
    path: /entity/new/verify/profile/simple
    method: POST
    data_selector: verification
    params: {}
- name: verify_profile_full
  endpoint:
    path: /entity/{id}/verify/profile/full
    method: POST
    data_selector: verification
    params: {}
- name: individual
  endpoint:
    path: /auth/v2/machine-session
    method: POST
    data_selector: permissions
    params: {}
- name: smart_ui
  endpoint:
    path: /auth/v2/machine-session
    method: POST
    data_selector: token
- name: machine_session
  endpoint:
    path: /auth/v2/machine-session
    method: POST
    data_selector: null
    params: {}
- name: entity
  endpoint:
    path: /compliance/v1.2/entity
    method: POST
    data_selector: entity
    params: {}
- name: verify_entity
  endpoint:
    path: /compliance/v1.2/entity/{ENTITY_ID}/verify/profile/simple
    method: POST
    data_selector: entity
    params: {}
- name: verification_results
  endpoint:
    path: /v1.14.1/verification/results
    method: GET
    data_selector: entityProfileResult
    params: {}
- name: SFTP
  endpoint:
    path: /v1.14.1/docs/proof-of-concept-data-transfer-options#option-1-sftp-recommended
    method: GET
- name: File Encryption
  endpoint:
    path: /v1.14.1/docs/proof-of-concept-data-transfer-options#option-2-file-encryption
    method: GET
- name: Keybase
  endpoint:
    path: /v1.14.1/docs/proof-of-concept-data-transfer-options#option-3-using-the-secure-app-keybase
    method: GET
- name: addresses
  endpoint:
    path: /v1.14.1/docs/addresses
    method: GET
    data_selector: addresses
    params: {}
- name: create_entity
  endpoint:
    path: /compliance/v1.2/entity
    method: POST
- name: update_entity
  endpoint:
    path: /compliance/v1.2/entity/{entityId}
    method: POST
- name: search_entity
  endpoint:
    path: /compliance/v1.2/entity/search
    method: POST
- name: verify_checks
  endpoint:
    path: /compliance/v1.2/entity/{entityid}/verify/profile/full
    method: POST
- name: create_and_verify_entity
  endpoint:
    path: /compliance/v1.2/entity/new/verify/profile/simple
    method: POST
    data_selector: response
    params: {}
- name: re_verify_entity
  endpoint:
    path: /compliance/v1.2/entity/{entityId}/verify/profile/simple
    method: POST
    data_selector: response
    params: {}
- name: full_verification_results
  endpoint:
    path: /compliance/v1.2/entity/new/verify/profile/full
    method: POST
    data_selector: response
    params: {}
- name: entityProfileResult
  endpoint:
    path: /entity/{entityId}/checks
    method: GET
    data_selector: entityProfileResult
- name: entity
  endpoint:
    path: /entity
    method: POST
    data_selector: entity
    params: {}
- name: entity
  endpoint:
    path: /compliance/v1.2/entity
    method: POST
    data_selector: entity
    params: {}
- name: entity
  endpoint:
    path: /compliance/v1.2/entity
    method: POST
- name: idvalidate
  endpoint:
    path: /idv/v2/idvalidate/ocr
    method: POST
- name: updateEntity
  endpoint:
    path: /compliance/v1.2/entity/{entityId}/verify/profile
    method: POST
- name: mark_data_as_captured
  endpoint:
    path: /idv/v2/idvalidate/initProcess
    method: POST
    data_selector: ''
    params: {}
- name: ocr_processing
  endpoint:
    path: /idv/v2/idvalidate/ocr
    method: POST
    data_selector: entity
    params: {}
- name: process_results_idv_check
  endpoint:
    path: /idv/v2/idvalidate/result
    method: POST
    data_selector: checkStatus
- name: retrieve_token
  endpoint:
    path: /idv/v2/idvalidate/token
    method: POST
- name: onboarding_url
  endpoint:
    path: /idv/v2/idvalidate/onboarding-url
    method: POST
    data_selector: entity
    params: {}
- name: entity
  endpoint:
    path: /compliance/v1.2/entity/:entityId
    method: POST
    data_selector: entity
    params: {}
- name: entity_profile
  endpoint:
    path: /entity/new/verify/profile/full
    method: POST
- name: initProcess
  endpoint:
    path: /compliance/v1.2/entity/<entity_id>/idvalidate/initProcess
    method: POST
    data_selector: entity
    params: {}
- name: getToken
  endpoint:
    path: /entity/new/idvalidate/getToken
    method: POST
- name: updateEntityGetToken
  endpoint:
    path: /entity/{entity}/idvalidate/getToken
    method: POST
- name: initProcess
  endpoint:
    path: /entity/{entity}/idvalidate/initProcess
    method: POST
- name: getChecks
  endpoint:
    path: /getChecks
    method: GET
    data_selector: entityProfileResult
- name: get_token
  endpoint:
    path: /compliance/v1.2/entity/new/idvalidate/getToken
    method: POST
    data_selector: token
    params: {}
- name: init_process
  endpoint:
    path: /compliance/v1.2/entity/<entity_id>/idvalidate/initProcess
    method: POST
    data_selector: requestId
    params: {}
- name: create_and_verify_entity
  endpoint:
    path: /compliance/v1.2/entity/new/verify/:checkType/:resultLevel
    method: POST
    data_selector: entity
    params: {}
- name: checkResults
  endpoint:
    path: /checkResults
    method: GET
    data_selector: checkResults
- name: checkResultsListSummaries
  endpoint:
    path: /checkResultsListSummaries
    method: GET
    data_selector: checkResultsListSummaries
- name: checkRisk
  endpoint:
    path: /checkRisk
    method: GET
    data_selector: checkRisk
- name: checkSummary
  endpoint:
    path: /checkSummary
    method: GET
    data_selector: checkSummary
- name: duplicateCheckResults
  endpoint:
    path: /duplicateCheckResults
    method: GET
    data_selector: duplicateCheckResults
- name: entity_verification_check
  endpoint:
    path: /compliance/v1.2/entity/:entityId/checks
    method: GET
- name: checkResultsListSummaries
  endpoint:
    path: /checkResultsListSummaries
    method: GET
    data_selector: results
    params: {}
- name: checkRisk
  endpoint:
    path: /checkRisk
    method: GET
    data_selector: risk
    params: {}
- name: checkSummary
  endpoint:
    path: /checkSummary
    method: GET
    data_selector: summary
    params: {}
- name: checkResults
  endpoint:
    path: /services/data/vXX.X/sobjects/CheckResults
    method: GET
    data_selector: checkResults
    params: {}
- name: entity_verification
  endpoint:
    path: /entity/verification
    method: GET
- name: entity_id_validation_process
  endpoint:
    path: /compliance/v1.2/entity/:entityId/idvalidate/initProcess
    method: POST
    data_selector: entity
    params: {}
- name: cases
  endpoint:
    path: /transaction/v2/entity/:entityId/cases
    method: PATCH
- name: entity_monitoring_status
  endpoint:
    path: /compliance/v1.2/entity/{entityId}/flag/monitor
    method: POST
    data_selector: null
    params:
      set: 'true'
- name: create_document
  endpoint:
    path: /compliance/v1.2/document
    method: POST
    data_selector: document
- name: update_document
  endpoint:
    path: /compliance/v1.2/document/:documentId
    method: POST
    data_selector: document
    params: {}
- name: document
  endpoint:
    path: /v1.14.1/reference/mark-all-data-from-an-idv-check-as-captured
    method: POST
    data_selector: ''
    params: {}
- name: entity
  endpoint:
    path: /v1.14.1/reference/process-an-identity-document-photo-for-ocr
    method: POST
    data_selector: ''
    params: {}
- name: document
  endpoint:
    path: /v1.14.1/docs/adding-a-mobile-phone-number
    method: POST
    data_selector: document_parameters
    params:
      idType: MSISDN
      Country: AUS
      idNumber: '+61432123456'
- name: business_checks
  endpoint:
    path: /compliance/v1.2/business/{entityId}/checks
    method: GET
    data_selector: checks
    params:
      documentData: full
- name: business_ownership_query
  endpoint:
    path: /compliance/v1.2/business/ownership/query
    method: POST
    data_selector: organisation
- name: ownership_query
  endpoint:
    path: /some/endpoint/path
    method: POST
    data_selector: result
    params:
      checkType: list of enums
      entityCategories: list of enums
      resultLevel: summary
      validation: 'on'
      generateReport: SINGLE-LEVEL-AML
      includeHistorical: true
      ownershipMode: full
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
    params: {}
- name: entities
  endpoint:
    path: /entities
    method: GET
    data_selector: entities
    params: {}
- name: documents
  endpoint:
    path: /documents
    method: GET
    data_selector: documents
    params: {}
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: addresses
    params: {}
- name: entity
  endpoint:
    path: /v1.14.1/docs/fundamentals-entity-object
    method: GET
    data_selector: records
- name: international_national_ids
  endpoint:
    path: /v1.14.1/docs/international-national-id
    method: GET
    data_selector: identityDocs
    params: {}
- name: international_passport_verification
  endpoint:
    path: /v1.14.1/docs/international-national-id
    method: GET
    data_selector: identityDocs
    params: {}
- name: National ID
  endpoint:
    path: /v1.14.1/docs/country-specific-documents-usa-v1#supported-united-states-documents
    method: GET
    data_selector: documents
    params: {}
- name: drivers_licences
  endpoint:
    path: /v1.14.1/docs/aus-drivers-licence
    method: GET
    data_selector: required_fields
- name: passports_and_visas
  endpoint:
    path: /v1.14.1/docs/aus-passports-visas
    method: GET
    data_selector: required_fields
- name: medicare_cards
  endpoint:
    path: /v1.14.1/docs/aus-medicare-cards
    method: GET
    data_selector: required_fields
- name: name_change_certificate
  endpoint:
    path: /name_change_certificate
    method: GET
    data_selector: identityDocs
    params: {}
- name: birth_certificate
  endpoint:
    path: /birth_certificate
    method: GET
    data_selector: identityDocs
    params: {}
- name: citizenship_certificate
  endpoint:
    path: /citizenship_certificate
    method: GET
    data_selector: identityDocs
    params: {}
- name: immi_card
  endpoint:
    path: /immi_card
    method: GET
    data_selector: identityDocs
    params: {}
- name: marriage_certificate
  endpoint:
    path: /marriage_certificate
    method: GET
    data_selector: identityDocs
    params: {}
- name: drivers_license
  endpoint:
    path: /v1.14.1/docs/nzl-drivers-licence
    method: POST
    data_selector: identityDocs
    params: {}
- name: passport
  endpoint:
    path: /v1.14.1/docs/nzl-drivers-licence
    method: POST
    data_selector: identityDocs
    params: {}
- name: birth_certificate
  endpoint:
    path: /v1.14.1/docs/nzl-drivers-licence
    method: POST
    data_selector: identityDocs
    params: {}
- name: Chinese National ID Card
  endpoint:
    path: /v1.14.1/reference/process-an-identity-document-photo-for-ocr
    method: POST
    data_selector: identityDocs
    params: {}
- name: identity_docs
  endpoint:
    path: /v1.14.1/identityDocs
    method: POST
    data_selector: identityDocs
    params: {}
- name: Thai National ID Card
  endpoint:
    path: /v1.14.1/reference/process-an-identity-document-photo-for-ocr
    method: POST
    data_selector: identityDocs
    params: {}
- name: identityDocs
  endpoint:
    path: /v1.14.1/reference/mark-all-data-from-an-idv-check-as-captured
    method: POST
    data_selector: ''
    params: {}
notes:
- Testing environment is available for all users.
- UAT and Production environments are restricted to contracted customers only.
- Always use environment-specific credentials and never commit API keys to version
  control.
- Initialize modules only when needed and release resources after use.
- Never embed credentials directly in your app’s environment variables. Use a separate
  service to generate session tokens instead.
- Your Native App has Camera, Microphone, and Location permissions
- Your Web App is live
- 'IDVerse Integration: This release utilises the IDVerse release version from July
  9, 2025.'
- 'skipFaceScanIntro Flag: The skipFaceScanIntro flag is set to FALSE by default.'
- Smart UI will soon be retired. We’re officially discontinuing Smart UI support and
  updates effective December 31, 2024.
- Smart UI will soon be retired effective December 31, 2024.
- Generating a session token requires changing the preset to 'one-sdk'.
- Applicant Reference with whitespace characters aren’t supported by the Smart UI
  and will be rejected.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Not all mobile devices are supported by Onfido and we’re still in the process of
  confirming which devices aren’t.
- 'The identified non-supported devices will display a screen like below. All latest
  devices should go through without any issues and, at the moment, the known unsupported
  devices are: iOS: under version 13.'
- A referrer field can also be included in the body of the request to /auth/v2/machine-sessions.
- For increased security, any website using the Smart UI should generate a token configured
  with referrer pattern.
- Smart UI requires UTF-8 encoding.
- Smart UI is compatible with all ES5-compliant browsers.
- Always collect addresses in structured format instead of long format
- Include API URL endpoint (including query parameters), data payload and response.
- Ensure you’ve obtained your metadata from FrankieOne for your environment.
- Mandatory Card Number requirement is switched on from 4am, 1 September 2022.
- The API endpoint doesn’t validate whether you have provided the document_number
  data point.
- Mandatory Card Number requirement is switched on at 4am, 1 September 2022.
- Uses OAuth2 with refresh token — requires setup of connected app in FrankieOne
- Some objects may return nulls in deeply nested fields
- Country must be AUS.
- Postal code must be 4 digits.
- Ensure to collect the entity ID from the response.
- It’s important to set up webhook notifications.
- This new format gives a more detailed and clearer picture than having to dig through
  the original check results and checkSummary key/value pairs. But all of that raw
  data is still available if you request a full check result.
- Customer ID issued by Frankie Financial will never change.
- If using a CustomerChildID, a separate api_key is needed for each child.
- 'Document Type Detection: The API automatically detects the document type.'
- 'Data quality: Check `ocr_scanned_mismatch` for discrepancies.'
- By default, all operations are synchronous unless specified otherwise in the API
  documentation.
- Not all endpoints support asynchronous operations (e.g., GET requests). Check the
  specific endpoint documentation for availability.
- Using a previously uploaded but incomplete Entity, you can optionally supply updated
  details.
- Consents are important where consent is critical or required by law.
- The init process is an async process therefore we recommend having webhooks configured
  with Frankie to be able to accept the events that signify that the check has been
  completed.
- Once you have the event confirming that the check has been completed you should
  run the getChecks endpoint to get information on the outcome of the check.
- Ideally you'll have three identityDocs objects in the array
- You need to specify either applicationId or referrer
- If you get a 500 Error chances are your customer hasn't done the document capture
  process and there's no documents to process.
- Uses API key for authentication
- The API returns various check results including risks and duplicates.
- Your account also needs to be configured to support a full response too (talk to
  your account manager for more information). If you’re not configured for full responses,
  we’ll only return summary level data regardless.
- Ensure your endpoint is accessible via HTTPS.
- Notification payloads are secured through HTTPS and IP whitelisting.
- Check results may return multiple entries for the same check ID.
- Ensure to handle null values in the result notes.
- At a minimum, the entity will need to have a name.
- For best results, gather the DoB, address, ID document details before calling this
  initProcess function.
- Including full scanned documents increases response times. Use documentData=meta
  when you only need metadata for faster results.
- A 202 ACCEPT response will be returned if there are full ownership details to be
  retrieved or there is entity verification requested.
- If only basic ownership (profile only) is requested with no entity verification,
  then the result will be a 200 OK.
- Ensure that names match exactly as shown on the ID
- Date format is strictly YYYY-MM-DD
- The NATIONAL_ID document type in the FrankieOne KYC v2 API primarily facilitates
  the verification of a Social Security Number (SSN).
- Ensure all required fields are provided in the correct format.
- Ensure all names match exactly as shown on the document
- Use correct date formats (YYYY-MM-DD)
- Include all required extra data fields
- Verify document numbers are entered correctly
- 'Two name formats are required: Pinyin and Chinese name.'
- The full ID number must be provided without spaces or special characters.
- Both paternal and maternal family names are required
- Document number must be provided in the idNumber field
- Names must match the passport exactly, including spacing and special characters
- 'Common validation failures: Incorrect passport number format, Missing or incorrect
  file number, Name mismatch with passport, Incorrect date format'
- These test scenarios are available in both Demo and UAT environments.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'CONSENT_REQUIRED: Handle missing consent'
- 'VALIDATION_ERROR: Handle validation errors'
- 'scanFail: Exposed scanFail error events, providing more detailed feedback.'
- Production will be updated to fail verification due to missing data when requested.
- Verification calls to DVS will fail if the drivers licence card number is not captured.
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: Bad Request Error'
- '401: Unauthorized Error'
- '404: Not Found Error'
- '415: Unsupported Media Type Error'
- '429: Too Many Requests Error'
- '500: Internal Server Error'
- '202: Request will run in background if X-Frankie-Background is set to 1.'
- 'DOCUMENT_INVALID_INCORRECT_FILE_FORMAT: Check file format'
- 'DOCUMENT_INVALID_EXCEEDED_SIZE_LIMIT: Reduce image size'
- 'AWAITING_DOCUMENT_UPLOAD_FAILED_OCR: Improve image quality'
- '500'
- '405: Method Not Allowed Error'
- '422: Unprocessable Entity Error'
- '503: Service Unavailable Error'
- '500: Couldn''t reach srv_idv service'
- '200: Successful response'
- 400 Bad Request Error
- 401 Unauthorized Error
- 404 Not Found Error
- 405 Method Not Allowed Error
- 415 Unsupported Media Type Error
- 422 Unprocessable Entity Error
- 429 Too Many Requests Error
- 500 Internal Server Error
- 503 Service Unavailable Error
- '5xx: Multiple retries will occur.'
- '4xx: A 400 status code stops retries.'
- 'CORE-5990: Everything went kaflooey. Stay calm.'
- '501: Invalid format. Must be YYYY-MM-DD'
- 'ENT-1065: Named entity profile not configured'
- 'VAL-1010: API Data validation errors'
- Missing or incorrect family name format
- Incorrect date format (must be YYYY-MM-DD)
- Incomplete or incorrect ID number
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.uat.frankie.one
  auth:
    type: apikey
    location: header
    header_name: api_key
  headers:
    X-Frankie-CustomerID: string
source_metadata: null
