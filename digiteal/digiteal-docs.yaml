resources:
- name: auto_payment
  endpoint:
    path: /api/v1/autopay-request
    method: POST
    data_selector: autoPaymentRequest
    params: {}
- name: credit_note
  endpoint:
    path: /api/v1/credit-note
    method: POST
    data_selector: creditNoteCreationRequest
    params: {}
- name: integrator_abstract_person_info
  endpoint:
    path: /api/v1/integrator/abstract-person-info
    method: GET
    data_selector: UserInfo
    params: {}
- name: integrator_company_detailed_info
  endpoint:
    path: /api/v1/integrator/company-detailed-info
    method: GET
    data_selector: DetailedCompanyInfo
    params: {}
- name: auto_payments
  endpoint:
    path: /api/v1/autopay-request
    method: POST
    data_selector: autoPaymentRequest
- name: credit_notes
  endpoint:
    path: /api/v1/credit-note
    method: POST
    data_selector: creditNoteCreationRequest
- name: integrator_person_info
  endpoint:
    path: /api/v1/integrator/abstract-person-info
    method: GET
    data_selector: UserInfo
- name: integrator_company_detailed_info
  endpoint:
    path: /api/v1/integrator/company-detailed-info
    method: GET
    data_selector: DetailedCompanyInfo
- name: company_info
  endpoint:
    path: /api/v1/integrator/company-info
    method: GET
    data_selector: CompanyInfo
- name: person_info
  endpoint:
    path: /api/v1/integrator/person-info
    method: GET
    data_selector: PersonInfo
- name: invoice_documents
  endpoint:
    path: /api/v1/invoice-getDocumentList
    method: GET
    data_selector: DocumentDetails
- name: invoice_request
  endpoint:
    path: /api/v1/invoice-request
    method: POST
- name: company_contracts
  endpoint:
    path: /api/v1/kyc/contractsForCompany
    method: GET
- name: person_contracts
  endpoint:
    path: /api/v1/kyc/contractsForPerson
    method: GET
- name: company_info
  endpoint:
    path: /api/v1/integrator/company-info
    method: GET
    data_selector: records
    params: {}
- name: person_info
  endpoint:
    path: /api/v1/integrator/person-info
    method: GET
    data_selector: records
    params: {}
- name: contracts_for_company
  endpoint:
    path: /api/v1/kyc/contractsForCompany
    method: GET
    data_selector: records
    params:
      language: EN
- name: contracts_for_person
  endpoint:
    path: /api/v1/kyc/contractsForPerson
    method: GET
    data_selector: records
    params:
      language: EN
- name: send_kyc_document
  endpoint:
    path: /api/v1/kyc/document
    method: POST
    data_selector: DocumentDetails
- name: analyse_id_document
  endpoint:
    path: /api/v1/kyc/idDocument/extractData
    method: POST
    data_selector: IDDocument
- name: set_logo
  endpoint:
    path: /api/v1/kyc/logo
    method: POST
    data_selector: DocumentDetails
- name: create_person
  endpoint:
    path: /api/v1/kyc/person
    method: POST
    data_selector: PersonInfo
- name: force_optin
  endpoint:
    path: /api/v1/optin/force/{requestorVAT}/{clientInternalId}/{clientEmail}
    method: POST
- name: send_document
  endpoint:
    path: /api/v1/peppol/outbound-documents
    method: POST
- name: get_participants
  endpoint:
    path: /api/v1/peppol/registered-participants
    method: GET
- name: register_participant
  endpoint:
    path: /api/v1/peppol/registered-participants
    method: POST
- name: get_registration_status
  endpoint:
    path: /api/v1/peppol/registered-participants/{identifier}
    method: GET
- name: unregister_participant
  endpoint:
    path: /api/v1/peppol/registered-participants/{identifier}
    method: DELETE
- name: get_supported_document_types
  endpoint:
    path: /api/v1/peppol/remote-participants/{identifier}/supported-document-types
    method: GET
- name: payment_from_debtor
  endpoint:
    path: /api/v1/payment-request/b2b-pay-button/execute
    method: GET
- name: send_kyc_document
  endpoint:
    path: /kyc/document
    method: POST
    data_selector: DocumentDetails
    params: {}
- name: analyze_id_document
  endpoint:
    path: /kyc/idDocument/extractData
    method: POST
    data_selector: IDDocument
    params: {}
- name: set_logo
  endpoint:
    path: /kyc/logo
    method: POST
    data_selector: DocumentDetails
    params: {}
- name: create_person
  endpoint:
    path: /kyc/person
    method: POST
    data_selector: PersonInfo
    params: {}
- name: force_optin
  endpoint:
    path: /optin/force/{requestorVAT}/{clientInternalId}/{clientEmail}
    method: POST
    data_selector: Success
    params: {}
- name: send_document_peppol
  endpoint:
    path: /peppol/outbound-documents
    method: POST
    data_selector: PeppolResult
    params: {}
- name: get_participants_peppol
  endpoint:
    path: /peppol/registered-participants
    method: GET
    data_selector: PeppolRegisteredParticipant
    params: {}
- name: register_participant_peppol
  endpoint:
    path: /peppol/registered-participants
    method: POST
    data_selector: PeppolResult
    params: {}
- name: get_registration_status_peppol
  endpoint:
    path: /peppol/registered-participants/{identifier}
    method: GET
    data_selector: PeppolRegisteredParticipant
    params: {}
- name: unregister_participant_peppol
  endpoint:
    path: /peppol/registered-participants/{identifier}
    method: DELETE
    data_selector: PeppolResult
    params: {}
- name: get_supported_document_types_peppol
  endpoint:
    path: /peppol/remote-participants/{identifier}/supported-document-types
    method: GET
    data_selector: SupportedPeppolDocumentTypes
    params: {}
- name: payment_from_debtor
  endpoint:
    path: /payment-request/b2b-pay-button/execute
    method: GET
    data_selector: OK
    params: {}
- name: payment_request_execute
  endpoint:
    path: /api/v1/payment-request/pay-button/execute
    method: GET
    data_selector: records
    params: {}
- name: b2b_payment_button
  endpoint:
    path: /api/v1/payment-request/b2b-pay-button
    method: GET
    data_selector: records
    params: {}
- name: create_payment_request
  endpoint:
    path: /api/v1/payment-request
    method: POST
    data_selector: records
    params: {}
- name: create_invoice_payment_request
  endpoint:
    path: /api/v1/payment-request/invoice
    method: POST
    data_selector: records
    params: {}
- name: create_sct_payment_request
  endpoint:
    path: /api/v1/payment-request/sct
    method: POST
    data_selector: records
    params: {}
- name: create_trusted_payment_collection_request
  endpoint:
    path: /api/v1/payment-request/trustedPayment
    method: POST
    data_selector: records
    params: {}
- name: generate_qr_code
  endpoint:
    path: /api/v1/image-request/slip-image-anonymous
    method: GET
    data_selector: records
    params: {}
- name: pay_button_execute
  endpoint:
    path: /api/v1/payment-request/pay-button/execute
    method: GET
    data_selector: records
    params: {}
- name: b2b_pay_button
  endpoint:
    path: /api/v1/payment-request/b2b-pay-button
    method: GET
    data_selector: records
    params: {}
- name: payment_request
  endpoint:
    path: /api/v1/payment-request
    method: POST
    data_selector: records
    params: {}
- name: invoice_payment_request
  endpoint:
    path: /api/v1/payment-request/invoice
    method: POST
    data_selector: records
    params: {}
- name: sct_payment_request
  endpoint:
    path: /api/v1/payment-request/sct
    method: POST
    data_selector: records
    params: {}
- name: trusted_payment_request
  endpoint:
    path: /api/v1/payment-request/trustedPayment
    method: POST
    data_selector: records
    params: {}
- name: qr_code_generation
  endpoint:
    path: /api/v1/image-request/slip-image-anonymous
    method: GET
    data_selector: records
    params: {}
- name: refund
  endpoint:
    path: /api/v1/refund
    method: POST
    data_selector: empty
    params: {}
- name: company mandate
  endpoint:
    path: /api/v1/sdd/transferCompany
    method: POST
    data_selector: empty
    params: {}
- name: person mandate
  endpoint:
    path: /api/v1/sdd/transferPerson
    method: POST
    data_selector: empty
    params: {}
- name: create short link
  endpoint:
    path: /api/v1/shortLink
    method: POST
    data_selector: empty
    params: {}
- name: create confirmation-based
  endpoint:
    path: /api/v1/transfers/confirmation-based
    method: POST
    data_selector: empty
    params: {}
- name: get confirmation-based
  endpoint:
    path: /api/v1/transfers/confirmation-based/{uuid}
    method: GET
    data_selector: empty
    params: {}
- name: update confirmation-based
  endpoint:
    path: /api/v1/transfers/confirmation-based/{uuid}
    method: POST
    data_selector: empty
    params: {}
- name: refund_payment
  endpoint:
    path: /api/v1/refund
    method: POST
    data_selector: uuid
    params: {}
- name: transfer_company
  endpoint:
    path: /api/v1/sdd/transferCompany
    method: POST
    data_selector: executionType
    params: {}
- name: transfer_person
  endpoint:
    path: /api/v1/sdd/transferPerson
    method: POST
    data_selector: executionType
    params: {}
- name: create_short_link
  endpoint:
    path: /api/v1/shortLink
    method: POST
    data_selector: shortURL
    params: {}
- name: create_confirmation_based
  endpoint:
    path: /api/v1/transfers/confirmation-based
    method: POST
    data_selector: transferID
    params: {}
- name: get_confirmation_based
  endpoint:
    path: /api/v1/transfers/confirmation-based/{uuid}
    method: GET
    data_selector: actors
    params: {}
- name: update_confirmation_based
  endpoint:
    path: /api/v1/transfers/confirmation-based/{uuid}
    method: POST
    data_selector: transferID
    params: {}
- name: confirmation-based partial execution
  endpoint:
    path: /api/v1/transfers/confirmation-based/{uuid}/partialExecution
    method: POST
    data_selector: list of partial payments to perform
    params:
      uuid: string
- name: confirmation-based payments
  endpoint:
    path: /api/v1/transfers/confirmation-based/{uuid}/payments
    method: POST
    data_selector: list of updates to perform
    params:
      uuid: string
- name: execute transfer
  endpoint:
    path: /api/v1/transfers/execute
    method: POST
    data_selector: Data of the trusted payment to be executed
- name: new time-based payment
  endpoint:
    path: /api/v1/transfers/time-based
    method: POST
    data_selector: Data of the trusted payment to be created
- name: get time-based payment
  endpoint:
    path: /api/v1/transfers/time-based/{uuid}
    method: GET
    data_selector: Success
    params:
      uuid: string
- name: update time-based payment
  endpoint:
    path: /api/v1/transfers/time-based/{uuid}
    method: POST
    data_selector: data related necessary to update the trusted payment
    params:
      uuid: string
- name: get webhook config
  endpoint:
    path: /api/v1/webhook
    method: GET
    data_selector: Success
- name: update webhook
  endpoint:
    path: /api/v1/webhook
    method: POST
    data_selector: Webhook info to create or update
- name: set complete webhook config
  endpoint:
    path: /api/v1/webhook/configuration
    method: POST
    data_selector: Configuration to set for the calling company
- name: set webhook credentials
  endpoint:
    path: /api/v1/webhook/configuration
    method: PUT
    data_selector: Configuration to set (only credentials) for the calling company
- name: delete webhook
  endpoint:
    path: /api/v1/webhook/{type}
    method: DELETE
    data_selector: Success
    params:
      type: string
- name: partial_confirmation
  endpoint:
    path: /transfers/confirmation-based/{uuid}/partialExecution
    method: POST
    data_selector: updates
- name: update_confirmation_based_payments
  endpoint:
    path: /transfers/confirmation-based/{uuid}/payments
    method: POST
    data_selector: updates
- name: confirm
  endpoint:
    path: /transfers/execute
    method: POST
    data_selector: transferID
- name: new_time_based
  endpoint:
    path: /transfers/time-based
    method: POST
    data_selector: projectName
- name: get_time_based
  endpoint:
    path: /transfers/time-based/{uuid}
    method: GET
    data_selector: amountInCents
- name: update_time_based
  endpoint:
    path: /transfers/time-based/{uuid}
    method: POST
    data_selector: projectName
- name: get_webhook
  endpoint:
    path: /webhook
    method: GET
    data_selector: webHooks
- name: update_webhook
  endpoint:
    path: /webhook
    method: POST
    data_selector: type
- name: set_complete_config
  endpoint:
    path: /webhook/configuration
    method: POST
    data_selector: identificationNumber
- name: set_credentials
  endpoint:
    path: /webhook/configuration
    method: PUT
    data_selector: identificationNumber
- name: delete_webhook
  endpoint:
    path: /webhook/{type}
    method: DELETE
    data_selector: type
- name: CompanyCustomerKYCInfo
  endpoint:
    path: /path/to/endpoint
    method: GET
    data_selector: records
    params: {}
- name: CompanyInfo
  endpoint:
    path: /path/to/endpoint
    method: GET
    data_selector: records
    params: {}
- name: CompanyKYCInfo
  endpoint:
    path: /path/to/endpoint
    method: GET
    data_selector: records
    params: {}
- name: CompanySDDConfiguration
  endpoint:
    path: /path/to/endpoint
    method: GET
    data_selector: records
    params: {}
- name: AutoPaymentResult
  endpoint:
    path: /autoPaymentResult
    method: GET
    data_selector: records
- name: CompanyCustomerKYCInfo
  endpoint:
    path: /companyCustomerKYCInfo
    method: GET
    data_selector: records
- name: CompanyInfo
  endpoint:
    path: /companyInfo
    method: GET
    data_selector: records
- name: CompanyKYCInfo
  endpoint:
    path: /companyKYCInfo
    method: GET
    data_selector: records
- name: CompanySDDConfiguration
  endpoint:
    path: /companySDDConfiguration
    method: GET
    data_selector: records
- name: ConfirmationBasedTransfer
  endpoint:
    path: /confirmationBasedTransfer
    method: POST
    data_selector: transfer
    params: {}
- name: ConfirmationBasedTransferInfo
  endpoint:
    path: /confirmationBasedTransferInfo
    method: GET
    data_selector: transferInfo
    params: {}
- name: ConfirmationBasedTransferPaymentData
  endpoint:
    path: /confirmationBasedTransferPaymentData
    method: PUT
    data_selector: paymentData
    params: {}
- name: ConfirmationBasedTransfer
  endpoint:
    path: /confirmation-based-transfer
    method: POST
    data_selector: confirmationTransfer
- name: ConfirmationBasedTransferInfo
  endpoint:
    path: /confirmation-based-transfer/info
    method: GET
    data_selector: confirmationTransferInfo
- name: ConfirmationBasedTransferPaymentData
  endpoint:
    path: /confirmation-based-transfer/payment-data
    method: PUT
    data_selector: paymentData
- name: PaymentCreationRequest
  endpoint:
    path: /payment/create
    method: POST
    data_selector: response
    params: {}
- name: PeppolParticipantRegistrationRequest
  endpoint:
    path: /peppol/participant/register
    method: POST
    data_selector: response
    params: {}
- name: PeppolRegisteredParticipant
  endpoint:
    path: /peppol/participant/registered
    method: GET
    data_selector: response
    params: {}
- name: PeppolResult
  endpoint:
    path: /peppol/result
    method: GET
    data_selector: response
    params: {}
- name: PersonCustomerKYCInfo
  endpoint:
    path: /person/customer/kyc
    method: GET
    data_selector: response
    params: {}
- name: PersonInfo
  endpoint:
    path: /person/info
    method: GET
    data_selector: response
    params: {}
- name: PersonKYCInfo
  endpoint:
    path: /person/kyc
    method: GET
    data_selector: response
    params: {}
- name: refund_request
  endpoint:
    path: /refundRequest
    method: POST
    data_selector: refund
    params: {}
- name: sct_payment_request
  endpoint:
    path: /sctPaymentRequest
    method: POST
    data_selector: payment
    params: {}
- name: trusted_payment_request
  endpoint:
    path: /trustedPaymentRequest
    method: POST
    data_selector: payment_request
    params: {}
- name: PaymentCreationRequest
  endpoint:
    path: /payment/create
    method: POST
    data_selector: data
    params: {}
- name: PeppolParticipantRegistrationRequest
  endpoint:
    path: /peppol/register
    method: POST
    data_selector: data
    params: {}
- name: PeppolRegisteredParticipant
  endpoint:
    path: /peppol/registered
    method: GET
    data_selector: data
    params: {}
- name: PeppolResult
  endpoint:
    path: /peppol/result
    method: GET
    data_selector: data
    params: {}
- name: PersonCustomerKYCInfo
  endpoint:
    path: /kyc/person
    method: GET
    data_selector: data
    params: {}
- name: PersonInfo
  endpoint:
    path: /person/info
    method: GET
    data_selector: data
    params: {}
- name: PersonKYCInfo
  endpoint:
    path: /kyc/person/info
    method: GET
    data_selector: data
    params: {}
- name: webhook_configuration
  endpoint:
    path: /webhook/configuration
    method: POST
    data_selector: ''
    params: {}
- name: RefundRequest
  endpoint:
    path: /refund-request
    method: POST
    data_selector: amountInCents, paymentUUID
- name: SctPaymentRequestInput
  endpoint:
    path: /sct-payment-request
    method: POST
    data_selector: amountInCents, creditorIban, creditorReference, debtorIban, executionDate,
      remittanceInfo
- name: SctPaymentRequestResponse
  endpoint:
    path: /sct-payment-response
    method: GET
    data_selector: paymentID, status
- name: ShortLinkRequest
  endpoint:
    path: /short-link
    method: POST
    data_selector: longURL
- name: ShortLinkResponse
  endpoint:
    path: /short-link-response
    method: GET
    data_selector: shortURL
- name: TransferCreationResult
  endpoint:
    path: /transfer-creation
    method: POST
    data_selector: creditorReference, transferID
- name: TransferExecutionData
  endpoint:
    path: /transfer-execution
    method: POST
    data_selector: comment, requesterVAT, transferID, validate
- name: TrustedPaymentRequest
  endpoint:
    path: /trusted-payment-request
    method: POST
    data_selector: amountInCents, cancelURL, confirmationURL, errorURL, language,
      transferId
- name: UserInfo
  endpoint:
    path: /user-info
    method: GET
    data_selector: companyStatus, email, id, personStatus, type, vatNumber
- name: pay_button
  endpoint:
    path: /payment-request/pay-button
    method: GET
    data_selector: response
    params: {}
- name: WebHookConfigurationInfo
  endpoint:
    path: /webhooks/configuration
    method: POST
    data_selector: webHooks
    params: {}
- name: WebHookInfo
  endpoint:
    path: /webhooks/info
    method: GET
    data_selector: type
    params: {}
- name: pay_button
  endpoint:
    path: /api/v1/payment-request/pay-button
    method: GET
    data_selector: response
- name: b2b_pay_button
  endpoint:
    path: /api/v1/payment-request/b2b-pay-button
    method: GET
    data_selector: response
- name: company_registration
  endpoint:
    path: /#/register/{e-mail}/
    method: GET
    data_selector: records
    params:
      vatNumber: vatNumber
      integratorID: ID
      companyName: name
      pack: START
      forBusiness: 'true'
- name: person_registration
  endpoint:
    path: /#/register/{e-mail}/
    method: GET
    data_selector: records
    params:
      firstName: firstName
      lastName: lastName
      integratorID: ID
- name: company_change
  endpoint:
    path: /v1/api/payment-notification/company
    method: POST
    data_selector: companyNotification
- name: auto_pay_configuration_change
  endpoint:
    path: /v1/api/payment-notification/config-change
    method: POST
    data_selector: autoPayConfiguration
- name: payment_confirmation
  endpoint:
    path: /v1/api/payment-notification/confirmation
    method: POST
    data_selector: paymentConfirmationNotification
- name: customer_change
  endpoint:
    path: /v1/api/payment-notification/customer
    method: POST
    data_selector: customerNotification
- name: payment_error_occurred
  endpoint:
    path: /v1/api/payment-notification/error
    method: POST
    data_selector: paymentID
- name: invoice_change
  endpoint:
    path: /v1/api/payment-notification/invoice
    method: POST
    data_selector: invoiceNotification
- name: peppol_notification
  endpoint:
    path: /v1/api/payment-notification/peppol
    method: POST
    data_selector: peppolNotification
- name: person_change
  endpoint:
    path: /v1/api/payment-notification/person
    method: POST
    data_selector: personNotification
- name: transfer_of_funds
  endpoint:
    path: /v1/api/payment-notification/transfer-of-funds
    method: POST
    data_selector: transferOfFundsNotification
- name: pay_button
  endpoint:
    path: /api/v1/payment-request/pay-button
    method: GET
    data_selector: response
    params: {}
- name: pay_button_execute
  endpoint:
    path: /api/v1/payment-request/pay-button/execute
    method: GET
    data_selector: response
    params: {}
- name: b2b_pay_button
  endpoint:
    path: /api/v1/payment-request/b2b-pay-button
    method: GET
    data_selector: response
    params: {}
- name: b2b_pay_button_execute
  endpoint:
    path: /api/v1/payment-request/b2b-pay-button/execute
    method: GET
    data_selector: response
    params: {}
- name: PaymentConfirmationNotification
  endpoint:
    path: /payment-confirmation
    method: GET
    data_selector: records
- name: AutoPayConfiguration
  endpoint:
    path: /auto-pay-configuration
    method: GET
    data_selector: records
- name: CustomerNotification
  endpoint:
    path: /customer-notification
    method: GET
    data_selector: records
- name: PeppolNotification
  endpoint:
    path: /peppol-notification
    method: GET
    data_selector: records
- name: PersonNotification
  endpoint:
    path: /person-notification
    method: GET
    data_selector: records
- name: PaymentRequestInformation
  endpoint:
    path: /payment-request-information
    method: GET
    data_selector: records
- name: auto_payment_request
  endpoint:
    path: /api/v1/autopay-request
    method: POST
    data_selector: AutoPaymentResult
    params: {}
- name: credit_note
  endpoint:
    path: /api/v1/credit-note
    method: POST
    data_selector: uuid
    params: {}
- name: qr_code
  endpoint:
    path: /api/v1/image-request/slip-image-anonymous
    method: GET
    data_selector: byte
    params: {}
- name: abstract_person_info
  endpoint:
    path: /api/v1/integrator/abstract-person-info
    method: GET
    data_selector: UserInfo
    params: {}
- name: company_info
  endpoint:
    path: /api/v1/integrator/company-info
    method: GET
    data_selector: CompanyInfo
    params: {}
- name: company_notification
  endpoint:
    path: /v1/api/payment-notification/company
    method: POST
    data_selector: companyNotification
    params: {}
- name: auto_pay_configuration
  endpoint:
    path: /v1/api/payment-notification/config-change
    method: POST
    data_selector: autoPayConfiguration
    params: {}
- name: payment_confirmation
  endpoint:
    path: /v1/api/payment-notification/confirmation
    method: POST
    data_selector: paymentConfirmationNotification
    params: {}
- name: customer_notification
  endpoint:
    path: /v1/api/payment-notification/customer
    method: POST
    data_selector: customerNotification
    params: {}
- name: payment_error
  endpoint:
    path: /v1/api/payment-notification/error
    method: POST
    data_selector: paymentID
    params: {}
- name: invoice_change
  endpoint:
    path: /v1/api/payment-notification/invoice
    method: POST
    data_selector: invoiceNotification
    params: {}
- name: peppol_notification
  endpoint:
    path: /v1/api/payment-notification/peppol
    method: POST
    data_selector: peppolNotification
    params: {}
- name: person_change
  endpoint:
    path: /v1/api/payment-notification/person
    method: POST
    data_selector: personNotification
    params: {}
- name: transfer_of_funds
  endpoint:
    path: /v1/api/payment-notification/transfer-of-funds
    method: POST
    data_selector: transferOfFundsNotification
    params: {}
- name: person_info
  endpoint:
    path: /api/v1/integrator/person-info
    method: GET
    data_selector: schema
    params:
      email: string
- name: invoice_getDocumentList
  endpoint:
    path: /api/v1/invoice-getDocumentList
    method: GET
    data_selector: schema
    params:
      billId: string
- name: invoice_request
  endpoint:
    path: /api/v1/invoice-request
    method: POST
    data_selector: schema
    params:
      invoiceCreationRequest: object
- name: invoice_sendDoc
  endpoint:
    path: /api/v1/invoice-sendDoc
    method: POST
    data_selector: schema
    params:
      document: file
      name: string
      comment: string
      uuid: string
- name: kyc_company
  endpoint:
    path: /api/v1/kyc/company
    method: POST
    data_selector: schema
    params:
      companyCustomerKYCInfo: object
- name: PaymentConfirmationNotification
  endpoint:
    path: /paymentConfirmationNotification
    method: GET
    data_selector: records
    params: {}
- name: AutoPayConfiguration
  endpoint:
    path: /autoPayConfiguration
    method: GET
    data_selector: records
    params: {}
- name: CustomerNotification
  endpoint:
    path: /customerNotification
    method: GET
    data_selector: records
    params: {}
- name: PeppolNotification
  endpoint:
    path: /peppolNotification
    method: GET
    data_selector: records
    params: {}
- name: PersonNotification
  endpoint:
    path: /personNotification
    method: GET
    data_selector: records
    params: {}
- name: PaymentRequestInformation
  endpoint:
    path: /paymentRequestInformation
    method: GET
    data_selector: records
    params: {}
- name: getContractsForPerson
  endpoint:
    path: /api/v1/contracts
    method: GET
    data_selector: items
    params:
      language: EN
- name: storeKYCDocument
  endpoint:
    path: /api/v1/kyc/document
    method: POST
    data_selector: DocumentDetails
- name: analyseIDDocument
  endpoint:
    path: /api/v1/kyc/idDocument/extractData
    method: POST
    data_selector: IDDocument
- name: setCompanyLogo
  endpoint:
    path: /api/v1/kyc/logo
    method: POST
    data_selector: DocumentDetails
- name: preRegisterPerson
  endpoint:
    path: /api/v1/kyc/person
    method: POST
    data_selector: PersonInfo
- name: forceOptin
  endpoint:
    path: /api/v1/optin/force/{requestorVAT}/{clientInternalId}/{clientEmail}
    method: POST
- name: createPaymentRequest
  endpoint:
    path: /api/v1/payment-request
    method: POST
- name: createB2BPayButton
  endpoint:
    path: /api/v1/payment-request/b2b-pay-button
    method: GET
- name: executeB2BPayButton
  endpoint:
    path: /api/v1/payment-request/b2b-pay-button/execute
    method: GET
- name: auto_payment
  endpoint:
    path: /api/v1/autopay-request
    method: POST
    data_selector: responses
    params: {}
- name: credit_note
  endpoint:
    path: /api/v1/credit-note
    method: POST
    data_selector: responses
    params: {}
- name: qr_code
  endpoint:
    path: /api/v1/image-request/slip-image-anonymous
    method: GET
    data_selector: responses
    params: {}
- name: abstract_person_info
  endpoint:
    path: /api/v1/integrator/abstract-person-info
    method: GET
    data_selector: responses
    params: {}
- name: company_info
  endpoint:
    path: /api/v1/integrator/company-info
    method: GET
    data_selector: responses
    params: {}
- name: payment_request_invoice
  endpoint:
    path: /api/v1/payment-request/invoice
    method: POST
    data_selector: invoicePaymentRequest
    params: {}
- name: payment_request_pay_button
  endpoint:
    path: /api/v1/payment-request/pay-button
    method: GET
    data_selector: payButton
    params: {}
- name: payment_request_pay_button_execute
  endpoint:
    path: /api/v1/payment-request/pay-button/execute
    method: GET
    data_selector: executePayButton
    params: {}
- name: payment_request
  endpoint:
    path: /payment-request/sct
    method: POST
    data_selector: schema
    params: {}
- name: trusted_payment
  endpoint:
    path: /payment-request/trustedPayment
    method: POST
    data_selector: schema
    params: {}
- name: peppol_outbound_documents
  endpoint:
    path: /peppol/outbound-documents
    method: POST
    data_selector: schema
    params: {}
- name: registered_participants
  endpoint:
    path: /peppol/registered-participants
    method: GET
    data_selector: schema
    params: {}
- name: registration_status
  endpoint:
    path: /peppol/registered-participants/{identifier}
    method: GET
    data_selector: schema
    params: {}
- name: person_info
  endpoint:
    path: /api/v1/integrator/person-info
    method: GET
    data_selector: schema
    params:
      email: john.doe@yopmail.com
- name: invoice_document_list
  endpoint:
    path: /api/v1/invoice-getDocumentList
    method: GET
    data_selector: schema
    params:
      billId: ''
- name: invoice_request
  endpoint:
    path: /api/v1/invoice-request
    method: POST
    data_selector: schema
    params:
      invoiceCreationRequest: ''
- name: invoice_qr_image
  endpoint:
    path: /api/v1/invoice-request/qr-image/{uuid}
    method: GET
    data_selector: schema
    params:
      uuid: ''
      format: QR
      imageFormat: PNG
      language: en
      secondaryLanguage: ''
      size: 250
- name: invoice_send_doc
  endpoint:
    path: /api/v1/invoice-sendDoc
    method: POST
    data_selector: schema
    params:
      document: ''
      name: ''
      comment: ''
      uuid: ''
- name: invoice_send_doc_with_biller_id
  endpoint:
    path: /api/v1/invoice-sendDocWithBillerId
    method: POST
    data_selector: schema
    params:
      billId: ''
      document: ''
      comment: ''
      name: ''
      requesterID: ''
- name: company_kyc
  endpoint:
    path: /api/v1/kyc/company
    method: POST
    data_selector: schema
    params:
      companyCustomerKYCInfo: ''
- name: contracts_for_company
  endpoint:
    path: /api/v1/kyc/contractsForCompany
    method: GET
    data_selector: schema
    params:
      language: EN
- name: contracts_for_person
  endpoint:
    path: /api/v1/kyc/contractsForPerson
    method: GET
    data_selector: schema
    params: {}
- name: contracts
  endpoint:
    path: /api/v1/kyc/document
    method: POST
    data_selector: schema
    params: {}
- name: kyc_document
  endpoint:
    path: /api/v1/kyc/idDocument/extractData
    method: POST
    data_selector: schema
    params: {}
- name: payment_request
  endpoint:
    path: /api/v1/payment-request
    method: POST
    data_selector: schema
    params: {}
- name: transferCompany
  endpoint:
    path: /api/v1/sdd/transferCompany
    method: POST
    data_selector: null
    params: {}
- name: transferPerson
  endpoint:
    path: /api/v1/sdd/transferPerson
    method: POST
    data_selector: null
    params: {}
- name: shortLink
  endpoint:
    path: /api/v1/shortLink
    method: POST
    data_selector: null
    params: {}
- name: confirmation-based
  endpoint:
    path: /api/v1/transfers/confirmation-based
    method: POST
    data_selector: null
    params: {}
- name: getConfirmationBased
  endpoint:
    path: /api/v1/transfers/confirmation-based/{uuid}
    method: GET
    data_selector: null
    params: {}
- name: updateConfirmationBased
  endpoint:
    path: /api/v1/transfers/confirmation-based/{uuid}
    method: POST
    data_selector: null
    params: {}
- name: partialExecution
  endpoint:
    path: /api/v1/transfers/confirmation-based/{uuid}/partialExecution
    method: POST
    data_selector: null
    params: {}
- name: payments
  endpoint:
    path: /api/v1/transfers/confirmation-based/{uuid}/payments
    method: POST
    data_selector: null
    params: {}
- name: execute
  endpoint:
    path: /api/v1/transfers/execute
    method: POST
    data_selector: null
    params: {}
- name: time-based
  endpoint:
    path: /api/v1/transfers/time-based
    method: POST
    data_selector: null
    params: {}
- name: getTimeBased
  endpoint:
    path: /api/v1/transfers/time-based/{uuid}
    method: GET
    data_selector: null
    params: {}
- name: updateTimeBased
  endpoint:
    path: /api/v1/transfers/time-based/{uuid}
    method: POST
    data_selector: null
    params: {}
- name: webhook
  endpoint:
    path: /api/v1/webhook
    method: GET
    data_selector: null
    params: {}
- name: registerWebhook
  endpoint:
    path: /api/v1/webhook
    method: POST
    data_selector: null
    params: {}
- name: configuration
  endpoint:
    path: /api/v1/webhook/configuration
    method: POST
    data_selector: null
    params: {}
- name: invoice_payment_request
  endpoint:
    path: /api/v1/payment-request/invoice
    method: POST
    data_selector: responses
    params: {}
- name: pay_button
  endpoint:
    path: /api/v1/payment-request/pay-button
    method: GET
    data_selector: responses
    params: {}
- name: execute_pay_button
  endpoint:
    path: /api/v1/payment-request/pay-button/execute
    method: GET
    data_selector: responses
    params: {}
- name: setWebHookConfiguration
  endpoint:
    path: /api/v1/webhook
    method: PUT
    data_selector: success
    params: {}
- name: deleteWebHook
  endpoint:
    path: /api/v1/webhook/{type}
    method: DELETE
    data_selector: success
    params: {}
- name: CompanySDDConfiguration
  endpoint:
    path: /api/v1/company_sdd_configuration
    method: POST
    data_selector: configuration
    params:
      creditorVatNumber: BE0000000097
      customerInternalId: TEST12345
      debtorIBAN: BE40251230861709
- name: payment_request_sct
  endpoint:
    path: /api/v1/payment-request/sct
    method: POST
    data_selector: body
    params: {}
- name: payment_request_trusted
  endpoint:
    path: /api/v1/payment-request/trustedPayment
    method: POST
    data_selector: body
    params: {}
- name: peppol_outbound_documents
  endpoint:
    path: /api/v1/peppol/outbound-documents
    method: POST
    data_selector: body
    params: {}
- name: peppol_registered_participants
  endpoint:
    path: /api/v1/peppol/registered-participants
    method: GET
    data_selector: body
    params: {}
- name: peppol_registered_participants_register
  endpoint:
    path: /api/v1/peppol/registered-participants
    method: POST
    data_selector: body
    params: {}
- name: peppol_registered_participant_status
  endpoint:
    path: /api/v1/peppol/registered-participants/{identifier}
    method: GET
    data_selector: body
    params: {}
- name: peppol_registered_participant_unregister
  endpoint:
    path: /api/v1/peppol/registered-participants/{identifier}
    method: DELETE
    data_selector: body
    params: {}
- name: peppol_remote_participant_supported_document_types
  endpoint:
    path: /api/v1/peppol/remote-participants/{identifier}/supported-document-types
    method: GET
    data_selector: body
    params: {}
- name: refund
  endpoint:
    path: /api/v1/refund
    method: POST
    data_selector: body
    params: {}
- name: invoice
  endpoint:
    path: /invoices
    method: POST
    data_selector: data
    params: {}
- name: transferCompany
  endpoint:
    path: /api/v1/sdd/transferCompany
    method: POST
    data_selector: schema
    params: {}
- name: transferPerson
  endpoint:
    path: /api/v1/sdd/transferPerson
    method: POST
    data_selector: schema
    params: {}
- name: shortLink
  endpoint:
    path: /api/v1/shortLink
    method: POST
    data_selector: schema
    params: {}
- name: confirmationBased
  endpoint:
    path: /api/v1/transfers/confirmation-based
    method: POST
    data_selector: schema
    params: {}
- name: confirmationBasedByUuid
  endpoint:
    path: /api/v1/transfers/confirmation-based/{uuid}
    method: GET
    data_selector: schema
    params: {}
- name: executeTransfer
  endpoint:
    path: /api/v1/transfers/execute
    method: POST
    data_selector: schema
    params: {}
- name: timeBased
  endpoint:
    path: /api/v1/transfers/time-based
    method: POST
    data_selector: schema
    params: {}
- name: webhook
  endpoint:
    path: /api/v1/webhook
    method: GET
    data_selector: schema
    params: {}
- name: InvoiceCreationRequest
  endpoint:
    path: /InvoiceCreationRequest
    method: POST
    data_selector: InvoiceCreationRequest
- name: InvoicePaymentRequest
  endpoint:
    path: /InvoicePaymentRequest
    method: POST
    data_selector: InvoicePaymentRequest
- name: MercuriusParticipantRegistrationRequest
  endpoint:
    path: /MercuriusParticipantRegistrationRequest
    method: POST
    data_selector: MercuriusParticipantRegistrationRequest
- name: MinimalPersonKYCInfo
  endpoint:
    path: /MinimalPersonKYCInfo
    method: POST
    data_selector: MinimalPersonKYCInfo
- name: PaymentCreationRequest
  endpoint:
    path: /PaymentCreationRequest
    method: POST
    data_selector: PaymentCreationRequest
- name: setWebHookConfiguration
  endpoint:
    path: /api/v1/webhook/configuration
    method: PUT
    data_selector: info
    params: {}
- name: deleteWebHook
  endpoint:
    path: /api/v1/webhook/{type}
    method: DELETE
    data_selector: info
    params: {}
- name: PeppolParticipantRegistrationRequest
  endpoint:
    path: /peppol/participant/registration
    method: POST
    data_selector: participant
    params: {}
- name: PeppolRegisteredParticipant
  endpoint:
    path: /peppol/participant/registered
    method: GET
    data_selector: participant
    params: {}
- name: PeppolResult
  endpoint:
    path: /peppol/result
    method: GET
    data_selector: result
    params: {}
- name: PersonCustomerKYCInfo
  endpoint:
    path: /customer/kyc/info
    method: POST
    data_selector: customerKYC
    params: {}
- name: PersonKYCInfo
  endpoint:
    path: /person/kyc/info
    method: POST
    data_selector: personKYC
    params: {}
- name: PersonSDDConfiguration
  endpoint:
    path: /sdd/configuration
    method: POST
    data_selector: sddConfig
    params: {}
- name: RefundRequest
  endpoint:
    path: /refund/request
    method: POST
    data_selector: refund
    params: {}
- name: SctPaymentRequestInput
  endpoint:
    path: /payment/sct/request
    method: POST
    data_selector: paymentRequest
    params: {}
- name: CreditNoteCreationRequest
  endpoint:
    path: /credit-note/creation
    method: POST
    data_selector: data
    params: {}
- name: CustomerInfo
  endpoint:
    path: /customer/info
    method: GET
    data_selector: data
    params: {}
- name: DetailedCompanyInfo
  endpoint:
    path: /company/details
    method: GET
    data_selector: data
    params: {}
- name: DocumentDetails
  endpoint:
    path: /document/details
    method: GET
    data_selector: data
    params: {}
- name: InvoiceCreationRequest
  endpoint:
    path: /invoice/creation
    method: POST
    data_selector: data
    params: {}
- name: trusted_payment_request
  endpoint:
    path: /payment-request
    method: POST
    data_selector: data
    params: {}
- name: trusted_payment_contribution
  endpoint:
    path: /payment/contribution
    method: POST
    data_selector: data
    params: {}
- name: InvoiceCreationRequest
  endpoint:
    path: /InvoiceCreationRequest
    method: POST
    data_selector: properties
- name: InvoicePaymentRequest
  endpoint:
    path: /InvoicePaymentRequest
    method: POST
    data_selector: properties
- name: MercuriusParticipantRegistrationRequest
  endpoint:
    path: /MercuriusParticipantRegistrationRequest
    method: POST
    data_selector: properties
- name: MinimalPersonKYCInfo
  endpoint:
    path: /MinimalPersonKYCInfo
    method: POST
    data_selector: properties
- name: Payment
  endpoint:
    path: /Payment
    method: POST
    data_selector: properties
- name: PaymentCreationRequest
  endpoint:
    path: /PaymentCreationRequest
    method: POST
    data_selector: properties
- name: PeppolParticipantRegistrationRequest
  endpoint:
    path: /peppol/participant/registration
    method: POST
    data_selector: registration
    params: {}
- name: RefundRequest
  endpoint:
    path: /refunds
    method: POST
    data_selector: refund
    params: {}
- name: SctPaymentRequestInput
  endpoint:
    path: /payments/sct
    method: POST
    data_selector: payment
    params: {}
- name: SctPaymentRequestInput
  endpoint:
    path: /payment-request/input
    method: POST
    data_selector: input
    params: {}
- name: SctPaymentRequestResponse
  endpoint:
    path: /payment-request/response
    method: GET
    data_selector: response
    params: {}
notes:
- API version 1.2.2
- The document file will not be stored, and data will stay in the EU.
- This API is used to create and manage payment requests and QR code generation.
- Some fields have mandatory constraints and maximum lengths.
- Ensure all URLs are correctly formatted
- Check for required fields based on the payment method selected
- Uses basic authentication — login and password are the same as chosen during registration.
- In case of 2-way ssl authentication, the identification will be done using the public
  certificate sent during the ssl handshake.
- If you prefer using SSL 2-way authentication please contact technical support
- The login and password for authentication are the same as chosen during registration.
- Uses HTTP Basic authentication mechanism.
- For 2-way ssl authentication, identification is done using the public certificate
  sent during the ssl handshake.
- Uses OAuth2 with refresh token — requires setup of connected app in Digiteal
- The pack chosen by the company to register. The DISCOVER pack is free but it does
  not enable collecting funds. The first pack to enable collecting funds is the START
  pack.
- Requires setup of connected app in Digiteal.
- Ensure to include necessary parameters for payment requests
- Long URLs must adhere to specified format
errors:
- '400 Bad Request: Bad request'
- '401 Unauthorized: Unauthorized'
- '403 Forbidden: Forbidden'
- '404 Not Found: Not Found'
- '500 Internal Server Error: Internal server error occurred'
- '500 Internal Server Error: Internal server error occured'
- '400 Bad Request: Invalid parameters'
- '401 Unauthorized: Invalid authentication'
- '403 Forbidden: Access denied'
- '404 Not Found: Resource not found'
- '500 Internal Server Error: An internal error occurred'
- 400 Bad Request
- 401 Unauthorized
- 403 Forbidden
- 404 Not Found
- 500 Internal Server Error
- 'INVALID_PARAMETER: Error message'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'string: Error message'
- '400 Bad Request: Verify the request parameters'
- '401 Unauthorized: Check authentication details'
- '404 Not Found: Endpoint does not exist'
- '400 BAD_REQUEST: Some input field is missing or wrong values were provided. The
  error message will describe which values are incorrect.'
- '401 UNAUTHORIZED_ACCES: There were no or incorrect credentials provided.'
- '415 UNSUPPORTED_MEDIA: The uploaded document has an unsupported media type. The
  service only accepts PDF files.'
- 'INCORRECT_CONTENT: only correct json is supported'
- 'MISSING_INPUT_FIELDS: The ''name of the missing field'' is provided in the error
  message.'
- 'UNSUPPORTED_REQUEST_METHOD: This service only accepts POST.'
- 'UNAUTHORIZED_ACCES: There were no or incorrect credentials provided.'
- 'UNSUPPORTED_MEDIA: POST only consumes application/json'
- 'FORBIDDEN: Not allowed to perform this action.'
- 200 OK
- '400 BANK_ACCOUNT_NOT_FOUND : provided information does not match any of your bank
  accounts in our system.'
- '400 BANK_ACCOUNT_NOT_PROVIDED : typically when you forget to send us the BIC and
  IBAN and have more than one account. The system does not know the one that should
  be used.'
- '400 CUSTOMER_INFORMATION_MISSING : mandatory fields are missing. The mandatory
  field are indicated: ex: Missing fields for the customer creation. [customerInternalId]'
- '400 INVOICE_INFORMATION_MISSING : mandatory fields for the invoice request are
  missing.'
- '400 INVOICE_PUBLISHED : Invoices that are flagged as PUBLISHED cannot be updated.'
- '400 CONTENT_MISSING : There was no input present in the request.'
- '400 INVALID_FORMAT : The specified format is incorrect'
- '400 INVALID_PURPOSE : The purpose is not ISO compliant'
- '401 UNAUTHORIZED_ACCES : there were no or incorrect credentials provided'
- '403 ISSUER_CANNOT_EMIT : is thrown when your profile is not yet activated or invalid.'
- '415 UNSUPPORTED_MEDIA : The service is called using an unsupported media type.
  Only JSON is supported when performing a POST.'
- '500 GENERAL : An internal server error occured.'
- '400: Bad request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '500: Internal server error occured'
- '500: Internal server error occurred'
- 'INVALID_PARAMETER: Check the parameters sent in the request'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '400 Bad Request: Check the input data for formatting errors'
- '401 Unauthorized: Validate OAuth token'
- '404 Not Found: Verify endpoint URLs'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.digiteal.eu/
source_metadata: null
