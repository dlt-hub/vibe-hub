resources:
- name: channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: channel
- name: server
  endpoint:
    path: /servers/{server.id}
    method: GET
    data_selector: server
- name: emoji
  endpoint:
    path: /emojis
    method: GET
    data_selector: emojis
- name: member
  endpoint:
    path: /guilds/{guild.id}/members
    method: GET
    data_selector: members
- name: channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /users/@me
    method: GET
    data_selector: data
    params: {}
- name: change_nickname
  endpoint:
    path: /change_nickname
    method: POST
- name: edit_channel
  endpoint:
    path: /edit_channel
    method: POST
- name: move_channel
  endpoint:
    path: /move_channel
    method: POST
- name: create_channel
  endpoint:
    path: /create_channel
    method: POST
- name: delete_channel
  endpoint:
    path: /delete_channel
    method: DELETE
- name: leave_server
  endpoint:
    path: /leave_server
    method: POST
- name: delete_server
  endpoint:
    path: /delete_server
    method: DELETE
- name: create_server
  endpoint:
    path: /create_server
    method: POST
- name: edit_server
  endpoint:
    path: /edit_server
    method: POST
- name: get_bans
  endpoint:
    path: /get_bans
    method: GET
- name: prune_members
  endpoint:
    path: /prune_members
    method: POST
- name: estimate_pruned_members
  endpoint:
    path: /estimate_pruned_members
    method: GET
- name: create_custom_emoji
  endpoint:
    path: /create_custom_emoji
    method: POST
- name: delete_custom_emoji
  endpoint:
    path: /delete_custom_emoji
    method: DELETE
- name: edit_custom_emoji
  endpoint:
    path: /edit_custom_emoji
    method: POST
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
- name: get_invite
  endpoint:
    path: /get_invite
    method: GET
- name: message
  endpoint:
    path: /discord/messages
    method: GET
    data_selector: messages
- name: reaction
  endpoint:
    path: /discord/reactions
    method: GET
    data_selector: reactions
- name: embed
  endpoint:
    path: /discord/embeds
    method: GET
    data_selector: embeds
- name: call_message
  endpoint:
    path: /discord/call_messages
    method: GET
    data_selector: call_messages
- name: group_call
  endpoint:
    path: /discord/group_calls
    method: GET
    data_selector: group_calls
- name: server
  endpoint:
    path: /servers
    method: GET
    data_selector: servers
- name: member
  endpoint:
    path: /members
    method: GET
    data_selector: members
- name: voice_state
  endpoint:
    path: /voice_states
    method: GET
    data_selector: voice_states
- name: game
  endpoint:
    path: /games
    method: GET
    data_selector: games
- name: Emoji
  endpoint:
    path: /discord/emojis
    method: GET
    data_selector: emojis
- name: Role
  endpoint:
    path: /discord/roles
    method: GET
    data_selector: roles
- name: Permissions
  endpoint:
    path: /discord/permissions
    method: GET
    data_selector: permissions
- name: PermissionOverwrite
  endpoint:
    path: /discord/permission_overwrites
    method: GET
    data_selector: permission_overwrites
- name: invites_from
  endpoint:
    path: /invites_from
    method: GET
    data_selector: invites
- name: accept_invite
  endpoint:
    path: /accept_invite
    method: POST
    data_selector: invite
- name: delete_invite
  endpoint:
    path: /delete_invite
    method: DELETE
    data_selector: invite
- name: move_role
  endpoint:
    path: /move_role
    method: POST
    data_selector: role
- name: edit_role
  endpoint:
    path: /edit_role
    method: PATCH
    data_selector: role
- name: delete_role
  endpoint:
    path: /delete_role
    method: DELETE
    data_selector: role
- name: add_roles
  endpoint:
    path: /add_roles
    method: POST
    data_selector: roles
- name: remove_roles
  endpoint:
    path: /remove_roles
    method: POST
    data_selector: roles
- name: replace_roles
  endpoint:
    path: /replace_roles
    method: POST
    data_selector: roles
- name: create_role
  endpoint:
    path: /create_role
    method: POST
    data_selector: role
- name: edit_channel_permissions
  endpoint:
    path: /edit_channel_permissions
    method: PATCH
    data_selector: permissions
- name: delete_channel_permissions
  endpoint:
    path: /delete_channel_permissions
    method: DELETE
    data_selector: permissions
- name: move_member
  endpoint:
    path: /move_member
    method: POST
    data_selector: member
- name: join_voice_channel
  endpoint:
    path: /join_voice_channel
    method: POST
    data_selector: voice_channel
- name: is_voice_connected
  endpoint:
    path: /is_voice_connected
    method: GET
    data_selector: voice_status
- name: voice_client_in
  endpoint:
    path: /voice_client_in
    method: GET
    data_selector: voice_client
- name: group_call_in
  endpoint:
    path: /group_call_in
    method: GET
    data_selector: group_call
- name: application_info
  endpoint:
    path: /application_info
    method: GET
    data_selector: application_info
- name: get_user_info
  endpoint:
    path: /get_user_info
    method: GET
    data_selector: user_info
- name: VoiceClient
  endpoint:
    path: /voice/client
    method: GET
    data_selector: client_data
- name: on_message
  endpoint:
    path: /on_message
    method: GET
    data_selector: message
- name: on_member_join
  endpoint:
    path: /on_member_join
    method: GET
    data_selector: member
- name: on_member_remove
  endpoint:
    path: /on_member_remove
    method: GET
    data_selector: member
- name: Message
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
- name: Reaction
  endpoint:
    path: /reactions
    method: GET
    data_selector: reactions
- name: Embed
  endpoint:
    path: /embeds
    method: GET
    data_selector: embeds
- name: CallMessage
  endpoint:
    path: /callmessages
    method: GET
    data_selector: call_messages
- name: GroupCall
  endpoint:
    path: /groupcalls
    method: GET
    data_selector: group_calls
- name: server
  endpoint:
    path: /servers
    method: GET
    data_selector: servers
- name: member
  endpoint:
    path: /members
    method: GET
    data_selector: members
- name: voice_state
  endpoint:
    path: /voice_state
    method: GET
    data_selector: voice_states
- name: game
  endpoint:
    path: /games
    method: GET
    data_selector: games
notes:
- The API does not require authentication.
- Usable only by bot accounts.
- Requires user authentication for certain actions
- Rate limits apply to all API calls
- Bot accounts generally are not allowed to create servers. See Discord’s official
  documentation for more info.
- In order to play audio, you must have loaded the opus library through opus.load_opus().
- Not loading a library leads to voice not working.
- It is strongly recommended that the logging module is configured, as no errors or
  warnings will be output if it is not set up.
- All the events must be a coroutine.
- If an event handler raises an exception, on_error() will be called to handle it.
- It is heavily recommended that you update to Python 3.5 or higher as it simplifies
  asyncio massively.
- Some attributes may return None depending on context.
- discord.py logs errors and debug information via the logging python module. It is
  strongly recommended that the logging module is configured, as no errors or warnings
  will be output if it is not set up.
- More advanced setups are possible with the logging module.
errors:
- '404 Not Found: The resource was not found.'
- '403 Forbidden: You lack permissions to access this resource.'
- 'Forbidden: You do not have proper permissions to delete the message.'
- 'HTTPException: Deleting the message failed.'
- 'ClientException: The number of messages to delete is less than 2 or more than 100.'
- '401 Unauthorized: Invalid token or expired token'
- '403 Forbidden: Missing permissions'
- '404 Not Found: Resource not found'
- 'HTTPException: Sending the file failed.'
- 'HTTPException: Purging the messages failed.'
- 'NotFound: The specified channel or message was not found.'
- 'Forbidden: You do not have permissions to change the nickname.'
- 'HTTPException: Changing the nickname failed.'
- 'InvalidArgument: If the position is less than 0 or greater than the number of channels.'
- 'NotFound: The invite has expired or is invalid.'
- 'HTTPException: Getting the invite failed.'
- 'Forbidden: You do not have proper permissions to get the information.'
- 'InvalidArgument: If the game parameter is not Game or None.'
- 'InvalidArgument: If position is 0, or role is server.default_role.'
- 'HTTPException: If moving the role failed, or you are of too low rank to move the
  role.'
- 'Forbidden: You do not have permissions to change the role.'
- 'HTTPException: Editing the role failed.'
- 'Forbidden: You do not have permissions to delete the role.'
- 'HTTPException: Deleting the role failed.'
- 'Forbidden: You do not have permissions to add roles.'
- 'HTTPException: Adding roles failed.'
- 'Forbidden: You do not have permissions to revoke roles.'
- 'HTTPException: Removing roles failed.'
- 'Forbidden: You do not have permissions to edit channel specific permissions.'
- 'NotFound: The channel specified was not found.'
- 'HTTPException: Editing channel specific permissions failed.'
- 'InvalidArgument: The overwrite parameter was not of type PermissionOverwrite.'
- 'InvalidArgument: The channel provided is not a voice channel.'
- 'HTTPException: Moving the member failed.'
- 'Forbidden: You do not have permissions to move the member.'
- 'ClientException: Exception that’s thrown when an operation in the Client fails.'
- 'LoginFailure: Exception that’s thrown when the Client.login() function fails to
  log you in from improper credentials or some other misc. failure.'
- 'HTTPException: Exception that’s thrown when an HTTP request operation fails.'
- 'Forbidden: Exception that’s thrown for when status code 403 occurs.'
- 'NotFound: Exception that’s thrown for when status code 404 occurs.'
- '403 Forbidden: Access denied.'
- '404 NotFound: The requested resource was not found.'
- 'InvalidArgument: An argument to a function is invalid.'
auth_info:
  mentioned_objects:
  - User
  - Server
  - Channel
  - Role
  - PermissionOverwrite
  - Permissions
client:
  base_url: https://discord.com/api
  auth:
    type: oauth2
    flow: authorization_code
    token_url: https://discord.com/api/oauth2/token
    client_id: '{{ dlt.secrets[''discord_client_id''] }}'
    client_secret: '{{ dlt.secrets[''discord_client_secret''] }}'
    location: header
    header_name: Authorization
source_metadata: null
