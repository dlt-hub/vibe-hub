resources:
- name: announcement
  endpoint:
    path: /api/v1/announcement
    method: GET
- name: order-book
  endpoint:
    path: /api/v1/orderBook
    method: GET
- name: user
  endpoint:
    path: /api/v1/user
    method: GET
- name: announcement
  endpoint:
    path: /announcement
    method: GET
- name: api-key
  endpoint:
    path: /api-key
    method: GET
- name: chat
  endpoint:
    path: /chat
    method: GET
- name: leaderboard
  endpoint:
    path: /leaderboard
    method: GET
- name: global-notification
  endpoint:
    path: /global-notification
    method: GET
- name: order-book
  endpoint:
    path: /orderBook
    method: GET
- name: user
  endpoint:
    path: /user
    method: GET
- name: user-event
  endpoint:
    path: /user-event
    method: GET
- name: address
  endpoint:
    path: /address
    method: GET
- name: address-config
  endpoint:
    path: /address-config
    method: GET
- name: user-affiliates
  endpoint:
    path: /user-affiliates
    method: GET
- name: guild
  endpoint:
    path: /guild
    method: GET
- name: porl
  endpoint:
    path: /porl
    method: GET
- name: referral-code
  endpoint:
    path: /referral-code
    method: GET
- name: execution
  endpoint:
    path: /execution
    method: GET
- name: funding
  endpoint:
    path: /funding
    method: GET
- name: order
  endpoint:
    path: /order
    method: GET
- name: position
  endpoint:
    path: /position
    method: GET
- name: user-get-wallet
  endpoint:
    path: /user/get-wallet
    method: GET
- name: account-range
  endpoint:
    path: /account-range
    method: GET
- name: new-order
  endpoint:
    path: /new-order
    method: POST
- name: announcement
  endpoint:
    path: /api/v1/announcement
    method: GET
    data_selector: data
- name: user
  endpoint:
    path: /api/v1/user
    method: GET
    data_selector: data
- name: order-book
  endpoint:
    path: /api/v1/orderBook
    method: GET
    data_selector: data
- name: chat
  endpoint:
    path: /api/v1/chat
    method: GET
- name: leaderboard
  endpoint:
    path: /api/v1/leaderboard
    method: GET
- name: user
  endpoint:
    path: /api/v1/user
    method: GET
- name: order
  endpoint:
    path: /api/v1/order
    method: GET
- name: quote
  endpoint:
    path: /quote
    method: GET
    data_selector: records
- name: trade
  endpoint:
    path: /trade
    method: GET
    data_selector: records
- name: orderBook
  endpoint:
    path: /orderBook
    method: GET
    data_selector: records
- name: settlement
  endpoint:
    path: /settlement
    method: GET
    data_selector: records
- name: stats
  endpoint:
    path: /stats
    method: GET
    data_selector: records
- name: chat
  endpoint:
    path: /api/v1/chat
    method: GET
- name: leaderboard
  endpoint:
    path: /api/v1/leaderboard
    method: GET
- name: order-book
  endpoint:
    path: /api/v1/orderBook
    method: GET
- name: user
  endpoint:
    path: /api/v1/user
    method: GET
- name: user-event
  endpoint:
    path: /api/v1/userEvent
    method: GET
- name: address
  endpoint:
    path: /api/v1/address
    method: GET
- name: address-config
  endpoint:
    path: /api/v1/address-config
    method: GET
- name: user-affiliates
  endpoint:
    path: /api/v1/user-affiliates
    method: GET
- name: guild
  endpoint:
    path: /api/v1/guild
    method: GET
- name: porl
  endpoint:
    path: /api/v1/porl
    method: GET
- name: referral-code
  endpoint:
    path: /api/v1/referral-code
    method: GET
- name: execution
  endpoint:
    path: /api/v1/execution
    method: GET
- name: funding
  endpoint:
    path: /api/v1/funding
    method: GET
- name: order
  endpoint:
    path: /api/v1/order
    method: GET
- name: position
  endpoint:
    path: /api/v1/position
    method: GET
- name: wallet
  endpoint:
    path: /api/v1/user/get-wallet
    method: GET
- name: account-range
  endpoint:
    path: /api/v1/account-range
    method: GET
- name: new-order
  endpoint:
    path: /api/v1/new-order
    method: POST
- name: announcement
  endpoint:
    path: /api/v1/announcement
    method: GET
    data_selector: data
    params: {}
- name: urgent_announcement
  endpoint:
    path: /api/v1/announcement/urgent
    method: GET
    data_selector: data
    params: {}
- name: leaderboard
  endpoint:
    path: /leaderboard
    method: GET
    data_selector: data
- name: leaderboard
  endpoint:
    path: /api/v1/leaderboard
    method: GET
    data_selector: data
- name: leaderboard_get_name
  endpoint:
    path: /api/v1/leaderboard/get_name
    method: GET
    data_selector: data
- name: global_notification
  endpoint:
    path: /api/v1/globalNotification
    method: GET
    data_selector: data
    params: {}
- name: GlobalNotification
  endpoint:
    path: /api/explorer/global-notification
    method: GET
    data_selector: notifications
- name: order_book
  endpoint:
    path: /api/v1/orderBook
    method: GET
    data_selector: result
- name: order_book
  endpoint:
    path: /api/v1/orderBook
    method: GET
    data_selector: result
- name: user_get_deposit_address
  endpoint:
    path: /user/depositAddress
    method: GET
    data_selector: data
    params: {}
- name: user_get
  endpoint:
    path: /user
    method: GET
    data_selector: data
    params: {}
- name: user_event
  endpoint:
    path: /api/v1/userEvent
    method: GET
    data_selector: data
    params: {}
- name: user_deposit_address
  endpoint:
    path: /user/depositAddress
    method: GET
- name: user_deposit_address_info
  endpoint:
    path: /user/depositAddress/info
    method: GET
- name: user_request_withdrawal
  endpoint:
    path: /user/requestWithdrawal
    method: POST
- name: user_get
  endpoint:
    path: /user
    method: GET
- name: UserEvent
  endpoint:
    path: /api/v1/userEvent
    method: GET
    data_selector: data
- name: address
  endpoint:
    path: /api/v1/address
    method: GET
    data_selector: data
    params: {}
- name: address
  endpoint:
    path: /api/v1/address
    method: GET
- name: address_config
  endpoint:
    path: /api/v1/address/config
    method: GET
- name: address_config
  endpoint:
    path: /api/v1/address/config
    method: GET
- name: user_affiliates
  endpoint:
    path: /api/v1/user/affiliates
    method: GET
- name: user_affiliates
  endpoint:
    path: /api/v1/user/affiliates
    method: GET
    data_selector: data
- name: guild
  endpoint:
    path: /guild
    method: GET
    data_selector: data
    params: {}
- name: guild
  endpoint:
    path: /guild
    method: GET
- name: porl_nonce
  endpoint:
    path: /porl-get-nonce
    method: GET
- name: porl_snapshots
  endpoint:
    path: /porl-get-snapshots
    method: GET
- name: referral_code
  endpoint:
    path: /api/explorer/referral-code
    method: GET
    data_selector: records
- name: referral_code
  endpoint:
    path: /referral-code
    method: GET
    data_selector: data
- name: execution
  endpoint:
    path: /api/v1/execution
    method: GET
    data_selector: Array
    params: {}
- name: execution
  endpoint:
    path: /api/v1/execution
    method: GET
    data_selector: records
    params: {}
- name: funding_history
  endpoint:
    path: /api/v1/funding
    method: GET
    data_selector: records
    params:
      count: 100
      start: 0
      reverse: false
- name: funding
  endpoint:
    path: /api/v1/funding
    method: GET
    data_selector: records
    params:
      symbol: query
      filter: query
      columns: query
      count: query
      start: query
      reverse: query
      startTime: query
      endTime: query
- name: order
  endpoint:
    path: /api/v1/order
    method: GET
    data_selector: '[]'
    params:
      targetAccountId: ''
      symbol: ''
      filter: '{}'
      columns: ''
      count: 100
      start: 0
      reverse: false
      startTime: ''
      endTime: ''
      targetAccountIds[]: ''
      targetAccountIds: ''
- name: order
  endpoint:
    path: /api/v1/order
    method: GET
    data_selector: Array
    params: {}
- name: position
  endpoint:
    path: /api/v1/position
    method: GET
    data_selector: records
    params: {}
- name: position
  endpoint:
    path: /api/v1/position
    method: GET
    data_selector: '[]'
    params: {}
- name: wallet
  endpoint:
    path: /api/v1/user/wallet
    method: GET
    data_selector: account
    params:
      currency: XBt
- name: wallet
  endpoint:
    path: /api/v1/user/wallet
    method: GET
    data_selector: account
    params:
      currency: XBt
- name: account_range
  endpoint:
    path: /api/v1/broker/accountRange
    method: GET
    data_selector: ''
- name: account_range
  endpoint:
    path: /api/v1/broker/accountRange
    method: GET
    data_selector: response
    params: {}
- name: order
  endpoint:
    path: /api/v2/order
    method: POST
    data_selector: string
- name: order
  endpoint:
    path: /api/v2/order
    method: POST
    data_selector: response
    params: {}
- name: announcement
  endpoint:
    path: /announcement
    method: GET
- name: urgent_announcement
  endpoint:
    path: /announcement/urgent
    method: GET
- name: announcement
  endpoint:
    path: /api/v1/announcement
    method: GET
    data_selector: data
    params: {}
- name: urgent_announcement
  endpoint:
    path: /api/v1/announcement/urgent
    method: GET
    data_selector: data
    params: {}
- name: announcement
  endpoint:
    path: /announcement
    method: GET
    data_selector: data
    params: {}
- name: urgent_announcement
  endpoint:
    path: /announcement/urgent
    method: GET
    data_selector: data
    params: {}
- name: announcement
  endpoint:
    path: /api/v1/announcement
    method: GET
    data_selector: Array
    params: {}
- name: urgent_announcements
  endpoint:
    path: /api/v1/announcement/urgent
    method: GET
    data_selector: array
- name: User
  endpoint:
    path: /user
    method: GET
- name: OrderBook
  endpoint:
    path: /orderBook
    method: GET
- name: announcement
  endpoint:
    path: /announcement
    method: GET
    data_selector: data
- name: urgent_announcement
  endpoint:
    path: /announcement/urgent
    method: GET
    data_selector: data
- name: announcement
  endpoint:
    path: /api/v1/announcement
    method: GET
    data_selector: Array
    params: {}
- name: GlobalNotification
  endpoint:
    path: /api-explorer/global-notification-get
    method: GET
    data_selector: notifications
- name: urgent_announcements
  endpoint:
    path: /api/v1/announcement/urgent
    method: GET
    data_selector: Array
- name: OrderBook
  endpoint:
    path: /api/v1/orderBook
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /api/v1/user
    method: GET
    data_selector: data
    params: {}
- name: deposit_address
  endpoint:
    path: /api/v1/user/depositAddress
    method: GET
    data_selector: data
    params: {}
- name: GlobalNotification
  endpoint:
    path: /api-explorer/global-notification
    method: GET
    data_selector: GlobalNotifications
- name: address
  endpoint:
    path: /api/explorer/address
    method: GET
    data_selector: addresses
- name: OrderBook
  endpoint:
    path: /api/v1/orderBook
    method: GET
- name: AddressConfig
  endpoint:
    path: /api/explorer/address-config
    method: GET
- name: user_affiliates
  endpoint:
    path: /api-explorer/user-affiliates-get
    method: GET
- name: UserEvent
  endpoint:
    path: /api/v1/userEvent
    method: GET
    data_selector: data
- name: guild
  endpoint:
    path: /api/v1/guild
    method: GET
    data_selector: data
    params: {}
- name: address
  endpoint:
    path: /address
    method: GET
    data_selector: data
    params: {}
- name: Proof of Reserves Nonce
  endpoint:
    path: /api-explorer/porl-get-nonce
    method: GET
- name: Proof of Reserves historical snapshots
  endpoint:
    path: /api-explorer/porl-get-snapshots
    method: GET
- name: AddressConfig
  endpoint:
    path: /api-explorer/address-config
    method: GET
- name: ReferralCode
  endpoint:
    path: /api-explorer/referral-code
    method: GET
    data_selector: records
- name: user_affiliates
  endpoint:
    path: /api/v1/user/affiliates
    method: GET
    data_selector: data
    params: {}
- name: execution
  endpoint:
    path: /api/v1/execution
    method: GET
    data_selector: records
    params: {}
- name: execution
  endpoint:
    path: /v1/execution
    method: GET
    data_selector: records
    params:
      count: 100
      start: 0
      reverse: false
      filter: '{}'
- name: guild
  endpoint:
    path: /api/explorer/guild-get
    method: GET
- name: edit_guild
  endpoint:
    path: /api/explorer/guild-edit
    method: POST
- name: create_guild
  endpoint:
    path: /api/explorer/guild-new
    method: POST
- name: toggle_share_trades
  endpoint:
    path: /api/explorer/guild-share-trades
    method: POST
- name: leave_guild
  endpoint:
    path: /api/explorer/guild-leave
    method: POST
- name: kick_member
  endpoint:
    path: /api/explorer/guild-kick
    method: POST
- name: request_join_guild
  endpoint:
    path: /api/explorer/guild-join
    method: POST
- name: archive_guild
  endpoint:
    path: /api/explorer/guild-archive
    method: POST
- name: execution
  endpoint:
    path: /api/v1/execution
    method: GET
    data_selector: records
    params: {}
- name: Proof of Reserves Nonce
  endpoint:
    path: /api-explorer/porl-get-nonce
    method: GET
- name: Proof of Reserves Historical Snapshots
  endpoint:
    path: /api-explorer/porl-get-snapshots
    method: GET
- name: ReferralCode
  endpoint:
    path: /api-explorer/referral-code
    method: GET
    data_selector: records
- name: execution
  endpoint:
    path: /execution
    method: GET
    data_selector: records
    params:
      count: 100
      start: 0
      reverse: false
      filter: '{}'
- name: execution
  endpoint:
    path: /api/v1/execution
    method: GET
    data_selector: records
    params:
      count: 100
      start: 0
      reverse: false
      filter: '{}'
- name: execution
  endpoint:
    path: /api/v1/execution
    method: GET
    data_selector: error
    params: {}
- name: execution
  endpoint:
    path: /v1/execution
    method: GET
    data_selector: results
    params:
      count: 100
      start: 0
      reverse: false
      filter: '{}'
- name: trade_history
  endpoint:
    path: /api/v1/execution/tradeHistory
    method: GET
    data_selector: records
    params: {}
- name: execution_history
  endpoint:
    path: /api/v1/user/executionHistory
    method: GET
    data_selector: executionHistory
    params:
      symbol: string
      timestamp: string
- name: execution
  endpoint:
    path: /api/v1/execution
    method: GET
    data_selector: records
    params: {}
- name: execution
  endpoint:
    path: /execution
    method: GET
    data_selector: records
    params:
      count: 100
      start: 0
      reverse: false
      filter: '{}'
- name: quote_fill_ratio
  endpoint:
    path: /api/v1/user/quoteFillRatio
    method: GET
    data_selector: records
    params:
      targetAccountId: ''
- name: execution
  endpoint:
    path: /api/v1/execution
    method: GET
    data_selector: records
    params: {}
- name: trading_volume
  endpoint:
    path: /api/v1/user/tradingVolume
    method: GET
    data_selector: advUsd
    params: {}
- name: trade_history
  endpoint:
    path: /api/v1/execution/tradeHistory
    method: GET
    data_selector: records
    params: {}
- name: trading_volume_ranking
  endpoint:
    path: /api/v1/userStats/volumeRank
    method: GET
    data_selector: data
    params:
      startTime: required
      endTime: required
      volumeType: total
      symbol: all
- name: execution_history
  endpoint:
    path: /api/v1/user/executionHistory
    method: GET
    data_selector: records
    params:
      symbol: required
      timestamp: required
- name: referral_code
  endpoint:
    path: /api/v1/referralCode/code/:code
    method: GET
- name: funding_history
  endpoint:
    path: /api/v1/funding
    method: GET
    data_selector: records
    params:
      count: 100
      start: 0
      reverse: false
- name: funding_history
  endpoint:
    path: /api/v1/funding
    method: GET
    data_selector: records
    params:
      count: 100
      start: 0
      reverse: false
      filter: '{}'
- name: quote_fill_ratio
  endpoint:
    path: /api/v1/user/quoteFillRatio
    method: GET
    data_selector: '[]'
    params:
      targetAccountId: string
- name: funding
  endpoint:
    path: /api/v1/funding
    method: GET
    data_selector: records
    params: {}
- name: trading_volume
  endpoint:
    path: /api/v1/user/tradingVolume
    method: GET
    data_selector: advUsd
    params: {}
- name: instrument
  endpoint:
    path: /instrument
    method: GET
    data_selector: records
    params:
      count: 100
      start: 0
- name: trading_volume_ranking
  endpoint:
    path: /api/v1/userStats/volumeRank
    method: GET
    data_selector: records
    params:
      startTime: required
      endTime: required
      volumeType: total
      symbol: all
- name: instrument
  endpoint:
    path: /api/v1/instrument
    method: GET
    data_selector: array
- name: referral_code
  endpoint:
    path: /api/v1/referralCode/code/:code
    method: GET
    data_selector: response
- name: active_instruments
  endpoint:
    path: /v1/instrument/active
    method: GET
- name: funding_history
  endpoint:
    path: /api/v1/funding
    method: GET
    data_selector: records
    params:
      count: 100
      start: 0
      reverse: false
- name: active_instruments
  endpoint:
    path: /api/v1/instrument/active
    method: GET
- name: price_indices
  endpoint:
    path: /v1/instrument/indices
    method: GET
    data_selector: records
- name: funding_history
  endpoint:
    path: /api/v1/funding
    method: GET
    data_selector: records
    params:
      count: 100
      start: 0
      reverse: false
- name: active_price_indices
  endpoint:
    path: /instrument/activeAndIndices
    method: GET
    data_selector: records
- name: funding
  endpoint:
    path: /api/v1/funding
    method: GET
    data_selector: ''
    params:
      symbol: ''
      filter: '{}'
      columns: ''
      count: 100
      start: 0
      reverse: false
      startTime: ''
      endTime: ''
- name: active_price_indices
  endpoint:
    path: /api/v1/instrument/activeAndIndices
    method: GET
    data_selector: Array
- name: instrument
  endpoint:
    path: /v1/instrument
    method: GET
    data_selector: data
    params:
      filter: '{}'
      count: 100
      start: 0
      reverse: false
- name: active_intervals
  endpoint:
    path: /api/v1/instrument/activeIntervals
    method: GET
    data_selector: intervals
    params: {}
- name: instrument
  endpoint:
    path: /api/v1/instrument
    method: GET
    data_selector: Array
    params: {}
- name: active_instruments
  endpoint:
    path: /v1/instrument/active
    method: GET
- name: compositeIndex
  endpoint:
    path: /api/v1/instrument/compositeIndex
    method: GET
    data_selector: records
    params: {}
- name: active_instruments
  endpoint:
    path: /api/v1/instrument/active
    method: GET
    data_selector: records
- name: instrument_usd_volume
  endpoint:
    path: /api/v1/instrument/usdVolume
    method: GET
    data_selector: records
    params: {}
- name: price_indices
  endpoint:
    path: /api/v1/instrument/indices
    method: GET
    data_selector: data
    params: {}
- name: active_price_indices
  endpoint:
    path: /instrument/activeAndIndices
    method: GET
    data_selector: records
- name: insurance_fund_history
  endpoint:
    path: /insurance
    method: GET
    params:
      count: 100
      start: 0
      reverse: false
- name: liquidation_orders
  endpoint:
    path: /api/v1/liquidation
    method: GET
    data_selector: records
    params:
      count: 100
      start: 0
      reverse: false
- name: active_intervals
  endpoint:
    path: /api/v1/instrument/activeIntervals
    method: GET
    data_selector: intervals
    params: {}
- name: get_quotes
  endpoint:
    path: /api/v1/quote
    method: GET
    data_selector: quotes
    params:
      count: 100
      start: 0
      reverse: false
      filter: '{}'
- name: composite_index
  endpoint:
    path: /api/v1/instrument/compositeIndex
    method: GET
    data_selector: records
    params: {}
- name: quotes_bucketed
  endpoint:
    path: /api/v1/quote/bucketed
    method: GET
    data_selector: '[].timestamp'
    params: {}
- name: settlement
  endpoint:
    path: /api/v1/settlement
    method: GET
    data_selector: records
    params: {}
- name: usd_volume
  endpoint:
    path: /api/v1/instrument/usdVolume
    method: GET
    data_selector: records
    params: {}
- name: exchange_stats
  endpoint:
    path: /api/v1/stats
    method: GET
    data_selector: Array
    params: {}
- name: insurance_fund_history
  endpoint:
    path: /api/v1/insurance
    method: GET
    data_selector: records
    params:
      count: 100
      start: 0
      reverse: false
- name: historical_exchange_stats
  endpoint:
    path: /api/v1/stats/history
    method: GET
    data_selector: Array
    params: {}
- name: liquidation_orders
  endpoint:
    path: /api/v1/liquidation
    method: GET
    data_selector: records
    params:
      count: 100
      start: 0
      reverse: false
- name: exchange_stats_usd
  endpoint:
    path: /api/v1/stats/historyUSD
    method: GET
    data_selector: records
- name: quote
  endpoint:
    path: /api/v1/quote
    method: GET
    data_selector: ''
    params: {}
- name: trade
  endpoint:
    path: /api/v1/trade
    method: GET
    data_selector: records
    params:
      count: 100
      start: 0
      reverse: false
      filter: '{}'
- name: quotes_bucketed
  endpoint:
    path: /api/v1/quote/bucketed
    method: GET
    data_selector: records
    params: {}
- name: previous_trades
  endpoint:
    path: /api/v1/trade/bucketed
    method: GET
    data_selector: records
    params:
      binSize: 1m
      partial: false
      filter: '{}'
      count: 100
      start: 0
      reverse: false
- name: settlement
  endpoint:
    path: /api/v1/settlement
    method: GET
    data_selector: records
    params:
      count: 100
      start: 0
      reverse: false
      filter: '{}'
- name: exchange_stats
  endpoint:
    path: /api/v1/stats
    method: GET
    data_selector: records
- name: order
  endpoint:
    path: /api/v1/order
    method: GET
    data_selector: records
    params: {}
- name: order
  endpoint:
    path: /api/v1/order
    method: GET
    data_selector: orders
    params: {}
- name: historical_exchange_stats
  endpoint:
    path: /stats/history
    method: GET
    data_selector: array
    params: {}
- name: exchange_stats_usd
  endpoint:
    path: /api/v1/stats/historyUSD
    method: GET
    data_selector: records
- name: order
  endpoint:
    path: /api/v1/order
    method: GET
    data_selector: records
    params:
      targetAccountId: int64
      symbol: string
      filter: string
      columns: string
      count: int32
      start: int32
      reverse: boolean
      startTime: string
      endTime: string
      targetAccountIds[]: string[]
      targetAccountIds: string
- name: trades
  endpoint:
    path: /api/v1/trade
    method: GET
    data_selector: records
    params: {}
- name: amend_order
  endpoint:
    path: /api/v1/order
    method: PUT
    data_selector: order
    params: {}
- name: previous_trades
  endpoint:
    path: /trade/bucketed
    method: GET
    data_selector: records
    params:
      binSize: 1m
      partial: 'false'
      count: 100
      start: 0
      reverse: 'false'
- name: order
  endpoint:
    path: /order
    method: POST
    data_selector: order
    params: {}
- name: amend_order
  endpoint:
    path: /order
    method: PUT
    data_selector: order
    params: {}
- name: order
  endpoint:
    path: /api/v1/order
    method: POST
    data_selector: string
    params: {}
- name: order
  endpoint:
    path: /api/v1/order
    method: GET
    data_selector: Array
    params:
      targetAccountId: ''
      symbol: ''
      filter: '{}'
      count: 100
      start: 0
      reverse: false
      startTime: ''
      endTime: ''
      targetAccountIds[]: ''
      targetAccountIds: ''
- name: order
  endpoint:
    path: /api/v1/order
    method: DELETE
    data_selector: Array
    params: {}
- name: order
  endpoint:
    path: /api/v1/order
    method: GET
    data_selector: Array
    params:
      targetAccountId: int64
      symbol: string
      filter: string
      columns: string
      count: int32
      start: int32
      reverse: boolean
      startTime: string
      endTime: string
      targetAccountIds[]: string[]
      targetAccountIds: string
- name: cancel_all_orders
  endpoint:
    path: /api/v1/order/all
    method: DELETE
- name: order
  endpoint:
    path: /api/v1/order
    method: GET
    data_selector: records
    params: {}
- name: amend_order
  endpoint:
    path: /api/v1/order
    method: PUT
    data_selector: response
    params: {}
- name: cancel_all_after
  endpoint:
    path: /api/v1/order/cancelAllAfter
    method: POST
    data_selector: cancelTime
    params: {}
- name: position
  endpoint:
    path: /api/v1/position
    method: GET
    data_selector: records
    params: {}
- name: order
  endpoint:
    path: /order
    method: POST
    data_selector: order
    params: {}
- name: order_amend
  endpoint:
    path: /order
    method: PUT
    data_selector: order
    params: {}
- name: position
  endpoint:
    path: /position
    method: GET
    data_selector: records
    params: {}
- name: order
  endpoint:
    path: /api/v1/order
    method: POST
    data_selector: order
    params: {}
- name: position
  endpoint:
    path: /api/v1/position
    method: GET
    data_selector: Array
    params: {}
- name: cancel_order
  endpoint:
    path: /api/v1/order
    method: DELETE
    data_selector: Array
    params: {}
- name: position
  endpoint:
    path: /position
    method: GET
    data_selector: records
    params:
      filter: '{}'
- name: cancel_all_orders
  endpoint:
    path: /api/v1/order/all
    method: DELETE
- name: position
  endpoint:
    path: /api/v1/position
    method: GET
    data_selector: Array
    params: {}
- name: cancel_all_after_order
  endpoint:
    path: /api/v1/order/cancelAllAfter
    method: POST
    data_selector: cancelTime
    params: {}
- name: isolate_margin
  endpoint:
    path: /api/v1/position/isolate
    method: POST
    data_selector: string
    params: {}
- name: position
  endpoint:
    path: /api/v1/position
    method: GET
    data_selector: '[]'
    params: {}
- name: risk_limit
  endpoint:
    path: /api/v1/position/riskLimit
    method: POST
    data_selector: response
    params: {}
- name: position
  endpoint:
    path: /position
    method: GET
    data_selector: records
    params:
      filter: '{}'
- name: transfer_margin
  endpoint:
    path: /api/v1/position/transferMargin
    method: POST
    data_selector: application/json
    params: {}
- name: position
  endpoint:
    path: /api/v1/position
    method: GET
    data_selector: positions
- name: choose_leverage
  endpoint:
    path: /api/v1/position/leverage
    method: POST
    data_selector: application/json
    params: {}
- name: position
  endpoint:
    path: /position
    method: GET
    data_selector: positions
    params:
      filter: '{}'
- name: choose_leverage_for_position
  endpoint:
    path: /api/v1/position/crossLeverage
    method: POST
    data_selector: response
    params: {}
- name: position
  endpoint:
    path: /api/v1/position
    method: GET
    data_selector: Array
    params: {}
- name: margining_mode
  endpoint:
    path: /api/v1/user/marginingMode
    method: POST
    data_selector: account
    params: {}
- name: isolate_margin
  endpoint:
    path: /api/v1/position/isolate
    method: POST
    data_selector: string
    params: {}
- name: margining_mode
  endpoint:
    path: /api/v1/user/marginingMode
    method: GET
    data_selector: records
    params: {}
- name: risk_limit
  endpoint:
    path: /api/v1/position/riskLimit
    method: POST
    data_selector: riskLimit
    params: {}
- name: transfer_margin
  endpoint:
    path: /api/v1/position/transferMargin
    method: POST
    data_selector: response
    params: {}
- name: user_margin
  endpoint:
    path: /api/v1/user/margin
    method: GET
    data_selector: '[]'
    params:
      currency: XBt
      targetAccountId: int64
      targetAccountIds[]: string[]
- name: choose_leverage
  endpoint:
    path: /api/v1/position/leverage
    method: POST
    data_selector: string
    params: {}
- name: wallet
  endpoint:
    path: /api/v1/user/wallet
    method: GET
    data_selector: account
    params:
      currency: XBt
- name: choose_leverage_for_a_position
  endpoint:
    path: /api/v1/position/crossLeverage
    method: POST
    data_selector: ''
    params: {}
- name: wallet
  endpoint:
    path: /api/v1/user/wallet
    method: GET
    data_selector: account
    params:
      currency: XBt
- name: margining_mode
  endpoint:
    path: /api/v1/user/marginingMode
    method: POST
    data_selector: account
    params: {}
- name: wallet
  endpoint:
    path: /v1/user/wallet
    method: GET
    data_selector: data
- name: Get Margining Mode
  endpoint:
    path: /api/v1/user/marginingMode
    method: GET
    data_selector: account
    params: {}
- name: wallet_history
  endpoint:
    path: /api/v1/user/walletHistory
    method: GET
    data_selector: records
    params:
      currency: XBt
      count: '10000'
      start: '0'
      reverse: 'true'
      filter: '{}'
- name: user_margin
  endpoint:
    path: /api/v1/user/margin
    method: GET
    data_selector: '[]'
    params:
      currency: XBt
      targetAccountId: ''
      targetAccountIds[]: ''
      targetAccountIds: ''
- name: wallet_summary
  endpoint:
    path: /api/v1/user/walletSummary
    method: GET
    data_selector: array
    params:
      currency: XBt
- name: wallet
  endpoint:
    path: /api/v1/user/wallet
    method: GET
    data_selector: account
    params:
      currency: XBt
- name: staking
  endpoint:
    path: /api/v1/user/staking
    method: GET
    data_selector: records
    params:
      currency: BMEx
- name: wallet
  endpoint:
    path: /api/v1/user/wallet
    method: GET
    data_selector: ''
    params:
      currency: XBt
- name: unstaking_requests
  endpoint:
    path: /api/v1/user/unstakingRequests
    method: GET
    data_selector: records
    params:
      status: required
- name: wallet
  endpoint:
    path: /v1/user/wallet
    method: GET
    data_selector: records
    params: {}
- name: staking_instruments
  endpoint:
    path: /api/v1/user/staking/instruments
    method: GET
    data_selector: records
    params: {}
- name: wallet_history
  endpoint:
    path: /user/walletHistory
    method: GET
    data_selector: Array
    params:
      currency: XBt
      startTime: ''
      endTime: ''
      targetAccountId: ''
      targetAccountIds[]: ''
      filter: '{}'
      reverse: true
      count: 10000
      start: 0
- name: wallet_transfer
  endpoint:
    path: /api/v1/user/walletTransfer
    method: POST
    data_selector: ''
    params: {}
- name: wallet_summary
  endpoint:
    path: /api/v1/user/walletSummary
    method: GET
    data_selector: records
    params: {}
- name: Get CSA
  endpoint:
    path: /api/v1/user/csa
    method: GET
    data_selector: records
- name: staking
  endpoint:
    path: /api/v1/user/staking
    method: GET
    data_selector: records
    params:
      currency: BMEx
- name: assets_config
  endpoint:
    path: /api/v1/wallet/assets
    method: GET
    data_selector: records
- name: unstaking_requests
  endpoint:
    path: /api/v1/user/unstakingRequests
    method: GET
    data_selector: records
    params:
      status: required
- name: networks
  endpoint:
    path: /api/v1/wallet/networks
    method: GET
- name: conversion_haircuts
  endpoint:
    path: /api/v1/wallet/haircuts
    method: GET
    data_selector: '[]'
- name: staking_instruments
  endpoint:
    path: /api/v1/user/staking/instruments
    method: GET
    data_selector: array
    params: {}
- name: wallet_currencies
  endpoint:
    path: /api/v1/wallet/currencies
    method: GET
    data_selector: array
    params: {}
- name: walletTransfer
  endpoint:
    path: /api/v1/user/walletTransfer
    method: POST
    data_selector: application/json
    params: {}
- name: account_range
  endpoint:
    path: /api/v1/broker/accountRange
    method: GET
    data_selector: records
- name: user_csa
  endpoint:
    path: /api/v1/user/csa
    method: GET
    data_selector: Array
    params: {}
- name: account_range
  endpoint:
    path: /api/v1/broker/accountRange
    method: GET
    data_selector: records
    params: {}
- name: account_range
  endpoint:
    path: /api/v1/broker/accountRange
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /api/v1/wallet/assets
    method: GET
    data_selector: '[]'
- name: create_account
  endpoint:
    path: /api/v1/broker/accounts/create
    method: POST
    data_selector: null
    params: {}
- name: networks
  endpoint:
    path: /api/v1/wallet/networks
    method: GET
    data_selector: ''
- name: update_account
  endpoint:
    path: /api/v1/broker/accounts/update
    method: POST
    data_selector: account
    params: {}
- name: conversion_haircuts
  endpoint:
    path: /api/v1/wallet/haircuts
    method: GET
    data_selector: '[]'
- name: addNewAccount
  endpoint:
    path: /api/v1/broker/addNewAccount
    method: POST
    data_selector: createdAccountId
    params: {}
- name: wallet_currencies
  endpoint:
    path: /api/v1/wallet/currencies
    method: GET
    data_selector: records
- name: account_range
  endpoint:
    path: /api/v1/broker/accountRange
    method: GET
    data_selector: apiBrokerId
    params: {}
- name: changeAccountRestriction
  endpoint:
    path: /api/v1/broker/changeAccountRestriction
    method: POST
    data_selector: ''
    params: {}
- name: account_range
  endpoint:
    path: /api/v1/broker/accountRange
    method: GET
    data_selector: records
- name: create_brokerage_fee_tier
  endpoint:
    path: /broker/discounts/createBrokerageFeeTier
    method: POST
    data_selector: response
    params: {}
- name: account_range
  endpoint:
    path: /api/v1/broker/accountRange
    method: GET
    data_selector: records
- name: update_brokerage_fee
  endpoint:
    path: /api/v1/broker/discounts/updateBrokerFeeAccountMap
    method: POST
    data_selector: account, feeAccount
    params: {}
- name: create_account
  endpoint:
    path: /api/v1/broker/accounts/create
    method: POST
    data_selector: account
    params: {}
- name: update_brokerage_fee_tier
  endpoint:
    path: /api/v1/broker/discounts/updateBrokerageFeeTier
    method: POST
    data_selector: data
    params: {}
- name: update_account
  endpoint:
    path: /api/v1/broker/accounts/update
    method: POST
    data_selector: account
    params: {}
- name: update_derivatives_fee_discount
  endpoint:
    path: /api/v1/broker/discounts/updateDerivativesFeeDiscount
    method: POST
    data_selector: response
    params: {}
- name: add_new_account
  endpoint:
    path: /api/v1/broker/addNewAccount
    method: POST
    data_selector: createdAccountId
    params: {}
- name: update_spot_fee_discount
  endpoint:
    path: /api/v1/broker/discounts/updateSpotFeeDiscount
    method: POST
    data_selector: empty
    params: {}
- name: change_account_restriction
  endpoint:
    path: /api/v1/broker/changeAccountRestriction
    method: POST
    data_selector: response
    params: {}
- name: updateUserFeeTierMap
  endpoint:
    path: /api/v1/broker/discounts/updateUserFeeTierMap
    method: POST
    data_selector: account, feeGroupID
    params: {}
- name: create_brokerage_fee_tier
  endpoint:
    path: /api/v1/broker/discounts/createBrokerageFeeTier
    method: POST
    data_selector: application/json
- name: create_order
  endpoint:
    path: /v2/order
    method: POST
    data_selector: data
- name: amend_order
  endpoint:
    path: /v1/order
    method: PUT
    data_selector: data
- name: update_broker_fee
  endpoint:
    path: /api/v1/broker/discounts/updateBrokerFeeAccountMap
    method: POST
    data_selector: application/json
- name: order
  endpoint:
    path: /api/v2/order
    method: POST
    data_selector: order
    params: {}
- name: update_brokerage_fee_tier
  endpoint:
    path: /api/v1/broker/discounts/updateBrokerageFeeTier
    method: POST
    data_selector: account
    params: {}
- name: order
  endpoint:
    path: /order
    method: POST
    data_selector: order
    params: {}
- name: order_amend
  endpoint:
    path: /order
    method: PUT
    data_selector: order
    params: {}
- name: update_derivatives_fee_discount
  endpoint:
    path: /api/v1/broker/discounts/updateDerivativesFeeDiscount
    method: POST
    data_selector: response
    params: {}
- name: order
  endpoint:
    path: /api/v2/order
    method: POST
    data_selector: ''
    params: {}
- name: update_spot_fee_discount
  endpoint:
    path: /api/v1/broker/discounts/updateSpotFeeDiscount
    method: POST
    data_selector: empty
- name: order
  endpoint:
    path: /order
    method: POST
    data_selector: order
    params: {}
- name: amend_order
  endpoint:
    path: /order
    method: PUT
    data_selector: order
    params: {}
- name: update_user_fee_tier_map
  endpoint:
    path: /api/v1/broker/discounts/updateUserFeeTierMap
    method: POST
    data_selector: account, feeGroupID
    params: {}
- name: order
  endpoint:
    path: /api/v2/order
    method: POST
    data_selector: string
- name: order
  endpoint:
    path: /api/v2/order
    method: PUT
    data_selector: response
    params: {}
- name: order
  endpoint:
    path: /v2/order
    method: POST
    data_selector: order
    params: {}
- name: amend_order
  endpoint:
    path: /v1/order
    method: PUT
    data_selector: order
    params: {}
- name: cancel_order
  endpoint:
    path: /api/v2/order
    method: DELETE
    data_selector: response
    params: {}
- name: order
  endpoint:
    path: /api/v2/order
    method: POST
    data_selector: order
    params: {}
- name: cancel_all_orders
  endpoint:
    path: /api/v2/order/all
    method: DELETE
    data_selector: orders
    params: {}
- name: order
  endpoint:
    path: /order
    method: POST
    data_selector: result
    params: {}
- name: create_contingent_orders
  endpoint:
    path: /api/v2/order/bulkorder
    method: POST
    data_selector: newOrders
- name: order
  endpoint:
    path: /api/v2/order
    method: POST
    data_selector: order
    params: {}
- name: cancel_all_after
  endpoint:
    path: /api/v2/order/cancelAllAfter
    method: POST
    data_selector: cancelTime
    params: {}
- name: new_order
  endpoint:
    path: /order
    method: POST
    data_selector: order
    params: {}
- name: amend_order
  endpoint:
    path: /order
    method: PUT
    data_selector: order
    params: {}
- name: order
  endpoint:
    path: /api/v2/order
    method: POST
    data_selector: string
    params: {}
- name: order
  endpoint:
    path: /api/v2/order
    method: PUT
    data_selector: string
    params: {}
- name: chat_pinned_message
  endpoint:
    path: /chat/get-pinned-message
    method: GET
- name: chat_message
  endpoint:
    path: /chat/get
    method: GET
- name: chat_send_message
  endpoint:
    path: /chat/new
    method: POST
- name: chat_channels
  endpoint:
    path: /chat/get-channels
    method: GET
- name: chat_connected_users
  endpoint:
    path: /chat/get-connected
    method: GET
- name: leaderboard
  endpoint:
    path: /leaderboard
    method: GET
    data_selector: data
    params: {}
- name: cancel_order
  endpoint:
    path: /api/v2/order
    method: DELETE
    data_selector: '[]'
- name: OrderBook
  endpoint:
    path: /api/v1/orderBook
    method: GET
    data_selector: orderBook
- name: cancel_all_orders
  endpoint:
    path: /api/v2/order/all
    method: DELETE
    data_selector: array
    params: {}
- name: bulk_order
  endpoint:
    path: /api/v2/order/bulkorder
    method: POST
    data_selector: newOrders
- name: cancel_all_after_order
  endpoint:
    path: /api/v2/order/cancelAllAfter
    method: POST
    data_selector: cancelTime
    params: {}
- name: get_deposit_address
  endpoint:
    path: /api/v1/user/depositAddress
    method: GET
- name: get_deposit_address_information
  endpoint:
    path: /api/v1/user/depositAddressInformation
    method: GET
- name: create_unstaking_requests
  endpoint:
    path: /api/v1/user/unstakingRequests
    method: POST
- name: delete_unstaking_requests
  endpoint:
    path: /api/v1/user/unstakingRequests
    method: DELETE
- name: request_withdrawal
  endpoint:
    path: /api/v1/user/requestWithdrawal
    method: POST
- name: cancel_pending_withdrawal
  endpoint:
    path: /api/v1/user/cancelPendingWithdrawal
    method: DELETE
- name: cancel_withdrawal
  endpoint:
    path: /api/v1/user/cancelWithdrawal
    method: DELETE
- name: confirm_withdrawal
  endpoint:
    path: /api/v1/user/confirmWithdrawal
    method: GET
- name: confirm_email
  endpoint:
    path: /api/v1/user/confirm
    method: POST
- name: get_affiliate_status
  endpoint:
    path: /api/v1/user/affiliateStatus
    method: GET
- name: check_referral_code
  endpoint:
    path: /api/v1/user/checkReferralCode
    method: GET
- name: get_quote_value_ratio
  endpoint:
    path: /api/v1/user/getQuoteValueRatio
    method: GET
- name: create_sub_account
  endpoint:
    path: /api/v1/user/createSubAccount
    method: POST
- name: create_independent_subaccount
  endpoint:
    path: /api/v1/user/createIndependentSubaccount
    method: POST
- name: update_sub_account
  endpoint:
    path: /api/v1/user/updateSubAccount
    method: PUT
- name: get_wallet_transfer_accounts
  endpoint:
    path: /api/v1/user/getWalletTransferAccounts
    method: GET
- name: logout
  endpoint:
    path: /api/v1/user/logout
    method: POST
- name: save_preferences
  endpoint:
    path: /api/v1/user/savePreferences
    method: POST
- name: get_user
  endpoint:
    path: /api/v1/user/get
    method: GET
- name: get_user_commission
  endpoint:
    path: /api/v1/user/commission
    method: GET
- name: register_communication_token
  endpoint:
    path: /api/v1/user/communicationToken
    method: POST
- name: price_data
  endpoint:
    path: /quote
    method: GET
    data_selector: data
    params: {}
- name: trade_data
  endpoint:
    path: /trade
    method: GET
    data_selector: data
    params: {}
- name: order_book_data
  endpoint:
    path: /orderBook
    method: GET
    data_selector: data
    params: {}
- name: settlement_data
  endpoint:
    path: /settlement
    method: GET
    data_selector: data
    params: {}
- name: stats_history
  endpoint:
    path: /stats/history
    method: GET
    data_selector: data
    params: {}
- name: user_event
  endpoint:
    path: /api/v1/user/event
    method: GET
    data_selector: records
- name: address
  endpoint:
    path: /api/v1/address
    method: GET
    data_selector: records
- name: chat_channel
  endpoint:
    path: /chat/channels
    method: GET
- name: chat_message
  endpoint:
    path: /chat/messages
    method: GET
- name: chat_pinned_message
  endpoint:
    path: /chat/pinned
    method: GET
- name: chat_connected_users
  endpoint:
    path: /chat/connected
    method: GET
- name: address_config
  endpoint:
    path: /address/config
    method: GET
    data_selector: data
    params: {}
- name: leaderboard
  endpoint:
    path: /api/v1/leaderboard
    method: GET
- name: current_leaderboard
  endpoint:
    path: /api/v1/leaderboard/current
    method: GET
- name: leaderboard_name
  endpoint:
    path: /api/v1/leaderboard/name
    method: GET
- name: user_affiliates
  endpoint:
    path: /api/explorer/user-affiliates
    method: GET
- name: global_notification
  endpoint:
    path: /globalNotification
    method: GET
    data_selector: data
    params: {}
- name: guild
  endpoint:
    path: /guild
    method: GET
    data_selector: data
    params: {}
- name: order_book
  endpoint:
    path: /orderBook
    method: GET
    data_selector: data
    params: {}
- name: nonce
  endpoint:
    path: /porl/get-nonce
    method: GET
- name: snapshots
  endpoint:
    path: /porl/get-snapshots
    method: GET
- name: referral_code
  endpoint:
    path: /referralCode
    method: GET
    data_selector: data
    params: {}
- name: get_deposit_address
  endpoint:
    path: /api/v1/user/depositAddress
    method: GET
    data_selector: address
- name: get_affiliate_status
  endpoint:
    path: /api/v1/user/affiliateStatus
    method: GET
    data_selector: status
- name: check_referral_code
  endpoint:
    path: /api/v1/user/checkReferralCode
    method: GET
    data_selector: discount
- name: get_quote_value_ratio
  endpoint:
    path: /api/v1/user/getQuoteValueRatio
    method: GET
    data_selector: ratio
- name: create_sub_account
  endpoint:
    path: /api/v1/user/createSubAccount
    method: POST
    data_selector: subAccount
- name: get_user_commission
  endpoint:
    path: /api/v1/user/commission
    method: GET
    data_selector: commission
- name: user_event
  endpoint:
    path: /api/v1/userEvent
    method: GET
    data_selector: data
    params: {}
- name: address
  endpoint:
    path: /api/v1/address
    method: GET
- name: address_config
  endpoint:
    path: /api/v1/address/config
    method: GET
- name: apiKey
  endpoint:
    path: /api/v1/apiKey
    method: GET
    data_selector: records
    params:
      reverse: 'false'
- name: user_affiliates
  endpoint:
    path: /api/v1/user/affiliates
    method: GET
    data_selector: data
    params: {}
- name: guild
  endpoint:
    path: /guild
    method: GET
- name: chat
  endpoint:
    path: /chat
    method: GET
    data_selector: data
    params: {}
- name: connected_users
  endpoint:
    path: /chat/get-connected
    method: GET
    data_selector: data
    params: {}
- name: pinned_message
  endpoint:
    path: /chat/get-pinned-message
    method: GET
    data_selector: data
    params: {}
- name: channels
  endpoint:
    path: /chat/get-channels
    method: GET
    data_selector: data
    params: {}
- name: referral_code
  endpoint:
    path: /referralCode
    method: GET
    data_selector: data
    params: {}
- name: leaderboard
  endpoint:
    path: /api/v1/leaderboard
    method: GET
    data_selector: records
- name: leaderboard_name
  endpoint:
    path: /api/v1/leaderboard/get-name
    method: GET
    data_selector: records
- name: global_notification
  endpoint:
    path: /global-notification
    method: GET
    data_selector: data
- name: current_order_book
  endpoint:
    path: /api/v1/orderBook
    method: GET
- name: announcement
  endpoint:
    path: /announcement
    method: GET
- name: user
  endpoint:
    path: /user
    method: GET
- name: apiKey
  endpoint:
    path: /api/v1/apiKey
    method: GET
    data_selector: records
    params:
      reverse: 'false'
- name: chat
  endpoint:
    path: /chat
    method: GET
    data_selector: messages
- name: channels
  endpoint:
    path: /chat/channels
    method: GET
    data_selector: channels
- name: connected_users
  endpoint:
    path: /chat/connected
    method: GET
    data_selector: users
- name: leaderboard
  endpoint:
    path: /leaderboard
    method: GET
- name: GlobalNotification
  endpoint:
    path: /api/explorer/global-notification-get
    method: GET
- name: order_book
  endpoint:
    path: /api/v1/orderBook
    method: GET
    data_selector: result
    params: {}
- name: user_get_deposit_address
  endpoint:
    path: /api/v1/user/get-deposit-address
    method: GET
- name: user_get_deposit_address_information
  endpoint:
    path: /api/v1/user/get-deposit-address-information
    method: GET
- name: user_create_unstaking_requests
  endpoint:
    path: /api/v1/user/create-unstaking-requests
    method: POST
- name: user_delete_unstaking_requests
  endpoint:
    path: /api/v1/user/delete-unstaking-requests
    method: DELETE
- name: user_request_withdrawal
  endpoint:
    path: /api/v1/user/request-withdrawal
    method: POST
- name: user_cancel_pending_withdrawal
  endpoint:
    path: /api/v1/user/cancel-pending-withdrawal
    method: DELETE
- name: user_cancel_withdrawal
  endpoint:
    path: /api/v1/user/cancel-withdrawal
    method: DELETE
- name: user_confirm_withdrawal
  endpoint:
    path: /api/v1/user/confirm-withdrawal
    method: POST
- name: user_confirm
  endpoint:
    path: /api/v1/user/confirm
    method: POST
- name: user_get_affiliate_status
  endpoint:
    path: /api/v1/user/get-affiliate-status
    method: GET
- name: user_check_referral_code
  endpoint:
    path: /api/v1/user/check-referral-code
    method: GET
- name: user_get_quote_value_ratio
  endpoint:
    path: /api/v1/user/get-quote-value-ratio
    method: GET
- name: user_create_sub_account
  endpoint:
    path: /api/v1/user/create-sub-account
    method: POST
- name: user_create_independent_subaccount
  endpoint:
    path: /api/v1/user/create-independent-subaccount
    method: POST
- name: user_update_sub_account
  endpoint:
    path: /api/v1/user/update-sub-account
    method: POST
- name: user_get_wallet_transfer_accounts
  endpoint:
    path: /api/v1/user/get-wallet-transfer-accounts
    method: GET
- name: user_logout
  endpoint:
    path: /api/v1/user/logout
    method: POST
- name: user_save_preferences
  endpoint:
    path: /api/v1/user/save-preferences
    method: POST
- name: user_get
  endpoint:
    path: /api/v1/user/get
    method: GET
- name: user_get_user_commission
  endpoint:
    path: /api/v1/user/get-user-commission
    method: GET
- name: user_communication_token
  endpoint:
    path: /api/v1/user/communication-token
    method: POST
- name: user
  endpoint:
    path: /user
    method: GET
    data_selector: data
    params: {}
- name: withdrawal
  endpoint:
    path: /user/request-withdrawal
    method: POST
    data_selector: data
    params: {}
- name: user_event
  endpoint:
    path: /api/v1/userEvent
    method: GET
    data_selector: data
    params: {}
- name: user_event
  endpoint:
    path: /api/v1/userEvent
    method: GET
    data_selector: data
    params: {}
- name: address
  endpoint:
    path: /api/v1/address
    method: GET
    data_selector: data
    params: {}
- name: address
  endpoint:
    path: /api/v1/address
    method: GET
    data_selector: addresses
- name: address_config
  endpoint:
    path: /api/v1/address/config
    method: GET
    data_selector: settings
    params: {}
- name: address_config
  endpoint:
    path: /address/config
    method: GET
- name: user_affiliates
  endpoint:
    path: /api/v1/user/affiliates
    method: GET
    data_selector: data
    params: {}
- name: user_affiliates
  endpoint:
    path: /user/affiliates
    method: GET
    data_selector: data
- name: guild
  endpoint:
    path: /api/v1/guild
    method: GET
    data_selector: data
    params: {}
- name: guild
  endpoint:
    path: /guild
    method: GET
- name: porl_nonce
  endpoint:
    path: /api/v1/porl/get-nonce
    method: GET
- name: porl_snapshots
  endpoint:
    path: /api/v1/porl/get-snapshots
    method: GET
- name: porl_nonce
  endpoint:
    path: /api/v1/porl/get-nonce
    method: GET
- name: porl_snapshots
  endpoint:
    path: /api/v1/porl/get-snapshots
    method: GET
- name: referral_code
  endpoint:
    path: /referral-code
    method: GET
    data_selector: data
- name: urgent_announcements
  endpoint:
    path: /api/v1/announcement/urgent
    method: GET
    data_selector: records
- name: referral_code
  endpoint:
    path: /referral/code
    method: GET
    data_selector: data
- name: urgent_announcements
  endpoint:
    path: /api/v1/announcement/urgent
    method: GET
notes:
- API key is required for authentication.
- API requires an API key to access.
- Returns the order book for a specific symbol and optional specific depth.
- API keys are required for authentication
- API keys are required for accessing the API.
- API keys are required for accessing the BitMEX API.
- 所有订单都需要一个`symbol`。除非特别说明，所有其他字段都是可选的。
- 有效的`ordType`包括Market, Limit, Stop, StopLimit等。
- API key required for all requests
- API keys are required for authentication.
- API Key is required for authentication.
- Returns all referral codes for the logged-in user
- Create a new referral code
- Check if a referral code is valid
- Get a referral code by ID
- Update an existing referral code
- Delete a referral code
- Get a referral code by code
- API Keys are required for authentication.
- Returns all raw executions for the account including order opens, cancels, and status
  changes.
- This endpoint returns all raw executions including order initiation and cancellation.
- All orders require a `symbol`. All other fields are optional except when otherwise
  specified.
- All orders require a symbol. All other fields are optional except when otherwise
  specified.
- clOrdID is required for tracking orders.
- Use execInst for specific execution instructions.
- Uses API key for authentication
- All orders require a symbol.
- clOrdID will come back as a property on the order and any related executions.
- Requires API key for authentication
- Orders require a 'symbol'.
- API requires API key for authentication
- API key required for access.
- This feature will return no data currently.
- API key required for access
- Specific symbol and optional depth can be used to return the order book.
- API key is required for all endpoints
- Ensure to handle rate limits and errors appropriately.
- API requires an API key for access
- This is a forthcoming feature and currently does not return data.
- Returns the order book for the specified symbol and, if necessary, for a specific
  depth.
- Requires API key for access.
- API key required for authentication
errors:
- '401 Unauthorized: Check API key validity.'
- '404 Not Found: Endpoint not recognized.'
- '401 Unauthorized: Invalid API key'
- '400 Bad Request: Check request parameters'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API key permissions or validity'
- '401 Unauthorized: Check API key'
- '404 Not Found: Endpoint does not exist'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Ensure API key is valid.'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Recheck API key or signature'
- '403 Access Denied: Check permissions'
- '400: 参数错误'
- '401: 未授权'
- '403: 访问被拒绝'
- '404: 未找到'
- '400: Parameter error'
- '401: Unauthorized'
- '403: Access denied'
- '404: Not found'
- '400 Bad Request: Invalid parameters'
- '401 Unauthorized: Invalid API key or signature'
- '403 Forbidden: Access denied'
- '404 Not Found: Resource not found'
- '403: 拒绝访问'
- '400: Bad Request'
- '403: Forbidden'
- '404: Not Found'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '未授权: 访问被拒绝'
- '未找到: 请求的资源未找到'
- '400: Parameter Error'
- '403: Access Denied'
- 'HTTP 403: Forbidden - Check your API key permissions.'
- 'HTTP 404: Not Found - Endpoint does not exist or is incorrect.'
- '403 Forbidden: Check API key permission.'
- '404 Not Found: Verify the endpoint URL.'
- Unauthorized
- Access Denied
- Not Found
- '401 Unauthorized: Проверить OAuth scopes или истечение токена'
- '403 Forbidden: Доступ запрещен'
- '404 Not Found: Не найдено'
- '403 Forbidden: Insufficient permissions'
- '400 Bad Request: Check your query parameters.'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Check your API key or authentication'
- '403 Forbidden: Access denied for the requested resource'
- '404 Not Found: The requested resource could not be found'
- '400 Bad Request: Check parameters'
- '401 Unauthorized: Recheck API key or permissions'
- '403 Access Denied: Ensure proper authentication and permissions'
- '404 Not Found: Check the endpoint URL'
- '400 Bad Request: Invalid query parameters'
- '403 Access Denied: Insufficient permissions'
- 400 Bad Request
- 401 Unauthorized
- 403 Access Denied
- 404 Not Found
- '400'
- '401'
- '403'
- '404'
- 'Unauthorized: Recheck API key or signature'
- 'Access Denied: Check permissions'
- 'Not Found: Verify endpoint'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Check API key and authentication'
- '404 Not Found: Check endpoint URL'
- 'Unauthorized: Recheck API keys or permissions'
- 'Access Denied: Check API key permissions'
- 'Not Found: Verify the endpoint or resource requested'
- '400 Bad Request: Invalid request parameters'
- '403 Forbidden: Access Denied'
- '400 Bad Request: Check query parameters'
- '401 Unauthorized: Check API key and signature'
- '403 Access Denied: Check API key permissions'
- '404 Not Found: Verify endpoint path'
- '401 Unauthorized: Access Denied'
- '401 Unauthorized: Verify API key and signature'
- '403 Forbidden: Check account permissions'
- '403 Forbidden: Not allowed'
- '401 Unauthorized: Recheck API key validity'
- '403 Access Denied: Check account permissions'
- '404 Not Found: Verify the endpoint path'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: API key is missing or invalid.'
- '403 Forbidden: You do not have permission to perform this action.'
- '403 Forbidden: Ensure you have appropriate permissions'
- '403 Forbidden: Action not permitted'
- '404 Not Found: Verify endpoint URL'
- 'Unauthorized: Access Denied'
- '403 Access Denied: No permission for this action'
- '404 Not Found: Endpoint not found'
- '400: 요청이 성공적으로 완료되었습니다.'
- '401: 권한이 없습니다'
- '403: 접근이 거부되었습니다'
- '404: 찾을 수 없음'
- '403 Access Denied: Check user permissions'
- '400: 매개 변수 오류'
- '404 Not Found: Resource does not exist'
- '403 Access Denied: Check permissions for the API key'
- '400 Bad Request: Parameter Error'
- '404 Not Found: Resource Not Found'
- '401 Unauthorized: Доступ запрещен'
- 403 Forbidden
- '401 Unauthorized: Check API key and permissions'
- '401 Unauthorized: Check API key permissions'
- '404 Not Found: Endpoint doesn''t exist'
- '429 Too Many Requests: Rate limit exceeded'
- 'NoSuchKey: The specified key does not exist.'
- '401 Unauthorized: Check your API key and permissions'
- '400: Ошибка параметра'
- '401: Доступ запрещен'
- '404: Страница не найдена'
- '404 Not Found: The specified key does not exist.'
auth_info:
  mentioned_objects:
  - apiKey
  - apiSignature
  - apiExpires
  - api-key
  - api-signature
  - api-expires
client:
  base_url: www.bitmex.com
  auth:
    type: apiKey
    location: header
  headers:
    Accept: application/json
source_metadata: null
