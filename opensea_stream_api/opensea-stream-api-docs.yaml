resources:
- name: stream_events
  endpoint:
    path: /socket/websocket
    method: GET
- name: nft
  endpoint:
    path: /nft
    method: GET
    data_selector: records
- name: marketplace
  endpoint:
    path: /offer
    method: POST
    data_selector: records
- name: collection_stats
  endpoint:
    path: /reference/get_collection_stats
    method: GET
- name: events
  endpoint:
    path: /reference/list_events
    method: GET
- name: photos
  endpoint:
    path: /photos/1
    method: GET
    data_selector: url
- name: nft_metadata
  endpoint:
    path: /chain/ethereum/contract/{contractAddress}/nfts/{tokenId}
    method: GET
    data_selector: nft
- name: ERC721SeaDrop
  endpoint:
    path: /seadrop/ERC721SeaDrop
    method: GET
- name: nft_metadata
  endpoint:
    path: /chain/ethereum/contract/{contractAddress}/nfts/{tokenId}
    method: GET
    data_selector: nft
- name: create_offer
  endpoint:
    path: /offer
    method: POST
    data_selector: offer
    params: {}
- name: create_listing
  endpoint:
    path: /createListing
    method: POST
    data_selector: response
    params: {}
- name: edit_drop_settings
  endpoint:
    path: /edit-drop-settings
    method: GET
    data_selector: settings
    params: {}
- name: edit_mint_stages
  endpoint:
    path: /edit-mint-stages
    method: GET
    data_selector: stages
    params: {}
- name: edit_drop_earnings
  endpoint:
    path: /edit-drop-earnings
    method: GET
    data_selector: earnings
    params: {}
- name: getOrderStatus
  endpoint:
    path: /getOrderStatus
    method: GET
    data_selector: isValidated, isCancelled, totalFilled, totalSize
    params: {}
- name: getCounter
  endpoint:
    path: /getCounter
    method: GET
    data_selector: counter
    params: {}
- name: information
  endpoint:
    path: /information
    method: GET
    data_selector: version, domainSeparator, conduitController
    params: {}
- name: name
  endpoint:
    path: /name
    method: GET
    data_selector: contractName
    params: {}
- name: create_offer
  endpoint:
    path: /api/v1/offers
    method: POST
    data_selector: offer
    params: {}
- name: create_listing
  endpoint:
    path: /createListing
    method: POST
    data_selector: listing
    params: {}
- name: zone_hooks
  endpoint:
    path: /zone_hooks
    method: POST
    data_selector: data
- name: contract_hooks
  endpoint:
    path: /contract_hooks
    method: POST
    data_selector: data
- name: item_hooks
  endpoint:
    path: /item_hooks
    method: POST
    data_selector: data
- name: collections
  endpoint:
    path: /api/v2/collections/{collection_slug}
    method: GET
    data_selector: fees
    params: {}
- name: fulfillBasicOrder
  endpoint:
    path: /fulfillBasicOrder
    method: POST
    data_selector: fulfilled
    params: {}
- name: fulfillOrder
  endpoint:
    path: /fulfillOrder
    method: POST
    data_selector: fulfilled
    params: {}
- name: fulfillAdvancedOrder
  endpoint:
    path: /fulfillAdvancedOrder
    method: POST
    data_selector: fulfilled
    params: {}
- name: cancel
  endpoint:
    path: /cancel
    method: POST
    data_selector: cancelled
    params: {}
- name: metadata
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: assets
    params: {}
- name: getOrderStatus
  endpoint:
    path: /getOrderStatus
    method: GET
    data_selector: isValidated, isCancelled, totalFilled, totalSize
- name: getCounter
  endpoint:
    path: /getCounter
    method: GET
    data_selector: counter
- name: information
  endpoint:
    path: /information
    method: GET
    data_selector: version, domainSeparator, conduitController
- name: name
  endpoint:
    path: /name
    method: GET
    data_selector: contractName
- name: contract_metadata
  endpoint:
    path: /contractURI
    method: GET
    data_selector: data
    params: {}
- name: createConduit
  endpoint:
    path: /createConduit
    method: POST
    data_selector: conduit
    params: {}
- name: updateChannel
  endpoint:
    path: /updateChannel
    method: POST
    data_selector: channelStatus
    params: {}
- name: transferOwnership
  endpoint:
    path: /transferOwnership
    method: POST
    data_selector: newPotentialOwner
    params: {}
- name: acceptOwnership
  endpoint:
    path: /acceptOwnership
    method: POST
    data_selector: owner
    params: {}
- name: getChannelStatus
  endpoint:
    path: /getChannelStatus
    method: GET
    data_selector: isOpen
    params: {}
- name: getTotalChannels
  endpoint:
    path: /getTotalChannels
    method: GET
    data_selector: totalChannels
    params: {}
- name: nft
  endpoint:
    path: /chain/{chain}/contract/{address}/nfts/{identifier}
    method: GET
    data_selector: nft
- name: collection
  endpoint:
    path: /api/v2/collections/{collection_slug}
    method: GET
    data_selector: fees
- name: collection_stats
  endpoint:
    path: /collections/{collection_slug}/stats
    method: GET
    data_selector: stats
    params: {}
- name: Creator Fee Enforcement
  endpoint:
    path: /creator-fee-enforcement
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: metadata
- name: events
  endpoint:
    path: /events/accounts/{address}
    method: GET
    data_selector: asset_events
- name: events_by_collection
  endpoint:
    path: /api/v2/events/collection/{collection_slug}
    method: GET
- name: events_by_nft
  endpoint:
    path: /events/chain/{chain}/contract/{address}/nfts/{identifier}
    method: GET
    data_selector: asset_events
    params:
      after: timestamp
      before: timestamp
      event_type: array of strings
      limit: integer
- name: account
  endpoint:
    path: /accounts/{address_or_username}
    method: GET
- name: collection
  endpoint:
    path: /api/v2/collections/{collection_slug}
    method: GET
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: collections
- name: contract
  endpoint:
    path: /chain/{chain}/contract/{address}
    method: GET
- name: nfts_by_account
  endpoint:
    path: /chain/{chain}/account/{address}/nfts
    method: GET
    data_selector: nfts
    params:
      limit: '50'
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: fetch
  endpoint:
    path: /fetch
    method: GET
    data_selector: details
- name: search_collections
  endpoint:
    path: /search_collections
    method: GET
    data_selector: collections
- name: get_collections
  endpoint:
    path: /get_collections
    method: GET
    data_selector: collections
- name: search_items
  endpoint:
    path: /search_items
    method: GET
    data_selector: items
- name: get_items
  endpoint:
    path: /get_items
    method: GET
    data_selector: items
- name: search_tokens
  endpoint:
    path: /search_tokens
    method: GET
    data_selector: tokens
- name: get_tokens
  endpoint:
    path: /get_tokens
    method: GET
    data_selector: tokens
- name: get_token_swap_quote
  endpoint:
    path: /get_token_swap_quote
    method: GET
    data_selector: swap_quote
- name: get_token_balances
  endpoint:
    path: /get_token_balances
    method: GET
    data_selector: balances
- name: get_nft_balances
  endpoint:
    path: /get_nft_balances
    method: GET
    data_selector: nft_balances
- name: get_activity
  endpoint:
    path: /get_activity
    method: GET
    data_selector: activity
- name: get_top_collections
  endpoint:
    path: /get_top_collections
    method: GET
    data_selector: top_collections
- name: get_trending_collections
  endpoint:
    path: /get_trending_collections
    method: GET
    data_selector: trending_collections
- name: get_top_tokens
  endpoint:
    path: /get_top_tokens
    method: GET
    data_selector: top_tokens
- name: get_trending_tokens
  endpoint:
    path: /get_trending_tokens
    method: GET
    data_selector: trending_tokens
- name: get_profile
  endpoint:
    path: /get_profile
    method: GET
    data_selector: profile
- name: account_lookup
  endpoint:
    path: /account_lookup
    method: GET
    data_selector: account_info
- name: get_chains
  endpoint:
    path: /get_chains
    method: GET
    data_selector: chains
- name: nfts_by_collection
  endpoint:
    path: /collection/{collection_slug}/nfts
    method: GET
    data_selector: nfts
- name: nft
  endpoint:
    path: /chain/{chain}/contract/{address}/nfts/{identifier}
    method: GET
    data_selector: nft
- name: nfts_by_contract
  endpoint:
    path: /chain/{chain}/contract/{address}/nfts
    method: GET
- name: payment_token
  endpoint:
    path: /chain/{chain}/payment_token/{address}
    method: GET
    data_selector: object
- name: collection_stats
  endpoint:
    path: /collections/{collection_slug}/stats
    method: GET
- name: traits
  endpoint:
    path: /traits/{collection_slug}
    method: GET
    data_selector: object
- name: events
  endpoint:
    path: /events
    method: GET
- name: refresh_nft_metadata
  endpoint:
    path: /api/v2/chain/{chain}/contract/{address}/nfts/{identifier}/refresh
    method: POST
- name: build_criteria_offer
  endpoint:
    path: /api/v2/offers/build
    method: POST
- name: events_by_account
  endpoint:
    path: /events/accounts/{address}
    method: GET
    data_selector: asset_events
- name: cancel_order
  endpoint:
    path: /api/v2/orders/chain/{chain}/protocol/{protocol_address}/{order_hash}/cancel
    method: POST
- name: events_by_collection
  endpoint:
    path: /events/collection/{collection_slug}
    method: GET
- name: create_criteria_offer
  endpoint:
    path: /api/v2/offers
    method: POST
- name: events_by_nft
  endpoint:
    path: /events/chain/{chain}/contract/{address}/nfts/{identifier}
    method: GET
    data_selector: asset_events
- name: create_item_offer
  endpoint:
    path: /api/v2/orders/{chain}/{protocol}/offers
    method: POST
- name: account
  endpoint:
    path: /accounts/{address_or_username}
    method: GET
- name: create_listing
  endpoint:
    path: /orders/{chain}/{protocol}/listings
    method: POST
- name: collection
  endpoint:
    path: /collections/{collection_slug}
    method: GET
    data_selector: collection
- name: fulfill_listing
  endpoint:
    path: /api/v2/listings/fulfillment_data
    method: POST
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: response
    params: {}
- name: fulfill_offer
  endpoint:
    path: /api/v2/offers/fulfillment_data
    method: POST
- name: get_contract
  endpoint:
    path: /chain/{chain}/contract/{address}
    method: GET
- name: listings
  endpoint:
    path: /listings/collection/{collection_slug}/all
    method: GET
    data_selector: listings
- name: nfts_by_account
  endpoint:
    path: /chain/{chain}/account/{address}/nfts
    method: GET
    data_selector: nfts
    params:
      collection: string
      limit: integer
- name: offers_by_collection
  endpoint:
    path: /api/v2/offers/collection/{collection_slug}/all
    method: GET
    data_selector: offers
    params: {}
- name: nfts_by_collection
  endpoint:
    path: /collection/{collection_slug}/nfts
    method: GET
    data_selector: nfts
- name: get_best_listing_by_nft
  endpoint:
    path: /listings/collection/{collection_slug}/nfts/{identifier}/best
    method: GET
- name: nfts_by_contract
  endpoint:
    path: /chain/{chain}/contract/{address}/nfts
    method: GET
- name: best_listings
  endpoint:
    path: /listings/collection/{collection_slug}/best
    method: GET
- name: payment_token
  endpoint:
    path: /chain/{chain}/payment_token/{address}
    method: GET
- name: best_offer
  endpoint:
    path: /offers/collection/{collection_slug}/nfts/{identifier}/best
    method: GET
- name: traits
  endpoint:
    path: /traits/{collection_slug}
    method: GET
    data_selector: object
- name: collection_offers
  endpoint:
    path: /api/v2/offers/collection/{collection_slug}
    method: GET
- name: refresh_nft_metadata
  endpoint:
    path: /api/v2/chain/{chain}/contract/{address}/nfts/{identifier}/refresh
    method: POST
- name: item_offers
  endpoint:
    path: /api/v2/orders/{chain}/{protocol}/offers
    method: GET
- name: build_criteria_offer
  endpoint:
    path: /api/v2/offers/build
    method: POST
- name: listings
  endpoint:
    path: /api/v2/orders/{chain}/{protocol}/listings
    method: GET
    data_selector: orders
    params: {}
- name: cancel_order
  endpoint:
    path: /orders/chain/{chain}/protocol/{protocol_address}/{order_hash}/cancel
    method: POST
- name: get_order
  endpoint:
    path: /api/v2/orders/chain/{chain}/protocol/{protocol_address}/{order_hash}
    method: GET
- name: create_criteria_offer
  endpoint:
    path: /api/v2/offers
    method: POST
- name: trait_offers
  endpoint:
    path: /api/v2/offers/collection/{collection_slug}/traits
    method: GET
- name: create_item_offer
  endpoint:
    path: /api/v2/orders/{chain}/{protocol}/offers
    method: POST
- name: create_listing
  endpoint:
    path: /orders/{chain}/{protocol}/listings
    method: POST
- name: fulfill_listing
  endpoint:
    path: /api/v2/listings/fulfillment_data
    method: POST
- name: item_listed
  endpoint:
    path: /events/item_listed
    method: POST
    data_selector: payload
- name: item_sold
  endpoint:
    path: /events/item_sold
    method: POST
    data_selector: payload
- name: item_transferred
  endpoint:
    path: /events/item_transferred
    method: POST
    data_selector: payload
- name: item_metadata_updated
  endpoint:
    path: /events/item_metadata_updated
    method: POST
    data_selector: payload
- name: item_cancelled
  endpoint:
    path: /events/item_cancelled
    method: POST
    data_selector: payload
- name: fulfill_offer
  endpoint:
    path: /api/v2/offers/fulfillment_data
    method: POST
- name: get_all_listings_by_collection
  endpoint:
    path: /api/v2/listings/collection/{collection_slug}/all
    method: GET
- name: item_received_bid
  endpoint:
    path: /item_received_bid
    method: GET
    data_selector: payload
- name: collection_offer
  endpoint:
    path: /collection_offer
    method: GET
    data_selector: payload
- name: trait_offer
  endpoint:
    path: /trait_offer
    method: GET
    data_selector: payload
- name: order_invalidation
  endpoint:
    path: /order_invalidation
    method: GET
    data_selector: item
- name: order_revalidation
  endpoint:
    path: /order_revalidation
    method: GET
    data_selector: item
- name: get_all_offers
  endpoint:
    path: /offers/collection/{collection_slug}/all
    method: GET
- name: collection_stats
  endpoint:
    path: /collections/{collection_slug}/stats
    method: GET
- name: best_listing
  endpoint:
    path: /api/v2/listings/collection/{collection_slug}/nfts/{identifier}/best
    method: GET
- name: account
  endpoint:
    path: /accounts/{address_or_username}
    method: GET
    data_selector: object
    params: {}
- name: best_listings
  endpoint:
    path: /api/v2/listings/collection/{collection_slug}/best
    method: GET
- name: build_criteria_offer
  endpoint:
    path: /api/v2/offers/build
    method: POST
- name: best_offer
  endpoint:
    path: /api/v2/offers/collection/{collection_slug}/nfts/{identifier}/best
    method: GET
- name: collection_offers
  endpoint:
    path: /api/v2/offers/collection/{collection_slug}
    method: GET
- name: item_offers
  endpoint:
    path: /api/v2/orders/{chain}/{protocol}/offers
    method: GET
- name: listings
  endpoint:
    path: /api/v2/orders/{chain}/{protocol}/listings
    method: GET
    data_selector: orders
    params: {}
- name: get_order
  endpoint:
    path: /api/v2/orders/chain/{chain}/protocol/{protocol_address}/{order_hash}
    method: GET
- name: trait_offers
  endpoint:
    path: /api/v2/offers/collection/{collection_slug}/traits
    method: GET
- name: item_listed
  endpoint:
    path: /stream/item_listed
    method: GET
    data_selector: payload
- name: item_sold
  endpoint:
    path: /stream/item_sold
    method: GET
    data_selector: payload
- name: item_transferred
  endpoint:
    path: /stream/item_transferred
    method: GET
    data_selector: payload
- name: item_metadata_updated
  endpoint:
    path: /stream/item_metadata_updated
    method: GET
    data_selector: payload
- name: item_cancelled
  endpoint:
    path: /stream/item_cancelled
    method: GET
    data_selector: payload
- name: item_received_bid
  endpoint:
    path: /item_received_bid
    method: GET
    data_selector: payload
    params: {}
- name: collection_offer
  endpoint:
    path: /collection_offer
    method: GET
    data_selector: payload
    params: {}
- name: trait_offer
  endpoint:
    path: /trait_offer
    method: GET
    data_selector: payload
    params: {}
- name: order_invalidation
  endpoint:
    path: /order_invalidation
    method: GET
    data_selector: payload
    params: {}
- name: order_revalidation
  endpoint:
    path: /order_revalidation
    method: GET
    data_selector: payload
    params: {}
- name: collection_stats
  endpoint:
    path: /collections/{collection_slug}/stats
    method: GET
    data_selector: object
- name: account
  endpoint:
    path: /accounts/{address_or_username}
    method: GET
    data_selector: object
- name: build_criteria_offer
  endpoint:
    path: /api/v2/offers/build
    method: POST
notes:
- OpenSea allows fetching metadata for any NFT on any supported blockchain.
- Our API is rate-limited - if you’d like to use it in a production environment, please
  request an API key.
- Uses OAuth2 with refresh token — requires setup of connected app in OpenSea
- Please do not share your WALLET_PRIVATE_KEY with anyone. If this key is compromised,
  an attacker can take control over any NFTs or smart contracts you own on any chain.
- There won't be a collection page for your NFT collection until the first mint event
  is detected.
- The OpenSea API returns the NFTs image in a specific size format.
- This part of the tutorial involves using the OpenSea website to deploy a standard
  contract.
- Optional creator fee that applies to secondary sales of your collection
- OpenSea charges a 10% platform fee for primary drops.
- Please do not share your private key with anyone.
- You need to update tokenAddress, tokenId, and offerAmount before running the script.
- You need to own an NFT before you can list it
- Extreme care must be taken when updating channels, as malicious or vulnerable channels
  can transfer any ERC20, ERC721 and ERC1155 tokens where the token holder has granted
  the conduit approval.
- Seaport Hooks are an emergent and experimental feature.
- Requires setup of connected app in OpenSea API.
- Providing asset metadata allows applications like OpenSea to pull in rich data for
  digital assets.
- OpenSea implements leverage limits on offers to manage risk when placing offers
  with wrapped ETH (WETH).
- OpenSea MCP is currently in beta. We're gradually onboarding developers to ensure
  a smooth experience and gather feedback to improve the platform.
- Seaport Hooks are a powerful set of primitives that can be used to extend the native
  functionality of the protocol by allowing developer-defined, stateful contracts
  to 'react' to Seaport order fulfillments.
- Each account can generate up to three API keys.
- If you already have an API key, it won’t show in the Developer section of your profile,
  but it will function as normal until further notice.
- An order may need to include applicable marketplace fees.
- Not all NFTs or collections have the same associated fees.
- Creators who wish to utilize fee enforcement via Seaport should first implement
  the functionality on their NFT.
- OpenSea supports metadata that is structured according to the official ERC721 metadata
  standard or the Enjin Metadata suggestions.
- If you use IPFS to host your metadata, your URL should be in the format ipfs://<hash>.
- Get a single collection including details such as fees, traits, and links.
- The number of NFTs to return must be between 1 and 200.
- OpenSea MCP is currently in beta. Request access token for usage.
- Retrieve all the information, including signatures, needed to fulfill an offer directly
  onchain.
- Create a criteria offer to purchase any NFT in a collection or which matches the
  specified trait.
- An API key is required.
- Build a portion of a criteria offer including the merkle tree needed to post an
  offer.
- The Stream API is a best-effort delivery messaging system and messages that are
  not received due to connection errors will not be re-sent.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- OrderAlreadyFilled
- InvalidTime
- InvalidConduit
- MissingOriginalConsiderationItems
- InvalidCallToConduit
- ConsiderationNotMet
- InsufficientEtherSupplied
- EtherTransferGenericFailure
- PartialFillsNotEnabledForOrder
- OrderIsCancelled
- OrderPartiallyFilled
- InvalidCanceller
- BadFraction
- InvalidMsgValue
- InvalidBasicOrderParameterEncoding
- NoSpecifiedOrdersAvailable
- InvalidNativeOfferItem
- OrderAlreadyFilled(bytes32 orderHash)
- InvalidTime()
- InvalidConduit(bytes32 conduitKey, address conduit)
- MissingOriginalConsiderationItems()
- InvalidCallToConduit(address conduit)
- ConsiderationNotMet(uint256 orderIndex, uint256 considerationIndex, uint256 shortfallAmount)
- InsufficientEtherSupplied()
- EtherTransferGenericFailure(address account, uint256 amount)
- PartialFillsNotEnabledForOrder()
- OrderIsCancelled(bytes32 orderHash)
- OrderPartiallyFilled(bytes32 orderHash)
- InvalidCanceller()
- BadFraction()
- InvalidMsgValue(uint256 value)
- InvalidBasicOrderParameterEncoding()
- NoSpecifiedOrdersAvailable()
- InvalidNativeOfferItem()
- Invalid addresses or contract addresses
- Unsupported chains
- Rate limit exceeded
- Insufficient token balance for swaps
- '400 Bad Request: For error reasons, review the response data.'
- '500 Internal Server Error: Please open a support ticket so OpenSea can investigate.'
- '400: For error reasons, review the response data.'
- '500: Internal server error. Please open a support ticket so OpenSea can investigate.'
- '400'
- '500'
- '404: Returned when the collection does not exist.'
- '400: Returned if the Account does not exist or can not be parsed.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.opensea.io/api/v2
  headers:
    Content-Type: application/json
source_metadata: null
