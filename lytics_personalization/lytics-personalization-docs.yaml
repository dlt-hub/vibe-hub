resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: message_campaign
  endpoint:
    path: /pathfora/message
    method: POST
    data_selector: module
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: identifiers
  endpoint:
    path: /identifiers
    method: GET
    data_selector: records
- name: details
  endpoint:
    path: /details
    method: GET
    data_selector: records
- name: meta
  endpoint:
    path: /meta
    method: GET
    data_selector: records
- name: behavior
  endpoint:
    path: /behavior
    method: GET
    data_selector: records
- name: intelligence
  endpoint:
    path: /intelligence
    method: GET
    data_selector: records
- name: activity
  endpoint:
    path: /activity
    method: GET
    data_selector: records
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
- name: domains
  endpoint:
    path: /domains
    method: GET
    data_selector: domains
- name: first_visit_timestamp
  endpoint:
    path: /firstvisit_ts
    method: GET
    data_selector: firstvisit_ts
- name: last_visit_timestamp
  endpoint:
    path: /lastvisit_ts
    method: GET
    data_selector: lastvisit_ts
- name: pageview_count
  endpoint:
    path: /pageviewct
    method: GET
    data_selector: pageviewct
- name: referring_domain
  endpoint:
    path: /refdomain
    method: GET
    data_selector: refdomain
- name: user_agent
  endpoint:
    path: /user_agent
    method: GET
    data_selector: user_agent
- name: visit_count
  endpoint:
    path: /visitct
    method: GET
    data_selector: visitct
- name: visit_city
  endpoint:
    path: /visit_city
    method: GET
    data_selector: visit_city
- name: visit_country
  endpoint:
    path: /visit_country
    method: GET
    data_selector: visit_country
- name: visit_region
  endpoint:
    path: /visit_region
    method: GET
    data_selector: visit_region
- name: form_data
  endpoint:
    path: /form_data
    method: GET
    data_selector: form_data
- name: forms_submitted
  endpoint:
    path: /forms_submitted
    method: GET
    data_selector: forms_submitted
- name: utm_campaign_last
  endpoint:
    path: /utm_campaign_last
    method: GET
    data_selector: utm_campaign_last
- name: utm_campaigns
  endpoint:
    path: /utm_campaigns
    method: GET
    data_selector: utm_campaigns
- name: utm_content_last
  endpoint:
    path: /utm_content_last
    method: GET
    data_selector: utm_content_last
- name: utm_contents
  endpoint:
    path: /utm_contents
    method: GET
    data_selector: utm_contents
- name: utm_medium_last
  endpoint:
    path: /utm_medium_last
    method: GET
    data_selector: utm_medium_last
- name: utm_mediums
  endpoint:
    path: /utm_mediums
    method: GET
    data_selector: utm_mediums
- name: utm_source_last
  endpoint:
    path: /utm_source_last
    method: GET
    data_selector: utm_source_last
- name: utm_sources
  endpoint:
    path: /utm_sources
    method: GET
    data_selector: utm_sources
- name: utm_term_last
  endpoint:
    path: /utm_term_last
    method: GET
    data_selector: utm_term_last
- name: utm_terms
  endpoint:
    path: /utm_terms
    method: GET
    data_selector: utm_terms
- name: default_segments
  endpoint:
    path: /default_segments
    method: GET
    data_selector: records
    params: {}
- name: audience_segments
  endpoint:
    path: /api/v1/audience_segments
    method: GET
    data_selector: segments
    params: {}
- name: anonymous_profiles
  endpoint:
    path: /api/anonymous_profiles
    method: GET
    data_selector: data
- name: known_profiles
  endpoint:
    path: /api/known_profiles
    method: GET
    data_selector: data
- name: content_recommendations
  endpoint:
    path: /content/recommendations
    method: GET
    data_selector: records
- name: all_content
  endpoint:
    path: /content/collections/all_content
    method: GET
    data_selector: documents
- name: user_profiles
  endpoint:
    path: /api/v2/user_profiles
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: audiences
  endpoint:
    path: /api/v2/audiences
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
- name: monitoring_heartbeat
  endpoint:
    path: /metrics/monitoring_heartbeat
    method: GET
    data_selector: metrics
    params: {}
- name: collection_count
  endpoint:
    path: /metrics/collection_count
    method: GET
    data_selector: metrics
    params: {}
- name: stream_count
  endpoint:
    path: /metrics/stream_count
    method: GET
    data_selector: metrics
    params: {}
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
    params: {}
- name: sso_login
  endpoint:
    path: /api/user/sso
    method: POST
- name: verify_auth
  endpoint:
    path: /api/user/verifyauth
    method: POST
- name: sso_login
  endpoint:
    path: /api/user/sso
    method: POST
- name: verify_auth
  endpoint:
    path: /api/user/verifyauth
    method: POST
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: account_data
- name: adroll_segments
  endpoint:
    path: /adroll
    method: GET
    data_selector: records
- name: audience_membership
  endpoint:
    path: /audience
    method: GET
    data_selector: records
- name: lotame
  endpoint:
    path: /lotame
    method: GET
    data_selector: records
- name: taboola
  endpoint:
    path: /taboola
    method: GET
    data_selector: records
- name: allowed_topics
  endpoint:
    path: /allowed-topics
    method: GET
    data_selector: topics
    params: {}
- name: topic_blocklist
  endpoint:
    path: /topic-blocklist
    method: GET
    data_selector: blocked_topics
    params: {}
- name: topic_allowlist
  endpoint:
    path: /topic-allowlist
    method: GET
    data_selector: allowed_topics
    params: {}
- name: allowed_query_parameters
  endpoint:
    path: /allowed-query-parameters
    method: GET
    data_selector: query_parameters
    params: {}
- name: domains_blocklist
  endpoint:
    path: /domains-blocklist
    method: GET
    data_selector: blocked_domains
    params: {}
- name: blocked_pages
  endpoint:
    path: /blocked-pages
    method: GET
    data_selector: blocked_urls
    params: {}
- name: paths_blocklist
  endpoint:
    path: /paths-blocklist
    method: GET
    data_selector: blocked_paths
    params: {}
- name: boosted_attributes
  endpoint:
    path: /boosted-attributes
    method: GET
    data_selector: boosted_ids
    params: {}
- name: created_since_date
  endpoint:
    path: /created-since-date
    method: GET
    data_selector: created_since
    params: {}
- name: custom_properties_delimiter
  endpoint:
    path: /custom-properties-delimiter
    method: GET
    data_selector: delimiter
    params: {}
- name: custom_properties
  endpoint:
    path: /custom-properties
    method: GET
    data_selector: custom_meta_tags
    params: {}
- name: robots_txt_observation
  endpoint:
    path: /robots-txt-observation
    method: GET
    data_selector: robots_observation
    params: {}
- name: since_date
  endpoint:
    path: /since-date
    method: GET
    data_selector: since_date
    params: {}
- name: domains_allowlist
  endpoint:
    path: /domains-allowlist
    method: GET
    data_selector: allowed_domains
    params: {}
- name: paths_allowlist
  endpoint:
    path: /paths-allowlist
    method: GET
    data_selector: allowed_paths
    params: {}
- name: supported_languages
  endpoint:
    path: /supported-languages
    method: GET
    data_selector: languages
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: data
    params: {}
- name: user_profiles
  endpoint:
    path: /user_profiles
    method: GET
    data_selector: profiles
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: active_import_integrations_limit
  endpoint:
    path: /limits/import_integrations
    method: GET
    data_selector: limit
    params: {}
- name: active_export_integrations_limit
  endpoint:
    path: /limits/export_integrations
    method: GET
    data_selector: limit
    params: {}
- name: integrations_creations_per_hour_limit
  endpoint:
    path: /limits/integrations_creation
    method: GET
    data_selector: limit
    params: {}
- name: completed_jobs_lifetime_limit
  endpoint:
    path: /limits/completed_jobs_lifetime
    method: GET
    data_selector: limit
    params: {}
- name: paused_failed_jobs_lifetime_limit
  endpoint:
    path: /limits/paused_failed_jobs_lifetime
    method: GET
    data_selector: limit
    params: {}
- name: max_urls_enriched_limit
  endpoint:
    path: /limits/urls_enriched
    method: GET
    data_selector: limit
    params: {}
- name: max_topics_displayed_limit
  endpoint:
    path: /limits/topics_displayed
    method: GET
    data_selector: limit
    params: {}
- name: max_topics_per_user_limit
  endpoint:
    path: /limits/topics_per_user
    method: GET
    data_selector: limit
    params: {}
- name: max_interest_engines_limit
  endpoint:
    path: /limits/interest_engines
    method: GET
    data_selector: limit
    params: {}
- name: lookalike_model_count_limit
  endpoint:
    path: /limits/lookalike_model_count
    method: GET
    data_selector: limit
    params: {}
- name: max_model_audience_size_limit
  endpoint:
    path: /limits/model_audience_size
    method: GET
    data_selector: limit
    params: {}
- name: consent_collection
  endpoint:
    path: /consent/collection
    method: POST
    data_selector: consent
    params: {}
- name: profile_materialization
  endpoint:
    path: /profile/materialization
    method: POST
    data_selector: profile
    params: {}
- name: Google Ads Audience Export
  endpoint:
    path: /docs/google-ads-overview#export-audiences-customer-match
    method: GET
- name: Google DV360 Audience Export
  endpoint:
    path: /docs/google-marketing-overview#google-dv360-export-audiences
    method: GET
- name: Amazon DSP Audience Export
  endpoint:
    path: /docs/amazon-dsp-overview#amazon-dsp-sync-cookiesemail
    method: GET
- name: LinkedIn Audience Export
  endpoint:
    path: /docs/linkedin
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: cookies
  endpoint:
    path: /cookies
    method: GET
    data_selector: cookies
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: job
  endpoint:
    path: /services/data/v2.0/jobs
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: job
  endpoint:
    path: /services/data/vXX.X/sobjects/Job
    method: GET
    data_selector: records
- name: route_rule
  endpoint:
    path: /v2/stream/rule
    method: GET
    data_selector: route_rules
- name: single_route_rule
  endpoint:
    path: /v2/stream/rule/:id
    method: GET
    data_selector: route_rule
- name: create_route_rule
  endpoint:
    path: /v2/stream/rule
    method: POST
    data_selector: route_rule
- name: upsert_route_rule
  endpoint:
    path: /v2/stream/rule/:id
    method: POST/PUT
    data_selector: route_rule
- name: delete_route_rule
  endpoint:
    path: /v2/stream/rule/:id
    method: DELETE
    data_selector: route_rule
- name: route_rules
  endpoint:
    path: /v2/stream/rule
    method: GET
    data_selector: route_rules
- name: single_route_rule
  endpoint:
    path: /v2/stream/rule/:id
    method: GET
    data_selector: route_rule
- name: create_route_rule
  endpoint:
    path: /v2/stream/rule
    method: POST
    data_selector: route_rule
- name: upsert_route_rule
  endpoint:
    path: /v2/stream/rule/:id
    method: POST/PUT
    data_selector: route_rule
- name: delete_route_rule
  endpoint:
    path: /v2/stream/rule/:id
    method: DELETE
    data_selector: route_rule
- name: templates
  endpoint:
    path: /templates
    method: GET
    data_selector: templates
    params: {}
- name: create_template
  endpoint:
    path: /v2/template
    method: POST
    data_selector: data
    params:
      name: test-template
      type: jsonnet
      description: A test template for demos
- name: test_template
  endpoint:
    path: /v2/template/:id/test
    method: POST
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: template
  endpoint:
    path: /v2/template
    method: POST
    data_selector: data
    params:
      name: test-template
      type: jsonnet
      description: A test template for demos
- name: template_test
  endpoint:
    path: /v2/template/:id/test
    method: POST
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: template
  endpoint:
    path: /v2/template
    method: POST
    data_selector: ''
    params: {}
- name: profiles
  endpoint:
    path: /api/v1/profiles
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: query_validation
  endpoint:
    path: /api/query/_validate
    method: POST
- name: query_upload
  endpoint:
    path: /api/query
    method: POST
- name: user_schema
  endpoint:
    path: /api/schema/user
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: validate_query
  endpoint:
    path: /api/query/_validate
    method: POST
    data_selector: ''
    params: {}
- name: upload_query
  endpoint:
    path: /api/query
    method: POST
    data_selector: ''
    params: {}
- name: user_schema
  endpoint:
    path: /api/schema/user
    method: GET
    data_selector: ''
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: profile
  endpoint:
    path: /api/v2/profiles
    method: GET
    data_selector: data
    params: {}
- name: _uids
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: hashedurls
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: _uids
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: hashedurls
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: universal_schema
  endpoint:
    path: /universal/schema
    method: GET
    data_selector: profiles
- name: common_schema
  endpoint:
    path: /common/schema
    method: GET
    data_selector: profiles
- name: _uids
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: _uid
- name: email
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: email_address
- name: email_sha256
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: email_address
- name: external_id
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: external_id
- name: first_name
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: first_name
- name: last_name
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: last_name
- name: name
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: name
- name: birthday
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: birthday
- name: phone
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: phone
- name: phone_mobile
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: mobile
- name: address1
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: address1
- name: address2
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: address2
- name: city
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: city
- name: region
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: region
- name: _uids
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: _uid
- name: email
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: email_address
- name: email_sha256
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: email_address
- name: external_id
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: external_id
- name: first_name
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: first_name
- name: last_name
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: last_name
- name: name
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: name
- name: birthday
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: birthday
- name: phone
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: phone
- name: phone_mobile
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: mobile
- name: address1
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: address1
- name: address2
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: address2
- name: city
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: city
- name: region
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: region
- name: country
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: country
    params: {}
- name: postal_code
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: postal_code
    params: {}
- name: status
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: status
    params: {}
- name: geolocation
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ip_address
    params: {}
- name: geoip_org
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ip_address
    params: {}
- name: geoip_country
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ip_address
    params: {}
- name: geoip_city
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ip_address
    params: {}
- name: geoip_region
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ip_address
    params: {}
- name: designated_market_area
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: dma
    params: {}
- name: timezone
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: timezone
    params: {}
- name: device_id
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: device_id
    params: {}
- name: device_ids
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: device_ids
    params: {}
- name: device_advertising_id
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: device_advertising_id
    params: {}
- name: device_advertising_ids
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: device_advertising_ids
    params: {}
- name: device_types
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: device_types
    params: {}
- name: user_agent
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: useragent
    params: {}
- name: is_mobile
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: _uamob
    params: {}
- name: is_bot
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: _uabot
    params: {}
- name: country
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: country
- name: postal_code
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: postal_code
- name: status
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: status
- name: geolocation
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ip_address
- name: geoip_org
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ip_address
- name: geoip_country
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ip_address
- name: geoip_city
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ip_address
- name: geoip_region
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ip_address
- name: designated_market_area
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: dma
- name: timezone
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: timezone
- name: device_id
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: device_id
- name: device_ids
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: device_id
- name: device_advertising_id
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: device_advertising_id
- name: device_advertising_ids
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: device_advertising_id
- name: device_types
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: device_types
- name: user_agent
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: useragent
- name: is_mobile
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: _uamob
- name: is_bot
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: _uabot
- name: device_os
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: device_os
- name: device_model
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: device_model
- name: browser_hash
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: browser_hash
- name: browser
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: browser
- name: utm_campaign
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: utm_campaign
- name: utm_campaigns
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: utm_campaign
- name: utm_source
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: utm_source
- name: utm_sources
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: utm_source
- name: utm_term
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: utm_term
- name: utm_terms
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: utm_term
- name: utm_content
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: utm_content
- name: utm_contents
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: utm_content
- name: utm_medium
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: utm_medium
- name: utm_mediums
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: utm_medium
- name: ly_impressions
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: pf-widget-id
- name: ly_conversions
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: pf-widget-id
- name: ly_closes
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: pf-widget-id
- name: ly_cancels
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: pf-widget-id
- name: ly_hover
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: pf-widget-id
- name: conversions_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: pf-widget-id
- name: device_os
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: device_os
- name: device_model
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: device_model
- name: browser_hash
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: browser_hash
- name: browser
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: browser
- name: utm_campaign
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: utm_campaign
- name: utm_campaigns
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: utm_campaigns
- name: utm_source
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: utm_source
- name: utm_sources
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: utm_sources
- name: utm_term
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: utm_term
- name: utm_terms
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: utm_terms
- name: utm_content
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: utm_content
- name: utm_contents
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: utm_contents
- name: utm_medium
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: utm_medium
- name: utm_mediums
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: utm_mediums
- name: ly_impressions
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ly_impressions
- name: ly_conversions
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ly_conversions
- name: ly_closes
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ly_closes
- name: ly_cancels
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ly_cancels
- name: ly_hover
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ly_hover
- name: conversions_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: conversions_ts
- name: impressions_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: pf-widget-id
- name: demographic
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: gender
- name: first_party
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: user_attributes
- name: b2b
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: company_name
- name: impressions_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: demographic
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: user_attributes
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: form_data
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: governance
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: b2b
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: facebook_id
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: records
- name: twitter_id
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: records
- name: pinterest_id
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: records
- name: linkedin_id
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: records
- name: tiktok_id
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: records
- name: channel_activity_first_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: records
- name: channel_activity_last_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: records
- name: _uid
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: records
- name: refdomain
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: records
- name: action_web_count
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: records
- name: action_web_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: records
- name: analytics_cohorts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: records
- name: email_domain
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: records
- name: email_list_ids
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: records
- name: email_status
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: records
- name: action_email_count
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: records
- name: action_email_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: records
- name: action_sms_count
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: records
- name: action_sms_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: records
- name: mobile_carrier
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: records
- name: facebook_id
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: twitter_id
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: pinterest_id
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: linkedin_id
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: tiktok_id
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: channel_activity_first_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: channel_activity_last_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: _uid
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: refdomain
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: action_web_count
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: action_web_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: analytics_cohorts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: email_domain
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: email_list_ids
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: email_status
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: action_email_count
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: action_email_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: action_sms_count
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: action_sms_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: mobile_carrier
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: mobile_carrier
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: app_version
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: action_push_count
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: action_push_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: action_app_count
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: action_app_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: action_chat_count
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: action_chat_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: tax_exempt
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: currency
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: purchase_total
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: purchase_count
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: product_ids
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: order_ids
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: account_id
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: lead_status
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: lead_source
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: lead_score
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: lifecycle_stage
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: opportunity_value
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: ''
    params: {}
- name: mobile_carrier
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: app_version
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: action_push_count
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: action_push_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: action_app_count
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: action_app_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: action_chat_count
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: action_chat_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: tax_exempt
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: currency
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: purchase_total
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: purchase_count
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: purchase_shop_total
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: purchase_shop_count
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: action_retail_count
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: action_retail_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: product_ids
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: order_ids
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: account_id
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: lead_status
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: lead_source
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: lead_score
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: lifecycle_stage
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: opportunity_value
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: data
    params: {}
- name: lead_score
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: lifecycle_stage
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: opportunity_value
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: survey_responses
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: action_survey_count
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: action_survey_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: csat_score
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: support_ticket_status
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: action_billing_count
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: action_billing_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: subscription_status
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: subscription_start
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: subscription_end
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: lead_score
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: lifecycle_stage
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: opportunity_value
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: survey_responses
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: action_survey_count
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: action_survey_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: csat_score
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: support_ticket_status
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: action_billing_count
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: action_billing_ts
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: subscription_status
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: subscription_start
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: subscription_end
  endpoint:
    path: /collect/json/default
    method: POST
    data_selector: null
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: identity
  endpoint:
    path: /api/identity
    method: GET
- name: profile_fields
  endpoint:
    path: /api/profile_fields
    method: GET
- name: raw_data
  endpoint:
    path: /api/raw_data
    method: GET
- name: behavior
  endpoint:
    path: /api/behavior
    method: GET
- name: content_affinity
  endpoint:
    path: /api/content_affinity
    method: GET
- name: activity
  endpoint:
    path: /api/activity
    method: GET
- name: delete_profile
  endpoint:
    path: /api/delete_profile
    method: DELETE
- name: data_model
  endpoint:
    path: /data/models
    method: POST
    data_selector: dataModels
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Data Models
  endpoint:
    path: /data-models
    method: POST
    data_selector: dataModels
    params: {}
- name: user_profile
  endpoint:
    path: /api/user_profiles
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /api/v2/users
    method: GET
    data_selector: data
    params: {}
- name: user_profile
  endpoint:
    path: /services/data/vXX.X/sobjects/UserProfile
    method: GET
    data_selector: records
    params: {}
- name: audiences
  endpoint:
    path: /api/audiences
    method: GET
    data_selector: results
- name: audience_group
  endpoint:
    path: /api/v1/audience-groups
    method: GET
    data_selector: data
- name: audiences
  endpoint:
    path: /api/audiences
    method: GET
    data_selector: records
- name: audiences
  endpoint:
    path: /api/audiences
    method: GET
    data_selector: audiences
    params: {}
- name: reports
  endpoint:
    path: /api/v1/reports
    method: GET
    data_selector: data
    params: {}
- name: prebuilt_audience_groups
  endpoint:
    path: /prebuilt_audience_groups
    method: GET
    data_selector: groups
    params: {}
- name: size_comparison
  endpoint:
    path: /components/size
    method: POST
    data_selector: components
    params: {}
- name: audience_overlap
  endpoint:
    path: /components/overlap
    method: POST
    data_selector: components
    params: {}
- name: data_flow
  endpoint:
    path: /components/data_flow
    method: POST
    data_selector: components
    params: {}
- name: composition
  endpoint:
    path: /components/composition
    method: POST
    data_selector: components
    params: {}
- name: size_comparison
  endpoint:
    path: /reports/size_comparison
    method: GET
    data_selector: components
    params: {}
- name: audience_overlap
  endpoint:
    path: /reports/audience_overlap
    method: GET
    data_selector: components
    params: {}
- name: data_flow
  endpoint:
    path: /reports/data_flow
    method: GET
    data_selector: components
    params: {}
- name: composition
  endpoint:
    path: /reports/composition
    method: GET
    data_selector: components
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content_enrichment
  endpoint:
    path: /api/content/doc
    method: GET
    data_selector: data.urls
    params: {}
- name: topic_curation
  endpoint:
    path: /api/content/corpus
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: documents
  endpoint:
    path: /content/corpus
    method: POST
    data_selector: document
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: documents_with_images
  endpoint:
    path: /collections/documents_with_images
    method: GET
    data_selector: documents
- name: all_documents
  endpoint:
    path: /collections/all_documents
    method: GET
    data_selector: documents
- name: default_recommendation_collection
  endpoint:
    path: /collections/default_recommendation
    method: GET
    data_selector: documents
- name: content
  endpoint:
    path: /api/content/doc
    method: GET
    data_selector: data.urls
    params:
      urls: www.lytics.com
- name: content_corpus
  endpoint:
    path: /api/content/corpus
    method: POST
    data_selector: data
    params: {}
- name: topic_curation
  endpoint:
    path: /api/content/doc/hashedurl/{hashedurl}/topic/{topic}
    method: POST
    data_selector: data
    params: {}
- name: documents
  endpoint:
    path: /api/documents
    method: GET
    data_selector: records
    params: {}
- name: documents
  endpoint:
    path: /api/v1/documents
    method: POST
    data_selector: document
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: documents_with_images
  endpoint:
    path: /documents_with_images
    method: GET
    data_selector: documents
    params: {}
- name: all_documents
  endpoint:
    path: /all_documents
    method: GET
    data_selector: documents
    params: {}
- name: default_recommendation_collection
  endpoint:
    path: /default_recommendation_collection
    method: GET
    data_selector: documents
    params: {}
- name: content
  endpoint:
    path: /content
    method: GET
    data_selector: records
- name: hashedurls
  endpoint:
    path: /hashedurls
    method: GET
    data_selector: records
- name: lytics_content
  endpoint:
    path: /lytics_content
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content
  endpoint:
    path: /content
    method: GET
    data_selector: items
- name: topics
  endpoint:
    path: /topics
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: recommendations
  endpoint:
    path: /recommendations
    method: GET
    data_selector: recommended_items
- name: item_recommendation
  endpoint:
    path: /item_recommendation
    method: GET
    data_selector: similar_items
- name: collaborative_filter
  endpoint:
    path: /collaborative_filter
    method: POST
    data_selector: filter_results
- name: create_model
  endpoint:
    path: /api/ml
    method: POST
    data_selector: source
    params: {}
- name: Lookalike Models
  endpoint:
    path: /docs/building-lookalike-models
    method: GET
- name: Predictive Audiences
  endpoint:
    path: /docs/creating-predictive-audiences
    method: GET
- name: basic_configuration
  endpoint:
    path: /lookalike/models/basic
    method: POST
    data_selector: parameters
    params:
      min_users: 25
      max_users: 20000000
- name: advanced_configuration
  endpoint:
    path: /lookalike/models/advanced
    method: POST
    data_selector: parameters
    params:
      sample_size_min: 100
      sample_size_max: 50000
- name: Lookalike Model
  endpoint:
    path: /api/ml
    method: POST
    data_selector: source
    params: {}
- name: model_summary
  endpoint:
    path: /lookalike/model/summary
    method: GET
    data_selector: summary
- name: model_diagnostics
  endpoint:
    path: /lookalike/model/diagnostics
    method: GET
    data_selector: diagnostics
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content_recommendations
  endpoint:
    path: /content/recommendations
    method: GET
    data_selector: recommendations
    params: {}
- name: data_science_performance
  endpoint:
    path: /data/science/performance
    method: GET
    data_selector: performance_metrics
    params: {}
- name: Goals
  endpoint:
    path: /goals
    method: GET
    data_selector: goals
    params: {}
- name: Experiences
  endpoint:
    path: /experiences
    method: GET
    data_selector: experiences
    params: {}
- name: Stages
  endpoint:
    path: /stages
    method: GET
    data_selector: stages
    params: {}
- name: user_profiles
  endpoint:
    path: /api/v2/user_profiles
    method: GET
    data_selector: data
- name: behavioral_scores
  endpoint:
    path: /behavioral/scores
    method: GET
    data_selector: scores
- name: Drive Traffic
  endpoint:
    path: /experience/drive-traffic
    method: GET
    data_selector: experience_data
- name: Capture Leads
  endpoint:
    path: /experience/capture-leads
    method: GET
    data_selector: experience_data
- name: Present a Message
  endpoint:
    path: /experience/present-message
    method: GET
    data_selector: experience_data
- name: Recommend Content
  endpoint:
    path: /experience/recommend-content
    method: GET
    data_selector: experience_data
- name: topic_relevance
  endpoint:
    path: /documentation/product/features/content-affinity-engine/content-affinity-engine-introduction
    method: GET
    data_selector: records
    params: {}
- name: content_recommendations
  endpoint:
    path: /documentation/product/features/content-affinity-engine/content-recommendation
    method: GET
    data_selector: records
    params: {}
- name: conversion_rate
  endpoint:
    path: /documentation/product/features/descriptive-and-predictive-modeling/behavioral-audiences
    method: GET
    data_selector: records
    params: {}
- name: simulated_conversion_rate_behavioral_scoring
  endpoint:
    path: /documentation/product/features/descriptive-and-predictive-modeling/behavioral-audiences
    method: GET
    data_selector: records
    params: {}
- name: simulated_conversion_rate_segmentml
  endpoint:
    path: /documentation/product/features/descriptive-and-predictive-modeling/segmentml
    method: GET
    data_selector: records
    params: {}
- name: behavioral_scores
  endpoint:
    path: /behavioral_scores
    method: GET
    data_selector: scores
    params: {}
- name: profiles
  endpoint:
    path: /services/data/vXX.X/profiles
    method: GET
    data_selector: records
    params: {}
- name: user_profiles
  endpoint:
    path: /v2/profiles
    method: GET
    data_selector: profiles
    params: {}
- name: user_profile
  endpoint:
    path: /api/entity/user/{fieldname}/{value}
    method: GET
    data_selector: data
    params:
      fields: last_make,last_model,last_color
- name: profiles
  endpoint:
    path: /api/profiles
    method: GET
    data_selector: records
    params: {}
- name: segment_validate
  endpoint:
    path: /api/segment/validate
    method: POST
    data_selector: response
    params: {}
- name: segment_create
  endpoint:
    path: /api/segment
    method: POST
    data_selector: response
    params: {}
- name: user_profile
  endpoint:
    path: /api/tag/{yourcid}/lio.js
    method: GET
    data_selector: data
    params: {}
- name: segment_validate
  endpoint:
    path: /api/segment/validate
    method: POST
    data_selector: response
    params: {}
- name: segment_create
  endpoint:
    path: /api/segment
    method: POST
    data_selector: response
    params: {}
- name: segment
  endpoint:
    path: /api/segment/{slug}
    method: DELETE
- name: segment
  endpoint:
    path: /api/segment/{slug}
    method: GET
- name: user_profile
  endpoint:
    path: /api/entity/user/{fieldname}/{value}
    method: GET
    data_selector: data
    params:
      fields: last_make,last_model,last_color
- name: segment_validate
  endpoint:
    path: /api/segment/validate
    method: POST
    data_selector: response
    params: {}
- name: segment_create
  endpoint:
    path: /api/segment
    method: POST
    data_selector: response
    params: {}
- name: segment_read
  endpoint:
    path: /api/segment/{slug_name}
    method: GET
    data_selector: response
    params: {}
- name: segment_validate
  endpoint:
    path: /api/segment/validate
    method: POST
    data_selector: response
    params: {}
- name: segment_create
  endpoint:
    path: /api/segment
    method: POST
    data_selector: response
    params: {}
- name: segment_list
  endpoint:
    path: /api/segment
    method: GET
    data_selector: segments
    params: {}
- name: segment_scan
  endpoint:
    path: /api/segment/{slug}/scan
    method: GET
    data_selector: results
    params: {}
- name: segment_delete
  endpoint:
    path: /api/segment/{slug}
    method: DELETE
    data_selector: ''
    params: {}
- name: segment_validate
  endpoint:
    path: /api/segment/validate
    method: POST
    data_selector: response
    params: {}
- name: segment_create
  endpoint:
    path: /api/segment
    method: POST
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: segment
  endpoint:
    path: /api/segment/affinity_for_yogurt
    method: DELETE
- name: segment
  endpoint:
    path: /api/segment/affinity_for_yogurt
    method: GET
- name: segment
  endpoint:
    path: /api/segment
    method: POST
    data_selector: records
- name: segment_validate
  endpoint:
    path: /api/segment/validate
    method: POST
    data_selector: null
    params: {}
- name: segment_create
  endpoint:
    path: /api/segment
    method: POST
    data_selector: null
    params: {}
- name: segment_read
  endpoint:
    path: /api/segment/{slug_name}
    method: GET
    data_selector: null
    params: {}
- name: segment_list
  endpoint:
    path: /api/segment
    method: GET
    data_selector: segments
- name: segment_scan
  endpoint:
    path: /api/segment/{segment_id}/scan
    method: GET
    data_selector: results
    params:
      limit: 20
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: custom_data
  endpoint:
    path: /services/data/vXX.X/sobjects/CustomData
    method: GET
    data_selector: records
    params: {}
- name: custom_data
  endpoint:
    path: /reference/data-json-upload
    method: POST
    data_selector: records
- name: segment
  endpoint:
    path: /api/segment
    method: POST
    data_selector: records
- name: user_data
  endpoint:
    path: /c/{account_id}/default
    method: GET
    data_selector: event_data
    params:
      email: woody@hanks-roles.com
      utm_medium: email
      utm_source: welcome
- name: mobile_events
  endpoint:
    path: /c/myaccountid123/mobileevents
    method: GET
    data_selector: events
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: custom_data_upload
  endpoint:
    path: /reference/data-json-upload
    method: POST
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: user_data
  endpoint:
    path: /c/{account_id}/default
    method: GET
    data_selector: user_fields
    params: {}
- name: jobs
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: records
    params: {}
- name: data_streams
  endpoint:
    path: /api/data-streams
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /c/YOUR-AID/STREAM
    method: GET
    data_selector: events
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: custom_form_widget
  endpoint:
    path: /api/v1/forms
    method: POST
    data_selector: formElements
- name: audience
  endpoint:
    path: /api/audiences
    method: GET
    data_selector: audiences
- name: export
  endpoint:
    path: /api/export
    method: POST
    data_selector: exportResponse
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: image_widget
  endpoint:
    path: /pathfora/message
    method: POST
    data_selector: widget
    params:
      id: image-widget
      layout: slideout
      position: bottom-right
      className: image-widget
      headline: Save 10%
      msg: 24 hour sale on all Apple mobile phone products!
      image: assets/iphone-modal.png
      variant: '2'
      okShow: true
      okMessage: Save Now
      cancelShow: false
- name: inline_image_widget
  endpoint:
    path: /pathfora/message
    method: POST
    data_selector: widget
    params:
      msg: <img src="assets/iphone-mini.png" class="pf-widget-img-inline" alt="iPhone">24
        hour sale on all Apple mobile phone products!
- name: user_profiles
  endpoint:
    path: /api/v2/user_profiles
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: form_widget
  endpoint:
    path: /types/form/
    method: GET
    data_selector: formElements
    params: {}
- name: custom_form_elements
  endpoint:
    path: /customization/form/
    method: GET
    data_selector: formElements
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: audiences
  endpoint:
    path: /documentation/product/features/audiences/building-audiences-content-affinity
    method: GET
    data_selector: audiences
    params: {}
- name: export_to_campaign_monitor
  endpoint:
    path: /documentation/product/integrations/campaign-monitor
    method: POST
    data_selector: export
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_profile
  endpoint:
    path: /c/{lytics_account_id}/default
    method: GET
    data_selector: records
    params:
      offer_code: FREE324234234
      _uid: '{uid_here}'
- name: image_widget
  endpoint:
    path: /pathfora/image_widget
    method: POST
    data_selector: widget
    params: {}
- name: audience
  endpoint:
    path: /api/v2/audiences
    method: GET
    data_selector: records
- name: audience
  endpoint:
    path: /audiences
    method: GET
    data_selector: data
    params: {}
- name: downloads
  endpoint:
    path: /api/v1/downloads
    method: GET
    data_selector: records
- name: lytics_custom_audience_push
  endpoint:
    path: /lytics_custom_audience_push
    method: POST
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: audience
  endpoint:
    path: /api/v2/audiences
    method: GET
    data_selector: data
    params: {}
- name: user_profile
  endpoint:
    path: /c/{lytics_account_id}/default
    method: GET
    data_selector: raw_data
    params:
      offer_code: FREE324234234
      _uid: '{uid_here}'
- name: content_rec_widget
  endpoint:
    path: /pathfora/Message
    method: POST
    data_selector: widget
    params: {}
- name: audience
  endpoint:
    path: /services/data/vXX.X/sobjects/Audience
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: lookalike_models
  endpoint:
    path: /api/lookalike_models
    method: GET
    data_selector: models
- name: predictive_audiences
  endpoint:
    path: /api/predictive_audiences
    method: GET
    data_selector: audiences
- name: lytics_custom_audience_push
  endpoint:
    path: /lytics_custom_audience_push
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: source_audience
  endpoint:
    path: /docs/building-lookalike-models#basic-configuration
    method: GET
    data_selector: source
    params: {}
- name: target_audience
  endpoint:
    path: /docs/building-lookalike-models#basic-configuration
    method: GET
    data_selector: target
    params: {}
- name: model_training
  endpoint:
    path: /docs/building-lookalike-models
    method: GET
    data_selector: model_training
    params: {}
- name: predictive_audience
  endpoint:
    path: /docs/evaluating-lookalike-models
    method: GET
    data_selector: predictive_audience
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: source_audience
  endpoint:
    path: /docs/building-lookalike-models#basic-configuration
    method: GET
    data_selector: source
    params: {}
- name: target_audience
  endpoint:
    path: /docs/building-lookalike-models#basic-configuration
    method: GET
    data_selector: target
    params: {}
- name: content_recommendation
  endpoint:
    path: /pathfora.Message
    method: POST
    data_selector: var contentRecWidget
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_profiles
  endpoint:
    path: /api/v1/user_profiles
    method: GET
    data_selector: data
    params: {}
- name: lookalike_models
  endpoint:
    path: /api/v1/lookalike-models
    method: GET
    data_selector: models
    params: {}
- name: user_profiles
  endpoint:
    path: /api/v1/user_profiles
    method: GET
    data_selector: data
    params: {}
- name: content_recommendations
  endpoint:
    path: /v2/content/recommendations
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_profiles
  endpoint:
    path: /api/v1/user_profiles
    method: GET
    data_selector: data
    params: {}
- name: content_recommendations
  endpoint:
    path: /api/content/recommendations
    method: GET
    data_selector: recommendations
    params: {}
- name: content_recommendations
  endpoint:
    path: /recommendations
    method: GET
    data_selector: recommendations
    params: {}
- name: user_profiles
  endpoint:
    path: /api/v1/user_profiles
    method: GET
    data_selector: data
    params: {}
- name: audience_segments
  endpoint:
    path: /api/v1/audience_segments
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: renewals_audience
  endpoint:
    path: /api/renewals/audience
    method: GET
    data_selector: audience
    params: {}
- name: winbacks
  endpoint:
    path: /api/winbacks
    method: GET
    data_selector: winbacks
    params: {}
- name: content_recommendations
  endpoint:
    path: /api/content/recommend/user/email/{{#urlEncode}}{{email}}{{/urlEncode}}
    method: GET
    data_selector: data
- name: experience
  endpoint:
    path: /api/experience/{experience_id}
    method: PATCH
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content_recommendations
  endpoint:
    path: /api/content/recommend/user/email/{{#urlEncode}}{{email}}{{/urlEncode}}
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: experience
  endpoint:
    path: /api/experience/{experience_id}
    method: PATCH
    data_selector: experience.vehicle.detail_override
- name: global_stylesheet
  endpoint:
    path: /docs/experiences
    method: GET
    data_selector: styles
- name: widget_specific_styles
  endpoint:
    path: /docs/customize-your-web-experiences-with-branded-images
    method: GET
    data_selector: styles
- name: troubleshooting
  endpoint:
    path: /docs/experiences#troubleshooting-and-selector-specificity
    method: GET
    data_selector: troubleshooting
- name: pathfora_widget
  endpoint:
    path: /pathfora/widget
    method: GET
    data_selector: records
    params: {}
- name: user_profiles
  endpoint:
    path: /api/user_profiles
    method: GET
    data_selector: data
- name: audiences
  endpoint:
    path: /api/audiences
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_profiles
  endpoint:
    path: /api/user_profiles
    method: GET
    data_selector: data
    params: {}
- name: audiences
  endpoint:
    path: /api/audiences
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /api/tag/someid/latest.js
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: event
  endpoint:
    path: jstag.send
    method: POST
    data_selector: event
- name: page_view
  endpoint:
    path: jstag.pageView
    method: POST
    data_selector: page_view
- name: tracking_event
  endpoint:
    path: /collect/json
    method: POST
    data_selector: events
- name: entity
  endpoint:
    path: /api/entity
    method: GET
    data_selector: entities
- name: core_js_sdk
  endpoint:
    path: //c.lytics.io/api/tag/{{ACCOUNT_ID}}/latest.min.js
    method: GET
- name: pathfora_js_sdk
  endpoint:
    path: //c.lytics.io/static/pathfora.min.js
    method: GET
- name: pathfora_css
  endpoint:
    path: //c.lytics.io/static/pathfora.min.css
    method: GET
- name: config_js
  endpoint:
    path: //c.lytics.io/api/experience/candidate/{{ACCOUNT_ID}}/config.js
    method: GET
- name: user_profiles
  endpoint:
    path: /api/entity
    method: POST
    data_selector: profiles
    params:
      defaultTable: user
- name: event_tracking
  endpoint:
    path: /collect/json
    method: POST
    data_selector: events
    params:
      maxQueueSize: 10
      uploadInterval: 10
- name: identify_user
  endpoint:
    path: /identify
    method: POST
    data_selector: identifiers
- name: track_event
  endpoint:
    path: /track
    method: POST
    data_selector: properties
- name: consent_event
  endpoint:
    path: /consent
    method: POST
    data_selector: consent
- name: user_activity
  endpoint:
    path: /api/v1/user_activity
    method: POST
    data_selector: activity
    params: {}
- name: user_identification
  endpoint:
    path: /api/v1/user_identification
    method: POST
    data_selector: identification
    params: {}
- name: event_stream
  endpoint:
    path: /collect/json
    method: POST
    data_selector: data
    params: {}
- name: entity
  endpoint:
    path: /api/entity
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: identify
  endpoint:
    path: /identify
    method: POST
    data_selector: identifiers
- name: track
  endpoint:
    path: /track
    method: POST
    data_selector: events
- name: user_table
  endpoint:
    path: /services/data/vXX.X/sobjects/UserTable
    method: GET
    data_selector: records
- name: audience_table
  endpoint:
    path: /services/data/vXX.X/sobjects/AudienceTable
    method: GET
    data_selector: records
- name: non_scalar_table_channels
  endpoint:
    path: /services/data/vXX.X/sobjects/NonScalarTableChannels
    method: GET
    data_selector: records
- name: non_scalar_table_hourly
  endpoint:
    path: /services/data/vXX.X/sobjects/NonScalarTableHourly
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Export Audiences
  endpoint:
    path: /api/ua/export_audiences
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: amplitude_events
  endpoint:
    path: /export
    method: GET
    data_selector: events
    params: {}
- name: audience_export
  endpoint:
    path: /path/to/endpoint
    method: POST
    data_selector: dataset
    params:
      incremental: audience_id
- name: Export Job
  endpoint:
    path: /export/job
    method: POST
    data_selector: job_details
- name: export_audiences
  endpoint:
    path: /api/lists
    method: POST
    data_selector: data
- name: lytics_triggers_stream
- name: amplitude_events
  endpoint:
    path: /export
    method: GET
    data_selector: data
- name: lytics_triggers_stream
  endpoint:
    path: /kinesis/streams/lytics_triggers_stream
    method: PUT
    data_selector: records
- name: lytics_triggers_stream
  endpoint:
    path: /kinesis/streams/lytics_triggers_stream
    method: CREATE
    data_selector: records
- name: advertiser_data_upload
  endpoint:
    path: /api/v1/advertiser_data_upload
    method: POST
    data_selector: data
    params:
      incremental: updated_at
- name: audience_event_triggers
  endpoint:
    path: /export/audience/triggers
    method: POST
    data_selector: event_data
    params: {}
- name: Export Audiences Triggers
  endpoint:
    path: /export/audience/triggers
    method: POST
- name: lytics_triggers_stream
  endpoint:
    path: /kinesis/lytics_triggers_stream
    method: GET
- name: export_audience_triggers
  endpoint:
    path: /export/audience/triggers
    method: POST
- name: lytics_triggers_stream
  endpoint:
    path: /kinesis/lytics_triggers_stream
    method: PUT
- name: Import Redshift Table
  endpoint:
    path: /import/redshift
    method: POST
    data_selector: records
- name: lytics_triggers_stream
  endpoint:
    path: /services/data/vXX.X/sobjects/KinesisStream
    method: PUT
    data_selector: records
    params: {}
- name: audience_event_triggers
  endpoint:
    path: /export/audience/triggers
    method: POST
    data_selector: eventData
    params: {}
- name: Export Activity Data
  endpoint:
    path: /services/data/vXX.X/export
    method: POST
    data_selector: records
- name: export_activity_data
  endpoint:
    path: /export/activity/data
    method: POST
- name: Export Audiences Triggers
  endpoint:
    path: /send-messages
    method: POST
    data_selector: notifications
    params: {}
- name: export_audience_triggers
  endpoint:
    path: /export/audience/triggers
    method: POST
- name: Export Activity Data
  endpoint:
    path: /export/activity/data
    method: POST
- name: user_profiles
  endpoint:
    path: /import/redshift
    method: POST
- name: user_enrichment
  endpoint:
    path: /service/api/v2/user
    method: POST
- name: Export Activity Data
  endpoint:
    path: /services/data/vXX.X/export
    method: POST
    data_selector: records
- name: customers
  endpoint:
    path: /customers
    method: POST
- name: export_activity_data
  endpoint:
    path: /export/activity/data
    method: POST
    data_selector: results
    params: {}
- name: export_activity_data
  endpoint:
    path: /export_activity_data
    method: POST
- name: SFTP Export
  endpoint:
    path: /sftp/export
    method: POST
- name: user_enrichment
  endpoint:
    path: /service/api/v2/user
    method: POST
    data_selector: response_data
    params: {}
- name: export_audiences
  endpoint:
    path: /api/export_audiences
    method: POST
- name: customer_export
  endpoint:
    path: /customers
    method: PUT
    data_selector: records
- name: brevo_users
  endpoint:
    path: /brevo_users
    method: GET
- name: brevo_activity
  endpoint:
    path: /brevo_activity
    method: GET
- name: brevo_sms_activity
  endpoint:
    path: /brevo_sms_activity
    method: GET
- name: cm_user
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: cm_activity
  endpoint:
    path: /activity
    method: GET
    data_selector: records
- name: Export Audiences
  endpoint:
    path: /api/export_audiences
    method: POST
- name: brevo_users
  endpoint:
    path: /import_users_and_activity
    method: POST
- name: brevo_activity
  endpoint:
    path: /import_users_and_activity
    method: POST
- name: brevo_sms_activity
  endpoint:
    path: /import_users_and_activity
    method: POST
- name: clearbit_users
  endpoint:
    path: /enrichment
    method: GET
    data_selector: data
- name: clearbit_users
  endpoint:
    path: /clearbit/users
    method: GET
    data_selector: users
- name: cm_user
  endpoint:
    path: /api/v3/users
    method: GET
    data_selector: records
- name: cm_activity
  endpoint:
    path: /api/v3/activity
    method: GET
    data_selector: records
- name: webhook
  endpoint:
    path: /collect/json/contentful_webhooks
    method: POST
- name: Export Audiences
  endpoint:
    path: /api/v1/export_audiences
    method: POST
    data_selector: data
    params: {}
- name: clearbit_users
  endpoint:
    path: /clearbit/users
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: clearbit_users
  endpoint:
    path: /clearbit_users
    method: GET
    data_selector: records
- name: import_entries
  endpoint:
    path: /data_pipeline/jobs/create_new
    method: POST
    data_selector: entries
- name: sync_audience_definitions
  endpoint:
    path: /data_pipeline/jobs/create_new
    method: POST
    data_selector: audience_definitions
- name: contact_imports
  endpoint:
    path: /api/v1/contact_imports
    method: POST
    data_selector: data
    params: {}
- name: Import Entries
  endpoint:
    path: /data-pipeline/jobs/create-new
    method: POST
    data_selector: jobs
    params: {}
- name: Sync Audience Definitions
  endpoint:
    path: /data-pipeline/jobs/create-new
    method: POST
    data_selector: jobs
    params: {}
- name: export_audiences
  endpoint:
    path: /api/v1/export_audiences
    method: POST
- name: Cordial Contacts Import
  endpoint:
    path: /cordial/contacts/import
    method: POST
    data_selector: users
    params: {}
- name: dotmailer_export_status
  endpoint:
    path: /dotmailer_export_status
    method: POST
    data_selector: records
- name: export_users
  endpoint:
    path: /api/v1/export
    method: POST
- name: remove_contacts
  endpoint:
    path: /remove_contacts
    method: POST
    data_selector: records
- name: export_audience
  endpoint:
    path: /api/2.0/preview/audiences/export
    method: POST
- name: drift_contacts
  endpoint:
    path: /api/collect/json/drift
    method: POST
- name: drift_conversations
  endpoint:
    path: /api/collect/json/drift
    method: POST
- name: dotmailer_export_status
  endpoint:
    path: /dotmailer_export_status
    method: POST
    data_selector: records
- name: recipients
  endpoint:
    path: /Recipients
    method: POST
    data_selector: recipients
    params: {}
- name: remove_contacts
  endpoint:
    path: /remove-contacts
    method: POST
    data_selector: records
- name: drift_contacts
  endpoint:
    path: /api/v1/drift_contacts
    method: GET
    data_selector: records
- name: drift_conversations
  endpoint:
    path: /api/v1/drift_conversations
    method: GET
    data_selector: records
- name: fullcontact_users
  endpoint:
    path: /v2/person.json
    method: GET
- name: Export Audiences
  endpoint:
    path: /export/audiences
    method: POST
    data_selector: audiences
- name: recipients
  endpoint:
    path: /api/campaign/recipients
    method: POST
    data_selector: recipients
- name: fullcontact_users
  endpoint:
    path: /v2/person.json
    method: GET
- name: LyticsSegments
  endpoint:
    path: /key-values
    method: POST
    data_selector: key_values
- name: export_audiences
  endpoint:
    path: /export/audiences
    method: POST
- name: Customer Match
  endpoint:
    path: /customers/uploadClickConversions
    method: POST
- name: Export System Events
  endpoint:
    path: /export/system_events
    method: POST
- name: Export Audience Changes
  endpoint:
    path: /export/audience_changes
    method: POST
- name: LyticsSegments
  endpoint:
    path: /ad-manager/key-values
    method: POST
    data_selector: key-values
    params: {}
- name: export_all_users
  endpoint:
    path: /export_all_users
    method: POST
    data_selector: records
- name: Enhanced Conversion
  endpoint:
    path: /customers/uploadClickConversions
    method: POST
    data_selector: conversion
    params: {}
- name: export_system_events
  endpoint:
    path: /bigquery/export/system_events
    method: POST
- name: Export Stream
  endpoint:
    path: /pubsub/export
    method: POST
    data_selector: data
    params: {}
- name: export_system_events
  endpoint:
    path: /v2/projects/{projectId}/datasets/{datasetId}/tables/{tableId}/insert
    method: POST
    data_selector: records
- name: export_audience_changes
  endpoint:
    path: /v2/projects/{projectId}/datasets/{datasetId}/tables/{tableId}/insert
    method: POST
    data_selector: records
- name: lytics_system_event_export
  endpoint:
    path: /v2/tables
    method: GET
    data_selector: records
- name: Export Audiences (Google Cloud)
  endpoint:
    path: /export_audiences
    method: POST
- name: Google Sheets Import
  endpoint:
    path: /spreadsheets.values.batchGet
    method: GET
- name: 'Pub/Sub: Stream Export'
  endpoint:
    path: /v1/projects/{project_id}/topics/{topic_id}:publish
    method: POST
    data_selector: data
    params: {}
- name: Export Audiences
  endpoint:
    path: /export_audiences
    method: POST
- name: audience
  endpoint:
    path: /audiences
    method: POST
    data_selector: data
    params: {}
- name: Google Sheets Import
  endpoint:
    path: /spreadsheets.values.batchGet
    method: GET
- name: conversion_export
  endpoint:
    path: /google/cm360/conversion/export
    method: POST
    data_selector: conversions
    params: {}
- name: conversionsBatchUpdateRequest
  endpoint:
    path: /conversions/batchUpdate
    method: POST
    data_selector: conversions
    params: {}
- name: conversionsBatchInsertRequest
  endpoint:
    path: /conversions/batchInsert
    method: POST
    data_selector: conversions
    params: {}
- name: 'Google CM360: Offline and Enhanced Conversion'
  endpoint:
    path: /api/conversions
    method: POST
    data_selector: conversions
    params: {}
- name: GTM Variable
  endpoint:
    path: /variables
    method: POST
    data_selector: variable
    params: {}
- name: GTM Trigger
  endpoint:
    path: /triggers
    method: POST
    data_selector: trigger
    params: {}
- name: conversion_export_job
  endpoint:
    path: /conversion/export/job
    method: POST
- name: hubspot_contacts
  endpoint:
    path: /contacts/v1/lists/all/contacts/all
    method: GET
    data_selector: contacts
- name: hubspot_activity
  endpoint:
    path: /email/v1/events
    method: GET
    data_selector: events
- name: Lytics Audiences
  endpoint:
    path: /set_lytics_audiences
    method: POST
    data_selector: audiences
    params: {}
- name: export_audience
  endpoint:
    path: /export/audience
    method: POST
    data_selector: results
- name: hubspot_contacts
  endpoint:
    path: /docs/methods/contacts/get_contacts
    method: GET
- name: hubspot_activity
  endpoint:
    path: /docs/methods/email/get_events
    method: GET
- name: Export Audiences
  endpoint:
    path: /export_audiences
    method: POST
- name: Export Audiences
  endpoint:
    path: /api/export_audiences
    method: POST
- name: users
  endpoint:
    path: /api/users/updateUser
    method: POST
    data_selector: records
- name: lists
  endpoint:
    path: /api/lists/subscribe
    method: POST
    data_selector: records
- name: lists_create
  endpoint:
    path: /api/lists/create
    method: POST
    data_selector: records
- name: lists_unsubscribe
  endpoint:
    path: /api/lists/unsubscribe
    method: POST
    data_selector: records
- name: lists_subscribe
  endpoint:
    path: /api/lists/subscribe
    method: POST
    data_selector: records
- name: lists_create
  endpoint:
    path: /api/lists/create
    method: POST
    data_selector: records
- name: users_updateUser
  endpoint:
    path: /api/users/updateUser
    method: POST
    data_selector: records
- name: lists_unsubscribe
  endpoint:
    path: /api/lists/unsubscribe
    method: POST
    data_selector: records
- name: iterable_users
  endpoint:
    path: /api/users
    method: GET
    data_selector: users
- name: iterable_activity
  endpoint:
    path: /api/activity
    method: GET
    data_selector: activity
- name: iterable_in_app_activity
  endpoint:
    path: /api/in_app_activity
    method: GET
    data_selector: in_app_activity
- name: iterable_push_activity
  endpoint:
    path: /api/push_activity
    method: GET
    data_selector: push_activity
- name: iterable_sms_activity
  endpoint:
    path: /api/sms_activity
    method: GET
    data_selector: sms_activity
- name: iterable_users
  endpoint:
    path: /api/docs#export_exportDataCsv
    method: GET
- name: iterable_activity
  endpoint:
    path: /api/docs#export_exportDataCsv
    method: GET
- name: iterable_in_app_activity
  endpoint:
    path: /api/docs#export_exportDataCsv
    method: GET
- name: iterable_push_activity
  endpoint:
    path: /api/docs#export_exportDataCsv
    method: GET
- name: iterable_sms_activity
  endpoint:
    path: /api/docs#export_exportDataCsv
    method: GET
- name: email_campaign
  endpoint:
    path: /email-campaign-page
    method: GET
    data_selector: encoded_email
- name: jebbit_activity
  endpoint:
    path: /data_stream/jebbit_activity
    method: POST
    data_selector: interaction_data
- name: email_campaign
  endpoint:
    path: /email-campaign-page
    method: GET
    data_selector: encoded_email
    params: {}
- name: jebbit_activity
  endpoint:
    path: /path/to/jebbit_activity
    method: POST
    data_selector: data
- name: klaviyo_users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
- name: klaviyo_activity
  endpoint:
    path: /api/activity
    method: GET
    data_selector: data
- name: export_leads
  endpoint:
    path: /export/leads
    method: POST
- name: klaviyo_users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
- name: klaviyo_activity
  endpoint:
    path: /api/activity
    method: GET
    data_selector: data
- name: Export Audience
  endpoint:
    path: /v2/matchedAudiences
    method: POST
    data_selector: results
    params: {}
- name: Export Leads
  endpoint:
    path: /api/exports/leads
    method: POST
- name: LinkedIn Segments
  endpoint:
    path: /v2/segments
    method: POST
- name: RampID Enrichment
  endpoint:
    path: /path/to/rampid/enrichment
    method: POST
    data_selector: records
- name: Export Audiences S3
  endpoint:
    path: /path/to/export/audiences/s3
    method: POST
    data_selector: records
- name: Export Audiences SFTP
  endpoint:
    path: /path/to/export/audiences/sftp
    method: POST
    data_selector: records
- name: Collect LiveRamp Envelope via ATS
  endpoint:
    path: /path/to/collect/envelope/ats
    method: POST
    data_selector: records
- name: Collect LiveRamp Envelope via RTIS
  endpoint:
    path: /path/to/collect/envelope/rtis
    method: POST
    data_selector: records
- name: RampID Enrichment
  endpoint:
    path: /liveramp/enrichment
    method: POST
    data_selector: liveramp_idl
    params: {}
- name: Export Audiences
  endpoint:
    path: /api/localytics/export_audiences
    method: POST
    data_selector: profiles
- name: export_audiences
  endpoint:
    path: /export_audiences
    method: POST
- name: export_audiences
  endpoint:
    path: /api/export/audiences
    method: POST
    data_selector: profiles
    params:
      existing_users: true
- name: export_audiences
  endpoint:
    path: /export/audiences
    method: POST
- name: audience_export
  endpoint:
    path: /export/audiences
    method: POST
- name: audience_export
  endpoint:
    path: /api/audience/export
    method: POST
- name: Export Events as CSV to SFTP
  endpoint:
    path: /export/events/csv
    method: POST
- name: Export Events as CSV to SFTP
  endpoint:
    path: /api/v1/export_events_as_csv_to_sftp
    method: POST
    data_selector: data
    params: {}
- name: Export Events as CSV to SFTP
  endpoint:
    path: /export/csv/sftp
    method: POST
- name: export_events_csv
  endpoint:
    path: /export/events/csv/sftp
    method: POST
    data_selector: data
    params: {}
- name: audiences
  endpoint:
    path: /api/v3/lists
    method: GET
    data_selector: lists
- name: audiences
  endpoint:
    path: /api/v3/lists
    method: GET
    data_selector: audiences
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: message
    params: {}
- name: domains
  endpoint:
    path: /domains
    method: GET
    data_selector: domains
    params: {}
- name: mg_events
  endpoint:
    path: /mg_events
    method: GET
- name: mg_events
- name: audiences
  endpoint:
    path: /export-audiences
    method: POST
    data_selector: user
    params: {}
- name: experiences
  endpoint:
    path: /experiences
    method: GET
    data_selector: experiences
    params: {}
- name: bluehornet_subscribers
  endpoint:
    path: /api/subscribers
    method: GET
- name: bluehornet_activity
  endpoint:
    path: /api/activity
    method: GET
- name: bluehornet_subscribers
  endpoint:
    path: /bluehornet/subscribers
    method: GET
- name: bluehornet_activity
  endpoint:
    path: /bluehornet/activity
    method: GET
- name: Export Audiences
  endpoint:
    path: /rest/v1/leads.json
    method: POST
- name: contacts
  endpoint:
    path: /api/contacts
    method: POST
    data_selector: contacts
- name: contacts
  endpoint:
    path: /api/contacts
    method: POST
    data_selector: contacts
- name: Export Audiences
  endpoint:
    path: /vXX.X/audiences/export
    method: POST
    data_selector: data
    params: {}
- name: Export Audiences (Web Traffic)
  endpoint:
    path: /vXX.X/audiences/export/web-traffic
    method: POST
    data_selector: data
    params: {}
- name: Export Audiences (Conversion API)
  endpoint:
    path: /vXX.X/audiences/export/conversion-api
    method: POST
    data_selector: data
    params: {}
- name: experiences
  endpoint:
    path: /experiences
    method: GET
    data_selector: data
    params: {}
- name: Export Audience
  endpoint:
    path: /bulk/upload
    method: POST
    data_selector: users
    params: {}
- name: Export Audiences
  endpoint:
    path: /vXX.X/audiences
    method: POST
    data_selector: audiences
- name: Export Audiences (Web Traffic)
  endpoint:
    path: /vXX.X/web_traffic_audiences
    method: POST
    data_selector: web_traffic_audiences
- name: Export Audiences (Conversion API)
  endpoint:
    path: /vXX.X/conversion_api
    method: POST
    data_selector: conversion_api
- name: Export Events (Blob Storage)
  endpoint:
    path: /export/events/blob/storage
    method: POST
    data_selector: records
- name: Export Audiences (Blob Storage)
  endpoint:
    path: /export/audiences/blob/storage
    method: POST
    data_selector: records
- name: export_audience
  endpoint:
    path: /bulk-service/getbulkuploadurl
    method: POST
- name: Azure Blob Service
  endpoint:
    path: /services/blob
    method: PUT
    data_selector: event data
    params: {}
- name: Export Events (Blob Storage)
  endpoint:
    path: /services/data/vXX.X/sobjects/ExportEventsBlobStorage
    method: POST
    data_selector: records
- name: Export Events
  endpoint:
    path: /export/events/blob/storage
    method: POST
    data_selector: records
    params: {}
- name: event_quota_alerts
  endpoint:
    path: /api/event_quota_alerts
    method: POST
    data_selector: alerts
- name: netsuite_consumers
  endpoint:
    path: /services/netsuite/consumers
    method: GET
    data_selector: records
- name: netsuite_consumers
  endpoint:
    path: /services/data/vXX.X/sobjects/netsuite_consumers
    method: GET
    data_selector: records
- name: Export Audiences
  endpoint:
    path: /export/audiences
    method: POST
- name: Export Audiences
  endpoint:
    path: /export/audiences
    method: POST
- name: Get User
  endpoint:
    path: /reference/get_user-id
    method: GET
- name: Delete User
  endpoint:
    path: /reference/delete_user-id
    method: DELETE
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Export to Eloqua
  endpoint:
    path: /op-api-bulk-2.0-contacts-imports-id-data-post
    method: POST
- name: Get User
  endpoint:
    path: /reference/get_user-id
    method: GET
- name: Delete User
  endpoint:
    path: /reference/delete_user-id
    method: DELETE
- name: export_audiences
  endpoint:
    path: /op/api/bulk/2.0/contacts/imports/id/data
    method: POST
    data_selector: records
- name: radar_events
  endpoint:
    path: /events
    method: POST
    data_selector: data
- name: radar_users
  endpoint:
    path: /users
    method: POST
    data_selector: data
- name: import_template
  endpoint:
    path: /import/template
    method: POST
- name: import_status
  endpoint:
    path: /import/status
    method: GET
- name: create_list
  endpoint:
    path: /list/create
    method: POST
- name: lists
  endpoint:
    path: /lists
    method: GET
- name: create_import_template
  endpoint:
    path: /import/template/create
    method: POST
- name: radar_events
  endpoint:
    path: /path/to/radar_events
    method: POST
    data_selector: records
- name: radar_users
  endpoint:
    path: /path/to/radar_users
    method: POST
    data_selector: records
- name: custom_audience_export
  endpoint:
    path: /api/convert
    method: POST
- name: user
  endpoint:
    path: /user
    method: POST
- name: responsys_events
  endpoint:
    path: /import/activity/data
    method: GET
    data_selector: user_profiles
- name: sailthru_users
  endpoint:
    path: /job
    method: POST
- name: export_audiences
  endpoint:
    path: /user
    method: POST
- name: import_job
  endpoint:
    path: /import_jobs
    method: POST
- name: user
  endpoint:
    path: /user
    method: POST
- name: sailthru_users
  endpoint:
    path: /job
    method: POST
- name: sailthru_export
  endpoint:
    path: /user
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Leads
  endpoint:
    path: /services/data/vXX.X/sobjects/Lead
    method: POST
    data_selector: records
- name: Opportunities
  endpoint:
    path: /services/data/vXX.X/sobjects/Opportunity
    method: POST
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sfmc_events
  endpoint:
    method: POST
- name: sfmc_subscribers
  endpoint:
    method: POST
- name: Import Subscriber and Activity
  endpoint:
    path: /import/subscriber_activity
    method: POST
- name: Export Audience To Existing Data Extension
  endpoint:
    path: /export/audience/existing_data_extension
    method: POST
- name: Export Audience To New Data Extension
  endpoint:
    path: /export/audience/new_data_extension
    method: POST
- name: Export Lists
  endpoint:
    path: /export/lists
    method: POST
- name: Trigger Journey
  endpoint:
    path: /trigger/journey
    method: POST
- name: metrics
  endpoint:
    path: /retrieve
    method: GET
    data_selector: OpenEvents
    params: {}
- name: prospects
  endpoint:
    path: /api/prospects
    method: GET
    data_selector: prospects
- name: lists
  endpoint:
    path: /api/lists
    method: GET
    data_selector: lists
- name: export
  endpoint:
    path: /exports
    method: POST
    data_selector: export_result
    params:
      frequency: daily
      file_name: export-lytics-segment_slug-timestamp.csv
- name: export
  endpoint:
    path: /export
    method: POST
    data_selector: exports
    params:
      frequency: Daily
      export_format: csv
- name: contacts
  endpoint:
    path: /v3/contactdb/recipients
    method: POST
    data_selector: recipients
- name: segments
  endpoint:
    path: /v3/marketing/contacts
    method: POST
    data_selector: segments
- name: contacts
  endpoint:
    path: /v3/contactdb/recipients
    method: POST
    data_selector: recipients
- name: segments
  endpoint:
    path: /v3/marketing/segments
    method: POST
    data_selector: segments
- name: lytics_segments
  endpoint:
    path: /v3/marketing/contacts
    method: POST
    data_selector: data
    params: {}
- name: create_custom_field
  endpoint:
    path: /v3/marketing/contacts
    method: POST
    data_selector: data
    params: {}
- name: create_segment
  endpoint:
    path: /v3/marketing/segments
    method: POST
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v3/contactdb/recipients
    method: POST
    data_selector: recipients
- name: segments
  endpoint:
    path: /v3/contactdb/segments
    method: POST
    data_selector: segments
- name: sendgrid_webhooks
  endpoint:
    path: /collect/json/sendgrid_webhooks
    method: POST
    data_selector: event_data
    params:
      access_token: '{API_TOKEN}'
- name: sendgrid_webhooks
  endpoint:
    path: /collect/json/sendgrid_webhooks
    method: POST
    data_selector: events
    params:
      access_token: '{API_TOKEN}'
- name: shopify_products
  endpoint:
    path: /admin/api/2021-04/products.json
    method: GET
    data_selector: products
- name: shopify_products
  endpoint:
    path: /admin/api/products.json
    method: GET
    data_selector: products
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: export_audiences
  endpoint:
    path: /export_audiences
    method: POST
- name: audience_changes
  endpoint:
    path: /LYTICS_SEG_CHANGES
    method: POST
    data_selector: events
- name: audience_changes
  endpoint:
    path: /audience_changes
    method: POST
    data_selector: events
- name: spark_activity
  endpoint:
    path: /api/v1/spark_activity
    method: POST
    data_selector: data
    params: {}
- name: surveymonkey_contacts
  endpoint:
    path: /api/v3/contacts
    method: GET
- name: surveymonkey_responses
  endpoint:
    path: /api/v3/surveys/{survey_id}/responses
    method: GET
- name: surveymonkey_contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
- name: surveymonkey_responses
  endpoint:
    path: /surveys/{survey_id}/responses
    method: GET
    data_selector: responses
- name: swrve_users
  endpoint:
    path: /import/audiences
    method: POST
- name: swrve_users
  endpoint:
    path: /path/to/swrve_users
    method: GET
    data_selector: user_data
- name: audience_membership
  endpoint:
    path: /s3/csv/export
    method: POST
    data_selector: audience_membership
    params: {}
- name: data_streams
  endpoint:
    path: /docs/data-streams
    method: GET
    data_selector: data
- name: Export Web Events
  endpoint:
    path: /export/web/events
    method: POST
- name: Export App Events
  endpoint:
    path: /export/app/events
    method: POST
- name: Export Offline Events
  endpoint:
    path: /export/offline/events
    method: POST
- name: export_web_events
  endpoint:
    path: /export/web/events
    method: POST
- name: export_app_events
  endpoint:
    path: /export/app/events
    method: POST
- name: export_offline_events
  endpoint:
    path: /export/offline/events
    method: POST
- name: audiences
  endpoint:
    path: /audiences/export
    method: POST
    data_selector: data
- name: versium_b2b_enrichment
  endpoint:
    path: /enrichment/b2b
    method: POST
    data_selector: data
- name: versium_b2c_enrichment
  endpoint:
    path: /enrichment/b2c
    method: POST
    data_selector: data
- name: versium_firmographic_enrichment
  endpoint:
    path: /enrichment/firmographic
    method: POST
    data_selector: data
- name: versium_contact_enrichment
  endpoint:
    path: /enrichment/contact
    method: POST
    data_selector: data
- name: versium_demographic_enrichment
  endpoint:
    path: /enrichment/demographic
    method: POST
    data_selector: data
- name: versium_c2b_enrichment
  endpoint:
    path: /enrichment/c2b
    method: POST
    data_selector: data
- name: versium_ip_to_domain_enrichment
  endpoint:
    path: /enrichment/ip-to-domain
    method: POST
    data_selector: data
- name: versium_b2b_enrichment
  endpoint:
    path: /enrichment/b2b
    method: GET
    data_selector: records
- name: versium_b2c_enrichment
  endpoint:
    path: /enrichment/b2c
    method: GET
    data_selector: records
- name: versium_firmographic_enrichment
  endpoint:
    path: /enrichment/firmographic
    method: GET
    data_selector: records
- name: versium_contact_enrichment
  endpoint:
    path: /enrichment/contact
    method: GET
    data_selector: records
- name: versium_demographic_enrichment
  endpoint:
    path: /enrichment/demographic
    method: GET
    data_selector: records
- name: versium_c2b_enrichment
  endpoint:
    path: /enrichment/c2b
    method: GET
    data_selector: records
- name: versium_ip_to_domain_enrichment
  endpoint:
    path: /enrichment/ip-to-domain
    method: GET
    data_selector: records
- name: webhook_user_enrichment
  endpoint:
    path: /your/webhook/endpoint
    method: POST
    data_selector: response
    params: {}
- name: webhook_user_enrichment
  endpoint:
    path: /webhooks/user_enrichment
    method: POST
    data_selector: response
    params: {}
- name: audience_exit
  endpoint:
    path: /api/user/v1/delete
    method: POST
- name: audience_entry
  endpoint:
    path: /api/user/v1/upsert
    method: POST
- name: wistia_activity
  endpoint:
    path: /stats-api/events
    method: GET
- name: audience_exit
  endpoint:
    path: /api/user/v1/delete
    method: POST
    data_selector: users
- name: audience_entry
  endpoint:
    path: /api/user/v1/upsert
    method: POST
    data_selector: users
- name: custom_audience_users
  endpoint:
    path: /audiences/api-reference/custom-audience-users
    method: POST
- name: partner_match
  endpoint:
    path: /datax/guide/partner-match-api/api/
    method: POST
    data_selector: users
- name: Custom Audience Users
  endpoint:
    path: /en/docs/twitter-ads-api/audiences/api-reference/custom-audience-users
    method: POST
- name: identify_batch
  endpoint:
    path: /v2/identify/batch
    method: POST
- name: DataX Partner match
  endpoint:
    path: /datax/partner-match
    method: POST
- name: user_entered_segment
  endpoint:
    path: /user/entered_segment
    method: POST
    data_selector: data
    params: {}
- name: add_user_data
  endpoint:
    path: /user/add_data
    method: POST
    data_selector: data
    params: {}
- name: identify_batch
  endpoint:
    path: /v2/identify/batch
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: insights
  endpoint:
    path: /insights
    method: GET
    data_selector: insights
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: insights
  endpoint:
    path: /insights
    method: GET
    data_selector: records
notes:
- Enable event collection for visitors who have been identified as bots. Bot identification
  is based on a set of match attributes evaluated against the user-agent header.
- Should the full user-agent be collected as part of all web events?
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Add a valid API Token for your Lytics account. Be sure to give that token admin
  privileges.
- Ensure the Enable Tab setting is selected.
- Some objects may return nulls in deeply nested fields
- Requires setup of connected app in Lytics
- Some attributes may need to be allowed for public API access
- This API allows for real-time content personalization based on user interests.
- All content collection is available out of the box in all Lytics accounts.
- Ensure OAuth scopes are correctly set in the connected app.
- API rate limits may apply.
- Ensure proper OAuth2 setup for authentication.
- Monitoring and alerting is available on every job and every authorization within
  Lytics.
- Lytics will show the latest error message on the Conductor Diagnostics Dashboard
  and on the Logs tab of the Source/Destination Job Summary interface.
- Alerts can be configured for specific workflows, or for all workflows running in
  the account.
- Consider having one general alert to an Operations Channel or Team for all alerts,
  or alerts for specific workflows managed by particular teams.
- Consider which statuses to include.
- Workflows like critical batch import workflows can send a confirmation on successful
  syncs as well.
- During deploys or scaling events, processes can move between servers, potentially
  resulting in 1 or 2-minute gaps in metrics.
- Users with the Admin role can control other users' roles within your organization
  via the 'Manage Users' option from the account dropdown menu.
- Inviting a new user will prompt for an email address and roles to select the appropriate
  level of access the user will have within your Lytics account.
- IDP-initiated SSO has been deprecated and is no longer supported by Lytics.
- Ensure users' email addresses match between the IdP and Lytics for successful login.
- Users cannot be assigned to additional accounts via SSO alone; they must be manually
  invited to each Lytics account to which they need access.
- To share profile data, such as audience membership, with integrations such as Google
  Analytics, profiles must be accessible via our personalization API.
- Configuration options are available within the account settings JavaScript Tag section.
- Ensure all users leverage passwords with a high level of complexity.
- Prevent the re-use of a previous password for each user.
- Lock the user's account if there are too many concurrent failed password/login attempts.
- The maximum age in days that a password can be before it must be changed. A value
  of `0` disables the max-age restriction and will allow a password to persist for
  the life of the account.
- Ensure all account users leverage two-factor authentication.
- The following limits exist to ensure the optimum performance of the Lytics platform
  and your connected sites, data sources, and applications.
- 'Max number of active import integrations: 100'
- 'Max number of active export integrations: 200'
- 'Max integrations creations per hour: 10'
- 'Max lifetime of completed jobs: 90 days'
- 'Max lifetime of paused / failed jobs: 90 days'
- 'Max number of URLs enriched: 20,000 URLs per month'
- 'Max number of topics displayed: 500'
- 'Max number of topics per user: 50'
- 'Max number of Interest Engines: 10'
- 'Lookalike Model count: 20'
- 'Max model audience size: 20M users per audience'
- Lytics was designed to help companies establish first-party relationships with their
  customers and implement intelligent identity resolution strategies.
- Lytics has enabled a 'cookie culling' feature that prevents 'stale' (old) cookies
  from being used as identifiers to stitch the user profile fragments.
- Lytics recommends opting for a maximum of 60 days to keep cookies, but this setting
  can be customized according to your needs.
- Authorization metrics are currently only available for select providers (including
  Facebook, Iterable, Salesforce, SendGrid, and others), but metrics support is being
  added for all providers.
- Max input size is 4 KB.
- Max size in batch is 16 KB.
- Creating and managing access tokens gives fine-grained control over account and
  data access.
- Compaction in identity graphs can take on a few forms.
- Lytics customers are responsible for obtaining consent for collecting and transferring
  PII to Lytics for processing.
- Lytics and its data hosting partner, Google, have implemented numerous safeguards
  to protect the PII that Lytics processes on its customers' behalf.
- Cookies are one of the preferred methods for maintaining a user identifier in the
  browser.
- Lytics enables you to collect and leverage first-party data
- Lytics has a cookie culling feature that prevents stale cookies from being used
- Lytics prevents your identity strategy from breakdown through a set of powerful
  tools focused on ensuring profile health-related questions have concrete answers.
- For more information on Lytics' security and privacy program, please visit Lytics'
  trust center at https://trust.lytics.com/
- Consent is not a one size fits all scenario. Each customers data and business goals
  are unique.
- Lytics will scan and enrich up to 20,000 URLs per month by default.
- 'When setting up an export to Google Ads Customer Match, there are two dropdowns
  where you can set the given consent for the audience being exported: Ad User Data
  Consent and Personalization Data Consent.'
- When setting up an audience export to Google DV360, you must check the User Consent
  Confirmed checkbox to confirm that you have collected all required consent for the
  exported audience.
- Amazon DSP takes a different approach than Google in helping you comply with DMA
  requirements. When setting up export of cookies or emails to Amazon DSP, you will
  be asked to select all the countries where the user info was collected in the Country
  Codes input.
- All code examples in this document are purely for demonstration. Any customer facing
  implementation should follow the guidance of our customer facing technical teams
  and the technical experts on our customer’s end. These examples in production represent
  HIGH risk as documented.
- Requires setup of connected app in api
- Backfill messages can be sent using multiple means. API loads should be sent via
  the bulk CSV or bulk JSON endpoints.
- It is essential when a backfill occurs concurrently with a real-time stream of the
  same attribute.
- All messages imported into your Lytics account are stored in their raw form and
  represented as profile attributes in the graph.
- Uses OAuth2 with refresh token — requires setup of connected app in Lytics
- Detailed states are provided to understand better what is happening in the background
  during a job's lifecycle.
- Failed jobs will be automatically purged after 90 days.
- Paused works will be automatically purged after 90 days.
- Completed jobs will be purged from the job history after 90 days.
- Some use cases involve having historical data available for segmentation.
- Utilize timestamps whenever possible. All messages should have an explicit timestamp.
- Evaluate the necessity of importing large amounts of data before proceeding.
- Because these route rules are cached, it will take up to 10 minutes for any updates
  you make to take effect.
- Route rules are cached; updates may take up to 10 minutes to take effect.
- The endpoint requires name and type query parameters. An optional description can
  also be included.
- Implement fallback values for all fields
- Validate field existence
- It's important to note that fields and mappings should be in place before any data
  is ingested on a stream.
- Converts a phone number to the international E164 format for the specified country.
  If no country is provided, the system defaults to 'US' formatting.
- LQL is still available via API for technical users looking to automate process or
  manage fields and mappings in bulk.
- If you are using EU dates, you will need to specify the parser format.
- LQL is available via API for technical users looking to automate processes or manage
  fields and mappings in bulk.
- The core date parser recognizes about 50 date formats.
- Altering ranks without a clear intent can cause unexpected outcomes. When managing
  ranks it is always best to consult with your primary technical contact at Lytics.
- API_KEY is required for authentication
- Lytics profiles enjoy access to both a universal schema, which provides computed,
  intelligent attributes on every profile in Lytics, as well as a common schema, a
  set of standard attributes that facilitates faster integration and more reliable
  consistency when integrating profiles to and from other systems.
- Authorization selected controls access to the data warehouse.
- Each Data Model can only include 25 columns as activated fields.
- When building multiple Cloud Connect Data Models with the same primary key, you
  must select the same External Lytics Key mapping.
- The authorization selected for your Connection will control your Lytics account
  users' access to your data warehouse.
- Lytics users can access any data tables that the Connection Authorization has read
  access to.
- Each Lytics account will have a hard platform limit of 100 million records that
  can be retrieved and stored in any Cloud Connect Data Model.
- The main identifier must be of type string in the database.
- If a Cloud Connect Data Model will not be used and has been deactivated, it is best
  to copy the SQL and delete the model to free up space for active data models.
- If the 'Create New Profiles' option isn't selected on the Data Model, the count
  of users in the Audience Builder will only include profiles that already existed
  in your Lytics accounts
- Audience Builder will exclude any profiles which are marked as being Unhealthy
- Cloud Connect requires that the column you use as the primary key of your data model
  queries be UTF-8 collated. If your column is collated differently, this can cause
  your data model syncs to fail.
- User profiles are updated in real-time but may have a processing delay.
- In an effort to reduce the number of syncs needed, we set the 'Next Sync On' timestamp
  in a way where more models will end up synced together.
- Cloud Connect requires that the column you use as the primary key of your data model
  queries be UTF-8 collated.
- Some API calls may have rate limits.
- User profiles are updated in real-time, but there can be a delay during processing.
- If the recent activity module is empty, see documentation for configuring user fields.
- Audiences can have a maximum of 1,000 field values.
- When exceeded, the error message 'Audience too large! Remove values to save this
  audience' will be displayed.
- Unhealthy profiles are no longer processed for audience evaluations, audience exports
  or triggers.
- Unhealthy profiles can be exported via BigQuery, SFTP or S3.
- Newly created Lytics audiences are not enabled for API access by default.
- Lytics audiences are updated automatically.
- Audience sizes are not real-time and are updated every few hours.
- Newly created audiences are not enabled for API access by default.
- Requires setup of API access tokens
- Out of the box, Lytics provides a set of Prebuilt Audience Groups.
- The 'All' prebuilt Audience Group includes all audiences available in your Lytics
  account.
- The 'Your Audiences' prebuilt Audience Group displays all audiences that the authenticated
  user owns.
- The 'Recently Created' prebuilt Audience Group consists of all audiences that have
  been created within the last 30 days.
- The 'Recently Updated' prebuilt Audience Group consists of all audiences that have
  been modified within the last 30 days.
- The 'Unused' prebuilt Audience Group includes all audiences that are not associated
  with an experience.
- Each component can be customized in the Edit Component menu.
- Missing values are hidden by default.
- Lytics will track custom topics in addition to automatically extracted topics.
- Lytics automatically generates collections based on content sources.
- The Documents API allows you to retrieve document data.
- Collections can either be dynamic or locked.
- Lytics will train a Collaborative Filter model within minutes.
- Source and target audience must have a minimum of 25 users and a maximum of 20 million
  users.
- Activating a model may take up to an hour to fully calculate and save the scores.
- Deactivating a model stops the scoring process, but existing scores will be retained.
- The source and target audience must have a minimum of 25 users and a maximum of
  20 million users.
- If the selected audience exceeds the maximum size, filters can be added to refine
  it.
- Most Lookalike Models aim to balance accuracy and reach.
- Optimizing for accuracy typically targets later stages of the funnel.
- Optimizing for reach is most applicable for earlier stages of the funnel.
- When balancing trade-offs, consider the sum of accuracy and reach.
- The display URL must be included in your URL Allowlist for Orchestrate account setting.
- Conversion Rate metrics updated every 2 hours.
- Users can never be in more than one Stage per Goal at a time.
- Users must have behavioral data to make confident measurements before they have
  scores.
- Flows is currently in preview and can be enabled by request.
- It is scheduled for general availability in all accounts by the end of June, 2025.
- Keep flows focused on single objectives
- Use conditional splits sparingly
- Document complex flows with step names
- Updated 14 days ago
- Users can only enter the flow once
- Users can go through the flow multiple times
- 'Minimum time between flow entries: Default: 1 hour, Range: 1 hour to 365 days'
- No user processing, metrics generation, or export data transmission occurs in Draft
  State
- Cannot modify the running flow directly
- Flows is currently in preview and can be enabled by request. It is scheduled for
  general availability in all accounts by the end of June, 2025.
- This example uses a JavaScript function to populate form fields based on user profile
  data.
- Trigger step is the entry point for every flow and cannot be deleted.
- Users can only enter the flow once or multiple times based on configuration.
- Cannot modify the running flow directly, must create new version to make changes
- Flow has stopped accepting new users in Draining State
- Requires OAuth2 authentication for access
- Rate limits may apply depending on usage
- Uses OAuth2 — requires setup of connected app in Lytics
- The segment validate endpoint does not validate field names in your account.
- This endpoint does not validate field names in your account. It simply checks the
  syntax of the SegmentQL statement.
- If the total number of entities in the segment exceeds the limit provided in the
  request (the default value is 20) then we will paginate the results.
- Our SDK may take a second to set the proper hide/show settings for inline elements.
- Since this is primarily a developer use case we don't provide any native reporting
  of inline recommendations at the moment.
- Data can be uploaded via CSV SFTP upload or collection APIs.
- Lytics can ingest both large, bulk uploads and smaller, real-time uploads.
- If you experience a 'flicker' where elements are being rapidly shown then hidden
  and shown again you can add specific CSS to prevent this.
- Uses Google Tag Manager to forward events to Lytics
- Account ID is required for configuration
- Data can be uploaded to Lytics via CSV SFTP upload or collection APIs.
- Files imported via S3, SFTP, or bulk collection should be newline delimited.
- Classic Query API will be deprecated starting February 1, 2024.
- Please be sure you are using the correct API token when performing the next operation.
- Events are delivered to Lytics in real-time.
- Reduces the number of SDKs installed.
- Leverages Google-managed SDKs to streamline app approval.
- Lytics aims to create a holistic customer view through data unification.
- You may style the form using custom CSS.
- The example widget is targeted at an audience of anonymous users with a high intensity.
- The classic Query API will be deprecated starting February 1, 2024.
- This guide uses an email template promoting new products of a shoes retailer and
  personalizes it based on the types of shoes the user is interested in.
- Ensure you are using the correct API token when performing operations.
- Lytics helps marketers to drive quality traffic by unleashing streams of powerful
  first-party data to ad platforms.
- Inline img elements can not be added in the Lytics Experience editor.
- Use Pathfora to capture user information for marketing.
- Custom form elements can include text input, email input, text area, select box,
  checkboxes, and radio buttons.
- Uses dynamic templates based on audience membership.
- Ensure that the targeting audience requires that the field 'offer_code' exists.
- The lytics_custom_audience_push table is configured to accept strings as values.
  If you need to push a different data type for the value, let us know. We can also
  configure a table and mappings for integers, floats, and timestamps.
- One-off audience pushes are typically used for one downstream campaign. If you find
  yourself repeatedly targeting a one-off audience, talk to your Lytics account manager
  to have that audience reconfigured as a user attribute.
- OAuth2 authentication required
- Ensure that the targeting audience requires that the field in question exist.
- Fallback values can be defined for missing fields.
- Uses JavaScript configuration for content recommendations.
- Auto Tune option is turned off by default.
- Activation is required to create a Predictive Audience.
- Ensure that all content in your collection has similar image sizes if you do want
  to adjust its styles in the modal.
- By default, the Auto Tune option is turned off.
- If you’re not getting enough performance out of your models, try Auto Tune.
- Select Model Training Only if you're in an exploratory phase and not ready to target
  users based on this model's predictions.
- Depending on the sizes of your source and target audiences, your Lookalike Model
  may take a few minutes up to a few hours to build.
- This process can take up to three days for large audiences.
- Requires setup of connected app in API.
- Twilio's API requires phone numbers with a country code (e.g. +11234567890).
- Requires setup of OAuth client in Lytics
- Some API calls may have rate limits
- Audiences used for inline content modularization must be API Enabled and have an
  API ID.
- Twilio's API requires phone numbers with a country code (e.g. +11234567890). If
  phone numbers are not stored in this format in the user's Lytics profile the cloud
  function can be used to correctly format the number.
- When using a Twilio free trial, you can only send text messages to the numbers in
  your Verified Phone Number list.
- Requires OAuth2 setup with client credentials
- API rate limits may apply
- As your audiences change over time, use Lytics as a centralized hub for automatically
  syncing them with your connected advertising tools.
- The recommendation API will return different content for different users based on
  their affinities in Lytics.
- To prevent flickering of elements when the page loads, add CSS to hide recommendation
  blocks until populated.
- Ensure correct OAuth scopes are set for API access
- Rate limits apply to API calls
- Consider adding address information for direct mail exports.
- Lytics' Content Recommendation API can handle up to 250 requests per second, or
  15,000 requests per minute.
- If the rate-limit is not enabled with Iterable, Lytics may return a 429 HTTP Status
  Code.
- Requires setup of API token with Admin role
- Utilizing Google Tag Manager along with Lytics' Pathfora framework can greatly enhance
  your ability to deliver personalized and targeted content to your website visitors.
- Requires Lytics API token with Admin role.
- The default CSS that the Pathfora library ships with is deliberately specific.
- Inspect Element feature in Google Chrome developer tools can help debug CSS.
- OAuth2 required for accessing Lytics API
- Some objects may have rate limits.
- Widgets with the bar layout don't have a pf-widget-content div.
- Ensure you have the necessary OAuth scopes for access.
- Version 3 comes configured out-of-the-box with coverage ready for most use cases.
- For Single Page Apps, always configure and manage with an experienced developer.
- The core JavaScript tag requires hosting on a public server.
- Ensure the hosting solution can handle the necessary load generated by web assets.
- It is essential to remember that SRI is very technical and will require development
  resources on your end to facilitate.
- An SRI requirement often stems from strict security compliance for enterprise-level
  policies.
- Please read the following section carefully as leveraging SRI will have significant
  impacts on several of the out-of-the-box functions of the Lytics product.
- Lytics Support can offer limited assistance on implementing and managing SRI other
  than tag configuration guidance.
- Bug fixes or feature availability will depend on your team's ability to update the
  external files and associated SRI hashes.
- The generated URL should never be changed as it will prevent your data from being
  sent to Lytics.
- When using the tag generated from your Lytics account, your ID will be included
  and should not be altered.
- Ensure the hosting solution can handle the necessary load generated by your web
  asset(s).
- The src URL in the init config will need to be updated with the URL of your hosted
  JavaScript tag.
- Requires a valid Lytics API token for initialization.
- The SDK manages user identifiers and tracks events automatically.
- SRI requires external hosting of static assets.
- Manual updates needed for configuration changes.
- Uses API token for authentication.
- Ensure maxQueueSize and uploadInterval are configured for optimal performance.
- Ensure to add your valid Lytics API token during SDK initialization
- Requires a valid API token with data access to your Lytics account.
- Requires OAuth2 for authentication
- Ensure that access tokens are refreshed appropriately
- Requires valid Lytics API token for initialization.
- Ensure permissions are added to AndroidManifest.xml for internet access.
- It is recommended to create a new Acoustic User specific for Lytics with the option
  `Do not enforce password expiration policies for this user` selected so the authentication
  is long lasting, and can be revoked on an account by account basis.
- Access to an Admin username & password in Adroll is required in order to enable
  the usage of Lytics Audiences within AdRoll.
- Large audiences may take longer than an hour to export.
- Default backfill days is 90 days.
- Lytics can export file based data to Adobe Campaign via hourly/daily CSV file export
  to an SFTP location.
- Adobe Campaign can import CSV files from its own secure location.
- Limited API access on the Adobe Campaign side.
- You must delegate access to Lytics to your Amazon Marketing Cloud instance S3 bucket.
- AdRoll SmartPixel ID is required to target the correct account.
- Default backfill period is 90 days.
- You must delegate access to Lytics to your Amazon Marketing Cloud instance S3 bucket
- If using the Address, Phone, or Postal Code identifiers, the audience should contain
  users from only one country.
- Real-time Integration, with an optional one-time Backfill of the audience after
  setup.
- Uses Amazon Web Services for authorization with Access Key and Secret Key
- Some configuration options are optional.
- You must set up an AWS account and configure Lytics with Redshift's database username
  and password.
- Uses Amazon S3 API to read the CSV file selected.
- Uses AWS Keys for authorization
- Uses AWS API for data export to S3.
- Minimum scopes required are Customers and Orders.
- Exports user profiles and audience membership to BlueKai in a compressed, tab-separated
  value (TSV) format.
- Uses User API Key for authorization
- Real-time Integration that continuously enriches users as they fall into a source
  audience.
- At least one of External User ID, Braze ID, Email, Phone, or the combination of
  User Alias Label and User Alias Field must be set to be used as the identifier for
  the user in Braze.
- Requires read-access scopes to Customers and Orders for imports and modify scope
  to Customers and read-access scope to Orders for exports.
- The export job will run continuously. As users enter the Lytics audience, they will
  be added to the queue.
- The initial account authorization only needs to be performed one time.
- By default, campaign activity data and transactional data will be synced.
- Uses SFTP for file export — requires setup of BlueKai account
- Uses basic authentication with email and password.
- Integrates with Campaign Monitor APIs for real-time and batch processing.
- Requires setup of a Cheetah Digital account and consumer key/secret.
- First, Log into Clearbit, go to API, find your secret API Key, then copy it.
- Using email addresses, Lytics will consume Clearbit data to provide more information
  about audience members.
- Select Enrich Existing Users to enrich users already in the audience.
- Keep Updated option allows continuous import of data.
- Currently this integration only supports content entry ingestion and updates.
- There is no way to remove, mark as unpublished, or archive entries from Contentful
  in Lytics.
- Requires setup of Cheetah Digital account and authorization with consumer key and
  secret
- 'Max Calls per Month: Defines how many API calls this integration should use.'
- Both plugins are disabled by default and must be explicitly enabled in your JSTag
  configuration or via supported account settings.
- Currently this integration only supports content entry ingestion and updates. There
  is no way to remove, mark as unpublished, or archive entries from Contentful in
  Lytics.
- Users can be exported in batches of 30,000.
- It takes 12-24 hours for an audience update to process all data received, even with
  frequent uploads from Lytics.
- Both plugins are disabled by default and must be explicitly enabled in your JSTag
  configuration.
- Exports users to Cordial in batches of 30,000.
- Your Databricks cluster must be running to configure an authorization & connection
  and create Cloud Connect audiences in Lytics.
- We recommend using SQL Warehouses (ideally Serverless SQL Warehouses).
- Dotmailer rebranded to Dotdigital in January 2019
- Uses API Key for authorization — requires setup of Customer.io account
- Removing may significantly increase API usage.
- Your Databricks cluster must be running to configure an authorization & connection
- Uses File Based Transfer Integration and Databricks database connection
- Batch Integration every 24 hours. Each batch contains the entire audience, and replaces
  the previous table.
- Uses OAuth2 with access token for authentication — requires setup of Drift app
- Dotmailer rebranded to Dotdigital in January 2019. Due to backwards compatibility
  issues, old field and stream names still use dotmailer.
- Users should be available in the Episerver recipient list within a few minutes of
  starting the export. Larger audiences may take a few hours to be completely added
  to the list.
- Lytics highly recommends setting up Drift event webhooks for real-time event capture.
- FullContact will only give your API key once. If it is lost you will have to generate
  a new one.
- Requires setup of GIGYA account and API keys.
- Lytics targeting works for all Google Ad Manager tag types except passback tags.
- Ensure ads will not be initialized before the visitors profile has been retrieved.
- Requires setup of GIGYA account
- Export job can be configured to run continuously
- Uses Google Ads OAuth for authorization.
- This integration utilizes the Google BigQuery APIs to send system events.
- This workflow is optimized for scanning the Lytics user table without the need for
  considering audience membership.
- The export will run daily once it sends all the data.
- This job will only export new events coming into the data stream. Existing events
  will not be exported.
- The export job will go to sleep for 15 minutes to let BigQuery process the file.
- The job will sleep for 24 hours and will run again if the job is continuous.
- The job will repeat steps to upload data until all events are sent.
- 'Implementation Type: Server-side Integration.'
- 'Implementation Technique: File Based Transfer Integration.'
- 'Frequency: Batch Integration, frequency can be configured.'
- Integrating Lytics with Google Drive allows you to export Lytics user profiles and
  user fields to files in the drive.
- 'Implementation Technique: REST API Integration.'
- 'Frequency: Batch Integration.'
- 'Resulting data: Raw Event Data.'
- This job will only export new event coming into the data stream. Existing events
  will not be exported.
- Due to a Google requirement beginning March 1, 2024, the User Consent Confirmed
  checkbox must be selected for the DV360 Export Audiences workflow to run successfully.
- 'Implementation Type: Server-side Integration'
- 'Implementation Technique: REST API Integration'
- 'Frequency: Batch Integration'
- 'Resulting data: Raw Event Data'
- Events cannot be older than 28 days, and events with older conversion dates will
  be dropped.
- This is a beta export job. Please reach out to Lytics if you see any issues with
  this export job.
- Metrics are written every 60 seconds.
- Ensure the tag loads after the main Lytics tag for things to work properly.
- Leaving the approvedKeys array empty will push all audiences to GA4.
- The HubSpot account will need specific permissions to access data.
- Ensure this tag loads after the main Lytics tag for things to work properly.
- Requires setup of Lytics in iContact account
- Ensure to scan the audience for users before exporting
- The HubSpot account will need specific permissions for integration.
- Real-time Integration with an optional one-time Backfill of the audience after job
  setup.
- Select iContact from the list of providers.
- Select the export job type from the list.
- Requires setup of API Keys in Iterable account.
- Anonymous users are exported with a placeholder email.
- Lytics requires that webhooks are enabled to use Iterable Experiences as part of
  Lytics Orchestrate
- If you are running a continuous import from Iterable and using webhooks, some user
  activity data may be captured twice
- Integrating Lytics with Iterable allows you to import user and activity data such
  as clicks and opens to your Lytics user profiles, or export users based on audience
  membership in real-time to update lists or trigger timely email or push notifications.
- Requires setup of Iterable account and API Key
- Both known and anonymous users are exported
- If you are running a continous import from Iterable and using webhooks, some user
  activity data may be captured twice.
- The Lytics JavaScript tag must be installed on your site.
- Ensure that the Iterable integration is importing audiences and activity data.
- Users should be available in the Iterable list within a few minutes of starting
  the export. Larger audiences may take a few hours to be completely added to the
  list.
- Ensure the Lytics JavaScript tag is loaded before calling the getid function.
- Both webhooks and the Lytics integration require assistance from the Jebbit team
  to configure.
- Batch Integration every hour
- You are required to run the import leads job before you can update existing Leads
  via this job.
- Batch Integration every hour.
- The export job will run continuously. As users enter or exit the Lytics audience,
  they will be added to the queue.
- The export job runs continuously, sending data every 5 minutes or when the queue
  reaches 1,000 users.
- Ensure that your website is already configured with the LiveRamp ATS tag.
- Consult your web development team to ensure implementation patterns are compatible.
- The liveramp_pixel_url will be provided by the LiveRamp team.
- Uses API Key and API Secret for authorization.
- Sending audience membership to Lotame requires coordination between Lytics and Lotame.
- Lytics audiences files should appear in the S3 bucket in an hour.
- Sending audience membership to Lotame requires some coordination between Lytics
  and Lotame.
- Files are stored for 90 days by default on Lytics Managed SFTP server.
- Export configuration may be set to run hourly, daily, weekly, or monthly depending
  on user's choice.
- Monitor jobs, authorizations, audiences, and queries in your Lytics instance with
  real-time alerts to an email address.
- Export processes may be configured to run hourly, daily, weekly, or monthly.
- This integration utilizes Mailchimp APIs to export Lytics Audiences into Mailchimp.
- Integration utilizes Mailchimp APIs to export Lytics Audiences into Mailchimp.
- API requires an API key for authorization
- This integration utilizes SSH File Transfer Protocol to send user data.
- File name needs to be formatted as export-lytics-{audience name}-{timestamp}.csv.
- Uses API Username/Password, Integration ID, and Secret for authorization.
- New users are added to subsequent file uploads, and no users are removed.
- Lytics requires full API access.
- Lytics requires full API access for BlueHornet API Users.
- Uses OAuth2 with client credentials — requires setup of API user in Marketo
- Contacts should be updated in Maropost within a few minutes with the Lytics audience
  tags, and any other mapped fields.
- Batch Integration every day
- User with valid MediaMath IDs in the exported audiences will be batched every 10
  minutes
- Batch Integration that is continuously pushed every ten minutes
- Activating a Meta Experience functions similarly to the Export Audience workflow.
- Requires 'Super Admin' permission level within Microsoft Advertising.
- Uses OAuth2 for authorization
- Recommended to use Business Manager System User for long-term reliability
- Uses Azure Blob Service REST API to write CSVs to the configured container.
- Each run creates a blob with the configured file name.
- Make sure you've accepted the Customer Match terms within the Microsoft Advertising
  UI.
- Requires setup of connected app in Microsoft Advertising.
- Uses the Azure Blob Service REST API to write CSVs to the configured container in
  Azure Blob Storage.
- Export events into Azure Blob Storage so you can access, archive, or run analysis
  on Lytics events in the Azure ecosystem.
- Each run of the job will proceed to create a blob with the configured file name.
- Monitor the event quota in your Lytics instance with real-time alerts to a Microsoft
  Teams channel.
- Since the majority of your data will be custom fields, our team will need to do
  a little bit of work to process the data.
- Metrics are written out every 60 seconds.
- Import all consumers to the netsuite_consumers stream.
- If configured to run continuously, continue to import any new consumers hourly.
- 'Frequency: Real-time Integration.'
- This integration no longer supports 'Optimizely Classic.'
- If IP restrictions are enabled for your Oracle Eloqua account, you will need to
  have an administrator add Lytics' IP addresses to the approved list.
- The Pinterest account used for authorization must have Admin or Audience level permissions
  to enable the Pinterest Audience Export.
- A list can only contain one identifier type.
- Updates to users in Lytics are transmitted to PostUp lists. New recipients are added,
  existing recipients are updated. Recipients are never removed from PostUp lists.
- Unique identifiers are not included in the default mapping for these streams.
- Contact your Lytics account manager to enable the Radar integration.
- Updates to users in Lytics are transmitted to PostUp lists. New recipients are added,
  existing recipients are updated.
- Reddit Ads User authorization method is an Oauth2 based authorization for the Reddit
  Ads platform.
- Every 10,000 users or every 8 minutes, whichever is first, Lytics will send the
  batches of adds and removals from the custom audience.
- Requires setup of authorization with Username, Password, and Endpoint URI.
- Generate an API token with the Data Manager role and no expiration date.
- Batch Integration for the initial backfill of users. After initial user export,
  it is Real-time Integration.
- Requires setup of Sailthru account and API Key and Secret
- Implementation type is server-side.
- Frequency of job is batch.
- The name of Sailthru audience will be 'Lytics ' followed by the audience name that
  is being exported.
- Ensure the Lytics Sailthru import Hash Algorithm option is set to 'SHA-256' (default).
- Now all email clicks will pass the encrypted SHA256 email to your website when users
  click the links, and Lytics will map the encrypted email to the user's profile.
- Salesforce supports OAuth2.
- The user connecting to Salesforce must have the API Enabled and Offline User permissions.
- This feature is currently in beta and requires a CSV with a particular format to
  be generated in order to import data to Salesforce DMP.
- Uses OAuth2 with client credentials — requires setup of client keys in Salesforce
  Marketing Cloud
- Integration utilizes REST and SOAP APIs.
- Real-time integration is supported.
- For API Event tactics, activate the Salesforce Marketing Cloud journey before activating
  the Lytics Experience.
- For Data Extension tactics, activate the Experience in Lytics before activating
  the journey in Salesforce Marketing Cloud.
- Pardot does not currently support accessing an opportunity's custom fields through
  their API.
- This job does not require an authorization.
- User ID or Anonymous ID must be set.
- Before running this job you will need to set up a Source in your Segment account,
  this may be a Custom Source or a Legacy Project Source this will be the source where
  Lytics writes data in Segment.
- Exports data via SFTP
- Run this export daily.
- If Keep Updated is set, specify Time of Day and Time Zone for the export.
- Uses API Key for authorization.
- Users will not automatically be removed from your SendGrid account, or the list
  your segment is on.
- Once a user leaves the audience in Lytics, the lytics_segments field will be updated
  in SendGrid.
- Integration allows real-time updates on audience membership.
- A custom field 'lytics_segments' is created in SendGrid for audience membership.
- Lytics requires webhooks to use SendGrid Experiences.
- Lytics requires webhooks to be enabled to use SendGrid Experiences.
- Recommended event types include Dropped, Delivered, Bounced, Opened, Clicked, Unsubscribed
  From, Mark as Spam, ASM Group Unsubscribe, ASM Group Resubscribe.
- If no dates are specified in the configuration, all products will be imported.
- If Keep Updated is selected, the workflow will import modified products daily.
- Permissions `read_orders`, `read_customers` and `read_products` must be granted
  to the generated access token.
- If **Keep Updated** is selected, the workflow will import modified products daily.
- The integration setup in Sitecore is simple but requires back-end Sitecore and .NET
  development experience and access to your site's codebase.
- The above plugin was created and managed by a third party outside of Lytics' control.
- Monitor the event quota in your Lytics instance with real-time alerts to a Slack
  channel.
- Real-time Integration, with an optional one-time backfill of the audience after
  setup.
- Lytics only supports unencrypted private keys.
- You will need the username and password of your Sparkpost account.
- Obtain an API Key from Sparkpost.
- If sending triggered emails, you have created and published an email template in
  SparkPost to utilize when sending triggered emails.
- Ensure the user has permission to export survey results.
- Integrating Swrve and Lytics allows you to unite user data across channels.
- This integration utilizes the Swrve APIs to import user data.
- The export uploads CSVs containing audience membership to an S3 shared between Lytics
  and Taboola.
- Taboola ingests the files from the S3 and updates audience membership in Taboola
  accordingly.
- This export is for audience membership only. No fields are exported.
- The cookie sync needs time to sync users with Taboola and populate profiles in your
  Lytics account with Taboola IDs.
- Failing to specify a set of fields to pass to Lytics will result in all of them
  being sent. This can be a very large number of fields which might impair performance.
- This integration utilizes the TikTok Events 2.0 API to send Lytics audience trigger
  events to TikTok.
- Real-time Integration
- Uses TikTok Events 2.0 API for real-time integration.
- Uses Server-side Integration with REST API Integration.
- This integration allows you to leverage audiences that have been enriched with cross-channel
  behavior, data science scores, and content affinities on Lytics for improved targeting
  in your advertising campaigns on The Trade Desk.
- Activating The Trade Desk Experiences in Lytics initiates an Audience Export of
  the target audience, it will appear in The Trade Desk under the name of the Experience.
- Once the ID is enriched, it is refreshed every 90 days.
- Enrich Lytics users to add Unified ID 2.0 to their user profile.
- Users are enriched every minute or when the queue reaches 1000 users.
- Enrich Users job type requires access to selected Versium enrichment tools.
- Webhook URL must have the https scheme.
- If no stream is selected, the data will be posted in `webhook_enrichment` stream.
- Webhooks must have at least a 30-minute trigger window for time-based exports.
- This integration utilizes the Audience Trigger Webhook to send a secure request
  to Insider when a user exits the source audience.
- Select both Read all project and video data and Read detailed stats permissions
  for the API token.
- Ensure the auth is selected for the corresponding webhook trigger for entrances
  and exits.
- This integration utilizes X Ads API to send the Lytics audience users.
- Identifiers already SHA-256 hashed are accepted, otherwise plain user-identifier
  data will be SHA-256 hashed before being exported to X Ads.
- Select both Read all project and video data and Read detailed stats permissions
  for the key.
- This integration utilizes the Yahoo Data X API to send user match data to Yahoo.
- The Yahoo API currently doesn't support removals from custom audiences.
- Export job runs continuously, sending data every 5 minutes or when batch reaches
  1,000 users.
- An administrator for your Lytics account can generate an API token for you.
- This integration utilizes the Zendesk Connect API to send user data.
- Repeat export steps every 10 minutes.
- If continuous import is selected, the job will run every four hours checking for
  contact and subscription updates since the last run.
- Requires API token with administrator rights for Lytics
- The Lytics app is a private app
- Users are updated in Zendesk according to the Identifier Field selected in the configuration.
- If the user does not yet exist in Zendesk, it will be created.
- Mapped fields are updated in Zendesk every time an event for the user is processed.
- Lytics pulls contact and subscription information from the Zuora Data Query endpoint.
- Insights are generated and refreshed on a weekly basis.
- Insights expire after 2 weeks.
- Only import Experiences that will add value to your use cases
- This document describes a legacy implementation that Lytics is actively deprecating.
- Insights are generated and refreshed on a weekly basis to ensure you are viewing
  the most recent user data.
- Management of external Experiences happens inside your channel tools.
- Completed experiences will not show on the list of importable Experiences.
- If SSO is enabled as the only means of login on one account and a user attempts
  to log-in using Google OAuth or their username and password, the login session will
  fail.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: Check the request parameters for correctness.'
- '401 Unauthorized: Ensure valid tokens are in use.'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Check token validity.'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Check your access token.'
- '404 Not Found: The requested resource does not exist.'
- '400 Bad Request: Check for invalid input size or format.'
- '429 Too Many Requests: Throttle your requests.'
- 'Authorization issues: This is the most common reason for job failures.'
- 'External failures: Sometimes external systems can produce intermittent failures,
  like HTTP 503 errors if the system is temporarily unavailable.'
- 'Internal Lytics failures: While rare, sometimes the availability of internal Lytics
  resources can cause a job to fail.'
- 'Missing Fields: Implement fallback values'
- 'Type Errors: Validate data types'
- '403 Forbidden: Check your permissions.'
- '404 Not Found: Verify the endpoint URL.'
- Audience too large! Remove values to save this audience
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Check the OAuth token.'
- '401 Unauthorized: Check API key or token'
- '404 Not Found: Verify the report ID'
- '401 Unauthorized: Recheck authentication method or credentials.'
- '404 Not Found: Check the document ID or endpoint path.'
- '401 Unauthorized: Check your API key or authentication method.'
- 'Wait and Personalize: Please provide a valid delay value or condition'
- 'Export: Please configure export settings'
- 'Conditional Split: Please define split conditions'
- '401 Unauthorized: Check your authentication credentials'
- '429 Too Many Requests: Rate limit exceeded, try again later'
- '500 Internal Server Error: An error occurred on the server'
- Field 'offer_code' may not exist on the user profile.
- '401 Unauthorized: Check if the access token is valid'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Verify your OAuth token'
- '429 Too Many Requests: Rate limit exceeded'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify API key or access token'
- 'INVALID_CREDENTIALS: Check your client ID and secret'
- 'TOKEN_EXPIRED: Refresh your access token'
- '403 Forbidden: Check permissions for the requested resource'
- '404 Not Found: Ensure the endpoint is correct'
- '429 Too Many Requests: Slow down your API calls'
- '429: Too Many Requests'
- '429: Rate limit exceeded'
- '401 Unauthorized: Check your API credentials'
- '403 Forbidden: Check API key and permissions'
- '404 Not Found: Verify endpoint and parameters'
- '401 Unauthorized: Check your credentials and OAuth token.'
- '403 Forbidden: You do not have permission to access this resource.'
- 'Invalid API Token: Check the provided token and ensure it is active.'
- 'Network Error: Check your internet connection.'
- '400 Bad Request: Check the request parameters for validity.'
- '401 Unauthorized: Verify API token and access rights.'
- '500 Internal Server Error: Retry the request after a short delay.'
- '401 Unauthorized: Check your API token.'
- '401 Unauthorized: Check your access token'
- '404 Not Found: Verify the endpoint URL'
- '400 Bad Request: Check API token and request parameters.'
- '401 Unauthorized: Invalid API token provided.'
- 'INVALID_REQUEST: Check the request parameters and try again.'
- 'AUTHORIZATION_ERROR: Ensure proper authorization is set up.'
- '401 Unauthorized: Verify API Key.'
- '429 Too Many Requests: Reduce the frequency of requests.'
- '401 Unauthorized: Recheck API key or credentials'
- '401 Unauthorized: Recheck API Username or Password'
- '401 Unauthorized: Recheck API Key or User credentials'
- 'Dataset not found: Check if dataset exists in BigQuery.'
- 'Table not found: The job will create a new table if it does not exist.'
- '401 Unauthorized: Recheck API access or credentials'
- '400 Bad Request: Ensure all required parameters are included'
- '401 Unauthorized: Check API Key or permissions'
- '404 Not Found: Verify endpoint or resource availability'
- '401 Unauthorized: Recheck API key or permissions'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API key or secret.'
- 'Invalid Username or Password: Check your credentials.'
- 'Connection Timeout: Verify the SFTP server is reachable.'
- '401 Unauthorized: Invalid API key or token.'
- '401 Unauthorized: Invalid API key'
- '400 Bad Request: Missing required fields'
- '401 Unauthorized: Recheck API username/password or integration ID/secret'
- '401 Unauthorized: Recheck API Key or Account Number'
- 'INVALID_TOKEN: Check if the access token is valid'
- 'FORBIDDEN: Ensure you have proper permissions for the action'
- 'BAD_REQUEST: Verify the request data structure'
- Your Pinterest customer list will not appear in your Pinterest account dashboard
  until it is done processing and can be matched with at least 100 Pinterest accounts.
- '401 Unauthorized: Recheck API Key and Secret'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '401 Unauthorized: Verify Access Token.'
- '401 Unauthorized: Ensure the TikTok Event access token is valid.'
- '400 - Bad Request: Check the request payload for errors.'
- '404 - Not found: Ensure the webhook URL is correct.'
- '413 - Request Entity Too Large: Reduce the size of the request payload.'
- '400 - Bad Request: Check the request payload format.'
- '404 - Not found: Verify the webhook URL.'
- '413 - Request Entity Too Large: Reduce the payload size.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - AccessTokens
  - OAuth
  - AccessToken
  - ClientCredentials
  - apiToken
  - defaultStream
  - primaryIdentityKey
  - anonymousIdentityKey
  - API Key
  - User Key
  - Secret Key
  - crm.schemas.companies.write
  - crm.schemas.contacts.write
  - crm.schemas.deals.read
  - crm.schemas.deals.write
  - crm.objects.contacts.write
  - crm.lists.write
  - crm.lists.read
  - crm.schemas.contacts.read
  - crm.objects.contacts.read
  - crm.schemas.companies.read
  - content
  - Meta User
  - Business Manager System User
  - SurveyMonkey Access Token
client:
  base_url: https://api.lytics.io
  auth:
    type: SAML
    location: header
source_metadata: null
