resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: overall_limit
  endpoint:
    path: /api/rate_limit
    method: GET
    data_selector: null
    params: null
- name: tickets
  endpoint:
    path: /api/v2/tickets
    method: POST
    data_selector: ticket
    params: {}
- name: relationships_bulk_create
  endpoint:
    path: /api/v2/relationships/bulk-create
    method: POST
    data_selector: relationships
    params: {}
- name: relationships_view
  endpoint:
    path: /api/v2/relationships/[id]
    method: GET
    data_selector: relationships
    params: {}
- name: relationships_list_all
  endpoint:
    path: /api/v2/relationships
    method: GET
    data_selector: relationships
    params: {}
- name: relationships_list_asset
  endpoint:
    path: /api/v2/assets/[display_id]/relationships
    method: GET
    data_selector: relationships
    params: {}
- name: relationships_delete_bulk
  endpoint:
    path: /api/v2/relationships
    method: DELETE
    data_selector: relationships
    params:
      ids: '{ids}'
- name: relationship_types_list
  endpoint:
    path: /api/v2/relationship_types
    method: GET
    data_selector: relationship_types
    params: {}
- name: purchase_order
  endpoint:
    path: /api/v2/purchase_orders/[purchase_order_id]
    method: PUT
    data_selector: ''
    params: {}
- name: purchase_orders
  endpoint:
    path: /api/v2/purchase_orders
    method: GET
    data_selector: records
- name: purchase_orders
  endpoint:
    path: /api/v2/purchase_orders/[purchase_order_id]
    method: PUT
    data_selector: N/A
    params: N/A
- name: asset_types
  endpoint:
    path: /api/v2/asset_types
    method: GET
    data_selector: N/A
    params: N/A
- name: asset_type
  endpoint:
    path: /api/v2/asset_types/[id]
    method: PUT
    data_selector: N/A
    params: {}
- name: software
  endpoint:
    path: /api/v2/applications/[id]
    method: PUT
    data_selector: N/A
    params: {}
- name: applications
  endpoint:
    path: /api/v2/applications/[id]
    method: PUT
    data_selector: N/A
    params: {}
- name: applications
  endpoint:
    path: /api/v2/applications/[id]
    method: GET
    data_selector: N/A
    params: {}
- name: applications
  endpoint:
    path: /api/v2/applications/
    method: GET
    data_selector: N/A
    params: {}
- name: licenses
  endpoint:
    path: /api/v2/applications/[id]/licenses
    method: GET
    data_selector: N/A
    params: {}
- name: applications
  endpoint:
    path: /api/v2/applications/[id]
    method: DELETE
    data_selector: N/A
    params: {}
- name: applications
  endpoint:
    path: /api/v2/applications/
    method: DELETE
    data_selector: N/A
    params:
      ids: 9216,9218
- name: users
  endpoint:
    path: /api/v2/applications/[id]/users
    method: GET
    data_selector: records
    params: {}
- name: add_users
  endpoint:
    path: /api/v2/applications/[id]/users
    method: POST
    data_selector: records
    params: {}
- name: view_user
  endpoint:
    path: /api/v2/applications/[id]/users/[application_user_id]
    method: GET
    data_selector: records
    params: {}
- name: move_workspace
  endpoint:
    path: /api/v2/applications/[id]/move_workspace
    method: PUT
    data_selector: records
    params: {}
- name: update_users
  endpoint:
    path: /api/v2/applications/[id]/users
    method: PUT
    data_selector: records
    params: {}
- name: applications_users
  endpoint:
    path: /api/v2/applications/[id]/users
    method: DELETE
- name: software_installations
  endpoint:
    path: /api/v2/applications/[id]/installations
    method: POST
    data_selector: records
    params:
      installation_machine_id: '{installation_machine_id}'
      installation_path: '{installation_path}'
      version: '{version}'
      installation_date: '{installation_date}'
- name: list_installations
  endpoint:
    path: /api/v2/applications/[id]/installations
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /api/v2/applications/[id]/relationships
    method: GET
- name: contract
  endpoint:
    path: /services/data/vXX.X/sobjects/Contract
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contracts
  endpoint:
    path: /api/v2/contracts
    method: POST
    data_selector: null
    params: null
- name: contract_types
  endpoint:
    path: /api/v2/contract_types
    method: GET
    data_selector: null
    params: null
- name: tickets
  endpoint:
    path: /api/v2/tickets
    method: POST
    data_selector: ticket
    params: {}
- name: contract_types_fields
  endpoint:
    path: /api/v2/contract_types/[contract_type_id]/fields
    method: GET
    data_selector: N/A
    params: {}
- name: contract
  endpoint:
    path: /api/v2/contracts/[contract_id]
    method: GET
    data_selector: N/A
    params: {}
- name: contracts
  endpoint:
    path: /api/v2/contracts
    method: GET
    data_selector: N/A
    params:
      workspace_id: '[id]'
- name: move_contract_workspace
  endpoint:
    path: /api/v2/contracts/[contract_id]/move_workspace
    method: PUT
    data_selector: N/A
    params: {}
- name: contract
  endpoint:
    path: /contracts
    method: POST
    data_selector: null
    params:
      workspace_id: '{{workspace_id}}'
      name: '{{name}}'
      vendor_id: '{{vendor_id}}'
      auto_renew: '{{auto_renew}}'
      notify_expiry: '{{notify_expiry}}'
      notify_before: '{{notify_before}}'
      approver_id: '{{approver_id}}'
      start_date: '{{start_date}}'
      end_date: '{{end_date}}'
      cost: '{{cost}}'
      contract_number: '{{contract_number}}'
      contract_type_id: '{{contract_type_id}}'
      visible_to_id: '{{visible_to_id}}'
      notify_to: '{{notify_to}}'
      custom_fields: '{{custom_fields}}'
- name: contracts
  endpoint:
    path: /api/v2/contracts
    method: POST
    data_selector: null
    params: null
- name: contract
  endpoint:
    path: /api/v2/contracts
    method: POST
    data_selector: contract
    params: {}
- name: contract
  endpoint:
    path: /api/v2/contracts
    method: PUT
    data_selector: contract
    params:
      attachments[]: '@/Users/user/Desktop/api2.png'
      name: Sample Apple Contract
      vendor_id: 7
      approver_id: 12
      start_date: '2021-06-11T10:26:17Z'
      end_date: '2022-06-11T10:26:17Z'
      workspace_id: 2
      cost: 1500.33
      contract_number: APL-2
      contract_type_id: 1
- name: contract_update
  endpoint:
    path: /api/v2/contracts/[contract_id]
    method: PUT
    data_selector: contract
    params:
      name: Adobe contract
      vendor_id: 7
      auto_renew: true
      notify_expiry: true
      notify_before: 30
      approver_id: 12
      start_date: '2021-06-11T10:26:17Z'
      end_date: '2022-06-11T10:26:17Z'
      cost: 1500.33
      contract_number: ADB12
      visible_to_id: 4
      notify_to:
      - agent_name@freshworks.com
      custom_fields:
        cf_vendor_location: Chennai
      billing_cycle: annual
      item_cost_details:
      - id: 1
        item_name: Installation
        pricing_model: per_unit
        cost: 200
        count: 1
      future_contract_id: 6
      requester_id: 4
      delegatee_id: 2
      associated_asset_ids:
      - 10
      - 11
      workspace_id: 2
- name: contract_approval
  endpoint:
    path: /api/v2/contracts/[contract_id]
    method: PUT
    params:
      operation: submit-for-approval
- name: contracts_approve
  endpoint:
    path: /api/v2/contracts/[contract_id]
    method: PUT
- name: contracts_reject
  endpoint:
    path: /api/v2/contracts/[contract_id]
    method: PUT
- name: contracts_associated_assets
  endpoint:
    path: /api/v2/contracts/[contract_id]/associated-assets
    method: GET
- name: contracts_attachments
  endpoint:
    path: /api/v2/contracts/[contract_id]/attachments
    method: GET
- name: departments
  endpoint:
    path: /departments
    method: GET
- name: department
  endpoint:
    path: /api/v2/departments
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: department
  endpoint:
    path: /api/v2/departments/[id]
    method: PUT
    data_selector: records
    params:
      incremental: updated_at
- name: department
  endpoint:
    path: /api/v2/departments/[id]
    method: DELETE
    data_selector: records
- name: department_fields
  endpoint:
    path: /api/v2/department_fields
    method: GET
    data_selector: records
- name: business_hours
  endpoint:
    path: /api/v2/business_hours/[id]
    method: GET
    data_selector: records
- name: business_hours
  endpoint:
    path: /api/v2/business_hours
    method: GET
    data_selector: records
    params:
      workspace_id:
      - id
- name: project
  endpoint:
    path: /services/data/vXX.X/sobjects/Project
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: project_create
  endpoint:
    path: /api/v2/pm/projects
    method: POST
    data_selector: N/A
    params: N/A
- name: project_update
  endpoint:
    path: /api/v2/pm/projects/[id]
    method: PUT
    data_selector: N/A
    params: N/A
- name: project_view
  endpoint:
    path: /api/v2/pm/projects/[id]
    method: GET
    data_selector: N/A
    params: N/A
- name: ticket
  endpoint:
    path: /api/v2/tickets
    method: POST
    data_selector: ticket
    params: {}
- name: projects
  endpoint:
    path: /api/v2/pm/projects
    method: GET
    data_selector: N/A
    params:
      filter: completed
- name: delete_project
  endpoint:
    path: /api/v2/pm/projects/{id}
    method: DELETE
    data_selector: N/A
- name: archive_project
  endpoint:
    path: /api/v2/pm/projects/{id}/archive
    method: POST
    data_selector: N/A
- name: restore_project
  endpoint:
    path: /api/v2/pm/projects/{id}/restore
    method: POST
    data_selector: N/A
- name: project_task
  endpoint:
    path: /api/v2/pm/projects/[id]/tasks
    method: POST
    data_selector: Not provided
    params:
      title: Clear backlog
      description: Clear backlog
      status_id: 1
      priority_id: 4567
      type_id: 456789
      assignee_id: 984793
      planned_start_date: '2021-06-11T07:16:45Z'
      planned_end_date: '2021-06-20T07:16:45Z'
      planned_effort: null
      parent_id: 34534
      story_points: 1
      reporter_id: 789621
      sprint_id: 7892913
      version_id: 789271
      custom_fields:
        custom_text: This is a custom text box
- name: project_task_update
  endpoint:
    path: /api/v2/pm/projects/[project_id]/task/[id]
    method: PUT
    data_selector: null
    params:
      title: Clear backlog
      description: Clear backlog
      status_id: 1
      priority_id: 4567
      assignee_id: 984793
      planned_start_date: '2021-06-11T07:16:45Z'
      planned_end_date: '2021-06-20T07:16:45Z'
      duration: 1w 3d
      parent_id: 34534
      story_points: 1
      sprint_id: 7892913
      version_id: 789271
      custom_fields:
        custom_text: This is a custom text box
- name: project_task_view
  endpoint:
    path: /api/v2/pm/projects/[project_id]/tasks/[id]
    method: GET
    data_selector: null
- name: project_tasks_list
  endpoint:
    path: /api/v2/pm/projects/[id]/tasks
    method: GET
    data_selector: null
    params:
      filter: all
- name: project_task_delete
  endpoint:
    path: /api/v2/pm/projects/[project_id]/tasks/[id]
    method: DELETE
    data_selector: null
- name: project
  endpoint:
    path: /services/data/vXX.X/sobjects/Projects
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: project
  endpoint:
    path: /api/v2/pm/projects
    method: POST
    data_selector: project
    params:
      name: Intranet Site Development
      key: SP3
      description: <div>Project for Intranet Site Development</div>
      priority_id: 2
      sprint_duration: 14
      project_type: 0
      start_date: '2021-04-01'
      end_date: '2021-06-30'
      visibility: 1
      manager_id: 43423
      custom_fields:
        custom_text: This is a custom text box
- name: project_with_attachment
  endpoint:
    path: /api/v2/pm/projects
    method: POST
    data_selector: project
    params:
      attachments[]: '@/Users/user/Desktop/api_attach.png'
      name: Intranet Site Development
      description: Project for Intranet Site Development
      project_type: 0
- name: project
  endpoint:
    path: /api/v2/pm/projects/[id]
    method: PUT
    data_selector: project
    params:
      name: Intranet Site Development 3
      description: Project for Intranet Site Development 3
- name: project_attachment
  endpoint:
    path: /api/v2/pm/projects/[id]
    method: PUT
    data_selector: project
    params:
      attachments[]: '@/Users/user/Desktop/api_attach.png'
      name: Intranet Site Development 3
      description: Project for Intranet Site Development 3
- name: project_details
  endpoint:
    path: /api/v2/pm/projects/[id]
    method: GET
    data_selector: project
- name: projects
  endpoint:
    path: /api/v2/pm/projects
    method: GET
    data_selector: null
    params: {}
- name: project_delete
  endpoint:
    path: /api/v2/pm/projects/[id]
    method: DELETE
    data_selector: null
    params: {}
- name: project_archive
  endpoint:
    path: /api/v2/pm/projects/[id]/archive
    method: POST
    data_selector: null
    params: {}
- name: project_restore
  endpoint:
    path: /api/v2/pm/projects/[id]/restore
    method: POST
    data_selector: null
    params: {}
- name: project_fields
  endpoint:
    path: /api/v2/pm/project-fields
    method: GET
    data_selector: null
    params: {}
- name: project_templates
  endpoint:
    path: /api/v2/pm/project_templates
    method: GET
    data_selector: null
    params: {}
- name: project_add_members
  endpoint:
    path: /api/v2/pm/projects/[id]/members
    method: POST
    data_selector: null
    params: {}
- name: background_job
  endpoint:
    path: /api/v2/jobs/{job_id}
    method: GET
    data_selector: N/A
    params: {}
- name: create_association
  endpoint:
    path: /api/v2/pm/projects/{project_id}/tasks/{task_id}/{module_name}
    method: POST
    data_selector: N/A
    params:
      ids:
      - 1
      - 2
- name: view_associations
  endpoint:
    path: /api/v2/pm/projects/{project_id}/tasks/{task_id}/{module_name}
    method: GET
    data_selector: N/A
    params: {}
- name: delete_association
  endpoint:
    path: /api/v2/pm/projects/{project_id}/tasks/{task_id}/{module_name}/{id}
    method: DELETE
    data_selector: N/A
    params: {}
- name: delete_attachment
  endpoint:
    path: /api/v2/pm/projects/{project_id}/attachments/{id}
    method: DELETE
    data_selector: N/A
    params: {}
- name: task
  endpoint:
    path: /tasks
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: project_task
  endpoint:
    path: /api/v2/pm/projects/[id]/tasks
    method: POST
    data_selector: N/A
- name: ticket
  endpoint:
    path: /api/v2/tickets/[id]
    method: GET
    data_selector: N/A
    params: N/A
- name: project_task
  endpoint:
    path: /api/v2/pm/projects/1/tasks
    method: POST
    data_selector: task
- name: project_task
  endpoint:
    path: /api/v2/pm/projects/[project_id]/task/[id]
    method: PUT
    data_selector: records
    params:
      incremental: updated_at
- name: project_task
  endpoint:
    path: /api/v2/pm/projects/[project_id]/tasks/[id]
    method: GET
    data_selector: task
- name: project_task_type_fields
  endpoint:
    path: /api/v2/pm/projects/[project_id]/task-types/[type_id]/fields
    method: GET
    data_selector: N/A
    params: N/A
- name: project_task_types
  endpoint:
    path: /api/v2/pm/projects/[project_id]/task-types
    method: GET
    data_selector: N/A
    params: N/A
- name: project_task_priorities
  endpoint:
    path: /api/v2/pm/projects/[project_id]/task-priorities
    method: GET
    data_selector: N/A
    params: N/A
- name: project_task_statuses
  endpoint:
    path: /api/v2/pm/projects/[project_id]/task-statuses
    method: GET
    data_selector: N/A
    params: N/A
- name: project_versions
  endpoint:
    path: /api/v2/pm/projects/[project_id]/versions
    method: GET
    data_selector: N/A
    params: N/A
- name: project_sprints
  endpoint:
    path: /api/v2/pm/projects/[project_id]/sprints
    method: GET
    data_selector: N/A
    params: N/A
- name: project_memberships
  endpoint:
    path: /api/v2/pm/projects/[project_id]/memberships
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: create_associations
  endpoint:
    path: /api/v2/pm/projects/[project_id]/tasks/[task_id]/[module_name]
    method: POST
    data_selector: records
- name: view_associations
  endpoint:
    path: /api/v2/pm/projects/[project_id]/tasks/[task_id]/[module_name]
    method: GET
    data_selector: records
- name: delete_association
  endpoint:
    path: /api/v2/pm/projects/[project_id]/tasks/[task_id]/[module_name]/[id]
    method: DELETE
    data_selector: records
- name: create_note
  endpoint:
    path: /api/v2/pm/projects/[project_id]/tasks/[id]/notes
    method: POST
    data_selector: records
- name: note
  endpoint:
    path: /api/v2/pm/projects/[project_id]/tasks/[task_id]/notes
    method: POST
    data_selector: notes
    params: null
- name: solutions_categories
  endpoint:
    path: /api/v2/solutions/categories
    method: GET
    data_selector: records
    params:
      workspace_id: '[id]'
- name: delete_solutions_category
  endpoint:
    path: /api/v2/solutions/categories/{id}
    method: DELETE
    data_selector: records
- name: ticket
  endpoint:
    path: /api/v2/tickets
    method: GET
    data_selector: records
    params:
      workspace_id: '{{workspace_id}}'
- name: solution_folders
  endpoint:
    path: /api/v2/solutions/folders
    method: GET
    data_selector: records
    params:
      category_id: '{id}'
- name: solutions_articles
  endpoint:
    path: /api/v2/solutions/articles
    method: POST
    data_selector: N/A
    params:
      incremental: updated_at
- name: solutions_articles
  endpoint:
    path: /api/v2/solutions/articles
    method: POST
    data_selector: records
    params:
      incremental: updated_at
- name: solutions_articles_search
  endpoint:
    path: /api/v2/solutions/articles/search
    method: GET
    data_selector: records
    params: {}
- name: solutions_articles_send_for_approval
  endpoint:
    path: /api/v2/solutions/articles/{id}/send_for_approval
    method: PUT
    data_selector: records
    params: {}
- name: solutions_articles_publish
  endpoint:
    path: /api/v2/solutions/articles/{id}
    method: PUT
    data_selector: records
    params: {}
- name: solutions_articles
  endpoint:
    path: /api/v2/solutions/articles/{id}
    method: PUT
    data_selector: N/A
    params: N/A
- name: solutions_articles
  endpoint:
    path: /api/v2/solutions/articles/{id}
    method: GET
    data_selector: N/A
    params: N/A
- name: solutions_articles
  endpoint:
    path: /api/v2/solutions/articles?folder_id={id}
    method: GET
    data_selector: N/A
    params: N/A
- name: solutions_articles
  endpoint:
    path: /api/v2/solutions/articles/{id}
    method: DELETE
    data_selector: N/A
    params: N/A
- name: service_item
  endpoint:
    path: /api/v2/service_catalog/items/[display_id]
    method: GET
    data_selector: null
    params: null
- name: service_items_list
  endpoint:
    path: /api/v2/service_catalog/items
    method: GET
    data_selector: null
    params:
      workspace_id:
      - id
- name: service_catalog_items_search
  endpoint:
    path: /api/v2/service_catalog/items/search
    method: GET
    data_selector: records
    params:
      workspace_id: '2'
      search_term: adobe
      page: '1'
      per_page: '3'
      user_email: andrea@freshservice.com
- name: service_catalog_items
  endpoint:
    path: /api/v2/service-catalog/items
    method: POST
    data_selector: service_item
    params: {}
- name: service_catalog_items
  endpoint:
    path: /api/v2/service-catalog/items
    method: POST
    data_selector: service_item
    params: {}
- name: service_catalog_items
  endpoint:
    path: /api/v2/service-catalog/items
    method: POST
    data_selector: service_item
- name: service_catalog_items
  endpoint:
    path: /api/v2/service-catalog/items
    method: POST
    data_selector: service_item
    params:
      workspace_id: 2
- name: service_categories
  endpoint:
    path: /api/v2/service_catalog/categories
    method: GET
    data_selector: service_categories
    params:
      workspace_id: 2
- name: tickets
  endpoint:
    path: /api/v2/tickets
    method: GET
    data_selector: records
    params:
      incremental: updated_since
- name: announcement
  endpoint:
    path: /api/v2/announcements
    method: POST
    data_selector: null
    params: null
- name: announcement
  endpoint:
    path: /api/v2/announcements/[id]
    method: GET
    data_selector: null
    params: null
- name: announcements
  endpoint:
    path: /api/v2/announcements
    method: GET
    data_selector: records
    params:
      workspace_id: '[id]'
- name: offboarding_requests_form
  endpoint:
    path: /api/v2/offboarding_requests/form
    method: GET
    data_selector: N/A
    params: N/A
- name: onboarding_requests
  endpoint:
    path: /api/v2/onboarding_requests
    method: POST
    data_selector: N/A
    params: N/A
- name: specific_onboarding_request
  endpoint:
    path: /api/v2/onboarding_requests/id
    method: GET
    data_selector: N/A
    params: N/A
- name: all_onboarding_requests
  endpoint:
    path: /api/v2/onboarding_requests
    method: GET
    data_selector: N/A
    params: N/A
- name: onboarding_request_tickets
  endpoint:
    path: /api/v2/onboarding_requests/id/tickets
    method: GET
    data_selector: N/A
    params: N/A
- name: offboarding_requests_form
  endpoint:
    path: /api/v2/offboarding_requests/form
    method: GET
    data_selector: N/A
    params: {}
- name: offboarding_requests
  endpoint:
    path: /api/v2/offboarding_requests
    method: POST
    data_selector: N/A
    params: {}
- name: specific_offboarding_request
  endpoint:
    path: /api/v2/offboarding_requests/id
    method: GET
    data_selector: N/A
    params: {}
- name: all_offboarding_requests
  endpoint:
    path: /api/v2/offboarding_requests
    method: GET
    data_selector: N/A
    params: {}
- name: offboarding_request_tickets
  endpoint:
    path: /api/v2/offboarding_requests/id/tickets
    method: GET
    data_selector: N/A
    params: {}
- name: oncall_schedule
  endpoint:
    path: /api/v2/oncall/ws/[workspace_id]/schedules
    method: POST
    data_selector: N/A
    params:
      name: OCS Schedule
      agent_group_id: 1000208191
      agent_group_name: 1 Public API
- name: update_schedule
  endpoint:
    path: /api/v2/oncall/ws/[workspace_id]/schedules/[schedule_id]
    method: PUT
    data_selector: N/A
    params:
      name: OCS Public API Edit1
      description: Public OCS API Edit1
      agent_group_id: 1000208191
      agent_group_name: 1 Public API
- name: all_schedules
  endpoint:
    path: /api/v2/oncall/ws/[workspace_id]/schedules
    method: GET
    data_selector: N/A
    params:
      page: 1
      per_page: 30
- name: filter_schedules
  endpoint:
    path: /api/v2/oncall/ws/[workspace_id]/schedules
    method: GET
    data_selector: N/A
    params:
      page: 1
      per_page: 30
      query: Schedule1
- name: view_schedule
  endpoint:
    path: /api/v2/oncall/ws/[workspace_id]/schedules/[schedule_id]
    method: GET
    data_selector: N/A
- name: delete_schedule
  endpoint:
    path: /api/v2/oncall/ws/[workspace_id]/schedules/[schedule_id]
    method: DELETE
    data_selector: N/A
- name: shifts
  endpoint:
    path: /api/v2/oncall/ws/[workspace_id]/schedules/[schedule_id]/shifts
    method: GET
    data_selector: null
    params: null
- name: delete_shift
  endpoint:
    path: /api/v2/oncall/ws/[workspace_id]/schedules/[schedule_id]/shifts/[shift_id]
    method: DELETE
    data_selector: null
    params: null
- name: override
  endpoint:
    path: /api/v2/oncall/ws/[workspace_id]/schedules/[schedule_id]/shifts/[shift_id]/rosters/override
    method: PUT
    data_selector: null
    params: null
- name: oncall_shift_events
  endpoint:
    path: /api/v2/oncall/shift-events
    method: GET
    data_selector: N/A
    params: {}
- name: oncall_shift_events
  endpoint:
    path: /api/v2/oncall/shift-events
    method: GET
    data_selector: N/A
    params:
      start_time: '[date]'
      end_time: '[date]'
      shift_id: '[shift_id]'
      schedule_id: '[schedule_id]'
      user_id: '[user_id]'
- name: oncall_shift_events_export
  endpoint:
    path: /api/v2/oncall/shift-events/export
    method: GET
    data_selector: N/A
    params:
      user_id: '[user_id]'
      export_type: webcal
- name: ticket
  endpoint:
    path: /api/v2/tickets/[parent_id]/create_child_ticket
    method: POST
    data_selector: records
    params: {}
- name: oncall_shift_events_export
  endpoint:
    path: /api/v2/oncall/shift-events/export
    method: GET
    data_selector: N/A
    params:
      shift_id: '[shift_id]'
      schedule_id: '[schedule_id]'
      export_type: '[export_type]'
- name: oncall_shift_events_export_user
  endpoint:
    path: /api/v2/oncall/shift-events/export
    method: GET
    data_selector: N/A
    params:
      shift_id: '[shift_id]'
      schedule_id: '[schedule_id]'
      user_id: '[user_id]'
      export_type: '[export_type]'
- name: oncall_schedule_events_export_user
  endpoint:
    path: /api/v2/oncall/shift-events/export
    method: GET
    data_selector: N/A
    params:
      schedule_id: '[schedule_id]'
      user_id: '[user_id]'
      export_type: '[export_type]'
- name: oncall_calendar_events_export
  endpoint:
    path: /api/v2/oncall/shift-events/export
    method: GET
    data_selector: N/A
    params:
      user_id: '[user_id]'
      start_time: '[date]'
      end_time: '[date]'
      export_type: '[export_type]'
- name: oncall_shift_events_export
  endpoint:
    path: /api/v2/oncall/shift-events/export
    method: GET
    data_selector: N/A
    params: {}
- name: oncall_calendar_events
  endpoint:
    path: /api/v2/oncall/shift-events/export
    method: GET
    data_selector: records
    params:
      schedule_id: '[schedule_id]'
      user_id: '[user_id]'
      start_time: '[date]'
      end_time: '[date]'
      export_type: '[export_type]'
- name: oncall_current
  endpoint:
    path: /api/v2/oncall/shift-events/current
    method: GET
    data_selector: records
    params:
      schedule_id: '[schedule_id]'
- name: escalation_policies
  endpoint:
    path: /api/v2/oncall/ws/[workspace_id]/schedules/[schedule_id]/escalation-policies
    method: POST
    data_selector: null
    params: null
- name: escalation_policies
  endpoint:
    path: /api/v2/oncall/ws/[workspace_id]/schedules/[schedule_id]/escalation-policies
    method: GET
    data_selector: records
- name: custom_object_record
  endpoint:
    path: /api/v2/objects/[id]/records
    method: POST
    data_selector: data
    params:
      incremental: updated_at
- name: custom_object_records
  endpoint:
    path: /api/v2/objects/[id]/records
    method: GET
    data_selector: records
    params: null
- name: update_custom_object_record
  endpoint:
    path: /api/v2/objects/[id]/records/[record_id]
    method: PUT
    data_selector: data
    params: null
- name: custom_object_record
  endpoint:
    path: /api/v2/objects/[id]/records/[record_id]
    method: DELETE
- name: sla_policies
  endpoint:
    path: /api/sla_policies
    method: GET
    data_selector: data
    params:
      type: resolution
- name: sla_policies
  endpoint:
    path: /api/v2/sla_policies
    method: GET
    data_selector: Not provided
    params:
      workspace_id: '[id]'
- name: canned_response_folders
  endpoint:
    path: /api/v2/canned_response_folders
    method: GET
    data_selector: Not provided
    params:
      workspace_id: '[id]'
- name: canned_responses
  endpoint:
    path: /api/v2/canned_response_folders/[folder_id]/canned_responses
    method: GET
    data_selector: Not provided
- name: canned_responses
  endpoint:
    path: /api/v2/canned_responses
    method: GET
    data_selector: records
    params:
      workspace_id: '[id]'
- name: audit_log
  endpoint:
    path: /api/v2/audit_log/export
    method: POST
    data_selector: N/A
    params: {}
- name: itil_attachments
  endpoint:
    path: /api/v2/itil_attachments/[id]
    method: GET
    data_selector: null
- name: status_pages_incidents
  endpoint:
    path: /api/v2/status/pages/[status_page_id]/incidents
    method: GET
    data_selector: null
- name: tickets_status_pages_incidents
  endpoint:
    path: /api/v2/tickets/[ticket_id]/status/pages/[status_page_id]/incidents
    method: GET
    data_selector: null
- name: tickets_status_pages_incidents_create
  endpoint:
    path: /api/v2/tickets/[ticket_id]/status/pages/[status_page_id]/incidents
    method: POST
    data_selector: null
- name: incident_update
  endpoint:
    path: /api/v2/tickets/[ticket_id]/status/pages/[status_page_id]/incidents/[incident_id]/updates
    method: GET
    data_selector: records
    params: null
- name: incident_update
  endpoint:
    path: /api/v2/tickets/[ticket_id]/status/pages/[status_page_id]/incidents/[incident_id]/updates/[id]
    method: PUT
    data_selector: N/A
    params:
      message: Issue will be resolved shortly.
- name: delete_incident_update
  endpoint:
    path: /api/v2/tickets/[ticket_id]/status/pages/[status_page_id]/incidents/[incident_id]/updates/[id]
    method: DELETE
    data_selector: N/A
    params: {}
- name: maintenances
  endpoint:
    path: /api/v2/status/pages/[status_page_id]/maintenances
    method: GET
    data_selector: N/A
    params:
      page: 1
      per_page: 30
- name: maintenance_create
  endpoint:
    path: /api/v2/changes/[change_id]/status/pages/[status_page_id]/maintenances
    method: POST
    data_selector: N/A
    params: N/A
- name: maintenance_update
  endpoint:
    path: /api/v2/changes/[change_id]/status/pages/[status_page_id]/maintenances/[id]
    method: PUT
    data_selector: N/A
    params: N/A
- name: maintenance_view
  endpoint:
    path: /api/v2/changes/[change_id]/status/pages/[status_page_id]/maintenances/[id]
    method: GET
    data_selector: N/A
    params: N/A
- name: change_maintenance_delete
  endpoint:
    path: /api/v2/changes/[change_id]/status/pages/[status_page_id]/maintenances/[id]
    method: DELETE
- name: maintenance_create
  endpoint:
    path: /api/v2/maintenance-windows/[maintenance_window_id]/status/pages/[status_page_id]/maintenances
    method: POST
- name: maintenance_windows
  endpoint:
    path: /api/v2/maintenance-windows/[maintenance_window_id]/status/pages/[status_page_id]/maintenances/[id]
    method: PUT
    data_selector: null
    params:
      description: updated scheduled maintenance description
      notifications:
      - trigger: 2
        options:
          value: 60
      - trigger: 3
      impacted_services: []
- name: maintenance_updates
  endpoint:
    path: /maintenance-updates
    method: GET
    data_selector: null
    params: null
- name: delete_maintenance
  endpoint:
    path: /api/v2/maintenance-windows/[maintenance_window_id]/status/pages/[status_page_id]/maintenances/[id]
    method: DELETE
    data_selector: null
    params: null
- name: maintenance_update
  endpoint:
    path: /api/v2/changes/[change_id]/status/pages/[status_page_id]/maintenances/[maintenance_id]/updates
    method: POST
    data_selector: N/A
    params: N/A
- name: edit_maintenance_update
  endpoint:
    path: /api/v2/changes/[change_id]/status/pages/[status_page_id]/maintenances/[maintenance_id]/updates/[id]
    method: PUT
    data_selector: N/A
    params: N/A
- name: list_maintenance_updates
  endpoint:
    path: /api/v2/changes/[change_id]/status/pages/[status_page_id]/maintenances/[id]/updates
    method: GET
    data_selector: N/A
    params:
      page: 1
      per_page: 30
- name: delete_maintenance_update
  endpoint:
    path: /api/v2/changes/[change_id]/status/pages/[status_page_id]/maintenances/[id]/updates/[id]
    method: DELETE
    data_selector: N/A
    params: N/A
- name: maintenance_update
  endpoint:
    path: /api/v2/maintenance-windows/[maintenance_window_id]/status/pages/[status_page_id]/maintenances/[maintenance_id]/updates
    method: POST
    data_selector: N/A
    params: N/A
- name: update_maintenance_update
  endpoint:
    path: /api/v2/maintenance-windows/[maintenance_window_id]/status/pages/[status_page_id]/maintenances/[maintenance_id]/updates/[id]
    method: PUT
    data_selector: N/A
    params: N/A
- name: list_maintenance_updates
  endpoint:
    path: /api/v2/maintenance-windows/[maintenance_window_id]/status/pages/[status_page_id]/maintenances/[id]/updates
    method: GET
    data_selector: N/A
    params:
      page: 1
      per_page: 30
- name: delete_maintenance_update
  endpoint:
    path: /api/v2/maintenance-windows/[maintenance_window_id]/status/pages/[status_page_id]/maintenances/[id]/updates/[id]
    method: DELETE
    data_selector: N/A
    params: N/A
- name: list_status_pages
  endpoint:
    path: /api/v2/status/pages
    method: GET
    data_selector: N/A
    params:
      workspace_id: 2
- name: tickets
  endpoint:
    path: /api/v2/tickets/{ticket_id}
    method: PUT
    data_selector: ticket
    params:
      description: Update ticket with assets
      status: 2
      email: sample@freshservice.com
      priority: 1
      subject: Update ticket with assets
      assets:
      - display_id: 7
      - display_id: 8
- name: status_page
  endpoint:
    path: /api/v2/status/pages/[status_page_id]/service-components
    method: GET
    data_selector: null
    params:
      page: 1
      per_page: 30
- name: move_ticket_workspace
  endpoint:
    path: /api/v2/tickets/[id]/move_workspace
    method: PUT
    data_selector: null
    params:
      workspace_id: 3
      group_id: 3
      responder_id: 4
- name: delete_ticket
  endpoint:
    path: /api/v2/tickets/[id]
    method: DELETE
    data_selector: null
- name: delete_ticket_attachment
  endpoint:
    path: /api/v2/tickets/[ticket_id]/attachments/[id]
    method: DELETE
    data_selector: null
- name: restore_ticket
  endpoint:
    path: /api/v2/tickets/[id]/restore
    method: PUT
    data_selector: null
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: child_ticket
  endpoint:
    path: /api/v2/tickets
    method: POST
    data_selector: data
    params:
      workspace_id: workspace_id
      name: name
      requester_id: requester_id
      email: email
      phone: phone
      subject: subject
      type: type
      status: status
      priority: priority
      description: description
      responder_id: responder_id
      attachments: attachments
      cc_emails: cc_emails
      custom_fields: custom_fields
      due_by: due_by
      email_config_id: email_config_id
      fr_due_by: fr_due_by
      group_id: group_id
      source: source
      tags: tags
      department_id: department_id
      category: category
      sub_category: sub_category
      item_category: item_category
      associate_ci: associate_ci
      urgency: urgency
      impact: impact
- name: ticket_form_fields
  endpoint:
    path: /api/v2/ticket_form_fields
    method: GET
    data_selector: records
    params: {}
- name: ticket_activities
  endpoint:
    path: /api/v2/tickets/[id]/activities
    method: GET
    data_selector: N/A
    params: {}
- name: time_entry
  endpoint:
    path: /api/v2/tickets/[ticket_id]/time_entries
    method: POST
    data_selector: time_entry
  params:
    incremental: updated_at
- name: time_entry
  endpoint:
    path: /api/v2/tickets/[ticket_id]/time_entries/[id]
    method: GET
    data_selector: time_entry
- name: time_entry
  endpoint:
    path: /api/v2/tickets/[ticket_id]/time_entries
    method: GET
    data_selector: time_entries
- name: time_entry
  endpoint:
    path: /api/v2/tickets/[ticket_id]/time_entries/[id]
    method: PUT
    data_selector: records
    params:
      incremental: updated_at
- name: time_entry
  endpoint:
    path: /api/v2/tickets/[ticket_id]/time_entries/[id]
    method: DELETE
    data_selector: records
    params: {}
- name: ticket_source
  endpoint:
    path: /api/v2/ticket_fields/sources
    method: POST
    data_selector: records
    params: {}
- name: service_request
  endpoint:
    path: /api/v2/service_catalog/items/{display_id}/place_request
    method: POST
    data_selector: null
    params: null
- name: service_catalog_items_place_request
  endpoint:
    path: /api/v2/service_catalog/items/{display_id}/place_request
    method: POST
    data_selector: null
    params: null
- name: tickets_requested_items
  endpoint:
    path: /api/v2/tickets/[id]/requested_items
    method: GET
    data_selector: null
    params: null
- name: ticket_requested_items
  endpoint:
    path: /api/v2/tickets/[id]/requested_items/[id]
    method: PUT
    data_selector: N/A
    params: {}
- name: ticket_approvals
  endpoint:
    path: /api/v2/tickets/[ticket_id]/approvals
    method: POST
    data_selector: N/A
    params: {}
- name: ticket_approvals_list
  endpoint:
    path: /api/v2/tickets/[ticket_id]/approvals
    method: GET
    data_selector: N/A
    params: {}
- name: ticket_approval_details
  endpoint:
    path: /api/v2/tickets/[ticket_id]/approvals/[id]
    method: GET
    data_selector: N/A
    params: {}
- name: reminder_approval
  endpoint:
    path: /api/v2/tickets/[ticket_id]/approvals/[id]/remind
    method: PUT
    data_selector: N/A
    params: {}
- name: cancel_approval
  endpoint:
    path: /api/v2/tickets/[ticket_id]/approvals/[id]
    method: PUT
    data_selector: N/A
    params: {}
- name: create_approval_group
  endpoint:
    path: /api/v2/tickets/[ticket_id]/approval-groups
    method: POST
    data_selector: N/A
    params: {}
- name: update_approval_groups
  endpoint:
    path: /api/v2/tickets/[ticket_id]/approval-groups
    method: PUT
    data_selector: N/A
    params: {}
- name: ticket_approval_groups
  endpoint:
    path: /api/v2/tickets/[ticket_id]/approval-groups
    method: GET
    data_selector: null
    params: null
- name: cancel_approval_groups
  endpoint:
    path: /api/v2/tickets/[ticket_id]/approval-groups
    method: PUT
    data_selector: null
    params: null
- name: create_task
  endpoint:
    path: /api/v2/tickets/[id]/tasks
    method: POST
    data_selector: null
    params: null
- name: ticket
  endpoint:
    path: /api/v2/tickets
    method: GET
    data_selector: records
- name: ticket_tasks
  endpoint:
    path: /api/v2/tickets/[id]/tasks
    method: GET
    data_selector: records
    params: {}
- name: tickets_csat_response
  endpoint:
    path: /api/v2/tickets/[id]/csat_response
    method: GET
    data_selector: null
    params: null
- name: conversations
  endpoint:
    path: /api/v2/tickets/[id]/reply
    method: POST
    data_selector: null
    params: null
- name: ticket_reply
  endpoint:
    path: /api/v2/tickets/51/reply
    method: POST
    data_selector: conversation
    params:
      incremental: updated_at
- name: create_note_attachment
  endpoint:
    path: /api/v2/pm/projects/1/tasks/12/notes
    method: POST
    data_selector: notes
    params: null
- name: conversation
  endpoint:
    path: /api/v2/conversations/[id]
    method: PUT
    data_selector: conversation
    params:
      Content-Type: application/json
- name: conversation_with_attachment
  endpoint:
    path: /api/v2/conversations/[id]
    method: PUT
    data_selector: conversation
    params:
      Content-Type: multipart/form-data
- name: delete_conversation
  endpoint:
    path: /api/v2/conversations/[id]
    method: DELETE
    data_selector: conversation
- name: delete_conversation_attachment
  endpoint:
    path: /api/v2/conversations/[conversation_id]/attachments/[id]
    method: DELETE
    data_selector: attachment
- name: list_conversations_of_ticket
  endpoint:
    path: /api/v2/tickets/[id]/conversations
    method: GET
    data_selector: conversations
    params:
      Content-Type: application/json
- name: problems
  endpoint:
    path: /api/v2/problems
    method: POST
    data_selector: null
    params: null
- name: problems
  endpoint:
    path: /api/v2/problems
    method: POST
    data_selector: problem
    params: {}
- name: problems
  endpoint:
    path: /api/v2/problems
    method: GET
    data_selector: records
    params: {}
- name: problem
  endpoint:
    path: /api/v2/problems/[id]
    method: PUT
    data_selector: problem
    params:
      workspace_id: 3
      group_id: 3
      owner_id: 4
- name: problem_field
  endpoint:
    path: /api/v2/problem_form_fields
    method: GET
    data_selector: null
    params: {}
- name: time_entry
  endpoint:
    path: /api/v2/releases/[id]/time_entries
    method: GET
    data_selector: records
    params: null
- name: tasks
  endpoint:
    path: /api/v2/releases/[id]/tasks
    method: GET
    data_selector: records
    params: null
- name: change
  endpoint:
    path: /api/v2/changes
    method: POST
    data_selector: Not provided
    params: Not provided
- name: changes
  endpoint:
    path: /api/v2/changes
    method: POST
    data_selector: change
    params:
      description: <div>Hi Team, <br/><br/> One of our email servers, Exchange Server
        (ES3) has been acting up. We tried rebooting it, but that didn’t help. We
        need to get it replaced ASAP. <br/><br/>Regards<br/> Rachel<br/> </div>
      subject: Getting ES3 back up to speed
      email: tom@outerspace.com
      priority: 1
      status: 1
      group_id: 1
      risk: 1
      change_type: 1
      impact: 3
      planned_start_date: '2019-03-20T16:18:46Z'
      planned_end_date: '2019-03-23T16:18:46Z'
      department_id: 1
      agent_id: 1
      maintenance_window:
        id: 1
      custom_fields:
        custom_text: This is a custom text box
      workspace_id: 3
- name: changes
  endpoint:
    path: /api/v2/changes
    method: POST
    data_selector: change
    params: {}
- name: changes
  endpoint:
    path: /api/v2/changes
    method: POST
    data_selector: change
- name: change
  endpoint:
    path: /api/v2/changes/[id]
    method: GET
    data_selector: records
    params: {}
- name: changes
  endpoint:
    path: /api/v2/changes
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: changes
  endpoint:
    path: /api/v2/changes/[id]
    method: PUT
    data_selector: change
    params: {}
- name: change_form_fields
  endpoint:
    path: /api/v2/change_form_fields
    method: GET
    data_selector: records
    params:
      workspace_id: 2
- name: changes_move_workspace
  endpoint:
    path: /api/v2/changes/[id]/move_workspace
    method: PUT
- name: changes_delete
  endpoint:
    path: /api/v2/changes/[id]
    method: DELETE
- name: changes_approval_groups
  endpoint:
    path: /api/v2/changes/[change_id]/approval-groups
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: change_approval_group
  endpoint:
    path: /api/v2/changes/[change_id]/approval-groups/[id]
    method: PUT
    data_selector: null
    params: null
- name: cancel_change_approval_group
  endpoint:
    path: /api/v2/changes/[change_id]/approval-groups/[id]
    method: PUT
    data_selector: null
    params: null
- name: list_approval_groups
  endpoint:
    path: /api/v2/changes/[change_id]/approval-groups
    method: GET
    data_selector: null
    params: null
- name: view_change_approval
  endpoint:
    path: /api/v2/changes/[change_id]/approvals/[approval_id]
    method: GET
    data_selector: null
    params: null
- name: send_approval_reminder
  endpoint:
    path: /api/v2/changes/[change_id]/approvals/[approval_id]/remind
    method: PUT
    data_selector: null
    params: null
- name: list_change_approvals
  endpoint:
    path: /api/v2/changes/[change_id]/approvals
    method: GET
    data_selector: null
    params: null
- name: cancel_change_approval
  endpoint:
    path: /api/v2/changes/[change_id]/approvals/[id]
    method: PUT
    data_selector: null
    params: null
- name: create_note
  endpoint:
    path: /api/v2/changes/[id]/notes
    method: POST
    data_selector: null
    params: null
- name: view_note
  endpoint:
    path: /api/v2/changes/[id]/notes/[id]
    method: GET
    data_selector: null
    params: null
- name: list_notes
  endpoint:
    path: /api/v2/changes/[id]/notes
    method: GET
    data_selector: null
    params: null
- name: changes_notes
  endpoint:
    path: /api/v2/changes/[id]/notes/[id]
    method: PUT
    data_selector: null
    params: {}
- name: time_entries
  endpoint:
    path: /api/v2/releases/[id]/time_entries
    method: POST
    data_selector: null
    params: {}
- name: create_task
  endpoint:
    path: /api/v2/releases/[id]/tasks
    method: POST
    data_selector: N/A
    params:
      workspace_id: '[workspace_id]'
      agent_id: '[agent_id]'
      status: '[status]'
      due_date: '[due_date]'
      notify_before: '[notify_before]'
      title: '[title]'
      description: '[description]'
      group_id: '[group_id]'
- name: view_task
  endpoint:
    path: /api/v2/releases/[id]/tasks/[task_id]
    method: GET
    data_selector: N/A
    params: N/A
- name: view_all_tasks
  endpoint:
    path: /api/v2/releases/[id]/tasks
    method: GET
    data_selector: N/A
    params: N/A
- name: update_task
  endpoint:
    path: /api/v2/releases/[id]/tasks/[task_id]
    method: PUT
    data_selector: N/A
    params:
      status: '[status]'
      notify_before: '[notify_before]'
      title: '[title]'
      description: '[description]'
      workspace_id: '[workspace_id]'
- name: delete_task
  endpoint:
    path: /api/v2/releases/[id]/tasks/[task_id]
    method: DELETE
    data_selector: N/A
    params: N/A
- name: release
  endpoint:
    path: /api/v2/releases
    method: POST
    data_selector: N/A
    params:
      agent_id: 1
      group_id: null
      priority: 1
      status: 1
      release_type: 1
      subject: string
      planned_start_date: '2020-03-31T10:35:47.462Z'
      planned_end_date: '2020-03-31T10:35:47.462Z'
      department_id: null
      category: string
      sub_category: string
      item_category: string
      custom_fields:
        additionalProp1: string
        additionalProp2: string
        additionalProp3: string
      workspace_id: 2
- name: create_release
  endpoint:
    path: /api/v2/releases
    method: POST
    data_selector: release
- name: releases
  endpoint:
    path: /api/v2/releases
    method: POST
    data_selector: N/A
    params: N/A
- name: releases
  endpoint:
    path: /api/v2/releases/[id]
    method: PUT
    data_selector: release
    params: {}
- name: move_workspace
  endpoint:
    path: /api/v2/releases/[id]/move_workspace
    method: PUT
    data_selector: null
    params: {}
- name: releases
  endpoint:
    path: /api/v2/releases
    method: GET
    data_selector: records
    params:
      filter_name: all
- name: releases_notes
  endpoint:
    path: /api/v2/releases/[id]/notes/[id]
    method: GET
    data_selector: N/A
- name: releases_notes_list
  endpoint:
    path: /api/v2/releases/[id]/notes
    method: GET
    data_selector: N/A
- name: releases_time_entries
  endpoint:
    path: /api/v2/releases/[id]/time_entries
    method: GET
    data_selector: N/A
- name: time_entry
  endpoint:
    path: /api/v2/releases/[id]/time_entries/[id]
    method: GET
    data_selector: N/A
- name: releases_time_entries
  endpoint:
    path: /api/v2/releases/[id]/time_entries/[id]
    method: DELETE
    data_selector: N/A
    params: {}
- name: releases_tasks
  endpoint:
    path: /api/v2/releases/[id]/tasks
    method: GET
    data_selector: N/A
    params: {}
- name: create_release_task
  endpoint:
    path: /api/v2/releases/[id]/tasks
    method: POST
    data_selector: N/A
    params:
      due_date: '2020-04-27T13:23:20.813Z'
      notify_before: 0
      title: Supply lightsabers to all the Jedis
      description: We need to re-supply to win the war!
      workspace_id: 3
- name: view_release_task
  endpoint:
    path: /api/v2/releases/[id]/tasks/[id]
    method: GET
    data_selector: N/A
    params: {}
- name: update_release_task
  endpoint:
    path: /api/v2/releases/[id]/tasks/[id]
    method: PUT
    data_selector: N/A
    params:
      status: 3
      notify_before: 0
      title: Supply lightsabers to all the Jedis
      description: We need to re-supply to win the war!
      workspace_id: 2
- name: delete_release_task
  endpoint:
    path: /api/v2/releases/[id]/tasks/[id]
    method: DELETE
    data_selector: N/A
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: workspace
  endpoint:
    path: /api/v2/workspaces/[id]
    method: GET
    data_selector: data
- name: workspaces
  endpoint:
    path: /api/v2/workspaces
    method: GET
    data_selector: data
- name: workspace
  endpoint:
    path: /api/v2/workspaces/[id]
    method: PUT
    data_selector: records
    params:
      incremental: updated_at
- name: workspace
  endpoint:
    path: /api/v2/workspaces/[id]
    method: DELETE
    data_selector: records
    params:
      incremental: updated_at
- name: workspace_form_fields
  endpoint:
    path: /api/v2/workspace_form_fields
    method: GET
    data_selector: records
    params: null
- name: approvals
  endpoint:
    path: /api/v2/approvals
    method: GET
    data_selector: records
    params:
      parent: '[module]'
      parent_id: '[number]'
      status: '[string]'
      approver_id: '[number]'
      delegatee_id: '[number]'
- name: contact
  endpoint:
    path: /api/v2/contacts
    method: GET
    data_selector: records
    params: null
- name: requester
  endpoint:
    path: /api/v2/requesters
    method: POST
    data_selector: N/A
    params: N/A
- name: requester
  endpoint:
    path: /api/v2/requesters/[id]
    method: GET
    data_selector: N/A
    params: N/A
- name: requesters
  endpoint:
    path: /api/v2/requesters
    method: GET
    data_selector: N/A
    params:
      per_page: 30
      page: 2
- name: requester
  endpoint:
    path: /api/v2/requesters
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: requester_fields
  endpoint:
    path: /api/v2/requester_fields
    method: GET
    data_selector: records
    params: {}
- name: ticket
  endpoint:
    path: /services/data/vXX.X/sobjects/Ticket
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: requester
  endpoint:
    path: /api/v2/requesters/[id]
    method: PUT
    data_selector: N/A
    params: {}
- name: deactivate_requester
  endpoint:
    path: /api/v2/requesters/[id]
    method: DELETE
    data_selector: N/A
    params: {}
- name: forget_requester
  endpoint:
    path: /api/v2/requesters/[id]/forget
    method: DELETE
    data_selector: N/A
    params: {}
- name: requesters_convert_to_agent
  endpoint:
    path: /api/v2/requesters/[id]/convert_to_agent
    method: PUT
    data_selector: null
    params: null
- name: requesters_merge
  endpoint:
    path: /api/v2/requesters/[id]/merge
    method: PUT
    data_selector: null
    params: null
- name: requesters_reactivate
  endpoint:
    path: /api/v2/requesters/[id]/reactivate
    method: PUT
    data_selector: null
    params: null
- name: user_assignment_history
  endpoint:
    path: /api/v2/agents
    method: GET
    data_selector: null
    params: null
- name: agent
  endpoint:
    path: /api/v2/agents
    method: GET
    data_selector: records
    params: null
- name: agent
  endpoint:
    path: /api/v2/agents
    method: POST
    data_selector: null
    params: null
- name: agents
  endpoint:
    path: /api/v2/agents
    method: GET
    data_selector: N/A
    params: {}
- name: agents
  endpoint:
    path: /api/v2/agents
    method: GET
    data_selector: data
- name: agents
  endpoint:
    path: /api/v2/agents/[id]
    method: PUT
    data_selector: N/A
    params: {}
- name: agents
  endpoint:
    path: /api/v2/agents/[id]
    method: DELETE
    data_selector: null
    params: null
- name: agents_forget
  endpoint:
    path: /api/v2/agents/[id]/forget
    method: DELETE
    data_selector: null
    params: null
- name: agents_reactivate
  endpoint:
    path: /api/v2/agents/[id]/reactivate
    method: PUT
    data_selector: null
    params: null
- name: agents_convert_to_requester
  endpoint:
    path: /api/v2/agents/[id]/convert_to_requester
    method: PUT
    data_selector: null
    params: null
- name: agent_fields
  endpoint:
    path: /api/v2/agent_fields
    method: GET
    data_selector: null
    params: null
- name: agent_assignment_history
  endpoint:
    path: /api/v2/users/2/assignment-history
    method: GET
    data_selector: N/A
- name: agent_group
  endpoint:
    path: /services/data/vXX.X/sobjects/AgentGroup
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: ticket
  endpoint:
    path: /api/v2/tickets/[parent_id]/create_child_ticket
    method: POST
    data_selector: null
    params: {}
- name: group
  endpoint:
    path: /api/v2/groups
    method: POST
    data_selector: Not provided
    params: Not provided
- name: groups
  endpoint:
    path: /api/v2/groups
    method: GET
    data_selector: N/A
    params: {}
- name: group
  endpoint:
    path: /api/v2/groups/[id]
    method: PUT
    data_selector: N/A
    params: {}
- name: groups
  endpoint:
    path: /api/v2/groups/[id]
    method: DELETE
    data_selector: records
    params:
      incremental: updated_at
- name: requester_groups
  endpoint:
    path: /api/v2/requester_groups
    method: GET
    data_selector: records
    params:
      per_page: 30
      page: 2
- name: requester_group
  endpoint:
    path: /api/v2/requester_groups/[id]
    method: PUT
- name: requester_group
  endpoint:
    path: /api/v2/requester_groups/[id]
    method: DELETE
- name: requester_group_members
  endpoint:
    path: /api/v2/requester_groups/[id]/members/[requester_id]
    method: POST
- name: requester_group_members
  endpoint:
    path: /api/v2/requester_groups/[id]/members/[requester_id]
    method: DELETE
- name: requester_group_members
  endpoint:
    path: /api/v2/requester_groups/[id]/members
    method: GET
- name: locations
  endpoint:
    path: /api/v2/locations
    method: POST
    data_selector: N/A
    params: {}
- name: location
  endpoint:
    path: /api/v2/locations/[id]
    method: GET
    data_selector: N/A
    params: {}
- name: locations
  endpoint:
    path: /api/v2/locations
    method: GET
- name: locations
  endpoint:
    path: /api/v2/locations/[id]
    method: DELETE
    data_selector: null
    params: null
- name: products
  endpoint:
    path: /api/v2/products/[id]
    method: POST
    data_selector: null
    params: null
- name: products
  endpoint:
    path: /api/v2/products
    method: GET
    data_selector: null
    params: null
- name: product
  endpoint:
    path: /api/v2/products/[id]
    method: GET
    data_selector: null
    params: null
- name: product_update
  endpoint:
    path: /api/v2/products/[id]
    method: PUT
    data_selector: null
    params: null
- name: product_delete
  endpoint:
    path: /api/v2/products/[id]
    method: DELETE
    data_selector: null
    params: null
- name: vendors
  endpoint:
    path: /vendors
    method: GET
    data_selector: null
    params: null
- name: vendors
  endpoint:
    path: /api/v2/vendors
    method: POST
    data_selector: null
    params: null
- name: vendor
  endpoint:
    path: /api/v2/vendors/[id]
    method: GET
    data_selector: null
    params: null
- name: vendors_list
  endpoint:
    path: /api/v2/vendors
    method: GET
    data_selector: null
    params:
      per_page: 30
      page: 2
- name: update_vendor
  endpoint:
    path: /api/v2/vendors/[id]
    method: PUT
    data_selector: null
    params: null
- name: delete_vendor
  endpoint:
    path: /api/v2/vendors/[id]
    method: DELETE
    data_selector: null
    params: null
- name: ticket
  endpoint:
    path: /api/v2/tickets
    method: POST
    data_selector: ticket
    params: {}
- name: alert
  endpoint:
    path: /api/v2/ams/alerts/[id]
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: alerts
  endpoint:
    path: /api/v2/ams/alerts
    method: GET
    data_selector: records
    params:
      query: workspace_id:2 AND (severity:201 OR severity:151)
      order_by: updated_at
      order_type: desc
- name: alert
  endpoint:
    path: /api/v2/ams/alerts/[id]
    method: PUT
    data_selector: records
    params:
      incremental: updated_at
- name: assets
  endpoint:
    path: /api/v2/assets
    method: GET
    data_selector: records
    params: null
- name: asset_assignment_history
  endpoint:
    path: /api/v2/assets/{asset_id}/assignment-history
    method: GET
    data_selector: records
    params: null
- name: create_asset
  endpoint:
    path: /api/v2/assets/[display_id]
    method: PUT
    data_selector: records
    params: null
- name: asset
  endpoint:
    path: /api/v2/assets/[display_id]
    method: PUT
    data_selector: N/A
    params: N/A
- name: assets
  endpoint:
    path: /api/v2/assets
    method: GET
    data_selector: N/A
    params: {}
- name: assets
  endpoint:
    path: /api/v2/assets
    method: GET
    data_selector: records
    params:
      filter: '[query]'
- name: assets
  endpoint:
    path: /api/v2/assets/[display_id]
    method: PUT
    data_selector: null
    params:
      name: Macbook Pro 2
      asset_type_id: 25
      impact: high
      usage_type: loaner
      description: 13.3-inch (diagonal) LED-backlit glossy widescreen display,1440-by-900
        resolution
      group_id: 9
      assigned_on: '2014-07-26T12:25:04+05:30'
      type_fields:
        product_25: 10
        vendor_25: 14
        cost_25: 5000
        salvage: 100
        depreciation_id: 30
        warranty_25: 20
        acquisition_date_25: '2018-07-26T12:25:04+05:30'
        warranty_expiry_date_25: '2018-07-26T12:25:04+05:30'
        domain_25: 1
        asset_state_25: In Use
        serial_number_25: SW12131133
        last_audit_date_25: '2014-07-26T12:25:04+05:30'
- name: components_create
  endpoint:
    path: /api/v2/assets/[display_id]/components
    method: POST
    data_selector: component_data
- name: components_update
  endpoint:
    path: /api/v2/assets/[display_id]/components/[component_id]
    method: PUT
    data_selector: component_data
- name: requests_list
  endpoint:
    path: /api/v2/assets/[display_id]/requests
    method: GET
    data_selector: N/A
- name: contracts_list
  endpoint:
    path: /api/v2/assets/[display_id]/contracts
    method: GET
    data_selector: N/A
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- This API request must have its Content-Type set to multipart/form-data.
- Uses API key for authentication
- Endpoint for viewing a particular purchase order requires the purchase_order_id
  in the path
- assets key contains comma-separated hash of assets
- Deprecated format for linking a single asset soon
- Endpoint for moving contracts is only applicable to accounts on Employee Support
  Mode
- Applies to both Freshservice and Freshservice for MSPs with slight differences in
  the API behavior
- Archived projects can be restored using the Restore Project API
- No specific quirks or risks mentioned
- Deleted tasks cannot be restored
- This API request must have its Content-Type set to multipart/form-data
- Some fields like planned_effort may need specific formatting
- Default fields like conversations, tags, and requester email are not included in
  the response
- The query must be URL encoded.
- null
- API does not require authentication
- No specific authentication method mentioned
- Supports alphanumeric and specific special characters in search query
- Only users with "Provide on-call coverage" privilege can access the API
- Only users with "View On-call schedules", "Manage On-call schedules" or "View Tickets"
  privilege can access the API
- Only specific users with certain privileges can access the API
- Only users with "Manage On-call schedules" privilege can access the API
- No specific authentication flow mentioned, assumed to be API key based
- Only users with "Play God with Admin controls" privilege can access the APIs
- Only users with "Manage Status page incidents" privilege can access the incident
  update API
- Only users with "Delete Status page incidents" privilege can access the delete incident
  update API
- Users with "Manage Status page maintenances" privilege can access the list of maintenances
  API
- Only users with "Manage Change Status page maintenances" privilege can access the
  delete API
- Only users with "Manage Status page maintenances" privilege can access the create
  API
- Only users with "Manage Status page maintenances" privilege can access this API
- The users with "Mange Change Life cycle" privilege can also access certain APIs
- Only users with "Mange Change Life cycle" privilege can delete a maintenance
- A maintenance once deleted is permanently lost
- Only users with "Manage Change Status page maintenances" privilege can access this
  API
- Existing assets are destroyed if different from request
- Deprecated format for linking single asset
- Preference for "assets" key over "associate_ci" key in request
- API response varies based on the type of ID provided.
- Deleted tickets are not permanently lost. They can be restored using the Restore
  Ticket API.
- When a parent SR is deleted, all child tickets will also be deleted.
- Uses OAuth2 with refresh token — requires setup of connected app in Freshservice
- By default, the recent 20 activities are returned
- Use start_token to access older activities
- If timer_running is not specified, it is considered false and time_spent is mandatory
- email_content is an optional parameter for sending approval
- Only update approval status to "cancelled" state for approvals
- Contacts, Locations, and Departments behavior differs between Freshservice and Freshservice
  for MSPs
- API key authentication using header
- By default, only global fields and fields from the primary workspace will be returned
  for accounts on the Employee Support Mode
- For fields from other workspaces, use the workspace_id filter
- Deleted tasks are permanently lost and cannot be retrieved
- Deleted changes can be restored using the Restore Change API
- This API supports the changing of an approval status to "cancelled" state only.
  All other status change can be executed only via approver's action in the product.
- Deleted Notes are permanently lost. You can't retrieve them once it's get deleted.
- assets key: contains comma-separated hash of the assets, each with key display id.
- Deleted tasks are permanently lost. You can't retrieve them once it's get deleted.
- Query must be URL encoded
- Filtered results cannot be sorted
- This API is paginated and will return at max 30 approval requests. Use “page” filter
  with the page number to fetch more requests.
- ? You need to pass the “parent” filter along with one of the following filters mandatorily
    to fetch the approval requests through this API
  : approver_id, status, parent_id or delegatee_id.
- The results will be sorted in ascending order of their created date.
- For MSP, you cannot create a Contact if the Client status is Deactivated.
- Updates may take a few minutes to get indexed
- Some objects like agent may have specific behavior changes post May 31st 2023
- Some fields may have validation errors (e.g., time_period, department_id)
- Custom fields supported for filtering agents
- By default, user field groups details will not be included in the response.
- N/A
- Requesters/contacts can only be added to manual requester groups
- Requester/contacts can be added one at a time
- Applies to both Freshservice and Freshservice for MSPs with slight differences in
  API behavior
- Locations are defined at different levels depending on the type of Freshservice
  account.
- Filtering locations by name requires URL encoding in the query string.
- Locations are specific to each client in Freshservice for MSPs
- Products in Freshservice refer to specific models of assets
- No specific quirks or risks mentioned in the documentation
- Requires API key for authentication
- No authentication required for API access
- Search results cannot be sorted by default
- Updates to assets may take a few minutes to get indexed
- The older filter pattern "query=[query]" will be deprecated by end of June 2022
- The workspace_id attribute cannot be updated through the Update operation
errors:
- REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency
- QUERY_TIMEOUT: Break down filters or add selectivity
- 401 Unauthorized: Recheck OAuth scopes or token expiration
- 401 Unauthorized: Recheck API key
- 401 Unauthorized: Recheck API key validity
- No specific error patterns mentioned
- N/A
- 401 Unauthorized: Check API key validity
- No specific errors mentioned
- null
- 403 Error: Check user privileges for assuming the identity of user_email
- 401 Unauthorized
- Deleted Notes are permanently lost. You can't retrieve them once it's get deleted
- Deleted tasks are permanently lost
- 400 Bad Request: Unsupported attributes in API requests
- invalid_field: Time period
- invalid_value: Datatype validation
- invalid_value: Dropdown choice validation
- Deleting a Requester Group will only disband the requester group and will not delete
  its members
- None found
- No specific error patterns mentioned in the documentation
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - api_key
  - Task
  - API_Key
  - ApiKey
  - ApprovalGroup
  - ApprovalChain
  - Change
client:
  base_url: https://your-instance.api-name.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.api.com/services/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
    Content-Type: multipart/form-data
  paginator:
    type: cursor
    cursor_path: nextRecordsUrl
    cursor_param: nextUrl
    page_size_param: pageSize
    default_page_size: 200
source_metadata: null
