resources:
- name: archiver_status
  endpoint:
    path: /api/
    method: POST
    data_selector: resp
    params:
      command: archiver_status
- name: input_source
  endpoint:
    path: /api/
    method: POST
    data_selector: resp
    params:
      command: input_source
- name: createuser
  endpoint:
    path: /api/
    method: POST
    data_selector: resp
    params:
      command: createuser
- name: log
  endpoint:
    path: /api/
    method: POST
    data_selector: resp
    params:
      command: log
- name: version
  endpoint:
    path: /api/
    method: POST
    data_selector: resp
    params: {}
- name: start_streams
  endpoint:
    path: /api/
    method: POST
    data_selector: resp
    params:
      command: start
      payload: all
- name: version
  endpoint:
    path: /api/
    method: POST
    data_selector: resp
    params: {}
- name: input_control
  endpoint:
    path: /api/
    method: POST
    data_selector: resp
    params: {}
- name: guid_operations
  endpoint:
    path: /api/
    method: POST
    data_selector: resp
    params: {}
- name: user_management
  endpoint:
    path: /api/
    method: POST
    data_selector: resp
    params: {}
- name: system_operations
  endpoint:
    path: /api/
    method: POST
    data_selector: resp
    params: {}
- name: archiver_status
  endpoint:
    path: /archiver_status
    method: POST
    data_selector: resp
    params: {}
- name: input_source
  endpoint:
    path: /input_source
    method: POST
    data_selector: req
    params: {}
- name: createuser
  endpoint:
    path: /createuser
    method: POST
    data_selector: req
    params: {}
- name: log
  endpoint:
    path: /log
    method: POST
    data_selector: req
    params: {}
- name: start_all_streams
  endpoint:
    path: /
    method: POST
    data_selector: null
    params: {}
- name: create_otp_token
  endpoint:
    path: /otp/api/
    method: POST
    data_selector: null
    params:
      apiuser: apiuser
      apipass: apipass
      action: create
      duration: '60'
- name: version
  endpoint:
    path: /
    method: POST
    data_selector: resp
    params: {}
- name: guidstatus
  endpoint:
    path: /
    method: POST
    data_selector: resp
    params: {}
- name: input_source
  endpoint:
    path: /
    method: POST
    data_selector: resp
    params: {}
- name: version
  endpoint:
    path: /api/
    method: POST
    data_selector: resp
    params: {}
- name: input_control
  endpoint:
    path: /api/
    method: POST
    data_selector: resp
    params: {}
- name: video_feeds
  endpoint:
    path: /api/video_feeds
    method: GET
    data_selector: records
- name: start_all_streams
  endpoint:
    path: /
    method: POST
    data_selector: null
    params: {}
- name: create_otp_token
  endpoint:
    path: /otp/api/
    method: POST
    data_selector: null
    params: {}
- name: camera
  endpoint:
    path: /api/camera
    method: GET
    data_selector: data
    params: {}
- name: stream
  endpoint:
    path: /api/stream
    method: GET
    data_selector: data
    params: {}
- name: video_feeds
  endpoint:
    path: /api/v1/video_feeds
    method: GET
    data_selector: records
- name: camera_management
  endpoint:
    path: /api/camera_management
    method: GET
    data_selector: cameras
- name: event_monitoring
  endpoint:
    path: /api/event_monitoring
    method: GET
    data_selector: events
notes:
- All API endpoints require SSL/HTTPS connections.
- This document does not cover WINK Crossroad integration APIs or third-party integration
  commands.
- All API calls require SSL/HTTPS connections.
- Deleting an input stream permanently removes all associated output streams.
- Use 'all' as the payload to control all streams simultaneously.
- For development, use the --insecure flag with cURL to bypass certificate validation.
- API methods maintain backward compatibility across minor versions
- Major version changes may introduce breaking changes
- Always verify API compatibility before firmware upgrades
- Test API calls on non-production systems first
- Batch operations when possible to reduce API calls
- Implement exponential backoff for retry logic
- Monitor API response times for system health
- Use connection pooling for high-frequency operations
- Always use HTTPS for API communications
- Implement API-specific user accounts with minimal permissions
- Rotate API credentials regularly
- Log all API access for audit purposes
- Use shared keys for additional security layers
- OTP expiry should match application session duration
- Implement proper error handling for all API responses
- Cache GUID lookups to reduce API calls
- Use the built-in API testing tool for development
- 'Native Genetec Integration: Preserves all Security Center features and controls'
- 'Security Compliance: Meets state and federal security standards'
- Integration requires proper configuration of authentication.
- 'WINK Camera Studio includes enterprise features typically found in commercial solutions:
  2-way audio support, real-time event monitoring, comprehensive archives management,
  and advanced authentication methods.'
- WINK Camera Studio is licensed under Creative Commons Attribution-NonCommercial-NoDerivatives
  4.0 International (CC BY-NC-ND 4.0).
- NIST-compliant security
- FedRAMP compatible architecture
- Supports multiple authentication methods including Digest, Basic, and WSSE.
errors:
- 'Invalid credentials: Check user and password.'
- 'Unauthorized access: Ensure the user has API access level.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check authentication credentials.'
- '404 Not Found: Verify the endpoint URL.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://10.130.90.188/api/
  auth:
    type: session-based
    location: XML
    user: apiuser
    pass: apipass
    key: shared_key
  headers:
    Content-Type: application/xml
source_metadata: null
