resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /services/data/vXX.X/sobjects/User
    method: GET
    data_selector: records
- name: Dashboard
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/dashboard
    method: GET
- name: Assets
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/assets
    method: GET
- name: Ticket Management
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/ticket-management
    method: GET
- name: Request Management
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/request-management
    method: GET
- name: Problem Management
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/problem-management
    method: GET
- name: Change Management
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/change-management
    method: GET
- name: Release Management
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/release-management
    method: GET
- name: Event Management
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/event-management
    method: GET
- name: Reports
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/report
    method: GET
- name: SLA
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/sla-management
    method: GET
- name: Network Diagram
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/network-diagram
    method: GET
- name: Topology
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/topology
    method: GET
- name: Geomap
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/geomap
    method: GET
- name: Infraon Configuration
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/infraon-configuration
    method: GET
- name: active_users
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/active-users
    method: GET
- name: leaves
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/leaves
    method: GET
- name: my_leaves
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/my-leaves
    method: GET
- name: password_policy
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/password-policy
    method: GET
- name: requesters
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/requesters
    method: GET
- name: roles_privileges
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/roles-and-privileges
    method: GET
- name: teams
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/teams
    method: GET
- name: users
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/users
    method: GET
- name: shift_configuration
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/shift-configuration
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Dashboard
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/dashboard
    method: GET
- name: Assets
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/assets
    method: GET
- name: Ticket Management
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/ticket-management
    method: GET
- name: Request Management
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/request-management
    method: GET
- name: Problem Management
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/problem-management
    method: GET
- name: Change Management
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/change-management
    method: GET
- name: Release Management
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/release-management
    method: GET
- name: Event Management
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/event-management
    method: GET
- name: Reports
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/report
    method: GET
- name: SLA
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/sla-management
    method: GET
- name: Network Diagram
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/network-diagram
    method: GET
- name: Topology
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/topology
    method: GET
- name: Geomap
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/geomap
    method: GET
- name: Infraon Configuration
  endpoint:
    path: /infraon-help/explore-more/video-library-infraon-infinity/infraon-configuration
    method: GET
- name: active_users
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/active-users
    method: GET
- name: leaves
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/leaves
    method: GET
- name: my_leaves
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/my-leaves
    method: GET
- name: password_policy
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/password-policy
    method: GET
- name: requesters
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/requesters
    method: GET
- name: roles_privileges
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/roles-and-privileges
    method: GET
- name: teams
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/teams
    method: GET
- name: users
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/users
    method: GET
- name: shift_configuration
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/shift-configuration
    method: GET
- name: Default Dashboard
  endpoint:
    path: /dashboards/default
    method: GET
    data_selector: widgets
    params: {}
- name: Ticket Summary Dashboard
  endpoint:
    path: /dashboards/ticket_summary
    method: GET
    data_selector: widgets
    params: {}
- name: Asset Summary Dashboard
  endpoint:
    path: /dashboards/asset_summary
    method: GET
    data_selector: widgets
    params: {}
- name: Release Dashboard
  endpoint:
    path: /dashboards/release
    method: GET
    data_selector: widgets
    params: {}
- name: purchase_order
  endpoint:
    path: /api/purchase_order
    method: POST
    data_selector: data
    params: {}
- name: purchase_order
  endpoint:
    path: /purchase_order
    method: GET
    data_selector: POs
    params: {}
- name: Active users
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/active-users
    method: GET
- name: Leaves
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/leaves
    method: GET
- name: My Leaves
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/my-leaves
    method: GET
- name: Password Policy
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/password-policy
    method: GET
- name: Requesters
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/requesters
    method: GET
- name: Roles & Privileges
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/roles-and-privileges
    method: GET
- name: Teams
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/teams
    method: GET
- name: Users
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/users
    method: GET
- name: Shift Configuration
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/shift-configuration
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ticket
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: Ticket Management
  endpoint:
    path: /infraon-help/infinity-user-guide/ticket-management
    method: GET
- name: purchase_order
  endpoint:
    path: /purchase-order
    method: GET
    data_selector: records
    params: {}
- name: ticket
  endpoint:
    path: /tickets
    method: GET
    data_selector: tickets
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: problems
  endpoint:
    path: /problems
    method: GET
    data_selector: problems
    params: {}
- name: IMACD Process
  endpoint:
    path: /api/imacd/process
    method: GET
    data_selector: processes
- name: change_request
  endpoint:
    path: /api/change_requests
    method: POST
    data_selector: data
    params: {}
- name: active_users
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/active-users
    method: GET
- name: leaves
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/leaves
    method: GET
- name: my_leaves
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/my-leaves
    method: GET
- name: password_policy
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/password-policy
    method: GET
- name: requesters
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/requesters
    method: GET
- name: roles_privileges
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/roles-and-privileges
    method: GET
- name: teams
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/teams
    method: GET
- name: users
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/users
    method: GET
- name: shift_configuration
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/shift-configuration
    method: GET
- name: business_service
  endpoint:
    path: /business_service
    method: GET
    data_selector: services
    params: {}
- name: request_logging
  endpoint:
    path: /request/logging
    method: POST
    data_selector: requests
    params:
      state: Open
      status: New
- name: request_categorization
  endpoint:
    path: /request/categorization
    method: PUT
    data_selector: requests
    params:
      status: Assign
- name: request_diagnosis
  endpoint:
    path: /request/diagnosis
    method: GET
    data_selector: requests
    params:
      state: In progress
      status: Analysis
- name: request_escalation
  endpoint:
    path: /request/escalation
    method: PATCH
    data_selector: requests
    params:
      state: In progress
      status: Escalated
- name: request_resolution
  endpoint:
    path: /request/resolution
    method: POST
    data_selector: requests
    params:
      state: Resolved
      status: Waiting for closure
- name: request_closure
  endpoint:
    path: /request/closure
    method: DELETE
    data_selector: requests
    params:
      state: Closed
      status: Completed
- name: ticket
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: tickets
- name: report
  endpoint:
    path: /api/reports
    method: GET
    data_selector: reports
- name: problem
  endpoint:
    path: /problems
    method: POST
    data_selector: problems
    params: {}
- name: change_requests
  endpoint:
    path: /change-requests
    method: GET
    data_selector: requests
    params: {}
- name: active_users
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/active-users
    method: GET
- name: leaves
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/leaves
    method: GET
- name: my_leaves
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/my-leaves
    method: GET
- name: password_policy
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/password-policy
    method: GET
- name: requesters
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/requesters
    method: GET
- name: roles_privileges
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/roles-and-privileges
    method: GET
- name: teams
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/teams
    method: GET
- name: users
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/users
    method: GET
- name: shift_configuration
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/shift-configuration
    method: GET
- name: active_users
  endpoint:
    path: /infraon/active-users
    method: GET
- name: leaves
  endpoint:
    path: /infraon/leaves
    method: GET
- name: my_leaves
  endpoint:
    path: /infraon/my-leaves
    method: GET
- name: password_policy
  endpoint:
    path: /infraon/password-policy
    method: GET
- name: requesters
  endpoint:
    path: /infraon/requesters
    method: GET
- name: roles_privileges
  endpoint:
    path: /infraon/roles-and-privileges
    method: GET
- name: teams
  endpoint:
    path: /infraon/teams
    method: GET
- name: users
  endpoint:
    path: /infraon/users
    method: GET
- name: shift_configuration
  endpoint:
    path: /infraon/shift-configuration
    method: GET
- name: events
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: data
    params: {}
- name: aiops_events
  endpoint:
    path: /api/v1/aiops/events
    method: GET
    data_selector: data
    params: {}
- name: business_service
  endpoint:
    path: /business-service
    method: GET
    data_selector: records
- name: active_users
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/active-users
    method: GET
- name: leaves
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/leaves
    method: GET
- name: my_leaves
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/my-leaves
    method: GET
- name: password_policy
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/password-policy
    method: GET
- name: requesters
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/requesters
    method: GET
- name: roles_privileges
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/roles-and-privileges
    method: GET
- name: teams
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/teams
    method: GET
- name: users
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/users
    method: GET
- name: shift_configuration
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/shift-configuration
    method: GET
- name: schema
  endpoint:
    path: /schema/
    method: GET
- name: active_users
  endpoint:
    path: /infraon-configuration/user-management/active-users
    method: GET
- name: leaves
  endpoint:
    path: /infraon-configuration/user-management/leaves
    method: GET
- name: my_leaves
  endpoint:
    path: /infraon-configuration/user-management/my-leaves
    method: GET
- name: password_policy
  endpoint:
    path: /infraon-configuration/user-management/password-policy
    method: GET
- name: requesters
  endpoint:
    path: /infraon-configuration/user-management/requesters
    method: GET
- name: roles_privileges
  endpoint:
    path: /infraon-configuration/user-management/roles-and-privileges
    method: GET
- name: teams
  endpoint:
    path: /infraon-configuration/user-management/teams
    method: GET
- name: users
  endpoint:
    path: /infraon-configuration/user-management/users
    method: GET
- name: shift_configuration
  endpoint:
    path: /infraon-configuration/user-management/shift-configuration
    method: GET
- name: auth_token
  endpoint:
    path: /ux/api-token/
    method: POST
    data_selector: ANY_ADDITIONAL_PROPERTY
- name: password_encryption
  endpoint:
    path: /ux/password_js_encrypt/
    method: POST
    data_selector: ANY_ADDITIONAL_PROPERTY
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: announcement
  endpoint:
    path: /ux/common/announcement/announcements/
    method: GET
    data_selector: response
    params:
      items_per_page: '1'
      page: '1'
- name: create_announcement
  endpoint:
    path: /ux/common/announcement/announcements/
    method: POST
    data_selector: response
    params: {}
- name: get_announcement_by_id
  endpoint:
    path: /ux/common/announcement/announcements/{id}/
    method: GET
    data_selector: response
    params: {}
- name: edit_announcement
  endpoint:
    path: /ux/common/announcement/announcements/{id}/
    method: PUT
    data_selector: response
    params: {}
- name: delete_announcement
  endpoint:
    path: /ux/common/announcement/announcements/{id}/
    method: DELETE
    data_selector: No content
    params: {}
- name: change_announcement
  endpoint:
    path: /ux/common/announcement/announcements/change-ancmt/
    method: GET
    data_selector: No content
    params: {}
- name: announcement_options
  endpoint:
    path: /ux/common/announcement/announcements/options/
    method: GET
    data_selector: No content
    params: {}
- name: sla_management
  endpoint:
    path: /api/v1/sla
    method: GET
    data_selector: data
    params: {}
- name: api_config_profiles
  endpoint:
    path: /ux/common/apiregister/profile/
    method: GET
    data_selector: response
    params:
      items_per_page: '1'
      page: '1'
- name: create_api_config
  endpoint:
    path: /ux/common/apiregister/profile/
    method: POST
    data_selector: no_content
    params: {}
- name: get_api_config_by_id
  endpoint:
    path: /ux/common/apiregister/profile/{id}/
    method: GET
    data_selector: response
    params: {}
- name: edit_api_config
  endpoint:
    path: /ux/common/apiregister/profile/{id}/
    method: PUT
    data_selector: response
    params: {}
- name: delete_api_config
  endpoint:
    path: /ux/common/apiregister/profile/{id}/
    method: DELETE
    data_selector: None
    params: {}
- name: all_api_list
  endpoint:
    path: /ux/common/apiregister/profile/allapi-list/
    method: GET
    data_selector: None
    params: {}
- name: api_search
  endpoint:
    path: /ux/common/apiregister/profile/api_search/
    method: GET
    data_selector: None
    params: {}
- name: api_options
  endpoint:
    path: /ux/common/apiregister/profile/options/
    method: GET
    data_selector: None
    params: {}
- name: verify_api
  endpoint:
    path: /ux/common/apiregister/profile/verify_api/
    method: POST
    data_selector: None
    params: {}
- name: Active users
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/active-users
    method: GET
- name: Leaves
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/leaves
    method: GET
- name: My Leaves
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/my-leaves
    method: GET
- name: Password Policy
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/password-policy
    method: GET
- name: Requesters
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/requesters
    method: GET
- name: Roles & Privileges
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/roles-and-privileges
    method: GET
- name: Teams
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/teams
    method: GET
- name: Users
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/users
    method: GET
- name: Shift Configuration
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/shift-configuration
    method: GET
- name: async_tasks
  endpoint:
    path: /ux/common/async_tasks
    method: GET
- name: async_tasks
  endpoint:
    path: /ux/common/async_tasks/
    method: GET
    data_selector: object[]
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: async_tasks_post
  endpoint:
    path: /ux/common/async_tasks/
    method: POST
    data_selector: object
    params: {}
- name: async_tasks_get_by_id
  endpoint:
    path: /ux/common/async_tasks/{id}/
    method: GET
    data_selector: object
    params: {}
- name: async_tasks_put_by_id
  endpoint:
    path: /ux/common/async_tasks/{id}/
    method: PUT
    data_selector: object
    params: {}
- name: async_tasks_delete_by_id
  endpoint:
    path: /ux/common/async_tasks/{id}/
    method: DELETE
    data_selector: object
    params: {}
- name: async_tasks_disable_task
  endpoint:
    path: /ux/common/async_tasks/disable_task/
    method: GET
    data_selector: object
    params: {}
- name: async_tasks_enable_task
  endpoint:
    path: /ux/common/async_tasks/enable_task/
    method: GET
    data_selector: object
    params: {}
- name: Active users
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/active-users
    method: GET
- name: Leaves
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/leaves
    method: GET
- name: My Leaves
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/my-leaves
    method: GET
- name: Password Policy
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/password-policy
    method: GET
- name: Requesters
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/requesters
    method: GET
- name: Roles & Privileges
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/roles-and-privileges
    method: GET
- name: Teams
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/teams
    method: GET
- name: Users
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/users
    method: GET
- name: Shift Configuration
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/shift-configuration
    method: GET
- name: business_rule
  endpoint:
    path: /ux/common/business_rule/business_rule
    method: GET
    data_selector: records
    params: {}
- name: business_rule_list
  endpoint:
    path: /ux/common/business_rule/business_rule/
    method: GET
    data_selector: object[]
    params:
      items_per_page: 1
      page: 1
- name: business_rule_create
  endpoint:
    path: /ux/common/business_rule/business_rule/
    method: POST
    data_selector: No content
- name: business_rule_detail
  endpoint:
    path: /ux/common/business_rule/business_rule/{id}/
    method: GET
    data_selector: object
    params: {}
- name: business_rule_edit
  endpoint:
    path: /ux/common/business_rule/business_rule/{id}/
    method: PUT
    data_selector: object
- name: delete_business_rule
  endpoint:
    path: /ux/common/business_rule/business_rule/{id}/
    method: DELETE
- name: create_business_rule_csv
  endpoint:
    path: /ux/common/business_rule/business_rule/create-csv/
    method: POST
- name: download_rule_csv
  endpoint:
    path: /ux/common/business_rule/business_rule/download_rule_csv/
    method: GET
- name: multi_delete_business_rule
  endpoint:
    path: /ux/common/business_rule/business_rule/multidelete/
    method: POST
- name: options_business_rule
  endpoint:
    path: /ux/common/business_rule/business_rule/options/
    method: GET
- name: rule_count_business_rule
  endpoint:
    path: /ux/common/business_rule/business_rule/rule_count/
    method: GET
- name: upload_business_rule_csv
  endpoint:
    path: /ux/common/business_rule/business_rule/upload-csv/
    method: POST
- name: business_rule
  endpoint:
    path: /ux/common/business_rule/business_rule/upload-csv/
    method: POST
    data_selector: Response
    params: {}
- name: Active users
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/active-users
    method: GET
- name: Leaves
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/leaves
    method: GET
- name: My Leaves
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/my-leaves
    method: GET
- name: Password Policy
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/password-policy
    method: GET
- name: Requesters
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/requesters
    method: GET
- name: Roles & Privileges
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/roles-and-privileges
    method: GET
- name: Teams
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/teams
    method: GET
- name: Users
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/users
    method: GET
- name: Shift Configuration
  endpoint:
    path: /infraon-help/infinity-user-guide/infraon-configuration/user-management/shift-configuration
    method: GET
- name: business_service
  endpoint:
    path: /ux/common/business_service/business_service/
    method: GET
    data_selector: '[]'
    params:
      items_per_page: 1
      page: 1
- name: create_business_service
  endpoint:
    path: /ux/common/business_service/business_service/
    method: POST
    data_selector: null
    params: {}
- name: schema
  endpoint:
    path: /schema/
    method: GET
    data_selector: ANY_ADDITIONAL_PROPERTY
- name: business_service
  endpoint:
    path: /ux/common/business_service/business_service/{id}/
    method: GET
    data_selector: response
    params: {}
- name: breach_status
  endpoint:
    path: /ux/common/business_service/business_service/breach-status/
    method: GET
    data_selector: response
    params: {}
- name: image_options
  endpoint:
    path: /ux/common/business_service/business_service/image-options/
    method: GET
    data_selector: response
    params: {}
- name: auth_token
  endpoint:
    path: /api-token/
    method: POST
    data_selector: ANY_ADDITIONAL_PROPERTY
- name: encrypted_password
  endpoint:
    path: /password_js_encrypt/
    method: POST
    data_selector: ANY_ADDITIONAL_PROPERTY
- name: service_catalogue
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/
    method: GET
    data_selector: response
    params: {}
- name: service_details
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/{id}/
    method: GET
    data_selector: response
    params: {}
- name: announcements
  endpoint:
    path: /ux/common/announcement/announcements/
    method: GET
    data_selector: ANY_ADDITIONAL_PROPERTY
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: create_announcement
  endpoint:
    path: /ux/common/announcement/announcements/
    method: POST
    data_selector: No content
- name: get_announcement_by_id
  endpoint:
    path: /ux/common/announcement/announcements/{id}/
    method: GET
    data_selector: No content
- name: edit_announcement
  endpoint:
    path: /ux/common/announcement/announcements/{id}/
    method: PUT
    data_selector: No content
- name: edit_service
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/{id}/
    method: PUT
    data_selector: Response
    params:
      id: string
- name: delete_service
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/{id}/
    method: DELETE
    data_selector: No content
    params:
      id: string
- name: patch_service
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/{id}/
    method: PATCH
    data_selector: Response
    params:
      id: string
- name: add_attachment
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/add-attachment/
    method: POST
    data_selector: Response
    params: {}
- name: add_catalogue
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/add-catalogue/
    method: POST
    data_selector: No content
    params: {}
- name: add_service
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/add-service/
    method: POST
    data_selector: No content
    params: {}
- name: delete_announcement
  endpoint:
    path: /ux/common/announcement/announcements/{id}/
    method: DELETE
    data_selector: ''
    params:
      id: string
- name: view_or_edit_announcements
  endpoint:
    path: /ux/common/announcement/announcements/change-ancmt/
    method: GET
    data_selector: ''
    params: {}
- name: view_or_edit_options
  endpoint:
    path: /ux/common/announcement/announcements/options/
    method: GET
    data_selector: ''
    params: {}
- name: attachment
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/attachment/
    method: GET
    data_selector: records
- name: classification
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/classification/
    method: GET
    data_selector: records
- name: history
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/history/
    method: GET
    data_selector: records
- name: is_catalogue_exist
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/is-catalogue-exist/
    method: GET
    data_selector: records
- name: options_config
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/options-config/
    method: GET
    data_selector: records
- name: delete_catalogue
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/delete-catalogue/
    method: POST
- name: delete_service
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/delete-service/
    method: POST
- name: service_list
  endpoint:
    path: /servicecatalogue/service-list/
    method: GET
    data_selector: No content
- name: service_classes
  endpoint:
    path: /servicecatalogue/service_classes/
    method: GET
    data_selector: application/json
- name: services
  endpoint:
    path: /servicecatalogue/services/
    method: GET
    data_selector: application/json
- name: update_catalogue
  endpoint:
    path: /servicecatalogue/update-catalogue/
    method: POST
    data_selector: No content
- name: update_service
  endpoint:
    path: /servicecatalogue/update-service/
    method: POST
    data_selector: No content
- name: api_config_profiles
  endpoint:
    path: /ux/common/apiregister/profile/
    method: GET
    data_selector: response
    params:
      items_per_page: 1
      page: 1
- name: create_api_config
  endpoint:
    path: /ux/common/apiregister/profile/
    method: POST
    data_selector: response
    params: {}
- name: get_api_config
  endpoint:
    path: /ux/common/apiregister/profile/{id}/
    method: GET
    data_selector: response
    params: {}
- name: edit_api_config
  endpoint:
    path: /ux/common/apiregister/profile/{id}/
    method: PUT
    data_selector: response
    params: {}
- name: blacklist_whitelist
  endpoint:
    path: /ux/common/cmdb/blackwhitelist/
    method: GET
    data_selector: records
    params:
      items_per_page: '1'
      page: '1'
- name: delete_api_config
  endpoint:
    path: /ux/common/apiregister/profile/{id}/
    method: DELETE
- name: all_api_list
  endpoint:
    path: /ux/common/apiregister/profile/allapi-list/
    method: GET
- name: api_search
  endpoint:
    path: /ux/common/apiregister/profile/api_search/
    method: GET
- name: options
  endpoint:
    path: /ux/common/apiregister/profile/options/
    method: GET
- name: verify_api
  endpoint:
    path: /ux/common/apiregister/profile/verify_api/
    method: POST
- name: async_tasks
  endpoint:
    path: /ux/common/async_tasks/
    method: GET
- name: blackwhitelist
  endpoint:
    path: /blackwhitelist/
    method: POST
    data_selector: No content
- name: blackwhitelist_item
  endpoint:
    path: /blackwhitelist/{id}/
    method: GET
    data_selector: No content
- name: blackwhitelist_item_update
  endpoint:
    path: /blackwhitelist/{id}/
    method: PUT
    data_selector: No content
- name: blackwhitelist_item_delete
  endpoint:
    path: /blackwhitelist/{id}/
    method: DELETE
    data_selector: No content
- name: blackwhitelist_options
  endpoint:
    path: /blackwhitelist/options/
    method: GET
    data_selector: No content
- name: cmdb_category
  endpoint:
    path: /ux/common/cmdb/category/
    method: GET
    data_selector: ANY_ADDITIONAL_PROPERTY
    params: {}
- name: async_tasks
  endpoint:
    path: /ux/common/async_tasks/
    method: GET
    data_selector: object[]
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: async_task_details
  endpoint:
    path: /ux/common/async_tasks/{id}/
    method: GET
    data_selector: object
- name: create_async_task
  endpoint:
    path: /ux/common/async_tasks/
    method: POST
    data_selector: object
- name: update_async_task
  endpoint:
    path: /ux/common/async_tasks/{id}/
    method: PUT
    data_selector: object
- name: delete_async_task
  endpoint:
    path: /ux/common/async_tasks/{id}/
    method: DELETE
- name: disable_async_task
  endpoint:
    path: /ux/common/async_tasks/disable_task/
    method: GET
    data_selector: object
- name: enable_async_task
  endpoint:
    path: /ux/common/async_tasks/enable_task/
    method: GET
    data_selector: object
- name: create_category
  endpoint:
    path: /ux/common/cmdb/category/
    method: POST
    data_selector: Response
    params: {}
- name: get_category
  endpoint:
    path: /ux/common/cmdb/category/{id}/
    method: GET
    data_selector: No content
    params: {}
- name: update_category
  endpoint:
    path: /ux/common/cmdb/category/{id}/
    method: PUT
    data_selector: No content
    params: {}
- name: delete_category
  endpoint:
    path: /ux/common/cmdb/category/{id}/
    method: DELETE
    data_selector: No content
    params: {}
- name: all_options
  endpoint:
    path: /ux/common/cmdb/category/all_options/
    method: GET
    data_selector: No content
    params: {}
- name: audit_template_options
  endpoint:
    path: /ux/common/cmdb/category/audit_template_options/
    method: GET
    data_selector: No content
    params: {}
- name: custom_options
  endpoint:
    path: /ux/common/cmdb/category/custom_options/
    method: GET
    data_selector: No content
    params: {}
- name: dropdown_options_for_all_tab
  endpoint:
    path: /ux/common/cmdb/category/dropdown_options_for_all_tab/
    method: GET
    data_selector: No content
    params: {}
- name: business_rule
  endpoint:
    path: /ux/common/business_rule/business_rule
    method: GET
- name: consumable
  endpoint:
    path: /ux/common/cmdb/consumable/
    method: GET
    data_selector: records
    params: {}
- name: consumable_id
  endpoint:
    path: /ux/common/cmdb/consumable/{id}/
    method: GET
    data_selector: records
    params: {}
- name: distribute_stock
  endpoint:
    path: /ux/common/cmdb/consumable/distribute_stock/
    method: POST
    data_selector: records
    params: {}
- name: options
  endpoint:
    path: /ux/common/cmdb/consumable/options/
    method: GET
    data_selector: records
    params: {}
- name: stocks_ci_id
  endpoint:
    path: /ux/common/cmdb/consumable/stocks/{ci_id}/
    method: GET
    data_selector: records
    params: {}
- name: business_rule_list
  endpoint:
    path: /ux/common/business_rule/business_rule/
    method: GET
    data_selector: object[]
    params:
      items_per_page: integerRequired
      page: integerRequired
- name: business_rule_create
  endpoint:
    path: /ux/common/business_rule/business_rule/
    method: POST
    data_selector: No content
- name: business_rule_detail
  endpoint:
    path: /ux/common/business_rule/business_rule/{id}/
    method: GET
    data_selector: object
- name: business_rule_edit
  endpoint:
    path: /ux/common/business_rule/business_rule/{id}/
    method: PUT
    data_selector: object
- name: purchase_order_config
  endpoint:
    path: /ux/common/purchase_order/config
    method: GET
- name: report_api
  endpoint:
    path: /ux/common/report/api
    method: GET
- name: services
  endpoint:
    path: /ux/common/services/services
    method: GET
- name: delete_business_rule
  endpoint:
    path: /ux/common/business_rule/business_rule/{id}/
    method: DELETE
    data_selector: No content
- name: create_business_rule_csv
  endpoint:
    path: /ux/common/business_rule/business_rule/create-csv/
    method: POST
    data_selector: Response object
- name: download_rule_csv
  endpoint:
    path: /ux/common/business_rule/business_rule/download_rule_csv/
    method: GET
    data_selector: Response object
- name: multidelete_business_rule
  endpoint:
    path: /ux/common/business_rule/business_rule/multidelete/
    method: POST
    data_selector: Response object
- name: options_business_rule
  endpoint:
    path: /ux/common/business_rule/business_rule/options/
    method: GET
    data_selector: Response object
- name: rule_count_business_rule
  endpoint:
    path: /ux/common/business_rule/business_rule/rule_count/
    method: GET
    data_selector: Response object
- name: upload_business_rule_csv
  endpoint:
    path: /ux/common/business_rule/business_rule/upload-csv/
    method: POST
    data_selector: Response object
- name: item_classification
  endpoint:
    path: /ux/common/cmdb/item-classification/
    method: GET
    data_selector: response
    params:
      items_per_page: items_per_page
      page: page
- name: business_rule
  endpoint:
    path: /ux/common/business_rule/business_rule/upload-csv/
    method: POST
    data_selector: Response
    params: {}
- name: item_classification_create
  endpoint:
    path: /item-classification/
    method: POST
    data_selector: No content
- name: item_classification_get
  endpoint:
    path: /item-classification/{id}/
    method: GET
    data_selector: Response object
- name: business_service
  endpoint:
    path: /ux/common/business_service/business_service/
    method: GET
    data_selector: records
    params:
      items_per_page: 1
      page: 1
- name: create_business_service
  endpoint:
    path: /ux/common/business_service/business_service/
    method: POST
    data_selector: none
    params: {}
- name: edit_ci_classification
  endpoint:
    path: /item-classification/{id}/
    method: PUT
    data_selector: response
    params:
      id: string
- name: delete_ci_classification
  endpoint:
    path: /item-classification/{id}/
    method: DELETE
    data_selector: response
    params:
      id: string
- name: get_default_item_classifications
  endpoint:
    path: /item-classification/default-item-classifications/
    method: GET
    data_selector: response
    params: {}
- name: delete_classification_config
  endpoint:
    path: /item-classification/delete-classification-config/
    method: POST
    data_selector: response
    params: {}
- name: delete_sub_classification
  endpoint:
    path: /item-classification/delete-sub-classification/
    method: POST
    data_selector: response
    params: {}
- name: get_item_classifications_tree
  endpoint:
    path: /item-classification/item-classifications-tree/
    method: GET
    data_selector: response
    params: {}
- name: get_options
  endpoint:
    path: /item-classification/options/
    method: GET
    data_selector: response
    params: {}
- name: pin_item_classifications
  endpoint:
    path: /item-classification/pin-item-classifications/
    method: POST
    data_selector: response
    params: {}
- name: business_service
  endpoint:
    path: /ux/common/business_service/business_service/{id}/
    method: GET
    data_selector: response
- name: breach_status
  endpoint:
    path: /ux/common/business_service/business_service/breach-status/
    method: GET
    data_selector: response
- name: image_options
  endpoint:
    path: /ux/common/business_service/business_service/image-options/
    method: GET
    data_selector: response
- name: item_classification
  endpoint:
    path: /ux/common/cmdb/item-classification/pin-item-classifications/
    method: POST
    data_selector: Response
    params: {}
- name: purchase_order_config
  endpoint:
    path: /ux/common/purchase_order/config/
    method: GET
    data_selector: Response
    params: {}
- name: report_api
  endpoint:
    path: /ux/common/report/api/
    method: GET
    data_selector: Response
    params: {}
- name: services
  endpoint:
    path: /ux/common/services/services/
    method: GET
    data_selector: Response
    params: {}
- name: delete_service_profile
  endpoint:
    path: /ux/common/services/services/delete-service-profile/
    method: GET
    data_selector: No content
    params: {}
- name: ethernet_service_profiles
  endpoint:
    path: /ux/common/services/services/ethernet-service-profiles/
    method: GET
    data_selector: No content
    params: {}
- name: ethernet_services
  endpoint:
    path: /ux/common/services/services/ethernet-services/
    method: GET
    data_selector: No content
    params: {}
- name: service_catalogue
  endpoint:
    path: /ux/common/catalogue/servicecatalogue
    method: GET
- name: service_details
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/{id}
    method: GET
- name: create_service
  endpoint:
    path: /ux/common/catalogue/servicecatalogue
    method: POST
- name: service_catalogue
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/
    method: GET
    data_selector: records
    params: {}
- name: service_details
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/{id}/
    method: GET
    data_selector: records
    params: {}
- name: licenses
  endpoint:
    path: /ux/common/cmdb/license
    method: GET
    data_selector: records
- name: license
  endpoint:
    path: /ux/common/cmdb/license/
    method: GET
    data_selector: licenses
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: license_details
  endpoint:
    path: /ux/common/cmdb/license/details/
    method: GET
    data_selector: licenses
- name: user_search
  endpoint:
    path: /ux/common/cmdb/license/usersearch/
    method: GET
    data_selector: users
- name: asset_search
  endpoint:
    path: /ux/common/cmdb/license/assetsearch/
    method: GET
    data_selector: assets
- name: edit_service
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/{id}/
    method: PUT
    data_selector: Response
    params: {}
- name: delete_service
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/{id}/
    method: DELETE
    data_selector: No content
    params: {}
- name: patch_service
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/{id}/
    method: PATCH
    data_selector: Response
    params: {}
- name: add_attachment
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/add-attachment/
    method: POST
    data_selector: Response
    params: {}
- name: add_catalogue
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/add-catalogue/
    method: POST
    data_selector: No content
    params: {}
- name: add_service
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/add-service/
    method: POST
    data_selector: No content
    params: {}
- name: cmdb_profile
  endpoint:
    path: /ux/common/cmdb/profile/
    method: GET
- name: cmdb
  endpoint:
    path: /ux/common/cmdb/profile
    method: GET
- name: attachment
  endpoint:
    path: /servicecatalogue/attachment/
    method: GET
    data_selector: records
- name: classification
  endpoint:
    path: /servicecatalogue/classification/
    method: GET
    data_selector: records
- name: history
  endpoint:
    path: /servicecatalogue/history/
    method: GET
    data_selector: records
- name: is_catalogue_exist
  endpoint:
    path: /servicecatalogue/is-catalogue-exist/
    method: GET
    data_selector: records
- name: options_config
  endpoint:
    path: /servicecatalogue/options-config/
    method: GET
    data_selector: records
- name: cmdb_ci
  endpoint:
    path: /ux/common/cmdb/profile/
    method: GET
    data_selector: ANY_ADDITIONAL_PROPERTY
    params:
      items_per_page: '1'
      page: '1'
- name: allocated_assets
  endpoint:
    path: /ux/common/cmdb/profile/allocated-assets/
    method: GET
    data_selector: ANY_ADDITIONAL_PROPERTY
    params:
      email: text
- name: service_list
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/service-list/
    method: GET
- name: service_classes
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/service_classes/
    method: GET
- name: services
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/services/
    method: GET
- name: update_catalogue
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/update-catalogue/
    method: POST
- name: update_service
  endpoint:
    path: /ux/common/catalogue/servicecatalogue/update-service/
    method: POST
- name: blacklist_whitelist
  endpoint:
    path: /ux/common/cmdb/blackwhitelist/
    method: GET
    data_selector: No content
    params:
      items_per_page: '1'
      page: '1'
- name: blackwhitelist
  endpoint:
    path: /blackwhitelist/
    method: POST
    data_selector: No content
- name: blackwhitelist_by_id
  endpoint:
    path: /blackwhitelist/{id}/
    method: GET
    data_selector: No content
- name: blackwhitelist_update
  endpoint:
    path: /blackwhitelist/{id}/
    method: PUT
    data_selector: No content
- name: blackwhitelist_delete
  endpoint:
    path: /blackwhitelist/{id}/
    method: DELETE
    data_selector: No content
- name: blackwhitelist_options
  endpoint:
    path: /blackwhitelist/options/
    method: GET
    data_selector: No content
- name: cmdb_category
  endpoint:
    path: /ux/common/cmdb/category/
    method: GET
    data_selector: ANY_ADDITIONAL_PROPERTY
    params: {}
- name: attachment
  endpoint:
    path: attachment/
    method: GET
    data_selector: null
    params: {}
- name: audit-template-details
  endpoint:
    path: audit-template-details/
    method: GET
    data_selector: null
    params: {}
- name: audit_record_item
  endpoint:
    path: audit_record_item/{id}/
    method: GET
    data_selector: null
    params:
      id: string
- name: audit_record_list
  endpoint:
    path: audit_record_list/
    method: GET
    data_selector: null
    params: {}
- name: audit_status_count
  endpoint:
    path: audit_status_count/
    method: GET
    data_selector: null
    params: {}
- name: audit_status_count_filter
  endpoint:
    path: audit_status_count_filter/
    method: GET
    data_selector: null
    params: {}
- name: audit_template_details
  endpoint:
    path: audit_template_details/
    method: GET
    data_selector: null
    params: {}
- name: available_stats
  endpoint:
    path: available_stats/
    method: GET
    data_selector: null
    params: {}
- name: basicview
  endpoint:
    path: basicview/
    method: GET
    data_selector: null
    params: {}
- name: bmc_vm_relation
  endpoint:
    path: bmc_vm_relation/
    method: GET
    data_selector: null
    params: {}
- name: child-cis
  endpoint:
    path: child-cis/
    method: GET
    data_selector: null
    params: {}
- name: cmdb-exists
  endpoint:
    path: cmdb-exists/
    method: GET
    data_selector: null
    params: {}
- name: component-inventory
  endpoint:
    path: component-inventory/
    method: GET
    data_selector: null
    params: {}
- name: configuration-card-details
  endpoint:
    path: configuration-card-details/
    method: GET
    data_selector: null
    params: {}
- name: congiguration-details
  endpoint:
    path: congiguration-details/
    method: POST
    data_selector: null
    params: {}
- name: congiguration-inventory-details
  endpoint:
    path: congiguration-inventory-details/
    method: GET
    data_selector: null
    params: {}
- name: controller-clients
  endpoint:
    path: controller-clients/
    method: GET
    data_selector: null
    params: {}
- name: controller-stats
  endpoint:
    path: controller-stats/
    method: GET
    data_selector: null
    params: {}
- name: create-csv
  endpoint:
    path: create-csv/
    method: POST
    data_selector: null
    params: {}
- name: discovery-url
  endpoint:
    path: discovery-url/
    method: POST
    data_selector: null
    params: {}
- name: download-config-diff
  endpoint:
    path: download-config-diff/
    method: GET
    data_selector: null
    params: {}
- name: driver-list
  endpoint:
    path: driver-list/
    method: GET
    data_selector: null
    params: {}
- name: export-backup-data
  endpoint:
    path: export-backup-data/
    method: GET
    data_selector: null
    params: {}
- name: get-tags
  endpoint:
    path: get-tags/
    method: GET
    data_selector: null
    params: {}
- name: getAssetAuditTempateData
  endpoint:
    path: getAssetAuditTempateData/
    method: GET
    data_selector: null
    params: {}
- name: getResDetails
  endpoint:
    path: getResDetails/
    method: POST
    data_selector: null
    params: {}
- name: getResDropdownList
  endpoint:
    path: getResDropdownList/
    method: GET
    data_selector: null
    params: {}
- name: hardware
  endpoint:
    path: hardware/
    method: GET
    data_selector: null
    params: {}
- name: hardware-inv
  endpoint:
    path: hardware-inv/
    method: GET
    data_selector: null
    params: {}
- name: history
  endpoint:
    path: history/
    method: GET
    data_selector: null
    params: {}
- name: category_create
  endpoint:
    path: /category/
    method: POST
    data_selector: response
    params: {}
- name: category_get
  endpoint:
    path: /category/{id}/
    method: GET
    data_selector: response
    params: {}
- name: category_update
  endpoint:
    path: /category/{id}/
    method: PUT
    data_selector: response
    params: {}
- name: category_delete
  endpoint:
    path: /category/{id}/
    method: DELETE
    data_selector: response
    params: {}
- name: category_all_options
  endpoint:
    path: /category/all_options/
    method: GET
    data_selector: response
    params: {}
- name: category_audit_template_options
  endpoint:
    path: /category/audit_template_options/
    method: GET
    data_selector: response
    params: {}
- name: category_custom_options
  endpoint:
    path: /category/custom_options/
    method: GET
    data_selector: response
    params: {}
- name: category_dropdown_options_for_all_tab
  endpoint:
    path: /category/dropdown_options_for_all_tab/
    method: GET
    data_selector: response
    params: {}
- name: consumable
  endpoint:
    path: /ux/common/cmdb/consumable/
    method: GET
    data_selector: records
    params: {}
- name: consumable_id
  endpoint:
    path: /ux/common/cmdb/consumable/{id}/
    method: GET
    data_selector: records
    params: {}
- name: distribute_stock
  endpoint:
    path: /ux/common/cmdb/consumable/distribute_stock/
    method: POST
    data_selector: records
    params: {}
- name: options
  endpoint:
    path: /ux/common/cmdb/consumable/options/
    method: GET
    data_selector: records
    params: {}
- name: stocks_ci_id
  endpoint:
    path: /ux/common/cmdb/consumable/stocks/{ci_id}/
    method: GET
    data_selector: records
    params: {}
- name: history_data_export
  endpoint:
    path: /ux/common/cmdb/profile/history_data_export/
    method: GET
    data_selector: ''
    params: {}
- name: inventory_tree
  endpoint:
    path: /ux/common/cmdb/profile/inventory-tree/
    method: GET
    data_selector: ''
    params: {}
- name: inventory_tree_data
  endpoint:
    path: /ux/common/cmdb/profile/inventory-tree-data/
    method: GET
    data_selector: ''
    params: {}
- name: ipam_asset_update
  endpoint:
    path: /ux/common/cmdb/profile/ipam_asset_update/{id}/
    method: PUT
    data_selector: ''
    params: {}
- name: list
  endpoint:
    path: /ux/common/cmdb/profile/list/
    method: POST
    data_selector: ''
    params: {}
- name: log_url
  endpoint:
    path: /ux/common/cmdb/profile/log_url/
    method: GET
    data_selector: ''
    params: {}
- name: netflow_url
  endpoint:
    path: /ux/common/cmdb/profile/netflow_url/
    method: GET
    data_selector: ''
    params: {}
- name: options
  endpoint:
    path: /ux/common/cmdb/profile/options/
    method: GET
    data_selector: ''
    params: {}
- name: os_data
  endpoint:
    path: /ux/common/cmdb/profile/os-data/
    method: GET
    data_selector: ''
    params: {}
- name: perform_bulk_edit_resource
  endpoint:
    path: /ux/common/cmdb/profile/perform_bulk_edit_resource/
    method: POST
    data_selector: ''
    params: {}
- name: physical_summary
  endpoint:
    path: /ux/common/cmdb/profile/physical_summary/
    method: GET
    data_selector: ''
    params: {}
- name: poll_status
  endpoint:
    path: /ux/common/cmdb/profile/poll-status/
    method: POST
    data_selector: ''
    params: {}
- name: port_inventory
  endpoint:
    path: /ux/common/cmdb/profile/port-inventory/
    method: GET
    data_selector: ''
    params: {}
- name: resource_data
  endpoint:
    path: /ux/common/cmdb/profile/resource-data/
    method: GET
    data_selector: ''
    params: {}
- name: resource_stat_data
  endpoint:
    path: /ux/common/cmdb/profile/resource-stat-data/
    method: GET
    data_selector: ''
    params: {}
- name: resources
  endpoint:
    path: /ux/common/cmdb/profile/resources/
    method: GET
    data_selector: ''
    params: {}
- name: customer_ci_configurations
  endpoint:
    path: /ux/common/cmdb/item-classification/
    method: GET
    data_selector: records
    params:
      items_per_page: 1
      page: 1
- name: item_classification_create
  endpoint:
    path: /item-classification/
    method: POST
    data_selector: No content
- name: item_classification_get
  endpoint:
    path: /item-classification/{id}/
    method: GET
    data_selector: Response object
- name: cmdb_relation
  endpoint:
    path: /ux/common/cmdb/relation/
    method: GET
    data_selector: No content
    params: {}
- name: ci_rel_map
  endpoint:
    path: /ux/common/cmdb/relation/ci-rel-map/
    method: POST
    data_selector: No content
    params: {}
- name: ci_opt
  endpoint:
    path: /ux/common/cmdb/relation/ci_opt/
    method: GET
    data_selector: No content
    params: {}
- name: cisearch
  endpoint:
    path: /ux/common/cmdb/relation/cisearch/
    method: GET
    data_selector: No content
    params: {}
- name: options
  endpoint:
    path: /ux/common/cmdb/relation/options/
    method: GET
    data_selector: No content
    params: {}
- name: slot
  endpoint:
    path: /ux/common/cmdb/relation/slot/
    method: GET
    data_selector: No content
    params: {}
- name: item_classification
  endpoint:
    path: /ux/common/cmdb/item-classification/{id}/
    method: PUT
    data_selector: response
    params: {}
- name: default_item_classifications
  endpoint:
    path: /ux/common/cmdb/item-classification/default-item-classifications/
    method: GET
    data_selector: response
    params: {}
- name: delete_classification_config
  endpoint:
    path: /ux/common/cmdb/item-classification/delete-classification-config/
    method: POST
    data_selector: response
    params: {}
- name: delete_sub_classification
  endpoint:
    path: /ux/common/cmdb/item-classification/delete-sub-classification/
    method: POST
    data_selector: response
    params: {}
- name: software
  endpoint:
    path: /ux/common/cmdb/software
    method: GET
    data_selector: records
- name: software
  endpoint:
    path: /ux/common/cmdb/software/
    method: GET
    data_selector: No content
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: software_by_id
  endpoint:
    path: /ux/common/cmdb/software/{id}/
    method: GET
    data_selector: No content
    params: {}
- name: item_classification
  endpoint:
    path: /cmdb/item-classification/pin-item-classifications/
    method: POST
    data_selector: Responseobject
    params: {}
- name: purchase_order_config
  endpoint:
    path: /purchase_order/config/
    method: GET
    data_selector: No content
    params: {}
- name: report_api
  endpoint:
    path: /report/api/
    method: GET
    data_selector: No content
    params: {}
- name: services
  endpoint:
    path: /services/services/
    method: GET
    data_selector: No content
    params: {}
- name: delete_service_profile
  endpoint:
    path: /ux/common/services/services/delete-service-profile/
    method: GET
- name: ethernet_service_profiles
  endpoint:
    path: /ux/common/services/services/ethernet-service-profiles/
    method: GET
- name: ethernet_services
  endpoint:
    path: /ux/common/services/services/ethernet-services/
    method: GET
- name: contract
  endpoint:
    path: /ux/common/contract/config/
    method: GET
    data_selector: '[].contract_id'
    params:
      items_per_page: '1'
      page: '1'
- name: license
  endpoint:
    path: /ux/common/cmdb/license
    method: GET
- name: license_details
  endpoint:
    path: /ux/common/cmdb/license/details/
    method: GET
- name: license_usersearch
  endpoint:
    path: /ux/common/cmdb/license/usersearch/
    method: GET
- name: get_contract
  endpoint:
    path: /ux/common/contract/config/{id}/
    method: GET
    data_selector: contract
    params: {}
- name: update_contract
  endpoint:
    path: /ux/common/contract/config/{id}/
    method: PUT
    data_selector: contract
    params: {}
- name: delete_contract
  endpoint:
    path: /ux/common/contract/config/{id}/
    method: DELETE
    data_selector: contract
    params: {}
- name: add_attachment
  endpoint:
    path: /ux/common/contract/config/add-attachment/
    method: POST
    data_selector: attachment
    params: {}
- name: ci_contract_map
  endpoint:
    path: /ux/common/contract/config/ci-contract-map/
    method: GET
    data_selector: ci_contract
    params: {}
- name: options
  endpoint:
    path: /ux/common/contract/config/options/
    method: GET
    data_selector: options
    params: {}
- name: department
  endpoint:
    path: /ux/common/department/department/
    method: GET
    data_selector: object[]
    params:
      items_per_page: '1'
      page: '1'
- name: license
  endpoint:
    path: /ux/common/cmdb/license/
    method: GET
    data_selector: No content
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: license_details
  endpoint:
    path: /ux/common/cmdb/license/details/
    method: GET
    data_selector: No content
- name: license_assetsearch
  endpoint:
    path: /ux/common/cmdb/license/assetsearch/
    method: GET
    data_selector: No content
- name: license_filterapp
  endpoint:
    path: /ux/common/cmdb/license/filterapp/
    method: GET
    data_selector: No content
- name: license_insights
  endpoint:
    path: /ux/common/cmdb/license/insights/
    method: GET
    data_selector: No content
- name: license_linegraph
  endpoint:
    path: /ux/common/cmdb/license/linegraph/
    method: GET
    data_selector: No content
- name: license_options
  endpoint:
    path: /ux/common/cmdb/license/options/
    method: GET
    data_selector: No content
- name: license_upload_csv
  endpoint:
    path: /ux/common/cmdb/license/upload-csv/
    method: POST
    data_selector: No content
- name: license_usersearch
  endpoint:
    path: /ux/common/cmdb/license/usersearch/
    method: GET
    data_selector: No content
- name: create_department
  endpoint:
    path: /department/
    method: POST
    data_selector: No content
- name: get_department
  endpoint:
    path: /department/{id}/
    method: GET
    data_selector: Response object
- name: edit_department
  endpoint:
    path: /department/{id}/
    method: PUT
    data_selector: Response object
- name: delete_department
  endpoint:
    path: /department/{id}/
    method: DELETE
    data_selector: No content
- name: multi_delete_department
  endpoint:
    path: /department/multidelete/
    method: POST
    data_selector: Response object
- name: get_department_options
  endpoint:
    path: /department/options/
    method: GET
    data_selector: Response object
- name: events
  endpoint:
    path: /ux/common/events/events
    method: GET
- name: cmdb_profile
  endpoint:
    path: /ux/common/cmdb/profile
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /ux/common/events/events/
    method: GET
    data_selector: records
    params:
      items_per_page: 1
      page: 1
- name: event
  endpoint:
    path: /events/{eventid}/
    method: GET
    data_selector: ''
    params: {}
- name: event_comments
  endpoint:
    path: /events/comments/{eventid}/
    method: GET
    data_selector: ''
    params: {}
- name: event_create_incident
  endpoint:
    path: /events/create_incident/
    method: POST
    data_selector: ''
    params: {}
- name: event_update_event_assignee
  endpoint:
    path: /events/update-event-assignee/
    method: POST
    data_selector: ''
    params: {}
- name: event_update_due_date
  endpoint:
    path: /events/update_event_due_date/
    method: POST
    data_selector: ''
    params: {}
- name: event_upsert_incident
  endpoint:
    path: /events/upsert_incident/
    method: POST
    data_selector: ''
    params: {}
- name: cmdb_ci
  endpoint:
    path: /ux/common/cmdb/profile/
    method: GET
    data_selector: properties
    params: {}
- name: allocated_assets
  endpoint:
    path: /ux/common/cmdb/profile/allocated-assets/
    method: GET
    data_selector: properties
    params:
      email: string
- name: asset_count
  endpoint:
    path: /ux/common/cmdb/profile/asset-count/
    method: GET
    data_selector: properties
    params: {}
- name: asset_summary
  endpoint:
    path: /ux/common/cmdb/profile/asset-summary/
    method: GET
    data_selector: properties
    params: {}
- name: asset_list
  endpoint:
    path: /ux/common/cmdb/profile/assetList/
    method: GET
    data_selector: properties
    params: {}
- name: field_config
  endpoint:
    path: /ux/common/fieldconfig/field-config/
    method: GET
    data_selector: '[]'
    params:
      items_per_page: 1
      page: 1
- name: create_field_config
  endpoint:
    path: /ux/common/fieldconfig/field-config/
    method: POST
    data_selector: No content
    params: {}
- name: field_config_get
  endpoint:
    path: /field-config/{id}/
    method: GET
    data_selector: response
- name: field_config_edit
  endpoint:
    path: /field-config/{id}/
    method: PUT
    data_selector: response
- name: field_config_delete
  endpoint:
    path: /field-config/{id}/
    method: DELETE
- name: field_permission
  endpoint:
    path: /field-config/field_permission/
    method: POST
    data_selector: response
- name: field_config_options
  endpoint:
    path: /field-config/options/
    method: GET
    data_selector: response
- name: IMACD
  endpoint:
    path: /ux/common/imacd/imacd
    method: GET
- name: conversation
  endpoint:
    path: /ux/common/imacd/conversation
    method: POST
- name: attachment
  endpoint:
    path: attachment/
    method: GET
    data_selector: No content
    params: {}
- name: audit_template_details
  endpoint:
    path: audit-template-details/
    method: GET
    data_selector: No content
    params: {}
- name: audit_record_item
  endpoint:
    path: audit_record_item/{id}/
    method: GET
    data_selector: No content
    params: {}
- name: audit_record_list
  endpoint:
    path: audit_record_list/
    method: GET
    data_selector: No content
    params: {}
- name: audit_status_count
  endpoint:
    path: audit_status_count/
    method: GET
    data_selector: No content
    params: {}
- name: audit_status_count_filter
  endpoint:
    path: audit_status_count_filter/
    method: GET
    data_selector: No content
    params: {}
- name: available_stats
  endpoint:
    path: available_stats/
    method: GET
    data_selector: No content
    params: {}
- name: basicview
  endpoint:
    path: basicview/
    method: GET
    data_selector: No content
    params: {}
- name: bmc_vm_relation
  endpoint:
    path: bmc_vm_relation/
    method: GET
    data_selector: No content
    params: {}
- name: child-cis
  endpoint:
    path: child-cis/
    method: GET
    data_selector: No content
    params: {}
- name: cmdb-exists
  endpoint:
    path: cmdb-exists/
    method: GET
    data_selector: No content
    params: {}
- name: component-inventory
  endpoint:
    path: component-inventory/
    method: GET
    data_selector: No content
    params: {}
- name: configuration-card-details
  endpoint:
    path: configuration-card-details/
    method: GET
    data_selector: No content
    params: {}
- name: create-csv
  endpoint:
    path: create-csv/
    method: POST
    data_selector: No content
    params: {}
- name: discovery-url
  endpoint:
    path: discovery-url/
    method: POST
    data_selector: No content
    params: {}
- name: download-config-diff
  endpoint:
    path: download-config-diff/
    method: GET
    data_selector: No content
    params: {}
- name: driver-list
  endpoint:
    path: driver-list/
    method: GET
    data_selector: No content
    params: {}
- name: export-backup-data
  endpoint:
    path: export-backup-data/
    method: GET
    data_selector: No content
    params: {}
- name: get-tags
  endpoint:
    path: get-tags/
    method: GET
    data_selector: No content
    params: {}
- name: getAssetAuditTempateData
  endpoint:
    path: getAssetAuditTempateData/
    method: GET
    data_selector: No content
    params: {}
- name: getResDetails
  endpoint:
    path: getResDetails/
    method: POST
    data_selector: No content
    params: {}
- name: getResDropdownList
  endpoint:
    path: getResDropdownList/
    method: GET
    data_selector: No content
    params: {}
- name: hardware
  endpoint:
    path: hardware/
    method: GET
    data_selector: No content
    params: {}
- name: hardware-inv
  endpoint:
    path: hardware-inv/
    method: GET
    data_selector: No content
    params: {}
- name: history
  endpoint:
    path: history/
    method: GET
    data_selector: No content
    params: {}
- name: conversation
  endpoint:
    path: /ux/common/imacd/conversation/
    method: GET
    data_selector: No content
- name: imacd
  endpoint:
    path: /ux/common/imacd/imacd/
    method: GET
    data_selector: No content
    params:
      items_per_page: '1'
      page: '1'
- name: imacd_with_id
  endpoint:
    path: /ux/common/imacd/imacd/{id}/
    method: GET
    data_selector: No content
- name: attachment
  endpoint:
    path: /ux/common/imacd/imacd/attachment/
    method: GET
    data_selector: No content
- name: history
  endpoint:
    path: /ux/common/imacd/imacd/history/
    method: GET
    data_selector: No content
- name: KB
  endpoint:
    path: /ux/common/kb/kb
    method: GET
- name: get_kb_list
  endpoint:
    path: /ux/common/kb/kb/
    method: GET
    data_selector: results
    params:
      items_per_page: integer
      offset: integer
- name: create_kb
  endpoint:
    path: /ux/common/kb/kb/
    method: POST
    data_selector: response
    params: {}
- name: get_kb_by_id
  endpoint:
    path: /ux/common/kb/kb/{id}/
    method: GET
    data_selector: response
    params: {}
- name: edit_kb
  endpoint:
    path: /ux/common/kb/kb/{id}/
    method: PUT
    data_selector: response
    params: {}
- name: delete_kb
  endpoint:
    path: /ux/common/kb/kb/{id}/
    method: DELETE
    data_selector: response
    params: {}
- name: add_attachment
  endpoint:
    path: /ux/common/kb/kb/add-attachment/
    method: POST
    data_selector: response
    params: {}
- name: history_data_export
  endpoint:
    path: /history_data_export/
    method: GET
    data_selector: ''
    params: {}
- name: inventory_tree
  endpoint:
    path: /inventory-tree/
    method: GET
    data_selector: ''
    params: {}
- name: inventory_tree_data
  endpoint:
    path: /inventory-tree-data/
    method: GET
    data_selector: ''
    params: {}
- name: ipam_asset_update
  endpoint:
    path: /ipam_asset_update/{id}/
    method: PUT
    data_selector: ''
    params: {}
- name: list
  endpoint:
    path: /list/
    method: POST
    data_selector: ''
    params: {}
- name: log_url
  endpoint:
    path: /log_url/
    method: GET
    data_selector: ''
    params: {}
- name: netflow_url
  endpoint:
    path: /netflow_url/
    method: GET
    data_selector: ''
    params: {}
- name: options
  endpoint:
    path: /options/
    method: GET
    data_selector: ''
    params: {}
- name: os_data
  endpoint:
    path: /os-data/
    method: GET
    data_selector: ''
    params: {}
- name: perform_bulk_edit_resource
  endpoint:
    path: /perform_bulk_edit_resource/
    method: POST
    data_selector: ''
    params: {}
- name: physical_summary
  endpoint:
    path: /physical_summary/
    method: GET
    data_selector: ''
    params: {}
- name: poll_status
  endpoint:
    path: /poll-status/
    method: POST
    data_selector: ''
    params: {}
- name: port_inventory
  endpoint:
    path: /port-inventory/
    method: GET
    data_selector: ''
    params: {}
- name: resource_data
  endpoint:
    path: /resource-data/
    method: GET
    data_selector: ''
    params: {}
- name: resource_stat_data
  endpoint:
    path: /resource-stat-data/
    method: GET
    data_selector: ''
    params: {}
- name: resources
  endpoint:
    path: /resources/
    method: GET
    data_selector: ''
    params: {}
- name: cmdb_relation
  endpoint:
    path: /ux/common/cmdb/relation/
    method: GET
    data_selector: records
- name: ci_rel_map
  endpoint:
    path: /ux/common/cmdb/relation/ci-rel-map/
    method: POST
    data_selector: records
- name: ci_opt
  endpoint:
    path: /ux/common/cmdb/relation/ci_opt/
    method: GET
    data_selector: records
- name: cisearch
  endpoint:
    path: /ux/common/cmdb/relation/cisearch/
    method: GET
    data_selector: records
- name: options
  endpoint:
    path: /ux/common/cmdb/relation/options/
    method: GET
    data_selector: records
- name: slot
  endpoint:
    path: /ux/common/cmdb/relation/slot/
    method: GET
    data_selector: records
- name: attachment
  endpoint:
    path: /kb/attachment/
    method: GET
    data_selector: records
- name: bookmarks
  endpoint:
    path: /kb/bookmarks/
    method: GET
    data_selector: records
- name: categories
  endpoint:
    path: /kb/categories/
    method: GET
    data_selector: records
- name: comment
  endpoint:
    path: /kb/comment/
    method: POST
    data_selector: records
- name: comments
  endpoint:
    path: /kb/comments/
    method: GET
    data_selector: records
- name: delete_attachment
  endpoint:
    path: /kb/delete-attachment/{id}/
    method: PUT
    data_selector: records
- name: software
  endpoint:
    path: /ux/common/cmdb/software
    method: GET
    data_selector: records
- name: feedback
  endpoint:
    path: /feedback/
    method: POST
    data_selector: kb_id
    params: {}
- name: history
  endpoint:
    path: /history/
    method: GET
    data_selector: kb_id
    params: {}
- name: options
  endpoint:
    path: /options/
    method: GET
    data_selector: kb_id
    params: {}
- name: ratings
  endpoint:
    path: /ratings/
    method: GET
    data_selector: kb_id
    params: {}
- name: recent
  endpoint:
    path: /recent/
    method: GET
    data_selector: kb_id
    params: {}
- name: related
  endpoint:
    path: /related/
    method: GET
    data_selector: kb_id
    params: {}
- name: user_list
  endpoint:
    path: /user-list/
    method: GET
    data_selector: records
- name: viewers
  endpoint:
    path: /viewers/
    method: GET
    data_selector: records
- name: views
  endpoint:
    path: /views/
    method: GET
    data_selector: records
- name: software
  endpoint:
    path: /ux/common/cmdb/software/
    method: GET
    data_selector: No content
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: software_by_id
  endpoint:
    path: /ux/common/cmdb/software/{id}/
    method: GET
    data_selector: No content
    params:
      id: string
- name: create_software
  endpoint:
    path: /ux/common/cmdb/software/
    method: POST
    data_selector: No content
    params: {}
- name: update_software
  endpoint:
    path: /ux/common/cmdb/software/{id}/
    method: PUT
    data_selector: No content
    params:
      id: string
- name: delete_software
  endpoint:
    path: /ux/common/cmdb/software/{id}/
    method: DELETE
    data_selector: No content
    params:
      id: string
- name: create_csv
  endpoint:
    path: /ux/common/cmdb/software/create-csv/
    method: POST
    data_selector: No content
    params: {}
- name: upload_csv
  endpoint:
    path: /ux/common/cmdb/software/upload-csv/
    method: POST
    data_selector: No content
    params: {}
- name: contracts
  endpoint:
    path: /ux/common/contract/config/
    method: GET
    data_selector: '[]'
    params:
      items_per_page: 1
      page: 1
- name: leaves
  endpoint:
    path: /ux/common/leaves/leaveinfo/
    method: GET
    data_selector: results
    params:
      incremental: updated_at
- name: get_contract
  endpoint:
    path: /ux/common/contract/config/{id}/
    method: GET
    data_selector: Responseobject
- name: update_contract
  endpoint:
    path: /ux/common/contract/config/{id}/
    method: PUT
    data_selector: No content
- name: delete_contract
  endpoint:
    path: /ux/common/contract/config/{id}/
    method: DELETE
    data_selector: No content
- name: add_attachment
  endpoint:
    path: /ux/common/contract/config/add-attachment/
    method: POST
    data_selector: Responseobject
- name: get_ci_contract_relation
  endpoint:
    path: /ux/common/contract/config/ci-contract-map/
    method: GET
    data_selector: Responseobject
- name: get_options
  endpoint:
    path: /ux/common/contract/config/options/
    method: GET
    data_selector: Responseobject
- name: leave_info
  endpoint:
    path: /leaveinfo/{id}/
    method: GET
    data_selector: response
    params:
      id: string
- name: edit_leave_info
  endpoint:
    path: /leaveinfo/{id}/
    method: PUT
    data_selector: response
    params:
      id: string
- name: delete_leave
  endpoint:
    path: /ux/common/leaves/leaveinfo/{id}/
    method: DELETE
- name: patch_leave
  endpoint:
    path: /ux/common/leaves/leaveinfo/{id}/
    method: PATCH
- name: get_config
  endpoint:
    path: /ux/common/leaves/leaveinfo/get_config/
    method: GET
- name: get_options
  endpoint:
    path: /ux/common/leaves/leaveinfo/get_options/
    method: GET
- name: my_leaves
  endpoint:
    path: /ux/common/leaves/leaveinfo/my_leaves/
    method: GET
- name: save_config
  endpoint:
    path: /ux/common/leaves/leaveinfo/save_config/
    method: POST
- name: department
  endpoint:
    path: /ux/common/department/department/
    method: GET
    data_selector: records
    params:
      items_per_page: '1'
      page: '1'
- name: chat_config
  endpoint:
    path: /ux/common/live_chat/chat/
    method: GET
    data_selector: No content
    params: {}
- name: create_department
  endpoint:
    path: department/
    method: POST
    data_selector: No content
    params: {}
- name: get_department
  endpoint:
    path: department/{id}/
    method: GET
    data_selector: Responseobject
    params: {}
- name: edit_department
  endpoint:
    path: department/{id}/
    method: PUT
    data_selector: Responseobject
    params: {}
- name: delete_department
  endpoint:
    path: department/{id}/
    method: DELETE
    data_selector: No content
    params: {}
- name: multi_delete_departments
  endpoint:
    path: department/multidelete/
    method: POST
    data_selector: Responseobject
    params: {}
- name: get_department_options
  endpoint:
    path: department/options/
    method: GET
    data_selector: Responseobject
    params: {}
- name: chat_config
  endpoint:
    path: /ux/common/live_chat/chat/
    method: POST
- name: chat_by_id
  endpoint:
    path: /ux/common/live_chat/chat/{id}/
    method: GET
- name: update_chat_by_id
  endpoint:
    path: /ux/common/live_chat/chat/{id}/
    method: PUT
- name: delete_chat_by_id
  endpoint:
    path: /ux/common/live_chat/chat/{id}/
    method: DELETE
- name: chat_status
  endpoint:
    path: /ux/common/live_chat/chat/chat_status/
    method: POST
- name: chats
  endpoint:
    path: /ux/common/live_chat/chat/chats/
    method: POST
- name: messages
  endpoint:
    path: /ux/common/live_chat/chat/messages/
    method: GET
- name: chat_options
  endpoint:
    path: /ux/common/live_chat/chat/options/
    method: GET
- name: start_chat
  endpoint:
    path: /ux/common/live_chat/chat/start_chat/
    method: POST
- name: events
  endpoint:
    path: /ux/common/events/events
    method: GET
- name: marketplace
  endpoint:
    path: /ux/common/marketplace/marketplace/
    method: GET
- name: app_details
  endpoint:
    path: /ux/common/marketplace/marketplace/app_details/
    method: GET
- name: roles
  endpoint:
    path: /ux/common/marketplace/marketplace/roles/
    method: GET
- name: events
  endpoint:
    path: /ux/common/events/events/
    method: GET
    data_selector: No content
    params: {}
- name: events_post
  endpoint:
    path: /ux/common/events/events/
    method: POST
    data_selector: No content
    params: {}
- name: event
  endpoint:
    path: /events/{eventid}/
    method: GET
    data_selector: No content
    params: {}
- name: event_comments
  endpoint:
    path: /events/comments/{eventid}/
    method: GET
    data_selector: No content
    params: {}
- name: event_action
  endpoint:
    path: /events/action/
    method: GET
    data_selector: No content
    params: {}
- name: available_tags
  endpoint:
    path: /events/available-tags/
    method: GET
    data_selector: No content
    params: {}
- name: column_config
  endpoint:
    path: /events/column-config/
    method: GET
    data_selector: No content
    params: {}
- name: suppressed_events
  endpoint:
    path: /events/suppressed-events/
    method: GET
    data_selector: No content
    params: {}
- name: suppression_adaptive
  endpoint:
    path: /events/suppression-adaptive/
    method: GET
    data_selector: No content
    params: {}
- name: marketplace
  endpoint:
    path: /marketplace/
    method: GET
    data_selector: records
    params: {}
- name: marketplace_id
  endpoint:
    path: /marketplace/{id}/
    method: GET
    data_selector: records
    params: {}
- name: marketplace_apikey
  endpoint:
    path: /marketplace/apikey/
    method: GET
    data_selector: records
    params: {}
- name: marketplace_app_details
  endpoint:
    path: /marketplace/app_details/
    method: GET
    data_selector: records
    params: {}
- name: marketplace_app_status
  endpoint:
    path: /marketplace/app_status/
    method: GET
    data_selector: records
    params: {}
- name: marketplace_azure_config
  endpoint:
    path: /marketplace/azure_config/
    method: GET
    data_selector: records
    params: {}
- name: marketplace_bmc_settings
  endpoint:
    path: /marketplace/bmc_settings/
    method: GET
    data_selector: records
    params: {}
- name: marketplace_bmc_sync_schedule
  endpoint:
    path: /marketplace/bmc_sync_schedule/
    method: POST
    data_selector: records
    params: {}
- name: marketplace_google_access_token
  endpoint:
    path: /marketplace/google-access-token/
    method: POST
    data_selector: records
    params: {}
- name: marketplace_google_signin
  endpoint:
    path: /marketplace/google_signin/
    method: POST
    data_selector: records
    params: {}
- name: marketplace_options
  endpoint:
    path: /marketplace/options/
    method: GET
    data_selector: records
    params: {}
- name: marketplace_roles
  endpoint:
    path: /marketplace/roles/
    method: GET
    data_selector: records
    params: {}
- name: marketplace_update_config
  endpoint:
    path: /marketplace/update_config/
    method: POST
    data_selector: records
    params: {}
- name: marketplace_whats_app_config
  endpoint:
    path: /marketplace/whats_app_config/
    method: GET
    data_selector: records
    params: {}
- name: field_config
  endpoint:
    path: /ux/common/fieldconfig/field-config/
    method: GET
    data_selector: ''
- name: create_field_config
  endpoint:
    path: /ux/common/fieldconfig/field-config/
    method: POST
    data_selector: ''
- name: field_config_get
  endpoint:
    path: /field-config/{id}/
    method: GET
    data_selector: workflow_name, workflow_id, module, role_name, status, field_config_id
    params: {}
- name: field_config_edit
  endpoint:
    path: /field-config/{id}/
    method: PUT
    data_selector: workflow_name, workflow_id, field_config_id
    params: {}
- name: field_config_delete
  endpoint:
    path: /field-config/{id}/
    method: DELETE
    data_selector: ''
    params: {}
- name: field_permission
  endpoint:
    path: /field-config/field_permission/
    method: POST
    data_selector: workflow_name, workflow_id, field_config_id
    params: {}
- name: field_config_options
  endpoint:
    path: /field-config/options/
    method: GET
    data_selector: workflow_name, workflow_id, module, role_name, status, field_config_id
    params: {}
- name: get
  endpoint:
    path: /ux/common/messenger/3api/
    method: GET
    data_selector: object[]
- name: post
  endpoint:
    path: /ux/common/messenger/3api/
    method: POST
    data_selector: object
- name: get_by_id
  endpoint:
    path: /ux/common/messenger/3api/{id}/
    method: GET
    data_selector: object
- name: put_by_id
  endpoint:
    path: /ux/common/messenger/3api/{id}/
    method: PUT
    data_selector: object
- name: delete_by_id
  endpoint:
    path: /ux/common/messenger/3api/{id}/
    method: DELETE
- name: messenger
  endpoint:
    path: /ux/common/messenger/3api/{id}/
    method: DELETE
    data_selector: No content
- name: messenger_patch
  endpoint:
    path: /ux/common/messenger/3api/{id}/
    method: PATCH
    data_selector: application/json
- name: beep
  endpoint:
    path: /ux/common/messenger/beep/
    method: GET
    data_selector: records
- name: beep_id
  endpoint:
    path: /ux/common/messenger/beep/{id}/
    method: GET
    data_selector: records
- name: get_sound_files
  endpoint:
    path: /ux/common/messenger/beep/get-sound-files/
    method: GET
    data_selector: records
- name: get_suppressed_messages
  endpoint:
    path: /ux/common/messenger/beep/get-suppressed-messages/
    method: GET
    data_selector: records
- name: imacd_conversation
  endpoint:
    path: /ux/common/imacd/conversation/
    method: GET
    data_selector: No content
- name: imacd
  endpoint:
    path: /ux/common/imacd/imacd/
    method: GET
    data_selector: No content
    params:
      items_per_page: '1'
      page: '1'
- name: imacd_attachment
  endpoint:
    path: /ux/common/imacd/imacd/attachment/
    method: GET
    data_selector: No content
- name: imacd_history
  endpoint:
    path: /ux/common/imacd/imacd/history/
    method: GET
    data_selector: No content
- name: imacd_options
  endpoint:
    path: /ux/common/imacd/imacd/options/
    method: GET
    data_selector: No content
- name: imacd_save_rich_text
  endpoint:
    path: /ux/common/imacd/imacd/save-rich-text/
    method: POST
    data_selector: No content
- name: sms
  endpoint:
    path: /ux/common/messenger/sms/
    method: GET
- name: Knowledge Base
  endpoint:
    path: /ux/common/kb/kb
    method: GET
- name: sms
  endpoint:
    path: /ux/common/messenger/sms/
    method: GET
    data_selector: object[]
    params: {}
- name: sms_post
  endpoint:
    path: /ux/common/messenger/sms/
    method: POST
    data_selector: object
    params: {}
- name: sms_get_by_id
  endpoint:
    path: /ux/common/messenger/sms/{id}/
    method: GET
    data_selector: object
    params: {}
- name: sms_put_by_id
  endpoint:
    path: /ux/common/messenger/sms/{id}/
    method: PUT
    data_selector: object
    params: {}
- name: sms_delete_by_id
  endpoint:
    path: /ux/common/messenger/sms/{id}/
    method: DELETE
    data_selector: null
    params: {}
- name: sms
  endpoint:
    path: /ux/common/messenger/sms/{id}/
    method: DELETE
    data_selector: No content
- name: sms_patch
  endpoint:
    path: /ux/common/messenger/sms/{id}/
    method: PATCH
    data_selector: Responseobject
- name: get_kb_list
  endpoint:
    path: /ux/common/kb/kb/
    method: GET
    data_selector: results
    params:
      items_per_page: integer
      offset: integer
- name: create_kb
  endpoint:
    path: /ux/common/kb/kb/
    method: POST
    data_selector: response
    params: {}
- name: get_kb_by_id
  endpoint:
    path: /ux/common/kb/kb/{id}/
    method: GET
    data_selector: response
    params: {}
- name: edit_kb
  endpoint:
    path: /ux/common/kb/kb/{id}/
    method: PUT
    data_selector: response
    params: {}
- name: delete_kb
  endpoint:
    path: /ux/common/kb/kb/{id}/
    method: DELETE
    data_selector: response
    params: {}
- name: add_attachment
  endpoint:
    path: /ux/common/kb/kb/add-attachment/
    method: POST
    data_selector: response
    params: {}
- name: suppressed
  endpoint:
    path: /ux/common/messenger/suppressed/
    method: GET
    data_selector: No content
- name: suppressed
  endpoint:
    path: /ux/common/messenger/suppressed/
    method: POST
    data_selector: No content
- name: suppressed_id
  endpoint:
    path: /ux/common/messenger/suppressed/{id}/
    method: GET
    data_selector: No content
- name: suppressed_id
  endpoint:
    path: /ux/common/messenger/suppressed/{id}/
    method: PUT
    data_selector: No content
- name: suppressed_id
  endpoint:
    path: /ux/common/messenger/suppressed/{id}/
    method: DELETE
    data_selector: No content
- name: suppressed_id
  endpoint:
    path: /ux/common/messenger/suppressed/{id}/
    method: PATCH
    data_selector: No content
- name: attachments
  endpoint:
    path: /kb/attachment/
    method: GET
    data_selector: records
- name: bookmarks
  endpoint:
    path: /kb/bookmarks/
    method: GET
    data_selector: records
- name: categories
  endpoint:
    path: /kb/categories/
    method: GET
    data_selector: records
- name: comments
  endpoint:
    path: /kb/comments/
    method: GET
    data_selector: records
- name: save_comment
  endpoint:
    path: /kb/comment/
    method: POST
    data_selector: records
- name: delete_attachment
  endpoint:
    path: /kb/delete-attachment/{id}/
    method: PUT
    data_selector: records
- name: organization_location
  endpoint:
    path: /ux/common/org/location/
    method: GET
    data_selector: response
    params: {}
- name: create_organization_location
  endpoint:
    path: /ux/common/org/location/
    method: POST
    data_selector: response
    params: {}
- name: save_feedback
  endpoint:
    path: feedback/
    method: POST
    data_selector: kb_id
    params: {}
- name: get_history
  endpoint:
    path: history/
    method: GET
    data_selector: kb_id
    params: {}
- name: get_options
  endpoint:
    path: options/
    method: GET
    data_selector: kb_id
    params: {}
- name: get_ratings
  endpoint:
    path: ratings/
    method: GET
    data_selector: kb_id
    params: {}
- name: get_recent_kbs
  endpoint:
    path: recent/
    method: GET
    data_selector: kb_id
    params: {}
- name: get_related_kbs
  endpoint:
    path: related/
    method: GET
    data_selector: kb_id
    params: {}
- name: location_details
  endpoint:
    path: /location_details/
    method: GET
    data_selector: response
    params: {}
- name: team_location
  endpoint:
    path: /team_location/
    method: GET
    data_selector: response
    params: {}
- name: download_csv
  endpoint:
    path: /download_csv/
    method: GET
    data_selector: response
    params: {}
- name: upload_csv
  endpoint:
    path: /upload-csv/
    method: POST
    data_selector: response
    params: {}
- name: create_csv
  endpoint:
    path: /create-csv/
    method: POST
    data_selector: response
    params: {}
- name: user_list
  endpoint:
    path: /ux/common/kb/kb/user-list/
    method: GET
    data_selector: records
    params: {}
- name: viewers
  endpoint:
    path: /ux/common/kb/kb/viewers/
    method: GET
    data_selector: records
    params: {}
- name: view_count
  endpoint:
    path: /ux/common/kb/kb/views/
    method: GET
    data_selector: records
    params: {}
- name: partner
  endpoint:
    path: /ux/common/partner/partner/
    method: GET
    data_selector: documents
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: create_partner
  endpoint:
    path: /ux/common/partner/partner/
    method: POST
    data_selector: none
    params: {}
- name: leaves
  endpoint:
    path: /ux/common/leaves/leaveinfo/
    method: GET
    data_selector: results
    params:
      offset: offset
- name: get_partner
  endpoint:
    path: /partner/{id}/
    method: GET
    data_selector: id
- name: put_partner
  endpoint:
    path: /partner/{id}/
    method: PUT
    data_selector: partner_id
- name: delete_partner
  endpoint:
    path: /partner/{id}/
    method: DELETE
- name: filter_partners
  endpoint:
    path: /partner/filter/
    method: GET
    data_selector: id
- name: leave_info
  endpoint:
    path: /ux/common/leaves/leaveinfo/{id}/
    method: GET
    data_selector: leave_info
- name: leave_edit
  endpoint:
    path: /ux/common/leaves/leaveinfo/{id}/
    method: PUT
    data_selector: leave_edit
- name: predicted_events
  endpoint:
    path: /ux/common/predicted_events/predicted_events
    method: GET
- name: delete_leave
  endpoint:
    path: /leaveinfo/{id}/
    method: DELETE
- name: patch_leave
  endpoint:
    path: /leaveinfo/{id}/
    method: PATCH
- name: get_config
  endpoint:
    path: /leaveinfo/get_config/
    method: GET
- name: get_options
  endpoint:
    path: /leaveinfo/get_options/
    method: GET
- name: my_leaves
  endpoint:
    path: /leaveinfo/my_leaves/
    method: GET
- name: save_config
  endpoint:
    path: /leaveinfo/save_config/
    method: POST
- name: predicted_events
  endpoint:
    path: /ux/common/predicted_events/predicted_events/
    method: GET
    data_selector: No content
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: predicted_events_post
  endpoint:
    path: /ux/common/predicted_events/predicted_events/
    method: POST
    data_selector: No content
    params: {}
- name: chat_config
  endpoint:
    path: /ux/common/live_chat/chat/
    method: GET
    data_selector: No content
    params: {}
- name: predicted_event
  endpoint:
    path: /ux/common/predicted_events/predicted_events/{eventid}/
    method: GET
- name: create_incident
  endpoint:
    path: /ux/common/predicted_events/predicted_events/create_incident/
    method: POST
- name: events_nbi
  endpoint:
    path: /ux/common/predicted_events/predicted_events/events_nbi/
    method: POST
- name: get_event_ticket_details
  endpoint:
    path: /ux/common/predicted_events/predicted_events/get-event-ticket-details/
    method: GET
- name: suppressed_events
  endpoint:
    path: /ux/common/predicted_events/predicted_events/suppressed-events/
    method: GET
- name: update_event_due_date
  endpoint:
    path: /ux/common/predicted_events/predicted_events/update-event-due-date/
    method: POST
- name: chat_config
  endpoint:
    path: /chat/
    method: POST
    data_selector: No content
- name: chat_options
  endpoint:
    path: /options/
    method: GET
    data_selector: No content
- name: start_chat
  endpoint:
    path: /start_chat/
    method: POST
    data_selector: No content
- name: chat_messages
  endpoint:
    path: /messages/
    method: GET
    data_selector: No content
- name: requester_profile
  endpoint:
    path: /ux/common/requester/profile/
    method: GET
    data_selector: records
    params:
      items_per_page: '1'
      page: '1'
- name: create_requester
  endpoint:
    path: /profile/
    method: POST
    data_selector: No content
- name: get_requester_profile
  endpoint:
    path: /profile/{id}/
    method: GET
    data_selector: application/json
- name: edit_requester
  endpoint:
    path: /profile/{id}/
    method: PUT
    data_selector: application/json
- name: delete_requester
  endpoint:
    path: /ux/common/requester/profile/{id}/
    method: DELETE
- name: post_requester_assets
  endpoint:
    path: /ux/common/requester/profile/assets/
    method: POST
- name: create_csv_requester
  endpoint:
    path: /ux/common/requester/profile/create-csv/
    method: POST
- name: create_new_requester
  endpoint:
    path: /ux/common/requester/profile/create_new_requester/
    method: POST
- name: initconfig
  endpoint:
    path: /initconfig/
    method: GET
    data_selector: response
    params: {}
- name: requester_details
  endpoint:
    path: /requester_details/
    method: POST
    data_selector: response
    params: {}
- name: updateReportingMngr
  endpoint:
    path: /updateReportingMngr/
    method: POST
    data_selector: response
    params: {}
- name: updateRequesterStatus
  endpoint:
    path: /ux/common/requester/profile/updateRequesterStatus/
    method: POST
    data_selector: response
    params: {}
- name: uploadCsv
  endpoint:
    path: /ux/common/requester/profile/upload-csv/
    method: POST
    data_selector: response
    params: {}
- name: Service Feasibility Requests
  endpoint:
    path: /ux/common/service_feasibility_request/service_request/
    method: GET
- name: service_feasibility_request
  endpoint:
    path: /ux/common/service_feasibility_request/service_request/
    method: GET
    data_selector: object[]
- name: service_feasibility_request_detail
  endpoint:
    path: /ux/common/service_feasibility_request/service_request/{id}/
    method: GET
    data_selector: object
- name: service_feasibility_requests
  endpoint:
    path: /get_service_requests/
    method: GET
    data_selector: response
    params:
      items_per_page: 1
      page: 1
- name: role_profile
  endpoint:
    path: /ux/common/roles/profile/
    method: GET
    data_selector: object[]
    params: {}
- name: role_profile_create
  endpoint:
    path: /ux/common/roles/profile/
    method: POST
    data_selector: No response body
    params: {}
- name: role_profile_id
  endpoint:
    path: /ux/common/roles/profile/{id}/
    method: GET
    data_selector: object
    params: {}
- name: marketplace
  endpoint:
    path: /ux/common/marketplace/marketplace/
    method: GET
    data_selector: ''
    params: {}
- name: marketplace_with_id
  endpoint:
    path: /ux/common/marketplace/marketplace/{id}/
    method: GET
    data_selector: ''
    params: {}
- name: apikey
  endpoint:
    path: /ux/common/marketplace/marketplace/apikey/
    method: GET
    data_selector: ''
    params: {}
- name: app_details
  endpoint:
    path: /ux/common/marketplace/marketplace/app_details/
    method: GET
    data_selector: ''
    params: {}
- name: app_status
  endpoint:
    path: /ux/common/marketplace/marketplace/app_status/
    method: GET
    data_selector: ''
    params: {}
- name: azure_config
  endpoint:
    path: /ux/common/marketplace/marketplace/azure_config/
    method: GET
    data_selector: ''
    params: {}
- name: azure_settings
  endpoint:
    path: /ux/common/marketplace/marketplace/azure_settings/
    method: GET
    data_selector: ''
    params: {}
- name: bmc_settings
  endpoint:
    path: /ux/common/marketplace/marketplace/bmc_settings/
    method: GET
    data_selector: ''
    params: {}
- name: bmc_sync_schedule
  endpoint:
    path: /ux/common/marketplace/marketplace/bmc_sync_schedule/
    method: POST
    data_selector: ''
    params: {}
- name: download_teams_manifest
  endpoint:
    path: /ux/common/marketplace/marketplace/download-teams-manifest/
    method: POST
    data_selector: ''
    params: {}
- name: google_access_token
  endpoint:
    path: /ux/common/marketplace/marketplace/google-access-token/
    method: POST
    data_selector: ''
    params: {}
- name: google_auth_update
  endpoint:
    path: /ux/common/marketplace/marketplace/google-auth-update/
    method: POST
    data_selector: ''
    params: {}
- name: google_client_data
  endpoint:
    path: /ux/common/marketplace/marketplace/google-client-data/
    method: GET
    data_selector: ''
    params: {}
- name: google_signin
  endpoint:
    path: /ux/common/marketplace/marketplace/google_signin/
    method: POST
    data_selector: ''
    params: {}
- name: google_workspace_settings
  endpoint:
    path: /ux/common/marketplace/marketplace/google_workspace_settings/
    method: GET
    data_selector: ''
    params: {}
- name: jira_options
  endpoint:
    path: /ux/common/marketplace/marketplace/jira_options/
    method: GET
    data_selector: ''
    params: {}
- name: jira_settings
  endpoint:
    path: /ux/common/marketplace/marketplace/jira_settings/
    method: GET
    data_selector: ''
    params: {}
- name: microsoft_access_token
  endpoint:
    path: /ux/common/marketplace/marketplace/microsoft-access-token/
    method: POST
    data_selector: ''
    params: {}
- name: ms_signin
  endpoint:
    path: /ux/common/marketplace/marketplace/ms_signin/
    method: POST
    data_selector: ''
    params: {}
- name: options
  endpoint:
    path: /ux/common/marketplace/marketplace/options/
    method: GET
    data_selector: ''
    params: {}
- name: rc_settings
  endpoint:
    path: /ux/common/marketplace/marketplace/rc_settings/
    method: GET
    data_selector: ''
    params: {}
- name: requester_mobile_no
  endpoint:
    path: /ux/common/marketplace/marketplace/requester_mobile_no/
    method: GET
    data_selector: ''
    params: {}
- name: roles
  endpoint:
    path: /ux/common/marketplace/marketplace/roles/
    method: GET
    data_selector: ''
    params: {}
- name: save_bmc_config
  endpoint:
    path: /ux/common/marketplace/marketplace/save_bmc_config/
    method: POST
    data_selector: ''
    params: {}
- name: save_config_app
  endpoint:
    path: /ux/common/marketplace/marketplace/save_config_app/
    method: POST
    data_selector: ''
    params: {}
- name: save_jira_config
  endpoint:
    path: /ux/common/marketplace/marketplace/save_jira_config/
    method: POST
    data_selector: ''
    params: {}
- name: save_ldap_config
  endpoint:
    path: /ux/common/marketplace/marketplace/save_ldap_config/
    method: POST
    data_selector: ''
    params: {}
- name: save_map
  endpoint:
    path: /ux/common/marketplace/marketplace/save_map/
    method: POST
    data_selector: ''
    params: {}
- name: save_ring_central_config
  endpoint:
    path: /ux/common/marketplace/marketplace/save_ring_central_config/
    method: POST
    data_selector: ''
    params: {}
- name: save_servicenow_config
  endpoint:
    path: /ux/common/marketplace/marketplace/save_servicenow_config/
    method: POST
    data_selector: ''
    params: {}
- name: save_sync_time_count
  endpoint:
    path: /ux/common/marketplace/marketplace/save_sync_time_count/
    method: POST
    data_selector: ''
    params: {}
- name: save_tenable_config
  endpoint:
    path: /ux/common/marketplace/marketplace/save_tenable_config/
    method: POST
    data_selector: ''
    params: {}
- name: save_whatsapp_map
  endpoint:
    path: /ux/common/marketplace/marketplace/save_whatsapp_map/
    method: POST
    data_selector: ''
    params: {}
- name: sn_settings
  endpoint:
    path: /ux/common/marketplace/marketplace/sn_settings/
    method: GET
    data_selector: ''
    params: {}
- name: team_settings
  endpoint:
    path: /ux/common/marketplace/marketplace/team_settings/
    method: GET
    data_selector: ''
    params: {}
- name: tenable_settings
  endpoint:
    path: /ux/common/marketplace/marketplace/tenable_settings/
    method: GET
    data_selector: ''
    params: {}
- name: uninstall_app
  endpoint:
    path: /ux/common/marketplace/marketplace/uninstall-app/
    method: POST
    data_selector: ''
    params: {}
- name: update_config
  endpoint:
    path: /ux/common/marketplace/marketplace/update_config/
    method: POST
    data_selector: ''
    params: {}
- name: whats_app_config
  endpoint:
    path: /ux/common/marketplace/marketplace/whats_app_config/
    method: GET
    data_selector: ''
    params: {}
- name: ux_common_messenger
  endpoint:
    path: /ux/common/messenger/3api/
    method: GET
- name: edit_role
  endpoint:
    path: /profile/{id}/
    method: PUT
    data_selector: Responseobject
    params: {}
- name: delete_role
  endpoint:
    path: /profile/{id}/
    method: DELETE
    data_selector: null
    params: {}
- name: get_module_role_map
  endpoint:
    path: /profile/config/
    method: GET
    data_selector: Responseobject
    params: {}
- name: get_role_json
  endpoint:
    path: /profile/json/
    method: GET
    data_selector: Responseobject
    params: {}
- name: get_event_options
  endpoint:
    path: /profile/options/
    method: GET
    data_selector: Responseobject
    params: {}
- name: get
  endpoint:
    path: /ux/common/messenger/3api/
    method: GET
    data_selector: object[]
- name: post
  endpoint:
    path: /ux/common/messenger/3api/
    method: POST
    data_selector: object
- name: get_by_id
  endpoint:
    path: /ux/common/messenger/3api/{id}/
    method: GET
    data_selector: object
- name: put
  endpoint:
    path: /ux/common/messenger/3api/{id}/
    method: PUT
    data_selector: object
- name: delete
  endpoint:
    path: /ux/common/messenger/3api/{id}/
    method: DELETE
    data_selector: object
- name: service_outage
  endpoint:
    path: /ux/common/service_outage/service_outage/
    method: GET
    data_selector: records
    params: {}
- name: create_service_outage
  endpoint:
    path: /ux/common/service_outage/service_outage/
    method: POST
    data_selector: records
    params: {}
- name: get_service_outage_by_id
  endpoint:
    path: /ux/common/service_outage/service_outage/{id}/
    method: GET
    data_selector: records
    params: {}
- name: update_service_outage
  endpoint:
    path: /ux/common/service_outage/service_outage/{id}/
    method: PUT
    data_selector: records
    params: {}
- name: delete_service_outage
  endpoint:
    path: /ux/common/service_outage/service_outage/{id}/
    method: DELETE
    data_selector: records
    params: {}
- name: delete_message
  endpoint:
    path: /ux/common/messenger/3api/{id}/
    method: DELETE
- name: patch_message
  endpoint:
    path: /ux/common/messenger/3api/{id}/
    method: PATCH
- name: service_outage_options
  endpoint:
    path: /service_outage/options/
    method: GET
    data_selector: No content
    params: {}
- name: beep
  endpoint:
    path: /ux/common/messenger/beep/
    method: GET
    data_selector: No content
- name: beep_id
  endpoint:
    path: /ux/common/messenger/beep/{id}/
    method: GET
    data_selector: No content
- name: get_sound_files
  endpoint:
    path: /ux/common/messenger/beep/get-sound-files/
    method: GET
    data_selector: No content
- name: get_suppressed_messages
  endpoint:
    path: /ux/common/messenger/beep/get-suppressed-messages/
    method: GET
    data_selector: No content
- name: tag
  endpoint:
    path: /ux/common/tag/tag/
    method: GET
    data_selector: '[]'
    params:
      items_per_page: '1'
      page: '1'
- name: sms
  endpoint:
    path: /ux/common/messenger/sms/
    method: GET
- name: create_tag
  endpoint:
    path: /tag/
    method: POST
    data_selector: No content
- name: get_tag
  endpoint:
    path: /tag/{id}/
    method: GET
    data_selector: Response object
- name: edit_tag
  endpoint:
    path: /tag/{id}/
    method: PUT
    data_selector: Response object
- name: sms
  endpoint:
    path: /ux/common/messenger/sms/
    method: GET
    data_selector: object[]
- name: sms_post
  endpoint:
    path: /ux/common/messenger/sms/
    method: POST
    data_selector: object
- name: sms_detail
  endpoint:
    path: /ux/common/messenger/sms/{id}/
    method: GET
    data_selector: object
- name: sms_update
  endpoint:
    path: /ux/common/messenger/sms/{id}/
    method: PUT
    data_selector: object
- name: sms_delete
  endpoint:
    path: /ux/common/messenger/sms/{id}/
    method: DELETE
- name: delete_tag
  endpoint:
    path: /ux/common/tag/tag/{id}/
    method: DELETE
    params: {}
- name: check_tags_config
  endpoint:
    path: /ux/common/tag/tag/check-tags-config/
    method: GET
    data_selector: Responseobject
    params: {}
- name: filter_tags
  endpoint:
    path: /ux/common/tag/tag/filter/
    method: GET
    data_selector: Responseobject
    params: {}
- name: multidelete_tags
  endpoint:
    path: /ux/common/tag/tag/multidelete/
    method: POST
    data_selector: Responseobject
    params: {}
- name: options_tags
  endpoint:
    path: /ux/common/tag/tag/options/
    method: GET
    data_selector: Responseobject
    params: {}
- name: validate_tag_user_usages
  endpoint:
    path: /ux/common/tag/tag/validate_tag_user_usages/{id}/
    method: GET
    data_selector: Responseobject
    params: {}
- name: sms
  endpoint:
    path: /ux/common/messenger/sms/{id}/
    method: PATCH
    data_selector: response
    params: {}
- name: sms_delete
  endpoint:
    path: /ux/common/messenger/sms/{id}/
    method: DELETE
    data_selector: response
    params: {}
- name: team_profiles
  endpoint:
    path: /ux/common/teams/profile/
    method: GET
    data_selector: response
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: suppressed
  endpoint:
    path: /ux/common/messenger/suppressed/
    method: GET
    data_selector: No content
- name: suppressed_id
  endpoint:
    path: /ux/common/messenger/suppressed/{id}/
    method: GET
    data_selector: No content
- name: create_team
  endpoint:
    path: /ux/common/teams/profile/
    method: POST
    data_selector: No content
- name: get_team
  endpoint:
    path: /ux/common/teams/profile/{id}/
    method: GET
    data_selector: response object
- name: edit_team
  endpoint:
    path: /ux/common/teams/profile/{id}/
    method: PUT
    data_selector: response object
- name: organization_location
  endpoint:
    path: /ux/common/org/location/
    method: GET
    data_selector: '[]'
- name: delete_team
  endpoint:
    path: /ux/common/teams/profile/{id}/
    method: DELETE
    data_selector: No content
- name: incident_map
  endpoint:
    path: /ux/common/teams/profile/incident_map/
    method: POST
    data_selector: application/json
- name: user_group_list
  endpoint:
    path: /ux/common/teams/profile/usergrplist/
    method: POST
    data_selector: application/json
- name: validate_team_change
  endpoint:
    path: /ux/common/teams/profile/validate_team_change/
    method: GET
    data_selector: application/json
- name: options
  endpoint:
    path: /ux/common/teams/profile/options/
    method: GET
    data_selector: application/json
- name: get_location
  endpoint:
    path: /{id}/
    method: GET
    data_selector: response
    params: {}
- name: edit_location
  endpoint:
    path: /{id}/
    method: PUT
    data_selector: response
    params: {}
- name: delete_location
  endpoint:
    path: /{id}/
    method: DELETE
    data_selector: response
    params: {}
- name: create_csv
  endpoint:
    path: /create-csv/
    method: POST
    data_selector: response
    params: {}
- name: download_csv
  endpoint:
    path: /download_csv/
    method: GET
    data_selector: response
    params: {}
- name: location_details
  endpoint:
    path: /location_details/
    method: GET
    data_selector: response
    params: {}
- name: team_location
  endpoint:
    path: /team_location/
    method: GET
    data_selector: response
    params: {}
- name: upload_csv
  endpoint:
    path: /upload-csv/
    method: POST
    data_selector: response
    params: {}
- name: telecom_settings
  endpoint:
    path: /ux/common/telecom_settings/telecom_settings/
    method: GET
- name: partner
  endpoint:
    path: /ux/common/partner/partner/
    method: GET
    data_selector: '[]'
    params:
      items_per_page: '1'
      page: '1'
- name: create_partner
  endpoint:
    path: /ux/common/partner/partner/
    method: POST
    data_selector: null
    params: {}
- name: telecom_settings
  endpoint:
    path: /ux/common/telecom_settings/telecom_settings/
    method: GET
    data_selector: response
    params: {}
- name: telecom_settings_create
  endpoint:
    path: /ux/common/telecom_settings/telecom_settings/
    method: POST
    data_selector: response
    params: {}
- name: telecom_settings_by_id
  endpoint:
    path: /ux/common/telecom_settings/telecom_settings/{id}/
    method: GET
    data_selector: response
    params: {}
- name: telecom_settings_update
  endpoint:
    path: /ux/common/telecom_settings/telecom_settings/{id}/
    method: PUT
    data_selector: response
    params: {}
- name: telecom_settings_delete
  endpoint:
    path: /ux/common/telecom_settings/telecom_settings/{id}/
    method: DELETE
    data_selector: response
    params: {}
- name: get_partner
  endpoint:
    path: /ux/common/partner/partner/{id}/
    method: GET
    data_selector: response
    params: {}
- name: edit_partner
  endpoint:
    path: /ux/common/partner/partner/{id}/
    method: PUT
    data_selector: response
    params: {}
- name: delete_partner
  endpoint:
    path: /ux/common/partner/partner/{id}/
    method: DELETE
    data_selector: response
    params: {}
- name: filter_partner
  endpoint:
    path: /ux/common/partner/partner/filter/
    method: GET
    data_selector: response
    params: {}
- name: predicted_events
  endpoint:
    path: /ux/common/predicted_events/predicted_events
    method: GET
- name: telecom_settings
  endpoint:
    path: /ux/common/telecom_settings/telecom_settings/{id}/
    method: PUT
    data_selector: id
    params: {}
- name: telecom_settings_delete
  endpoint:
    path: /ux/common/telecom_settings/telecom_settings/{id}/
    method: DELETE
    data_selector: null
    params: {}
- name: predicted_events
  endpoint:
    path: /ux/common/predicted_events/predicted_events/
    method: GET
    data_selector: ''
    params:
      items_per_page: '1'
      page: '1'
- name: predicted_events_post
  endpoint:
    path: /ux/common/predicted_events/predicted_events/
    method: POST
    data_selector: ''
    params: {}
- name: get_settings
  endpoint:
    path: /ux/common/telecom_settings/telecom_settings/get_settings/
    method: GET
    data_selector: Responseobject
    params:
      items_per_page: '1'
      page: '1'
- name: update_settings
  endpoint:
    path: /ux/common/telecom_settings/telecom_settings/update_settings/
    method: POST
    data_selector: Responseobject
- name: trap_configurations
  endpoint:
    path: /ux/common/trap/configuration
    method: GET
- name: predicted_event
  endpoint:
    path: /ux/common/predicted_events/predicted_events/{eventid}/
    method: GET
    data_selector: No content
    params:
      eventid: string
- name: create_incident
  endpoint:
    path: /ux/common/predicted_events/predicted_events/create_incident/
    method: POST
    data_selector: No content
- name: update_event_assignee
  endpoint:
    path: /ux/common/predicted_events/predicted_events/update-event-assignee/
    method: POST
    data_selector: No content
- name: update_event_due_date
  endpoint:
    path: /ux/common/predicted_events/predicted_events/update-event-due-date/
    method: POST
    data_selector: No content
- name: trap_configurations
  endpoint:
    path: /ux/common/trap/configuration/
    method: GET
    data_selector: object[]
    params:
      items_per_page: integer
      page: integer
- name: create_trap_configuration
  endpoint:
    path: /ux/common/trap/configuration/
    method: POST
    data_selector: object
    params: {}
- name: get_trap_configuration
  endpoint:
    path: /ux/common/trap/configuration/{id}/
    method: GET
    data_selector: object
    params: {}
- name: edit_trap_configuration
  endpoint:
    path: /ux/common/trap/configuration/{id}/
    method: PUT
    data_selector: object
    params: {}
- name: requester_profile
  endpoint:
    path: /ux/common/requester/profile/
    method: GET
    data_selector: ANY_ADDITIONAL_PROPERTY
    params: {}
- name: trap_configuration
  endpoint:
    path: /ux/common/trap/configuration/{id}/
    method: DELETE
    data_selector: ''
- name: msg_options
  endpoint:
    path: /ux/common/trap/configuration/msg_options/
    method: GET
    data_selector: ''
- name: multidelete
  endpoint:
    path: /ux/common/trap/configuration/multidelete/
    method: POST
    data_selector: ''
- name: options
  endpoint:
    path: /ux/common/trap/configuration/options/
    method: GET
    data_selector: ''
- name: trap_msgs
  endpoint:
    path: /ux/common/trap/configuration/trap_msgs/
    method: GET
    data_selector: ''
    params:
      items_per_page: integer
      page: integer
- name: create_requester
  endpoint:
    path: /ux/common/requester/profile/
    method: POST
    data_selector: No content
- name: get_requester_profile
  endpoint:
    path: /ux/common/requester/profile/{id}/
    method: GET
    data_selector: Response object
- name: edit_requester
  endpoint:
    path: /ux/common/requester/profile/{id}/
    method: PUT
    data_selector: Response object
- name: user_profiles
  endpoint:
    path: /ux/common/user/profile/
    method: GET
    data_selector: results
    params:
      items_per_page: items_per_page
      page: page
- name: delete_requester
  endpoint:
    path: /ux/common/requester/profile/{id}/
    method: DELETE
- name: post_requester_assets
  endpoint:
    path: /ux/common/requester/profile/assets/
    method: POST
- name: create_csv_requester
  endpoint:
    path: /ux/common/requester/profile/create-csv/
    method: POST
- name: create_new_requester
  endpoint:
    path: /ux/common/requester/profile/create_new_requester/
    method: POST
- name: create_user
  endpoint:
    path: /profile/
    method: POST
    data_selector: response
    params: {}
- name: get_user
  endpoint:
    path: /profile/{id}/
    method: GET
    data_selector: response
    params: {}
- name: edit_user
  endpoint:
    path: /profile/{id}/
    method: PUT
    data_selector: response
    params: {}
- name: initconfig
  endpoint:
    path: /initconfig/
    method: GET
    data_selector: response
    params: {}
- name: requester_details
  endpoint:
    path: /requester_details/
    method: POST
    data_selector: response
    params: {}
- name: updateReportingMngr
  endpoint:
    path: /updateReportingMngr/
    method: POST
    data_selector: response
    params: {}
- name: updateRequesterStatus
  endpoint:
    path: /ux/common/requester/profile/updateRequesterStatus/
    method: POST
    data_selector: response
    params: {}
- name: uploadCsv
  endpoint:
    path: /ux/common/requester/profile/upload-csv/
    method: POST
    data_selector: response
    params: {}
- name: service_feasibility_request
  endpoint:
    path: /ux/common/service_feasibility_request/service_request/
    method: GET
- name: delete_user
  endpoint:
    path: /ux/common/user/profile/{id}/
    method: DELETE
    data_selector: No content
    params: {}
- name: active_users
  endpoint:
    path: /ux/common/user/profile/active_users/
    method: POST
    data_selector: profile_id
    params: {}
- name: activeuser_list
  endpoint:
    path: /ux/common/user/profile/activeuser_list/
    method: GET
    data_selector: profile_id
    params: {}
- name: download_csv
  endpoint:
    path: /ux/common/user/profile/download_csv/
    method: GET
    data_selector: profile_id
    params: {}
- name: get_my_profile
  endpoint:
    path: /ux/common/user/profile/getmyprofile/
    method: GET
    data_selector: profile_id
    params: {}
- name: logout
  endpoint:
    path: /ux/common/user/profile/logout/
    method: POST
    data_selector: profile_id
    params: {}
- name: my_profile
  endpoint:
    path: /ux/common/user/profile/myprofile/
    method: POST
    data_selector: profile_id
    params: {}
- name: options
  endpoint:
    path: /ux/common/user/profile/options/
    method: GET
    data_selector: profile_id
    params: {}
- name: preference
  endpoint:
    path: /ux/common/user/profile/preference/
    method: POST
    data_selector: profile_id
    params: {}
- name: upload_csv
  endpoint:
    path: /ux/common/user/profile/upload_csv/
    method: POST
    data_selector: profile_id
    params: {}
- name: user_invite
  endpoint:
    path: /ux/common/user/profile/user_invite/
    method: POST
    data_selector: profile_id
    params: {}
- name: validate_csv
  endpoint:
    path: /ux/common/user/profile/validate_csv/
    method: POST
    data_selector: profile_id
    params: {}
- name: service_feasibility_request
  endpoint:
    path: /ux/common/service_feasibility_request/service_request/
    method: GET
    data_selector: object[]
- name: service_feasibility_request
  endpoint:
    path: /ux/common/service_feasibility_request/service_request/get_service_requests/
    method: GET
    data_selector: Response
    params:
      items_per_page: '1'
      page: '1'
- name: vendor
  endpoint:
    path: /ux/common/vendor/vendor/
    method: GET
    data_selector: object[]
- name: vendor_post
  endpoint:
    path: /ux/common/vendor/vendor/
    method: POST
    data_selector: object
- name: vendor
  endpoint:
    path: /ux/common/vendor/vendor/{id}/
    method: GET
    data_selector: id
    params: {}
- name: vendor_options
  endpoint:
    path: /ux/common/vendor/vendor/options/
    method: GET
    data_selector: id
    params: {}
- name: role_profile
  endpoint:
    path: /ux/common/roles/profile/
    method: GET
    data_selector: object[]
    params: {}
- name: create_role
  endpoint:
    path: /ux/common/roles/profile/
    method: POST
    data_selector: No response body
    params: {}
- name: get_role_by_id
  endpoint:
    path: /ux/common/roles/profile/{id}/
    method: GET
    data_selector: object
    params: {}
- name: association_events
  endpoint:
    path: /ux/ims/association_events/association_events/
    method: GET
    data_selector: records
- name: edit_role
  endpoint:
    path: /ux/common/roles/profile/{id}/
    method: PUT
    data_selector: Responseobject
    params: {}
- name: delete_role
  endpoint:
    path: /ux/common/roles/profile/{id}/
    method: DELETE
    data_selector: No content
    params: {}
- name: get_module_role_map
  endpoint:
    path: /ux/common/roles/profile/config/
    method: GET
    data_selector: Responseobject
    params: {}
- name: get_role_options
  endpoint:
    path: /ux/common/roles/profile/options/
    method: GET
    data_selector: Responseobject
    params: {}
- name: device_template
  endpoint:
    path: /ux/ims/device-template
    method: GET
- name: service_outage
  endpoint:
    path: /ux/common/service_outage/service_outage/
    method: GET
    data_selector: null
    params: {}
- name: create_service_outage
  endpoint:
    path: /ux/common/service_outage/service_outage/
    method: POST
    data_selector: null
    params: {}
- name: get_service_outage_by_id
  endpoint:
    path: /ux/common/service_outage/service_outage/{id}/
    method: GET
    data_selector: null
    params: {}
- name: update_service_outage
  endpoint:
    path: /ux/common/service_outage/service_outage/{id}/
    method: PUT
    data_selector: null
    params: {}
- name: delete_service_outage
  endpoint:
    path: /ux/common/service_outage/service_outage/{id}/
    method: DELETE
    data_selector: null
    params: {}
- name: device_template
  endpoint:
    path: /ux/ims/device-template/
    method: GET
    data_selector: object[]
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: device_template_details
  endpoint:
    path: /ux/ims/device-template/{id}/
    method: GET
    data_selector: object
- name: create_device_template
  endpoint:
    path: /ux/ims/device-template/
    method: POST
    data_selector: no content
- name: update_device_template
  endpoint:
    path: /ux/ims/device-template/{id}/
    method: PUT
    data_selector: object
- name: service_outage_options
  endpoint:
    path: /service_outage/options/
    method: GET
    data_selector: No content
    params: {}
- name: delete_device_template
  endpoint:
    path: /ux/ims/device-template/{id}/
    method: DELETE
    data_selector: No content
    params:
      id: string
- name: create_templates
  endpoint:
    path: /ux/ims/device-template/create-templates/
    method: POST
    data_selector: Response object
    params: {}
- name: download_csv
  endpoint:
    path: /ux/ims/device-template/download_csv/
    method: GET
    data_selector: Response object
    params: {}
- name: multidelete
  endpoint:
    path: /ux/ims/device-template/multidelete/
    method: POST
    data_selector: Response object
    params: {}
- name: options
  endpoint:
    path: /ux/ims/device-template/options/
    method: GET
    data_selector: Response object
    params: {}
- name: csv_cols
  endpoint:
    path: /ux/ims/device-template/csv_cols/
    method: POST
    data_selector: Response object
    params: {}
- name: tag
  endpoint:
    path: /ux/common/tag/tag/
    method: GET
    data_selector: '[]'
    params:
      items_per_page: integer
      page: integer
- name: create_tag
  endpoint:
    path: /tag/
    method: POST
    data_selector: No content
- name: get_tag
  endpoint:
    path: /tag/{id}/
    method: GET
    data_selector: Response object
- name: edit_tag
  endpoint:
    path: /tag/{id}/
    method: PUT
    data_selector: Response object
- name: res_config_options
  endpoint:
    path: /ux/ims/device-template/res-config-options/
    method: GET
    data_selector: response
- name: sys_object_resync
  endpoint:
    path: /ux/ims/device-template/sys-object-resync/
    method: POST
    data_selector: response
- name: upload_csv
  endpoint:
    path: /ux/ims/device-template/upload-csv/
    method: POST
    data_selector: response
- name: verify_oid_exists
  endpoint:
    path: /ux/ims/device-template/verify-oid-exists/
    method: GET
    data_selector: response
- name: discovery_configuration
  endpoint:
    path: /ux/ims/discovery/profile/
    method: GET
    data_selector: records
    params: {}
- name: delete_tag
  endpoint:
    path: /ux/common/tag/tag/{id}/
    method: DELETE
- name: check_tags_config
  endpoint:
    path: /ux/common/tag/tag/check-tags-config/
    method: GET
    data_selector: responseobject
- name: filter_tags
  endpoint:
    path: /ux/common/tag/tag/filter/
    method: GET
    data_selector: responseobject
- name: multi_delete_tags
  endpoint:
    path: /ux/common/tag/tag/multidelete/
    method: POST
- name: options
  endpoint:
    path: /ux/common/tag/tag/options/
    method: GET
    data_selector: responseobject
- name: validate_tag_user_usages
  endpoint:
    path: /ux/common/tag/tag/validate_tag_user_usages/{id}/
    method: GET
    data_selector: responseobject
- name: create_discovery_configuration
  endpoint:
    path: /profile/
    method: POST
    data_selector: Response
    params: {}
- name: get_discovery_configuration
  endpoint:
    path: /profile/{id}/
    method: GET
    data_selector: Response
    params: {}
- name: edit_discovery_configuration
  endpoint:
    path: /profile/{id}/
    method: PUT
    data_selector: Response
    params: {}
- name: delete_discovery_configuration
  endpoint:
    path: /profile/{id}/
    method: DELETE
    data_selector: No content
    params: {}
- name: get_audit
  endpoint:
    path: /profile/audit/
    method: GET
    data_selector: Response
    params: {}
- name: get_detailed_configuration
  endpoint:
    path: /profile/details/
    method: GET
    data_selector: Response
    params: {}
- name: get_iterations
  endpoint:
    path: /profile/do-rescan/
    method: POST
    data_selector: Response
    params: {}
- name: download_csv
  endpoint:
    path: /profile/download_csv/
    method: GET
    data_selector: Response
    params: {}
- name: team_profiles
  endpoint:
    path: /ux/common/teams/profile/
    method: GET
    data_selector: response
    params:
      items_per_page: '1'
      page: '1'
- name: discovery_options
  endpoint:
    path: /ux/ims/discovery/profile/options/
    method: GET
    data_selector: id
- name: validate_csv
  endpoint:
    path: /ux/ims/discovery/profile/validate_csv/
    method: POST
    data_selector: job_id
- name: iteration_list
  endpoint:
    path: /ux/ims/discovery/profile/iteration-list/
    method: GET
    data_selector: id
- name: multidelete
  endpoint:
    path: /ux/ims/discovery/profile/multidelete/
    method: POST
    data_selector: job_id
- name: create_team
  endpoint:
    path: /ux/common/teams/profile/
    method: POST
- name: get_team
  endpoint:
    path: /ux/common/teams/profile/{id}/
    method: GET
- name: edit_team
  endpoint:
    path: /ux/common/teams/profile/{id}/
    method: PUT
- name: jobs
  endpoint:
    path: /ux/ims/jobs/profile/
    method: GET
- name: delete_team
  endpoint:
    path: /ux/common/teams/profile/{id}/
    method: DELETE
- name: post_incident_map
  endpoint:
    path: /ux/common/teams/profile/incident_map/
    method: POST
- name: get_options
  endpoint:
    path: /ux/common/teams/profile/options/
    method: GET
- name: post_user_group_list
  endpoint:
    path: /ux/common/teams/profile/usergrplist/
    method: POST
- name: validate_team_change
  endpoint:
    path: /ux/common/teams/profile/validate_team_change/
    method: GET
- name: jobs_profile
  endpoint:
    path: /ux/ims/jobs/profile/
    method: GET
    data_selector: ANY_ADDITIONAL_PROPERTY
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: jobs_profile_by_id
  endpoint:
    path: /ux/ims/jobs/profile/{id}/
    method: GET
    data_selector: ANY_ADDITIONAL_PROPERTY
    params: {}
- name: telecom_settings
  endpoint:
    path: /ux/common/telecom_settings/telecom_settings/
    method: GET
- name: mib_explorer
  endpoint:
    path: /ux/ims/mib-explorer/
    method: GET
    data_selector: response
    params:
      items_per_page: 1
      page: 1
- name: telecom_settings
  endpoint:
    path: /ux/common/telecom_settings/telecom_settings/
    method: GET
    data_selector: object
    params: {}
- name: mib_explorer
  endpoint:
    path: /ux/ims/mib-explorer/
    method: POST
    data_selector: No content
- name: mib_explorer_get
  endpoint:
    path: /ux/ims/mib-explorer/{id}/
    method: GET
    data_selector: application/json
- name: mib_explorer_put
  endpoint:
    path: /ux/ims/mib-explorer/{id}/
    method: PUT
    data_selector: application/json
- name: mib_explorer_delete
  endpoint:
    path: /ux/ims/mib-explorer/{id}/
    method: DELETE
    data_selector: No content
- name: mib_explorer_multidelete
  endpoint:
    path: /ux/ims/mib-explorer/multidelete/
    method: POST
    data_selector: application/json
- name: mib_explorer_options
  endpoint:
    path: /ux/ims/mib-explorer/options/
    method: GET
    data_selector: application/json
- name: telecom_settings
  endpoint:
    path: /ux/common/telecom_settings/telecom_settings/{id}/
    method: PUT
    data_selector: id
    params: {}
- name: telecom_settings_delete
  endpoint:
    path: /ux/common/telecom_settings/telecom_settings/{id}/
    method: DELETE
    data_selector: null
    params: {}
- name: get_settings
  endpoint:
    path: /get_settings/
    method: GET
    params:
      items_per_page: '1'
      page: '1'
- name: update_settings
  endpoint:
    path: /update_settings/
    method: POST
- name: seasonal_events
  endpoint:
    path: /ux/ims/seasonal_events/seasonal_events/
    method: GET
    data_selector: records
- name: seasonal_events_post
  endpoint:
    path: /ux/ims/seasonal_events/seasonal_events/
    method: POST
    data_selector: records
- name: seasonal_events_by_id
  endpoint:
    path: /ux/ims/seasonal_events/seasonal_events/{id}/
    method: GET
    data_selector: records
- name: seasonal_events_put_by_id
  endpoint:
    path: /ux/ims/seasonal_events/seasonal_events/{id}/
    method: PUT
    data_selector: records
- name: seasonal_events_delete_by_id
  endpoint:
    path: /ux/ims/seasonal_events/seasonal_events/{id}/
    method: DELETE
    data_selector: records
- name: ipam
  endpoint:
    path: /ux/ipam/ipam/
    method: GET
- name: trap_configurations
  endpoint:
    path: /ux/common/trap/configuration
    method: GET
- name: trap_messages
  endpoint:
    path: /ux/common/trap/configuration/trap_msgs
    method: GET
- name: msg_options
  endpoint:
    path: /ux/common/trap/configuration/msg_options
    method: GET
- name: options
  endpoint:
    path: /ux/common/trap/configuration/options
    method: GET
- name: multi_delete
  endpoint:
    path: /ux/common/trap/configuration/multidelete
    method: POST
- name: containers
  endpoint:
    path: /ux/ipam/ipam/
    method: GET
    data_selector: ANY_ADDITIONAL_PROPERTY
    params:
      items_per_page: integer
      page: integer
- name: create_container
  endpoint:
    path: /ux/ipam/ipam/
    method: POST
    data_selector: ANY_ADDITIONAL_PROPERTY
    params: {}
- name: container
  endpoint:
    path: /ux/ipam/ipam/{id}/
    method: GET
    data_selector: response
    params: {}
- name: container_edit
  endpoint:
    path: /ux/ipam/ipam/{id}/
    method: PUT
    data_selector: response
    params: {}
- name: trap_configuration
  endpoint:
    path: /ux/common/trap/configuration/
    method: GET
    data_selector: '[]'
    params:
      items_per_page: '1'
      page: '1'
- name: create_trap_configuration
  endpoint:
    path: /ux/common/trap/configuration/
    method: POST
    data_selector: application/json
- name: get_trap_configuration
  endpoint:
    path: /ux/common/trap/configuration/{id}/
    method: GET
    data_selector: '{}'
- name: edit_trap_configuration
  endpoint:
    path: /ux/common/trap/configuration/{id}/
    method: PUT
    data_selector: application/json
- name: delete_trap_configuration
  endpoint:
    path: /ux/common/trap/configuration/{id}/
    method: DELETE
- name: get_msg_options
  endpoint:
    path: /ux/common/trap/configuration/msg_options/
    method: GET
- name: multi_delete_trap_configuration
  endpoint:
    path: /ux/common/trap/configuration/multidelete/
    method: POST
- name: get_trap_msgs
  endpoint:
    path: /ux/common/trap/configuration/trap_msgs/
    method: GET
    params:
      items_per_page: integer
      page: integer
- name: delete_container
  endpoint:
    path: /ux/ipam/ipam/{id}/
    method: DELETE
    data_selector: No content
- name: agent_list
  endpoint:
    path: /ux/ipam/ipam/agent_list/
    method: GET
    data_selector: records
- name: check_inventory_scan
  endpoint:
    path: /ux/ipam/ipam/check_inventory_scan/
    method: POST
    data_selector: records
- name: container_entities
  endpoint:
    path: /ux/ipam/ipam/container-entities/
    method: GET
    data_selector: records
- name: dependency_status
  endpoint:
    path: /ux/ipam/ipam/dependency-status/
    method: GET
    data_selector: records
- name: do_availability_scan
  endpoint:
    path: /ux/ipam/ipam/do_availability_scan/
    method: POST
    data_selector: records
- name: do_inventory_scan
  endpoint:
    path: /ux/ipam/ipam/do_inventory_scan/
    method: POST
    data_selector: records
- name: user_profile
  endpoint:
    path: /ux/common/user/profile/
    method: GET
    data_selector: records
    params:
      items_per_page: '1'
      page: '1'
- name: get_subnet_name
  endpoint:
    path: /get-subnet-name/
    method: GET
    data_selector: records
- name: get_audit_options
  endpoint:
    path: /get_audit_options/
    method: GET
    data_selector: records
- name: get_container_options
  endpoint:
    path: /get_container_options/
    method: GET
    data_selector: records
- name: get_ip_addresses
  endpoint:
    path: /get_ip_addresses/
    method: GET
    data_selector: records
- name: group_summary
  endpoint:
    path: /group-summary/
    method: GET
    data_selector: records
- name: group_summary_widget_options
  endpoint:
    path: /group-summary-widget-options/
    method: GET
    data_selector: records
- name: ip_container_details
  endpoint:
    path: /ip-container-details/
    method: GET
    data_selector: records
- name: ip_details_grid_view
  endpoint:
    path: /ip-details-grid-view/
    method: GET
    data_selector: records
- name: create_user
  endpoint:
    path: /profile/
    method: POST
    data_selector: response
    params: {}
- name: get_user_profile
  endpoint:
    path: /profile/{id}/
    method: GET
    data_selector: response
    params: {}
- name: edit_user
  endpoint:
    path: /profile/{id}/
    method: PUT
    data_selector: response
    params: {}
- name: ip_reservation
  endpoint:
    path: /ip-reservation/
    method: GET
    data_selector: records
- name: ip_reservation_config
  endpoint:
    path: /ip-reservation-config/
    method: GET
    data_selector: records
- name: log_grok_pattern_configuration
  endpoint:
    path: /ux/log_grok_pattern/log_grok_pattern_configuration/
    method: GET
    data_selector: No content
    params: {}
- name: log_grok_pattern_configuration_post
  endpoint:
    path: /ux/log_grok_pattern/log_grok_pattern_configuration/
    method: POST
    data_selector: No content
    params: {}
- name: delete_user
  endpoint:
    path: /ux/common/user/profile/{id}/
    method: DELETE
    data_selector: No content
    params: {}
- name: active_users
  endpoint:
    path: /ux/common/user/profile/active_users/
    method: POST
    data_selector: application/json
    params: {}
- name: activeuser_list
  endpoint:
    path: /ux/common/user/profile/activeuser_list/
    method: GET
    data_selector: application/json
    params: {}
- name: download_csv
  endpoint:
    path: /ux/common/user/profile/download_csv/
    method: GET
    data_selector: application/json
    params: {}
- name: get_my_profile
  endpoint:
    path: /ux/common/user/profile/getmyprofile/
    method: GET
    data_selector: application/json
    params: {}
- name: logout
  endpoint:
    path: /ux/common/user/profile/logout/
    method: POST
    data_selector: application/json
    params: {}
- name: myprofile
  endpoint:
    path: /ux/common/user/profile/myprofile/
    method: POST
    data_selector: application/json
    params: {}
- name: options
  endpoint:
    path: /ux/common/user/profile/options/
    method: GET
    data_selector: application/json
    params: {}
- name: preference
  endpoint:
    path: /ux/common/user/profile/preference/
    method: POST
    data_selector: application/json
    params: {}
- name: upload_csv
  endpoint:
    path: /ux/common/user/profile/upload_csv/
    method: POST
    data_selector: application/json
    params: {}
- name: user_invite
  endpoint:
    path: /ux/common/user/profile/user_invite/
    method: POST
    data_selector: application/json
    params: {}
- name: validate_csv
  endpoint:
    path: /ux/common/user/profile/validate_csv/
    method: POST
    data_selector: application/json
    params: {}
- name: get_grok_pattern_list
  endpoint:
    path: /get_grok_pattern_list/
    method: GET
    data_selector: No content
    params: {}
- name: log_grok_pattern_configuration
  endpoint:
    path: /log_grok_pattern_configuration/{id}/
    method: GET
    data_selector: No content
    params: {}
- name: log_grok_pattern_configuration_update
  endpoint:
    path: /log_grok_pattern_configuration/{id}/
    method: PUT
    data_selector: No content
    params: {}
- name: log_grok_pattern_configuration_delete
  endpoint:
    path: /log_grok_pattern_configuration/{id}/
    method: DELETE
    data_selector: No content
    params: {}
- name: log_pipeline_configuration
  endpoint:
    path: /ux/log_pipeline/log_pipeline_configuration/
    method: GET
    data_selector: No content
    params: {}
- name: vendor
  endpoint:
    path: /ux/common/vendor/vendor/
    method: GET
    data_selector: documents
- name: vendor_create
  endpoint:
    path: /ux/common/vendor/vendor/
    method: POST
    data_selector: documents
- name: vendor
  endpoint:
    path: /ux/common/vendor/vendor/{id}/
    method: GET
    data_selector: records
- name: vendor_options
  endpoint:
    path: /ux/common/vendor/vendor/options/
    method: GET
    data_selector: records
- name: log_pipeline_configuration
  endpoint:
    path: /ux/log_pipeline/log_pipeline_configuration/{id}/
    method: GET
- name: upload_pipeline
  endpoint:
    path: /ux/log_pipeline/log_pipeline_configuration/upload_pipeline/{id}/
    method: GET
- name: grok_response
  endpoint:
    path: /ux/log_pipeline/log_pipeline_configuration/grok_response/
    method: GET
- name: grok_pattern
  endpoint:
    path: /ux/log_pipeline/log_pipeline_configuration/grok_pattern/
    method: GET
- name: get_options
  endpoint:
    path: /ux/log_pipeline/log_pipeline_configuration/get_options/
    method: GET
- name: get_pipeline_list
  endpoint:
    path: /ux/log_pipeline/log_pipeline_configuration/get_pipeline_list/
    method: GET
- name: get_logstash_health
  endpoint:
    path: /ux/log_pipeline/log_pipeline_configuration/get_logstash_health/
    method: GET
- name: get_asset_filter_data
  endpoint:
    path: /ux/log_pipeline/log_pipeline_configuration/get_asset_filter_data/
    method: GET
- name: get_asset_Preview_data
  endpoint:
    path: /ux/log_pipeline/log_pipeline_configuration/get_asset_Preview_data/
    method: GET
- name: association_events
  endpoint:
    path: /ux/ims/association_events/association_events/
    method: GET
    data_selector: null
    params: {}
- name: association_event_details
  endpoint:
    path: /ux/ims/association_events/association_events/associated-event-details/
    method: GET
    data_selector: null
    params: {}
- name: association_versions
  endpoint:
    path: /ux/ims/association_events/association_events/association-versions/
    method: GET
    data_selector: null
    params: {}
- name: save_topology
  endpoint:
    path: /ux/ims/association_events/association_events/save-topology/
    method: POST
    data_selector: null
    params: {}
- name: validate_topology
  endpoint:
    path: /ux/ims/association_events/association_events/validate-topology/
    method: POST
    data_selector: null
    params: {}
- name: device_template
  endpoint:
    path: /ux/ims/device-template
    method: GET
    data_selector: records
- name: device_template
  endpoint:
    path: /ux/ims/device-template/
    method: GET
    data_selector: object[]
    params:
      items_per_page: '1'
      page: '1'
- name: device_template_details
  endpoint:
    path: /ux/ims/device-template/{id}/
    method: GET
    data_selector: object
- name: log_integration
  endpoint:
    path: /ux/logmanagement/log_integration/
    method: GET
    data_selector: No content
    params: {}
- name: log_integration_post
  endpoint:
    path: /ux/logmanagement/log_integration/
    method: POST
    data_selector: No content
    params: {}
- name: log_integration_id
  endpoint:
    path: /ux/logmanagement/log_integration/{id}/
    method: GET
    data_selector: No content
    params: {}
- name: log_integration_id_put
  endpoint:
    path: /ux/logmanagement/log_integration/{id}/
    method: PUT
    data_selector: No content
    params: {}
- name: log_integration_id_delete
  endpoint:
    path: /ux/logmanagement/log_integration/{id}/
    method: DELETE
    data_selector: No content
    params: {}
- name: log_integration_url
  endpoint:
    path: /ux/logmanagement/log_integration/_url/
    method: GET
    data_selector: No content
    params: {}
- name: log_integration_cmdb_filter
  endpoint:
    path: /ux/logmanagement/log_integration/cmdb_filter/
    method: POST
    data_selector: No content
    params: {}
- name: log_integration_export_data
  endpoint:
    path: /ux/logmanagement/log_integration/export_data/
    method: POST
    data_selector: No content
    params: {}
- name: log_integration_get_data_view
  endpoint:
    path: /ux/logmanagement/log_integration/get_data_view/
    method: GET
    data_selector: No content
    params: {}
- name: log_integration_get_export_configs
  endpoint:
    path: /ux/logmanagement/log_integration/get_export_configs/
    method: GET
    data_selector: No content
    params: {}
- name: log_integration_get_log_columns
  endpoint:
    path: /ux/logmanagement/log_integration/get_log_columns/
    method: GET
    data_selector: No content
    params: {}
- name: log_integration_get_log_columns_for_pipeline
  endpoint:
    path: /ux/logmanagement/log_integration/get_log_columns_for_pipeline/
    method: GET
    data_selector: No content
    params: {}
- name: log_integration_get_log_filter_suggestions
  endpoint:
    path: /ux/logmanagement/log_integration/get_log_filter_suggestions/
    method: GET
    data_selector: No content
    params: {}
- name: log_integration_get_log_filter_suggestions_for_pipeline
  endpoint:
    path: /ux/logmanagement/log_integration/get_log_filter_suggestions_for_pipeline/
    method: GET
    data_selector: No content
    params: {}
- name: log_search
  endpoint:
    path: /ux/logmanagement/log_search/log_search/
    method: GET
    data_selector: records
- name: log_search_by_id
  endpoint:
    path: /ux/logmanagement/log_search/log_search/{id}/
    method: GET
    data_selector: records
- name: device_template_delete
  endpoint:
    path: /ux/ims/device-template/{id}/
    method: DELETE
    data_selector: No content
    params: {}
- name: device_template_create
  endpoint:
    path: /ux/ims/device-template/create-templates/
    method: POST
    data_selector: Responseobject
    params: {}
- name: device_template_csv_cols
  endpoint:
    path: /ux/ims/device-template/csv_cols/
    method: POST
    data_selector: Responseobject
    params: {}
- name: device_template_download_csv
  endpoint:
    path: /ux/ims/device-template/download_csv/
    method: GET
    data_selector: Responseobject
    params: {}
- name: device_template_multidelete
  endpoint:
    path: /ux/ims/device-template/multidelete/
    method: POST
    data_selector: Responseobject
    params: {}
- name: device_template_options
  endpoint:
    path: /ux/ims/device-template/options/
    method: GET
    data_selector: Responseobject
    params: {}
- name: device_template_res_config_options
  endpoint:
    path: /ux/ims/device-template/res-config-options/
    method: GET
    data_selector: Responseobject
    params: {}
- name: logs
  endpoint:
    path: /log_search/logs/
    method: POST
    data_selector: No content
    params: {}
- name: cli_jobs
  endpoint:
    path: /ux/nccm/cli_jobs
    method: GET
- name: cli_jobs_options
  endpoint:
    path: /ux/nccm/cli_jobs/options
    method: GET
- name: cli_jobs_tail_audits
  endpoint:
    path: /ux/nccm/cli_jobs/tail-audits
    method: GET
- name: res_config_options
  endpoint:
    path: /res-config-options/
    method: GET
    data_selector: response
    params: {}
- name: sys_object_resync
  endpoint:
    path: /sys-object-resync/
    method: POST
    data_selector: response
    params: {}
- name: upload_csv
  endpoint:
    path: /upload-csv/
    method: POST
    data_selector: response
    params: {}
- name: verify_oid_exists
  endpoint:
    path: /verify-oid-exists/
    method: GET
    data_selector: response
    params: {}
- name: cli_jobs
  endpoint:
    path: /ux/nccm/cli_jobs/
    method: GET
    data_selector: object[]
    params:
      items_per_page: 1
      page: 1
- name: cli_job_details
  endpoint:
    path: /ux/nccm/cli_jobs/{id}/
    method: GET
    data_selector: object
- name: discovery_configuration
  endpoint:
    path: /ux/ims/discovery/profile/
    method: GET
    data_selector: ANY_ADDITIONAL_PROPERTY
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: cli_jobs
  endpoint:
    path: /ux/nccm/cli_jobs/
    method: GET
    data_selector: records
- name: cli_file_remove
  endpoint:
    path: /ux/nccm/cli_jobs/cli-file-remove/
    method: GET
    data_selector: records
- name: cli_session
  endpoint:
    path: /ux/nccm/cli_jobs/cli-session/
    method: GET
    data_selector: records
- name: cli_kill_session
  endpoint:
    path: /ux/nccm/cli_jobs/cli_kill_session/
    method: GET
    data_selector: records
- name: options
  endpoint:
    path: /ux/nccm/cli_jobs/options/
    method: GET
    data_selector: records
- name: tail_audits
  endpoint:
    path: /ux/nccm/cli_jobs/tail-audits/
    method: GET
    data_selector: records
- name: tail_audits
  endpoint:
    path: /ux/nccm/cli_jobs/tail-audits/
    method: GET
    data_selector: records
- name: discovery_configuration_create
  endpoint:
    path: /ux/ims/discovery/profile/
    method: POST
    data_selector: Response
    params: {}
- name: discovery_configuration_get
  endpoint:
    path: /ux/ims/discovery/profile/{id}/
    method: GET
    data_selector: Response
    params: {}
- name: discovery_configuration_edit
  endpoint:
    path: /ux/ims/discovery/profile/{id}/
    method: PUT
    data_selector: Response
    params: {}
- name: discovery_configuration_delete
  endpoint:
    path: /ux/ims/discovery/profile/{id}/
    method: DELETE
    data_selector: No content
    params: {}
- name: discovery_configuration_audit
  endpoint:
    path: /ux/ims/discovery/profile/audit/
    method: GET
    data_selector: Response
    params: {}
- name: discovery_configuration_details
  endpoint:
    path: /ux/ims/discovery/profile/details/
    method: GET
    data_selector: Response
    params: {}
- name: discovery_configuration_rescan
  endpoint:
    path: /ux/ims/discovery/profile/do-rescan/
    method: POST
    data_selector: Response
    params: {}
- name: discovery_configuration_download_csv
  endpoint:
    path: /ux/ims/discovery/profile/download_csv/
    method: GET
    data_selector: Response
    params: {}
- name: configuration_profile
  endpoint:
    path: /ux/nccm/configuration-profile
    method: GET
- name: discovery_options
  endpoint:
    path: /discovery/profile/options/
    method: GET
    data_selector: Responseobject
- name: validate_csv
  endpoint:
    path: /discovery/profile/validate_csv/
    method: POST
    data_selector: Responseobject
- name: iteration_list
  endpoint:
    path: /discovery/profile/iteration-list/
    method: GET
    data_selector: Responseobject
- name: multidelete
  endpoint:
    path: /discovery/profile/multidelete/
    method: POST
    data_selector: Responseobject
- name: Jobs
  endpoint:
    path: /ux/ims/jobs
    method: GET
- name: configuration_profile_list
  endpoint:
    path: /ux/nccm/configuration-profile/
    method: GET
    data_selector: object[]
    params:
      items_per_page: '1'
      page: '1'
- name: configuration_profile_details
  endpoint:
    path: /ux/nccm/configuration-profile/{id}/
    method: GET
    data_selector: object
- name: create_configuration_profile
  endpoint:
    path: /ux/nccm/configuration-profile/
    method: POST
    data_selector: none
- name: edit_configuration_profile
  endpoint:
    path: /ux/nccm/configuration-profile/{id}/
    method: PUT
    data_selector: none
- name: jobs
  endpoint:
    path: /ux/ims/jobs/profile/
    method: GET
    data_selector: response
    params:
      items_per_page: '1'
      page: '1'
- name: job_detail
  endpoint:
    path: /ux/ims/jobs/profile/{id}/
    method: GET
    data_selector: response
- name: delete_configuration_profile
  endpoint:
    path: /configuration-profile/{id}/
    method: DELETE
- name: check_profile_config
  endpoint:
    path: /configuration-profile/check-profile-config/
    method: GET
- name: create_csv
  endpoint:
    path: /configuration-profile/create-csv/
    method: POST
- name: download_csv
  endpoint:
    path: /configuration-profile/download_csv/
    method: GET
- name: multidelete_configuration_profiles
  endpoint:
    path: /configuration-profile/multidelete/
    method: POST
- name: mib_explorer
  endpoint:
    path: /ux/ims/mib-explorer/
    method: GET
    data_selector: records
    params:
      items_per_page: integer
      page: integer
- name: configuration_profile
  endpoint:
    path: /ux/nccm/configuration-profile/multidelete/
    method: POST
    data_selector: id
    params: {}
- name: options
  endpoint:
    path: /ux/nccm/configuration-profile/options/
    method: GET
    data_selector: Responseobject
- name: upload_csv
  endpoint:
    path: /ux/nccm/configuration-profile/upload-csv/
    method: POST
    data_selector: Responseobject
- name: mib_explorer
  endpoint:
    path: /ux/ims/mib-explorer/
    method: POST
    data_selector: No content
    params: {}
- name: mib_explorer_by_id
  endpoint:
    path: /ux/ims/mib-explorer/{id}/
    method: GET
    data_selector: Response object
    params: {}
- name: mib_explorer_update
  endpoint:
    path: /ux/ims/mib-explorer/{id}/
    method: PUT
    data_selector: Response object
    params: {}
- name: mib_explorer_delete
  endpoint:
    path: /ux/ims/mib-explorer/{id}/
    method: DELETE
    data_selector: No content
    params: {}
- name: mib_explorer_multidelete
  endpoint:
    path: /ux/ims/mib-explorer/multidelete/
    method: POST
    data_selector: Response object
    params: {}
- name: mib_explorer_options
  endpoint:
    path: /ux/ims/mib-explorer/options/
    method: GET
    data_selector: Response object
    params: {}
- name: configuration_policies
  endpoint:
    path: /ux/nccm/configuration_policies
    method: GET
- name: configuration_policies
  endpoint:
    path: /ux/nccm/configuration_policies/
    method: GET
    data_selector: object[]
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: seasonal_events
  endpoint:
    path: /ux/ims/seasonal_events/seasonal_events/
    method: GET
    data_selector: No content
- name: seasonal_events_create
  endpoint:
    path: /ux/ims/seasonal_events/seasonal_events/
    method: POST
    data_selector: No content
- name: seasonal_events_get
  endpoint:
    path: /ux/ims/seasonal_events/seasonal_events/{id}/
    method: GET
    data_selector: No content
- name: seasonal_events_update
  endpoint:
    path: /ux/ims/seasonal_events/seasonal_events/{id}/
    method: PUT
    data_selector: No content
- name: seasonal_events_delete
  endpoint:
    path: /ux/ims/seasonal_events/seasonal_events/{id}/
    method: DELETE
    data_selector: No content
- name: delete_configuration_policy
  endpoint:
    path: /configuration_policies/{id}/
    method: DELETE
- name: bulk_operation
  endpoint:
    path: /configuration_policies/bulk-opration/
    method: POST
    data_selector: application/json
- name: multi_delete
  endpoint:
    path: /configuration_policies/multi-delete/
    method: POST
    data_selector: application/json
- name: options
  endpoint:
    path: /configuration_policies/options/
    method: GET
- name: ipam
  endpoint:
    path: /ux/ipam/ipam
    method: GET
- name: agent_list
  endpoint:
    path: /ux/ipam/ipam/agent_list
    method: GET
- name: container_entities
  endpoint:
    path: /ux/ipam/ipam/container-entities
    method: GET
- name: configuration_rules
  endpoint:
    path: /ux/nccm/configuration_rules
    method: GET
- name: containers
  endpoint:
    path: /ux/ipam/ipam/
    method: GET
    data_selector: ANY_ADDITIONAL_PROPERTY
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: bot_cmdb_configurations
  endpoint:
    path: /ux/ipam/ipam/
    method: POST
    data_selector: ANY_ADDITIONAL_PROPERTY
- name: configuration_rules
  endpoint:
    path: /ux/nccm/configuration_rules/
    method: GET
    data_selector: '[]'
    params:
      items_per_page: '1'
      page: '1'
- name: container
  endpoint:
    path: /ux/ipam/ipam/{id}/
    method: GET
    data_selector: id
    params: {}
- name: container_update
  endpoint:
    path: /ux/ipam/ipam/{id}/
    method: PUT
    data_selector: id
    params: {}
- name: configuration_rule
  endpoint:
    path: /configuration_rules/{id}/
    method: DELETE
    data_selector: No content
- name: agent_list
  endpoint:
    path: /ipam/agent_list/
    method: GET
    data_selector: records
- name: container_entities
  endpoint:
    path: /ipam/container-entities/
    method: GET
    data_selector: records
- name: dependency_status
  endpoint:
    path: /ipam/dependency-status/
    method: GET
    data_selector: records
- name: import_txt
  endpoint:
    path: /ux/nccm/configuration_rules/import-txt/
    method: POST
    data_selector: Responseobject
- name: is_disabled
  endpoint:
    path: /ux/nccm/configuration_rules/is_disabled/
    method: POST
    data_selector: Responseobject
- name: is_enabled
  endpoint:
    path: /ux/nccm/configuration_rules/is_enabled/
    method: POST
    data_selector: Responseobject
- name: is_enabled
  endpoint:
    path: /configuration_rules/is_enabled/
    method: POST
    data_selector: response
    params: {}
- name: multidelete
  endpoint:
    path: /configuration_rules/multidelete/
    method: POST
    data_selector: response
    params: {}
- name: options
  endpoint:
    path: /configuration_rules/options/
    method: GET
    data_selector: response
    params: {}
- name: get_subnet_name
  endpoint:
    path: /get-subnet-name/
    method: GET
    data_selector: records
- name: get_audit_options
  endpoint:
    path: /get_audit_options/
    method: GET
    data_selector: records
- name: get_container_options
  endpoint:
    path: /get_container_options/
    method: GET
    data_selector: records
- name: get_ip_addresses
  endpoint:
    path: /get_ip_addresses/
    method: GET
    data_selector: records
- name: group_summary
  endpoint:
    path: /group-summary/
    method: GET
    data_selector: records
- name: group_summary_widget_options
  endpoint:
    path: /group-summary-widget-options/
    method: GET
    data_selector: records
- name: ip_container_details
  endpoint:
    path: /ip-container-details/
    method: GET
    data_selector: records
- name: ip_details_grid_view
  endpoint:
    path: /ip-details-grid-view/
    method: GET
    data_selector: records
- name: configuration_rule
  endpoint:
    path: /ux/nccm/configuration_rules/validate-json/
    method: POST
    data_selector: id
    params: {}
- name: ip_reservation
  endpoint:
    path: /ip-reservation/
    method: GET
    data_selector: records
- name: ip_reservation_config
  endpoint:
    path: /ip-reservation-config/
    method: GET
    data_selector: records
- name: validate_json
  endpoint:
    path: /configuration_rules/validate-json/
    method: POST
    data_selector: response
    params: {}
- name: configuration_search
  endpoint:
    path: /ux/nccm/configuration_search/
    method: GET
    data_selector: ''
    params: {}
- name: configuration_search_result
  endpoint:
    path: /ux/nccm/configuration_search/configuration-search-result/
    method: GET
    data_selector: ''
    params:
      items_per_page: '1'
      page: '1'
- name: configuration_search_filter
  endpoint:
    path: /ux/nccm/configuration_search/filter/
    method: GET
    data_selector: ''
    params: {}
- name: configuration_search_options
  endpoint:
    path: /ux/nccm/configuration_search/options/
    method: GET
    data_selector: ''
    params: {}
- name: log_grok_pattern_configuration
  endpoint:
    path: /ux/log_grok_pattern/log_grok_pattern_configuration/
    method: GET
    data_selector: No content
    params: {}
- name: log_grok_pattern_configuration_post
  endpoint:
    path: /ux/log_grok_pattern/log_grok_pattern_configuration/
    method: POST
    data_selector: No content
    params: {}
- name: configuration_template
  endpoint:
    path: /ux/nccm/configuration_template
    method: GET
- name: get_grok_pattern
  endpoint:
    path: /get_grok_pattern_list/
    method: GET
    data_selector: No content
- name: put_grok_pattern
  endpoint:
    path: /{id}/
    method: PUT
    data_selector: No content
- name: delete_grok_pattern
  endpoint:
    path: /{id}/
    method: DELETE
    data_selector: No content
- name: get_grok_pattern_by_id
  endpoint:
    path: /{id}/
    method: GET
    data_selector: No content
- name: log_pipeline_configuration
  endpoint:
    path: /ux/log_pipeline/log_pipeline_configuration/
    method: GET
    data_selector: No content
- name: configuration_template
  endpoint:
    path: configuration_template/
    method: GET
    data_selector: documents
    params:
      items_per_page: 1
      page: 1
- name: configuration_template_create_csv
  endpoint:
    path: configuration_template/create-csv/
    method: POST
    data_selector: documents
- name: configuration_template_by_id
  endpoint:
    path: configuration_template/{id}/
    method: GET
    data_selector: documents
- name: create_csv
  endpoint:
    path: /ux/nccm/configuration_template/create-csv/
    method: POST
    data_selector: null
    params: {}
- name: csv_cols
  endpoint:
    path: /ux/nccm/configuration_template/csv_cols/
    method: POST
    data_selector: null
    params: {}
- name: download_csv
  endpoint:
    path: /ux/nccm/configuration_template/download_csv/
    method: GET
    data_selector: null
    params: {}
- name: download_xls
  endpoint:
    path: /ux/nccm/configuration_template/download_xls/
    method: GET
    data_selector: null
    params: {}
- name: file_details
  endpoint:
    path: /ux/nccm/configuration_template/file_details/
    method: GET
    data_selector: null
    params: {}
- name: get_pipeline
  endpoint:
    path: /{id}/
    method: GET
    data_selector: No content
    params: {}
- name: put_pipeline
  endpoint:
    path: /{id}/
    method: PUT
    data_selector: No content
    params: {}
- name: delete_pipeline
  endpoint:
    path: /{id}/
    method: DELETE
    data_selector: No content
    params: {}
- name: get_asset_preview_data
  endpoint:
    path: /get_asset_Preview_data/
    method: GET
    data_selector: No content
    params: {}
- name: get_asset_filter_data
  endpoint:
    path: /get_asset_filter_data/
    method: GET
    data_selector: No content
    params: {}
- name: get_logstash_health
  endpoint:
    path: /get_logstash_health/
    method: GET
    data_selector: No content
    params: {}
- name: get_options
  endpoint:
    path: /get_options/
    method: GET
    data_selector: No content
    params: {}
- name: get_pipeline_list
  endpoint:
    path: /get_pipeline_list/
    method: GET
    data_selector: No content
    params: {}
- name: grok_pattern
  endpoint:
    path: /grok_pattern/
    method: GET
    data_selector: No content
    params: {}
- name: grok_response
  endpoint:
    path: /grok_response/
    method: GET
    data_selector: No content
    params: {}
- name: upload_pipeline
  endpoint:
    path: /upload_pipeline/{id}/
    method: GET
    data_selector: No content
    params: {}
- name: is_disabled
  endpoint:
    path: /is_disabled/
    method: POST
    data_selector: template_id
    params: {}
- name: is_enabled
  endpoint:
    path: /is_enabled/
    method: POST
    data_selector: template_id
    params: {}
- name: multidelete
  endpoint:
    path: /multidelete/
    method: POST
    data_selector: template_id
    params: {}
- name: options
  endpoint:
    path: /configuration_template/options/
    method: GET
    data_selector: id
    params: {}
- name: production_ready
  endpoint:
    path: /configuration_template/production_ready/
    method: POST
    data_selector: id
    params: {}
- name: toggle_template_quickadd
  endpoint:
    path: /configuration_template/toggle-template-quickadd/
    method: POST
    data_selector: id
    params: {}
- name: upload_csv
  endpoint:
    path: /configuration_template/upload-csv/
    method: POST
    data_selector: id
    params: {}
- name: configuration_upload
  endpoint:
    path: /upload-csv/
    method: POST
    data_selector: id
    params: {}
- name: log_integration
  endpoint:
    path: /ux/logmanagement/log_integration/
    method: GET
    data_selector: No content
- name: log_integration_post
  endpoint:
    path: /ux/logmanagement/log_integration/
    method: POST
    data_selector: No content
- name: log_integration_id
  endpoint:
    path: /ux/logmanagement/log_integration/{id}/
    method: GET
    data_selector: No content
- name: log_integration_id_put
  endpoint:
    path: /ux/logmanagement/log_integration/{id}/
    method: PUT
    data_selector: No content
- name: log_integration_id_delete
  endpoint:
    path: /ux/logmanagement/log_integration/{id}/
    method: DELETE
    data_selector: No content
- name: log_integration_url
  endpoint:
    path: /ux/logmanagement/log_integration/_url/
    method: GET
    data_selector: No content
- name: log_integration_cmdb_filter
  endpoint:
    path: /ux/logmanagement/log_integration/cmdb_filter/
    method: POST
    data_selector: No content
- name: log_integration_export_data
  endpoint:
    path: /ux/logmanagement/log_integration/export_data/
    method: POST
    data_selector: No content
- name: log_integration_get_data_view
  endpoint:
    path: /ux/logmanagement/log_integration/get_data_view/
    method: GET
    data_selector: No content
- name: log_integration_get_export_configs
  endpoint:
    path: /ux/logmanagement/log_integration/get_export_configs/
    method: GET
    data_selector: No content
- name: log_integration_get_log_columns
  endpoint:
    path: /ux/logmanagement/log_integration/get_log_columns/
    method: GET
    data_selector: No content
- name: log_integration_get_log_columns_for_pipeline
  endpoint:
    path: /ux/logmanagement/log_integration/get_log_columns_for_pipeline/
    method: GET
    data_selector: No content
- name: log_integration_get_log_filter_suggestions
  endpoint:
    path: /ux/logmanagement/log_integration/get_log_filter_suggestions/
    method: GET
    data_selector: No content
- name: log_integration_get_log_filter_suggestions_for_pipeline
  endpoint:
    path: /ux/logmanagement/log_integration/get_log_filter_suggestions_for_pipeline/
    method: GET
    data_selector: No content
- name: configuration_trigger
  endpoint:
    path: /ux/nccm/configuration_trigger
    method: GET
- name: configuration_trigger
  endpoint:
    path: /ux/nccm/configuration_trigger/
    method: GET
    data_selector: object[]
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: configuration_trigger_post
  endpoint:
    path: /ux/nccm/configuration_trigger/
    method: POST
    data_selector: object
    params: {}
- name: log_search
  endpoint:
    path: /ux/logmanagement/log_search/log_search/
    method: GET
    data_selector: ''
    params: {}
- name: log_search_post
  endpoint:
    path: /ux/logmanagement/log_search/log_search/
    method: POST
    data_selector: ''
    params: {}
- name: log_search_id
  endpoint:
    path: /ux/logmanagement/log_search/log_search/{id}/
    method: GET
    data_selector: ''
    params: {}
- name: log_search_id_put
  endpoint:
    path: /ux/logmanagement/log_search/log_search/{id}/
    method: PUT
    data_selector: ''
    params: {}
- name: log_search_id_delete
  endpoint:
    path: /ux/logmanagement/log_search/log_search/{id}/
    method: DELETE
    data_selector: ''
    params: {}
- name: configuration_trigger
  endpoint:
    path: /ux/nccm/configuration_trigger/{id}/
    method: GET
    data_selector: response
    params: {}
- name: add_trigger
  endpoint:
    path: /ux/nccm/configuration_trigger/add_trigger/
    method: POST
    data_selector: response
    params: {}
- name: multi_delete
  endpoint:
    path: /ux/nccm/configuration_trigger/multi-delete/
    method: POST
    data_selector: response
    params: {}
- name: download_csv
  endpoint:
    path: /ux/nccm/configuration_trigger/download_csv/
    method: GET
    data_selector: response
    params: {}
- name: logs
  endpoint:
    path: /ux/logmanagement/log_search/log_search/logs/
    method: POST
    data_selector: No content
    params: {}
- name: review
  endpoint:
    path: /ux/nccm/configuration_trigger/review/
    method: POST
    data_selector: response
    params: {}
- name: save_csv_data
  endpoint:
    path: /ux/nccm/configuration_trigger/save_csv_data/
    method: POST
    data_selector: response
    params: {}
- name: saved_imported
  endpoint:
    path: /ux/nccm/configuration_trigger/saved_imported/
    method: POST
    data_selector: response
    params: {}
- name: validate_csv
  endpoint:
    path: /ux/nccm/configuration_trigger/validate_csv/
    method: POST
    data_selector: response
    params: {}
- name: cli_jobs
  endpoint:
    path: /ux/nccm/cli_jobs/
    method: GET
- name: cli_session
  endpoint:
    path: /ux/nccm/cli_jobs/cli-session/
    method: GET
- name: cli_kill_session
  endpoint:
    path: /ux/nccm/cli_jobs/cli_kill_session/
    method: GET
- name: cli_file_remove
  endpoint:
    path: /ux/nccm/cli_jobs/cli-file-remove/
    method: GET
- name: tail_audits
  endpoint:
    path: /ux/nccm/cli_jobs/tail-audits/
    method: GET
- name: jobs_account_audit
  endpoint:
    path: /ux/nccm/jobs-account-audit
    method: GET
- name: cli_jobs
  endpoint:
    path: /ux/nccm/cli_jobs/
    method: GET
    data_selector: object[]
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: cli_job_detail
  endpoint:
    path: /ux/nccm/cli_jobs/{id}/
    method: GET
    data_selector: object
- name: jobs_account_audit
  endpoint:
    path: /ux/nccm/jobs-account-audit/
    method: GET
    data_selector: object[]
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: jobs_account_audit_options
  endpoint:
    path: /ux/nccm/jobs-account-audit/options/
    method: GET
    data_selector: object
- name: manage_vulnerabilities
  endpoint:
    path: /ux/nccm/manage_vulnerabilities
    method: GET
- name: cli_job
  endpoint:
    path: /cli_jobs/{id}/
    method: DELETE
- name: cli_file_remove
  endpoint:
    path: /cli_jobs/cli-file-remove/
    method: GET
- name: cli_session
  endpoint:
    path: /cli_jobs/cli-session/
    method: GET
- name: cli_kill_session
  endpoint:
    path: /cli_jobs/cli_kill_session/
    method: GET
- name: options
  endpoint:
    path: /cli_jobs/options/
    method: GET
- name: tail_audits
  endpoint:
    path: /cli_jobs/tail-audits/
    method: GET
- name: vulnerabilities
  endpoint:
    path: /ux/nccm/manage_vulnerabilities/
    method: GET
    data_selector: null
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: vulnerabilities_by_id
  endpoint:
    path: /ux/nccm/manage_vulnerabilities/{id}/
    method: GET
    data_selector: null
    params: {}
- name: tail_audits
  endpoint:
    path: /ux/nccm/cli_jobs/tail-audits/
    method: GET
    data_selector: records
    params: {}
- name: configuration_profile
  endpoint:
    path: /ux/nccm/configuration-profile
    method: GET
- name: os_image
  endpoint:
    path: /ux/nccm/os-image/os-images-objs/
    method: GET
- name: os_schedule
  endpoint:
    path: /ux/nccm/os-image/os-schedule-details/
    method: GET
- name: get_tags
  endpoint:
    path: /ux/nccm/os-image/
    method: GET
    data_selector: object[]
    params:
      items_per_page: '1'
      page: '1'
- name: create_configuration_profile
  endpoint:
    path: /ux/nccm/os-image/
    method: POST
    data_selector: object
    params: {}
- name: get_global_param
  endpoint:
    path: /ux/nccm/os-image/{id}/
    method: GET
    data_selector: object
    params: {}
- name: edit_tag
  endpoint:
    path: /ux/nccm/os-image/{id}/
    method: PUT
    data_selector: object
    params: {}
- name: configuration_profile
  endpoint:
    path: /ux/nccm/configuration-profile/
    method: GET
    data_selector: object[]
    params:
      items_per_page: '1'
      page: '1'
- name: configuration_profile_details
  endpoint:
    path: /ux/nccm/configuration-profile/{id}/
    method: GET
    data_selector: object
- name: create_configuration_profile
  endpoint:
    path: /ux/nccm/configuration-profile/
    method: POST
    data_selector: no_content
- name: edit_configuration_profile
  endpoint:
    path: /ux/nccm/configuration-profile/{id}/
    method: PUT
    data_selector: object
- name: delete_os_image
  endpoint:
    path: /ux/nccm/os-image/{id}/
    method: DELETE
- name: file_upload_status
  endpoint:
    path: /ux/nccm/os-image/file-upload-status/
    method: POST
    data_selector: response
- name: get_allowed_file_types
  endpoint:
    path: /ux/nccm/os-image/get-allowed-file-types/
    method: GET
    data_selector: response
- name: multidelete_os_image
  endpoint:
    path: /ux/nccm/os-image/multidelete/
    method: POST
    data_selector: response
- name: delete_configuration_profile
  endpoint:
    path: /configuration-profile/{id}/
    method: DELETE
    data_selector: No content
- name: check_profile_config
  endpoint:
    path: /configuration-profile/check-profile-config/
    method: GET
    data_selector: application/json
- name: create_csv
  endpoint:
    path: /configuration-profile/create-csv/
    method: POST
    data_selector: application/json
- name: download_csv
  endpoint:
    path: /configuration-profile/download_csv/
    method: GET
    data_selector: application/json
- name: multidelete
  endpoint:
    path: /configuration-profile/multidelete/
    method: POST
    data_selector: application/json
- name: download_options
  endpoint:
    path: /ux/nccm/os-image/options/
    method: GET
    data_selector: records
- name: os_images_objs
  endpoint:
    path: /ux/nccm/os-image/os-images-objs/
    method: GET
    data_selector: records
- name: os_images_status
  endpoint:
    path: /ux/nccm/os-image/os-images-status/
    method: GET
    data_selector: records
- name: os_img_recve
  endpoint:
    path: /ux/nccm/os-image/os-img-recve/
    method: POST
    data_selector: records
- name: os_job_audit
  endpoint:
    path: /ux/nccm/os-image/os-job-audit/
    method: GET
    data_selector: records
- name: os_schedule_delete
  endpoint:
    path: /ux/nccm/os-image/os-schedule-delete/
    method: GET
    data_selector: records
- name: configuration_profile
  endpoint:
    path: /ux/nccm/configuration-profile/multidelete/
    method: POST
    data_selector: id
    params: {}
- name: os_schedule_detail
  endpoint:
    path: /ux/nccm/os-image/os-schedule-detail/
    method: GET
    data_selector: records
- name: os_schedule_details
  endpoint:
    path: /ux/nccm/os-image/os-schedule-details/
    method: GET
    data_selector: records
- name: os_schedule_options
  endpoint:
    path: /ux/nccm/os-image/os-schedule-options/
    method: GET
    data_selector: records
- name: os_schedule_search_options
  endpoint:
    path: /ux/nccm/os-image/os-schedule-search-options/
    method: GET
    data_selector: records
- name: os_schedule_toggle_state
  endpoint:
    path: /ux/nccm/os-image/os-schedule-toggle-state/
    method: GET
    data_selector: records
- name: save_osimage_schedule_info
  endpoint:
    path: /ux/nccm/os-image/save-osimage-schedule-info/
    method: POST
    data_selector: records
- name: os_image_trigger_download
  endpoint:
    path: /os-image/trigger-osdownload/
    method: POST
    data_selector: response
    params: {}
- name: os_schedule_toggle_state
  endpoint:
    path: /os-image/os-schedule-toggle-state/
    method: GET
    data_selector: response
    params: {}
- name: save_osimage_schedule_info
  endpoint:
    path: /os-image/save-osimage-schedule-info/
    method: POST
    data_selector: response
    params: {}
- name: configuration_profile_options
  endpoint:
    path: /ux/nccm/configuration-profile/options/
    method: GET
    data_selector: records
- name: configuration_profile_upload_csv
  endpoint:
    path: /ux/nccm/configuration-profile/upload-csv/
    method: POST
    data_selector: records
- name: policy_rule_group
  endpoint:
    path: /ux/nccm/policy_rule_group
    method: GET
- name: configuration_policies
  endpoint:
    path: /ux/nccm/configuration_policies
    method: GET
- name: configuration_policy_list
  endpoint:
    path: /ux/nccm/configuration_policies/
    method: GET
    data_selector: object[]
    params:
      items_per_page: integer
      page: integer
- name: configuration_policy_details
  endpoint:
    path: /ux/nccm/configuration_policies/{id}/
    method: GET
    data_selector: object
    params: {}
- name: create_configuration_policy
  endpoint:
    path: /ux/nccm/configuration_policies/
    method: POST
    data_selector: none
    params: {}
- name: edit_configuration_policy
  endpoint:
    path: /ux/nccm/configuration_policies/{id}/
    method: PUT
    data_selector: object
    params: {}
- name: configuration_trigger
  endpoint:
    path: /ux/nccm/policy_rule_group/
    method: GET
    data_selector: object[]
    params:
      items_per_page: 1
      page: 1
- name: create_configuration_profile
  endpoint:
    path: /ux/nccm/policy_rule_group/
    method: POST
    data_selector: object
    params: {}
- name: get_configuration_profile
  endpoint:
    path: /ux/nccm/policy_rule_group/{id}/
    method: GET
    data_selector: object
    params: {}
- name: update_configuration_profile
  endpoint:
    path: /ux/nccm/policy_rule_group/{id}/
    method: PUT
    data_selector: object
    params: {}
- name: delete_configuration_policy
  endpoint:
    path: /configuration_policies/{id}/
    method: DELETE
- name: bulk_operation_configuration_policy
  endpoint:
    path: /configuration_policies/bulk-opration/
    method: POST
- name: multi_delete_configuration_policy
  endpoint:
    path: /configuration_policies/multi-delete/
    method: POST
- name: options_configuration_policy
  endpoint:
    path: /configuration_policies/options/
    method: GET
- name: delete_rule_group
  endpoint:
    path: /ux/nccm/policy_rule_group/{id}/
    method: DELETE
    data_selector: ''
    params: {}
- name: bulk_operation
  endpoint:
    path: /ux/nccm/policy_rule_group/bulk-opration/
    method: POST
    data_selector: ''
    params: {}
- name: get_configuration_rules
  endpoint:
    path: /ux/nccm/policy_rule_group/get-configuration-rules/
    method: GET
    data_selector: ''
    params: {}
- name: get_os_from_rule
  endpoint:
    path: /ux/nccm/policy_rule_group/get-os-from-rule/
    method: GET
    data_selector: ''
    params: {}
- name: get_runtime_params
  endpoint:
    path: /ux/nccm/policy_rule_group/get-runtime-params/
    method: POST
    data_selector: ''
    params: {}
- name: get_init_options
  endpoint:
    path: /ux/nccm/policy_rule_group/get_init_options/
    method: GET
    data_selector: ''
    params: {}
- name: configuration_rules
  endpoint:
    path: /ux/nccm/configuration_rules
    method: GET
- name: configuration_rules
  endpoint:
    path: /ux/nccm/configuration_rules/
    method: GET
    data_selector: object[]
    params:
      items_per_page: 1
      page: 1
- name: configuration_rule
  endpoint:
    path: /ux/nccm/configuration_rules/{id}/
    method: GET
    data_selector: object
- name: get_rule_group_by_id
  endpoint:
    path: /policy_rule_group/get_rule_group_by_id/
    method: GET
    data_selector: records
- name: save_associated_rule
  endpoint:
    path: /policy_rule_group/save-associated-rule/
    method: GET
    data_selector: records
- name: status_updation
  endpoint:
    path: /policy_rule_group/status-updation/
    method: POST
    data_selector: records
- name: validate_uploaded_file
  endpoint:
    path: /policy_rule_group/validate-uploaded-file/
    method: POST
    data_selector: records
- name: upload_jobs
  endpoint:
    path: /ux/nccm/uploadjobs/
    method: GET
- name: configuration_rules
  endpoint:
    path: /configuration_rules/{id}/
    method: DELETE
- name: upload_jobs
  endpoint:
    path: /ux/nccm/uploadjobs/
    method: GET
- name: configuration_rule_import
  endpoint:
    path: /ux/nccm/configuration_rules/import-txt/
    method: POST
    data_selector: result
    params: {}
- name: is_disabled
  endpoint:
    path: /ux/nccm/configuration_rules/is_disabled/
    method: POST
    data_selector: result
    params: {}
- name: is_enabled
  endpoint:
    path: /ux/nccm/configuration_rules/is_enabled/
    method: POST
    data_selector: result
    params: {}
- name: upload_jobs
  endpoint:
    path: /ux/nccm/uploadjobs/
    method: GET
    data_selector: object[]
    params:
      items_per_page: '1'
      page: '1'
- name: upload_jobs_post
  endpoint:
    path: /ux/nccm/uploadjobs/
    method: POST
    data_selector: object
    params: {}
- name: is_enabled
  endpoint:
    path: /configuration_rules/is_enabled/
    method: POST
    data_selector: text
    params: {}
- name: multidelete
  endpoint:
    path: /configuration_rules/multidelete/
    method: POST
    data_selector: text
    params: {}
- name: options
  endpoint:
    path: /configuration_rules/options/
    method: GET
    data_selector: text
    params: {}
- name: upload_job
  endpoint:
    path: /uploadjobs/{id}/
    method: GET
    data_selector: response
    params: {}
- name: upload_job
  endpoint:
    path: /uploadjobs/{id}/
    method: PUT
    data_selector: response
    params: {}
- name: upload_job
  endpoint:
    path: /uploadjobs/{id}/
    method: DELETE
    data_selector: response
    params: {}
- name: configuration_rule
  endpoint:
    path: /ux/nccm/configuration_rules/validate-json/
    method: POST
    data_selector: id
    params: {}
- name: bulk_delete_job
  endpoint:
    path: /bulk-delete-ujob/
    method: POST
    data_selector: Response
    params: {}
- name: device_options
  endpoint:
    path: /device-options/
    method: GET
    data_selector: Response
    params: {}
- name: configuration_rule
  endpoint:
    path: /ux/nccm/configuration_rules/validate-json/
    method: POST
    data_selector: id
    params: {}
- name: export_review
  endpoint:
    path: /ux/nccm/uploadjobs/export-review/
    method: POST
    data_selector: ''
    params: {}
- name: format-flowchart-data
  endpoint:
    path: /format-flowchart-data/
    method: POST
    data_selector: response
    params: {}
- name: get-template-id
  endpoint:
    path: /get-template-id/
    method: GET
    data_selector: response
    params: {}
- name: jobs-retry-queue
  endpoint:
    path: /jobs-retry-queue/
    method: GET
    data_selector: response
    params: {}
- name: options
  endpoint:
    path: /options/
    method: GET
    data_selector: response
    params: {}
- name: configuration_search
  endpoint:
    path: /ux/nccm/configuration_search/
    method: GET
    data_selector: No content
    params:
      items_per_page: integer
      page: integer
- name: configuration_search_result
  endpoint:
    path: /ux/nccm/configuration_search/configuration-search-result/
    method: GET
    data_selector: No content
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: configuration_search_filter
  endpoint:
    path: /ux/nccm/configuration_search/filter/
    method: GET
    data_selector: No content
    params: {}
- name: configuration_search_options
  endpoint:
    path: /ux/nccm/configuration_search/options/
    method: GET
    data_selector: No content
    params: {}
- name: quick_job_templates
  endpoint:
    path: quick-job-templates/
    method: GET
    data_selector: response
- name: quick_task_validation
  endpoint:
    path: quick-task-validation/
    method: POST
    data_selector: response
- name: rerun_all_devices
  endpoint:
    path: rerun-all-devices/
    method: GET
    data_selector: response
- name: rerun_job
  endpoint:
    path: rerun-job/
    method: GET
    data_selector: response
- name: configuration_template
  endpoint:
    path: /ux/nccm/configuration_template
    method: GET
- name: edit_upload_job_result_ips
  endpoint:
    path: /ux/nccm/uploadjobs/rerun-result-ip/
    method: GET
- name: review_upload_job_task
  endpoint:
    path: /ux/nccm/uploadjobs/review-task/
    method: POST
- name: runtime_csv_added
  endpoint:
    path: /ux/nccm/uploadjobs/runtime-csv-added/
    method: GET
- name: runtime_fields
  endpoint:
    path: /ux/nccm/uploadjobs/runtime-fields/
    method: GET
- name: configuration_template
  endpoint:
    path: /ux/nccm/configuration_template/
    method: GET
    data_selector: records
    params:
      items_per_page: 1
      page: 1
- name: configuration_template_by_id
  endpoint:
    path: /ux/nccm/configuration_template/{id}/
    method: GET
    data_selector: records
    params: {}
- name: workflow_jobs
  endpoint:
    path: /ux/nccm/workflow_jobs
    method: GET
- name: create_csv
  endpoint:
    path: /ux/nccm/configuration_template/create-csv/
    method: POST
- name: csv_cols
  endpoint:
    path: /ux/nccm/configuration_template/csv_cols/
    method: POST
- name: download_csv
  endpoint:
    path: /ux/nccm/configuration_template/download_csv/
    method: GET
- name: download_xls
  endpoint:
    path: /ux/nccm/configuration_template/download_xls/
    method: GET
- name: file_details
  endpoint:
    path: /ux/nccm/configuration_template/file_details/
    method: GET
- name: workflow_jobs
  endpoint:
    path: /ux/nccm/workflow_jobs/
    method: GET
    data_selector: '[]'
    params:
      items_per_page: integer
      page: integer
- name: is_disabled
  endpoint:
    path: /configuration_template/is_disabled/
    method: POST
- name: is_enabled
  endpoint:
    path: /configuration_template/is_enabled/
    method: POST
- name: multidelete
  endpoint:
    path: /configuration_template/multidelete/
    method: POST
- name: workflow_job
  endpoint:
    path: /workflow_jobs/{id}/
    method: GET
    data_selector: id
- name: execute_workflow_job
  endpoint:
    path: /workflow_jobs/execute-workflow-job/
    method: POST
    data_selector: id
- name: delete_workflow_job
  endpoint:
    path: /workflow_jobs/{id}/
    method: DELETE
- name: configuration_template_options
  endpoint:
    path: /ux/nccm/configuration_template/options/
    method: GET
    data_selector: Responseobject
- name: configuration_template_production_ready
  endpoint:
    path: /ux/nccm/configuration_template/production_ready/
    method: POST
    data_selector: Responseobject
- name: toggle_template_quickadd
  endpoint:
    path: /ux/nccm/configuration_template/toggle-template-quickadd/
    method: POST
    data_selector: Responseobject
- name: upload_csv
  endpoint:
    path: /ux/nccm/configuration_template/upload-csv/
    method: POST
    data_selector: Responseobject
- name: feature_diagnosis
  endpoint:
    path: /ux/nccm/workflow_jobs/feature-diagnosis/
    method: GET
    data_selector: records
- name: feature_diagnosis_opts
  endpoint:
    path: /ux/nccm/workflow_jobs/feature-diagnosis-opts/
    method: GET
    data_selector: records
- name: multi_change
  endpoint:
    path: /ux/nccm/workflow_jobs/multi-change/
    method: POST
    data_selector: records
- name: options
  endpoint:
    path: /ux/nccm/workflow_jobs/options/
    method: GET
    data_selector: records
- name: configuration_upload
  endpoint:
    path: /configuration_template/upload-csv/
    method: POST
    data_selector: id
    params: {}
- name: change
  endpoint:
    path: /ux/sd/change/change
    method: GET
- name: configuration_trigger
  endpoint:
    path: /ux/nccm/configuration_trigger
    method: GET
- name: change
  endpoint:
    path: /ux/sd/change/change/
    method: GET
    data_selector: '[]'
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: create_change
  endpoint:
    path: /ux/sd/change/change/
    method: POST
    data_selector: ''
    params: {}
- name: get_change_by_id
  endpoint:
    path: /ux/sd/change/change/{id}/
    method: GET
    data_selector: ''
    params:
      id: string
- name: configuration_trigger
  endpoint:
    path: /ux/nccm/configuration_trigger/
    method: GET
    data_selector: object[]
    params:
      items_per_page: '1'
      page: '1'
- name: configuration_trigger_post
  endpoint:
    path: /ux/nccm/configuration_trigger/
    method: POST
    data_selector: object
    params: {}
- name: edit_change
  endpoint:
    path: /ux/sd/change/change/{id}/
    method: PUT
    data_selector: response
    params:
      id: string
- name: delete_change
  endpoint:
    path: /ux/sd/change/change/{id}/
    method: DELETE
    data_selector: response
    params:
      id: string
- name: add_attachment
  endpoint:
    path: /ux/sd/change/change/add-attachment/
    method: POST
    data_selector: response
- name: configuration_trigger
  endpoint:
    path: /configuration_trigger/{id}/
    method: GET
    data_selector: records
- name: add_trigger
  endpoint:
    path: /configuration_trigger/add_trigger/
    method: POST
    data_selector: records
- name: download_csv
  endpoint:
    path: /configuration_trigger/download_csv/
    method: GET
    data_selector: records
- name: multi-delete
  endpoint:
    path: /configuration_trigger/multi-delete/
    method: POST
    data_selector: records
- name: review
  endpoint:
    path: /ux/nccm/configuration_trigger/review/
    method: POST
    data_selector: response
    params: {}
- name: save_csv_data
  endpoint:
    path: /ux/nccm/configuration_trigger/save_csv_data/
    method: POST
    data_selector: response
    params: {}
- name: saved_imported
  endpoint:
    path: /ux/nccm/configuration_trigger/saved_imported/
    method: POST
    data_selector: response
    params: {}
- name: validate_csv
  endpoint:
    path: /ux/nccm/configuration_trigger/validate_csv/
    method: POST
    data_selector: response
    params: {}
- name: attachment
  endpoint:
    path: /ux/sd/change/change/attachment/
    method: GET
    data_selector: response
    params: {}
- name: change_data
  endpoint:
    path: /ux/sd/change/change/change-data/{id}/
    method: GET
    data_selector: response
    params: {}
- name: change_impact
  endpoint:
    path: /ux/sd/change/change/change-impact/{id}/
    method: GET
    data_selector: response
    params: {}
- name: change_risk
  endpoint:
    path: /ux/sd/change/change/change-risk/{id}/
    method: GET
    data_selector: response
    params: {}
- name: change_task
  endpoint:
    path: /ux/sd/change/change/change-task/{id}/
    method: GET
    data_selector: response
    params: {}
- name: delete_change
  endpoint:
    path: /ux/sd/change/change/delete_change/
    method: POST
    data_selector: response
    params: {}
- name: delete_change
  endpoint:
    path: /delete_change/
    method: POST
    data_selector: change_id
- name: jobs_account_audit
  endpoint:
    path: /ux/nccm/jobs-account-audit/
    method: GET
- name: change_history
  endpoint:
    path: /change/history/
    method: GET
    data_selector: response
    params: {}
- name: impact_list
  endpoint:
    path: /change/impact-list/{id}/
    method: GET
    data_selector: response
    params: {}
- name: options
  endpoint:
    path: /change/options/
    method: GET
    data_selector: response
    params: {}
- name: jobs_account_audit
  endpoint:
    path: /ux/nccm/jobs-account-audit/
    method: GET
    data_selector: '[]'
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: jobs_account_audit_options
  endpoint:
    path: /ux/nccm/jobs-account-audit/options/
    method: GET
    data_selector: '[]'
- name: manage_vulnerabilities
  endpoint:
    path: /ux/nccm/manage_vulnerabilities
    method: GET
- name: process-rich-text
  endpoint:
    path: /process-rich-text/
    method: GET
    data_selector: response
    params: {}
- name: requester_search
  endpoint:
    path: /requester_search/
    method: GET
    data_selector: response
    params: {}
- name: risk-list
  endpoint:
    path: /risk-list/{id}/
    method: GET
    data_selector: response
    params:
      id: string
- name: risk_assessment_completion
  endpoint:
    path: /risk_assessment_completion/
    method: GET
    data_selector: response
    params: {}
- name: risk_assessment_completion_post
  endpoint:
    path: /risk_assessment_completion/
    method: POST
    data_selector: response
    params: {}
- name: save_change_impact
  endpoint:
    path: /save-change-impact/
    method: POST
- name: save_change_risk
  endpoint:
    path: /save-change-risk/
    method: POST
- name: save_change_risk_assessment
  endpoint:
    path: /save-change-risk-assessment/
    method: POST
- name: save_change_risk_assessment
  endpoint:
    path: /save-change-risk-assessment/
    method: POST
    data_selector: response
    params: {}
- name: save_change_task
  endpoint:
    path: /save-change-task/
    method: POST
    data_selector: response
    params: {}
- name: vulnerabilities
  endpoint:
    path: /ux/nccm/manage_vulnerabilities/
    method: GET
    data_selector: No content
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: vulnerability_by_id
  endpoint:
    path: /ux/nccm/manage_vulnerabilities/{id}/
    method: GET
    data_selector: No content
    params:
      id: string
- name: vulnerabilities_of_asset
  endpoint:
    path: /ux/nccm/manage_vulnerabilities/asset-va/
    method: GET
    data_selector: No content
- name: vulnerabilities_based_on_cve
  endpoint:
    path: /ux/nccm/manage_vulnerabilities/cve-va-all/
    method: GET
    data_selector: No content
- name: vulnerabilities_summary_by_cve_os_version
  endpoint:
    path: /ux/nccm/manage_vulnerabilities/cve-va-summary/
    method: GET
    data_selector: No content
- name: vulnerabilities_of_device
  endpoint:
    path: /ux/nccm/manage_vulnerabilities/device-va/
    method: GET
    data_selector: No content
- name: vulnerabilities_summary_of_device
  endpoint:
    path: /ux/nccm/manage_vulnerabilities/device-va-summary/
    method: GET
    data_selector: No content
- name: vulnerabilities_of_vendor_os_version
  endpoint:
    path: /ux/nccm/manage_vulnerabilities/os-cve-va/
    method: GET
    data_selector: No content
- name: resolve_details
  endpoint:
    path: /ux/nccm/manage_vulnerabilities/resolve-details/
    method: GET
    data_selector: No content
- name: resolve_vulnerability
  endpoint:
    path: /ux/nccm/manage_vulnerabilities/resolve-va/
    method: GET
    data_selector: No content
- name: vulnerabilities_of_vendor
  endpoint:
    path: /ux/nccm/manage_vulnerabilities/vendor-va/
    method: GET
    data_selector: No content
- name: vulnerabilities_summary_of_vendor
  endpoint:
    path: /ux/nccm/manage_vulnerabilities/vendor-va-summary/
    method: GET
    data_selector: No content
- name: os_image_download
  endpoint:
    path: /ux/nccm/os-image/os-images-objs/
    method: GET
- name: os_images_status
  endpoint:
    path: /ux/nccm/os-image/os-images-status/
    method: GET
- name: os_job_audit
  endpoint:
    path: /ux/nccm/os-image/os-job-audit/
    method: GET
- name: os_schedule_details
  endpoint:
    path: /ux/nccm/os-image/os-schedule-details/
    method: GET
- name: save_rich_text
  endpoint:
    path: /save-rich-text/
    method: POST
- name: task_list
  endpoint:
    path: /task-list/{id}/
    method: GET
- name: workflow_options_map
  endpoint:
    path: /workflow_options_map/
    method: POST
- name: workflow_status
  endpoint:
    path: /workflow_status/
    method: GET
- name: tags
  endpoint:
    path: /ux/nccm/os-image/
    method: GET
    data_selector: object[]
    params:
      items_per_page: integer
      page: integer
- name: configuration_profile
  endpoint:
    path: /ux/nccm/os-image/
    method: POST
    data_selector: object
    params: {}
- name: global_param
  endpoint:
    path: /ux/nccm/os-image/{id}/
    method: GET
    data_selector: object
    params: {}
- name: edit_tag
  endpoint:
    path: /ux/nccm/os-image/{id}/
    method: PUT
    data_selector: object
    params: {}
- name: workflow_status
  endpoint:
    path: /change/workflow_status/
    method: GET
    data_selector: change_id
- name: conversation
  endpoint:
    path: /change/conversation/
    method: GET
    data_selector: ''
- name: conversation_post
  endpoint:
    path: /change/conversation/
    method: POST
    data_selector: ''
- name: conversation_detail
  endpoint:
    path: /change/conversation/{id}/
    method: GET
    data_selector: ''
- name: conversation_update
  endpoint:
    path: /change/conversation/{id}/
    method: PUT
    data_selector: ''
- name: conversation_delete
  endpoint:
    path: /change/conversation/{id}/
    method: DELETE
    data_selector: ''
- name: delete_tag
  endpoint:
    path: /ux/nccm/os-image/{id}/
    method: DELETE
    data_selector: No content
    params: {}
- name: file_upload_status
  endpoint:
    path: /ux/nccm/os-image/file-upload-status/
    method: POST
    data_selector: application/json
    params: {}
- name: get_allowed_file_types
  endpoint:
    path: /ux/nccm/os-image/get-allowed-file-types/
    method: GET
    data_selector: application/json
    params: {}
- name: multi_delete
  endpoint:
    path: /ux/nccm/os-image/multidelete/
    method: POST
    data_selector: application/json
    params: {}
- name: checklist
  endpoint:
    path: /ux/sd/checklist/checklist/
    method: GET
    data_selector: '[]'
    params:
      items_per_page: '1'
      page: '1'
- name: create_checklist
  endpoint:
    path: /ux/sd/checklist/checklist/
    method: POST
    data_selector: none
    params: {}
- name: os_image_options
  endpoint:
    path: /ux/nccm/os-image/options/
    method: GET
    data_selector: text
- name: os_images_objs
  endpoint:
    path: /ux/nccm/os-image/os-images-objs/
    method: GET
    data_selector: text
- name: os_images_status
  endpoint:
    path: /ux/nccm/os-image/os-images-status/
    method: GET
    data_selector: text
- name: os_img_recve
  endpoint:
    path: /ux/nccm/os-image/os-img-recve/
    method: POST
    data_selector: text
- name: os_job_audit
  endpoint:
    path: /ux/nccm/os-image/os-job-audit/
    method: GET
    data_selector: text
- name: os_schedule_delete
  endpoint:
    path: /ux/nccm/os-image/os-schedule-delete/
    method: GET
    data_selector: text
- name: get_checklist
  endpoint:
    path: /checklist/{id}/
    method: GET
    data_selector: response
    params: {}
- name: edit_checklist
  endpoint:
    path: /checklist/{id}/
    method: PUT
    data_selector: response
    params: {}
- name: delete_checklist
  endpoint:
    path: /checklist/{id}/
    method: DELETE
    data_selector: response
    params: {}
- name: options_checklist
  endpoint:
    path: /checklist/options/
    method: GET
    data_selector: response
    params: {}
- name: status_options_based_on_service
  endpoint:
    path: /checklist/status_options_based_on_service/
    method: GET
    data_selector: response
    params: {}
- name: incident
  endpoint:
    path: /ux/sd/inci/incident
    method: GET
- name: os_schedule_detail
  endpoint:
    path: /ux/nccm/os-image/os-schedule-detail/
    method: GET
    data_selector: records
- name: os_schedule_details
  endpoint:
    path: /ux/nccm/os-image/os-schedule-details/
    method: GET
    data_selector: records
- name: os_schedule_options
  endpoint:
    path: /ux/nccm/os-image/os-schedule-options/
    method: GET
    data_selector: records
- name: os_schedule_search_options
  endpoint:
    path: /ux/nccm/os-image/os-schedule-search-options/
    method: GET
    data_selector: records
- name: os_schedule_toggle_state
  endpoint:
    path: /ux/nccm/os-image/os-schedule-toggle-state/
    method: GET
    data_selector: records
- name: save_osimage_schedule_info
  endpoint:
    path: /ux/nccm/os-image/save-osimage-schedule-info/
    method: POST
    data_selector: records
- name: trigger_osdownload
  endpoint:
    path: /os-image/trigger-osdownload/
    method: POST
    data_selector: Responseobject
- name: os_schedule_toggle_state
  endpoint:
    path: /os-image/os-schedule-toggle-state/
    method: GET
    data_selector: Responseobject
- name: save_osimage_schedule_info
  endpoint:
    path: /os-image/save-osimage-schedule-info/
    method: POST
    data_selector: Responseobject
- name: incident
  endpoint:
    path: /ux/sd/inci/incident/
    method: GET
    data_selector: application/json
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: conversation
  endpoint:
    path: /ux/sd/inci/conversation/
    method: GET
    data_selector: No content
    params: {}
- name: rule_group
  endpoint:
    path: /ux/nccm/policy_rule_group
    method: GET
- name: incident
  endpoint:
    path: /ux/sd/inci/incident/{id}/
    method: GET
    data_selector: incident
    params: {}
- name: incident_edit
  endpoint:
    path: /ux/sd/inci/incident/{id}/
    method: PUT
    data_selector: incident
    params: {}
- name: incident_delete
  endpoint:
    path: /ux/sd/inci/incident/{id}/
    method: DELETE
    data_selector: incident
    params: {}
- name: add_attachment
  endpoint:
    path: /ux/sd/inci/incident/add-attachment/
    method: POST
    data_selector: Response
    params: {}
- name: configuration_trigger
  endpoint:
    path: /policy_rule_group/
    method: GET
    data_selector: object[]
    params:
      items_per_page: 1
      page: 1
- name: create_configuration_profile
  endpoint:
    path: /policy_rule_group/
    method: POST
    data_selector: object
    params: {}
- name: view_edit_configuration
  endpoint:
    path: /policy_rule_group/{id}/
    method: GET
    data_selector: object
    params: {}
- name: update_configuration
  endpoint:
    path: /policy_rule_group/{id}/
    method: PUT
    data_selector: object
    params: {}
- name: attachment
  endpoint:
    path: /incident/attachment/
    method: GET
    data_selector: response
    params: {}
- name: bulk_retry_api
  endpoint:
    path: /incident/bulk_retry_api/
    method: POST
    data_selector: response
    params: {}
- name: close_inci_request
  endpoint:
    path: /incident/close_inci_request/
    method: POST
    data_selector: response
    params: {}
- name: delete_rule_group
  endpoint:
    path: /ux/nccm/policy_rule_group/{id}/
    method: DELETE
- name: bulk_operation
  endpoint:
    path: /ux/nccm/policy_rule_group/bulk-opration/
    method: POST
    data_selector: response
- name: get_configuration_rules
  endpoint:
    path: /ux/nccm/policy_rule_group/get-configuration-rules/
    method: GET
    data_selector: response
- name: get_os_from_rule
  endpoint:
    path: /ux/nccm/policy_rule_group/get-os-from-rule/
    method: GET
    data_selector: response
- name: get_runtime_params
  endpoint:
    path: /ux/nccm/policy_rule_group/get-runtime-params/
    method: POST
    data_selector: response
- name: get_init_options
  endpoint:
    path: /ux/nccm/policy_rule_group/get_init_options/
    method: GET
    data_selector: response
- name: delete_incident
  endpoint:
    path: /delete_incident/
    method: POST
- name: feedback
  endpoint:
    path: /feedback/
    method: GET
- name: impacted_asset
  endpoint:
    path: /impacted_asset/
    method: GET
- name: inci_reopen
  endpoint:
    path: /inci_reopen/
    method: POST
- name: incident
  endpoint:
    path: /ux/sd/inci/incident/inci_reopen/
    method: POST
    data_selector: Response
    params: {}
- name: problem
  endpoint:
    path: /ux/sd/problem/problem/
    method: GET
    data_selector: response
    params:
      items_per_page: '1'
      page: '1'
- name: conversation
  endpoint:
    path: /ux/sd/problem/conversation/
    method: GET
    data_selector: response
- name: get_rule_group
  endpoint:
    path: /policy_rule_group/get_rule_group_by_id/
    method: GET
- name: save_associated_rule
  endpoint:
    path: /policy_rule_group/save-associated-rule/
    method: GET
- name: status_updation
  endpoint:
    path: /policy_rule_group/status-updation/
    method: POST
- name: validate_uploaded_file
  endpoint:
    path: /policy_rule_group/validate-uploaded-file/
    method: POST
- name: problem
  endpoint:
    path: /ux/sd/problem/problem/{id}/
    method: GET
    data_selector: problem_id
    params: {}
- name: problem_edit
  endpoint:
    path: /ux/sd/problem/problem/{id}/
    method: PUT
    data_selector: problem_id
    params: {}
- name: problem_delete
  endpoint:
    path: /ux/sd/problem/problem/{id}/
    method: DELETE
    data_selector: ''
    params: {}
- name: upload_jobs
  endpoint:
    path: /ux/nccm/uploadjobs
    method: GET
    data_selector: records
    params: {}
- name: upload_jobs
  endpoint:
    path: /ux/nccm/uploadjobs
    method: GET
- name: add_attachment
  endpoint:
    path: /ux/sd/problem/problem/add-attachment/
    method: POST
    data_selector: response
    params: {}
- name: upload_jobs
  endpoint:
    path: /ux/nccm/uploadjobs/
    method: GET
    data_selector: object[]
    params:
      items_per_page: '1'
      page: '1'
- name: upload_jobs
  endpoint:
    path: /ux/nccm/uploadjobs/
    method: POST
    data_selector: object
    params: {}
- name: attachment
  endpoint:
    path: /ux/sd/problem/problem/attachment/
    method: GET
    data_selector: response
    params: {}
- name: delete_problem_task
  endpoint:
    path: /ux/sd/problem/problem/delete-problem-task/{id}/
    method: POST
    data_selector: response
    params: {}
- name: delete_problem
  endpoint:
    path: /ux/sd/problem/problem/delete_problem/
    method: POST
    data_selector: response
    params: {}
- name: problem
  endpoint:
    path: /api/problem
    method: GET
    data_selector: keys
- name: upload_job
  endpoint:
    path: /uploadjobs/{id}/
    method: GET
    data_selector: response
    params: {}
- name: upload_job_put
  endpoint:
    path: /uploadjobs/{id}/
    method: PUT
    data_selector: response
    params: {}
- name: upload_job_delete
  endpoint:
    path: /uploadjobs/{id}/
    method: DELETE
    data_selector: response
    params: {}
- name: bulk_delete_job
  endpoint:
    path: /uploadjobs/bulk-delete-ujob/
    method: POST
    data_selector: response
    params: {}
- name: device_options
  endpoint:
    path: /uploadjobs/device-options/
    method: GET
    data_selector: response
    params: {}
- name: history
  endpoint:
    path: /problem/history/
    method: GET
    data_selector: records
- name: options
  endpoint:
    path: /problem/options/
    method: GET
    data_selector: records
- name: problem_data
  endpoint:
    path: /problem/problem-data/{id}/
    method: GET
    data_selector: records
- name: problem_task_list
  endpoint:
    path: /problem/problem-task-list/{id}/
    method: GET
    data_selector: records
- name: problem_task
  endpoint:
    path: /problem/problem-task/{id}/
    method: GET
    data_selector: records
- name: export_review
  endpoint:
    path: /ux/nccm/uploadjobs/export-review/
    method: POST
    data_selector: Response
- name: process_rich_text
  endpoint:
    path: /process-rich-text/
    method: GET
    data_selector: response object
- name: relation
  endpoint:
    path: /relation/
    method: POST
    data_selector: response object
- name: format-flowchart-data
  endpoint:
    path: /format-flowchart-data/
    method: POST
    data_selector: application/json
- name: get-template-id
  endpoint:
    path: /get-template-id/
    method: GET
    data_selector: application/json
- name: jobs-retry-queue
  endpoint:
    path: /jobs-retry-queue/
    method: GET
    data_selector: application/json
- name: options
  endpoint:
    path: /options/
    method: GET
    data_selector: application/json
- name: release
  endpoint:
    path: /ux/sd/release/release/
    method: GET
    data_selector: response
    params:
      items_per_page: 1
      page: 1
- name: conversation
  endpoint:
    path: /ux/sd/release/conversation/
    method: GET
    data_selector: response
    params: {}
- name: release
  endpoint:
    path: /ux/sd/release/release/{id}/
    method: GET
    data_selector: response
    params: {}
- name: release_edit
  endpoint:
    path: /ux/sd/release/release/{id}/
    method: PUT
    data_selector: response
    params: {}
- name: release_delete
  endpoint:
    path: /ux/sd/release/release/{id}/
    method: DELETE
    data_selector: response
    params: {}
- name: release_add_attachment
  endpoint:
    path: /ux/sd/release/release/add-attachment/
    method: POST
    data_selector: response
    params: {}
- name: quick_job_templates
  endpoint:
    path: /quick-job-templates/
    method: GET
    data_selector: records
- name: quick_task_validation
  endpoint:
    path: /quick-task-validation/
    method: POST
    data_selector: records
- name: rerun_all_devices
  endpoint:
    path: /rerun-all-devices/
    method: GET
    data_selector: records
- name: rerun_job
  endpoint:
    path: /rerun-job/
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /attachment/
    method: GET
    data_selector: response object
- name: delete_release_risk
  endpoint:
    path: /delete-release-risk/{id}/
    method: POST
    data_selector: response object
- name: delete_release
  endpoint:
    path: /delete_release/
    method: POST
    data_selector: response object
- name: upload_job_result
  endpoint:
    path: /uploadjobs/rerun-result-ip/
    method: GET
    data_selector: records
- name: review_upload_job_task
  endpoint:
    path: /uploadjobs/review-task/
    method: POST
    data_selector: records
- name: runtime_csv_added
  endpoint:
    path: /uploadjobs/runtime-csv-added/
    method: GET
    data_selector: records
- name: runtime_fields
  endpoint:
    path: /uploadjobs/runtime-fields/
    method: GET
    data_selector: records
- name: workflow_jobs
  endpoint:
    path: /ux/nccm/workflow_jobs
    method: GET
- name: release_history
  endpoint:
    path: /release/history/
    method: GET
    data_selector: release_data
    params: {}
- name: impact_list
  endpoint:
    path: /release/impact-list/{id}/
    method: GET
    data_selector: impact_data
    params: {}
- name: release_options
  endpoint:
    path: /release/options/
    method: GET
    data_selector: options_data
    params: {}
- name: workflow_jobs
  endpoint:
    path: /ux/nccm/workflow_jobs/
    method: GET
    data_selector: object[]
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: workflow_job_details
  endpoint:
    path: /workflow_jobs/{id}/
    method: GET
    data_selector: id
- name: delete_workflow_job
  endpoint:
    path: /workflow_jobs/{id}/
    method: DELETE
- name: execute_workflow_job
  endpoint:
    path: /workflow_jobs/execute-workflow-job/
    method: POST
- name: process-rich-text
  endpoint:
    path: /release/process-rich-text/
    method: GET
    data_selector: response
    params: {}
- name: release-data
  endpoint:
    path: /release/release-data/{id}/
    method: GET
    data_selector: response
    params: {}
- name: release-impact
  endpoint:
    path: /release/release-impact/{id}/
    method: GET
    data_selector: response
    params: {}
- name: release-risk
  endpoint:
    path: /release/release-risk/{id}/
    method: GET
    data_selector: response
    params: {}
- name: release-task
  endpoint:
    path: /release/release-task/{id}/
    method: GET
    data_selector: response
    params: {}
- name: requester_search
  endpoint:
    path: /release/requester_search/
    method: GET
    data_selector: response
    params: {}
- name: risk-list
  endpoint:
    path: /release/risk-list/{id}/
    method: GET
    data_selector: response
    params: {}
- name: save-release-impact
  endpoint:
    path: /release/save-release-impact/
    method: POST
    data_selector: response
    params: {}
- name: save_release_impact
  endpoint:
    path: /save-release-impact/
    method: POST
    data_selector: Response
    params: {}
- name: save_release_risk
  endpoint:
    path: /save-release-risk/
    method: POST
    data_selector: Response
    params: {}
- name: save_release_task
  endpoint:
    path: /save-release-task/
    method: POST
    data_selector: Response
    params: {}
- name: feature_diagnosis
  endpoint:
    path: /ux/nccm/workflow_jobs/feature-diagnosis/
    method: GET
    data_selector: records
- name: feature_diagnosis_opts
  endpoint:
    path: /ux/nccm/workflow_jobs/feature-diagnosis-opts/
    method: GET
    data_selector: records
- name: multi_change
  endpoint:
    path: /ux/nccm/workflow_jobs/multi-change/
    method: POST
    data_selector: records
- name: options
  endpoint:
    path: /ux/nccm/workflow_jobs/options/
    method: GET
    data_selector: records
- name: change
  endpoint:
    path: /ux/sd/change/change
    method: GET
- name: save_rich_text
  endpoint:
    path: save-rich-text/
    method: POST
    data_selector: Response
    params: {}
- name: task_list
  endpoint:
    path: task-list/{id}/
    method: GET
    data_selector: Response
    params:
      id: string
- name: workflow_options_map
  endpoint:
    path: workflow_options_map/
    method: POST
    data_selector: Response
    params: {}
- name: request_process
  endpoint:
    path: /ux/sd/req/request_process
    method: GET
- name: change
  endpoint:
    path: /ux/sd/change/change/
    method: GET
    data_selector: object[]
    params:
      items_per_page: '1'
      page: '1'
- name: change_create
  endpoint:
    path: /ux/sd/change/change/
    method: POST
    data_selector: no content
    params: {}
- name: change_detail
  endpoint:
    path: /ux/sd/change/change/{id}/
    method: GET
    data_selector: object
    params: {}
- name: request_process
  endpoint:
    path: /ux/sd/req/request_process/
    method: GET
    data_selector: application/json
    params:
      items_per_page: '1'
      page: '1'
- name: create_request
  endpoint:
    path: /ux/sd/req/request_process/
    method: POST
    data_selector: application/json
    params: {}
- name: change
  endpoint:
    path: /ux/sd/change/change/{id}/
    method: PUT
    data_selector: change
    params:
      id: string
- name: add_attachment
  endpoint:
    path: /ux/sd/change/change/add-attachment/
    method: POST
    data_selector: attachment
- name: delete_change
  endpoint:
    path: /ux/sd/change/change/{id}/
    method: DELETE
    data_selector: delete
- name: get_request
  endpoint:
    path: /ux/sd/req/request_process/{id}/
    method: GET
    data_selector: response
    params: {}
- name: put_request
  endpoint:
    path: /ux/sd/req/request_process/{id}/
    method: PUT
    data_selector: response
    params: {}
- name: delete_request
  endpoint:
    path: /ux/sd/req/request_process/{id}/
    method: DELETE
    data_selector: response
    params: {}
- name: attachment
  endpoint:
    path: /ux/sd/change/change/attachment/
    method: GET
- name: change_data
  endpoint:
    path: /ux/sd/change/change/change-data/{id}/
    method: GET
- name: change_impact
  endpoint:
    path: /ux/sd/change/change/change-impact/{id}/
    method: GET
- name: change_risk
  endpoint:
    path: /ux/sd/change/change/change-risk/{id}/
    method: GET
- name: change_task
  endpoint:
    path: /ux/sd/change/change/change-task/{id}/
    method: GET
- name: delete_change
  endpoint:
    path: /ux/sd/change/change/delete_change/
    method: POST
- name: attachment
  endpoint:
    path: /request_process/attachment/
    method: GET
    data_selector: response
    params: {}
- name: bulk_retry_api
  endpoint:
    path: /request_process/bulk_retry_api/
    method: POST
    data_selector: response
    params: {}
- name: check_list
  endpoint:
    path: /request_process/check_list/
    method: GET
    data_selector: response
    params: {}
- name: delete_change
  endpoint:
    path: /ux/sd/change/change/delete_change/
    method: POST
    data_selector: change
    params: {}
- name: change_history
  endpoint:
    path: /ux/sd/change/change/history/
    method: GET
    data_selector: response
    params: {}
- name: impact_list
  endpoint:
    path: /ux/sd/change/change/impact-list/{id}/
    method: GET
    data_selector: response
    params: {}
- name: options
  endpoint:
    path: /ux/sd/change/change/options/
    method: GET
    data_selector: response
    params: {}
- name: history
  endpoint:
    path: /ux/sd/req/request_process/history/
    method: GET
    data_selector: response
    params: {}
- name: options
  endpoint:
    path: /ux/sd/req/request_process/options/
    method: GET
    data_selector: response
    params: {}
- name: process_rich_text
  endpoint:
    path: /request_process/process-rich-text/
    method: GET
    data_selector: response
    params: {}
- name: requ_check_list
  endpoint:
    path: /request_process/requ_check_list/
    method: GET
    data_selector: response
    params: {}
- name: request_data
  endpoint:
    path: /request_process/request-data/{id}/
    method: GET
    data_selector: response
    params:
      id: string
- name: requester_search
  endpoint:
    path: /request_process/requester_search/
    method: GET
    data_selector: response
    params: {}
- name: process_rich_text
  endpoint:
    path: /process-rich-text/
    method: GET
    data_selector: change_id
    params: {}
- name: requester_search
  endpoint:
    path: /requester_search/
    method: GET
    data_selector: change_id
    params: {}
- name: risk_list
  endpoint:
    path: /risk-list/{id}/
    method: GET
    data_selector: change_id
    params: {}
- name: risk_assessment_completion
  endpoint:
    path: /risk_assessment_completion/
    method: GET
    data_selector: change_id
    params: {}
- name: risk_assessment_completion_post
  endpoint:
    path: /risk_assessment_completion/
    method: POST
    data_selector: change_id
    params: {}
- name: save_rich_text
  endpoint:
    path: /save-rich-text/
    method: POST
    data_selector: Response
    params:
      request_id: text
      display_id: text
      is_merge_request: true
      is_archive: true
      unread_mail: true
- name: update_request_checklist
  endpoint:
    path: /update_requ_checklist/
    method: POST
    data_selector: Response
    params:
      request_id: text
      display_id: text
      is_merge_request: true
      is_archive: true
      unread_mail: true
- name: upload_csv
  endpoint:
    path: /upload-csv/
    method: POST
    data_selector: Response
    params:
      request_id: text
      display_id: text
      is_merge_request: true
      is_archive: true
      unread_mail: true
- name: change_impact
  endpoint:
    path: /ux/sd/change/change/save-change-impact/
    method: POST
    data_selector: response
    params: {}
- name: change_risk
  endpoint:
    path: /ux/sd/change/change/save-change-risk/
    method: POST
    data_selector: response
    params: {}
- name: change_risk_assessment
  endpoint:
    path: /ux/sd/change/change/save-change-risk-assessment/
    method: POST
    data_selector: response
    params: {}
- name: upload_csv
  endpoint:
    path: /request_process/upload-csv/
    method: POST
- name: workflow_options_map
  endpoint:
    path: /request_process/workflow_options_map/
    method: POST
- name: workflow_status
  endpoint:
    path: /request_process/workflow_status/
    method: GET
- name: save_change_risk_assessment
  endpoint:
    path: /save-change-risk-assessment/
    method: POST
    data_selector: response
    params: {}
- name: save_change_task
  endpoint:
    path: /save-change-task/
    method: POST
    data_selector: response
    params: {}
- name: task
  endpoint:
    path: /ux/sd/task/task
    method: GET
    data_selector: records
- name: save_rich_text
  endpoint:
    path: /save-rich-text/
    method: POST
    data_selector: Response
    params: {}
- name: task_list
  endpoint:
    path: /task-list/{id}/
    method: GET
    data_selector: Response
    params:
      id: string
- name: workflow_options_map
  endpoint:
    path: /workflow_options_map/
    method: POST
    data_selector: Response
    params: {}
- name: workflow_status
  endpoint:
    path: /workflow_status/
    method: GET
    data_selector: Response
    params: {}
- name: task_list
  endpoint:
    path: /ux/sd/task/task/
    method: GET
    data_selector: object[]
    params:
      items_per_page: '1'
      page: '1'
- name: create_task
  endpoint:
    path: /ux/sd/task/task/
    method: POST
    data_selector: No content
- name: get_task
  endpoint:
    path: /ux/sd/task/task/{id}/
    method: GET
    data_selector: object
- name: edit_task
  endpoint:
    path: /ux/sd/task/task/{id}/
    method: PUT
    data_selector: object
- name: workflow_status
  endpoint:
    path: /change/workflow_status/
    method: GET
    data_selector: records
- name: conversation
  endpoint:
    path: /change/conversation/
    method: GET
    data_selector: records
- name: conversation_by_id
  endpoint:
    path: /change/conversation/{id}/
    method: GET
    data_selector: records
- name: delete_task
  endpoint:
    path: /ux/sd/task/task/{id}/
    method: DELETE
    data_selector: No content
    params: {}
- name: change_task_list
  endpoint:
    path: /ux/sd/task/task/change-task-list/{id}/
    method: GET
    data_selector: Responseobject
    params: {}
- name: change_task
  endpoint:
    path: /ux/sd/task/task/change-task/{id}/
    method: GET
    data_selector: Responseobject
    params: {}
- name: delete_change_task
  endpoint:
    path: /ux/sd/task/task/delete-change-task/{id}/
    method: POST
    data_selector: Responseobject
    params: {}
- name: delete_release_task
  endpoint:
    path: /ux/sd/task/task/delete-release-task/{id}/
    method: POST
    data_selector: Responseobject
    params: {}
- name: checklist
  endpoint:
    path: /ux/sd/checklist/checklist/
    method: GET
    data_selector: object[]
    params:
      items_per_page: '1'
      page: '1'
- name: create_checklist
  endpoint:
    path: /ux/sd/checklist/checklist/
    method: POST
    data_selector: No content
    params: {}
- name: filter
  endpoint:
    path: /ux/sd/task/task/filter/
    method: GET
- name: options
  endpoint:
    path: /ux/sd/task/task/options/
    method: GET
- name: rel_task_list
  endpoint:
    path: /ux/sd/task/task/rel-task-list/{id}/
    method: GET
- name: release_task
  endpoint:
    path: /ux/sd/task/task/release-task/{id}/
    method: GET
- name: get_checklist
  endpoint:
    path: /checklist/{id}/
    method: GET
    data_selector: response
    params: {}
- name: edit_checklist
  endpoint:
    path: /checklist/{id}/
    method: PUT
    data_selector: response
    params: {}
- name: delete_checklist
  endpoint:
    path: /checklist/{id}/
    method: DELETE
    data_selector: response
    params: {}
- name: get_checklist_options
  endpoint:
    path: /checklist/options/
    method: GET
    data_selector: response
    params: {}
- name: get_status_options
  endpoint:
    path: /checklist/status_options_based_on_service/
    method: GET
    data_selector: response
    params: {}
- name: req-task-list
  endpoint:
    path: /ux/sd/task/task/req-task-list/{id}/
    method: GET
    data_selector: id
    params: {}
- name: save-change-task
  endpoint:
    path: /ux/sd/task/task/save-change-task/
    method: POST
    data_selector: task_id
    params: {}
- name: save-release-task
  endpoint:
    path: /ux/sd/task/task/save-release-task/
    method: POST
    data_selector: task_id
    params: {}
- name: incident
  endpoint:
    path: /ux/sd/inci/incident
    method: GET
- name: task
  endpoint:
    path: /tasks
    method: GET
    data_selector: tasks
- name: APIList
  endpoint:
    path: /api/list
    method: GET
- name: BusinessRule
  endpoint:
    path: /business/rule
    method: GET
- name: BusinessServiceConfiguration
  endpoint:
    path: /business/service/configuration
    method: GET
- name: incident
  endpoint:
    path: /ux/sd/inci/incident/
    method: GET
    data_selector: application/json
    params:
      items_per_page: '1'
      page: '1'
- name: conversation
  endpoint:
    path: /ux/sd/inci/conversation/
    method: GET
    data_selector: No content
    params: {}
- name: schema
  endpoint:
    path: /schema/
    method: GET
- name: incident
  endpoint:
    path: /incident/{id}/
    method: GET
    data_selector: Responseobject
    params: {}
- name: incident_edit
  endpoint:
    path: /incident/{id}/
    method: PUT
    data_selector: Responseobject
    params: {}
- name: incident_delete
  endpoint:
    path: /incident/{id}/
    method: DELETE
    data_selector: No content
    params: {}
- name: add_attachment
  endpoint:
    path: /ux/sd/inci/incident/add-attachment/
    method: POST
    data_selector: response
    params: {}
- name: attachment
  endpoint:
    path: /incident/attachment/
    method: GET
    data_selector: response
    params: {}
- name: bulk_retry_api
  endpoint:
    path: /incident/bulk_retry_api/
    method: POST
    data_selector: response
    params: {}
- name: close_inci_request
  endpoint:
    path: /incident/close_inci_request/
    method: POST
    data_selector: response
    params: {}
- name: delete_incident
  endpoint:
    path: /delete_incident/
    method: POST
    data_selector: Responseobject
- name: feedback
  endpoint:
    path: /feedback/
    method: GET
    data_selector: Responseobject
- name: impacted_asset
  endpoint:
    path: /impacted_asset/
    method: GET
    data_selector: Responseobject
- name: inci_reopen
  endpoint:
    path: /inci_reopen/
    method: POST
    data_selector: Responseobject
- name: incident
  endpoint:
    path: /ux/sd/inci/incident/inci_reopen/
    method: POST
    data_selector: Response
    params: {}
- name: problem
  endpoint:
    path: /ux/sd/problem/problem
    method: GET
- name: problem
  endpoint:
    path: /ux/sd/problem/problem/
    method: GET
    data_selector: '[]'
    params:
      items_per_page: integer
      page: integer
- name: conversation
  endpoint:
    path: /ux/sd/problem/conversation/
    method: GET
    data_selector: '[]'
    params: {}
- name: problem_details
  endpoint:
    path: /ux/sd/problem/problem/{id}/
    method: GET
    data_selector: application/json
- name: edit_problem
  endpoint:
    path: /ux/sd/problem/problem/{id}/
    method: PUT
    data_selector: application/json
- name: delete_problem
  endpoint:
    path: /ux/sd/problem/problem/{id}/
    method: DELETE
- name: add_attachment
  endpoint:
    path: /ux/sd/problem/problem/add-attachment/
    method: POST
    data_selector: Response
    params: {}
- name: attachment
  endpoint:
    path: /ux/sd/problem/problem/attachment/
    method: GET
    data_selector: response
    params: {}
- name: delete_problem_task
  endpoint:
    path: /ux/sd/problem/problem/delete-problem-task/{id}/
    method: POST
    data_selector: response
    params: {}
- name: delete_problem
  endpoint:
    path: /ux/sd/problem/problem/delete_problem/
    method: POST
    data_selector: response
    params: {}
- name: problem
  endpoint:
    path: /problems
    method: GET
    data_selector: problems
- name: history
  endpoint:
    path: /ux/sd/problem/problem/history/
    method: GET
    data_selector: records
- name: options
  endpoint:
    path: /ux/sd/problem/problem/options/
    method: GET
    data_selector: records
- name: problem_data
  endpoint:
    path: /ux/sd/problem/problem/problem-data/{id}/
    method: GET
    data_selector: records
- name: problem_task_list
  endpoint:
    path: /ux/sd/problem/problem/problem-task-list/{id}/
    method: GET
    data_selector: records
- name: problem_task
  endpoint:
    path: /ux/sd/problem/problem/problem-task/{id}/
    method: GET
    data_selector: records
- name: process_rich_text
  endpoint:
    path: /ux/sd/problem/problem/process-rich-text/
    method: GET
    data_selector: response
    params: {}
- name: relation
  endpoint:
    path: /ux/sd/problem/problem/relation/
    method: POST
    data_selector: response
    params: {}
- name: release
  endpoint:
    path: /ux/sd/release/release
    method: GET
- name: release
  endpoint:
    path: /ux/sd/release/release/
    method: GET
    data_selector: response
    params:
      items_per_page: 1
      page: 1
- name: conversation
  endpoint:
    path: /ux/sd/release/conversation/
    method: GET
    data_selector: response
- name: get_release
  endpoint:
    path: /release/{id}/
    method: GET
    data_selector: response
    params: {}
- name: edit_release
  endpoint:
    path: /release/{id}/
    method: PUT
    data_selector: response
    params: {}
- name: delete_release
  endpoint:
    path: /release/{id}/
    method: DELETE
    data_selector: response
    params: {}
- name: add_attachment
  endpoint:
    path: /release/add-attachment/
    method: POST
    data_selector: response
    params: {}
- name: attachment
  endpoint:
    path: /ux/sd/release/release/attachment/
    method: GET
    data_selector: response
    params: {}
- name: delete_release_risk
  endpoint:
    path: /ux/sd/release/release/delete-release-risk/{id}/
    method: POST
    data_selector: response
    params: {}
- name: delete_release
  endpoint:
    path: /ux/sd/release/release/delete_release/
    method: POST
    data_selector: response
    params: {}
- name: release_history
  endpoint:
    path: /ux/sd/release/release/history/
    method: GET
    data_selector: response object
    params: {}
- name: impact_list
  endpoint:
    path: /ux/sd/release/release/impact-list/{id}/
    method: GET
    data_selector: response object
    params: {}
- name: release_options
  endpoint:
    path: /ux/sd/release/release/options/
    method: GET
    data_selector: response object
    params: {}
- name: process_rich_text
  endpoint:
    path: /release/process-rich-text/
    method: GET
    data_selector: responseobject
- name: release_data
  endpoint:
    path: /release/release-data/{id}/
    method: GET
    data_selector: responseobject
- name: release_impact
  endpoint:
    path: /release/release-impact/{id}/
    method: GET
    data_selector: responseobject
- name: release_risk
  endpoint:
    path: /release/release-risk/{id}/
    method: GET
    data_selector: responseobject
- name: release_task
  endpoint:
    path: /release/release-task/{id}/
    method: GET
    data_selector: responseobject
- name: requester_search
  endpoint:
    path: /release/requester_search/
    method: GET
    data_selector: responseobject
- name: risk_list
  endpoint:
    path: /release/risk-list/{id}/
    method: GET
    data_selector: responseobject
- name: save_release_impact
  endpoint:
    path: /release/save-release-impact/
    method: POST
    data_selector: responseobject
- name: save_release_impact
  endpoint:
    path: save-release-impact/
    method: POST
    data_selector: Response
    params: {}
- name: save_release_risk
  endpoint:
    path: save-release-risk/
    method: POST
    data_selector: Response
    params: {}
- name: save_release_task
  endpoint:
    path: save-release-task/
    method: POST
    data_selector: Response
    params: {}
- name: save_rich_text
  endpoint:
    path: /save-rich-text/
    method: POST
    data_selector: Response
    params: {}
- name: task_list
  endpoint:
    path: /task-list/{id}/
    method: GET
    data_selector: Response
    params:
      id: string
- name: workflow_options_map
  endpoint:
    path: /workflow_options_map/
    method: POST
    data_selector: Response
    params: {}
- name: request_process
  endpoint:
    path: /ux/sd/req/request_process
    method: GET
- name: request_process
  endpoint:
    path: /ux/sd/req/request_process/{id}/
    method: GET
    data_selector: request
    params: {}
- name: request_process_edit
  endpoint:
    path: /ux/sd/req/request_process/{id}/
    method: PUT
    data_selector: request
    params: {}
- name: request_process_delete
  endpoint:
    path: /ux/sd/req/request_process/{id}/
    method: DELETE
    data_selector: request
    params: {}
- name: attachment
  endpoint:
    path: /request_process/attachment/
    method: GET
    data_selector: response
    params: {}
- name: bulk_retry_api
  endpoint:
    path: /request_process/bulk_retry_api/
    method: POST
    data_selector: response
    params: {}
- name: check_list
  endpoint:
    path: /request_process/check_list/
    method: GET
    data_selector: response
    params: {}
- name: history
  endpoint:
    path: /request_process/history/
    method: GET
    data_selector: Responseobject
    params: {}
- name: options
  endpoint:
    path: /request_process/options/
    method: GET
    data_selector: Responseobject
    params: {}
- name: process_rich_text
  endpoint:
    path: /request_process/process-rich-text/
    method: GET
    data_selector: response
- name: requ_check_list
  endpoint:
    path: /request_process/requ_check_list/
    method: GET
    data_selector: response
- name: request_data
  endpoint:
    path: /request_process/request-data/{id}/
    method: GET
    data_selector: response
- name: requester_search
  endpoint:
    path: /request_process/requester_search/
    method: GET
    data_selector: response
- name: save_rich_text
  endpoint:
    path: /save-rich-text/
    method: POST
    data_selector: response
    params: {}
- name: update_requ_checklist
  endpoint:
    path: /update_requ_checklist/
    method: POST
    data_selector: response
    params: {}
- name: upload_csv
  endpoint:
    path: /upload-csv/
    method: POST
    data_selector: response
    params: {}
- name: upload_csv
  endpoint:
    path: /request_process/upload-csv/
    method: POST
    data_selector: Response
    params: {}
- name: workflow_options_map
  endpoint:
    path: /request_process/workflow_options_map/
    method: POST
    data_selector: Response
    params: {}
- name: workflow_status
  endpoint:
    path: /request_process/workflow_status/
    method: GET
    data_selector: Response
    params: {}
- name: task
  endpoint:
    path: /ux/sd/task/task
    method: GET
    data_selector: records
- name: tasks
  endpoint:
    path: /ux/sd/task/task/
    method: GET
    data_selector: object[]
    params:
      items_per_page: integer
      page: integer
      reverse: boolean
      sort: string
- name: task
  endpoint:
    path: /ux/sd/task/task/{id}/
    method: GET
    data_selector: object
- name: delete_task
  endpoint:
    path: /ux/sd/task/task/{id}/
    method: DELETE
    data_selector: No content
- name: change_task_list
  endpoint:
    path: /ux/sd/task/task/change-task-list/{id}/
    method: GET
    data_selector: Responseobject
- name: change_task
  endpoint:
    path: /ux/sd/task/task/change-task/{id}/
    method: GET
    data_selector: Responseobject
- name: delete_change_task
  endpoint:
    path: /ux/sd/task/task/delete-change-task/{id}/
    method: POST
    data_selector: Responseobject
- name: delete_release_task
  endpoint:
    path: /ux/sd/task/task/delete-release-task/{id}/
    method: POST
    data_selector: Responseobject
- name: task
  endpoint:
    path: /ux/sd/task/task/filter/
    method: GET
    data_selector: records
- name: delete_release_task
  endpoint:
    path: /ux/sd/task/task/delete-release-task/{id}/
    method: POST
    data_selector: records
- name: options
  endpoint:
    path: /ux/sd/task/task/options/
    method: GET
    data_selector: records
- name: rel_task_list
  endpoint:
    path: /ux/sd/task/task/rel-task-list/{id}/
    method: GET
    data_selector: records
- name: release_task
  endpoint:
    path: /ux/sd/task/task/release-task/{id}/
    method: GET
    data_selector: records
- name: req-task-list
  endpoint:
    path: /req-task-list/{id}/
    method: GET
    data_selector: Responseobject
- name: save-change-task
  endpoint:
    path: /save-change-task/
    method: POST
    data_selector: Responseobject
- name: save-release-task
  endpoint:
    path: /save-release-task/
    method: POST
    data_selector: Responseobject
- name: schema
  endpoint:
    path: /schema/
    method: GET
notes:
- REST API uses the basic User ID and Password authentication.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Setup of connected app is required.
- Requires user authentication to access purchase order data.
- This is a configurable workflow within the Infraon platform for Purchase Order creation
  and processing.
- Some objects may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in Infraon
- Requires setup of connected app in api
- Only a technician or users with the required permissions can log a Problem.
- Problems can be automatically created when incidents with the same requester, service,
  or asset occur multiple times within a short period of time.
- Customized Status(es) can be configured from the 'Workflow' module to suit the requirement.
- Easily convert resolved tickets to Knowledge Base articles. KB icon appears post-resolution,
  ensuring efficient knowledge management.
- The Business Service module requires a valid license.
- Ensure the appropriate license is purchased and activated to enable configuration
  and access.
- Recurring incidents can auto-convert to problems if five or more incidents occur
  within 14 days.
- Changes are managed through the 'Change' module.
- Users with appropriate permissions can raise changes.
- Network Diagram (Beta)
- Requires setup of connected app.
- Format can be selected via content negotiation.
- The Business Service module requires a valid license. Please ensure the appropriate
  license is purchased and activated to enable configuration and access.
- Requires setup of OAuth2 credentials in Infraon.
- Enabling SNMP is vital to initiating the monitoring of the routers and switches.
- 'Authorization: YOUR_API_KEY'
- All API requests to Infraon Infinity must be authenticated to ensure secure access
  and data protection.
- Requires API key for authorization
- Paginated response by items_per_page and page parameters
- Uses ApiKeyAuth for authentication
- Items can be sorted and paginated
- Requires setup of connected app in Infraon
- Uses ApiKeyAuth for authorization
- The id parameter is required for accessing business service details
- Uses ApiKey for authorization.
- Uses API key for authentication.
- Uses ApiKeyAuth for authentication.
- Responses are in JSON format.
- No response body for GET and POST requests.
- API endpoint that allows users to be viewed or edited.
- No response body for create_team
- Response object for get_team and edit_team may return various properties
- Accepts application/json
- Requires API key for authorization.
- No response body for create_team endpoint.
- Some API endpoints may require additional parameters depending on the specific request.
- Requires API Key for authentication.
- Uses ApiKeyAuth
- ApiKeyAuth required for all endpoints.
- All other fields are mapped to DocumentField and probably will work wrong.
- Last update time is in ISO 8601 format.
- Requires ApiKeyAuth for all endpoints.
- Requires setup of API key.
- Not well supported or untested fields include FileField, ImageField, and BinaryField.
- Not well supported or untested fields include FileField, ImageField, BinaryField.
- Serializer for Documents.
- 'Not well supported or untested: FileField, ImageField, BinaryField'
- API endpoint allows users to be viewed or edited.
- Requires API Key for authorization
- Items Per Page and Page Number are required query parameters for GET request.
- Authorization required using API key
- Uses API key for authentication
- Uses ApiKey for authentication.
- Uses ApiKey for authorization
- Uses OAuth2 with refresh token — requires setup of connected app in Infraon API
- Uses ApiKeyAuth for authorization.
- Response includes various fields related to the configuration template
- API endpoint that allows Request to be viewed or edited.
- 'Recognized primitive fields: StringField, URLField, EmailField, IntField, LongField,
  FloatField, DecimalField, BooleanField, DateTimeField, ComplexDateTimeField, ObjectIdField,
  SequenceField, UUIDField, GeoPointField, GeoJsonBaseField, DateField.'
- 'Compound fields: ListField and DictField are mapped to corresponding DRF fields.'
- Requires ApiKeyAuth for accessing endpoints
- 'Not well supported or untested: FileField, ImageField, BinaryField.'
- The API may return various fields depending on the request parameters.
- Uses ApiKeyAuth — requires API key for authorization
- Uses ApiKey authentication
- Requires ApiKeyAuth for all operations.
- Uses API Key for authentication
- The change_id field is required and has a max length of 25.
- The display_id field is optional with a max length of 50.
- The is_archive and unread_mail fields are optional booleans.
- The creation_time, last_update_time, and due_date fields are optional date-time
  strings.
- Supports application/json, application/x-www-form-urlencoded, and multipart/form-data
- Ensure API endpoints are correctly structured.
- The API requires an API key for authorization.
- OpenApi3 schema for this API. Format can be selected via content negotiation.
- API endpoint allows Incident to be viewed or edited.
- Authorization requires API key.
- Some fields may not be well supported or untested.
- Uses query parameters for keys and values
- application/json
- application/jsonapplication/x-www-form-urlencodedmultipart/form-data
errors:
- '400 Bad Request: Please provide username.'
- '401 Unauthorized: Invalid API key.'
- '403 Forbidden: API key is missing.'
- '500 Internal Server Error: Something went wrong. Please try again later.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check user credentials or permissions.'
- '401 Unauthorized: Check API key or token.'
- '403 Forbidden: Insufficient permissions.'
- 200 Success
- '401 Unauthorized: Invalid credentials or expired token.'
- 204 No content
- '200: Success'
- '201: No content'
- '401 Unauthorized: Check API key or permissions'
- '404 Not Found: Verify the API endpoint or resource ID'
- '204: No content'
- '204 No Content: Successful deletion'
- '200 Success: Successful retrieval'
- '401 Unauthorized: Recheck API key'
- '200 Success: Successfully fetched data'
- '201: Successfully created a new resource'
- '401 Unauthorized: Check API key.'
- '200: No response body'
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Check your API Key'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Recheck API key.'
- '401 Unauthorized: Recheck Api key.'
- '201: No response body'
- '200 Success: The request was successful.'
- '204 No Content: Indicates successful deletion of a service outage.'
- '200 No Content: Indicates successful retrieval or update of a service outage.'
- No response body
- '401 Unauthorized: Recheck API Key'
- '204 No Content: Successful request with no response body'
- 204 No Content
- '200 Success: Request was successful'
- '201 Success: Resource created successfully'
- '400 Bad Request: Invalid request format'
- '401 Unauthorized: Missing or invalid API key'
- '404 Not Found: Resource not found'
- '204 No content: Successful deletion of partner'
- 204 No response body
- '401 Unauthorized: Recheck API key validity'
- 201 Success
- '201: Team created successfully'
- '200: Team retrieved successfully'
- '200: Team updated successfully'
- '204 No Content: Successful request but no content to return'
- '401 Unauthorized: Check your API Key.'
- '400 Bad Request: Invalid request parameters.'
- '204 No Content: Successful deletion.'
- '201 Created: Resource created successfully.'
- '200 Success: Resource fetched successfully.'
- '401 Unauthorized: Check your API key.'
- '200: No content'
- '200 Success: Successful response'
- No content
- '401 Unauthorized: Recheck API key or permissions'
- '204 No content: Successfully deleted the workflow job'
- '401 Unauthorized: Recheck API key or token'
- 'API_KEY_MISSING: Ensure API key is included in the request header.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'Unauthorized: Recheck API key validity.'
- '200 Success: Request successful.'
- '200 Success: Successful request'
- '201 No content: Task created successfully'
- 'Unauthorized: Recheck API key or permissions'
- '204 No content: Successful deletion of the problem'
- '200 Success: Request was successful.'
- '200 Success: Indicates a successful request'
- Other errors not specified
- 'Unauthorized: Recheck API Key'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - ApiKeyAuth
  - cookieAuth
  - basicAuth
client:
  base_url: https://docs.infraon.io/infraon-infinity-api-guide/
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
