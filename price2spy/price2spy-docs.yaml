resources:
- name: products
  endpoint:
    path: /getProducts
    method: GET
    data_selector: products
- name: urls
  endpoint:
    path: /getUrls
    method: GET
    data_selector: urls
- name: measurements
  endpoint:
    path: /getMeasurements
    method: GET
    data_selector: measurements
- name: current_pricing_data
  endpoint:
    path: /getCurrentPricingData
    method: GET
    data_selector: currentPricingData
- name: brands
  endpoint:
    path: /getBrands
    method: GET
    data_selector: brands
- name: categories
  endpoint:
    path: /getCategories
    method: GET
    data_selector: categories
- name: suppliers
  endpoint:
    path: /getSuppliers
    method: GET
    data_selector: suppliers
- name: metadata1
  endpoint:
    path: /getMetadata1
    method: GET
    data_selector: metadata1
- name: metadata2
  endpoint:
    path: /getMetadata2
    method: GET
    data_selector: metadata2
- name: metadata3
  endpoint:
    path: /getMetadata3
    method: GET
    data_selector: metadata3
- name: products
  endpoint:
    path: /getProducts
    method: GET
    data_selector: products
- name: urls
  endpoint:
    path: /getUrls
    method: GET
    data_selector: urls
- name: measurements
  endpoint:
    path: /getMeasurements
    method: GET
    data_selector: measurements
- name: current_pricing_data
  endpoint:
    path: /getCurrentPricingData
    method: GET
    data_selector: pricingData
- name: competitor_product_matching
  endpoint:
    path: /api/competitor-product-matching
    method: POST
    data_selector: matched_products
    params: {}
- name: pricing_snapshot
  endpoint:
    path: /api/pricing-snapshot
    method: GET
    data_selector: pricing_data
    params: {}
- name: availability_snapshot
  endpoint:
    path: /api/availability-snapshot
    method: GET
    data_selector: availability_data
    params: {}
- name: ratings_snapshot
  endpoint:
    path: /api/ratings-snapshot
    method: GET
    data_selector: ratings_data
    params: {}
- name: shipping_info_snapshot
  endpoint:
    path: /api/shipping-info-snapshot
    method: GET
    data_selector: shipping_info
    params: {}
- name: product_matching
  endpoint:
    path: /product-matching
    method: POST
    data_selector: results
    params: {}
- name: current_data_reports
  endpoint:
    path: /reports/current
    method: GET
    data_selector: data
- name: historical_data_reports
  endpoint:
    path: /reports/historical
    method: GET
    data_selector: data
- name: metadata_reports
  endpoint:
    path: /reports/metadata
    method: GET
    data_selector: data
- name: custom_reports
  endpoint:
    path: /reports/custom
    method: POST
    data_selector: data
- name: current_data_reports
  endpoint:
    path: /api/current_data_reports
    method: GET
    data_selector: reports
- name: historical_data_reports
  endpoint:
    path: /api/historical_data_reports
    method: GET
    data_selector: reports
- name: metadata_reports
  endpoint:
    path: /api/metadata_reports
    method: GET
    data_selector: reports
- name: custom_reports
  endpoint:
    path: /api/custom_reports
    method: GET
    data_selector: reports
- name: pricing_reports
  endpoint:
    path: /reports
    method: GET
    data_selector: reports
    params: {}
- name: Magento 2.x
  endpoint:
    path: /interfaces/magento2-integration.html
- name: Shopify
  endpoint:
    path: /interfaces/shopify-integration.html
- name: BigCommerce
  endpoint:
    path: /interfaces/bigcommerce-integration.html
- name: Woo Commerce
  endpoint:
    path: /interfaces/woo-commerce-integration.html
- name: Shopware 5.x
  endpoint:
    path: /interfaces/shopware-integration.html
- name: Shopware 6.x
  endpoint:
    path: /interfaces/shopware6-integration.html
- name: Presta Shop
  endpoint:
    path: /interfaces/presta-shop-integration.html
- name: Google Shopping Feed
  endpoint:
    path: /interfaces/google_shopping_feed_integration.html
- name: Custom Price2Spy import feed
  endpoint:
    path: /interfaces/custom_price2spy_format.html
- name: pricing_reports
  endpoint:
    path: /reports
    method: GET
    data_selector: reports
- name: competitor_monitoring
  endpoint:
    path: /competitors
    method: GET
    data_selector: competitors
- name: product_matching
  endpoint:
    path: /product_matching
    method: GET
    data_selector: products
- name: pricing_data
  endpoint:
    path: /api/v1/pricing
    method: GET
    data_selector: records
    params: {}
- name: pricing_intelligence
  endpoint:
    path: /api/pricing_intelligence
    method: GET
    data_selector: data
- name: pricing_analytics
  endpoint:
    path: /api/pricing_analytics
    method: GET
    data_selector: data
- name: advanced_repricing
  endpoint:
    path: /api/advanced_repricing
    method: GET
    data_selector: data
- name: product_matching
  endpoint:
    path: /api/product_matching
    method: GET
    data_selector: data
- name: data_extraction
  endpoint:
    path: /api/data_extraction
    method: GET
    data_selector: data
- name: Automatch
  endpoint:
    path: /automatch
    method: GET
- name: Repricing
  endpoint:
    path: /repricing
    method: GET
- name: Capturing Screenshots
  endpoint:
    path: /capturing-screenshots
    method: GET
- name: Google Analytics Integration
  endpoint:
    path: /google-analytics
    method: GET
- name: Automatch
  endpoint:
    path: /product-matching/automatch
    method: GET
    data_selector: automatch_data
- name: Manual Matching
  endpoint:
    path: /product-matching/manual
    method: GET
    data_selector: manual_matching_data
- name: Hybrid Matching
  endpoint:
    path: /product-matching/hybrid
    method: GET
    data_selector: hybrid_matching_data
- name: brands
  endpoint:
    path: /getBrands
    method: GET
- name: brands
  endpoint:
    path: /get-brands
    method: GET
- name: current_pricing_data
  endpoint:
    path: /get-current-pricing-data
    method: POST
    data_selector: filter by any parameter supported in this case body = {"brandName":"Arturia"}
notes:
- REST Authentication is performed by adding Authorization header to your REST API
  requests.
- Request authentication is performed by adding Authorization header with Basic authentication.
- 100% matching accuracy guaranteed
- Files are primarily received in Excel format
- Files are primarily in Excel format
- Price monitoring software will allow you to follow the evolution of prices which
  will result in obtaining a full pricing analysis.
- In the sea of price monitoring tools available on the market, the million-dollar
  question is how to choose the best one.
- Offers 25 different types of reports categorized into current, historical, and metadata.
- Get hands-on experience with Price2Spy.
- No server or software needed from your side. Price2Spy is an online service.
- Integrating your own store with Price2Spy comes with a list of benefits.
- We offer ready-to-use integration solutions for the 12 most popular eCommerce platforms.
- Price2Spy API delivers the raw scraped pricing data directly to you, without needing
  to log in.
- Service Data is presented 'as-is' and we disclaim all warranties.
- Client agrees that WEBCentric will not be held responsible for legal liabilities
  incurred through client’s use or misuse of Service Data.
- You are solely responsible for ensuring that your use of the Service to store, access,
  and/or transmit data is compliant with all applicable laws and regulations as well
  as any and all privacy policies, agreements or other obligations you may maintain
  or enter into with third parties.
- Price2Spy offers a 14-day trial.
- Price monitoring has become an indispensable activity for every business, especially
  eCommerce ones.
- Get in touch with us for a free round of consultations and a personalized quote.
- API allows for quick and secure data exchange.
- Offers a 30% discount on module bundles.
- Free 14-day trial available without payment information.
- Automatch is applicable in industries that use unique product identifiers.
- Manual matching can be performed repeatedly upon request.
- Hybrid matching relies on Machine Learning reviewed by humans.
- Access to Price2Spy API is available to our clients with Premium accounts.
- The authentication method below is outdated and will become obsolete in the near
  future. We recommend all of our clients to update their systems to incorporate HMAC
  authentication before the end of the grace period.
- If a client uses REST API, he cannot use the API key in the format that we have
  sent it – decoded.
- Insert your API key when prompted during authorization.
errors:
- 'apiKeyWrong: check if you have supplied correct API key'
- 'apiAccessNotAllowed: please check if this is enabled in your Settings'
- 'apiKeyWrong: Check if you have supplied the correct API key.'
- 'apiAccessNotAllowed: Please check if this is enabled in your Settings.'
- 'INVALID_REQUEST: Check the format of your request'
- 'PRODUCT_NOT_FOUND: No matching product found for the given input'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Refund requests must be made up to 14 days after the payment.
- Hmac signature mismatch
- Authorization header with HmacSHA256 scheme not provided
- Hmac invalid timestamp header
- Hmac missing timestamp header
auth_info:
  mentioned_objects: []
client:
  base_url: https://www.price2spy.com/api.html
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.price2spy.com/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
