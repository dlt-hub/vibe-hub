resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: device
  endpoint:
    path: /api/v1/device
    method: GET
    data_selector: data
    params: {}
- name: secure_compute_module
  endpoint:
    path: /api/scm
    method: GET
    data_selector: records
- name: devices
  endpoint:
    path: /api/devices
    method: GET
    data_selector: devices
    params: {}
- name: transactions
  endpoint:
    path: /api/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: device_status
  endpoint:
    path: /api/v1/device/status
    method: GET
    data_selector: data
    params: {}
- name: zbcli_install
  endpoint:
    path: /zbcli/install
    method: POST
    data_selector: installation
    params: {}
- name: zbcli_imager
  endpoint:
    path: /zbcli/imager
    method: POST
    data_selector: image_creation
    params: {}
- name: zbcli_update_config
  endpoint:
    path: /zbcli/update-config
    method: POST
    data_selector: configuration
    params: {}
- name: device
  endpoint:
    path: /api/devices
    method: GET
    data_selector: devices
    params: {}
- name: transaction
  endpoint:
    path: /api/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: update
  endpoint:
    path: /zbcli/update
    method: POST
- name: rollback_swap
  endpoint:
    path: /zbcli/rollback-swap
    method: POST
- name: zbcli_install
  endpoint:
    path: /install.sh
    method: GET
    data_selector: installation_script
- name: zbcli_imager
  endpoint:
    path: /imager
    method: GET
    data_selector: image_creation
- name: zbcli_update_config
  endpoint:
    path: /update-config
    method: GET
    data_selector: configuration_setup
- name: Backup Partition
  endpoint:
    path: /dev/sda1
    method: UPDATE
    data_selector: update_configs
    params:
      update_name: my_image
      endpoint_type: LOCAL
      partition_layout: A/B
      data_partition: 1024MB
      update_policy: UPDATE_BOTH
      hostname: Not set
      password: Not set
- name: device_info
  endpoint:
    path: /api/device/info
    method: GET
    data_selector: data
    params: {}
- name: device_status
  endpoint:
    path: /api/device/status
    method: GET
    data_selector: status
    params: {}
- name: zymkey_data
  endpoint:
    path: /api/v1/data
    method: GET
    data_selector: records
- name: devices
  endpoint:
    path: /api/devices
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
- name: zkDoECDHAndKDF
  endpoint:
    path: /zkDoECDHAndKDF
    method: POST
    data_selector: derived_key
    params: {}
- name: zkExportPubKey
  endpoint:
    path: /zkExportPubKey
    method: POST
    data_selector: pk
    params: {}
- name: perimeter_detect
  endpoint:
    path: /perimeter_detect
    method: GET
    data_selector: events
- name: battery_monitor
  endpoint:
    path: /battery_monitor
    method: GET
    data_selector: voltage
- name: cpu_temperature
  endpoint:
    path: /cpu_temperature
    method: GET
    data_selector: temperature
- name: ephemeral_key_slot
  endpoint:
    path: EPHEMERAL_KEY_SLOT
    method: GET
- name: zymbit_bookworm64_pi5_rev1.1_1.3.2-2
  endpoint:
    path: https://bootware.s3.amazonaws.com/1.3.2/zymbit_bookworm64_pi5_rev1.1_1.3.2-2.zi
    method: GET
    data_selector: Base Bookworm 64bit (11/19/2024) zi image for Pi5 Rev 1.1 or CM5
      (bw 1.3.2-2)
- name: zymbit_bookworm64_pi5_rev1.0_1.3.2-2
  endpoint:
    path: https://bootware.s3.amazonaws.com/1.3.2/zymbit_bookworm64_pi5_rev1.0_1.3.2-2.zi
    method: GET
    data_selector: Base Bookworm 64bit (11/19/2024) zi image for Pi5 Rev 1.0 (bw 1.3.2-2)
- name: zymbit_ubuntu64_24.04.3_pi5_rev1.1_1.3.2-2
  endpoint:
    path: https://bootware.s3.amazonaws.com/1.3.2/zymbit_ubuntu64_24.04.3_pi5_rev1.1_1.3.2-2.zi
    method: GET
    data_selector: Base Ubuntu 24.04.3 64bit zi image for Pi5 Rev 1.1 or CM5 (bw 1.3.2-2)
- name: zymbit_ubuntu64_24.04.3_pi5_rev1.0_1.3.2-2
  endpoint:
    path: https://bootware.s3.amazonaws.com/1.3.2/zymbit_ubuntu64_24.04.3_pi5_rev1.0_1.3.2-2.zi
    method: GET
    data_selector: Base Ubuntu 24.04.3 64bit zi image for Pi5 Rev 1.0 (bw 1.3.2-2)
- name: zymbit_bookworm64_pi4_1.3.2-2
  endpoint:
    path: https://bootware.s3.amazonaws.com/1.3.2/zymbit_bookworm64_pi4_1.3.2-2.zi
    method: GET
    data_selector: Base Bookworm 64bit zi image for Pi4/CM4 (bw 1.3.2-2)
- name: zymbit_bullseye64_pi4_1.3.2-2
  endpoint:
    path: https://bootware.s3.amazonaws.com/1.3.2/zymbit_bullseye64_pi4_1.3.2-2.zi
    method: GET
    data_selector: Base Bullseye 64bit zi image for Pi4/CM4 (bw 1.3.2-2)
- name: zymbit_ubuntu64_24.04.3_pi4_1.3.2-2
  endpoint:
    path: https://bootware.s3.amazonaws.com/1.3.2/zymbit_ubuntu64_24.04.3_pi4_1.3.2-2.zi
    method: GET
    data_selector: Base Ubuntu 24.04.3 64bit zi image for Pi4 or CM4 (bw 1.3.2-2)
- name: zymbit_ubuntu64_22.04_pi4_1.3.2-1
  endpoint:
    path: https://bootware.s3.amazonaws.com/1.3.2/zymbit_ubuntu64_22.04_pi4_1.3.2-1.zi
    method: GET
    data_selector: Base Ubuntu 64bit 22.04 zi image for Pi4/CM4 (bw 1.3.2-1)
- name: zymbit_bookworm64_pi0_1.3.2-1
  endpoint:
    path: https://bootware.s3.amazonaws.com/1.3.2/zymbit_bookworm64_pi0_1.3.2-1.zi
    method: GET
    data_selector: Base Bookworm 64bit zi image for PiZero2w (bw 1.3.2-1)
- name: zymbit_bullseye64_pi0_1.3.2-1
  endpoint:
    path: https://bootware.s3.amazonaws.com/1.3.2/zymbit_bullseye64_pi0_1.3.2-1.zi
    method: GET
    data_selector: Base Bullseye 64bit zi image for PiZero2w (bw 1.3.2-1)
- name: pub_key_1.3.2
  endpoint:
    path: https://bootware.s3.amazonaws.com/1.3.2/pub_key_1.3.2.pem
    method: GET
    data_selector: Public Key - For all Bootware 1.3.2 zi images
- name: get_wallet_node_addr
  endpoint:
    path: /get_wallet_node_addr
    method: GET
    data_selector: TYPE
    params: {}
- name: get_current_binding_info
  endpoint:
    path: /get_current_binding_info
    method: GET
    data_selector: TYPE
    params: {}
- name: get_cpu_temp
  endpoint:
    path: /get_cpu_temp
    method: GET
    data_selector: TYPE
    params: {}
- name: get_batt_volt
  endpoint:
    path: /get_batt_volt
    method: GET
    data_selector: TYPE
    params: {}
- name: get_model_number
  endpoint:
    path: /get_model_number
    method: GET
    data_selector: TYPE
    params: {}
- name: get_firmware_version
  endpoint:
    path: /get_firmware_version
    method: GET
    data_selector: TYPE
    params: {}
- name: get_serial_number
  endpoint:
    path: /get_serial_number
    method: GET
    data_selector: TYPE
    params: {}
- name: Intel I225 2.5G PCIe Ethernet
  endpoint:
    path: /device-addons/i225-ethernet-card/
    method: GET
    data_selector: records
    params: {}
- name: MaxLinear XR17V3521 Dual PCIe UART
  endpoint:
    path: /device-addons/xr17v3521-dual-pcie-uart/
    method: GET
    data_selector: records
    params: {}
- name: device
  endpoint:
    path: /api/devices
    method: GET
    data_selector: devices
- name: zkOpen
  endpoint:
    path: zkOpen
    method: GET
    data_selector: returns
    params: {}
- name: zkClose
  endpoint:
    path: zkClose
    method: GET
    data_selector: returns
    params: {}
- name: zkCreateRandDataFile
  endpoint:
    path: zkCreateRandDataFile
    method: GET
    data_selector: returns
    params: {}
- name: zkGetRandBytes
  endpoint:
    path: zkGetRandBytes
    method: GET
    data_selector: returns
    params: {}
- name: zkLockDataF2F
  endpoint:
    path: zkLockDataF2F
    method: GET
    data_selector: returns
    params: {}
- name: zkUnlockDataF2F
  endpoint:
    path: zkUnlockDataF2F
    method: GET
    data_selector: returns
    params: {}
- name: bootware
  endpoint:
    path: /bootware1.3.2
    method: GET
    data_selector: records
- name: device
  endpoint:
    path: /api/device
    method: GET
    data_selector: devices
- name: status
  endpoint:
    path: /api/status
    method: GET
    data_selector: status
- name: zkRestoreWalletMasterSeedFromSLIP39
  endpoint:
    path: /api/restoreWallet
    method: POST
- name: zkAddRestoreSLIP39Mnemonic
  endpoint:
    path: /api/addRestoreMnemonic
    method: POST
- name: zkGetWalletNodeAddrFromKeySlot
  endpoint:
    path: /api/getWalletNodeAddr
    method: GET
- name: zkGetWalletKeySlotFromNodeAddr
  endpoint:
    path: /api/getWalletKeySlot
    method: GET
- name: zkSetPerimeterEventAction
  endpoint:
    path: /api/setPerimeterEventAction
    method: POST
- name: zkSetDigitalPerimeterDetectLPPeriod
  endpoint:
    path: /api/setDigitalPerimeterDetectLPPeriod
    method: POST
- name: zkSetDigitalPerimeterDetectLPMaxBits
  endpoint:
    path: /api/setDigitalPerimeterDetectLPMaxBits
    method: POST
- name: zkSetDigitalPerimeterDetectDelays
  endpoint:
    path: /api/setDigitalPerimeterDetectDelays
    method: POST
- name: zkWaitForPerimeterEvent
  endpoint:
    path: /api/waitForPerimeterEvent
    method: GET
- name: zkGetPerimeterDetectInfo
  endpoint:
    path: /api/getPerimeterDetectInfo
    method: GET
- name: zkClearPerimeterDetectEvents
  endpoint:
    path: /api/clearPerimeterDetectEvents
    method: POST
- name: zkLEDOff
  endpoint:
    path: /api/ledOff
    method: POST
- name: zkLEDOn
  endpoint:
    path: /api/ledOn
    method: POST
- name: zkLEDFlash
  endpoint:
    path: /api/ledFlash
    method: POST
- name: zkSetI2CAddr
  endpoint:
    path: /api/setI2CAddr
    method: POST
- name: zkGetTime
  endpoint:
    path: /api/getTime
    method: GET
- name: zkSetTapSensitivity
  endpoint:
    path: /api/setTapSensitivity
    method: POST
- name: zkWaitForTap
  endpoint:
    path: /api/waitForTap
    method: GET
- name: zkGetAccelerometerData
  endpoint:
    path: /api/getAccelerometerData
    method: GET
- name: zkLockBinding
  endpoint:
    path: /api/lockBinding
    method: POST
- name: zkGetCurrentBindingInfo
  endpoint:
    path: /api/getCurrentBindingInfo
    method: GET
- name: zkGetModelNumberString
  endpoint:
    path: /api/getModelNumber
    method: GET
- name: zkGetFirmwareVersionString
  endpoint:
    path: /api/getFirmwareVersion
    method: GET
- name: zkGetSerialNumberString
  endpoint:
    path: /api/getSerialNumber
    method: GET
- name: zkGetCPUTemp
  endpoint:
    path: /api/getCPUTemp
    method: GET
- name: zkGetAUXTemp
  endpoint:
    path: /api/getAUXTemp
    method: GET
- name: zkGetRTCDrift
  endpoint:
    path: /api/getRTCDrift
    method: GET
- name: zkGetBatteryVoltage
  endpoint:
    path: /api/getBatteryVoltage
    method: GET
- name: zkSetBatteryVoltageAction
  endpoint:
    path: /api/setBatteryVoltageAction
    method: POST
- name: zkSetBatteryVoltageThreshold
  endpoint:
    path: /api/setBatteryVoltageThreshold
    method: POST
- name: zkSetCPUTempAction
  endpoint:
    path: /api/setCPUTempAction
    method: POST
- name: zkSetCPULowTempThreshold
  endpoint:
    path: /api/setCPULowTempThreshold
    method: POST
- name: zkSetCPUHighTempThreshold
  endpoint:
    path: /api/setCPUHighTempThreshold
    method: POST
- name: zkSetSupervisedBootPolicy
  endpoint:
    path: /api/setSupervisedBootPolicy
    method: POST
- name: zkAddOrUpdateSupervisedBootFile
  endpoint:
    path: /api/addOrUpdateSupervisedBootFile
    method: POST
- name: zkRemoveSupervisedBootFile
  endpoint:
    path: /api/removeSupervisedBootFile
    method: POST
- name: zkGetSupervisedBootFileManifest
  endpoint:
    path: /api/getSupervisedBootFileManifest
    method: GET
- name: battery_power_questions
  endpoint:
    path: /battery_power_questions
    method: GET
    data_selector: questions
    params: {}
- name: kernel_boot_questions
  endpoint:
    path: /kernel_boot_questions
    method: GET
    data_selector: questions
    params: {}
- name: production_mode_questions
  endpoint:
    path: /production_mode_questions
    method: GET
    data_selector: questions
    params: {}
- name: other_questions
  endpoint:
    path: /other_questions
    method: GET
    data_selector: questions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Random Number Generation
  endpoint:
    path: /random_number_generation
    method: GET
    data_selector: random_data
    params: {}
- name: Lock Data
  endpoint:
    path: /lock_data
    method: POST
    data_selector: locked_data
    params: {}
- name: Unlock Data
  endpoint:
    path: /unlock_data
    method: POST
    data_selector: unlocked_data
    params: {}
- name: ECDSA
  endpoint:
    path: /ecdsa
    method: POST
    data_selector: ecdsa_data
    params: {}
- name: Key Management
  endpoint:
    path: /key_management
    method: POST
    data_selector: key_management_data
    params: {}
- name: Digital Wallet
  endpoint:
    path: /digital_wallet
    method: POST
    data_selector: wallet_data
    params: {}
- name: Zymkey Class
  endpoint:
    path: /class/zymkey.Zymkey
    method: GET
    data_selector: class_definition
    params: {}
- name: get_wallet_node_addr
  endpoint:
    path: /get_wallet_node_addr
    method: GET
- name: get_current_binding_info
  endpoint:
    path: /get_current_binding_info
    method: GET
- name: get_cpu_temp
  endpoint:
    path: /get_cpu_temp
    method: GET
- name: get_batt_volt
  endpoint:
    path: /get_batt_volt
    method: GET
- name: get_model_number
  endpoint:
    path: /get_model_number
    method: GET
- name: get_firmware_version
  endpoint:
    path: /get_firmware_version
    method: GET
- name: get_serial_number
  endpoint:
    path: /get_serial_number
    method: GET
- name: device
  endpoint:
    path: /devices
    method: GET
    data_selector: devices
- name: logs
  endpoint:
    path: /logs
    method: GET
    data_selector: logs
- name: device_info
  endpoint:
    path: /api/device/info
    method: GET
    data_selector: data
- name: device_status
  endpoint:
    path: /api/device/status
    method: GET
    data_selector: status
- name: zymkey
  endpoint:
    path: /services/data/v1.0/zymkey
    method: GET
    data_selector: records
- name: hsm4
  endpoint:
    path: /hsm4/data
    method: GET
    data_selector: records
- name: hsm6
  endpoint:
    path: /hsm6/data
    method: GET
    data_selector: records
- name: device_status
  endpoint:
    path: /devices/status
    method: GET
    data_selector: data
    params: {}
- name: device_config
  endpoint:
    path: /devices/config
    method: GET
    data_selector: configuration
    params: {}
- name: HSM4
  endpoint:
    path: /quickstart/api/
    method: GET
    data_selector: records
- name: supervised_boot
  endpoint:
    path: /supervised_boot
    method: POST
    data_selector: manifest
    params: {}
- name: device
  endpoint:
    path: /api/v1/devices
    method: GET
    data_selector: devices
- name: device
  endpoint:
    path: /api/v1/devices
    method: GET
    data_selector: data
    params: {}
- name: hsm6
  endpoint:
    path: /hsm6
    method: GET
    data_selector: data
    params: {}
- name: manifest
  endpoint:
    path: /supervised-boot/manifest
    method: POST
    data_selector: files
    params: {}
- name: manifest
  endpoint:
    path: /manifest
    method: GET
    data_selector: files
    params: {}
- name: device_status
  endpoint:
    path: /api/device/status
    method: GET
    data_selector: status
    params: {}
- name: I2C address change
  endpoint:
    path: /api/i2c/address
    method: POST
    data_selector: response
    params: {}
- name: zymbit_device
  endpoint:
    path: /api/devices
    method: GET
    data_selector: data
    params: {}
- name: LUKS
  endpoint:
    path: /services/data/vXX.X/sobjects/LUKS
    method: GET
    data_selector: records
    params: {}
- name: encrypted_data
  endpoint:
    path: /tmp/encrypted.bin
    method: GET
    data_selector: records
- name: decrypted_data
  endpoint:
    path: /tmp/decrypted.txt
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: device_data
  endpoint:
    path: /api/device/data
    method: GET
    data_selector: records
- name: secure_edge_node
  endpoint:
    path: /api/secure_edge_node
    method: GET
    data_selector: data
    params: {}
- name: secure_compute_module
  endpoint:
    path: /scm/v1
    method: GET
    data_selector: data
- name: secure_compute_module
  endpoint:
    path: /scm/data
    method: GET
    data_selector: records
- name: device_info
  endpoint:
    path: /devices/info
    method: GET
    data_selector: data
    params: {}
- name: manifest
  endpoint:
    path: /api/manifest
    method: POST
    data_selector: files
    params: {}
- name: eth0_static
  endpoint:
    path: /boot/firmware/zb_config
    method: POST
    data_selector: eth0_static
    params:
      is_eth0_static: 'true'
      eth0_static_address: 192.168.100.100
      eth0_static_netmask: 255.255.255.0
      eth0_static_gateway: 192.168.100.1
- name: wlan0_static
  endpoint:
    path: /boot/firmware/zb_config
    method: POST
    data_selector: wlan0_static
    params: {}
- name: static_dns
  endpoint:
    path: /boot/firmware/zb_config
    method: POST
    data_selector: static_dns
    params: {}
- name: supervised_boot
  endpoint:
    path: /api/supervised_boot
    method: GET
    data_selector: data
    params: {}
- name: sensor_data
  endpoint:
    path: /api/sensor_data
    method: GET
    data_selector: data
    params: {}
- name: manifest
  endpoint:
    path: /api/manifest
    method: POST
    data_selector: files
    params: {}
- name: LUKS Encryption Process
  endpoint:
    path: /mk_encr_sd_rfs.sh
    method: GET
- name: Migrate to External LUKS Storage
  endpoint:
    path: /mk_encr_ext_rfs.sh
    method: GET
- name: device_info
  endpoint:
    path: /api/device/info
    method: GET
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /api/device
    method: GET
    data_selector: devices
    params: {}
- name: device_data
  endpoint:
    path: /api/v1/device/data
    method: GET
    data_selector: data
    params: {}
- name: eth0_static
  endpoint:
    path: /boot/firmware/zb_config
    method: SET
    data_selector: eth0_static_address, eth0_static_netmask, eth0_static_gateway
    params: {}
- name: wlan0_static
  endpoint:
    path: /boot/firmware/zb_config
    method: SET
    data_selector: wlan0_static_address, wlan0_static_netmask, wlan0_static_gateway
    params: {}
- name: static_dns
  endpoint:
    path: /boot/firmware/zb_config
    method: SET
    data_selector: static_dns
    params: {}
- name: device
  endpoint:
    path: /api/v1/device
    method: GET
    data_selector: data
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in Zymbit
- Adds certificate based authentication (dot1x) for ethernet and wifi.
- Some objects may return nulls in deeply nested fields
- Requires OAuth2 setup with Zymbit connected app.
- Uses certificate based authentication (dot1x) for ethernet and wifi.
- Includes method to import wpa_supplicant.conf formatted file.
- Requires authentication setup via Zymbit's platform.
- Changes from the Pi foundation to the Pi5/CM5 firmware are incompatible with Bootware.
- It is highly recommended to use a Pi with at least 4GB of RAM. Bootware requires
  approximately 700MB of RAM overhead for image verification and encryption.
- The initial configuration process can take 30 to 60 minutes to complete depending
  on the size of the image.
- The setup process with zbcli can be completed via SSH, but an HDMI console is helpful
  to follow the progress from within zboot.
- API does not require authentication.
- It is highly recommended to use a Pi with at least 4GB of RAM.
- Bootware requires approximately 700MB of RAM overhead for image verification and
  encryption.
- Changes from the Pi foundation to the Pi5/CM5 firmware are incompatible with Bootware.
  Symptom is Bootware Updates cannot access USB Endpoints to get images.
- Example images all have the hostname of zymbit-dev and a login of zymbit and a password
  of zymbit. Please change if using for anything other than development examples.
- Requires OAuth2 authentication for all endpoints.
- Uses OAuth2 with refresh token — requires setup of connected app in zymbit
- Binding is required before using the Zymkey on a host computer
- Requires setup of connected app in Zymbit API
- API has rate limits that may affect data retrieval
- 'Supported Devices: HSM6, Secure Compute Module'
- On some newer systems (Debian Bookworm and later), kernel image and config.txt files
  may instead be located in the /boot/firmware directory.
- The linux-headers package is required if you plan on doing any out-of-tree kernel
  module-related development.
- Binding is a process where a fingerprint is made which is composed of the host computer
  and its SD card serial numbers as well as the Zymkey serial number.
- Linux kernel modules are bound to the specific kernel version against which they
  are built.
- Uses OAuth2 for authentication.
- Requires setup of connected app in api
- This API facilitates writing user space applications which use Zymkey to perform
  cryptographic operations.
- The pre-installed image is encrypted and cannot be replaced via `rpiboot` in the
  field.
- Requires setup of connected app in Zymbit
- Requires setup of OAuth2 credentials in the Zymbit portal
- Most of the problems we see are from a poor power source.
- The recommended power for the PI4 is 5V and 3 amps.
- For a PI5, the recommended power supply should provide 5V, 5 amps.
- Check that the Raspberry Pi power is sufficient.
- Make sure that you have enabled i2c support using raspi-config BEFORE your install
  the software.
- The GPU bootloader does not have encryption features implemented.
- Currently working on adding encryption features in a future product.
- ZYMKEY4 FAQ & Troubleshooting
- The script attempts to unmount the external device, but in some circumstances the
  device may stay mounted and the process will fail.
- Recommended power for the PI4 is 5V and 3 amps.
- Recommended power for the PI5 is 5V and 5 amps.
- If the directory at */var/lib/zymbit* or any of the files and/or subdirectories
  are corrupted or deleted, the HSM4 will fail to work.
- If this happens when the HSM4 is locked (i.e. Production Mode), the HSM4 can never
  be used again.
- No encryption features implemented in GPU bootloader.
- HSM4 uses GPIO header pins 3 and 5 for i2c communications and pin 7 as an interrupt
  signal to the Pi.
- On some newer systems (Debian Bookworm and later), the kernel image and config.txt
  files may instead be located in the `/boot/firmware` directory.
- The `linux-headers` package is required if you plan on doing any out-of-tree kernel
  module-related development.
- Authentication requires setup of connected app in Zymbit.
- Some API calls may require additional permissions.
- Rate limits apply to API usage.
- Requires setup of connected app in Zymbit API.
- HSM6 has a battery monitoring feature to help the user prevent the battery from
  dying.
- Cutting the Lock-Tab permanently binds that instance of HSM6 to the specific instances
  of host computer and SD card.
- Uses OAuth2 with refresh token — requires setup of connected app in Zymbit API
- Zymbit GPG key expired and was renewed on September 30, 2024.
- Most of the problems we see are from a poor power source. Start with a good power
  supply from the PI foundation or Canakit, not a phone charger.
- The recommended power for the PI4 is 5V and 3 amps. For a PI5, the recommended power
  supply should provide 5V, 5 amps.
- Good quality power supplies have a better dynamic performance and can respond very
  quickly to changes in loads.
- 'ZYMKEY supports two operating modes: Developer Mode and Production Mode'
- Cutting the Lock-Tab permanently binds that instance of Zymkey to the specific instances
  of host computer and SD card.
- Ensure correct API keys are used for authentication
- Data may vary depending on hardware version
- Ensure OAuth2 setup is completed before making requests
- API may have rate limiting on calls
- The PI sets the scaling governor to be ondemand by default.
- Switching to performance will use more battery power.
- HSM4 uses GPIO header pins 3 and 5 for i2c communications.
- 'IMPORTANT: if the directory at */var/lib/zymbit* or any of the files and/or subdirectories
  are corrupted or deleted, the HSM4 will fail to work.'
- Self-destruct mode works only after the Lock Tab has been cut.
- Once turned on, self-destruct mode is permanent.
- Cutting the Lock-Tab permanently binds that instance of HSM4 to the specific instances
  of host computer and SD card.
- Ensure the device is properly configured before making API calls.
- Authentication requires configuring OAuth2 with a refresh token.
- Ensure OAuth2 credentials are properly set up.
- No because the GPU bootloader does not have encryption features implemented
- The best solution, then, would be to implement an independent secure boot procedure.
- Ensure correct OAuth scopes are set for the application.
- HSM6 uses GPIO header pins 3 and 5 for i2c communications and pin 7 as an interrupt
  signal to the Pi.
- If the directory at */var/lib/zymbit* or any of the files and/or subdirectories
  are corrupted or deleted, the HSM6 will fail to work.
- Requires setup of OAuth2 for authentication
- Ensure that you have the correct client ID and secret
- The SD Card is NOT a secure storage location
- Requires that Zymbit Security Module operational status is 'secure'
- When encrypting your rootfs, we highly recommend turning off unattended-upgrades
  prior to the encryption process
- Data is saved in /tmp/encrypted.bin for locked data.
- Decrypted data is saved in /tmp/decrypted.txt.
- IP67 enclosure rated for dust tight and immersion up to 1m depth.
- Poor power quality can result in unstable and potentially insecure operation of
  your single board computer (SBC).
- A well-designed SBC will include elements of power management that monitor what
  is happening to the input power supply.
- Requires OAuth2 authentication for access
- API usage is limited and may require throttling
- Developer Mode is lenient and will accommodate an SD card change, or a PI4 change
  (or both). You cannot use a different ZYMKEY.
- Production Mode is strict and will not unlock an encrypted rootfs without the original
  SD card, original ZYMKEY and original PI. You cannot re-use that ZYMKEY in a different
  setup.
- Requires OAuth2 authentication for accessing API resources.
- Some endpoints may have rate limits
- Ensure proper authentication setup before accessing the API.
- The PI sets the scaling governor to be ondemand by default. We recommend switching
  this mode to performance to get the best out of the ZYMKEY.
- Requires setup of OAuth2 credentials in Zymbit portal
- Device data may vary based on configuration
- Static configuration is optional. The default settings for both eth0 and wlan0 is
  to use dhcp to configure the network.
- Values are set in userspace with the zbconfig utility, encrypted, and passed into
  zboot for use subsequent updates.
- Requires valid API credentials to access endpoints.
- The DATA partition will never be deleted during an Update process.
- If the existing DATA partition is too small, the Update process will fail and you
  will boot back into your existing configuration.
- To allow the future Updates to succeed, delete the DATA partition and the next run
  of Update will re-partition your A, B, and DATA partitions with sufficient space
  to complete the update process.
- The size of the DATA partition is specified by the user in zbcli update-config ->
  data partition size [default is 512 MB].
- If Bootware detects insufficient RAM (currently set to less than 3GB), it will try
  to create and use the data partition as space to pull the image update.
- For this reason we recommend an SD card of at least 32GB.
- In Development Mode (no bind lock), the SCM will simulate the sign/verify process
  by flashing an LED sequence of 4 followed by 2 flashes, repeated three times, and
  then boot normally.
- Ensure to configure the API keys correctly in the secrets.
- Changes from the Pi foundation to the Pi5/CM5 firmware from last week are incompatible
  with Bootware.
- Important boot files to not delete.
- Recommended to turn off unattended-upgrades prior to encryption
- Encrypting data on disk prevents a bad actor from imaging your SD card and gaining
  access to sensitive data.
- 'The process is simple: Collect Measurements, Encrypt data with HSM, Safely store
  data locally, Decrypt at a later time with HSM.'
- Steps necessary to update Bullseye with new Pi Boot Artifacts prior to installing
  Bootware
- Reboot to make sure you can still boot
- You can cleanup the download files now.
- Requires proper setup in Zymbit console.
- Ensure to follow the guidelines in the documentation for proper integration
- Some devices may return nulls in deeply nested fields
- IP67 enclosure rated for dust and liquid ingress protection.
- Some API responses may vary depending on device configuration
- Bootware creates an encrypted partition 4 called the DATA partition.
- The size of this partition is specified by the user in zbcli update-config -> data
  partition size [default is 512 MB].
- The DATA partition will not be resized or deleted until the user deletes the partition.
- 'For updates that are downloaded from an http/https endpoint: If Bootware detects
  insufficient RAM (currently set to less than 3GB), it will try to create and use
  the data partition as space to pull the image update.'
- If the DATA partition already exists, it will try to use that space.
- If the DATA partition does not exist, like on the initial update, the DATA partition
  creation overrides the size given by the user - Bootware creates a partition the
  size of 1/3rd of the SD card.
- The data partition will always be unlocked on boot up and will be available for
  the user to mount in userspace. I.E mount /dev/mapper/cryptrfs_DATA.
- Use wget to download the latest files from github
- Cleanup the download files after the update
- Ensure proper OAuth scopes are set for API access.
- Rate limiting may apply for API calls.
- The pre-installed image is encrypted and cannot be replaced via `rpiboot` in the
  field. Please contact support@zymbit.com if you require a different image.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your OAuth token.'
- '404 Not Found: Verify the endpoint path.'
- '401 Unauthorized: Check API key and permissions.'
- '404 Not Found: Ensure endpoint is correct.'
- '401 Unauthorized: Check your credentials and token validity.'
- '404 Not Found: Ensure the endpoint path is correct.'
- '403 Forbidden: Check your API key and permissions'
- '500 Internal Server Error: Retry after some time'
- '429 Too Many Requests: Rate limit exceeded'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Validate your OAuth2 token'
- '404 Not Found: Verify endpoint path'
- If the voltage drops below a specified limit, even momentarily, then HSM4 will disable
  all security services to the host.
- You will get a message either on your screen or in journalctl -fu cfg_SD_crfs during
  the second phase indicating the drive was already mounted.
- '401 Unauthorized: Check OAuth scopes or token expiration.'
- 'INVALID_CREDENTIALS: Check your client ID and secret.'
- 'RESOURCE_NOT_FOUND: Verify the endpoint and resource.'
- 'INVALID_TOKEN: Check if the token is expired or invalid.'
- 'GPG key expired: Update your local key using curl command.'
- 'INVALID_REQUEST: Check parameters and try again'
- 'UNAUTHORIZED: Verify API access permissions'
- 'NOT_FOUND: Ensure the endpoint is correct'
- '401 Unauthorized: Check your client credentials or token expiration'
- '429 Too Many Requests: You have exceeded your rate limit'
- '401 Unauthorized: Verify your API credentials.'
- '404 Not Found: Check the endpoint path.'
- '401 Unauthorized: Check your credentials and access tokens.'
- '401 Unauthorized: Check your API key and secret.'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify token validity.'
- '404 Not Found: Ensure endpoint path is correct.'
- 'Invalid I2C address: Ensure address is within the range of 0x30-0x37 or 0x60-0x67.'
- '401 Unauthorized: Check your OAuth token and scopes'
- '404 Not Found: Verify the endpoint path'
- '500 Internal Server Error: Contact support if this persists'
- '401 Unauthorized: Validate OAuth token'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Verify your authentication credentials.'
- '404 Not Found: Ensure the endpoint exists.'
- '401 Unauthorized: Check your authentication credentials.'
- '401 Unauthorized: Check your credentials'
- '404 Not Found: Make sure the endpoint is correct'
- '500 Internal Server Error: Try again later'
- '401 Unauthorized: Check your API credentials.'
- '404 Not Found: The requested resource does not exist.'
- 'INVALID_CLIENT: Check client credentials.'
- 'TOKEN_EXPIRED: Refresh token is required.'
- '403 FORBIDDEN: Check API permissions.'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: Check the endpoint path'
- '429 Too Many Requests: Rate limit exceeded, please retry later.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthToken
client:
  base_url: https://zymbit.com/api
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.zymbit.com/oauth2/token
    client_id: '{{ dlt.secrets[''zymbit_client_id''] }}'
    client_secret: '{{ dlt.secrets[''zymbit_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''zymbit_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
