resources:
- name: traces
  endpoint:
    path: /traces
    method: POST
    data_selector: data
    params: {}
- name: prompts
  endpoint:
    path: /prompts
    method: GET
    data_selector: data
    params: {}
- name: annotations
  endpoint:
    path: /annotations
    method: GET
    data_selector: data
    params: {}
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: data
    params: {}
- name: triggers
  endpoint:
    path: /triggers
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: prompts
  endpoint:
    path: /prompts/get
    method: GET
    data_selector: prompt
    params: {}
- name: ChatMessage
  endpoint:
    path: /chat/message
    method: GET
    data_selector: messages
    params: {}
- name: prompt
  endpoint:
    path: /prompt
    method: GET
- name: prompts
  endpoint:
    path: /prompts/get
    method: GET
    data_selector: prompt
- name: simulation_sets
  endpoint:
    path: /agent-simulations/simulation-sets
    method: GET
    data_selector: simulationSets
    params: {}
- name: Individual Run View
  endpoint:
    path: /agent-simulations/individual-run
    method: GET
    data_selector: scenario
    params: {}
- name: Batch Runs
  endpoint:
    path: /agent-simulations/batch-runs
    method: GET
    data_selector: batches
    params: {}
- name: traces
  endpoint:
    path: /traces
    method: POST
    data_selector: data
- name: prompts
  endpoint:
    path: /prompts
    method: GET
    data_selector: data
- name: annotations
  endpoint:
    path: /annotations
    method: GET
    data_selector: data
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: data
- name: triggers
  endpoint:
    path: /triggers
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: ChatMessage
  endpoint:
    path: /chat/message
    method: POST
    data_selector: message
- name: SpanProcessingExcludeRule
  endpoint:
    path: /span/exclude
    method: POST
    data_selector: exclude_rule
- name: traces
  endpoint:
    path: /api/traces
    method: GET
    data_selector: traces
- name: prompts
  endpoint:
    path: /api/prompts
    method: GET
    data_selector: prompts
- name: annotations
  endpoint:
    path: /api/annotations
    method: GET
    data_selector: annotations
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: datasets
- name: triggers
  endpoint:
    path: /api/triggers
    method: GET
    data_selector: triggers
- name: scenarios
  endpoint:
    path: /api/scenarios
    method: GET
    data_selector: scenarios
- name: prompt
  endpoint:
    path: /api/v1/prompts
    method: GET
    data_selector: prompts
- name: ChatMessage
  endpoint:
    path: /chat/message
    method: POST
    data_selector: messages
- name: annotations
  endpoint:
    path: /annotations
    method: POST
    data_selector: annotations
- name: annotation_queues
  endpoint:
    path: /annotation-queues
    method: POST
    data_selector: queues
- name: annotation_scoring
  endpoint:
    path: /annotation-scoring
    method: POST
    data_selector: scoring
- name: prompt
  endpoint:
    path: /api/prompts
    method: GET
    data_selector: prompts
    params: {}
- name: simulations
  endpoint:
    path: /simulations
    method: POST
    data_selector: result
    params: {}
- name: prompts
  endpoint:
    path: /prompts
    method: GET
    data_selector: prompts
- name: simulation_sets
  endpoint:
    path: /agent-simulations/simulation-sets
    method: GET
    data_selector: simulationSets
- name: individual_run_view
  endpoint:
    path: /agent-simulations/individual-run
    method: GET
- name: evaluation
  endpoint:
    path: /evaluation
    method: POST
    data_selector: results
- name: traces
  endpoint:
    path: /api/traces
    method: GET
- name: prompts
  endpoint:
    path: /api/prompts
    method: GET
- name: annotations
  endpoint:
    path: /api/annotations
    method: GET
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
- name: triggers
  endpoint:
    path: /api/triggers
    method: GET
- name: scenarios
  endpoint:
    path: /api/scenarios
    method: GET
- name: evaluation
  endpoint:
    path: /llm-evaluation/offline/code/evaluation-api
    method: POST
    data_selector: results
    params: {}
- name: evaluation
  endpoint:
    path: /llm-evaluation/offline/code/evaluation-api
    method: GET
    data_selector: results
    params: {}
- name: annotations
  endpoint:
    path: /annotations
    method: POST
    data_selector: records
- name: annotation_queues
  endpoint:
    path: /annotation-queues
    method: POST
    data_selector: records
- name: annotation_scoring
  endpoint:
    path: /annotation-scoring
    method: POST
    data_selector: records
- name: evaluation
  endpoint:
    path: /evaluation
    method: POST
    data_selector: evaluation_result
- name: prompt
  endpoint:
    path: /prompt
    method: GET
    data_selector: prompt
    params: {}
- name: prompts
  endpoint:
    path: /prompt-management
    method: GET
    data_selector: prompts
    params: {}
- name: traces
  endpoint:
    path: /api/traces
    method: POST
    data_selector: data
- name: annotations
  endpoint:
    path: /api/annotations
    method: GET
    data_selector: data
- name: prompts
  endpoint:
    path: /api/prompts
    method: GET
    data_selector: prompts
    params: {}
- name: get_latest_traces
  endpoint:
    path: /get_latest_traces
    method: GET
    data_selector: traces
    params:
      pageOffset: optional
      daysBackToSearch: optional
- name: get_trace_by_id
  endpoint:
    path: /get_trace_by_id
    method: GET
    data_selector: trace
    params:
      id: required
- name: evaluation
  endpoint:
    path: /evaluation
    method: POST
    data_selector: results
- name: evaluation
  endpoint:
    path: /llm-evaluation/offline/code/evaluation-api
    method: GET
    data_selector: data
    params: {}
- name: evaluation
  endpoint:
    path: /llm-evaluation/offline/code/evaluation-api
    method: GET
    data_selector: results
- name: traces
  endpoint:
    path: /traces
    method: GET
    data_selector: traces
- name: prompts
  endpoint:
    path: /prompts
    method: GET
    data_selector: prompts
- name: annotations
  endpoint:
    path: /annotations
    method: GET
    data_selector: annotations
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
- name: triggers
  endpoint:
    path: /triggers
    method: GET
    data_selector: triggers
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: scenarios
notes:
- API key should be set via environment variable LANGWATCH_API_KEY.
- Your LangWatch API key is recommended to be set via an environment variable.
- API key should be set via an environment variable (e.g., LANGWATCH_API_KEY)
- Recommended to set API key via environment variable
- Your LangWatch API key should be set via an environment variable (e.g., LANGWATCH_API_KEY).
- The endpoint URL defaults to LangWatch Cloud service.
- If True, suppresses the warning that is normally emitted if a span is created without
  an active parent trace.
- API key should be set as an environment variable.
- Handles formatting messages with variables using Liquid templating.
- Grab your LangWatch account and get your API key ready
- Prompts are only accessible within the project
- Manage AI prompts as code with version control and dependency management
- API key required for authentication.
- Your LangWatch API key is mandatory and must be provided.
- The endpoint for the LangWatch API defaults to https://app.langwatch.ai if not specified.
- This will prompt you for an API key if the environment variable is not set.
- Uses OAuth2 with refresh token — requires setup of connected app in LangWatch
- Grab your LangWatch API key ready
- Uses API key for authentication.
- Sign up at app.langwatch.ai and find your API key in your project settings.
- Prompts are accessible within the project
- Ensure that your LANGWATCH_API_KEY is correctly set in your environment.
- Be sure to login or create an account on the link that will be displayed, then provide
  your API key when prompted.
- Get your LangWatch API Key from project settings.
- The SDK will automatically use the LANGWATCH_API_KEY environment variable if it
  is set.
- Some objects may return nulls in deeply nested fields
- The LangWatch endpoint URL. Defaults to the LANGWATCH_ENDPOINT environment variable
  or https://app.langwatch.ai.
- Requires a LangWatch account and API key.
- Ensure you have `curl` installed on your system.
- Uses OAuth2 for authentication
- This script produces a detailed, multi-faceted evaluation of your AI coach.
- Uses API key for authentication — requires setup in app.langwatch.ai
- Uses API key for authentication
- Integrates with OpenTelemetry
- Requires LangWatch API key for authentication
- Environment variables should be set for API keys
errors:
- '401 Unauthorized: Recheck API key or permissions'
- '401 Unauthorized: Recheck API key validity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check your API key.'
- '401 Unauthorized: Check your API key'
- '404 Not Found: Verify the endpoint path'
- '500 Internal Server Error: Try again later'
auth_info:
  mentioned_objects:
  - OauthToken
client:
  base_url: https://app.langwatch.ai
  auth:
    type: oauth2
source_metadata: null
