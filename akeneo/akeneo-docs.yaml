resources:
- name: list_products
  endpoint:
    path: /api/rest/v1/products-uuid
    method: GET
- name: create_product
  endpoint:
    path: /api/rest/v1/products-uuid
    method: POST
- name: update_create_products
  endpoint:
    path: /api/rest/v1/products-uuid
    method: PATCH
- name: search_products
  endpoint:
    path: /api/rest/v1/products-uuid/search
    method: POST
- name: get_product
  endpoint:
    path: /api/rest/v1/products-uuid/{uuid}
    method: GET
- name: update_create_product
  endpoint:
    path: /api/rest/v1/products-uuid/{uuid}
    method: PATCH
- name: delete_product
  endpoint:
    path: /api/rest/v1/products-uuid/{uuid}
    method: DELETE
- name: submit_draft
  endpoint:
    path: /api/rest/v1/products-uuid/{uuid}/proposal
    method: POST
- name: get_draft
  endpoint:
    path: /api/rest/v1/products-uuid/{uuid}/draft
    method: GET
- name: list_of_products
  endpoint:
    path: /api/rest/v1/products
    method: GET
- name: create_product
  endpoint:
    path: /api/rest/v1/products
    method: POST
- name: update_create_multiple_products
  endpoint:
    path: /api/rest/v1/products
    method: PATCH
- name: get_product
  endpoint:
    path: /api/rest/v1/products/{code}
    method: GET
- name: update_create_single_product
  endpoint:
    path: /api/rest/v1/products/{code}
    method: PATCH
- name: delete_product
  endpoint:
    path: /api/rest/v1/products/{code}
    method: DELETE
- name: submit_draft_for_approval
  endpoint:
    path: /api/rest/v1/products/{code}/proposal
    method: POST
- name: get_draft
  endpoint:
    path: /api/rest/v1/products/{code}/draft
    method: GET
- name: product_model
  endpoint:
    path: /product-models
    method: GET
- name: create_product_model
  endpoint:
    path: /product-models
    method: POST
- name: bulk_update_product_model
  endpoint:
    path: /product-models
    method: PATCH
- name: specific_product_model
  endpoint:
    path: /product-models/{code}
    method: GET
- name: update_create_product_model
  endpoint:
    path: /product-models/{code}
    method: PATCH
- name: delete_product_model
  endpoint:
    path: /product-models/{code}
    method: DELETE
- name: submit_draft
  endpoint:
    path: /product-models/{code}/proposal
    method: POST
- name: get_draft
  endpoint:
    path: /product-models/{code}/draft
    method: GET
- name: product_media_files
  endpoint:
    path: /media-files
    method: GET
- name: create_product_media_file
  endpoint:
    path: /media-files
    method: POST
- name: specific_media_file
  endpoint:
    path: /media-files/{code}
    method: GET
- name: download_media_file
  endpoint:
    path: /media-files/{code}/download
    method: GET
- name: published_products
  endpoint:
    path: /published-products
    method: GET
- name: specific_published_product
  endpoint:
    path: /published-products/{code}
    method: GET
- name: launch_export_job
  endpoint:
    path: /jobs/export/{code}
    method: POST
- name: launch_import_job
  endpoint:
    path: /jobs/import/{code}
    method: POST
- name: export_job
  endpoint:
    path: /jobs/export/{code}
    method: POST
- name: import_job
  endpoint:
    path: /jobs/import/{code}
    method: POST
- name: family_list
  endpoint:
    path: /families
    method: GET
- name: create_family
  endpoint:
    path: /families
    method: POST
- name: update_create_families
  endpoint:
    path: /families
    method: PATCH
- name: single_family
  endpoint:
    path: /families/{code}
    method: GET
- name: update_create_family
  endpoint:
    path: /families/{code}
    method: PATCH
- name: delete_family
  endpoint:
    path: /families/{code}
    method: DELETE
- name: create_family_variant
  endpoint:
    path: /families/{family_code}/variants
    method: POST
- name: family_variants_list
  endpoint:
    path: /families/{family_code}/variants
    method: GET
- name: update_create_family_variants
  endpoint:
    path: /families/{family_code}/variants
    method: PATCH
- name: single_family_variant
  endpoint:
    path: /families/{family_code}/variants/{code}
    method: GET
- name: update_create_family_variant
  endpoint:
    path: /families/{family_code}/variants/{code}
    method: PATCH
- name: attribute
  endpoint:
    path: /api/rest/v1/attributes
    method: GET
- name: attribute
  endpoint:
    path: /api/rest/v1/attributes
    method: POST
- name: attribute
  endpoint:
    path: /api/rest/v1/attributes
    method: PATCH
- name: attribute
  endpoint:
    path: /api/rest/v1/attributes/{code}
    method: GET
- name: attribute
  endpoint:
    path: /api/rest/v1/attributes/{code}
    method: PATCH
- name: attribute_option
  endpoint:
    path: /api/rest/v1/attributes/{attribute_code}/options
    method: GET
- name: attribute_option
  endpoint:
    path: /api/rest/v1/attributes/{attribute_code}/options
    method: POST
- name: attribute_option
  endpoint:
    path: /api/rest/v1/attributes/{attribute_code}/options
    method: PATCH
- name: attribute_option
  endpoint:
    path: /api/rest/v1/attributes/{attribute_code}/options/{code}
    method: GET
- name: attribute_option
  endpoint:
    path: /api/rest/v1/attributes/{attribute_code}/options/{code}
    method: PATCH
- name: attribute_group
  endpoint:
    path: /api/rest/v1/attribute-groups
    method: GET
- name: attribute_group
  endpoint:
    path: /api/rest/v1/attribute-groups
    method: POST
- name: attribute_group
  endpoint:
    path: /api/rest/v1/attribute-groups
    method: PATCH
- name: attribute_group
  endpoint:
    path: /api/rest/v1/attribute-groups/{code}
    method: GET
- name: attribute_group
  endpoint:
    path: /api/rest/v1/attribute-groups/{code}
    method: PATCH
- name: association_type
  endpoint:
    path: /association-types
    method: GET
- name: association_type
  endpoint:
    path: /association-types
    method: POST
- name: association_type
  endpoint:
    path: /association-types
    method: PATCH
- name: association_type_specific
  endpoint:
    path: /association-types/{code}
    method: GET
- name: association_type_specific
  endpoint:
    path: /association-types/{code}
    method: PATCH
- name: category
  endpoint:
    path: /categories
    method: GET
- name: category
  endpoint:
    path: /categories
    method: POST
- name: category
  endpoint:
    path: /categories
    method: PATCH
- name: category_specific
  endpoint:
    path: /categories/{code}
    method: GET
- name: category_specific
  endpoint:
    path: /categories/{code}
    method: PATCH
- name: category_media_file
  endpoint:
    path: /category-media-files
    method: POST
- name: category_media_file_download
  endpoint:
    path: /category-media-files/{file_path}/download
    method: GET
- name: channel
  endpoint:
    path: /channels
    method: GET
- name: channel
  endpoint:
    path: /channels
    method: POST
- name: channel
  endpoint:
    path: /channels
    method: PATCH
- name: channel_specific
  endpoint:
    path: /channels/{code}
    method: GET
- name: channel_specific
  endpoint:
    path: /channels/{code}
    method: PATCH
- name: locale
  endpoint:
    path: /api/rest/v1/locales
    method: GET
- name: locale_detail
  endpoint:
    path: /api/rest/v1/locales/{code}
    method: GET
- name: currency
  endpoint:
    path: /api/rest/v1/currencies
    method: GET
- name: currency_detail
  endpoint:
    path: /api/rest/v1/currencies/{code}
    method: GET
- name: measure_family
  endpoint:
    path: /api/rest/v1/measure-families
    method: GET
- name: measure_family_detail
  endpoint:
    path: /api/rest/v1/measure-families/{code}
    method: GET
- name: measurement_family
  endpoint:
    path: /api/rest/v1/measurement-families
    method: GET
- name: measurement_family_update
  endpoint:
    path: /api/rest/v1/measurement-families
    method: PATCH
- name: reference_entity
  endpoint:
    path: /api/rest/v1/reference-entities
    method: GET
- name: reference_entity_detail
  endpoint:
    path: /api/rest/v1/reference-entities/{code}
    method: GET
- name: reference_entity_update
  endpoint:
    path: /api/rest/v1/reference-entities/{code}
    method: PATCH
- name: reference_entity_attribute
  endpoint:
    path: /api/rest/v1/reference-entities/{reference_entity_code}/attributes
    method: GET
- name: reference_entity_attribute_detail
  endpoint:
    path: /api/rest/v1/reference-entities/{reference_entity_code}/attributes/{code}
    method: GET
- name: reference_entity_attribute_update
  endpoint:
    path: /api/rest/v1/reference-entities/{reference_entity_code}/attributes/{code}
    method: PATCH
- name: reference_entity_attribute_option
  endpoint:
    path: /api/rest/v1/reference-entities/{reference_entity_code}/attributes/{attribute_code}/options
    method: GET
- name: specific_reference_entity_attribute_option
  endpoint:
    path: /api/rest/v1/reference-entities/{reference_entity_code}/attributes/{attribute_code}/options/{code}
    method: GET
- name: update_create_reference_entity_attribute_option
  endpoint:
    path: /api/rest/v1/reference-entities/{reference_entity_code}/attributes/{attribute_code}/options/{code}
    method: PATCH
- name: reference_entity_record_list
  endpoint:
    path: /api/rest/v1/reference-entities/{reference_entity_code}/records
    method: GET
- name: update_create_reference_entity_records
  endpoint:
    path: /api/rest/v1/reference-entities/{reference_entity_code}/records
    method: PATCH
- name: specific_reference_entity_record
  endpoint:
    path: /api/rest/v1/reference-entities/{reference_entity_code}/records/{code}
    method: GET
- name: update_create_specific_reference_entity_record
  endpoint:
    path: /api/rest/v1/reference-entities/{reference_entity_code}/records/{code}
    method: PATCH
- name: create_reference_entity_media_file
  endpoint:
    path: /api/rest/v1/reference-entities-media-files
    method: POST
- name: download_reference_entity_media_file
  endpoint:
    path: /api/rest/v1/reference-entities-media-files/{code}
    method: GET
- name: asset_family_list
  endpoint:
    path: /api/rest/v1/asset-families
    method: GET
- name: specific_asset_family
  endpoint:
    path: /api/rest/v1/asset-families/{code}
    method: GET
- name: update_create_asset_family
  endpoint:
    path: /api/rest/v1/asset-families/{code}
    method: PATCH
- name: asset_family_attributes_list
  endpoint:
    path: /api/rest/v1/asset-families/{asset_family_code}/attributes
    method: GET
- name: specific_asset_family_attribute
  endpoint:
    path: /api/rest/v1/asset-families/{asset_family_code}/attributes/{code}
    method: GET
- name: update_create_asset_family_attribute
  endpoint:
    path: /api/rest/v1/asset-families/{asset_family_code}/attributes/{code}
    method: PATCH
- name: asset_attribute_option
  endpoint:
    path: /api/rest/v1/asset-families/{asset_family_code}/attributes/{attribute_code}/options
    method: GET
- name: asset_attribute_option_detail
  endpoint:
    path: /api/rest/v1/asset-families/{asset_family_code}/attributes/{attribute_code}/options/{code}
    method: GET
- name: update_create_asset_attribute_option
  endpoint:
    path: /api/rest/v1/asset-families/{asset_family_code}/attributes/{attribute_code}/options/{code}
    method: PATCH
- name: create_asset_media_file
  endpoint:
    path: /api/rest/v1/asset-media-files
    method: POST
- name: download_asset_media_file
  endpoint:
    path: /api/rest/v1/asset-media-files/{code}
    method: GET
- name: asset_list
  endpoint:
    path: /api/rest/v1/asset-families/{asset_family_code}/assets
    method: GET
- name: update_create_several_assets
  endpoint:
    path: /api/rest/v1/asset-families/{asset_family_code}/assets
    method: PATCH
- name: asset_detail
  endpoint:
    path: /api/rest/v1/asset-families/{asset_family_code}/assets/{code}
    method: GET
- name: update_create_asset
  endpoint:
    path: /api/rest/v1/asset-families/{asset_family_code}/assets/{code}
    method: PATCH
- name: delete_asset
  endpoint:
    path: /api/rest/v1/asset-families/{asset_family_code}/assets/{code}
    method: DELETE
- name: catalog_list
  endpoint:
    path: /api/rest/v1/catalogs
    method: GET
- name: create_catalog
  endpoint:
    path: /api/rest/v1/catalogs
    method: POST
- name: catalog_detail
  endpoint:
    path: /api/rest/v1/catalogs/{id}
    method: GET
- name: update_catalog
  endpoint:
    path: /api/rest/v1/catalogs/{id}
    method: PATCH
- name: delete_catalog
  endpoint:
    path: /api/rest/v1/catalogs/{id}
    method: DELETE
- name: duplicate_catalog
  endpoint:
    path: /api/rest/v1/catalogs/{id}/duplicate
    method: POST
- name: catalog_product_uuids
  endpoint:
    path: /catalogs/{id}/product-uuids
    method: GET
- name: catalog_products
  endpoint:
    path: /catalogs/{id}/products
    method: GET
- name: catalog_product
  endpoint:
    path: /catalogs/{id}/products/{uuid}
    method: GET
- name: catalog_mapped_products
  endpoint:
    path: /catalogs/{id}/mapped-products
    method: GET
- name: catalog_mapped_models
  endpoint:
    path: /catalogs/{id}/mapped-models
    method: GET
- name: catalog_mapped_variants
  endpoint:
    path: /catalogs/{id}/mapped-models/{model_code}/variants
    method: GET
- name: product_mapping_schema_create_update
  endpoint:
    path: /catalogs/{id}/mapping-schemas/product
    method: PUT
- name: product_mapping_schema
  endpoint:
    path: /catalogs/{id}/mapping-schemas/product
    method: GET
- name: product_mapping_schema_delete
  endpoint:
    path: /catalogs/{id}/mapping-schemas/product
    method: DELETE
- name: ui_extensions_list
  endpoint:
    path: /ui-extensions
    method: GET
- name: ui_extension_create
  endpoint:
    path: /ui-extensions
    method: POST
- name: ui_extension_update
  endpoint:
    path: /ui-extensions/{uuid}
    method: PATCH
- name: ui_extension_delete
  endpoint:
    path: /ui-extensions/{uuid}
    method: DELETE
- name: app_record
  endpoint:
    method: POST
- name: manage_team
  endpoint:
    path: /app-portal/manage-your-team
    method: GET
- name: company_profile
  endpoint:
    path: /app-portal/company-profile
    method: GET
- name: digital_asset_manager_integration
- name: ecommerce_integration
- name: translation_solution_integration
- name: erp_integration
- name: syndication_solution
- name: print_solution_integration
- name: authorization_scopes
  endpoint:
    path: /connect/apps/v1/authorize
    method: GET
    params:
      response_type: code
      client_id: '{{ dlt.secrets[''oauth_client_id''] }}'
      scope: '{{ dlt.secrets[''requested_scopes''] }}'
      state: '{{ dlt.secrets[''state''] }}'
- name: products
  endpoint:
    path: /products
    method: GET
- name: scopes_update_notification
  endpoint:
    path: /connect/apps/v1/scopes/update
    method: POST
    params:
      scopes: '[REQUESTED_SCOPES]'
- name: catalogs
  endpoint:
    path: /api/rest/v1/catalogs
    method: GET
- name: product_mapping
  endpoint:
    path: /mapping/product/1.0.3/schema
    method: POST
    data_selector: properties
- name: product_data
  endpoint:
    method: GET
- name: asset_family
  endpoint:
    path: /asset-families/{code}
    method: GET
    data_selector: .
    params:
      attribute_as_main_media: main_image
      naming_convention:
        source:
          property: main_asset_image
        pattern: /(?P<product_ref>.*)\.jpg/
        abort_asset_creation_on_error: true
      product_link_rules:
      - product_selections:
        - field: sku
          operator: '='
          value: '{{product_ref}}'
        assign_assets_to:
        - attribute: model_pictures
          mode: replace
      transformations:
      - label: Thumbnail plus black and white transformation
        filename_suffix: _thumbnailBW
        source:
          attribute: main_image
        target:
          attribute: thumbnail
        operations:
        - type: resize
          parameters:
            width: 150
            height: 150
        - type: colorspace
          parameters:
            colorspace: grey
- name: asset_attribute
  endpoint:
    path: /asset-attributes
    method: GET
    data_selector: attributes
- name: media_file
  endpoint:
    path: /media_file
    method: GET
    data_selector: media_file
    params:
      media_type: image
      allowed_extensions:
      - jpg
      max_file_size: 10
- name: media_link
  endpoint:
    path: /media_link
    method: GET
    data_selector: media_link
    params:
      media_type: image
      prefix: dam.com/my_assets/
- name: boolean
  endpoint:
    path: /boolean
    method: GET
    data_selector: boolean
- name: date
  endpoint:
    path: /date
    method: GET
    data_selector: date
- name: record
  endpoint:
    path: /record
    method: GET
    data_selector: record
    params:
      reference_entity: brand
- name: asset
  endpoint:
    path: /api/rest/v1/attributes/AssetCollectionAttributeCode
    method: GET
    data_selector: reference_data_name
- name: asset_values
  endpoint:
    path: /assets/values
    method: GET
    data_selector: values
- name: record_attributes
  endpoint:
    path: /assets/record_attributes
    method: GET
    data_selector: values
- name: asset_localizable_values
  endpoint:
    path: /assets/localizable_values
    method: GET
    data_selector: values
- name: asset_scopable_values
  endpoint:
    path: /assets/scopable_values
    method: GET
    data_selector: values
- name: asset_localizable_scopable_values
  endpoint:
    path: /assets/localizable_scopable_values
    method: GET
    data_selector: values
- name: asset_nonlocalizable_nonscopable_values
  endpoint:
    path: /assets/nonlocalizable_nonscopable_values
    method: GET
    data_selector: values
- name: media_file
  endpoint:
    path: /api/rest/v1/asset-media-files/{file_path}
    method: GET
- name: media_link
  endpoint:
    path: /api/rest/v1/asset-media-files/{file_path}
    method: GET
- name: product_link_rule
  endpoint:
    method: GET
- name: product_selections
  endpoint:
    path: /product_selections
    method: POST
    data_selector: product_selections
    params:
      field: FIELD_NAME
      operator: OPERATOR_NAME
      value: VALUE
      locale: SELECTION_LOCALE_CODE
      channel: SELECTION_CHANNEL_CODE
- name: product_link_rule
  endpoint:
    params:
      assign_assets_to:
      - mode: MODE_NAME
        attribute: ATTRIBUTE_CODE
        locale: LOCALE_CODE
        channel: CHANNEL_CODE
- name: product_link_rules
  endpoint:
    path: /services/data/vXX.X/sobjects/ProductLinkRules
    method: POST
    data_selector: product_link_rules
- name: thumbnail
  endpoint:
    params:
      width: integer_greater_than_0
      height: integer_greater_than_0
- name: scale
  endpoint:
    params:
      width: integer_greater_than_0
      height: integer_greater_than_0
      ratio: integer_greater_than_0
- name: colorspace
  endpoint:
    params:
      colorspace:
      - rgb
      - grey
- name: resolution
  endpoint:
    params:
      resolution-x: integer_greater_than_0
      resolution-y: integer_greater_than_0
      resolution-unit:
      - ppi
      - ppc
- name: resize
  endpoint:
    params:
      width: integer_greater_than_0
      height: integer_greater_than_0
- name: optimize_jpeg
  endpoint:
    params:
      quality: integer_between_0_and_100_exclusive
- name: products_uuid
  endpoint:
    path: /api/rest/v1/products-uuid
    method: GET
    data_selector: null
    params:
      search: '{"PRODUCT_PROPERTY":[{"operator":"OPERATOR","value":"VALUE"}]}'
- name: published_products
  endpoint:
    path: /api/rest/v1/published-products
    method: GET
    data_selector: null
    params:
      search: '{"categories":[{"operator":"IN","value":["winter_collection"]}]}'
- name: published_products_status
  endpoint:
    path: /api/rest/v1/published-products
    method: GET
    data_selector: search
    params:
      enabled:
        operator: '='
        value: false
- name: published_products_completeness
  endpoint:
    path: /api/rest/v1/published-products
    method: GET
    data_selector: search
    params:
      completeness:
        operator: '='
        value: 100
        scope: ecommerce
- name: published_products_completeness_locales
  endpoint:
    path: /api/rest/v1/published-products
    method: GET
    data_selector: search
    params:
      completeness:
        operator: GREATER OR EQUALS THAN ON ALL LOCALES
        value: 100
        locales:
        - en_US
        - fr_FR
        scope: ecommerce
- name: published_products
  endpoint:
    path: /api/rest/v1/published-products
    method: GET
    params:
      search: JSON structure for filtering
- name: published_products_completeness
  endpoint:
    path: /api/rest/v1/published-products
    method: GET
    params:
      search:
        completeness:
        - operator: '='
          value: 100
          scope: ecommerce
- name: published_products_completeness_locales
  endpoint:
    path: /api/rest/v1/published-products
    method: GET
    params:
      search:
        completeness:
        - operator: GREATER OR EQUALS THAN ON ALL LOCALES
          value: 100
          locales:
          - en_US
          - fr_FR
          scope: ecommerce
- name: published_products_groups
  endpoint:
    path: /api/rest/v1/published-products
    method: GET
    params:
      search:
        groups:
        - operator: IN
          value:
          - promotion
- name: published_products_families
  endpoint:
    path: /api/rest/v1/published-products
    method: GET
    params:
      search:
        family:
        - operator: NOT IN
          value:
          - camcorders
          - digital_cameras
- name: published_products
  endpoint:
    path: /api/rest/v1/published-products
    method: GET
    params:
      search:
        created:
        - operator: '='
          value: YYYY-MM-DD hh:mm:ss
        updated:
        - operator: SINCE LAST N DAYS
          value: 4
- name: published_products
  endpoint:
    path: /api/rest/v1/published-products
    method: GET
    params:
      search: ATTRIBUTE_CODE:[{"operator":OPERATOR,"value":VALUE,"locale":LOCALE_CODE,"scope":CHANNEL_CODE}]
      search_locale: LOCALE_CODE
- name: published_products
  endpoint:
    params:
      search_scope: ecommerce
- name: published_products
  endpoint:
    path: /api/rest/v1/published-products
    method: GET
    params:
      attributes: description
      locales: en_US
      scope: ecommerce
- name: locales
  endpoint:
    path: /api/rest/v1/locales
    method: GET
    params:
      search: '{"enabled":[{"operator":"=","value":true}]}'
- name: currencies
  endpoint:
    path: /api/rest/v1/currencies
    method: GET
    params:
      search: '{"enabled":[{"operator":"=","value":true}]}'
- name: reference_entity_records_by_code
  endpoint:
    path: /api/rest/v1/reference-entities/brands/records
    method: GET
    params:
      search: '{"code":[{"operator":"IN","value":["code1","code2"]}]}'
- name: reference_entity_records_by_completeness
  endpoint:
    path: /api/rest/v1/reference-entities/brands/records
    method: GET
    params:
      search: '{"complete":{"operator":"=","value":true,"channel":"ecommerce","locales":["en_US"]}}'
- name: categories_by_update_date
  endpoint:
    path: /api/rest/v1/categories
    method: GET
    params:
      search: '{"updated":[{"operator":">","value":"2021-05-17T10:00:00Z"}]}'
- name: reference_entity_records
  endpoint:
    path: /api/rest/v1/reference-entities/brands/records
    method: GET
    params:
      locales: en_US,fr_FR
      channel: ecommerce
- name: asset_by_code
  endpoint:
    path: /asset-families/model_pictures/assets
    method: GET
    data_selector: items
    params:
      search: '{"code":[{"operator":"IN","value":["code1","code2"]}]}'
- name: categories_by_update_date
  endpoint:
    path: /categories
    method: GET
    data_selector: items
    params:
      search: '{"updated":[{"operator":">","value":"2021-05-17T10:00:00Z"}]}'
- name: asset_values_by_locale
  endpoint:
    path: /asset-families/model_pictures/assets
    method: GET
    data_selector: items
    params:
      locales: en_US,fr_FR
- name: asset_values_by_channel
  endpoint:
    path: /api/rest/v1/asset-families/model_pictures/assets
    method: GET
    params:
      channel: ecommerce
- name: attributes_by_code
  endpoint:
    path: /api/rest/v1/attributes
    method: GET
    params:
      search: '{"code":[{"operator":"IN","value":["code1","code2"]}]}'
- name: categories_by_update_date
  endpoint:
    path: /api/rest/v1/categories
    method: GET
    params:
      search: '{"updated":[{"operator":">","value":"2021-05-17T10:00:00Z"}]}'
- name: published_products_groups_families
  endpoint:
    path: /api/rest/v1/published-products
    method: GET
    data_selector: search
    params:
      groups:
        operator: IN
        value:
        - promotion
      family:
        operator: NOT IN
        value:
        - camcorders
        - digital_cameras
- name: published_products_creation_update_date
  endpoint:
    path: /api/rest/v1/published-products
    method: GET
    data_selector: search
    params:
      created:
        operator: '='
        value: '2016-07-04 10:00:00'
      updated:
        operator: SINCE LAST N DAYS
        value: 4
- name: attributes_filter_by_type
  endpoint:
    path: /attributes
    method: GET
    params:
      search: '{"type":[{"operator":"IN","value":["pim_catalog_simpleselect","pim_catalog_multiselect"]}]}'
- name: attributes_filter_by_main_identifier
  endpoint:
    path: /attributes
    method: GET
    params:
      search: '{"is_main_identifier":[{"operator":"=","value":true}]}'
- name: attribute_groups_filter_by_codes
  endpoint:
    path: /attribute-groups
    method: GET
    params:
      search: '{"code":[{"operator":"IN","value":["marketing","technical"]}]}'
- name: categories_filter_by_update_date
  endpoint:
    path: /categories
    method: GET
    params:
      search: '{"updated":[{"operator":">","value":"2021-05-17T10:00:00Z"}]}'
- name: families_filter_by_codes
  endpoint:
    path: /families
    method: GET
    params:
      search: '{"code":[{"operator":"IN","value":["family_code1","family_code2"]}]}'
- name: categories
  endpoint:
    params:
      search: '{"updated":[{"operator":">","value":"2021-05-17T10:00:00Z"}]}'
- name: families
  endpoint:
    params:
      search: '{"has_products":[{"operator":"=","value":true}]}'
- name: categories
  endpoint:
    params:
      search: '{"is_root":[{"operator":"=","value":true}]}'
- name: categories
  endpoint:
    params:
      search: '{"parent":[{"operator":"=","value":"categoryA"}]}'
- name: categories
  endpoint:
    params:
      search: '{"code":[{"operator":"IN","value":["category_code1","category_code2"]}]}'
- name: categories
  endpoint:
    path: /api/rest/v1/categories
    method: GET
    params:
      search: '{updated:[{operator:>,value:2021-05-17T10:00:00Z}]}'
- name: product_models_filtered_by_parent
  endpoint:
    path: /api/rest/v1/product-models
    method: GET
    data_selector: null
    params:
      search: '{"parent":[{"operator":"IN","value":["tshirt_armor"]}]}'
- name: root_product_models
  endpoint:
    path: /api/rest/v1/product-models
    method: GET
    data_selector: null
    params:
      search: '{"parent":[{"operator":"EMPTY"}]}'
- name: sub_product_models
  endpoint:
    path: /api/rest/v1/product-models
    method: GET
    data_selector: null
    params:
      search: '{"parent":[{"operator":"NOT EMPTY"}]}'
- name: products_filtered_by_quality_score
  endpoint:
    path: /api/rest/v1/products-uuid
    method: GET
    data_selector: null
    params:
      search: '{"quality_score":[{"operator":"IN","value":["D"],"scope":"ecommerce","locale":"en_US"}]}'
- name: products_filtered_by_quality_score_multiple
  endpoint:
    path: /api/rest/v1/products-uuid
    method: GET
    data_selector: null
    params:
      search: '{"quality_score":[{"operator":"IN","value":["A","B"],"scope":"mobile","locale":"en_GB"}]}'
- name: product_models_filtered_by_identifier
  endpoint:
    path: /api/rest/v1/product-models
    method: GET
    data_selector: null
    params:
      search: '{"identifier":[{"operator":"IN","value":["amor","apollon"]}]}'
- name: product_models
  endpoint:
    path: /api/rest/v1/product-models
    method: GET
    params:
      search:
        categories:
        - operator: IN
          value:
          - example_category
        - operator: NOT IN
          value:
          - example_category
        - operator: IN OR UNCLASSIFIED
          value:
          - example_category
        - operator: IN CHILDREN
          value:
          - example_category
        - operator: NOT IN CHILDREN
          value:
          - example_category
        - operator: UNCLASSIFIED
          value: []
        completeness:
        - operator: AT LEAST COMPLETE
          locales:
          - example_locale
          scope: example_scope
        - operator: AT LEAST INCOMPLETE
          locales:
          - example_locale
          scope: example_scope
        - operator: ALL COMPLETE
          locale: example_locale
          scope: example_scope
        - operator: ALL INCOMPLETE
          locale: example_locale
          scope: example_scope
- name: product_model_family
  endpoint:
    path: /api/rest/v1/product-models
    method: GET
    data_selector: ''
    params:
      search: '{"family":[{"operator":"IN","value":["example_family"]}]}'
- name: product_model_creation_update
  endpoint:
    path: /api/rest/v1/product-models
    method: GET
    data_selector: ''
    params:
      search: '{"created":[{"operator":"=","value":"YYYY-MM-DD hh:mm:ss"}]}'
- name: product_models
  endpoint:
    path: /product-models
    method: GET
    params:
      search: '{"parent":[{"operator":"IN","value":["tshirt_armor"]}]}'
- name: root_product_models
  endpoint:
    path: /product-models
    method: GET
    params:
      search: '{"parent":[{"operator":"EMPTY"}]}'
- name: sub_product_models
  endpoint:
    path: /product-models
    method: GET
    params:
      search: '{"parent":[{"operator":"NOT EMPTY"}]}'
- name: products
  endpoint:
    path: /api/rest/v1/products-uuid
    method: GET
    params:
      search: JSON
- name: published_products
  endpoint:
    path: /api/rest/v1/published-products
    method: GET
    params:
      search: JSON
      search_locale: LOCALE_CODE
- name: published_products
  endpoint:
    params:
      search_scope: existing channel code
- name: published_products
  endpoint:
    path: /published-products
    method: GET
    params:
      attributes: description
      locales: en_US
      scope: ecommerce
- name: families_list
  endpoint:
    path: /api/rest/v1/families
    method: GET
- name: family_details
  endpoint:
    path: /api/rest/v1/families/{code}
    method: GET
- name: family_create
  endpoint:
    path: /api/rest/v1/families
    method: POST
- name: family_partial_update
  endpoint:
    path: /api/rest/v1/families/{code}
    method: PATCH
- name: product_delete
  endpoint:
    path: /api/rest/v1/products-uuid/{uuid}
    method: DELETE
- name: categories
  endpoint:
    path: /categories*
    method: GET
- name: categories
  endpoint:
    path: /categories*
    method: POST
- name: categories
  endpoint:
    path: /categories*
    method: PATCH
- name: families
  endpoint:
    path: /families*
    method: GET
- name: families
  endpoint:
    path: /families*
    method: POST
- name: families
  endpoint:
    path: /families*
    method: PATCH
- name: family_variants
  endpoint:
    path: /families/{family_code}/variants*
    method: GET
- name: family_variants
  endpoint:
    path: /families/{family_code}/variants*
    method: POST
- name: family_variants
  endpoint:
    path: /families/{family_code}/variants*
    method: PATCH
- name: attributes
  endpoint:
    path: /attributes*
    method: GET
- name: attributes
  endpoint:
    path: /attributes*
    method: POST
- name: attributes
  endpoint:
    path: /attributes*
    method: PATCH
- name: attribute_options
  endpoint:
    path: /attributes/{attribute_code}/options*
    method: GET
- name: attribute_options
  endpoint:
    path: /attributes/{attribute_code}/options*
    method: POST
- name: attribute_options
  endpoint:
    path: /attributes/{attribute_code}/options*
    method: PATCH
- name: attribute_groups
  endpoint:
    path: /attribute-groups*
    method: GET
- name: attribute_groups
  endpoint:
    path: /attribute-groups*
    method: POST
- name: attribute_groups
  endpoint:
    path: /attribute-groups*
    method: PATCH
- name: association_types
  endpoint:
    path: /association-types*
    method: GET
- name: association_types
  endpoint:
    path: /association-types*
    method: POST
- name: association_types
  endpoint:
    path: /association-types*
    method: PATCH
- name: channels
  endpoint:
    path: /channels*
    method: GET
- name: channels
  endpoint:
    path: /channels*
    method: POST
- name: channels
  endpoint:
    path: /channels*
    method: PATCH
- name: locales
  endpoint:
    path: /locales*
    method: GET
- name: currencies
  endpoint:
    path: /currencies*
    method: GET
- name: products
  endpoint:
    path: /products*
    method: GET
- name: products
  endpoint:
    path: /products*
    method: POST
- name: products
  endpoint:
    path: /products*
    method: PATCH
- name: products
  endpoint:
    path: /products/{code}
    method: DELETE
- name: product_models
  endpoint:
    path: /product-models*
    method: GET
- name: product_models
  endpoint:
    path: /product-models*
    method: POST
- name: product_models
  endpoint:
    path: /product-models*
    method: PATCH
- name: product_models
  endpoint:
    path: /product-models/{code}
    method: DELETE
- name: asset_families
  endpoint:
    path: /asset-families*
    method: GET
- name: asset_families
  endpoint:
    path: /asset-families*
    method: PATCH
- name: assets
  endpoint:
    path: /asset-families/{code}/assets*
    method: GET
- name: assets
  endpoint:
    path: /asset-families/{code}/assets*
    method: POST
- name: assets
  endpoint:
    path: /asset-families/{code}/assets*
    method: PATCH
- name: assets
  endpoint:
    path: /asset-families/{code}/assets/{code}
    method: DELETE
- name: reference_entity_records
  endpoint:
    path: /reference-entities/{code}/records*
    method: GET
- name: reference_entity_records
  endpoint:
    path: /reference-entities/{code}/records*
    method: POST
- name: reference_entity_records
  endpoint:
    path: /reference-entities/{code}/records*
    method: PATCH
- name: reference_entities
  endpoint:
    path: /reference-entities*
    method: GET
- name: product
  endpoint:
    method: GET
- name: category
  endpoint:
    method: PATCH
    data_selector: parent
- name: category_label
  endpoint:
    method: PATCH
    data_selector: labels
- name: product_category_assignment
  endpoint:
    method: PATCH
    data_selector: categories
- name: product_category_removal
  endpoint:
    method: PATCH
    data_selector: categories
- name: product_values_update
  endpoint:
    method: PATCH
- name: product_value
  endpoint:
    method: PATCH
    data_selector: values
- name: product_value_update
  endpoint:
    path: /products/{product_id}/values
    method: PATCH
    data_selector: values
    params:
      locale: en_US
      data: null
- name: reference_entity_record_value_update
  endpoint:
    path: /reference-entity-records/{record_code}/values
    method: PATCH
    data_selector: values
    params:
      locale: en_US
      data: The famous Italian brand
- name: reference_entity_record
  endpoint:
    method: PATCH
    data_selector: values
- name: kartell
  endpoint:
    method: PATCH
    data_selector: values
- name: allie_jean_picture
  endpoint:
    method: PATCH
    data_selector: values
- name: app_deleted
  endpoint:
    path: /event-platform/available-events/com.akeneo.pim.v1.app.deleted
    method: GET
    data_selector: data
- name: asset_created
  endpoint:
    path: /event-platform/available-events/com.akeneo.pim.v1.asset.created
    method: GET
    data_selector: data
- name: job_import_status_changed
  endpoint:
    path: /events/job.import.status-changed
    method: GET
    data_selector: data.job
- name: asset_updated
  endpoint:
    path: /events/asset.updated
    method: GET
    data_selector: data.job
- name: job_import_status_changed
  endpoint:
    path: /com.akeneo.pim.v1.job.import.status-changed
    method: POST
    data_selector: data.job
- name: category_deleted
  endpoint:
    path: /com.akeneo.pim.v1.category.deleted
    method: POST
    data_selector: data.job
- name: connection_deleted
  endpoint:
    path: /events/connection_deleted
    method: GET
    data_selector: data
- name: product_created
  endpoint:
    path: /events/product_created
    method: GET
    data_selector: data
- name: job_import_status_changed
  endpoint:
    path: /com.akeneo.pim.v1.job.import.status-changed
    method: POST
    data_selector: data.job
- name: product_updated
  endpoint:
    path: /com.akeneo.pim.v1.product.updated
    method: POST
    data_selector: data
- name: job_import_status_changed
  endpoint:
    path: /events/job/import/status-changed
    method: GET
    data_selector: data.job
- name: product_updated_delta
  endpoint:
    path: /events/product/updated/delta
    method: GET
    data_selector: data
- name: job_import_status_changed
  endpoint:
    path: /com.akeneo.pim.v1.job.import.status-changed
    method: GET
    data_selector: data
- name: product_changes
  endpoint:
    path: /events
    method: GET
    data_selector: data.product.changes
- name: product_model_updated_delta
  endpoint:
    path: /spec/com.akeneo.pim.v1.product-model.updated.delta.schema.json
    method: GET
    data_selector: data.product_model
- name: product_deleted
  endpoint:
    path: /events/com.akeneo.pim.v1.product.deleted
    method: GET
    data_selector: data
- name: product_model_created
  endpoint:
    path: /events/com.akeneo.pim.v1.product-model.created
    method: GET
    data_selector: data
- name: job_import_status_changed
  endpoint:
    path: /events/com.akeneo.pim.v1.job.import.status-changed
    method: GET
    data_selector: data
- name: product_model_updated
  endpoint:
    path: /events/com.akeneo.pim.v1.product-model.updated
    method: GET
    data_selector: data
- name: job_import_status_changed
  endpoint:
    path: /events/job/import/status-changed
    method: GET
    data_selector: data.job
- name: product_model_updated_delta
  endpoint:
    path: /events/product-model/updated/delta
    method: GET
    data_selector: data
- name: asset_deleted
  endpoint:
    path: /events/asset.deleted
    method: GET
    data_selector: data
- name: attribute_created
  endpoint:
    path: /events/attribute.created
    method: GET
    data_selector: data
- name: job_import_status_changed
  endpoint:
    path: /events/com.akeneo.pim.v1.job.import.status-changed
    method: GET
    data_selector: data.job
- name: author_details
  endpoint:
    path: /events/com.akeneo.pim.v1.job.import.status-changed
    method: GET
    data_selector: data.author
- name: product_model_updated
  endpoint:
    path: /spec/com.akeneo.pim.v1.product-model.updated.delta
    method: GET
    data_selector: data.product_model
- name: product-model-deleted
  endpoint:
    path: /product-model-deleted
    method: POST
    data_selector: data
- name: family-created
  endpoint:
    path: /family-created
    method: POST
    data_selector: data
- name: job_import_status_changed
  endpoint:
    path: /events/com.akeneo.pim.v1.job.import.status-changed
    method: GET
    data_selector: data
    params: {}
- name: family_updated
  endpoint:
    path: /events/com.akeneo.pim.v1.family.updated
    method: GET
    data_selector: data
    params: {}
- name: family_deleted
  endpoint:
    path: /com.akeneo.pim.v1.family.deleted
    method: POST
    data_selector: data.job
- name: reference_entity_record_created
  endpoint:
    path: /com.akeneo.pim.v1.reference-entity-record.created
    method: POST
- name: job_import_status_changed
  endpoint:
    path: /com.akeneo.pim.v1.job.import.status-changed
    method: GET
    data_selector: data.job
- name: reference_entity_record_updated
  endpoint:
    path: /com.akeneo.pim.v1.reference-entity-record.updated
    method: GET
    data_selector: data
- name: reference-entity-record.deleted
  endpoint:
    path: /reference-entity-record/deleted
    method: GET
    data_selector: data
- name: job.import.status-changed
  endpoint:
    path: /job/import/status-changed
    method: GET
    data_selector: data
- name: job.export.status-changed
  endpoint:
    path: /job/export/status-changed
    method: GET
    data_selector: data
- name: job_mass_edit_status_changed
  endpoint:
    path: /events/job/mass-edit/status-changed
    method: GET
    data_selector: data
    params: {}
- name: job_import_status_changed
  endpoint:
    path: /job/import/status-changed
    method: GET
    data_selector: data.job
- name: job_import_status_changed
  endpoint:
    path: /events/job/import/status-changed
    method: POST
    data_selector: data.job
- name: attribute_updated
  endpoint:
    path: /events/attribute/updated
    method: POST
    data_selector: data
- name: job_import_status_changed
  endpoint:
    path: /com.akeneo.pim.v1.job.import.status-changed
    method: GET
    data_selector: data.job
    params: {}
- name: attribute_deleted
  endpoint:
    path: /com.akeneo.pim.v1.attribute.deleted
    method: GET
    data_selector: data.job
    params: {}
- name: attribute-group.created
  endpoint:
    path: /attribute-group.created
    method: POST
    data_selector: data
    params: {}
- name: attribute-group.updated
  endpoint:
    path: /attribute-group.updated
    method: POST
    data_selector: data
    params: {}
- name: job_import_status_changed
  endpoint:
    path: /events/com.akeneo.pim.v1.job.import.status-changed
    method: GET
    data_selector: data
- name: attribute_group_deleted
  endpoint:
    path: /events/com.akeneo.pim.v1.attribute-group.deleted
    method: GET
    data_selector: data
- name: attribute-option.created
  endpoint:
    path: /events/com.akeneo.pim.v1.attribute-option.created
    method: POST
    data_selector: data
- name: attribute-option.updated
  endpoint:
    path: /events/com.akeneo.pim.v1.attribute-option.updated
    method: POST
    data_selector: data
- name: job_import_status_changed
  endpoint:
    path: /events/job.status-changed
    method: GET
    data_selector: data.job
- name: attribute_option_deleted
  endpoint:
    path: /events/attribute-option.deleted
    method: GET
    data_selector: data.job
- name: category_created
  endpoint:
    path: /events/category_created
    method: GET
    data_selector: data
- name: category_updated
  endpoint:
    path: /events/category_updated
    method: GET
    data_selector: data
- name: subscriber
  endpoint:
    data_selector: subscriber
- name: subscription
  endpoint:
    data_selector: subscription
- name: pubsub_subscription
  endpoint:
    path: /subscriptions
    method: POST
    params:
      source: pim
      subject: https://my-pim.cloud.akeneo.com
      events:
      - com.akeneo.pim.v1.product.updated
      type: pubsub
      config:
        project_id: your_google_project_id
        topic_id: your_google_pubsub_topic_id
- name: https_subscription
  endpoint:
    path: /your_webhook_url
    method: POST
    headers:
      X-AKENEO-SIGNATURE-PRIMARY: your_primary_secret_to_sign_the_payload
      X-AKENEO-SIGNATURE-SECONDARY: your_secondary_secret_to_sign_the_payload
      X-AKENEO-SIGNATURE-ALGORITHM: HmacSHA256
- name: event_subscription
  endpoint:
    method: POST
    params:
      filter: user="ea0fe94f-417e-4078-a40b-38645ba90ebe"
- name: event
  endpoint:
    path: /event-platform/events
    method: POST
    data_selector: events
- name: subscriber
  endpoint:
    path: /event-platform/subscriber
    method: POST
- name: subscription
  endpoint:
    path: /event-platform/subscription
    method: POST
- name: subscriber
  endpoint:
    path: /subscribers
    method: POST
    data_selector: .
    params: {}
- name: subscription
  endpoint:
    path: /api/v1/subscribers/$SUBSCRIBER_ID/subscriptions
    method: POST
    data_selector: ''
    params:
      source: pim
      subject: $TARGET_PIM_URL
      events:
      - com.akeneo.pim.v1.product.updated
      type: https
      config:
        url: $DESTINATION_URL
        secret:
          primary: averysecretprimarysecret
          secondary: ''
- name: subscriber
  endpoint:
    method: POST
- name: subscription
  endpoint:
    method: POST
- name: logs
  endpoint:
    path: /event-platform/logs
    method: GET
    data_selector: logs
    params:
      log_type: error
- name: product_creation
  endpoint:
    path: /events
    method: GET
- name: product_update
  endpoint:
    path: /events
    method: GET
- name: product_deletion
  endpoint:
    path: /events
    method: GET
- name: ui_extensions
  endpoint:
    method: GET
    path: /extensions
- name: add_ui_extension
  endpoint:
    method: POST
    path: /extensions
- name: update_ui_extension
  endpoint:
    method: POST
    path: /extensions/{ui_extension_uuid}
- name: delete_ui_extension
  endpoint:
    method: POST
    path: /extensions/{ui_extension_uuid}
- name: ui_extension_create
  endpoint:
    path: /api/rest/v1/ui-extensions
    method: POST
- name: ui_extension_update
  endpoint:
    path: /api/rest/v1/ui-extensions/$EXTENSION_UUID
    method: PATCH
- name: ui_extension_delete
  endpoint:
    path: /api/rest/v1/ui-extensions/$EXTENSION_UUID
    method: DELETE
- name: catalogs
  endpoint:
    path: /catalogs
    method: GET
- name: catalogs_uuid
  endpoint:
    path: /catalogs/6c046434-4501-4f85-94b7-d0194b3d9fb1
    method: GET
- name: catalogs
  endpoint:
    path: /catalogs
    method: POST
- name: catalogs_uuid
  endpoint:
    path: /catalogs/6c046434-4501-4f85-94b7-d0194b3d9fb1
    method: PATCH
- name: catalogs_uuid
  endpoint:
    path: /catalogs/6c046434-4501-4f85-94b7-d0194b3d9fb1
    method: DELETE
- name: catalogs_uuid_product_uuids
  endpoint:
    path: /catalogs/6c046434-4501-4f85-94b7-d0194b3d9fb1/product-uuids
    method: GET
- name: association_types
  endpoint:
    path: /association-types/upsell
    method: GET
- name: association_types
  endpoint:
    path: /association-types
    method: GET
- name: association_types
  endpoint:
    path: /association-types
    method: POST
- name: association_types_upsell
  endpoint:
    path: /association-types/upsell
    method: PATCH
- name: association_types
  endpoint:
    path: /association-types
    method: PATCH
- name: attributes
  endpoint:
    path: /attributes/auto_exposure
    method: GET
- name: attributes
  endpoint:
    path: /attributes
    method: GET
- name: attributes
  endpoint:
    path: /attributes
    method: POST
- name: attributes_auto_exposure
  endpoint:
    path: /attributes/auto_exposure
    method: PATCH
- name: attributes
  endpoint:
    path: /attributes
    method: PATCH
- name: attribute_options
  endpoint:
    path: /attributes/main_color/options/white
    method: GET
- name: attribute_options
  endpoint:
    path: /attributes/main_color/options
    method: GET
- name: attribute_options
  endpoint:
    path: /attributes/main_color/options
    method: POST
- name: attribute_options_white
  endpoint:
    path: /attributes/main_color/options/white
    method: PATCH
- name: attribute_options_21
  endpoint:
    path: /attributes/main_color/options
    method: PATCH
- name: attribute_groups
  endpoint:
    path: /attribute-groups/technical
    method: GET
- name: attribute_groups
  endpoint:
    path: /attribute-groups
    method: GET
- name: attribute_groups
  endpoint:
    path: /attribute-groups
    method: POST
- name: attribute_groups_technical
  endpoint:
    path: /attribute-groups/technical
    method: PATCH
- name: attribute_groups
  endpoint:
    path: /attribute-groups
    method: PATCH
- name: categories
  endpoint:
    path: /categories/master
    method: GET
- name: categories
  endpoint:
    path: /categories
    method: GET
- name: categories
  endpoint:
    path: /categories
    method: POST
- name: categories_audio_video
  endpoint:
    path: /categories/audio_video
    method: PATCH
- name: categories
  endpoint:
    path: /categories
    method: PATCH
- name: channels
  endpoint:
    path: /channels/ecommerce
    method: GET
- name: channels
  endpoint:
    path: /channels
    method: GET
- name: channels
  endpoint:
    path: /channels
    method: POST
- name: channels_my_new_channel_3
  endpoint:
    path: /channels/my_new_channel_3
    method: PATCH
- name: channels
  endpoint:
    path: /channels
    method: PATCH
- name: currencies
  endpoint:
    path: /currencies/USD
    method: GET
- name: currencies
  endpoint:
    path: /currencies
    method: GET
- name: families
  endpoint:
    path: /families/camcorders
    method: GET
- name: families
  endpoint:
    path: /families
    method: GET
- name: families
  endpoint:
    path: /families
    method: POST
- name: families_camcorders
  endpoint:
    path: /families/camcorders
    method: PATCH
- name: families
  endpoint:
    path: /families
    method: PATCH
- name: families_camcorders
  endpoint:
    path: /families/camcorders
    method: DELETE
- name: family_variants
  endpoint:
    path: /families/clothing/variants/clothing_colorsize
    method: GET
- name: family_variants
  endpoint:
    path: /families/clothing/variants
    method: GET
- name: family_variants
  endpoint:
    path: /families/clothing/variants
    method: POST
- name: family_variants_clothing_colorsize
  endpoint:
    path: /families/clothing/variants/clothing_colorsize
    method: PATCH
- name: family_variants
  endpoint:
    path: /families/clothing/variants
    method: PATCH
- name: locales
  endpoint:
    path: /locales/en_US
    method: GET
- name: locales
  endpoint:
    path: /locales
    method: GET
- name: reference_entities
  endpoint:
    path: /reference-entities/brand
    method: GET
- name: reference_entities
  endpoint:
    path: /reference-entities
    method: GET
- name: reference_entities_brand
  endpoint:
    path: /reference-entities/brand
    method: PATCH
- name: reference_entity_attributes
  endpoint:
    path: /reference-entities/brand/attributes/description
    method: GET
- name: reference_entity_attributes
  endpoint:
    path: /reference-entities/brand/attributes
    method: GET
- name: reference_entity_attributes_salesarea
  endpoint:
    path: /reference-entities/brand/attributes/salesarea
    method: PATCH
- name: reference_entity_attribute_options
  endpoint:
    path: /reference-entities/brand/attributes/nationality/options/french
    method: GET
- name: reference_entity_attribute_options
  endpoint:
    path: /reference-entities/brand/attributes/nationality/options
    method: GET
- name: reference_entity_attribute_options_usa
  endpoint:
    path: /reference-entities/brand/attributes/salesarea/options/usa
    method: PATCH
- name: reference_entity_records
  endpoint:
    path: /reference-entities/brand/records/kartell
    method: GET
- name: reference_entity_records
  endpoint:
    path: /reference-entities/brand/records
    method: GET
- name: reference_entity_records_kartell
  endpoint:
    path: /reference-entities/brand/records/kartell
    method: PATCH
- name: reference_entity_records
  endpoint:
    path: /reference-entities/brand/records
    method: PATCH
- name: reference_entities_media_files
  endpoint:
    path: /reference-entities-media-files/c/f/9/e/cf9e5fad2fe33e326b6def8f4e433537eb7f6633_8z2q6xwlya4_test.jpg
    method: GET
- name: reference_entities_media_files
  endpoint:
    path: /reference-entities-media-files
    method: POST
- name: asset_families
  endpoint:
    path: /asset-families/model_pictures
    method: GET
- name: asset_families
  endpoint:
    path: /asset-families
    method: GET
- name: asset_families_model_pictures
  endpoint:
    path: /asset-families/model_pictures
    method: PATCH
- name: asset_attributes
  endpoint:
    path: /asset-families/model_pictures/attributes/warning_mention
    method: GET
- name: asset_attributes
  endpoint:
    path: /asset-families/model_pictures/attributes
    method: GET
- name: asset_attributes_warning_mention
  endpoint:
    path: /asset-families/model_pictures/attributes/warning_mention
    method: PATCH
- name: asset_attribute_options
  endpoint:
    path: /asset-families/model_pictures/attributes/model_is_wearing_size/options/small
    method: GET
- name: asset_attribute_options
  endpoint:
    path: /asset-families/model_pictures/attributes/model_is_wearing_size/options
    method: GET
- name: asset_attribute_options_small
  endpoint:
    path: /asset-families/model_pictures/attributes/model_is_wearing_size/options/small
    method: PATCH
- name: asset_media_files
  endpoint:
    path: /asset-media-files/c/f/9/e/cf9e5fad2fe33e326b6def8f4e433537eb7f6633_8z2q6xwlya4_test.jpg
    method: GET
- name: asset_media_files
  endpoint:
    path: /asset-media-files
    method: POST
- name: assets
  endpoint:
    path: /asset-families/model_pictures/assets/allie_jean_model_picture
    method: GET
- name: assets
  endpoint:
    path: /asset-families/atmosphere/assets
    method: GET
- name: assets_allie_jean_model_picture
  endpoint:
    path: /asset-families/model_pictures/assets/allie_jean_model_picture
    method: PATCH
- name: assets
  endpoint:
    path: /asset-families/model_pictures/assets
    method: PATCH
- name: assets_allie_jean_model_picture
  endpoint:
    path: /asset-families/model_pictures/assets/allie_jean_model_picture
    method: DELETE
- name: measure_families
  endpoint:
    path: /measure-families/area
    method: GET
- name: measure_families
  endpoint:
    path: /measure-families
    method: GET
- name: measurement_families
  endpoint:
    path: /measurement-families
    method: GET
- name: measurement_families
  endpoint:
    path: /measurement-families
    method: PATCH
- name: media
  endpoint:
    path: /media-files/d/d/b/6/ddb6ad393f81503b6be7380785e3b32bbd28cd08_test.png
    method: GET
- name: medias
  endpoint:
    path: /media-files
    method: GET
- name: media
  endpoint:
    path: /media-files
    method: POST
- name: product
  endpoint:
    path: /products/AKNSTK
    method: GET
- name: products
  endpoint:
    path: /products
    method: GET
- name: product
  endpoint:
    path: /products
    method: POST
- name: product_AKNSTK
  endpoint:
    path: /products/AKNSTK
    method: PATCH
- name: products
  endpoint:
    path: /products
    method: PATCH
- name: product_AKNTS_BPXS
  endpoint:
    path: /products/AKNTS_BPXS
    method: DELETE
- name: draft
  endpoint:
    path: /products/AKNTS_BPS/draft
    method: GET
- name: proposal
  endpoint:
    path: /products/AKNTS_BPS/proposal
    method: POST
- name: product_uuid
  endpoint:
    path: /products-uuid/f62190e8-8314-4360-8ff8-7dbdb4af6312
    method: GET
- name: my_erp_connection
  endpoint:
    path: /system/connections
    method: POST
- name: products
  endpoint:
    path: /products
    method: PATCH
- name: data_flows
  endpoint:
    path: /data-flows
    method: GET
- name: products
  endpoint:
    path: /
    method: POST
    data_selector: data.products.items
    params:
      query: "{\n  products {\n    items {\n      uuid\n      categories {\n     \
        \   code\n        labels\n      }\n    }\n  }\n}\n"
- name: products
  endpoint:
    path: /api-reference.html#get_products_uuid
    method: GET
    params:
      limit: 5
      page: links{next/self/first}
      locales:
      - fr_FR
      - en_US
      channel: b2b
      currencies:
      - USD
      - EUR
      search: string
      categories:
      - categ-code1
      - categ-code2
      families:
      - family-code1
      - family-code2
      uuid:
      - 002844f9-a470-42e2-8268-ddfd8f646593
      - 002844f9-3648-8268-8268-ddfd8f6411545
      parent: code1
      noParent: true
      attributesToLoad: string[]
- name: productModels
  endpoint:
    path: /api-reference.html?#Productmodel
    method: GET
    params:
      limit: 5
      page: links{next/self/first}
      channel: b2b
      locales:
      - fr_FR
      - en_US
      currencies:
      - USD
      - EUR
      search: string
      codes:
      - code1
      - code-2
      categories:
      - categ-code1
      - categ-code2
      families:
      - family-code1
      - family-code2
      noParent: true
      attributesToLoad: string[]
- name: families
  endpoint:
    path: /api/families
    method: GET
    params:
      codes:
      - code1
      - code-2
      locales:
      - fr_FR
      - en_US
      hasProducts: true
      updatedAfter: '2024-07-04T10:00:00Z'
- name: categories
  endpoint:
    path: /api/categories
    method: GET
    params:
      search: specific search
      locales:
      - fr_FR
      - en_US
      root: true
      parent: code-parent-category
      codes:
      - code1
      - code-2
- name: attributes
  endpoint:
    path: /api/attributes
    method: GET
    params:
      search: specific search
      locales:
      - fr_FR
      - en_US
      codes:
      - code1
      - code-2
      types:
      - pim_catalog_simpleselect
      identifier: true
- name: attribute_options
  endpoint:
    path: /api/attribute_options
    method: GET
    params:
      attributeCode: specific attribute code
      locales:
      - fr_FR
      - en_US
- name: locales
  endpoint:
    path: /api/locales
    method: GET
    params:
      enabled: true
- name: currencies
  endpoint:
    path: /api-reference.html?#Currency
    method: GET
    params:
      limit: 5
      enabled: true
- name: channels
  endpoint:
    path: /api-reference.html?#Channel
    method: GET
    params:
      limit: 5
- name: measurementFamilies
  endpoint:
    path: /api-reference.html?#Measurementfamily
    method: GET
- name: assetFamilies
  endpoint:
    path: /api-reference.html?#Assetfamily
    method: GET
- name: assetsRecords
  endpoint:
    path: /api-reference.html?#Asset
    method: GET
    params:
      channel: b2b
      search: specific search
- name: referenceEntities
  endpoint:
    path: /api-reference.html?#Referenceentities
    method: GET
- name: reference_entities_records
  endpoint:
    path: /api/reference-entity-records
    method: GET
    data_selector: records
    params:
      referenceEntity: ''
      channel: ''
      locales: []
      page: ''
      search: ''
      codes: []
- name: token
  endpoint:
    path: /api/oauth/v1/token
    method: POST
- name: system_information
  endpoint:
    path: /api/system
    method: GET
- name: dam_assets
  endpoint:
    path: /assets
    method: GET
- name: pim_assets
  endpoint:
    path: /api/rest/v1/asset-families/model_pictures/assets
    method: PATCH
- name: asset_attribute_value_generation
  endpoint:
    path: /endpoint/to/fetch/attribute
    method: GET
    data_selector: data
- name: assets
  endpoint:
    method: PATCH
    path: /patch/assets
- name: attribute_options
  endpoint:
    method: PATCH
    path: /patch/attribute_options
- name: assets
  endpoint:
    method: GET
- name: DAM_assets
  endpoint:
    params:
      incremental: last_successful_synchronization
- name: category
  endpoint:
    path: /api/rest/v1/categories
    method: GET
    data_selector: categories
- name: association_types
  endpoint:
    path: /api/rest/v1/association-types
    method: GET
    data_selector: association_types
- name: channels
  endpoint:
    path: /api/rest/v1/channels
    method: GET
    data_selector: channels
- name: locales
  endpoint:
    path: /api/rest/v1/locales
    method: GET
    data_selector: locales
- name: currencies
  endpoint:
    path: /api/rest/v1/currencies
    method: GET
    data_selector: currencies
- name: measurement_families
  endpoint:
    path: /api/rest/v1/measurement-families
    method: GET
    data_selector: measurement_families
- name: reference_entities
  endpoint:
    path: /api/rest/v1/reference-entities
    method: GET
    data_selector: reference_entities
- name: assets
  endpoint:
    path: /api/rest/v1/assets
    method: GET
    data_selector: assets
- name: product_images
  endpoint:
    data_selector: assets
- name: product
  endpoint:
    path: /api/rest/v1/products
    method: GET
    data_selector: products
- name: media_files
  endpoint:
    path: /api/rest/v1/media-files
    method: GET
    data_selector: media_files
- name: product
  endpoint:
    params:
      incremental: modified_since
- name: product_model
  endpoint:
    params:
      incremental: modified_since
- name: asset
  endpoint:
    params:
      incremental: modified_since
- name: reference_entity_record
  endpoint:
    params:
      incremental: modified_since
- name: option
  endpoint:
    params:
      incremental: all
- name: category
  endpoint:
    params:
      incremental: all
- name: category
  endpoint:
    path: /categories
    method: GET
- name: association
  endpoint:
    path: /associations
    method: GET
- name: channel
  endpoint:
    path: /channels
    method: GET
- name: locale
  endpoint:
    path: /locales
    method: GET
- name: currency
  endpoint:
    path: /currencies
    method: GET
- name: measurement
  endpoint:
    path: /measurements
    method: GET
- name: reference_entity
  endpoint:
    path: /reference-entities
    method: GET
- name: reference_entity_record
  endpoint:
    path: /reference-entity-records
    method: GET
- name: reference_entity_attribute
  endpoint:
    path: /reference-entity-attributes
    method: GET
- name: reference_entity_option
  endpoint:
    path: /reference-entity-options
    method: GET
- name: asset
  endpoint:
    path: /assets
    method: GET
- name: asset_attribute
  endpoint:
    path: /asset-attributes
    method: GET
- name: products
  endpoint:
    path: /products
    method: GET
    params:
      channel: print
      locale: selected_locale
      completeness: complete
      enabled: true
      published: true
- name: products_with_variants
  endpoint:
    path: /products-with-variants
    method: GET
- name: product_updated_delta
  endpoint:
    method: GET
- name: delete_family
  endpoint:
    method: DELETE
- name: retrieve_attributes
  endpoint:
    method: GET
- name: retrieve_product_variants
  endpoint:
    method: GET
- name: retrieve_localized_values
  endpoint:
    method: GET
- name: retrieve_prices
  endpoint:
    method: GET
- name: patch_attribute_option
  endpoint:
    method: PATCH
- name: job_status
  endpoint:
    path: /jobs/${job_id}/
    method: GET
    data_selector: status
- name: list_of_jobs
  endpoint:
    path: /jobs/
    method: GET
    params:
      status: status
      project: project
      created_after: created_after
      created_before: created_before
- name: job_data
  endpoint:
    path: /jobs/${job_id}/data/${output_format_id}/
    method: GET
- name: auth_token
  endpoint:
    path: /auth/token/
    method: POST
- name: file_upload
  endpoint:
    path: /files/
    method: POST
- name: job_creation
  endpoint:
    path: /jobs/
    method: POST
- name: job_results
  endpoint:
    path: /jobs/${job_id}/download/${output_format_id}/
    method: GET
- name: products
  endpoint:
    path: /products
    method: GET
- name: product_models
  endpoint:
    path: /product-models
    method: GET
- name: variant_products
  endpoint:
    path: /variant-products
    method: GET
- name: families
  endpoint:
    path: /families
    method: GET
- name: attributes
  endpoint:
    path: /attributes
    method: GET
- name: categories
  endpoint:
    path: /categories
    method: GET
- name: channels
  endpoint:
    path: /channels
    method: GET
- name: product_models
  endpoint:
    path: /product-models
    method: GET
    data_selector: _embedded.items
    params:
      locales: '{{ locales }}'
      scope: ecommerce
      search: '{"family":[{"operator":"IN","value":{{ familyCodes }}}]}'
      limit: '{{ maxProductsPerPage }}'
- name: product_variants
  endpoint:
    path: /products-uuid
    method: GET
    data_selector: _embedded.items
    params:
      locales: '{{ locales }}'
      search: '{"parent":[{"operator":"IN","value":{{ productModelCodes }}}]}'
      limit: '{{ maxProductsPerPage }}'
- name: family_variants
  endpoint:
    path: /families/{family_code}/variants
    method: GET
    data_selector: _embedded.items
    params:
      limit: '{{ maxProductsPerPage }}'
- name: product_models
  endpoint:
    path: /api/rest/v1/product-models
    method: GET
    data_selector: _embedded.items
    params:
      locales: '{{ locales }}'
      scope: ecommerce
      search: '{"family":[{"operator":"IN","value":{{ familyCodes }}},{"operator":"EMPTY"}]}'
      limit: '{{ maxProductsPerPage }}'
- name: product_variants
  endpoint:
    path: /api/rest/v1/product-models
    method: GET
    data_selector: _embedded.items
    params:
      scope: ecommerce
      search: '{"parent":[{"operator":"EMPTY"}]}'
      limit: '{{ maxProductsPerPage }}'
- name: families
  endpoint:
    path: /api/rest/v1/families
    method: GET
    data_selector: _embedded.items
    params:
      search: '{"has_products":[{"operator":"=","value":true}]}'
      limit: 100
    paginator:
      type: cursor
      cursor_path: _links.next.href
      cursor_param: nextUrl
- name: family_variants
  endpoint:
    path: /api/rest/v1/families/%s/variants
    method: GET
    data_selector: _embedded.items
- name: attributes
  endpoint:
    path: /api/rest/v1/attributes
    method: GET
    data_selector: _embedded.items
    params:
      search: '{"code":[{"operator":"IN","value":%s}]}'
      limit: 100
- name: category_tree
  endpoint:
    method: GET
- name: categories
  endpoint:
    path: /api/rest/v1/categories
    method: GET
    data_selector: _embedded.items
    params:
      with_position: true
      search: '{"parent":[{"operator":"=","value":"{{ rootCategoryCode }}"}]}'
- name: root_category
  endpoint:
    path: /api/rest/v1/categories/{{ rootCategoryCode }}
    method: GET
    data_selector: null
- name: products
  endpoint:
    path: /api-reference.html#get_products
    method: GET
    data_selector: values
- name: products_uuid
  endpoint:
    path: /api-reference.html#get_products_uuid
    method: GET
    data_selector: values
- name: products
  endpoint:
    path: /api/rest/v1/products-uuid
    method: GET
    data_selector: _embedded.items
    params:
      with_attribute_options: true
      search: '{"enabled":[{"operator":"=","value":true}]}'
      pagination_type: search_after
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: items
- name: attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: items
- name: media_files
  endpoint:
    path: /media-files/{value}
    method: GET
- name: activation
  endpoint:
    path: /connect/apps/v1/authorize
    method: GET
    params:
      response_type: code
      scope: read_products write_products delete_products
- name: callback
  endpoint:
    path: /connect/apps/v1/oauth2/token
    method: POST
- endpoint:
    method: POST
    params:
      grant_type: authorization_code
- name: activate_app
  endpoint:
    path: /connect/apps/v1/authorize
    method: GET
    params:
      response_type: code
      client_id: '{{ dlt.secrets[''akeneo_client_id''] }}'
      scope: read_products write_products
      state: '{{ dlt.secrets[''akeneo_state''] }}'
- name: channel
  endpoint:
    path: /api/rest/v1/channels/{channel_code}
    method: GET
    data_selector: .
    params:
      channel_code: ecommerce
notes:
- Credentials cannot be recovered once the app creation pop-up is closed; however,
  they can be regenerated.
- Authentication roles required for managing team and company profiles
- Documentation must be in English
- Documentation should include an install guide and user guide
- Documentation must cover how to download, install, and configure the app
- Documentation should explain how Julia can use the app to enhance her business
- Documentation must outline known limits of the integration
- Uses OAuth 2.0 with authorization code flow
- Email is not verified by Akeneo PIM
- Never trust the 'first name', 'last name', or 'email' value as a golden record
- Each app can create up to 200 catalogs
- A product selection can have up to 25 selection criteria
- A product mapping schema can accommodate up to 600 targets; UI may be less responsive
  above 200 targets
- API does not return empty values for mapped attributes
- Credentials must be obtained from the customer's PIM UI, not from the Akeneo App
  Store
- Follow least privilege principle for OAuth2 scope selection
- Ensure secure storage and management of credentials
- Code must not contain vulnerabilities; adhere to OWASP Top Ten
- Third-party dependencies must be supported and not vulnerable
- Docker images must follow security hardening best practices
- Comply with Akeneo PIM API fair use
- In the same asset family, you cannot have two transformations with the same target,
  defined by exactly the same attribute, channel, and locale in your target property.
- In the same asset family, you can have two transformations with the same source,
  defined by exactly the same attribute, channel, and locale in your source property.
- In the same asset family, you cannot have two transformations with the same target
  filename, defined by exactly the same source, filename_prefix, and filename_suffix.
- In the same asset family, you cannot have two transformations with the first one
  defining a source value as the target value of the second one and vice versa.
- Maximum 100 attributes per asset family; response is not paginated.
- Asset must be part of an asset family with own attributes and lifecycle
- Assets can be linked to products and product models
- Asset can hold multiple files, useful for multilingual documents
- Endpoints are readonly; cannot use PATCH or POST on `_links` or `linked_data` properties.
- Can define up to two different product link rules per asset family
- Supports extrapolation of asset attributes for dynamic product linking
- Extrapolation used in product selection and asset assignment
- Maximum 4 concurrent API calls per PIM connection.
- Maximum 10 concurrent API calls across the PIM instance.
- General API Requests: up to 100 API requests per second per PIM instance.
- Attribute options updates & creations: up to 3 API requests per second per PIM instance.
- Access control via ACLs and EE permissions requires configuring roles and groups
  for API users
- Dedicated user roles recommended for API users, distinct from UI user roles
- Enterprise Edition offers additional catalog permissions
- Hide parts of the product catalog using category, attribute group, or locale.
- Read-only mode can be enabled for specific product categories, preventing updates
  via API
- Proposals for product updates can be enabled; actual updates require approval in
  the PIM UI
- Read after write eventual consistency issue; newly created products may not immediately
  appear in search results due to ongoing indexing
- Only changes in asset values will trigger the asset.updated event
- Events related to job imports and product updates
- Data includes job details and product modifications such as family, parent, enabled
  status, category, and group associations, product values and associations adjustments.
- Payload format is specifically structured for product model updates in delta format
- Events are triggered by updates from various sources including the product page,
  REST API, rules engine, workflows, and custom imports
- Uses OAuth2 with refresh token; requires setup of connected app in Akeneo PIM
- Content type for all events is application/json
- Content type: application/json
- Event-driven architecture; status changes trigger events
- Payloads are structured around job and author objects
- Filters are optional; if no filter is defined, the subscription receives all events
  matching its type and source
- Only one filter expression per subscription
- Total length of filter expression must not exceed 500 characters
- Number of logical operators in a single filter expression is limited to 4
- 429 responses do not consider Retry-after header from client side
- Batch API calls to respect rate limits
- Avoid synchronous API calls upon receiving events; use asynchronous background processes
- Compatibility varies by Akeneo PIM edition
- ENTERPRISE EDITION (SAAS) and GROWTH EDITION are supported
- ENTERPRISE EDITION (PAAS) and COMMUNITY EDITION are not supported
- Each subscriber is tied to a single PIM instance and connection
- Multiple subscribers are required in a multi-tenant context
- Subscriptions can be suspended or revoked based on platform or user actions
- Requires configuring Google Cloud Pub/Sub with appropriate permissions to allow
  event publishing
- Advised to use event filters to subscribe to relevant events only
- Event Platform designed for large-scale, real-time integrations
- No specific user interface or dashboard included
- Events are not guaranteed to be in order if retries occur
- Does not support querying of past events
- Event delivery managed with retry mechanism; throttling policies from previous API
  versions do not apply
- Authentication uses OAuth2 specifically designed for PIM connections
- Supports triggering events directly from the Akeneo PIM UI
- API token has a lifespan of one hour
- Expose an HTTP endpoint to avoid running business logic directly on event reception
  due to strict timeout policies
- Manage lifecycle of subscribers and subscriptions to handle varying event types
  or deletion of tenant configurations
- Start simple and add complexity with multiple subscriptions targeting different
  destinations if required
- Do not handle business logic directly when consuming events through an HTTPS destination
  to ensure that the Event Platform timeout is respected
- Expect duplicates and un-ordered events due to at least once delivery paradigm
- Maximum event delivery rate is 100 events per second
- Minimum event delivery rate is 1 event per second
- Delivery timeout of 5 seconds for HTTPS destinations
- Retry policy includes retries at 5, 10, and 20 minutes for transient failures
- Suspension policy includes criteria-based and threshold-based conditions
- Logs are only available for a rolling window of 30 days
- Error logs are automatically deduplicated if multiple errors with the same subscription_id
  and error_message occur within a 5-minute window
- Requires active App or connection setup through Akeneo PIM
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Connections are managed via the UI and require manual setup
- The integration with Akeneo PIM is designed to handle daily updates from an ERP.
- Integration frequency set to once a day at midnight to lower the PIM load.
- Requires API key authentication using client id and secret provided by Akeneo PIM
  connection settings.
- Dedicated to Akeneo Product Cloud (SaaS)
- Tutorial content focused on connecting to ERP systems
- Connection token is suitable for testing and lasts for one hour
- App token is recommended for development and is permanent
- To create an asset family structure, consider which attributes are necessary from
  the DAM to the PIM based on usefulness for filtering, enrichment, or final channel
  requirements.
- Do not overload the PIM with unnecessary DAM properties; only select those that
  add value.
- Handle errors if the configuration file does not match the structure of the DAM
  or PIM asset
- Use REST API for stable and fast connection to PIM
- API might require polling for updates in assets
- Synchronization frequency is crucial; needs careful selection based on performance
  and user needs
- Be cautious with webhooks due to potential overload and firewall issues
- Rate limit considerations: check and adjust according to API limits
- Best effort support for provided skeleton
- Uses OAuth2 with refresh token — requires setup of connected app in Akeneo PIM
- API is localized and scopable depending on channel and locale settings
- Requires manual configuration for attribute type mapping
- Locale mapping may need manual configuration in some eCommerce solutions
- PIM API generates URLs for media files that are not public and cannot be used directly
- PIM API URLs for media files are not public; cannot be used directly by eCommerce
  solutions
- Only textual attributes of Akeneo PIM products are currently supported for translation
- Bulk actions aren't available on assets and reference entities; workaround needed
  for translating asset metadata and reference entity records
- API requires a generated token for authentication
- Token must be kept secret and passed in the headers for all requests
- Rate limit of 10 API requests per second
- Pagination is handled via cursor-based method using '_links.next.href'
- Requires 'accessToken' for authentication
- Media file synchronization can be resource-intensive
- The access token is permanent unless explicitly revoked
- State parameter is used to prevent CSRF
- Authentication via OAuth2 using Bearer token is required to access endpoints.
errors:
- All error messages must be adapted to the user's profile and provide resolution
  options
- invalid_grant: Code has expired
- ? No products to synchronize. The catalog "65f5a521-e65c-4d7b-8be8-1f267fa2729c"
    has been disabled on the PIM side. Note that you can get catalogs status with
    the GET /api/rest/v1/catalogs endpoint.
  : Automatic deactivation of catalogs when a product selection becomes invalid
- Performance issues: Define different product selections in each rule to avoid performance
    problems
- 401 Unauthorized: Check the troubleshooting guide
- 429 Too Many Requests: Implement retry mechanisms like exponential backoff or check
    'Retry-After' header.
- 422: You cannot request more than 100 items
- code: 422
  message: You have reached the maximum number of pages you can retrieve with the
    "page" pagination type. Please use the search after pagination type instead
- 'Overall Web API access: Ensure at least this ACL is enabled for API user roles
  to call the REST API'
- 404: Product not found due to permissions set to hide certain categories.
- 400 Bad Request: Invalid json message received; ensure correct JSON format
- 401 Unauthorized: Authentication is required; check if the 'Authorization' header
    is missing or incorrect
- 403 Forbidden: Access forbidden. You are not allowed to administrate categories.
- 404 Not Found: Category 'master' does not exist.
- 405 Method Not Allowed: No route found for POST on the specified endpoint; check
    allowed methods like GET, PATCH, DELETE
- 406 Not Acceptable: ‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘
    is allowed.
- 409 Conflict: Request could not be processed because of conflict
- code: 415
  message: Unsupported Media Type
  remedy: Ensure 'Content-type' header is 'application/json'
- code: 422
  message: Unprocessable Entity
  remedy: Validate data fields and ensure they match the API's expected format
- code: 429
  message: Too Many Requests
  remedy: Respect API rate limits and use Retry-After header value to time retries
- code: 422
  message: Parameter 'client_id' is missing or does not match any client, or secret
    is invalid
  solution:
  - Ensure that 'client_id' and 'secret' are correctly encoded in Base 64
  - If using Apache, add 'SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1' in
    your virtual host file to ensure the Authorization header is passed correctly
- common_issue: Read after write eventual consistency
  description: POST requests may not immediately reflect in GET requests due to indexing
    latency in a distributed database system
  workaround: Query the entity endpoint by its ID immediately after a POST to ensure
    data retrieval
- 422 Unprocessable entity: Property `labels` expects an array as data, `NULL` given.
    Check the standard format documentation.
- 401 Unauthorized: Ensure proper permissions or credentials are provided
- 404 Not Found: Check endpoint paths and data selectors for correctness
- 401 Unauthorized: Ensure OAuth tokens are valid and have sufficient scopes
- REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency
- 401 Unauthorized: Recheck OAuth scopes or token expiration
- 429: Implement proper response mechanism to optimize event reception
- 500: Event retry mechanism may cause overload; consider managing event flow during
    peak times
- Subscriber and Subscription revocation: Handle automatically if Akeneo PIM administrator
    removes the app
- 404 Not Found: Immediate suspension if your HTTPS endpoint responds with this status
- 3xx Redirection: Immediate suspension as redirections are not supported
- 429 Too Many Requests: Decreases success rate; excessive undelivered events trigger
    suspension
- 5XX Server Error: Decreases success rate, contributing to potential suspension
- 4xx Client Error Response: Affects success rate and can lead to suspension
- Delivery timeout: Considered a client error that affects success rate and can trigger
    suspension
- 401 Unauthorized: Check if PIM Connection credentials are correct and token is valid
- QUERY_TIMEOUT: Break down filters or add selectivity
- Unauthorized: Check if the token is correct or expired
- TOO_MANY_REQUESTS: Monitor and adjust request frequency to avoid overloading systems
- unavailable server: Handle server availability issues
- authentication error: Ensure proper authentication handling
- 429 Too Many Requests: Implement retries with exponential backoff
- 429 Too Many Requests: Apply a rate limit of 3 concurrent API requests per second
- 429: Implement retry strategies such as "Retry-After" header compliance, Exponential
    Backoff, or use batch endpoints
- 403 Forbidden: State integrity failed
- Invalid state: Check if the received state is the same as in the session for security
- Missing authorization code: Ensure that the authorization code is included in the
    request
- No PIM url in session: Make sure the PIM URL is stored in the session before making
    the request
auth_info:
  mentioned_objects:
  - Client ID
  - Secret
  - Partner administrator
  - Partner developer
  - Account Holder
  - Client id
  - Client secret
  - access_token
  - code
  - grant_type
  - code_identifier
  - code_challenge
  - PPID
  - Custom App
  - access token
  - client_id
  - client_secret
  - product_selections
  - assign_assets_to
  - product_ref
  - locale
  - API user
  - YOUR_BASE_64_CLIENT_ID_AND_SECRET
  - RefreshToken
  - ACLs
  - EE permissions
  - Connections
  - App's connection settings
  - OauthToken
  - job
  - author
  - X-PIM-URL
  - Pub/Sub Topics
  - Pub/Sub Permissions
  - App
  - PIM Connection
  - API token
  - Subscriber
  - Subscription
  - App token
  - AuthProvider
  - NamedCredential
  - Connection
  - Connector
  - Connection token
  - clientId
  - clientSecret
  - OAuthToken
  - PIM products
  - assets
  - reference entities
  - PIM API
  - token
  - accessToken
  - OAuthClient
  - AccessToken
  - API Token
client:
  base_url: https://api.akeneo.com
  auth:
    location: header
    header_name: Authorization
    activate_url: '{{ activate_url }}'
    callback_url: '{{ callback_url }}'
    type: oauth2
    flow: authorization_code
    token_url: https://my-pim.cloud.akeneo.com/connect/apps/v1/oauth2/token
    client_id: '{{ dlt.secrets[''akeneo_client_id''] }}'
    client_secret: '{{ dlt.secrets[''akeneo_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''akeneo_refresh_token''] }}'
    scopes:
    - read_products
    - write_products
    - delete_products
    - read_catalog_structure
    - read_channel_settings
    - read_channel_localization
    - read_attribute_options
    - read_catalogs
    - write_catalogs
    - delete_catalogs
  headers:
    Content-Type: application/x-www-form-urlencoded
    Accept: application/json
    Content-type: application/json
    X-PIM-CLIENT-ID: '{{ dlt.secrets[''client_id''] }}'
    X-PIM-URL: https://your-pim-url
    X-PIM-TOKEN: your-token
    Authorization: Bearer {{ dlt.secrets['your_app_token'] }}
    scopes: read_products write_products
  paginator:
    type: cursor
    page_size_param: limit
    cursor_param: page
    default_page_size: 25
    cursor_path: _links.next.href
source_metadata: null
