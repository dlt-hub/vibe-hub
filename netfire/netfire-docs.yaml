resources:
- name: Delete Host
  endpoint:
    path: /{tenant}/{host}
    method: DELETE
- name: list_host_ids
  endpoint:
    path: /{tenant}/?list=true
    method: GET
    data_selector: array of strings
    params:
      tenant: string
- name: list_hostids
  endpoint:
    path: /{tenant}/?list=true
    method: GET
    data_selector: array of strings
    params:
      tenant: string
- name: list_hosts
  endpoint:
    path: /{tenant}/
    method: GET
- name: list_hosts
  endpoint:
    path: /{tenant}/
    method: GET
- name: host
  endpoint:
    path: /{tenant}/{host}
    method: GET
    data_selector: object
    params: {}
- name: read_host
  endpoint:
    path: /waf/v1/{tenant}/{host}
    method: GET
    data_selector: object
    params: {}
- name: create_host
  endpoint:
    path: /{tenant}/
    method: POST
- name: create_host
  endpoint:
    path: /waf/v1/{tenant}/
    method: POST
- name: update_host
  endpoint:
    path: /{tenant}/{host}
    method: PATCH
- name: update_host
  endpoint:
    path: /waf/v1/{tenant}/{host}
    method: PATCH
- name: List Redirects
  endpoint:
    path: /links-v1-list-redirects
    method: GET
- name: Read Redirect
  endpoint:
    path: /links-v1-read-redirect
    method: GET
- name: Create Redirect
  endpoint:
    path: /links-v1-create-redirect
    method: POST
- name: Update Redirect
  endpoint:
    path: /links-v1-update-redirect
    method: PATCH
- name: Delete Redirect
  endpoint:
    path: /links-v1-delete-redirect
    method: DELETE
- name: List Redirects
  endpoint:
    path: /links-v1-list-redirects
    method: GET
- name: Read Redirect
  endpoint:
    path: /links-v1-read-redirect
    method: GET
- name: Create Redirect
  endpoint:
    path: /links-v1-create-redirect
    method: POST
- name: Update Redirect
  endpoint:
    path: /links-v1-update-redirect
    method: PATCH
- name: Delete Redirect
  endpoint:
    path: /links-v1-delete-redirect
    method: DELETE
- name: List RedirectIDs
  endpoint:
    path: /links-v1-list-redirectid
    method: GET
- name: List Redirects
  endpoint:
    path: /links-v1-list-redirects
    method: GET
    data_selector: redirects
- name: Create Redirect
  endpoint:
    path: /links-v1-create-redirect
    method: POST
    data_selector: redirect
- name: Update Redirect
  endpoint:
    path: /links-v1-update-redirect
    method: PATCH
    data_selector: redirect
- name: Delete Redirect
  endpoint:
    path: /links-v1-delete-redirect
    method: DELETE
    data_selector: redirect
- name: List Redirects
  endpoint:
    path: /links/v1/ListRedirects
    method: GET
- name: Read Redirect
  endpoint:
    path: /links/v1/ReadRedirect
    method: GET
- name: Create Redirect
  endpoint:
    path: /links/v1/CreateRedirect
    method: POST
- name: Update Redirect
  endpoint:
    path: /links/v1/UpdateRedirect
    method: PATCH
- name: Delete Redirect
  endpoint:
    path: /links/v1/DeleteRedirect
    method: DELETE
- name: List RedirectIDs
  endpoint:
    path: /{tenant}/?list=true
    method: GET
    data_selector: array of strings
    params:
      tenant: string
- name: List RedirectIDs
  endpoint:
    path: /{tenant}/?list=true
    method: GET
- name: List Redirects
  endpoint:
    path: /{tenant}/
    method: GET
- name: list_redirects
  endpoint:
    path: /
    method: GET
- name: Read Redirect
  endpoint:
    path: /{tenant}/{redirect}
    method: GET
    data_selector: json
    params: {}
- name: create_redirect
  endpoint:
    path: /links/v1/{tenant}/
    method: POST
- name: Read Redirect
  endpoint:
    path: /links/v1/{tenant}/{redirect}
    method: GET
    data_selector: json
- name: List Redirects
  endpoint:
    path: /links/v1/list-redirects
    method: GET
- name: update_redirect
  endpoint:
    path: /links/v1/{tenant}/{redirect}
    method: PATCH
- name: create_redirect
  endpoint:
    path: /links/v1/{tenant}/
    method: POST
- name: delete_redirect
  endpoint:
    path: /links/v1/{tenant}/{redirect}
    method: DELETE
- name: update_redirect
  endpoint:
    path: /{tenant}/{redirect}
    method: PATCH
- name: S3
  endpoint:
    path: /s3
    method: GET
- name: Swift
  endpoint:
    path: /swift
    method: GET
- name: delete_redirect
  endpoint:
    path: /links/v1/{tenant}/{redirect}
    method: DELETE
- name: S3
  endpoint:
    path: /s3
    method: GET
- name: Swift
  endpoint:
    path: /swift
    method: GET
- name: List Redirects
  endpoint:
    path: /reference/links-v1-list-redirects
    method: GET
- name: Create Host
  endpoint:
    path: /reference/waf-v1-create-host
    method: POST
- name: BucketAnywhere
  endpoint:
    path: /reference/cloud-storage-bucketanywhere
    method: GET
- name: CloudBerry Explorer
  endpoint:
    path: /reference/cloud-storage-cloudberry-explorer
    method: GET
- name: Cyberduck
  endpoint:
    path: /reference/cloud-storage-cyberduck
    method: GET
- name: Duck
  endpoint:
    path: /reference/cloud-storage-duck
    method: GET
- name: Mountain Duck
  endpoint:
    path: /reference/cloud-storage-mountain-duck
    method: GET
- name: python-swiftclient
  endpoint:
    path: /reference/cloud-storage-python-swiftclient
    method: GET
- name: Rclone
  endpoint:
    path: /reference/cloud-storage-rclone
    method: GET
- name: S3 Browser
  endpoint:
    path: /reference/cloud-storage-s3-browser
    method: GET
- name: s3cmd
  endpoint:
    path: /reference/cloud-storage-s3cmd
    method: GET
- name: s3fs
  endpoint:
    path: /reference/cloud-storage-s3fs
    method: GET
- name: host
  endpoint:
    path: /waf/v1/hosts
    method: GET
- name: redirect
  endpoint:
    path: /links/v1/redirects
    method: GET
- name: usage
  endpoint:
    path: /?usage
    method: GET
    data_selector: Usage
- name: buckets
  endpoint:
    path: /
    method: GET
    data_selector: AccessControlPolicy
- name: Delete Host
  endpoint:
    path: /waf/v1/host
    method: DELETE
- name: Update Host
  endpoint:
    path: /waf/v1/host
    method: PATCH
- name: Create Host
  endpoint:
    path: /waf/v1/host
    method: POST
- name: Read Host
  endpoint:
    path: /waf/v1/host
    method: GET
- name: List Hosts
  endpoint:
    path: /waf/v1/hosts
    method: GET
- name: List HostIDs
  endpoint:
    path: /waf/v1/hostids
    method: GET
- name: AccessControlPolicy
  endpoint:
    path: /?acl
    method: PUT
- name: usage_information
  endpoint:
    path: /?usage
    method: GET
    data_selector: Usage
- name: buckets
  endpoint:
    path: /
    method: GET
    data_selector: Buckets
- name: AccessControlPolicy
  endpoint:
    path: /?acl
    method: PUT
    data_selector: AccessControlPolicy
    params: {}
- name: list_objects
  endpoint:
    path: /
    method: GET
    data_selector: ListBucketResult.Contents
    params: {}
- name: delete_object
  endpoint:
    path: /testfile.alt
    method: DELETE
    data_selector: ''
    params: {}
- name: list_objects
  endpoint:
    path: /
    method: GET
- name: create_object
  endpoint:
    path: /{object_name}
    method: PUT
- name: delete_object
  endpoint:
    path: /{object_name}
    method: DELETE
- name: service_capabilities
  endpoint:
    path: /info
    method: GET
    data_selector: bulk_delete
    params: {}
- name: account_status
  endpoint:
    path: /v1/AUTH_NetFire$example/example
    method: HEAD
    data_selector: X-Container-Object-Count
    params: {}
- name: container_status
  endpoint:
    path: /v1/AUTH_NetFire$example/example
    method: HEAD
    data_selector: X-Container-Bytes-Used
    params: {}
- name: object_status
  endpoint:
    path: /v1/AUTH_NetFire$example/example/pathprefix1/cat.png
    method: HEAD
    data_selector: Content-Length
    params: {}
- name: containers
  endpoint:
    path: /v1/AUTH_NetFire$example
    method: GET
    data_selector: account.container
    params:
      format: xml
- name: service_capabilities
  endpoint:
    path: /info
    method: GET
    data_selector: bulk_delete
    params: {}
- name: account_status
  endpoint:
    path: /v1/AUTH_NetFire$example/example
    method: HEAD
    data_selector: X-Container-Object-Count
    params: {}
- name: container_status
  endpoint:
    path: /v1/AUTH_NetFire$example/example
    method: HEAD
    data_selector: X-Container-Bytes-Used
    params: {}
- name: object_status
  endpoint:
    path: /v1/AUTH_NetFire$example/example/pathprefix1/cat.png
    method: HEAD
    data_selector: Content-Length
    params: {}
- name: containers
  endpoint:
    path: /v1/AUTH_NetFire$example
    method: GET
    data_selector: account.container
    params:
      format: xml
- name: list_objects
  endpoint:
    path: /v1/AUTH_NetFire$example/example
    method: GET
    data_selector: objects
- name: get_object_metadata
  endpoint:
    path: /v1/AUTH_NetFire$example/example/{object_name}
    method: GET
    data_selector: metadata
- name: update_object_metadata
  endpoint:
    path: /v1/AUTH_NetFire$example/example/{object_name}
    method: POST
    data_selector: update_metadata
- name: list_objects
  endpoint:
    path: /v1/AUTH_NetFire$example/example
    method: GET
    data_selector: objects
    params: {}
- name: object_metadata
  endpoint:
    path: /v1/AUTH_NetFire$example/example
    method: GET
    data_selector: container
- name: update_object_metadata
  endpoint:
    path: /v1/AUTH_NetFire$example/example/cat.png
    method: POST
    data_selector: metadata
- name: object_metadata
  endpoint:
    path: /v1/AUTH_NetFire$example/example/cat.png
    method: POST
    data_selector: X-Object-Meta-*
notes:
- Please use this resource in lieu of 'List Hosts' whenever possible, as it is less
  resource-intensive.
- This call is resource-intensive. Please limit use of this call.
- All body content is JSON, which the Content-Type of application/json.
- If invalid JSON content is passed to the API, an HTTP 422 Unprocessable Entity status
  will be returned.
- The API uses HTTP Basic authentication (username/password) for each request.
- Authorization is performed via your NetFire-managed Active Directory domain.
- Requires 'List' permission.
- Requires 'List' AND 'Read' permission.
- Documentation examples use us-east1 zone.
- Supports client-side encryption/decryption via Cryptomator
- Wide range of protocol/service support
- While we don't recommend switching between protocols frequently to avoid confusion,
  the majority of operations you perform via one protocol are directly reflected via
  the other protocol.
- Uses DNS buckets for modern compatibility.
- Public links behavior may be unpredictable if bucket names collide.
- NetFire will never ask for your secret key!
- It is recommended to use AWS4 whenever possible.
- Uses DNS buckets for authenticated requests.
- X-AMZ-Date and Host must be included in request headers
- Authorization header requires the signature generated using the signing key
- Some headers must not be included as canonical headers or signed.
- All requests mentioned here require authentication.
- All requests require authentication.
- Currently, the only service information available is usage statistics for your user.
- DNS bucket URL can only be used for authenticated requests.
- You can grant/revoke ACLs by username or email address.
- Currently, Swift tokens expire after 24 hours!
- This documentation is primarily for developers!
- Swift is a much simpler protocol than S3, but its reference is entirely open/publicly
  accessible.
- Tokens expire after 24 hours
- Not all requests require authentication.
- Additional headers may be present in responses.
- All requests require authentication
- X-Meta-* headers are the defined metadata of an object
errors:
- 400 - Missing HostID
- 404 - HostID does not exist
- '415 Unsupported Media Type: Content-Type header missing'
- '422 Unprocessable Entity: Invalid JSON content'
- '404 Not Found: Endpoint does not exist'
- '500 Internal Server Error: Contact support with X-Correlation-ID'
- '401 Unauthorized: Recheck username/password or permissions'
- '403 Forbidden: Check your Active Directory permissions'
- '405 Method Not Allowed: Check the operation''s URL method'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '403 Forbidden: Authorization failed'
- '405 Method Not Allowed: Unsupported method for operation''s URL'
- '200: Result'
- '400 Bad Request: If no HostID is provided'
- '404 Not Found: If a nonexistent HostID is provided'
- '400: Bad Request'
- '404: Not Found'
- '303 See Other: Existing Host object'
- '415 Unsupported Media Type: Invalid JSON or Content-Type'
- '422 Unprocessable Content: Validation failed'
- '303 See Other: Host already exists with the specified HostID'
- '422 Unprocessable Content: HTTP Body fails data validation'
- 422 - Invalid HTTP Body values
- 'HTTP 404 Not Found: If trying to access an endpoint that does not exist.'
- 'HTTP 500 Internal Server Error: Contact support by emailing help@netfire.com.'
- '401 Unauthorized: Authentication failed or no authentication provided.'
- '403 Forbidden: Authorization failed.'
- '405 Method Not Allowed: Unsupported method for an operation''s URL.'
- '401 Unauthorized: Authentication failed or not provided'
- '403 Forbidden: Access denied due to insufficient permissions'
- '405 Method Not Allowed: Unsupported HTTP method for the requested operation'
- '400 Bad Request: If no RedirectID is provided'
- '404 Not Found: If a nonexistent RedirectID is provided'
- '409 Conflict: Redirect already exists with the specified combination of modifier
  and path'
- '415 Unsupported Media Type: Invalid JSON body or incorrect Content-Type'
- 400 - Missing Redirect ID
- 404 - Redirect ID does not exist
- '415 Unsupported Media Type: HTTP Body is invalid JSON or Content-Type is not specified
  correctly'
- '400 Bad Request: If no Redirect ID is provided'
- '404 Not Found: If a nonexistent Redirect ID is provided'
- 'Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck AWS scopes or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'HTTP/1.1 200 OK: Successful request.'
- 'HTTP/1.1 403 Forbidden: Access denied due to insufficient permissions.'
- 'HTTP/1.1 403 Forbidden: Check your permissions.'
- 'HTTP/1.1 404 Not Found: The specified bucket does not exist.'
- '401 Unauthorized: Check your authentication token'
- '415 Unsupported Media Type: Content-Type header is missing'
- '422 Unprocessable Entity: Invalid JSON content passed to the API'
- '415 Unsupported Media Type: Content-Type header missing.'
- '422 Unprocessable Entity: Invalid JSON content.'
- '404 Not Found: Endpoint does not exist.'
- '500 Internal Server Error: Contact support with X-Correlation-ID.'
- '422 Unprocessable Entity: Invalid JSON content passed'
- '404 Not Found: Attempting to access a non-existent endpoint'
auth_info:
  mentioned_objects:
  - X-Auth-Token
client:
  base_url: https://api.netfire.com/waf/v1
  headers:
    accept: application/json
source_metadata: null
