resources:
- name: KYC Review
  endpoint:
    path: /api-docs/api-reference/kyc-review
    method: GET
- name: Create KYC Review
  endpoint:
    path: /api-docs/api-reference/kyc-review#create-kyc-review
    method: POST
- name: Get all KYC Reviews for a profile
  endpoint:
    path: /api-docs/api-reference/kyc-review#get-kyc-reviews
    method: GET
- name: Get KYC Review by ID
  endpoint:
    path: /api-docs/api-reference/kyc-review#get-kyc-review-by-id
    method: GET
- name: Update KYC review to get a hosted KYC link
  endpoint:
    path: /api-docs/api-reference/kyc-review#update-redirect-url
    method: PUT
- name: Submit a KYC Requirement for a KYC Review
  endpoint:
    path: /api-docs/api-reference/kyc-review#kyc-submit
    method: POST
- name: create_kyc_review
  endpoint:
    path: /v1/profiles/{profileId}/kyc-reviews
    method: POST
    data_selector: id
- name: get_kyc_reviews
  endpoint:
    path: /v1/profiles/{profileId}/kyc-reviews
    method: GET
    data_selector: records
- name: get_kyc_review_by_id
  endpoint:
    path: /v2/profiles/{profileId}/kyc-reviews/{kycReviewId}
    method: GET
    data_selector: records
- name: update_kyc_review
  endpoint:
    path: /v1/profiles/{profileId}/kyc-reviews/{kycReviewId}
    method: PATCH
    data_selector: link
- name: submit_kyc_requirement
  endpoint:
    path: /v2/profiles/{profileId}/kyc-reviews/{kycReviewId}/requirements/{requirementKey}
    method: POST
    data_selector: ''
- name: KYC Review
  endpoint:
    path: /api-docs/api-reference/kyc-review
    method: GET
- name: Create KYC Review
  endpoint:
    path: /api-docs/api-reference/kyc-review#create-kyc-review
    method: POST
- name: Get all KYC Reviews for a profile
  endpoint:
    path: /api-docs/api-reference/kyc-review#get-kyc-reviews
    method: GET
- name: Get KYC Review by ID
  endpoint:
    path: /api-docs/api-reference/kyc-review#get-kyc-review-by-id
    method: GET
- name: Update KYC review to get a hosted KYC link
  endpoint:
    path: /api-docs/api-reference/kyc-review#update-redirect-url
    method: PUT
- name: Submit a KYC Requirement for a KYC Review
  endpoint:
    path: /api-docs/api-reference/kyc-review#kyc-submit
    method: POST
- name: quote
  endpoint:
    path: /api-docs/api-reference/quote
    method: GET
- name: recipient
  endpoint:
    path: /api-docs/api-reference/recipient
    method: GET
- name: transfer
  endpoint:
    path: /api-docs/api-reference/transfer
    method: GET
- name: create_kyc_review
  endpoint:
    path: /v1/profiles/{profileId}/kyc-reviews
    method: POST
    data_selector: id
- name: get_kyc_reviews
  endpoint:
    path: /v1/profiles/{profileId}/kyc-reviews
    method: GET
    data_selector: records
- name: get_kyc_review_by_id
  endpoint:
    path: /v2/profiles/{profileId}/kyc-reviews/{kycReviewId}
    method: GET
    data_selector: records
- name: update_kyc_review
  endpoint:
    path: /v1/profiles/{profileId}/kyc-reviews/{kycReviewId}
    method: PATCH
    data_selector: link
- name: submit_kyc_requirement
  endpoint:
    path: /v2/profiles/{profileId}/kyc-reviews/{kycReviewId}/requirements/{requirementKey}
    method: POST
    data_selector: ''
- name: quote
  endpoint:
    path: /api-docs/api-reference/quote
    method: GET
- name: recipient
  endpoint:
    path: /api-docs/api-reference/recipient
    method: GET
- name: transfer
  endpoint:
    path: /api-docs/api-reference/transfer
    method: GET
- name: quotes
  endpoint:
    path: /api/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: transfers
  endpoint:
    path: /api/v1/transfers
    method: POST
    data_selector: transfers
    params: {}
- name: payments
  endpoint:
    path: /api/v1/payments
    method: GET
    data_selector: payments
    params: {}
- name: payment_instrument
  endpoint:
    path: /v3/profiles/{{profileId}}/payment-instruments
    method: POST
- name: manual_confirmation
  endpoint:
    path: /v3/profiles/{{profileId}}/payment-instruments/{{paymentInstrumentId}}/manual-confirmation
    method: POST
- name: transfer
  endpoint:
    path: /v1/transfers
    method: POST
- name: payin
  endpoint:
    path: /v3/profiles/{{profileId}}/payment-instruments/{{paymentInstrumentId}}/payins
    method: POST
- name: status
  endpoint:
    path: /v3/profiles/{{profileId}}/payment-instruments/{{paymentInstrumentId}}
    method: GET
- name: Exchange Rates
  endpoint:
    path: /public/api-docs/guides/affiliates#exchange-rates-list
- name: Get Temporary Quote
  endpoint:
    path: /public/api-docs/guides/affiliates#quotes-get-temporary-quote
- name: accounts
  endpoint:
    path: /open-banking/v3.1.11/aisp/accounts
    method: GET
    data_selector: Data.Account
    params: {}
- name: account_access_consents
  endpoint:
    path: /open-banking/v3.1.11/aisp/account-access-consents
    method: POST
    data_selector: Data
    params: {}
- name: send_money
  endpoint:
    path: /api/v1/send_money
    method: POST
- name: track_payments
  endpoint:
    path: /api/v1/track_payments
    method: GET
- name: payment_instrument
  endpoint:
    path: /v3/profiles/{{profileId}}/payment-instruments
    method: POST
- name: manual_confirmation
  endpoint:
    path: /v3/profiles/{{profileId}}/payment-instruments/{{paymentInstrumentId}}/manual-confirmation
    method: POST
- name: transfer
  endpoint:
    path: /v1/transfers
    method: POST
- name: payin
  endpoint:
    path: /v3/profiles/{{profileId}}/payment-instruments/{{paymentInstrumentId}}/payins
    method: POST
- name: status_check
  endpoint:
    path: /v3/profiles/{{profileId}}/payment-instruments/{{paymentInstrumentId}}/status
    method: GET
- name: accounts
  endpoint:
    path: /open-banking/v3.1.11/aisp/accounts
    method: GET
    data_selector: Data.Account
- name: balances
  endpoint:
    path: /open-banking/v3.1.11/aisp/accounts/{id}/balances
    method: GET
- name: transactions
  endpoint:
    path: /open-banking/v3.1.11/aisp/accounts/{id}/transactions
    method: GET
- name: direct_debits
  endpoint:
    path: /open-banking/v3.1.11/aisp/accounts/{id}/direct-debits
    method: GET
- name: domestic_payments
  endpoint:
    path: /open-banking/v3.1.11/pisp/domestic-payments
    method: POST
- name: international_payments
  endpoint:
    path: /open-banking/v3.1.11/pisp/international-payments
    method: POST
- name: Exchange Rates
  endpoint:
    path: /public/api-docs/guides/affiliates#exchange-rates-list
- name: Get Temporary Quote
  endpoint:
    path: /public/api-docs/guides/affiliates#quotes-get-temporary-quote
- name: batch_group
  endpoint:
    path: /v3/profiles/{{profileId}}/batch-groups
    method: POST
    data_selector: ''
    params: {}
- name: complete_batch_group
  endpoint:
    path: /v3/profiles/{{profileId}}/batch-groups/{{batchGroupId}}
    method: PATCH
    data_selector: ''
    params: {}
- name: payment_initiation
  endpoint:
    path: /v1/profiles/{{profileId}}/batch-groups/{{batchGroupId}}/payment-initiations/{{paymentInitiationId}}
    method: GET
    data_selector: ''
    params: {}
- name: payment_initiations
  endpoint:
    path: /v1/profiles/{{profileId}}/batch-groups/{{batchGroupId}}/payment-initiations/{{paymentInitiationId}}
    method: GET
    data_selector: id
    params: {}
- name: accounts
  endpoint:
    path: /open-banking/v3.1.11/aisp/accounts
    method: GET
    data_selector: Data.Account
- name: balances
  endpoint:
    path: /open-banking/v3.1.11/aisp/accounts/{id}/balances
    method: GET
    data_selector: Data.Balance
- name: transactions
  endpoint:
    path: /open-banking/v3.1.11/aisp/accounts/{id}/transactions
    method: GET
    data_selector: Data.Transaction
- name: direct_debits
  endpoint:
    path: /open-banking/v3.1.11/aisp/accounts/{id}/direct-debits
    method: GET
    data_selector: Data.DirectDebit
- name: batch_group
  endpoint:
    path: /v3/profiles/{{profileId}}/batch-groups
    method: POST
    data_selector: batch group object
- name: payment_initiation
  endpoint:
    path: /v1/profiles/{{profileId}}/batch-groups/{{batchGroupId}}/payment-initiations/{{paymentInitiationId}}
    method: GET
    data_selector: payment initiation object
- name: transfer
  endpoint:
    path: /v1/transfers/{{transferId}}
    method: GET
    data_selector: transfer object
- name: banking_partner
  endpoint:
    path: /v2/transfers/{{transferId}}/invoices/bankingpartner
    method: GET
    data_selector: response
    params: {}
- name: payment_initiation
  endpoint:
    path: /v1/profiles/{{profileId}}/batch-groups/{{batchGroupId}}/payment-initiations/{{paymentInitiationId}}
    method: GET
    data_selector: id
    params: {}
- name: delivery_estimate
  endpoint:
    path: /api-docs/api-reference/delivery-estimate
    method: GET
- name: receipt_pdf
  endpoint:
    path: /api-docs/api-reference/transfer#receipt-pdf
    method: GET
- name: banking_partner_payout_information
  endpoint:
    path: /api-docs/api-reference/transfer#banking-reference-number
    method: GET
- name: cancel_transfer
  endpoint:
    path: /api-docs/api-reference/transfer#cancel
    method: GET
- name: quote
  endpoint:
    path: /v3/quote
    method: POST
    data_selector: quote
    params: {}
- name: transfer
  endpoint:
    path: /v1/transfers/{{transferId}}
    method: GET
- name: banking_partner
  endpoint:
    path: /v2/transfers/{{transferId}}/invoices/bankingpartner
    method: GET
- name: settlement_journal
  endpoint:
    path: /api/v1/settlement-journal
    method: POST
    data_selector: data
    params: {}
- name: simulation
  endpoint:
    path: /api-docs/api-reference/simulation
    method: GET
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
- name: balance-update
  endpoint:
    path: /api-docs/webhooks-notifications/event-types#balance-update-event
    method: GET
- name: transfer-state-change
  endpoint:
    path: /api-docs/webhooks-notifications/event-types#transfer-state-change
    method: GET
- name: transfer-active-cases
  endpoint:
    path: /api-docs/webhooks-notifications/event-types#transfer-active-cases
    method: GET
- name: transfer-payout-failure
  endpoint:
    path: /api-docs/webhooks-notifications/event-types#transfer-payout-failure
    method: GET
- name: users-state-change
  endpoint:
    path: /api-docs/webhooks-notifications/event-types#user-state-change
    method: GET
- name: delivery estimate
  endpoint:
    path: /api-docs/api-reference/delivery-estimate#get
    method: GET
- name: receipt-pdf
  endpoint:
    path: /api-docs/api-reference/transfer#receipt-pdf
    method: GET
- name: banking partner payout information
  endpoint:
    path: /api-docs/api-reference/transfer#banking-reference-number
    method: GET
- name: cancel transfer
  endpoint:
    path: /api-docs/api-reference/transfer#cancel
    method: GET
- name: currencies
  endpoint:
    path: /v1/currencies
    method: GET
- name: quotes
  endpoint:
    path: /v3/quotes
    method: GET
- name: account-requirements
  endpoint:
    path: /v1/quotes/<quoteId/quoteUuid>/account-requirements
    method: GET
- name: accounts
  endpoint:
    path: /v1/accounts
    method: GET
- name: transfers
  endpoint:
    path: /v1/transfers
    method: GET
- name: transfer-requirements
  endpoint:
    path: /v1/transfer-requirements
    method: GET
- name: deposit-details
  endpoint:
    path: /v1/profiles/<profileId>/transfers/<transferId>/deposit-details/bank-transfer
    method: GET
- name: balance-statements
  endpoint:
    path: /v1/profiles/<profileId>/balance-statements/<balanceId>/statement
    method: GET
- name: quote
  endpoint:
    path: /v3/quote
    method: POST
    data_selector: quote
    params: {}
- name: inform_challenge_result
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/3dsecure/challenge-result
    method: POST
    data_selector: 204 - No Content
    params: {}
- name: contact
  endpoint:
    path: /api-docs/api-reference/contact
    method: GET
- name: webhook_subscription
  endpoint:
    path: /api/webhooks/subscriptions
    method: POST
- name: upload_evidences
  endpoint:
    path: /v5/profiles/{{profileId}}/additional-verification/upload-evidences
    method: POST
    data_selector: results
    params: {}
- name: upload_document
  endpoint:
    path: /v3/profiles/{{profileId}}/verification-status/upload-document
    method: POST
    data_selector: results
    params: {}
- name: required_evidences
  endpoint:
    path: /v3/profiles/{{profileId}}/verification-status/required-evidences
    method: GET
    data_selector: required_evidences
    params: {}
- name: activities
  endpoint:
    path: /v1/profiles/{{profileId}}/activities
    method: GET
    data_selector: activities
    params: {}
- name: activities
  endpoint:
    path: /activities
    method: GET
    data_selector: activities
- name: currencies
  endpoint:
    path: /v1/currencies
    method: GET
- name: quotes
  endpoint:
    path: /v3/quotes
    method: GET
- name: account_requirements
  endpoint:
    path: /v1/quotes/<quoteId/quoteUuid>/account-requirements
    method: GET
- name: accounts
  endpoint:
    path: /v1/accounts
    method: GET
- name: transfers
  endpoint:
    path: /v1/transfers
    method: GET
- name: transfer_requirements
  endpoint:
    path: /v1/transfer-requirements
    method: GET
- name: deposit_details
  endpoint:
    path: /v1/profiles/<profileId>/transfers/<transferId>/deposit-details/bank-transfer
    method: GET
- name: balance_statements
  endpoint:
    path: /v1/profiles/<profileId>/balance-statements/<balanceId>/statement
    method: GET
- name: challenge_result
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/3dsecure/challenge-result
    method: POST
    data_selector: null
    params: {}
- name: Contact
  endpoint:
    path: /api-docs/api-reference/contact
    method: GET
- name: addresses
  endpoint:
    path: /v1/addresses
    method: POST
    data_selector: address
    params: {}
- name: address_by_id
  endpoint:
    path: /v1/addresses/{{addressId}}
    method: GET
    data_selector: address
    params: {}
- name: list_addresses
  endpoint:
    path: /v1/addresses
    method: GET
    data_selector: addresses
    params:
      profile: '{{profileId}}'
- name: address_requirements
  endpoint:
    path: /v1/address-requirements
    method: GET
    data_selector: requirements
    params: {}
- name: upload_evidences
  endpoint:
    path: /v5/profiles/{{profileId}}/additional-verification/upload-evidences
    method: POST
- name: upload_document
  endpoint:
    path: /v3/profiles/{{profileId}}/verification-status/upload-document
    method: POST
- name: required_evidences
  endpoint:
    path: /v3/profiles/{{profileId}}/verification-status/required-evidences
    method: GET
- name: activities
  endpoint:
    path: /v1/profiles/{{profileId}}/activities
    method: GET
    data_selector: activities
    params: {}
- name: activities
  endpoint:
    path: /v1/profiles/{{profileId}}/activities
    method: GET
    data_selector: activities
- name: addresses
  endpoint:
    path: /v1/addresses
    method: POST
    data_selector: address
    params: {}
- name: address_by_id
  endpoint:
    path: /v1/addresses/{{addressId}}
    method: GET
    data_selector: address
    params: {}
- name: list_addresses
  endpoint:
    path: /v1/addresses
    method: GET
    data_selector: addresses
    params:
      profile: '{{profileId}}'
- name: address_requirements
  endpoint:
    path: /v1/address-requirements
    method: GET
    data_selector: requirements
    params: {}
- name: balance
  endpoint:
    path: /api-docs/api-reference/balance
    method: GET
- name: balance_statement
  endpoint:
    path: /api-docs/api-reference/balance-statement
    method: GET
- name: bank_account_details
  endpoint:
    path: /api-docs/api-reference/bank-account-details
    method: GET
- name: balance
  endpoint:
    path: /v4/profiles/{{profileId}}/balances
    method: POST
    data_selector: balance
    params: {}
- name: balance_by_id
  endpoint:
    path: /v4/profiles/{{profileId}}/balances/{{balanceId}}
    method: GET
    data_selector: balance
    params: {}
- name: list_balances
  endpoint:
    path: /v4/profiles/{{profileId}}/balances
    method: GET
    data_selector: balances
    params:
      types: STANDARD
- name: remove_balance
  endpoint:
    path: /v4/profiles/{{profileId}}/balances/{{balanceId}}
    method: DELETE
    data_selector: balance
    params: {}
- name: convert_balance
  endpoint:
    path: /v2/profiles/{{profileId}}/balance-movements
    method: POST
    data_selector: conversion
    params: {}
- name: balance_capacity
  endpoint:
    path: /v1/profiles/{{profileId}}/balance-capacity
    method: GET
    data_selector: capacity
    params: {}
- name: add_excess_money_account
  endpoint:
    path: /v1/profiles/{{profileId}}/excess-money-account
    method: POST
    data_selector: excessMoneyAccount
    params: {}
- name: balance
  endpoint:
    path: /api-docs/api-reference/balance
    method: GET
- name: balance_statement
  endpoint:
    path: /api-docs/api-reference/balance-statement
    method: GET
- name: bank_account_details
  endpoint:
    path: /api-docs/api-reference/bank-account-details
    method: GET
- name: batch_group
  endpoint:
    path: /api-docs/api-reference/batch-group
    method: GET
- name: bulk_settlement
  endpoint:
    path: /api-docs/api-reference/bulk-settlement
    method: GET
- name: card
  endpoint:
    path: /api-docs/api-reference/card
    method: GET
- name: card_order
  endpoint:
    path: /api-docs/api-reference/card-order
    method: GET
- name: card_kiosk_collection
  endpoint:
    path: /api-docs/api-reference/card-kiosk-collection
    method: GET
- name: card_transaction
  endpoint:
    path: /api-docs/api-reference/card-transaction
    method: GET
- name: claim_account
  endpoint:
    path: /api-docs/api-reference/claim-account
    method: GET
- name: client_credentials_token
  endpoint:
    path: /api-docs/api-reference/client-credentials-token
    method: GET
- name: comparison
  endpoint:
    path: /api-docs/api-reference/comparison
    method: GET
- name: contact
  endpoint:
    path: /api-docs/api-reference/contact
    method: GET
- name: currencies
  endpoint:
    path: /api-docs/api-reference/currencies
    method: GET
- name: delivery_estimate
  endpoint:
    path: /api-docs/api-reference/delivery-estimate
    method: GET
- name: direct_debit_account
  endpoint:
    path: /api-docs/api-reference/direct-debit-account
    method: GET
- name: disputes
  endpoint:
    path: /api-docs/api-reference/disputes
    method: GET
- name: facetec
  endpoint:
    path: /api-docs/api-reference/facetec
    method: GET
- name: multi_currency_account
  endpoint:
    path: /api-docs/api-reference/multi-currency-account
    method: GET
- name: strong_customer_authentication
  endpoint:
    path: /api-docs/api-reference/strong-customer-authentication
    method: GET
- name: one_time_token
  endpoint:
    path: /api-docs/api-reference/one-time-token
    method: GET
- name: jose
  endpoint:
    path: /api-docs/api-reference/jose
    method: GET
- name: kyc_review
  endpoint:
    path: /api-docs/api-reference/kyc-review
    method: GET
- name: partner_cases
  endpoint:
    path: /api-docs/api-reference/case
    method: GET
- name: payin_deposit_detail
  endpoint:
    path: /api-docs/api-reference/payin-deposit-detail
    method: GET
- name: profile
  endpoint:
    path: /api-docs/api-reference/profile
    method: GET
- name: push_provisioning
  endpoint:
    path: /api-docs/api-reference/push-provisioning
    method: GET
- name: quote
  endpoint:
    path: /api-docs/api-reference/quote
    method: GET
- name: rate
  endpoint:
    path: /api-docs/api-reference/rate
    method: GET
- name: recipient_account
  endpoint:
    path: /api-docs/api-reference/recipient
    method: GET
- name: simulation
  endpoint:
    path: /api-docs/api-reference/simulation
    method: GET
- name: spend_controls
  endpoint:
    path: /api-docs/api-reference/spend-controls
    method: GET
- name: spend_limits
  endpoint:
    path: /api-docs/api-reference/spend-limits
    method: GET
- name: transfer
  endpoint:
    path: /api-docs/api-reference/transfer
    method: GET
- name: user
  endpoint:
    path: /api-docs/api-reference/user
    method: GET
- name: user_security
  endpoint:
    path: /api-docs/api-reference/user-security
    method: GET
- name: user_tokens
  endpoint:
    path: /api-docs/api-reference/user-tokens
    method: GET
- name: webhook
  endpoint:
    path: /api-docs/api-reference/webhook
    method: GET
- name: excess_money_account
  endpoint:
    path: /v1/profiles/{profileId}/excess-money-account
    method: POST
    data_selector: recipientId
    params: {}
- name: total_funds
  endpoint:
    path: /v1/profiles/{profileId}/total-funds/{currency}
    method: GET
    data_selector: totalWorth
    params: {}
- name: balance_statement
  endpoint:
    path: /api-docs/api-reference/balance-statement
    method: GET
- name: balances
  endpoint:
    path: /v4/profiles/{{profileId}}/balances
    method: POST
    data_selector: null
    params: {}
- name: balance_by_id
  endpoint:
    path: /v4/profiles/{{profileId}}/balances/{{balanceId}}
    method: GET
    data_selector: null
    params: {}
- name: list_balances
  endpoint:
    path: /v4/profiles/{{profileId}}/balances
    method: GET
    data_selector: null
    params:
      types: STANDARD
- name: remove_balance
  endpoint:
    path: /v4/profiles/{{profileId}}/balances/{{balanceId}}
    method: DELETE
    data_selector: null
    params: {}
- name: convert_balance
  endpoint:
    path: /v2/profiles/{{profileId}}/balance-movements
    method: POST
    data_selector: null
    params: {}
- name: check_capacity
  endpoint:
    path: /v1/profiles/{{profileId}}/balance-capacity
    method: GET
    data_selector: null
    params: {}
- name: add_excess_money_account
  endpoint:
    path: /v1/profiles/{profileId}/excess-money-account
    method: POST
    data_selector: null
    params: {}
- name: balance_statement
  endpoint:
    path: /v1/profiles/{{profileId}}/balance-statements/{{balanceId}}/statement.json
    method: GET
    data_selector: transactions
    params:
      currency: EUR
      intervalStart: '2018-03-01T00:00:00.000Z'
      intervalEnd: '2018-04-30T23:59:59.999Z'
- name: excess_money_account
  endpoint:
    path: /v1/profiles/{profileId}/excess-money-account
    method: POST
    data_selector: recipientId
    params: {}
- name: total_funds
  endpoint:
    path: /v1/profiles/{profileId}/total-funds/{currency}
    method: GET
    data_selector: totalWorth
    params: {}
- name: Balance Statement
  endpoint:
    path: /api-docs/api-reference/balance-statement
    method: GET
- name: balance_statement
  endpoint:
    path: /v1/profiles/{{profileId}}/balance-statements/{{balanceId}}/statement.json
    method: GET
    data_selector: balance statement object
    params:
      currency: EUR
      intervalStart: '2018-03-01T00:00:00.000Z'
      intervalEnd: '2018-03-15T23:59:59.999Z'
      type: COMPACT
- name: account_details
  endpoint:
    path: /v1/profiles/{{profileId}}/account-details
    method: GET
    data_selector: account_details
    params: {}
- name: account_details_orders
  endpoint:
    path: /v1/profiles/{{profileId}}/account-details-orders
    method: GET
    data_selector: account_details_orders
    params: {}
- name: create_account_details_order
  endpoint:
    path: /v1/profiles/{{profileId}}/account-details-orders
    method: POST
    data_selector: create_account_details_order
    params: {}
- name: create_multiple_bank_account_details
  endpoint:
    path: /v3/profiles/{{profileId}}/bank-details
    method: POST
    data_selector: create_multiple_bank_account_details
    params: {}
- name: create_payment_return
  endpoint:
    path: /v1/profiles/{{profileId}}/account-details/payments/{{paymentId}}/returns
    method: POST
    data_selector: create_payment_return
    params: {}
- name: account_details
  endpoint:
    path: /v1/profiles/{{profileId}}/account-details
    method: GET
    data_selector: bank account details objects
- name: account_details_orders
  endpoint:
    path: /v1/profiles/{{profileId}}/account-details-orders
    method: POST
    data_selector: status
    params:
      currency: EUR
- name: bank_details
  endpoint:
    path: /v3/profiles/{{profileId}}/bank-details
    method: POST
    data_selector: id
    params:
      targetAccountId: '123456'
- name: payment_return
  endpoint:
    path: /v1/profiles/{{profileId}}/account-details/payments/{{paymentId}}/returns
    method: POST
    data_selector: id
- name: bank_account_details
  endpoint:
    path: /v1/profiles/{{profileId}}/account-details
    method: GET
    data_selector: account_details
    params: {}
- name: account_details_orders
  endpoint:
    path: /v1/profiles/{{profileId}}/account-details-orders
    method: GET
    data_selector: account_details_orders
    params: {}
- name: create_account_details_order
  endpoint:
    path: /v1/profiles/{{profileId}}/account-details-orders
    method: POST
    data_selector: order
    params: {}
- name: create_multiple_bank_details
  endpoint:
    path: /v3/profiles/{{profileId}}/bank-details
    method: POST
    data_selector: multiple_details
    params: {}
- name: create_payment_return
  endpoint:
    path: /v1/profiles/{{profileId}}/account-details/payments/{{paymentId}}/returns
    method: POST
    data_selector: payment_return
    params: {}
- name: batch_group
  endpoint:
    path: /v3/profiles/{{profileId}}/batch-groups
    method: POST
- name: complete_batch_group
  endpoint:
    path: /v3/profiles/{{profileId}}/batch-groups/{{batchGroupId}}
    method: PATCH
- name: cancel_batch_group
  endpoint:
    path: /v3/profiles/{{profileId}}/batch-groups/{{batchGroupId}}
    method: PATCH
- name: retrieve_batch_group
  endpoint:
    path: /v3/profiles/{{profileId}}/batch-groups/{{batchGroupId}}
    method: GET
- name: create_batch_group_transfer
  endpoint:
    path: /v3/profiles/{{profileId}}/batch-groups/{{batchGroupId}}/transfers
    method: POST
- name: fund_batch_group
  endpoint:
    path: /v3/profiles/{{profileId}}/batch-payments/{{batchGroupId}}/payments
    method: POST
- name: fund_batch_group_direct_debit
  endpoint:
    path: /v1/profiles/{{profileId}}/batch-groups/{{batchGroupId}}/payment-initiations
    method: POST
- name: retrieve_batch_group_payment
  endpoint:
    path: /v1/profiles/{{profileId}}/batch-groups/{{batchGroupId}}/payment-initiations/{{paymentInitiationId}}
    method: GET
- name: account_details
  endpoint:
    path: /v1/profiles/{{profileId}}/account-details
    method: GET
    data_selector: bank account details objects
- name: account_details_orders
  endpoint:
    path: /v1/profiles/{{profileId}}/account-details-orders
    method: POST
    data_selector: status
    params:
      currency: EUR
- name: bank_details
  endpoint:
    path: /v3/profiles/{{profileId}}/bank-details
    method: POST
    data_selector: id
    params:
      targetAccountId: '123456'
- name: payment_returns
  endpoint:
    path: /v1/profiles/{{profileId}}/account-details/payments/{{paymentId}}/returns
    method: POST
    data_selector: id
    params:
      reason: CLOSED_ACCOUNT
- name: batch_group
  endpoint:
    path: /v3/profiles/{{profileId}}/batch-groups
    method: POST
    data_selector: batchGroup
    params:
      sourceCurrency: GBP
      name: my-batch-group
- name: payment_initiation
  endpoint:
    path: /v1/profiles/{{profileId}}/batch-groups/{{batchGroupId}}/payment-initiations/{{paymentInitiationId}}
    method: GET
    data_selector: paymentInitiation
    params: {}
- name: settlement_journal
  endpoint:
    path: /v1/settlements
    method: POST
    data_selector: data
    params: {}
- name: batch_group
  endpoint:
    path: /v3/profiles/{{profileId}}/batch-groups
    method: POST
- name: complete_batch_group
  endpoint:
    path: /v3/profiles/{{profileId}}/batch-groups/{{batchGroupId}}
    method: PATCH
- name: cancel_batch_group
  endpoint:
    path: /v3/profiles/{{profileId}}/batch-groups/{{batchGroupId}}
    method: PATCH
- name: retrieve_batch_group
  endpoint:
    path: /v3/profiles/{{profileId}}/batch-groups/{{batchGroupId}}
    method: GET
- name: create_batch_group_transfer
  endpoint:
    path: /v3/profiles/{{profileId}}/batch-groups/{{batchGroupId}}/transfers
    method: POST
- name: fund_batch_group
  endpoint:
    path: /v1/profiles/{{profileId}}/batch-payments/{{batchGroupId}}/payments
    method: POST
- name: fund_batch_group_direct_debit
  endpoint:
    path: /v1/profiles/{{profileId}}/batch-groups/{{batchGroupId}}/payment-initiations
    method: POST
- name: retrieve_batch_group_payment
  endpoint:
    path: /v1/profiles/{{profileId}}/batch-groups/{{batchGroupId}}/payment-initiations/{{paymentInitiationId}}
    method: GET
- name: batch_group
  endpoint:
    path: /v3/profiles/{{profileId}}/batch-groups
    method: POST
    data_selector: batch group object
    params: {}
- name: complete_batch_group
  endpoint:
    path: /v3/profiles/{{profileId}}/batch-groups/{{batchGroupId}}
    method: PATCH
    data_selector: response
    params: {}
- name: payment_initiation
  endpoint:
    path: /v1/profiles/{{profileId}}/batch-groups/{{batchGroupId}}/payment-initiations/{{paymentInitiationId}}
    method: GET
    data_selector: response
    params: {}
- name: settlements
  endpoint:
    path: /v1/settlements
    method: POST
    data_selector: null
    params: {}
- name: cards
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards
    method: GET
    data_selector: records
    params:
      pageNumber: 1
      pageSize: 10
- name: card_details
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/{{cardToken}}
    method: GET
    data_selector: records
    params: {}
- name: update_card_status
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/{{cardToken}}/status
    method: PUT
    data_selector: records
    params: {}
- name: reset_pin_count
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/{{cardToken}}/reset-pin-count
    method: POST
    data_selector: records
    params: {}
- name: get_card_permissions
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/{{cardToken}}/spending-permissions
    method: GET
    data_selector: records
    params: {}
- name: toggle_card_permissions
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/{{cardToken}}/spending-permissions
    method: PATCH
    data_selector: records
    params: {}
- name: sensitive_card_details
  endpoint:
    path: /twcard-data/v1/sensitive-card-data/details
    method: POST
    data_selector: records
    params: {}
- name: retrieve_card_pin
  endpoint:
    path: /twcard-data/v1/sensitive-card-data/pin
    method: POST
    data_selector: records
    params: {}
- name: sensitive_card_data
  endpoint:
    path: /twcard-data/v1/sensitive-card-data/details
    method: POST
    data_selector: nonce
    params:
      keyVersion: 1
- name: card_pin
  endpoint:
    path: /twcard-data/v1/sensitive-card-data/pin
    method: POST
    data_selector: nonce
    params:
      keyVersion: 1
- name: spending_permissions
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/{{cardToken}}/spending-permissions
    method: GET
    data_selector: permissions
    params: {}
- name: modify_spending_permissions
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/{{cardToken}}/spending-permissions
    method: PATCH
    data_selector: 200 - No Content
    params: {}
- name: card_order
  endpoint:
    path: /api-docs/api-reference/card-order
    method: GET
- name: contact
  endpoint:
    path: /api-docs/api-reference/contact
    method: GET
- name: card_orders
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/card-orders
    method: POST
    data_selector: cardOrders
    params: {}
- name: retrieve_card_order
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/card-orders/{{cardOrderId}}
    method: GET
    data_selector: cardOrder
    params: {}
- name: retrieve_all_card_orders
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/card-orders
    method: GET
    data_selector: cardOrders
    params:
      pageNumber: 1
      pageSize: 10
- name: retrieve_card_programs
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/card-orders/availability
    method: GET
    data_selector: cardPrograms
    params: {}
- name: retrieve_card_order_requirements
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/card-orders/{{cardOrderId}}/requirements
    method: GET
    data_selector: requirements
    params: {}
- name: validate_address
  endpoint:
    path: /v3/spend/address/validate
    method: POST
    data_selector: validationResult
    params: {}
- name: set_pin
  endpoint:
    path: /twcard-data/v1/sensitive-card-data/preset-pin
    method: POST
    data_selector: pinSetResult
    params: {}
- name: update_card_order_status
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/card-orders/{{cardOrderId}}/status
    method: PUT
    data_selector: statusUpdateResult
    params: {}
- name: card_order
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/card-orders/{{cardOrderId}}
    method: GET
    data_selector: cardOrderId
- name: update_card_order_status
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/card-orders/{{cardOrderId}}/status
    method: PUT
    data_selector: status
- name: card_transaction
  endpoint:
    path: /api-docs/api-reference/card-transaction
    method: GET
- name: card_transaction
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/transactions/{{transactionId}}
    method: GET
    data_selector: records
- name: card_transaction
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/transactions/{{transactionId}}
    method: GET
    data_selector: transaction
    params: {}
- name: transactions
  endpoint:
    path: /public/api-docs/card-transaction
    method: GET
    data_selector: transactions
    params: {}
- name: claim_account
  endpoint:
    path: /v1/user/claim-account
    method: POST
    data_selector: claimAccountCode
    params: {}
- name: cards_by_profile
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards
    method: GET
    data_selector: cards
    params:
      pageNumber: 1
      pageSize: 10
- name: card_details
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/{{cardToken}}
    method: GET
    data_selector: cardDetails
- name: update_card_status
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/{{cardToken}}/status
    method: PUT
    data_selector: statusUpdate
- name: reset_pin_count
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/{{cardToken}}/reset-pin-count
    method: POST
    data_selector: pinReset
- name: get_card_permissions
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/{{cardToken}}/spending-permissions
    method: GET
    data_selector: permissions
- name: toggle_card_permissions
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/{{cardToken}}/spending-permissions
    method: PATCH
    data_selector: permissionsToggle
- name: sensitive_card_details
  endpoint:
    path: /twcard-data/v1/sensitive-card-data/details
    method: POST
    data_selector: sensitiveDetails
- name: sensitive_card_pin
  endpoint:
    path: /twcard-data/v1/sensitive-card-data/pin
    method: POST
    data_selector: sensitivePin
- name: client_credentials_token
  endpoint:
    path: /oauth/token
    method: POST
    data_selector: access_token
    params:
      grant_type: client_credentials
- name: price_estimation
  endpoint:
    path: /api/v1/price-estimation
    method: GET
    data_selector: quotes
- name: delivery_estimation
  endpoint:
    path: /api/v1/delivery-estimation
    method: GET
    data_selector: delivery_estimates
- name: comparisons
  endpoint:
    path: /v4/comparisons/
    method: GET
    data_selector: quotes
    params:
      sourceCurrency: GBP
      targetCurrency: EUR
      sendAmount: 10000
- name: sensitive_card_details
  endpoint:
    path: /twcard-data/v1/sensitive-card-data/details
    method: POST
    data_selector: nonce
    params:
      keyVersion: 1
- name: card_pin
  endpoint:
    path: /twcard-data/v1/sensitive-card-data/pin
    method: POST
    data_selector: nonce
    params:
      keyVersion: 1
- name: spending_permissions
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/{{cardToken}}/spending-permissions
    method: GET
    data_selector: permissions
    params: {}
- name: modify_permissions
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/{{cardToken}}/spending-permissions
    method: PATCH
    data_selector: ''
    params: {}
- name: contacts
  endpoint:
    path: /v2/profiles/{{profileId}}/contacts
    method: POST
    data_selector: contactId
    params:
      isDirectIdentifierCreation: 'true'
- name: currencies
  endpoint:
    path: /v1/currencies
    method: GET
    data_selector: currencies
    params: {}
- name: card_order
  endpoint:
    path: /api-docs/api-reference/card-order
    method: GET
- name: card_address
  endpoint:
    path: /api-docs/api-reference/card-order#card-address-resource
    method: GET
- name: create_card_order
  endpoint:
    path: /api-docs/api-reference/card-order#create-card-order
    method: POST
- name: retrieve_card_order
  endpoint:
    path: /api-docs/api-reference/card-order#retrieve-card-order
    method: GET
- name: retrieve_all_card_orders
  endpoint:
    path: /api-docs/api-reference/card-order#retrieve-all-card-orders
    method: GET
- name: retrieve_all_card_programs
  endpoint:
    path: /api-docs/api-reference/card-order#retrieve-card-programs
    method: GET
- name: retrieve_all_card_order_requirements
  endpoint:
    path: /api-docs/api-reference/card-order#retrieve-card-order-requirements
    method: GET
- name: validate_address
  endpoint:
    path: /api-docs/api-reference/card-order#validate-address
    method: POST
- name: set_pin
  endpoint:
    path: /api-docs/api-reference/card-order#set-pin
    method: POST
- name: update_card_order_status
  endpoint:
    path: /api-docs/api-reference/card-order#update-card-order-status
    method: PATCH
- name: delivery_estimate
  endpoint:
    path: /v1/delivery-estimates/{{transferId}}
    method: GET
    data_selector: estimatedDeliveryDate
    params:
      timezone: Asia/Singapore
- name: direct_debit_account
  endpoint:
    path: /v1/profiles/{{profileId}}/direct-debit-accounts
    method: POST
    data_selector: direct debit account object
    params: {}
- name: retrieve_direct_debit_accounts
  endpoint:
    path: /v1/profiles/{{profileId}}/direct-debit-accounts
    method: GET
    data_selector: direct debit account object
    params:
      type: '{{type}}'
      currency: '{{currencyCode}}'
- name: card_orders
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/card-orders
    method: POST
    data_selector: program
    params: {}
- name: retrieve_card_order
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/card-orders/{{cardOrderId}}
    method: GET
    data_selector: records
    params: {}
- name: retrieve_all_card_orders
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/card-orders
    method: GET
    data_selector: records
    params:
      pageNumber: '1'
      pageSize: '10'
- name: retrieve_card_programs
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/card-orders/availability
    method: GET
    data_selector: records
    params: {}
- name: retrieve_card_order_requirements
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/card-orders/{{cardOrderId}}/requirements
    method: GET
    data_selector: records
    params: {}
- name: validate_address
  endpoint:
    path: /v3/spend/address/validate
    method: POST
    data_selector: records
    params: {}
- name: set_pin
  endpoint:
    path: /twcard-data/v1/sensitive-card-data/preset-pin
    method: POST
    data_selector: records
    params: {}
- name: update_card_order_status
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/card-orders/{{cardOrderId}}/status
    method: PUT
    data_selector: records
    params: {}
- name: dispute_dynamic_flow
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/dispute-form/flows/step/{{scheme}}/{{reason}}?transactionId={{transactionId}}
    method: POST
- name: dispute_reasons
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/dispute-form/reasons
    method: GET
- name: submit_dispute
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/dispute-form/flows/{{scheme}}/{{reason}}?transactionId={{transactionId}}
    method: POST
- name: upload_dispute_file
  endpoint:
    path: /v4/spend/profiles/{{profileId}}/dispute-form/file
    method: POST
- name: list_disputes
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/disputes
    method: GET
- name: get_dispute
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/dispute/{{disputeId}}
    method: GET
- name: withdraw_dispute
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/disputes/{{disputeId}}/status
    method: PUT
- name: card_order
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/card-orders/{{cardOrderId}}
    method: GET
    data_selector: cardOrderId
- name: update_card_order_status
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/card-orders/{{cardOrderId}}/status
    method: PUT
    data_selector: status
- name: dispute_reasons
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/dispute-form/flows/{{scheme}}/{{reason}}
    method: POST
    data_selector: dispute reasons
    params: {}
- name: dispute_status
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/disputes/{{disputeId}}/status
    method: PUT
    data_selector: dispute
    params: {}
- name: public_key
  endpoint:
    path: /v1/facetec/public-key
    method: GET
    data_selector: public key
- name: produce_card
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/{{cardToken}}/production
    method: PUT
    data_selector: status
    params: {}
- name: retrieve_card_production_status
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/{{cardToken}}/production
    method: GET
    data_selector: status
    params: {}
- name: available_currencies
  endpoint:
    path: /v2/borderless-accounts-configuration/profiles/{{profileId}}/available-currencies
    method: GET
    data_selector: currencies
- name: payin_currencies
  endpoint:
    path: /v2/borderless-accounts-configuration/profiles/{{profileId}}/payin-currencies
    method: GET
    data_selector: currencies
- name: multi_currency_account
  endpoint:
    path: /v4/profiles/{{profileId}}/multi-currency-account
    method: GET
    data_selector: account
- name: multi_currency_account_eligibility
  endpoint:
    path: /v4/multi-currency-account/eligibility
    method: GET
    data_selector: eligibility
- name: card_transaction
  endpoint:
    path: /api-docs/api-reference/card-transaction
    method: GET
- name: eligibility
  endpoint:
    path: /v4/multi-currency-account/eligibility
    method: GET
    data_selector: eligible
    params: {}
- name: card_transaction
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/transactions/{{transactionId}}
    method: GET
    data_selector: transaction
    params: {}
- name: card_transaction
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/transactions/{{transactionId}}
    method: GET
    data_selector: transaction
    params: {}
- name: one-time-token-status
  endpoint:
    path: /v1/one-time-token/status
    method: GET
    data_selector: oneTimeTokenProperties
- name: create-pin
  endpoint:
    path: /v2/profiles/{{profileId}}/pin
    method: POST
- name: verify-pin
  endpoint:
    path: /v2/profiles/{{profileId}}/pin/verify
    method: POST
- name: delete-pin
  endpoint:
    path: /v2/profiles/{{profileId}}/pin
    method: DELETE
- name: create-device-fingerprint
  endpoint:
    path: /v2/profiles/{{profileId}}/device-fingerprints
    method: POST
- name: verify-device-fingerprint
  endpoint:
    path: /v2/profiles/{{profileId}}/device-fingerprints/verify
    method: POST
- name: delete-device-fingerprint
  endpoint:
    path: /v2/profiles/{{profileId}}/device-fingerprints/{{deviceFingerprintId}}
    method: DELETE
- name: create-facemap
  endpoint:
    path: /v2/profiles/{{profileId}}/facemaps
    method: POST
- name: verify-facemap
  endpoint:
    path: /v2/profiles/{{profileId}}/facemaps/verify
    method: POST
- name: delete-facemap
  endpoint:
    path: /v2/profiles/{{profileId}}/facemaps
    method: DELETE
- name: create-sca-session
  endpoint:
    path: /v2/profiles/{{profileId}}/sca-sessions/authorise
    method: POST
- name: transaction
  endpoint:
    path: /public/api-docs/card-transaction
    method: GET
    data_selector: transactions
    params: {}
- name: facemap
  endpoint:
    path: /v2/profiles/{{profileId}}/facemaps
    method: DELETE
    data_selector: challenges
- name: claim_account
  endpoint:
    path: /v1/user/claim-account
    method: POST
    data_selector: claimAccountCode
    params: {}
- name: client_credentials_token
  endpoint:
    path: /oauth/token
    method: POST
    data_selector: access_token
    params:
      grant_type: client_credentials
- name: One Time Token
  endpoint:
    path: /api-docs/api-reference/one-time-token
    method: GET
- name: Challenge Object
  endpoint:
    path: /api-docs/api-reference/one-time-token#challenge-object
    method: GET
- name: Challenge
  endpoint:
    path: /api-docs/api-reference/one-time-token#challenge
    method: GET
- name: Challenge Type
  endpoint:
    path: /api-docs/api-reference/one-time-token#challenge-type
    method: GET
- name: Get status of a one time token
  endpoint:
    path: /api-docs/api-reference/one-time-token#get-status
    method: GET
- name: Verify PIN
  endpoint:
    path: /api-docs/api-reference/one-time-token#verify-pin
    method: POST
- name: Verify Device Fingerprint
  endpoint:
    path: /api-docs/api-reference/one-time-token#verify-device-fingerprint
    method: POST
- name: Verify FaceMap
  endpoint:
    path: /api-docs/api-reference/one-time-token#verify-facemap
    method: POST
- name: Trigger SMS Challenge
  endpoint:
    path: /api-docs/api-reference/one-time-token#trigger-sms
    method: POST
- name: Verify SMS Challenge
  endpoint:
    path: /api-docs/api-reference/one-time-token#verify-sms
    method: POST
- name: Trigger WhatsApp Challenge
  endpoint:
    path: /api-docs/api-reference/one-time-token#trigger-whatsapp
    method: POST
- name: Verify WhatsApp Challenge
  endpoint:
    path: /api-docs/api-reference/one-time-token#verify-whatsapp
    method: POST
- name: Trigger Voice Challenge
  endpoint:
    path: /api-docs/api-reference/one-time-token#trigger-voice
    method: POST
- name: Verify Voice Challenge
  endpoint:
    path: /api-docs/api-reference/one-time-token#verify-voice
    method: POST
- name: price_estimation
  endpoint:
    path: /api/comparison/price
    method: GET
    data_selector: quotes
- name: delivery_estimation
  endpoint:
    path: /api/comparison/delivery
    method: GET
    data_selector: delivery_estimates
- name: comparisons
  endpoint:
    path: /v4/comparisons/
    method: GET
    data_selector: quotes
    params:
      sourceCurrency: GBP
      targetCurrency: EUR
      sendAmount: 10000
- name: contacts
  endpoint:
    path: /v2/profiles/{{profileId}}/contacts
    method: POST
    data_selector: contactId
    params:
      isDirectIdentifierCreation: 'true'
- name: one-time-token-status
  endpoint:
    path: /v1/one-time-token/status
    method: GET
- name: verify-pin
  endpoint:
    path: /v1/one-time-token/pin/verify
    method: POST
- name: verify-device-fingerprint
  endpoint:
    path: /v1/one-time-token/partner-device-fingerprint/verify
    method: POST
- name: verify-facemap
  endpoint:
    path: /v1/one-time-token/facemap/verify
    method: POST
- name: trigger-sms
  endpoint:
    path: /v1/one-time-token/sms/trigger
    method: POST
- name: verify-sms
  endpoint:
    path: /v1/one-time-token/sms/verify
    method: POST
- name: trigger-whatsapp
  endpoint:
    path: /v1/one-time-token/whatsapp/trigger
    method: POST
- name: verify-whatsapp
  endpoint:
    path: /v1/one-time-token/whatsapp/verify
    method: POST
- name: trigger-voice
  endpoint:
    path: /v1/one-time-token/voice/trigger
    method: POST
- name: verify-voice
  endpoint:
    path: /v1/one-time-token/voice/verify
    method: POST
- name: one_time_token
  endpoint:
    path: /v1/one-time-token/voice/verify
    method: POST
    data_selector: oneTimeTokenProperties
    params: {}
- name: currencies
  endpoint:
    path: /v1/currencies
    method: GET
    data_selector: currencies
    params: {}
- name: delivery_estimate
  endpoint:
    path: /v1/delivery-estimates/{{transferId}}
    method: GET
    data_selector: estimatedDeliveryDate
    params:
      timezone: Asia/Singapore
- name: public_keys
  endpoint:
    path: /v1/auth/jose/response/public-keys
    method: GET
    data_selector: keyMaterial
    params: {}
- name: add_client_public_key
  endpoint:
    path: /v1/auth/jose/request/public-keys
    method: POST
    data_selector: ''
    params: {}
- name: playground
  endpoint:
    path: /v1/auth/jose/playground/jwe
    method: GET
- name: direct_debit_account
  endpoint:
    path: /v1/profiles/{{profileId}}/direct-debit-accounts
    method: POST
    data_selector: direct_debit_account
    params:
      currency: USD
      type: ACH
- name: retrieve_direct_debit_accounts
  endpoint:
    path: /v1/profiles/{{profileId}}/direct-debit-accounts
    method: GET
    data_selector: direct_debit_account
    params:
      type: '{{type}}'
      currency: '{{currencyCode}}'
- name: partner_case
  endpoint:
    path: /v1/cases
    method: POST
    data_selector: case
    params: {}
- name: partner_case_by_id
  endpoint:
    path: /v1/cases/{{case-id}}
    method: GET
    data_selector: case
    params: {}
- name: partner_case_comments
  endpoint:
    path: /v1/cases/{{case-id}}/comments
    method: GET
    data_selector: comments
    params: {}
- name: update_partner_case
  endpoint:
    path: /v1/cases/{{case-id}}/comments
    method: PUT
    data_selector: case
    params: {}
- name: create_case
  endpoint:
    path: /v1/cases
    method: POST
    data_selector: null
    params: {}
- name: retrieve_case
  endpoint:
    path: /v1/cases/{{case-id}}
    method: GET
    data_selector: null
    params: {}
- name: retrieve_case_comments
  endpoint:
    path: /v1/cases/{{case-id}}/comments
    method: GET
    data_selector: null
    params: {}
- name: update_case_comments
  endpoint:
    path: /v1/cases/{{case-id}}/comments
    method: PUT
    data_selector: null
    params: {}
- name: dispute_form_flows
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/dispute-form/flows/step/{{scheme}}/{{reason}}?transactionId={{transactionId}}
    method: POST
- name: dispute_reasons
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/dispute-form/reasons
    method: GET
- name: submit_dispute
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/dispute-form/flows/{{scheme}}/{{reason}}?transactionId={{transactionId}}
    method: POST
- name: upload_dispute_file
  endpoint:
    path: /v4/spend/profiles/{{profileId}}/dispute-form/file
    method: POST
- name: list_disputes
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/disputes
    method: GET
- name: get_dispute
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/dispute/{{disputeId}}
    method: GET
- name: withdraw_dispute
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/disputes/{{disputeId}}/status
    method: PUT
- name: payin_deposit_detail
  endpoint:
    path: /v1/profiles/{{profileId}}/transfers/{{transferId}}/deposit-details/bank-transfer
    method: GET
    data_selector: payinDepositDetail
- name: dispute_reasons
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/dispute-form/flows/step/{{scheme}}/{{reason}}?transactionId={{transactionId}}
    method: POST
- name: dispute_status
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/disputes/{{disputeId}}/status
    method: PUT
- name: profile
  endpoint:
    path: /api-docs/api-reference/profile
    method: GET
    data_selector: profiles
    params: {}
- name: public_key
  endpoint:
    path: /v1/facetec/public-key
    method: GET
    data_selector: public key
- name: available_currencies
  endpoint:
    path: /v2/borderless-accounts-configuration/profiles/{{profileId}}/available-currencies
    method: GET
    data_selector: currencies
- name: payin_currencies
  endpoint:
    path: /v2/borderless-accounts-configuration/profiles/{{profileId}}/payin-currencies
    method: GET
    data_selector: currencies
- name: multi_currency_account
  endpoint:
    path: /v4/profiles/{{profileId}}/multi-currency-account
    method: GET
    data_selector: account
- name: multi_currency_account_eligibility
  endpoint:
    path: /v4/multi-currency-account/eligibility
    method: GET
    data_selector: eligibility
- name: personal_profile
  endpoint:
    path: /v2/profiles/personal-profile
    method: POST
    data_selector: id
    params: {}
- name: business_profile
  endpoint:
    path: /v2/profiles/business-profile
    method: POST
    data_selector: id
    params: {}
- name: retrieve_profile
  endpoint:
    path: /v2/profiles/{{profileId}}
    method: GET
    data_selector: id
    params: {}
- name: list_profiles
  endpoint:
    path: /v2/profiles
    method: GET
    data_selector: id
    params: {}
- name: multi_currency_account_eligibility
  endpoint:
    path: /v4/multi-currency-account/eligibility
    method: GET
    data_selector: eligible
    params: {}
- name: business_profile
  endpoint:
    path: /v3/profiles/business-profile
    method: POST
- name: business_profile
  endpoint:
    path: /v3/profiles/business-profile
    method: POST
    data_selector: null
    params: {}
- name: personal_profile
  endpoint:
    path: /v2/profiles/{{personal-profile-id}}/personal-profile
    method: PUT
    data_selector: null
    params: {}
- name: update_business_profile
  endpoint:
    path: /v2/profiles/{{business-profile-id}}/business-profile
    method: PUT
    data_selector: null
    params: {}
- name: profiles
  endpoint:
    path: /v2/profiles
    method: GET
    data_selector: profile objects
- name: business_representative
  endpoint:
    path: /v3/profiles/{{business-profile-id}}/business-profile/business-representative
    method: GET
    data_selector: business representative info
- name: directors
  endpoint:
    path: /v1/profiles/{{business-profile-id}}/directors
    method: GET
    data_selector: director objects
- name: ubos
  endpoint:
    path: /v1/profiles/{{business-profile-id}}/ubos
    method: GET
    data_selector: ultimate beneficial owners
- name: one_time_token_status
  endpoint:
    path: /v1/one-time-token/status
    method: GET
    data_selector: oneTimeTokenProperties
- name: create_pin
  endpoint:
    path: /v2/profiles/{{profileId}}/pin
    method: POST
- name: verify_pin
  endpoint:
    path: /v2/profiles/{{profileId}}/pin/verify
    method: POST
- name: delete_pin
  endpoint:
    path: /v2/profiles/{{profileId}}/pin
    method: DELETE
- name: create_device_fingerprint
  endpoint:
    path: /v2/profiles/{{profileId}}/device-fingerprints
    method: POST
- name: verify_device_fingerprint
  endpoint:
    path: /v2/profiles/{{profileId}}/device-fingerprints/verify
    method: POST
- name: delete_device_fingerprint
  endpoint:
    path: /v2/profiles/{{profileId}}/device-fingerprints/{{deviceFingerprintId}}
    method: DELETE
- name: create_facemap
  endpoint:
    path: /v2/profiles/{{profileId}}/facemaps
    method: POST
- name: verify_facemap
  endpoint:
    path: /v2/profiles/{{profileId}}/facemaps/verify
    method: POST
- name: delete_facemap
  endpoint:
    path: /v2/profiles/{{profileId}}/facemaps
    method: DELETE
- name: create_sca_session
  endpoint:
    path: /v2/profiles/{{profileId}}/sca-sessions/authorise
    method: POST
- name: profiles
  endpoint:
    path: /v2/profiles
    method: GET
    data_selector: profile objects
- name: business_representative
  endpoint:
    path: /v3/profiles/{{business-profile-id}}/business-profile/business-representative
    method: GET
    data_selector: business representative info
- name: directors
  endpoint:
    path: /v1/profiles/{{business-profile-id}}/directors
    method: GET
    data_selector: director objects
- name: ultimate_owners
  endpoint:
    path: /v1/profiles/{{business-profile-id}}/ubos
    method: GET
    data_selector: ultimate beneficial owner objects
- name: facemap
  endpoint:
    path: /v2/profiles/{{profileId}}/facemaps
    method: DELETE
    data_selector: challenges
- name: One Time Token
  endpoint:
    path: /api-docs/api-reference/one-time-token
    method: GET
- name: extension-requirements
  endpoint:
    path: /v1/profiles/{{profileId}}/extension-requirements
    method: GET
    data_selector: fields
- name: profile-verification-status
  endpoint:
    path: /v3/profiles/{{profileId}}/verification-status/bank-transfer
    method: POST
    data_selector: routes
- name: payment_tokens
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/{{cardToken}}/payment-tokens
    method: POST
    data_selector: paymentTokens
- name: google_pay_encrypted_payload
  endpoint:
    path: /twcard-data/v1/push-provisioning/encrypted-payload/google-pay
    method: POST
    data_selector: encryptedPassData
- name: apple_pay_encrypted_payload
  endpoint:
    path: /twcard-data/v1/push-provisioning/encrypted-payload/apple-pay
    method: POST
    data_selector: encryptedPassData
- name: encrypted_cardholder_information
  endpoint:
    path: /encrypted/cardholder/info
    method: GET
    data_selector: encryptedPassData
- name: quote
  endpoint:
    path: /api-docs/api-reference/quote
    method: GET
    data_selector: quote
    params: {}
- name: one-time-token-status
  endpoint:
    path: /v1/one-time-token/status
    method: GET
    data_selector: oneTimeTokenProperties
- name: verify-pin
  endpoint:
    path: /v1/one-time-token/pin/verify
    method: POST
    data_selector: oneTimeTokenProperties
- name: verify-device-fingerprint
  endpoint:
    path: /v1/one-time-token/partner-device-fingerprint/verify
    method: POST
    data_selector: oneTimeTokenProperties
- name: verify-facemap
  endpoint:
    path: /v1/one-time-token/facemap/verify
    method: POST
    data_selector: oneTimeTokenProperties
- name: trigger-sms-challenge
  endpoint:
    path: /v1/one-time-token/sms/trigger
    method: POST
    data_selector: oneTimeTokenProperties
- name: verify-sms-challenge
  endpoint:
    path: /v1/one-time-token/sms/verify
    method: POST
    data_selector: oneTimeTokenProperties
- name: trigger-whatsapp-challenge
  endpoint:
    path: /v1/one-time-token/whatsapp/trigger
    method: POST
    data_selector: oneTimeTokenProperties
- name: verify-whatsapp-challenge
  endpoint:
    path: /v1/one-time-token/whatsapp/verify
    method: POST
    data_selector: oneTimeTokenProperties
- name: trigger-voice-challenge
  endpoint:
    path: /v1/one-time-token/voice/trigger
    method: POST
    data_selector: oneTimeTokenProperties
- name: verify-voice-challenge
  endpoint:
    path: /v1/one-time-token/voice/verify
    method: POST
    data_selector: oneTimeTokenProperties
- name: quote
  endpoint:
    path: /v3/quotes
    method: POST
    data_selector: quotes
    params: {}
- name: one_time_token
  endpoint:
    path: /v1/one-time-token/voice/verify
    method: POST
    data_selector: oneTimeTokenProperties
    params: {}
- name: quote
  endpoint:
    path: /v3/profiles/{{profileId}}/quotes
    method: POST
    data_selector: quote
    params: {}
- name: quote_by_id
  endpoint:
    path: /v3/profiles/{{profileId}}/quotes/{{quoteId}}
    method: GET
    data_selector: quote
    params: {}
- name: public_keys
  endpoint:
    path: /v1/auth/jose/response/public-keys
    method: GET
    data_selector: public_key
    params:
      algorithm: ES512
      scope: PAYLOAD_SIGNING
- name: add_public_key
  endpoint:
    path: /v1/auth/jose/request/public-keys
    method: POST
    data_selector: public_key
    params: {}
- name: response
  endpoint:
    path: /v1/auth/jose/playground/jwe
    method: GET
    data_selector: message
- name: rates
  endpoint:
    path: /v1/rates
    method: GET
    data_selector: exchange rate values
    params: {}
- name: recipient_account
  endpoint:
    path: /v1/accounts
    method: POST
- name: refund_recipient_account
  endpoint:
    path: /v1/accounts?refund=true
    method: POST
- name: list_recipient_accounts
  endpoint:
    path: /v2/accounts
    method: GET
- name: get_account_by_id
  endpoint:
    path: /v2/accounts/{{accountId}}
    method: GET
- name: deactivate_recipient_account
  endpoint:
    path: /v2/accounts/{{accountId}}
    method: DELETE
- name: retrieve_account_requirements
  endpoint:
    path: /v1/quotes/{{quoteId}}/account-requirements
    method: GET
- name: cases
  endpoint:
    path: /v1/cases
    method: POST
    data_selector: null
    params: {}
- name: case_by_id
  endpoint:
    path: /v1/cases/{{case-id}}
    method: GET
    data_selector: null
    params: {}
- name: case_comments
  endpoint:
    path: /v1/cases/{{case-id}}/comments
    method: GET
    data_selector: null
    params: {}
- name: update_case
  endpoint:
    path: /v1/cases/{{case-id}}/comments
    method: PUT
    data_selector: null
    params: {}
- name: account_requirements
  endpoint:
    path: /v1/account-requirements
    method: GET
    data_selector: content
- name: quotes_account_requirements
  endpoint:
    path: /v1/quotes/{{quoteId}}/account-requirements
    method: GET
    data_selector: content
- name: create_partner_case
  endpoint:
    path: /v1/cases
    method: POST
    data_selector: case
    params: {}
- name: retrieve_partner_case
  endpoint:
    path: /v1/cases/{{case-id}}
    method: GET
    data_selector: case
    params: {}
- name: retrieve_partner_case_comments
  endpoint:
    path: /v1/cases/{{case-id}}/comments
    method: GET
    data_selector: comments
    params: {}
- name: update_partner_case
  endpoint:
    path: /v1/cases/{{case-id}}/comments
    method: PUT
    data_selector: update_status
    params: {}
- name: account_requirements
  endpoint:
    path: /v1/account-requirements
    method: GET
    data_selector: fields
    params: {}
- name: quote_account_requirements
  endpoint:
    path: /v1/quotes/{{quoteId}}/account-requirements
    method: GET
    data_selector: fields
    params: {}
- name: post_quote_account_requirements
  endpoint:
    path: /v1/quotes/{{quoteId}}/account-requirements
    method: POST
    data_selector: fields
    params: {}
- name: payin_deposit_detail
  endpoint:
    path: /v1/profiles/{{profileId}}/transfers/{{transferId}}/deposit-details/bank-transfer
    method: GET
    data_selector: payinDepositDetail
- name: Profile
  endpoint:
    path: /api-docs/api-reference/profile
    method: GET
- name: transfer_state_change
  endpoint:
    path: /v1/simulation/transfers/{{transferId}}/processing
    method: GET
- name: verify_profile
  endpoint:
    path: /v1/simulation/verify-profile
    method: POST
- name: balance_topup
  endpoint:
    path: /v1/simulation/balance/topup
    method: POST
- name: bank_transactions_import
  endpoint:
    path: /v1/simulation/profiles/{{profileId}}/bank-transactions/import
    method: POST
    data_selector: No Content
    params: {}
- name: personal_profile
  endpoint:
    path: /v2/profiles/personal-profile
    method: POST
    data_selector: id
- name: business_profile
  endpoint:
    path: /v2/profiles/business-profile
    method: POST
    data_selector: id
- name: retrieve_profile
  endpoint:
    path: /v2/profiles/{{profileId}}
    method: GET
    data_selector: id
- name: list_profiles
  endpoint:
    path: /v2/profiles
    method: GET
    data_selector: profiles
- name: business_profile
  endpoint:
    path: /v3/profiles/business-profile
    method: POST
- name: authorization_rule
  endpoint:
    path: /v3/spend/applications/{{clientId}}/spend-controls/rules
    method: POST
    data_selector: Rule
- name: applied_authorization_rules
  endpoint:
    path: /v3/spend/applications/{{clientId}}/spend-controls/rules/applied
    method: GET
    data_selector: rules
- name: spending_limits
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/spending-limits
    method: GET
    data_selector: limits
- name: spendings
  endpoint:
    path: /public/api-docs/api-reference/spend-controls#spending
    method: GET
    data_selector: spendings
- name: spendings
  endpoint:
    path: /public/api-docs/api-reference/spend-controls#spending
    method: GET
    data_selector: spendings
- name: business_profile
  endpoint:
    path: /v3/profiles/business-profile
    method: POST
    data_selector: ''
    params: {}
- name: personal_profile
  endpoint:
    path: /v2/profiles/{{personal-profile-id}}/personal-profile
    method: PUT
    data_selector: ''
    params: {}
- name: update_business_profile
  endpoint:
    path: /v2/profiles/{{business-profile-id}}/business-profile
    method: PUT
    data_selector: ''
    params: {}
- name: profiles
  endpoint:
    path: /v2/profiles
    method: GET
    data_selector: profile objects
- name: business_representative
  endpoint:
    path: /v3/profiles/{{business-profile-id}}/business-profile/business-representative
    method: GET
    data_selector: business representative info
- name: directors
  endpoint:
    path: /v1/profiles/{{business-profile-id}}/directors
    method: GET
    data_selector: director objects
- name: ultimate_owners
  endpoint:
    path: /v1/profiles/{{business-profile-id}}/ubos
    method: GET
    data_selector: ultimate beneficial owners
- name: profile_limits
  endpoint:
    path: /v4/spend/profiles/{{profileId}}/spend-limits
    method: GET
    data_selector: spendLimits
- name: update_profile_limits
  endpoint:
    path: /v4/spend/profiles/{{profileId}}/spend-limits
    method: PATCH
- name: card_limits
  endpoint:
    path: /v4/spend/profiles/{{profileId}}/cards/{{cardToken}}/spend-limits
    method: GET
- name: update_card_limits
  endpoint:
    path: /v4/spend/profiles/{{profileId}}/cards/{{cardToken}}/spend-limits
    method: PATCH
- name: delete_card_limits
  endpoint:
    path: /v4/spend/profiles/{{profileId}}/cards/{{cardToken}}/spend-limits/{{granularity}}
    method: DELETE
- name: card_limits
  endpoint:
    path: /public/api-docs/api-reference/spend-limits#get-card-limits
    method: GET
- name: profiles
  endpoint:
    path: /v2/profiles
    method: GET
    data_selector: profiles
- name: business_representative
  endpoint:
    path: /v3/profiles/{{business-profile-id}}/business-profile/business-representative
    method: GET
    data_selector: representative
- name: directors
  endpoint:
    path: /v1/profiles/{{business-profile-id}}/directors
    method: GET
    data_selector: directors
- name: ubos
  endpoint:
    path: /v1/profiles/{{business-profile-id}}/ubos
    method: GET
    data_selector: ubos
- name: transfer
  endpoint:
    path: /api/v1/transfer
    method: GET
    data_selector: transfers
    params: {}
- name: user
  endpoint:
    path: /api/v1/user
    method: GET
    data_selector: users
    params: {}
- name: extension-requirements
  endpoint:
    path: /v1/profiles/{{profileId}}/extension-requirements
    method: GET
    data_selector: fields
    params: {}
- name: profile-verification-status
  endpoint:
    path: /v3/profiles/{{profileId}}/verification-status/bank-transfer
    method: POST
    data_selector: routes
    params:
      source_currencies: '{{currency_array}}'
- name: payment_tokens
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/{{cardToken}}/payment-tokens
    method: POST
    data_selector: paymentTokens
- name: google_pay
  endpoint:
    path: /twcard-data/v1/push-provisioning/encrypted-payload/google-pay
    method: POST
    data_selector: encryptedPassData
- name: apple_pay
  endpoint:
    path: /twcard-data/v1/push-provisioning/encrypted-payload/apple-pay
    method: POST
    data_selector: encryptedPassData
- name: transfers
  endpoint:
    path: /v1/transfers
    method: POST
    data_selector: standard transfer object
    params: {}
- name: third_party_transfers
  endpoint:
    path: /v2/profiles/{{profileId}}/third-party-transfers
    method: POST
    data_selector: standard transfer object
    params: {}
- name: partner_license_transfers
  endpoint:
    path: /v1/profiles/{{profileId}}/partner-licence-transfers
    method: POST
    data_selector: standard transfer object
    params: {}
- name: transfer_requirements
  endpoint:
    path: /v1/transfer-requirements
    method: POST
    data_selector: standard transfer object
    params: {}
- name: get_transfer_by_id
  endpoint:
    path: /v1/transfers/{{transferId}}
    method: GET
    data_selector: standard transfer object
    params: {}
- name: list_transfers
  endpoint:
    path: /v1/transfers
    method: GET
    data_selector: list of transfers
    params: {}
- name: response
  endpoint:
    path: /response
    method: GET
    data_selector: encryptedPassData, activationData, ephemeralKey
- name: transfer_requirements
  endpoint:
    path: /v1/transfer-requirements
    method: POST
    data_selector: fields
    params: {}
- name: get_transfer_by_id
  endpoint:
    path: /v1/transfers/{{transferId}}
    method: GET
    data_selector: transfer
    params: {}
- name: quote
  endpoint:
    path: /api-docs/api-reference/quote
    method: GET
- name: banking_partner_invoice
  endpoint:
    path: /v2/transfers/{{transferId}}/invoices/bankingpartner
    method: GET
    data_selector: ''
    params: {}
- name: quote
  endpoint:
    path: /v3/quotes
    method: POST
    data_selector: quotes
    params: {}
- name: authenticated_quote
  endpoint:
    path: /v3/profiles/{{profileId}}/quotes
    method: POST
    data_selector: quotes
    params: {}
- name: update_quote
  endpoint:
    path: /v3/profiles/{{profileId}}/quotes/{{quoteId}}
    method: PATCH
    data_selector: quotes
    params: {}
- name: retrieve_quote
  endpoint:
    path: /v3/profiles/{{profileId}}/quotes/{{quoteId}}
    method: GET
    data_selector: quotes
    params: {}
- name: current_user
  endpoint:
    path: /v1/me
    method: GET
    data_selector: user
    params: {}
- name: user_by_id
  endpoint:
    path: /v1/users/{{userId}}
    method: GET
    data_selector: user
    params: {}
- name: create_user
  endpoint:
    path: /v1/user/signup/registration_code
    method: POST
    data_selector: user
    params: {}
- name: check_user_exists
  endpoint:
    path: /v1/users/exists
    method: POST
    data_selector: user
    params: {}
- name: set_contact_email
  endpoint:
    path: /v1/users/{{userId}}/contact-email
    method: PUT
    data_selector: email
    params: {}
- name: get_contact_email
  endpoint:
    path: /v1/users/{{userId}}/contact-email
    method: GET
    data_selector: email
    params: {}
- name: quote
  endpoint:
    path: /v3/profiles/{{profileId}}/quotes
    method: POST
    data_selector: quote object
- name: retrieve_quote
  endpoint:
    path: /v3/profiles/{{profileId}}/quotes/{{quoteId}}
    method: GET
    data_selector: quote object
- name: update_quote
  endpoint:
    path: /v3/profiles/{{profileId}}/quotes/{{quoteId}}
    method: PATCH
    data_selector: quote object
- name: rates
  endpoint:
    path: /v1/rates
    method: GET
    data_selector: exchange rate values
    params: {}
- name: create_pin
  endpoint:
    path: /v1/user/pin
    method: POST
- name: enrol_facemap
  endpoint:
    path: /v1/user/facemap/enrol
    method: POST
- name: create_device_fingerprint
  endpoint:
    path: /v1/user/partner-device-fingerprints
    method: POST
- name: get_device_fingerprints
  endpoint:
    path: /v1/users/{{userId}}/partner-device-fingerprints
    method: GET
- name: delete_pin
  endpoint:
    path: /v1/users/{{userId}}/pin
    method: DELETE
- name: delete_device_fingerprint
  endpoint:
    path: /v1/users/{{userId}}/partner-device-fingerprints/{{deviceFingerprintId}}
    method: DELETE
- name: delete_facemap
  endpoint:
    path: /v1/users/{{userId}}/facemap/enrol
    method: DELETE
- name: list_phone_numbers
  endpoint:
    path: /v1/application/users/{{userId}}/phone-numbers
    method: GET
- name: create_phone_number
  endpoint:
    path: /v1/application/users/{{userId}}/phone-numbers
    method: POST
- name: update_phone_number
  endpoint:
    path: /v1/application/users/{{userId}}/phone-numbers/{{phoneNumberId}}
    method: PUT
- name: delete_phone_number
  endpoint:
    path: /v1/application/users/{{userId}}/phone-numbers/{{phoneNumberId}}
    method: DELETE
- name: recipient_account
  endpoint:
    path: /v1/accounts
    method: POST
- name: refund_recipient_account
  endpoint:
    path: /v1/accounts?refund=true
    method: POST
- name: list_recipient_accounts
  endpoint:
    path: /v2/accounts
    method: GET
- name: get_account_by_id
  endpoint:
    path: /v2/accounts/{{accountId}}
    method: GET
- name: deactivate_recipient_account
  endpoint:
    path: /v2/accounts/{{accountId}}
    method: DELETE
- name: recipient_account_requirements
  endpoint:
    path: /v1/quotes/{{quoteId}}/account-requirements
    method: GET
- name: phone_numbers
  endpoint:
    path: /v1/application/users/{{userId}}/phone-numbers
    method: GET
    data_selector: phoneNumbers
- name: device_fingerprints
  endpoint:
    path: /v1/users/{{userId}}/partner-device-fingerprints/{{deviceFingerprintId}}
    method: DELETE
    data_selector: deviceFingerprint
- name: account_requirements
  endpoint:
    path: /v1/account-requirements
    method: GET
    data_selector: content
- name: quotes_account_requirements
  endpoint:
    path: /v1/quotes/{{quoteId}}/account-requirements
    method: GET
    data_selector: content
- name: user_tokens
  endpoint:
    path: /oauth/token
    method: POST
    data_selector: user tokens object
- name: account_requirements
  endpoint:
    path: /v1/account-requirements
    method: GET
    data_selector: fields
    params: {}
- name: quotes_account_requirements
  endpoint:
    path: /v1/quotes/{{quoteId}}/account-requirements
    method: GET
    data_selector: fields
    params: {}
- name: quotes_account_requirements_post
  endpoint:
    path: /v1/quotes/{{quoteId}}/account-requirements
    method: POST
    data_selector: fields
    params: {}
- name: transfer_state_change
  endpoint:
    path: /v1/simulation/transfers/{{transferId}}/processing
    method: GET
    data_selector: id
- name: verify_profile
  endpoint:
    path: /v1/simulation/verify-profile
    method: POST
    data_selector: No Content
- name: balance_topup
  endpoint:
    path: /v1/simulation/balance/topup
    method: POST
    data_selector: No Content
- name: bank_transaction_import
  endpoint:
    path: /simulation/profiles/{{profileId}}/bank-transactions/import
    method: POST
    data_selector: No Content
    params: {}
- name: card_transaction_authorisation
  endpoint:
    path: /v2/simulation/spend/profiles/{{profileId}}/cards/{{cardToken}}/transactions/authorisation
    method: POST
    data_selector: No Content
    params: {}
- name: subscriptions
  endpoint:
    path: /v3/applications/{{clientKey}}/subscriptions
    method: POST
    data_selector: id
- name: subscription_by_id
  endpoint:
    path: /v3/applications/{{clientKey}}/subscriptions/{{subscriptionId}}
    method: GET
    data_selector: id
- name: list_subscriptions
  endpoint:
    path: /v3/applications/{{clientKey}}/subscriptions
    method: GET
    data_selector: ''
- name: delete_subscription
  endpoint:
    path: /v3/applications/{{clientKey}}/subscriptions/{{subscriptionId}}
    method: DELETE
    data_selector: ''
- name: test_notifications
  endpoint:
    path: /v3/applications/{{clientKey}}/subscriptions/{{subscriptionId}}/test-notifications
    method: POST
    data_selector: delivery_id
- name: borderless_accounts
  endpoint:
    path: /v1/borderless-accounts
    method: GET
    data_selector: balances
    params: {}
- name: convert_currencies
  endpoint:
    path: /v1/borderless-accounts/{{borderlessAccountId}}/conversions
    method: POST
    data_selector: id
    params: {}
- name: one_time_token_status
  endpoint:
    path: /v1/identity/one-time-token/status
    method: GET
    data_selector: oneTimeTokenProperties
    params: {}
- name: update_phone_number
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/{{cardToken}}/phone-number
    method: PUT
    data_selector: receipt
    params: {}
- name: authorization_rule
  endpoint:
    path: /v3/spend/applications/{{clientId}}/spend-controls/rules
    method: POST
    data_selector: Rule
    params: {}
- name: apply_rule
  endpoint:
    path: /v3/spend/applications/{{clientId}}/spend-controls/rules/apply
    method: POST
    data_selector: Rule
    params: {}
- name: unapply_rule
  endpoint:
    path: /v3/spend/applications/{{clientId}}/spend-controls/rules/unapply
    method: POST
    data_selector: Rule
    params: {}
- name: list_applied_rules
  endpoint:
    path: /v3/spend/applications/{{clientId}}/spend-controls/rules/applied
    method: GET
    data_selector: Rule
    params: {}
- name: list_rules
  endpoint:
    path: /v3/spend/applications/{{clientId}}/spend-controls/rules
    method: GET
    data_selector: Rule
    params: {}
- name: delete_rule
  endpoint:
    path: /v3/spend/applications/{{clientId}}/spend-controls/rules/{{ruleId}}
    method: DELETE
    data_selector: Rule
    params: {}
- name: get_profile_limits
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/spending-limits
    method: GET
    data_selector: Limits
    params: {}
- name: spendings
  endpoint:
    path: /public/api-docs/api-reference/spend-controls#spending
    method: GET
    data_selector: spendings
- name: spendings
  endpoint:
    path: /public/api-docs/api-reference/spend-controls#spending
    method: GET
    data_selector: spendings
- name: profile_limits
  endpoint:
    path: /v4/spend/profiles/{{profileId}}/spend-limits
    method: GET
    data_selector: spendLimits
- name: update_profile_limits
  endpoint:
    path: /v4/spend/profiles/{{profileId}}/spend-limits
    method: PATCH
    data_selector: spendLimits
- name: card_limits
  endpoint:
    path: /v4/spend/profiles/{{profileId}}/cards/{{cardToken}}/spend-limits
    method: GET
    data_selector: spendLimits
- name: update_card_limits
  endpoint:
    path: /v4/spend/profiles/{{profileId}}/cards/{{cardToken}}/spend-limits
    method: PATCH
    data_selector: spendLimits
- name: delete_card_limits
  endpoint:
    path: /v4/spend/profiles/{{profileId}}/cards/{{cardToken}}/spend-limits/{{granularity}}
    method: DELETE
- name: card_limits
  endpoint:
    path: /public/api-docs/api-reference/spend-limits#get-card-limits
    method: GET
- name: transfer
  endpoint:
    path: /api-docs/api-reference/transfer
    method: GET
- name: create_transfer
  endpoint:
    path: /api-docs/api-reference/transfer#create
    method: POST
- name: list_transfers
  endpoint:
    path: /api-docs/api-reference/transfer#list
    method: GET
- name: transfers
  endpoint:
    path: /v1/transfers
    method: POST
    data_selector: standard transfer object
- name: third-party-transfers
  endpoint:
    path: /v2/profiles/{{profileId}}/third-party-transfers
    method: POST
    data_selector: standard transfer object
- name: partner-licence-transfers
  endpoint:
    path: /v1/profiles/{{profileId}}/partner-licence-transfers
    method: POST
    data_selector: standard transfer object
- name: transfer-requirements
  endpoint:
    path: /v1/transfer-requirements
    method: POST
    data_selector: requirements
- name: transfer-by-id
  endpoint:
    path: /v1/transfers/{{transferId}}
    method: GET
    data_selector: standard transfer object
- name: third-party-transfer-by-id
  endpoint:
    path: /v2/profiles/{{profileId}}/third-party-transfers/{{transferId}}
    method: GET
    data_selector: standard transfer object
- name: fund-transfer
  endpoint:
    path: /v3/profiles/{{profileId}}/transfers/{{transferId}}/payments
    method: POST
    data_selector: standard transfer object
- name: list-transfers
  endpoint:
    path: /v1/transfers
    method: GET
    data_selector: list of transfers
- name: cancel-transfer
  endpoint:
    path: /v1/transfers/{{transferId}}/cancel
    method: PUT
    data_selector: cancellation status
- name: transfer-receipt
  endpoint:
    path: /v1/transfers/{{transferId}}/receipt.pdf
    method: GET
    data_selector: PDF receipt
- name: us-combined-receipt
  endpoint:
    path: /v1/transfers/{{transferId}}/us-combined-receipt.pdf
    method: GET
    data_selector: PDF receipt
- name: noc-inr
  endpoint:
    path: /v1/transfers/{{transferId}}/documents/noc
    method: GET
    data_selector: NOC document
- name: banking-reference-number
  endpoint:
    path: /v1/transfers/{{transferId}}/invoices/bankingpartner
    method: GET
    data_selector: banking reference information
- name: completed-payments
  endpoint:
    path: /v1/transfers/{{transferId}}/payments
    method: GET
    data_selector: list of completed payments
- name: paid-out
  endpoint:
    path: /v2/transfers/{{transferId}}/invoices/bankingpartner
    method: GET
    data_selector: payout information
- name: transfer_requirements
  endpoint:
    path: /v1/transfer-requirements
    method: POST
    data_selector: fields
    params: {}
- name: transfer_by_id
  endpoint:
    path: /v1/transfers/{{transferId}}
    method: GET
    data_selector: transfer
    params: {}
- name: third_party_transfer_by_id
  endpoint:
    path: /v2/profiles/{{profileId}}/third-party-transfers/{{transferId}}
    method: GET
    data_selector: transfer
    params: {}
- name: banking_partner
  endpoint:
    path: /v2/transfers/{{transferId}}/invoices/bankingpartner
    method: GET
    data_selector: processorName, deliveryMode, bankingPartnerReference, bankingPartnerName,
      mt103
    params: {}
- name: current_user
  endpoint:
    path: /v1/me
    method: GET
    data_selector: user
    params: {}
- name: user_by_id
  endpoint:
    path: /v1/users/{{userId}}
    method: GET
    data_selector: user
    params: {}
- name: user_signup
  endpoint:
    path: /v1/user/signup/registration_code
    method: POST
    data_selector: user
    params: {}
- name: check_user_exists
  endpoint:
    path: /v1/users/exists
    method: POST
    data_selector: user
    params: {}
- name: set_contact_email
  endpoint:
    path: /v1/users/{{userId}}/contact-email
    method: PUT
    data_selector: user
    params: {}
- name: get_contact_email
  endpoint:
    path: /v1/users/{{userId}}/contact-email
    method: GET
    data_selector: email
    params: {}
- name: create_pin
  endpoint:
    path: /v1/user/pin
    method: POST
- name: enrol_facemap
  endpoint:
    path: /v1/user/facemap/enrol
    method: POST
- name: create_device_fingerprint
  endpoint:
    path: /v1/user/partner-device-fingerprints
    method: POST
- name: get_device_fingerprints
  endpoint:
    path: /v1/users/{{userId}}/partner-device-fingerprints
    method: GET
- name: delete_pin
  endpoint:
    path: /v1/users/{{userId}}/pin
    method: DELETE
- name: delete_device_fingerprint
  endpoint:
    path: /v1/users/{{userId}}/partner-device-fingerprints/{{deviceFingerprintId}}
    method: DELETE
- name: delete_facemap
  endpoint:
    path: /v1/users/{{userId}}/facemap/enrol
    method: DELETE
- name: list_phone_numbers
  endpoint:
    path: /v1/application/users/{{userId}}/phone-numbers
    method: GET
- name: create_phone_number
  endpoint:
    path: /v1/application/users/{{userId}}/phone-numbers
    method: POST
- name: update_phone_number
  endpoint:
    path: /v1/application/users/{{userId}}/phone-numbers/{{phoneNumberId}}
    method: PUT
- name: delete_phone_number
  endpoint:
    path: /v1/application/users/{{userId}}/phone-numbers/{{phoneNumberId}}
    method: DELETE
- name: phone_numbers
  endpoint:
    path: /v1/application/users/{{userId}}/phone-numbers
    method: GET
    data_selector: phoneNumbers
- name: device_fingerprints
  endpoint:
    path: /v1/application/users/{{userId}}/partner-device-fingerprints/{{deviceFingerprintId}}
    method: DELETE
    data_selector: status
- name: user_tokens
  endpoint:
    path: /oauth/token
    method: POST
    data_selector: user tokens object
- name: application_webhook_subscription
  endpoint:
    path: /v3/applications/{{clientKey}}/subscriptions
    method: POST
- name: get_application_webhook_subscription
  endpoint:
    path: /v3/applications/{{clientKey}}/subscriptions/{{subscriptionId}}
    method: GET
- name: list_application_webhook_subscriptions
  endpoint:
    path: /v3/applications/{{clientKey}}/subscriptions
    method: GET
- name: delete_application_webhook_subscription
  endpoint:
    path: /v3/applications/{{clientKey}}/subscriptions/{{subscriptionId}}
    method: DELETE
- name: test_application_webhook_subscription
  endpoint:
    path: /v3/applications/{{clientKey}}/subscriptions/{{subscriptionId}}/test-notifications
    method: POST
- name: create_profile_webhook_subscription
  endpoint:
    path: /v3/profiles/{{profileId}}/subscriptions
    method: POST
- name: get_profile_webhook_subscription
  endpoint:
    path: /v3/profiles/{{profileId}}/subscriptions/{{subscriptionId}}
    method: GET
- name: list_profile_webhook_subscriptions
  endpoint:
    path: /v3/profiles/{{profileId}}/subscriptions
    method: GET
- name: delete_profile_webhook_subscription
  endpoint:
    path: /v3/profiles/{{profileId}}/subscriptions/{{subscriptionId}}
    method: DELETE
- name: create_subscription
  endpoint:
    path: /v3/applications/{{clientKey}}/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: retrieve_subscription
  endpoint:
    path: /v3/applications/{{clientKey}}/subscriptions/{{subscriptionId}}
    method: GET
    data_selector: id
    params: {}
- name: list_subscriptions
  endpoint:
    path: /v3/applications/{{clientKey}}/subscriptions
    method: GET
    data_selector: id
    params: {}
- name: delete_subscription
  endpoint:
    path: /v3/applications/{{clientKey}}/subscriptions/{{subscriptionId}}
    method: DELETE
    data_selector: id
    params: {}
- name: Contact
  endpoint:
    path: /api-docs/api-reference/contact
    method: GET
- name: borderless_accounts
  endpoint:
    path: /v1/borderless-accounts
    method: GET
    data_selector: records
    params: {}
- name: convert_currencies
  endpoint:
    path: /v1/borderless-accounts/{{borderlessAccountId}}/conversions
    method: POST
    data_selector: conversion
    params: {}
- name: one_time_token_status
  endpoint:
    path: /v1/identity/one-time-token/status
    method: GET
    data_selector: oneTimeTokenProperties
    params: {}
- name: update_phone_number
  endpoint:
    path: /v3/spend/profiles/{{profileId}}/cards/{{cardToken}}/phone-number
    method: PUT
    data_selector: receipt
    params: {}
notes:
- KYC requirement can only be submitted if the KYC Review status is WAITING_CUSTOMER_INPUT.
- KYC requirement should only be submitted if the status is NOT_PROVIDED and apiCollectionSupported
  field is true.
- Wise uses standard OAuth 2.0 protocol for authentication and authorization.
- Client secret should be handled and stored with the utmost care.
- The refresh token's validity period expires (usually set at three months or more)
- Handle the scenario where you fail to generate a new access token from the refresh
  token.
- Sandbox environment does not support real money transfers or actual financial controls.
- Uses personal API tokens for authentication
- Implement basic retry mechanism to handle potential failures or network interruptions
- Implement duplicate prevention mechanism to avoid duplicate payments. Verify that
  UUID is uniquely generated for each individual payment and its value is kept same
  in case of retrying.
- Implement basic logging to help out in debugging and problem-solving, if needed.
- Check that you can handle all possible transfer states during polling of transfer
  info.
- Handle the potential issues described in Edge Case Handling above
- Required data fields for recipients and transfers vary for different currencies.
- Token expiry can occur due to various reasons, and the application should handle
  scenarios for invalid tokens.
- You need to go through the onboarding flow only once for each customer before they
  can set up their first transfer.
- Uses mutualTLS for authentication
- The 'CN' of the client certificate must match the 'clientId' under which you are
  registered
- You need to save payment initiation ID for tracking its status later.
- Not every multi-currency account opened in Wise has a unique set of local bank details
  attached to it.
- If the consent associated with the request is older than 90 days, only transactions
  up to 90 days old can be fetched.
- Wise has worked hard to provide the best experience around global currencies that
  allows partners to properly inform customers as much as possible.
- Batch Groups enable partners to group up to 1000 transfers under a single reference.
- Wise account deactivation invalidates any access tokens, refresh tokens or registration
  codes you possess for the customer's Wise account.
- Uses Swift network for transfers — may incur additional fees
- Implementing a retry mechanism with exponential backoff.
- Reducing the rate of requests.
- Proactive KYC is only supported in EU, UK, SG, JP, and AU regions for business.
- Flexible Partner Pricing is still in beta and will only be available to select partners
  depending on your integration method.
- Requires setup of API token for authorization
- The same reference must be included in your Bank Transfer's reference, remarks or
  description field.
- Sandbox environment is designed for testing and does not support real money transfers,
  actual financial controls, or all currency routes available in our Production environment.
- These heightened security protocols are exclusively made available to specific partners
  upon request and are subject to certain conditions.
- Webhooks use HTTP POST requests and are successful only with a 200 response.
- Multiple subscriptions per event type can lead to duplicate callbacks.
- Wise account deactivation invalidates any access tokens, refresh tokens or registration
  codes.
- You must call this endpoint before the expiration time, otherwise it will return
  a 400 error.
- Only the first call to this endpoint will be processed, any subsequent duplicate
  requests will be ignored.
- Wise takes security as a paramount concern in its APIs, employing technologies like
  mTLS (mutual TLS) and JOSE (JSON Object Signing and Encryption) to further secure
  communications between us and select partners.
- Webhook callbacks use HTTP POST requests.
- A webhook is successfully processed only when a 200 response is received.
- Webhooks are user-defined callbacks triggered by business events.
- State field is required for US, CA, BR and AU addresses.
- Occupations are required for CA, IN, JP, ID, IL, MX and within the US for the state
  NM.
- List of activities belonging to user profile.
- State field is required for US, CA, BR, AU addresses.
- Occupations is required for CA, IN, JP, ID, IL, MX and within the US for the state
  NM.
- The period between intervalStart and intervalEnd cannot exceed 469 days.
- The period between intervalStart and intervalEnd cannot exceed 469 days (around
  1 year 3 months).
- This endpoint is SCA protected when it applies.
- Requires setup of connected app in Wise
- You must use a client credentials token to authenticate this call
- Requires setup of OAuth token.
- These APIs are designed for you to be able to manage your consumer's cards easily,
  allowing you to set spending limits, modify the status of the cards, or view a list
  of cards that belong to a specific profile.
- On production, each personal profile can order at most 1 physical card and 3 virtual
  cards.
- On sandbox, we allow up to 10 physical cards and 30 virtual cards for testing purpose.
- The claim_account_code is meant to be used as a request parameter when redirecting
  a new customer to Wise.
- These APIs allow you to manage consumer's cards, set spending limits, modify card
  status, or view cards linked to a profile.
- Access token to be used when calling 'create user' endpoint. Valid for 12 hours.
- Only provide estimations for FX transactions with a Bank Transfer pay-in and pay-out
  option.
- A 403 response will be returned when getting sensitive card details for a card in
  any status other than ACTIVE or FROZEN.
- A contact is a representation of a recipient or beneficiary.
- The contactId from the response can be used to create a transfer.
- Should be 'USD' for ACH direct debits.
- These APIs are designed for you to provide your users with the ability to raise
  and manage transaction disputes directly on Wise.
- Updating a card order status to COMPLETED is deprecated.
- Authorization requires a Bearer token.
- SCA is required for high-risk and low-risk operations.
- On low-risk operations, clearing SCA once allows a 5 minutes window where SCA won't
  be requested again.
- Please be aware that this operation is irreversible.
- Provides estimations for FX transactions with a Bank Transfer pay-in and pay-out
  option.
- The Verify PIN/FaceMap/Device Fingerprint APIs are currently in closed Beta and
  subject to change.
- Text value of a OTT.
- 6 digit OTP code in text format.
- Get the list of allowed currencies that you can use when setting up your transfers.
- The delivery estimate is not a guaranteed time but an expected time.
- The endpoint requires a client credentials token, not a user level access token.
- The Partner Support APIs are currently in a closed Beta and subject to change.
- The status transition diagram may undergo modifications in the future and only covers
  regular pathways
- The payin deposit details API allows you to get the bank details for the account
  that the customer should send funds to when paying for a Wise transfer via a bank
  transfer.
- Some endpoints require specific user permissions.
- Retrieve Wise's FaceTec public key to be used when exporting 3D Facemap from your
  FaceTec host to Wise.
- Users can hold, convert, and fund transfers with balances in up to 56 currencies.
- Request accepts an optional field in the header, `X-idempotence-uuid`.
- This operation is irreversible.
- Uses OAuth2 with bearer token for authentication
- These APIs provide encrypted cardholder information which are needed to implement
  push provisioning in your own mobile App.
- This API is not available for sandbox testing.
- These endpoints are deprecated. Please refer to strong-customer-authentication section
  to integrate with SCA.
- Unauthenticated quotes cannot be used to create transfers, they are meant for illustration
  purposes in partner interfaces only.
- 6 digit OTP code in text format is required in the request body.
- You must use a user access token to authenticate this call.
- Requires a client credentials token for authentication
- The response message is always `jose-playground-response-`.
- This endpoint only supports Bearer authentication for non-Affiliate partners.
- All new integrations should use the v1.1 of GET and POST account requirements.
- Simulation doesn't work with email transfers.
- You need to fund transfer before calling simulation endpoints.
- Requests require unique X-idempotence-uuid for each profile creation.
- An authorization rule dictates whether transactions should be declined or approved
  based on a pre-determined set of rules.
- Requires setup of connected app in TransferWise
- Once created, a transfer needs to be funded within the next fourteen days. Otherwise,
  it will be automatically canceled.
- The originatorLegalEntityType field is currently optional, but will become required
  from March 2026.
- Some objects like Quote may require authentication
- Uses Bearer token for authentication
- User can have multiple Profiles including personal and business.
- You must use a user access token to authenticate this call and supply the profile
  with which the quote should be associated.
- These endpoints accept an optional query parameter originatorLegalEntityType.
- Access tokens are valid for 12 hours.
- Refresh tokens have a lifetime of 20 years.
- Use the GET endpoint to learn what datapoints are required to send a payment.
- POST endpoint helps to learn if any additional datapoints are required when a field
  value changes.
- Deprecated APIs are those that are no longer the standard version and have been
  marked as such.
- A rule is scoped at the application level, it means that an API token needs to be
  used to call our authorization rule endpoints.
- New users have to accept the Wise Terms and Conditions as part of their sign-up
  process.
- Personal tokens are not meant to be used for partner integrations and cannot be
  used to access certain endpoints.
- You must have 2-step login set up to generate a personal token.
- If you are based in the EU or UK, you cannot fund transfers or view balance statements
  with a personal token due to PSD2 requirements.
- Wise may enforce SCA on endpoints based on our risk assessment as part of our best
  efforts for consumer protection.
- This endpoint is SCA protected when it applies. If your profile is registered within
  the UK and/or EEA, SCA most likely applies to you.
- APIs help manage spend limits applied on profile or card
- Dynamic form requirements based on selected values.
- Originator legal entity type will be required from March 2026.
- User security allows users to set up security related protections over API.
- Requires both a client credentials token and additional access to use.
- Refresh tokens are valid for 20 years.
errors:
- '202 - Accepted: KYC Review successfully created.'
- '400 - Bad Request: Invalid request. (e.g. unsupported type, null type)'
- '401 - Unauthorized: User is not authorized to access the resource.'
- '404 - Not Found: Underlying action with provided ID is not found.'
- '409 Conflict: User account already exists for the email address.'
- '400 Bad Request: Tokens to the user account are revoked.'
- '400: Invalid user credentials'
- '400 - Bad Request: Invalid request. (e.g. unsupported `type`, null `type`)'
- '401 - Unauthorized: User is not authorized to access the resource'
- '400: Invalid user credentials.'
- '403: Token revoked due to email change'
- '401: Refresh token invalid'
- '401 Unauthorized: Recheck client certificate or client_id'
- '400 Bad Request: Check your request parameters'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '200: OK. Successful request.'
- '201: OK. Resource created.'
- '400: Bad request. Request message data did not pass validation.'
- '401: Unauthorised. Not authorised to access requested data.'
- '403: Forbidden. Access to requested data is forbidden.'
- '404: Not Found. Requested resource does not exist.'
- '408: Timeout. Operation timed out.'
- '422: Unprocessable entity. Request message data did not pass validation.'
- '429: Too Many Requests'
- '500: Server error.'
- '422 - Unprocessable Entity: Invalid pricing configuration'
- '400: Bad Request - Call before expiration time.'
- '207 - Multi-Status: Evidence(s) successfully uploaded, fully or partially.'
- '400 - Bad Request: Invalid request payload (e.g. no evidence, misspelled evidence,
  unexpected value).'
- '403 - Forbidden: The client is not authorized to perform this request.'
- '409 - Conflict: Document is already uploaded and can''t be re-submitted before
  a review.'
- '413 - Content Too Large: Requested file size is too large.'
- '415 - Unsupported Media Type: Request payload is in an unsupported format.'
- '400: Bad Request - Must call before expiration time'
- Duplicate requests will be ignored
- '400 Bad Request: Check required fields and their formats.'
- '401 Unauthorized: Recheck API token.'
- 207 - Multi-Status
- 400 - Bad Request
- 403 - Forbidden
- 409 - Conflict
- 413 - Content Too Large
- 415 - Unsupported Media Type
- '400 Bad Request: Invalid input data format'
- '404 Not Found: Address ID does not exist'
- '401 Unauthorized: Check your API token'
- '401 Unauthorized: Ensure you have valid authorization token.'
- '429 Too Many Requests: Rate limit exceeded, please slow down.'
- 'error.payment.not-found: No payment found with id [123456789] for profile id [987654321]'
- 'error.payment-return.invalid: A valid reason is required to return a Swift payment'
- REQUEST_ALREADY_EXISTS
- KIOSK_ID_NOT_FOUND
- CARD_TYPE_NOT_FOUND
- INVALID_FIELD_VALUE
- INVALID_PIN_FORMAT
- EMPTY_OR_NULL_FIELD_VALUE
- UNKNOWN_ERROR
- '403 Forbidden: Card not in ACTIVE or FROZEN status'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '202 - Accepted: The request was successful.'
- '422 - Unprocessable Content: The card information can''t be processed by the kiosk
  machine.'
- 'REQUEST_ERROR: An error occurred on the server.'
- 'KIOSK_ID_NOT_FOUND: The kiosk ID does not exist. Please verify that this kiosk
  ID is correctly set up.'
- 'PIN_VERIFICATION_FAILED: The PIN cannot be verified because the server is unreachable.'
- ACCOUNT_INACTIVE
- ACCOUNT_SUSPENDED
- ATM_PIN_CHANGE_NOT_ALLOWED
- BLOCKED_COUNTRY
- BLOCKED_SUBSCRIPTION
- CARD_EXPIRED
- CARD_FROZEN
- CARD_INACTIVE
- CARD_BLOCKED
- CARD_PARTNER_SUSPENDED
- CHIP_PIN_ENTRY_TRIES_EXCEEDED
- CONNECTION_ISSUE
- CONTACTLESS_PIN_ENTRY_REQUIRED
- CREDIT_TRANSACTIONS_NOT_SUPPORTED
- CUMULATIVE_LIMIT_EXCEEDED
- DECLINED_ADVICE
- INCORRECT_CVV
- INCORRECT_EXPIRY_DATE
- INCORRECT_PIN
- INSUFFICIENT_FUNDS
- INVALID_3DS_UCAF
- INCORRECT_ARQC
- INCORRECT_ICVV
- INVALID_MERCHANT
- INVALID_TRANSACTION
- MANDATE_DCC_NON_SUPPORTED_FOR_CARD_COUNTRY
- MANDATE_LOCAL_CASH_WITHDRAWAL_NOT_ALLOWED
- NON_SUPPORTED_CURRENCY
- NON_SUPPORTED_MCC_FOR_COUNTRY
- PAYMENT_METHOD_DAILY_LIMIT_EXCEEDED
- PAYMENT_METHOD_LIFETIME_LIMIT_EXCEEDED
- PAYMENT_METHOD_MONTHLY_LIMIT_EXCEEDED
- PAYMENT_METHOD_NOT_ALLOWED
- PAYMENT_METHOD_TRANSACTION_LIMIT_EXCEEDED
- PIN_ENTRY_TRIES_EXCEEDED
- PRE_ACTIVATED_CARD_PIN_ENTRY_REQUIRED
- PROCESSING_ERROR
- RESTRICTED_MODE
- REVERSAL_NOT_MATCHING_AUTH_CURRENCY
- SCA_SOFT_DECLINE
- SCHEME_BLOCKED_TRANSACTION
- SECURITY_CVM_FAILURE
- SECURITY_MAGSTRIPE_SECURE_ELEMENTS_INCORRECT_OR_MISSING
- SECURITY_PIN_ENTRY_REQUIRED
- SUSPECTED_FRAUD
- SUSPECTED_FRAUD_AML
- SUSPECTED_FRAUD_COMPLIANCE
- SUSPECTED_FRAUD_CORE_FRAUD
- SUSPECTED_FRAUD_SANCTIONS
- SUSPECTED_FRAUD_SOFT_DECLINE
- TRANSACTION_TYPE_NOT_SUPPORTED
- UNEXPECTED_ERROR
- '400 - Bad request: The facemap verification failed.'
- '401 Unauthorized: Recheck client ID or secret'
- 'Unauthorized: Invalid client credential token'
- 'Invalid currency: Ensure to use ''USD'' for ACH direct debits or ''CAD'' for EFT
  direct debits.'
- 'ACCESS_DENIED: Check user permissions'
- 'NOT_FOUND: The requested resource does not exist'
- '409: Profile already exists'
- '200 - OK: The facemap has been successfully verified.'
- '400 BAD REQUEST: When account details for the specified currency do not exist'
- '409 Conflict: A profile with this ID already exists.'
- '204 - No Content: No Content.'
- '404 - Not found: User or deviceFingerprintId is not found.'
- 'invalid_grant: Invalid user credentials.'
- '200: Response with changed status'
- 'No Content: No content returned for successful verification'
- '403 (Forbidden): Stronger authentication is needed.'
- 'Unauthorized: Recheck OAuth token.'
- 'Bad Request: Check provided parameters.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.sandbox.transferwise.tech
  headers:
    Content-Type: application/json
  paginator:
    type: page
    page_size_param: pageSize
    default_page_size: 100
source_metadata: null
