resources:
- name: stories
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
- name: website_activity
  endpoint:
    path: /api/v1/website/activity
    method: GET
    data_selector: logs
    params: {}
- name: contact_information
  endpoint:
    path: /api/v1/contact/information
    method: POST
    data_selector: contacts
    params: {}
- name: stories
  endpoint:
    path: /v1/stories
    method: GET
    data_selector: stories
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: assets
- name: content
  endpoint:
    path: /v1/content
    method: GET
    data_selector: records
- name: content
  endpoint:
    path: /v1/content
    method: GET
    data_selector: records
- name: Content Delivery API
  endpoint:
    path: /docs/api/content-delivery/v2/getting-started
    method: GET
- name: Management API
  endpoint:
    path: /docs/api/management/getting-started
    method: GET
- name: GraphQL API
  endpoint:
    path: /docs/api/graphql/getting-started
    method: GET
- name: Image Service API
  endpoint:
    path: /docs/api/image-service
    method: GET
- name: stories
  endpoint:
    path: /v1/stories
    method: GET
    data_selector: stories
- name: spaces
  endpoint:
    path: /v1/spaces
    method: GET
    data_selector: spaces
- name: stories
  endpoint:
    path: /v2/stories
    method: GET
- name: links
  endpoint:
    path: /v2/links
    method: GET
- name: spaces
  endpoint:
    path: /v2/spaces
    method: GET
- name: datasources
  endpoint:
    path: /v2/datasources
    method: GET
- name: tags
  endpoint:
    path: /v2/tags
    method: GET
- name: assets
  endpoint:
    path: /v2/assets
    method: GET
- name: presets
  endpoint:
    path: /docs/api/management/presets/retrieve-multiple-presets/
    method: GET
- name: releases
  endpoint:
    path: /docs/api/management/releases/retrieve-multiple-releases/
    method: GET
- name: story_schedules
  endpoint:
    path: /docs/api/management/scheduling-stories/retrieve-multiple-story-schedules/
    method: GET
- name: space_roles
  endpoint:
    path: /docs/api/management/space-roles/retrieve-multiple-space-roles/
    method: GET
- name: spaces
  endpoint:
    path: /docs/api/management/spaces/retrieve-multiple-spaces/
    method: GET
- name: stories
  endpoint:
    path: /docs/api/management/stories/retrieve-multiple-stories/
    method: GET
- name: tags
  endpoint:
    path: /docs/api/management/tags/retrieve-multiple-tags/
    method: GET
- name: tasks
  endpoint:
    path: /docs/api/management/tasks/retrieve-multiple-tasks/
    method: GET
- name: webhooks
  endpoint:
    path: /docs/api/management/webhooks/retrieve-multiple-webhooks/
    method: GET
- name: workflow_stages
  endpoint:
    path: /docs/api/management/workflow-stage/retrieve-multiple-workflow-stages/
    method: GET
- name: workflow_stage_changes
  endpoint:
    path: /docs/api/management/workflow-stage-changes/retrieve-multiple-workflow-stage-changes/
    method: GET
- name: workflows
  endpoint:
    path: /docs/api/management/workflows/retrieve-multiple-workflows/
    method: GET
- name: Preset
  endpoint:
    path: /docs/api/management/presets/retrieve-multiple-presets/
    method: GET
- name: Release
  endpoint:
    path: /docs/api/management/releases/retrieve-multiple-releases/
    method: GET
- name: Story Schedule
  endpoint:
    path: /docs/api/management/scheduling-stories/retrieve-multiple-story-schedules/
    method: GET
- name: Space Role
  endpoint:
    path: /docs/api/management/space-roles/retrieve-multiple-space-roles/
    method: GET
- name: Space
  endpoint:
    path: /docs/api/management/spaces/retrieve-multiple-spaces/
    method: GET
- name: Story
  endpoint:
    path: /docs/api/management/stories/retrieve-multiple-stories/
    method: GET
- name: Tag
  endpoint:
    path: /docs/api/management/tags/retrieve-multiple-tags/
    method: GET
- name: Task
  endpoint:
    path: /docs/api/management/tasks/retrieve-multiple-tasks/
    method: GET
- name: Webhook
  endpoint:
    path: /docs/api/management/webhooks/retrieve-multiple-webhooks/
    method: GET
- name: Workflow Stage
  endpoint:
    path: /docs/api/management/workflow-stage/retrieve-multiple-workflow-stages/
    method: GET
- name: Workflow
  endpoint:
    path: /docs/api/management/workflows/retrieve-multiple-workflows/
    method: GET
- name: spaces
  endpoint:
    path: /spaces
    method: GET
    data_selector: spaces
    params: {}
- name: stories
  endpoint:
    path: /v1/stories
    method: GET
    data_selector: stories
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: assets
    params: {}
- name: stories
  endpoint:
    path: /v1/stories
    method: GET
    data_selector: stories
    params: {}
- name: components
  endpoint:
    path: /v1/components
    method: GET
    data_selector: components
    params: {}
- name: content
  endpoint:
    path: /spaces/{space_id}/stories
    method: GET
    data_selector: stories
    params: {}
- name: whitepapers
  endpoint:
    path: /lp/whitepapers/
    method: GET
- name: spaces
  endpoint:
    path: /spaces
    method: GET
    data_selector: spaces
- name: stories
  endpoint:
    path: /v1/stories
    method: GET
    data_selector: stories
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
    params: {}
- name: content
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
- name: stories
  endpoint:
    path: /stories
    method: GET
    data_selector: stories
- name: content
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
    params: {}
- name: content
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
    params: {}
- name: content
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
    params: {}
- name: stories
  endpoint:
    path: /v1/stories
    method: GET
    data_selector: stories
- name: press_releases
  endpoint:
    path: /api/v1/press_releases
    method: GET
    data_selector: data
    params: {}
- name: content
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
- name: press_releases
  endpoint:
    path: /v1/press-releases
    method: GET
    data_selector: releases
    params: {}
- name: applications
  endpoint:
    path: /v1/applications
    method: GET
    data_selector: records
    params: {}
- name: applicants
  endpoint:
    path: /api/v1/applicants
    method: GET
    data_selector: data
    params: {}
- name: content
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
    params: {}
- name: content
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
    params: {}
- name: content
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
    params: {}
- name: customer_data
  endpoint:
    path: /api/customer
    method: GET
    data_selector: data
    params: {}
- name: components
  endpoint:
    path: /v1/cdn/components
    method: GET
    data_selector: components
    params: {}
- name: log_files_usage_information
  endpoint:
    path: /log_files_usage_information
    method: GET
    data_selector: data
    params: {}
- name: account_information
  endpoint:
    path: /account_information
    method: GET
    data_selector: data
    params: {}
- name: communications_feedback
  endpoint:
    path: /communications_feedback
    method: GET
    data_selector: data
    params: {}
- name: financial_payment_information
  endpoint:
    path: /financial_payment_information
    method: GET
    data_selector: data
    params: {}
- name: contact_information
  endpoint:
    path: /contact_information
    method: GET
    data_selector: data
    params: {}
- name: content
  endpoint:
    path: /v1/content
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: records
    params: {}
- name: content
  endpoint:
    path: /v1/content
    method: GET
    data_selector: data
    params: {}
- name: log_files
  endpoint:
    path: /logs
    method: GET
    data_selector: records
- name: cookies
  endpoint:
    path: /cookies
    method: GET
    data_selector: records
- name: account_information
  endpoint:
    path: /account
    method: GET
    data_selector: records
- name: communications_feedback
  endpoint:
    path: /communications
    method: GET
    data_selector: records
- name: financial_payment_information
  endpoint:
    path: /payments
    method: GET
    data_selector: records
- name: contact_information
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: log_files_usage_information
  endpoint:
    path: /log-files-usage-information
    method: GET
    data_selector: data
    params: {}
- name: cookies_cookie_notice
  endpoint:
    path: /cookies-cookie-notice
    method: GET
    data_selector: data
    params: {}
- name: contact_information
  endpoint:
    path: /contact-information
    method: GET
    data_selector: data
    params: {}
- name: applications_job_site
  endpoint:
    path: /applications-job-site
    method: GET
    data_selector: data
    params: {}
- name: customer_data
  endpoint:
    path: /customers/data
    method: GET
    data_selector: data
    params: {}
- name: log_files
  endpoint:
    path: /logs/files
    method: GET
    data_selector: logs
    params: {}
- name: usage_information
  endpoint:
    path: /usage/information
    method: GET
    data_selector: usage
    params: {}
- name: log_files_usage_information
  endpoint:
    path: /data/log_files_usage
    method: GET
    data_selector: records
- name: cookies_cookie_notice
  endpoint:
    path: /data/cookies_cookie_notice
    method: GET
    data_selector: records
- name: contact_information
  endpoint:
    path: /data/contact_information
    method: GET
    data_selector: records
- name: social_media_data
  endpoint:
    path: /data/social_media_data
    method: GET
    data_selector: records
- name: applications_job_site
  endpoint:
    path: /data/applications_job_site
    method: GET
    data_selector: records
- name: customer_content
  endpoint:
    path: /api/v1/customer_content
    method: GET
    data_selector: records
- name: website_activity
  endpoint:
    path: /website/activity
    method: GET
    data_selector: log_files_usage_info
- name: contact_information
  endpoint:
    path: /contact/information
    method: POST
    data_selector: contact_details
- name: newsletter
  endpoint:
    path: /newsletter/subscribe
    method: POST
    data_selector: subscription_status
- name: job_applications
  endpoint:
    path: /jobs/apply
    method: POST
    data_selector: application_status
- name: account_information
  endpoint:
    path: /services/account/information
    method: GET
    data_selector: data
    params: {}
- name: communications_feedback
  endpoint:
    path: /services/communications/feedback
    method: GET
    data_selector: data
    params: {}
- name: financial_payment_information
  endpoint:
    path: /services/financial/payment/information
    method: GET
    data_selector: data
    params: {}
- name: contact_information
  endpoint:
    path: /services/contact/information
    method: GET
    data_selector: data
    params: {}
- name: log_files_usage_information
  endpoint:
    path: /services/logs/usage
    method: GET
    data_selector: data
    params: {}
- name: cookies
  endpoint:
    path: /services/cookies
    method: GET
    data_selector: data
    params: {}
- name: third_party_sources
  endpoint:
    path: /services/third_party/sources
    method: GET
    data_selector: data
    params: {}
- name: other_processing_activities
  endpoint:
    path: /services/processing/activities
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: data
    params: {}
- name: stories
  endpoint:
    path: /v2/cdn/stories
    method: GET
    data_selector: stories
    params: {}
- name: spaces
  endpoint:
    path: /v2/spaces
    method: GET
    data_selector: spaces
    params: {}
- name: stories
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
- name: customer_content
  endpoint:
    path: /api/customer/content
    method: GET
    data_selector: records
- name: home_story
  endpoint:
    path: cdn/stories/home
    method: GET
    data_selector: data.story
    params:
      version: draft
- name: stories
  endpoint:
    path: /v2/cdn/stories
    method: GET
    data_selector: stories
- name: stories
  endpoint:
    path: /cdn/stories/home
    method: GET
    data_selector: story
- name: stories
  endpoint:
    path: /v2/cdn/stories
    method: GET
    data_selector: stories
- name: story
  endpoint:
    path: /stories
    method: GET
    data_selector: stories
- name: stories
  endpoint:
    path: /v2/cdn/stories
    method: GET
    data_selector: stories
- name: story
  endpoint:
    path: /v2/cdn/stories
    method: GET
    data_selector: stories
- name: story
  endpoint:
    path: cdn/stories/home
    method: GET
    data_selector: data.story
- name: stories
  endpoint:
    path: /v2/stories
    method: GET
    data_selector: stories
- name: story
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
- name: access_token
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
    params: {}
- name: stories
  endpoint:
    path: cdn/stories/home
    method: GET
    params:
      version: draft
- name: story
  endpoint:
    path: /stories
    method: GET
    data_selector: stories
- name: story
  endpoint:
    path: /v2/stories
    method: GET
    data_selector: story
    params: {}
- name: story
  endpoint:
    path: /v2/stories/retrieve-a-single-story
    method: GET
- name: blocks
  endpoint:
    path: /api/blocks
    method: GET
    data_selector: blocks
- name: stories
  endpoint:
    path: /v2/cdn/stories
    method: GET
    data_selector: stories
- name: story
  endpoint:
    path: /stories
    method: GET
    data_selector: stories
- name: stories
  endpoint:
    path: /v2/cdn/stories
    method: GET
    data_selector: stories
- name: datasource
  endpoint:
    path: /v2/datasources
    method: GET
    data_selector: datasources
- name: story
  endpoint:
    path: /v2/stories/home
    method: GET
    data_selector: content
    params:
      version: draft
- name: datasources
  endpoint:
    path: /api/content-delivery/v2/datasources/
    method: GET
    data_selector: datasources
    params: {}
- name: blocks
  endpoint:
    path: /v2/blocks
    method: GET
- name: fields
  endpoint:
    path: /v2/fields
    method: GET
- name: create_previews
  endpoint:
    path: /create-previews
    method: GET
    data_selector: blocks
    params: {}
- name: view_history
  endpoint:
    path: /view-history
    method: GET
    data_selector: history
    params: {}
- name: related_resources
  endpoint:
    path: /related-resources
    method: GET
    data_selector: resources
    params: {}
- name: roles
  endpoint:
    path: /docs/manuals/roles
    method: GET
    data_selector: roles
    params: {}
- name: permissions
  endpoint:
    path: /docs/manuals/permissions
    method: GET
    data_selector: permissions
    params: {}
- name: workflows
  endpoint:
    path: /docs/manuals/workflows
    method: GET
    data_selector: workflows
    params: {}
- name: assets
  endpoint:
    path: /cdn/assets/me
    method: GET
    data_selector: assets
    params:
      filename: filename
      token: ASSET_TOKEN
- name: datasource
  endpoint:
    path: /v2/datasources
    method: GET
    data_selector: datasources
    params: {}
- name: stories
  endpoint:
    path: /api/content-delivery/v2/stories
    method: GET
- name: links
  endpoint:
    path: /api/content-delivery/v2/links
    method: GET
- name: datasources
  endpoint:
    path: /api/content-delivery/v2/datasources
    method: GET
- name: tags
  endpoint:
    path: /api/content-delivery/v2/tags
    method: GET
- name: assets
  endpoint:
    path: /api/content-delivery/v2/assets
    method: GET
- name: roles
  endpoint:
    path: /docs/manuals/roles
    method: GET
    data_selector: roles
    params: {}
- name: permissions
  endpoint:
    path: /docs/manuals/permissions
    method: GET
    data_selector: permissions
    params: {}
- name: workflows
  endpoint:
    path: /docs/manuals/workflows
    method: GET
    data_selector: workflows
    params: {}
- name: preset
  endpoint:
    path: /docs/api/management/presets/
    method: GET
- name: release
  endpoint:
    path: /docs/api/management/releases/
    method: GET
- name: story_schedule
  endpoint:
    path: /docs/api/management/scheduling-stories/
    method: GET
- name: space_role
  endpoint:
    path: /docs/api/management/space-roles/
    method: GET
- name: space
  endpoint:
    path: /docs/api/management/spaces/
    method: GET
- name: story
  endpoint:
    path: /docs/api/management/stories/
    method: GET
- name: tag
  endpoint:
    path: /docs/api/management/tags/
    method: GET
- name: task
  endpoint:
    path: /docs/api/management/tasks/
    method: GET
- name: webhook
  endpoint:
    path: /docs/api/management/webhooks/
    method: GET
- name: workflow_stage
  endpoint:
    path: /docs/api/management/workflow-stage/
    method: GET
- name: workflow_stage_change
  endpoint:
    path: /docs/api/management/workflow-stage-changes/
    method: GET
- name: workflow
  endpoint:
    path: /docs/api/management/workflows/
    method: GET
- name: stories
  endpoint:
    path: /docs/api/content-delivery/v2/stories/retrieve-multiple-stories
    method: GET
- name: links
  endpoint:
    path: /docs/api/content-delivery/v2/links/retrieve-multiple-links
    method: GET
- name: datasources
  endpoint:
    path: /docs/api/content-delivery/v2/datasources/retrieve-multiple-datasources
    method: GET
- name: tags
  endpoint:
    path: /docs/api/content-delivery/v2/tags/retrieve-multiple-tags
    method: GET
- name: stories
  endpoint:
    path: /docs/api/content-delivery/v2/stories/retrieve-multiple-stories
    method: GET
- name: links
  endpoint:
    path: /docs/api/content-delivery/v2/links/retrieve-multiple-links
    method: GET
- name: datasources
  endpoint:
    path: /docs/api/content-delivery/v2/datasources/retrieve-multiple-datasources
    method: GET
- name: tags
  endpoint:
    path: /docs/api/content-delivery/v2/tags/retrieve-multiple-tags
    method: GET
- name: assets
  endpoint:
    path: /docs/api/content-delivery/v2/assets/get-signed-url
    method: GET
- name: content
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
    params: {}
- name: content
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
    params:
      version: published
- name: content
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
- name: dynamic_form_layout
  endpoint:
    path: /tp/simple-dynamic-form-builder
    method: GET
    data_selector: data
- name: user_management_roles
  endpoint:
    path: /docs/manuals/roles
    method: GET
    data_selector: data
- name: kiosk_system
  endpoint:
    path: /api/kiosk_system
    method: GET
    data_selector: data
    params: {}
- name: category_pages
  endpoint:
    path: /v1/catgories
    method: GET
    data_selector: stories
- name: product
  endpoint:
    path: /v1/cdn/products
    method: GET
    data_selector: products
- name: user_management
  endpoint:
    path: /v1/users
    method: GET
    data_selector: users
- name: content
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
    params: {}
- name: category_pages
  endpoint:
    path: /stories
    method: GET
    data_selector: stories
    params: {}
- name: content
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
    params: {}
- name: content
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
- name: landing_page
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
- name: content
  endpoint:
    path: /cdn/stories
    method: GET
    data_selector: stories
- name: stories
  endpoint:
    path: cdn/stories/home
    method: GET
    data_selector: data.story
    params:
      version: draft
- name: case_study
  endpoint:
    path: /v1/case_studies
    method: GET
    data_selector: stories
- name: blueprints
  endpoint:
    path: /v2/blueprints
    method: GET
    data_selector: blueprints
    params: {}
- name: draft_content
  endpoint:
    path: cdn/stories/home
    method: GET
    data_selector: story
    params:
      version: draft
- name: home_story
  endpoint:
    path: cdn/stories/home
    method: GET
    params:
      version: draft
      resolve_relations: featured_articles.articles
- name: stories
  endpoint:
    path: cdn/stories
    method: GET
    params:
      version: draft
- name: field_level_translation
  endpoint:
    path: /docs/api/content-delivery/v2/getting-started
    method: GET
    data_selector: translations
    params: {}
- name: folder_level_translation
  endpoint:
    path: /docs/api/management/getting-started
    method: GET
    data_selector: translations
    params: {}
- name: space_level_translation
  endpoint:
    path: /docs/api/graphql/getting-started
    method: GET
    data_selector: translations
    params: {}
- name: stories
  endpoint:
    path: cdn/stories/home
    method: GET
    data_selector: response
    params:
      starts_with: european-union
      version: published
- name: home_story
  endpoint:
    path: cdn/stories/home
    method: GET
    data_selector: story
    params:
      version: draft
      resolve_relations: featured_articles.articles
- name: stories
  endpoint:
    path: cdn/stories
    method: GET
    data_selector: stories
    params:
      version: draft
- name: field_level_translation
  endpoint:
    path: /docs/api/content-delivery/v2/getting-started
    method: GET
    data_selector: translations
    params: {}
- name: folder_level_translation
  endpoint:
    path: /docs/api/management/getting-started
    method: GET
    data_selector: translations
    params: {}
- name: space_level_translation
  endpoint:
    path: /docs/api/graphql/getting-started
    method: GET
    data_selector: translations
    params: {}
- name: backups
  endpoint:
    path: /api/backups
    method: GET
    data_selector: data
    params: {}
- name: stories
  endpoint:
    path: cdn/stories/home
    method: GET
    data_selector: response
    params:
      starts_with: european-union
      version: published
- name: S3 Backups
  endpoint:
    path: /apps/backups
    method: POST
- name: Management API
  endpoint:
    path: /docs/api/management
    method: GET
- name: Assets Backup Script
  endpoint:
    path: /tool-examples/storyblok-assets-backup
    method: GET
- name: Schema Migration Tool
  endpoint:
    path: /maoberlehner/storyblok-migrate
    method: GET
- name: webhook_events
  endpoint:
    path: /webhooks
    method: POST
    data_selector: events
    params: {}
- name: backups
  endpoint:
    path: /backups
    method: GET
    data_selector: included_data
    params: {}
- name: S3 Backups
  endpoint:
    path: /apps/backups
    method: GET
- name: Management API
  endpoint:
    path: /docs/api/management
    method: GET
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: payload
    params: {}
- name: components
  endpoint:
    path: /components
    method: GET
- name: languages
  endpoint:
    path: /languages
    method: GET
- name: datasources
  endpoint:
    path: /datasources
    method: GET
- name: stories
  endpoint:
    path: /docs/api/content-delivery/v2/stories/retrieve-multiple-stories
    method: GET
- name: links
  endpoint:
    path: /docs/api/content-delivery/v2/links/retrieve-multiple-links
    method: GET
- name: datasources
  endpoint:
    path: /docs/api/content-delivery/v2/datasources/retrieve-multiple-datasources
    method: GET
- name: tags
  endpoint:
    path: /docs/api/content-delivery/v2/tags/retrieve-multiple-tags
    method: GET
- name: assets
  endpoint:
    path: /docs/api/content-delivery/v2/assets/get-signed-url
    method: GET
- name: stories
  endpoint:
    path: /docs/api/content-delivery/v2/stories/retrieve-multiple-stories
    method: GET
- name: links
  endpoint:
    path: /docs/api/content-delivery/v2/links/retrieve-multiple-links
    method: GET
- name: datasources
  endpoint:
    path: /docs/api/content-delivery/v2/datasources/retrieve-multiple-datasources
    method: GET
- name: tags
  endpoint:
    path: /docs/api/content-delivery/v2/tags/retrieve-multiple-tags
    method: GET
- name: cdn/stories
  endpoint:
    path: cdn/stories
    method: GET
    data_selector: data.story
    params:
      version: draft
- name: stories
  endpoint:
    path: /docs/api/content-delivery/v2/stories/retrieve-multiple-stories
    method: GET
- name: links
  endpoint:
    path: /docs/api/content-delivery/v2/links/retrieve-multiple-links
    method: GET
- name: datasources
  endpoint:
    path: /docs/api/content-delivery/v2/datasources/retrieve-multiple-datasources
    method: GET
- name: tags
  endpoint:
    path: /docs/api/content-delivery/v2/tags/retrieve-multiple-tags
    method: GET
- name: presets
  endpoint:
    path: /docs/api/management/presets/
    method: GET
- name: releases
  endpoint:
    path: /docs/api/management/releases/
    method: GET
- name: scheduling_stories
  endpoint:
    path: /docs/api/management/scheduling-stories/
    method: GET
- name: space_roles
  endpoint:
    path: /docs/api/management/space-roles/
    method: GET
- name: spaces
  endpoint:
    path: /docs/api/management/spaces/
    method: GET
- name: stories
  endpoint:
    path: /docs/api/management/stories/
    method: GET
- name: tags
  endpoint:
    path: /docs/api/management/tags/
    method: GET
- name: tasks
  endpoint:
    path: /docs/api/management/tasks/
    method: GET
- name: webhooks
  endpoint:
    path: /docs/api/management/webhooks/
    method: GET
- name: workflow_stage
  endpoint:
    path: /docs/api/management/workflow-stage/
    method: GET
- name: workflow_stage_changes
  endpoint:
    path: /docs/api/management/workflow-stage-changes/
    method: GET
- name: workflows
  endpoint:
    path: /docs/api/management/workflows/
    method: GET
- name: cdn/stories
  endpoint:
    path: cdn/stories
    method: GET
    data_selector: data.story
    params:
      version: draft
- name: stories
  endpoint:
    path: /v2/stories
    method: GET
    data_selector: records
- name: links
  endpoint:
    path: /v2/links
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /v2/tags
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v2/assets
    method: GET
    data_selector: records
- name: datasources
  endpoint:
    path: /v2/datasources
    method: GET
    data_selector: records
- name: StoryblokBridge
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: presets
  endpoint:
    path: /docs/api/management/presets/
    method: GET
- name: releases
  endpoint:
    path: /docs/api/management/releases/
    method: GET
- name: scheduling_stories
  endpoint:
    path: /docs/api/management/scheduling-stories/
    method: GET
- name: space_roles
  endpoint:
    path: /docs/api/management/space-roles/
    method: GET
- name: spaces
  endpoint:
    path: /docs/api/management/spaces/
    method: GET
- name: stories
  endpoint:
    path: /docs/api/management/stories/
    method: GET
- name: tags
  endpoint:
    path: /docs/api/management/tags/
    method: GET
- name: tasks
  endpoint:
    path: /docs/api/management/tasks/
    method: GET
- name: webhooks
  endpoint:
    path: /docs/api/management/webhooks/
    method: GET
- name: workflow_stage
  endpoint:
    path: /docs/api/management/workflow-stage/
    method: GET
- name: workflow_stage_changes
  endpoint:
    path: /docs/api/management/workflow-stage-changes/
    method: GET
- name: workflows
  endpoint:
    path: /docs/api/management/workflows/
    method: GET
- name: story
  endpoint:
    path: /docs/api/content-delivery/v2/stories/retrieve-multiple-stories
    method: GET
- name: link
  endpoint:
    path: /docs/api/content-delivery/v2/links/retrieve-multiple-links
    method: GET
- name: datasource
  endpoint:
    path: /docs/api/content-delivery/v2/datasources/retrieve-multiple-datasources
    method: GET
- name: tag
  endpoint:
    path: /docs/api/content-delivery/v2/tags/retrieve-multiple-tags
    method: GET
- name: asset
  endpoint:
    path: /docs/api/content-delivery/v2/assets/get-signed-url
    method: GET
- name: story
  endpoint:
    path: /stories
    method: GET
    data_selector: stories
- name: stories
  endpoint:
    path: /v2/stories
    method: GET
    data_selector: stories
- name: links
  endpoint:
    path: /v2/links
    method: GET
    data_selector: links
- name: datasources
  endpoint:
    path: /v2/datasources
    method: GET
    data_selector: datasources
- name: tags
  endpoint:
    path: /v2/tags
    method: GET
    data_selector: tags
- name: assets
  endpoint:
    path: /v2/assets
    method: GET
    data_selector: assets
- name: stories
  endpoint:
    path: /docs/api/content-delivery/v2/stories/retrieve-multiple-stories
    method: GET
- name: links
  endpoint:
    path: /docs/api/content-delivery/v2/links/retrieve-multiple-links
    method: GET
- name: datasources
  endpoint:
    path: /docs/api/content-delivery/v2/datasources/retrieve-multiple-datasources
    method: GET
- name: tags
  endpoint:
    path: /docs/api/content-delivery/v2/tags/retrieve-multiple-tags
    method: GET
- name: stories
  endpoint:
    path: cdn/stories/home
    method: GET
    data_selector: story
    params:
      version: draft
      resolve_relations:
      - featured-articles.posts
- name: stories
  endpoint:
    path: cdn/stories/home
    method: GET
    data_selector: data.story
- name: storyblok
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
- name: story
  endpoint:
    path: /v1/stories
    method: GET
    data_selector: stories
- name: stories
  endpoint:
    path: /docs/api/content-delivery/v2/stories/retrieve-multiple-stories
    method: GET
- name: links
  endpoint:
    path: /docs/api/content-delivery/v2/links/retrieve-multiple-links
    method: GET
- name: datasources
  endpoint:
    path: /docs/api/content-delivery/v2/datasources/retrieve-multiple-datasources
    method: GET
- name: tags
  endpoint:
    path: /docs/api/content-delivery/v2/tags/retrieve-multiple-tags
    method: GET
- name: assets
  endpoint:
    path: /docs/api/content-delivery/v2/assets/get-signed-url
    method: GET
- name: stories
  endpoint:
    path: cdn/stories
    method: GET
    data_selector: data.stories
- name: stories
  endpoint:
    path: cdn/stories/home
    method: GET
    data_selector: story
- name: stories
  endpoint:
    path: /docs/api/content-delivery/v2/stories/retrieve-multiple-stories
    method: GET
- name: links
  endpoint:
    path: /docs/api/content-delivery/v2/links/retrieve-multiple-links
    method: GET
- name: datasources
  endpoint:
    path: /docs/api/content-delivery/v2/datasources/retrieve-multiple-datasources
    method: GET
- name: tags
  endpoint:
    path: /docs/api/content-delivery/v2/tags/retrieve-multiple-tags
    method: GET
- name: assets
  endpoint:
    path: /docs/api/content-delivery/v2/assets/get-signed-url
    method: GET
- name: cdn_stories
  endpoint:
    path: cdn/stories/home
    method: GET
- name: story
  endpoint:
    path: /v2/cdn/stories
    method: GET
    data_selector: stories
    params:
      version: draft
- name: access_token
  endpoint:
    path: /docs/concepts/access-tokens
    method: GET
- name: presets
  endpoint:
    path: /docs/api/management/presets/
    method: GET
- name: releases
  endpoint:
    path: /docs/api/management/releases/
    method: GET
- name: scheduling_stories
  endpoint:
    path: /docs/api/management/scheduling-stories/
    method: GET
- name: space_roles
  endpoint:
    path: /docs/api/management/space-roles/
    method: GET
- name: spaces
  endpoint:
    path: /docs/api/management/spaces/
    method: GET
- name: stories
  endpoint:
    path: /docs/api/management/stories/
    method: GET
- name: tags
  endpoint:
    path: /docs/api/management/tags/
    method: GET
- name: tasks
  endpoint:
    path: /docs/api/management/tasks/
    method: GET
- name: webhooks
  endpoint:
    path: /docs/api/management/webhooks/
    method: GET
- name: workflow_stage
  endpoint:
    path: /docs/api/management/workflow-stage/
    method: GET
- name: workflow_stage_changes
  endpoint:
    path: /docs/api/management/workflow-stage-changes/
    method: GET
- name: workflows
  endpoint:
    path: /docs/api/management/workflows/
    method: GET
- name: stories
  endpoint:
    path: cdn/stories/home
    method: GET
    data_selector: data.story
    params:
      version: draft
- name: stories
  endpoint:
    path: cdn/stories/home
    method: GET
    data_selector: data.story
- name: stories
  endpoint:
    path: /v2/cdn/stories
    method: GET
    data_selector: stories
    params:
      version: draft
- name: stories
  endpoint:
    path: /v2/cdn/stories
    method: GET
    data_selector: stories
- name: page
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
    params: {}
- name: home
  endpoint:
    path: cdn/stories/home
    method: GET
    params:
      version: draft
- name: stories
  endpoint:
    path: /v2/cdn/stories
    method: GET
    data_selector: stories
- name: story
  endpoint:
    path: cdn/stories/home
    method: GET
    data_selector: data.story
    params:
      version: draft
- name: products
  endpoint:
    path: /cdn/stories/
    method: GET
    data_selector: stories
    params:
      starts_with: products/
- name: story
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
- name: stories
  endpoint:
    path: /v2/cdn/stories
    method: GET
    data_selector: stories
    params:
      accessToken: process.env.STORYBLOK_DELIVERY_API_TOKEN
- name: story
  endpoint:
    path: /v2/stories/retrieve-a-single-story
    method: GET
    data_selector: story
- name: home_story
  endpoint:
    path: cdn/stories/home
    method: GET
    data_selector: story
    params:
      version: draft
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /cdn/stories/
    method: GET
    data_selector: stories
    params:
      starts_with: products/
- name: storyblokEntry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.storyblokEntry
    params:
      full_slug: home
- name: image1
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.image1
    params:
      name: image-1
- name: stories
  endpoint:
    path: /v2/cdn/stories
    method: GET
    data_selector: stories
- name: spaces
  endpoint:
    path: /v2/spaces
    method: GET
    data_selector: spaces
- name: story
  endpoint:
    path: /v2/stories/retrieve-a-single-story
    method: GET
    data_selector: story
    params:
      version: draft
- name: component
  endpoint:
    path: /components
    method: GET
    data_selector: components
- name: story
  endpoint:
    path: /stories
    method: GET
    data_selector: stories
- name: storyblokEntry
  endpoint:
    path: /v1/cdn/stories
    method: GET
    data_selector: stories
    params:
      full_slug: home
- name: image
  endpoint:
    path: /v1/cdn/assets
    method: GET
    data_selector: assets
    params:
      name: image-1
notes:
- Webhook of Storyblok triggers cache invalidation for changed routes.
- We use physical, technical and organizational safeguards designed to protect your
  information and strive to protect your data in the best possible way.
- Access to our Storyblok Services is password protected.
- We process personal data to operate the Storyblok Services, to provide our products
  and services to you, to ensure the privacy and security of our Storyblok Services.
- Some objects may return nulls in deeply nested fields
- API rate limits apply.
- Ensure correct OAuth setup for successful authentication.
- Storyblok provides a single platform where all teams can collaborate, ensuring everyone
  works with the same up-to-date content.
- Enterprises can set up custom workflows and approval processes, streamlining collaboration
  and ensuring smooth handoffs between teams.
- Access all our latest features, including our Ideation Room and AI Translations.
- Uses OAuth2 with refresh token — requires setup of connected app in Storyblok
- ISO 27001 & TISAX certified, and GDPR compliant.
- Ensuring service reliability and 99.99% uptime SLA.
- Content is the backbone of your brand.
- Content health is key.
- Ensure to configure the OAuth app properly to get access tokens.
- Requires API key for authentication
- Requires OAuth2 setup with Storyblok connected app
- Users can sign up and log in using their GitHub account.
- Ensure the space ID is correctly provided in the endpoint.
- Free license, revenue share, co-marketing, training resources.
- Learn everything about modern content management.
- Our comprehensive guides will help you transform your business and modernize your
  content strategy.
- Refer to the API documentation for more details.
- We do not have the capacity to help with implementation-specific details.
- Some objects may return nulls in deeply nested fields.
- No setup fees for self-service customers
- Free plan available to try out Storyblok
- Requires setup of connected app in Storyblok
- API rate limit is enforced.
- Ensure to handle pagination for large datasets.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- A headless CMS separates content creation from content presentation using APIs.
- Ensure to handle rate limits appropriately.
- Headless CMS allows for flexible content delivery across multiple platforms.
- Requires OAuth2 authentication for accessing the API
- Some API endpoints may have rate limits.
- Some API calls may be rate limited.
- Some endpoints may require specific permissions for access.
- Offers various endpoints for accessing press releases and news.
- Requires proper authentication setup to access the API.
- Storyblok is a fully remote company, hiring excellent people from all over the world.
- Enterprise-grade availability with minimal downtime.
- Requires setup of OAuth2 for access.
- Storyblok provides software as a service and therefore does not warrant or guarantee
  that the Storyblok services will be uninterrupted, bug-free, error-free, or fully
  functional at all times.
- Storyblok may offer services on a free or trial basis.
- Storyblok does not create or provide any backups of Customer data.
- Enterprise-grade reliability, uptime, and world-class support
- Uses TLS 1.3 for data encryption in transit
- API documentation available at https://www.storyblok.com/docs/api
- Storyblok Services may be subject to usage limits and restrictions.
- Customer is solely responsible for the accuracy, legality, quality and integrity
  of the Customer Content.
- Ensure compliance with GDPR and other privacy regulations.
- Storyblok does not create or provide any back-ups of Customer data.
- Customer acknowledges that Customer data or information can be deleted and/or lost
  at any time and Customer assumes sole responsibility for any data backup.
- Storyblok conducts transfer impact assessments, prior to the transfer of Personal
  Data.
- Storyblok commits to cooperate and comply respectively with the advice of the panel
  established by the EU data protection authorities.
- ISO 27001 certified CMS
- Data encryption (both in transit and at rest)
- Storyblok may transfer personal data outside of the EEA area, with the condition
  that all appropriate safeguards required by applicable data laws are in place.
- Storyblok, Inc. is subject to the enforcement authority of the US Federal Trade
  Commission.
- Storyblok Services may only be accessed and used with a valid Account.
- GDPR compliant data storage, management and data processing
- TISAX certified for enhanced security.
- Storyblok provides an option for Enterprise Plan Customers to create backups of
  Customer Content on its own cloud storage.
- API uses OAuth2 with a refresh token
- Ensure to configure the connected app in Storyblok
- We do not sell, rent, or otherwise disclose your personal data for money or anything
  else of value.
- Some resources may return nulls in deeply nested fields
- Service providers may process personal data outside the European Economic Area.
- Storyblok Services are made available to our customers on a subscription basis
- Data processing is based on legitimate interest and consent.
- Cookies cannot be disabled for essential functionality.
- We may change this privacy policy from time to time.
- If there ever should be any concern or dispute relating to our data protection practices,
  we hope to be able to resolve such disputes between us in an amicable and mutually
  beneficial way.
- Protection of your data is extremely important to us.
- We may also use these data in connection with forensic investigations in the event
  of a security incident or to create aggregate user statistics.
- We may process log files in order to ensure the functionality, stability and security
  of our website.
- Essential Cookies cannot be disabled.
- We collect and process personal data when you are a customer of our Storyblok Services.
- We use third-party services like Salesforce, Mailchimp, Zendesk, and Stripe.
- We may collect and process personal data when you are a customer of our Storyblok
  Services, interact with us and access the Storyblok Services.
- Personal data may be included in Customer Content
- Data processing based on legitimate interest and consent.
- Web beacons are used in newsletters for tracking interactions.
- We use services provided by Storyblok GmbH to provide you with the Storyblok Services.
- You may contact your administrator to assist with your requests.
- Deactivating access to a space does not delete your information from that space.
- Some responses may contain null values
- We do not sell, rent, or share your personal data for money or anything else of
  value, and have not done so within the last 12 months.
- Requires setup of OAuth for access to the API.
- Some fields may be optional depending on the request.
- This guide has been tested with next@15.3.0, react@19.0.0, react-dom@19.0.0, @storyblok/react@4.6.0,
  Node.js v22.13.0
- Storyblok Services are made available to customers on a subscription basis
- Ensure to set the correct region value depending on the server location of your
  Storyblok space.
- Uses API key for authentication
- The body field may contain an array with several blocks of custom types
- Stories might contain a body or a similar blocks field which consists of an array
  with several blocks of custom types.
- 'This guide has been tested with specific package versions: next@15.3.0, react@19.0.0,
  react-dom@19.0.0, @storyblok/react@4.6.0, Node.js v22.13.0'
- Uses API key for authentication — ensure the access token is set
- Uses API key for authentication — requires access token from Storyblok
- Stories might contain a body or similar field with an array of blocks
- All blocks in a space are organized in the Block Library.
- Changes to the technical name may take a few minutes to propagate.
- Conditional fields are only available on some plans.
- The time shown in the UI is calculated based on the timezone set in your account.
  The API returns the UTC time.
- Uses API key for authentication.
- Private assets can be resolved using the assets endpoint of the Content Delivery
  API.
- Blocks in the library can be organized using folders and tags.
- Data from linked stories is not available in the preview template.
- Ensure your app references the correct domain when handling images.
- Use the a2 domains in case you are dealing with CORS related limitations.
- Datasources can be used to store information relevant for field plugins or tools.
- Ensure to check rate limits for API calls
- Some endpoints may have specific query parameters for filtering results
- Folders provide hierarchy and can be nested.
- Tags help create thematic associations by grouping stories across folders.
- Using Storyblok’s Image Service is subject to technical limits.
- ISO 27001 compliance in a modern, cloud-native deployment that never stops evolving
  to keep everything secure.
- Mindvalley migrated their content to Storyblok in 2019
- Uses drag-and-drop capabilities with our Visual Editor
- Robust documentation for global scalability and localization.
- Launch apps faster with Storyblok's headless CMS.
- Empowered teams move business goals.
- Supports content delivery and management via API.
- CHRONEXT built and developed their mobile application prototype in just 7 weeks.
- Since their launch, app session times have tripled from 2 minutes on their website
  to 5 minutes dedicated to their mobile application.
- Mindvalley employs a headless CMS for content management.
- API-first integrations enable agile development across multiple channels.
- Uses OAuth2 for authentication.
- Supports dynamic form layouts for mobile applications.
- Allows for content updates without redeploying the app to the App Store.
- Requires OAuth2 authentication setup.
- Uses GraphQL instead of REST API.
- Configured webhooks for each environment to manually update landing pages.
- The Visual Editor is the interface for your content in Storyblok.
- 'Stories have four potential statuses: unpublished, published, changed, and scheduled.'
- Integrates with various best-of-breed technologies.
- Storyblok enables localization for 14 languages.
- Content types remain consistent for all editors.
- The API allows fetching content based on the published state of the stories.
- Localized marketing is an essential part of marketing today, given how connected
  we are today, especially in the digital world.
- The Visual Editor loads your webpage in an iframe.
- The website that you preview must load via HTTPS.
- Blueprints streamline the process of deploying to Vercel or Netlify.
- Tokens protect access to services.
- Learn more about personal and OAuth tokens in the Management API authentication
  section.
- References to stories can be implemented with the References, Single-Option, or
  Multi-Options fields.
- Multiple language versions of each story can be managed.
- Blocks fields are not translatable.
- When attempting to resolve more than 50 references, the API will return a rel_uuids
  array.
- The e-commerce integrations are exclusively available on higher-tier plans.
- Backups do not include story versions, presets, space settings, or actual assets.
  Only asset references are stored.
- In an e-commerce context, data can be outdated quickly due to, for example, changes
  in availability or discounts.
- 'The receiving service must respond with a 2xx status code and Content-Type: application/json.'
- Backups in Storyblok do not include story versions, presets, space settings, or
  actual assets. Only asset references are stored.
- To use pipeline webhooks, the Pipelines App needs to be installed first.
- To use release webhooks, the Releases App needs to be installed first.
- To use task webhooks, the Tasks App needs to be installed.
- While we recommend using the S3 Backups app for backing up your Storyblok space,
  you can also use additional tools and approaches for custom backup strategies.
- Credentials stored in ~/.storyblok/credentials.json
- There’s no default option to add a webhook secret to verify task webhook payloads.
  However, you can pass a secret key via the user input dialog and verify it in your
  application code.
- Ensuring your requests come only from trustworthy sources can help safeguard your
  applications. You can protect your webhooks by verifying they were triggered by
  Storyblok events.
- Requires setup of connected app in api
- The region parameter is required for non-EU spaces.
- StoryblokBridge can only be used in a browser environment.
- Uses OAuth2 with refresh token — requires setup of connected app in storyblok
- Introduced in 3.6.0
- Introduced in 3.7.0
- The region parameter must be specified unless the space was created in the EU.
- The `region` parameter must be specified unless the space was created in the EU.
- Requires API key to access data
- 'Caution: The region parameter must be specified unless the space was created in
  the EU.'
- Create a new blank space to follow the tutorial.
- The guide uses Symfony Flex recipe.
- Tested with svelte@5.0.0, @sveltejs/kit@2.16.0, @storyblok/svelte@5.0.2, node@22.13.0
- Requires an API key for authentication
- Svelte blocks are not related to Storyblok blocks.
- Create a new blank space in Storyblok for the tutorial.
- Access token is required for API calls.
- Tested with @11ty/eleventy@3.1.0, @storyblok/js@4.0.0, @storyblok/richtext@3.2.0,
  Node.js v22.13.0
- Access token is required for the API
- Signup for a free Storyblok account & choose to start with an empty space.
- Make sure to register your Snipcart API key in the configuration.
- Tested with @11ty/eleventy@3.1.0 and @storyblok/js@4.0.0
- You can connect any application (written in any language or on any stack) to Auth0
  and define the identity providers you want to use.
- Requires setup of a Storyblok account and configuration of previewToken
- Uses OAuth2 with authorization code flow — requires setup of Auth0 application.
- Optional parameter localAssets to download the images to use with Gatsby Image Plugin
- Optional parameter languages to specify which languages to retrieve
- Keep your OAuth token private!
- Backup your components and stories regularly.
- When setting up Auth0, do not add 'http://localhost:4000' as part of the audience.
- Uses Auth0 for authentication.
- The audience must match the one added in your clients' setup.
- localAssets option must be set to true to download images.
errors:
- '401 Unauthorized: Recheck API token.'
- '401 Unauthorized: Check your credentials and OAuth token.'
- '429 Too Many Requests: Rate limit exceeded, try again later.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check your API token or client credentials.'
- '404 Not Found: Verify the endpoint or resource you are trying to access.'
- '403 Forbidden: Check permissions for the requested resource'
- '404 Not Found: Verify the endpoint path'
- '401 Unauthorized: Recheck OAuth token validity'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: Verify the resource path.'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Invalid token.'
- '403 Forbidden: Check API key and permissions.'
- '404 Not Found: Verify the endpoint and parameters.'
- '500 Internal Server Error: Retry the request later.'
- '401 Unauthorized: Check your API key or OAuth token.'
- '403 Forbidden: Check your API key permissions.'
- '404 Not Found: Resource does not exist.'
- '401 Unauthorized: Check your authentication credentials.'
- '404 Not Found: Ensure the endpoint is correct and resource exists.'
- '401 Unauthorized: Check your API credentials.'
- '404 Not Found: The requested resource could not be found.'
- '401 Unauthorized: Recheck OAuth credentials.'
- '404 Not Found: Ensure the endpoint path is correct.'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify the access token.'
- '403 Forbidden: Ensure sufficient permissions.'
- '401 Unauthorized: Check your access token'
- '403 Forbidden: Check user permissions or roles'
- '404 Not Found: Endpoint may be incorrect or resource does not exist'
- '401 Unauthorized: Verify your access token.'
- '404 Not Found: Ensure the endpoint is correct.'
- '401 Unauthorized: Check if the access token is valid'
- '401 Unauthorized: Check your access token and permissions.'
- '401 Unauthorized: Check access token.'
- '401 Unauthorized: Recheck access token or permissions'
- '429 Too Many Requests: Reduce the frequency of API calls'
- '404 Not Found: Verify the endpoint or resource ID'
- '401 Unauthorized: Check your API token.'
- '401 Unauthorized: Check OAuth token or client credentials.'
- '500 Internal Server Error: An unexpected error occurred on the server.'
- '401 Unauthorized: Check client_id and client_secret.'
- '401 Unauthorized: Check your API key.'
- '404 Not Found: Story not found.'
- Webhooks aren’t retried on failure. Retrying could cause issues, as publish/save
  are single events.
- '404: Failed to receive content from the api.'
- '401: Unauthorized access, check your API key.'
- '401 Unauthorized: Recheck OAuth credentials or token expiration.'
- Not Authenticated
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthToken
  - Client
  - Space
  - accessToken
  - ContentType
  - Block
  - Jwt
  - Authorization
client:
  base_url: https://api.storyblok.com
  auth:
    type: apikey
source_metadata: null
