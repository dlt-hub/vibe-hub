resources:
- name: get_address_from_cep
  endpoint:
    path: /get_address_from_cep
    method: GET
    data_selector: address_data
    params:
      cep: string
      webservice: WebService.OPENCEP
      timeout: 5
      proxies: dict
- name: async_get_address_from_cep
  endpoint:
    path: /async_get_address_from_cep
    method: GET
    data_selector: address_data
    params:
      cep: string
      webservice: WebService.OPENCEP
      timeout: 5
      proxies: dict
- name: address
  endpoint:
    path: /get_address_from_cep
    method: GET
    data_selector: address
    params: {}
- name: get_address_from_cep
  endpoint:
    path: /apicep/fetch_address
    method: GET
- name: async_get_address_from_cep
  endpoint:
    path: /opencep/fetch_address
    method: GET
notes: []
errors:
- 'ValueError: If the provided CEP is invalid'
- 'KeyError: If the specified webservice is not a valid WebService enum value'
- 'InvalidCEP: Raised when an invalid CEP is provided.'
- 'CEPNotFound: Raised when the CEP is not found in the selected API.'
- 'BlockedByFlood: Raised when too many CEP requests are made in a short period.'
- 'ConnectionError: Raised when a connection error occurs.'
- 'HTTPError: Raised when an HTTP error occurs.'
- 'URLRequired: Raised when an invalid URL is used for a CEP request.'
- 'TooManyRedirects: Raised when too many redirects occur.'
- 'Timeout: Raised when a request times out.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://github.com/mstuttgart/brazilcep
  headers:
    Accept: application/json
source_metadata: null
