resources:
- name: result_sets_count
  endpoint:
    path: /resultSets/count
    method: GET
- name: result_set
  endpoint:
    path: /resultSets/{resultSet}
    method: GET
- name: result_sets
  endpoint:
    path: /resultSets
    method: GET
- name: annotations_children
  endpoint:
    path: /annotations/children
    method: GET
- name: annotations_parents
  endpoint:
    path: /annotations/parents
    method: GET
- name: annotations_search
  endpoint:
    path: /annotations/search
    method: GET
- name: datasets
  endpoint:
    path: /datasets
    method: GET
- name: genes
  endpoint:
    path: /genes
    method: GET
- name: platforms
  endpoint:
    path: /platforms
    method: GET
- name: taxa
  endpoint:
    path: /taxa
    method: GET
- name: processed_expression_data
  endpoint:
    path: /datasets/{dataset}/data/processed
    method: GET
    data_selector: expressionData
    params:
      filter: false
- name: dataset_platforms
  endpoint:
    path: /datasets/{dataset}/platforms
    method: GET
    data_selector: platforms
    params: {}
- name: raw_expression_data
  endpoint:
    path: /datasets/{dataset}/data/raw
    method: GET
    data_selector: data
    params:
      dataset: required
      quantitationType: required
- name: quantitation_types
  endpoint:
    path: /datasets/{dataset}/quantitationTypes
    method: GET
    data_selector: quantitationTypes
    params:
      dataset: required
- name: count_result_sets
  endpoint:
    path: /resultSets/count
    method: GET
    data_selector: results
    params: {}
- name: result_set
  endpoint:
    path: /resultSets/{resultSet}
    method: GET
    data_selector: results
    params:
      offset: '0'
      limit: '20'
- name: all_result_sets
  endpoint:
    path: /resultSets
    method: GET
    data_selector: results
    params:
      offset: '0'
      limit: '20'
- name: annotations_children
  endpoint:
    path: /annotations/children
    method: GET
    data_selector: results
    params: {}
- name: annotations_parents
  endpoint:
    path: /annotations/parents
    method: GET
    data_selector: results
    params: {}
- name: search_annotations
  endpoint:
    path: /annotations/search
    method: GET
    data_selector: results
    params: {}
- name: search_taxon_datasets
  endpoint:
    path: /annotations/{taxon}/search/{query}/datasets
    method: GET
    data_selector: datasets
    params:
      taxon: required
      query: required
      offset: 0
      limit: 20
- name: get_dataset_annotations
  endpoint:
    path: /datasets/{dataset}/annotations
    method: GET
    data_selector: annotations
    params:
      dataset: required
- name: get_dataset_cell_level_characteristics
  endpoint:
    path: /datasets/{dataset}/cellLevelCharacteristics
    method: GET
    data_selector: cell_level_characteristics
    params:
      dataset: required
      quantitationType: required
- name: get_dataset_cell_type_assignment
  endpoint:
    path: /datasets/{dataset}/cellTypeAssignment
    method: GET
    data_selector: cell_type_assignment
    params:
      dataset: required
      quantitationType: required
- name: get_dataset_design
  endpoint:
    path: /datasets/{dataset}/design
    method: GET
    data_selector: design
    params:
      dataset: required
- name: get_dataset_differential_expression_analyses
  endpoint:
    path: /datasets/{dataset}/analyses/differential
    method: GET
    data_selector: differential_expression_analyses
    params:
      dataset: required
      offset: 0
      limit: 20
- name: get_dataset_differential_expression_analysis_result_sets
  endpoint:
    path: /datasets/{dataset}/analyses/differential/resultSets
    method: GET
    data_selector: result_sets
    params:
      dataset: required
- name: get_dataset_expression
  endpoint:
    path: /datasets/{dataset}/data
    method: GET
    data_selector: expression_data
    params:
      dataset: required
      filter: false
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
    params: {}
- name: single_cell_expression
  endpoint:
    path: /datasets/{dataset}/data/singleCell
    method: GET
    data_selector: data
    params: {}
- name: samples
  endpoint:
    path: /datasets/{dataset}/samples
    method: GET
    data_selector: ResponseDataObjectListBioAssayValueObject
    params:
      dataset: path
      quantitationType: query
      useProcessedQuantitationType: query
- name: singleCellDimension
  endpoint:
    path: /datasets/{dataset}/singleCellDimension
    method: GET
    data_selector: ResponseDataObjectListBioAssayValueObject
    params:
      dataset: path
      quantitationType: query
      exclude: query
- name: platforms
  endpoint:
    path: /platforms
    method: GET
    data_selector: applications/json
    params:
      limit: 20
      offset: 0
- name: platform_datasets
  endpoint:
    path: /platforms/{platform}/datasets
    method: GET
    data_selector: applications/json
    params:
      limit: 20
      offset: 0
- name: platform_elements
  endpoint:
    path: /platforms/{platform}/elements
    method: GET
    data_selector: applications/json
    params:
      limit: 20
      offset: 0
- name: platform_element_genes
  endpoint:
    path: /platforms/{platform}/elements/{probe}/genes
    method: GET
    data_selector: applications/json
    params:
      limit: 20
      offset: 0
- name: differential_expression_results_for_gene
  endpoint:
    path: /datasets/analyses/differential/results/taxa/{taxon}/genes/{gene}
    method: GET
- name: expression_levels_for_gene
  endpoint:
    path: /datasets/expressions/genes/{gene}
    method: GET
- name: expression_levels_for_gene_in_taxon
  endpoint:
    path: /datasets/expressions/taxa/{taxon}/genes/{gene}
    method: GET
- name: expression_data_matrix_for_genes
  endpoint:
    path: /datasets/{datasets}/expressions/genes/{genes}
    method: GET
- name: expression_data_matrix_for_genes_in_taxon
  endpoint:
    path: /datasets/{datasets}/expressions/taxa/{taxon}/genes/{genes}
    method: GET
- name: datasets_expression_pca
  endpoint:
    path: /datasets/{datasets}/expressions/pca
    method: GET
- name: platforms_usage_statistics
  endpoint:
    path: /datasets/platforms
    method: GET
- name: taxa_usage_statistics
  endpoint:
    path: /datasets/taxa
    method: GET
- name: number_of_datasets
  endpoint:
    path: /datasets/count
    method: GET
- name: refresh_dataset
  endpoint:
    path: /datasets/{dataset}/refresh
    method: GET
- name: refresh_datasets_annotations
  endpoint:
    path: /datasets/annotations/refresh
    method: GET
- name: MeasurementValueObject
  endpoint:
    path: /path/to/measurement
    method: GET
    data_selector: data
- name: DifferentialExpressionAnalysisResultSetValueObject
  endpoint:
    path: /path/to/differential_expression
    method: GET
    data_selector: data
- name: ExpressionExperimentValueObject
  endpoint:
    path: /path/to/expression_experiment
    method: GET
    data_selector: data
- name: refreshDatasetsPlatforms
  endpoint:
    path: /datasets/platforms/refresh
    method: GET
    data_selector: records
    params:
      limit: 50
- name: getGeneGoTerms
  endpoint:
    path: /genes/{gene}/goTerms
    method: GET
    data_selector: records
    params: {}
- name: getGeneLocations
  endpoint:
    path: /genes/{gene}/locations
    method: GET
    data_selector: records
    params: {}
- name: getGeneProbes
  endpoint:
    path: /genes/{gene}/probes
    method: GET
    data_selector: records
    params:
      limit: 20
      offset: 0
- name: getGenes
  endpoint:
    path: /genes
    method: GET
    data_selector: records
    params:
      limit: 20
      offset: 0
- name: getGenesByIds
  endpoint:
    path: /genes/{genes}
    method: GET
    data_selector: records
    params: {}
- name: refreshGenesProbes
  endpoint:
    path: /genes/probes/refresh
    method: GET
    data_selector: records
    params: {}
- name: getNumberOfPlatforms
  endpoint:
    path: /platforms/count
    method: GET
    data_selector: records
    params: {}
- name: getPlatformAnnotations
  endpoint:
    path: /platforms/{platform}/annotations
    method: GET
    data_selector: records
    params: {}
- name: accession
  endpoint:
    path: /resources/apidocs/ubic/gemma/rest/util/args/FilterArg.html
    method: GET
    data_selector: properties
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: records
- name: taxa
  endpoint:
    path: /taxa
    method: GET
    data_selector: records
- name: taxa_by_ids
  endpoint:
    path: /taxa/{taxa}
    method: GET
    data_selector: records
- name: taxon_datasets
  endpoint:
    path: /taxa/{taxon}/datasets
    method: GET
    data_selector: records
- name: taxon_gene_go_terms
  endpoint:
    path: /taxa/{taxon}/genes/{gene}/goTerms
    method: GET
    data_selector: records
- name: taxon_gene_locations
  endpoint:
    path: /taxa/{taxon}/genes/{gene}/locations
    method: GET
    data_selector: records
- name: taxon_gene_probes
  endpoint:
    path: /taxa/{taxon}/genes/{gene}/probes
    method: GET
    data_selector: records
- name: taxon_genes
  endpoint:
    path: /taxa/{taxon}/genes
    method: GET
    data_selector: records
- name: taxon_genes_by_ids
  endpoint:
    path: /taxa/{taxon}/genes/{gene}
    method: GET
    data_selector: records
- name: taxon_genes_overlapping_chromosome
  endpoint:
    path: /taxa/{taxon}/chromosomes/{chromosome}/genes
    method: GET
    data_selector: records
- name: accession
  endpoint:
    path: /accession
    method: GET
    data_selector: records
    params: {}
- name: bioAssays
  endpoint:
    path: /bioAssays
    method: GET
    data_selector: records
    params: {}
- name: taxon
  endpoint:
    path: /taxon
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
notes:
- Use of this webpage and the Gemma Web services is subject to terms and conditions.
- Uses OAuth2 with refresh token — requires setup of connected app in 10x genomics
- Some datasets may have restrictions on the amount of data returned.
- The `measurement` field will be populated when true.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
errors:
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '404 Not Found: Dataset does not exist.'
- '503 Service Unavailable: Retry after some time.'
- '404: Either the dataset or the quantitation type do not exist.'
- '404: The dataset does not exist.'
- '400 Bad Request: Check the request parameters and data format.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - GROUP_ADMIN
client:
  base_url: https://gemma.msl.ubc.ca/rest/v2
source_metadata: null
