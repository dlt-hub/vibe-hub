resources:
- name: Encrypt
  endpoint:
    path: /Encrypt
    method: POST
    data_selector: Encrypt
    params: {}
- name: Decrypt
  endpoint:
    path: /Decrypt
    method: POST
    data_selector: Decrypt
    params: {}
- name: callPagamS2S
  endpoint:
    path: /callPagamS2S
    method: POST
    data_selector: GestPayS2S
    params: {}
- name: callSettleS2S
  endpoint:
    path: /callSettleS2S
    method: POST
- name: callDeleteS2S
  endpoint:
    path: /callDeleteS2S
    method: POST
- name: callRefundS2S
  endpoint:
    path: /callRefundS2S
    method: POST
- name: callReadTrxS2S
  endpoint:
    path: /callReadTrxS2S
    method: POST
    data_selector: GestPayS2S
    params:
      shopLogin: ''
      shopTransactionId: ''
      bankTransactionId: ''
- name: callCheckCartaS2S
  endpoint:
    path: /callCheckCartaS2S
    method: POST
    data_selector: GestPayS2S
    params:
      shopLogin: ''
      shopTransactionId: ''
      withAuth: ''
- name: CallRequestTokenS2S
  endpoint:
    path: /CallRequestTokenS2S
    method: POST
    data_selector: CallRequestTokenS2SResult
    params: {}
- name: callDeleteTokenS2S
  endpoint:
    path: /callDeleteTokenS2S
    method: POST
    data_selector: callDeleteTokenS2SResult
    params: {}
- name: CallUpdateTokenS2S
  endpoint:
    path: /CallUpdateTokenS2S
    method: POST
    data_selector: CallUpdateTokenS2SResult
    params: {}
- name: CallIdealListS2S
  endpoint:
    path: /CallIdealListS2S
    method: POST
    data_selector: CallIdealListS2SResult
    params: {}
- name: CallMyBankListS2S
  endpoint:
    path: /CallMyBankListS2S
    method: POST
    data_selector: CallMyBankListS2SResult
    params: {}
- name: CallUpdateOrderS2S
  endpoint:
    path: /CallUpdateOrderS2S
    method: POST
    data_selector: GestPayS2S
    params: {}
- name: callExchangeRateS2S
  endpoint:
    path: /callExchangeRateS2S
    method: POST
    data_selector: callExchangeRateS2SResult
    params: {}
- name: callCheckTokenS2S
  endpoint:
    path: /callCheckTokenS2S
    method: POST
    data_selector: TokenDetails
    params: {}
- name: callPagamS2S
  endpoint:
    path: /callPagamS2S
    method: POST
    data_selector: PaymentResult
    params: {}
- name: Encrypt
  endpoint:
    path: /Encrypt
    method: POST
    data_selector: EncryptResult
    params: {}
- name: encrypt_amazon_pay
  endpoint:
    path: /Encrypt
    method: POST
    data_selector: Encrypt
    params: {}
- name: call_pagam_s2s
  endpoint:
    path: /callPagamS2S
    method: POST
    data_selector: callPagamS2S
    params: {}
- name: check_cvv
  endpoint:
    path: /check/cvv/
    method: POST
    data_selector: payload
    params: {}
- name: check_email
  endpoint:
    path: /check/email/
    method: POST
    data_selector: payload
    params: {}
- name: check_expirydate
  endpoint:
    path: /check/expirydate/
    method: POST
    data_selector: payload
    params: {}
- name: check_pan
  endpoint:
    path: /check/pan/
    method: POST
    data_selector: payload
    params: {}
- name: check_DCC
  endpoint:
    path: /check/DCC/
    method: POST
    data_selector: payload
    params: {}
- name: check_creditCard
  endpoint:
    path: /check/creditCard
    method: POST
    data_selector: payload
    params: {}
- name: check_token
  endpoint:
    path: /check/token
    method: POST
    data_selector: payload
    params: {}
- name: dashboard_search
  endpoint:
    path: /dashboard/search
    method: POST
    data_selector: payload
    params: {}
- name: dashboard_export_file
  endpoint:
    path: /dashboard/export/file
    method: POST
    data_selector: payload
    params: {}
- name: export_batch
  endpoint:
    path: /dashboard/export/batch/
    method: POST
    data_selector: payload.batch
    params: {}
- name: export_batch_list
  endpoint:
    path: /dashboard/export/batch/{shopLogin}/
    method: GET
    data_selector: payload.batch
    params: {}
- name: export_template
  endpoint:
    path: /dashboard/export/template/
    method: POST
    data_selector: payload.template
    params: {}
- name: export_template_list
  endpoint:
    path: /dashboard/export/template/{shopLogin}
    method: GET
    data_selector: payload.template
    params: {}
- name: saved_searches
  endpoint:
    path: /dashboard/search/saved/{shopLogin}/
    method: GET
- name: create_saved_search
  endpoint:
    path: /dashboard/search/saved/
    method: POST
- name: delete_saved_search
  endpoint:
    path: /dashboard/search/saved/{shopLogin}/{searchID}
    method: DELETE
- name: payment_create
  endpoint:
    path: /payment/create
    method: POST
- name: payment_dataForBuyer
  endpoint:
    path: /payment/dataForBuyer/{paymentID}
    method: GET
- name: payment_methods
  endpoint:
    path: /payment/methods/{paymentID}/{languageID}
    method: GET
- name: payment_methods_detail
  endpoint:
    path: /payment/methods/detail/{paymentID}/{paymentType}
    method: GET
- name: payment_update
  endpoint:
    path: /payment/update
    method: POST
- name: payment_submit
  endpoint:
    path: /payment/submit
    method: POST
- name: payment_detail
  endpoint:
    path: /payment/detail/{paymentID}
    method: GET
- name: payment_detail
  endpoint:
    path: /payment/detail
    method: POST
    data_selector: payload
    params: {}
- name: payment_capture
  endpoint:
    path: /payment/capture
    method: POST
    data_selector: payload
    params: {}
- name: payment_cancel
  endpoint:
    path: /payment/cancel
    method: POST
    data_selector: payload
    params: {}
- name: payment_refund
  endpoint:
    path: /payment/refund/
    method: POST
- name: shop_environment
  endpoint:
    path: /shop/environment/{shopLogin}
    method: GET
- name: shop_language
  endpoint:
    path: /shop/language/{shopLogin}
    method: GET
- name: shop_payment_methods
  endpoint:
    path: /shop/methods/{shopLogin}
    method: GET
- name: shop_paymentPage
  endpoint:
    path: /shop/paymentPage/{shopLogin}
    method: GET
- name: paymentPage
  endpoint:
    path: /shop/paymentPage
    method: POST
    data_selector: payload
    params: {}
- name: token
  endpoint:
    path: /shop/token
    method: POST
    data_selector: payload
    params: {}
- name: version
  endpoint:
    path: /shop/version/{shopLogin}
    method: GET
    data_selector: payload
    params: {}
- name: tokenList
  endpoint:
    path: /shop/token/{shopLogin}
    method: GET
    data_selector: payload
    params: {}
- name: deleteToken
  endpoint:
    path: /shop/token/{shopLogin}/{token}
    method: DELETE
    data_selector: payload
    params: {}
- name: EPS
  endpoint:
    path: /payment/create
    method: POST
    data_selector: payment
    params: {}
- name: Giropay
  endpoint:
    path: /payment/create
    method: POST
    data_selector: payment
    params: {}
- name: Google Pay
  endpoint:
    path: /payment/submit
    method: POST
    data_selector: payment
    params: {}
- name: Klarna
  endpoint:
    path: /payment/create
    method: POST
    data_selector: payment
    params: {}
- name: Konbini
  endpoint:
    path: /payment/create
    method: POST
    data_selector: payment
    params: {}
- name: MercadoPago
  endpoint:
    path: /payment/create
    method: POST
    data_selector: payment
    params: {}
- name: Multibanco
  endpoint:
    path: /payment/create
    method: POST
    data_selector: payment
    params: {}
- name: MyBank
  endpoint:
    path: /payment/submit
    method: POST
    data_selector: payment
    params: {}
- name: Paypal
  endpoint:
    path: /payment/submit
    method: POST
    data_selector: payment
    params: {}
- name: Paysafecard
  endpoint:
    path: /payment/create
    method: POST
    data_selector: payment
    params: {}
- name: Przelewy24
  endpoint:
    path: /payment/create
    method: POST
    data_selector: payment
    params: {}
- name: Satispay
  endpoint:
    path: /payment/create
    method: POST
    data_selector: payment
    params: {}
- name: Sofort
  endpoint:
    path: /payment/create
    method: POST
    data_selector: payment
    params: {}
- name: UnionPay
  endpoint:
    path: /payment/create
    method: POST
    data_selector: payment
    params: {}
- name: WebMoney
  endpoint:
    path: /payment/create
    method: POST
    data_selector: payment
    params: {}
- name: WeChat
  endpoint:
    path: /payment/create
    method: POST
    data_selector: payment
    params: {}
- name: Yandex
  endpoint:
    path: /payment/create
    method: POST
    data_selector: payment
    params: {}
- name: FraudPrevention
  endpoint:
    path: /OrderDetails/FraudPrevention
    method: POST
    data_selector: OrderDetails.FraudPrevention
- name: CustomerDetail
  endpoint:
    path: /OrderDetails/CustomerDetail
    method: POST
    data_selector: OrderDetails.CustomerDetail
- name: CustomerSocial
  endpoint:
    path: /OrderDetails/CustomerSocial
    method: POST
    data_selector: OrderDetails.CustomerSocial
- name: ShippingAddress
  endpoint:
    path: /OrderDetails/ShippingAddress
    method: POST
    data_selector: OrderDetails.ShippingAddress
- name: BillingAddress
  endpoint:
    path: /OrderDetails/BillingAddress
    method: POST
    data_selector: OrderDetails.BillingAddress
- name: ProductDetails
  endpoint:
    path: /OrderDetails/ProductDetails
    method: POST
    data_selector: OrderDetails.ProductDetails
- name: DiscountCodes
  endpoint:
    path: /OrderDetails/DiscountCodes
    method: POST
    data_selector: OrderDetails.DiscountCodes
- name: ShippingLines
  endpoint:
    path: /OrderDetails/ShippingLines
    method: POST
    data_selector: OrderDetails.ShippingLines
- name: ProductDetails
  endpoint:
    path: /product/details
    method: GET
    data_selector: ProductDetails
    params: {}
- name: DiscountCodes
  endpoint:
    path: /discount/codes
    method: GET
    data_selector: DiscountCodes
    params: {}
- name: ShippingLines
  endpoint:
    path: /shipping/lines
    method: GET
    data_selector: ShippingLines
    params: {}
- name: AccomodationDetails
  endpoint:
    path: /accommodation/details
    method: GET
    data_selector: AccomodationDetails
    params: {}
- name: TravelTicketDetails
  endpoint:
    path: /travel/ticket/details
    method: GET
    data_selector: TravelTicketDetails
    params: {}
- name: PassengerDetails
  endpoint:
    path: /passenger/details
    method: GET
    data_selector: PassengerDetails
    params: {}
- name: shippingDetails
  endpoint:
    path: /shippingDetails
    method: GET
    data_selector: shippingDetails
    params: {}
- name: threeDsContainer
  endpoint:
    path: /threeDsContainer
    method: GET
    data_selector: threeDsContainer
    params: {}
- name: Mexico_States
  endpoint:
    path: /mexico/states
    method: GET
    data_selector: states
- name: Thailand_Provinces
  endpoint:
    path: /thailand/provinces
    method: GET
    data_selector: provinces
- name: US_States
  endpoint:
    path: /us/states
    method: GET
    data_selector: states
- name: Armed_Forces_APO
  endpoint:
    path: /us/armed_forces_apo
    method: GET
    data_selector: armed_forces_states
- name: Outlying_Areas
  endpoint:
    path: /us/outlying_areas
    method: GET
    data_selector: outlying_areas
- name: Language_Codes
  endpoint:
    path: /language_codes
    method: GET
    data_selector: language_codes
- name: Alert_Codes
  endpoint:
    path: /alert_codes
    method: GET
    data_selector: alert_codes
- name: Event_Types
  endpoint:
    path: /event_types
    method: GET
    data_selector: event_types
- name: Encrypt
  endpoint:
    path: /Encrypt
    method: POST
- name: Decrypt
  endpoint:
    path: /Decrypt
    method: POST
- name: callPagamS2S
  endpoint:
    path: /gestpay/gestpayws/WSs2s.asmx/callPagamS2S
    method: POST
    data_selector: GestPayS2S
    params:
      shopLogin: '9000002'
      uicCode: '242'
      amount: '24.21'
      shopTransactionId: MYSHOP-0001
      cardNumber: '1234567812345678'
      expiryMonth: '06'
      expiryYear: '21'
      buyerName: John Fitzgerald Kennedy
      buyerEmail: johnny.kennedy@usa.com
      languageId: '2'
      cvv: '987'
      requestToken: MASKEDPAN
      itemType: physical
      executionDate: '20200828'
- name: callSettleS2S
  endpoint:
    path: /callSettleS2S
    method: POST
    data_selector: callSettleS2SResult
    params:
      shopLogin: '9000001'
      amount: 55.0
      uicCode: 242
      bankTransID: 159247522
      shopTransID: MYSHOP-00142
- name: callDeleteS2S
  endpoint:
    path: /callDeleteS2S
    method: POST
    data_selector: callDeleteS2SResult
    params:
      shopLogin: '9000001'
      bankTransactionId: 334488931
      shopTransactionId: MYSHOP-4838
- name: callRefundS2S
  endpoint:
    path: /callRefundS2S
    method: POST
    data_selector: callRefundS2SResult
    params:
      shopLogin: '9000001'
      bankTransactionId: 159247522
      shopTransactionId: MYSHOP-00142
      amount: 55.0
      uicCode: 242
- name: callReadTrxS2S
  endpoint:
    path: /callReadTrxS2S
    method: POST
    data_selector: callReadTrxS2SResult
    params:
      shopLogin: '9000001'
- name: check_card
  endpoint:
    path: /callCheckCartaS2S
    method: POST
    data_selector: GestPayS2S
    params: {}
- name: request_token
  endpoint:
    path: /CallRequestTokenS2S
    method: POST
    data_selector: GestPayS2S
    params: {}
- name: callDeleteTokenS2S
  endpoint:
    path: /callDeleteTokenS2S
    method: POST
    data_selector: GestPayS2S
    params:
      shopLogin: '90000001'
      tokenValue: 1234WJFXABCD5678
- name: callUpdateTokenS2S
  endpoint:
    path: /CallUpdateTokenS2S
    method: POST
    data_selector: GestPayS2S
    params:
      shopLogin: '90000001'
      token: 1234WJFXABCD5678
      expiryMonth: '12'
      expiryYear: '21'
      withAut: Y
- name: callIdealListS2S
  endpoint:
    path: /CallIdealListS2S
    method: POST
    data_selector: GestPayS2S
    params:
      shopLogin: '900000001'
- name: callMyBankListS2S
  endpoint:
    path: /CallMyBankListS2S
    method: POST
    data_selector: GestPayS2S
    params:
      shopLogin: '900000001'
      languageId: '1'
- name: callUpdateOrderS2S
  endpoint:
    path: /CallUpdateOrderS2S
    method: POST
    data_selector: GestPayS2S
    params:
      shopLogin: '9000002'
      shopTransactionId: MYSHOP-0001
      bankTransactionId: '13675333225'
- name: callExchangeRateS2S
  endpoint:
    path: /callExchangeRateS2S
    method: POST
    data_selector: GestPayS2S
    params:
      shopLogin: GESPAY65987
      isoCode: USD
      numericIsoCode: '840'
- name: callCheckTokenS2S
  endpoint:
    path: /callCheckTokenS2S
    method: POST
    data_selector: GestPayS2S
    params:
      shopLogin: ''
      TokenValue: ''
- name: SendPayment
  endpoint:
    path: /SendPayment
    method: POST
    data_selector: Result
    params: {}
- name: ping
  endpoint:
    path: /ping
    method: POST
    data_selector: Result
    params: {}
- name: getLastAnswer
  endpoint:
    path: /getLastAnswer
    method: POST
    data_selector: Result
    params: {}
- name: checkCC
  endpoint:
    path: /checkCC
    method: POST
    data_selector: Result
    params: {}
- name: checkCVV
  endpoint:
    path: /checkCVV
    method: POST
    data_selector: Result
    params: {}
- name: checkEXPMM
  endpoint:
    path: /checkEXPMM
    method: POST
    data_selector: Result
    params: {}
- name: checkEXPYY
  endpoint:
    path: /checkEXPYY
    method: POST
    data_selector: Result
    params: {}
- name: checkEXPDATE
  endpoint:
    path: /checkEXPDATE
    method: POST
    data_selector: Result
    params: {}
- name: checkEMAIL
  endpoint:
    path: /checkEMAIL
    method: POST
    data_selector: Result
    params: {}
- name: Giropay
  endpoint:
    path: /alternative-payments/giropay
    method: POST
    data_selector: Encrypt
    params: {}
- name: IDeal
  endpoint:
    path: /alternative-payments/ideal
    method: POST
    data_selector: Encrypt
    params: {}
- name: MyBank
  endpoint:
    path: /alternative-payments/mybank
    method: POST
    data_selector: Encrypt
    params: {}
- name: Klarna
  endpoint:
    path: /alternative-payments/klarna
    method: POST
    data_selector: Encrypt
    params: {}
- name: Konbini
  endpoint:
    path: /alternative-payments/konbini
    method: POST
    data_selector: Encrypt
    params: {}
- name: MercadoPago
  endpoint:
    path: /alternative-payments/mercadopago
    method: POST
    data_selector: Encrypt
    params: {}
- name: Multibanco
  endpoint:
    path: /alternative-payments/multibanco
    method: POST
    data_selector: Encrypt
    params: {}
- name: Paypal
  endpoint:
    path: /alternative-payments/paypal
    method: POST
    data_selector: Encrypt
    params: {}
- name: Paysafecard
  endpoint:
    path: /alternative-payments/paysafecard
    method: POST
    data_selector: Encrypt
    params: {}
- name: Przelewy24
  endpoint:
    path: /alternative-payments/przelewy24
    method: POST
    data_selector: Encrypt
    params: {}
- name: Satispay
  endpoint:
    path: /alternative-payments/satispay
    method: POST
    data_selector: Encrypt
    params: {}
- name: SEPA
  endpoint:
    path: /alternative-payments/sepa
    method: POST
    data_selector: Encrypt
    params: {}
- name: Sofort
  endpoint:
    path: /alternative-payments/sofort
    method: POST
    data_selector: Encrypt
    params: {}
- name: UnionPay
  endpoint:
    path: /alternative-payments/unionpay
    method: POST
    data_selector: Encrypt
    params: {}
- name: WebMoney
  endpoint:
    path: /alternative-payments/webmoney
    method: POST
    data_selector: Encrypt
    params: {}
- name: WeChat
  endpoint:
    path: /alternative-payments/wechat
    method: POST
    data_selector: Encrypt
    params: {}
- name: Yandex
  endpoint:
    path: /alternative-payments/yandex
    method: POST
    data_selector: Encrypt
    params: {}
- name: check_cvv
  endpoint:
    path: /v1/check/cvv/
    method: POST
- name: check_email
  endpoint:
    path: /v1/check/email/
    method: POST
- name: check_expirydate
  endpoint:
    path: /v1/check/expirydate/
    method: POST
- name: check_pan
  endpoint:
    path: /v1/check/pan/
    method: POST
- name: check_DCC
  endpoint:
    path: /v1/check/DCC/
    method: POST
- name: check_creditCard
  endpoint:
    path: /v1/check/creditCard/
    method: POST
- name: check_token
  endpoint:
    path: /v1/check/token/
    method: POST
- name: dashboard_search
  endpoint:
    path: /v1/dashboard/search
    method: POST
- name: transaction_search
  endpoint:
    path: /dashboard/export/file
    method: POST
- name: export_batch
  endpoint:
    path: /dashboard/export/batch
    method: POST
- name: get_export_batches
  endpoint:
    path: /dashboard/export/batch/{shopLogin}/
    method: GET
- name: delete_export_batch
  endpoint:
    path: /dashboard/export/batch/{shopLogin}/{batchID}
    method: DELETE
- name: dashboard_statistic
  endpoint:
    path: /dashboard/statistic/{shopLogin}
    method: GET
    data_selector: payload.statistics
- name: dashboard_export_template
  endpoint:
    path: /dashboard/export/template/
    method: POST
    data_selector: payload.template
- name: dashboard_search_saved
  endpoint:
    path: /dashboard/search/saved/{shopLogin}/
    method: GET
    data_selector: search
- name: payment_create
  endpoint:
    path: /payment/create/
    method: POST
    data_selector: payload
    params: {}
- name: payment_dataForBuyer
  endpoint:
    path: /payment/dataForBuyer/{paymentID}
    method: GET
    data_selector: payload
    params: {}
- name: payment_methods
  endpoint:
    path: /payment/methods/{paymentID}/{languageID}
    method: GET
    data_selector: payload
    params: {}
- name: payment_methods_detail
  endpoint:
    path: /api/v1/payment/methods/detail/{paymentID}/{paymentType}
    method: GET
    data_selector: payload
    params: {}
- name: payment_update
  endpoint:
    path: /api/v1/payment/update
    method: POST
    data_selector: payload
    params: {}
- name: payment_submit
  endpoint:
    path: /api/v1/payment/submit
    method: POST
    data_selector: payload
    params: {}
- name: payment_detail
  endpoint:
    path: /payment/detail/{paymentID}
    method: GET
    data_selector: payload
- name: payment_capture
  endpoint:
    path: /payment/capture
    method: POST
    data_selector: payload
    params: {}
- name: payment_cancel
  endpoint:
    path: /payment/cancel
    method: POST
    data_selector: payload
    params: {}
- name: payment_refund
  endpoint:
    path: /payment/refund
    method: POST
    data_selector: payload
    params: {}
- name: shop_environment
  endpoint:
    path: /shop/environment/{shopLogin}
    method: GET
    data_selector: payload
    params: {}
- name: shop_language
  endpoint:
    path: /shop/language/{shopLogin}
    method: GET
    data_selector: payload
    params: {}
- name: shop_moto
  endpoint:
    path: /shop/moto/{shopLogin}
    method: GET
- name: shop_paymentMethods
  endpoint:
    path: /shop/methods/{shopLogin}
    method: GET
- name: shop_paymentPage
  endpoint:
    path: /shop/paymentPage/{shopLogin}
    method: GET
- name: shop_token
  endpoint:
    path: /shop/token/
    method: POST
- name: shop_version
  endpoint:
    path: /shop/version/{shopLogin}
    method: GET
- name: shop_token
  endpoint:
    path: /api/v1/shop/token/{shopLogin}
    method: GET
    data_selector: payload.tokens
- name: delete_token
  endpoint:
    path: /api/v1/shop/token/{shopLogin}/{token}
    method: DELETE
    data_selector: payload.result
- name: payment
  endpoint:
    path: /payment/create
    method: POST
    data_selector: ''
    params: {}
- name: FraudPrevention
  endpoint:
    path: /fraud/prevention
    method: POST
    data_selector: FraudPrevention
    params: {}
- name: CustomerDetail
  endpoint:
    path: /customer/detail
    method: POST
    data_selector: CustomerDetail
    params: {}
- name: CustomerSocial
  endpoint:
    path: /customer/social
    method: POST
    data_selector: CustomerSocial
    params: {}
- name: ShippingAddress
  endpoint:
    path: /shipping/address
    method: POST
    data_selector: ShippingAddress
    params: {}
- name: BillingAddress
  endpoint:
    path: /billing/address
    method: POST
    data_selector: BillingAddress
    params: {}
- name: ProductDetails
  endpoint:
    path: /product/details
    method: POST
    data_selector: ProductDetails
    params: {}
- name: DiscountCodes
  endpoint:
    path: /discount/codes
    method: POST
    data_selector: DiscountCodes
    params: {}
- name: ShippingLines
  endpoint:
    path: /shipping/lines
    method: POST
    data_selector: ShippingLines
    params: {}
- name: shippingDetails
  endpoint:
    path: /shippingDetails
    method: GET
    data_selector: shippingDetails
    params: {}
- name: language_codes
  endpoint:
    path: /language_codes
    method: GET
    data_selector: records
- name: alert_codes
  endpoint:
    path: /alert_codes
    method: GET
    data_selector: records
- name: event_types
  endpoint:
    path: /event_types
    method: GET
    data_selector: records
- name: transaction_results
  endpoint:
    path: /transaction_results
    method: GET
    data_selector: records
- name: Encrypt
  endpoint:
    path: /Encrypt
    method: POST
    data_selector: Encrypt
- name: Decrypt
  endpoint:
    path: /Decrypt
    method: POST
    data_selector: Decrypt
- name: callPagamS2S
  endpoint:
    path: /gestpay/gestpayws/WSs2s.asmx/callPagamS2S
    method: POST
    data_selector: GestPayS2S
    params: {}
- name: callSettleS2S
  endpoint:
    path: /callSettleS2S
    method: POST
    data_selector: callSettleS2SResult
    params:
      shopLogin: '9000001'
      amount: '55.00'
      uicCode: '242'
      shopTransID: MYSHOP-00142
      bankTransID: '159247522'
- name: callDeleteS2S
  endpoint:
    path: /callDeleteS2S
    method: POST
    data_selector: callDeleteS2SResult
    params:
      shopLogin: '9000001'
      shopTransactionId: MYSHOP-4838
      bankTransactionId: '334488931'
- name: callRefundS2S
  endpoint:
    path: /callRefundS2S
    method: POST
    data_selector: callRefundS2SResult
    params:
      shopLogin: '9000001'
      amount: '55.00'
      uicCode: '242'
      shopTransactionId: MYSHOP-00142
      bankTransactionId: '159247522'
- name: callReadTrxS2S
  endpoint:
    path: /callReadTrxS2S
    method: POST
    data_selector: callReadTrxS2SResult
    params:
      shopLogin: '9000001'
      shopTransactionId: MYSHOP-4838
      bankTransactionId: '334488931'
- name: callReadTrxS2S
  endpoint:
    path: /callReadTrxS2S
    method: POST
    data_selector: GestPayS2S
    params: {}
- name: callCheckCartaS2S
  endpoint:
    path: /callCheckCartaS2S
    method: POST
    data_selector: GestPayS2S
    params: {}
- name: CallRequestTokenS2S
  endpoint:
    path: /CallRequestTokenS2S
    method: POST
    data_selector: GestPayS2S
    params: {}
- name: callDeleteTokenS2S
  endpoint:
    path: /callDeleteTokenS2S
    method: POST
    data_selector: TransactionResult
    params:
      shopLogin: mandatory
      tokenValue: mandatory
- name: CallUpdateTokenS2S
  endpoint:
    path: /CallUpdateTokenS2S
    method: POST
    data_selector: TransactionResult
    params:
      shopLogin: mandatory
      token: mandatory
      expiryMonth: mandatory
      expiryYear: mandatory
      withAut: mandatory
- name: CallIdealListS2S
  endpoint:
    path: /CallIdealListS2S
    method: POST
    data_selector: TransactionResult
    params:
      shopLogin: mandatory
- name: CallMyBankListS2S
  endpoint:
    path: /CallMyBankListS2S
    method: POST
    data_selector: TransactionResult
    params:
      shopLogin: mandatory
      languageId: mandatory
- name: CallUpdateOrderS2S
  endpoint:
    path: /CallUpdateOrderS2S
    method: POST
    data_selector: TransactionResult
    params:
      shopLogin: mandatory
      shopTransactionId: mandatory
      bankTransactionId: mandatory
      OrderDetails: mandatory
- name: callExchangeRateS2S
  endpoint:
    path: /callExchangeRateS2S
    method: POST
    data_selector: TransactionResult
    params:
      shopLogin: mandatory
- name: callCheckTokenS2S
  endpoint:
    path: /callCheckTokenS2S
    method: POST
    data_selector: TransactionResult
    params:
      shopLogin: mandatory
      TokenValue: mandatory
- name: SendPayment
  endpoint:
    path: /SendPayment
    method: POST
    data_selector: Result
- name: ping
  endpoint:
    path: /ping
    method: POST
    data_selector: Result
- name: getLastAnswer
  endpoint:
    path: /getLastAnswer
    method: POST
    data_selector: Result
- name: checkCC
  endpoint:
    path: /checkCC
    method: POST
    data_selector: Result
- name: checkCVV
  endpoint:
    path: /checkCVV
    method: POST
    data_selector: Result
- name: checkEXPMM
  endpoint:
    path: /checkEXPMM
    method: POST
    data_selector: Result
- name: checkEXPYY
  endpoint:
    path: /checkEXPYY
    method: POST
    data_selector: Result
- name: checkEXPDATE
  endpoint:
    path: /checkEXPDATE
    method: POST
    data_selector: Result
- name: checkEMAIL
  endpoint:
    path: /checkEMAIL
    method: POST
    data_selector: Result
- name: Giropay
  endpoint:
    path: /soap/alternative-payments/giropay/
    method: POST
    data_selector: Encrypt
    params: {}
- name: IDeal
  endpoint:
    path: /soap/alternative-payments/ideal/
    method: POST
    data_selector: Encrypt
    params: {}
- name: MyBank
  endpoint:
    path: /soap/alternative-payments/mybank/
    method: POST
    data_selector: Encrypt
    params: {}
- name: Klarna
  endpoint:
    path: /soap/alternative-payments/klarna/
    method: POST
    data_selector: Encrypt
    params: {}
- name: Konbini
  endpoint:
    path: /soap/alternative-payments/konbini/
    method: POST
    data_selector: Encrypt
    params: {}
- name: MercadoPago
  endpoint:
    path: /soap/alternative-payments/mercadopago/
    method: POST
    data_selector: Encrypt
    params: {}
- name: Multibanco
  endpoint:
    path: /soap/alternative-payments/multibanco/
    method: POST
    data_selector: Encrypt
    params: {}
- name: Paypal
  endpoint:
    path: /soap/alternative-payments/paypal/
    method: POST
    data_selector: Encrypt
    params: {}
- name: Paysafecard
  endpoint:
    path: /soap/alternative-payments/paysafecard/
    method: POST
    data_selector: Encrypt
    params: {}
- name: Przelewy24
  endpoint:
    path: /soap/alternative-payments/przelewy24/
    method: POST
    data_selector: Encrypt
    params: {}
- name: Satispay
  endpoint:
    path: /soap/alternative-payments/satispay/
    method: POST
    data_selector: Encrypt
    params: {}
- name: SEPA
  endpoint:
    path: /soap/alternative-payments/sepa/
    method: POST
    data_selector: Encrypt
    params: {}
- name: Sofort
  endpoint:
    path: /soap/alternative-payments/sofort/
    method: POST
    data_selector: Encrypt
    params: {}
- name: UnionPay
  endpoint:
    path: /soap/alternative-payments/unionpay/
    method: POST
    data_selector: Encrypt
    params: {}
- name: WebMoney
  endpoint:
    path: /soap/alternative-payments/webmoney/
    method: POST
    data_selector: Encrypt
    params: {}
- name: WeChat
  endpoint:
    path: /soap/alternative-payments/wechat/
    method: POST
    data_selector: Encrypt
    params: {}
- name: check_cvv
  endpoint:
    path: /check/cvv/
    method: POST
- name: check_email
  endpoint:
    path: /check/email/
    method: POST
- name: check_expirydate
  endpoint:
    path: /check/expirydate/
    method: POST
- name: check_pan
  endpoint:
    path: /check/pan/
    method: POST
- name: check_DCC
  endpoint:
    path: /check/DCC/
    method: POST
- name: check_creditCard
  endpoint:
    path: /check/creditCard/
    method: POST
- name: check_token
  endpoint:
    path: /check/token/
    method: POST
- name: dashboard_search
  endpoint:
    path: /dashboard/search
    method: POST
- name: transactions
  endpoint:
    path: /dashboard/export/file
    method: POST
- name: export_batch
  endpoint:
    path: /dashboard/export/batch
    method: POST
- name: get_batches
  endpoint:
    path: /dashboard/export/batch/{shopLogin}/
    method: GET
- name: delete_batch
  endpoint:
    path: /dashboard/export/batch/{shopLogin}/{batchID}
    method: DELETE
- name: dashboard_statistic
  endpoint:
    path: /dashboard/statistic/{shopLogin}
    method: GET
- name: dashboard_export_template
  endpoint:
    path: /dashboard/export/template/
    method: POST
- name: dashboard_export_template_get
  endpoint:
    path: /dashboard/export/template/{shopLogin}
    method: GET
- name: dashboard_export_template_delete
  endpoint:
    path: /dashboard/export/template/{shopLogin}/{templateID}
    method: DELETE
- name: dashboard_search_saved
  endpoint:
    path: /dashboard/search/saved/{shopLogin}/
    method: GET
- name: dashboard_search_saved_post
  endpoint:
    path: /dashboard/search/saved/
    method: POST
- name: payment_create
  endpoint:
    path: /payment/create
    method: POST
    data_selector: payload
- name: payment_dataForBuyer
  endpoint:
    path: /payment/dataForBuyer/{paymentID}
    method: GET
    data_selector: payload
- name: payment_methods
  endpoint:
    path: /payment/methods/{paymentID}/{languageID}
    method: GET
    data_selector: payload
- name: payment_methods_detail
  endpoint:
    path: /api/v1/payment/methods/detail/{paymentID}/{paymentType}
    method: GET
    data_selector: payload
    params: {}
- name: payment_update
  endpoint:
    path: /api/v1/payment/update
    method: POST
    data_selector: payload
    params: {}
- name: payment_submit
  endpoint:
    path: /api/v1/payment/submit
    method: POST
    data_selector: payload
    params: {}
- name: payment_detail
  endpoint:
    path: /payment/detail/{paymentID}
    method: GET
    data_selector: payload
    params:
      paymentID: ''
- name: payment_capture
  endpoint:
    path: /payment/capture/
    method: POST
    data_selector: payload
    params: {}
- name: payment_cancel
  endpoint:
    path: /payment/cancel/
    method: POST
    data_selector: payload
    params: {}
- name: payment_refund
  endpoint:
    path: /payment/refund/
    method: POST
    data_selector: payload
    params: {}
- name: shop_environment
  endpoint:
    path: /shop/environment/{shopLogin}
    method: GET
    data_selector: payload
    params: {}
- name: shop_language
  endpoint:
    path: /shop/language/{shopLogin}
    method: GET
    data_selector: payload
    params: {}
- name: shop_moto
  endpoint:
    path: /shop/moto/{shopLogin}
    method: GET
    data_selector: payload.moto
- name: shop_paymentMethods
  endpoint:
    path: /shop/methods/{shopLogin}
    method: GET
    data_selector: payload.paymentMethod
- name: shop_paymentPage
  endpoint:
    path: /shop/paymentPage/{shopLogin}
    method: GET
    data_selector: payload
- name: shop_version
  endpoint:
    path: /shop/version/{shopLogin}
    method: GET
    data_selector: payload
- name: shop_token
  endpoint:
    path: /shop/token/
    method: POST
    data_selector: payload
- name: shop_token
  endpoint:
    path: /shop/token/{shopLogin}
    method: GET
    data_selector: payload.tokens
    params:
      shopLogin: ''
- name: delete_shop_token
  endpoint:
    path: /shop/token/{shopLogin}/{token}
    method: DELETE
    data_selector: payload.result
    params:
      shopLogin: ''
      token: ''
- name: payment_create
  endpoint:
    path: /payment/create
    method: POST
    data_selector: ''
    params:
      shopLogin: ''
- name: payment_submit
  endpoint:
    path: /payment/submit
    method: POST
    data_selector: ''
    params:
      shopLogin: ''
- name: payment
  endpoint:
    path: /payment/create
    method: POST
    data_selector: ''
    params: {}
- name: FraudPrevention
  endpoint:
    path: /fraud-prevention
    method: POST
    data_selector: FraudPrevention
    params: {}
- name: CustomerDetail
  endpoint:
    path: /customer-detail
    method: POST
    data_selector: CustomerDetail
    params: {}
- name: CustomerSocial
  endpoint:
    path: /customer-social
    method: POST
    data_selector: CustomerSocial
    params: {}
- name: ShippingAddress
  endpoint:
    path: /shipping-address
    method: POST
    data_selector: ShippingAddress
    params: {}
- name: BillingAddress
  endpoint:
    path: /billing-address
    method: POST
    data_selector: BillingAddress
    params: {}
- name: ProductDetails
  endpoint:
    path: /product-details
    method: POST
    data_selector: ProductDetails
    params: {}
- name: DiscountCodes
  endpoint:
    path: /discount-codes
    method: POST
    data_selector: DiscountCodes
    params: {}
- name: ShippingLines
  endpoint:
    path: /shipping-lines
    method: POST
    data_selector: ShippingLines
    params: {}
- name: shipping_details
  endpoint:
    path: /shippingDetails
    method: GET
    data_selector: shippingDetails
    params: {}
- name: transaction_result
  endpoint:
    path: /payment/detail
    method: GET
    data_selector: transactionResults
    params: {}
notes:
- SOAP-based API, requests must be encoded in XML.
- Server to Server communication requires authorization by Banca Sella or Fabrick.
- Must use exactly one among Credit Card data and Token value.
- The shopTransactionId must be unique.
- The merchant API key can be found in Fabrick Merchant Back-Office.
- You must provide at least one of shopTransactionID, bankTransactionID, paymentID
  for each request.
- Uses various payment types requiring specific parameters.
- Refer to each payment type documentation for detailed setup.
- Contains customer data, mandatory for Banca Sella customers.
- Includes fields related to fraud prevention and shipping/billing addresses.
- Some of the following tables list only the State or Province name and do not include
  a State or Province code. For these countries, use the spelling of the State or
  Province name exactly as it is written in the table.
- Must encode requests in XML to communicate with Fabrick Payment Orchestra.
- SOAP services remain available and supported, but any new functionality may be favoured
  in the REST integration.
- Merchants must have a M.O.T.O. configuration for certain operations.
- Redirected url will require merchant return url and transkey.
- Konbini does not need mandatory parameters.
- You must use S2PKON as paymentType.
- shippingDetails used for example in Paypal seller protection, contains the shipping
  address.
- SDKDetails must be included if you are integration Fabrick Payment Orchestra in
  app integration.
- Fabrick Payment Orchestra supports two ways of authenticating your calls; via IP
  Address or via ApiKey.
- You must encode your requests in XML to communicate with Fabrick Payment Orchestra.
- To use Server to Server features, you must be authorized by Banca Sella or Fabrick.
- CVV2, Name, and Email are optional but highly recommended.
- To free the Shop from the need to comply with PCI Security standard, avoid posting
  back the data to the checkout page.
- Ensure to use valid paymentToken for authenticated requests.
- Use the merchant API key found in Fabrick Merchant Back-Office for authentication.
- Uses OAuth2 with refresh token — requires setup of connected app in Fabrick
- Some transaction states may return nulls in deeply nested fields
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Invalid parameter value'
- '403 Forbidden Access: Invalid ApiKey'
- '500 System Error: Technical error'
- '200 OK: Success response'
- 'KO: Operation failed'
- '0: request correctly processed'
- 'other codes: check error.description for details'
- '200 OK: request correctly processed'
- '401 Unauthorized: Invalid API key'
- Blocked credit card
- Confirmed amount exceeds authorized amount
- Demand for settlement of one nonexistent transaction
- Expired preauthorization
- Wrong currency
- Preauthorization already notified
- Technical error - no response from GT
- Authorization denied
- Transaction interrupted by bank authorizative system
- Wrong merchant configuration in bank authorizative system
- Wrong expiry date
- Bank authorizative system not available
- Insufficient credit
- Call credit card company
- Technical error
- Collect card
- Authorization refused by credit card companies
- Card not recognized
- Technical error in connection with Credit Card Company network
- Pin errato
- Network not available
- Wrong transaction date
- Wrong card date
- Card expired
- Operation not allowed
- Amount not available
- Invalid card number
- Invalid expiry year
- Invalid expiry month
- Transaction exceeds maximum operations number in time period
- Transaction exceeds maximum number of operations performed by the same buyer in
  time period
- Transaction exceeds maximum amount in time period
- Transaction exceeds maximum amount payable by same buyer in time period
- Transaction contains a field value that had been declared not acceptable
- Buyer abandoned the transaction because it was double
- Wrong line length
- Transaction ambiguous
- Transaction can not be deleted
- Transaction can not be refunded
- Transaction can not be settled
- Transaction can not be renounced
- payment abbandoned by buyer
- payment not completed
- data wrong or missing
- Account Identifier incorrect (i.e. invalid IBAN of the Debtor)
- Account closed.
- Account blocked.
- Debtor account is a consumer account.
- Direct Debit forbidden on this account for regulatory reasons.
- Operation code/transaction code/sequence type incorrect., invalid file format.
- Insufficient funds.
- Duplicate collection.
- Identifier of the Creditor Incorrect.
- Creditor Bank is not registered under this BIC in the CSM.
- Debtor Bank is not registered under this BIC in the CSM.
- File Format incomplete or invalid.
- No mandate.
- Mandate data missing or incorrect.
- Disputed authorized transaction.
- Debtor Deceased.
- Refusal by the Debtor.
- Reason not specified.
- Bank Identifier (BIC) Incorrect.
- Regulatory Reason.
- Specific Service offered by the Debtor Bank.
- Preapproval cancelled by consumer
- Session timeout
- Invalid creditor
- Duplicate mandate reference
- No documents to sign
- Forbidden IBAN
- Invalid account owner
- Mandate signature failed
- Inconsistent client data during signature.
- Card operation refused by operator
- Card operation bank refusal
- Card operation access failure
- Card operation invalid transaction reference
- Card lost
- Card stolen
- Card suspect
- Duplicate order
- Resource not found
- Incomplete request data
- Invalid BIC
- Invalid IBAN
- Multiple requests to provider with the same mandate
- Subscriber reached the monthly mandates limit with the same IBAN
- Subscriber reached the limit of mandates created with the same phone number
- '7400: Authorization denied'
- '7401: Authorization refused by credit card companies'
- '7402: Card not qualified'
- '7403: Card not recognized'
- '7404: Card expired'
- '7405: Call credit card company'
- '7406: Wrong card date'
- '7407: Wrong transaction date'
- '7408: System error'
- '7409: Merchant not recognized'
- '7410: Invalid format'
- '7411: Amount not available'
- '7412: Not settled'
- '7413: Operation not allowed'
- '7414: Network not available'
- '7415: Collect card'
- '7416: PIN attempts exhausted'
- '7417: Blocked terminal'
- '7418: Forcedly Closed terminal'
- '7419: Not permitted transaction'
- '7420: Not authorized transaction'
- '7421: Service interrupted at 01/01/2002'
- '7500: Authorization denied'
- '7600: Authorization denied'
- '8000: File correctly processed'
- '8001: Header/bottom record not found'
- '8002: Merchant code not set'
- '8003: Incorrect row number'
- '8004: Incorrect file format'
- '8005: Merchant not enabled'
- '8006: Verify By Visa'
- '8007: Feature disabled for VISA credit card'
- '8008: Feature disabled'
- '8009: Payment interrupted'
- '8010: Wrong credit card number for this transaction'
- '8011: Transaction correctly received'
- '8012: Authorization not found'
- '8013: Settlement not found'
- '8014: Settlement amount > Authorization amount'
- '8015: Refund amount > balance'
- '8016: Transaction without settlement'
- '8017: File waiting to be processed'
- '8018: File correctly processed'
- '8021: Feature disable for MASTERCARD credit card'
- '8022: Feature disable for JCB credit card'
- '8023: Feature disabled for MAESTRO cards'
- '8026: Soft decline - Cardholder authentication required'
- '8027: Failed authentication'
- '8028: Failed authentication - Issuer is rejecting authentication'
- '8029: Failed authentication - ACS Technical or other problem'
- '8030: Not Authenticated - Card authentication failed'
- '8031: Not Authenticated - Invalid card number'
- '8032: Not Authenticated - No Card record'
- '8033: Not Authenticated - Suspected fraud'
- '8034: Not Authenticated - Transaction not permitted to cardholder'
- '8035: Not Authenticated - Exceeds ACS maximum challenges'
- '8036: Not Authenticated - Reserved for DS use'
- '8037: Not Authenticated - Invalid transaction'
- '8038: Not Authenticated - Transaction timed out at the ACS'
- '8888: UP Mobile Payment'
- '9991: Browser not supported'
- '9992: Error creating iFrame'
- '9997: Phase with error'
- '9998: Phase correctly ended'
- '9999: System Error'
- 'ErrorCode: 0 - Transaction successful'
- 'ErrorCode: 1 - Transaction failed'
- 'ErrorCode: 0'
- 'ErrorDescription: Transazione correttamente effettuata'
- 'RiskResponseCode: approved'
- 'RiskResponseDescription: the transaction is approved'
- 'error.code: check the error codes and error.description to debug the problem'
- '400 Bad Request: Check required fields in the request body.'
- '401 Unauthorized: Recheck API key.'
- '404 Not Found: Verify the endpoint and parameters.'
- Not qualified credit card
- Credit card with wrong check-digit
- Operation not performed
- Invalid format of parameter string
- Missing PAY1_UICCODE parameter
- Missing PAY1_AMOUNT parameter
- Credit card number with wrong length
- Invalid currency code
- Missing parameter
- 'ErrorCode: 0 - No error'
- 'ErrorCode: 1 - Generic error'
- 'ErrorCode: 7 - Transaction not found'
- 'ErrorCode: 0 - Transazione correttamente effettuata'
- 'TransactionErrorCode: transaction error code'
- 'TransactionErrorDescription: transaction error description'
- 'Result.ErrorCode: Error code returned from the API.'
- 'Result.ErrorDescription: Error description returned from the API.'
- Other error codes may apply; refer to documentation.
- '0: No error'
- 'Other codes: Check error.description for debugging.'
- Wrong value in SHOPTRANSACTIONID field
- Wrong value in CURRENCY field
- Wrong value in AMOUNT field
- Payment abandoned by buyer
- Payment not completed
- Data wrong or missing
- Account closed
- Account blocked
- Debtor account is a consumer account
- Direct Debit forbidden on this account for regulatory reasons
- Operation code/transaction code/sequence type incorrect., invalid file format
- Insufficient funds
- Duplicate collection
- Identifier of the Creditor Incorrect
- Creditor Bank is not registered under this BIC in the CSM
- Debtor Bank is not registered under this BIC in the CSM
- File Format incomplete or invalid
- No mandate
- Mandate data missing or incorrect
- Disputed authorized transaction
- Debtor Deceased
- Refusal by the Debtor
- Reason not specified
- Bank Identifier (BIC) Incorrect
- Regulatory Reason
- Specific Service offered by the Debtor Bank
- Mandate Error - Preapproval cancelled by consumer
- Mandate Error - Session timeout
- Mandate Error - Invalid creditor
- Mandate Error - Duplicate mandate reference
- Mandate Error - No documents to sign
- Mandate Error - Forbidden IBAN
- Mandate Error - Invalid account owner
- Mandate Error - Mandate signature failed
- Mandate Error - Invalid user approval (OTP) code
- Mandate Error - Inconsistent client data during signature
- Mandate Error - Card operation refused by operator
- Mandate Error - Card operation bank refusal
- Mandate Error - Card operation access failure
- Mandate Error - Card operation invalid transaction reference
- Mandate Error - Card lost
- Mandate Error - Card stolen
- Mandate Error - Card suspect
- Mandate Error - Duplicate order
- Mandate Error - Resource not found
- Mandate Error - Incomplete request data
- Mandate Error - Invalid BIC
- Mandate Error - Invalid IBAN
- Mandate Error - Multiple requests to provider with the same mandate
- Mandate Error - Subscriber reached the monthly mandates limit with the same IBAN
- Mandate Error - Subscriber reached the limit of mandates created with the same phone
  number
- Unexpected parameter value
- Not numeric parameter value
- Technical error in connection with Credit Card Company network error
- Credit card with wrong check-digit. Please double-check the credit card number typed
  in
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://ecomms2s.sella.it/api/v1
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
