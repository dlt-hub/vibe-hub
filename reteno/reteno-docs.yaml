resources:
- name: contacts
  endpoint:
    path: /reference/addcontact-1
    method: POST
- name: orders
  endpoint:
    path: /reference/ordersbulkinsert-1
    method: POST
- name: events
  endpoint:
    path: /reference/registerevent_2
    method: POST
- name: messages
  endpoint:
    path: /reference/searchemails-1
    method: GET
- name: behavior tracking
  endpoint:
    path: /reference/contactactivity-1
    method: GET
- name: account
  endpoint:
    path: /reference/getaccountinfo-1
    method: GET
- name: site
  endpoint:
    path: /reference/getdomains
    method: GET
- name: product feed
  endpoint:
    path: /reference/getproductfeedsconfiguration
    method: GET
- name: contacts
  endpoint:
    path: /reference/contactsbulkupdate-1
    method: POST
    data_selector: records
- name: events
  endpoint:
    path: /reference/registerevent_2
    method: POST
    data_selector: records
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
- name: orders
  endpoint:
    path: /reference/ordersbulkinsert-1
    method: POST
- name: Add/update a contact
  endpoint:
    path: /reference/addcontact-1
    method: POST
- name: Get contact
  endpoint:
    path: /reference/getcontact-1
    method: GET
- name: Subscribe contact
  endpoint:
    path: /reference/subscribecontact-1
    method: POST
- name: Search contacts
  endpoint:
    path: /reference/searchcontacts-1
    method: GET
- name: Add/update contacts
  endpoint:
    path: /reference/contactsbulkupdate-1
    method: POST
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: POST
    data_selector: contacts
- name: bulk_contact_uploading
  endpoint:
    path: /bulk/contact/upload
    method: POST
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: POST
    data_selector: contacts
- name: contact
  endpoint:
    path: /api/v1/contact
    method: POST
    data_selector: data
    params: {}
- name: contact
  endpoint:
    path: /contacts
    method: POST
    data_selector: data
    params: {}
- name: user_profile
  endpoint:
    path: /services/data/v1/userProfile
    method: POST
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: contact_list
  endpoint:
    path: /contacts/import
    method: POST
    data_selector: contacts
    params: {}
- name: contact
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /api/v1/contact
    method: POST
    data_selector: contacts
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: POST
    data_selector: contacts
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
- name: blacklisted_emails
  endpoint:
    path: /contacts/blacklisted
    method: GET
    data_selector: blacklistedEmails
- name: blacklisted_phone_numbers
  endpoint:
    path: /contacts/blacklisted/phone
    method: GET
    data_selector: blacklistedPhoneNumbers
- name: event_tracking
  endpoint:
    path: /events/tracking
    method: POST
    data_selector: data
    params: {}
- name: subscription_event
  endpoint:
    path: /reference/registerevent_2
    method: POST
    data_selector: eventTypeKey
- name: training_event
  endpoint:
    path: /reference/registerevent_2
    method: POST
    data_selector: eventTypeKey
- name: goal_event
  endpoint:
    path: /reference/registerevent_2
    method: POST
    data_selector: eventTypeKey
- name: custom_events
  endpoint:
    path: /api/v3/event
    method: POST
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /api/events
    method: POST
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: data
- name: generate_event
  endpoint:
    path: /reference/registerevent_2
    method: POST
    data_selector: params
    params: {}
- name: mobile_push
  endpoint:
    path: /messages/mobile_push
    method: POST
    data_selector: data
    params: {}
- name: scheduled_mobile_push_message
  endpoint:
    path: /api/v1/scheduled_push
    method: POST
    data_selector: data
    params: {}
- name: campaign
  endpoint:
    path: /api/v1/campaigns
    method: POST
- name: Full
  endpoint:
    path: /email/domain/authentication/full
    method: POST
    data_selector: records
    params: {}
- name: Full+
  endpoint:
    path: /email/domain/authentication/full-plus
    method: POST
    data_selector: records
    params: {}
- name: Subdomain
  endpoint:
    path: /email/domain/authentication/subdomain
    method: POST
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: unsubscribe_forms
  endpoint:
    path: /path/to/unsubscribe/forms
    method: GET
    data_selector: forms
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: campaign_use_cases
  endpoint:
    path: /docs/campaign-use-cases
    method: GET
    data_selector: records
- name: email_template_best_practices
  endpoint:
    path: /docs/best-practices-for-email-template-design-and-structure-for-health-fitness-mobile-apps
    method: GET
    data_selector: records
- name: time_zones
  endpoint:
    path: /docs/using-time-zones-in-scheduling-campaigns-and-collecting-contact-data
    method: GET
    data_selector: records
- name: campaign_frequency_strategy
  endpoint:
    path: /docs/how-to-make-a-campaign-using-optimal-messaging-frequency-strategy
    method: GET
    data_selector: records
- name: effective_emails
  endpoint:
    path: /docs/how-to-clean-your-email-list-and-why-you-should-do-it
    method: GET
    data_selector: records
- name: app_inbox
  endpoint:
    path: /docs/how-to-use-app-inbox-effectively
    method: GET
    data_selector: records
- name: delivery_clicks_analytics
  endpoint:
    path: /docs/setting-up-delivery-and-clicks-analytics
    method: GET
    data_selector: records
- name: segmentation_marketing
  endpoint:
    path: /docs/advanced-segmentation-for-marketing-automation-instructions
    method: GET
    data_selector: records
- name: product_recommendations
  endpoint:
    path: /docs/product-recommendations-for-website-to-increase-your-conversion-rate
    method: GET
    data_selector: records
- name: business_widgets
  endpoint:
    path: /docs/why-does-your-business-need-widgets
    method: GET
    data_selector: records
- name: in_app_campaigns
  endpoint:
    path: /docs/7-in-app-campaign-best-practices
    method: GET
    data_selector: records
- name: in_app_messaging
  endpoint:
    path: /docs/ideas-designs-for-in-app-messaging
    method: GET
    data_selector: records
- name: email_template
  endpoint:
    path: /services/data/vXX.X/sobjects/EmailTemplate
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Product List
  endpoint:
    path: /docs/product-list
    method: GET
    data_selector: products
    params: {}
- name: Modules
  endpoint:
    path: /docs/modules
    method: GET
    data_selector: modules
    params: {}
- name: Data
  endpoint:
    path: /docs/data
    method: GET
    data_selector: data_sources
    params: {}
- name: Price Block
  endpoint:
    path: /docs/using-the-products-block
    method: GET
    data_selector: blocks
    params: {}
- name: Discount Block
  endpoint:
    path: /docs/using-the-products-block
    method: GET
    data_selector: blocks
    params: {}
- name: user_data
  endpoint:
    path: /api/user_data
    method: GET
    data_selector: records
- name: campaigns
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: records
- name: web_push_notifications
  endpoint:
    path: /docs/web-push-setting-up
    method: GET
    data_selector: notifications
    params: {}
- name: auth_token
  endpoint:
    path: /v1/auth/contact/token
    method: POST
    data_selector: token
- name: unread_messages_count
  endpoint:
    path: /appinbox/v1/messages/count
    method: GET
    data_selector: count
- name: all_app_inbox_messages
  endpoint:
    path: /appinbox/v1/messages
    method: GET
    data_selector: list
- name: change_message_status
  endpoint:
    path: /appinbox/v1/messages/status
    method: POST
- name: auth_token
  endpoint:
    path: /auth/contact/token
    method: POST
    data_selector: token
    params: {}
- name: App Inbox Messages
  endpoint:
    path: /webhook
    method: POST
    data_selector: ''
    params: {}
- name: sms
  endpoint:
    path: /sms
    method: POST
- name: GMS Hyber
  endpoint:
    path: /senders/gms-hyber
    method: POST
    data_selector: response
    params: {}
- name: Infobip
  endpoint:
    path: /senders/infobip
    method: POST
    data_selector: response
    params: {}
- name: TurboSMS
  endpoint:
    path: /senders/turbosms
    method: POST
    data_selector: response
    params: {}
- name: Kyivstar
  endpoint:
    path: /senders/kyivstar
    method: POST
    data_selector: response
    params: {}
- name: Omnicell
  endpoint:
    path: /senders/omnicell
    method: POST
    data_selector: response
    params: {}
- name: Textlocal
  endpoint:
    path: /senders/textlocal
    method: POST
    data_selector: response
    params: {}
- name: Acemount Media
  endpoint:
    path: /senders/acemount-media
    method: POST
    data_selector: response
    params: {}
- name: SMSBAT
  endpoint:
    path: /senders/smsbat
    method: POST
    data_selector: response
    params: {}
- name: Streamtools
  endpoint:
    path: /senders/streamtools
    method: POST
    data_selector: response
    params: {}
- name: Vodafone
  endpoint:
    path: /senders/vodafone
    method: POST
    data_selector: response
    params: {}
- name: Intel Telecom
  endpoint:
    path: /senders/intel-telecom
    method: POST
    data_selector: response
    params: {}
- name: PROCONTEXT
  endpoint:
    path: /senders/procontext
    method: POST
    data_selector: response
    params: {}
- name: Decision Telecom
  endpoint:
    path: /senders/decision-telecom
    method: POST
    data_selector: response
    params: {}
- name: AlphaSMS
  endpoint:
    path: /senders/alphasms
    method: POST
    data_selector: response
    params: {}
- name: sms
  endpoint:
    path: /sms-setting-up
    method: GET
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: data
- name: campaigns
  endpoint:
    path: /campaigns
    method: POST
    data_selector: data
- name: settings_data_storage
  endpoint:
    path: /docs/storing-data-from-widgets-to-contact-fields
    method: GET
    data_selector: records
- name: event_parameter
  endpoint:
    path: /docs/setting-up-widgets-for-your-site
    method: GET
    data_selector: records
- name: contact_fields
  endpoint:
    path: /storing-data-from-widgets-to-contact-fields
    method: POST
- name: contacts
  endpoint:
    path: /contacts
    method: POST
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: Add Contacts to a Segment
  endpoint:
    path: /docs/setting-up-widgets-for-your-site
    method: GET
    data_selector: records
    params: {}
- name: Double Opt-In
  endpoint:
    path: /docs/authorization-with-oauth-20
    method: GET
    data_selector: records
    params: {}
- name: Email Confirmation
  endpoint:
    path: /docs/reteno-responsive-email-editor-review
    method: GET
    data_selector: records
    params: {}
- name: Redirecting After a Click on the Confirmation Link
  endpoint:
    path: /docs/email-domain-configuration
    method: GET
    data_selector: records
    params: {}
- name: Onboarding
  endpoint:
    path: /docs/creating-events#creating-an-event-type
    method: GET
    data_selector: records
    params: {}
- name: user_profile
  endpoint:
    path: /users/profiles
    method: GET
    data_selector: data
- name: subscribe_contact
  endpoint:
    path: /reference/subscribecontact-1
    method: POST
    data_selector: contact
    params: {}
- name: contact
  endpoint:
    path: /collecting-contact-information
    method: GET
    data_selector: records
- name: request_form
  endpoint:
    path: /services/data/vXX.X/requestForms
    method: POST
    data_selector: records
    params: {}
- name: user_data
  endpoint:
    path: /user/data
    method: GET
    data_selector: records
- name: event_tracking
  endpoint:
    path: /events/track
    method: POST
    data_selector: event
- name: web_tracking
  endpoint:
    path: /docs/how-to-set-up-web-tracking-for-your-website
    method: GET
- name: ProductPage
  endpoint:
    path: /sendEvent
    method: POST
    data_selector: ProductPage
- name: StatusCart
  endpoint:
    path: /sendEvent
    method: POST
    data_selector: StatusCart
- name: PurchasedItems
  endpoint:
    path: /sendEvent
    method: POST
    data_selector: PurchasedItems
- name: CustomerData
  endpoint:
    path: /sendEvent
    method: POST
    data_selector: CustomerData
- name: CategoryPage
  endpoint:
    path: /sendEvent
    method: POST
    data_selector: CategoryPage
- name: AddToWishlist
  endpoint:
    path: /wishlist
    method: POST
    data_selector: AddToWishlist
    params:
      productKey: string
      price: string
      isInStock: int
- name: SearchRequest
  endpoint:
    path: /search
    method: POST
    data_selector: SearchRequest
    params:
      input_value: string
- name: MainPage
  endpoint:
    path: /main
    method: POST
    data_selector: MainPage
    params: {}
- name: NotFound
  endpoint:
    path: /notfound
    method: POST
    data_selector: NotFound
    params: {}
- name: ProductImpression
  endpoint:
    path: /product/impression
    method: POST
    data_selector: ProductImpression
    params:
      product_id: string
      container_type: string
- name: product_recommendations
  endpoint:
    path: /recommendations
    method: GET
- name: ProductUpdate
  endpoint:
    path: /
    method: POST
    data_selector: ProductUpdate
- name: ProductUpdate
  endpoint:
    path: /ProductUpdate
    method: POST
    data_selector: ProductUpdate
    params:
      siteId: site_id
- name: ProductUpdate
  endpoint:
    path: /product/update
    method: POST
    data_selector: ProductUpdate
    params:
      siteId: site_id
- name: recommendations
  endpoint:
    path: /getRecommendations
    method: GET
    data_selector: products
- name: product_feed
  endpoint:
    path: /api/v1/product_feed
    method: POST
    data_selector: data
    params: {}
- name: Abandoned view
  endpoint:
    path: /data-sources/abandoned-view
    method: GET
    data_selector: views
- name: Recommendations for 6 abandoned views
  endpoint:
    path: /data-sources/recommendations-for-abandoned-views
    method: GET
    data_selector: recommendations
- name: email_template
  endpoint:
    path: /api/v1/email/templates
    method: GET
    data_selector: templates
    params: {}
- name: start_configuration
  endpoint:
    path: /api/start-configuration
    method: GET
    data_selector: records
    params: {}
- name: stop_configuration
  endpoint:
    path: /api/stop-configuration
    method: GET
    data_selector: records
    params: {}
- name: campaigns
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Contact Confirmed
  endpoint:
    path: /contact/confirmed
    method: POST
    data_selector: confirmation_status
    params: {}
- name: Contact Exists
  endpoint:
    path: /contact/exists
    method: POST
    data_selector: existence_status
    params: {}
- name: message_blocks
  endpoint:
    path: /docs/message-blocks
    method: GET
    data_selector: blocks
    params: {}
- name: basic_parameters
  endpoint:
    path: /docs/basic-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: advanced_parameters
  endpoint:
    path: /docs/advanced-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: One from many block
  endpoint:
    path: /docs/one-from-many
    method: GET
    data_selector: content
    params: {}
- name: Adding Tags to Messages
  endpoint:
    path: /docs/adding-tags
    method: GET
    data_selector: content
    params: {}
- name: Setting Up Workflow
  endpoint:
    path: /docs/setting-up-workflow
    method: GET
    data_selector: content
    params: {}
- name: contact
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: records
    params: {}
- name: update_custom_fields
  endpoint:
    path: /docs/custom-user-fields
    method: GET
    data_selector: fields
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: crmWebhook
  endpoint:
    path: /
    method: GET
- name: event_type
  endpoint:
    path: /services/data/vXX.X/sobjects/EventType
    method: GET
    data_selector: records
- name: workflow
  endpoint:
    path: /services/data/vXX.X/sobjects/Workflow
    method: GET
    data_selector: records
- name: subscribe_contact
  endpoint:
    path: /reference/subscribecontact-1
    method: POST
    data_selector: events
    params: {}
- name: contacts
  endpoint:
    path: /services/data/v1/contacts
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /services/data/v1/events
    method: GET
    data_selector: records
    params: {}
- name: segment
  endpoint:
    path: /segments
    method: POST
    data_selector: data
    params: {}
- name: workflow
  endpoint:
    path: /workflows
    method: POST
    data_selector: data
    params: {}
- name: orders
  endpoint:
    path: /reference/ordersbulkinsert-1
    method: POST
    data_selector: orders
    params: {}
- name: events
  endpoint:
    path: /docs/events-and-behavior-tracking
    method: POST
    data_selector: events
    params: {}
- name: orders
  endpoint:
    path: /reference/ordersbulkinsert-1
    method: POST
- name: generate_event
  endpoint:
    path: /reference/registerevent_2
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dynamic_segment
  endpoint:
    path: /contacts/segments
    method: POST
    data_selector: segment
    params: {}
- name: automated_campaign
  endpoint:
    path: /messages/campaigns
    method: POST
    data_selector: campaign
    params: {}
- name: workflows
  endpoint:
    path: /api/v1/workflows
    method: GET
    data_selector: workflows
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: data
    params: {}
- name: promocodes
  endpoint:
    path: /promocodes
    method: GET
    data_selector: data
    params: {}
- name: notifications
  endpoint:
    path: /api/v1/notifications
    method: POST
    data_selector: notification
    params: {}
- name: user_data
  endpoint:
    path: /api/user_data
    method: GET
    data_selector: data
    params: {}
- name: orders
  endpoint:
    path: /reference/ordersbulkinsert-1
    method: POST
    data_selector: orders
    params: {}
- name: event
  endpoint:
    path: /reference/registerevent_2
    method: POST
    data_selector: event
    params: {}
- name: Google Sheets
  endpoint:
    path: /docs/importing-external-data-from-google-sheets
    method: GET
- name: Google BigQuery
  endpoint:
    path: /docs/integrating-with-google-bigquery
    method: GET
- name: PostgreSQL
  endpoint:
    path: /docs/connecting-to-postgresql
    method: GET
- name: HTTP Request
  endpoint:
    path: /docs/connecting-to-http-request-as-an-external-data-source
    method: GET
- name: spreadsheet_data
  endpoint:
    path: /path/to/spreadsheet
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: data
- name: contactActivities
  endpoint:
    path: /contactActivities
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: data
- name: orderItems
  endpoint:
    path: /orderItems
    method: GET
    data_selector: data
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: data
- name: revenue
  endpoint:
    path: /revenue
    method: GET
    data_selector: data
- name: Broadcasts
  endpoint:
    path: /broadcasts
    method: GET
    data_selector: broadcasts
    params: {}
- name: ContactActivities
  endpoint:
    path: /contactActivities
    method: GET
    data_selector: activities
    params: {}
- name: Contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
    params: {}
- name: Devices
  endpoint:
    path: /devices
    method: GET
    data_selector: devices
    params: {}
- name: Events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: Messages
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
    params: {}
- name: OrderItems
  endpoint:
    path: /orderItems
    method: GET
    data_selector: orderItems
    params: {}
- name: Orders
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
    params: {}
- name: Revenue
  endpoint:
    path: /revenue
    method: GET
    data_selector: revenue
    params: {}
- name: external_data_source
  endpoint:
    path: /docs/external-data-sources
    method: GET
- name: contact_data
  endpoint:
    path: /contact
    method: GET
- name: user_profile
  endpoint:
    path: /api/v1/user/profile
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: data_export
  endpoint:
    path: /export/data
    method: POST
    data_selector: exported_data
    params: {}
- name: data_import
  endpoint:
    path: /import/data
    method: POST
    data_selector: imported_data
    params: {}
- name: Exporting Data to the BigQuery Tables
  endpoint:
    path: /export/data/to/bigquery
    method: POST
    data_selector: results
- name: Importing Data from the BigQuery Tables
  endpoint:
    path: /import/data/from/bigquery
    method: GET
    data_selector: records
- name: broadcasts
  endpoint:
    path: /services/data/vXX.X/sobjects/Broadcasts
    method: GET
    data_selector: records
    params: {}
- name: contactActivities
  endpoint:
    path: /services/data/vXX.X/sobjects/ContactActivities
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /services/data/vXX.X/sobjects/Contacts
    method: GET
    data_selector: records
    params: {}
- name: devices
  endpoint:
    path: /services/data/vXX.X/sobjects/Devices
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /services/data/vXX.X/sobjects/Events
    method: GET
    data_selector: records
    params: {}
- name: messages
  endpoint:
    path: /services/data/vXX.X/sobjects/Messages
    method: GET
    data_selector: records
    params: {}
- name: orderItems
  endpoint:
    path: /services/data/vXX.X/sobjects/OrderItems
    method: GET
    data_selector: records
    params: {}
- name: orders
  endpoint:
    path: /services/data/vXX.X/sobjects/Orders
    method: GET
    data_selector: records
    params: {}
- name: revenue
  endpoint:
    path: /services/data/vXX.X/sobjects/Revenue
    method: GET
    data_selector: records
    params: {}
- name: bigquery_data
  endpoint:
    path: /bigquery/data
    method: GET
    data_selector: records
    params: {}
- name: Key Preprocessor
  endpoint:
    path: /docs/using-preprocessor#key-preprocessor
    method: GET
- name: Random Preprocessor
  endpoint:
    path: /docs/using-preprocessor#random-preprocessor
    method: GET
- name: promo_codes
  endpoint:
    path: /promo-codes
    method: GET
    data_selector: records
    params: {}
- name: promo_code
  endpoint:
    path: /promo-code/added-from-user-profile
    method: POST
- name: user_profile
  endpoint:
    path: /docs/user-profile
    method: GET
- name: promo_codes
  endpoint:
    path: /docs/promo-codes
    method: GET
- name: promo_code_from_data_base
  endpoint:
    path: /docs/promo-code-from-data-base
    method: GET
- name: promo_codes
  endpoint:
    path: /promo_codes
    method: POST
    data_selector: promo_codes
    params: {}
- name: promo_code
  endpoint:
    path: /promo/code
    method: POST
    data_selector: data
    params: {}
- name: generate_event
  endpoint:
    path: /reference/registerevent_2
    method: POST
    data_selector: params
- name: send_prepared_message
  endpoint:
    path: /api/v1/message/{id}/smartsend
    method: POST
    data_selector: recipients
- name: promo_code
  endpoint:
    path: /promo_codes
    method: GET
    data_selector: records
- name: promo_codes
  endpoint:
    path: /reference/getpromocodes-1
    method: POST
    data_selector: promo_codes
    params: {}
- name: upload_json
  endpoint:
    path: /reference/insertpromocodes_1
    method: POST
    data_selector: upload_response
    params: {}
- name: promo_code_file
  endpoint:
    path: /docs/using-preprocessor
    method: GET
    data_selector: file_format
    params: {}
- name: promo_code
  endpoint:
    path: /promo_code
    method: POST
    data_selector: promo_code_data
    params: {}
- name: user_profile
  endpoint:
    path: /v1/user/profile
    method: GET
    data_selector: data
    params: {}
- name: promo_codes
  endpoint:
    path: /v1/promo/codes
    method: GET
    data_selector: data
    params: {}
- name: promo_codes
  endpoint:
    path: /api/v1/contact
    method: POST
    data_selector: fields
- name: segments
  endpoint:
    path: /contacts/segments
    method: GET
    data_selector: segments
- name: segments
  endpoint:
    path: /api/v1/segments
    method: GET
    data_selector: records
    params: {}
- name: user_events
  endpoint:
    path: /api/v1/user_events
    method: GET
    data_selector: events
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: contact
  endpoint:
    path: /v1/contact
    method: POST
    data_selector: ''
    params: {}
- name: subscribe_contact
  endpoint:
    path: /v1/contact/subscribe
    method: POST
    data_selector: ''
    params: {}
- name: contacts_bulk_update
  endpoint:
    path: /v1/contacts
    method: PUT
    data_selector: ''
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
- name: campaigns
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: data
- name: user_profile
  endpoint:
    path: /user/profile
    method: GET
    data_selector: data
- name: contacts_import
  endpoint:
    path: /contacts/import
    method: POST
    data_selector: records
- name: subscribe_contact
  endpoint:
    path: /subscribe/contact
    method: POST
    data_selector: records
- name: campaign_reports
  endpoint:
    path: /docs/campaigns-analytics
    method: GET
- name: Campaign Reports
  endpoint:
    path: /docs/campaigns-analytics
    method: GET
    data_selector: reports
    params: {}
- name: Contacts Analytics
  endpoint:
    path: /docs/contacts-analytics
    method: GET
    data_selector: analytics
    params: {}
- name: Email Campaign Report
  endpoint:
    path: /email/campaign/report
    method: GET
    data_selector: data
    params: {}
- name: campaign_statistics
  endpoint:
    path: /campaigns/statistics
    method: GET
    data_selector: statistics
    params: {}
- name: campaign_conversions
  endpoint:
    path: /campaigns/conversions
    method: GET
    data_selector: conversions
    params: {}
- name: campaign_detailed_statistics
  endpoint:
    path: /campaigns/detailed_statistics
    method: GET
    data_selector: detailed_statistics
    params: {}
- name: sms_campaign_report
  endpoint:
    path: /sms/campaign/report
    method: GET
    data_selector: data
    params: {}
- name: app_inbox_campaign_report
  endpoint:
    path: /app-inbox-campaign-report
    method: GET
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: POST
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: data
    params: {}
- name: campaign_report
  endpoint:
    path: /v1/campaign/report
    method: GET
    data_selector: reports
    params: {}
- name: Workflow Messages
  endpoint:
    path: /automation/workflows/view_campaign_report
    method: GET
    data_selector: messages
    params: {}
- name: Campaign Reports
  endpoint:
    path: /campaigns/reports/triggered
    method: GET
    data_selector: reports
    params: {}
- name: utm_tags
  endpoint:
    path: /settings/links
    method: GET
    data_selector: utmParameters
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: records
    params: {}
- name: segment_tracking
  endpoint:
    path: /contacts/analytics/segment_tracking
    method: GET
    data_selector: segments
    params: {}
- name: Campaigns
  endpoint:
    path: /docs/campaigns
    method: GET
    data_selector: segments
    params: {}
- name: Sales
  endpoint:
    path: /docs/sales
    method: GET
    data_selector: segments
    params: {}
- name: orders
  endpoint:
    path: /docs/orders-1
    method: POST
- name: Add orders
  endpoint:
    path: /reference/ordersbulkinsert-1
    method: POST
- name: Generate event
  endpoint:
    path: /reference/registerevent_2
    method: POST
- name: Add/update a contact
  endpoint:
    path: /reference/addcontact-1
    method: POST
- name: orders
  endpoint:
    path: /reference/ordersbulkinsert-1
    method: POST
    data_selector: orders
    params: {}
- name: contact
  endpoint:
    path: /contacts
    method: POST
    data_selector: data
    params: {}
- name: anonymous_users
  endpoint:
    path: /api/v1/device
    method: POST
    data_selector: payload
- name: enrich_user_data
  endpoint:
    path: /api/v1/contact
    method: POST
    data_selector: payload
- name: events
  endpoint:
    path: /api/v3/event
    method: POST
    data_selector: payload
- name: events
  endpoint:
    path: /api/v1/events
    method: POST
- name: email_template_import
  endpoint:
    path: /email/template/import
    method: POST
    data_selector: records
- name: email_template
  endpoint:
    path: /docs/customizing-an-html-email-template
    method: GET
    data_selector: content
    params: {}
- name: custom_domain
  endpoint:
    path: /account/settings/links/short-links
    method: POST
    data_selector: domain
    params: {}
- name: destination_domain
  endpoint:
    path: /account/settings/links/destination-domain
    method: POST
    data_selector: domain
    params: {}
- name: contactActivities
  endpoint:
    path: /contactActivities
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: workflow
  endpoint:
    path: /api/workflows
    method: POST
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: campaigns
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: campaigns
  endpoint:
    path: /v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: data
    params: {}
- name: campaigns
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: data
    params: {}
- name: email_campaign
  endpoint:
    path: /api/v1/email_campaigns
    method: POST
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: campaigns
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /api/v1/events
    method: POST
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Update interaction status
  endpoint:
    path: /reference/registerinteractionstatus-1
    method: PUT
    data_selector: ''
    params: {}
- name: product_recommendations
  endpoint:
    path: /services/data/vXX.X/recommendations
    method: GET
    data_selector: records
    params: {}
- name: in_app_campaign
  endpoint:
    path: /api/v1/in_app_campaigns
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: records
    params: {}
- name: messages
  endpoint:
    path: /messages/email
    method: POST
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /reference/contactsbulkupdate-1
    method: POST
- name: events
  endpoint:
    path: /reference/registerevent_2
    method: POST
- name: contact
  endpoint:
    path: /reference/addcontact-1
    method: POST
- name: orders
  endpoint:
    path: /reference/ordersbulkinsert-1
    method: POST
- name: account_info
  endpoint:
    path: /v1/account/info
    method: GET
- name: Access Keys
  endpoint:
    path: /reference/managing-mobile-sdk-access-keys
    method: GET
    data_selector: access_keys
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
- name: orders
  endpoint:
    path: /reference/orders
    method: POST
- name: events
  endpoint:
    path: /reference/events
    method: POST
- name: messages
  endpoint:
    path: /reference/messages
    method: GET
- name: behavior_tracking
  endpoint:
    path: /reference/behavior_tracking
    method: GET
- name: account
  endpoint:
    path: /reference/account
    method: GET
- name: site
  endpoint:
    path: /reference/site
    method: GET
- name: product_feed
  endpoint:
    path: /reference/product_feed
    method: GET
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
- name: orders
  endpoint:
    path: /reference/orders
    method: POST
- name: events
  endpoint:
    path: /reference/events
    method: POST
- name: messages
  endpoint:
    path: /reference/messages
    method: POST
- name: account
  endpoint:
    path: /reference/account
    method: GET
- name: site
  endpoint:
    path: /reference/site
    method: GET
- name: contacts
  endpoint:
    path: /reference/addcontact-1
    method: POST
    data_selector: records
    params: {}
- name: orders
  endpoint:
    path: /reference/ordersbulkinsert-1
    method: POST
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
- name: orders
  endpoint:
    path: /reference/orders
    method: GET
- name: events
  endpoint:
    path: /reference/events
    method: GET
- name: messages
  endpoint:
    path: /reference/messages
    method: GET
- name: account
  endpoint:
    path: /reference/account
    method: GET
- name: site
  endpoint:
    path: /reference/site
    method: GET
- name: User Attributes
  endpoint:
    path: /reference/using-updateuserattributes-method
    method: POST
    data_selector: UserAttributes
    params: {}
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
- name: orders
  endpoint:
    path: /reference/orders
    method: POST
- name: events
  endpoint:
    path: /reference/events
    method: POST
- name: messages
  endpoint:
    path: /reference/messages
    method: POST
- name: account
  endpoint:
    path: /reference/account
    method: GET
- name: user_behavior
  endpoint:
    path: /reference/ios-user-behaviour
    method: GET
    data_selector: events
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
- name: events
  endpoint:
    path: /reference/events
    method: POST
- name: messages
  endpoint:
    path: /reference/messages
    method: POST
- name: account
  endpoint:
    path: /reference/account
    method: GET
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
- name: orders
  endpoint:
    path: /reference/orders
    method: POST
- name: events
  endpoint:
    path: /reference/events
    method: POST
- name: messages
  endpoint:
    path: /reference/messages
    method: GET
- name: behavior_tracking
  endpoint:
    path: /reference/behavior_tracking
    method: GET
- name: account
  endpoint:
    path: /reference/account
    method: GET
- name: site
  endpoint:
    path: /reference/site
    method: GET
- name: product_feed
  endpoint:
    path: /reference/product_feed
    method: GET
- name: App Inbox Messages
  endpoint:
    path: /inbox/messages
    method: GET
    data_selector: messages
- name: inbox_messages
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
    params: {}
- name: recommendations
  endpoint:
    path: /recommendations
    method: GET
    data_selector: recommendations
    params: {}
- name: log_event
  endpoint:
    path: /logEvent
    method: GET
    data_selector: event
    params: {}
- name: contacts
  endpoint:
    path: /reference/addcontact-1
    method: POST
    data_selector: null
    params: {}
- name: orders
  endpoint:
    path: /reference/ordersbulkinsert-1
    method: POST
    data_selector: null
    params: {}
- name: events
  endpoint:
    path: /reference/registerevent_2
    method: POST
    data_selector: null
    params: {}
- name: messages
  endpoint:
    path: /reference/searchemails-1
    method: GET
    data_selector: null
    params: {}
- name: behavior_tracking
  endpoint:
    path: /reference/contactactivity-1
    method: GET
    data_selector: null
    params: {}
- name: account
  endpoint:
    path: /reference/getaccountinfo-1
    method: GET
    data_selector: null
    params: {}
- name: site
  endpoint:
    path: /reference/getdomains
    method: GET
    data_selector: null
    params: {}
- name: product_feed
  endpoint:
    path: /reference/getproductfeedsconfiguration
    method: GET
    data_selector: null
    params: {}
- name: events
  endpoint:
    path: /reference/registerevent_2
    method: POST
- name: order_created
  endpoint:
    path: /orders
    method: POST
    data_selector: order
    params: {}
- name: order_updated
  endpoint:
    path: /orders
    method: POST
    data_selector: order
    params: {}
- name: order_delivered
  endpoint:
    path: /orders/delivered
    method: POST
    data_selector: externalOrderId
    params: {}
- name: order_cancelled
  endpoint:
    path: /orders/cancelled
    method: POST
    data_selector: externalOrderId
    params: {}
- name: search_request
  endpoint:
    path: /search
    method: POST
    data_selector: query
    params: {}
- name: contact
  endpoint:
    path: /reference/addcontact-1
    method: POST
- name: orders
  endpoint:
    path: /reference/ordersbulkinsert-1
    method: POST
- name: events
  endpoint:
    path: /reference/registerevent_2
    method: POST
- name: messages
  endpoint:
    path: /reference/searchemails-1
    method: GET
- name: behavior_tracking
  endpoint:
    path: /reference/contactactivity-1
    method: GET
- name: account
  endpoint:
    path: /reference/getaccountinfo-1
    method: GET
- name: site
  endpoint:
    path: /reference/getdomains
    method: GET
- name: product_feed
  endpoint:
    path: /reference/getproductfeedsconfiguration
    method: GET
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
    data_selector: records
    params: {}
- name: orders
  endpoint:
    path: /reference/orders
    method: POST
    data_selector: records
    params: {}
- name: messages
  endpoint:
    path: /reference/messages
    method: GET
    data_selector: records
    params: {}
- name: account
  endpoint:
    path: /reference/account
    method: GET
    data_selector: records
    params: {}
- name: site
  endpoint:
    path: /reference/site
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
- name: orders
  endpoint:
    path: /reference/orders
    method: POST
- name: events
  endpoint:
    path: /reference/events
    method: POST
- name: messages
  endpoint:
    path: /reference/messages
    method: POST
- name: account
  endpoint:
    path: /reference/account
    method: GET
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /reference/orders
    method: POST
    data_selector: records
- name: events
  endpoint:
    path: /reference/events
    method: POST
    data_selector: records
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
- name: orders
  endpoint:
    path: /reference/orders
    method: GET
- name: events
  endpoint:
    path: /reference/events
    method: GET
- name: messages
  endpoint:
    path: /reference/messages
    method: GET
- name: account
  endpoint:
    path: /reference/account
    method: GET
- name: site
  endpoint:
    path: /reference/site
    method: GET
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
- name: orders
  endpoint:
    path: /reference/orders
    method: POST
- name: events
  endpoint:
    path: /reference/events
    method: POST
- name: messages
  endpoint:
    path: /reference/messages
    method: GET
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
- name: orders
  endpoint:
    path: /reference/orders
    method: GET
- name: events
  endpoint:
    path: /reference/events
    method: GET
- name: messages
  endpoint:
    path: /reference/messages
    method: GET
- name: account
  endpoint:
    path: /reference/account
    method: GET
- name: site
  endpoint:
    path: /reference/site
    method: GET
- name: contacts
  endpoint:
    path: /reference/searchcontacts-1
    method: GET
- name: orders
  endpoint:
    path: /reference/ordersbulkinsert-1
    method: POST
- name: events
  endpoint:
    path: /reference/registerevent_2
    method: POST
- name: messages
  endpoint:
    path: /reference/searchemails-1
    method: GET
- name: behavior tracking
  endpoint:
    path: /reference/contactactivity-1
    method: GET
- name: account
  endpoint:
    path: /reference/getaccountinfo-1
    method: GET
- name: site
  endpoint:
    path: /reference/getdomains
    method: GET
- name: product feed
  endpoint:
    path: /reference/getproductfeedsconfiguration
    method: GET
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
- name: add_contact
  endpoint:
    path: /reference/addcontact-1
    method: POST
- name: delete_contact
  endpoint:
    path: /reference/deletecontact-1
    method: DELETE
- name: update_contact
  endpoint:
    path: /reference/updatecontact-1
    method: PUT
- name: contacts
  endpoint:
    path: /reference/addcontact-1
    method: POST
- name: orders
  endpoint:
    path: /reference/ordersbulkinsert-1
    method: POST
- name: events
  endpoint:
    path: /reference/registerevent_2
    method: POST
- name: messages
  endpoint:
    path: /reference/searchemails-1
    method: GET
- name: behavior_tracking
  endpoint:
    path: /reference/contactactivity-1
    method: GET
- name: account
  endpoint:
    path: /reference/getaccountinfo-1
    method: GET
- name: site
  endpoint:
    path: /reference/getdomains
    method: GET
- name: product_feed
  endpoint:
    path: /reference/getproductfeedsconfiguration
    method: GET
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
- name: events
  endpoint:
    path: /reference/events
    method: POST
- name: contacts
  endpoint:
    path: /reference/addcontact-1
    method: POST
    data_selector: records
- name: orders
  endpoint:
    path: /reference/ordersbulkinsert-1
    method: POST
    data_selector: records
- name: events
  endpoint:
    path: /reference/registerevent_2
    method: POST
    data_selector: records
- name: messages
  endpoint:
    path: /reference/searchemails-1
    method: GET
    data_selector: records
- name: behavior tracking
  endpoint:
    path: /reference/contactactivity-1
    method: GET
    data_selector: records
- name: account
  endpoint:
    path: /reference/getaccountinfo-1
    method: GET
    data_selector: records
- name: site
  endpoint:
    path: /reference/getdomains
    method: GET
    data_selector: records
- name: product feed
  endpoint:
    path: /reference/getproductfeedsconfiguration
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
- name: orders
  endpoint:
    path: /reference/orders
    method: POST
- name: events
  endpoint:
    path: /reference/events
    method: POST
- name: messages
  endpoint:
    path: /reference/messages
    method: POST
- name: contacts
  endpoint:
    path: /reference/addcontact-1
    method: POST
- name: orders
  endpoint:
    path: /reference/ordersbulkinsert-1
    method: POST
- name: events
  endpoint:
    path: /reference/registerevent_2
    method: POST
- name: messages
  endpoint:
    path: /reference/searchemails-1
    method: GET
- name: behavior_tracking
  endpoint:
    path: /reference/contactactivity-1
    method: GET
- name: account
  endpoint:
    path: /reference/getaccountinfo-1
    method: GET
- name: site
  endpoint:
    path: /reference/getdomains
    method: GET
- name: contacts
  endpoint:
    path: /reference/searchcontacts-1
    method: GET
    data_selector: contacts
- name: events
  endpoint:
    path: /reference/registerevent_2
    method: POST
    data_selector: event
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
- name: orders
  endpoint:
    path: /reference/orders
    method: POST
- name: events
  endpoint:
    path: /reference/events
    method: POST
- name: messages
  endpoint:
    path: /reference/messages
    method: GET
- name: behavior_tracking
  endpoint:
    path: /reference/behavior_tracking
    method: GET
- name: account
  endpoint:
    path: /reference/account
    method: GET
- name: site
  endpoint:
    path: /reference/site
    method: GET
- name: product_feed
  endpoint:
    path: /reference/product_feed
    method: GET
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
- name: events
  endpoint:
    path: /reference/events
    method: POST
- name: messages
  endpoint:
    path: /reference/messages
    method: POST
- name: account
  endpoint:
    path: /reference/account
    method: GET
- name: site
  endpoint:
    path: /reference/site
    method: GET
- name: contacts
  endpoint:
    path: /reference/addcontact-1
    method: POST
- name: orders
  endpoint:
    path: /reference/ordersbulkinsert-1
    method: POST
- name: events
  endpoint:
    path: /reference/registerevent_2
    method: POST
- name: messages
  endpoint:
    path: /reference/searchemails-1
    method: GET
- name: behavior_tracking
  endpoint:
    path: /reference/contactactivity-1
    method: GET
- name: account
  endpoint:
    path: /reference/getaccountinfo-1
    method: GET
- name: site
  endpoint:
    path: /reference/getdomains
    method: GET
- name: product_feed
  endpoint:
    path: /reference/getproductfeedsconfiguration
    method: GET
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
- name: events
  endpoint:
    path: /reference/events
    method: POST
- name: messages
  endpoint:
    path: /reference/messages
    method: POST
- name: contacts
  endpoint:
    path: /reference/addcontact-1
    method: POST
- name: orders
  endpoint:
    path: /reference/ordersbulkinsert-1
    method: POST
- name: events
  endpoint:
    path: /reference/registerevent_2
    method: POST
- name: messages
  endpoint:
    path: /reference/searchemails-1
    method: GET
- name: behavior_tracking
  endpoint:
    path: /reference/contactactivity-1
    method: GET
- name: contacts
  endpoint:
    path: /reference/searchcontacts-1
    method: GET
- name: orders
  endpoint:
    path: /reference/orders
    method: GET
- name: messages
  endpoint:
    path: /reference/messages
    method: GET
- name: events
  endpoint:
    path: /reference/events
    method: GET
- name: account
  endpoint:
    path: /reference/account
    method: GET
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /reference/orders
    method: POST
    data_selector: records
- name: events
  endpoint:
    path: /reference/events
    method: POST
    data_selector: records
- name: messages
  endpoint:
    path: /reference/messages
    method: GET
    data_selector: records
- name: behavior_tracking
  endpoint:
    path: /reference/behavior_tracking
    method: GET
    data_selector: records
- name: account
  endpoint:
    path: /reference/account
    method: GET
    data_selector: records
- name: site
  endpoint:
    path: /reference/site
    method: GET
    data_selector: records
- name: product_feed
  endpoint:
    path: /reference/product_feed
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
- name: orders
  endpoint:
    path: /reference/orders
    method: GET
- name: events
  endpoint:
    path: /reference/events
    method: GET
- name: messages
  endpoint:
    path: /reference/messages
    method: GET
- name: account
  endpoint:
    path: /reference/account
    method: GET
- name: app_inbox_messages
  endpoint:
    path: /reference/searchappinboxmessages
    method: GET
    data_selector: messages
    params: {}
- name: app_inbox_messages_count
  endpoint:
    path: /reference/getappinboxmessagescount
    method: GET
    data_selector: count
    params: {}
- name: App Inbox Message
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
notes:
- Use debug mode only with test devices or developer accounts
- The system keeps events for 8 hours
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Always use an external ID as the main contact identifier.
- Data from GA is updated only once an hour.
- Use CSV or TXT format for faster work.
- Correct field mapping is crucial for further real-time contact updating.
- The **One from many** block is built for continuous optimization.
- Special characters are not allowed in tag names.
- The maximum tag name length is 50 characters.
- A Device ID and a mobile token may belong only to one contact.
- Using external ID as the main identifier helps avoid duplicating contact profiles.
- Uses OAuth2 with refresh token — requires setup of connected app in Reteno
- Before sending specific contact data to Reteno in any way, you must create corresponding
  additional fields in your account.
- Use an external ID as the primary contact identifier to prevent data duplication
  when creating and updating contacts.
- You need to obtain an API key and use it for authentication.
- OAuth2 authentication is required
- Updating contacts via SDK may lead to outdated profiles if users do not update their
  app.
- Backend updates to contact profiles are recommended for reliability.
- Requires setup of connected app in Reteno
- Contact Import is a feature that enables quick creation of a contact list for SMS
  or Email campaigns.
- Some objects like Contact may return nulls in deeply nested fields
- File must include phone numbers or emails — identifier fields by which the system
  recognizes unique contacts.
- 'Supports formats: XLS, XLSX, CSV, or TXT.'
- Newly created fields are tagged as New. New contact fields are added to the default
  Accessorial list when your import is completed.
- A widget can be displayed more times than allowed by the display frequency.
- Ensure the email address has no spelling mistakes (gmeil.com instead of gmail.com).
- 'Imported files must be in one of the following formats: xlsx, xls, csv or txt,
  and up to 300 MB.'
- Sending the time zone is optional because the SDK will automatically track it by
  default
- Personal list with the fields Date of birth and Gender is preset in an account.
- Some objects may return nulls in deeply nested fields
- Admin role permissions allow only unsubscribing email addresses.
- By default, the system stores event data for 2 years.
- All events should include standard information about devices and contacts
- Use an HTTP client (e.g., Axios, cURL, Postman) to send events.
- Tracking the Screen view event is inactive by default, while tracking Session and
  App Lifecycle events is active in the SDK settings.
- When transmitting new parameters, they will add to the event parameter structure,
  while the existing ones will remain unchanged.
- API requires authentication to access data
- Some endpoints may have limitations on data retrieval
- The message with dynamic event content must participate in the workflow triggered
  by the corresponding event.
- You don't need to pre-select a specific event as a conversion for a specific campaign
- We recommend creating applications with different API keys for the stage and prod
  environments to minimize risks and ensure high quality of the final product before
  release.
- To send mobile push notifications via Firebase Cloud Messaging (FCM), register the
  project in Google Firebase, create a key, and upload it to Reteno.
- One emoji takes up two characters in the title, subtitle, and text fields.
- Moderation is carried out at +03 GMT and takes at most 10 minutes during working
  hours (Mon-Fri - 8 am - 7 pm; Sat-Sun - 9 am - 6 pm) and 1-3 hours in the evening
  time and on holidays.
- To send a test mobile push notification or an app inbox message.
- Uses OAuth2 for authentication
- These records are necessary to ensure 100% deliverability of your campaigns and
  form your domain reputation for the email services.
- Before configuration, you must add email authentication.
- 'Email authentication includes 4 methods: SPF, Sender ID, DKIM, DMARC.'
- We recommend setting up the Full + method. If this is impossible due to certain
  restrictions, choose the Subdomain method.
- Some DNS servers need up to 48 hours to apply all changes.
- Warm-up data is refreshed every day at 00:00
- Configure digital signatures for your domain to use Postmaster Tools
- Your favicon will be added to all emails generated after its upload. Re-save an
  email after favicon uploading to pull a new favicon.
- You have a registered Apple Developer Account.
- Your domain is properly verified with Apple’s Private Email Relay service.
- You use authenticated email-sending methods (SPF, DKIM, DMARC).
- Unsubscribe forms are available upon request.
- A published form applies to all email messages.
- Only one unsubscribe form can be published.
- Mailing from public addresses is impossible, so you must add a sender before sending.
- An unsubscribe link is mandatory for every email sent from Reteno.
- If the font isn’t displayed in the email, check if it's available on the device
  you're viewing the email on.
- Some fonts are only supported for languages that use the Latin alphabet and can’t
  be used for languages that use the Cyrillic alphabet.
- It is better not to use custom fonts for the main text but to place them on images.
- The email subject line and preheader will be displayed in a standard font determined
  by the email client.
- When using a custom font, think about how it would look in email clients that don't
  support it.
- Setting up smart containers should work for most pages following CSS standards.
  However, some pages may have unique selector names and attributes.
- AI optimizes text in the language set in your account settings.
- Compatibility can vary across devices and platforms, which can affect the user experience.
- A block with default settings will be used in the message if you have not set up
  web tracking and created a data source for recommendations.
- The message preview in the editor is displayed only for the desktop version.
- Before editing cards of the block, set up its structure and data substitution rules
- The display of the first or second option depends on the If there are no products
  to show setting in the Products block.
- Ensure correct setup of API keys for access.
- Web push token collection is only available for websites that use the https:// protocol.
- Web push token collection is only available for HTTPS protocol websites.
- Google Chrome may block intrusive subscription windows.
- Messages are sent to all domain subscribers. To send to segments, connect the GROWTH
  pricing plan.
- Voluntary Application Server Identification (VAPID) allows sending web pushes to
  Safari versions 16+.
- The Reteno's web push script is loaded via a Service Worker file called `sw.js`
  and placed in the site's root.
- The names of functions, variables or handlers in your Service Worker and Service
  Worker from Reteno may be the same. In this case, conflicts leading to failures
  in your PWA and the Reteno's script are possible.
- The current token becomes invalidated after each request, and the ES-TOKEN response
  header passes the new one used in the following request.
- The token can become invalidated at any moment for security considerations, so you
  get it more than once.
- If a contact is not in the Reteno system, the token is not returned.
- If you apply text styles for an app inbox message, you will receive the message
  in the HTML format. You will need to parse the HTML message to display it correctly
  in the mobile app.
- Alphanumeric sender ID can contain only upper and lower case Latin letters, numbers,
  space, a hyphen, dot, and underscore, and also no more than 11 symbols.
- You can’t use only numerals.
- Ask GMS Hyber to add the `52.210.222.17` and `52.16.166.210` IP addresses to the
  allowed list.
- 'To receive the message status, add the following link in your TurboSMS cabinet:
  `https://esputnik.com/dlr/v2/turbosms/status`.'
- 'To receive the message status, add the following link in your Kyivstar cabinet:
  `https://esputnik.com/dlr/v1/kyivstar/status`.'
- 'To receive the message status, add the following link in your Omnicell cabinet:
  `https://esputnik.com/dlr/v1/omnicell/status`.'
- 'To receive the message status, add the next parameters in your Textlocal cabinet:
  `https://esputnik.com/dlr/v1/textlocal/status` and Port field: 443.'
- 'To receive the message status, add the next parameter for Sms URL report field
  in Acemount Media user account: `https://esputnik.com/dlr/v1/acemount/status`.'
- To connect PROCONTEXT, submit a request at support@reteno.com.
- To connect Decision Telecom, submit a request at support@reteno.com.
- To connect AlphaSMS, leave a request at support@reteno.com.
- User Guide provides detailed instructions for using the API.
- Before launching an SMS campaign, you need to add the SMS sender ID or set up SMS
  processing.
- One part of SMS contains 160 characters. If the message contains at least one emoji,
  the maximum number of characters in one part of the message will decrease to 70.
- Implement push notifications on Android and iOS devices using Google Firebase private
  key or certificate/token-based connection to APNs.
- All In-App message types are supported in SDK versions starting from Android 2.5.0/iOS
  2.5.0.
- The number of contacts in a subscription is calculated based on deviceId.
- If the number of contacts in an In-App channel exceeds the plan’s limit, messages
  will not be displayed to contacts above the limit.
- In-App can be sent only through a tap on a mobile push message without setting triggering
  rules.
- You can test messages with set triggering rules only in the test version of your
  app.
- The link and buttons are unavailable for mobile pushes with linked In-App messages.
- Mobile pushes with linked In-App messages marked with the chain icon in the system.
- To publish widgets, install our script before the closing body tag on every website
  page.
- You can use multiple components in a widget simultaneously and assign the same or
  different event types to each.
- Upload images in PNG, JPEG, SVG, GIF, WebP, AVIF formats, up to 3 MB.
- Storing data from widgets to contact fields requires proper configuration.
- The default value of Silent Interval in Annoyance Safeguard is 3 minutes.
- By default, the Show in sequence using Silent interval rule applies to all new and
  unpublished widgets.
- Requires OAuth2 authentication for accessing API.
- Rate limits apply based on account type.
- It is recommended to install the Google Analytics 4 script, since the Google Universal
  Analytics property will stop processing data starting on July 1, 2023.
- If you replace the system workflow, the new mailing scheme will be applied to all
  widgets in the account, while the emails can still be unique for each form.
- You cannot delete the widgets participating in a running test.
- When you stop a test in progress, you will not be able to relaunch it.
- The request form updates contact data by email or phone IDs if the corresponding
  fields are included.
- If you encounter difficulties at any of the configuration steps, please contact
  our support at support@reteno.com
- Transferring Website Behavior Data via REST API
- To use web tracking, you need to sign up to one of paid plans.
- Transferring Website Behavior Data via JavaScript Requests
- Pay special attention to the transfer of contact data
- There is no need to configure all the events below — select only those included
  in your tariff plan
- Personalized recommendations are built based on visitor website behavior data.
- Uses OAuth2 for authentication.
- The JS API method is asynchronous, which allows not to wait for the execution of
  other functions on the site.
- Always set the same default language for message and feed.
- 'Before starting to configure recommendations: install web tracking script to collect
  users’ online behavior data, upload a product feed to provide data about your product
  range, set up web tracking for your website, create data sources for recommendation
  blocks'
- Most algorithms are designed for specific advanced segmentation triggers and work
  only in them.
- Contact our specialists to help you choose the recommendation algorithms you need.
- Request integration@reteno.com for dynamic content substitution setup
- Reteno tracks system events automatically. To send custom events, follow the manual
  at the link.
- Workflow start/stop conditions can be configured based on events or contact field
  changes.
- Workflows triggered by the event are sent in response to a user’s action (trigger).
- Regular workflows are only launched for a dynamic segments.
- Checking the allowed time when sending single messages first occurs according to
  the contact's time zone; if it is not set, according to the time zone of the Reteno
  account.
- Checking the allowed time for sending messages to segment occurs according to the
  time zone of the Reteno account.
- To keep messages fresh, this block avoids re-sending the same message variant in
  regular workflows for 4 days.
- 'Recommendation: Add at least 8 variants.'
- You can add or remove a contact only from a list segment.
- After removal, the contact remains in the system.
- Webhook block is used only in combination with the block for sending a single message
  in any channel.
- Sprayer will trigger the event only if the segment includes less than 1 000 contacts.
- API requires OAuth2 authentication with refresh token.
- Rate limits apply to API calls.
- The primary identifier is ContactId. If it is not specified but at least one of
  the other identifiers is provided, ContactId will be automatically added to the
  event.
- For data consistency, provide parameter names according to the specified list.
- Workflows and their blocks with errors are marked with a warning icon.
- Only the contact’s data (fields + additional fields) and the parameters from an
  event that triggered a workflow with a webhook can be sent through a webhook.
- In most cases, data transfer in webhooks is configured in JSON format, but XML and
  text formats are also available.
- Payment parameters can be inserted into the email as dynamic variables.
- Data is sent as parameters in the request body
- A contact becomes available (active) for your campaigns only after they confirm
  their subscription in the confirmation email.
- If you have several forms assigned to different confirmation emails, create separate
  workflows and events for each form.
- Customer data is often sent to Reteno using the Add/update contacts API method.
- You can't send promotional emails without their permission.
- When checking the additional field, the values `m` and `M”` (`f` and `F`) will be
  considered different. The value in the contact field must match the value in the
  workflow parameters.
- Contacts in the segment are recalculated daily from 3 a.m. to 4 a.m.
- You need to create corresponding messages before getting started with a workflow.
- The extrenalCustomerId and ContactId parameters are matched when the order is first
  submitted.
- If the standard email parameter is passed in an order event, the variable in the
  Email input field in the workflow should also be called ${emailAddress}.
- The event that should trigger the workflow to collect feedback is orderDELIVERED.
- To send extra campaigns, you need to subscribe to any Extra features pricing plan.
- Setting reminders based on users' time preferences is essential for improving user
  experience and customer retention.
- The time must be sent in the HH:MM or HH:MM:SS format.
- If the field of a contact participating in the workflow has a missing or written
  in an incorrect format value, the message will not be sent.
- Ensure to handle OAuth2 token expiration.
- Notifications are triggered based on specific events or thresholds.
- These are the basic settings that you should check if you encounter problems. If,
  after review, you still have troubles, please contact our support team.
- The use of user profile variables has some potential issues.
- To personalize order data, use Velocity variables in the email template.
- The mobile push notification will be displayed differently on different devices,
  but we recommend writing no more than 40 characters.
- The file is accessed by anyone with the link, without Google authorization required.
- The first line of the sheet contains headers in Latin.
- For multilingual messages, name the file sheets with the corresponding language
  codes according to ISO 639-1 or RFC 5646 for dialects.
- Existing entries in the Revenue table (for orders placed after 03.08.2024) can be
  updated along with the upload of new orders. Updating may be necessary, for example,
  if the total cost of the order has changed.
- You don’t need to pre-create PostgreSQL tables. They will be generated automatically
  at the first export, and since that all the incoming data will be updated.
- The container must have smart properties so that the system correctly substitutes
  the content from the data source.
- Integration enables secure data flow between Reteno and BigQuery.
- You don’t need to pre-create BigQuery tables. They will be generated automatically
  at the first export, and since then all the incoming data will be updated.
- Check authentication setup for OAuth2.
- Connection to the external database doesn’t presuppose contact import. Segmentation
  is only available for contacts that exist both in your Reteno account and in the
  external database. Synchronize and update contacts before creating campaigns.
- Feature is available only in the Growth and Enterprise plans.
- Requires API token for access.
- This type is suitable for both single and bulk campaigns.
- Promo codes can be sent from workflows.
- One promo code will be used only once.
- It is impossible to delete uploaded, but not used promo code.
- This method works only for emails.
- Promo codes are encoded using a key which should remain confidential.
- The initialization vector must always be 12345678.
- Some segments may return nulls in deeply nested fields
- Segmentation by events is available depending on your pricing plan. To activate
  it, contact to sales@reteno.com.
- Segmentation by events in messages is included in paid plans. To enable it, please
  contact us at sales@reteno.com.
- Some endpoints may have rate limits
- Geotargeting is included in all plans except Startup.
- Use purchase possibility segmentation when you want to reduce the cost of your messaging
  without losing the potential revenue it should generate.
- Effective marketing is goal-driven.
- By understanding where users are in their lifecycle, you can create target segments
  for automated and bulk marketing campaigns.
- Lifecycle segmentation relies on in-app events and values from additional user fields.
- The number of language versions you can create is limited only by the pricing package.
- When deleting a language version, you can select multiple versions.
- Contacts without language data will receive the message in the default language.
- Multilingualism in messages is only supported for some dialects; if you still need
  to find the one you need, please contact our support.
- Adding the Preferred Language to the User Profile
- Changes made manually would always rank higher than the info automatically collected
  by the system.
- During the import, the data is always updated (replaced)!
- API requires setup of connected app in Reteno
- In-Apps and Web Widgets are counted by Views instead of Sent and Delivered due to
  the specifics of their functionality.
- In some cases, the Delivery Rate metric may temporarily show >100%. This is expected
  behavior caused by period-based reporting and workflow timers.
- OAuth2 with refresh token is required
- Web Push reports provide information about your campaigns' results, including conversions,
  key metrics, platforms, operating systems, browsers, and users’ devices’ languages.
- By default, when the system receives a 200 OK status in response, the message gets
  the Delivered status.
- Requires OAuth2 authentication for access
- Ensure to handle token expiration correctly
- Send a request to sales@reteno.com to activate the multilanguage option in your
  account.
- UTM tags are automatically generated when users click on links.
- For correct automatic channel labeling, the utm_medium field should be filled with
  the $mediaType value.
- 'Check the settings for transferring UTM tags in your Reteno account: it must be
  activated.'
- Exporting Segments From Reports
- Conversion tracking is only available for user events where the Mark as conversion
  active option is enabled.
- The overview shows statistics for the last elapsed day; recalculation ends before
  02:00 UTC
- Unsubscribe Page/Unsubscribe Reasons Analysis
- The Two-click unsubscribe option is enabled by default in the settings.
- Webhooks for Tracking Activity
- Webhook requests are sent in JSON format.
- The system stores order events for 5 years. All this data you can use for segmentation.
- Order Transfer Using the Generate Event API Method
- To save orders in the system, you need to set up segmentation by events as the event
  contains a contact identifier.
- If you don’t set your own parameters, the system will search the identifier based
  on default parameters (email, phone, etc.).
- Order Transfer Using the Add Orders API Method
- Transfer up to 1000 orders in one request.
- The date event parameter must be passed in the ISO 8601 format with a specified
  time zone offset relative to UTC.
- Integration via Zapier
- Integration allows automation of routine tasks such as sending emails or notifications.
- Triggers and actions can be customized based on events in connected platforms.
- 'The ''category'': ''MOBILE'' is the hard-coded mandatory parameter.'
- Use upper_case in the osType parameter code.
- Use amplitude_id as your externalUserId in the SDK settings.
- Do not send events from Amplitude that are included in Reteno app lifecycle SDK
  so as not to duplicate them
- The migration process aims to ensure accurate data transfer while maintaining its
  integrity and minimizing disruption.
- You can’t transfer templates of push notifications or SMS. You need to create these
  messages anew.
- The width of the letter should not exceed 600 pixels.
- The template should be created using a table layout.
- Fonts in the layout should be standard, recommended font is Arial.
- It is necessary to use a balance of text and images.
- MFA is a must-have for managing user access to your account.
- In order to check or enable auto-sync, go to your phone settings (Date and time)
  and set the slider to the right.
- Time on both desktop and smartphone should be synchronized. Go to Settings → Time
  & Language and enable Set time automatically.
- Inviting users is only available in accounts with activated multi-factor authentication.
- Only one custom domain can be active.
- Links wrapped in the `esclick.me` domain that were sent earlier will continue to
  work.
- User Time Zone controls how time appears in the UI for that user.
- Account Time Zone controls the default send time for messages and workflows.
- GDPR compliance features available
- In 2025, we pushed Reteno into a new gear — super-charging messaging, widening the
  API’s reach, giving widgets and workflows extra brains, and weaving AI into everyday
  routines.
- Contact cards can now be enriched with location data based on the IP address from
  which SDK events are sent if such events do not contain location parameters.
- You can now set a UTM tag for each message, making tracking clicks on relevant links
  easier.
- Integration with the new provider AlphaSMS is available for SMS campaigns.
- Workflow automation is essential for engaging users effectively.
- OAuth2 authentication is required to access API endpoints.
- Requires OAuth2 authentication with refresh tokens.
- Giving users the ability to choose their own days and times for reminders is more
  effective than setting the same time for everyone.
- Ensure the access token is valid before making API calls.
- Reteno provides many additional features for creating mobile pushes, such as using
  custom data, adding multilanguage versions, and more.
- Following these best practices will ensure your Health & Fitness app’s emails are
  designed to engage and support users.
- Our platform is a marketing automation software, not a validator. But there's also
  a number of free email validation features.
- Build templates that don't exceed 102KB.
- 'Add only important information. Give a link to the data that can be found on the
  website: product description, detailed reviews, testimonials, etc.'
- Don't try to include all your offers in one campaign. Instead, create a series of
  emails and send to corresponding segments.
- Don't send emails with the same subject line. Gmail usually combines such emails
  into one series, increasing the email weight.
- Ensure your email domain is authenticated with SPF, DKIM, and DMARC for at least
  3 months.
- You must send at least 5,000 emails per month from your domain.
- Some endpoints may have rate limiting
- Requires OAuth2 authentication setup.
- You should ask Google Support to whitelist the address from which you are going
  to send emails.
- Messages can be delivered to all users authorized via phone number, email, or mobile
  push token.
- The delivery and clicks analytics methods described are intended for projects that
  have not installed Reteno SDK.
- Requires setup of connected app in API
- To use Recommendations for Website, you need to set up web tracking and subscribe
  to the corresponding pricing plan.
- The validity period of a token starts from the moment of its creation.
- Default is 172,800 seconds for an Access Token and 2,592,000 seconds for a Refresh
  Token.
- The API key has access to your Reteno account. Keep it secure and don’t expose it
  publicly in insecure communication channels.
- Assigning the description for each mobile access key allows you to identify it and
  understand which integration it is associated with.
- If you do not need to use the access key, disable it by clicking its slide button.
- If you are developing app modules, read the instructions on installing the SDK via
  Swift Package Manager.
- Starting from Reteno SDK 2.0.4 onwards, the start method was updated.
- Starting from Reteno SDK 2.5.10 onwards, RetenoConfiguration was updated with useCustomDeviceId
  parameter.
- groupNamesInclude and groupNamesExclude parameters are available in SDK version
  1.0.0 or later.
- You can't provide to the SDK anonymous user phone and email attributes.
- Tracking custom events must be configured manually.
- Reteno depends on method swizzling to automatically log screen views.
- SDK Version App Inbox is available in version 1.2.0 and later.
- 'Track activity via Reteno.ecommerce().logEvent(type: Ecommerce.EventType, date:
  Date, forcePush: Bool) method.'
- Using Universal links requires providing your own link handler.
- You must enter the values in Action ID and Text for this button to work correctly.
- You have to use different Action IDs when you add multiple buttons.
- Available in iOS 15 and later
- Ensure the URL for images is a direct link and uses HTTPS.
- From Reteno SDK version 2.0.0 onwards, you can pause on startup.
- 'One more method for controlling pause is: Reteno.pauseInAppMessages(isPaused: <Bool>)'
- 'To enable Pause provide isPaused: true to Reteno.pauseInAppMessages(), to disable
  provide isPaused: false.'
- 'PauseBehaviour provides two possible cases: .skipInApps, .postponeInApps'
- To set up SDK you need an SDK_ACCESS_KEY, visit Managing Mobile SDK Access Keys
  to get it.
- Initialization settings are crucial for correct SDK functioning
- Access key can be provided directly in the SDK constructor or in config.
- externalUserId should not be null or empty, or IllegalArgumentException will be
  thrown.
- You can track user attributes only for users with external user IDs.
- Correct planning and naming of custom events in mobile apps are essential for collecting
  meaningful data.
- In DebugMode events saved to local storage are pushed to REST API every 10 seconds
  and are stored in offline mode up to 1 hour.
- App Inbox is available in version 1.2.0 and later
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: Check the request payload for errors.'
- '401 Unauthorized: Verify OAuth token validity.'
- '404 Not Found: Ensure the contact identifier exists.'
- 'INVALID_FILE_FORMAT: Ensure the file is in the correct format.'
- 'CONTACT_FIELD_ERROR: Check contact fields for errors.'
- '401 Unauthorized: Check your authentication credentials'
- '404 Not Found: Verify the endpoint URL'
- '500 Internal Server Error: Try again later'
- '400 bad request: Parameters do not meet the specified structure'
- The contact does not have an application token
- 'Device token not registered: Check the certificate''s validity and if it is used
  in the proper environment.'
- 'The authenticated sender ID is different from the sender ID for the registration
  token: Try to expand permissions in the service account.'
- 'MOB_PUSH_GENERAL_ERROR: Contact our support team for a detailed analysis.'
- 'Request parameters were invalid: Adjust the settings in the admin panel.'
- 'InvalidProviderToken: Create a new APNs Auth Key.'
- 'badDeviceToken: Contact our support team to switch the Sandbox configuration to
  true.'
- 'Invalid registration token/The registration token is not a valid FCM: '
- 'Unauthorized: Check your API key or token'
- 'SMTP Error 550: The recipient does not exist or is incorrectly specified.'
- 'SMTP Error 421: The message was not delivered due to temporary problems with the
  mail server or due to exceeding mail traffic limits.'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify API key and permissions.'
- '401 Unauthorized: resubmit the request to get the token'
- '401 Unauthorized: Token is invalid or not provided.'
- '401 Forbidden: Authentication failed. The system retries such requests.'
- '429 Too Many Requests: The message number limit is exceeded. The system retries
  such requests.'
- '400 Bad Request: An issue with payload processing. The system does NOT retry such
  requests.'
- '500 Internal Server Error: Temporary processing issues. The system retries such
  requests.'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify the access token.'
- '429 Too Many Requests: Throttle your requests.'
- variantId r262v361 was not found in config
- 'The resource is not available at the specified URL: The resource must be accessible
  via HTTP or HTTPS'
- 'Unsupported file format: Only XML files are supported'
- 'Errors in product parameters: The product feed must conform to one of the Google
  RSS 2.0 XML specifications'
- 'EVENT_NOT_FOUND: Check if the event is correctly configured.'
- 'SEGMENT_NOT_FOUND: Ensure the segment exists and is correctly referenced.'
- '401 Unauthorized: Ensure tokens are valid.'
- '429 Too Many Requests: Rate limit exceeded.'
- Launch errors are marked with a warning icon.
- 'MISSING_REQUIRED_PARAMETERS: Ensure all required parameters are included'
- 'INVALID_EVENT_TYPE: Check the event type key and parameters'
- '401 Unauthorized: Check your client credentials.'
- '403 Forbidden: You do not have permission to access this resource.'
- '400 Bad Request: Check the notification parameters.'
- '401 Unauthorized: Verify authentication credentials.'
- '404 Not Found: Ensure the endpoint is correct.'
- 'INVALID_REQUEST: Check the request parameters'
- 'AUTHENTICATION_ERROR: Recheck OAuth credentials'
- '400 Bad Request: Verify request parameters.'
- '401 Unauthorized: Recheck OAuth token.'
- '401 Unauthorized: Ensure the token is valid.'
- '404 Not Found: Verify the endpoint and resource.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'INVALID_CREDENTIALS: Check client ID and secret'
- 'TOKEN_EXPIRED: Refresh token and retry'
- '400 BAD_REQUEST: Validate request parameters'
- '200: Request successful'
- One or more required fields are empty, or the format is incorrect.
- 'All the following optional fields are empty: externalCustomerId, email, phone.
  At least one of them is required for order creation.'
- '400 Bad Request: Check the request payload for required fields.'
- '401 Unauthorized: Ensure OAuth token is valid and has correct scopes.'
- '401 Unauthorized: Check your access token.'
- '400 Bad Request: Verify the request parameters.'
- '401 Unauthorized: Check your credentials and token.'
- '400 Bad Request: Check the email format and required fields.'
- '401 Unauthorized: Ensure the sender is whitelisted and dynamic emails are enabled.'
- '403 Forbidden: Check API key permissions'
- '404 Not Found: Verify endpoint URL'
- '500 Internal Server Error: Retry request later'
- '401 Unauthorized: Check your API key or access token.'
- '404 Not Found: The requested resource could not be found.'
- '400 Bad Request: Check if the URL format is correct'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Client ID
  - Client Secret
client:
  base_url: https://reteno.com
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
