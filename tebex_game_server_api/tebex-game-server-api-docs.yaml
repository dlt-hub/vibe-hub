resources:
- name: categories
  endpoint:
    path: /api/accounts/{token}/categories
    method: GET
    data_selector: data
- name: categories_with_packages
  endpoint:
    path: /api/accounts/{token}/categories?includePackages=1
    method: GET
    data_selector: data
- name: category_info
  endpoint:
    path: /api/accounts/{token}/categories/{categoryId}
    method: GET
    data_selector: data
- name: category_info_with_packages
  endpoint:
    path: /api/accounts/{token}/categories/{categoryId}?includePackages=1
    method: GET
    data_selector: data
- name: package_by_id
  endpoint:
    path: /api/accounts/{token}/packages/{packageId}
    method: GET
    data_selector: data
- name: all_packages
  endpoint:
    path: /api/accounts/{token}/packages
    method: GET
    data_selector: data
- name: baskets
  endpoint:
    path: /api/accounts/{token}/baskets
    method: POST
    data_selector: data
    params: {}
- name: basket_auth
  endpoint:
    path: /api/accounts/{token}/baskets/{basketIdent}/auth
    method: GET
    data_selector: '[]'
    params: {}
- name: add_package
  endpoint:
    path: /api/baskets/{basketIdent}/packages
    method: POST
    data_selector: data
    params: {}
- name: remove_package
  endpoint:
    path: /api/baskets/{basketIdent}/packages/remove
    method: POST
    data_selector: data
    params: {}
- name: apply_creator_code
  endpoint:
    path: /api/accounts/{token}/baskets/{basketIdent}/creator-codes
    method: POST
    data_selector: data
    params: {}
- name: remove_creator_code
  endpoint:
    path: /api/accounts/{token}/baskets/{basketIdent}/creator-codes/remove
    method: POST
    data_selector: data
    params: {}
- name: apply_gift_card
  endpoint:
    path: /api/accounts/{token}/baskets/{basketIdent}/giftcards
    method: POST
    data_selector: data
    params: {}
- name: remove_gift_card
  endpoint:
    path: /api/accounts/{token}/baskets/{basketIdent}/giftcards/remove
    method: POST
    data_selector: data
    params: {}
- name: apply_coupon
  endpoint:
    path: /api/accounts/{token}/baskets/{basketIdent}/coupons
    method: POST
    data_selector: data
    params: {}
- name: remove_coupon
  endpoint:
    path: /api/accounts/{token}/baskets/{basketIdent}/coupons/remove
    method: POST
    data_selector: No content
    params: {}
- name: fetch_basket
  endpoint:
    path: /api/accounts/{token}/baskets/{basketIdent}
    method: GET
    data_selector: data
    params: {}
- name: categories
  endpoint:
    path: /api/accounts/{token}/categories
    method: GET
    data_selector: data
    params:
      includePackages: '1'
- name: category
  endpoint:
    path: /accounts/{token}/categories/{categoryId}
    method: GET
    data_selector: data
    params: {}
- name: category_with_packages
  endpoint:
    path: /accounts/{token}/categories/{categoryId}?includePackages=1
    method: GET
    data_selector: data
    params: {}
- name: package
  endpoint:
    path: /accounts/{token}/packages/{packageId}
    method: GET
    data_selector: data
    params: {}
- name: packages
  endpoint:
    path: /accounts/{token}/packages
    method: GET
    data_selector: data
    params: {}
- name: basket_auth
  endpoint:
    path: /api/accounts/{token}/baskets/{basketIdent}/auth
    method: GET
    data_selector: '[]'
    params: {}
- name: create_basket
  endpoint:
    path: /api/accounts/{token}/baskets
    method: POST
    data_selector: data
    params: {}
- name: add_packages
  endpoint:
    path: /adding-packages
    method: POST
    data_selector: variable_data
- name: gifting_packages
  endpoint:
    path: /developers/headless-api/gifting-packages
    method: POST
    data_selector: package_id
    params: {}
- name: apply_creator_code
  endpoint:
    path: /api/accounts/{token}/baskets/{basketIdent}/creator-codes
    method: POST
    data_selector: data
    params: {}
- name: remove_creator_code
  endpoint:
    path: /api/accounts/{token}/baskets/{basketIdent}/creator-codes/remove
    method: POST
    data_selector: data
    params: {}
- name: apply_gift_card
  endpoint:
    path: /accounts/{token}/baskets/{basketIdent}/giftcards
    method: POST
    data_selector: data
    params: {}
- name: remove_gift_card
  endpoint:
    path: /accounts/{token}/baskets/{basketIdent}/giftcards/remove
    method: POST
    data_selector: data
    params: {}
- name: apply_coupon
  endpoint:
    path: /accounts/{token}/baskets/{basketIdent}/coupons
    method: POST
    data_selector: data
    params: {}
- name: remove_coupon
  endpoint:
    path: /accounts/{token}/baskets/{basketIdent}/coupons/remove
    method: POST
    data_selector: data
    params: {}
- name: basket
  endpoint:
    path: /api/accounts/{token}/baskets/{basketIdent}
    method: GET
    data_selector: data
- name: categories
  endpoint:
    path: /api/accounts/{token}/categories
    method: GET
    data_selector: data
    params: {}
- name: update_tier
  endpoint:
    path: /api/accounts/{token}/tiers/{tierId}
    method: PATCH
    data_selector: success
    params: {}
- name: webstore
  endpoint:
    path: /api/accounts/{token}
    method: GET
    data_selector: data
    params: {}
- name: pages
  endpoint:
    path: /accounts/{token}/pages
    method: GET
    data_selector: data
    params: {}
- name: baskets
  endpoint:
    path: /accounts/{token}/baskets/{basketIdent}
    method: GET
    data_selector: data
    params: {}
- name: create_basket
  endpoint:
    path: /accounts/{token}/baskets
    method: POST
    data_selector: data
    params: {}
- name: basket_auth
  endpoint:
    path: /accounts/{token}/baskets/{basketIdent}/auth
    method: GET
    data_selector: ''
    params: {}
- name: categories
  endpoint:
    path: /accounts/{token}/categories
    method: GET
    data_selector: data
    params: {}
- name: categories_with_packages
  endpoint:
    path: /accounts/{token}/categories?includePackages=1
    method: GET
    data_selector: data
    params: {}
- name: category_info
  endpoint:
    path: /accounts/{token}/categories/{categoryId}
    method: GET
    data_selector: data
    params: {}
- name: categories
  endpoint:
    path: /api/accounts/{token}/categories/{categoryId}
    method: GET
    data_selector: data
    params:
      includePackages: '1'
- name: packages
  endpoint:
    path: /api/accounts/{token}/packages/{packageId}
    method: GET
    data_selector: data
    params: {}
- name: baskets_creator_codes
  endpoint:
    path: /api/accounts/{token}/baskets/{basketIdent}/creator-codes
    method: POST
    data_selector: data
    params: {}
- name: baskets_creator_codes_remove
  endpoint:
    path: /api/accounts/{token}/baskets/{basketIdent}/creator-codes/remove
    method: POST
    data_selector: No content
    params: {}
- name: apply_gift_card
  endpoint:
    path: /api/accounts/{token}/baskets/{basketIdent}/giftcards
    method: POST
    data_selector: data
    params: {}
- name: remove_gift_card
  endpoint:
    path: /api/accounts/{token}/baskets/{basketIdent}/giftcards/remove
    method: POST
    data_selector: data
    params: {}
- name: apply_coupon
  endpoint:
    path: /api/accounts/{token}/baskets/{basketIdent}/coupons
    method: POST
    data_selector: data
    params: {}
- name: remove_coupon
  endpoint:
    path: /api/accounts/{token}/baskets/{basketIdent}/coupons/remove
    method: POST
    data_selector: data
    params: {}
- name: add_package
  endpoint:
    path: /api/baskets/{basketIdent}/packages
    method: POST
    data_selector: data
    params: {}
- name: remove_package
  endpoint:
    path: /api/baskets/{basketIdent}/packages/remove
    method: POST
    data_selector: data
    params: {}
- name: update_package_quantity
  endpoint:
    path: /api/baskets/{basketIdent}/packages/{packageId}
    method: PUT
    data_selector: data
    params: {}
- name: update_tier
  endpoint:
    path: /api/accounts/{token}/tiers/{tierId}
    method: PATCH
    data_selector: data
    params: {}
- name: checkout
  endpoint:
    path: /api/checkout
    method: POST
    data_selector: Response
    params: {}
- name: basket
  endpoint:
    path: /baskets
    method: POST
    data_selector: response
    params: {}
- name: add_package
  endpoint:
    path: /baskets/{ident}/packages
    method: POST
    data_selector: response
    params: {}
- name: remove_package
  endpoint:
    path: /baskets/{ident}/packages/{rows.id}
    method: DELETE
    data_selector: response
    params: {}
- name: add_sale
  endpoint:
    path: /baskets/{ident}/sales
    method: POST
    data_selector: response
    params: {}
- name: baskets
  endpoint:
    path: /baskets/{ident}
    method: GET
    data_selector: basket
    params: {}
- name: recurring_payments
  endpoint:
    path: /recurring-payments/{reference}
    method: GET
    data_selector: recurring_payment
    params: {}
- name: checkout_process
  endpoint:
    path: /{ident}
    method: GET
- name: webhook_events
  endpoint:
    path: /webhooks
    method: POST
    data_selector: payload
- name: basket
  endpoint:
    path: /api/baskets/{ident}
    method: GET
    data_selector: basket
    params: {}
- name: baskets
  endpoint:
    path: /api/baskets
    method: POST
    data_selector: Basket
    params: {}
- name: add_package
  endpoint:
    path: /api/baskets/{ident}/packages
    method: POST
    data_selector: Basket
    params: {}
- name: remove_row
  endpoint:
    path: /api/baskets/{ident}/packages/{rows.id}
    method: DELETE
    data_selector: ''
    params: {}
- name: add_sale
  endpoint:
    path: /api/baskets/{ident}/sales
    method: POST
    data_selector: Basket
    params: {}
- name: checkout
  endpoint:
    path: /api/checkout
    method: POST
    data_selector: Response
    params: {}
- name: fetch_payment
  endpoint:
    path: /api/payments/{txnId}
    method: GET
    data_selector: Response
    params: {}
- name: refund_payment
  endpoint:
    path: /api/payments/{txnId}/refund
    method: POST
    data_selector: Response
    params: {}
- name: fetch_recurring_payment
  endpoint:
    path: /api/recurring-payments/{reference}
    method: GET
    data_selector: Response
    params: {}
- name: update_subscription
  endpoint:
    path: /api/recurring-payments/{reference}
    method: PUT
    data_selector: Response
    params: {}
- name: cancel_recurring_payment
  endpoint:
    path: /api/recurring-payments/{reference}
    method: DELETE
    data_selector: Response
    params: {}
- name: recurring_payment
  endpoint:
    path: /recurring-payments/{reference}/status
    method: PUT
    data_selector: RecurringPayment
    params: {}
- name: checkout
  endpoint:
    path: /checkout
    method: POST
    data_selector: data
    params:
      ident: checkout request ident
- name: tebex-checkout
  endpoint:
    path: /tebex-checkout
    method: GET
    data_selector: checkout
    params: {}
- name: login_verification
  endpoint:
    path: /tebex/verification.php
    method: GET
    data_selector: response
    params:
      ign: username
      ip: ip_address
      country: country_code
- name: create_referral
  endpoint:
    path: /api/referrals
    method: POST
    data_selector: data
    params: {}
- name: get_referral
  endpoint:
    path: /api/referrals/:reference
    method: GET
    data_selector: data
    params: {}
- name: get_referral_config_file
  endpoint:
    path: /api/referrals/:reference/config/:platform
    method: GET
    data_selector: data
    params: {}
- name: game_types
  endpoint:
    path: /api/game-types
    method: GET
    data_selector: data
notes:
- Integrate product delivery into your game server.
- Recommended to read the quick start guide before beginning integration.
- If you're developing a game for UE5, Tebex makes monetization simple.
- Tebex provides an example integration script for Unity games with a feature-complete
  implementation of Headless and Plugin API.
- This repository serves as our full Tebex SDK for projects using C#.
- Global variables are variables which are available across all pages of your store.
- Modules allow you to add dynamic modules on your store, which you can configure
  from within your creator panel on the sidebar section.
- No-code customisation for your template directly from the creator panel.
- Stores that receive our developer plan won't be able to transact real payments on
  their store.
- Hiding the footer on your webstore will void our terms and conditions and will result
  in us having to disable your store from the public.
- In order to support certain features of Tebex, your custom template must be kept
  up-to-date.
- The 'token' parameter in the path is required to identify the webstore.
- Requires OAuth login mechanism for basket creation.
- Packages that deliver a gift card to the user should include 'giftcard_to' mapped
  to the e-mail address that will receive the gift card.
- Packages that deliver Discord actions should include the user's 'discord_id'.
- Packages that deliver game server commands should include the 'username_id' of the
  user, dependent on your store type.
- Tiered categories require authenticated user.
- To include package information, add '?includePackages=1' to the URL.
- Successful response returns the webstore's information.
- Requires user to be logged in for certain actions.
- Using the Checkout API requires prior approval from our compliance teams. Please
  note that the Checkout API is not available to some UGC creators, such as those
  on FiveM or RedM.
- Your server can receive Webhooks from Tebex after events occur on our platform (successful
  payment, refunds, etc.)
- It is important to verify that webhook contents always match the items and amount
  you are expecting.
- Uses JavaScript for integration
- Checkout must be configured before launch
- Requires both opening and closing HTML tags for Web Components.
- Webhooks will not be sent to an endpoint unless it has been validated first.
- Please only use this feature if you know how to use it, incorrectly using this system
  will prevent customers from logging in to your store.
- Errors are JSON format and are based around the standard HTTP status codes.
- The one-click setup process is only available to approved partners of the Tebex
  Checkout For Server Hosts program.
- To verify that the webhook has been sent from Tebex, we send a X-Tebex-Signature
  header that contains a HMAC using SHA256 created by the POST body (JSON) using your
  Webhook Signature Secret as the key.
- You can find your Webhook Signature Secret within the setting section of your affiliate
  panel.
errors:
- '422: The provided webstore ID is invalid.'
- '422: The provided request is invalid.'
- '422: The provided webstore ID or basket ID is invalid.'
- '401 Unauthorized: Check your project ID and secret key.'
- '404: Basket not found.'
- '404: Recurring payment not found.'
- '422: Unprocessible Entity. An invalid status was provided or the recurring payment
  cannot be processed.'
- 400 Bad Request - User data validation error
- 401 / 403 - Authentication / Authorization (depending on if it's pre- or post- authentication
- 404 - Requested resource doesn't exist
- 5xx - Server side transitory errors
- '403 Forbidden: Invalid secret key provided.'
- '200: OK Game types successfully retrieved.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://headless.tebex.io
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
