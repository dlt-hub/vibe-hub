resources:
- name: invoices
  endpoint:
    path: /invoices
    method: GET
    data_selector: data
    params: {}
- name: clients
  endpoint:
    path: /clients
    method: GET
    data_selector: data
    params: {}
- name: invoices
  endpoint:
    path: /v2/invoices
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /v2/customers
    method: GET
    data_selector: data
    params: {}
- name: invoices
  endpoint:
    path: /v2/invoices
    method: GET
    data_selector: data
    params: {}
- name: invoices
  endpoint:
    path: /api/v2/invoices
    method: GET
    data_selector: data
    params: {}
- name: List Vat Types
  endpoint:
    path: /c/-company_id-/info/vat_types
    method: GET
- name: List Payment Methods
  endpoint:
    path: /c/-company_id-/info/payment_methods
    method: GET
- name: List Payment Accounts
  endpoint:
    path: /c/-company_id-/info/payment_accounts
    method: GET
- name: List Products
  endpoint:
    path: /c/-company_id-/products
    method: GET
- name: List Clients
  endpoint:
    path: /c/-company_id-/entities/clients
    method: GET
- name: List Suppliers
  endpoint:
    path: /c/-company_id-/entities/suppliers
    method: GET
- name: invoice
  endpoint:
    path: /invoices
    method: GET
    data_selector: records
- name: client
  endpoint:
    path: /clients
    method: GET
    data_selector: records
- name: invoices
  endpoint:
    path: /api/v2/invoices
    method: GET
    data_selector: data
    params: {}
- name: clients
  endpoint:
    path: /api/v2/clients
    method: GET
    data_selector: data
    params: {}
- name: suppliers
  endpoint:
    path: /c/{companyId}/entities/suppliers/{supplierId}
    method: GET
    data_selector: response
    params: {}
- name: suppliers
  endpoint:
    path: /c/{company_id}/entities/suppliers/{supplier_id}
    method: GET
    data_selector: response
    params: {}
- name: List User Companies
  endpoint:
    path: /user/companies
    method: GET
    data_selector: data.companies
- name: companies
  endpoint:
    path: /services/data/vXX.X/sobjects/Companies
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: companies
  endpoint:
    path: /services/data/vXX.X/sobjects/Company
    method: GET
    data_selector: records
- name: issued_documents
  endpoint:
    path: /c/{company_id}/issued_documents
    method: GET
    data_selector: records
- name: invoices
  endpoint:
    path: /api/v2/invoices
    method: GET
    data_selector: data
    params: {}
- name: suppliers
  endpoint:
    path: /api/v2/suppliers
    method: GET
    data_selector: Data.Suppliers
- name: suppliers
  endpoint:
    path: /api/v2/suppliers
    method: GET
    data_selector: data
    params: {}
- name: suppliers
  endpoint:
    path: /api/v2/suppliers
    method: GET
    data_selector: data
- name: companies
  endpoint:
    path: /api/v2/companies
    method: GET
    data_selector: data
- name: suppliers
  endpoint:
    path: /suppliers
    method: GET
    data_selector: data
- name: suppliers
  endpoint:
    path: /api/v2/suppliers
    method: GET
- name: user_companies
  endpoint:
    path: /api/v2/user/companies
    method: GET
- name: suppliers
  endpoint:
    path: /api/v2/suppliers
    method: GET
    data_selector: data
- name: suppliers
  endpoint:
    path: /suppliers
    method: GET
- name: suppliers
  endpoint:
    path: /suppliers
    method: GET
    data_selector: data
- name: user_companies
  endpoint:
    path: /companies
    method: GET
    data_selector: data
- name: clients
  endpoint:
    path: /c/{company_id}/entities/clients
    method: GET
    data_selector: Data
    params: {}
- name: create_client
  endpoint:
    path: /c/{company_id}/entities/clients
    method: POST
    data_selector: Data
    params: {}
- name: issued_documents
  endpoint:
    path: /c/{company_id}/issued_documents
    method: GET
    data_selector: data
- name: issued_documents
  endpoint:
    path: /c/{company_id}/issued_documents
    method: GET
    data_selector: data
    params:
      type: invoice
- name: client
  endpoint:
    path: /api/client
    method: GET
    data_selector: data
    params: {}
- name: invoice
  endpoint:
    path: /api/invoice
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: invoices
  endpoint:
    path: /invoices
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: data
    params: {}
- name: received_documents
  endpoint:
    path: /c/{companyId}/received_documents
    method: GET
    data_selector: data
    params:
      fields: type,description
      type: expense
- name: ArchiveDocument
  endpoint:
    path: /api/archive_document
    method: GET
    data_selector: records
- name: CashbookEntry
  endpoint:
    path: /api/cashbook_entry
    method: GET
    data_selector: records
- name: Client
  endpoint:
    path: /api/client
    method: GET
    data_selector: records
- name: Supplier
  endpoint:
    path: /api/supplier
    method: GET
    data_selector: records
- name: Product
  endpoint:
    path: /api/product
    method: GET
    data_selector: records
- name: received_documents
  endpoint:
    path: /c/{companyId}/received_documents
    method: GET
    params:
      page: 1
      per_page: 50
- name: received_documents
  endpoint:
    path: /c/{companyId}/received_documents
    method: GET
    data_selector: data
    params:
      sort: -date,amount_net
      type: expense
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: invoices
  endpoint:
    path: /api/v2/invoices
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
notes:
- You must create an App on the Fatture in Cloud page
- 'Insert the Redirect URL: https://developers.fattureincloud.it/oauth-receiver.html'
- Uses OAuth2 with refresh token — requires setup of connected app in Fatture in Cloud
- Ensure to handle API rate limits.
- Check API documentation for available endpoints and their parameters.
- Requires valid OAuth2 tokens for API access
- Currently our APIs don't support the upload of XML, you can use the Create Issued
  Document request with only JSON format.
- Every account has a potentially huge number of entities and documents, so we need
  to preserve the functionality of our system by paginating the results.
- Check API limits to avoid throttling
- Ensure correct scopes are requested during authentication
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Requires setup of connected app in Fatture in Cloud
- API V2 requires OAuth2 authentication.
- NEVER put sensitive data or tokens on the public GitHub Discussions page!!!
- You must set an Access Token to make test calls.
- Redirect URL for OAuth2.0 must be set to https://developers.fattureincloud.it/oauth-receiver.html.
- Don't use it for public apps!
- The Utilities tool should be used only when your application is designed for internal
  usage only!
- If the request is paginated, it will be possible to select which page to show.
- You can export the whole set of resources.
- Ensure compliance with GDPR regulations regarding personal data
- Users can change cookie preferences at any time
- La presente informativa può essere soggetta a variazioni anche in conseguenza di
  eventuali modifiche e/o integrazioni normative.
- Il consenso all’utilizzo di cookie deve essere prestato in maniera libera, espressa
  e non ambigua.
- Only the minimum necessary rights should be assigned to a subject that requests
  access to a resource.
- If you are the admin of the company that you are using to call our APIs then setting
  the scopes as explained above is enough, but if you are a sub-user of that company
  then the admin must assign to you the permissions to access/manipulate the needed
  resources.
- OAuth2 authentication is required.
- OAuth 2.0 Device Code Flow is not generally available and must be enabled on demand.
- Access Token is valid only for the specified scopes.
- The generated token will never expire but can be manually revoked by the user.
- User needs to select permissions which may lead to 'Forbidden' errors.
- 'Your user must perform it manually, selecting the required scopes, so the operation
  is prone to errors in the scopes selection: the user could select the wrong scopes
  and also remove some previously assigned ones.'
- The OAuth 2.0 Authorization Code Flow is the preferred authentication method for
  our API.
- Never share the Client Secret!
- Keep your Client Secret in a secure location.
- Most methods are company-scoped and require a company_id parameter.
- You must use the 'id' field of one of those companies.
- You can check if the method needs the company_id parameter by looking for the /c/:company_id
  portion in the URL.
- Some methods may require company-scoped access.
- Some objects like Contact may return nulls in deeply nested fields
- Use the 'id' field of the company object.
- In the result you'll find a list of companies, you must use the 'id' field of one
  of those.
- Rate limits apply to API calls.
- OAuth 2.0 Device Code Flow for your app
- Store your Tokens safely!
- Access token and refresh token are sensitive data.
- Access token and refresh token should be saved securely.
- Access token and refresh token should be stored securely.
- The access token and refresh token should be stored securely.
- Ensure the redirect URI is set correctly to your OAuth handling script.
- Access and refresh tokens should be stored securely.
- The access token and refresh token should be saved securely.
- The SDKs abstract your code, making it possible to ignore the implementation details
- The SDKs provide models containing all the fields that represent the API resources
- Access token should be stored securely.
- Client secret must not be shared or published.
- Pagination is managed through next_page_url in the response.
- Requires setup of access token to access API
- Zapier integration is in beta phase
- Requires setup of connected app in Fatture in Cloud.
- API responses may include null values in certain fields.
- Not all requests support response customization.
- The APIs are automatically enabled for all Fatture in Cloud users, so you don't
  need to take any action to activate them.
- If a certain feature is not included in your current plan on the Fatture in Cloud
  website, it will also be unavailable through our APIs.
- Pagination is strictly related to the Sorting functionality
- The token is valid for the 'received_documents:r' scope needed to perform operations.
- To prevent abuse, avoid slowdowns, and ensure that all users make responsible use
  of our APIs, we enforce quota limits.
- If you perform too many requests you may exceed your quota; in this case, you will
  receive a 403 Forbidden HTTP status code.
- Requires setup of OAuth2 credentials for access
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check request parameters for correctness.'
- '401 Unauthorized: Verify your OAuth token.'
- '401 Unauthorized: Check your token or request parameters'
- '404 Not Found: Verify the endpoint path'
- '400 Bad Request: Check input parameters'
- '401 Unauthorized: Verify token validity'
- '429 Too Many Requests: Rate limit exceeded'
- '401 Unauthorized: Check your credentials.'
- '403 Forbidden: Access denied.'
- '404 Not Found: Endpoint does not exist.'
- '401 Unauthorized: This error is returned when there is some problem with the Access
  Token (it could be missing or invalid)'
- '403 Forbidden: It means that you are trying to access some resource without having
  the proper permissions'
- '401 Unauthorized: Recheck OAuth credentials'
- '400 Bad Request: Check request parameters'
- '403 NO PERMISSION: Admin must assign the necessary permissions.'
- 'authorization_pending: The request was legit, but the user didn''t complete the
  validation step yet.'
- 'slow_down: Your code is polling too frequently, you should wait a little more.'
- 'access_denied: The user completed the validation step but refused to grant the
  permissions.'
- 'expired_token: The user didn''t complete the validation step in time, and the Device
  Code expired.'
- '200 OK: Access Token is valid and provided correctly.'
- 'Forbidden: User did not select the required scopes for the application.'
- permissions errors, not only related to the new scopes but also the old ones.
- 403 The given user is not authorized to use this application.
- '401 Unauthorized: Check your access token.'
- '404 Not Found: The requested resource does not exist.'
- '500 internal server error: Handle errors appropriately.'
- '401 Unauthorized: Check client credentials or token expiration.'
- '403 Forbidden: Insufficient permissions for the requested resource.'
- '401 Unauthorized: Check your Client ID and Client Secret.'
- '401 Unauthorized: Check client ID and secret.'
- '404 Not Found: Check the endpoint path.'
- '401 Unauthorized: Recheck access token'
- '401 Unauthorized: Check client credentials and token validity'
- '429 Too Many Requests: Reduce request rate'
- '403 Forbidden: If the limit is exceeded.'
- '429 Too Many Requests: If the limit is exceeded in a short time.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuth2AuthorizationCodeManager
  - Configuration
  - ModifySupplierRequest
  - OAuth2AuthorizationCode
  - OAuth2TokenResponse
  - Scope
client:
  base_url: https://api.fattureincloud.it
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://api.fattureincloud.it/oauth/token
    client_id: '{{ dlt.secrets[''fatture_api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''fatture_api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''fatture_api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
