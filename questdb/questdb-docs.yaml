resources:
- name: buffer
  endpoint:
    path: /ingress
    method: POST
    data_selector: buffer
    params: {}
- name: data
  endpoint:
    path: /ingress
    method: POST
    data_selector: records
- name: trades
  endpoint:
    path: /ingress/trades
    method: POST
    data_selector: records
- name: trades
  endpoint:
    path: /trades
    method: POST
    data_selector: rows
- name: trades
  endpoint:
    path: /trades
    method: POST
    data_selector: rows
    params: {}
- name: trades
  endpoint:
    path: /trades
    method: POST
    data_selector: records
- name: trades
  endpoint:
    path: /trades
    method: POST
    data_selector: rows
notes:
- Auto-flushing is enabled.
- Byte-count threshold for the auto-flush logic is configurable.
- Time interval threshold for the auto-flush logic is configurable.
- Row count threshold for the auto-flush logic is configurable.
- The buffer is automatically cleared after flushing.
- Support for NumPy arrays requires QuestDB server version 9.0.0 or higher.
- Auto-flushing is enabled if thresholds are set
- Protocol version 2 requires QuestDB server version 9.0.0 or higher
- All timestamps are always converted to nanoseconds and in the UTC timezone. Timezone
  information is dropped before sending and QuestDB will not store any timezone information.
- It is an error to specify both table_name and table_name_col.
- 'Server Requirement: This feature requires QuestDB server version 9.0.0 or higher.'
- Uses ILP/HTTP protocol for better error feedback and transaction control.
- It is highly recommended to auto-flush or to flush in batches, rather than for every
  row.
- Use the ILP/HTTP protocol instead of ILP/TCP for better error reporting and transaction
  control.
- Uses ILP/HTTP protocol for better feedback on errors and transaction control.
- Keys are case-sensitive.
- The addr=host:port key is mandatory.
- The addr key is mandatory and specifies the hostname and port of the QuestDB server.
- The designated timestamp is expected in Nanoseconds, but timestamps in other columns
  are expected in Microseconds.
- Timestamps expected in Nanoseconds for designated timestamp.
- 'If you canâ€™t initially see your data through a select SQL query straight away,
  this is normal: by default the database will only commit data it receives though
  the line protocol periodically to maximize throughput.'
- 'For dev/testing you may want to tune the following database configuration parameters
  as so: cairo.max.uncommitted.rows=1, line.tcp.maintenance.job.interval=100.'
errors:
- 'ArrayError: Error related to arrays'
- 'AuthError: Authentication issue encountered'
- 'BadDataFrame: DataFrame is invalid'
- 'ConfigError: Configuration issue detected'
- 'CouldNotResolveAddr: Unable to resolve address'
- 'HttpNotSupported: HTTP protocol not supported'
- 'InvalidApiCall: API call is not valid'
- 'InvalidName: Name provided is invalid'
- 'InvalidTimestamp: Timestamp provided is invalid'
- 'InvalidUtf8: UTF-8 encoding issue'
- 'ProtocolVersionError: Issue with protocol version'
- 'ServerFlushError: Error occurred during server flush'
- 'SocketError: Socket related issue'
- 'TlsError: TLS related issue'
- Invalid None value in a column raises an exception during serialization.
- Datetimes before 1970-01-01 00:00:00 UTC are not supported.
- ArrayError
- AuthError
- BadDataFrame
- ConfigError
- CouldNotResolveAddr
- HttpNotSupported
- InvalidApiCall
- InvalidName
- InvalidTimestamp
- InvalidUtf8
- ProtocolVersionError
- ServerFlushError
- SocketError
- TlsError
- 'IngressError: Error during data ingestion'
- 'ILP/TCP Server disconnects: If the server receives invalid data over ILP/TCP it
  will drop the connection.'
auth_info:
  mentioned_objects: []
client:
  base_url: http://localhost:9000
  headers:
    Accept: application/json
source_metadata: null
