resources:
- name: api_sessions
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: records
- name: health_check
  endpoint:
    path: /health
    method: GET
    data_selector: status
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: API Attack Surface Management
  endpoint:
    path: /api-attack-surface/overview/
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api_protection
  endpoint:
    path: /api/protection
    method: GET
    data_selector: records
    params: {}
- name: vulnerabilities
  endpoint:
    path: /api/vulnerabilities
    method: GET
    data_selector: records
    params: {}
- name: vulnerabilities
  endpoint:
    path: /api/v1/vulnerabilities
    method: GET
    data_selector: data
    params: {}
- name: vulnerabilities
  endpoint:
    path: /v1/objects/vuln
    method: POST
    data_selector: vulnerabilities
    params:
      limit: 50
      offset: 0
      filter:
        validated: true
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: attack_events
  endpoint:
    path: /api/v1/attack-events
    method: GET
    data_selector: records
    params: {}
- name: vulnerabilities
  endpoint:
    path: /api/v1/vulnerabilities
    method: GET
    data_selector: records
    params: {}
- name: attack_events
  endpoint:
    path: /api/v1/attack_events
    method: GET
    data_selector: results
- name: vulnerabilities
  endpoint:
    path: /api/v1/vulnerabilities
    method: GET
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: exception_list
  endpoint:
    path: /api/abuse/prevention/exception_list
    method: POST
    data_selector: exceptions
    params: {}
- name: rules
  endpoint:
    path: /api/abuse/prevention/rules
    method: POST
    data_selector: rules
    params: {}
- name: attack_analysis
  endpoint:
    path: /api/v1/attacks
    method: GET
    data_selector: attacks
- name: incident_analysis
  endpoint:
    path: /api/v1/incidents
    method: GET
    data_selector: incidents
- name: threat_management
  endpoint:
    path: /api/threat_management
    method: GET
    data_selector: records
    params: {}
- name: incident_analysis
  endpoint:
    path: /api/incident_analysis
    method: GET
    data_selector: records
    params: {}
- name: api_discovery
  endpoint:
    path: /api-discovery
    method: GET
    data_selector: records
- name: file_upload_restriction_policy
  endpoint:
    path: /mitigation-controls/file-upload-restriction
    method: POST
    data_selector: controls
    params: {}
- name: attack_analysis
  endpoint:
    path: /api/v1/attack-analysis
    method: GET
    data_selector: records
- name: incident_analysis
  endpoint:
    path: /api/v1/incident-analysis
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: attack_events
  endpoint:
    path: /api/v1/attack_events
    method: GET
    data_selector: data
    params: {}
- name: vulnerabilities
  endpoint:
    path: /api/v1/vulnerabilities
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: threats
  endpoint:
    path: /api/v1/threats
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /api/v1/incidents
    method: GET
    data_selector: data
    params: {}
- name: attack_events
  endpoint:
    path: /api/v1/attack_events
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: vulnerabilities
  endpoint:
    path: /api/v1/vulnerabilities
    method: GET
    data_selector: records
    params: {}
- name: ingress
  endpoint:
    path: /ingress
    method: GET
    data_selector: data
- name: node
  endpoint:
    path: /nodes
    method: GET
    data_selector: nodes
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Ingress Controller
  endpoint:
    path: /settings/api-tokens
    method: GET
    data_selector: tokens
    params: {}
- name: Wallarm Node
  endpoint:
    path: /nodes
    method: GET
    data_selector: nodes
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Wallarm Ingress
  endpoint:
    path: /settings/api-tokens
    method: GET
    data_selector: tokens
    params: {}
- name: myapp-internal
  endpoint:
    path: /myapp-internal
    method: GET
    data_selector: rules
    params: {}
- name: myapp-external
  endpoint:
    path: /myapp-external
    method: GET
    data_selector: rules
    params: {}
- name: postanalytics
  endpoint:
    path: /opt/wallarm/wstore/wstore.yaml
    method: GET
    data_selector: service.address
    params: {}
- name: node_yaml
  endpoint:
    path: /opt/wallarm/etc/wallarm/node.yaml
    method: GET
    data_selector: api
    params: {}
- name: node
  endpoint:
    path: /opt/wallarm/etc/wallarm/node.yaml
    method: GET
    data_selector: api
    params: {}
- name: wallarm_wstore_ssl_cert_file
  endpoint:
    path: /path/to/client.crt
    method: SET
    data_selector: null
    params: {}
- name: wallarm_wstore_ssl_key_file
  endpoint:
    path: /path/to/client.key
    method: SET
    data_selector: null
    params: {}
- name: wallarm_wstore_ssl_ca_cert_file
  endpoint:
    path: /path/to/ca.crt
    method: SET
    data_selector: null
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: attack_events
  endpoint:
    path: /api/v1/attack_events
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: vulnerabilities
  endpoint:
    path: /api/v1/vulnerabilities
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: postanalytics
  endpoint:
    path: /postanalytics
    method: GET
    data_selector: data
    params: {}
- name: postanalytics
  endpoint:
    path: /postanalytics
    method: GET
- name: apiFirewall
  endpoint:
    path: /controller/wallarm/apiFirewall
    method: GET
    data_selector: config
- name: attack_events
  endpoint:
    path: /api/v1/attack_events
    method: GET
    data_selector: data
    params:
      incremental: timestamp
- name: vulnerabilities
  endpoint:
    path: /api/v1/vulnerabilities
    method: GET
    data_selector: data
    params: {}
- name: status
  endpoint:
    path: /wallarm-status
    method: GET
    data_selector: requests
- name: proxy_configuration
  endpoint:
    path: /etc/nginx/sites-enabled/default
    method: GET
    data_selector: configuration
    params: {}
- name: api_discovery
  endpoint:
    path: /api/discovery
    method: GET
    data_selector: records
- name: filter_node_logs
  endpoint:
    path: /opt/wallarm/var/log/wallarm
    method: GET
    data_selector: logs
    params: {}
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: metrics
    params: {}
- name: wallarm_status
  endpoint:
    path: /wallarm-status
    method: GET
- name: wallarm-status
  endpoint:
    path: /wallarm-status
    method: GET
    data_selector: requests
    params: {}
- name: wallarm-status-prometheus
  endpoint:
    path: /wallarm-status-prometheus
    method: GET
    data_selector: requests
    params: {}
- name: wallarm-status
  endpoint:
    path: /wallarm-status
    method: GET
    data_selector: metrics
    params: {}
- name: wallarm_status
  endpoint:
    path: /wallarm-status
    method: GET
    data_selector: response
- name: wallarm_status_prometheus
  endpoint:
    path: /wallarm-status-prometheus
    method: GET
    data_selector: response
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: metrics
    params: {}
- name: http_inspector_acl_results_total
  endpoint:
    path: /wallarm_gonode_http_inspector_acl_results_total
    method: GET
- name: http_inspector_adjusted_counters_per_app_total
  endpoint:
    path: /wallarm_gonode_http_inspector_adjusted_counters_per_app_total
    method: GET
- name: http_inspector_adjusted_counters_per_host_total
  endpoint:
    path: /wallarm_gonode_http_inspector_adjusted_counters_per_host_total
    method: GET
- name: http_inspector_adjusted_requests_per_period
  endpoint:
    path: /wallarm_gonode_http_inspector_adjusted_requests_per_period
    method: GET
- name: http_inspector_balancer_container_is_overloaded
  endpoint:
    path: /wallarm_gonode_http_inspector_balancer_container_is_overloaded
    method: GET
- name: http_inspector_balancer_debug_container_len
  endpoint:
    path: /wallarm_gonode_http_inspector_balancer_debug_container_len
    method: GET
- name: http_inspector_balancer_dropped_total
  endpoint:
    path: /wallarm_gonode_http_inspector_balancer_dropped_total
    method: GET
- name: http_inspector_balancer_workers
  endpoint:
    path: /wallarm_gonode_http_inspector_balancer_workers
    method: GET
- name: http_inspector_bytes_processed_per_app_total
  endpoint:
    path: /wallarm_gonode_http_inspector_bytes_processed_per_app_total
    method: GET
- name: http_inspector_bytes_processed_per_host_total
  endpoint:
    path: /wallarm_gonode_http_inspector_bytes_processed_per_host_total
    method: GET
- name: http_inspector_bytes_processed_per_period
  endpoint:
    path: /wallarm_gonode_http_inspector_bytes_processed_per_period
    method: GET
- name: http_inspector_bytes_processed_total
  endpoint:
    path: /wallarm_gonode_http_inspector_bytes_processed_total
    method: GET
- name: http_inspector_container_is_overloaded
  endpoint:
    path: /wallarm_gonode_http_inspector_container_is_overloaded
    method: GET
- name: http_inspector_debug_container_len
  endpoint:
    path: /wallarm_gonode_http_inspector_debug_container_len
    method: GET
- name: http_inspector_errors_total
  endpoint:
    path: /wallarm_gonode_http_inspector_errors_total
    method: GET
- name: http_inspector_flow_avg_time_ms
  endpoint:
    path: /wallarm_gonode_http_inspector_flow_avg_time_ms
    method: GET
- name: http_inspector_flows
  endpoint:
    path: /wallarm_gonode_http_inspector_flows
    method: GET
- name: http_inspector_ignored_per_app_total
  endpoint:
    path: /wallarm_gonode_http_inspector_ignored_per_app_total
    method: GET
- name: http_inspector_ignored_per_host_total
  endpoint:
    path: /wallarm_gonode_http_inspector_ignored_per_host_total
    method: GET
- name: http_inspector_ignored_total
  endpoint:
    path: /wallarm_gonode_http_inspector_ignored_total
    method: GET
- name: http_inspector_mem_allocated_bytes
  endpoint:
    path: /wallarm_gonode_http_inspector_mem_allocated_bytes
    method: GET
- name: http_inspector_mem_allocated_max_bytes
  endpoint:
    path: /wallarm_gonode_http_inspector_mem_allocated_max_bytes
    method: GET
- name: http_inspector_msgs_ignored_total
  endpoint:
    path: /wallarm_gonode_http_inspector_msgs_ignored_total
    method: GET
- name: http_inspector_requests_processed_per_app_total
  endpoint:
    path: /wallarm_gonode_http_inspector_requests_processed_per_app_total
    method: GET
- name: http_inspector_requests_processed_per_host_total
  endpoint:
    path: /wallarm_gonode_http_inspector_requests_processed_per_host_total
    method: GET
- name: http_inspector_requests_processed_total
  endpoint:
    path: /wallarm_gonode_http_inspector_requests_processed_total
    method: GET
- name: http_inspector_responses_processed_per_app_total
  endpoint:
    path: /wallarm_gonode_http_inspector_responses_processed_per_app_total
    method: GET
- name: http_inspector_responses_processed_per_host_total
  endpoint:
    path: /wallarm_gonode_http_inspector_responses_processed_per_host_total
    method: GET
- name: http_inspector_responses_processed_total
  endpoint:
    path: /wallarm_gonode_http_inspector_responses_processed_total
    method: GET
- name: http_inspector_ruleset_content_version
  endpoint:
    path: /wallarm_gonode_http_inspector_ruleset_content_version
    method: GET
- name: http_inspector_ruleset_format_version
  endpoint:
    path: /wallarm_gonode_http_inspector_ruleset_format_version
    method: GET
- name: http_inspector_step_container_is_overloaded
  endpoint:
    path: /wallarm_gonode_http_inspector_step_container_is_overloaded
    method: GET
- name: http_inspector_step_debug_container_len
  endpoint:
    path: /wallarm_gonode_http_inspector_step_debug_container_len
    method: GET
- name: http_inspector_step_input_messages_total
  endpoint:
    path: /wallarm_gonode_http_inspector_step_input_messages_total
    method: GET
- name: http_inspector_step_is_running
  endpoint:
    path: /wallarm_gonode_http_inspector_step_is_running
    method: GET
- name: http_inspector_step_output_messages_total
  endpoint:
    path: /wallarm_gonode_http_inspector_step_output_messages_total
    method: GET
- name: http_inspector_threats_blocked_per_app_total
  endpoint:
    path: /wallarm_gonode_http_inspector_threats_blocked_per_app_total
    method: GET
- name: http_inspector_threats_blocked_per_host_total
  endpoint:
    path: /wallarm_gonode_http_inspector_threats_blocked_per_host_total
    method: GET
- name: http_inspector_threats_blocked_total
  endpoint:
    path: /wallarm_gonode_http_inspector_threats_blocked_total
    method: GET
- name: http_inspector_threats_found_per_app_total
  endpoint:
    path: /wallarm_gonode_http_inspector_threats_found_per_app_total
    method: GET
- name: node
  endpoint:
    path: /opt/wallarm/etc/wallarm/node.yaml
    method: GET
    data_selector: api
    params: {}
- name: threats
  endpoint:
    path: /api/v1/threats
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: vulnerabilities
  endpoint:
    path: /api/v1/vulnerabilities
    method: GET
    data_selector: records
    params: {}
- name: nginx_ssl_ja3
  endpoint:
    path: /nginx-ssl-ja3
    method: GET
- name: nginx_ssl_fingerprint
  endpoint:
    path: /nginx-ssl-fingerprint
    method: GET
- name: aws_cloudfront
  endpoint:
    path: /cloudfront-viewer-ja3-fingerprint
    method: GET
- name: google_cloud
  endpoint:
    path: /google-cloud/load-balancing
    method: PATCH
- name: azure_wallarm
  endpoint:
    path: /azure
    method: GET
- name: attack_analysis
  endpoint:
    path: /api/v1/attacks
    method: GET
    data_selector: records
- name: incident_analysis
  endpoint:
    path: /api/v1/incidents
    method: GET
    data_selector: records
- name: api_discovery
  endpoint:
    path: /api-discovery
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: activity_log
  endpoint:
    path: /api/v1/activity_log
    method: GET
    data_selector: records
    params: {}
- name: attack
  endpoint:
    path: /v1/objects/attack
    method: POST
    data_selector: data
    params:
      limit: 50
      offset: 0
- name: vulnerability
  endpoint:
    path: /v1/objects/vuln
    method: POST
    data_selector: data
    params:
      limit: 50
      offset: 0
- name: rule
  endpoint:
    path: /v1/objects/hint
    method: POST
    data_selector: data
    params:
      limit: 1000
      offset: 0
- name: ip_rules
  endpoint:
    path: /v4/ip_rules
    method: POST
    data_selector: null
    params: {}
- name: ingress-controller
  endpoint:
    path: /wallarm/ingress-controller:4.6.2-1
    method: POST
    data_selector: SBOM
    params: {}
- name: attack_events
  endpoint:
    path: /api/v1/attack_events
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: vulnerabilities
  endpoint:
    path: /api/v1/vulnerabilities
    method: GET
    data_selector: data
    params: {}
- name: attack
  endpoint:
    path: /api/v1/attack
    method: GET
    data_selector: records
- name: incident
  endpoint:
    path: /api/v1/incident
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in Wallarm
- A token is used for request authentication.
- You must be a verified user to make Wallarm API requests.
- Requires setup of connected app in Wallarm
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects may return nulls in deeply nested fields
- Access to Wallarm API via Proxy
- Some objects like Contact may return nulls in deeply nested fields
- To activate the subscription plan, contact sales@wallarm.com
- Passive vulnerability detection is enabled by default.
- Uses OAuth2 with refresh token — requires setup of connected app in vulnerability
  API
- Vulnerabilities should be fixed on the application side.
- If a vulnerability cannot be fixed, using the virtual patch rule can help block
  related attacks.
- Wallarm stores and displays sessions only for the last week.
- You can add up to 20 session context parameters to use them for session context
  and grouping.
- Hiddenly added parameters do not take anything from 20 parameter quota.
- When using the specification for setting security policies for the first time, it
  is recommended to set Monitor as a reaction to make sure that the specification
  is applied to the necessary endpoints and detects real errors.
- Some API responses may include rate limiting headers
- API Abuse Prevention module is disabled by default
- Profiles are used to configure detection and mitigation of malicious bots
- You can temporarily disable the exception for the URL and/or request type without
  deleting the rule.
- Bot detection relies on the traffic - if there is no sufficient amount of one, API
  Abuse Prevention notifies about that with the Insufficient data to build statistics
  message.
- Ensure API key is kept confidential
- Credential Stuffing Detection is disabled by default.
- Wallarm does not block requests with compromised credentials.
- GraphQL queries are typically sent as HTTP POST requests
- GET requests can be used for GraphQL queries, but it's less common
- Mitigation controls are sophisticated tools available in the Advanced API Security
  subscription.
- The list of default mitigation controls is subject to change.
- API requires OAuth2 authentication.
- Check API limits to avoid rate limiting.
- The unrestricted resource consumption is included in the OWASP API Top 10 2023 list
  of most serious API security risks.
- Wallarm provides the DoS protection mitigation control to help prevent excessive
  traffic to your API.
- Requires NGINX Node 6.0.1 or Native Node 0.14.1 or higher.
- Requires NGINX Node 6.3.0 or higher and not supported by Native Node.
- Mitigation controls extend Wallarm's attack protection with additional security
  measures.
- Requires configuration of OAuth2 for API access.
- Requires setup of connected app in api
- Requires NGINX Node 5.0.3 or Native Node 0.7.0 or higher
- Risk score may be from 1 (lowest) to 10 (highest)
- Risk score is not displayed (N/A) for the unused endpoints
- To enable automatic BOLA protection, proceed to Wallarm Console → BOLA protection
  and turn the switch to the enabled state
- If you do not have Wallarm account yet, get pricing information and activate AASM
  on the Wallarm's official site.
- The notifications are enabled by default.
- Wallarm automatically detects security issues.
- The filtration mode can be configured in multiple ways including node-side directives
  and Wallarm Console settings.
- Ensure the access is not blocked by a firewall
- Operation without the postanalytics module is not supported
- Uses API tokens for authentication.
- Access to specified IP addresses is required for downloading updates.
- Allowed addresses should match the WALLARM_STATUS_ALLOW variable value
- Wallarm Ingress controller uses ClusterIP for its service, which means it will not
  be exposed outside the cluster.
- When using an API token, specify a node group name in the nodeGroup parameter.
- The postanalytics module is memory demanding.
- It is recommended to retain the default configuration unless a change is necessary.
- Default value for disable_acl is off.
- Default value for wallarm_acl_access_phase is on.
- Default value for wallarm_acl_export_enable is on.
- Default path for wallarm_api_conf is /opt/wallarm/etc/wallarm/node.yaml.
- Default wallarm_api_conf is /opt/wallarm/etc/wallarm/node.yaml
- The directive is available from release 6.2.0 onwards.
- This parameter is configured inside the http block only.
- The directive has been deprecated
- It is strongly not recommended to set wallarm_process_time_limit_block to off globally
  for http or server blocks.
- Default value for wallarm_application is -1.
- Default value for wallarm_timeslice is 0.
- Default value for wallarm_unpack_response is on.
- Default value for wallarm_upstream_queue_memory_limit is 100m.
- The directive is required when mutual TLS (mTLS) is enabled for NGINX-Wallarm and
  postanalytics modules installed on separate servers.
- The fine‑tuning of the Wallarm Ingress Controller is quite similar to that of the
  NGINX Ingress Controller.
- Uses API token for authentication.
- Ensure to manage Kubernetes secrets for token.
- Default value for controller.wallarm.enabled is false
- Default value for controller.wallarm.apiHost is api.wallarm.com
- Default value for controller.wallarm.nodeGroup is defaultIngressGroup
- Default value for controller.wallarm.postanalytics.arena is 2.0
- Default value for controller.wallarm.postanalytics.serviceAddress is [::]:3313
- Some configurations may change default behaviors
- Extra environment variables to be passed to the Docker containers.
- libdetection default mode is enabled.
- Some endpoints may require additional permissions
- If using Cloudflare CDN, ensure IP addresses match those in Cloudflare documentation.
- If using Fastly CDN, ensure IP addresses match those in Fastly documentation.
- NGINX writes logs of the processed requests (access logs) into a separate log file,
  using the predefined combined logging format by default.
- It is highly recommended to configure the statistics service in its own file
- Default configuration is secure
- Access is only available for loopback addresses of the filter node server
- The format parameter has the json value by default in most deployment options
- It is highly recommended to configure the statistics service in its own file.
- Access is only available for loopback addresses of the filter node server.
- The node.yaml file is automatically generated by the register-node script.
- Synchronization interval can be set via the WALLARM_SYNCNODE_INTERVAL variable.
- NGINX configuration with the resolver directive and variable in the proxy_pass directive
  slows down request processing since it will be the additional step of dynamic DNS
  resolution in the request processing.
- NGINX re‑resolves the domain name when its time-to-life (TTL) expires. By including
  the valid parameter to the resolver directive, you can tell NGINX to ignore the
  TTL and re‑resolve names at a specified frequency instead.
- If the DNS server is down, NGINX will not process the traffic.
- An ability to get a JA3 fingerprint from NGINX makes this identification method
  available in all NGINX-based Wallarm deployment options.
- Wallarm can integrate with CloudFront to get the CloudFront-Viewer-JA3-Fingerprint
  and CloudFront-Viewer-TLS JA3 headers.
- Uses wstore for local postanalytics processing
- Access to the account with the Administrator role in Wallarm Console for the US
  Cloud or EU Cloud is required.
- Ensure access to https://meganode.wallarm.com to download all-in-one Wallarm installer.
- Ensure access to the IP addresses provided for downloading updates to attack detection
  rules and API specifications.
- Some API responses may include nested fields that can return null values.
- Access to the account with the Administrator role in Wallarm Console is required.
- A Wallarm token of the appropriate type is needed for node installation.
- Re-installation of the Wallarm services is required
- For a safe upgrade procedure, install the new Node on a new machine, redirect traffic
  to the new machine, and then remove the old one.
- This article describes the safest migration method.
- If upgrading from version 5.x or earlier, important changes to configuration paths
  and environment variables must be noted.
- 'Helm values renamed: controller.wallarm.tarantool → controller.wallarm.postanalytics.'
- Use of Helm v3 package manager is required
- Administrator role in Wallarm Console is required for access
- Uses OAuth2 with refresh token — requires setup of connected app in wallarm
- The Wallarm node downloads IP addresses lists from the Wallarm Cloud by default
  and applies downloaded data when processing incoming requests.
- Allowlisted and denylisted IP addresses are managed via Wallarm Console.
- Wallarm's vulnerability scanning IPs used for scanning company resources for vulnerabilities
  and launching additional security tests are allowlisted by default.
- For attack and hit sets containing 100 or more records, it is best to retrieve them
  in smaller pieces.
- Cursor pagination returns a pointer to a specific item in the dataset.
- Normal functioning characteristics are not described in this SLA in particular numbers.
- Wallarm detects attacks and vulnerabilities by default without any configuration
- Custom rules and triggers may modify default behavior
- Default controls are provided in a monitoring mode (for new clients) or disabled
  (enable if necessary).
- Recommended CPU usage by Wallarm is about 10-15%, meaning that filtering nodes will
  be able to handle a x10 traffic spike.
- To reveal the longest request processing episodes and thus the primary CPU consumers,
  you can enable extended logging and monitor the processing time.
- If your file download scenarios fail after installing a filter node, the issue is
  in the request size exceeding the limit set in the client_max_body_size directive
  in the Wallarm configuration file.
- Changing only the location value protects the main page from getting large requests.
- If Wallarm Cloud goes down, a Wallarm node continues operating with some limitations.
- Regularly update Wallarm nodes and address synchronization problems.
- Check logs from /opt/wallarm/var/log/wallarm/wcli-out.log for syncnode script issues.
- Check /var/log/syslog or /var/log/messages for additional synchronization details.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck API token validity'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '401 Unauthorized: Check OAuth2 credentials.'
- '401 Unauthorized: Check OAuth credentials'
- '403 Forbidden: Insufficient permissions'
- '429 Too Many Requests: Rate limit exceeded'
- '403 Forbidden: Check if the filtering node is working in block mode'
- '401 Unauthorized: Recheck API token validity.'
- '403 Forbidden: Check your permissions for the requested resource.'
- 'SystemError binary: failed to bind: Cannot assign requested address'
- '500: Internal Server Error when memory limit is exceeded.'
- '401 Unauthorized: Check the API token.'
- '400 Bad Request: Verify the request parameters.'
- '401 Unauthorized: Recheck API token or permissions'
- 'Invalid API Token: Check if the token is correct'
- 'Request Body Too Large: Reduce the size of the request body'
- 'Invalid request: Header PROXY not passed in the incoming request.'
- 'Invalid UUID: Ensure the UUID in the node.yaml is correctly set.'
- 'Invalid secret: Check the secret key value in the node.yaml.'
- '404 Not Found: Verify the endpoint or resource ID'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - wallarm-api-token
client:
  base_url: https://us1.api.wallarm.com/
  auth:
    type: apikey
    location: header
    header_name: X-WallarmApi-Token
source_metadata: null
