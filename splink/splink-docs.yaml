resources:
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: data
    params: {}
- name: payment_requests
  endpoint:
    path: /payment-requests
    method: POST
    data_selector: data
    params: {}
- name: payment_requests
  endpoint:
    path: /payment-requests
    method: GET
    data_selector: records
    params: {}
- name: create_payment_request
  endpoint:
    path: /create-payment-request
    method: POST
    data_selector: response
    params: {}
- name: webhook_events
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
    data_selector: response
    params: {}
- name: payment_request
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
    data_selector: data
- name: payment_request
  endpoint:
    path: /update/payment/request
    method: POST
    data_selector: token
    params: {}
- name: subscriptions
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
    data_selector: records
    params: {}
- name: update_subscription
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
    data_selector: records
    params: {}
- name: companies
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
- name: invoices
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
    params: {}
- name: payment_requests
  endpoint:
    path: /payment-requests
    method: POST
    data_selector: payment_requests
    params: {}
- name: webhook_events
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
    data_selector: records
- name: update_company
  endpoint:
    path: /update-company/{id}
    method: POST
    data_selector: records
- name: payment_requests
  endpoint:
    path: /payment-requests
    method: GET
    data_selector: records
    params: {}
- name: webhook_events
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
    data_selector: records
    params: {}
- name: company_member
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
    data_selector: data
    params:
      cursor: string
      live: boolean
      role: string
      search_term: string
- name: create_company_member
  endpoint:
    path: /create-company-member
    method: POST
    data_selector: user
    params:
      role: string
      notify_payment_by_sms: boolean
      notify_payment_by_email: boolean
      notify_payment_by_notification: boolean
      notify_weekly_report: boolean
      company: integer
- name: retrieve_payment_request
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
- name: update_payment_request
  endpoint:
    path: /webhook-events/{event_id}
    method: PUT
- name: webhook_events
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
    data_selector: response
    params: {}
- name: update_company_member
  endpoint:
    path: /update/company-member/{id}
    method: PUT
    data_selector: response
    params: {}
- name: subscriptions
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
    data_selector: data
    params: {}
- name: update_subscription
  endpoint:
    path: /webhook-events/{event_id}
    method: PUT
    data_selector: data
    params: {}
- name: company_member
  endpoint:
    path: /update/company/member
    method: POST
    data_selector: data
    params: {}
- name: token
  endpoint:
    path: /token
    method: GET
    data_selector: id
- name: webhook_events
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
- name: roles
  endpoint:
    path: /roles
    method: GET
- name: create_role
  endpoint:
    path: /roles
    method: POST
- name: companies
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
    data_selector: data
    params:
      cursor: string
      live: boolean
      search_term: string
- name: invoices
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
    data_selector: data
    params:
      cursor: string
      subscription_id: string
- name: webhook_events
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
    data_selector: data
- name: update_company
  endpoint:
    path: /update-company/{id}
    method: POST
    data_selector: data
- name: webhook_events
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
    data_selector: data
- name: update_role
  endpoint:
    path: /update-role/{id}
    method: PUT
    data_selector: permissions
- name: token
  endpoint:
    path: /token
    method: GET
    data_selector: token
    params: {}
- name: company_member
  endpoint:
    path: /company_members
    method: GET
    data_selector: records
    params: {}
- name: create_company_member
  endpoint:
    path: /create_company_member
    method: POST
    data_selector: response
    params:
      user: required
      role: string
      notify_payment_by_sms: boolean
      notify_payment_by_email: boolean
      notify_payment_by_notification: boolean
      notify_weekly_report: boolean
      company: required
- name: webhook_events
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
- name: packages
  endpoint:
    path: /packages
    method: GET
- name: create_package
  endpoint:
    path: /packages
    method: POST
- name: company_member
  endpoint:
    path: /create/company/member
    method: POST
- name: webhook_events
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
    data_selector: records
- name: webhook_events
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
    data_selector: records
- name: update_package
  endpoint:
    path: /update-package/{id}
    method: POST
    data_selector: records
- name: company_member
  endpoint:
    path: /update/company/member
    method: POST
    data_selector: records
- name: webhook_event
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
- name: webhook_events
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: create_role
  endpoint:
    path: /roles
    method: POST
    data_selector: data
    params: {}
- name: webhook_events
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
    data_selector: data
- name: update_role
  endpoint:
    path: /update-role/{id}
    method: PUT
    data_selector: permissions
- name: webhook_events
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
    data_selector: data
- name: packages
  endpoint:
    path: /packages
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: webhook_events
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
    data_selector: data
- name: update_package
  endpoint:
    path: /update-package
    method: POST
    data_selector: data
- name: webhook_event
  endpoint:
    path: /webhook-events/{event_id}
    method: GET
    data_selector: records
    params: {}
notes:
- Some objects may return nulls in deeply nested fields
- Some objects like Contact may return nulls in deeply nested fields
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Ensure data sent in your webhook is encrypted by only using HTTPs urls.
- It is recommended to always retrieve the Webhook Event from the Platform to ensure
  your event was triggered by the platform.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck authentication method or credentials'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - jwtAuth
  - Secret Key
  - cookieAuth
  - basicAuth
  - None
client:
  base_url: https://api.splink.io
  auth:
    type: apikey
source_metadata: null
