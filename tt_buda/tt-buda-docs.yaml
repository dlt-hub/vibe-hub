resources:
- name: VSlice
  endpoint:
    path: /vslice
    method: GET
    data_selector: Buda tensor
- name: VStack
  endpoint:
    path: /vstack
    method: GET
    data_selector: Buda tensor
- name: Reshape
  endpoint:
    path: /reshape
    method: GET
    data_selector: Buda tensor
- name: Index
  endpoint:
    path: /index
    method: GET
    data_selector: Buda tensor
- name: Select
  endpoint:
    path: /select
    method: GET
    data_selector: Buda tensor
- name: Pad
  endpoint:
    path: /pad
    method: GET
    data_selector: Buda tensor
- name: Concatenate
  endpoint:
    path: /concatenate
    method: GET
    data_selector: Buda tensor
- name: Relu
  endpoint:
    path: /relu
    method: GET
    data_selector: Buda tensor
- name: Gelu
  endpoint:
    path: /gelu
    method: GET
    data_selector: Buda tensor
- name: Sigmoid
  endpoint:
    path: /sigmoid
    method: GET
    data_selector: Buda tensor
- name: Exp
  endpoint:
    path: /exp
    method: GET
    data_selector: Buda tensor
- name: Reciprocal
  endpoint:
    path: /reciprocal
    method: GET
    data_selector: Buda tensor
- name: Sqrt
  endpoint:
    path: /sqrt
    method: GET
    data_selector: Buda tensor
- name: Log
  endpoint:
    path: /log
    method: GET
    data_selector: Buda tensor
- name: Argmax
  endpoint:
    path: /argmax
    method: GET
    data_selector: Buda tensor
- name: Abs
  endpoint:
    path: /abs
    method: GET
    data_selector: Buda tensor
- name: Clip
  endpoint:
    path: /clip
    method: GET
    data_selector: Buda tensor
- name: Conv2d
  endpoint:
    path: /conv2d
    method: GET
    data_selector: Buda tensor
- name: Conv2dTranspose
  endpoint:
    path: /conv2dtranspose
    method: GET
    data_selector: Buda tensor
- name: MaxPool2d
  endpoint:
    path: /maxpool2d
    method: GET
    data_selector: Buda tensor
- name: AvgPool2d
  endpoint:
    path: /avgpool2d
    method: GET
    data_selector: Buda tensor
- name: Softmax
  endpoint:
    path: /softmax
    method: GET
    data_selector: Buda tensor
- name: Layernorm
  endpoint:
    path: /layernorm
    method: GET
    data_selector: Buda tensor
- name: forward_pt
  endpoint:
    path: /forward_pt
    method: GET
    data_selector: parameters
    params:
      loop_count: int
- name: forward_tf
  endpoint:
    path: /forward_tf
    method: GET
    data_selector: parameters
    params:
      loop_count: int
- name: forward
  endpoint:
    path: /forward
    method: GET
    data_selector: parameters
    params:
      loop_count: int
- name: backward
  endpoint:
    path: /backward
    method: GET
    data_selector: parameters
    params:
      loop_count: int
      zero_grad: bool
- name: generate
  endpoint:
    path: /generate
    method: GET
    data_selector: parameters
    params:
      loop_count: int
      write_index: int
- name: compile_for_pt
  endpoint:
    path: /compile_for_pt
    method: GET
    data_selector: parameters
    params:
      inputs: Tuple[Tensor, …]
      compiler_cfg: CompilerConfig
      targets: List[Tensor]
      microbatch_size: int
      microbatch_count: int
      verify_cfg: VerifyConfig
- name: compile_for_tf
  endpoint:
    path: /compile_for_tf
    method: GET
    data_selector: parameters
    params:
      inputs: Tuple[Tensor, …]
      compiler_cfg: CompilerConfig
      targets: List[Tensor]
      microbatch_size: int
      verify_cfg: VerifyConfig
- name: cpueval_forward_pt
  endpoint:
    path: /cpueval_forward_pt
    method: GET
    data_selector: parameters
    params:
      inputs: List[Tensor]
      parameters: Dict[str, Tensor]
      save_for_backward: bool
      targets: List[Tensor]
- name: cpueval_forward_tf
  endpoint:
    path: /cpueval_forward_tf
    method: GET
    data_selector: parameters
    params:
      inputs: List[Tensor]
      parameters: Dict[str, Tensor]
      save_for_backward: bool
      targets: List[Tensor]
- name: cpueval_forward
  endpoint:
    path: /cpueval_forward
    method: GET
    data_selector: parameters
    params:
      inputs: List[Tensor]
      parameters: Dict[str, Tensor]
      save_for_backward: bool
      targets: List[Tensor]
- name: cpueval_backward
  endpoint:
    path: /cpueval_backward
    method: GET
    data_selector: parameters
    params:
      bw_inputs: List[Tensor]
      parameters: Dict[str, Tensor]
- name: place_module
  endpoint:
    path: /place_module
    method: GET
    data_selector: parameters
    params:
      module: Union[Module, Tuple[Module], List[Module]]
- name: pop_parameter_checkpoint
  endpoint:
    path: /pop_parameter_checkpoint
    method: GET
    data_selector: parameters
- name: set_debug_gradient_trace_queue
  endpoint:
    path: /set_debug_gradient_trace_queue
    method: GET
    data_selector: parameters
    params:
      q: Queue
- name: sync
  endpoint:
    path: /sync
    method: GET
    data_selector: parameters
- name: TTDevice
  endpoint:
    path: /api/TTDevice
    method: GET
    data_selector: devices
    params: {}
- name: CPUDevice
  endpoint:
    path: /api/CPUDevice
    method: GET
    data_selector: devices
    params: {}
- name: tagged_operations
  endpoint:
    path: /configure/operations
    method: POST
    data_selector: operations
    params:
      operations:
      - matmul1
      - gelu
- name: matmul_configuration
  endpoint:
    path: /configure/mixed_precision
    method: POST
    data_selector: configuration
    params:
      op_type: matmul
      math_fidelity: HiFi2
      accumulate_df: Float16_b
      output_df: Bfp8_b
- name: attention_weights_configuration
  endpoint:
    path: /configure/mixed_precision
    method: POST
    data_selector: configuration
    params:
      name_regex: layer.*.attention.self.(query|value|key).weight
      output_df: Bfp8_b
- name: pybuda_module
  endpoint:
    path: /api/v1/pybuda/module
    method: GET
    data_selector: records
- name: inference
  endpoint:
    path: /api/v1/inference
    method: POST
    data_selector: records
- name: intermediate_tensors
  endpoint:
    path: /api/intermediate_tensors
    method: GET
    data_selector: tensor_records
- name: model_merging
  endpoint:
    path: /api/model_merging
    method: POST
    data_selector: merged_models
- name: PyTorchTestModule
  endpoint:
    path: /PyTorchTestModule
    method: POST
    data_selector: output
    params: {}
- name: PyTorchTestModuleOneOut
  endpoint:
    path: /PyTorchTestModuleOneOut
    method: POST
    data_selector: output
    params: {}
- name: PyTorchLoss
  endpoint:
    path: /PyTorchLoss
    method: POST
    data_selector: output
    params: {}
- name: performance_data
  endpoint:
    path: /perf_analysis
    method: GET
    data_selector: data
    params: {}
- name: summary
  endpoint:
    path: /summary
    method: GET
    data_selector: summary_data
- name: epoch_analysis
  endpoint:
    path: /epoch_analysis
    method: GET
    data_selector: epoch_data
notes:
- Pybuda supports multiple device types including TTDevice and CPUDevice.
- Pybuda API workflow is flexible, allowing some steps to be merged or reordered.
- Pybuda supports tagging operations of interest during graph compilation.
- Multi-Model workload generation can be automated using the Python API.
- By default true, might be useful to disable to workaround an undesirable fused result,
  but by and large it should be true.
- Uses environment variables PYBUDA_OP_PERF and TT_BACKEND_PERF_ANALYZER to generate
  data
- A known limitation is that current backend measurement doesn’t take into account
  fork-join delays
- Known limitation is that current backend measurement doesn’t take into account fork-join
  delays.
- Some objects like Contact may return nulls in deeply nested fields
- The compiler does not implement register spilling.
- Running out of registers is a common occurrence.
- Using an uninitialized variable would show an error at a macro called by a wrapper
  function before showing the line number in the user’s code.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'error: cannot store SFPU register (register spill?) - exiting!'
- Forgeting a v_endif results in mismatched {} error which can be confusing.
- Incorrect use of vector operations result in warnings/errors within the wrapper
  rather than in the calling code.
auth_info:
  mentioned_objects: []
client:
  base_url: https://tenstorrent.github.io/
source_metadata: null
