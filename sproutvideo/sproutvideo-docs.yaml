resources:
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: videos
    params: {}
- name: single_video
  endpoint:
    path: /videos/:id
    method: GET
    data_selector: video
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: POST
    data_selector: records
- name: upload_tokens
  endpoint:
    path: /v1/upload_tokens
    method: POST
    data_selector: records
- name: edit_video
  endpoint:
    path: /v1/videos/:id
    method: PUT
    data_selector: response
    params: {}
- name: replace_video
  endpoint:
    path: /v1/videos/:id/replace
    method: POST
    data_selector: response
    params: {}
- name: upload_poster_frame
  endpoint:
    path: /v1/playlists/:id
    method: PUT
    data_selector: response
    params: {}
- name: delete_video
  endpoint:
    path: /v1/videos/:id
    method: DELETE
    data_selector: response
    params: {}
- name: list_tags
  endpoint:
    path: /v1/tags
    method: GET
    data_selector: tags
    params: {}
- name: get_single_tag
  endpoint:
    path: /v1/tags/:id
    method: GET
    data_selector: response
    params: {}
- name: create_tag
  endpoint:
    path: /v1/tags
    method: POST
    data_selector: response
    params: {}
- name: edit_tag
  endpoint:
    path: /v1/tags/:id
    method: PUT
    data_selector: response
    params: {}
- name: delete_tag
  endpoint:
    path: /v1/tags/:id
    method: DELETE
    data_selector: response
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: videos
    params: {}
- name: single_video
  endpoint:
    path: /videos/:id
    method: GET
    data_selector: id
    params: {}
- name: subtitles
  endpoint:
    path: /v1/videos/:video_id/subtitles
    method: GET
    data_selector: subtitles
    params: {}
- name: calls_to_action
  endpoint:
    path: /v1/videos/:video_id/calls_to_action
    method: GET
    data_selector: calls_to_action
    params: {}
- name: playlists
  endpoint:
    path: /v1/playlists
    method: GET
    data_selector: playlists
    params: {}
- name: playlists
  endpoint:
    path: /v1/playlists
    method: POST
    data_selector: response
- name: folders
  endpoint:
    path: /v1/folders
    method: GET
    data_selector: folders
- name: logins
  endpoint:
    path: /v1/logins
    method: GET
    data_selector: logins
- name: access_grants
  endpoint:
    path: /access_grants
    method: GET
    data_selector: access_grants
- name: live_streams
  endpoint:
    path: /live_streams
    method: GET
    data_selector: live_streams
- name: videos
  endpoint:
    path: /v1/videos/:id
    method: PUT
- name: tags
  endpoint:
    path: /v1/tags
    method: GET
- name: live_stream
  endpoint:
    path: /live_streams/:id
    method: GET
    data_selector: live_stream
- name: create_live_stream
  endpoint:
    path: /live_streams
    method: POST
- name: subtitles
  endpoint:
    path: /v1/videos/:video_id/subtitles
    method: GET
    data_selector: subtitles
    params: {}
- name: calls_to_action
  endpoint:
    path: /v1/videos/:video_id/calls_to_action
    method: GET
    data_selector: calls_to_action
    params: {}
- name: playlists
  endpoint:
    path: /v1/playlists
    method: GET
    data_selector: playlists
    params: {}
- name: live_streams
  endpoint:
    path: /v1/live_streams/:id
    method: PUT
- name: live_streams_counts
  endpoint:
    path: /v1/stats/live_streams/counts
    method: GET
- name: downloads
  endpoint:
    path: /v1/stats/downloads
    method: GET
- name: popular_videos
  endpoint:
    path: /v1/stats/popular_videos
    method: GET
- name: playlists
  endpoint:
    path: /v1/playlists
    method: POST
    data_selector: response
- name: folders
  endpoint:
    path: /v1/folders
    method: GET
    data_selector: response
- name: logins
  endpoint:
    path: /v1/logins
    method: GET
    data_selector: response
- name: live_stream_engagement
  endpoint:
    path: /v1/stats/live_streams/engagement
    method: GET
- name: live_stream_playback_sessions
  endpoint:
    path: /v1/stats/live_streams/engagement/sessions
    method: GET
- name: live_stream_counts
  endpoint:
    path: /v1/stats/live_streams/counts
    method: GET
- name: access_grants
  endpoint:
    path: /access_grants
    method: GET
    data_selector: access_grants
    params: {}
- name: live_streams
  endpoint:
    path: /live_streams
    method: GET
    data_selector: live_streams
    params: {}
- name: live_stream
  endpoint:
    path: /live_streams/:id
    method: GET
    data_selector: live_stream
    params: {}
- name: create_live_stream
  endpoint:
    path: /live_streams
    method: POST
    data_selector: live_stream
    params: {}
- name: live_stream_geo
  endpoint:
    path: /v1/stats/live_streams/:live_stream_id/geo
    method: GET
    data_selector: records
    params: {}
- name: live_stream_device_types
  endpoint:
    path: /v1/stats/live_streams/:live_stream_id/device_types
    method: GET
    data_selector: records
    params: {}
- name: live_stream_overview
  endpoint:
    path: /v1/stats/live_streams/:live_stream_id/overview
    method: GET
    data_selector: records
    params: {}
- name: live_stream_engagement_overall
  endpoint:
    path: /v1/stats/live_streams/engagement
    method: GET
    data_selector: records
    params: {}
- name: live_stream_engagement_per_stream
  endpoint:
    path: /v1/stats/live_streams/:live_stream_id/engagement
    method: GET
    data_selector: records
    params: {}
- name: live_streams
  endpoint:
    path: /v1/live_streams/:id
    method: PUT
- name: live_stream_counts
  endpoint:
    path: /v1/stats/live_streams/counts
    method: GET
- name: popular_videos
  endpoint:
    path: /v1/stats/popular_videos
    method: GET
- name: popular_downloads
  endpoint:
    path: /v1/stats/popular_downloads
    method: GET
- name: playback_sessions
  endpoint:
    path: /stats/live_streams/engagement/sessions
    method: GET
    data_selector: sessions
    params:
      since_id: UUID
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: email
    params: {}
- name: account
  endpoint:
    path: /account
    method: PUT
    data_selector: settings
    params: {}
- name: live_stream_engagement_overall
  endpoint:
    path: /stats/live_streams/engagement
    method: GET
    data_selector: playback_sessions
    params: {}
- name: live_stream_engagement_per_stream
  endpoint:
    path: /stats/live_streams/:live_stream_id/engagement
    method: GET
    data_selector: plays
    params: {}
- name: playback_sessions_overall
  endpoint:
    path: /stats/live_streams/engagement/sessions
    method: GET
    data_selector: total
    params: {}
- name: play_counts_overall
  endpoint:
    path: /stats/live_streams/counts
    method: GET
    data_selector: play_count
    params: {}
- name: play_counts_per_stream
  endpoint:
    path: /stats/live_streams/:live_stream_id/counts
    method: GET
    data_selector: play_count
    params: {}
- name: videos
  endpoint:
    path: /api/videos
    method: GET
    data_selector: data
    params: {}
- name: analytics
  endpoint:
    path: /api/analytics
    method: GET
    data_selector: data
    params: {}
- name: live_stream_geo
  endpoint:
    path: /v1/stats/live_streams/:live_stream_id/geo
    method: GET
    data_selector: records
- name: live_stream_device_types
  endpoint:
    path: /v1/stats/live_streams/:live_stream_id/device_types
    method: GET
    data_selector: records
- name: live_stream_overview
  endpoint:
    path: /v1/stats/live_streams/:live_stream_id/overview
    method: GET
    data_selector: records
- name: live_stream_engagement_overall
  endpoint:
    path: /v1/stats/live_streams/engagement
    method: GET
    data_selector: records
- name: live_stream_engagement_per_stream
  endpoint:
    path: /v1/stats/live_streams/:live_stream_id/engagement
    method: GET
    data_selector: records
- name: playback_sessions
  endpoint:
    path: /v1/stats/live_streams/engagement/sessions
    method: GET
    data_selector: sessions
    params:
      since_id: string
- name: account
  endpoint:
    path: /v1/account
    method: GET
    data_selector: account
- name: videos
  endpoint:
    path: /api/videos
    method: GET
    data_selector: data
    params: {}
- name: analytics
  endpoint:
    path: /api/analytics
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /account
    method: PUT
    data_selector: settings
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: data
- name: live_streams
  endpoint:
    path: /live_streams
    method: GET
    data_selector: data
- name: video
  endpoint:
    path: /api/videos
    method: GET
    data_selector: videos
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: data
    params: {}
- name: videos
  endpoint:
    path: /api/videos
    method: GET
    data_selector: records
- name: analytics
  endpoint:
    path: /api/analytics
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /api/v1/videos
    method: GET
    data_selector: videos
- name: playlist
  endpoint:
    path: /api/v1/playlists
    method: GET
    data_selector: playlists
- name: videos
  endpoint:
    path: /api/v1/videos
    method: GET
    data_selector: records
    params: {}
- name: analytics
  endpoint:
    path: /api/v1/analytics
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /api/videos
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /api/videos
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: data
    params: {}
- name: Embedding Videos
  endpoint:
    path: /help/articles/16-how_to_embed_a_video
    method: GET
    data_selector: records
- name: Customizing Embed Code
  endpoint:
    path: /help/articles/40-how_to_customize_the_embed_code_for_your_video
    method: GET
    data_selector: records
- name: Embedding Videos
  endpoint:
    path: /help/articles/16-how_to_embed_a_video_or_live_stream
    method: GET
- name: Download Video Thumbnail
  endpoint:
    path: /help/articles/226-download_a_generated_video_thumbnail
    method: GET
- name: Signed Embed Codes
  endpoint:
    path: /help/articles/35-signed_embed_codes
    method: GET
- name: Customize Embed Code
  endpoint:
    path: /help/articles/40-how_to_customize_the_embed_code_for_your_video
    method: GET
- name: Embed Code Parameters
  endpoint:
    path: /help/articles/61-embed-code-parameters
    method: GET
- name: Lightbox Embed Code
  endpoint:
    path: /help/articles/105-how_to_generate_or_customize_a_lightbox_embed_code
    method: GET
- name: Email Embed Code
  endpoint:
    path: /help/articles/106-how_to_generate_or_customize_an_email_embed_code
    method: GET
- name: Add Videos to Jimdo
  endpoint:
    path: /help/articles/64-add_videos_hosted_on_sproutvideo_to_a_jimdo_site
    method: GET
- name: Add Video to WordPress.com
  endpoint:
    path: /help/articles/120-how-to-add-a-video-to-wordpress-com
    method: GET
- name: Embed Videos in Squarespace
  endpoint:
    path: /help/articles/119-how_to_embed_videos_in_squarespace
    method: GET
- name: Embed Video on Shopify
  endpoint:
    path: /help/articles/137-how_to_embed_a_video_on_shopify
    method: GET
- name: Page Load Speed Optimization
  endpoint:
    path: /help/articles/181-page_load_speed_optimization
    method: GET
- name: embed_code_parameters
  endpoint:
    path: /help/articles/61-embed-code-parameters
    method: GET
- name: video
  endpoint:
    path: /api/videos
    method: GET
    data_selector: videos
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: videos
    params: {}
- name: signed_embed_codes
  endpoint:
    path: /embed
    method: GET
- name: embedding_videos
  endpoint:
    path: /help/categories/6-embedding_videos_and_live_streams
    method: GET
    data_selector: articles
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: records
    params: {}
- name: video_analytics
  endpoint:
    path: /analytics/videos
    method: GET
    data_selector: data
    params: {}
- name: video_engagement_metrics
  endpoint:
    path: /analytics/engagement
    method: GET
    data_selector: data
    params: {}
- name: viewer_tracking
  endpoint:
    path: /analytics/viewers
    method: GET
    data_selector: data
    params: {}
- name: player_privacy_mode
  endpoint:
    path: /analytics/privacy_mode
    method: GET
    data_selector: data
    params: {}
- name: exportable_reports
  endpoint:
    path: /analytics/reports
    method: GET
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /api/videos
    method: GET
    data_selector: records
- name: analytics
  endpoint:
    path: /api/analytics
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /services/data/vXX.X/sobjects/Video
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: sitemap
  endpoint:
    path: /settings/sitemaps
    method: GET
    data_selector: sitemaps
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: data
- name: video_website_settings
  endpoint:
    path: /help/categories/14-video_websites
    method: GET
    data_selector: settings
    params: {}
- name: sitemap
  endpoint:
    path: /settings/sitemaps
    method: GET
    data_selector: sitemap
    params: {}
- name: video
  endpoint:
    path: /api/videos
    method: GET
    data_selector: videos
- name: video_sitemap
  endpoint:
    path: /sitemaps
    method: GET
    data_selector: sitemaps
    params: {}
- name: videos
  endpoint:
    path: /api/videos
    method: GET
    data_selector: records
- name: videos_metadata
  endpoint:
    path: /api/videos/metadata
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /api/videos
    method: GET
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /api/v1/videos
    method: GET
    data_selector: videos
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: payload
notes:
- Embed codes will not be usable until the video state is deployed
- If you plan on using the video files returned in the assets hash, you'll need to
  enable API File Access on your account.
- While all other API methods, except for when uploading a poster frame, accept a
  JSON body as their input, this method only accepts input as multipart/form-data.
- If you attempt to upload a video with a file extension we do not currently support,
  you will receive a response code of `415 - Unsupported Media Type`.
- If your plan has storage limits and the file you attempt to upload would put you
  over your limit, you will receive a response code of `413 - Request Entity Too Large`.
- Uploads must be done as multipart/form-data.
- File size limit for video uploads is 5GB.
- The number of access grants may not exceed 100 per request.
- While all other API methods accept a JSON body, the Replace a video method only
  accepts input as multipart/form-data.
- If upload limits are exceeded, a response code of 413 will be returned.
- The default latency for live streams is 'standard'.
- The default reconnect window for live streams is 300 seconds.
- Default latency is standard
- Default reconnect window is 300 seconds
- Analytics data may not be available for all accounts.
- Sessions are associated with a UUID.
- Uses OAuth2 with refresh token for authentication.
- Supports HD, UHD, 4k, and 8k video resolutions
- Uses a global content distribution network for video playback
- SproutVideo is a video hosting platform for business.
- Offers video privacy, marketing, and analytics tools.
- Powerful video hosting, free for 30 days.
- Uses OAuth2 with refresh token — requires setup of connected app in SproutVideo
- No credit card required, no commitments.
- Uses OAuth2 with refresh token.
- No credit card required to get started. It's free to try every feature for 30 days.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Email and live chat are the best ways to reach us – whether you have questions,
  feedback, or just want to say hi! Get in touch at support@sproutvideo.com.
- Some objects may return nulls in deeply nested fields
- Requires setup of connected app in SproutVideo
- API requires OAuth2 authentication
- SproutVideo is a video hosting platform for business. We offer all the video privacy,
  marketing, and analytics tools any business needs to succeed with live and on-demand
  video content online.
- Dynamic watermarks dissuade viewers from recording their screen by displaying their
  email address, IP address, and session ID directly on-screen.
- Requires an active subscription to access API features
- API calls may incur rate limits based on subscription level
- OAuth support
- SproutVideo offers all of the video hosting and live stream broadcasting features
  to meet your business goals.
- Signed Embed Codes are only available with certain plans.
- Requires some programming knowledge to implement properly.
- Some features may not work if cookies are blocked.
- Requires programming knowledge to implement signed embed codes.
- The iframe based embed codes can take many different parameters that change the
  look and feel as well as the behavior of the player.
- Most email clients do not support video playback in the inbox at this time.
- Embedding videos requires customization of the embed code.
- The 'Email Client' option is a codeless option.
- Embedding videos requires copying the embed code from your SproutVideo account.
- Ensure to configure OAuth2 for authentication.
- Your video must be listed as Public for WordPress to pull the Embed code from our
  platform.
- OAuth2 authentication is required for accessing video data.
- SproutVideo provides high level analytics you can use to see things like impressions
  & plays, popular videos, popular downloads, location, and much more.
- Some objects like Video may return nulls in deeply nested fields
- Search engine indexing must be enabled for your content landing pages hosted by
  SproutVideo to have the greatest reach.
- Some themes support limited HTML in site descriptions.
- For all team members, regardless of use case, we recommend enabling Two-Factor Authentication
  and assigning roles to protect direct access to your video hosting account.
- Some features may be limited based on the plan
- Be sure to check out our article on customizing embed codes to learn how to edit
  your embed codes for responsive inline videos, custom player colors, enabling autoplay,
  custom post-play screens, and much more!
- When capturing personally identifiable information from viewers, you may need to
  disclose how you will be using it.
- Webhooks contain a header called `sproutvideo-signature` with the timestamp and
  a signature.
- Currently, the only valid signature scheme is `v1`. SproutVideo generates signatures
  using HMAC with SHA2-256.
- Requires an active SproutVideo account for API access
- Rate limits apply to API usage
- Webhooks are triggered when a video is done processing.
- Payload is JSON-encoded data about the video.
errors:
- '429: Too Many Requests'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '415 - Unsupported Media Type: Check the file extension'
- '413 - Request Entity Too Large: Reduce file size or check storage limits'
- '429: Too Many Requests - If there are more than 200 requests in a minute for a
  particular account.'
- '415 - Unsupported Media Type: Unsupported file extension.'
- '413 - Request Entity Too Large: Upload exceeds storage limits.'
- '415 - Unsupported Media Type: Unsupported file extension for upload.'
- '413 - Request Entity Too Large: Upload exceeds storage limits or size limits.'
- '401 Unauthorized: Check your API token.'
- '404 Not Found: Endpoint does not exist.'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify API key or token'
- '404 Not Found: Ensure the endpoint exists'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '403 Forbidden: Check your API key and permissions'
- '404 Not Found: Ensure the endpoint is correct'
- '500 Internal Server Error: Try again later or contact support'
- 'Invalid signature: Ensure that the signature is calculated correctly.'
- '401 Unauthorized: Check your credentials.'
- '403 Forbidden: Ensure you have the right permissions.'
- '401 Unauthorized: Recheck OAuth credentials or token expiration'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Validate your authentication tokens'
- '403 Forbidden: Check API permissions'
- '404 Not Found: Verify the video ID or endpoint path'
- '400 Bad Request: Check your webhook URL format.'
- '401 Unauthorized: Verify your authentication credentials.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://sproutvideo.com
  auth:
    type: oauth2
source_metadata: null
