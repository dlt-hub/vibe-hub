resources:
- name: getVariable
  endpoint:
    path: /getVariable
    method: GET
    data_selector: data
    params: {}
- name: getDeckStatus
  endpoint:
    path: /getDeckStatus
    method: GET
    data_selector: data
    params: {}
- name: setVariable
  endpoint:
    path: /setVariable
    method: POST
    data_selector: data
    params: {}
- name: deleteVariable
  endpoint:
    path: /deleteVariable
    method: POST
    data_selector: data
    params: {}
- name: insertArray
  endpoint:
    path: /insertArray
    method: POST
    data_selector: data
    params: {}
- name: deleteArray
  endpoint:
    path: /deleteArray
    method: POST
    data_selector: data
    params: {}
- name: changeDeckStatus
  endpoint:
    path: /changeDeckStatus
    method: POST
    data_selector: data
    params: {}
- name: triggerButton
  endpoint:
    path: /triggerButton
    method: POST
    data_selector: data
    params: {}
- name: releaseButton
  endpoint:
    path: /releaseButton
    method: POST
    data_selector: data
    params: {}
- name: modifyButton
  endpoint:
    path: /modifyButton
    method: POST
    data_selector: data
    params: {}
- name: popupMessage
  endpoint:
    path: /popupMessage
    method: POST
    data_selector: data
    params: {}
- name: alertMessage
  endpoint:
    path: /alertMessage
    method: POST
    data_selector: data
    params: {}
- name: notificationMessage
  endpoint:
    path: /notificationMessage
    method: POST
    data_selector: data
    params: {}
- name: OBS
  endpoint:
    path: /integrations/obs
    method: GET
- name: Twitch
  endpoint:
    path: /integrations/twitch
    method: GET
- name: YouTube Live
  endpoint:
    path: /integrations/youtube
    method: GET
- name: Voice Control
  endpoint:
    path: /integrations/voice
    method: GET
- name: Elgato Stream Deck
  endpoint:
    path: /integrations/elgato-stream-deck
    method: GET
- name: Mix It Up
  endpoint:
    path: /integrations/mix-it-up
    method: GET
- name: OBS
  endpoint:
    path: /integrations/obs
    method: GET
- name: Twitch
  endpoint:
    path: /integrations/twitch
    method: GET
- name: YouTube Live
  endpoint:
    path: /integrations/youtube
    method: GET
- name: Voice Control
  endpoint:
    path: /integrations/voice
    method: GET
- name: Elgato Stream Deck
  endpoint:
    path: /integrations/elgato-stream-deck
    method: GET
- name: Mix It Up
  endpoint:
    path: /integrations/mix-it-up
    method: GET
- name: extensions
  endpoint:
    path: /extensions
    method: GET
    data_selector: extensions
- name: OBS Websocket
  endpoint:
    path: /
    method: GET
- name: Elgato Stream Deck
  endpoint:
    path: /integrations/elgato-stream-deck
    method: GET
- name: Set Button Variable
  endpoint:
    path: /commands/variables/set-button-variable
    method: GET
    data_selector: variables
    params: {}
- name: Set Button Instance Variable
  endpoint:
    path: /commands/variables/set-button-instance-variable
    method: GET
    data_selector: variables
    params: {}
- name: Set Boolean
  endpoint:
    path: /commands/variables/set-boolean-variable
    method: GET
    data_selector: variables
    params: {}
- name: Get Button Variable
  endpoint:
    path: /commands/variables/get-button-variable
    method: GET
    data_selector: variables
    params: {}
- name: Get Global Variable
  endpoint:
    path: /commands/variables/get-global-variable
    method: GET
    data_selector: variables
    params: {}
- name: Get Variable Type
  endpoint:
    path: /commands/variables/variable-get-type
    method: GET
    data_selector: variables
    params: {}
- name: Variable Transition
  endpoint:
    path: /commands/variables/variable-transition
    method: GET
    data_selector: variables
    params: {}
- name: Delete Variable
  endpoint:
    path: /commands/variables/delete-variable
    method: GET
    data_selector: variables
    params: {}
- name: Clamp
  endpoint:
    path: /docs/commands/number/clamp
    method: GET
    data_selector: Clamp
    params: {}
- name: Random
  endpoint:
    path: /docs/commands/number/random
    method: GET
    data_selector: Random
    params: {}
- name: Hex String to Number
  endpoint:
    path: /docs/commands/number/hexstringtonumber
    method: GET
    data_selector: Hex String to Number
    params: {}
- name: Number to Hex String
  endpoint:
    path: /docs/commands/number/numbertohexstring
    method: GET
    data_selector: Number to Hex String
    params: {}
- name: String to Number
  endpoint:
    path: /docs/commands/number/stringtonumber
    method: GET
    data_selector: String to Number
    params: {}
- name: color_conversion
  endpoint:
    path: /commands/number/hexstringtonumber
    method: POST
    data_selector: command_list
- name: string_lower_case
  endpoint:
    path: /string/lowercase
    method: POST
    data_selector: returned_string
- name: string_upper_case
  endpoint:
    path: /string/uppercase
    method: POST
    data_selector: returned_string
- name: string_capitalize
  endpoint:
    path: /string/capitalize
    method: POST
    data_selector: returned_string
- name: string_letters_digits_only
  endpoint:
    path: /string/lettersdigits
    method: POST
    data_selector: processed_string
- name: string_digits_only
  endpoint:
    path: /string/digits
    method: POST
    data_selector: processed_string
- name: string_letters_only
  endpoint:
    path: /string/letters
    method: POST
    data_selector: processed_string
- name: string_format
  endpoint:
    path: /string/format
    method: POST
    data_selector: formatted_string
- name: string_hash
  endpoint:
    path: /string/hash
    method: POST
    data_selector: hashed_string
- name: string_substitute_variables
  endpoint:
    path: /string/substitute
    method: POST
    data_selector: returned_string
- name: string_url_encode
  endpoint:
    path: /string/urlencode
    method: POST
    data_selector: encoded_string
- name: string_split_to_array
  endpoint:
    path: /string/split
    method: POST
    data_selector: array_values
- name: Array Random
  endpoint:
    path: /docs/commands/variables#getbuttonvariable
    method: GET
    data_selector: records
- name: wait_until_variable_exists
  endpoint:
    path: /docs/commands/wait/until-variable-exists
    method: GET
    data_selector: records
- name: wait_until_variable_is
  endpoint:
    path: /docs/commands/wait/until-variable-is
    method: GET
    data_selector: records
- name: wait_for_timeout
  endpoint:
    path: /docs/commands/wait/for-timeout
    method: GET
    data_selector: records
- name: wait_for_keyboard_button_status
  endpoint:
    path: /docs/commands/wait/for-keyboard-button-status
    method: GET
    data_selector: records
- name: wait_for_user_choice
  endpoint:
    path: /docs/commands/wait/for-user-choice
    method: GET
    data_selector: records
- name: wait_for_user_input
  endpoint:
    path: /docs/commands/wait/for-user-input
    method: GET
    data_selector: records
- name: Wait For User Input
  endpoint:
    path: /wait_for_user_input
    method: POST
    data_selector: result
    params: {}
- name: trigger_hotkey
  endpoint:
    path: /trigger/hotkey
    method: POST
    data_selector: response
    params: {}
- name: event_subscription
  endpoint:
    path: /event/subscription
    method: POST
    data_selector: response
    params: {}
- name: Switch Scene
  endpoint:
    path: /commands/switch_scene
    method: POST
- name: Change Scene Transition
  endpoint:
    path: /commands/change_scene_transition
    method: POST
- name: Remove Scene Transition
  endpoint:
    path: /commands/remove_scene_transition
    method: POST
- name: Set Transition
  endpoint:
    path: /commands/set_transition
    method: POST
- name: Set Transition Settings
  endpoint:
    path: /commands/set_transition_settings
    method: POST
- name: Set Transition Duration
  endpoint:
    path: /commands/set_transition_duration
    method: POST
- name: Create Scene
  endpoint:
    path: /commands/create_scene
    method: POST
- name: Change Scale
  endpoint:
    path: /commands/obs-sources/obs-change-scale
    method: POST
- name: Change Rotation
  endpoint:
    path: /commands/obs-sources/obs-change-rotation
    method: POST
- name: Change Volume
  endpoint:
    path: /commands/obs-sources/obs-change-volume
    method: POST
- name: Change Center Point
  endpoint:
    path: /commands/obs-sources/obs-center-point
    method: POST
- name: Change Cropping
  endpoint:
    path: /commands/obs-sources/obs-cropping
    method: POST
- name: Source Change Text (GDI+)
  endpoint:
    path: /commands/obs-sources/obs-source-change-text-gdi
    method: POST
- name: Source Change Text (FT2)
  endpoint:
    path: /commands/obs-sources/obs-source-change-text-ft
    method: POST
- name: Change Settings
  endpoint:
    path: /commands/obs-sources/obs-change-settings
    method: POST
- name: Mute
  endpoint:
    path: /commands/obs-sources/obs-mute
    method: POST
- name: Toggle Mute
  endpoint:
    path: /commands/obs-sources/obs-toggle-mute
    method: POST
- name: Audio Monitor Type
  endpoint:
    path: /commands/obs-sources/obs-audio-monitor-type
    method: POST
- name: Create Source
  endpoint:
    path: /commands/obs-sources/obs-create-source
    method: POST
- name: Delete Source
  endpoint:
    path: /commands/obs-sources/obs-delete-source
    method: POST
- name: Duplicate Source
  endpoint:
    path: /commands/obs-sources/obs-duplicate-source
    method: POST
- name: Change Blend Mode
  endpoint:
    path: /commands/obs-sources/obs-change-blend-mode
    method: POST
- name: Change Cropping
  endpoint:
    path: /motion/change_cropping
    method: POST
    data_selector: command_list
    params: {}
- name: Alpha Filter
  endpoint:
    path: /motion/alpha_filter
    method: POST
    data_selector: command_list
    params: {}
- name: Filter Settings
  endpoint:
    path: /motion/filter_settings
    method: POST
    data_selector: command_list
    params: {}
- name: toggle_recording
  endpoint:
    path: /toggle_recording
    method: POST
- name: start_recording
  endpoint:
    path: /start_recording
    method: POST
- name: stop_recording
  endpoint:
    path: /stop_recording
    method: POST
- name: pause_recording
  endpoint:
    path: /pause_recording
    method: POST
- name: resume_recording
  endpoint:
    path: /resume_recording
    method: POST
- name: Get Channel Info
  endpoint:
    path: /channels/{channel}/info
    method: GET
    data_selector: data
- name: Get Channel Teams
  endpoint:
    path: /channels/{channel}/teams
    method: GET
    data_selector: default
- name: Get Team Information
  endpoint:
    path: /teams/{team}
    method: GET
    data_selector: data
- name: Get Game Info
  endpoint:
    path: /games/{game_name}
    method: GET
    data_selector: data
- name: Get Moderators
  endpoint:
    path: /moderators/{channel}
    method: GET
    data_selector: data
- name: Get VIPs
  endpoint:
    path: /vips/{channel}
    method: GET
    data_selector: data
- name: Get Chatters
  endpoint:
    path: /chatters/{channel}
    method: GET
    data_selector: data
- name: Get Banned Users
  endpoint:
    path: /banned_users/{channel}
    method: GET
    data_selector: data
- name: Get Blocked Terms
  endpoint:
    path: /blocked_terms/{channel}
    method: GET
    data_selector: default
- name: Get Subscription Status
  endpoint:
    path: /subscriptions/{broadcaster_id}/{user_id}
    method: GET
    data_selector: data
- name: Get Subscriber Count
  endpoint:
    path: /subscriptions/count/{login_name}
    method: GET
    data_selector: data
- name: Get Latest Followers
  endpoint:
    path: /followers/{channel}
    method: GET
    data_selector: data
- name: Get Follower Count
  endpoint:
    path: /followers/count/{login_name}
    method: GET
    data_selector: data
- name: Get Channel Point Rewards
  endpoint:
    path: /channel_points/{channel}/rewards
    method: GET
    data_selector: data
- name: Get Chat Settings
  endpoint:
    path: /chat/settings/{channel}
    method: GET
    data_selector: data
- name: Get Emotes
  endpoint:
    path: /emotes/{channel}
    method: GET
    data_selector: data
- name: Get User Color
  endpoint:
    path: /user/color/{login_name}
    method: GET
    data_selector: data
- name: send_chat_message
  endpoint:
    path: /send_chat_message
    method: POST
    data_selector: message
    params: {}
- name: reply_to_message
  endpoint:
    path: /reply_to_message
    method: POST
    data_selector: reply
    params: {}
- name: delete_chat_message
  endpoint:
    path: /delete_chat_message
    method: DELETE
    data_selector: delete
    params: {}
- name: send_whisper
  endpoint:
    path: /send_whisper
    method: POST
    data_selector: whisper
    params: {}
- name: join_channel
  endpoint:
    path: /join_channel
    method: POST
    data_selector: join
    params: {}
- name: leave_channel
  endpoint:
    path: /leave_channel
    method: POST
    data_selector: leave
    params: {}
- name: send_announcement
  endpoint:
    path: /send_announcement
    method: POST
    data_selector: announcement
    params: {}
- name: shoutout_user
  endpoint:
    path: /shoutout_user
    method: POST
    data_selector: shoutout
    params: {}
- name: create_reward
  endpoint:
    path: /createReward
    method: POST
- name: edit_reward
  endpoint:
    path: /editReward
    method: PUT
- name: delete_reward
  endpoint:
    path: /deleteReward
    method: DELETE
- name: update_redemption_status
  endpoint:
    path: /updateRedemptionStatus
    method: PATCH
- name: create_prediction_2_outcomes
  endpoint:
    path: /commands/twitch/create_prediction_2_outcomes
    method: POST
- name: create_prediction
  endpoint:
    path: /commands/twitch/create_prediction
    method: POST
- name: end_prediction
  endpoint:
    path: /commands/twitch/end_prediction
    method: POST
- name: create_poll
  endpoint:
    path: /commands/twitch/create_poll
    method: POST
- name: get_latest_poll_prediction_id
  endpoint:
    path: /commands/twitch/get_latest_poll_prediction_id
    method: GET
- name: get_poll_prediction_result
  endpoint:
    path: /commands/twitch/get_poll_prediction_result
    method: GET
- name: end_poll
  endpoint:
    path: /commands/twitch/end_poll
    method: POST
- name: Add Moderator
  endpoint:
    path: /moderation/add
    method: POST
- name: Remove Moderator
  endpoint:
    path: /moderation/remove
    method: POST
- name: Add VIP
  endpoint:
    path: /moderation/vip/add
    method: POST
- name: Remove VIP
  endpoint:
    path: /moderation/vip/remove
    method: POST
- name: Start Raid
  endpoint:
    path: /raids/start
    method: POST
- name: Cancel Raid
  endpoint:
    path: /raids/cancel
    method: POST
- name: Ban User
  endpoint:
    path: /moderation/ban
    method: POST
- name: Unban User
  endpoint:
    path: /moderation/unban
    method: POST
- name: Timeout User
  endpoint:
    path: /moderation/timeout
    method: POST
- name: Set User Color
  endpoint:
    path: /chat/color
    method: PUT
- name: set_slow_mode
  endpoint:
    path: /set-slow-mode
    method: POST
- name: set_follower_mode
  endpoint:
    path: /set-follower-mode
    method: POST
- name: set_subscriber_mode
  endpoint:
    path: /set-subscriber-mode
    method: POST
- name: set_emote_mode
  endpoint:
    path: /set-emote-mode
    method: POST
- name: set_shield_mode
  endpoint:
    path: /set-shield-mode
    method: POST
- name: run_ad
  endpoint:
    path: /run-ad
    method: POST
- name: modify_channel_info
  endpoint:
    path: /modify-channel-info
    method: POST
- name: set_unique_chat
  endpoint:
    path: /set-unique-chat
    method: POST
- name: get_automod_settings
  endpoint:
    path: /get-automod-settings
    method: GET
- name: set_automod_settings
  endpoint:
    path: /set-automod-settings
    method: POST
- name: set_blocked_term
  endpoint:
    path: /set-blocked-term
    method: POST
- name: remove_blocked_term
  endpoint:
    path: /remove-blocked-term
    method: POST
- name: send_chat_message
  endpoint:
    path: /sendChatMessage
    method: POST
    data_selector: response
    params: {}
- name: change_status
  endpoint:
    path: /changeStatus
    method: POST
    data_selector: response
    params: {}
- name: get_stats
  endpoint:
    path: /getStats
    method: GET
    data_selector: response
    params: {}
- name: user_subscription_status
  endpoint:
    path: /userSubscriptionStatus
    method: GET
    data_selector: response
    params: {}
- name: ban_user
  endpoint:
    path: /banUser
    method: POST
    data_selector: response
    params: {}
- name: unban_user
  endpoint:
    path: /unbanUser
    method: POST
    data_selector: response
    params: {}
- name: ad_break
  endpoint:
    path: /adBreak
    method: POST
    data_selector: response
    params: {}
- name: CSV
  endpoint:
    path: /commands/file/csv
    method: GET
    data_selector: records
- name: set_box
  endpoint:
    path: /csv/set_box
    method: POST
    data_selector: response
    params: {}
- name: column_find_value
  endpoint:
    path: /csv/column_find_value
    method: POST
    data_selector: response
    params: {}
- name: row_find_value
  endpoint:
    path: /csv/row_find_value
    method: POST
    data_selector: response
    params: {}
- name: sort
  endpoint:
    path: /csv/sort
    method: POST
    data_selector: response
    params: {}
- name: move_column
  endpoint:
    path: /csv/move_column
    method: POST
    data_selector: response
    params: {}
- name: move_row
  endpoint:
    path: /csv/move_row
    method: POST
    data_selector: response
    params: {}
- name: math
  endpoint:
    path: /csv/math
    method: POST
    data_selector: response
    params: {}
- name: Save Number
  endpoint:
    path: /docs/commands/file-ini/ini-save-number
    method: GET
- name: Save Text
  endpoint:
    path: /docs/commands/file-ini/ini-save-text
    method: GET
- name: Load Number
  endpoint:
    path: /docs/commands/file-ini/ini-load-number
    method: GET
- name: Load Text
  endpoint:
    path: /docs/commands/file-ini/ini-load-text
    method: GET
- name: Delete Key
  endpoint:
    path: /docs/commands/file-ini/ini-delete-key
    method: GET
- name: Delete Section
  endpoint:
    path: /docs/commands/file-ini/ini-delete-section
    method: GET
- name: Key Exists
  endpoint:
    path: /docs/commands/file-ini/ini-key-exists
    method: GET
- name: Section Exists
  endpoint:
    path: /docs/commands/file-ini/ini-section-exists
    method: GET
- name: INI to Object
  endpoint:
    path: /docs/commands/file-ini/ini-initoobject
    method: GET
- name: Object to INI
  endpoint:
    path: /docs/commands/file-ini/ini-objecttoini
    method: GET
- name: buffer_create
  endpoint:
    path: /buffer/create
    method: POST
    data_selector: buffer
    params:
      buffer_name: String
      byte_size: Size of the buffer in bytes. Default is 64.
      type: Fixed, Expand With Grow or Wrap
- name: buffer_poke
  endpoint:
    path: /buffer/poke
    method: POST
    data_selector: buffer
    params:
      buffer_name: String
      type: Type of the buffer
      value_to_write: String
      position: Int
- name: buffer_write
  endpoint:
    path: /buffer/write
    method: POST
    data_selector: buffer
    params:
      buffer_name: String
      type: Type of the buffer
      value_to_write: String
- name: buffer_peek
  endpoint:
    path: /buffer/peek
    method: GET
    data_selector: buffer
    params:
      buffer_name: String
      type: Type of the buffer you want to read from
      variable: String
      position: Int
- name: buffer_read
  endpoint:
    path: /buffer/read
    method: GET
    data_selector: buffer
    params:
      buffer_name: String
      type: Type of the buffer you want to read from
      variable: String
- name: buffer_load
  endpoint:
    path: /buffer/load
    method: POST
    data_selector: buffer
    params:
      buffer_name: String
      file_path: String
- name: buffer_save
  endpoint:
    path: /buffer/save
    method: POST
    data_selector: buffer
    params:
      buffer_name: String
      file_path: String
- name: buffer_delete
  endpoint:
    path: /buffer/delete
    method: DELETE
    data_selector: buffer
    params:
      buffer_name: String
- name: buffer_set_size
  endpoint:
    path: /buffer/set_size
    method: POST
    data_selector: buffer
    params:
      buffer_name: String
      new_size: Int
- name: buffer_set_position
  endpoint:
    path: /buffer/set_position
    method: POST
    data_selector: buffer
    params:
      buffer_name: String
      position: Int
- name: buffer_get_size
  endpoint:
    path: /buffer/get_size
    method: GET
    data_selector: buffer
    params:
      buffer_name: String
      save_variable_as: String
- name: buffer_get_position
  endpoint:
    path: /buffer/get_position
    method: GET
    data_selector: buffer
    params:
      buffer_name: String
      save_variable_as: String
- name: buffer_exists
  endpoint:
    path: /buffer/exists
    method: GET
    data_selector: buffer
    params:
      buffer_name: String
- name: Buffer Exists
  endpoint:
    path: /buffer/exists
    method: GET
    data_selector: result
- name: Buffer Hash SHA1
  endpoint:
    path: /buffer/hash/sha1
    method: GET
    data_selector: hash
- name: Buffer Base64 Encode
  endpoint:
    path: /buffer/base64/encode
    method: POST
    data_selector: encodedString
- name: Buffer Base64 Decode
  endpoint:
    path: /buffer/base64/decode
    method: POST
    data_selector: buffer
- name: Block Button/Group
  endpoint:
    path: /block_button_group
    method: POST
    data_selector: response
    params: {}
- name: Button Get Own ID
  endpoint:
    path: /button_get_own_id
    method: GET
    data_selector: response
    params: {}
- name: Reinitialize Button Variables
  endpoint:
    path: /reinitialize_button_variables
    method: POST
    data_selector: response
    params: {}
- name: Keyboard Simulate Press
  endpoint:
    path: /commands/mouse-kb/keyboardsimulatepress
    method: GET
    data_selector: simulatedKeypresses
    params: {}
- name: Check Keyboard Button Status
  endpoint:
    path: /commands/mouse-kb/checkkeyboardbuttonstatus
    method: GET
    data_selector: checkKeyboardStatus
    params: {}
- name: Wait For Keyboard Button Status
  endpoint:
    path: /commands/mouse-kb/waitforkeyboardbuttonstatus
    method: GET
    data_selector: waitForKeyboardStatus
    params: {}
- name: Mouse Simulate Click
  endpoint:
    path: /commands/mouse-kb/mousesimulateclick
    method: GET
    data_selector: simulateMouseClick
    params: {}
- name: Mouse Change Position
  endpoint:
    path: /commands/mouse-kb/mousechangeposition
    method: GET
    data_selector: changeMousePosition
    params: {}
- name: play_sound_effect
  endpoint:
    path: /play_sound_effect
    method: POST
    data_selector: sound_effect
    params: {}
- name: stop_sound_effect
  endpoint:
    path: /stop_sound_effect
    method: POST
    data_selector: sound_effect
    params: {}
- name: change_volume
  endpoint:
    path: /change_volume
    method: POST
    data_selector: sound_effect
    params: {}
- name: change_speed
  endpoint:
    path: /change_speed
    method: POST
    data_selector: sound_effect
    params: {}
- name: Switch Deck
  endpoint:
    path: /deck/switch
    method: POST
- name: Wait for Input
  endpoint:
    path: /deck/wait-for-input
    method: POST
- name: Wait for Choice
  endpoint:
    path: /deck/wait-for-choice
    method: POST
- name: Wait for Multi Choice
  endpoint:
    path: /deck/wait-for-multi-choice
    method: POST
- name: 'Discord: Send Message'
  endpoint:
    path: /discord/send-message
    method: POST
    data_selector: response
    params: {}
- name: 'Voice: Toggle Status'
  endpoint:
    path: /voice/toggle-status
    method: POST
    data_selector: response
    params: {}
- name: 'Mix It Up: Get All Commands'
  endpoint:
    path: /mix-it-up/get-all-commands
    method: GET
    data_selector: commands
    params:
      pageSize: 500
- name: 'Mix It Up: Run Command'
  endpoint:
    path: /mix-it-up/run-command
    method: POST
    data_selector: response
    params: {}
- name: HTTP Download File
  endpoint:
    path: /docs/commands/introduction#httpdownloadfile
    method: GET
- name: HTTP Upload File
  endpoint:
    path: /docs/commands/introduction#httpuploadfile
    method: GET
- name: Send UDP Packet
  endpoint:
    path: /docs/commands/introduction#sendudppacket
    method: GET
- name: Extension Commands
  endpoint:
    path: /docs/commands/introduction#extensioncommands
    method: GET
- name: Send JSON to Extension
  endpoint:
    path: /docs/commands/introduction#sendjsontoextension
    method: GET
- name: 'Deck: Change Status'
  endpoint:
    path: /docs/commands/introduction#deckchangestatus
    method: GET
- name: 'Deck: Get Status'
  endpoint:
    path: /docs/commands/introduction#deckgetstatus
    method: GET
- name: Overtime
  endpoint:
    path: /docs/commands/introduction#overtime
    method: GET
- name: chat_trigger
  endpoint:
    path: /chat/triggers
    method: POST
    data_selector: triggers
- name: whisper_trigger
  endpoint:
    path: /whispers/triggers
    method: POST
    data_selector: triggers
- name: new_follower_trigger
  endpoint:
    path: /followers/triggers
    method: POST
    data_selector: triggers
- name: subscription_trigger
  endpoint:
    path: /subscriptions/triggers
    method: POST
    data_selector: triggers
- name: community_gift_subs_trigger
  endpoint:
    path: /community_gift_subs/triggers
    method: POST
    data_selector: triggers
- name: bits_trigger
  endpoint:
    path: /bits/triggers
    method: POST
    data_selector: triggers
- name: raid_trigger
  endpoint:
    path: /raids/triggers
    method: POST
    data_selector: triggers
- name: channel_points_trigger
  endpoint:
    path: /channel_points/triggers
    method: POST
    data_selector: triggers
- name: prediction_trigger
  endpoint:
    path: /predictions/triggers
    method: POST
    data_selector: triggers
- name: poll_trigger
  endpoint:
    path: /polls/triggers
    method: POST
    data_selector: triggers
- name: hype_train_trigger
  endpoint:
    path: /hype_trains/triggers
    method: POST
    data_selector: triggers
- name: moderation_trigger
  endpoint:
    path: /moderation/triggers
    method: POST
    data_selector: triggers
- name: shoutout_trigger
  endpoint:
    path: /shoutouts/triggers
    method: POST
    data_selector: triggers
- name: automatic_reward_redemption_trigger
  endpoint:
    path: /automatic_reward_redemptions/triggers
    method: POST
    data_selector: triggers
- name: chat
  endpoint:
    path: /chat
    method: GET
    data_selector: messages
- name: subscriber
  endpoint:
    path: /subscribers
    method: GET
    data_selector: newSubscribers
- name: member
  endpoint:
    path: /members
    method: GET
    data_selector: newMembers
- name: super_chat
  endpoint:
    path: /superchat
    method: GET
    data_selector: superChats
- name: super_sticker
  endpoint:
    path: /supersticker
    method: GET
    data_selector: superStickers
- name: OBS Trigger
  endpoint:
    path: /obs/triggers
    method: POST
    data_selector: events
- name: webhook
  endpoint:
    path: /webhook
    method: POST
    data_selector: customData
    params:
      trigger: trigger
- name: Extensions
  endpoint:
    path: /extensions
    method: GET
    data_selector: extensions
    params: {}
- name: OBS Connections
  endpoint:
    path: /obs/connections
    method: GET
    data_selector: connections
    params: {}
- name: Localisation
  endpoint:
    path: /localisation
    method: GET
    data_selector: localisation
    params: {}
- name: Twitch Alerts
  endpoint:
    path: /twitch/alerts
    method: GET
- name: Twitch Chat
  endpoint:
    path: /twitch/chat
    method: GET
notes:
- SAMMI can listen to events and trigger buttons, read and send chat messages, control
  your OBS and more!
- Supports reading and writing into various files
- Community made extensions available
- SAMMI interacts with OBS Studio through OBS Websocket (OBSWS), enabling remote control
  and event monitoring in OBS Studio.
- OBS Studio 28 and higher come with OBS Websocket 5.0 pre-installed.
- You must relink your Twitch account every 60 days as that's when your token expires.
- Keep your refresh token safe! If you accidentally share it with someone, you can
  go to the Google security settings page to revoke user access to SAMMI in your Google
  account and authorize it again.
- If you run out of your individual quota, you will get an alert message 'You have
  exceeded your user quota. Slow down!' in SAMMI and will not be able to listen to
  new events or use any commands for 1 minute before your quota is replenished. You
  might need to reload the Bridge as well.
- Do not run SAMMI directly out of the zip folder.
- Do not place the SAMMI folder in your Program Files or any network drives.
- SAMMI is a fully customizable Streaming Assistant that lets your Twitch and YouTube
  Live audience control and interact with your stream.
- SAMMI can listen to events and trigger buttons, read and send chat messages, control
  your OBS and more.
- Migrating all buttons and extensions from LioranBoard 1 to SAMMI must be done manually.
- SAMMI is too different from LioranBoard 1 (especially when it comes to how variables
  are handled) and therefore it’s not possible to create a migration tool.
- Always back up your files and folders before running updates!
- Ensure all your SAMMI components (Core, Bridge and Panel) are updated to the latest
  versions and are functioning properly before deleting any old LioranBoard 2 files.
- You will need to keep the Bridge dock open at all times.
- You can have only one Bridge open at the same time.
- Be mindful using this command. If the popup stays on for a long time before the
  user dismisses it, they might get disconnected from any active websockets (such
  as Bridge, Twitch or OBS).
- Be careful when pulling your OAuth token info. Make sure to delete the variable
  when you don't need it anymore. Do not accidentally expose it on your stream.
- Only rewards owned by SAMMI can be further modified from within SAMMI.
- Must be at least affiliate to use these commands.
- Requires setup of OAuth authentication.
- CSV files consist of data arranged in rows and columns.
- The file path has to be the full file path of the file, ending with .csv.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- SAMMI can listen to Twitch events and automatically execute your buttons.
- Ensure the scope to listen to Channel Points has been enabled in SAMMI.
- The default URI is localhost:9450/webhook for all POST webhook requests.
- You must pass an Authorization header supplying the password if it’s enabled in
  the SAMMI Settings.
- 'Using C#? System.Net.ServicePointManager.Expect100Continue must be set to false
  to stop the header ''Expect: 100-Continue'' from being sent with the request as
  SAMMI will not handle it properly.'
- SAMMI can connect to any app or service that has public API or websocket access.
- Full FPS is enabled when SAMMI is in focus.
- Changes will take effect after restarting SAMMI.
- You can try temporarily disabling your antivirus/firewall or adding an exception
  to allow the app through.
- If the decks_data.json file in the ‘json’ folder within your default SAMMI folder
  is 0kb in size, this means your deck has somehow been corrupted.
- Ensure connection to Twitch Chat and enable Auto connect to Twitch Chat.
- Twitch may temporarily block accounts that send too many messages in a short period.
- Check whether the button is triggering properly.
- Make sure to relink your Twitch account after editing scopes.
- You can now communicate with SAMMI via HTTP requests and command line using CURL
- To enable the API server, select open API server in SAMMI Settings and optionally
  set a password
- Automatic Updating works again and is safe to use (only for version 2022.3.0 and
  up).
errors:
- 'Error: {Short Error Code}'
- 'Description: {More detailed information about the error}'
- '400 Bad Request: Malformed request body'
- '400 Bad Request: Request is missing.'
- '400 Bad Request: Required parameter is missing.'
- '400 Bad Request: Incorrect parameter type.'
- '401 Unauthorized: Authorization failed.'
- '404 Not Found: Endpoint not found.'
- '404 Not Found: Unsupported request.'
- '404 Not Found: Button ID not found.'
- '404 Not Found: Variable not found.'
- '405 Method Not Allowed: Method not supported.'
- 'Connection Error: Ensure OBS Websocket is running and settings match.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- You have exceeded your user quota. Slow down!
- Cannot connect to OBS, Bridge or Twitch chat
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'ERR_BADAUTH: Authentication token may have expired.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'Button Command Error: 99% of cases user errors.'
- Unknown Error
- Twitch Pubsub Error
- HTTP Error
auth_info:
  mentioned_objects: []
client:
  base_url: https://sammi.solutions
  headers:
    Accept: application/json
source_metadata: null
