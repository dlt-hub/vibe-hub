resources:
- name: reporting
  endpoint:
    path: /reporting/
    method: GET
- name: message_tracking
  endpoint:
    path: /message-tracking/messages
    method: GET
    params:
      startDate: '2019-04-01T01:00:00.000Z'
      endDate: '2019-05-02T09:36:00.000Z'
      ciscoHost: All_Hosts
      searchOption: messages
      offset: 0
      limit: 20
- name: quarantine
  endpoint:
    path: /quarantine/
    method: GET
- name: email_threat_defense
  endpoint:
    path: /api/v1/email/threat_defense
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: mail_policies
  endpoint:
    path: /MailPolicies
    method: GET
    data_selector: policies
- name: recipient_access_table
  endpoint:
    path: /RecipientAccessTable
    method: GET
    data_selector: domains
- name: smtp_routes
  endpoint:
    path: /SMTPRoutes
    method: GET
    data_selector: routes
- name: service_updates
  endpoint:
    path: /services/updates
    method: GET
    data_selector: updates
    params: {}
- name: MX Records
  endpoint:
    path: /review-and-validate-mx-records
    method: GET
    data_selector: records
- name: impersonator_permissions
  endpoint:
    path: /permissions
    method: POST
    data_selector: permissions
- name: user_account_creation
  endpoint:
    path: /users
    method: POST
    data_selector: users
- name: account_settings
  endpoint:
    path: /account-settings
    method: POST
    data_selector: account-settings
- name: domain_mapping
  endpoint:
    path: /domain-mapping
    method: POST
    data_selector: domain-mapping
- name: Search & Remediate
  endpoint:
    path: /search/remediate
    method: GET
    data_selector: results
- name: service_provider
  endpoint:
    path: /services/data/vXX.X/sobjects/ServiceProvider
    method: POST
    data_selector: records
- name: identity_provider
  endpoint:
    path: /services/data/vXX.X/sobjects/IdentityProvider
    method: POST
    data_selector: records
- name: SAML Configuration
  endpoint:
    path: /services/data/vXX.X/sobjects/SAMLConfiguration
    method: POST
    data_selector: records
- name: threat_feed
  endpoint:
    path: /ctia/feed/feed-7fedf330-xxyy-xxyy-xxyy-156b3ec7fb03/view
    method: GET
    data_selector: observables
- name: journal_rule_microsoft_365
  endpoint:
    path: /services/data/vXX.X/sobjects/JournalRule
    method: POST
    data_selector: records
    params: {}
- name: bcc_rule_microsoft_365
  endpoint:
    path: /services/data/vXX.X/sobjects/BccRule
    method: POST
    data_selector: records
    params: {}
- name: journal_rule_google_workspace
  endpoint:
    path: /services/data/vXX.X/sobjects/JournalRuleGoogle
    method: POST
    data_selector: records
    params: {}
- name: message_submission
  endpoint:
    path: /v1/messages/submit
    method: POST
    data_selector: submission_response
    params: {}
- name: cli_access
  endpoint:
    path: /cli/access
    method: POST
    data_selector: response
    params:
      cloud_user: username
      cloud_host: esaX.CUSTOMER.iphmx.com
      private_key: LOCAL_PATH_TO_SSH_PRIVATE_RSA_KEY
      proxy_server: PROXY_SERVER
- name: DNS Records
  endpoint:
    path: /hostnames
    method: GET
    data_selector: records
- name: AWS EC2 Load Balancer
  endpoint:
    path: /ami/deployment/with/nlb
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: url_verdict
  endpoint:
    path: /v1/retro/device/{device_id}
    method: GET
    data_selector: retros
    params:
      since: '2022-03-29T23:20:24Z'
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: records
    params: {}
- name: mailbox_auto_remediation
  endpoint:
    path: /services/data/vXX.X/sobjects/MailboxAutoRemediation
    method: GET
    data_selector: records
    params: {}
- name: safe_print
  endpoint:
    path: /api/safe_print
    method: POST
    data_selector: attachment
    params: {}
- name: consolidated_event_logs
  endpoint:
    path: /api/consolidated_event_logs
    method: POST
    data_selector: logs
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Mail.Read
  endpoint:
    path: /me/mailFolders/inbox/messages
    method: GET
- name: Mail.ReadWrite
  endpoint:
    path: /me/mailFolders/inbox/messages
    method: POST
- name: Organization.Read.All
  endpoint:
    path: /organization
    method: GET
- name: User.Read.All
  endpoint:
    path: /users
    method: GET
- name: Upload File
  endpoint:
    path: /v1/jobs/files
    method: POST
    data_selector: response_body
    params: {}
- name: Get SAA JobID
  endpoint:
    path: /v1/jobs/$activity.definition_activity_02EOCHJXCX0954K8vsXax8i7ZKBqQZiBTNm.output.response_body$
    method: GET
    data_selector: response_body
    params: {}
- name: Get results from SAA analysis
  endpoint:
    path: /v1/jobs/$activity.definition_activity_02EOCHJXCX0954K8vsXax8i7ZKBqQZiBTNm.output.response_body$
    method: GET
    data_selector: response_body
    params: {}
- name: Security Mailbox Monitor
  endpoint:
    path: /v1/jobs/files
    method: POST
    data_selector: response_body
    params: {}
- name: Get results from SAA analysis
  endpoint:
    path: /v1/jobs/$activity.definition_activity_02EOCHJXCX0954K8vsXax8i7ZKBqQZiBTNm.output.response_body$
    method: GET
    data_selector: response_body
    params: {}
- name: Domain A Security Mailbox
  endpoint:
    path: /v1.0/mailFolders/inbox/messages
    method: GET
    data_selector: value
- name: Splunk Attack Analyzer
  endpoint:
    path: /private-intel/incident/
    method: PATCH
    data_selector: response_body
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
notes:
- Uses Basic authorization or apiKey — requires user credentials
- The jwtToken constructed is only authenticated and valid for the platform that the
  fetch and request headers are sent from.
- Uses OAuth2 with refresh token — requires setup of connected app in Cisco
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- The HAT matches on IP addresses or sending domains.
- The WHITELIST sender group has higher per-connection limits.
- The BLACKLIST sender group drops an incoming connection immediately.
- No two customer configurations are the same. Each customer's self-efficacy is always
  different depending on message volume and message size and deployment size, and
  architecture.
- 'Note: Cluster: Hosted_Cluster as this is Cloud Gateway'
- The Services Updater reaches out each five (5) minutes to the Cisco Update Servers
  by default.
- 'Cluster: Hosted_Cluster as this is Cloud Gateway'
- Using the Aggressive profile is a global-level setting, so ALL per-policy Anti-Spam
  configuration(s) will have this profile applied.
- When enabled, tuning Anti-Spam policy thresholds will have more impact on spam detection
  than the Normal profile, with a more significant potential for false positives.
- Ensure MX records are locked down and ONLY delivering through the Gateway/Cloud
  Gateway assigned IP address(es)
- Review Mail Policies > Recipient Access Table (RAT) and Network > SMTP Routes for
  defined SMTP Routes List
- Continued efficacy issues rely on valid samples and submissions to have Talos take
  next-level action for the rules and thresholds we have discussed.
- No two customer configurations are the same.
- URLs are evaluated using Cisco Talos Intelligence Cloud Services.
- URL Filtering allows message and content filters to take action based on the reputation
  or category of URLs in messages.
- Starting in AsyncOS 13.5, threshold and time-to-live are default to these settings
  and no longer appear in the CLI configuration.
- Cloud Gateway customers that do not have command line access may request this to
  be enabled for their instance.
- Cloud URL Analysis requires Service Logs to be enabled.
- Outbreak Filters feature is recommended to be enabled globally and per applicable
  mail policy.
- Self-signed certificates will require one additional step during ESA configuration.
- For the purpose of this documentation, we will not provide setup or support of the
  third-party external tool.
- Best practice recommendation is to leave the SMTP Conversation to return error code
  if LDAP is unreachable.
- Mailbox Auto Remediation expanded from Microsoft 365 only to supporting Exchange
  on-premise and Hybrid in AsyncOS 13.0.
- Search and Remediate functionality expanded to Search and Remediate in AsyncOS 13.5.1.
- Create a user account with impersonator privileges on the Exchange server.
- Ensure to map the domain to the On-premise account profile.
- Search & Remediate is available within Cisco SecureX by using Cisco Threat Response.
- To perform remedial actions on messages, you must configure the new Remediation
  Forwarding Address field on the Available Integration Modules page when you add
  or edit the ESA or SMA Email module.
- The new Remediation Forwarding Address field and additional prerequisites are added
  to set up remediation.
- For users using Smart licensing, SMA is automatically enabled and registered with
  Cisco Cloud Service Portal and token registration is not required.
- SAML 2.0 SSO allows administrative users to log in to the appliance's web interface
  using the same credentials to access other SAML 2.0 SSO-enabled services.
- With this mechanism, we offload the authentication work to Identity Provider (IdP)
  and security appliance products only take care of authorization.
- Ensure to record the Object ID for Groups and/or Users you assign.
- Ensure to assign the user or group to Azure AD Enterprise Application.
- The Assertion Consumer URL is used to access the web interface of your appliance
  and must match the URL configured on the Identity Provider.
- It is important that you have '/view' at the end of your Polling Path, exactly as
  shown.
- For more information on SecureX integration in Cisco Secure Email, check out our
  Cisco SecureX + Cisco Secure Email page.
- Microsoft is deprecating Basic Authentication for Exchange Online as of Oct. 1,
  2022.
- Unique journal recipient email address is provided by Cisco.
- Recommended hop count for O365 is 3+N, and G-Suite is 2+N.
- Submissions can be made via Outlook or Outlook Web App.
- The Encryption Add-in requires Azure AD permissions using Microsoft Graph API
- The Encryption Add-in currently only supports Microsoft 365 managed domains
- The Cisco Secure Email Plug-in is no longer supported as of December 2023 and should
  be removed.
- 3rd party certificate requirements and validation are becoming more commonplace
  and even best practice.
- CLI access to your hosted appliances should be limited to key individuals within
  your organization.
- Ensure correct proxy is selected based on region.
- Make sure you choose the correct proxy for your region!
- Please do not send your private key to Cisco, only the public key (.pub).
- 'The regions are divided in the following nomenclature: US: esa.<allocation>.iphmx.com,
  Europe (UK DC): esa.<allocation>.c3s2.iphmx.com, Europe (Germany DC): esa.<allocation>.eu.iphmx.com,
  Canada: esa.<allocation>.ca.iphmx.com, Asia/Pacific: esa.<allocation>.ap.iphmx.com.'
- Review your MX and SPF records for any hardcoded ESA hostnames or IPs.
- 'Review your ESA configuration for any hardcoded ESA hostnames or IPs. Examples:
  HAT, RAT, message filters, content filters, SMTP Routes.'
- Monitoring and alerts do not apply to Beta Appliances in a customer Cloud Gateway
  instance as these are considered to be non-production allocations.
- The maximum number of interfaces and listeners that can be assigned on the devices
  is two.
- Three or more interfaces/listeners are not supported on Cisco Secure Email Cloud
  Gateway devices.
- VPN tunnel is NOT for SMTP traffic.
- RADIUS for external authentication of administrator accounts is not available at
  this time.
- VPN tunnel is available at no cost to customers!
- Upgrades are completed in two phases.
- 'Maintenance Windows: Sunday-Friday'
- Configurations cannot be imported directly from an on-premises Gateway to the Cisco
  Cloud Gateway instance.
- Cisco does not migrate configurations from multiple devices or multiple clusters.
- Secure Email Gateway is not available in the AWS marketplace, contact your Cisco
  sales representative with your AWS account details (username and region) to provision
  an AMI image.
- AMI deployments started at AsyncOS 14.0.0-692. Versions older than 14.0.0-692 are
  not available for AMI.
- Secure Email Gateway is not available in the Azure Marketplace. Contact your Cisco
  account team or sales representative for further information on the Azure image
  and deployment.
- Azure deployments start at AsyncOS 14.2.2-004. AsyncOS versions older than this
  are not available for Azure.
- TLS 1.3 Support for SSL Services
- Scanning Password-Protected Attachments in Messages
- Non-compliant/weak TLS cipher suites are now disabled on Inbound SMTP, Outbound
  SMTP, GUI, LDAP and updater by default.
- Non-compliant CSDL Key SSH algorithms like ssh-dss is now disabled on SSH server
  by default but allowed to be configured.
- Email Gateway (On-premises HW and Virtual) customers, please read and review the
  entire Release Notes for AsyncOS 15.0 for Cisco Secure Email Gateway.
- Cloud Gateway customers, please read and review the entire Release Notes for AsyncOS
  15.0 for Cisco Secure Email Cloud Gateway.
- No Support for Cisco Secure Email Phishing Defense from Secure Email Cloud Gateway
  14.3 onwards.
- Sender Maturity is automatically generated for spam classification based on multiple
  sources of information.
- The SDR Reporting and Tracking AsyncOS APIs are updated to reflect the new SDR Threat
  Levels and Category structure.
- The URL Retrospective Verdict and Remediation feature is available for incoming
  mails only.
- URL Retrospective service based Mail Auto Remediation is disabled by default.
- Token Expired errors may occur if the token is not refreshed.
- By default, SDR verification is enabled for incoming mail flow policies and disabled
  for outgoing mail flow policies.
- By default, your email gateway blocks all incoming messages if the SDR verdict is
  “Awful.”
- Supports integration with Identity Providers (IDPs) using OpenID Connect 1.0.
- Currently certified with Microsoft AD FS.
- If you have configured an HTTP proxy server, the IP Reputation, and URL Reputation
  services, and Service Logs will directly connect to the Internet to get the IP and
  URL reputations.
- If you have configured an HTTPS proxy server, make sure that you do not configure
  the proxy server to decrypt the HTTPS traffic originating from your email gateway.
- For Microsoft 365 deployments, the API permissions have changed from Exchange to
  Microsoft Graph.
- Be sure that you are adding your Microsoft 365 domain to the 'Domain Mapping' configuration.
- Safe Print allows for attachments to be converted into an image and embedded in
  a PDF.
- Watermark & cover page are optional.
- CLI configuration not available for 'Consolidated Event Logs'
- Make sure that you have enabled AsyncOS API on the appliance.
- By default, trailblazerconfig is enabled on the appliance.
- Make sure that the configured HTTPS port is opened on the firewall. The default
  HTTPS port is 4431.
- Also, ensure that your DNS server can resolve the hostname that you specified for
  accessing the appliance.
- A new scanning profile option 'Aggressive' is added that can increase the spam catch
  rate with a larger potential for false positives.
- Secure Email Threat Defense is fully integrated into Microsoft 365 for complete
  visibility into inbound, outbound, and internal messages.
- It addresses gaps in Microsoft 365 email security by detecting and blocking advanced
  email threats.
- Monitor Security Mailbox submissions from users, upload to SAA, and generate a XDR
  Incident
- Requires setup of OAuth2 credentials in Azure AD
- Ensure that permissions are correctly set for the Microsoft Graph API
- The Service is subject to scheduled downtime on Fridays from 8 PM to Saturdays 4
  AM Pacific Time.
errors:
- '404: Nothing matches the given URI.'
- '404: Not Found'
- '401: Unauthorized'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'URL_MALICIOUS: Quarantine of malicious URLs'
- 'INAPPROPRIATE_CONTENT: Quarantine of inappropriate content'
- An error occurred during SSO authentication.
- 'THREAT_FEEDS: Unable to fetch the observables from the source: MY_CTR_FEED after
  3 failed attempts. Reason for failure: Cisco Threat Response feeds not supported
  for ''judgements'' format'
- 'Invalid email address: Verify the provided email address.'
- 'Unauthorized: Check your credentials and permissions.'
- '400 Bad Request: Check message format.'
- '401 Unauthorized: Recheck OAuth token.'
- '429 Too Many Requests: Throttle submission requests.'
- '403 Forbidden: Token Expired'
- '201 Created: Device registration successful'
- server certificate verification error (Host 139.138.139.xxx)
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Check your client ID and secret'
- '403 Forbidden: Verify API permissions'
- '404 Not Found: Ensure the endpoint is correct'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Object ID
  - OAuthToken
client:
  base_url: https://api.cisco.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.cisco.com/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
