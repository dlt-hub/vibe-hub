resources:
- name: cluster_nodes
  endpoint:
    path: /v1/cluster/nodes/
    method: GET
    data_selector: nodes
    params: {}
- name: session_login
  endpoint:
    path: /v1/session/login
    method: POST
    data_selector: bearer_token
    params: {}
- name: access_tokens
  endpoint:
    path: /creating-using-access-tokens-to-authenticate-external-services-qumulo-core.html
    method: POST
- name: s3_objects
  endpoint:
    path: /services/data/vXX.X/sobjects/S3Objects
    method: GET
    data_selector: records
    params: {}
- name: ad
  endpoint:
    path: /qq-cli-command-guide/ad/
    method: GET
    data_selector: records
    params: {}
- name: audit
  endpoint:
    path: /qq-cli-command-guide/audit/
    method: GET
    data_selector: records
    params: {}
- name: auth
  endpoint:
    path: /qq-cli-command-guide/auth/
    method: GET
    data_selector: records
    params: {}
- name: capacity
  endpoint:
    path: /qq-cli-command-guide/capacity/
    method: GET
    data_selector: records
    params: {}
- name: cluster
  endpoint:
    path: /qq-cli-command-guide/cluster/
    method: GET
    data_selector: records
    params: {}
- name: container
  endpoint:
    path: /qq-cli-command-guide/container/
    method: GET
    data_selector: records
    params: {}
- name: dns
  endpoint:
    path: /qq-cli-command-guide/dns/
    method: GET
    data_selector: records
    params: {}
- name: encryption
  endpoint:
    path: /qq-cli-command-guide/encryption/
    method: GET
    data_selector: records
    params: {}
- name: fs
  endpoint:
    path: /qq-cli-command-guide/fs/
    method: GET
    data_selector: records
    params: {}
- name: ftp
  endpoint:
    path: /qq-cli-command-guide/ftp/
    method: GET
    data_selector: records
    params: {}
- name: identity
  endpoint:
    path: /qq-cli-command-guide/identity/
    method: GET
    data_selector: records
    params: {}
- name: ad
  endpoint:
    path: /qq-cli-command-guide/ad/
    method: GET
- name: add
  endpoint:
    path: /qq-cli-command-guide/add/
    method: GET
- name: audit
  endpoint:
    path: /qq-cli-command-guide/audit/
    method: GET
- name: auth
  endpoint:
    path: /qq-cli-command-guide/auth/
    method: GET
- name: authoritative
  endpoint:
    path: /qq-cli-command-guide/authoritative/
    method: GET
- name: capacity
  endpoint:
    path: /qq-cli-command-guide/capacity/
    method: GET
- name: change
  endpoint:
    path: /qq-cli-command-guide/change/
    method: GET
- name: checksumming
  endpoint:
    path: /qq-cli-command-guide/checksumming/
    method: GET
- name: cluster
  endpoint:
    path: /qq-cli-command-guide/cluster/
    method: GET
- name: container
  endpoint:
    path: /qq-cli-command-guide/container/
    method: GET
- name: create
  endpoint:
    path: /qq-cli-command-guide/create/
    method: GET
- name: current
  endpoint:
    path: /qq-cli-command-guide/current/
    method: GET
- name: dns
  endpoint:
    path: /qq-cli-command-guide/dns/
    method: GET
- name: encryption
  endpoint:
    path: /qq-cli-command-guide/encryption/
    method: GET
- name: floating
  endpoint:
    path: /qq-cli-command-guide/floating/
    method: GET
- name: fs
  endpoint:
    path: /qq-cli-command-guide/fs/
    method: GET
- name: ftp
  endpoint:
    path: /qq-cli-command-guide/ftp/
    method: GET
- name: get
  endpoint:
    path: /qq-cli-command-guide/get/
    method: GET
- name: halt
  endpoint:
    path: /qq-cli-command-guide/halt/
    method: GET
- name: help
  endpoint:
    path: /qq-cli-command-guide/help/
    method: GET
- name: identity
  endpoint:
    path: /qq-cli-command-guide/identity/
    method: GET
- name: install
  endpoint:
    path: /qq-cli-command-guide/install/
    method: GET
- name: kerberos
  endpoint:
    path: /qq-cli-command-guide/kerberos/
    method: GET
- name: ldap
  endpoint:
    path: /qq-cli-command-guide/ldap/
    method: GET
- name: license
  endpoint:
    path: /qq-cli-command-guide/license/
    method: GET
- name: login
  endpoint:
    path: /qq-cli-command-guide/login/
    method: GET
- name: logout
  endpoint:
    path: /qq-cli-command-guide/logout/
    method: GET
- name: metrics
  endpoint:
    path: /qq-cli-command-guide/metrics/
    method: GET
- name: modify
  endpoint:
    path: /qq-cli-command-guide/modify/
    method: GET
- name: monitoring
  endpoint:
    path: /qq-cli-command-guide/monitoring/
    method: GET
- name: create_tenant
  endpoint:
    path: /qq-cli-command-guide/multitenancy/multitenancy_create_tenant.html
    method: POST
- name: delete_tenant
  endpoint:
    path: /qq-cli-command-guide/multitenancy/multitenancy_delete_tenant.html
    method: DELETE
- name: get_tenant
  endpoint:
    path: /qq-cli-command-guide/multitenancy/multitenancy_get_tenant.html
    method: GET
- name: list_tenants
  endpoint:
    path: /qq-cli-command-guide/multitenancy/multitenancy_list_tenants.html
    method: GET
- name: modify_tenant
  endpoint:
    path: /qq-cli-command-guide/multitenancy/multitenancy_modify_tenant.html
    method: PATCH
- name: files
  endpoint:
    path: /rest-api-guide/files-v1/
    method: GET
    data_selector: records
- name: ad
  endpoint:
    path: /qq-cli-command-guide/ad/
    method: GET
- name: add
  endpoint:
    path: /qq-cli-command-guide/add/
    method: GET
- name: audit
  endpoint:
    path: /qq-cli-command-guide/audit/
    method: GET
- name: auth
  endpoint:
    path: /qq-cli-command-guide/auth/
    method: GET
- name: authoritative
  endpoint:
    path: /qq-cli-command-guide/authoritative/
    method: GET
- name: capacity
  endpoint:
    path: /qq-cli-command-guide/capacity/
    method: GET
- name: change
  endpoint:
    path: /qq-cli-command-guide/change/
    method: GET
- name: checksumming
  endpoint:
    path: /qq-cli-command-guide/checksumming/
    method: GET
- name: cluster
  endpoint:
    path: /qq-cli-command-guide/cluster/
    method: GET
- name: container
  endpoint:
    path: /qq-cli-command-guide/container/
    method: GET
- name: create
  endpoint:
    path: /qq-cli-command-guide/create/
    method: GET
- name: current
  endpoint:
    path: /qq-cli-command-guide/current/
    method: GET
- name: dns
  endpoint:
    path: /qq-cli-command-guide/dns/
    method: GET
- name: encryption
  endpoint:
    path: /qq-cli-command-guide/encryption/
    method: GET
- name: floating
  endpoint:
    path: /qq-cli-command-guide/floating/
    method: GET
- name: fs
  endpoint:
    path: /qq-cli-command-guide/fs/
    method: GET
- name: ftp
  endpoint:
    path: /qq-cli-command-guide/ftp/
    method: GET
- name: get
  endpoint:
    path: /qq-cli-command-guide/get/
    method: GET
- name: halt
  endpoint:
    path: /qq-cli-command-guide/halt/
    method: GET
- name: help
  endpoint:
    path: /qq-cli-command-guide/help/
    method: GET
- name: identity
  endpoint:
    path: /qq-cli-command-guide/identity/
    method: GET
- name: install
  endpoint:
    path: /qq-cli-command-guide/install/
    method: GET
- name: kerberos
  endpoint:
    path: /qq-cli-command-guide/kerberos/
    method: GET
- name: ldap
  endpoint:
    path: /qq-cli-command-guide/ldap/
    method: GET
- name: license
  endpoint:
    path: /qq-cli-command-guide/license/
    method: GET
- name: login
  endpoint:
    path: /qq-cli-command-guide/login/
    method: GET
- name: logout
  endpoint:
    path: /qq-cli-command-guide/logout/
    method: GET
- name: metrics
  endpoint:
    path: /qq-cli-command-guide/metrics/
    method: GET
- name: modify
  endpoint:
    path: /qq-cli-command-guide/modify/
    method: GET
- name: monitoring
  endpoint:
    path: /qq-cli-command-guide/monitoring/
    method: GET
- name: create_tenant
  endpoint:
    path: /qq-cli-command-guide/multitenancy/multitenancy_create_tenant.html
    method: POST
- name: delete_tenant
  endpoint:
    path: /qq-cli-command-guide/multitenancy/multitenancy_delete_tenant.html
    method: DELETE
- name: get_tenant
  endpoint:
    path: /qq-cli-command-guide/multitenancy/multitenancy_get_tenant.html
    method: GET
- name: list_tenants
  endpoint:
    path: /qq-cli-command-guide/multitenancy/multitenancy_list_tenants.html
    method: GET
- name: modify_tenant
  endpoint:
    path: /qq-cli-command-guide/multitenancy/multitenancy_modify_tenant.html
    method: PATCH
- name: source_relationships
  endpoint:
    path: /replication/source-relationships
    method: GET
    data_selector: relationships
- name: target_relationships
  endpoint:
    path: /replication/target-relationships
    method: GET
    data_selector: relationships
- name: ldap_settings
  endpoint:
    path: /ldap/settings
    method: GET
- name: encryption_key_store
  endpoint:
    path: /rest-api-guide/encryption-at-rest-v2/v2_encryption_key-store.html
    method: GET
- name: encryption_key_store_status
  endpoint:
    path: /rest-api-guide/encryption-at-rest-v2/v2_encryption_key-store_status.html
    method: GET
- name: encryption_rotate_keys
  endpoint:
    path: /rest-api-guide/encryption-at-rest-v2/v2_encryption_rotate-keys.html
    method: GET
- name: source_relationships
  endpoint:
    path: /replication/source-relationships
    method: GET
- name: target_relationships
  endpoint:
    path: /replication/target-relationships
    method: GET
- name: upgrade_phase
  endpoint:
    path: /upgrade/qinstall.qimg
    method: GET
    data_selector: state
- name: settings
  endpoint:
    path: /ldap/settings
    method: GET
- name: upgrade_cluster
  endpoint:
    path: /qq/upgrade_cluster
    method: POST
    data_selector: upgrade_status
    params: {}
- name: upgrade_status
  endpoint:
    path: /upgrade/qinstall.qimg
    method: GET
    data_selector: state
    params: {}
- name: round_robin_dns
  endpoint:
    path: /administrator-guide/network-configuration/configuring-round-robin-dns-windows-server
    method: GET
    data_selector: records
- name: s3_bucket
  endpoint:
    path: /s3/buckets
    method: GET
- name: inbound_ports
  endpoint:
    path: /networking/inbound
    method: GET
    data_selector: ports
    params: {}
- name: outbound_ports
  endpoint:
    path: /networking/outbound
    method: GET
    data_selector: ports
    params: {}
- name: create_bucket
  endpoint:
    path: /s3api/create-bucket
    method: POST
    data_selector: Buckets
    params: {}
- name: put_object
  endpoint:
    path: /s3api/put-object
    method: PUT
    data_selector: Metadata
    params: {}
- name: get_object
  endpoint:
    path: /s3api/get-object
    method: GET
    data_selector: Metadata
    params: {}
- name: metrics
  endpoint:
    path: /v2/metrics/endpoints/default/data
    method: GET
- name: qumulo
  endpoint:
    path: /metrics/qumulo
    method: GET
    data_selector: metrics
    params: {}
- name: qumulo_node
  endpoint:
    path: /metrics/qumulo_node
    method: GET
    data_selector: metrics
    params: {}
- name: qumulo_ad_netlogon_request_errors
  endpoint:
    path: /metrics/qumulo_ad_netlogon_request_errors
    method: GET
    data_selector: metrics
    params: {}
- name: qumulo_ad_netlogon_request_latency_seconds
  endpoint:
    path: /metrics/qumulo_ad_netlogon_request_latency_seconds
    method: GET
    data_selector: metrics
    params: {}
- name: qumulo_cpu_crit_temperature_celsius
  endpoint:
    path: /metrics/qumulo_cpu_crit_temperature_celsius
    method: GET
    data_selector: metrics
    params: {}
- name: qumulo_disk_endurance_percent
  endpoint:
    path: /metrics/qumulo_disk_endurance_percent
    method: GET
    data_selector: metrics
    params: {}
- name: inbound_ports
  endpoint:
    path: /networking/inbound_ports
    method: GET
    data_selector: ports
    params: {}
- name: outbound_ports
  endpoint:
    path: /networking/outbound_ports
    method: GET
    data_selector: ports
    params: {}
- name: metrics
  endpoint:
    path: /v2/metrics/endpoints/default/data
    method: GET
    data_selector: metrics
    params: {}
- name: upgrade_cluster
  endpoint:
    path: /upgrade_cluster
    method: POST
    data_selector: upgrade_status
    params: {}
- name: vpn_keys
  endpoint:
    path: /install_vpn_keys
    method: POST
    data_selector: results
- name: LDAP Configuration
  endpoint:
    path: /cluster/ldap
    method: POST
    data_selector: ldap_config
    params: {}
- name: ldap_configuration
  endpoint:
    path: /cluster/ldap
    method: POST
- name: saml_settings
  endpoint:
    path: /saml_modify_settings
    method: POST
    data_selector: settings
    params:
      enable: true
      idp_certificate_file: ~/certificate.pem
      cluster_dns_name: <qumulo-cluster>.<my-org>.com
      idp_entity_id: http://www.<sso-provider>.com/abc12de34fgAB5CDh6i7
      idp_sso_url: https://<my-org>.<sso-provider>.com/abc12de34fgAB5CDh6i7/saml
- name: saml_modify_settings
  endpoint:
    path: /saml_modify_settings
    method: POST
    data_selector: result
    params:
      enable: true
      idp-certificate-file: ~/certificate.pem
      cluster-dns-name: <qumulo-cluster>.<my-org>.com
      idp-entity-id: http://www.<sso-provider>.com/abc12de34fgAB5CDh6i7
      idp-sso-url: https://<my-org>.<sso-provider>.com/abc12de34fgAB5CDh6i7/saml
- name: csi_driver
  endpoint:
    path: /deploy_v1.1.0.zip
    method: GET
    data_selector: driver_info
    params: {}
- name: storage_class
  endpoint:
    path: /v1/storageClass
    method: POST
    data_selector: storageClass
    params: {}
- name: persistent_volume_claim
  endpoint:
    path: /v1/persistentVolumeClaim
    method: POST
    data_selector: persistentVolumeClaim
    params: {}
- name: Qumulo CSI Driver Installation
  endpoint:
    path: /deploy_v1.1.0.zip
    method: GET
    data_selector: driver_installation
    params: {}
- name: storage_class
  endpoint:
    path: /api/v1/storageclasses
    method: POST
    data_selector: storageClass
    params: {}
- name: persistent_volume_claim
  endpoint:
    path: /api/v1/persistentvolumeclaims
    method: POST
    data_selector: persistentVolumeClaim
    params: {}
- name: permissions
  endpoint:
    path: /fs_set_permissions_settings
    method: POST
    data_selector: result
    params: {}
- name: smb_host_restrictions
  endpoint:
    path: /api/smb/host_restrictions
    method: GET
    data_selector: restrictions
    params: {}
- name: role_management
  endpoint:
    path: /api/v1/roles
    method: GET
    data_selector: roles
    params: {}
- name: cross_protocol_permissions
  endpoint:
    path: /cross-protocol-permissions
    method: GET
    data_selector: permissions_data
- name: smb_host_restrictions
  endpoint:
    path: /smb/host_restrictions
    method: GET
    data_selector: restrictions
    params: {}
- name: ad_status
  endpoint:
    path: /v1/ad/status
    method: GET
- name: ad_monitor
  endpoint:
    path: /v1/ad/monitor
    method: GET
- name: ad_join
  endpoint:
    path: /v1/ad/join
    method: GET
- name: gid_to_sids
  endpoint:
    path: /v1/ad/uids/:gid:/sids
    method: GET
- name: local_username_related_identities
  endpoint:
    path: /v1/auth/local-username/:username:/related-identities
    method: GET
- name: posix_gid_related_identities
  endpoint:
    path: /v1/auth/posix-gids/:id:/related-identities
    method: GET
- name: posix_uid_related_identities
  endpoint:
    path: /v1/auth/posix-uids/:id:/related-identities
    method: GET
- name: sid_to_expanded_group_sids
  endpoint:
    path: /v1/ad/uids/:gid:/sids
    method: GET
- name: sid_to_gid
  endpoint:
    path: /v1/ad/uids/:uid:/gid
    method: GET
- name: sid_to_uid
  endpoint:
    path: /v1/ad/uids/:sid:/uid
    method: GET
- name: uid_to_sids
  endpoint:
    path: /v1/ad/uids/:uid:/sids
    method: GET
- name: windows_nt_sid_related_identities
  endpoint:
    path: /v1/auth/sids/:id:/related-identities
    method: GET
- name: auth_ids_related_identities
  endpoint:
    path: /v1/auth/auth-ids/:id:/related-identities
    method: GET
- name: Active Directory for POSIX Attributes
  endpoint:
    path: /administrator-guide/authorization-qumulo-core/using-active-directory-for-posix-attributes.html
    method: GET
    data_selector: details
    params: {}
- name: Get Configuration and Status
  endpoint:
    path: /v1/ad/status
    method: GET
- name: Get Operation Status
  endpoint:
    path: /v1/ad/monitor
    method: GET
- name: Join Active Directory
  endpoint:
    path: /v1/ad/join
    method: GET
- name: GID to SIDs
  endpoint:
    path: /v1/ad/uids/:gid:/sids
    method: GET
- name: Local Username to All Related Identities
  endpoint:
    path: /v1/auth/local-username/:username:/related-identities
    method: GET
- name: POSIX GID to All Related Identities
  endpoint:
    path: /v1/auth/posix-gids/:id:/related-identities
    method: GET
- name: POSIX UID to All Related Identities
  endpoint:
    path: /v1/auth/posix-uids/:id:/related-identities
    method: GET
- name: SID to Expanded Group SIDs
  endpoint:
    path: /v1/ad/uids/:gid:/sids
    method: GET
- name: SID to GID
  endpoint:
    path: /v1/ad/uids/:uid:/gid
    method: GET
- name: SID to UID
  endpoint:
    path: /v1/ad/uids/:sid:/uid
    method: GET
- name: UID to SIDs
  endpoint:
    path: /v1/ad/uids/:uid:/sids
    method: GET
- name: Windows NT SID to All Related Identities
  endpoint:
    path: /v1/auth/sids/:id:/related-identities
    method: GET
- name: Retrieve Related Identities
  endpoint:
    path: /v1/auth/auth-ids/:id:/related-identities
    method: GET
- name: encryption_at_rest
  endpoint:
    path: /administrator-guide/encryption-at-rest/managing-encryption-at-rest.html
    method: GET
    data_selector: ''
    params: {}
- name: nfs_export
  endpoint:
    path: /nfs/exports
    method: POST
    data_selector: host_access_rules
    params: {}
- name: host_access_rule
  endpoint:
    path: /nfs_mod_export
    method: POST
    data_selector: restrictions
    params:
      export_path: /
      restrictions: root_restrictions.json
- name: export_details
  endpoint:
    path: /nfs_get_export
    method: GET
    data_selector: export
    params:
      export_path: /
- name: dns_resolution
  endpoint:
    path: /dns_resolve_ips
    method: GET
    data_selector: hostname
    params: {}
- name: ecdsa_keys
  endpoint:
    path: /administrator-guide/cryptographic-key-management/generating-storing-ecdsa-keys.html
    method: GET
    data_selector: records
    params: {}
- name: security_keys
  endpoint:
    path: /administrator-guide/cryptographic-key-management/managing-security-keys.html
    method: GET
    data_selector: records
    params: {}
- name: host_access_rule
  endpoint:
    path: /nfs/exports/host_access_rules
    method: POST
    data_selector: host_access_rule
    params: {}
- name: nfs_export
  endpoint:
    path: /nfs_mod_export
    method: GET
    data_selector: restrictions
    params:
      export_path: /
- name: dns_resolve_ips
  endpoint:
    path: /dns_resolve_ips
    method: GET
    data_selector: result
    params:
      ips: 203.0.113.2
- name: dns_resolve_hostnames
  endpoint:
    path: /dns_resolve_hostnames
    method: GET
    data_selector: result
    params:
      hostname: user1.accounting.example.com
- name: dns_set_lookup_overrides
  endpoint:
    path: /dns_set_lookup_overrides
    method: POST
    data_selector: lookup_overrides
    params: {}
- name: directory_quota
  endpoint:
    path: /services/data/vXX.X/sobjects/DirectoryQuota
    method: GET
    data_selector: records
- name: directory_quota
  endpoint:
    path: /api/v1/quotas
    method: POST
    data_selector: quota
    params: {}
- name: directory_quotas
  endpoint:
    path: /administrator-guide/storage-management/creating-directory-quotas.html
    method: GET
- name: directory_quota
  endpoint:
    path: /api/v1/quotas
    method: POST
    data_selector: quota
    params: {}
- name: network_mod_interface
  endpoint:
    path: /qq/network_mod_interface
    method: POST
    data_selector: response
    params:
      default-gateway: 203.0.113.0
- name: network_mod_network
  endpoint:
    path: /qq/network_mod_network
    method: POST
    data_selector: response
    params:
      network-id: '1'
      assigned-by: STATIC
      ip-ranges: 203.0.113.0-10
      floating-ip-ranges: 203.0.113.10-20
      netmask: 255.255.255.0
      dns-servers: 203.0.113.1
      dns-search-domains: example.com
- name: network_add_network
  endpoint:
    path: /qq/network_add_network
    method: POST
    data_selector: response
    params:
      name: MyNetworkName
      ip-ranges: 192.168.0.1-10
      floating-ip-ranges: 192.168.0.11-21
      netmask: 255.255.255.0
      dns-servers: 8.8.8.8
      dns-search-domains: example.com
      mtu: 1500
      vlan-id: 200
- name: DNS Delegation
  endpoint:
    path: /network-configuration/configuring-authoritative-dns
    method: GET
- name: network_mod_interface
  endpoint:
    path: /qq/network_mod_interface
    method: POST
    data_selector: null
    params:
      default-gateway: 203.0.113.0
- name: network_mod_network
  endpoint:
    path: /qq/network_mod_network
    method: POST
    data_selector: null
    params:
      network-id: 1
      assigned-by: STATIC
      ip-ranges: 203.0.113.0-10
      floating-ip-ranges: 203.0.113.10-20
      netmask: 255.255.255.0
      dns-servers: 203.0.113.1
      dns-search-domains: example.com
- name: network_add_network
  endpoint:
    path: /qq/network_add_network
    method: POST
    data_selector: null
    params:
      name: MyNetworkName
      ip-ranges: 192.168.0.1-10
      floating-ip-ranges: 192.168.0.11-21
      netmask: 255.255.255.0
      dns-servers: 8.8.8.8
      dns-search-domains: example.com
      mtu: 1500
      vlan-id: 200
- name: tenant_management
  endpoint:
    path: /multitenancy_modify_tenant
    method: POST
    data_selector: response
    params: {}
- name: nfs_export
  endpoint:
    path: /nfs_add_export
    method: POST
    data_selector: exports
    params:
      tenant-id: '2'
      export-path: /my-export
      fs-path: /my-directory
      no-restrictions: true
- name: smb_share
  endpoint:
    path: /smb_add_share
    method: POST
    data_selector: shares
    params:
      tenant-id: '2'
      name: /my-share
      fs-path: /my-directory
      all-access: true
- name: REST API Access
  endpoint:
    path: /multitenancy_modify_tenant
    method: POST
    data_selector: response
    params:
      enable_rest_api: true
- name: Web UI Access
  endpoint:
    path: /multitenancy_modify_tenant
    method: POST
    data_selector: response
    params:
      enable_web_ui: true
- name: SSH Access
  endpoint:
    path: /multitenancy_modify_tenant
    method: POST
    data_selector: response
    params:
      enable_ssh: true
- name: Replication Access
  endpoint:
    path: /multitenancy_modify_tenant
    method: POST
    data_selector: response
    params:
      enable_replication: true
- name: portal_relationship
  endpoint:
    path: /api/portal_relationship
    method: POST
    data_selector: relationship
    params: {}
- name: tenant_nfs
  endpoint:
    path: /multitenancy_modify_tenant
    method: POST
    data_selector: exports
    params:
      id: tenant_id
      enable_nfs: true
- name: nfs_settings
  endpoint:
    path: /nfs_modify_settings
    method: POST
    data_selector: settings
    params:
      enable_v4: true
- name: tenant_nfs_settings
  endpoint:
    path: /multitenancy_nfs_modify_settings
    method: POST
    data_selector: settings
    params:
      tenant_id: tenant_id
      disable_v4: true
- name: nfs_export
  endpoint:
    path: /nfs_add_export
    method: POST
    data_selector: export
    params:
      tenant-id: '2'
      export-path: /my-export
      fs-path: /my-directory
      no-restrictions: true
- name: smb_share
  endpoint:
    path: /smb_add_share
    method: POST
    data_selector: share
    params:
      tenant-id: '2'
      name: /my-share
      fs-path: /my-directory
      all-access: true
- name: portal_authorize_hub
  endpoint:
    path: /qq/portal_authorize_hub
    method: POST
    data_selector: portal
    params:
      id: 4
      spoke-address: 203.0.113.1
- name: portal_propose_spoke_root
  endpoint:
    path: /qq/portal_propose_spoke_root
    method: POST
    data_selector: propose
    params:
      id: 2
      spoke-root-path: /remote/archive
      hub-root-path: /archive
- name: portal_delete_spoke
  endpoint:
    path: /qq/portal_delete_spoke
    method: DELETE
    data_selector: delete_spoke
    params:
      id: 2
- name: portal_delete_hub
  endpoint:
    path: /qq/portal_delete_hub
    method: DELETE
    data_selector: delete_hub
    params:
      id: 4
- name: portal_relationship
  endpoint:
    path: /portal/relationship
    method: POST
    data_selector: relationship
    params:
      spoke_root: /remote/projects
      hub_address: 203.0.113.0
      hub_root: /projects
- name: user_defined_metadata
  endpoint:
    path: /administrator-guide/metadata/managing-user-defined-metadata.html
    method: GET
    data_selector: records
    params: {}
- name: user_defined_metadata
  endpoint:
    path: /api/v1/user_defined_metadata
    method: POST
    data_selector: metadata_entries
    params: {}
- name: snapshot_recovery
  endpoint:
    path: /administrator-guide/snapshots/recovering-files.html
    method: GET
    data_selector: snapshots
- name: protection_status
  endpoint:
    path: /v1/cluster/protection/status
    method: GET
    data_selector: status
    params: {}
- name: snapshots
  endpoint:
    path: /snapshots
    method: GET
    data_selector: snapshots
- name: nodes
  endpoint:
    path: /api/nodes
    method: GET
    data_selector: nodes
    params: {}
- name: snapshots
  endpoint:
    path: /api/snapshots
    method: GET
    data_selector: snapshots
    params: {}
- name: snapshot_policy
  endpoint:
    path: /api/snapshots/policies
    method: POST
    data_selector: policies
- name: snapshot_creation
  endpoint:
    path: /api/snapshots/create
    method: POST
    data_selector: snapshots
- name: snapshot_modification
  endpoint:
    path: /api/snapshots/modify
    method: PUT
    data_selector: snapshots
- name: snapshot_locking
  endpoint:
    path: /lock_snapshot
    method: POST
    data_selector: snapshot_locked
    params: {}
- name: snapshot_unlocking
  endpoint:
    path: /unlock_snapshot
    method: POST
    data_selector: snapshot_unlocked
    params: {}
- name: node_replacement_plan
  endpoint:
    path: /qq/replace_nodes
    method: GET
    data_selector: current_plan
    params: {}
- name: replication_target_relationship
  endpoint:
    path: /replication/target_relationship
    method: POST
    data_selector: relationship_id
    params: {}
- name: snapshot_recovery
  endpoint:
    path: /administrator-guide/snapshots/recovering-files.html
    method: GET
    data_selector: snapshots
    params: {}
- name: node_offline
  endpoint:
    path: /administrator-guide/node-addition-replacement/understanding-offline-nodes
    method: GET
    data_selector: content
    params: {}
- name: protection_status
  endpoint:
    path: /v1/cluster/protection/status
    method: GET
    data_selector: status
    params: {}
- name: continuous_replication
  endpoint:
    path: /replication
    method: GET
    data_selector: data
    params: {}
- name: shift_to_s3
  endpoint:
    path: /shift-to-s3
    method: POST
    data_selector: data
    params: {}
- name: shift_from_s3
  endpoint:
    path: /shift-from-s3
    method: POST
    data_selector: data
    params: {}
- name: replication_relationship
  endpoint:
    path: /replication_relationship
    method: POST
    data_selector: relationship
    params: {}
- name: node_addition
  endpoint:
    path: /adding_nodes_with_adaptive_data_protection
    method: POST
    data_selector: node_addition
    params: {}
- name: Shift-To
  endpoint:
    path: /shift-to
    method: POST
    data_selector: status
    params:
      incremental: shift_status
- name: node_replacement_plan
  endpoint:
    path: /replace_nodes
    method: POST
    data_selector: plan
    params: {}
- name: add_nodes_and_replace
  endpoint:
    path: /replace_nodes/add_nodes_and_replace
    method: POST
    data_selector: replacement
    params: {}
- name: get_plan
  endpoint:
    path: /replace_nodes/get_plan
    method: GET
    data_selector: current_plan
    params: {}
- name: cancel_plan
  endpoint:
    path: /replace_nodes/cancel_plan
    method: POST
    data_selector: cancel
    params: {}
- name: replication_relationship
  endpoint:
    path: /replication
    method: POST
    data_selector: relationship
    params: {}
- name: file_system_notifications
  endpoint:
    path: /v1/file-system/settings/notify
    method: POST
- name: shift_relationship
  endpoint:
    path: /shift-to
    method: POST
- name: file_notifications
  endpoint:
    path: /v1/files/<ref>/notify
    method: GET
    data_selector: notifications
    params:
      filter: <filter>
      recursive: 'true'
- name: nfs_export
  endpoint:
    path: /administrator-guide/nfs/creating-nfs-export.html
    method: GET
    data_selector: exports
    params: {}
- name: nfsv4.1
  endpoint:
    path: /administrator-guide/nfs/nfsv4.1-enabling-using.html
    method: GET
    data_selector: nfsv4.1
    params: {}
- name: acl_management
  endpoint:
    path: /administrator-guide/nfs/nfsv4.1-acls.html
    method: GET
    data_selector: acls
    params: {}
- name: host_access_rules
  endpoint:
    path: /administrator-guide/nfs/configuring-troubleshooting-host-access-rules-nfs-exports.html
    method: GET
    data_selector: host_access_rules
    params: {}
- name: Shift Relationships
  endpoint:
    path: /replication/relationships
    method: GET
    data_selector: relationships
- name: file_system_settings
  endpoint:
    path: /v1/file-system/settings/notify
    method: POST
- name: active_directory
  endpoint:
    path: /cluster/active_directory
    method: GET
- name: date_time
  endpoint:
    path: /cluster/date_time
    method: GET
- name: file_notifications
  endpoint:
    path: /v1/files/<ref>/notify
    method: GET
    data_selector: notifications
    params:
      filter: child_file_added,child_dir_removed
      recursive: 'true'
- name: nfs_export
  endpoint:
    path: /administrator-guide/nfs/creating-nfs-export.html
    method: GET
    data_selector: records
    params: {}
- name: nfsv4.1
  endpoint:
    path: /administrator-guide/nfs/nfsv4.1-enabling-using.html
    method: GET
    data_selector: records
    params: {}
- name: acl_management
  endpoint:
    path: /administrator-guide/nfs/nfsv4.1-acls.html
    method: GET
    data_selector: records
    params: {}
- name: host_access_rules
  endpoint:
    path: /administrator-guide/nfs/configuring-troubleshooting-host-access-rules-nfs-exports.html
    method: GET
    data_selector: records
    params: {}
- name: nfs_settings
  endpoint:
    path: /nfs/settings
    method: GET
    data_selector: settings
    params: {}
- name: nfs_modify_settings
  endpoint:
    path: /nfs/modify_settings
    method: POST
    data_selector: settings
    params: {}
- name: nfs_export
  endpoint:
    path: /administrator-guide/nfs/creating-nfs-export
    method: GET
    data_selector: exports
    params: {}
- name: NFS Mount
  endpoint:
    path: /mnt/point
    method: GET
    data_selector: user_files
    params: {}
- name: Active Directory
  endpoint:
    path: /Cluster/ActiveDirectory
    method: GET
    data_selector: details
    params: {}
- name: NTP Server Configuration
  endpoint:
    path: /Cluster/DateTime
    method: GET
    data_selector: ntp_settings
    params: {}
- name: smb_share
  endpoint:
    path: /administrator-guide/smb/creating-smb-share.html
    method: GET
    data_selector: records
    params: {}
- name: file_shares
  endpoint:
    path: /administrator-guide/smb/managing-file-shares-shared-folders-mmc.html
    method: GET
    data_selector: records
    params: {}
- name: NFSv4.1 Security Settings
  endpoint:
    path: /kerberos/performing-additional-cluster-configuration
    method: GET
    data_selector: configuration
- name: smb_share
  endpoint:
    path: /services/smb/shares
    method: POST
    data_selector: shares
    params: {}
- name: shared_folders
  endpoint:
    path: /shared_folders
    method: GET
    data_selector: shares
- name: file_permissions
  endpoint:
    path: /fs_file_get_attr
    method: GET
    data_selector: group_details, owner_details
    params: {}
- name: access_control_list
  endpoint:
    path: /fs_get_acl
    method: GET
    data_selector: aces
    params: {}
- name: mount_point
  endpoint:
    path: /mnt/qumulo_mount_point
    method: mount
    data_selector: records
- name: Cross-Domain Active Directory Trusts
  endpoint:
    path: /kerberos/configuring-cross-domain-active-directory-trusts
    method: GET
    data_selector: trusts
    params: {}
- name: access_keys
  endpoint:
    path: /v1/s3/access-keys/
    method: GET
    data_selector: entries
- name: create_access_key
  endpoint:
    path: /v1/s3/access-keys/
    method: POST
    data_selector: access_key_id
- name: delete_access_key
  endpoint:
    path: /v1/s3/access-keys/<access-key-id>
    method: DELETE
- name: smb_share
  endpoint:
    path: /administrator-guide/smb/creating-smb-share.html
    method: GET
    data_selector: shares
    params: {}
- name: file_shares
  endpoint:
    path: /administrator-guide/smb/managing-file-shares-shared-folders-mmc.html
    method: GET
    data_selector: shares
    params: {}
- name: smb_share
  endpoint:
    path: /smb/shares
    method: POST
    data_selector: share
    params: {}
- name: bucket_policy
  endpoint:
    path: /s3/get_bucket_policy
    method: GET
    data_selector: Statements
    params: {}
- name: multipart_uploads
  endpoint:
    path: /s3/multipart-uploads
    method: GET
    data_selector: uploads
    params: {}
- name: s3_access_keys
  endpoint:
    path: /v1/s3/access-keys/
    method: POST
    data_selector: entries
    params: {}
- name: list_s3_access_keys
  endpoint:
    path: /v1/s3/access-keys/
    method: GET
    data_selector: entries
    params: {}
- name: delete_s3_access_key
  endpoint:
    path: /v1/s3/access-keys/<access-key-id>
    method: DELETE
    data_selector: ''
    params: {}
- name: incomplete_multipart_uploads
  endpoint:
    path: /v1/s3/buckets/<bucket-name>/uploads/
    method: GET
    data_selector: uploads
- name: abort_multipart_upload
  endpoint:
    path: /v1/s3/buckets/<bucket-name>/uploads/<upload-ID>
    method: DELETE
- name: s3_buckets
  endpoint:
    path: /v1/s3/buckets
    method: GET
    data_selector: buckets
- name: s3_bucket_versioning
  endpoint:
    path: /administrator-guide/s3-api/managing-s3-bucket-versioning.html
    method: GET
    data_selector: versioning
    params: {}
- name: s3_buckets
  endpoint:
    path: /v1/s3/buckets
    method: GET
    data_selector: lock
    params: {}
- name: s3_bucket_permissions
  endpoint:
    path: /s3/bucket/permissions
    method: GET
    data_selector: permissions
    params: {}
- name: bucket_policy
  endpoint:
    path: /s3/bucket_policy
    method: GET
    data_selector: Statements
- name: actions_supported
  endpoint:
    path: /s3/actions
    method: GET
    data_selector: API Action
- name: principals_supported
  endpoint:
    path: /s3/principals
    method: GET
    data_selector: Identity Specification
- name: multipart_uploads
  endpoint:
    path: /api/v1/multipart-uploads
    method: GET
    data_selector: uploads
- name: incomplete_multipart_uploads
  endpoint:
    path: /v1/s3/buckets/<bucket-name>/uploads/
    method: GET
    data_selector: uploads
    params: {}
- name: bucket_versioning
  endpoint:
    path: /s3/bucket/versioning
    method: PUT
    data_selector: versioning
    params: {}
- name: s3_buckets
  endpoint:
    path: /v1/s3/buckets
    method: GET
    data_selector: buckets
- name: Cloud-Based Monitoring
  endpoint:
    path: /monitoring-and-metrics/enabling-cloud-based-monitoring-remote-support
    method: GET
- name: Remote Support
  endpoint:
    path: /monitoring-and-metrics/enabling-remote-support
    method: GET
- name: cloud_based_monitoring
  endpoint:
    path: /enabling-cloud-based-monitoring
    method: POST
- name: remote_support
  endpoint:
    path: /enabling-remote-support
    method: POST
- name: monitoring_conf
  endpoint:
    path: /set_monitoring_conf
    method: POST
    data_selector: configuration
    params:
      enabled: true
      nexus_enabled: true
      s3_proxy_disable_https: true
      mq_host: api.missionq.qumulo.com
      mq_port: 443
      mq_proxy_port: 0
      period: 60
      s3_proxy_host: monitor.qumulo.com
      s3_proxy_port: 443
      vpn_host: example.qumulo.com
- name: Cloud-Based Monitoring
  endpoint:
    path: /set_monitoring_conf
    method: POST
    data_selector: configuration
    params:
      enabled: true
      mq-proxy-host: mq-proxy.example.com
      mq-proxy-port: 123
- name: S3 Proxy
  endpoint:
    path: /set_monitoring_conf
    method: POST
    data_selector: configuration
    params:
      enabled: true
      s3-proxy-host: s3-proxy.example.com
      s3-proxy-port: 456
- name: Both Proxies
  endpoint:
    path: /set_monitoring_conf
    method: POST
    data_selector: configuration
    params:
      enabled: true
      all-proxy-host: mq-s3-proxy.example.com
      all-proxy-port: 789
- name: audit_logs
  endpoint:
    path: /audit/logs
    method: GET
    data_selector: logs
- name: monitoring_configuration
  endpoint:
    path: /set_monitoring_conf
    method: POST
    data_selector: configuration
    params: {}
notes:
- Bearer token is valid for 10 hours.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Requires setup of connected app in Qumulo
- Uses OAuth2 with refresh token — requires setup of connected app in Qumulo
- Some objects may return nulls in deeply nested fields
- Qumulo Care team is available Monday to Friday, 24×5 to answer your questions and
  requests.
- During off hours, a team member is on call 24×7 for when you might need help the
  most.
- If you perform multiple upgrades back to back, you might encounter one or more platform
  upgrades in one of the incremental releases; you must install these upgrades before
  you continue.
- If you don't see a rolling reboot option for a platform upgrade, refresh the page
  in your browser.
- Qumulo Care team is available Monday to Friday, 24×5
- For two-phase upgrades, there is no client downtime during the prepare phase, only
  during the commit phase.
- You can disable the CLI progress bar by adding the --no-monitor flag to your command.
  If you do this, it isn't possible to cancel the upgrade process after it begins.
- The Qumulo Core S3 API accepts only HTTPS requests by default.
- After Qumulo Core initially creates your secret access keys, it never logs or displays
  them again.
- Qumulo Core listens for S3 API traffic on TCP port 9000. It isn't possible to change
  this setting.
- Currently, Qumulo Core supports only path-style bucket addressing.
- Qumulo Core doesn’t support trailing checksums in requests.
- To allow certain background processes to run, multiple sequential Qumulo Core upgrades
  might require a waiting period between specific releases.
- During rolling reboots, the system reboots one or more nodes (depending on the configured
  protection level) in the cluster in succession. If your cluster is under heavy load
  due to write or delete operations, this process can take a long time.
- For two-phase upgrades, there is no client downtime during the *prepare* phase,
  only during the commit phase.
- You can disable the CLI progress bar by adding the `--no-monitor` flag to your command.
  If you do this, it isn't possible to cancel the upgrade process after it begins.
- Use the latest, official image available for your Linux distribution on the distribution’s
  website or cloud marketplace.
- Don't attempt to upgrade the Qumulo Core Produce Package by installing a newer .deb
  or .rpm package on your system.
- The qq CLI works with Python 3.8 to 3.11.
- To perform the following operations, you must be a member of the Domain Admins,
  Enterprise Admins, or DnsAdmins group.
- Use only floating IP addresses for round-robin DNS entries.
- If plaintext HTTP connections are enabled, requests are not encrypted.
- Communication between nodes in a cluster must be possible on any port.
- Active Directory authentication services require their own network port range.
- Qumulo Core listens for S3 API traffic on TCP port 9000.
- Qumulo metrics are available in OpenMetrics format.
- The Qumulo Core Product Package permits flexible deployment.
- You must create your own users on the host OS.
- Ubuntu doesn’t require any additional configuration.
- For Azure Native Qumulo (ANQ), all metrics with a `node_id` label are unavailable
  because they refer to specific hardware.
- Qumulo metrics are available at the specified endpoint.
- You can disable the CLI progress bar by adding the `--no-monitor` flag to your command.
- During rolling reboots, the system reboots one or more nodes (depending on the configured
  protection level) in the cluster in succession.
- Qumulo Core doesn’t support Samba Domain Controllers.
- Uses Bearer Tokens for authentication
- Clusters that run different versions can replicate with all quarterly and non-quarterly
  versions, up to eight quarters in the future.
- From version 5.0.1, Qumulo Core blocks replication between unsupported versions.
- From Qumulo Core 7.4.4 (and higher) we’ve added the “Replication Compatibility”
  section to the release notes of each release.
- Regardless of version, upgrading Qumulo Core while a replication job is running
  interrupts the job in progress. When both clusters return to states in which replication
  is possible, the replication job resumes.
- Ensure your certificate is installed correctly, restart your browser.
- To ensure your certificate is installed correctly, restart your browser.
- Follow these steps only if a member of the Qumulo Care team instructs you to do
  so.
- Performing these steps incorrectly can cause network performance, connectivity,
  and data integrity issues.
- By default, Qumulo requires an encrypted connection to connect to LDAP (either LDAPS
  or StartTLS).
- Qumulo Core supports SAML authentication only for AD users.
- Ensure that your SAML Identity Provider (IdP) is linked to the same AD.
- Configure the Base DN in your AD configuration, even if you don’t use POSIX attributes.
- Qumulo Core requires that the IdP sign both the assertion and the entire SAML response.
- Don’t confuse EntityId with SP Entity ID.
- The user must complete the login step within 5 minutes during `qq sso_login`.
- Access tokens are long-lived and provide an alternative to session-based authentication.
- The CSI driver requires prior configuration of NFS export paths.
- Directory specified in storeRealPath must exist before use.
- An attacker can use an access token to authenticate as the token's user to Qumulo
  REST API.
- Access tokens can provide indefinite authentication to the associated user's account.
- Basic Authentication may be disallowed and using an Access Token will be required.
- Although you can create groups for users, you can't create access tokens for groups.
- When an access token’s expiration time elapses, it isn’t possible to use the token
  for authentication.
- Static and dynamic provisioning over NFSv3 supported.
- NFSv4.1 requires explicit configuration with Kerberos.
- For changes to take effect, a user account with newly assigned roles must log out
  of Qumulo Core and then log back in (or its sessions must time out).
- Because certain privileges can overwrite or move data to a location where a user
  has greater (or total) permissions, use special care when you grant privileges to
  roles and users.
- Basic Authentication may be disallowed, Access Token may be required.
- XPP doesn't break compatibility with previous Qumulo Core releases.
- Enabling XPP doesn't change the rights on existing files in your file system. Changes
  take place only after you enable XPP.
- Host restrictions interact with user or group share permissions and file permissions
  on the basis of least privilege.
- If you don't specify any restrictions, the SMB share gives all hosts full control.
- For changes to take effect, a user account with newly assigned roles must log out
  of Qumulo Core and then log back in.
- The full credential expansion method lets your Qumulo Core cluster support more
  than 16 group memberships for your NFS users, as long as Active Directory manages
  the group memberships.
- XPP enables mixed SMB and NFS protocol workflows by preserving SMB access control
  lists.
- Host restrictions apply in the order in which you write them, from top to bottom.
- The `qq` CLI command `qq encryption_set_key_store` requires the `PRIVILEGE_ENCRYPTION_WRITE`
  privilege.
- To be able to configure an external KMS, the KMS must support Key Management Interoperability
  Protocol (KMIP) 1.0.
- If the master key is deleted from the KMS, and all nodes in the cluster are rebooted,
  all data on the cluster becomes permanently unrecoverable.
- If you allow the certificates to expire, or the master key is deleted accidentally,
  you must create a new, valid configuration as soon as possible.
- It is possible for one UID to be mapped to multiple SIDs.
- File locks can prevent a regular file from being modified.
- Legal Hold can be enabled for an indefinite time period.
- Retention Period can be enabled for a specific period of time.
- By default, Qumulo Core supports AES-128-GCM and AES-128-CCM encryption, sets cluster-level
  SMB encryption to None and share-level encryption to Unencrypted.
- If you don’t specify a host access rule, Qumulo Core allows access to all IP addresses.
- The master key itself isn't encrypted.
- If the master key is deleted from the KMS, all data on the cluster becomes permanently
  unrecoverable.
- Qumulo Core doesn’t encrypt host file system data on the node.
- Currently, if you use multiple DNS servers, the dns_resolve_hostnames and dns_resolve_ips
  commands aren't tenant-aware.
- Clients that connect to your cluster can send encrypted or unencrypted packets when
  your cluster doesn't require encryption.
- Copyright © 2021–2025 Qumulo, Inc.
- Currently, Qumulo Core supports only 256-bit ECDSA keys in .pem and .der formats.
- No KMS system shows the private key. To sign messages later, write down the key
  ID in the responses from key generation commands.
- Qumulo Core retains only the public key.
- Key rotation doesn't affect the resources that the key protects or change the identifier
  or name of the public key.
- When the key rotation is complete, only the replacement public key can unlock the
  protected resources.
- Requires setup of connected app in api
- When you add a new key, the key name is the security challenge.
- When you replace an existing key or unlock a snapshot, the qq CLI command provides
  the challenge.
- Directory quotas allow for both hard and soft limits.
- Qumulo Core retains only the public key. We strongly recommend storing the corresponding
  private key safely, outside of your Qumulo cluster.
- It isn't possible to lock a Qumulo file system resource with a disabled key.
- It isn't possible to disable a key that Qumulo Core uses to create new resources.
- It isn't possible to delete a key that a Qumulo file system resource uses.
- The Qumulo Core Web UI doesn't show the default gateway for IPv6.
- As for IPv4, you can configure one untagged IPv6 network by using VLAN 0 or multiple
  tagged networks by using VLAN 1-4094 statically.
- It is possible to configure an IPv4 network alongside an IPv6 network on any VLAN.
- Currently, Qumulo Core doesn't support VPN connections by using IPv6.
- Creating and Managing Directory Quotas
- Directory quotas can be hard or soft quotas.
- If you can add both static and floating IP addresses, they must be on the same network.
- QDNS uses the naming convention <NetworkID>.<ClusterFQDN>.
- Include the trailing dot at the end of your FQDN.
- After you change the FQDN for your QDNS configuration, you must reconfigure the
  DNS delegation for your domain.
- Regardless of the number of tenants or network configurations, it is possible to
  configure only one FQDN for every Qumulo cluster.
- QDNS uses the naming convention `<NetworkID>.<ClusterFQDN>`.
- When you delete a tenant, Qumulo Core removes the tenant's entire configuration
  from your cluster, including NFS exports and SMB shares associated with the tenant.
- It isn't possible to delete the last tenant.
- When you disable QDNS, any previously configured FQDN and host restrictions remain
  on the cluster in an inactive state.
- Access to a management protocol lets a client use the protocol to view and modify
  resources across the entire cluster, not only within the client's tenant.
- Enabling Web UI access doesn’t require enabling REST API access.
- Enabling SSH access doesn’t require enabling REST API access.
- To configure file system protocols, your user must have membership in a Qumulo role
  with the specified privileges.
- Each new tenant has no exports initially.
- Each new tenant has no shares initially.
- While NFSv3 is a stateless protocol, NFSv4.1 is a stateful protocol which permits
  open file handles to remain open after a file is unlinked. However, Qumulo Core
  doesn’t always maintain access to files deleted from a portal in a relationship.
- When you authenticate over NFSv4.1 by using Kerberos, you can use Kerberos principals
  only from the Active Directory domain associated with the Qumulo cluster to which
  you are connected.
- When you edit ACLs over NFSv4.1 by using editfacl or similar tools, you can use
  only Kerberos principals from the Active Directory domain associated with the Qumulo
  cluster to which you are connected.
- Protocol locks don't synchronize between the hub portal host cluster and the spoke
  portal host cluster.
- We recommend using floating IP addresses.
- Qumulo Core doesn't support fully qualified domain names (FQDNs) for this operation.
- Portal IDs are unique within each cluster.
- Initially, the tenant has no exports to mount.
- To revert to the global setting for a specific tenant, use the multitenancy_nfs_delete_settings
  command.
- Each new tenant has no exports or shares initially.
- This action makes both clusters in the portal relationship unavailable for less
  than 30 seconds while the systems reconfigure.
- It isn’t possible to use the portal_deny_hub_root command to restrict access to
  a subdirectory of a hub portal root directory.
- By default, Qumulo Core automatically recaches data on spoke portals upon access
  and maintains a minimum of 5% free capacity on clusters whose spoke portals contain
  cached data.
- Although this process doesn’t affect data on the hub portal, accessing the portions
  of spoke portals whose cached data has been removed can incur the same latency as
  during initial access.
- In Qumulo Core 7.6.2 (and higher), it is possible to configure up to 32 spoke portal
  root directories for each Qumulo cluster, for each portal relationship.
- It isn't possible to create a hub portal without a spoke portal.
- During the final minute of the timeout period, the Your Session is About to Expire
  dialog box appears.
- Qumulo Core supports argcomplete 2.0.0 and higher.
- Managing user-defined metadata requires READ_EA and WRITE_EA privileges.
- Depending on the free threshold configuration, the maximum amount of cached data
  that Qumulo Core can remove is equal to the amount of data that spoke portals consume.
- Spoke portals function as long as Qumulo Core has sufficient capacity for servicing
  in-flight file system requests. However, having to continuously fetch data from
  the hub portal can decrease system performance.
- If file system objects unrelated to spoke portals consume all usable capacity on
  a cluster, clients can experience issues while attempting to access spoke portals.
- While it isn’t possible to delete or shorten the expiration time of a locked snapshot,
  it is possible to extend the expiration time of a locked snapshot.
- If a target replication relationship uses a key, you can’t disable or delete the
  key, unless you reverse the relationship.
- If you disable or delete a key while a target replication relationship is reversed
  and then return the source and target to their original assignments, you must set
  a new key to be able to lock future snapshots.
- Don’t run these commands on Qumulo nodes.
- You can recover files by accessing the hidden .snapshot directory over SMB or NFS.
- User-defined metadata requires unique keys within a keyspace.
- Total size of each key-value pair must be under 400 KB.
- Cluster may enter read-only mode if a hybrid node goes offline for a substantial
  period of time.
- This configuration requires a minimum of 5 nodes.
- This configuration requires a minimum of 11 nodes.
- This configuration requires a minimum of 12 nodes.
- This configuration requires a minimum of 24 nodes.
- 'Sufficient Static IP Addresses: The number of static IP addresses must be equal
  to or greater than the number of nodes in your cluster.'
- Same Qumulo Core Version on All Nodes.
- Taking a snapshot doesn’t consume storage or incur a performance penalty.
- There is only a negligible performance penalty for reading and writing snapshotted
  file system data.
- In Qumulo Core 5.1.3 (and higher) you can increase the node fault tolerance level
  for an existing cluster during the cluster expansion process.
- In Qumulo Core 6.1.0.3 (and higher), you can manage the drive and node fault tolerance
  levels during the cluster expansion process by changing the data protection configuration.
- All selection and deletion controls operate only on the current page.
- You can lock a snapshot using public or private keys.
- Unlocking a snapshot requires a cryptographic signature from the private key.
- To replace all nodes in the cluster, use the --replace-all flag instead of the --nodes-to-be-replaced
  flag.
- Canceling a node replacement plan after executing one or more steps might make it
  impossible to reregister and complete the plan.
- Because it isn’t possible to have nodes with different license classes in the same
  cluster, you must migrate all nodes in your cluster to the same license class.
- The .snapshot directory doesn't appear when listing contents over NFS on Linux and
  macOS without explicit navigation.
- The .snapshot directory appears only at the root of the share over SMB.
- Requires setup of connected app in API
- A cluster can operate with an offline node until its SSD space fills up.
- When a cluster has no more free space, the cluster goes into read-only (ENOSPC)
  state until the node comes back online.
- When Qumulo Core finishes reprotecting the drive, it resets the fault tolerance
  for the cluster, regardless of whether you have replaced the failed drive.
- Certain configurations (such as 1 concurrent drive failure or 4 node failures) might
  not be possible depending on a cluster’s size constraints.
- This configuration requires a minimum of 5 nodes for 3-Drive, 1-Node Protection.
- This configuration requires a minimum of 11 nodes for 3-Drive, 3-Node Protection.
- This configuration requires a minimum of 12 nodes for 4-Drive, 2-Node Protection.
- This configuration requires a minimum of 24 nodes for 4-Drive, 4-Node Protection.
- Qumulo Core requires a short time to update the total available storage.
- Existing nodes retain their numbering.
- Continuous replication takes a snapshot of the data in a directory on the source
  cluster and transfers it to a directory on the target cluster.
- A replication job doesn’t begin until you authorize the relationship on the target
  cluster.
- We strongly recommend contacting the Qumulo Care team before proceeding with cluster
  expansion.
- Continuous replication increases the load on the cluster and can cause latency delays.
- Continuous replication doesn't support replicating local user or group information
  and fails when it encounters a file associated with local users or groups.
- When you create a replication relationship, Qumulo Core updates these permissions
  from read-write to read-only. When you delete the relationship, the permissions
  revert to read-write automatically.
- Including the root directory makes the entire target cluster read-only and might
  prohibit administrative functions such as upgrades.
- Before you perform any Qumulo Core upgrades, you must wait until the replication
  job is complete. Upgrading Qumulo Core while a replication job is in progress causes
  the job to fail.
- Your cluster’s usable capacity doesn’t increase until the data protection reconfiguration
  is complete.
- Data protection reconfiguration can take days or weeks.
- Qumulo Core doesn't support replacing nodes in clusters with more than 100 nodes.
- The total capacity of the planned cluster configuration can't be less than the total
  capacity of the current cluster configuration.
- Requires Qumulo Core 3.2.1 or higher for CLI and 3.2.5 or higher for Web UI
- User accounts must log out and back in for role changes to take effect
- If your plan includes data protection reconfiguration, Qumulo Core records only
  the stripe configuration.
- When Qumulo Core finds missing nodes or drives, it pauses the reconfiguration process.
- From Qumulo Core 4.3.4, Shift-From estimates the work that a copy job performs.
- The amount of time that users have before the cluster enters the ENOSPC state depends
  on the rate at which data is being added to, or modified within, the cluster.
- Uses AWS credentials for access
- Continuous replication uses snapshots to generate a consistent point-in-time copy
  of the source directory on the target cluster.
- Qumulo provides REST access to the change notification system that backs SMB2 CHANGE_NOTIFY.
- Qumulo doesn’t support mutating extended attributes (EA). If the system requests
  only the FILE_NOTIFY_CHANGE_EA filter, no events propagate.
- If you don’t supply a filter, the SMB server accepts the request but doesn’t send
  any notifications.
- Standard file system permissions apply to API requests for non-recursive watching.
- Authenticated API user must have the DATA_ADMINISTRATOR privilege for recursive
  notification requests.
- Requires Qumulo Core 3.2.1 (and higher) for CLI and 3.2.5 (and higher) for Web UI
- User accounts must log out and log back in for changes to take effect
- Qumulo Core enforces host access rules in the order of appearance, top to bottom.
  We recommend adding rules specific to IP addresses and hosts to the top of the list
  and rules specific to subnets and host wildcards to the bottom.
- Currently, Qumulo Core 4.3.0 (and higher) supports only NFSv4.1. Mounting with version
  4.0 or 4.2 isn't supported.
- The NFSv4.1 protocol requires clients to provide the server with globally unique
  identifiers.
- S3-compatible object stores aren’t supported. Currently, Qumulo Shift-From supports
  replication only from Amazon S3.
- HTTP isn’t supported. All Qumulo connections are encrypted by using HTTPS.
- Anonymous access isn’t supported. You must use valid AWS credentials.
- You can enable NFSv4.1 only by using the qq CLI.
- Currently, Qumulo Core doesn't support revoking NFSv4.1 byte-range locks by using
  the CLI.
- The Qumulo Core implementation supports using AUTH_SYS credentials, AUTH_NONE, and
  various AUTH_KRB5 credentials.
- Use the nfs-acl-tools Linux package to manage ACLs for files.
- The system never misses a notification.
- The system sends notifications in real time.
- A client connected to any node in a cluster receives a notification which might
  originate from any node in the cluster.
- The system sends notifications in accurate chronological order.
- Qumulo Core supports only A and D ACEs.
- Qumulo Core doesn’t support The S and F flags.
- Enabling RFC 2307 might simplify AUTH_SYS-based Linux clients that access the cluster
  by using known UIDs and GIDs.
- Kerberos is very sensitive to clock skew.
- Kerberos relies on DNS to identify machines involved in authentication.
- The Qumulo distributed file system works best when you spread the workload evenly
  across multiple nodes.
- To maximize compatibility with Linux, we recommend formatting SPN entries in lowercase.
- NFSv4.1 is disabled by default.
- AUTH_SYS, AUTH_KRB5, AUTH_KRB5P, and AUTH_KRB5I are enabled by default.
- Qumulo’s Kerberos implementation requires AD.
- The domain controller (DC) has an equivalent mapping for AD users and SIDs.
- Qumulo’s Kerberos implementation ignores certain AD fields and uses only the value
  in the sAMAccountName field.
- For most standard Linux tools, Qumulo Core supports all arbitrary Unicode characters
  in Kerberos principals. However, we don’t recommend using the period (`.`) character
  in principals, except in the domain name.
- You can enable NFSv4.1 only by using the `qq` CLI.
- Disabling NFSv4.1 makes any NFSv4.1 mounts unusable immediately.
- Qumulo Core implementation supports AUTH_SYS, AUTH_NONE, AUTH_KRB5, AUTH_KRB5P,
  AUTH_KRB5I credentials.
- Qumulo Core supports only Linux for using NFSv4.1 with Kerberos.
- Be careful when you copy local users and groups across different Qumulo clusters
  manually.
- Kerberos is sensitive to clock skew; use the same NTP server for all components.
- The user logged into the AD domain is the owner of any new files.
- AD doesn’t prevent duplicate UID or GID numbers from being added to RFC 2307 values.
  Such improper configuration can cause UID and GID collisions across trusted domains.
- If you configure sssd on Kerberos-mounted Linux clients for mapping by SID, disabling
  RFC 2307 can help avoid ascribing special meaning to randomly assigned Linux UIDs
  and GIDs.
- In versions of Ubuntu lower than 22.04 (and possibly on other Linux distributions),
  you can't use the /etc/nfs.conf file to configure gssd.
- The SPN formatting in the following example is generally sufficient for Linux service
  ticket requests. However, depending on your environment and client configuration,
  additional entries might be necessary.
- Qumulo supports SMB protocol for file sharing.
- SMB shares can be created, modified, and deleted using the Qumulo Core Web UI.
- Don’t place a slash (`/`) after your cluster’s hostname.
- Qumulo's Kerberos implementation requires AD, every user is also an Active Directory
  user.
- The settings of the User limit and Offline Settings... properties have no effect
  on your Qumulo cluster.
- 'It is possible to add local users and groups from your Qumulo cluster by prefixing
  them with the name of your cluster followed by a backslash (`\`). For example: accounting\admin'
- Because, if you don't select Full Control, there is a minor mismatch between the
  rights that Windows Change Permissions grants and the Qumulo Core Web UI Write permissions.
  For this reason, share permissions configured by using the MMC appear with an asterisk
  (`*`) in the Qumulo Core Web UI. We recommend using Qumulo Core to configure share
  permissions.
- For a Qumulo cluster with default settings, applying changes results in an error
  for the .snapshots meta-directory. It is safe to click Continue each time this error
  occurs.
- Qumulo Core doesn’t limit how long you can use an access key pair after you create
  it.
- If you revoke an access key pair, it isn't possible to restore it.
- Refer to the SMB Protocol documentation for more details on managing shares.
- Qumulo supports using Amazon S3 API.
- Default file create mode is 0644
- Default directory create mode is 0755
- 'All S3 buckets in a Qumulo cluster share the same namespace: It isn''t possible
  to create two buckets with the same name, even if they use different directories
  as their bucket root.'
- All S3 buckets must follow the bucket naming rules.
- To perform the following operations, you must use a Qumulo Core account with the
  Administrators or Data Administrators role.
- Don’t place a slash (`/`) after your cluster’s hostname. Adding the slash after
  the hostname causes the operation to fail.
- To let a user access S3 buckets in the cluster, you must assign an S3 access key
  to the user.
- Because a Qumulo cluster restricts S3 actions based on file access control lists
  (ACLs), an S3 bucket might work differently or have more restrictive permissions
  than expected.
- Qumulo Core accepts only presigned requests that use the PUT, GET, HEAD, and DELETE
  HTTP methods.
- Anonymous requests can never perform modifying operations.
- Anonymous S3 connections use the system Guest account, which is restricted to read-only
  S3 API actions.
- The order of the fields has no effect on the permissions that an access policy grants
  for an S3 bucket.
- The ListBuckets S3 API action has no associated access policy permission in Qumulo
  Core.
- Multipart upload data isn’t visible in the Qumulo file system until you complete
  the upload.
- Qumulo Core automatically aborts and cleans up an incomplete multipart S3 if the
  upload doesn’t receive any data after the configured expiry interval (1 day by default).
- Bucket names must be between 3 and 63 characters long.
- Bucket names can consist only of lowercase ASCII letters, numbers, and hyphens.
- Qumulo Core stores S3 object versions as independent files in the file system.
- To access a specific version of a file by using CLI or REST API, specify the version
  ID.
- Qumulo Core supports aws CLI 1.22.75.
- Currently, Qumulo Core doesn’t support governance mode.
- To configure an S3 bucket in Qumulo Core to work more like an Amazon S3 bucket,
  use inheritable access control entries (ACEs) to imitate bucket-level permissions.
- By default, S3 buckets in a Qumulo cluster are in a no policy state, disallowing
  unsigned, anonymous requests.
- The order of the fields in policy statements has no effect on permissions.
- The ListBuckets S3 API action checks each S3 bucket's policy.
- If you use the ListMultipartUploads S3 API action, the system doesn't show system-initiated
  uploads or how much space the uploads use on your cluster.
- It isn’t possible to change any data or attributes of an object with a valid lock.
- Qumulo Core supports only path-style bucket addressing.
- Well-behaved applications shouldn’t attempt to interpret the contents of an ETag.
- Qumulo Core supports only path-style bucket addressing
- Well-behaved applications shouldn’t attempt to interpret the contents of an ETag
- Uses Bearer tokens for authentication.
- Currently, Qumulo Core doesn’t support VPN connections with IPv6.
- Qumulo Core formats audit log messages in syslog CSV format by default.
- The syslog JSON format isn’t available in the Qumulo Core Web UI.
- Use the qq CLI to restore the default values for Cloud-Based and Nexus Monitoring.
- A Qumulo cluster uses the static IP address assigned to each of its nodes to send
  audit logs to the audit log server.
- Qumulo Core doesn't parse, analyze, index, or visualize the data.
- Qumulo Core formats audit log messages in the syslog CSV format by default.
errors:
- '401 Unauthorized: Ensure username and password are correct.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'UPGRADE_ERROR_NO_ERROR: No error occurred.'
- 'Port communication issues: Ensure correct ports are open for inbound and outbound
  connections.'
- N/A
- 'UPGRADE_ERROR_NO_ERROR: Indicates no error occurred during the upgrade process'
- Signature validation failed. SAML Response rejected.
- 'User not found: Qumulo cluster isn’t joined to AD.'
- Creating new tokens fails if a user already has two access tokens.
- PRIVILEGE_ACCESS_TOKEN_WRITE is required for creating, disabling, and deleting access
  tokens.
- PRIVILEGE_ACCESS_TOKEN_READ is required for listing access tokens.
- '401 Unauthorized: If you misplace the bearer token, you can''t retrieve it at a
  later time.'
- 'Invalid Key Format: Ensure the key is in .pem or .der format.'
- 'Key Length Not Supported: Only 256-bit ECDSA keys are supported.'
- When you disable QDNS, any previously configured FQDN and host restrictions remain
  on the cluster in an inactive state.
- Currently, Qumulo Core doesn’t support balancing connections across static IP addresses
  for any network or tenant.
- Currently, Qumulo Core doesn’t support balancing connections based on node CPU capacity.
- Currently, Qumulo Core doesn’t support resolving DNS queries using external DNS
  servers.
- Currently, Qumulo Core doesn’t support resolving DNS queries for domains outside
  Qumulo clusters.
- 'Degraded: A spoke portal with connectivity issues.'
- 'Deleting: The deletion process is in progress.'
- Unlocking a snapshot requires proving that you can sign a challenge by using the
  same key that locked the snapshot.
- 'READ_EA: Privilege required to read user-defined metadata.'
- 'WRITE_EA: Privilege required to write or delete user-defined metadata.'
- 'Unauthorized: Ensure AWS credentials have the correct permissions'
- 'PermissionDenied: Check Qumulo role privileges'
- Canceling a node replacement plan after executing one or more steps might make it
  impossible to reregister and complete the plan.
- Use special care when granting privileges to roles and users because certain privileges
  can use system privileges to overwrite or move data to a location where a user has
  greater permissions.
- 'ENOSPC: Cluster goes into read-only state until the node comes back online.'
- 'HTTP_NOT_SUPPORTED: Ensure all connections use HTTPS'
- 'STATUS_ENUM_DIR: The SMB client can’t keep up with the notification stream from
  the server.'
- 'WATCH_TREE: The server sends an error to the client immediately.'
- 'Permission Denied: Check user role privileges'
- 'Bucket Not Found: Verify the S3 bucket name'
- '401 Unauthorized: Recheck AWS credentials'
- 'STATUS_ENUM_DIR: Client must re-enumerate changes by opening and inspecting files.'
- 'mount.nfs: access denied by server while mounting <qumulo-cluster>.ad.eng.qumulo.com:/'
- NFSv4.1 byte-range locks aren't interoperable with SMB locks.
- mount-failed errors from mount.nfs
- S_PRINCIPAL_UNKNOWN
- In a secure environment, where Kerberos is required, AUTH_SYS NFSv3 connections
  aren't allowed.
- 'PRIVILEGE_S3_BUCKETS_WRITE: Required privilege to revoke access keys'
- 'PRIVILEGE_S3_BUCKETS_READ: Required privilege to list access keys'
- The specified bucket doesn’t exist.
- You don’t have permission to delete the bucket root directory.
- The bucket root directory isn’t empty.
- The bucket has in-progress upload operations (`UploadPart`, `PutObject`, or `CopyObject`).
- 'AccessDeniedByBucketPolicy: Ensure at least one Allow statement exists.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'AccessDeniedByBucketPolicy: Ensure at least one matching Allow statement exists.'
- '204 No Content: Indicates the upload is aborted or the cleanup is complete.'
- '400 Bad Request: AuthorizationHeaderMalformed'
- 'fs_entry_exists_error: The target file already exists.'
- cred_error
- cred_identity_not_supported_error
- cred_invalid_local_user_error
- cred_invalid_sid_error
- cred_remote_resource_unavailable_error
- fs_access_denied_error
- fs_access_error
- fs_access_perm_not_owner_error
- fs_already_read_only_error
- fs_default_stream_of_directory_error
- fs_directory_cycle_error
- fs_directory_error
- fs_directory_hash_exhaustion_error
- fs_directory_is_symlink_error
- fs_directory_not_empty_error
- fs_encountered_portal_error
- fs_entry_exists_error
- fs_entry_hardlink_ambiguity_error
- fs_entry_not_in_subtree_error
- fs_exceeded_maximum_stream_count_error
- fs_file_dirent_id_stale_error
- fs_file_is_named_stream_error
- fs_file_is_symlink_error
- fs_file_not_covered_by_snapshot_error
- fs_file_not_empty_error
- fs_file_path_invalid_error
- fs_file_size_error
- fs_file_too_many_links_error
- fs_invalid_acl_error
- fs_invalid_attrs_error
- fs_invalid_file_type_error
- fs_invalid_name_error
- fs_invalid_offset_error
- fs_invalid_size_error
- fs_name_size_error
- fs_no_such_entry_error
- fs_no_such_file_version_error
- fs_no_such_inode_error
- fs_no_such_path_error
- fs_not_a_directory_error
- fs_not_a_file_error
- fs_not_a_symlink_error
- fs_opened_file_stale_error
- fs_path_size_error
- fs_permissions_mode_operation_unsupported_error
- fs_portal_create_orphanage_error
- fs_portal_disconnected_error
- fs_portal_error
- fs_portal_eviction_error
- fs_portal_inconsistent_data_error
- fs_portal_incorrect_state_error
- fs_portal_invalid_lease_break_range_error
- fs_portal_not_covered_by_snapshot_error
- fs_portal_not_found_error
- fs_portal_out_of_order_lease_break_error
- fs_quota_limit_already_set_error
- fs_quota_limit_does_not_exist_error
- fs_quota_no_space_error
- fs_read_only_error
- fs_revision_mismatch_error
- fs_s3_versioning_full_error
- fs_same_inode_error
- fs_sharing_violation_error
- fs_smb_share_root_deleted_error
- fs_stream_is_default_error
- fs_symlink_loop_error
- fs_tag_mismatch_error
- fs_too_many_aces_error
- fs_user_metadata_continuation_token_type_mismatch
- fs_user_metadata_empty_insertion_error
- fs_user_metadata_hash_exhaustion_error
- fs_user_metadata_key_already_exists
- fs_user_metadata_key_not_found
- fs_user_metadata_too_large
- fs_watcher_missed_events_error
auth_info:
  mentioned_objects:
  - Bearer Tokens
  - Access Tokens
  - BearerToken
  - AccessToken
  - AccessKey
  - SecretKey
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Bearer Token
  - AUTH_SYS
  - AUTH_UNIX
  - AUTH_NONE
  - AUTH_KRB5
  - AUTH_KRB5P
  - AUTH_KRB5I
  - Active Directory
  - Security Identifiers (SIDs)
  - Access Control List (ACL)
client:
  base_url: https://docs.qumulo.com
  headers:
    Accept: application/json
source_metadata: null
