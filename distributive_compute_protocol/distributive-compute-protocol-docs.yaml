resources:
- name: appliance
  endpoint:
    path: /appliance
    method: POST
- name: function
  endpoint:
    path: /function
    method: POST
- name: job
  endpoint:
    path: /job
    method: POST
- name: connect
  endpoint:
    path: /connect
    method: POST
    data_selector: payload
    params: {}
- name: close
  endpoint:
    path: /close
    method: POST
    data_selector: payload
    params: {}
- name: keepalive
  endpoint:
    path: /keepalive
    method: POST
    data_selector: payload
    params: {}
- name: v3
  endpoint:
    path: /v3
    method: POST
    data_selector: payload
    params: {}
- name: Worker
  endpoint:
    path: worker
    method: POST
- name: job
  endpoint:
    path: /compute/for
    method: POST
- name: mandelbrot_set
  endpoint:
    path: /mandelbrot-set
    method: POST
    data_selector: result
- name: mandelbrot
  endpoint:
    path: /mandelbrot-set
    method: GET
- name: job
  endpoint:
    path: /compute
    method: POST
    data_selector: job
    params: {}
- name: compute
  endpoint:
    path: /api/compute
    method: POST
    data_selector: results
- name: compute_job
  endpoint:
    path: /compute/for
    method: POST
    data_selector: resultSet
    params: {}
notes:
- Account Keystores generated will have a balance of 0.
- Using localExec() requires the dcp-worker package.
- Specify the Access-Control-Allow-Headers and Access-Control-Allow-Origin headers
  for CORS.
- The Compute API uses the same version number scheme as npm.
- Only new versions signed by the same key will be accepted for publication.
- DCP uses cryptographic message-signing techniques to provide message non-repudiation
  and protection against request forgery and replay attacks.
- Protocol connections are stateful, but not necessarily connected.
- This API is used to instantiate DCP workers, which will perform compute tasks on
  the network in exchange for DCCs.
- Requires setup of compute nodes on devices.
- 'DCP allows users to express a computational job as effortlessly as: job = compute.for(inputSet,
  workFunction);'
errors:
- 'ENAMESPACE: The appliance name has already been reserved'
- 'EEXIST: This version has already been published'
- 'EWORKTOOBIG: The combined size of the functions exceeds the maximum allowable size'
- 'ENOFUNDS: Insufficient credit in the account associated with the publish wallet'
- CSRF and replay attack surface closure
- 'ETARGETVERSION: the target’s protocol version is not compatible (probably too old)'
- 'EVERSION: the target has told the initiator that its version is not compatible
  (probably too old)'
- 'EADDRCHANGE: the target’s address is not the same as it was the last time we connected
  to it'
- 'EEXPIRED: the request has expired'
- 'ETIMETRAVEL: the request’s timestamp is in the future'
- 'EDUP: the request is a duplicate'
- 'EINVAL: the message is invalid'
- 'ENOV3: a request for a v3 route was sent to an entity with no v3 router'
auth_info:
  mentioned_objects: []
client:
  base_url: https://scheduler.distributed.computer
source_metadata: null
