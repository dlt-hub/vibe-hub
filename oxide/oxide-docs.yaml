resources:
- name: compute_servers
  endpoint:
    path: /api/compute-servers
    method: GET
    data_selector: servers
- name: networking
  endpoint:
    path: /api/networking
    method: GET
    data_selector: networks
- name: audit_log
  endpoint:
    path: /v1/system/audit-log
    method: GET
- name: user_logout
  endpoint:
    path: /v1/users/{user_id}/logout
    method: POST
- name: audit_log
  endpoint:
    path: /v1/system/audit-log
    method: GET
- name: user_logout
  endpoint:
    path: /v1/users/{user_id}/logout
    method: POST
- name: lldp_config
  endpoint:
    path: /v1/system/hardware/switch-port/{port}/lldp/config
    method: GET
- name: lldp_neighbors
  endpoint:
    path: /v1/system/hardware/rack-switch-port/{rack_id}/{switch_location}/{port}/lldp/neighbors
    method: GET
- name: lldp_config
  endpoint:
    path: /v1/system/hardware/switch-port/{port}/lldp/config
    method: GET
- name: lldp_neighbors
  endpoint:
    path: /v1/system/hardware/rack-switch-port/{rack_id}/{switch_location}/{port}/lldp/neighbors
    method: GET
- name: projects
  endpoint:
    path: /v1/projects/<project ID>
    method: GET
- name: disks
  endpoint:
    path: /v1/disks/<disk ID>
    method: GET
- name: vpc-subnets
  endpoint:
    path: /v1/vpc-subnets/<subnet ID>
    method: GET
- name: projects
  endpoint:
    path: /v1/projects/<project ID>
    method: GET
- name: disks
  endpoint:
    path: /v1/disks/<disk ID>
    method: GET
- name: vpc-subnets
  endpoint:
    path: /v1/vpc-subnets/<subnet ID>
    method: GET
- name: virtual_machine
  endpoint:
    path: /api/vm
    method: POST
    data_selector: vm_instances
    params: {}
- name: ssh
  endpoint:
    path: /api/instance_serial_console_stream
    method: GET
    data_selector: console_output
- name: serial_console
  endpoint:
    path: /api/instance_serial_console
    method: GET
    data_selector: serial_buffer
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: resources
- name: instances
  endpoint:
    path: /instances
    method: GET
    data_selector: resources
- name: images
  endpoint:
    path: /images
    method: GET
    data_selector: resources
- name: vpcs
  endpoint:
    path: /vpcs
    method: GET
    data_selector: resources
- name: instances
  endpoint:
    path: /api/instances
    method: GET
    data_selector: instances
- name: instance_list
  endpoint:
    path: /api/instance_list
    method: GET
- name: instance_view
  endpoint:
    path: /api/instance_view
    method: GET
- name: instance_delete
  endpoint:
    path: /api/instance_delete
    method: DELETE
- name: instance_update
  endpoint:
    path: /api/instance_update
    method: PUT
- name: instance_disk_list
  endpoint:
    path: /api/instance_disk_list
    method: GET
- name: instance_network_interface_list
  endpoint:
    path: /api/instance_network_interface_list
    method: GET
- name: instance_external_ip_list
  endpoint:
    path: /api/instance_external_ip_list
    method: GET
- name: instance_start
  endpoint:
    path: /api/instance_start
    method: POST
- name: instance_stop
  endpoint:
    path: /api/instance_stop
    method: POST
- name: instance_reboot
  endpoint:
    path: /api/instance_reboot
    method: POST
- name: instance_serial_console_stream
  endpoint:
    path: /api/instance_serial_console_stream
    method: GET
- name: instance_serial_console
  endpoint:
    path: /api/instance_serial_console
    method: GET
- name: image_create
  endpoint:
    path: /api/image_create
    method: POST
- name: image_delete
  endpoint:
    path: /api/image_delete
    method: DELETE
- name: image_list
  endpoint:
    path: /api/image_list
    method: GET
- name: image_view
  endpoint:
    path: /api/image_view
    method: GET
- name: image_promote
  endpoint:
    path: /api/image_promote
    method: POST
- name: instance
  endpoint:
    path: /api/instance_list
    method: GET
    data_selector: instances
- name: instance_view
  endpoint:
    path: /api/instance_view
    method: GET
    data_selector: instance
- name: instance_delete
  endpoint:
    path: /api/instance_delete
    method: DELETE
    data_selector: delete_status
- name: instance_update
  endpoint:
    path: /api/instance_update
    method: POST
    data_selector: update_status
- name: instance_disk_list
  endpoint:
    path: /api/instance_disk_list
    method: GET
    data_selector: disks
- name: instance_network_interface_list
  endpoint:
    path: /api/instance_network_interface_list
    method: GET
    data_selector: network_interfaces
- name: instance_external_ip_list
  endpoint:
    path: /api/instance_external_ip_list
    method: GET
    data_selector: external_ips
- name: disk_create
  endpoint:
    path: /api/disk_create
    method: POST
    data_selector: disk
    params: {}
- name: disk_delete
  endpoint:
    path: /api/disk_delete
    method: DELETE
    data_selector: disk
    params: {}
- name: disk_list
  endpoint:
    path: /api/disk_list
    method: GET
    data_selector: disks
    params: {}
- name: disk_view
  endpoint:
    path: /api/disk_view
    method: GET
    data_selector: disk
    params: {}
- name: snapshot_create
  endpoint:
    path: /api/snapshot_create
    method: POST
    data_selector: snapshot
    params: {}
- name: snapshot_delete
  endpoint:
    path: /api/snapshot_delete
    method: DELETE
    data_selector: snapshot
    params: {}
- name: snapshot_list
  endpoint:
    path: /api/snapshot_list
    method: GET
    data_selector: snapshots
    params: {}
- name: snapshot_view
  endpoint:
    path: /api/snapshot_view
    method: GET
    data_selector: snapshot
    params: {}
- name: image_create
  endpoint:
    path: /api/image_create
    method: POST
- name: image_delete
  endpoint:
    path: /api/image_delete
    method: DELETE
- name: image_list
  endpoint:
    path: /api/image_list
    method: GET
- name: image_view
  endpoint:
    path: /api/image_view
    method: GET
- name: image_promote
  endpoint:
    path: /api/image_promote
    method: POST
- name: floating_ip_create
  endpoint:
    path: /api/floating_ip_create
    method: POST
    data_selector: FloatingIp
    params: {}
- name: floating_ip_delete
  endpoint:
    path: /api/floating_ip_delete
    method: DELETE
    data_selector: success
    params: {}
- name: floating_ip_list
  endpoint:
    path: /api/floating_ip_list
    method: GET
    data_selector: FloatingIp
    params: {}
- name: floating_ip_view
  endpoint:
    path: /api/floating_ip_view
    method: GET
    data_selector: FloatingIp
    params: {}
- name: floating_ip_attach
  endpoint:
    path: /api/floating_ip_attach
    method: POST
    data_selector: FloatingIp
    params: {}
- name: floating_ip_detach
  endpoint:
    path: /api/floating_ip_detach
    method: POST
    data_selector: FloatingIp
    params: {}
- name: disk_create
  endpoint:
    path: /api/disk_create
    method: POST
- name: disk_delete
  endpoint:
    path: /api/disk_delete
    method: DELETE
- name: disk_list
  endpoint:
    path: /api/disk_list
    method: GET
- name: disk_view
  endpoint:
    path: /api/disk_view
    method: GET
- name: disk_bulk_write_import_start
  endpoint:
    path: /api/disk_bulk_write_import_start
    method: POST
- name: disk_bulk_write_import_stop
  endpoint:
    path: /api/disk_bulk_write_import_stop
    method: POST
- name: disk_bulk_write_import
  endpoint:
    path: /api/disk_bulk_write_import
    method: POST
- name: disk_finalize_import
  endpoint:
    path: /api/disk_finalize_import
    method: POST
- name: snapshot_create
  endpoint:
    path: /api/snapshot_create
    method: POST
- name: snapshot_delete
  endpoint:
    path: /api/snapshot_delete
    method: DELETE
- name: snapshot_list
  endpoint:
    path: /api/snapshot_list
    method: GET
- name: snapshot_view
  endpoint:
    path: /api/snapshot_view
    method: GET
- name: floating_ip_create
  endpoint:
    path: /api/floating_ip_create
    method: POST
- name: floating_ip_delete
  endpoint:
    path: /api/floating_ip_delete
    method: DELETE
- name: floating_ip_list
  endpoint:
    path: /api/floating_ip_list
    method: GET
- name: floating_ip_view
  endpoint:
    path: /api/floating_ip_view
    method: GET
- name: floating_ip_attach
  endpoint:
    path: /api/floating_ip_attach
    method: POST
- name: floating_ip_detach
  endpoint:
    path: /api/floating_ip_detach
    method: POST
- name: vpc_create
  endpoint:
    path: /api/vpc_create
    method: POST
- name: vpc_update
  endpoint:
    path: /api/vpc_update
    method: PUT
- name: vpc_delete
  endpoint:
    path: /api/vpc_delete
    method: DELETE
- name: vpc_list
  endpoint:
    path: /api/vpc_list
    method: GET
- name: vpc_view
  endpoint:
    path: /api/vpc_view
    method: GET
- name: vpc_subnet_create
  endpoint:
    path: /api/vpc_subnet_create
    method: POST
- name: vpc_subnet_update
  endpoint:
    path: /api/vpc_subnet_update
    method: PUT
- name: vpc_subnet_delete
  endpoint:
    path: /api/vpc_subnet_delete
    method: DELETE
- name: vpc_subnet_list
  endpoint:
    path: /api/vpc_subnet_list
    method: GET
- name: vpc_subnet_view
  endpoint:
    path: /api/vpc_subnet_view
    method: GET
- name: vpc_subnet_list_network_interfaces
  endpoint:
    path: /api/vpc_subnet_list_network_interfaces
    method: GET
- name: floating_ip_attach
  endpoint:
    path: /api/floating_ip_attach
    method: POST
- name: floating_ip_detach
  endpoint:
    path: /api/floating_ip_detach
    method: POST
- name: instance_ephemeral_ip_attach
  endpoint:
    path: /api/instance_ephemeral_ip_attach
    method: POST
- name: instance_ephemeral_ip_detach
  endpoint:
    path: /api/instance_ephemeral_ip_detach
    method: POST
- name: vpc_firewall_rules_view
  endpoint:
    path: /api/vpc_firewall_rules_view
    method: GET
- name: vpc_firewall_rules_update
  endpoint:
    path: /api/vpc_firewall_rules_update
    method: POST
- name: system_router
  endpoint:
    path: /vpc/router/system
    method: GET
    data_selector: routes
    params: {}
- name: custom_router
  endpoint:
    path: /vpc/router/custom
    method: POST
    data_selector: custom_router
    params: {}
- name: route_update
  endpoint:
    path: /vpc/router/route/update
    method: POST
    data_selector: route
    params: {}
- name: system_router
  endpoint:
    path: /vpc/router/system
    method: GET
    data_selector: routes
    params: {}
- name: custom_router
  endpoint:
    path: /vpc/router/custom
    method: POST
    data_selector: routers
    params: {}
- name: route_update
  endpoint:
    path: /vpc/router/route/update
    method: POST
    data_selector: routes
    params: {}
- name: vpc_create
  endpoint:
    path: /api/vpc_create
    method: POST
- name: vpc_update
  endpoint:
    path: /api/vpc_update
    method: PUT
- name: vpc_delete
  endpoint:
    path: /api/vpc_delete
    method: DELETE
- name: vpc_list
  endpoint:
    path: /api/vpc_list
    method: GET
- name: vpc_view
  endpoint:
    path: /api/vpc_view
    method: GET
- name: vpc_subnet_create
  endpoint:
    path: /api/vpc_subnet_create
    method: POST
- name: vpc_subnet_update
  endpoint:
    path: /api/vpc_subnet_update
    method: PUT
- name: vpc_subnet_delete
  endpoint:
    path: /api/vpc_subnet_delete
    method: DELETE
- name: vpc_subnet_list
  endpoint:
    path: /api/vpc_subnet_list
    method: GET
- name: vpc_subnet_view
  endpoint:
    path: /api/vpc_subnet_view
    method: GET
- name: vpc_subnet_list_network_interfaces
  endpoint:
    path: /api/vpc_subnet_list_network_interfaces
    method: GET
- name: floating_ip_attach
  endpoint:
    path: /api/floating_ip_attach
    method: POST
- name: floating_ip_detach
  endpoint:
    path: /api/floating_ip_detach
    method: POST
- name: instance_ephemeral_ip_attach
  endpoint:
    path: /api/instance_ephemeral_ip_attach
    method: POST
- name: instance_ephemeral_ip_detach
  endpoint:
    path: /api/instance_ephemeral_ip_detach
    method: POST
- name: vpc_firewall_rules_view
  endpoint:
    path: /api/vpc_firewall_rules_view
    method: GET
- name: vpc_firewall_rules_update
  endpoint:
    path: /api/vpc_firewall_rules_update
    method: PUT
- name: vpc_router_route_list
  endpoint:
    path: /api/vpc_router_route_list
    method: GET
- name: vpc_router_route_update
  endpoint:
    path: /api/vpc_router_route_update
    method: PUT
- name: router
  endpoint:
    path: /vpc/router
    method: POST
    data_selector: router
    params:
      project: oxdoc
      vpc: subnet-guide
      name: island-routes
      description: It's hard to get around when there's too much water.
- name: subnet_hoenn
  endpoint:
    path: /vpc/subnet
    method: PATCH
    data_selector: subnet
    params:
      project: oxdoc
      vpc: subnet-guide
      subnet: hoenn
      custom-router: island-routes
- name: route_ocean_1
  endpoint:
    path: /vpc/router/route
    method: POST
    data_selector: route
    params:
      project: oxdoc
      vpc: subnet-guide
      router: island-routes
      json-body:
        name: ocean-1
        description: A large stretch of water.
        destination:
          type: subnet
          value: kanto
        target:
          type: drop
- name: route_ocean_2
  endpoint:
    path: /vpc/router/route
    method: POST
    data_selector: route
    params:
      project: oxdoc
      vpc: subnet-guide
      router: island-routes
      json-body:
        name: ocean-2
        description: An ocean too far.
        destination:
          type: subnet
          value: johto
        target:
          type: drop
- name: vpc_router
  endpoint:
    path: /vpc/routers
    method: POST
    data_selector: routers
    params:
      description: It's hard to get around when there's too much water.
      kind: custom
      name: island-routes
- name: hoenn_subnet
  endpoint:
    path: /vpc/subnets/hoenn
    method: PUT
    data_selector: subnets
    params:
      custom_router_id: d39c3426-c183-45df-ac2c-cbbea0cec859
- name: route_ocean_1
  endpoint:
    path: /vpc/routers/island-routes/routes
    method: POST
    data_selector: routes
    params:
      name: ocean-1
      description: A large stretch of water.
      destination:
        type: subnet
        value: kanto
      target:
        type: drop
- name: route_ocean_2
  endpoint:
    path: /vpc/routers/island-routes/routes
    method: POST
    data_selector: routes
    params:
      name: ocean-2
      description: An ocean too far.
      destination:
        type: subnet
        value: johto
      target:
        type: drop
- name: subnet
  endpoint:
    path: /vpc/subnet
    method: update
    data_selector: subnets
    params:
      project: oxdoc
      vpc: subnet-guide
      subnet: hoenn
- name: internet_gateway
  endpoint:
    path: /internet-gateway
    method: list
    data_selector: gateways
    params:
      project: oxdoc
      vpc: subnet-guide
- name: vpc_create
  endpoint:
    path: /api/vpc_create
    method: POST
- name: vpc_update
  endpoint:
    path: /api/vpc_update
    method: PUT
- name: vpc_delete
  endpoint:
    path: /api/vpc_delete
    method: DELETE
- name: vpc_list
  endpoint:
    path: /api/vpc_list
    method: GET
- name: vpc_view
  endpoint:
    path: /api/vpc_view
    method: GET
- name: vpc_subnet_create
  endpoint:
    path: /api/vpc_subnet_create
    method: POST
- name: vpc_subnet_update
  endpoint:
    path: /api/vpc_subnet_update
    method: PUT
- name: vpc_subnet_delete
  endpoint:
    path: /api/vpc_subnet_delete
    method: DELETE
- name: vpc_subnet_list
  endpoint:
    path: /api/vpc_subnet_list
    method: GET
- name: vpc_subnet_view
  endpoint:
    path: /api/vpc_subnet_view
    method: GET
- name: vpc_subnet_list_network_interfaces
  endpoint:
    path: /api/vpc_subnet_list_network_interfaces
    method: GET
- name: custom_router
  endpoint:
    path: /vpc/routers
    method: POST
    data_selector: routers
    params: {}
- name: subnet
  endpoint:
    path: /vpc/subnets
    method: PATCH
    data_selector: subnets
    params: {}
- name: route
  endpoint:
    path: /vpc/routes
    method: POST
    data_selector: routes
    params: {}
- name: vpc_create
  endpoint:
    path: /api/vpc_create
    method: POST
- name: vpc_update
  endpoint:
    path: /api/vpc_update
    method: PUT
- name: vpc_delete
  endpoint:
    path: /api/vpc_delete
    method: DELETE
- name: vpc_list
  endpoint:
    path: /api/vpc_list
    method: GET
- name: vpc_view
  endpoint:
    path: /api/vpc_view
    method: GET
- name: vpc_subnet_create
  endpoint:
    path: /api/vpc_subnet_create
    method: POST
- name: vpc_subnet_update
  endpoint:
    path: /api/vpc_subnet_update
    method: PUT
- name: vpc_subnet_delete
  endpoint:
    path: /api/vpc_subnet_delete
    method: DELETE
- name: vpc_subnet_list
  endpoint:
    path: /api/vpc_subnet_list
    method: GET
- name: vpc_subnet_view
  endpoint:
    path: /api/vpc_subnet_view
    method: GET
- name: vpc_subnet_list_network_interfaces
  endpoint:
    path: /api/vpc_subnet_list_network_interfaces
    method: GET
- name: floating_ip_attach
  endpoint:
    path: /api/floating_ip_attach
    method: POST
- name: floating_ip_detach
  endpoint:
    path: /api/floating_ip_detach
    method: POST
- name: instance_ephemeral_ip_attach
  endpoint:
    path: /api/instance_ephemeral_ip_attach
    method: POST
- name: instance_ephemeral_ip_detach
  endpoint:
    path: /api/instance_ephemeral_ip_detach
    method: POST
- name: vpc_firewall_rules_view
  endpoint:
    path: /api/vpc_firewall_rules_view
    method: GET
- name: vpc_firewall_rules_update
  endpoint:
    path: /api/vpc_firewall_rules_update
    method: PUT
- name: vpc_router_route_list
  endpoint:
    path: /api/vpc_router_route_list
    method: GET
- name: vpc_router_route_update
  endpoint:
    path: /api/vpc_router_route_update
    method: PUT
- name: default_gateway
  endpoint:
    path: /api/internet_gateway_view
    method: GET
    data_selector: description
    params: {}
- name: custom_gateway
  endpoint:
    path: /api/internet_gateway_create
    method: POST
    data_selector: description
    params: {}
- name: windows_images
  endpoint:
    path: /api/windows_images
    method: POST
    data_selector: data
    params: {}
- name: custom_router
  endpoint:
    path: /vpc/routers
    method: POST
    data_selector: router
    params: {}
- name: subnet
  endpoint:
    path: /vpc/subnets
    method: GET
    data_selector: subnets
    params: {}
- name: route
  endpoint:
    path: /vpc/routes
    method: POST
    data_selector: route
    params: {}
- name: Remote Desktop
  endpoint:
    path: /guides/configuring-guest-networking
    method: GET
    data_selector: rules
    params: {}
- name: default_gateway
  endpoint:
    path: /api/vpc_router_list
    method: GET
    data_selector: description
    params: {}
- name: custom_gateway
  endpoint:
    path: /api/vpc_router_route_list
    method: GET
    data_selector: description
    params: {}
- name: Windows_Instances
  endpoint:
    path: /api/windows_instances
    method: GET
    data_selector: instances
- name: policy_view
  endpoint:
    path: /api/policy_view
    method: GET
- name: policy_update
  endpoint:
    path: /api/policy_update
    method: POST
- name: project_policy_view
  endpoint:
    path: /api/project_policy_view
    method: GET
- name: project_policy_update
  endpoint:
    path: /api/project_policy_update
    method: POST
- name: silo_policy_view
  endpoint:
    path: /api/silo_policy_view
    method: GET
- name: silo_policy_update
  endpoint:
    path: /api/silo_policy_update
    method: POST
- name: user_list
  endpoint:
    path: /api/user_list
    method: GET
- name: group_list
  endpoint:
    path: /api/group_list
    method: GET
- name: local_idp_user_create
  endpoint:
    path: /api/local_idp_user_create
    method: POST
- name: local_idp_user_delete
  endpoint:
    path: /api/local_idp_user_delete
    method: DELETE
- name: local_idp_user_set_password
  endpoint:
    path: /api/local_idp_user_set_password
    method: POST
- name: silo_user_list
  endpoint:
    path: /api/silo_user_list
    method: GET
- name: silo_user_view
  endpoint:
    path: /api/silo_user_view
    method: GET
- name: policy_view
  endpoint:
    path: /api/policy_view
    method: GET
- name: policy_update
  endpoint:
    path: /api/policy_update
    method: POST
- name: project_policy_view
  endpoint:
    path: /api/project_policy_view
    method: GET
- name: project_policy_update
  endpoint:
    path: /api/project_policy_update
    method: POST
- name: silo_policy_view
  endpoint:
    path: /api/silo_policy_view
    method: GET
- name: silo_policy_update
  endpoint:
    path: /api/silo_policy_update
    method: POST
- name: user_list
  endpoint:
    path: /api/user_list
    method: GET
- name: group_list
  endpoint:
    path: /api/group_list
    method: GET
- name: local_idp_user_create
  endpoint:
    path: /api/local_idp_user_create
    method: POST
- name: local_idp_user_delete
  endpoint:
    path: /api/local_idp_user_delete
    method: DELETE
- name: local_idp_user_set_password
  endpoint:
    path: /api/local_idp_user_set_password
    method: POST
- name: silo_user_list
  endpoint:
    path: /api/silo_user_list
    method: GET
- name: silo_user_view
  endpoint:
    path: /api/silo_user_view
    method: GET
- name: current_user_view
  endpoint:
    path: /api/current_user_view
    method: GET
- name: current_user_groups
  endpoint:
    path: /api/current_user_groups
    method: GET
- name: current_user_access_token_list
  endpoint:
    path: /api/current_user_access_token_list
    method: GET
- name: current_user_ssh_key_create
  endpoint:
    path: /api/current_user_ssh_key_create
    method: POST
- name: current_user_ssh_key_delete
  endpoint:
    path: /api/current_user_ssh_key_delete
    method: DELETE
- name: current_user_ssh_key_list
  endpoint:
    path: /api/current_user_ssh_key_list
    method: GET
- name: current_user_ssh_key_view
  endpoint:
    path: /api/current_user_ssh_key_view
    method: GET
- name: utilization_view
  endpoint:
    path: /api/utilization_view
    method: GET
- name: current_user_view
  endpoint:
    path: /api/current_user_view
    method: GET
- name: current_user_groups
  endpoint:
    path: /api/current_user_groups
    method: GET
- name: current_user_access_token_list
  endpoint:
    path: /api/current_user_access_token_list
    method: GET
- name: current_user_ssh_key_create
  endpoint:
    path: /api/current_user_ssh_key_create
    method: POST
- name: current_user_ssh_key_delete
  endpoint:
    path: /api/current_user_ssh_key_delete
    method: DELETE
- name: current_user_ssh_key_list
  endpoint:
    path: /api/current_user_ssh_key_list
    method: GET
- name: current_user_ssh_key_view
  endpoint:
    path: /api/current_user_ssh_key_view
    method: GET
- name: utilization_view
  endpoint:
    path: /api/utilization_view
    method: GET
    data_selector: resources
    params: {}
- name: ip_pool_create
  endpoint:
    path: /api/ip_pool_create
    method: POST
- name: ip_pool_update
  endpoint:
    path: /api/ip_pool_update
    method: PUT
- name: ip_pool_delete
  endpoint:
    path: /api/ip_pool_delete
    method: DELETE
- name: ip_pool_list
  endpoint:
    path: /api/ip_pool_list
    method: GET
- name: ip_pool_view
  endpoint:
    path: /api/ip_pool_view
    method: GET
- name: ip_pool_range_add
  endpoint:
    path: /api/ip_pool_range_add
    method: POST
- name: ip_pool_range_remove
  endpoint:
    path: /api/ip_pool_range_remove
    method: DELETE
- name: ip_pool_range_list
  endpoint:
    path: /api/ip_pool_range_list
    method: GET
- name: ip_pool_silo_link
  endpoint:
    path: /api/ip_pool_silo_link
    method: POST
- name: ip_pool_silo_update
  endpoint:
    path: /api/ip_pool_silo_update
    method: PUT
- name: ip_pool_silo_unlink
  endpoint:
    path: /api/ip_pool_silo_unlink
    method: DELETE
- name: ip_pool_silo_list
  endpoint:
    path: /api/ip_pool_silo_list
    method: GET
- name: ip_pool_service_view
  endpoint:
    path: /api/ip_pool_service_view
    method: GET
- name: ip_pool_service_range_add
  endpoint:
    path: /api/ip_pool_service_range_add
    method: POST
- name: ip_pool_service_range_remove
  endpoint:
    path: /api/ip_pool_service_range_remove
    method: DELETE
- name: ip_pool_service_range_list
  endpoint:
    path: /api/ip_pool_service_range_list
    method: GET
- name: ip_pool_create
  endpoint:
    path: /api/ip_pool_create
    method: POST
- name: ip_pool_update
  endpoint:
    path: /api/ip_pool_update
    method: PUT
- name: ip_pool_delete
  endpoint:
    path: /api/ip_pool_delete
    method: DELETE
- name: ip_pool_list
  endpoint:
    path: /api/ip_pool_list
    method: GET
- name: ip_pool_view
  endpoint:
    path: /api/ip_pool_view
    method: GET
- name: ip_pool_range_add
  endpoint:
    path: /api/ip_pool_range_add
    method: POST
- name: ip_pool_range_remove
  endpoint:
    path: /api/ip_pool_range_remove
    method: DELETE
- name: ip_pool_range_list
  endpoint:
    path: /api/ip_pool_range_list
    method: GET
- name: ip_pool_silo_link
  endpoint:
    path: /api/ip_pool_silo_link
    method: POST
- name: ip_pool_silo_update
  endpoint:
    path: /api/ip_pool_silo_update
    method: PUT
- name: ip_pool_silo_unlink
  endpoint:
    path: /api/ip_pool_silo_unlink
    method: DELETE
- name: ip_pool_silo_list
  endpoint:
    path: /api/ip_pool_silo_list
    method: GET
- name: peering_address_lot
  endpoint:
    path: /system/networking/address-lot
    method: POST
    data_selector: address_lot
    params:
      name: peering
      description: a lot for bgp peering
      kind: infra
      blocks:
      - first_address: 192.168.22.1
        last_address: 192.168.22.6
- name: bgp_announce_set
  endpoint:
    path: /system/networking/bgp/announce-set
    method: UPDATE
    data_selector: announce_set
    params:
      name: instances
      description: the instance block
      announcement:
      - address_lot_block: instances
        network: 192.168.20.0/24
- name: bgp_configuration
  endpoint:
    path: /system/networking/bgp/config
    method: POST
    data_selector: bgp_config
    params:
      name: as47
      description: autonomous system 47
      asn: 47
      bgp_announce_set_id: instances
- name: bgp_peer
  endpoint:
    path: /system/networking/bgp/peer
    method: SET
    data_selector: bgp_peer
    params:
      rack: $rack
      switch: switch0
      port: qsfp0
      addr: 192.168.22.1
      bgp_config: as47
      hold_time: 6
      idle_hold_time: 6
      delay_open: 0
      connect_retry: 3
      keepalive: 2
- name: bgp_status
  endpoint:
    path: /system/networking/bgp/status
    method: GET
    data_selector: '[0]'
    params: {}
- name: bgp_history
  endpoint:
    path: /system/networking/bgp/history
    method: GET
    data_selector: switch_histories
    params: {}
- name: bfd_session
  endpoint:
    path: /system/networking/bfd
    method: GET
    data_selector: '[]'
- name: address_lot
  endpoint:
    path: /system/networking/address-lot/create
    method: POST
    data_selector: ''
    params:
      name: peering
      description: a lot for bgp peering
      kind: infra
      blocks:
      - first_address: 192.168.22.1
        last_address: 192.168.22.6
- name: announce_set
  endpoint:
    path: /system/networking/bgp/announce-set/update
    method: POST
    data_selector: ''
    params:
      name: instances
      description: the instance block
      announcement:
      - address_lot_block: instances
        network: 192.168.20.0/24
- name: bgp_configuration
  endpoint:
    path: /system/networking/bgp/config/create
    method: POST
    data_selector: ''
    params:
      name: as47
      description: autonomous system 47
      asn: 47
      bgp-announce-set-id: instances
- name: bgp_peer
  endpoint:
    path: /system/networking/bgp/peer/set
    method: POST
    data_selector: ''
    params:
      rack: ''
      switch: switch0
      port: qsfp0
      addr: 192.168.22.1
      bgp-config: as47
      hold-time: 6
      idle-hold-time: 6
      delay-open: 0
      connect-retry: 3
      keepalive: 2
- name: bgp_status
  endpoint:
    path: /system/networking/bgp/status
    method: GET
    data_selector: '[].addr'
    params: {}
- name: bgp_history
  endpoint:
    path: /system/networking/bgp/history
    method: GET
    data_selector: switch_histories
    params:
      asn: '65002'
- name: address_lot_creation
  endpoint:
    path: /system/networking/address-lot/create
    method: POST
    data_selector: address_lot
    params: {}
- name: address_assignment
  endpoint:
    path: /system/networking/addr/add
    method: POST
    data_selector: address_assignment
    params: {}
- name: bgp_configuration
  endpoint:
    path: /system/networking/bgp/peer/set
    method: POST
    data_selector: bgp_configuration
    params: {}
- name: bgp_status
  endpoint:
    path: /system/networking/bgp/show-status
    method: GET
    data_selector: bgp_status
    params: {}
- name: bfd_session
  endpoint:
    path: /api/bfd/session
    method: POST
    data_selector: sessions
    params:
      required_rx: 1000000
      detection_threshold: 3
      mode: single_hop
      switch: switch0
- name: bgp_filter
  endpoint:
    path: /system/networking/bgp/filter
    method: POST
    data_selector: allowed_prefixes
    params: {}
- name: bgp_imported
  endpoint:
    path: /system/networking/bgp/imported/ipv4
    method: GET
    data_selector: imported_prefixes
    params:
      asn: 65547
- name: ip_pool
  endpoint:
    path: /ip-pool
    method: POST
    data_selector: ip_pool_creation
    params: {}
- name: address_lot_creation
  endpoint:
    path: /system/networking/address-lot/create
    method: POST
    data_selector: null
    params: {}
- name: address_assignment
  endpoint:
    path: /system/networking/addr/add
    method: POST
    data_selector: null
    params: {}
- name: bgp_configuration
  endpoint:
    path: /system/networking/bgp/peer/set
    method: POST
    data_selector: null
    params: {}
- name: bgp_show_status
  endpoint:
    path: /system/networking/bgp/show-status
    method: GET
    data_selector: null
    params: {}
- name: switch_port_settings
  endpoint:
    path: /system/networking/switch-port-settings
    method: GET
    data_selector: switch_port_settings
    params: {}
- name: link_add
  endpoint:
    path: /system/networking/link/add
    method: POST
    data_selector: link_add
    params: {}
- name: apply_settings
  endpoint:
    path: /system/hardware/switch-port/apply-settings
    method: POST
    data_selector: apply_settings
    params: {}
- name: addr_add
  endpoint:
    path: /system/networking/addr/add
    method: POST
    data_selector: addr_add
    params: {}
- name: route_set
  endpoint:
    path: /system/networking/route/set
    method: POST
    data_selector: route_set
    params: {}
- name: audit_log_list
  endpoint:
    path: /api/audit_log_list
    method: GET
    data_selector: results
    params:
      start_time: required
      end_time: optional
- name: switch_port_settings
  endpoint:
    path: /system/networking/switch-port-settings
    method: GET
    data_selector: settings
- name: link_add
  endpoint:
    path: /system/networking/link/add
    method: POST
    data_selector: link
- name: apply_settings
  endpoint:
    path: /system/hardware/switch-port/apply-settings
    method: POST
    data_selector: apply
- name: addr_add
  endpoint:
    path: /system/networking/addr/add
    method: POST
    data_selector: addr
- name: route_set
  endpoint:
    path: /system/networking/route/set
    method: POST
    data_selector: route
- name: audit_log_list
  endpoint:
    path: /api/audit_log_list
    method: GET
- name: instance_stop
  endpoint:
    path: /api/instance_stop
    method: POST
    data_selector: response
    params: {}
- name: instance_start
  endpoint:
    path: /api/instance_start
    method: POST
    data_selector: response
    params: {}
- name: ip_pool_range_add
  endpoint:
    path: /api/ip_pool_range_add
    method: POST
    data_selector: response
    params: {}
- name: networking_allow_list_update
  endpoint:
    path: /api/networking_allow_list_update
    method: POST
    data_selector: response
    params: {}
- name: local_idp_user_set_password
  endpoint:
    path: /api/local_idp_user_set_password
    method: POST
    data_selector: response
    params: {}
- name: user_list
  endpoint:
    path: /api/user_list
    method: GET
    data_selector: users
    params: {}
- name: current_user_view
  endpoint:
    path: /api/current_user_view
    method: GET
    data_selector: user
    params: {}
- name: project
  endpoint:
    path: /guides/onboarding-projects
    method: GET
    data_selector: records
    params: {}
- name: source_image
  endpoint:
    path: /guides/creating-and-sharing-images
    method: GET
    data_selector: records
    params: {}
- name: instance_stop
  endpoint:
    path: /api/instance_stop
    method: POST
    data_selector: records
- name: instance_start
  endpoint:
    path: /api/instance_start
    method: POST
    data_selector: records
- name: ip_pool_range_add
  endpoint:
    path: /api/ip_pool_range_add
    method: POST
    data_selector: records
- name: networking_allow_list_update
  endpoint:
    path: /api/networking_allow_list_update
    method: POST
    data_selector: records
- name: local_idp_user_set_password
  endpoint:
    path: /api/local_idp_user_set_password
    method: POST
    data_selector: records
- name: user_list
  endpoint:
    path: /api/user_list
    method: GET
    data_selector: records
- name: current_user_view
  endpoint:
    path: /api/current_user_view
    method: GET
    data_selector: records
- name: oxide-instance
  endpoint:
    path: /api/v1/instances
    method: POST
    data_selector: instance
    params: {}
- name: oxide-image
  endpoint:
    path: /api/v1/images
    method: POST
    data_selector: image
    params: {}
- name: temporary_instance
  endpoint:
    path: /guides/creating-and-sharing-images
    method: POST
    data_selector: image_id
    params: {}
- name: oxide_project
  endpoint:
    path: /api/oxide_project
    method: POST
    data_selector: resource
    params:
      name: example
      description: Managed by Terraform.
- name: oxide-instance
  endpoint:
    path: /instances
    method: POST
    data_selector: instance
    params: {}
- name: oxide-image
  endpoint:
    path: /images
    method: POST
    data_selector: image
    params: {}
- name: oxide_project
  endpoint:
    path: /api/projects
    method: POST
    data_selector: null
    params: {}
- name: oxide-k8s-cluster
  endpoint:
    path: /api/oxide-k8s-cluster
    method: POST
    data_selector: cluster
    params: {}
- name: oxide_project
  endpoint:
    path: /api/projects
    method: POST
    data_selector: id
    params: {}
- name: oxide_project
  endpoint:
    path: /oxide_project
    method: POST
    data_selector: resources
    params: {}
- name: sled_data_link:bytes_sent
  endpoint:
    path: /api/system_timeseries_query
    method: GET
    data_selector: tables
- name: oxide_project
  endpoint:
    path: /api/projects
    method: POST
    data_selector: data
- name: bytes_sent
  endpoint:
    path: /sled_data_link/bytes_sent
    method: GET
    data_selector: records
- name: bytes_received
  endpoint:
    path: /sled_data_link/bytes_received
    method: GET
    data_selector: records
- name: oxide_project
  endpoint:
    path: /api/projects
    method: POST
    data_selector: resources
    params:
      name: example
      description: Managed by Terraform.
- name: sled_data_link:bytes_sent
  endpoint:
    path: /sled_data_link/bytes_sent
    method: GET
    data_selector: timeseries
    params: {}
- name: sled_data_link:bytes_received
  endpoint:
    path: /sled_data_link/bytes_received
    method: GET
    data_selector: timeseries
    params: {}
- name: system_timeseries_query
  endpoint:
    path: /api/system_timeseries_query
    method: GET
    data_selector: tables
- name: bfd_session
  endpoint:
    path: /bfd_session
    method: GET
    data_selector: records
    params: {}
- name: bgp_session
  endpoint:
    path: /bgp_session
    method: GET
    data_selector: records
    params: {}
- name: bytes_sent
  endpoint:
    path: /sled_data_link/bytes_sent
    method: GET
    data_selector: records
    params: {}
- name: bytes_received
  endpoint:
    path: /sled_data_link/bytes_received
    method: GET
    data_selector: records
    params: {}
- name: sled_data_link:bytes_sent
  endpoint:
    path: /sled_data_link:bytes_sent
    method: GET
    data_selector: records
- name: sled_data_link:bytes_received
  endpoint:
    path: /sled_data_link:bytes_received
    method: GET
    data_selector: records
- name: keepalive_send_failures
  endpoint:
    path: /bgp_session/keepalive_send_failures
    method: GET
    data_selector: records
- name: keepalives_received
  endpoint:
    path: /bgp_session/keepalives_received
    method: GET
    data_selector: records
- name: keepalives_sent
  endpoint:
    path: /bgp_session/keepalives_sent
    method: GET
    data_selector: records
- name: notification_send_failures
  endpoint:
    path: /bgp_session/notification_send_failures
    method: GET
    data_selector: records
- name: open_handle_failures
  endpoint:
    path: /bgp_session/open_handle_failures
    method: GET
    data_selector: records
- name: open_send_failures
  endpoint:
    path: /bgp_session/open_send_failures
    method: GET
    data_selector: records
- name: opens_received
  endpoint:
    path: /bgp_session/opens_received
    method: GET
    data_selector: records
- name: opens_sent
  endpoint:
    path: /bgp_session/opens_sent
    method: GET
    data_selector: records
- name: passive_connections_accepted
  endpoint:
    path: /bgp_session/passive_connections_accepted
    method: GET
    data_selector: records
- name: prefixes_advertised
  endpoint:
    path: /bgp_session/prefixes_advertised
    method: GET
    data_selector: records
- name: prefixes_imported
  endpoint:
    path: /bgp_session/prefixes_imported
    method: GET
    data_selector: records
- name: transition_to_active
  endpoint:
    path: /bgp_session/transition_to_active
    method: GET
    data_selector: records
- name: transition_to_connect
  endpoint:
    path: /bgp_session/transition_to_connect
    method: GET
    data_selector: records
- name: transition_to_established
  endpoint:
    path: /bgp_session/transition_to_established
    method: GET
    data_selector: records
- name: transition_to_idle
  endpoint:
    path: /bgp_session/transition_to_idle
    method: GET
    data_selector: records
- name: transition_to_open_confirm
  endpoint:
    path: /bgp_session/transition_to_open_confirm
    method: GET
    data_selector: records
- name: transition_to_open_sent
  endpoint:
    path: /bgp_session/transition_to_open_sent
    method: GET
    data_selector: records
- name: transition_to_session_setup
  endpoint:
    path: /bgp_session/transition_to_session_setup
    method: GET
    data_selector: records
- name: unexpected_keepalive_messages
  endpoint:
    path: /bgp_session/unexpected_keepalive_messages
    method: GET
    data_selector: records
- name: unexpected_open_messages
  endpoint:
    path: /bgp_session/unexpected_open_messages
    method: GET
    data_selector: records
- name: unexpected_update_messages
  endpoint:
    path: /bgp_session/unexpected_update_messages
    method: GET
    data_selector: records
- name: update_nexthop_missing
  endpoint:
    path: /bgp_session/update_nexthop_missing
    method: GET
    data_selector: records
- name: update_send_failures
  endpoint:
    path: /bgp_session/update_send_failures
    method: GET
    data_selector: records
- name: bfd_session_control_packet_send_failures
  endpoint:
    path: /bfd_session/control_packet_send_failures
    method: GET
    data_selector: records
- name: bfd_session_control_packets_received
  endpoint:
    path: /bfd_session/control_packets_received
    method: GET
    data_selector: records
- name: bfd_session_control_packets_sent
  endpoint:
    path: /bfd_session/control_packets_sent
    method: GET
    data_selector: records
- name: bfd_session_message_receive_error
  endpoint:
    path: /bfd_session/message_receive_error
    method: GET
    data_selector: records
- name: bfd_session_timeout_expired
  endpoint:
    path: /bfd_session/timeout_expired
    method: GET
    data_selector: records
- name: bfd_session_transition_to_down
  endpoint:
    path: /bfd_session/transition_to_down
    method: GET
    data_selector: records
- name: bfd_session_transition_to_init
  endpoint:
    path: /bfd_session/transition_to_init
    method: GET
    data_selector: records
- name: bfd_session_transition_to_up
  endpoint:
    path: /bfd_session/transition_to_up
    method: GET
    data_selector: records
- name: bgp_session_active_connections_accepted
  endpoint:
    path: /bgp_session/active_connections_accepted
    method: GET
    data_selector: records
- name: bgp_session_connection_retries
  endpoint:
    path: /bgp_session/connection_retries
    method: GET
    data_selector: records
- name: bgp_session_hold_timer_expirations
  endpoint:
    path: /bgp_session/hold_timer_expirations
    method: GET
    data_selector: records
- name: bgp_session_idle_hold_timer_expirations
  endpoint:
    path: /bgp_session/idle_hold_timer_expirations
    method: GET
    data_selector: records
- name: bgp_session:updates_received
  endpoint:
    path: /bgp_session/updates_received
    method: GET
    data_selector: records
- name: bgp_session:updates_sent
  endpoint:
    path: /bgp_session/updates_sent
    method: GET
    data_selector: records
- name: collection_target:cpus_provisioned
  endpoint:
    path: /collection_target/cpus_provisioned
    method: GET
    data_selector: records
- name: collection_target:ram_provisioned
  endpoint:
    path: /collection_target/ram_provisioned
    method: GET
    data_selector: records
- name: collection_target:virtual_disk_space_provisioned
  endpoint:
    path: /collection_target/virtual_disk_space_provisioned
    method: GET
    data_selector: records
- name: database_transaction:retry_data
  endpoint:
    path: /database_transaction/retry_data
    method: GET
    data_selector: records
- name: ddm_router:originated_tunnel_endpoints
  endpoint:
    path: /ddm_router/originated_tunnel_endpoints
    method: GET
    data_selector: records
- name: ddm_router:originated_underlay_prefixes
  endpoint:
    path: /ddm_router/originated_underlay_prefixes
    method: GET
    data_selector: records
- name: ddm_session:advertisements_received
  endpoint:
    path: /ddm_session/advertisements_received
    method: GET
    data_selector: records
- name: ddm_session:advertisements_sent
  endpoint:
    path: /ddm_session/advertisements_sent
    method: GET
    data_selector: records
- name: ddm_session:imported_tunnel_endpoints
  endpoint:
    path: /ddm_session/imported_tunnel_endpoints
    method: GET
    data_selector: records
- name: ddm_session:imported_underlay_prefixes
  endpoint:
    path: /ddm_session/imported_underlay_prefixes
    method: GET
    data_selector: records
- name: ddm_session:peer_address_changes
  endpoint:
    path: /ddm_session/peer_address_changes
    method: GET
    data_selector: records
- name: ddm_session:peer_expirations
  endpoint:
    path: /ddm_session/peer_expirations
    method: GET
    data_selector: records
- name: ddm_session:peer_sessions_established
  endpoint:
    path: /ddm_session/peer_sessions_established
    method: GET
    data_selector: records
- name: ddm_session:solicitations_received
  endpoint:
    path: /ddm_session/solicitations_received
    method: GET
    data_selector: records
- name: ddm_session:solicitations_sent
  endpoint:
    path: /ddm_session/solicitations_sent
    method: GET
    data_selector: records
- name: ddm_session:update_send_fail
  endpoint:
    path: /ddm_session/update_send_fail
    method: GET
    data_selector: records
- name: ddm_session:updates_received
  endpoint:
    path: /ddm_session/updates_received
    method: GET
    data_selector: records
- name: ddm_session:updates_sent
  endpoint:
    path: /ddm_session/updates_sent
    method: GET
    data_selector: records
- name: dendrite:sample_collection_duration
  endpoint:
    path: /dendrite/sample_collection_duration
    method: GET
    data_selector: records
- name: hardware_component:amd_cpu_tctl
  endpoint:
    path: /hardware_component/amd_cpu_tctl
    method: GET
    data_selector: records
- name: hardware_component:current
  endpoint:
    path: /hardware_component/current
    method: GET
    data_selector: records
- name: keepalive_send_failures
  endpoint:
    path: /bgp_session/keepalive_send_failures
    method: GET
    data_selector: records
- name: keepalives_received
  endpoint:
    path: /bgp_session/keepalives_received
    method: GET
    data_selector: records
- name: keepalives_sent
  endpoint:
    path: /bgp_session/keepalives_sent
    method: GET
    data_selector: records
- name: notification_send_failures
  endpoint:
    path: /bgp_session/notification_send_failures
    method: GET
    data_selector: records
- name: open_handle_failures
  endpoint:
    path: /bgp_session/open_handle_failures
    method: GET
    data_selector: records
- name: open_send_failures
  endpoint:
    path: /bgp_session/open_send_failures
    method: GET
    data_selector: records
- name: opens_received
  endpoint:
    path: /bgp_session/opens_received
    method: GET
    data_selector: records
- name: opens_sent
  endpoint:
    path: /bgp_session/opens_sent
    method: GET
    data_selector: records
- name: passive_connections_accepted
  endpoint:
    path: /bgp_session/passive_connections_accepted
    method: GET
    data_selector: records
- name: prefixes_advertised
  endpoint:
    path: /bgp_session/prefixes_advertised
    method: GET
    data_selector: records
- name: prefixes_imported
  endpoint:
    path: /bgp_session/prefixes_imported
    method: GET
    data_selector: records
- name: transition_to_active
  endpoint:
    path: /bgp_session/transition_to_active
    method: GET
    data_selector: records
- name: transition_to_connect
  endpoint:
    path: /bgp_session/transition_to_connect
    method: GET
    data_selector: records
- name: transition_to_established
  endpoint:
    path: /bgp_session/transition_to_established
    method: GET
    data_selector: records
- name: transition_to_idle
  endpoint:
    path: /bgp_session/transition_to_idle
    method: GET
    data_selector: records
- name: transition_to_open_confirm
  endpoint:
    path: /bgp_session/transition_to_open_confirm
    method: GET
    data_selector: records
- name: transition_to_open_sent
  endpoint:
    path: /bgp_session/transition_to_open_sent
    method: GET
    data_selector: records
- name: transition_to_session_setup
  endpoint:
    path: /bgp_session/transition_to_session_setup
    method: GET
    data_selector: records
- name: unexpected_keepalive_messages
  endpoint:
    path: /bgp_session/unexpected_keepalive_messages
    method: GET
    data_selector: records
- name: unexpected_open_messages
  endpoint:
    path: /bgp_session/unexpected_open_messages
    method: GET
    data_selector: records
- name: unexpected_update_messages
  endpoint:
    path: /bgp_session/unexpected_update_messages
    method: GET
    data_selector: records
- name: update_nexthop_missing
  endpoint:
    path: /bgp_session/update_nexthop_missing
    method: GET
    data_selector: records
- name: update_send_failures
  endpoint:
    path: /bgp_session/update_send_failures
    method: GET
    data_selector: records
- name: fan_speed
  endpoint:
    path: /hardware_component/fan_speed
    method: GET
    data_selector: records
- name: input_current
  endpoint:
    path: /hardware_component/input_current
    method: GET
    data_selector: records
- name: input_voltage
  endpoint:
    path: /hardware_component/input_voltage
    method: GET
    data_selector: records
- name: poll_error_count
  endpoint:
    path: /hardware_component/poll_error_count
    method: GET
    data_selector: records
- name: power
  endpoint:
    path: /hardware_component/power
    method: GET
    data_selector: records
- name: sensor_error_count
  endpoint:
    path: /hardware_component/sensor_error_count
    method: GET
    data_selector: records
- name: temperature
  endpoint:
    path: /hardware_component/temperature
    method: GET
    data_selector: records
- name: voltage
  endpoint:
    path: /hardware_component/voltage
    method: GET
    data_selector: records
- name: bgp_session_updates_received
  endpoint:
    path: /bgp_session/updates_received
    method: GET
    data_selector: records
    params: {}
- name: bgp_session_updates_sent
  endpoint:
    path: /bgp_session/updates_sent
    method: GET
    data_selector: records
    params: {}
- name: collection_target_cpus_provisioned
  endpoint:
    path: /collection_target/cpus_provisioned
    method: GET
    data_selector: records
    params: {}
- name: collection_target_ram_provisioned
  endpoint:
    path: /collection_target/ram_provisioned
    method: GET
    data_selector: records
    params: {}
- name: collection_target_virtual_disk_space_provisioned
  endpoint:
    path: /collection_target/virtual_disk_space_provisioned
    method: GET
    data_selector: records
    params: {}
- name: database_transaction_retry_data
  endpoint:
    path: /database_transaction/retry_data
    method: GET
    data_selector: records
    params: {}
- name: ddm_router_originated_tunnel_endpoints
  endpoint:
    path: /ddm_router/originated_tunnel_endpoints
    method: GET
    data_selector: records
    params: {}
- name: ddm_router_originated_underlay_prefixes
  endpoint:
    path: /ddm_router/originated_underlay_prefixes
    method: GET
    data_selector: records
    params: {}
- name: ddm_session_advertisements_received
  endpoint:
    path: /ddm_session/advertisements_received
    method: GET
    data_selector: records
    params: {}
- name: ddm_session_advertisements_sent
  endpoint:
    path: /ddm_session/advertisements_sent
    method: GET
    data_selector: records
    params: {}
- name: ddm_session_imported_tunnel_endpoints
  endpoint:
    path: /ddm_session/imported_tunnel_endpoints
    method: GET
    data_selector: records
    params: {}
- name: ddm_session_imported_underlay_prefixes
  endpoint:
    path: /ddm_session/imported_underlay_prefixes
    method: GET
    data_selector: records
    params: {}
- name: ddm_session_peer_address_changes
  endpoint:
    path: /ddm_session/peer_address_changes
    method: GET
    data_selector: records
    params: {}
- name: ddm_session_peer_expirations
  endpoint:
    path: /ddm_session/peer_expirations
    method: GET
    data_selector: records
    params: {}
- name: ddm_session_peer_sessions_established
  endpoint:
    path: /ddm_session/peer_sessions_established
    method: GET
    data_selector: records
    params: {}
- name: ddm_session_solicitations_received
  endpoint:
    path: /ddm_session/solicitations_received
    method: GET
    data_selector: records
    params: {}
- name: ddm_session_solicitations_sent
  endpoint:
    path: /ddm_session/solicitations_sent
    method: GET
    data_selector: records
    params: {}
- name: ddm_session_update_send_fail
  endpoint:
    path: /ddm_session/update_send_fail
    method: GET
    data_selector: records
    params: {}
- name: ddm_session_updates_received
  endpoint:
    path: /ddm_session/updates_received
    method: GET
    data_selector: records
    params: {}
- name: ddm_session_updates_sent
  endpoint:
    path: /ddm_session/updates_sent
    method: GET
    data_selector: records
    params: {}
- name: dendrite_sample_collection_duration
  endpoint:
    path: /dendrite/sample_collection_duration
    method: GET
    data_selector: records
    params: {}
- name: hardware_component_amd_cpu_tctl
  endpoint:
    path: /hardware_component/amd_cpu_tctl
    method: GET
    data_selector: records
    params: {}
- name: hardware_component_current
  endpoint:
    path: /hardware_component/current
    method: GET
    data_selector: records
    params: {}
- name: bytes_received
  endpoint:
    path: /sled_data_link/bytes_received
    method: GET
    data_selector: records
- name: bytes_sent
  endpoint:
    path: /sled_data_link/bytes_sent
    method: GET
    data_selector: records
- name: errors_received
  endpoint:
    path: /sled_data_link/errors_received
    method: GET
    data_selector: records
- name: errors_sent
  endpoint:
    path: /sled_data_link/errors_sent
    method: GET
    data_selector: records
- name: packets_received
  endpoint:
    path: /sled_data_link/packets_received
    method: GET
    data_selector: records
- name: packets_sent
  endpoint:
    path: /sled_data_link/packets_sent
    method: GET
    data_selector: records
- name: bytes_received
  endpoint:
    path: /switch_data_link/bytes_received
    method: GET
    data_selector: records
- name: bytes_sent
  endpoint:
    path: /switch_data_link/bytes_sent
    method: GET
    data_selector: records
- name: errors_received
  endpoint:
    path: /switch_data_link/errors_received
    method: GET
    data_selector: records
- name: errors_sent
  endpoint:
    path: /switch_data_link/errors_sent
    method: GET
    data_selector: records
- name: fec_corrected_blocks
  endpoint:
    path: /switch_data_link/fec_corrected_blocks
    method: GET
    data_selector: records
- name: fec_high_symbol_errors
  endpoint:
    path: /switch_data_link/fec_high_symbol_errors
    method: GET
    data_selector: records
- name: fec_symbol_errors
  endpoint:
    path: /switch_data_link/fec_symbol_errors
    method: GET
    data_selector: records
- name: fec_sync_aligned
  endpoint:
    path: /switch_data_link/fec_sync_aligned
    method: GET
    data_selector: records
- name: fan_speed
  endpoint:
    path: /hardware_component/fan_speed
    method: GET
    data_selector: records
- name: input_current
  endpoint:
    path: /hardware_component/input_current
    method: GET
    data_selector: records
- name: input_voltage
  endpoint:
    path: /hardware_component/input_voltage
    method: GET
    data_selector: records
- name: poll_error_count
  endpoint:
    path: /hardware_component/poll_error_count
    method: GET
    data_selector: records
- name: power
  endpoint:
    path: /hardware_component/power
    method: GET
    data_selector: records
- name: sensor_error_count
  endpoint:
    path: /hardware_component/sensor_error_count
    method: GET
    data_selector: records
- name: temperature
  endpoint:
    path: /hardware_component/temperature
    method: GET
    data_selector: records
- name: voltage
  endpoint:
    path: /hardware_component/voltage
    method: GET
    data_selector: records
- name: bytes_received
  endpoint:
    path: /sled_data_link/bytes_received
    method: GET
    data_selector: records
- name: bytes_sent
  endpoint:
    path: /sled_data_link/bytes_sent
    method: GET
    data_selector: records
- name: errors_received
  endpoint:
    path: /sled_data_link/errors_received
    method: GET
    data_selector: records
- name: errors_sent
  endpoint:
    path: /sled_data_link/errors_sent
    method: GET
    data_selector: records
- name: packets_received
  endpoint:
    path: /sled_data_link/packets_received
    method: GET
    data_selector: records
- name: packets_sent
  endpoint:
    path: /sled_data_link/packets_sent
    method: GET
    data_selector: records
- name: fec_uncorrected_blocks
  endpoint:
    path: /switch_data_link/fec_uncorrected_blocks
    method: GET
    data_selector: records
- name: link_enabled
  endpoint:
    path: /switch_data_link/link_enabled
    method: GET
    data_selector: records
- name: link_fsm
  endpoint:
    path: /switch_data_link/link_fsm
    method: GET
    data_selector: records
- name: link_up
  endpoint:
    path: /switch_data_link/link_up
    method: GET
    data_selector: records
- name: packets_received
  endpoint:
    path: /switch_data_link/packets_received
    method: GET
    data_selector: records
- name: packets_sent
  endpoint:
    path: /switch_data_link/packets_sent
    method: GET
    data_selector: records
- name: pcs_bad_sync_headers
  endpoint:
    path: /switch_data_link/pcs_bad_sync_headers
    method: GET
    data_selector: records
- name: pcs_block_lock_loss
  endpoint:
    path: /switch_data_link/pcs_block_lock_loss
    method: GET
    data_selector: records
- name: pcs_errored_blocks
  endpoint:
    path: /switch_data_link/pcs_errored_blocks
    method: GET
    data_selector: records
- name: bytes_received
  endpoint:
    path: switch_data_link:bytes_received
    method: GET
    data_selector: records
- name: bytes_sent
  endpoint:
    path: switch_data_link:bytes_sent
    method: GET
    data_selector: records
- name: errors_received
  endpoint:
    path: switch_data_link:errors_received
    method: GET
    data_selector: records
- name: errors_sent
  endpoint:
    path: switch_data_link:errors_sent
    method: GET
    data_selector: records
- name: fec_corrected_blocks
  endpoint:
    path: switch_data_link:fec_corrected_blocks
    method: GET
    data_selector: records
- name: fec_high_symbol_errors
  endpoint:
    path: switch_data_link:fec_high_symbol_errors
    method: GET
    data_selector: records
- name: fec_symbol_errors
  endpoint:
    path: switch_data_link:fec_symbol_errors
    method: GET
    data_selector: records
- name: fec_sync_aligned
  endpoint:
    path: switch_data_link:fec_sync_aligned
    method: GET
    data_selector: records
- name: pcs_high_ber
  endpoint:
    path: /switch_data_link/pcs_high_ber
    method: GET
    data_selector: events
    params: {}
- name: pcs_invalid_errors
  endpoint:
    path: /switch_data_link/pcs_invalid_errors
    method: GET
    data_selector: events
    params: {}
- name: pcs_sync_loss
  endpoint:
    path: /switch_data_link/pcs_sync_loss
    method: GET
    data_selector: events
    params: {}
- name: pcs_unknown_errors
  endpoint:
    path: /switch_data_link/pcs_unknown_errors
    method: GET
    data_selector: events
    params: {}
- name: pcs_valid_errors
  endpoint:
    path: /switch_data_link/pcs_valid_errors
    method: GET
    data_selector: events
    params: {}
- name: receive_buffer_full_drops
  endpoint:
    path: /switch_data_link/receive_buffer_full_drops
    method: GET
    data_selector: events
    params: {}
- name: receive_crc_error_drops
  endpoint:
    path: /switch_data_link/receive_crc_error_drops
    method: GET
    data_selector: events
    params: {}
- name: bytes_received
  endpoint:
    path: /switch_port_control_data_link/bytes_received
    method: GET
    data_selector: events
    params: {}
- name: bytes_sent
  endpoint:
    path: /switch_port_control_data_link/bytes_sent
    method: GET
    data_selector: events
    params: {}
- name: errors_received
  endpoint:
    path: switch_port_control_data_link:errors_received
    method: GET
    data_selector: records
    params: {}
- name: errors_sent
  endpoint:
    path: switch_port_control_data_link:errors_sent
    method: GET
    data_selector: records
    params: {}
- name: packets_received
  endpoint:
    path: switch_port_control_data_link:packets_received
    method: GET
    data_selector: records
    params: {}
- name: packets_sent
  endpoint:
    path: switch_port_control_data_link:packets_sent
    method: GET
    data_selector: records
    params: {}
- name: fec_uncorrected_blocks
  endpoint:
    path: /switch_data_link/fec_uncorrected_blocks
    method: GET
    data_selector: records
    params: {}
- name: link_enabled
  endpoint:
    path: /switch_data_link/link_enabled
    method: GET
    data_selector: records
    params: {}
- name: link_fsm
  endpoint:
    path: /switch_data_link/link_fsm
    method: GET
    data_selector: records
    params: {}
- name: link_up
  endpoint:
    path: /switch_data_link/link_up
    method: GET
    data_selector: records
    params: {}
- name: packets_received
  endpoint:
    path: /switch_data_link/packets_received
    method: GET
    data_selector: records
    params: {}
- name: packets_sent
  endpoint:
    path: /switch_data_link/packets_sent
    method: GET
    data_selector: records
    params: {}
- name: pcs_bad_sync_headers
  endpoint:
    path: /switch_data_link/pcs_bad_sync_headers
    method: GET
    data_selector: records
    params: {}
- name: pcs_block_lock_loss
  endpoint:
    path: /switch_data_link/pcs_block_lock_loss
    method: GET
    data_selector: records
    params: {}
- name: pcs_errored_blocks
  endpoint:
    path: /switch_data_link/pcs_errored_blocks
    method: GET
    data_selector: records
    params: {}
- name: check
  endpoint:
    path: /virtual_machine/check
    method: GET
    data_selector: records
- name: incomplete_check
  endpoint:
    path: /virtual_machine/incomplete_check
    method: GET
    data_selector: records
- name: pv_panic_guest_handled
  endpoint:
    path: /virtual_machine/pv_panic_guest_handled
    method: GET
    data_selector: records
- name: pv_panic_host_handled
  endpoint:
    path: /virtual_machine/pv_panic_host_handled
    method: GET
    data_selector: records
- name: reset
  endpoint:
    path: /virtual_machine/reset
    method: GET
    data_selector: records
- name: vcpu_usage
  endpoint:
    path: /virtual_machine/vcpu_usage
    method: GET
    data_selector: records
- name: alert_receiver
  endpoint:
    path: /api/alert_receiver_list
    method: GET
    data_selector: receivers
    params: {}
- name: webhook_receiver_create
  endpoint:
    path: /api/webhook_receiver_create
    method: POST
    data_selector: receiver
    params: {}
- name: alert_delivery
  endpoint:
    path: /api/alert_delivery_list
    method: GET
    data_selector: deliveries
    params: {}
- name: pcs_high_ber
  endpoint:
    path: /switch_data_link/pcs_high_ber
    method: GET
    data_selector: records
- name: pcs_invalid_errors
  endpoint:
    path: /switch_data_link/pcs_invalid_errors
    method: GET
    data_selector: records
- name: pcs_sync_loss
  endpoint:
    path: /switch_data_link/pcs_sync_loss
    method: GET
    data_selector: records
- name: pcs_unknown_errors
  endpoint:
    path: /switch_data_link/pcs_unknown_errors
    method: GET
    data_selector: records
- name: pcs_valid_errors
  endpoint:
    path: /switch_data_link/pcs_valid_errors
    method: GET
    data_selector: records
- name: receive_buffer_full_drops
  endpoint:
    path: /switch_data_link/receive_buffer_full_drops
    method: GET
    data_selector: records
- name: receive_crc_error_drops
  endpoint:
    path: /switch_data_link/receive_crc_error_drops
    method: GET
    data_selector: records
- name: bytes_received
  endpoint:
    path: /switch_port_control_data_link/bytes_received
    method: GET
    data_selector: records
- name: bytes_sent
  endpoint:
    path: /switch_port_control_data_link/bytes_sent
    method: GET
    data_selector: records
- name: webhook_receiver_create
  endpoint:
    path: /api/webhook_receiver_create
    method: POST
- name: webhook_receiver_update
  endpoint:
    path: /api/webhook_receiver_update
    method: POST
- name: webhook_secrets_list
  endpoint:
    path: /api/webhook_secrets_list
    method: GET
- name: webhook_secrets_add
  endpoint:
    path: /api/webhook_secrets_add
    method: POST
- name: webhook_secrets_remove
  endpoint:
    path: /api/webhook_secrets_remove
    method: POST
- name: errors_received
  endpoint:
    path: /switch_port_control_data_link/errors_received
    method: GET
    data_selector: records
    params: {}
- name: errors_sent
  endpoint:
    path: /switch_port_control_data_link/errors_sent
    method: GET
    data_selector: records
    params: {}
- name: packets_received
  endpoint:
    path: /switch_port_control_data_link/packets_received
    method: GET
    data_selector: records
    params: {}
- name: packets_sent
  endpoint:
    path: /switch_port_control_data_link/packets_sent
    method: GET
    data_selector: records
    params: {}
- name: active_routes
  endpoint:
    path: /switch_rib/active_routes
    method: GET
    data_selector: records
    params: {}
- name: capacity
  endpoint:
    path: /switch_table/capacity
    method: GET
    data_selector: records
    params: {}
- name: collisions
  endpoint:
    path: /switch_table/collisions
    method: GET
    data_selector: records
    params: {}
- name: delete_misses
  endpoint:
    path: /switch_table/delete_misses
    method: GET
    data_selector: records
    params: {}
- name: deletes
  endpoint:
    path: /switch_table/deletes
    method: GET
    data_selector: records
    params: {}
- name: exhaustion
  endpoint:
    path: /switch_table/exhaustion
    method: GET
    data_selector: records
    params: {}
- name: inserts
  endpoint:
    path: /switch_table/inserts
    method: GET
    data_selector: records
    params: {}
- name: occupancy
  endpoint:
    path: /switch_table/occupancy
    method: GET
    data_selector: records
    params: {}
- name: update_misses
  endpoint:
    path: /switch_table/update_misses
    method: GET
    data_selector: records
    params: {}
- name: alert_receiver_probe
  endpoint:
    path: /api/alert_receiver_probe
    method: GET
    data_selector: ''
    params:
      resend: 'true'
- name: alert_delivery_list
  endpoint:
    path: /api/alert_delivery_list
    method: GET
    data_selector: ''
    params:
      failed: 'true'
      pending: 'false'
      delivered: 'false'
- name: alert_delivery_resend
  endpoint:
    path: /api/alert_delivery_resend
    method: POST
    data_selector: ''
    params: {}
- name: webhook_secrets_add
  endpoint:
    path: /api/webhook_secrets_add
    method: POST
    data_selector: ''
    params: {}
- name: webhook_secrets_remove
  endpoint:
    path: /api/webhook_secrets_remove
    method: DELETE
    data_selector: ''
    params: {}
- name: check
  endpoint:
    path: /virtual_machine/check
    method: GET
    data_selector: records
- name: incomplete_check
  endpoint:
    path: /virtual_machine/incomplete_check
    method: GET
    data_selector: records
- name: pv_panic_guest_handled
  endpoint:
    path: /virtual_machine/pv_panic_guest_handled
    method: GET
    data_selector: records
- name: pv_panic_host_handled
  endpoint:
    path: /virtual_machine/pv_panic_host_handled
    method: GET
    data_selector: records
- name: reset
  endpoint:
    path: /virtual_machine/reset
    method: GET
    data_selector: records
- name: vcpu_usage
  endpoint:
    path: /virtual_machine/vcpu_usage
    method: GET
    data_selector: records
- name: alert_receiver_list
  endpoint:
    path: /api/alert_receiver_list
    method: GET
- name: alert_receiver_view
  endpoint:
    path: /api/alert_receiver_view
    method: GET
- name: alert_receiver_delete
  endpoint:
    path: /api/alert_receiver_delete
    method: DELETE
- name: webhook_receiver_create
  endpoint:
    path: /api/webhook_receiver_create
    method: POST
- name: webhook_receiver_update
  endpoint:
    path: /api/webhook_receiver_update
    method: PUT
- name: alert_receiver_subscription_add
  endpoint:
    path: /api/alert_receiver_subscription_add
    method: POST
- name: alert_receiver_subscription_remove
  endpoint:
    path: /api/alert_receiver_subscription_remove
    method: DELETE
- name: alert_delivery_list
  endpoint:
    path: /api/alert_delivery_list
    method: GET
- name: alert_delivery_resend
  endpoint:
    path: /api/alert_delivery_resend
    method: POST
- name: alert_receiver_probe
  endpoint:
    path: /api/alert_receiver_probe
    method: POST
- name: network_preparations
  endpoint:
    path: /guides/system/network-preparations
    method: GET
    data_selector: records
- name: initial_setup
  endpoint:
    path: /guides/system/initial-rack-setup
    method: GET
    data_selector: records
- name: webhook_receiver_create
  endpoint:
    path: /api/webhook_receiver_create
    method: POST
- name: webhook_receiver_update
  endpoint:
    path: /api/webhook_receiver_update
    method: POST
- name: bgp_peers
  endpoint:
    params:
      asn: 0
      hold_time: 6
      idle_hold_time: 3
      delay_open: 0
      connect_retry: 3
      keepalive: 2
      enforce_first_as: false
- name: alert_receiver_probe
  endpoint:
    path: /api/alert_receiver_probe
    method: GET
    data_selector: null
- name: alert_delivery_list
  endpoint:
    path: /api/alert_delivery_list
    method: GET
    data_selector: null
- name: alert_delivery_resend
  endpoint:
    path: /api/alert_delivery_resend
    method: POST
    data_selector: null
- name: silo
  endpoint:
    path: /silos
    method: POST
    data_selector: silos
    params: {}
- name: identity_provider
  endpoint:
    path: /identity_providers
    method: POST
    data_selector: identity_providers
    params: {}
- name: IP pools
  endpoint:
    path: /api/ip_pool_create
    method: GET
- name: nexus
  endpoint:
    path: /nexus
    method: GET
    data_selector: components
    params: {}
- name: sled-agent
  endpoint:
    path: /sled-agent
    method: GET
    data_selector: instances
    params: {}
- name: bootstrap-agent
  endpoint:
    path: /bootstrap-agent
    method: GET
    data_selector: initialization
    params: {}
- name: management-gateway-service
  endpoint:
    path: /management-gateway-service
    method: GET
    data_selector: service
    params: {}
- name: dendrite
  endpoint:
    path: /dendrite
    method: GET
    data_selector: management
    params: {}
- name: cockroachdb
  endpoint:
    path: /cockroachdb
    method: GET
    data_selector: storage
    params: {}
- name: clickhouse
  endpoint:
    path: /clickhouse
    method: GET
    data_selector: telemetry
    params: {}
- name: oximeter
  endpoint:
    path: /oximeter
    method: GET
    data_selector: metrics
    params: {}
- name: ntp
  endpoint:
    path: /ntp
    method: GET
    data_selector: time
    params: {}
- name: internal-dns
  endpoint:
    path: /internal-dns
    method: GET
    data_selector: service-discovery
    params: {}
- name: external-dns
  endpoint:
    path: /external-dns
    method: GET
    data_selector: name-service
    params: {}
- name: crucible-pantry
  endpoint:
    path: /crucible-pantry
    method: GET
    data_selector: background-tasks
    params: {}
- name: bgp_peer
  endpoint:
    params:
      asn: 0
      hold_time: 6
      idle_hold_time: 3
      delay_open: 0
      connect_retry: 3
      keepalive: 2
      enforce_first_as: false
- name: disk_create
  endpoint:
    path: /api/disk_create
    method: POST
    data_selector: id
    params:
      project: Required
- name: disk_list
  endpoint:
    path: /api/disk_list
    method: GET
    data_selector: id
    params: {}
- name: disk_view
  endpoint:
    path: /api/disk_view
    method: GET
    data_selector: id
    params: {}
- name: disk_delete
  endpoint:
    path: /api/disk_delete
    method: DELETE
    data_selector: id
    params: {}
- name: disk_list
  endpoint:
    path: /api/disk_list
    method: GET
    data_selector: items
    params:
      limit: uint32
      page_token: string
      project: string
- name: silo
  endpoint:
    path: /guides/operator/silo-management
    method: POST
    data_selector: silos
    params:
      identity_mode: local_user
- name: disk_view
  endpoint:
    path: /api/disk_view
    method: GET
    data_selector: Object
- name: disk
  endpoint:
    path: /delete/v1/disks/{disk}
    method: DELETE
- name: disk_bulk_write_import
  endpoint:
    path: /api/disk_bulk_write_import
    method: POST
- name: disk_bulk_write_import_start
  endpoint:
    path: /api/disk_bulk_write_import_start
    method: POST
- name: disk_list
  endpoint:
    path: /api/disk_list
    method: GET
- name: disk_create
  endpoint:
    path: /api/disk_create
    method: POST
- name: disk_view
  endpoint:
    path: /api/disk_view
    method: GET
- name: disk_delete
  endpoint:
    path: /api/disk_delete
    method: DELETE
- name: disk_bulk_write_import
  endpoint:
    path: /api/disk_bulk_write_import
    method: POST
- name: disk_finalize_import
  endpoint:
    path: /api/disk_finalize_import
    method: POST
- name: disk_bulk_write_import_stop
  endpoint:
    path: /api/disk_bulk_write_import_stop
    method: POST
- name: disk_list
  endpoint:
    path: /api/disk_list
    method: GET
- name: disk_create
  endpoint:
    path: /api/disk_create
    method: POST
- name: disk_view
  endpoint:
    path: /api/disk_view
    method: GET
- name: disk_delete
  endpoint:
    path: /api/disk_delete
    method: DELETE
- name: disk_bulk_write_import
  endpoint:
    path: /api/disk_bulk_write_import
    method: POST
- name: disk_bulk_write_import_start
  endpoint:
    path: /api/disk_bulk_write_import_start
    method: POST
- name: disk_finalize_import
  endpoint:
    path: /api/disk_finalize_import
    method: POST
- name: nexus
  endpoint:
    path: /api/nexus
    method: GET
    data_selector: components
    params: {}
- name: sled-agent
  endpoint:
    path: /api/sled-agent
    method: GET
    data_selector: agents
    params: {}
- name: bootstrap-agent
  endpoint:
    path: /api/bootstrap-agent
    method: GET
    data_selector: agents
    params: {}
- name: management-gateway-service
  endpoint:
    path: /api/mgs
    method: GET
    data_selector: services
    params: {}
- name: dendrite
  endpoint:
    path: /api/dendrite
    method: GET
    data_selector: components
    params: {}
- name: cockroachdb
  endpoint:
    path: /api/cockroachdb
    method: GET
    data_selector: database
    params: {}
- name: clickhouse
  endpoint:
    path: /api/clickhouse
    method: GET
    data_selector: metrics
    params: {}
- name: oximeter
  endpoint:
    path: /api/oximeter
    method: GET
    data_selector: telemetry
    params: {}
- name: ntp
  endpoint:
    path: /api/ntp
    method: GET
    data_selector: time
    params: {}
- name: internal-dns
  endpoint:
    path: /api/internal-dns
    method: GET
    data_selector: dns
    params: {}
- name: external-dns
  endpoint:
    path: /api/external-dns
    method: GET
    data_selector: dns
    params: {}
- name: crucible-pantry
  endpoint:
    path: /api/crucible-pantry
    method: GET
    data_selector: pantry
    params: {}
- name: disk_finalize_import
  endpoint:
    path: /api/disk_finalize_import
    method: POST
    data_selector: resource updated
- name: disk_create
  endpoint:
    path: /api/disk_create
    method: POST
    data_selector: 201 successful creation
    params:
      project: Required
- name: disk_list
  endpoint:
    path: /api/disk_list
    method: GET
    data_selector: items
    params:
      limit: uint32
- name: instance_create
  endpoint:
    path: /api/instance_create
    method: POST
    data_selector: ''
    params:
      project: Required
- name: instance_view
  endpoint:
    path: /api/instance_view
    method: GET
    data_selector: ''
    params: {}
- name: instance_update
  endpoint:
    path: /api/instance_update
    method: PATCH
    data_selector: ''
    params: {}
- name: instance_delete
  endpoint:
    path: /api/instance_delete
    method: DELETE
    data_selector: ''
    params: {}
- name: disk_view
  endpoint:
    path: /api/disk_view
    method: GET
    data_selector: Object
    params:
      disk: Required
- name: instances
  endpoint:
    path: /api/instance_list
    method: GET
    data_selector: items
    params: {}
- name: disk_delete
  endpoint:
    path: /delete/v1/disks/{disk}
    method: DELETE
- name: disk_bulk_write_import
  endpoint:
    path: /api/disk_bulk_write_import
    method: POST
- name: instance_view
  endpoint:
    path: /api/instance_view
    method: GET
    data_selector: Object
    params: {}
- name: instance_update
  endpoint:
    path: /api/instance_update
    method: PUT
- name: disk_bulk_write_import_start
  endpoint:
    path: /api/disk_bulk_write_import_start
    method: POST
- name: instance_delete
  endpoint:
    path: /delete/v1/instances/{instance}
    method: DELETE
- name: disk_bulk_write_import_stop
  endpoint:
    path: /api/disk_bulk_write_import_stop
    method: POST
- name: disk_finalize_import
  endpoint:
    path: /api/disk_finalize_import
    method: POST
- name: instance_anti_affinity_group_list
  endpoint:
    path: /api/instance_anti_affinity_group_list
    method: GET
    data_selector: items
    params:
      instance: Required
- name: instance_disk_list
  endpoint:
    path: /v1/instances/{instance}/disks
    method: GET
    data_selector: items
    params:
      instance: Required
- name: instance_create
  endpoint:
    path: /api/instance_create
    method: POST
    data_selector: responses
    params:
      project: required
- name: instance_list
  endpoint:
    path: /api/instance_list
    method: GET
    data_selector: responses
    params: {}
- name: instance_view
  endpoint:
    path: /api/instance_view
    method: GET
    data_selector: responses
    params: {}
- name: instance_update
  endpoint:
    path: /api/instance_update
    method: PUT
    data_selector: responses
    params: {}
- name: instance_delete
  endpoint:
    path: /api/instance_delete
    method: DELETE
    data_selector: responses
    params: {}
- name: instance_disk_attach
  endpoint:
    path: /api/instance_disk_attach
    method: POST
- name: instances
  endpoint:
    path: /v1/instances
    method: GET
    data_selector: items
    params:
      limit: uint32
      page_token: string
- name: instance_disk_detach
  endpoint:
    path: /post/v1/instances/{instance}/disks/detach
    method: POST
- name: instance_view
  endpoint:
    path: /api/instance_view
    method: GET
    data_selector: Object
    params:
      instance: Required
- name: instance_external_ip_list
  endpoint:
    path: /api/instance_external_ip_list
    method: GET
    data_selector: items
    params:
      instance: required
- name: ephemeral_ip
  endpoint:
    path: /v1/instances/{instance}/external-ips/ephemeral
    method: POST
- name: instance_update
  endpoint:
    path: /api/instance_update
    method: PUT
    data_selector: responses
    params:
      instance: Required
- name: instance_list
  endpoint:
    path: /api/instance_list
    method: GET
    data_selector: responses
    params: {}
- name: instance_delete
  endpoint:
    path: delete/v1/instances/{instance}
    method: DELETE
- name: detach_ephemeral_ip
  endpoint:
    path: /delete/v1/instances/{instance}/external-ips/ephemeral
    method: DELETE
    data_selector: responses
- name: instance_anti_affinity_group_list
  endpoint:
    path: /api/instance_anti_affinity_group_list
    method: GET
    data_selector: items
- name: instance_reboot
  endpoint:
    path: /api/instance_reboot
    method: POST
- name: instance_disk_list
  endpoint:
    path: /api/instance_disk_list
    method: GET
    data_selector: items
    params:
      instance: required
- name: instance_serial_console
  endpoint:
    path: /api/instance_serial_console
    method: GET
    data_selector: data
    params:
      instance: required
- name: instance_disk_attach
  endpoint:
    path: /api/instance_disk_attach
    method: POST
- name: instance_serial_console_stream
  endpoint:
    path: /v1/instances/{instance}/serial-console/stream
    method: GET
- name: ssh_public_keys
  endpoint:
    path: /api/instance_ssh_public_key_list
    method: GET
    data_selector: items
    params:
      instance: required
- name: instance_disk_detach
  endpoint:
    path: /post/v1/instances/{instance}/disks/detach
    method: POST
- name: instance_start
  endpoint:
    path: /api/instance_start
    method: POST
    data_selector: Object
    params: {}
- name: instance_external_ip_list
  endpoint:
    path: /api/instance_external_ip_list
    method: GET
    data_selector: items
- name: instance_stop
  endpoint:
    path: /api/v1/instances/{instance}/stop
    method: POST
    data_selector: Object
    params: {}
- name: ephemeral_ip_attach
  endpoint:
    path: /api/instance_ephemeral_ip_attach
    method: POST
- name: instance_network_interface
  endpoint:
    path: /api/instance_network_interface_list
    method: GET
    data_selector: items
    params: {}
- name: detach_ephemeral_ip
  endpoint:
    path: /delete/v1/instances/{instance}/external-ips/ephemeral
    method: DELETE
    data_selector: 204 successful deletion
- name: instance_reboot
  endpoint:
    path: /api/instance_reboot
    method: POST
- name: instance_network_interface_create
  endpoint:
    path: /post/v1/network-interfaces
    method: POST
    data_selector: description
    params:
      instance: Required
- name: instance_serial_console
  endpoint:
    path: /api/instance_serial_console
    method: GET
    data_selector: data
    params:
      instance: Required
- name: instance_network_interface_view
  endpoint:
    path: /v1/network-interfaces/{interface}
    method: GET
    data_selector: Object
    params: {}
- name: instance_serial_console_stream
  endpoint:
    path: /api/instance_serial_console_stream
    method: GET
- name: ssh_public_keys
  endpoint:
    path: /api/instance_ssh_public_key_list
    method: GET
    data_selector: items
    params:
      instance: required
- name: instance_network_interface_update
  endpoint:
    path: /v1/network-interfaces/{interface}
    method: PUT
    data_selector: object
- name: instance_start
  endpoint:
    path: /api/instance_start
    method: POST
    data_selector: Object
- name: delete_network_interface
  endpoint:
    path: /delete/v1/network-interfaces/{interface}
    method: DELETE
- name: instance_stop
  endpoint:
    path: /v1/instances/{instance}/stop
    method: POST
- name: instance_network_interface
  endpoint:
    path: /v1/network-interfaces
    method: GET
    data_selector: items
- name: instance_network_interface_create
  endpoint:
    path: /post/v1/network-interfaces
    method: POST
- name: network_interface
  endpoint:
    path: /api/v1/network-interfaces/{interface}
    method: GET
    data_selector: Object
- name: instance_network_interface_update
  endpoint:
    path: /v1/network-interfaces/{interface}
    method: PUT
- name: instance_network_interface_delete
  endpoint:
    path: /delete/v1/network-interfaces/{interface}
    method: DELETE
notes:
- All API endpoints are at v1 at this time.
- This is the first release of Oxide Computer Model 0, also known as the “0x1” rack.
- This is the first release of Oxide Computer Model 0, also known as the '0x1' rack.
- This is the first release of Oxide Computer Model 0, also known as the “0x1” rack.
  In future release notes, we will include detailed changelogs for each software component
  to highlight changes such as new features, bug fixes, and upgrade impact.
- Users with the fleet viewer role can access the audit log.
- API response payloads for certain endpoints have been modified in this release.
- The API endpoint for disk metrics has been removed.
- Disks in `importing_from_bulk_writes` state cannot be deleted directly.
- Disk rejected by guest OS due to duplicate names.
- Image upload sometimes stalls with HTTP/2 on Firefox.
- The ability to modify image metadata is not available at this time.
- Instances fail to start when one of the switch zones is unavailable.
- New instances cannot be created when the total number of NAT entries (private-to-external
  IP mappings) in the system exceeds 1024.
- User offboarding from the rack is not supported at this time. Apart from updating
  the identity provider to remove obsolete users from the relevant groups, operators
  will need to remove any IAM roles granted directly to those users in silos and projects.
- In future release notes, we will include detailed changelogs for each software component
  to highlight changes such as new features, bug fixes, and upgrade impact.
- Although certain API signatures may change between releases, they are kept to v1
  compatibility currently.
- The Oxide rack does not come with any preloaded images, but many Linux distributions
  provide native cloud images that can be deployed in the Oxide rack.
- VM instances can be provisioned with machine images made available by the project
  or silo administrators and collaborators.
- The permissions to create, update, or delete project resources are limited to users
  with the 'collaborator' or 'admin' role in the project.
- All data is encrypted both in transit and at rest, using a key derived from the
  rack secret.
- Floating IPs are project-scoped resources which bind an individual IP address from
  a given IP pool.
- Disk naming is subject to the same RFC 1035 restrictions as instance and image names.
- The disk size must be a multiple of its block size, with a maximum of 1023 GiB.
- Server-side encryption is enabled by default and cannot be disabled.
- Custom routers are not executed before the system router.
- Every project comes with a default VPC.
- Instances within a VPC subnet can talk to each other using private IP addresses.
- Packets can still be sent from goldenrod to mossdeep, as we have only installed
  a custom router on hoenn.
- All subnets within a VPC share this default internet gateway.
- Oxide VMs boot with a UEFI firmware image.
- Windows installations must have a GUID partition table (GPT).
- The instance’s firewall rules must allow TCP connections on the Remote Desktop listening
  port (by default, port 3389).
- Windows’s firewall rules must allow connections on this port.
- The Windows registry must be configured to allow Remote Desktop connections.
- When users attempt to provision more disks or start up more instances than permitted
  by the resource quotas or IP pools, they will receive an `InsufficientCapacity`
  error from the API.
- Silos can be configured to have rack-local accounts, which authenticate with username
  and password.
- If the instance in question is newly created, check if any of the conditions for
  boot issues apply.
- Silos are the top-level containers for users, projects, and resources, ensuring
  strict tenancy separation.
- Users can only see resources in their own silo.
- BFD sessions must be integrated with static routing.
- The --allowed flag may be specified multiple times to allow multiple prefixes per-peer.
- Prefixes are exact matches and do not follow subnet inclusion rules.
- 'Audit log entries are immutable: once you see an entry, fetching it again will
  never get you a different result.'
- Results are ordered by time_completed and a unique id, which can be used to deduplicate
  entries from overlapping time ranges.
- Fleet viewer permissions are required to access the log.
- Requires setup of connected app in Oxide
- Ensure instances are properly shut down prior to scheduled outage
- If insufficient capacity errors occur, consider stopping unused instances or contacting
  the rack operator for a capacity increase.
- The API operations require a user with the collaborator role to generate API credentials.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Users managed in an identity provider require revocation of access in the identity
  provider system.
- Users managed locally on the rack require admin role to use specific API endpoints
  for user management.
- Requires an Oxide project and API credentials.
- Requires a user with the collaborator role to generate API credentials
- Ensure network access to the temporary instance for provisioning
- API operations require a user with the 'collaborator' role to generate API credentials.
- Requires setup of API credentials with collaborator role.
- The API operations in this guide require a user with the collaborator role to generate
  API credentials.
- An Oxide project is required to create the Rancher instance and the Kubernetes cluster.
- Oxide API credentials are necessary for authentication.
- Requires a user with the collaborator role to generate API credentials.
- API operations require a user with the collaborator role to generate API credentials.
- Telemetry and metrics are essential features of the Oxide system.
- Managed by Terraform.
- Configuration read from the OXIDE_HOST and OXIDE_TOKEN environment variables.
- 'Authorization scope: Fleet'
- 'Target: bgp_session A peer-to-peer session of the Border Gateway Protocol'
- Authorization scope is Fleet
- Currently, the Oxide control plane does not automatically send liveness probes to
  alert receivers.
- A webhook receiver must have at least one secret to function.
- Responding to a webhook delivery request with a `2xx` HTTP status code acknowledges
  that alert, and the Oxide control plane will not attempt to deliver that alert to
  that receiver again.
- Webhook delivery does not follow HTTP redirects.
- It is strongly recommended that the alert_receiver_probe API endpoint be used as
  the primary mechanism for monitoring a receiver’s availability.
- The management network requires IPv6.
- Technician ports send out periodic IPv6 SLAAC advertisements at an interval of 30
  seconds.
- In order to access the services provided over the management network, SSH port 22
  must be accessible.
- Management network requires IPv6.
- Technician ports send out periodic IPv6 SLAAC advertisements.
- No restrictions on what IP ranges can be used in IP pools.
- The configuration provided during initial rack setup may be changed later through
  the Oxide API once the rack is up and running.
- Webhook receivers must treat two payloads with the same alert UUID as representing
  the same alert.
- The software update process will be self-serviceable by the operator in a future
  release.
- As part of the rack initialization, the Rack Setup Service (RSS) instructs sled-agents
  to generate the rack secret, split it into shares, and distribute the encrypted
  shares to different sleds on the bootstrap network over tcp links.
- Upon completion of the unlock process, the rack secret will be securely erased from
  memory.
- Receiver implementations should request that any failed deliveries be resent when
  they start up.
- It is strongly recommended to use the alert_receiver_probe API endpoint as the primary
  mechanism for monitoring a receiver’s availability.
- If you encounter connection time-out errors with the login page, you can follow
  the instructions to troubleshoot the issue.
- Oxide Console doesn’t support local user creation and deletion at this time.
- The number of IP addresses to allocate to each pool will depend on the expected
  number of virtual machine instances using it.
- You can always start with a small IP range and add more address ranges later on.
- Each instance is assigned a quarter of an external IP address from the silo’s default
  pool for outbound NAT usage.
- Technician ports must be configured for IPv6 autoconfiguration (SLAAC).
- The software used for rack component visualization, update, and configuration is
  known as Wicket.
- The initial setup is performed by connecting to the technician ports ('techport'
  in short) on the rack switches via a laptop or jumpbox set up with instructions
  from Oxide.
- Each instance is assigned a quarter of an external IP address from the silo’s default
  pool for outbound NAT usage, regardless of whether it has an ephemeral or floating
  IP.
- Modifying IP addresses for an interface is not yet supported, a new interface must
  be created instead.
errors:
- Standard HTTP response codes are used.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'InsufficientCapacity: Quotas are enforced when a new disk is provisioned and when
  an instance is started.'
- '400 Bad Request: Malformed or invalid request.'
- '401 Unauthorized: Authentication required, invalid credentials.'
- '403 Forbidden: Insufficient permissions.'
- '404 Not Found: Resource not found.'
- '422 Unprocessable Entity: Well-formed request, semantic errors.'
- '500 Internal Server Error: Server-side error.'
- '503 Service Unavailable: Server unable to handle request (maintenance/overload).'
- Standard HTTP response codes used.
- 'Insufficient capacity: The API will respond to the start request with an ''Insufficient
  capacity'' error.'
- '400 Bad Request: A floating IP can only be deleted once it has been detached from
  any instances.'
- Unable to access VM's graphical console during setup.
- 'InsufficientCapacity: User requested more resources than are available.'
- 'InsufficientCapacity: When provisioning exceeds resource quotas'
- 'STATE_DOWN: Indicates the BFD session is down.'
- 'STATE_UP: Indicates the BFD session is established.'
- '400: InvalidRequest - project to be deleted contains a vpc: default'
- 'Insufficient capacity: vCPU Limit Exceeded: Not enough vCPUs to complete request.
  Either stop unused instances to free up resources or contact the rack operator to
  request a capacity increase.'
- 'Insufficient capacity: Memory Limit Exceeded: Not enough memory to complete request.
  Either stop unused instances to free up resources or contact the rack operator to
  request a capacity increase.'
- 'Insufficient capacity: Failed to place instance: Could not find any valid sled
  on which this instance can be placed.'
- 'Insufficient capacity: vCPU Limit Exceeded: Not enough vCPUs to complete request.'
- 'Insufficient capacity: Memory Limit Exceeded: Not enough memory to complete request.'
- 'InvalidCredentials: Check API token'
- 'NetworkError: Ensure network access to the instance'
- 'Rate Limit Exceeded: Reduce frequency of API calls.'
- '401 Unauthorized: Check API credentials.'
- '400 Bad Request: Verify request parameters.'
- 'RESOURCE_NOT_FOUND: Ensure the resource ID is correct.'
- 'INVALID_REQUEST: Check the request parameters.'
- 'Receiver Endpoint Unreachable: A TCP connection to the receiver endpoint could
  not be opened.'
- 'Response Timeout: A connection was successfully established, but no response was
  received within a 30-second timeout.'
- 'Receiver HTTP Error: A connection was successfully established and a response was
  received, but the receiver endpoint returned a `3xx`, `4xx`, or `5xx` HTTP status
  code.'
- If a webhook alert is not successfully delivered, the dispatcher will attempt to
  deliver it again.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - API credentials
  - collaborator role
client:
  base_url: https://oxide.computer
  auth:
    type: session cookies
source_metadata: null
