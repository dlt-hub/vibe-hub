resources:
- name: hello
  endpoint:
    path: /core/v1/hello
    method: GET
- name: account_info_balance
  endpoint:
    path: /core/v1/accountinfo/balance
    method: GET
- name: accounts
  endpoint:
    path: /core/v1/accounts
    method: POST
- name: domains
  endpoint:
    path: /core/v1/domains
    method: GET
- name: dns
  endpoint:
    path: /core/v1/domains/{domainName}/records
    method: GET
- name: dnssecs
  endpoint:
    path: /core/v1/domains/{domainName}/dnssec
    method: GET
- name: email_forwardings
  endpoint:
    path: /core/v1/domains/{domainName}/email/forwarding
    method: GET
- name: url_forwardings
  endpoint:
    path: /core/v1/domains/{domainName}/url/forwarding
    method: GET
- name: vanity_nameservers
  endpoint:
    path: /core/v1/domains/{domainName}/vanity_nameservers
    method: GET
- name: transfers
  endpoint:
    path: /core/v1/transfers
    method: GET
- name: orders
  endpoint:
    path: /core/v1/orders
    method: GET
- name: webhook_notifications
  endpoint:
    path: /core/v1/notifications
    method: GET
- name: domain_info
  endpoint:
    path: /core/v1/domaininfo/requirements/{tld}
    method: GET
- name: tld_pricing
  endpoint:
    path: /core/v1/tldpricing
    method: GET
- name: premium_domains
  endpoint:
    path: /core/v1/premiumdomainslist
    method: GET
- name: hello
  endpoint:
    path: /core/v1/hello
    method: GET
- name: UpdateDomain
  endpoint:
    path: /v1/domains/{domainName}
    method: PATCH
- name: domains
  endpoint:
    path: /core/v1/domains
    method: GET
- name: domain_records
  endpoint:
    path: /core/v1/domains/{domainName}/records
    method: GET
- name: hello
  endpoint:
    path: /core/v1/hello
    method: GET
    data_selector: motd
    params: {}
- name: account_info
  endpoint:
    path: /core/v1/accountinfo/balance
    method: GET
    data_selector: ''
    params: {}
- name: domains
  endpoint:
    path: /core/v1/domains
    method: GET
    data_selector: ''
    params: {}
- name: dns
  endpoint:
    path: /core/v1/domains/{domainName}/records
    method: GET
    data_selector: ''
    params: {}
- name: url_forwardings
  endpoint:
    path: /core/v1/domains/{domainName}/url/forwarding
    method: GET
    data_selector: ''
    params: {}
- name: transfers
  endpoint:
    path: /core/v1/transfers
    method: GET
    data_selector: ''
    params: {}
- name: orders
  endpoint:
    path: /core/v1/orders
    method: GET
    data_selector: ''
    params: {}
- name: account_balance
  endpoint:
    path: /core/v1/accountinfo/balance
    method: GET
    data_selector: balance
- name: accounts
  endpoint:
    path: /core/v1/accounts
    method: POST
- name: domains
  endpoint:
    path: /core/v1/domains
    method: GET
- name: dns
  endpoint:
    path: /core/v1/domains/{domainName}/records
    method: GET
- name: transfers
  endpoint:
    path: /core/v1/transfers
    method: GET
- name: orders
  endpoint:
    path: /core/v1/orders
    method: GET
- name: webhook_notifications
  endpoint:
    path: /core/v1/notifications
    method: GET
- name: tld_pricing
  endpoint:
    path: /core/v1/tldpricing
    method: GET
- name: hello
  endpoint:
    path: /core/v1/hello
    method: GET
- name: account_info
  endpoint:
    path: /core/v1/accountinfo/balance
    method: GET
- name: accounts
  endpoint:
    path: /core/v1/accounts
    method: POST
- name: domains
  endpoint:
    path: /core/v1/domains
    method: GET
- name: webhook_notifications
  endpoint:
    path: /core/v1/notifications
    method: get
- name: domain_info
  endpoint:
    path: /core/v1/domaininfo/requirements/{tld}
    method: get
- name: tld_pricing
  endpoint:
    path: /core/v1/tldpricing
    method: get
- name: premium_domains
  endpoint:
    path: /core/v1/premiumdomainslist
    method: get
- name: list_domains
  endpoint:
    path: /core/v1/domains
    method: GET
    data_selector: domains
    params:
      perPage: 1000
- name: create_domain
  endpoint:
    path: /core/v1/domains
    method: POST
    data_selector: domain
- name: create_domain
  endpoint:
    path: /core/v1/domains
    method: POST
    data_selector: domain
    params: {}
- name: get_domain
  endpoint:
    path: /core/v1/domains/{domainName}
    method: GET
    data_selector: domain
    params: {}
- name: list_records
  endpoint:
    path: /core/v1/domains/{domainName}/records
    method: GET
    data_selector: records
    params:
      perPage: 1000
      page: 0
- name: create_record
  endpoint:
    path: /core/v1/domains/{domainName}/records
    method: POST
    data_selector: answer
    params: {}
- name: delete_record
  endpoint:
    path: /core/v1/domains/{domainName}/records/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_record
  endpoint:
    path: /core/v1/domains/{domainName}/records/{id}
    method: GET
    data_selector: ''
    params: {}
- name: update_record
  endpoint:
    path: /core/v1/domains/{domainName}/records/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_record
  endpoint:
    path: /core/v1/domains/{domainName}/records/{id}
    method: DELETE
    data_selector: No content
    params: {}
- name: get_record
  endpoint:
    path: /core/v1/domains/{domainName}/records/{id}
    method: GET
    data_selector: application/json
    params: {}
- name: update_record
  endpoint:
    path: /core/v1/domains/{domainName}/records/{id}
    method: PUT
    data_selector: application/json
    params: {}
- name: dnssec
  endpoint:
    path: /core/v1/domains/{domainName}/dnssec
    method: GET
    data_selector: No content
    params: {}
- name: email_forwardings
  endpoint:
    path: /core/v1/domains/{domainName}/email/forwarding
    method: GET
    data_selector: No content
    params: {}
- name: url_forwardings
  endpoint:
    path: /core/v1/domains/{domainName}/url/forwarding
    method: GET
    data_selector: No content
    params: {}
- name: vanity_nameservers
  endpoint:
    path: /core/v1/domains/{domainName}/vanity_nameservers
    method: GET
    data_selector: No content
    params: {}
- name: transfers
  endpoint:
    path: /core/v1/transfers
    method: GET
    data_selector: No content
    params: {}
- name: orders
  endpoint:
    path: /core/v1/orders
    method: GET
    data_selector: No content
    params: {}
- name: webhook_notifications
  endpoint:
    path: /core/v1/notifications
    method: GET
    data_selector: No content
    params: {}
- name: domain_info
  endpoint:
    path: /core/v1/domaininfo/requirements/{tld}
    method: GET
    data_selector: No content
    params: {}
- name: tld_pricing
  endpoint:
    path: /core/v1/tldpricing
    method: GET
- name: premium_domains
  endpoint:
    path: /core/v1/premiumdomainslist
    method: GET
- name: list_dnssecs
  endpoint:
    path: /core/v1/domains/{domainName}/dnssec
    method: GET
- name: create_dnssec
  endpoint:
    path: /core/v1/domains/{domainName}/dnssec
    method: POST
- name: delete_dnssec
  endpoint:
    path: /core/v1/domains/{domainName}/dnssec/{digest}
    method: DELETE
- name: get_dnssec
  endpoint:
    path: /core/v1/domains/{domainName}/dnssec/{digest}
    method: GET
- name: dnssec
  endpoint:
    path: /core/v1/domains/{domainName}/dnssec/{digest}
    method: GET
    data_selector: application/json
- name: email_forwarding
  endpoint:
    path: /core/v1/domains/{domainName}/email/forwarding
    method: GET
    data_selector: application/json
- name: url_forwarding
  endpoint:
    path: /core/v1/domains/{domainName}/url/forwarding
    method: GET
    data_selector: application/json
- name: vanity_nameservers
  endpoint:
    path: /core/v1/domains/{domainName}/vanity_nameservers
    method: GET
    data_selector: application/json
- name: transfers
  endpoint:
    path: /core/v1/transfers
    method: GET
    data_selector: application/json
- name: orders
  endpoint:
    path: /core/v1/orders
    method: GET
    data_selector: application/json
- name: webhook_notifications
  endpoint:
    path: /core/v1/notifications
    method: GET
    data_selector: application/json
- name: domain_info
  endpoint:
    path: /core/v1/domaininfo/requirements/{tld}
    method: GET
    data_selector: application/json
- name: tld_pricing
  endpoint:
    path: /core/v1/tldpricing
    method: GET
    data_selector: application/json
- name: premium_domains
  endpoint:
    path: /core/v1/premiumdomainslist
    method: GET
    data_selector: application/json
- name: email_forwarding
  endpoint:
    path: /core/v1/domains/{domainName}/email/forwarding
    method: GET
    data_selector: emailForwarding
- name: email_forwarding
  endpoint:
    path: /core/v1/domains/{domainName}/email/forwarding/{emailBox}
    method: GET
    data_selector: application/json
- name: url_forwarding
  endpoint:
    path: /core/v1/domains/{domainName}/url/forwarding
    method: GET
    data_selector: application/json
- name: domain_info
  endpoint:
    path: /core/v1/domaininfo/requirements/{tld}
    method: GET
    data_selector: application/json
- name: tld_pricing
  endpoint:
    path: /core/v1/tldpricing
    method: GET
    data_selector: application/json
- name: URL Forwardings
  endpoint:
    path: /core/v1/domains/{domainName}/url/forwarding
    method: GET
    data_selector: urlForwarding
    params:
      perPage: 1000
      page: 1
- name: URLForwarding
  endpoint:
    path: /core/v1/domains/{domainName}/url/forwarding
    method: POST
    data_selector: application/json
- name: DeleteURLForwarding
  endpoint:
    path: /core/v1/domains/{domainName}/url/forwarding/{host}
    method: DELETE
    data_selector: No content
- name: GetURLForwarding
  endpoint:
    path: /core/v1/domains/{domainName}/url/forwarding/{host}
    method: GET
    data_selector: application/json
- name: UpdateURLForwarding
  endpoint:
    path: /core/v1/domains/{domainName}/url/forwarding/{host}
    method: PUT
    data_selector: application/json
- name: vanity_nameservers
  endpoint:
    path: /core/v1/domains/{domainName}/vanity_nameservers
    method: GET
    data_selector: vanityNameservers
    params: {}
- name: create_vanity_nameserver
  endpoint:
    path: /core/v1/domains/{domainName}/vanity_nameservers
    method: POST
    data_selector: body
    params: {}
- name: delete_vanity_nameserver
  endpoint:
    path: /core/v1/domains/{domainName}/vanity_nameservers/{hostname}
    method: DELETE
    data_selector: body
    params: {}
- name: get_vanity_nameserver
  endpoint:
    path: /core/v1/domains/{domainName}/vanity_nameservers/{hostname}
    method: GET
    data_selector: body
    params: {}
- name: update_vanity_nameserver_ip
  endpoint:
    path: /core/v1/domains/{domainName}/vanity_nameservers/{hostname}
    method: PUT
    data_selector: body
    params: {}
- name: transfers
  endpoint:
    path: /core/v1/transfers
    method: GET
    data_selector: body
    params: {}
- name: orders
  endpoint:
    path: /core/v1/orders
    method: GET
    data_selector: body
    params: {}
- name: webhook_notifications
  endpoint:
    path: /core/v1/notifications
    method: GET
    data_selector: body
    params: {}
- name: domain_info
  endpoint:
    path: /core/v1/domaininfo/requirements/{tld}
    method: GET
    data_selector: body
    params: {}
- name: tld_pricing
  endpoint:
    path: /core/v1/tldpricing
    method: GET
    data_selector: body
    params: {}
- name: premium_domains
  endpoint:
    path: /core/v1/premiumdomainslist
    method: GET
    data_selector: body
    params: {}
- name: list_transfers
  endpoint:
    path: /core/v1/transfers
    method: GET
    data_selector: transfers
    params:
      perPage: 1000
      page: 0
- name: create_transfer
  endpoint:
    path: /core/v1/transfers
    method: POST
    data_selector: transfers
- name: get_transfer
  endpoint:
    path: /core/v1/transfers/{domainName}
    method: GET
    data_selector: transfers
- name: cancel_transfer
  endpoint:
    path: /core/v1/transfers/{domainName}:cancel
    method: POST
- name: create_transfer
  endpoint:
    path: /core/v1/transfers
    method: POST
    data_selector: order
    params: {}
- name: get_transfer
  endpoint:
    path: /core/v1/transfers/{domainName}
    method: GET
    data_selector: domainName
    params: {}
- name: cancel_transfer
  endpoint:
    path: /core/v1/transfers/{domainName}:cancel
    method: POST
    data_selector: domainName
    params: {}
- name: orders
  endpoint:
    path: /core/v1/orders
    method: GET
    data_selector: orders
    params: {}
- name: webhook_notifications
  endpoint:
    path: /core/v1/notifications
    method: GET
    data_selector: notifications
    params: {}
- name: domain_info
  endpoint:
    path: /core/v1/domaininfo/requirements/{tld}
    method: GET
    data_selector: requirements
    params: {}
- name: tld_pricing
  endpoint:
    path: /core/v1/tldpricing
    method: GET
    data_selector: pricing
    params: {}
- name: premium_domains
  endpoint:
    path: /core/v1/premiumdomainslist
    method: GET
    data_selector: premiumDomains
    params: {}
- name: list_orders
  endpoint:
    path: /core/v1/orders
    method: GET
    data_selector: orders
    params: {}
- name: get_order
  endpoint:
    path: /core/v1/orders/{orderId}
    method: GET
    data_selector: orders
    params: {}
- name: order
  endpoint:
    path: /core/v1/orders/{orderId}
    method: GET
    data_selector: authAmount
    params: {}
- name: notifications
  endpoint:
    path: /core/v1/notifications
    method: get
    data_selector: ''
    params: {}
- name: domain_info
  endpoint:
    path: /core/v1/domaininfo/requirements/{tld}
    method: GET
    data_selector: ''
    params: {}
- name: tld_pricing
  endpoint:
    path: /core/v1/tldpricing
    method: GET
    data_selector: ''
    params: {}
- name: premium_domains
  endpoint:
    path: /core/v1/premiumdomainslist
    method: GET
    data_selector: ''
    params: {}
- name: hello
  endpoint:
    path: /core/v1/hello
    method: GET
- name: account_info
  endpoint:
    path: /core/v1/accountinfo/balance
    method: GET
- name: accounts
  endpoint:
    path: /core/v1/accounts
    method: POST
- name: domains
  endpoint:
    path: /core/v1/domains
    method: GET
- name: dns
  endpoint:
    path: /core/v1/domains/{domainName}/records
    method: GET
- name: dnssecs
  endpoint:
    path: /core/v1/domains/{domainName}/dnssec
    method: GET
- name: email_forwardings
  endpoint:
    path: /core/v1/domains/{domainName}/email/forwarding
    method: GET
- name: url_forwardings
  endpoint:
    path: /core/v1/domains/{domainName}/url/forwarding
    method: GET
- name: vanity_nameservers
  endpoint:
    path: /core/v1/domains/{domainName}/vanity_nameservers
    method: GET
- name: transfers
  endpoint:
    path: /core/v1/transfers
    method: GET
- name: orders
  endpoint:
    path: /core/v1/orders
    method: GET
- name: webhook_notifications
  endpoint:
    path: /core/v1/notifications
    method: GET
- name: notifications
  endpoint:
    path: /core/v1/notifications
    method: POST
    data_selector: subscription
    params: {}
- name: delete_notification
  endpoint:
    path: /core/v1/notifications/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: modify_notification
  endpoint:
    path: /core/v1/notifications/{id}
    method: PUT
    data_selector: subscription
    params: {}
- name: domain_transfer_status_change
  endpoint:
    path: /domainTransferStatusChange
    method: POST
    data_selector: ''
    params: {}
- name: account_credit_balance_change
  endpoint:
    path: /accountCreditBalanceChange
    method: POST
    data_selector: ''
    params: {}
- name: domain_info
  endpoint:
    path: /core/v1/domaininfo/requirements/{tld}
    method: GET
    data_selector: ''
    params: {}
- name: tld_pricing
  endpoint:
    path: /core/v1/tldpricing
    method: GET
    data_selector: ''
    params: {}
- name: premium_domains
  endpoint:
    path: /core/v1/premiumdomainslist
    method: GET
    data_selector: ''
    params: {}
- name: hello
  endpoint:
    path: /core/v1/hello
    method: GET
- name: account_info
  endpoint:
    path: /core/v1/accountinfo/balance
    method: GET
- name: accounts
  endpoint:
    path: /core/v1/accounts
    method: POST
- name: domains
  endpoint:
    path: /core/v1/domains
    method: GET
- name: dns
  endpoint:
    path: /core/v1/domains/{domainName}/records
    method: GET
- name: dnssecs
  endpoint:
    path: /core/v1/domains/{domainName}/dnssec
    method: GET
- name: email_forwardings
  endpoint:
    path: /core/v1/domains/{domainName}/email/forwarding
    method: GET
- name: url_forwardings
  endpoint:
    path: /core/v1/domains/{domainName}/url/forwarding
    method: GET
- name: vanity_nameservers
  endpoint:
    path: /core/v1/domains/{domainName}/vanity_nameservers
    method: GET
- name: transfers
  endpoint:
    path: /core/v1/transfers
    method: GET
- name: orders
  endpoint:
    path: /core/v1/orders
    method: GET
- name: webhook_notifications
  endpoint:
    path: /core/v1/notifications
    method: GET
- name: domain_info
  endpoint:
    path: /core/v1/domaininfo/requirements/{tld}
    method: GET
- name: tld_requirements
  endpoint:
    path: /core/v1/domaininfo/requirements/{tld}
    method: GET
- name: tld_pricing
  endpoint:
    path: /core/v1/tldpricing
    method: GET
- name: premium_domains
  endpoint:
    path: /core/v1/premiumdomainslist
    method: GET
- name: hello
  endpoint:
    path: /core/v1/hello
    method: GET
- name: account_info
  endpoint:
    path: /core/v1/accountinfo/balance
    method: GET
- name: accounts
  endpoint:
    path: /core/v1/accounts
    method: POST
- name: domains
  endpoint:
    path: /core/v1/domains
    method: GET
- name: dns
  endpoint:
    path: /core/v1/domains/{domainName}/records
    method: GET
- name: dnssecs
  endpoint:
    path: /core/v1/domains/{domainName}/dnssec
    method: GET
- name: email_forwardings
  endpoint:
    path: /core/v1/domains/{domainName}/email/forwarding
    method: GET
- name: url_forwardings
  endpoint:
    path: /core/v1/domains/{domainName}/url/forwarding
    method: GET
- name: vanity_nameservers
  endpoint:
    path: /core/v1/domains/{domainName}/vanity_nameservers
    method: GET
- name: transfers
  endpoint:
    path: /core/v1/transfers
    method: GET
- name: orders
  endpoint:
    path: /core/v1/orders
    method: GET
- name: webhook_notifications
  endpoint:
    path: /core/v1/notifications
    method: GET
- name: domain_info
  endpoint:
    path: /core/v1/domaininfo/requirements/{tld}
    method: GET
- name: tld_pricing
  endpoint:
    path: /core/v1/tldpricing
    method: GET
- name: tld_pricing
  endpoint:
    path: /core/v1/tldpricing
    method: GET
    data_selector: pricing
    params:
      perPage: 25
      page: 1
      duration: 5
- name: premium_domains
  endpoint:
    path: /core/v1/premiumdomainslist
    method: GET
    data_selector: ''
- name: hello
  endpoint:
    path: /core/v1/hello
    method: GET
- name: account_info_balance
  endpoint:
    path: /core/v1/accountinfo/balance
    method: GET
- name: accounts
  endpoint:
    path: /core/v1/accounts
    method: POST
- name: domains
  endpoint:
    path: /core/v1/domains
    method: GET
- name: dns
  endpoint:
    path: /core/v1/domains/{domainName}/records
    method: GET
- name: transfers
  endpoint:
    path: /core/v1/transfers
    method: GET
- name: orders
  endpoint:
    path: /core/v1/orders
    method: GET
- name: webhook_notifications
  endpoint:
    path: /core/v1/notifications
    method: GET
- name: tld_pricing
  endpoint:
    path: /core/v1/tldpricing
    method: GET
- name: premium_domains_list
  endpoint:
    path: /core/v1/premiumdomainslist
    method: GET
    data_selector: downloadUrl
- name: hello
  endpoint:
    path: /core/v1/hello
    method: GET
- name: hello
  endpoint:
    path: /core/v1/hello
    method: GET
- name: check_account_balance
  endpoint:
    path: /core/v1/accountinfo/balance
    method: GET
- name: list_domains
  endpoint:
    path: /core/v1/domains
    method: GET
- name: create_domain
  endpoint:
    path: /core/v1/domains
    method: POST
- name: get_domain
  endpoint:
    path: /core/v1/domains/{domainName}
    method: GET
- name: update_domain
  endpoint:
    path: /core/v1/domains/{domainName}
    method: PATCH
- name: list_records
  endpoint:
    path: /core/v1/domains/{domainName}/records
    method: GET
- name: create_record
  endpoint:
    path: /core/v1/domains/{domainName}/records
    method: POST
- name: list_transfers
  endpoint:
    path: /core/v1/transfers
    method: GET
- name: create_transfer
  endpoint:
    path: /core/v1/transfers
    method: POST
- name: TLD Requirements
  endpoint:
    path: /core/v1/domaininfo/requirements/{tld}
    method: GET
    data_selector: requirements
- name: TLD Price List
  endpoint:
    path: /core/v1/tldpricing
    method: GET
    data_selector: pricing
- name: Premium Domain Lists
  endpoint:
    path: /core/v1/premiumdomainslist
    method: GET
    data_selector: premiumDomains
- name: hello
  endpoint:
    path: /core/v1/hello
    method: GET
    data_selector: basic information
- name: account_balance
  endpoint:
    path: /accountinfo/balance
    method: GET
    data_selector: balance
- name: create_account
  endpoint:
    path: /core/v1/accounts
    method: POST
- name: list_domains
  endpoint:
    path: /core/v1/domains
    method: GET
    data_selector: domains
- name: create_domain
  endpoint:
    path: /core/v1/domains
    method: POST
    data_selector: domain
- name: get_domain
  endpoint:
    path: /core/v1/domains/{domainName}
    method: GET
    data_selector: domain
- name: update_domain
  endpoint:
    path: /core/v1/domains/{domainName}
    method: PATCH
    data_selector: domain
- name: get_auth_code_for_domain
  endpoint:
    path: /core/v1/domains/{domainName}:getAuthCode
    method: GET
    data_selector: authCode
- name: get_pricing_for_domain
  endpoint:
    path: /core/v1/domains/{domainName}:getPricing
    method: GET
    data_selector: pricing
- name: purchase_privacy
  endpoint:
    path: /core/v1/domains/{domainName}:purchasePrivacy
    method: POST
    data_selector: privacy
- name: renew_domain
  endpoint:
    path: /core/v1/domains/{domainName}:renew
    method: POST
    data_selector: renewal
- name: set_contacts
  endpoint:
    path: /core/v1/domains/{domainName}:setContacts
    method: POST
    data_selector: contacts
- name: set_nameservers
  endpoint:
    path: /core/v1/domains/{domainName}:setNameservers
    method: POST
    data_selector: nameservers
- name: check_availability
  endpoint:
    path: /core/v1/domains:checkAvailability
    method: POST
    data_selector: availability
- name: search
  endpoint:
    path: /core/v1/domains:search
    method: POST
    data_selector: searchResults
- name: zone_check
  endpoint:
    path: /core/v1/zonecheck
    method: POST
    data_selector: zoneCheck
- name: list_records
  endpoint:
    path: /core/v1/domains/{domainName}/records
    method: GET
    data_selector: records
    params: {}
- name: create_record
  endpoint:
    path: /core/v1/domains/{domainName}/records
    method: POST
    data_selector: ''
    params: {}
- name: delete_record
  endpoint:
    path: /core/v1/domains/{domainName}/records/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_record
  endpoint:
    path: /core/v1/domains/{domainName}/records/{id}
    method: GET
    data_selector: ''
    params: {}
- name: update_record
  endpoint:
    path: /core/v1/domains/{domainName}/records/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: list_dnssecs
  endpoint:
    path: /core/v1/domains/{domainName}/dnssec
    method: GET
    data_selector: records
- name: create_dnssec
  endpoint:
    path: /core/v1/domains/{domainName}/dnssec
    method: POST
    data_selector: records
- name: delete_dnssec
  endpoint:
    path: /core/v1/domains/{domainName}/dnssec/{digest}
    method: DELETE
    data_selector: records
- name: get_dnssec
  endpoint:
    path: /core/v1/domains/{domainName}/dnssec/{digest}
    method: GET
    data_selector: records
- name: list_email_forwardings
  endpoint:
    path: /domains/{domainName}/email/forwarding
    method: GET
    data_selector: records
- name: create_email_forwarding
  endpoint:
    path: /domains/{domainName}/email/forwarding
    method: POST
    data_selector: records
- name: delete_email_forwarding
  endpoint:
    path: /domains/{domainName}/email/forwarding/{emailBox}
    method: DELETE
    data_selector: records
- name: get_email_forwarding
  endpoint:
    path: /domains/{domainName}/email/forwarding/{emailBox}
    method: GET
    data_selector: records
- name: update_email_forwarding
  endpoint:
    path: /domains/{domainName}/email/forwarding/{emailBox}
    method: PUT
    data_selector: records
- name: list_url_forwardings
  endpoint:
    path: /core/v1/domains/{domainName}/url/forwarding
    method: GET
    data_selector: urlForwardings
    params: {}
- name: create_url_forwarding
  endpoint:
    path: /core/v1/domains/{domainName}/url/forwarding
    method: POST
    data_selector: urlForwarding
    params: {}
- name: delete_url_forwarding
  endpoint:
    path: /core/v1/domains/{domainName}/url/forwarding/{host}
    method: DELETE
    data_selector: urlForwarding
    params: {}
- name: get_url_forwarding
  endpoint:
    path: /core/v1/domains/{domainName}/url/forwarding/{host}
    method: GET
    data_selector: urlForwarding
    params: {}
- name: update_url_forwarding
  endpoint:
    path: /core/v1/domains/{domainName}/url/forwarding/{host}
    method: PUT
    data_selector: urlForwarding
    params: {}
- name: list_vanity_nameservers
  endpoint:
    path: /core/v1/domains/{domainName}/vanity_nameservers
    method: GET
- name: create_vanity_nameserver
  endpoint:
    path: /core/v1/domains/{domainName}/vanity_nameservers
    method: POST
- name: delete_vanity_nameserver
  endpoint:
    path: /core/v1/domains/{domainName}/vanity_nameservers/{hostname}
    method: DELETE
- name: get_vanity_nameserver
  endpoint:
    path: /core/v1/domains/{domainName}/vanity_nameservers/{hostname}
    method: GET
- name: update_vanity_nameserver_ip
  endpoint:
    path: /core/v1/domains/{domainName}/vanity_nameservers/{hostname}
    method: PUT
- name: list_transfers
  endpoint:
    path: /core/v1/transfers
    method: GET
    data_selector: transfers
    params: {}
- name: create_transfer
  endpoint:
    path: /core/v1/transfers
    method: POST
    data_selector: transfer
    params: {}
- name: get_transfer
  endpoint:
    path: /core/v1/transfers/{domainName}
    method: GET
    data_selector: transfer_details
    params: {}
- name: cancel_transfer
  endpoint:
    path: /core/v1/transfers/{domainName}:cancel
    method: POST
    data_selector: cancel_status
    params: {}
- name: list_orders
  endpoint:
    path: /core/v1/orders
    method: GET
    data_selector: orders
    params: {}
- name: get_order
  endpoint:
    path: /core/v1/orders/{orderId}
    method: GET
    data_selector: order_details
    params: {}
- name: Get Subscribed Notifications
  endpoint:
    path: /core/v1/notifications
    method: GET
- name: Subscribe To Notification
  endpoint:
    path: /core/v1/notifications
    method: POST
- name: Delete Subscription
  endpoint:
    path: /core/v1/notifications/{id}
    method: DELETE
- name: Modify Subscription
  endpoint:
    path: /core/v1/notifications/{id}
    method: PUT
- name: Domain Transfer Status Change
  endpoint:
    path: domainTransferStatusChange
    method: POST
- name: Webhook for credit balance changes
  endpoint:
    path: accountCreditBalanceChange
    method: POST
- name: get_specific_tld_requirements
  endpoint:
    path: /core/v1/domaininfo/requirements/{tld}
    method: GET
    data_selector: response
    params: {}
- name: tld_price_list
  endpoint:
    path: /core/v1/tldpricing
    method: GET
    data_selector: pricing
    params: {}
- name: premium_domain_list
  endpoint:
    path: /core/v1/premiumdomainslist
    method: GET
notes:
- Rate-limited to 20 requests/second.
- Migrating from the v4 API to the name.com API (CORE) is a breaking change.
- The v4 API remains accessible for a transition period.
- For list endpoints, use the perPage and page query parameters.
- Do not URL-encode the colon (:) in the request path.
- Accounts with 2FA enabled cannot authenticate. Disable 2FA and enable API Access
  in your account settings.
- The API is for server-side use only. Browser requests are blocked due to CORS restrictions.
- Supports standard authentication, rate-limited to 20 requests/second.
- Rate-limited to 20 requests/second
- name.com is launching a new Core API - a modern, RESTful API for managing domains,
  DNS records, and related services.
- The sandbox is API-only — not accessible through the browser
- Requires a separate sandbox API token
- Only use sandbox credentials when testing in the development environment. Never
  use production credentials unless you are working with real data.
- Use Account Info endpoints to retrieve basic information about your name.com account.
- If a price returns as null, the product is unavailable.
- IDN TLDs will return in unicode format.
- The pre-signed URL will only be valid for 10 minutes.
- This endpoint is only available to approved reseller accounts.
errors:
- '401 Unauthorized: Check your username and API token; verify you''re using the right
  environment'
- 'Permission Denied: If 2FA is enabled, go to Account Settings → Security and enable
  API Access'
- '404 Not Found: Make sure the domain or resource exists; in sandbox, register test
  domains first'
- '401 Unauthorized: Authentication errors will now consistently return a 401 Unauthorized
  response.'
- '402 Payment Required: If an action fails due to insufficient account credit.'
- 'Not Found: Resource not found in environment.'
- 'Permission Denied (2FA enabled): 2FA-enabled accounts are not supported.'
- 'Invalid Argument (Bad IPv4): Invalid or malformed input value.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '429 Too Many Requests: Use backoff logic and retry after a delay'
- '401 Unauthorized: Check credentials'
- '429 Too Many Requests: Rate limit exceeded'
- '401 Unauthorized: Check username and password.'
- '429 Too Many Requests: Rate limit exceeded.'
- '500 Internal Server Error: An error occurred on the server.'
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '415: Unsupported Media Type'
- '429: Too Many Requests'
- '500: Internal Server Error'
- '200: A successful response.'
- '400: Bad Request.'
- '401: Unauthorized.'
- '402: Payment Required.'
- '404: Not Found.'
- '409: Conflict.'
- '415: Unsupported Media Type.'
- '422: Unprocessable Entity.'
- '429: Too Many Requests.'
- '500: Internal Server Error.'
- '501: Not Implemented.'
- '204: No content'
- '400: Bad request'
- '404: Not found'
- '429: Too many requests'
- '500: Internal server error'
- '404: Not Found'
- '400 Bad Request: Invalid parameters.'
- '403 Forbidden: Authentication failed.'
- '404 Not Found: Resource does not exist.'
- '401 Unauthorized: Recheck credentials'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '500 Internal Server Error: Try again later'
- '200'
- '400'
- '404'
- '415'
- '429'
- '500'
- '500 Internal Server Error: Unexpected error occurred'
- 404 Not Found
- 429 Too Many Requests
- '201: A successful response.'
- '401: Unauthorized access.'
- '409: Conflict occurred.'
- '415: Unsupported media type.'
- '429: Too many requests sent in a given amount of time.'
- '500: Internal server error.'
- 400 Bad Request
- '401'
- '403'
- '409 Conflict: DNS Record Update operations now properly catch database duplicate
  record entry errors.'
- 'Permission Denied: If 2FA is enabled, go to Account Settings — Security and enable
  API Access'
- '401 Unauthenticated: Failure to authenticate properly.'
- '403 Permission Denied: Insufficient permissions.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.name.com
  headers:
    Accept: application/json
source_metadata: null
