resources:
- name: multi_leg_shipments
  endpoint:
    path: /calculate-emissions/logistics/multi-leg-shipments
    method: GET
- name: sea_shipments
  endpoint:
    path: /calculate-emissions/logistics/sea-shipments
    method: GET
- name: road_shipments
  endpoint:
    path: /calculate-emissions/logistics/road-shipments
    method: GET
- name: air_shipments
  endpoint:
    path: /calculate-emissions/logistics/air-shipments
    method: GET
- name: rail_shipments
  endpoint:
    path: /calculate-emissions/logistics/rail-shipments
    method: GET
- name: multi_leg_shipments
  endpoint:
    path: /v1/estimates/shipping/multi-leg
    method: POST
    data_selector: mass
    params:
      is_shipment: true
      shipped_at: '2024-11-05T21:28:35Z'
- name: sea_shipments
  endpoint:
    path: /v1/estimates/shipping/multi-leg
    method: POST
    data_selector: results
- name: multi_leg_shipping_estimate
  endpoint:
    path: /v1/estimates/shipping/multi-leg
    method: POST
    data_selector: results
- name: shipping_estimate
  endpoint:
    path: /v1/estimates/shipping/multi-leg
    method: POST
    data_selector: emissions_estimate
    params: {}
- name: shipping_emissions
  endpoint:
    path: /v1/estimates/shipping/multi-leg
    method: POST
    data_selector: results
- name: air_shipments
  endpoint:
    path: /v1/estimates/shipping/multi-leg
    method: POST
    data_selector: results
- name: rail_shipments
  endpoint:
    path: /v1/estimates/shipping/multi-leg
    method: POST
    data_selector: legs
- name: rail_shipments
  endpoint:
    path: /v1/estimates/shipping/multi-leg
    method: POST
    data_selector: results
    params: {}
- name: tender_upload
  endpoint:
    path: /calculate-emissions/logistics/tender-upload
    method: POST
- name: emissions_visibility_widget
  endpoint:
    path: /calculate-emissions/logistics/visibility-widget
    method: GET
- name: tender_upload
  endpoint:
    path: /calculate-emissions/logistics/tender-upload
    method: POST
- name: transactions
  endpoint:
    path: /calculate-emissions/spend-management/transactions
    method: GET
- name: transaction_documents
  endpoint:
    path: /calculate-emissions/spend-management/transaction-documents
    method: GET
- name: csv_upload
  endpoint:
    path: /calculate-emissions/spend-management/csv-upload
    method: POST
- name: transactions
  endpoint:
    path: /v1/estimates/transactions/batch
    method: POST
    data_selector: results
- name: transactions
  endpoint:
    path: /calculate-emissions/spend-management/transactions
    method: GET
- name: transaction_documents
  endpoint:
    path: /calculate-emissions/spend-management/transaction-documents
    method: GET
- name: csv_upload
  endpoint:
    path: /calculate-emissions/spend-management/csv-upload
    method: GET
- name: transactions
  endpoint:
    path: /v1/estimates/transactions/batch
    method: POST
    data_selector: results
- name: transaction_documents
  endpoint:
    path: /v1/estimates/transaction-documents/async
    method: POST
    data_selector: data
    params: {}
- name: csv_upload
  endpoint:
    path: /calculate-emissions/logistics/csv-upload
    method: POST
- name: transaction_documents
  endpoint:
    path: /v1/estimates/transaction-documents/async
    method: POST
    data_selector: data
    params: {}
- name: CSV upload
  endpoint:
    path: /calculate-emissions/logistics/csv-upload
    method: POST
    data_selector: results
    params: {}
- name: emissions_report
  endpoint:
    path: /track-and-report-emissions
    method: GET
    data_selector: results
- name: logistics_analytics
  endpoint:
    path: /track-and-report-emissions/logistics/analytics
    method: GET
    data_selector: results
- name: spend_management_analytics
  endpoint:
    path: /track-and-report-emissions/spend-management/analytics
    method: GET
    data_selector: results
- name: sustainability_pages
  endpoint:
    path: /v1/sustainability-pages
    method: POST
    data_selector: data
    params: {}
- name: sustainability_page
  endpoint:
    path: /v1/sustainability-pages
    method: POST
    data_selector: status
    params: {}
- name: client_accounts
  endpoint:
    path: /v1/accounts/client-accounts
    method: PATCH
    data_selector: ''
    params: {}
- name: shipping_emission_estimate
  endpoint:
    path: /calculate-emissions/shipping
    method: POST
    data_selector: emissions
    params: {}
- name: report_pollutants
  endpoint:
    path: /track-and-report-emissions/logistics/report-pollutants
    method: GET
- name: data_quality_score
  endpoint:
    path: /v1/estimates/shipping/multi-leg
    method: POST
    data_selector: data_quality_score
- name: spend_management_transactions
  endpoint:
    path: /calculate-emissions/spend-management/transactions
    method: GET
    data_selector: records
- name: spend_management_transaction_documents
  endpoint:
    path: /calculate-emissions/spend-management/transaction-documents
    method: GET
    data_selector: records
- name: data_quality_score
  endpoint:
    path: /v1/estimates/shipping/multi-leg
    method: POST
    data_selector: data_quality_score
    params: {}
- name: client_accounts
  endpoint:
    path: /v1/accounts/client-accounts
    method: PATCH
    data_selector: ''
    params: {}
- name: transactions
  endpoint:
    path: /api-reference/spend-emission-estimates/by-transaction-details
    method: GET
    data_selector: records
- name: transaction_documents
  endpoint:
    path: /api-reference/spend-emission-estimates/by-document
    method: GET
    data_selector: records
- name: passenger_travel
  endpoint:
    path: /api-reference/other-emission-estimates/passenger-transportation
    method: GET
    data_selector: records
- name: carbon_credits
  endpoint:
    path: /offset-emissions/carbon-credits
    method: POST
- name: orders_by_mass
  endpoint:
    path: /v1/orders/by-mass
    method: POST
    data_selector: id
- name: orders_by_value
  endpoint:
    path: /v1/orders/by-value
    method: POST
    data_selector: id
- name: orders_by_estimate
  endpoint:
    path: /v1/orders/by-estimate
    method: POST
    data_selector: id
- name: orders_by_mass
  endpoint:
    path: /v1/orders/by-mass
    method: POST
    data_selector: id
- name: orders_by_value
  endpoint:
    path: /v1/orders/by-value
    method: POST
    data_selector: id
- name: orders_by_estimate
  endpoint:
    path: /v1/orders/by-estimate
    method: POST
    data_selector: id
- name: Lune Pay URL
  endpoint:
    path: /offset-emissions/lune-pay
    method: GET
    data_selector: payment_details
    params: {}
- name: payment
  endpoint:
    path: /v1/payments/by-temporary-id/{temporary_id}
    method: GET
    data_selector: payment_details
- name: client_account
  endpoint:
    path: /api-reference/accounts/client-accounts
    method: POST
    data_selector: client_account
    params: {}
- name: client_account
  endpoint:
    path: /api-reference/accounts/client-accounts
    method: POST
    data_selector: client_account
    params: {}
- name: carbon_credit_orders
  endpoint:
    path: /api-reference/carbon-quotes-and-orders/orders
    method: POST
    data_selector: order
    params: {}
- name: project_bundles
  endpoint:
    path: /api-reference/carbon-projects/bundle-selections
    method: GET
- name: bundle_portfolios
  endpoint:
    path: /api-reference/carbon-projects/bundle-portfolios
    method: GET
- name: carbon_credit_orders
  endpoint:
    path: /api-reference/carbon-quotes-and-orders/orders
    method: POST
- name: webhooks
  endpoint:
    path: /webhooks
    method: POST
    data_selector: url
- name: Logistics methodology
  endpoint:
    path: /logistics/methodology
    method: GET
    data_selector: emissions
- name: maritime
  endpoint:
    path: /maritime
    method: GET
    data_selector: records
- name: air
  endpoint:
    path: /air
    method: GET
    data_selector: records
- name: rail
  endpoint:
    path: /rail
    method: GET
    data_selector: records
- name: road
  endpoint:
    path: /road
    method: GET
    data_selector: records
- name: inland_waterways
  endpoint:
    path: /inland_waterways
    method: GET
    data_selector: records
- name: logistic_sites
  endpoint:
    path: /logistic_sites
    method: GET
    data_selector: records
- name: pollutant_contributions
  endpoint:
    path: /pollutant/contributions
    method: GET
    data_selector: pollutants
    params: {}
- name: transport_methods
  endpoint:
    path: /transport/methods
    method: GET
    data_selector: methods
    params: {}
- name: shipping_emission_estimates
  endpoint:
    path: /api-reference/shipping-emission-estimates
    method: GET
- name: spend_emission_estimates
  endpoint:
    path: /api-reference/spend-emission-estimates
    method: GET
- name: other_emission_estimates
  endpoint:
    path: /api-reference/other-emission-estimates
    method: GET
- name: emission_factors
  endpoint:
    path: /api-reference/emission-factors
    method: GET
- name: tracking_and_reporting
  endpoint:
    path: /api-reference/tracking-and-reporting
    method: GET
- name: carbon_quotes_and_orders
  endpoint:
    path: /api-reference/carbon-quotes-and-orders
    method: GET
- name: carbon_projects
  endpoint:
    path: /api-reference/carbon-projects
    method: GET
- name: accounts
  endpoint:
    path: /api-reference/accounts
    method: GET
- name: webhooks
  endpoint:
    path: /api-reference/webhooks
    method: GET
- name: shipping_emission_estimate
  endpoint:
    path: /v1/estimates/shipping/multi-leg
    method: POST
    data_selector: estimate
    params: {}
- name: shipping_emission_estimate
  endpoint:
    path: /v1/estimates/shipping/multi-leg
    method: POST
    data_selector: estimate
    params: {}
- name: emission_factor
  endpoint:
    path: /emission_factor
    method: GET
    data_selector: records
- name: wtt
  endpoint:
    path: /wtt
    method: GET
    data_selector: data
    params: {}
- name: emission_factor
  endpoint:
    path: /emission_factor
    method: GET
    data_selector: data
    params: {}
- name: shipment
  endpoint:
    path: /shipment
    method: POST
- name: shipment
  endpoint:
    path: /shipments
    method: POST
- name: amount
  endpoint:
    data_selector: amount
    params:
      pattern: ^[0-9]+(\.[0-9]+)?$
- name: unit
  endpoint:
    data_selector: unit
    params:
      options:
      - t
      - kg
      - g
      - mg
- name: metadata
  endpoint:
    data_selector: metadata
    params: {}
- name: amount
  endpoint:
    data_selector: amount
    params:
      pattern: ^[0-9]+(\.[0-9]+)?$
- name: unit
  endpoint:
    data_selector: unit
    params:
      options:
      - t
      - kg
      - g
      - mg
- name: metadata
  endpoint:
    data_selector: metadata
    params:
      description: An arbitrary dictionary (key-value pairs) to store application-specific
        information.
- name: amount
  endpoint:
    params:
      pattern: ^[0-9]+(\.[0-9]+)?$
- name: unit
  endpoint:
    params:
      options:
      - t
      - kg
      - g
      - mg
- name: metadata
  endpoint:
    data_selector: arbitrary dictionary (key-value pairs)
- name: idempotency_key
  endpoint:
    data_selector: Account-unique identifier provided by the client
- name: id
  endpoint:
    data_selector: The emission calculation unique identifier
- name: route
  endpoint:
    data_selector: The shipping route
- name: coordinates
  endpoint:
    params:
      lat: Latitude
      lon: Longitude
- name: emission_factor
  endpoint:
    path: /emission_factor
    method: GET
    data_selector: records
- name: shipment
  endpoint:
    path: /shipments
    method: POST
- name: emission_factor
  endpoint:
    path: /emission_factors
    method: GET
    data_selector: records
- name: shipment
  endpoint:
    path: /shipments
    method: POST
    data_selector: shipment
    params: {}
- name: shipment
  endpoint:
    method: GET
- name: amount
  endpoint:
    data_selector: amount
    params:
      pattern: ^[0-9]+(\.[0-9]+)?$
- name: unit
  endpoint:
    data_selector: unit
    params:
      options:
      - t
      - kg
      - g
      - mg
- name: metadata
  endpoint:
    data_selector: metadata
    params: {}
- name: route
  endpoint:
    data_selector: route
    params:
      nullable: true
- name: shipment
  endpoint:
    data_selector: shipment
    params:
      oneOf:
      - mass
      - containers
- name: amount
  endpoint:
    data_selector: amount
    params:
      pattern: ^[0-9]+(\.[0-9]+)?$
- name: unit
  endpoint:
    data_selector: unit
    params:
      options:
      - t
      - kg
      - g
      - mg
- name: metadata
  endpoint:
    data_selector: metadata
    params: {}
- name: idempotency_key
  endpoint:
    data_selector: idempotency_key
    params: {}
- name: id
  endpoint:
    data_selector: id
    params: {}
- name: quote
  endpoint:
    data_selector: quote
    params: {}
- name: shipping_emission_estimate
  endpoint:
    path: /v1/estimates/shipping
    method: POST
- name: quantity
  endpoint:
    path: /quantity/truncstring
    method: GET
- name: is_shipment
  endpoint:
    path: /is_shipment/boolean
    method: GET
- name: shipped_at
  endpoint:
    path: /shipped_at/string
    method: GET
- name: metadata
  endpoint:
    path: /metadata/object
    method: GET
- name: idempotency_key
  endpoint:
    path: /idempotency_key/string
    method: GET
- name: id
  endpoint:
    path: /id/string
    method: GET
- name: external_estimate_url
  endpoint:
    path: /external_estimate_url/string
    method: GET
- name: source
  endpoint:
    path: /source/string
    method: GET
- name: mass
  endpoint:
    path: /mass/object
    method: GET
- name: amount
  endpoint:
    path: /amount/string
    method: GET
- name: unit
  endpoint:
    path: /unit/string
    method: GET
- name: wtt
  endpoint:
    path: /wtt/object
    method: GET
- name: nox
  endpoint:
    path: /nox/object
    method: GET
- name: quote
  endpoint:
    path: /quote/oneOf
    method: GET
- name: estimates
  endpoint:
    path: /v1/estimates/shipping/{id}
    method: GET
    data_selector: data
    params: {}
- name: wtw_co2e
  endpoint:
    method: GET
    data_selector: records
- name: shipping_emission_estimate
  endpoint:
    path: /v1/estimates/shipping
    method: POST
    data_selector: estimate
- name: wtt_co2e
  endpoint:
    path: /wtt_co2e
    method: GET
    data_selector: records
- name: ttw_co2e
  endpoint:
    path: /ttw_co2e
    method: GET
    data_selector: records
- name: shipping_estimate
  endpoint:
    path: /v1/estimates/shipping/{id}
    method: GET
- name: is_shipment
  endpoint:
    params: {}
- name: shipped_at
  endpoint:
    params: {}
- name: external_estimate_url
  endpoint:
    params: {}
- name: data_quality_score
  endpoint:
    params: {}
- name: emission_factor_score
  endpoint:
    params: {}
- name: route_score
  endpoint:
    params: {}
- name: shipment_score
  endpoint:
    params: {}
- name: source
  endpoint:
    params: {}
- name: bundle_id
  endpoint:
    params: {}
- name: source_country
  endpoint:
    params: {}
- name: destination_country
  endpoint:
    params: {}
- name: co2
  endpoint:
    path: /co2
    method: GET
    data_selector: amount
- name: methane
  endpoint:
    path: /methane
    method: GET
    data_selector: amount
- name: nitrous_oxide
  endpoint:
    path: /nitrous_oxide
    method: GET
    data_selector: amount
- name: other
  endpoint:
    path: /other
    method: GET
    data_selector: amount
- name: wtt_co2e
  endpoint:
    path: /wtt_co2e
    method: GET
    data_selector: amount
- name: ttw_co2e
  endpoint:
    path: /ttw_co2e
    method: GET
    data_selector: amount
- name: shipment_estimate
  endpoint:
    method: POST
    data_selector: estimate
- name: wtt_co2e
  endpoint:
    path: /wtt_co2e
    method: GET
    data_selector: records
    params: {}
- name: ttw_co2e
  endpoint:
    path: /ttw_co2e
    method: GET
    data_selector: records
    params: {}
- name: shipping_emission_estimate
  endpoint:
    path: /v1/estimates/shipping/multi-leg/by-fuel
    method: POST
    data_selector: estimate
    params: {}
- name: estimate
  endpoint:
    path: /estimates
    method: POST
    data_selector: request
    params: {}
- name: quantity_truncstring
  endpoint:
    path: /quantity_truncstring
    method: GET
    data_selector: records
- name: is_shipmentboolean
  endpoint:
    path: /is_shipmentboolean
    method: GET
    data_selector: records
- name: shipped_atstring
  endpoint:
    path: /shipped_atstring
    method: GET
    data_selector: records
- name: external_estimate_urlstring
  endpoint:
    path: /external_estimate_urlstring
    method: GET
    data_selector: records
- name: data_quality_scoreobject
  endpoint:
    path: /data_quality_scoreobject
    method: GET
    data_selector: records
- name: emission_factor_scorestring
  endpoint:
    path: /emission_factor_scorestring
    method: GET
    data_selector: records
- name: route_scorestring
  endpoint:
    path: /route_scorestring
    method: GET
    data_selector: records
- name: shipment_scorestring
  endpoint:
    path: /shipment_scorestring
    method: GET
    data_selector: records
- name: spend_emission_estimates
  endpoint:
    path: /api-reference/spend-emission-estimates
    method: GET
    data_selector: records
- name: shipping_emission_estimate
  endpoint:
    path: /v1/estimates/shipping/multi-leg/by-fuel
    method: POST
    data_selector: emission_estimate
    params: {}
- name: transaction_estimate
  endpoint:
    path: /v1/estimates/transactions
    method: POST
    data_selector: data
    params: {}
- name: shipment_details
  endpoint:
    path: /shipment/details
    method: GET
    data_selector: records
    params: {}
- name: by_transaction_details
  endpoint:
    path: /api-reference/spend-emission-estimates/by-transaction-details
    method: GET
- name: by_document
  endpoint:
    path: /api-reference/spend-emission-estimates/by-document
    method: GET
- name: transaction_estimates
  endpoint:
    path: /v1/estimates/transactions
    method: POST
    data_selector: data
    params: {}
- name: transaction_estimate
  endpoint:
    path: /v1/estimates/transactions/multi-match
    method: POST
    data_selector: estimates
    params:
      limit: '100'
- name: transaction_estimate_request
  endpoint:
    path: /estimates
    method: POST
    data_selector: requests
    params: {}
- name: transaction_documents
  endpoint:
    path: /v1/estimates/transaction-documents/async
    method: POST
    data_selector: results
    params: {}
- name: estimates
  endpoint:
    path: /v1/estimates/transactions/multi-match
    method: POST
    data_selector: estimates
- name: transaction_estimate
  endpoint:
    path: /v1/estimates/transactions/multi-match
    method: POST
- name: estimate
  endpoint:
    path: /estimates
    method: POST
    data_selector: estimate
- name: transaction_documents
  endpoint:
    path: /v1/estimates/transaction-documents/async
    method: POST
- name: company
  endpoint:
    path: /api-reference/other-emission-estimates/company
    method: GET
- name: electricity
  endpoint:
    path: /api-reference/other-emission-estimates/electricity
    method: GET
- name: flight
  endpoint:
    path: /api-reference/other-emission-estimates/flight
    method: GET
- name: passenger transportation
  endpoint:
    path: /api-reference/other-emission-estimates/passenger-transportation
    method: GET
- name: raw emission factor
  endpoint:
    path: /api-reference/other-emission-estimates/raw-emission-factor
    method: GET
- name: estimate
  endpoint:
    path: /estimates
    method: POST
    data_selector: estimate
    params: {}
- name: company_emission_estimate
  endpoint:
    path: /v1/estimates/company
    method: POST
- name: company
  endpoint:
    path: /api-reference/other-emission-estimates/company
    method: GET
- name: electricity
  endpoint:
    path: /api-reference/other-emission-estimates/electricity
    method: GET
- name: flight
  endpoint:
    path: /api-reference/other-emission-estimates/flight
    method: GET
- name: passenger_transportation
  endpoint:
    path: /api-reference/other-emission-estimates/passenger-transportation
    method: GET
- name: raw_emission_factor
  endpoint:
    path: /api-reference/other-emission-estimates/raw-emission-factor
    method: GET
- name: company_emission_estimate
  endpoint:
    path: /v1/estimates/company
    method: POST
- name: material_and_waste
  endpoint:
    path: /material_and_waste
    method: GET
    data_selector: records
    params: {}
- name: remote_employee
  endpoint:
    path: /remote_employee
    method: GET
    data_selector: records
    params: {}
- name: electricity_emission_estimate
  endpoint:
    path: /v1/estimates/electricity
    method: POST
    data_selector: request
    params: {}
- name: material_and_waste
  endpoint:
    params: {}
- name: remote_employee
  endpoint:
    params: {}
- name: electricity_estimate
  endpoint:
    path: /v1/estimates/electricity
    method: POST
    data_selector: estimates
- name: flight_emission_estimate
  endpoint:
    path: /v1/estimates/flight
    method: POST
- name: passenger_transportation
  endpoint:
    path: /v1/estimates/passenger-transportation
    method: POST
- name: flight_emission_estimate
  endpoint:
    path: /v1/estimates/flight
    method: POST
    data_selector: estimate
    params: {}
- name: passenger_transportation_estimate
  endpoint:
    path: /v1/estimates/passenger-transportation
    method: POST
    data_selector: estimate
    params: {}
- name: emission_factor_estimate
  endpoint:
    path: /v1/estimates/emission-factor
    method: POST
    data_selector: emission_factor
    params: {}
- name: get_emission_factor
  endpoint:
    path: /v1/estimates/emission-factor/{id}
    method: GET
    data_selector: emission_factor
    params: {}
- name: emission_factors
  endpoint:
    path: /api-reference/emission-factors/emission-factors
    method: GET
- name: emission_factor
  endpoint:
    path: /v1/estimates/emission-factor
    method: POST
    data_selector: emission_factor
    params: {}
- name: emission_factors
  endpoint:
    path: /v1/emission-factors
    method: GET
    data_selector: data
- name: emission_factor_regions
  endpoint:
    path: /v1/emission-factors/regions
    method: GET
    data_selector: array
- name: emission_factors
  endpoint:
    path: /api-reference/emission-factors/emission-factors
    method: GET
    data_selector: records
- name: emission_factors
  endpoint:
    path: /v1/emission-factors
    method: GET
    data_selector: data
    params: {}
- name: emission_factor_regions
  endpoint:
    path: /v1/emission-factors/regions
    method: GET
    data_selector: array
    params: {}
- name: cumulative_analytics
  endpoint:
    path: /v1/analytics/cumulative-per-bundle
    method: GET
- name: metrics
  endpoint:
    path: /v1/analytics/metrics
    method: GET
- name: aggregated_analytics_by_property
  endpoint:
    path: /v1/analytics/aggregated-by-property
    method: GET
- name: sustainability_page
  endpoint:
    path: /v1/sustainability-pages
    method: POST
- name: get_sustainability_page
  endpoint:
    path: /v1/sustainability-pages/public/{type}/{slug}
    method: GET
- name: cumulative_analytics
  endpoint:
    path: /v1/analytics/cumulative-per-bundle
    method: GET
    data_selector: bundle
- name: metrics
  endpoint:
    path: /v1/analytics/metrics
    method: GET
    data_selector: offset_types
- name: aggregated_analytics_by_property
  endpoint:
    path: /v1/analytics/aggregated-by-property
    method: GET
    data_selector: bundle
- name: order_quote_by_mass
  endpoint:
    path: /v1/orders/by-mass/quote
    method: POST
- name: order_quote_by_value
  endpoint:
    path: /v1/orders/by-value/quote
    method: POST
- name: sustainability_page
  endpoint:
    path: /v1/sustainability-pages
    method: POST
    data_selector: null
    params: {}
- name: public_sustainability_page
  endpoint:
    path: /v1/sustainability-pages/public/{type}/{slug}
    method: GET
    data_selector: null
    params: {}
- name: quotes
  endpoint:
    path: /api-reference/carbon-quotes-and-orders/quotes
    method: GET
- name: orders
  endpoint:
    path: /api-reference/carbon-quotes-and-orders/orders
    method: GET
- name: carbon_certificates
  endpoint:
    path: /api-reference/carbon-quotes-and-orders/carbon-certificates
    method: GET
- name: orders
  endpoint:
    path: /v1/orders
    method: GET
    data_selector: orders
- name: create_order_by_mass
  endpoint:
    path: /v1/orders/by-mass
    method: POST
    data_selector: order
- name: orders
  endpoint:
    path: /v1/orders
    method: GET
    data_selector: data
- name: order_by_estimate
  endpoint:
    path: /v1/orders/by-estimate
    method: POST
    data_selector: id
- name: orders_by_mass_quote
  endpoint:
    path: /v1/orders/by-mass/quote
    method: POST
    data_selector: bundles
    params: {}
- name: orders_by_value_quote
  endpoint:
    path: /v1/orders/by-value/quote
    method: POST
    data_selector: bundles
    params: {}
- name: orders
  endpoint:
    path: /orders/{id}
    method: GET
    data_selector: order
- name: orders_by_mass
  endpoint:
    path: /v1/orders/by-mass
    method: POST
    data_selector: id
    params: {}
- name: list_orders
  endpoint:
    path: /v1/orders
    method: GET
    data_selector: id
    params: {}
- name: carbon_certificate
  endpoint:
    path: /v1/orders/{id}/certificate
    method: GET
    data_selector: ''
    params:
      id: string
- name: projects
  endpoint:
    path: /api-reference/carbon-projects/projects
    method: GET
- name: project_bundles
  endpoint:
    path: /api-reference/carbon-projects/project-bundles
    method: GET
- name: bundle_selections
  endpoint:
    path: /api-reference/carbon-projects/bundle-selections
    method: GET
- name: bundle_portfolios
  endpoint:
    path: /api-reference/carbon-projects/bundle-portfolios
    method: GET
- name: payments
  endpoint:
    path: /api-reference/carbon-projects/payments
    method: GET
- name: orders
  endpoint:
    path: /v1/orders
    method: GET
    data_selector: data
- name: create_order_by_estimate
  endpoint:
    path: /v1/orders/by-estimate
    method: POST
    data_selector: id
- name: orders
  endpoint:
    path: /v1/orders/{id}
    method: GET
    data_selector: orders
- name: carbon_certificate
  endpoint:
    path: /v1/orders/{id}/certificate
    method: GET
    data_selector: string
    params:
      id: string
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params:
      limit: '100'
- name: project
  endpoint:
    path: /v1/projects/by-slug/{slug}
    method: GET
- name: projects
  endpoint:
    path: /api-reference/carbon-projects/projects
    method: GET
- name: project_bundles
  endpoint:
    path: /api-reference/carbon-projects/project-bundles
    method: GET
- name: bundle_selections
  endpoint:
    path: /api-reference/carbon-projects/bundle-selections
    method: GET
- name: bundle_portfolios
  endpoint:
    path: /api-reference/carbon-projects/bundle-portfolios
    method: GET
- name: payments
  endpoint:
    path: /api-reference/carbon-projects/payments
    method: GET
- name: bundles
  endpoint:
    path: /v1/bundles
    method: GET
    data_selector: data
    params:
      limit: '100'
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params:
      limit: '100'
      after: cursor
- name: bundle_selection
  endpoint:
    path: /v1/bundle-selections
    method: GET
    data_selector: array
- name: bundles
  endpoint:
    path: /v1/bundles
    method: GET
    data_selector: data
- name: bundle_portfolios
  endpoint:
    path: /v1/bundle-portfolios
    method: GET
    data_selector: array
- name: bundle_selections
  endpoint:
    path: /v1/bundle-selections
    method: GET
    data_selector: array
    params: {}
- name: payment
  endpoint:
    path: /v1/payments/by-temporary-id/{temporary_id}
    method: GET
    data_selector: Payment
    params:
      temporary_id: string
- name: bundle_portfolios
  endpoint:
    path: /v1/bundle-portfolios
    method: GET
    data_selector: array
- name: payment
  endpoint:
    path: /v1/payments/by-temporary-id/{temporary_id}
    method: GET
    data_selector: Payment
    params:
      temporary_id: string (uuid)
- name: accounts
  endpoint:
    path: /v1/accounts
    method: POST
    data_selector: account
    params: {}
- name: accounts
  endpoint:
    path: /v1/accounts
    method: POST
- name: client_account
  endpoint:
    path: /v1/accounts/client
    method: POST
    data_selector: data
    params: {}
- name: client_account_logo
  endpoint:
    path: /v1/accounts/client/{id}/logo
    method: POST
    data_selector: data
    params: {}
- name: client_account
  endpoint:
    path: /v1/accounts/client
    method: POST
    data_selector: data
    params: {}
- name: client_account
  endpoint:
    path: /accounts/client/{id}
    method: PATCH
    data_selector: id
    params: {}
- name: client_account_logo
  endpoint:
    path: /accounts/client/{id}/logo
    method: POST
    data_selector: logo
    params: {}
- name: client_accounts
  endpoint:
    path: /accounts/client/{id}
    method: PATCH
    data_selector: account
    params: {}
- name: client_account_logo
  endpoint:
    path: /accounts/client/{id}/logo
    method: POST
    data_selector: logo
    params: {}
- name: webhook
  endpoint:
    path: /v1/webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: webhook
  endpoint:
    path: /v1/webhooks
    method: POST
    data_selector: webhook
    params: {}
notes:
- Include the Authorization header with your API Key as a Bearer Token
- To associate the emission calculation with a specific client account, add either
  a Lune-Account header or a client account object to your request.
- Authorization header must include API Key as a Bearer Token.
- To associate emission calculation with a specific client account, add Lune-Account
  header.
- Vessel tracking is available for shipments that have been completed at least 24
  hours prior to making the request.
- If the vessel name matches multiple vessels with different IMO numbers or no vessel
  at all, an average is calculated based on the identified trade lane.
- Uses API key for authentication.
- For future shipments, set is_shipment to false until confirmed.
- Include the Authorization header with your API Key as a Bearer Token.
- Generate an API key and authenticate your account.
- Each row in the CSV represents a single shipment, supporting up to 10 legs per shipment.
- The file size must not exceed 2MB.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Lune does not require an expiration to the token, but we encourage compliance with
  your organisation's security policies when determining the appropriate expiration
  frequency.
- Lune uses ChainIO as an intermediary to receive your shipment data and send back
  emission calculations.
- Lune supports emissions calculations for any Excel file you're using for a tender.
- Lune will calculate emissions only for the legs that have valid data.
- The CargoWise eAdaptor enables data transfer to and from CargoWise.
- Include up to 100 transactions in a single API request.
- If one transaction can’t be processed, the response will include results for the
  other transactions.
- Each request can include up to 100 transactions.
- 'Payload limit: 100kB.'
- 'Webhook Setup Required: You must configure a webhook receiver to receive the processing
  results.'
- Ensure the file size does not exceed 2MB.
- Ensure the CSV file size does not exceed 2MB.
- Requires OAuth2 setup for client credentials.
- Endpoints may have rate limits.
- Test mode highlights calculations performed during testing and distinguishes them
  from live requests.
- Sustainability Pages update in real time as your impact grows.
- Customer Sustainability Pages must be created and managed via the API.
- Ensure external_pages_visibility is set to public or private.
- Uses API key for authentication
- Ensure 'is_shipment' property is set to true when calculating emissions
- Prioritizes transparency in emissions calculations.
- Provides detailed breakdowns for each calculation.
- Each API response includes key details to help you build trust with your customers.
- The dashboard can show aggregate emission calculations across several or all of
  your customers.
- In order to use the emission reduction feature, you'll have to request access from
  the Lune team.
- Lune provides the most transparent and accurate emissions calculation methodologies
  available.
- In order to use this feature, you'll have to request access from the Lune team.
- Each time an emissions estimate is calculated, a DQS is returned alongside it.
- DQS is returned for both CSV and API calculations.
- The DQS reflects the precision of each emission estimate.
- Ensure `external_pages_visibility` is set to `public` or `private` when creating
  client accounts.
- Ensure that the `is_transaction` property is set to `true` when calculating emissions.
- JWT token required for private visibility of analytics pages
- Each API response provides key details to help you build trust with your customers.
- The page concludes with an FAQ to enhance customer understanding and trust.
- Looking to offset emissions with Lune? This section walks you through purchasing
  carbon credits to offset your CO₂e emissions.
- 'Lune Pay URLs follow the format: https://pay.lune.co/{CLIENT_ACCOUNT_ID}'
- 'Lune Pay supports several optional query parameters for customization: quantity,
  redirect_url, redirect_label, external_id, bundle_id'
- Lune Pay supports several optional query parameters for customization.
- Client Accounts are ideal if you operate a B2B platform with multiple customers
  using Lune’s services.
- If the Lune-Account header or client account object is omitted, the request will
  be associated to your Default Account.
- An emission estimate quantifies the greenhouse gases emitted into the atmosphere,
  commonly expressed as CO₂e.
- EFs vary depending on the source, region, and context.
- 'Lune defaults distribute all orders for carbon credits across the following project
  bundles: Conserving forests in Asia – 95%, Enhanced rock weathering – 5%.'
- Carbon credit retirements occur in discrete tonnes of CO₂e.
- Lune requires HTTPS endpoints, including for testing. Plain HTTP is not supported.
- Webhooks registered through the dashboard receive events for all accounts and client
  accounts associated with your organisation.
- Lune adheres to the highest standards for emissions calculation, ensuring full transparency
  and accuracy across every purchase and expenditure.
- Our methodology aligns with the Greenhouse Gas (GHG) Protocol.
- Lune's approach has been audited and ISO-certified (ISO 14064), delivering reliable
  results that support both corporate reporting and climate action goals.
- API keys act as Bearer tokens and must be included in the Authorization header of
  your API requests
- Lune calculates emissions by determining the best emission factor and multiplying
  by the monetary value or unit of activity.
- Lune maintains a set of activity-based emission factors that are not directly tied
  to monetary spend or distance.
- Results from GET endpoints are paginated using cursor-based pagination.
- The default rate limit is 15 requests per second.
- Use the POST method to create a shipping emission estimate.
- Deprecated. Please use the Multi leg method instead.
- Single leg method is deprecated, use Multi leg method instead.
- Use to distinguish confirmed shipments from quotes. Defaults to false when omitted.
- Defaults to false when omitted.
- This property must be formatted as RFC 3339, section 5.6 timestamp.
- Provide the shipment date and time, as RFC 3339 timestamp.
- 'Examples: * 2023-12-01T12:30:30.000Z * 2023-12-01T12:30:30Z * 2023-12-01T11:30:30+01.00'
- Lune supports most but not all currency codes.
- Defaults to never, meaning only emission factors that exactly match the specified
  geography are used. No fallbacks are applied.
- Defaults to 'never' for geographical constraints regarding emission factors.
- Asynchronously create emission estimate(s) via receipt or invoice data.
- Defaults to 'never' for geographical constraints.
- This endpoint processes requests asynchronously. Once complete, the results are
  sent to your configured webhook.
- The sum of all percentages must equal 100.
- If not specified, the preconfigured allocation ratios are going to be used.
- If, for each selection, `percentage` is not provided, the selection is divided equally
  (best effort) between bundles.
- '`idempotency_key` has two purposes: Clients can safely retry estimate requests
  without accidentally performing the same operation multiple times. Clients can use
  `idempotency_key` to reconcile estimates with entities on their system.'
- The sum of all percentages in bundle_selection must equal 100.
- If percentage is not provided for each selection, the selection is divided equally.
- Defaults to 30 days ago if 'from' date is not specified.
- Defaults to current date if 'through' date is not specified.
- The order's unique identifier is required to track orders.
- Projects can be disabled and will not get allocated to orders.
errors:
- 'imo_unavailable_container_ship_fallback: Consider using the IMO number if the vessel
  name is ambiguous.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '400 Bad Request: Check the transaction details and format.'
- '401 Unauthorized: Ensure the API key is valid.'
- '429 Too Many Requests: Throttle API calls or reduce frequency.'
- 'Invalid transaction: Ensure all required fields are provided.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '204 No Content: Your request was accepted and is being processed'
- '400 Bad Request: There was a validation error with your request (check the error
  details in the response body)'
- 'transaction_document_inference_failure: Could not extract required information
  from the document'
- 'transaction_document_creation_failure: Information was extracted but could not
  be matched to emission factors'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify API credentials.'
- '429 Too Many Requests: Rate limit exceeded.'
- '404 Not Found: Check account visibility settings for unauthorized access'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check the request format and parameters.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- Verify your **organisation ID** and **customer account handle** for accuracy.
- Missing shipment data? Confirm that the `is_transaction` parameter is set to `true`
  for all transactions.
- '400 Bad Request: Check the request format and required fields.'
- '401 Unauthorized: Ensure the API key is valid and included in the request.'
- '404 Not Found: Verify the endpoint path is correct.'
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Recheck API key or permissions'
- '429: Request limit exceeded'
- 'address_not_found: The source address could not be found'
- 'validation_error: Request does not meet validation requirements'
- '429: Too Many Requests - If you exceed this limit, your request will not be processed.'
- api_version_invalid
- bundle_selection_ratios_invalid
- bundle_selection_bundle_invalid
- order_value_invalid
- bundle_id_invalid
- id_invalid
- distance_invalid
- test_account_name_update_disallowed
- bundle_selection_ratios_invalid_format
- address_not_found
- 'api_version_invalid: The API version specified is invalid'
- 'bundle_selection_ratios_invalid: The bundle selection ratios are not valid'
- 'bundle_selection_bundle_invalid: The specified bundle is invalid'
- 'order_value_invalid: The order value is invalid'
- 'bundle_id_invalid: The bundle ID is invalid'
- 'id_invalid: The ID provided is invalid'
- 'distance_invalid: The distance provided is invalid'
- 'test_account_name_update_disallowed: Updating the test account name is disallowed'
- 'bundle_selection_ratios_invalid_format: The format of the bundle selection ratios
  is invalid'
- 'address_not_found: The specified address could not be found'
- '400: api_version_invalid'
- '400: bundle_selection_ratios_invalid'
- '400: bundle_selection_bundle_invalid'
- '400: order_value_invalid'
- '400: bundle_id_invalid'
- '400: id_invalid'
- '400: distance_invalid'
- '400: test_account_name_update_disallowed'
- '400: bundle_selection_ratios_invalid_format'
- '400: address_not_found'
- 'api_version_invalid: Invalid API version'
- 'bundle_selection_ratios_invalid: Invalid selection ratios for the bundle'
- 'bundle_selection_bundle_invalid: Invalid bundle selection'
- 'order_value_invalid: Invalid order value'
- 'bundle_id_invalid: Invalid bundle ID'
- 'id_invalid: Invalid ID'
- 'distance_invalid: Invalid distance'
- 'test_account_name_update_disallowed: Update of test account name is not allowed'
- 'bundle_selection_ratios_invalid_format: Invalid format for selection ratios'
- 'address_not_found: Address not found'
- 400 api_version_invalid
- 400 bundle_selection_ratios_invalid
- 400 bundle_selection_bundle_invalid
- 400 order_value_invalid
- 400 bundle_id_invalid
- 400 id_invalid
- 400 distance_invalid
- 400 test_account_name_update_disallowed
- 400 bundle_selection_ratios_invalid_format
- 400 address_not_found
- 'api_version_invalid: Check the API version provided.'
- 'bundle_selection_ratios_invalid: Ensure the selection ratios are valid.'
- 'order_value_invalid: Verify that the order value is correct.'
- 'bundle_id_invalid: Check if the provided bundle ID is valid.'
- 'id_invalid: Ensure the ID is correct.'
- 'address_not_found: Check the address provided.'
- '401: Unauthorized'
- '404: Not Found'
- '429: Too Many Requests'
- '503: Service Unavailable'
- '401'
- '404'
- '429'
- '503'
- service_unavailable
- '404: Resource not found'
- '429: Rate limit exceeded'
- '401 Unauthorized: Recheck your credentials'
- '404 Not Found: Ensure the endpoint is correct'
- '429 Too Many Requests: Rate limit exceeded'
auth_info:
  mentioned_objects:
  - API Key
  - JWT
client:
  base_url: https://api.lune.co
  auth:
    type: oauth2
source_metadata: null
