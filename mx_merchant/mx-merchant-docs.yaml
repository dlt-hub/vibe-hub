resources:
- name: payment
  endpoint:
    path: /checkout/v3/payment
    method: POST
- name: customer
  endpoint:
    path: /checkout/v3/customer
    method: POST
- name: customercardaccount
  endpoint:
    path: /checkout/v3/customercardaccountr
    method: POST
- name: payment
  endpoint:
    path: /checkout/v3/payment
    method: POST
    data_selector: ''
- name: Merchant
  endpoint:
    path: /merchant
    method: POST
    data_selector: merchant
    params: {}
- name: merchants
  endpoint:
    path: /merchants
    method: GET
    data_selector: merchants
- name: payments
  endpoint:
    path: /payments
    method: POST
    data_selector: payment
- name: customer
  endpoint:
    path: /customer
    method: GET
    data_selector: records
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: records
- name: token
  endpoint:
    path: /token
    method: POST
    data_selector: records
- name: recurring_payments
  endpoint:
    path: /recurring_payments
    method: POST
    data_selector: records
- name: notification
  endpoint:
    path: /notification
    method: GET
    data_selector: records
- name: terminal
  endpoint:
    path: /terminal
    method: GET
    data_selector: records
- name: card
  endpoint:
    path: /supported-tender-types/card
    method: GET
    data_selector: supported_types
    params: {}
- name: cash
  endpoint:
    path: /supported-tender-types/cash
    method: GET
    data_selector: supported_types
    params: {}
- name: check
  endpoint:
    path: /supported-tender-types/check
    method: GET
    data_selector: supported_types
    params: {}
- name: ach
  endpoint:
    path: /supported-tender-types/ach
    method: GET
    data_selector: supported_types
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: custom_field
  endpoint:
    path: /checkout/v3/field
    method: POST
    data_selector: fieldName
- name: customer_contacts
  endpoint:
    path: /customer/contacts
    method: GET
- name: customer_card_account
  endpoint:
    path: /checkout/v3/customercardaccount
    method: POST
    data_selector: isDefault
    params: {}
- name: payment
  endpoint:
    path: /payment
    method: POST
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: response
    params:
      echo: 'true'
- name: payment
  endpoint:
    path: /payment
    method: POST
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: response
    params:
      echo: 'true'
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: ''
    params: {}
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: payment
    params: {}
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: response
    params:
      echo: 'true'
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: ''
    params: {}
- name: payment
  endpoint:
    path: /checkout/v3/payment
    method: POST
    data_selector: ''
    params: {}
- name: payment
  endpoint:
    path: /checkout/v3/payment
    method: POST
    data_selector: response
    params: {}
- name: payment_adjustment
  endpoint:
    path: /checkout/v3/payment/{id}
    method: PUT
    data_selector: response
    params: {}
- name: payment
  endpoint:
    path: /checkout/v3/payment
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment
  endpoint:
    path: /payment/{id}
    method: DELETE
    data_selector: none
    params:
      force: 'true'
- name: payment_receipt
  endpoint:
    path: /checkout/v3/paymentreceipt
    method: POST
    data_selector: response
    params: {}
- name: invoice_receipt
  endpoint:
    path: /checkout/v3/invoicereceipt
    method: POST
    data_selector: response
    params: {}
- name: batch
  endpoint:
    path: /checkout/v3/batch
    method: GET
    data_selector: batch
    params:
      status: open
- name: bin_lookup
  endpoint:
    path: /reference/bin
    method: GET
- name: catalog
  endpoint:
    path: /checkout/v3/merchant/554123
    method: GET
    data_selector: general
- name: product
  endpoint:
    path: /checkout/v3/catalogproduct
    method: POST
    data_selector: records
- name: product_variant
  endpoint:
    path: /checkout/v3/productvariant
    method: POST
    data_selector: records
- name: supplier
  endpoint:
    path: /checkout/v3/supplier
    method: POST
    data_selector: records
- name: collection
  endpoint:
    path: /checkout/v3/catalogcollection
    method: POST
    data_selector: records
- name: invoice
  endpoint:
    path: /checkout/v3/invoice
    method: POST
    data_selector: created
- name: invoice
  endpoint:
    path: /invoices
    method: GET
    data_selector: invoices
- name: tax
  endpoint:
    path: /checkout/v3/tax
    method: GET
    data_selector: records
    params:
      merchantId: '{{merchantId}}'
- name: invoice_receipt
  endpoint:
    path: /checkout/v3/invoicereceipt
    method: POST
    data_selector: null
    params:
      id: '{{invoiceId}}'
      contact: '{{email}},{{phoneNumber}}'
- name: payment
  endpoint:
    path: /checkout/v3/payment/enrich/mxadvantage
    method: POST
- name: payment_with_customer_matches
  endpoint:
    path: /checkout/v3/payment
    method: POST
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notifications
    params: {}
- name: create_notification
  endpoint:
    path: /subscription
    method: PUT
    data_selector: null
    params: {}
- name: get_notifications
  endpoint:
    path: /subscription
    method: GET
    data_selector: null
    params:
      merchantId: '100012913281'
      limit: 50
      offset: 10
- name: payment_link
  endpoint:
    path: /checkout/v3/device
    method: POST
    data_selector: id
- name: payment
  endpoint:
    path: /checkout/v3/payment
    method: POST
- name: customer
  endpoint:
    path: /checkout/v3/customer
    method: POST
- name: customercardaccount
  endpoint:
    path: /checkout/v3/customercardaccountr
    method: POST
- name: payment
  endpoint:
    path: /checkout/v3/payment
    method: POST
    data_selector: response
    params: {}
- name: merchant
  endpoint:
    path: /api/merchant
    method: POST
    data_selector: merchant_data
- name: merchant
  endpoint:
    path: /merchants
    method: GET
    data_selector: merchants
- name: payments
  endpoint:
    path: /payments
    method: POST
    data_selector: payment
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
    params: {}
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: reports
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: GET
    data_selector: notifications
    params: {}
- name: terminals
  endpoint:
    path: /terminals
    method: GET
    data_selector: terminals
    params: {}
- name: invoice
  endpoint:
    path: /invoices
    method: GET
    data_selector: invoices
- name: recurring_invoices
  endpoint:
    path: /recurring
    method: GET
    data_selector: recurring_invoices
- name: test_cards
  endpoint:
    path: /test/cards
    method: GET
    data_selector: cards
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
- name: custom_fields
  endpoint:
    path: /checkout/v3/field
    method: POST
- name: retrieve_custom_fields
  endpoint:
    path: /checkout/v3/field
    method: GET
- name: customer_contacts
  endpoint:
    path: /customer/contacts
    method: GET
- name: customer_card_account
  endpoint:
    path: /checkout/v3/customercardaccount
    method: POST
    data_selector: ''
    params: {}
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: response
    params: {}
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: response
    params:
      echo: 'true'
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: response
    params:
      echo: 'true'
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: ''
    params:
      echo: 'true'
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: response
    params: {}
- name: payment
  endpoint:
    path: /payment
    method: POST
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: response
    params:
      echo: 'true'
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: created
    params: {}
- name: payment
  endpoint:
    path: /checkout/v3/payment
    method: POST
    data_selector: ''
    params: {}
- name: payment
  endpoint:
    path: /checkout/v3/payment
    method: POST
    data_selector: records
- name: payment
  endpoint:
    path: /checkout/v3/payment
    method: POST
    data_selector: created
    params: {}
- name: payment
  endpoint:
    path: /checkout/v3/payment/{id}
    method: DELETE
    data_selector: ''
    params:
      force: 'true'
- name: payment_receipt
  endpoint:
    path: /checkout/v3/paymentreceipt
    method: POST
    data_selector: null
    params: {}
- name: invoice_receipt
  endpoint:
    path: /checkout/v3/invoicereceipt
    method: POST
    data_selector: null
    params: {}
- name: batch
  endpoint:
    path: /batch
    method: GET
    data_selector: batches
    params:
      status: open
- name: get_catalog_id
  endpoint:
    path: /checkout/v3/merchant/554123
    method: GET
    data_selector: general.defaultCatalogId
- name: create_product
  endpoint:
    path: /checkout/v3/catalogproduct
    method: POST
    data_selector: records
- name: create_variance
  endpoint:
    path: /checkout/v3/productvariant
    method: POST
    data_selector: records
- name: create_supplier
  endpoint:
    path: /checkout/v3/supplier
    method: POST
    data_selector: records
- name: create_collection
  endpoint:
    path: /checkout/v3/catalogcollection
    method: POST
    data_selector: records
- name: invoice
  endpoint:
    path: /checkout/v3/invoice
    method: POST
    data_selector: created
    params:
      echo: 'true'
- name: invoice
  endpoint:
    path: /invoices
    method: GET
    data_selector: invoices
- name: tax
  endpoint:
    path: /checkout/v3/tax
    method: GET
    data_selector: records
    params:
      merchantId: '{{merchantId}}'
- name: invoice_receipt
  endpoint:
    path: /checkout/v3/invoicereceipt
    method: POST
    data_selector: null
    params:
      id: '{{invoiceId}}'
      contact: '{{email}},{{phoneNumber}}'
- name: recurring_billing
  endpoint:
    path: /recurring
    method: GET
    data_selector: contracts
- name: payments
  endpoint:
    path: /checkout/v3/payment/enrich/mxadvantage
    method: POST
    data_selector: response
- name: payments_with_surcharge
  endpoint:
    path: /checkout/v3/payment
    method: POST
    data_selector: response
- name: notifications
  endpoint:
    path: /notifications
    method: POST
- name: create_notification
  endpoint:
    path: /checkout/v3/subscription
    method: PUT
    data_selector: null
    params: {}
- name: get_notifications
  endpoint:
    path: /checkout/v3/subscription
    method: GET
    data_selector: null
    params:
      merchantId: '100012913281'
      limit: 50
      offset: 10
- name: payment_link
  endpoint:
    path: /checkout/v3/device
    method: POST
    data_selector: id
    params: {}
- name: invoice
  endpoint:
    path: /invoice
    method: GET
    data_selector: invoices
- name: Payments
  endpoint:
    path: /payments
    method: GET
    data_selector: records
- name: Customers
  endpoint:
    path: /customers
    method: GET
    data_selector: records
- name: payment
  endpoint:
    path: /payment
    method: POST
- name: Payments
  endpoint:
    path: /payments
    method: GET
- name: Customers
  endpoint:
    path: /customers
    method: GET
- name: Merchant Account
  endpoint:
    path: /merchant/account
    method: GET
- name: Make a Payment
  endpoint:
    path: /reference/post-payment
    method: POST
- name: Get a Payment
  endpoint:
    path: /reference/get-a-payment
    method: GET
- name: Get Payments
  endpoint:
    path: /reference/get-payments
    method: GET
- name: Delete a Payment
  endpoint:
    path: /reference/void-a-payment
    method: DELETE
- name: Make a Payment
  endpoint:
    path: /reference/post-payment
    method: POST
- name: Get Payments
  endpoint:
    path: /reference/get-payment
    method: GET
- name: Get a Payment
  endpoint:
    path: /reference/get-a-payment
    method: GET
- name: Void a Payment
  endpoint:
    path: /reference/void-a-payment
    method: DELETE
- name: payment
  endpoint:
    path: /checkout/v3/payment
    method: POST
- name: payment
  endpoint:
    path: /checkout/v3/payment
    method: POST
    data_selector: ''
- name: payments
  endpoint:
    path: /checkout/v3/payment
    method: GET
    data_selector: records
    params: {}
- name: payment
  endpoint:
    path: /checkout/v3/payment
    method: GET
    params:
      transactionType: Any
      tenderType: Any
      status: Any
      dateType: Last30
      source: Any
      limit: 50
      includeCustomer: true
- name: payment
  endpoint:
    path: /checkout/v3/payment/{paymentId}
    method: GET
    data_selector: object
    params: {}
- name: payment
  endpoint:
    path: /payment/paymentId
    method: GET
    data_selector: object
    params:
      includeCustomer: 'true'
- name: void_payment
  endpoint:
    path: /checkout/v3/payment/{paymentId}
    method: DELETE
- name: payment
  endpoint:
    path: /checkout/v3/payment/paymentId
    method: DELETE
- name: send_payment_receipt
  endpoint:
    path: /checkout/v3/paymentreceipt
    method: POST
- name: payment_receipt
  endpoint:
    path: /checkout/v3/paymentreceipt
    method: POST
- name: Checkout
  endpoint:
    path: /checkout
    method: GET
- name: Recurring Payments
  endpoint:
    path: /recurring-payments
    method: GET
- name: Payments
  endpoint:
    path: /payments
    method: GET
- name: Customers
  endpoint:
    path: /customers
    method: GET
- name: Merchant Account
  endpoint:
    path: /merchant-account
    method: GET
- name: Report API
  endpoint:
    path: /report
    method: GET
- name: create_contract
  endpoint:
    path: /checkout/v3/contractsubscription
    method: POST
    data_selector: contract
    params: {}
- name: update_contract
  endpoint:
    path: /checkout/v3/contractsubscription
    method: PUT
    data_selector: contract
    params:
      id: int32
      subId: int32
      echo: boolean
- name: contract
  endpoint:
    path: /checkout/v3/contract/{contractId}
    method: GET
- name: contract
  endpoint:
    path: /checkout/v3/contract/contractId
    method: GET
- name: cancel_contract
  endpoint:
    path: /checkout/v3/contract
    method: DELETE
    params:
      id: contractId
- name: contract
  endpoint:
    path: /checkout/v3/contract
    method: DELETE
- name: contract_payment
  endpoint:
    path: /checkout/v3/contract/payment
    method: GET
    params:
      id: required
      subscriptionId: optional
      limit: optional
      offset: optional
- name: contract_payment
  endpoint:
    path: /checkout/v3/contract/payment
    method: GET
    params:
      limit: '999'
      offset: '0'
- name: contract_subscription
  endpoint:
    path: /checkout/v3/contractsubscription/{contractId}
    method: GET
- name: contract_subscription
  endpoint:
    path: /contractsubscription/contractId
    method: GET
    data_selector: records
- name: contract_history
  endpoint:
    path: /checkout/v3/contract/history
    method: GET
    data_selector: events
    params:
      id: Contract Id
      subscriptionId: SubscriptionId
      limit: 999
      offset: 0
- name: contract_history
  endpoint:
    path: /checkout/v3/contract/history
    method: GET
    params:
      limit: '999'
      offset: '0'
- name: Batches
  endpoint:
    path: /reference/batches-overview
    method: GET
- name: Payments
  endpoint:
    path: /reference/payment-overview-1
    method: GET
- name: Customers
  endpoint:
    path: /reference/customers-overview
    method: GET
- name: Merchant Account
  endpoint:
    path: /reference/merchant-account-overview
    method: GET
- name: MX Merchant Reports
  endpoint:
    path: /reference/mx-merchant-reports-overview
    method: GET
- name: batches
  endpoint:
    path: /reference/get-batches
    method: GET
    data_selector: batches
    params: {}
- name: contract_history
  endpoint:
    path: /reference/get-a-contracts-history
    method: GET
    data_selector: history
    params: {}
- name: batches
  endpoint:
    path: /checkout/v3/batch
    method: GET
    data_selector: records
    params: {}
- name: batch
  endpoint:
    path: /batch
    method: GET
    data_selector: records
    params:
      offset: 0
- name: batch
  endpoint:
    path: /checkout/v3/batch/{batchId}
    method: GET
- name: Get Batches
  endpoint:
    path: /checkout/v3/batch/batchId
    method: GET
- name: Get a Batch's transactions
  endpoint:
    path: /checkout/v3/batch/batchId/transactions
    method: GET
- name: batch_transactions
  endpoint:
    path: /checkout/v3/batchpayment
    method: GET
    params:
      batchId: int32
- name: batch_payment
  endpoint:
    path: /batchpayment
    method: GET
    data_selector: records
    params: {}
- name: close_batch
  endpoint:
    path: /checkout/v3/batch/{batchId}
    method: PUT
- name: batch_transactions
  endpoint:
    path: /checkout/v3/batch/batchId
    method: PUT
- name: customers
  endpoint:
    path: /reference/customers-overview
    method: GET
- name: payments
  endpoint:
    path: /reference/payment-overview-1
    method: GET
- name: reports
  endpoint:
    path: /reference/mx-merchant-reports-overview
    method: GET
- name: customers
  endpoint:
    path: /reference/customers
    method: GET
- name: create_customer
  endpoint:
    path: /reference/create-customer
    method: POST
- name: customer
  endpoint:
    path: /checkout/v3/customer
    method: POST
    data_selector: id
    params: {}
- name: customer
  endpoint:
    path: /checkout/v3/customer
    method: POST
    data_selector: customerData
- name: customer
  endpoint:
    path: /checkout/v3/customer
    method: GET
    data_selector: records
    params:
      merchantId: string
      limit: int32
      ascending: boolean
      filter: string
      spendProfile: string
      sortField: string
      lastActivity: string
      startDate: date
      endDate: date
- name: customer
  endpoint:
    path: /customer
    method: GET
    params:
      limit: '0'
      ascending: 'false'
      sortField: lastActivity
      lastActivity: Lifetime
- name: customer
  endpoint:
    path: /checkout/v3/customer/{customerId}
    method: GET
    data_selector: object
    params: {}
- name: customer
  endpoint:
    path: /customer/customerId
    method: GET
- name: update_customer
  endpoint:
    path: /checkout/v3/customer/{customerId}
    method: PUT
    data_selector: object
    params: {}
- name: customer
  endpoint:
    path: /customer/customerId
    method: PUT
    data_selector: customer
    params: {}
- name: customer_address
  endpoint:
    path: /checkout/v3/customeraddress
    method: POST
    data_selector: array of objects
    params:
      id: int32
      echo: boolean
- name: customer_address
  endpoint:
    path: /checkout/v3/customeraddress
    method: POST
    data_selector: result
- name: customer_address
  endpoint:
    path: /checkout/v3/customeraddress/{customerId}
    method: GET
    data_selector: array of objects
    params:
      customerId: int32
- name: customer_address
  endpoint:
    path: /checkout/v3/customeraddress/customerId
    method: GET
- name: customer_address
  endpoint:
    path: /checkout/v3/customeraddress
    method: PUT
    data_selector: response
- name: customer_address
  endpoint:
    path: /checkout/v3/customeraddress
    method: PUT
    data_selector: object
- name: add_customer_photo
  endpoint:
    path: /checkout/v3/customerphoto
    method: POST
    data_selector: response
    params: {}
- name: customer_note
  endpoint:
    path: /checkout/v3/customernote
    method: POST
- name: customer_note
  endpoint:
    path: /checkout/v3/customernote
    method: POST
- name: customer_note
  endpoint:
    path: /checkout/v3/customernote
    method: GET
    data_selector: response
    params:
      id: string
- name: customer_note
  endpoint:
    path: /customernote
    method: GET
- name: customer_payment
  endpoint:
    path: /checkout/v3/customerpayment
    method: GET
    data_selector: records
    params:
      id: Customer Id
      merchantId: Merchant Id
      offset: int32
      limit: int32
- name: customer_payment
  endpoint:
    path: /customerpayment
    method: GET
- name: create_custom_fields
  endpoint:
    path: /checkout/v3/field
    method: POST
    data_selector: response
    params:
      merchantId: required
- name: custom_fields
  endpoint:
    path: /checkout/v3/customer/field
    method: GET
- name: custom_fields
  endpoint:
    path: /checkout/v3/customer/field
    method: GET
- name: customers
  endpoint:
    path: /reference/customers-overview
    method: GET
- name: payments
  endpoint:
    path: /reference/payment-overview-1
    method: GET
- name: delete_custom_fields
  endpoint:
    path: /checkout/v3/field/{id}
    method: DELETE
- name: Get a vaulted bank account
  endpoint:
    path: /get-a-vaulted-bank-account
    method: GET
- name: Update a vaulted bank account
  endpoint:
    path: /update-a-vaulted-bank-account
    method: PUT
- name: Create vaulted bank account
  endpoint:
    path: /create-vaulted-bank-account
    method: POST
- name: Get a customer's vaulted card account(s)
  endpoint:
    path: /get-a-customers-vaulted-card-accounts
    method: GET
- name: Update a vaulted card account
  endpoint:
    path: /update-a-vaulted-card-account
    method: PUT
- name: Create vaulted card account
  endpoint:
    path: /create-vaulted-card-account
    method: POST
- name: create_vaulted_card_account
  endpoint:
    path: /checkout/v3/customercardaccount
    method: POST
    data_selector: object
    params:
      id: int32
      echo: boolean
- name: vaulted_card_account
  endpoint:
    path: /checkout/v3/customercardaccount
    method: POST
    data_selector: records
- name: customer_card_account
  endpoint:
    path: /checkout/v3/customercardaccount
    method: PUT
    data_selector: response
- name: customer_card_account
  endpoint:
    path: /checkout/v3/customercardaccount
    method: PUT
    data_selector: object
- name: customer_card_account
  endpoint:
    path: /checkout/v3/customercardaccount
    method: GET
    data_selector: records
    params:
      id: int32
      subId: int32
- name: customer_card_account
  endpoint:
    path: /customercardaccount
    method: GET
- name: customer_vaulted_card_account
  endpoint:
    path: /checkout/v3/customercardaccount
    method: DELETE
    params:
      id: int32
      subId: int32
- name: customer_bank_account
  endpoint:
    path: /checkout/v3/customerbankaccount
    method: POST
    data_selector: object
    params: {}
- name: customer_bank_account
  endpoint:
    path: /checkout/v3/customerbankaccount
    method: POST
    data_selector: null
    params:
      echo: 'true'
- name: customer_bank_account
  endpoint:
    path: /checkout/v3/customerbankaccount
    method: PUT
    data_selector: response
    params:
      id: int32
      subId: int32
- name: vaulted_bank_account
  endpoint:
    path: /checkout/v3/customerbankaccount
    method: PUT
- name: customer_bank_account
  endpoint:
    path: /checkout/v3/customerbankaccount
    method: GET
    data_selector: object
    params:
      id: int32
      subId: int32
- name: customerbankaccount
  endpoint:
    path: /customerbankaccount
    method: GET
- name: customer_bank_account
  endpoint:
    path: /checkout/v3/customerbankaccount
    method: DELETE
    data_selector: object
    params:
      id: customer_id
      subId: vault_id
- name: Get Deposits Report
  endpoint:
    path: /reference/get-deposits-report
    method: GET
- name: Get Settlement Report
  endpoint:
    path: /reference/get-settlement-report
    method: GET
- name: Get Settlement Transaction Detail Report
  endpoint:
    path: /reference/get-settlement-transaction-detail-report
    method: GET
- name: Get Chargebacks Report
  endpoint:
    path: /reference/get-chargebacks-report
    method: GET
- name: Get Expired Cards Report
  endpoint:
    path: /reference/get-expired-cards-report
    method: GET
- name: Get User Sales Report
  endpoint:
    path: /reference/get-user-sales-report
    method: GET
- name: Get User Sales Summary Report
  endpoint:
    path: /reference/get-user-sales-summary-report
    method: GET
- name: Get ACH Activity Report
  endpoint:
    path: /reference/get-ach-activity-report
    method: GET
- name: Get ACH Returns Report
  endpoint:
    path: /reference/get-ach-returns-report
    method: GET
- name: Get Statement Report
  endpoint:
    path: /reference/get-statement-report
    method: GET
- name: Get API Traffic Report
  endpoint:
    path: /reference/get-api-traffic-report
    method: GET
- name: Get Deposits Report
  endpoint:
    path: /reference/get-deposits-report
    method: GET
- name: Get ACH Returns Report
  endpoint:
    path: /reference/get-ach-returns-report
    method: GET
- name: Get ACH Activity Report
  endpoint:
    path: /reference/get-ach-activity-report
    method: GET
- name: Get User Sales Summary Report
  endpoint:
    path: /reference/get-user-sales-summary-report
    method: GET
- name: Get User Sales Report
  endpoint:
    path: /reference/get-user-sales-report
    method: GET
- name: Get Expired Cards Report
  endpoint:
    path: /reference/get-expired-cards-report
    method: GET
- name: Get Chargebacks Report
  endpoint:
    path: /reference/get-chargebacks-report
    method: GET
- name: Get Settlement Report
  endpoint:
    path: /reference/get-settlement-report
    method: GET
- name: Get Settlement Transaction Detail Report
  endpoint:
    path: /reference/get-settlement-transaction-detail-report
    method: GET
- name: deposits_report
  endpoint:
    path: /checkout/v3/report/ach/items
    method: GET
    data_selector: records
    params:
      merchantId: ''
      startDate: ''
      endDate: ''
      limit: '20'
      offset: '0'
- name: settlement_report
  endpoint:
    path: /checkout/v3/report/ach/items
    method: GET
    data_selector: items
    params:
      limit: '20'
      offset: '0'
- name: settlement_report
  endpoint:
    path: /checkout/v3/report/volume
    method: GET
    params:
      merchants: required
      startDate: required
      endDate: required
      groupBy: required
      limit: '20'
      offset: '0'
- name: deposits_report
  endpoint:
    path: /checkout/v3/report/volume
    method: GET
    params:
      groupBy: merchantcubedate
      limit: 20
      offset: 0
- name: settlement_transaction_detail
  endpoint:
    path: /checkout/v3/report/settlement/batch/transaction
    method: GET
    data_selector: response
    params:
      batchId: required
      limit: '20'
      offset: '0'
- name: settlement_report
  endpoint:
    path: /checkout/v3/report/settlement/batch/transaction
    method: GET
    data_selector: records
    params:
      offset: '0'
- name: chargebacks_report
  endpoint:
    path: /checkout/v3/report/chargeback
    method: GET
    data_selector: response
    params:
      merchantId: ''
      dateTypeFilter: Last30
      limit: 20
      offset: 0
- name: chargeback_report
  endpoint:
    path: /checkout/v3/report/chargeback
    method: GET
    params:
      dateTypeFilter: Last30
      limit: 20
      offset: 0
- name: expired_cards_report
  endpoint:
    path: /checkout/v3/report/cardexpiration
    method: GET
    data_selector: response
    params:
      merchantId: int32
      dateRange: string
      startDate: date
      endDate: date
      expiredOnly: boolean
      limit: int32
      offset: int32
- name: card_expiration_report
  endpoint:
    path: /checkout/v3/report/cardexpiration
    method: GET
    data_selector: records
    params:
      dateRange: Last30
      expiredOnly: 'true'
      limit: 20
      offset: 0
- name: user_sales_report
  endpoint:
    path: /checkout/v3/report/usersales
    method: GET
    data_selector: response
    params:
      merchantId: required
      dateRange: Defaults to Last30
      limit: Defaults to 20
      offset: Defaults to 0
      transactionType: Defaults to any
      status: Defaults to any
- name: user_sales
  endpoint:
    path: /checkout/v3/report/usersales
    method: GET
    data_selector: records
    params:
      dateRange: Last30
      limit: 20
      offset: 0
      transactionType: any
      status: any
- name: user_sales_summary
  endpoint:
    path: /checkout/v3/report/usersalessummary
    method: GET
    data_selector: response
    params:
      merchantId: required
      dateRange: Last30
      transactionType: any
      status: any
- name: user_sales_summary
  endpoint:
    path: /checkout/v3/report/usersalessummary
    method: GET
    data_selector: records
    params:
      dateRange: Last30
      transactionType: any
      status: any
- name: ach_activity_report
  endpoint:
    path: /checkout/v3/report/ach/activitySummary
    method: GET
    data_selector: response
    params:
      merchantId: required
      startDate: required
      endDate: required
      limit: Defaults to 20
      offset: Defaults to 0
- name: ach_activity_summary
  endpoint:
    path: /checkout/v3/report/ach/activitySummary
    method: GET
    data_selector: records
    params:
      offset: 0
- name: ach_returns
  endpoint:
    path: /checkout/v3/report/ach/returns
    method: GET
    params:
      merchantId: required
      startDate: required
      endDate: required
      limit: '20'
      offset: '0'
- name: ach_returns
  endpoint:
    path: /checkout/v3/report/ach/returns
    method: GET
    data_selector: records
    params: {}
- name: statement_report
  endpoint:
    path: /checkout/v3/report/statement
    method: GET
    data_selector: object
    params:
      merchantId: int32
      statementDate: date
- name: statement_report
  endpoint:
    path: /report/statement
    method: GET
- name: ach_returns_report
  endpoint:
    path: /report/ach-returns
    method: GET
- name: api_traffic_report
  endpoint:
    path: /report/api-traffic
    method: GET
- name: API Traffic Report
  endpoint:
    path: /checkout/v3/accesslog
    method: GET
    params:
      merchantId: required
      errors: boolean
      method: string
      status: string
      limit: int32
      offset: int32
- name: accesslog
  endpoint:
    path: /checkout/v3/accesslog
    method: GET
    params:
      limit: '20'
      offset: '0'
- name: Checkout API
  endpoint:
    path: /reference/checkout-api
    method: GET
- name: Payments
  endpoint:
    path: /reference/payment-overview-1
    method: GET
- name: Customers
  endpoint:
    path: /reference/customers-overview
    method: GET
- name: Get Notifications
  endpoint:
    path: /reference/get-notifications
    method: GET
- name: notifications
  endpoint:
    path: /checkout/v3/subscription
    method: GET
    data_selector: records
    params:
      merchantId: required
      limit: ''
      offset: ''
- name: subscription
  endpoint:
    path: /checkout/v3/subscription
    method: GET
- name: create_notification
  endpoint:
    path: /checkout/v3/subscription
    method: PUT
    data_selector: object
    params: {}
- name: event_types
  endpoint:
    path: /checkout/v3/subscription/eventtype
    method: GET
    data_selector: array of objects
- name: subscription_eventtype
  endpoint:
    path: /checkout/v3/subscription/eventtype
    method: GET
- name: Checkout API
  endpoint:
    path: /reference/introduction
    method: GET
- name: Merchant API
  endpoint:
    path: /reference/merchant-api-overview
    method: GET
- name: Get a token
  endpoint:
    path: /reference/get-a-token
    method: POST
- name: Get a token
  endpoint:
    path: /checkout/v3/auth/token/{merchantId}
    method: POST
- name: payment
  endpoint:
    path: /checkout/v3/payment
    method: POST
    params:
      token: string
- name: payment
  endpoint:
    path: /checkout/v3/payment
    method: POST
    data_selector: result
    params:
      echo: 'true'
      token: ''
- name: customer_vaulted_card
  endpoint:
    path: /checkout/v3/vault/customer
    method: POST
    data_selector: object
    params:
      token: string
- name: customer
  endpoint:
    path: /checkout/v3/vault/customer
    method: POST
- name: vaulted_card
  endpoint:
    path: /checkout/v3/vaulted-card
    method: POST
- name: create_vaulted_card
  endpoint:
    path: /checkout/v3/vault
    method: POST
    data_selector: json
    params:
      token: string
      customerid: int32
- name: Merchant Account
  endpoint:
    path: /reference/merchant-account-overview
    method: GET
- name: Checkout API
  endpoint:
    path: /reference/checkout-api
    method: GET
- name: Get List of Merchants
  endpoint:
    path: /reference/get-list-of-merchants
    method: GET
- name: Create vaulted card on existing customer with token
  endpoint:
    path: /reference/create-vaulted-card-on-existing-customer-with-token
    method: POST
- name: Get Merchant Settings
  endpoint:
    path: /reference/get-merchant-settings
    method: GET
- name: Get Merchant Details & Settings
  endpoint:
    path: /reference/get-merchant-details
    method: GET
- name: Update Merchant Settings
  endpoint:
    path: /reference/update-merchant-settings
    method: PUT
- name: merchant
  endpoint:
    path: /checkout/v3/merchant
    method: GET
    data_selector: records
    params:
      offset: 0
- name: merchant
  endpoint:
    path: /checkout/v3/merchant
    method: GET
    params:
      limit: '9999'
      offset: '0'
- name: merchant_details
  endpoint:
    path: /checkout/v3/merchant/{merchantId}
    method: GET
- name: merchant
  endpoint:
    path: /merchant/merchantId
    method: GET
- name: merchant_settings
  endpoint:
    path: /checkout/v3/merchant/{merchantId}/setting
    method: GET
- name: merchant_settings
  endpoint:
    path: /merchant/merchantId/setting
    method: GET
- name: merchant_settings
  endpoint:
    path: /checkout/v3/merchantsetting/{merchantId}
    method: PUT
- name: merchant_settings
  endpoint:
    path: /checkout/v3/merchantsetting/merchantId
    method: PUT
- name: get_merchant_settings
  endpoint:
    path: /get-merchant-settings
    method: GET
- name: accounts
  endpoint:
    path: /checkout/v3/account
    method: GET
    data_selector: records
    params: {}
- name: account
  endpoint:
    path: /checkout/v3/account
    method: GET
- name: create_account
  endpoint:
    path: /checkout/v3/account
    method: POST
- name: account
  endpoint:
    path: /account
    method: POST
    data_selector: Result
    params:
      echo: 'true'
- name: update_account_team_member
  endpoint:
    path: /checkout/v3/account
    method: PUT
    data_selector: response
    params:
      id: Account (Team Member) ID
- name: account
  endpoint:
    path: /checkout/v3/account
    method: PUT
- name: delete_account_team_member
  endpoint:
    path: /checkout/v3/account
    method: DELETE
    params:
      id: string
- name: account_photo
  endpoint:
    path: /checkout/v3/accountphoto
    method: POST
    data_selector: RAW_BODY
    params:
      id: string
- name: create_api_keys
  endpoint:
    path: /checkout/v3/application
    method: POST
- name: get_api_keys
  endpoint:
    path: /checkout/v3/application
    method: GET
    params:
      merchantId: string
      pageSize: int32
- name: application
  endpoint:
    path: /application
    method: GET
    data_selector: records
    params: {}
- name: Get Payments
  endpoint:
    path: /reference/get-payment
    method: GET
- name: Create Order
  endpoint:
    path: /reference/create-order
    method: POST
- name: FirstData ACH Report
  endpoint:
    path: /report/v1/fd/ach/
    method: GET
    data_selector: results
    params: {}
- name: FirstData Batch Report
  endpoint:
    path: /report/v1/fd/ach/
    method: GET
    data_selector: records
- name: batch_report
  endpoint:
    path: /report/v1/fd/batch
    method: GET
    data_selector: records
    params: {}
- name: batch
  endpoint:
    path: /batch
    method: GET
    data_selector: records
    params:
      size: '10'
- name: batch_transactions
  endpoint:
    path: /report/v1/fd/batch/transactions
    method: GET
    params: {}
- name: batch_transactions
  endpoint:
    path: /report/v1/fd/batch/transactions
    method: GET
    data_selector: records
- name: fd_disputes
  endpoint:
    path: /report/v1/fd/disputes
    method: GET
    data_selector: response
    params: {}
- name: disputes
  endpoint:
    path: /report/v1/fd/disputes
    method: GET
- name: transactions
  endpoint:
    path: /fd/transactions
    method: GET
    data_selector: records
    params:
      size: 10
- name: transactions
  endpoint:
    path: /fd/transactions
    method: GET
    data_selector: records
    params:
      size: 10
- name: tsys_ach_report
  endpoint:
    path: /report/v1/tsys/ach
    method: GET
    data_selector: results
    params: {}
- name: tsys_ach_report
  endpoint:
    path: /report/v1/tsys/ach
    method: GET
    data_selector: records
    params:
      sort: created
      size: '10'
- name: tsys_batch_report
  endpoint:
    path: /report/v1/tsys/batch
    method: GET
    params:
      size: 10
- name: batch
  endpoint:
    path: /batch
    method: GET
    data_selector: records
- name: batch_transactions
  endpoint:
    path: /report/v1/tsys/batch/transactions
    method: GET
    params: {}
- name: batch_transactions
  endpoint:
    path: /report/v1/tsys/batch/transactions
    method: GET
    data_selector: records
    params:
      size: '10'
- name: tsys_disputes
  endpoint:
    path: /report/v1/tsys/disputes
    method: GET
    params: {}
- name: disputes
  endpoint:
    path: /report/v1/tsys/disputes
    method: GET
- name: tsys_transactions
  endpoint:
    path: /report/v1/tsys/transactions
    method: GET
    data_selector: results
    params:
      size: '10'
- name: transactions
  endpoint:
    path: /report/v1/tsys/transactions
    method: GET
    data_selector: records
    params:
      size: '10'
- name: Checkout
  endpoint:
    path: /reference/checkout
    method: GET
- name: Payments
  endpoint:
    path: /reference/payment-overview-1
    method: GET
- name: BIN
  endpoint:
    path: /reference/get-bin-information
    method: GET
- name: bin_information
  endpoint:
    path: /merchant/v1/bin/
    method: GET
    data_selector: object
    params:
      search: ''
- name: token
  endpoint:
    path: /security/v1/merchant/{merchantId}/token
    method: GET
- name: merchant_token
  endpoint:
    path: /security/v1/application/merchantId/{merchantId}/token
    method: GET
    data_selector: null
    params: {}
- name: merchantId
  endpoint:
    path: /security/v1/application/merchantId/merchantId/token
    method: GET
- name: terminals
  endpoint:
    path: /terminal/v1/merchantid/{merchantId}
    method: GET
- name: Get List of Terminals
  endpoint:
    path: /terminal/v1/merchantid/merchantId
    method: GET
- name: terminal
  endpoint:
    path: /reference/get-list-of-terminals
    method: GET
- name: create_terminal
  endpoint:
    path: /reference/create-terminal
    method: POST
- name: create_terminal
  endpoint:
    path: /terminal/v1/merchantid/{merchantId}/providerkey/{providerKey}
    method: POST
- name: Terminal
  endpoint:
    path: /reference/get-list-of-terminals
    method: GET
- name: Create Terminal
  endpoint:
    path: /reference/create-terminal
    method: POST
- name: create_terminal
  endpoint:
    path: /terminal/v1/merchantid/{merchantId}/providerkey/anywherecommerce
    method: POST
- name: terminal
  endpoint:
    path: /reference/get-list-of-terminals
    method: GET
- name: payment
  endpoint:
    path: /reference/post-payment
    method: POST
- name: create_terminal
  endpoint:
    path: /terminal/v1/merchantid/{merchantId}/providerkey/dejavoo
    method: POST
    data_selector: key
- name: delete_terminal
  endpoint:
    path: /terminal/v1/merchantid/{merchantId}/terminalid/{terminalId}
    method: DELETE
- name: terminal
  endpoint:
    path: /terminal/v1/merchantid/merchantId/terminalid/terminalId
    method: DELETE
- name: payments
  endpoint:
    path: /payments
    method: POST
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: terminal_transaction
  endpoint:
    path: /terminal/v1/transaction/merchantid/{merchantId}/terminalid/{terminalId}
    method: POST
    data_selector: response body
    params: {}
- name: transaction
  endpoint:
    path: /terminal/v1/transaction/merchantid/merchantId/terminalid/terminalId
    method: POST
- name: Transaction
  endpoint:
    path: /transaction
    method: POST
    data_selector: transaction
    params: {}
- name: Payment
  endpoint:
    path: /payment
    method: POST
    data_selector: payment
    params: {}
- name: Customer
  endpoint:
    path: /customer
    method: GET
    data_selector: customer
    params: {}
- name: transaction_callback
  endpoint:
    path: /terminal/v1/transaction/callback/merchantid/{merchantId}/reference/{reference}/terminalid/{terminalId}/transactionId/{transactionId}
    method: POST
- name: terminal_transaction
  endpoint:
    path: /checkout/v3/payment
    method: GET
    data_selector: object
    params:
      merchantId: string
      replayId: string
- name: payment
  endpoint:
    path: /payment
    method: GET
- name: terminal_transaction_delete
  endpoint:
    path: /terminal/v1/transaction/merchantid/{merchantId}/terminalid/{terminalId}
    method: DELETE
- name: checkout_api
  endpoint:
    path: /checkout
    method: GET
    data_selector: records
- name: merchant_account
  endpoint:
    path: /merchant/account
    method: GET
    data_selector: records
- name: Get Surcharge
  endpoint:
    path: /reference/get-surcharge
    method: GET
- name: Make a Payment with Surcharge
  endpoint:
    path: /reference/make-a-payment-with-surcharge
    method: POST
- name: surcharge
  endpoint:
    path: /checkout/v3/payment/enrich/mxadvantage
    method: POST
    data_selector: object
    params: {}
- name: make_payment_with_surcharge
  endpoint:
    path: /checkout/v3/payment/enrich/mxadvantage
    method: POST
    data_selector: object
    params: {}
- name: make_payment_with_surcharge
  endpoint:
    path: /checkout/v3/payment
    method: POST
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: object
    params: {}
- name: create_invoice
  endpoint:
    path: /invoice/create-invoice
    method: POST
- name: get_invoices
  endpoint:
    path: /invoice/get-invoices
    method: GET
- name: get_invoice
  endpoint:
    path: /invoice/get-an-invoice
    method: GET
- name: update_invoice
  endpoint:
    path: /invoice/update-invoice
    method: PUT
- name: send_invoice_receipt
  endpoint:
    path: /invoice/send-invoice-receipt
    method: POST
- name: get_invoice_receipt
  endpoint:
    path: /invoice/get-invoice-receipt
    method: GET
- name: add_invoice_payment
  endpoint:
    path: /invoice/add-invoice-payment
    method: POST
- name: get_invoice_payment
  endpoint:
    path: /invoice/get-invoice-payment
    method: GET
- name: create_invoice_return
  endpoint:
    path: /invoice/create-an-invoice-return
    method: POST
- name: get_invoice_returns
  endpoint:
    path: /invoice/get-all-invoice-returns
    method: GET
- name: get_invoice_returns_by_id
  endpoint:
    path: /invoice/get-invoice-returns-by-id
    method: GET
- name: get_invoice_history
  endpoint:
    path: /invoice/get-invoice-history
    method: GET
- name: create_note
  endpoint:
    path: /invoice/create-a-note
    method: POST
- name: get_invoice_notes
  endpoint:
    path: /invoice/get-invoice-notes
    method: GET
- name: get_invoice_note
  endpoint:
    path: /invoice/get-an-invoice-note
    method: GET
- name: invoice_export
  endpoint:
    path: /invoice/invoice-export
    method: GET
- name: get_discount
  endpoint:
    path: /invoice/get-discount
    method: GET
- name: get_an_discount
  endpoint:
    path: /invoice/get-an-discount
    method: GET
- name: invoice
  endpoint:
    path: /invoice
    method: GET
    data_selector: invoices
- name: create_invoice
  endpoint:
    path: /checkout/v3/invoice
    method: POST
- name: Get Invoices
  endpoint:
    path: /checkout/v3/invoice
    method: POST
    data_selector: status
    params:
      echo: 'false'
- name: invoices
  endpoint:
    path: /checkout/v3/invoice
    method: GET
- name: invoice
  endpoint:
    path: /invoice
    method: GET
- name: invoice
  endpoint:
    path: /checkout/v3/invoice/{id}
    method: GET
- name: invoices
  endpoint:
    path: /invoice/id
    method: GET
- name: invoice
  endpoint:
    path: /invoice
    method: GET
- name: payment
  endpoint:
    path: /payment
    method: POST
- name: update_invoice
  endpoint:
    path: /checkout
    method: PUT
- name: invoice_receipt
  endpoint:
    path: /send-invoice-receipt
    method: post
- name: invoice_receipt
  endpoint:
    path: /checkout/v3/invoicereceipt
    method: POST
    data_selector: null
    params:
      id: string
      contact: string
- name: invoice_receipt
  endpoint:
    path: /checkout/v3/invoicereceipt
    method: GET
    params:
      receiptNumber: string
      accessCode: string
- name: invoice_receipt
  endpoint:
    path: /checkout/v3/invoicereceipt
    method: GET
- name: add_invoice_payment
  endpoint:
    path: /checkout/v3/v1.00/invoicepayment
    method: POST
    data_selector: null
    params: {}
- name: invoice_payment
  endpoint:
    path: /checkout/v3/invoicepayment
    method: GET
    data_selector: response
    params:
      id: Invoice ID
      includeVoids: 'true'
- name: invoice_payment
  endpoint:
    path: /checkout/v3/invoicepayment
    method: GET
    params:
      includeVoids: 'true'
- name: invoice_return
  endpoint:
    path: /checkout/v3/invoicereturn
    method: POST
    params:
      id: Invoice Id
- name: invoice_return
  endpoint:
    path: /checkout/v3/invoicereturn
    method: POST
- name: invoice_return
  endpoint:
    path: /checkout/v3/invoice/{id}/return
    method: GET
- name: invoice_return
  endpoint:
    path: /invoice/id/return
    method: GET
- name: invoice_returns_by_id
  endpoint:
    path: /invoice/returns/by/id
    method: GET
- name: invoice_return
  endpoint:
    path: /checkout/v3/invoice/{id}/return/{returnId}
    method: GET
    data_selector: response
- name: Get Invoice Returns
  endpoint:
    path: /invoice/id/return/returnId
    method: GET
- name: Get Invoice History
  endpoint:
    path: /invoice/history
    method: GET
- name: invoice_history
  endpoint:
    path: /checkout/v3/invoicehistory/{id}
    method: GET
- name: invoice_history
  endpoint:
    path: /invoicehistory/id
    method: GET
- name: create_note
  endpoint:
    path: /checkout/v3/invoice/{invoiceId}/note
    method: POST
- name: invoice_notes
  endpoint:
    path: /checkout/v3/invoice/invoiceId/note
    method: POST
- name: invoice_history
  endpoint:
    path: /get-invoice-history
    method: GET
- name: invoice_note
  endpoint:
    path: /checkout/v3/invoice/{id}/note
    method: GET
- name: invoice_note
  endpoint:
    path: /invoice/id/note
    method: GET
- name: invoice_note
  endpoint:
    path: /checkout/v3/invoice/{id}/note/{noteId}
    method: GET
- name: invoice_note
  endpoint:
    path: /checkout/v3/invoice/id/note/noteId
    method: GET
- name: invoice_export
  endpoint:
    path: /checkout/v3/invoice/export
    method: GET
    data_selector: receipts
    params: {}
- name: invoice_export
  endpoint:
    path: /invoice/export
    method: GET
- name: invoice_discount
  endpoint:
    path: /invoice/invoiceId/discount/
    method: GET
- name: discount
  endpoint:
    path: /checkout/v3/invoice/{invoiceId}/discount/{discountId}
    method: GET
    data_selector: ''
- name: discount
  endpoint:
    path: /checkout/v3/invoice/invoiceId/discount/discountId
    method: GET
- name: Get Catalog ID
  endpoint:
    path: /reference/get-catalog-id-2
    method: GET
- name: MX Retail - Products
  endpoint:
    path: /reference/mx-retail-products
    method: GET
- name: Get Products
  endpoint:
    path: /reference/get-products
    method: GET
- name: Get a Product
  endpoint:
    path: /reference/get-a-product
    method: GET
- name: Delete a Product
  endpoint:
    path: /reference/delete-a-product
    method: DEL
- name: Add Product Image
  endpoint:
    path: /reference/add-product-image
    method: POST
- name: Get Product Image
  endpoint:
    path: /reference/get-product-image
    method: GET
- name: MX Retail - Variants
  endpoint:
    path: /reference/mx-retail-variants
    method: GET
- name: Create Variant
  endpoint:
    path: /reference/create-a-variant
    method: POST
- name: Get Variants
  endpoint:
    path: /reference/get-product-variants
    method: GET
- name: Get a Variant
  endpoint:
    path: /reference/get-variants-by-id
    method: GET
- name: Update Variant
  endpoint:
    path: /reference/update-a-variant
    method: PUT
- name: Delete Variant
  endpoint:
    path: /reference/add-supplier-to-product
    method: DEL
- name: Add Variant Image
  endpoint:
    path: /reference/add-variant-image
    method: POST
- name: Get Variant Image
  endpoint:
    path: /reference/get-variant-image
    method: GET
- name: MX Retail - Collections
  endpoint:
    path: /reference/mx-retail-collections
    method: GET
- name: Create Collection
  endpoint:
    path: /reference/create-a-collection
    method: POST
- name: Get Collections
  endpoint:
    path: /reference/get-collection
    method: GET
- name: Get a Collection
  endpoint:
    path: /reference/get-a-collection
    method: GET
- name: Update Collection
  endpoint:
    path: /reference/update-a-collection
    method: PUT
- name: Delete Collection
  endpoint:
    path: /reference/delete-collection
    method: DEL
- name: MX Retail - Suppliers
  endpoint:
    path: /reference/mx-retail-suppliers
    method: GET
- name: Create Supplier
  endpoint:
    path: /reference/create-a-supplier
    method: POST
- name: Get Suppliers
  endpoint:
    path: /reference/get-suppliers
    method: GET
- name: Get Supplier
  endpoint:
    path: /reference/get-supplier
    method: GET
- name: Update Supplier
  endpoint:
    path: /reference/update-supplier
    method: PUT
- name: Delete Supplier
  endpoint:
    path: /reference/delete-supplier
    method: DEL
- name: Add Supplier Photo
  endpoint:
    path: /reference/add-supplier-photo
    method: POST
- name: Get Supplier Photo
  endpoint:
    path: /reference/get-supplier-photo
    method: GET
- name: Create a Supplier Address
  endpoint:
    path: /reference/create-a-supplier-address
    method: POST
- name: Get Supplier Addresses
  endpoint:
    path: /reference/get-supplier-address-1
    method: GET
- name: Get Supplier Address
  endpoint:
    path: /reference/get-supplier-address
    method: GET
- name: Update Supplier Address
  endpoint:
    path: /reference/update-supplier-address
    method: PUT
- name: Add a Supplier Contact
  endpoint:
    path: /reference/add-a-suppliers-contact
    method: POST
- name: Get Supplier Contacts
  endpoint:
    path: /reference/get-supplier-contacts
    method: GET
- name: Get a Supplier Contact
  endpoint:
    path: /reference/get-a-supplier-contact
    method: GET
- name: Update a Supplier Contact
  endpoint:
    path: /reference/update-a-supplier-contact
    method: PUT
- name: Delete a Supplier Contact
  endpoint:
    path: /reference/delete-a-supplier-contact
    method: DEL
- name: Add Product to Supplier
  endpoint:
    path: /reference/add-product-to-supplier
    method: PUT
- name: Get Supplier Products
  endpoint:
    path: /reference/get-supplier-produts
    method: GET
- name: Get a Supplier Product
  endpoint:
    path: /reference/get-supplier-product
    method: GET
- name: Delete Supplier Product
  endpoint:
    path: /reference/delete-supplier-product
    method: DEL
- name: Add a Supplier Note
  endpoint:
    path: /reference/add-a-supplier-note
    method: POST
- name: Get Supplier Notes
  endpoint:
    path: /reference/get-supplier-notes
    method: GET
- name: Get a Supplier Note
  endpoint:
    path: /reference/get-a-supplier-note
    method: GET
- name: Update Supplier Note
  endpoint:
    path: /reference/update-supplier-note
    method: PUT
- name: Delete Supplier Note
  endpoint:
    path: /reference/delete-supplier-note
    method: DEL
- name: catalog
  endpoint:
    path: /checkout/v3/catalog
    method: GET
    data_selector: records
- name: catalog
  endpoint:
    path: /checkout/v3/catalog
    method: GET
- name: products
  endpoint:
    path: /reference/get-products
    method: GET
- name: create_product
  endpoint:
    path: /reference/create-a-product
    method: POST
- name: catalog_id
  endpoint:
    path: /reference/get-catalog-id-2
    method: GET
- name: catalog_product
  endpoint:
    path: /checkout/v3/catalogproduct
    method: POST
    data_selector: object
    params: {}
- name: catalog_product
  endpoint:
    path: /catalogproduct
    method: POST
- name: products
  endpoint:
    path: /products
    method: GET
- name: products
  endpoint:
    path: /checkout/v3/catalogproduct
    method: GET
    data_selector: records
    params:
      id: string
- name: catalogproduct
  endpoint:
    path: /checkout/v3/catalogproduct
    method: GET
- name: product
  endpoint:
    path: /checkout/v3/product
    method: GET
    data_selector: object
    params:
      id: string
- name: products
  endpoint:
    path: /product
    method: GET
- name: product
  endpoint:
    path: /checkout/v3/product/{productId}
    method: DELETE
- name: product
  endpoint:
    path: /checkout/v3/product/productId
    method: DELETE
- name: add_product_image
  endpoint:
    path: /checkout/v3/productimage
    method: POST
- name: product_image
  endpoint:
    path: /checkout/v3/productimage
    method: GET
    data_selector: records
    params:
      id: int32
- name: product_image
  endpoint:
    path: /checkout/v3/productimage
    method: GET
    data_selector: object
- name: variants
  endpoint:
    path: /reference/mx-retail-variants
    method: GET
- name: Get Product Image
  endpoint:
    path: /reference/get-product-image
    method: GET
- name: Create Variant
  endpoint:
    path: /reference/create-a-variant
    method: POST
- name: create_variant
  endpoint:
    path: /checkout/v3/productvariant
    method: POST
- name: product_variant
  endpoint:
    path: /checkout/v3/productvariant
    method: GET
    data_selector: records
    params: {}
- name: product_variant
  endpoint:
    path: /productvariant
    method: GET
- name: variant
  endpoint:
    path: /checkout/v3/variant
    method: GET
    data_selector: object
    params: {}
- name: variant
  endpoint:
    path: /checkout/v3/variant
    method: GET
- name: variant
  endpoint:
    path: /checkout/v3/variant
    method: PUT
    data_selector: object
    params: {}
- name: variant
  endpoint:
    path: /checkout/v3/variant/{variantId}
    method: DELETE
- name: variant
  endpoint:
    path: /checkout/v3/variant/variantId
    method: DELETE
- name: add_variant_image
  endpoint:
    path: /checkout/v3/variantimage
    method: POST
- name: variant_image
  endpoint:
    path: /checkout/v3/variantimage
    method: POST
- name: variant_image
  endpoint:
    path: /checkout/v3/variantimage
    method: GET
    data_selector: records
    params:
      id: int32
- name: variant_image
  endpoint:
    path: /checkout/v3/variantimage
    method: GET
- name: Collections
  endpoint:
    path: /reference/mx-retail-collections
    method: GET
- name: collection
  endpoint:
    path: /reference/get-collection
    method: GET
- name: variant_image
  endpoint:
    path: /reference/get-variant-image
    method: GET
- name: collection
  endpoint:
    path: /checkout/v3/catalogcollection
    method: POST
    data_selector: object
    params: {}
- name: collections
  endpoint:
    path: /checkout/v3/catalogcollection
    method: POST
- name: collection
  endpoint:
    path: /checkout/v3/catalogcollection
    method: GET
    data_selector: records
    params: {}
- name: collection
  endpoint:
    path: /checkout/v3/catalogcollection
    method: GET
- name: collection
  endpoint:
    path: /checkout/v3/collection
    method: GET
    data_selector: object
    params: {}
- name: collection
  endpoint:
    path: /collection
    method: GET
- name: collection
  endpoint:
    path: /checkout/v3/collection
    method: PUT
- name: collection
  endpoint:
    path: /checkout/v3/collection
    method: DELETE
    data_selector: json
    params:
      id: string
- name: collection
  endpoint:
    path: /checkout/v3/collection
    method: DELETE
- name: suppliers
  endpoint:
    path: /reference/mx-retail-suppliers
    method: GET
- name: supplier
  endpoint:
    path: /reference/get-suppliers
    method: GET
- name: supplier_contact
  endpoint:
    path: /reference/get-supplier-contacts
    method: GET
- name: supplier_address
  endpoint:
    path: /reference/get-supplier-address
    method: GET
- name: supplier_product
  endpoint:
    path: /reference/get-supplier-produts
    method: GET
- name: supplier_note
  endpoint:
    path: /reference/get-supplier-notes
    method: GET
- name: supplier
  endpoint:
    path: /checkout/v3/supplier
    method: POST
- name: supplier
  endpoint:
    path: /checkout/v3/supplier
    method: GET
    data_selector: records
    params: {}
- name: supplier
  endpoint:
    path: /supplier
    method: GET
    data_selector: results
- name: supplier
  endpoint:
    path: /checkout/v3/supplier
    method: GET
    data_selector: json
- name: suppliers
  endpoint:
    path: /supplier
    method: GET
- name: supplier
  endpoint:
    path: /checkout/v3/supplier
    method: PUT
    params:
      id: Supplier Id
- name: supplier
  endpoint:
    path: /checkout/v3/supplier
    method: DELETE
    params:
      id: string
- name: supplier
  endpoint:
    path: /supplier
    method: DELETE
- name: supplier_photo
  endpoint:
    path: /checkout/v3/supplierphoto
    method: POST
    data_selector: json
    params:
      id: int32
- name: supplier_photo
  endpoint:
    path: /supplierphoto
    method: POST
notes:
- Use Basic Authentication for quick and easy implementation, or you can choose to
  use oAuth 1.0a to request a token that expires after 24hours for a more secure experience.
- Either authentication method may be used for basic authentication.
- Make sure you deactivate your old credit card payment plugin if you had one!
- API supports various payment types including Sale, Refund, and Authorization.
- Updated 4 months ago
- Default values different from the one shown above can be set on Payment settings.
- The dashboard is only visible to admin and supervisor roles. Dashboard data is only
  available since the account began processing with MX™ Merchant.
- In the Sandbox Environment, you can use the cards below to get an Approved status
  with a random but correct format using the expiration month/year, cvv, zip code,
  and address number.
- In the Production Environment, to get an Approved status you would need to use a
  real credit card for testing.
- customFields must be created against your merchant account before they may be applied
  to a specific customer.
- You can only vault up to 10 cards on a customer in MX Merchant.
- MX™ Merchant is able to accept credit cards not issued in the U.S. In order to accept
  foreign cards, a merchant will need to turn off AVS validation.
- EMV transactions take slightly longer than a swipe transaction due to the EMV chip
  communication.
- Integrating with EMV transactions is more work but provides much more security and
  reduces fraud.
- Set HTTP request method to POST and use /payment route
- Make sure username and password are in base-64 encryption in the Authorization header
  field
- Cash transactions are for reporting and reconciliation only.
- Check transactions are for reporting purposes only and require manual deposit.
- Before making ACH charges, you need to sign into your account and activate the ACH.COM
  app.
- Expect HTTP 201 code for successful payment.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- An AuthOnly transaction must be followed by a Sale Completion transaction, otherwise,
  the AuthOnly transaction will be removed after 7 days.
- Any AuthOnly transaction must be followed by a Sale Completion transaction.
- Only positive amount adjustments are allowed when using PUT.
- When a transaction has been settled you can make a partial refund by making a new
  transaction on the same credit card with a Negative Amount.
- If you want the refund to associate with a previous transaction, you can pass in
  the `paymentToken` returned in the original transaction.
- A successful response returns a 202 Accepted Response Code
- Transactions are divided into separate batches based on their tender type.
- Unlike the endpoints in Checkout API, the Bin API uses a JSON Web Token as a Bearer
  Token to authenticate.
- This API requires setup of connected app in MX Merchant
- To activate certain functionality through the API the app will need to be activated
  for each account in MXISO/Agent or MX Merchant.
- Response returns 201 Created
- Allows credit card payments
- Allows ACH payments
- Once settled, transaction data will sync to QuickBooks within 24 hours along with
  all customer and invoice data.
- Payment data, once settled, will sync within 24 hours along with customer and invoice
  data.
- Only 1 event can be set up at a time through the API.
- Requires setup of connected app in api
- Payment links should not be confused with integrated online shopping carts.
- We added extra security so payment links are more protected against bots and attacks
  that spam credit card numbers, which can damage the merchant's account.
- The API does not have a rate-limit that focuses on a specific limit on the number
  of requests in a given time-frame.
- Excessive volume, resulting in several hundred simultaneous open connections, or
  excessive burst requests, would result in throttling of traffic from a client and
  then shunning if the volume continues.
- By default, we allow 30 declines per day when using our payment API.
- Link2pay/paymentlinks allow 100 requests per 5 minute Interval.
- The first step to use this API is having a merchant account, sign-in credentials
  for the Web App, and API credentials.
- Point all API URLs to Production by removing 'sandbox' on the url link and keep
  everything the same on your request.
- In addition to the key and secret, you will need the MerchantId listed when making
  an API call such as making a payment.
- Make sure you deactivate your old credit card payment plugin if you had one.
- Ensure to check the API Rate Limits before making requests.
- The Tender type and Presence type will determine the fields available to process
  the payment.
- All fields in the Advanced section are optional.
- Customer spend profiles are updated nightly to reflect any change in customer status.
- MX™ Merchant is able to accept credit cards not issued in the U.S.
- Keyed transactions allow for a simple integration and don't require any equipment.
- Higher processing fees may apply due to the riskiness of keyed transactions.
- Swipe transactions are quick and easy from a customer experience standpoint.
- Sandbox environment will approve all cards as long as they are in the correct credit
  card format.
- EMV transactions may take slightly longer than swipe transactions due to authentication.
- You should expect to receive an HTTP 201 code for the response if the payment posted
  correctly, and the status field should set to Approved.
- Cash transactions are simply for reporting and reconciliation only.
- Merchants need to manually deposit cash into their bank account.
- Check transactions are simply for reporting purposes only, this means the merchant
  is still required to manually deposit the checks in order for the funds to be deposited
  into their account.
- Expect to receive an HTTP 201 code for the response if the payment posted correctly,
  and the status field should set to Approved.
- Any AuthOnly transaction must be followed by a Sale Completion transaction, otherwise,
  the AuthOnly transaction will be removed after 7 days.
- Any AuthOnly transaction must be followed by a Sale Completion transaction. Otherwise,
  the AuthOnly transaction will be removed after 7 days.
- Only positive amount adjustments are allowed when using the PUT /payment route.
- Once the transaction has been settled you cannot make a change to it.
- A new transaction must be made on the same credit card with a Negative Amount for
  partial refunds.
- If the payment has not been settled it will void the payment.
- If the payment is settled, it will create a new transaction and refund the same
  amount.
- The MX Retail utilizes the catalogId more than any other API.
- Additional functionality is broken out into what we refer to as apps. To activate
  certain functionality through the API the app will need to be activated for each
  account in MXISO/Agent or MX Merchant.
- Response 201 Created
- Default terms will appear each time a new invoice is created.
- Reminder notifications help inform your customers prior to a scheduled due date
  or after one has passed.
- Some objects may return nulls in deeply nested fields
- Uses a simple POST request for payment processing.
- MX™ QuickBooks Sync is for use with QuickBooks Online and not QuickBooks POS, Desktop,
  or Enterprise.
- Only historical months containing payments or invoices are made available to select
  for synchronization.
- Syncing prior months may take several hours.
- Uses OAuth2 authentication
- Extra security has been added to protect payment links against bots and attacks.
- Please refer to the API Reference for detailed endpoint information.
- There is also no limit on the total amount of requests you may make against the
  API over a given time period.
- OAuth requests cannot be completed with a username and password.
- Supports both XML and JSON formats
- This API can be used by anyone who is interested in online payments.
- Authentication using OAuth 1.0a
- The URL for this request expired after 30 days.
- To start using recurring payments and invoices, you must first activate the Invoice
  App located in the Apps section of the MX Merchant portal.
- URL for this request expired after 30 days.
- Client-defined custom fields must be set up prior to use.
- Base64 encoded image (must be no larger than 120 x 120 pixels)
- You can only update customers' billing information and expiration dates. You cannot
  edit the card number.
- Use the token returned to make payments.
- Defaults for transactionTypeId, cardTypeId, and recordCount are 0.
- Query parameters include merchantId, dateRange, transactionType, and status.
- ACH App Activation Required — You'll need to activate the ACH App if you want to
  see these reports
- Defaults to 0 for monthlyLimitDebit, monthlyLimitCredit, debitAmount, creditAmount,
  debitCount, creditCount, transactionCount, and Id
- Defaults to true for IsCanceled, IsCompleted, and IsFaulted
- Defaults to 0 for amount, debitAmount, creditAmount, transactionCount, Id.
- IsCanceled, IsCompleted, IsFaulted defaults to true.
- For notifications from Link2Pay sources, add a dash and the name of the payment
  link after Link2Pay in the sources field.
- Uses OAuth2 authentication.
- Note that you'll need to get a new token each time you make a call.
- 'Developer App Required: The developer app needs to be activated prior to creating
  new API Keys.'
- Uses OAuth2 Bearer token for authentication
- Updated about 5 years ago
- Defaults to 0 for recordCount and totalRecords
- Transaction amount defaults to 0
- Defaults to 10 for pageSize
- MX BIN Lookup application must be activated in order to use this feature.
- JWT will expire in 24 hours.
- 'IMPORTANT- ensure that authorization: basic {base64 encoded value:secret} is passed
  in the headers as a key-value pair when authenticating with the consumer key and
  secret!!'
- Uses OAuth2
- Uses OAuth 1.0a for authentication
- Requires OAuth2 credentials
- The payment amount must not be 0.
- Defaults to 0 for id, 0 for merchantId, true for isDuplicate, hasContract, cardPresent,
  and taxExempt.
errors:
- '400 Bad Request: Check the request parameters and their values.'
- '401 Unauthorized: Ensure valid authentication credentials are provided.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Approved Status: Use this test card number `4100000000000001` with amount **less
  than $10**'
- 'Declined Status: Use this test card number `4100000000000001` with amount **more
  than $10**'
- 'Incorrect Number: Use this test card number `1232424242424242`'
- 'Invalid Expiry Month: Use invalid month e.g. 13'
- 'Invalid Expiry Year: Use the year in the past e.g. 1980'
- 'Invalid CVV: Use two digit number e.g. 88'
- '201 Created: Successfully created the card account.'
- 'HTTP 201: Payment posted correctly and status is Approved.'
- 'HTTP 201: Payment posted correctly and status field set to Approved'
- 'HTTP 201: Payment posted correctly'
- Status field should be set to Approved
- '201 Response: Indicates successful creation of a payment.'
- '401 Unauthorized: Check authorization details.'
- '201 Response: Indicates successful processing of the request.'
- '201 Created: Initial Payment Response'
- '400 Bad Request: Check payload format or values'
- HTTP 204
- HTTP 201 Created
- '200 OK: Successful request'
- '201 Created: Resource created successfully'
- '400 Bad Request: Invalid request format'
- 'InvalidCredentials: Invalid username or password. Please try again.'
- 'Unauthorized: Unauthorized'
- 'ValidationError: merchantId required'
- 'ValidationError: Must specify valid information for parsing in the string.'
- 'ValidationError: Incorrect zipcode format'
- '400 Bad Request: The server cannot or will not process the request due to something
  that is perceived to be a client error'
- '401 Unauthorized: The request has not been applied because it lacks valid authentication
  credentials for the target resource.'
- '403 Forbidden: The server understood the request but refuses to authorize it'
- '404 Not Found: The server could not find what was requested.'
- '405 Method Not Allowed: The request method is known by the server but is not supported
  by the target resource.'
- '406 Not Acceptable: The server cannot produce a response matching the list of acceptable
  values defined in the request''s proactive content negotiation headers.'
- '422 Unprocessable Entity: The server understands the content type of the request
  entity, and the syntax of the request entity is correct, but it was unable to process
  the contained instructions.'
- '503 Service Unavailable: The server is not ready to handle the request.'
- '500 Internal Server Error: The server encountered an error while processing your
  request and failed.'
- '0: Approved or completed successfully'
- '1: Refer to card issuer'
- '3: Invalid merchant'
- '4: Capture card'
- '5: Do not honor'
- '12: Invalid transaction'
- '13: Invalid amount'
- '14: Invalid card number'
- '401: Decline for AVS or CID mismatch'
- 'Approved Status: Use this test card number `4100000000000001` with amount less
  than $10'
- 'Declined Status: Use this test card number `4100000000000001` with amount more
  than $10'
- HTTP 201 code for successful payment posting.
- 'HTTP 201: Payment posted correctly.'
- Status field set to Approved.
- '401 Unauthorized: Check your authentication details'
- 'Status: 401 Unauthorized: Invalid Authorization Header'
- 'HTTP 204: Indicates successful deletion'
- '400 Bad Request: response status code indicates that the server cannot or will
  not process the request due to something that is perceived to be a client error'
- '401 Unauthorized: client error status response code indicates that the request
  has not been applied because it lacks valid authentication credentials for the target
  resource.'
- '403 Forbidden: client error status response code indicates that the server understood
  the request but refuses to authorize it'
- '404 Not Found: standard response code to indicate that communication with a given
  server was successful, but the server could not find what was requested.'
- '405 Method Not Allowed: response status code indicates that the request method
  is known by the server but is not supported by the target resource.'
- '406 Not Acceptable: client error response code indicates that the server cannot
  produce a response matching the list of acceptable values defined in the request''s
  proactive content negotiation headers, and that the server is unwilling to supply
  a default representation.'
- '422 Unprocessable Entity: response status code indicates that the server understands
  the content type of the request entity, and the syntax of the request entity is
  correct, but it was unable to process the contained instructions.'
- '503 Service Unavailable: server error response code indicates that the server is
  not ready to handle the request.'
- '6: Response Timedout'
- '7: Duplicate Request'
- '8: Honor with ID'
- '10: Partial Approval'
- '15: Invalid issuer'
- '19: Re-enter transaction'
- '30: Format error'
- '31: Bank not supported by switch'
- '33: Expired Card'
- '34: Suspected fraud'
- '35: Card Acceptor contact Acquirer'
- '36: Restricted Card'
- '37: Card Acceptor call Acquirer security'
- '38: Allowable PIN tries exceeded'
- '39: No credit Account'
- '40: Requested function not supported'
- '41: Lost card'
- '43: Stolen card'
- '51: Insufficient funds/over credit limit'
- '53: No savings Account'
- '54: Expired card'
- '55: Invalid PIN'
- '56: No Card record'
- '57: Transaction not permitted to issuer/cardholder'
- '58: Transaction not permitted to acquirer/terminal'
- '59: Suspected fraud'
- '60: Card acceptor contact Acquirer'
- '61: Exceeds withdrawal amount limit'
- '62: Restricted card'
- '63: Security violation'
- '64: Original amount incorrect'
- '65: Exceeds withdrawal count limit'
- '68: Response received too late'
- '70: Contact Card Issuer'
- '71: PIN Not Changed'
- '75: Allowable number of PIN tries exceeded'
- '76: Invalid/nonexistent to Account specified'
- '77: Invalid/nonexistent from Account specified'
- '78: Invalid/nonexistent account specified (general)'
- '81: Domestic Debit Transaction Not Allowed (Regional use only)'
- '84: Invalid Authorization Life Cycle'
- '85: Not declined Valid for all zero amount transactions'
- '86: PIN Validation not possible'
- '87: Purchase Amount Only, No Cash Back Allowed'
- '88: Cryptographic failure'
- '89: Unacceptable PIN Transaction Declined Retry'
- '91: Authorization Platform or issuer system inoperative'
- '92: Unable to route transaction'
- '93: Transaction cannot be completed, violation of law'
- '94: Duplicate transmission detected'
- '96: System error'
- '99: PPS Decline'
- '002: Approved for a lesser amount than what was requested'
- '101: Referral'
- '102: Declined'
- '104: Terminal not found'
- '105: File is temporarily unavailable'
- '106: Amount exceeds user limit'
- '107: Service not allowed'
- '108: Host Key error'
- '109: Approved (not captured)'
- '110: AVS Request Accepted'
- '111: Invalid Term ID'
- '112: Please retry'
- '113: CVV2 Declined'
- '114: Reversal rejected cannot parse 400 message'
- '115: Enter lesser amount'
- '116: Cash Back amount greater than total Transaction amount'
- '117: Communications link to debit/EBT network gateway is down'
- '118: Debit/EBT network gateway cannot get through to the Issuer'
- '119: Debit/EBT network gateway cannot route card based on Merchant Entitlement'
- '120: Debit/EBT transaction count exceeds pre-determined limit in specified time'
- '121: Resubmission of transaction violates debit/EBT network frequence'
- '122: Reversal outside window'
- '123: Balance Inquiry'
- '124: Cannot accept Close batch message'
- '125: Close batch successful'
- '126: Deposit Inquiry'
- '127: Closed batch has Out of balance condition'
- '128: Invalid Batch number in transaction'
- '129: Invalid Batch number in Close batch message'
- '130: Invalid Retail Terms'
- '131: Invalid Transaction Code'
- '132: Invalid Transaction Code in Close batch message'
- '133: Invalid Transaction Type'
- '134: Cannot find item to Void'
- '135: Invalid Expiration Date'
- '136: Certificate Not Recognized'
- '137: OS Version Not Supported'
- '138: Original Transaction Not Found'
- '201: Internal Server Error'
- '202: Invalid Message Format Refer to the corresponding chapter in this document
  for details on formatting Card Rate and Merchant Rate request messages'
- '203: Unknown Acquirer or Merchant The value provided for Merchant ID or the Acquirer
  ID is unrecognised by DHS. Verify the format of these fields'
- '204: Unrecognised Card – DCC not available'
- '205: Socket connection timed out'
- '206: Unsupported card type. FEXCO Dynamic Currency Conversion (DCC) is supported
  only with VISA and MasterCard credit cards'
- '207: Card ID and Foreign Currency are both invalid'
- '208: Invalid Base Amount The value provided for the Base Amount field is unrecognised
  by DHS. Verify the format of this field'
- '209: Invalid Reference Number The value provided for the Reference Number t field
  is unrecognised by DHS. Verify the format of this field'
- '210: Invalid Merchant ID The value provided for the Base Amount field is unrecognised
  by DHS. Verify the format of this field'
- '211: Invalid Acquirer ID The value provided for the Acquirer ID field is unrecognised
  by DHS. Verify the format of this field'
- '212: Invalid Foreign Currency Code The value provided for the Foreign Currency
  Code is unrecognised by DHS. Verify the format of this field is correct. Also note
  that not all currencies are available for DCC'
- '213: Invalid Card ID The value provided for the Card ID field is unrecognised by
  DHS. Verify the format of this field'
- '214: Invalid Base Currency The value provided for the Base Currency field is unrecognised
  by DHS. Verify the format of this field'
- '215: Domestic Card, DCC not available The Merchant currency is the same as the
  currency of the cardholders card and therefore, DCC does not apply'
- '216: Foreign Card, DCC not available DCC is not supported for the particular currency
  of the card'
- '300: Declined for Loss Prevention'
- '302: Invalid Merchant Status'
- '303: In Progress'
- '400: Reversal Success'
- '402: PIN change/Unblock failed'
- '403: New PIN not accepted'
- '404: Decline'
- '405: Network unavailable'
- '406: System up'
- '407: Soft down'
- '408: System down'
- 'ValidationError: Validation error happened'
- '201: Created'
- '200: Successful operation'
- '401 Unauthorized: Recheck authentication credentials.'
- '200: Successful request'
- '200: Success'
- 'URL Expired: The URL for this request expired after 30 days.'
- '400: Bad Request'
auth_info:
  mentioned_objects:
  - MerchantId
  - OAuth 1.0a
client:
  base_url: https://sandbox.api.mxmerchant.com
  auth:
    type: basic
source_metadata: null
