resources:
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /services/commons/apis/users
    method: GET
    data_selector: records
- name: courses
  endpoint:
    path: /services/commons/apis/courses
    method: GET
    data_selector: records
- name: Access Tokens
  endpoint:
    path: /services/canvas/resources/access_tokens
    method: GET
- name: Accounts
  endpoint:
    path: /services/canvas/resources/accounts
    method: GET
- name: Users
  endpoint:
    path: /services/canvas/resources/users
    method: GET
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
- name: accounts
  endpoint:
    path: /services/canvas/resources/accounts
    method: GET
- name: courses
  endpoint:
    path: /services/canvas/resources/courses
    method: GET
- name: users
  endpoint:
    path: /services/canvas/resources/users
    method: GET
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: users
  endpoint:
    path: /services/commons/apis/users
    method: GET
    data_selector: records
- name: courses
  endpoint:
    path: /services/commons/apis/courses
    method: GET
    data_selector: records
- name: enrollments
  endpoint:
    path: /services/catalog/openapi/enrollments
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
- name: access_tokens
  endpoint:
    path: /services/canvas/resources/access_tokens
    method: GET
- name: users
  endpoint:
    path: /services/canvas/resources/users
    method: GET
- name: courses
  endpoint:
    path: /services/canvas/resources/courses
    method: GET
- name: Outcomes
  endpoint:
    path: /services/canvas/resources/outcomes
    method: GET
- name: group_categories
  endpoint:
    path: /services/canvas/resources/group_categories
    method: GET
- name: outcomes
  endpoint:
    path: /services/canvas/resources/outcomes
    method: GET
    data_selector: records
- name: Accounts
  endpoint:
    path: /services/canvas/resources/accounts
    method: GET
- name: Courses
  endpoint:
    path: /services/canvas/resources/courses
    method: GET
- name: Users
  endpoint:
    path: /services/canvas/resources/users
    method: GET
- name: Group Categories
  endpoint:
    path: /services/canvas/resources/group_categories
    method: GET
- name: users
  endpoint:
    path: /services/canvas/resources/users
    method: GET
- name: courses
  endpoint:
    path: /services/canvas/resources/courses
    method: GET
- name: analytics
  endpoint:
    path: /services/catalog/openapi/analytics
    method: GET
- name: bulk_enrollments
  endpoint:
    path: /services/catalog/openapi/bulk_enrollments
    method: GET
- name: catalogs
  endpoint:
    path: /services/catalog/openapi/catalogs
    method: GET
- name: certificates
  endpoint:
    path: /services/catalog/openapi/certificates
    method: GET
- name: completed_certificates
  endpoint:
    path: /services/catalog/openapi/completed_certificates
    method: GET
- name: courses
  endpoint:
    path: /services/catalog/openapi/courses
    method: GET
- name: email_domain_set
  endpoint:
    path: /services/catalog/openapi/email_domain_set
    method: GET
- name: enrollments
  endpoint:
    path: /services/catalog/openapi/enrollments
    method: GET
- name: orders
  endpoint:
    path: /services/catalog/openapi/orders
    method: GET
- name: programs
  endpoint:
    path: /services/catalog/openapi/programs
    method: GET
- name: progresses
  endpoint:
    path: /services/catalog/openapi/progresses
    method: GET
- name: tags
  endpoint:
    path: /services/catalog/openapi/tags
    method: GET
- name: user_registrations
  endpoint:
    path: /services/catalog/openapi/user_registrations
    method: GET
- name: users
  endpoint:
    path: /services/catalog/openapi/users
    method: GET
- name: waitlist_applicants
  endpoint:
    path: /services/catalog/openapi/waitlist_applicants
    method: GET
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: accounts
  endpoint:
    path: /services/canvas/resources/accounts
    method: GET
- name: courses
  endpoint:
    path: /services/canvas/resources/courses
    method: GET
- name: users
  endpoint:
    path: /services/canvas/resources/users
    method: GET
- name: applicants
  endpoint:
    path: /api/v1/applicants
    method: GET
- name: orders
  endpoint:
    path: /api/v1/orders
    method: GET
- name: user_registrations
  endpoint:
    path: /api/v1/user_registrations
    method: GET
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
- name: tags
  endpoint:
    path: /api/v1/tags
    method: GET
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: progresses
  endpoint:
    path: /api/v1/progresses
    method: GET
- name: applicants
  endpoint:
    path: /api/v1/applicants
    method: GET
- name: orders
  endpoint:
    path: /api/v1/orders
    method: GET
- name: user_registrations
  endpoint:
    path: /api/v1/user_registrations
    method: GET
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
- name: tags
  endpoint:
    path: /api/v1/tags
    method: GET
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: applicants
  endpoint:
    path: /api/v1/applicants
    method: GET
    data_selector: applicants
    params: {}
- name: orders
  endpoint:
    path: /api/v1/orders
    method: GET
    data_selector: orders
    params: {}
- name: user_registrations
  endpoint:
    path: /api/v1/user_registrations
    method: GET
    data_selector: user_registrations
    params: {}
- name: bulk_enrollments
  endpoint:
    path: /api/v1/order_items/history/bulk_enrollments
    method: GET
    data_selector: bulk_enrollments
    params: {}
- name: applicants
  endpoint:
    path: /api/v1/applicants
    method: GET
    data_selector: applicants
- name: orders
  endpoint:
    path: /api/v1/orders
    method: GET
    data_selector: orders
- name: user_registrations
  endpoint:
    path: /api/v1/user_registrations
    method: GET
    data_selector: user_registrations
- name: bulk_enrollments
  endpoint:
    path: /api/v1/order_items/history/bulk_enrollments
    method: GET
    data_selector: bulk_enrollments
- name: programs
  endpoint:
    path: /programs
    method: GET
    data_selector: programs
- name: update_program
  endpoint:
    path: /programs/{id}
    method: PUT
    data_selector: program
- name: delete_program
  endpoint:
    path: /programs/{id}
    method: DELETE
- name: programs
  endpoint:
    path: /programs
    method: GET
    data_selector: programs
    params: {}
- name: update_program
  endpoint:
    path: /programs/{id}
    method: PUT
    data_selector: program
    params: {}
- name: delete_program
  endpoint:
    path: /programs/{id}
    method: DELETE
    data_selector: program
    params: {}
- name: programs
  endpoint:
    path: /api/v1/programs
    method: POST
    data_selector: program
    params: {}
- name: email_domain_sets
  endpoint:
    path: /api/v1/email_domain_sets/{id}
    method: GET
    data_selector: email_domain_set
    params:
      id: integer
- name: program
  endpoint:
    path: /programs
    method: POST
    data_selector: program
    params: {}
- name: email_domain_set
  endpoint:
    path: /email_domain_sets/{id}
    method: GET
    data_selector: ''
    params: {}
- name: email_domain_sets
  endpoint:
    path: /email_domain_sets
    method: GET
    data_selector: email_domain_sets
    params: {}
- name: email_domain_set_promotions
  endpoint:
    path: /email_domain_sets/{id}/promotions
    method: GET
    data_selector: promotions
    params: {}
- name: courses
  endpoint:
    path: /courses
    method: GET
    data_selector: courses
    params: {}
- name: update_course_skus
  endpoint:
    path: /courses/update_skus
    method: PUT
    data_selector: progress
    params: {}
- name: email_domain_set
  endpoint:
    path: /api/v1/email_domain_sets/{id}
    method: PUT
    data_selector: email_domain_set
- name: email_domain_set_promotions
  endpoint:
    path: /api/v1/email_domain_sets/{id}/promotions
    method: GET
    data_selector: promotions
- name: list_email_domain_sets
  endpoint:
    path: /api/v1/email_domain_sets
    method: GET
    data_selector: email_domain_sets
- name: courses_archived
  endpoint:
    path: /api/v1/courses/archived
    method: PUT
    data_selector: product_action
- name: list_courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
- name: create_course
  endpoint:
    path: /api/v1/courses
    method: POST
    data_selector: course
- name: update_course_skus
  endpoint:
    path: /api/v1/courses/update_skus
    method: PUT
    data_selector: attachment
- name: get_specific_course
  endpoint:
    path: /api/v1/courses/{id}
    method: GET
    data_selector: ''
- name: courses
  endpoint:
    path: /services/canvas/resources/courses
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /services/canvas/resources/users
    method: GET
    data_selector: records
- name: bulk_enrollments
  endpoint:
    path: /services/catalog/openapi/bulk_enrollments
    method: GET
- name: catalogs
  endpoint:
    path: /services/catalog/openapi/catalogs
    method: GET
- name: certificates
  endpoint:
    path: /services/catalog/openapi/certificates
    method: GET
- name: completed_certificates
  endpoint:
    path: /services/catalog/openapi/completed_certificates
    method: GET
- name: courses
  endpoint:
    path: /services/catalog/openapi/courses
    method: GET
- name: email_domain_set
  endpoint:
    path: /services/catalog/openapi/email_domain_set
    method: GET
- name: enrollments
  endpoint:
    path: /services/catalog/openapi/enrollments
    method: GET
- name: orders
  endpoint:
    path: /services/catalog/openapi/orders
    method: GET
- name: programs
  endpoint:
    path: /services/catalog/openapi/programs
    method: GET
- name: progresses
  endpoint:
    path: /services/catalog/openapi/progresses
    method: GET
- name: tags
  endpoint:
    path: /services/catalog/openapi/tags
    method: GET
- name: user_registrations
  endpoint:
    path: /services/catalog/openapi/user_registrations
    method: GET
- name: users
  endpoint:
    path: /services/catalog/openapi/users
    method: GET
- name: waitlist_applicants
  endpoint:
    path: /services/catalog/openapi/waitlist_applicants
    method: GET
- name: access_tokens
  endpoint:
    path: /services/canvas/resources/access_tokens
    method: GET
- name: accounts
  endpoint:
    path: /services/canvas/resources/accounts
    method: GET
- name: users
  endpoint:
    path: /services/canvas/resources/users
    method: GET
- name: create_issuer
  endpoint:
    path: /v2/issuers
    method: POST
- name: define_badgeclass
  endpoint:
    path: /v2/issuers/:issuer_id/badgeclasses
    method: POST
- name: issue_assertion
  endpoint:
    path: /v2/badgeclasses/:badgeclass_id/assertions
    method: POST
- name: events
  endpoint:
    path: /services/data/vXX.X/events
    method: GET
    data_selector: records
    params: {}
- name: topics
  endpoint:
    path: /services/data/vXX.X/topics
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
- name: issuer
  endpoint:
    path: /v2/issuers
    method: POST
- name: badgeclass
  endpoint:
    path: /v2/issuers/:issuer_id/badgeclasses
    method: POST
- name: assertion
  endpoint:
    path: /v2/badgeclasses/:badgeclass_id/assertions
    method: POST
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
    params: {}
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: data
    params: {}
- name: Accounts
  endpoint:
    path: /services/canvas/resources/accounts
    method: GET
- name: Users
  endpoint:
    path: /services/canvas/resources/users
    method: GET
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: issuer_staff
  endpoint:
    path: /v2/issuers/{idOrEntityId}/staff
    method: PUT
    data_selector: result
    params: {}
- name: badge_user_profile
  endpoint:
    path: /v2/users/{idOrEntityId}
    method: GET
    data_selector: result
    params: {}
- name: self_badge_user_profile
  endpoint:
    path: /v2/users/self
    method: GET
    data_selector: result
    params: {}
- name: issuer
  endpoint:
    path: /v2/issuers/{idOrEntityId}
    method: GET
    data_selector: result
    params:
      include_staff: 'true'
- name: badgeclass
  endpoint:
    path: /v2/badgeclasses/{idOrEntityId}
    method: GET
    data_selector: result
    params:
      include_archived: 'false'
- name: update_staff_member_role
  endpoint:
    path: /v2/issuers/{idOrEntityId}/staff
    method: PUT
    data_selector: result
    params: {}
- name: get_single_badgeuser_profile
  endpoint:
    path: /v2/users/{idOrEntityId}
    method: GET
    data_selector: result
    params: {}
- name: update_badgeuser
  endpoint:
    path: /v2/users/{idOrEntityId}
    method: PUT
    data_selector: result
    params: {}
- name: get_own_badgeuser_profile
  endpoint:
    path: /v2/users/self
    method: GET
    data_selector: result
    params: {}
- name: update_own_badgeuser
  endpoint:
    path: /v2/users/self
    method: PUT
    data_selector: result
    params: {}
- name: issuer
  endpoint:
    path: /v2/issuers/{idOrEntityId}
    method: GET
    data_selector: result
- name: badgeclass
  endpoint:
    path: /v2/badgeclasses/{idOrEntityId}
    method: GET
    data_selector: result
- name: issuer
  endpoint:
    path: /v2/issuers/ref/{issuerOpenBadgeIdBase64}
    method: PATCH
    data_selector: result
    params: {}
- name: badgeclass
  endpoint:
    path: /v2/badgeclasses/{idOrEntityId}
    method: GET
    data_selector: result
    params:
      include_archived: 'false'
- name: issuer
  endpoint:
    path: /v2/issuers/ref/{issuerOpenBadgeIdBase64}
    method: PATCH
    data_selector: result
    params:
      include_staff: 'true'
- name: badge_class
  endpoint:
    path: /v2/badgeclasses/{idOrEntityId}
    method: GET
    data_selector: result
    params:
      include_archived: 'false'
- name: issuer
  endpoint:
    path: /v2/issuers/ref/{issuerOpenBadgeIdBase64}
    method: PATCH
    data_selector: result
    params: {}
- name: badgeclass
  endpoint:
    path: /v2/badgeclasses/{idOrEntityId}
    method: GET
    data_selector: result
    params:
      include_archived: 'false'
- name: issuer
  endpoint:
    path: /v2/issuers/ref/{issuerOpenBadgeIdBase64}
    method: PATCH
    data_selector: result
    params: {}
- name: badgeclass
  endpoint:
    path: /v2/badgeclasses/{idOrEntityId}
    method: GET
    data_selector: result
    params: {}
- name: backpack_collection
  endpoint:
    path: /v2/backpack/collections/{idOrEntityId}
    method: GET
    data_selector: result
    params: {}
- name: issuer
  endpoint:
    path: /v2/issuers/ref/{issuerOpenBadgeIdBase64}
    method: PATCH
    data_selector: result
    params: {}
- name: badgeClass
  endpoint:
    path: /v2/badgeclasses/{idOrEntityId}
    method: GET
    data_selector: result
    params: {}
- name: badgeclass
  endpoint:
    path: /v2/badgeclasses/ref/{ref}
    method: GET
    data_selector: result
- name: collection
  endpoint:
    path: /v2/backpack/collections
    method: POST
    data_selector: result
- name: issuers
  endpoint:
    path: /v2/issuers/ref/{issuerOpenBadgeIdBase64}
    method: PATCH
    data_selector: result
- name: badgeclasses
  endpoint:
    path: /v2/badgeclasses/{idOrEntityId}
    method: GET
    data_selector: result
- name: backpack_collections
  endpoint:
    path: /v2/backpack/collections/{idOrEntityId}
    method: GET
    data_selector: result
- name: badgeclass
  endpoint:
    path: /v2/badgeclasses/{idOrEntityId}
    method: DELETE
- name: badgeclass_ref
  endpoint:
    path: /v2/badgeclasses/ref/{ref}
    method: GET
- name: backpack_collections
  endpoint:
    path: /v2/backpack/collections
    method: POST
- name: backpack_collection
  endpoint:
    path: /v2/backpack/collections/{idOrEntityId}
    method: DELETE
- name: assertion
  endpoint:
    path: /v2/backpack/assertions/{idOrEntityId}
    method: GET
    data_selector: result
- name: update_assertion
  endpoint:
    path: /v2/backpack/assertions/{idOrEntityId}
    method: PUT
    data_selector: result
- name: remove_assertion
  endpoint:
    path: /v2/backpack/assertions/{idOrEntityId}
    method: DELETE
- name: get_single_assertion
  endpoint:
    path: /v2/assertions/{idOrEntityId}
    method: GET
    data_selector: result
- name: update_single_assertion
  endpoint:
    path: /v2/assertions/{idOrEntityId}
    method: PUT
- name: assertion
  endpoint:
    path: /v2/backpack/assertions/{idOrEntityId}
    method: GET
    data_selector: result
    params: {}
- name: update_assertion
  endpoint:
    path: /v2/backpack/assertions/{idOrEntityId}
    method: PUT
    data_selector: result
    params: {}
- name: delete_assertion
  endpoint:
    path: /v2/backpack/assertions/{idOrEntityId}
    method: DELETE
    data_selector: result
    params: {}
- name: assertion
  endpoint:
    path: /v2/assertions/{idOrEntityId}
    method: DELETE
    data_selector: result
    params: {}
- name: list_assertions
  endpoint:
    path: /v2/{scope}/{idOrEntityId}/assertions
    method: GET
    data_selector: result
    params:
      include_expired: 'false'
      include_revoked: 'false'
- name: issue_assertion
  endpoint:
    path: /v2/{scope}/{idOrEntityId}/assertions
    method: POST
    data_selector: result
    params: {}
- name: issuers
  endpoint:
    path: /v2/issuers
    method: GET
    data_selector: result
    params:
      include_staff: 'true'
- name: assertion
  endpoint:
    path: /v2/assertions/{idOrEntityId}
    method: DELETE
    data_selector: result
    params: {}
- name: list_of_assertions
  endpoint:
    path: /v2/{scope}/{idOrEntityId}/assertions
    method: GET
    data_selector: result
    params: {}
- name: issue_assertion
  endpoint:
    path: /v2/{scope}/{idOrEntityId}/assertions
    method: POST
    data_selector: result
    params: {}
- name: list_of_issuers
  endpoint:
    path: /v2/issuers
    method: GET
    data_selector: result
    params: {}
- name: issuers
  endpoint:
    path: /v2/issuers
    method: POST
    data_selector: result
- name: staff_invitations
  endpoint:
    path: /v2/issuers/{idOrEntityId}/staff/invitations
    method: POST
    data_selector: result
- name: badge_classes
  endpoint:
    path: /v2/issuers/{idOrEntityId}/badgeclasses
    method: GET
    data_selector: result
- name: badgeclasses
  endpoint:
    path: /v2/badgeclasses
    method: GET
    data_selector: result
- name: claim_codes
  endpoint:
    path: /v2/badgeclasses/{idOrEntityId}/claim-codes
    method: GET
    data_selector: result
- name: issuers
  endpoint:
    path: /v2/issuers
    method: POST
    data_selector: result
- name: staff_invitations
  endpoint:
    path: /v2/issuers/{idOrEntityId}/staff/invitations
    method: POST
    data_selector: result
- name: badge_classes
  endpoint:
    path: /v2/issuers/{idOrEntityId}/badgeclasses
    method: GET
    data_selector: result
- name: create_badge_class
  endpoint:
    path: /v2/issuers/{idOrEntityId}/badgeclasses
    method: POST
    data_selector: result
- name: badgeclasses
  endpoint:
    path: /v2/badgeclasses
    method: GET
    data_selector: result
    params:
      include_archived: false
- name: claim_codes
  endpoint:
    path: /v2/badgeclasses/{idOrEntityId}/claim-codes
    method: GET
    data_selector: result
    params: {}
- name: badgeclass_reactivate
  endpoint:
    path: /v2/badgeclasses/reactivate/{idOrEntityId}
    method: POST
- name: badgeclass_reactivate_ref
  endpoint:
    path: /v2/badgeclasses/reactivate/ref/{ref}
    method: POST
- name: backpack_import
  endpoint:
    path: /v2/backpack/import
    method: POST
- name: backpack_collections
  endpoint:
    path: /v2/backpack/collections
    method: GET
- name: backpack_collections_create
  endpoint:
    path: /v2/backpack/collections
    method: POST
- name: assertions_revoke
  endpoint:
    path: /v2/assertions/revoke
    method: POST
- name: badgeclass_claim_code_enable
  endpoint:
    path: /v2/badgeclasses/{idOrEntityId}/claim-codes/{claimCode}/enable
    method: PATCH
- name: badgeclass_reactivate_by_id
  endpoint:
    path: /v2/badgeclasses/reactivate/{idOrEntityId}
    method: POST
- name: badgeclass_reactivate_by_ref
  endpoint:
    path: /v2/badgeclasses/reactivate/ref/{ref}
    method: POST
- name: backpack_import
  endpoint:
    path: /v2/backpack/import
    method: POST
- name: backpack_collections
  endpoint:
    path: /v2/backpack/collections
    method: GET
- name: backpack_collections_create
  endpoint:
    path: /v2/backpack/collections
    method: POST
- name: assertions_revoke
  endpoint:
    path: /v2/assertions/revoke
    method: POST
- name: badgeclass_claimcode_enable
  endpoint:
    path: /v2/badgeclasses/{idOrEntityId}/claim-codes/{claimCode}/enable
    method: PATCH
- name: badge_classes_claim_codes_disable
  endpoint:
    path: /v2/badgeclasses/{idOrEntityId}/claim-codes/{claimCode}/disable
    method: PATCH
- name: organizations
  endpoint:
    path: /v2/organizations
    method: GET
- name: backpack_assertions
  endpoint:
    path: /v2/backpack/assertions
    method: GET
- name: issuers_staff_remove
  endpoint:
    path: /v2/issuers/{idOrEntityId}/staff/{emailBase64}
    method: DELETE
- name: badge_classes_claim_codes_disable
  endpoint:
    path: /v2/badgeclasses/{idOrEntityId}/claim-codes/{claimCode}/disable
    method: PATCH
- name: organizations
  endpoint:
    path: /v2/organizations
    method: GET
- name: backpack_assertions
  endpoint:
    path: /v2/backpack/assertions
    method: GET
- name: issuers_staff_remove
  endpoint:
    path: /v2/issuers/{idOrEntityId}/staff/{emailBase64}
    method: DELETE
- name: users
  endpoint:
    path: /services/canvas/resources/users
    method: GET
    data_selector: records
    params: {}
- name: courses
  endpoint:
    path: /services/canvas/resources/courses
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /services/canvas/resources/accounts
    method: GET
- name: users
  endpoint:
    path: /services/canvas/resources/users
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: courses
  endpoint:
    path: /courses
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: canvas
  endpoint:
    path: /services/dap/canvas
    method: GET
    data_selector: datasets
    params: {}
- name: canvas_logs
  endpoint:
    path: /services/dap/canvas_logs
    method: GET
    data_selector: web_logs
    params: {}
- name: accounts
  endpoint:
    path: /services/canvas/resources/accounts
    method: GET
- name: courses
  endpoint:
    path: /services/canvas/resources/courses
    method: GET
- name: accounts
  endpoint:
    path: /services/canvas/resources/accounts
    method: GET
- name: users
  endpoint:
    path: /services/canvas/resources/users
    method: GET
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: accounts
  endpoint:
    path: /services/accounts
    method: GET
    data_selector: records
- name: courses
  endpoint:
    path: /services/courses
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
    params: {}
- name: actors
  endpoint:
    path: /get/actors
    method: GET
- name: clouds
  endpoint:
    path: /get/clouds
    method: GET
- name: integrations
  endpoint:
    path: /get/integrations
    method: GET
- name: tenants
  endpoint:
    path: /get/tenants
    method: GET
- name: schedules
  endpoint:
    path: /get/schedules
    method: GET
- name: ingestions
  endpoint:
    path: /get/ingestions
    method: GET
- name: actors
  endpoint:
    path: /v2/interop/actors
    method: GET
    data_selector: data
    params: {}
- name: clouds
  endpoint:
    path: /v2/interop/clouds
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /v2/interop/integrations
    method: GET
    data_selector: data
    params: {}
- name: tenants
  endpoint:
    path: /v2/interop/tenants
    method: GET
    data_selector: data
    params: {}
- name: actors
  endpoint:
    path: /v2/interop/actors
    method: GET
    data_selector: data
    params:
      page: 0
      page_size: null
- name: clouds
  endpoint:
    path: /v2/interop/clouds
    method: GET
    data_selector: data
    params:
      page: 0
      page_size: null
- name: integrations
  endpoint:
    path: /v2/interop/integrations
    method: GET
    data_selector: data
    params:
      page: 0
      page_size: null
- name: tenants
  endpoint:
    path: /v2/interop/tenants
    method: GET
    data_selector: data
    params:
      page: 0
      page_size: null
- name: tenant
  endpoint:
    path: /v2/interop/tenant
    method: GET
    data_selector: data
- name: tenant_state
  endpoint:
    path: /v2/interop/tenant/state
    method: GET
    data_selector: data
- name: scoping_schools
  endpoint:
    path: /v2/interop/tenant/scoping/schools
    method: GET
    data_selector: data
- name: scoping_courses
  endpoint:
    path: /v2/interop/tenant/scoping/courses
    method: GET
    data_selector: data
- name: CampaignMember
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: Contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: tenant
  endpoint:
    path: /v2/interop/tenant
    method: GET
    data_selector: data
- name: tenant_state
  endpoint:
    path: /v2/interop/tenant/state
    method: GET
    data_selector: data
- name: scoping_schools
  endpoint:
    path: /v2/interop/tenant/scoping/schools
    method: GET
    data_selector: data
- name: create_scoping_schools
  endpoint:
    path: /v2/interop/tenant/scoping/schools
    method: POST
    data_selector: data
- name: delete_scoping_schools
  endpoint:
    path: /v2/interop/tenant/scoping/schools
    method: DELETE
- name: find_scoping_school
  endpoint:
    path: /v2/interop/tenant/scoping/schools/{id}
    method: GET
    data_selector: data
- name: update_scoping_school
  endpoint:
    path: /v2/interop/tenant/scoping/schools/{id}
    method: PUT
    data_selector: data
- name: list_scoping_courses
  endpoint:
    path: /v2/interop/tenant/scoping/courses
    method: GET
    data_selector: data
- name: create_scoping_courses
  endpoint:
    path: /v2/interop/tenant/scoping/courses
    method: POST
    data_selector: data
- name: delete_scoping_courses
  endpoint:
    path: /v2/interop/tenant/scoping/courses
    method: DELETE
- name: find_scoping_course
  endpoint:
    path: /v2/interop/tenant/scoping/courses/{id}
    method: GET
    data_selector: data
- name: update_scoping_course
  endpoint:
    path: /v2/interop/tenant/scoping/courses/{id}
    method: PUT
    data_selector: data
- name: organizations
  endpoint:
    path: /get-rostering-orgs
    method: GET
- name: tasks
  endpoint:
    path: /get-tasks
    method: GET
- name: Analytics
  endpoint:
    path: /services/canvas/resources/analytics
    method: GET
- name: Assignments
  endpoint:
    path: /services/canvas/resources/assignments
    method: GET
- name: Courses
  endpoint:
    path: /services/canvas/resources/courses
    method: GET
- name: Users
  endpoint:
    path: /services/canvas/resources/users
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: orgs
  endpoint:
    path: /v2/interop/data/rostering/orgs
    method: GET
    data_selector: data
- name: tasks
  endpoint:
    path: /v2/interop/data/tasks
    method: GET
    data_selector: data
- name: tasks_admin
  endpoint:
    path: /v2/interop/data/tasks/admin
    method: GET
    data_selector: data
- name: orgs
  endpoint:
    path: /v2/interop/data/rostering/orgs
    method: GET
    data_selector: data
    params:
      page: 0
      page_size: maximum
- name: tasks
  endpoint:
    path: /v2/interop/data/tasks
    method: GET
    data_selector: data
    params:
      page: 0
      page_size: maximum
- name: tasks_admin
  endpoint:
    path: /v2/interop/data/tasks/admin
    method: GET
    data_selector: data
    params:
      page: 0
      page_size: maximum
- name: tasks_admin_delete
  endpoint:
    path: /v2/interop/data/tasks/admin/{id}
    method: DELETE
    data_selector: No content
- name: lea_orgs
  endpoint:
    path: /v2/interop/data/rostering/leas
    method: GET
    data_selector: data
- name: school_orgs
  endpoint:
    path: /v2/interop/data/rostering/schools
    method: GET
    data_selector: data
- name: org_by_sys_id
  endpoint:
    path: /v2/interop/data/rostering/orgs/{id}
    method: GET
    data_selector: data
- name: org_students
  endpoint:
    path: /v2/interop/data/rostering/orgs/{id}/students
    method: GET
    data_selector: data
- name: org_teachers
  endpoint:
    path: /v2/interop/data/rostering/orgs/{id}/teachers
    method: GET
    data_selector: data
- name: org_courses
  endpoint:
    path: /v2/interop/data/rostering/orgs/{id}/courses
    method: GET
    data_selector: data
- name: org_sections
  endpoint:
    path: /v2/interop/data/rostering/orgs/{id}/sections
    method: GET
    data_selector: data
- name: org_terms
  endpoint:
    path: /v2/interop/data/rostering/orgs/{id}/terms
    method: GET
    data_selector: data
- name: lea_org_by_sys_id
  endpoint:
    path: /v2/interop/data/rostering/leas/{id}
    method: GET
    data_selector: data
- name: persons
  endpoint:
    path: /v2/interop/data/rostering/persons
    method: GET
    data_selector: data
- name: student_persons
  endpoint:
    path: /v2/interop/data/rostering/students
    method: GET
    data_selector: data
- name: teacher_persons
  endpoint:
    path: /v2/interop/data/rostering/teachers
    method: GET
    data_selector: data
- name: person_by_sys_id
  endpoint:
    path: /v2/interop/data/rostering/persons/{id}
    method: GET
    data_selector: data
- name: courses
  endpoint:
    path: /v2/interop/data/rostering/courses
    method: GET
    data_selector: data
- name: course_by_sys_id
  endpoint:
    path: /v2/interop/data/rostering/courses/{id}
    method: GET
    data_selector: data
- name: tasks_admin
  endpoint:
    path: /v2/interop/data/tasks/admin/{id}
    method: DELETE
- name: lea_orgs
  endpoint:
    path: /v2/interop/data/rostering/leas
    method: GET
    data_selector: data
- name: school_orgs
  endpoint:
    path: /v2/interop/data/rostering/schools
    method: GET
    data_selector: data
- name: org_by_sys_id
  endpoint:
    path: /v2/interop/data/rostering/orgs/{id}
    method: GET
    data_selector: data
- name: students_by_org
  endpoint:
    path: /v2/interop/data/rostering/orgs/{id}/students
    method: GET
    data_selector: data
- name: teachers_by_org
  endpoint:
    path: /v2/interop/data/rostering/orgs/{id}/teachers
    method: GET
    data_selector: data
- name: courses_by_org
  endpoint:
    path: /v2/interop/data/rostering/orgs/{id}/courses
    method: GET
    data_selector: data
- name: sections_by_org
  endpoint:
    path: /v2/interop/data/rostering/orgs/{id}/sections
    method: GET
    data_selector: data
- name: terms_by_org
  endpoint:
    path: /v2/interop/data/rostering/orgs/{id}/terms
    method: GET
    data_selector: data
- name: lea_org_by_sys_id
  endpoint:
    path: /v2/interop/data/rostering/leas/{id}
    method: GET
    data_selector: data
- name: persons
  endpoint:
    path: /v2/interop/data/rostering/persons
    method: GET
    data_selector: data
- name: students
  endpoint:
    path: /v2/interop/data/rostering/students
    method: GET
    data_selector: data
- name: teachers
  endpoint:
    path: /v2/interop/data/rostering/teachers
    method: GET
    data_selector: data
- name: person_by_sys_id
  endpoint:
    path: /v2/interop/data/rostering/persons/{id}
    method: GET
    data_selector: data
- name: courses
  endpoint:
    path: /v2/interop/data/rostering/courses
    method: GET
    data_selector: data
- name: course_by_sys_id
  endpoint:
    path: /v2/interop/data/rostering/courses/{id}
    method: GET
    data_selector: data
- name: sections
  endpoint:
    path: /v2/interop/data/rostering/sections
    method: GET
    data_selector: data
    params:
      page: 0
      page_size: null
- name: terms
  endpoint:
    path: /v2/interop/data/rostering/terms
    method: GET
    data_selector: data
    params:
      page: 0
      page_size: null
- name: grading_categories
  endpoint:
    path: /v2/interop/data/grades/gradingCategories
    method: GET
    data_selector: data
    params:
      page: 0
      page_size: null
- name: sections
  endpoint:
    path: /v2/interop/data/rostering/sections
    method: GET
    data_selector: data
- name: terms
  endpoint:
    path: /v2/interop/data/rostering/terms
    method: GET
    data_selector: data
- name: gradingCategories
  endpoint:
    path: /v2/interop/data/grades/gradingCategories
    method: GET
    data_selector: data
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
- name: grades_exchange
  endpoint:
    path: /services/datasync/grades-oas
    method: GET
    data_selector: records
    params: {}
- name: grades_exchanges
  endpoint:
    path: /grades/exchanges
    method: GET
    data_selector: exchanges
- name: grades_exchange_errors
  endpoint:
    path: /grades/exchanges/errors
    method: GET
    data_selector: errors
- name: grades_exchange_data
  endpoint:
    path: /grades/exchanges/data
    method: POST
    data_selector: data
- name: grades_exchange
  endpoint:
    path: /exchanges
    method: GET
    data_selector: data
    params: {}
- name: grades_exchange_count
  endpoint:
    path: /exchanges/count
    method: GET
    data_selector: count
    params: {}
- name: grades_exchange_by_id
  endpoint:
    path: /exchanges/{id}
    method: GET
    data_selector: data
    params: {}
- name: grades_exchange_errors
  endpoint:
    path: /exchanges/{id}/errors
    method: GET
    data_selector: errors
    params: {}
- name: create_grades_exchange
  endpoint:
    path: /exchanges
    method: POST
    data_selector: data
    params: {}
- name: create_grades_exchange_error
  endpoint:
    path: /exchanges/{id}/errors
    method: POST
    data_selector: error
    params: {}
- name: create_grades_exchange_data
  endpoint:
    path: /exchanges/{id}/data
    method: POST
    data_selector: data
    params: {}
- name: grades_exchange_details
  endpoint:
    path: /exchanges/{id}/artifacts/details
    method: GET
    data_selector: details
    params: {}
- name: grades_exchange_consumer_logs
  endpoint:
    path: /exchanges/{id}/artifacts/consumerlogs
    method: GET
    data_selector: logs
    params: {}
- name: consumer_details
  endpoint:
    path: /consumer
    method: GET
    data_selector: details
    params: {}
- name: resolve_section_by_id
  endpoint:
    path: /sections/{id}/resolve
    method: GET
    data_selector: section
    params: {}
- name: batch_grades_exchange_error
  endpoint:
    path: /batch/{id}/error
    method: POST
    data_selector: error
    params: {}
- name: batch_grades_exchange_context_data
  endpoint:
    path: /batch/{id}/data
    method: POST
    data_selector: data
    params: {}
- name: grades_schedules
  endpoint:
    path: /schedules
    method: GET
    data_selector: schedules
    params: {}
- name: update_grades_schedule
  endpoint:
    path: /schedules/{id}
    method: PATCH
    data_selector: schedule
    params: {}
- name: run_grades_schedule
  endpoint:
    path: /schedules/{id}/run
    method: POST
    data_selector: schedule
    params: {}
- name: Users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
- name: Courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: data
- name: grades_exchanges
  endpoint:
    path: /v2/grades/exchanges
    method: GET
    data_selector: data
- name: grades_exchanges_count
  endpoint:
    path: /v2/grades/exchanges/count
    method: GET
    data_selector: data
- name: grades_exchange_by_id
  endpoint:
    path: /v2/grades/exchanges/{id}
    method: GET
    data_selector: data
- name: grades_exchange_errors
  endpoint:
    path: /v2/grades/exchanges/{id}/errors
    method: GET
    data_selector: data
- name: grades_exchange_details
  endpoint:
    path: /v2/grades/exchanges/{id}/artifacts/details
    method: GET
- name: grades_exchange_consumer_logs
  endpoint:
    path: /v2/grades/exchanges/{id}/artifacts/consumerlogs
    method: GET
- name: grades_consumer
  endpoint:
    path: /v2/grades/consumer
    method: GET
    data_selector: data
- name: grades_exchange_batch_error
  endpoint:
    path: /v2/grades/batch/{id}/error
    method: POST
- name: grades_exchange_batch_context_data
  endpoint:
    path: /v2/grades/batch/{id}/data
    method: POST
- name: grades_schedule
  endpoint:
    path: /v2/grades/schedules
    method: GET
    data_selector: data
    params:
      page: 0
      page_size: max
- name: update_grades_schedule
  endpoint:
    path: /v2/grades/schedules/{id}
    method: PATCH
    data_selector: No content
    params: {}
- name: run_grades_schedule
  endpoint:
    path: /v2/grades/schedules/{id}/run
    method: POST
    data_selector: No content
    params: {}
- name: List Grades Exchanges
  endpoint:
    path: /exchanges
    method: GET
    data_selector: exchanges
- name: Create a Grades Exchange
  endpoint:
    path: /exchanges
    method: POST
    data_selector: exchange
- name: Get count of Grades Exchanges
  endpoint:
    path: /exchanges/count
    method: GET
    data_selector: count
- name: Find a Grades Exchange by id
  endpoint:
    path: /exchanges/{id}
    method: GET
    data_selector: exchange
- name: List Grades Exchange Errors
  endpoint:
    path: /exchanges/{id}/errors
    method: GET
    data_selector: errors
- name: Create Grades Exchange Errors
  endpoint:
    path: /exchanges/{id}/errors
    method: POST
    data_selector: error
- name: Create Grades Exchange Data
  endpoint:
    path: /exchanges/{id}/data
    method: POST
    data_selector: data
- name: Get Grades Exchange Details
  endpoint:
    path: /exchanges/{id}/artifacts/details
    method: GET
    data_selector: details
- name: Get Grades Exchange Consumer Logs
  endpoint:
    path: /exchanges/{id}/artifacts/consumerlogs
    method: GET
    data_selector: logs
- name: Get consumer details
  endpoint:
    path: /consumer
    method: GET
    data_selector: consumer
- name: Resolve the section by ID
  endpoint:
    path: /sections/{id}/resolve
    method: GET
    data_selector: section
- name: Create Batch Grades Exchange Error
  endpoint:
    path: /batch/{id}/error
    method: POST
    data_selector: batchError
- name: Create Grades Exchange Batch Context Data
  endpoint:
    path: /batch/{id}/data
    method: POST
    data_selector: batchData
- name: List Grades Schedules
  endpoint:
    path: /schedules
    method: GET
    data_selector: schedules
- name: Update grades Schedule
  endpoint:
    path: /schedules/{id}
    method: PATCH
    data_selector: schedule
- name: Run a grades schedule
  endpoint:
    path: /schedules/{id}/run
    method: POST
    data_selector: runResult
- name: users
  endpoint:
    path: /services/commons/apis/users
    method: GET
- name: courses
  endpoint:
    path: /services/commons/apis/courses
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: enrollments
  endpoint:
    path: /enrollments
    method: GET
- name: classes
  endpoint:
    path: /classes
    method: GET
- name: teachers
  endpoint:
    path: /teachers
    method: GET
- name: students
  endpoint:
    path: /students
    method: GET
- name: grades_exchanges
  endpoint:
    path: /v2/grades/exchanges
    method: GET
    data_selector: data
    params: {}
- name: grades_exchanges_count
  endpoint:
    path: /v2/grades/exchanges/count
    method: GET
    data_selector: data
    params: {}
- name: grades_exchange_by_id
  endpoint:
    path: /v2/grades/exchanges/{id}
    method: GET
    data_selector: data
    params: {}
- name: grades_exchange_errors
  endpoint:
    path: /v2/grades/exchanges/{id}/errors
    method: GET
    data_selector: data
    params: {}
- name: grades_exchange_data
  endpoint:
    path: /v2/grades/exchanges/{id}/data
    method: POST
    data_selector: data
    params: {}
- name: grades_consumer
  endpoint:
    path: /v2/grades/consumer
    method: GET
    data_selector: data
    params: {}
- name: grades_schedules
  endpoint:
    path: /v2/grades/schedules
    method: GET
    data_selector: data
    params: {}
- name: update_grades_schedule
  endpoint:
    path: /v2/grades/schedules/{id}
    method: PATCH
    data_selector: No content
    params: {}
- name: run_grades_schedule
  endpoint:
    path: /v2/grades/schedules/{id}/run
    method: POST
    data_selector: No content
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
- name: categories
  endpoint:
    path: /ims/oneroster/v1p1/sis/classes/{id}/categories
    method: GET
    data_selector: categories
- name: orgs
  endpoint:
    path: /ims/oneroster/v1p1/orgs
    method: GET
    data_selector: orgs
- name: specific_org
  endpoint:
    path: /ims/oneroster/v1p1/orgs/{id}
    method: GET
    data_selector: org
- name: schools
  endpoint:
    path: /ims/oneroster/v1p1/schools
    method: GET
    data_selector: orgs
- name: specific_school
  endpoint:
    path: /ims/oneroster/v1p1/schools/{id}
    method: GET
    data_selector: org
- name: enrollments
  endpoint:
    path: /ims/oneroster/v1p1/enrollments
    method: GET
    data_selector: enrollments
- name: specific_enrollment
  endpoint:
    path: /ims/oneroster/v1p1/enrollments/{id}
    method: GET
    data_selector: enrollment
- name: terms
  endpoint:
    path: /ims/oneroster/v1p1/terms
    method: GET
    data_selector: academicSessions
- name: specific_term
  endpoint:
    path: /ims/oneroster/v1p1/terms/{id}
    method: GET
    data_selector: academicSession
- name: academic_sessions
  endpoint:
    path: /ims/oneroster/v1p1/academicSession
    method: GET
    data_selector: academicSessions
- name: specific_academic_session
  endpoint:
    path: /ims/oneroster/v1p1/academicSession/{id}
    method: GET
    data_selector: academicSession
- name: grading_periods
  endpoint:
    path: /ims/oneroster/v1p1/gradingPeriods
    method: GET
    data_selector: academicSessions
- name: specific_grading_period
  endpoint:
    path: /ims/oneroster/v1p1/gradingPeriods/{id}
    method: GET
    data_selector: academicSession
- name: courses
  endpoint:
    path: /ims/oneroster/v1p1/courses
    method: GET
    data_selector: courses
- name: specific_course
  endpoint:
    path: /ims/oneroster/v1p1/courses/{id}
    method: GET
    data_selector: course
- name: classes
  endpoint:
    path: /ims/oneroster/v1p1/classes
    method: GET
    data_selector: classes
- name: class
  endpoint:
    path: /ims/oneroster/v1p1/classes/{id}
    method: GET
    data_selector: class
    params: {}
- name: users
  endpoint:
    path: /ims/oneroster/v1p1/users
    method: GET
    data_selector: users
    params: {}
- name: teachers
  endpoint:
    path: /ims/oneroster/v1p1/teachers
    method: GET
    data_selector: users
    params: {}
- name: students
  endpoint:
    path: /ims/oneroster/v1p1/students
    method: GET
    data_selector: users
    params: {}
- name: specific_user
  endpoint:
    path: /ims/oneroster/v1p1/users/{id}
    method: GET
    data_selector: user
    params: {}
- name: specific_teacher
  endpoint:
    path: /ims/oneroster/v1p1/teachers/{id}
    method: GET
    data_selector: user
    params: {}
- name: specific_student
  endpoint:
    path: /ims/oneroster/v1p1/students/{id}
    method: GET
    data_selector: user
    params: {}
- name: school_teachers
  endpoint:
    path: /ims/oneroster/v1p1/schools/{schoolId}/teachers
    method: GET
    data_selector: users
    params: {}
- name: school_students
  endpoint:
    path: /ims/oneroster/v1p1/schools/{schoolId}/students
    method: GET
    data_selector: users
    params: {}
- name: categories
  endpoint:
    path: /sis/classes/{id}/categories
    method: GET
- name: orgs
  endpoint:
    path: /orgs
    method: GET
- name: org
  endpoint:
    path: /orgs/{id}
    method: GET
- name: schools
  endpoint:
    path: /schools
    method: GET
- name: school
  endpoint:
    path: /schools/{id}
    method: GET
- name: enrollments
  endpoint:
    path: /enrollments
    method: GET
- name: enrollment
  endpoint:
    path: /enrollments/{id}
    method: GET
- name: terms
  endpoint:
    path: /terms
    method: GET
- name: term
  endpoint:
    path: /terms/{id}
    method: GET
- name: academic_sessions
  endpoint:
    path: /academicsessions
    method: GET
- name: academic_session
  endpoint:
    path: /academicsessions/{id}
    method: GET
- name: grading_periods
  endpoint:
    path: /gradingperiods
    method: GET
- name: grading_period
  endpoint:
    path: /gradingperiods/{id}
    method: GET
- name: courses
  endpoint:
    path: /courses
    method: GET
- name: course
  endpoint:
    path: /courses/{id}
    method: GET
- name: classes
  endpoint:
    path: /classes
    method: GET
- name: class
  endpoint:
    path: /classes/{id}
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: user
  endpoint:
    path: /users/{id}
    method: GET
- name: teachers
  endpoint:
    path: /teachers
    method: GET
- name: teacher
  endpoint:
    path: /teachers/{id}
    method: GET
- name: students
  endpoint:
    path: /students
    method: GET
- name: student
  endpoint:
    path: /students/{id}
    method: GET
- name: accounts
  endpoint:
    path: /services/canvas/resources/accounts
    method: GET
- name: users
  endpoint:
    path: /services/canvas/resources/users
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: courses
  endpoint:
    path: /courses
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: create_account
  endpoint:
    path: /accounts
    method: POST
- name: find_your_account
  endpoint:
    path: /accounts/self
    method: GET
- name: find_account
  endpoint:
    path: /accounts/{id}
    method: GET
- name: update_account
  endpoint:
    path: /accounts/{id}
    method: PATCH
- name: delete_account
  endpoint:
    path: /accounts/{id}
    method: DELETE
- name: accounts
  endpoint:
    path: /v2/platform/accounts
    method: GET
    data_selector: data
    params: {}
- name: account_self
  endpoint:
    path: /v2/platform/accounts/self
    method: GET
    data_selector: data
    params: {}
- name: account_by_id
  endpoint:
    path: /v2/platform/accounts/{id}
    method: GET
    data_selector: data
    params: {}
- name: create_account
  endpoint:
    path: /v2/platform/accounts
    method: POST
    data_selector: data
    params: {}
- name: update_account
  endpoint:
    path: /v2/platform/accounts/{id}
    method: PATCH
    data_selector: ''
    params: {}
- name: delete_account
  endpoint:
    path: /v2/platform/accounts/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: categories
  endpoint:
    path: /sis/classes/{id}/categories
    method: GET
- name: orgs
  endpoint:
    path: /orgs
    method: GET
- name: org
  endpoint:
    path: /orgs/{id}
    method: GET
- name: schools
  endpoint:
    path: /schools
    method: GET
- name: school
  endpoint:
    path: /schools/{id}
    method: GET
- name: enrollments
  endpoint:
    path: /enrollments
    method: GET
- name: enrollment
  endpoint:
    path: /enrollments/{id}
    method: GET
- name: terms
  endpoint:
    path: /terms
    method: GET
- name: term
  endpoint:
    path: /terms/{id}
    method: GET
- name: academic_sessions
  endpoint:
    path: /academicsessions
    method: GET
- name: academic_session
  endpoint:
    path: /academicsessions/{id}
    method: GET
- name: grading_periods
  endpoint:
    path: /gradingperiods
    method: GET
- name: grading_period
  endpoint:
    path: /gradingperiods/{id}
    method: GET
- name: courses
  endpoint:
    path: /courses
    method: GET
- name: course
  endpoint:
    path: /courses/{id}
    method: GET
- name: classes
  endpoint:
    path: /classes
    method: GET
- name: class
  endpoint:
    path: /classes/{id}
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: user
  endpoint:
    path: /users/{id}
    method: GET
- name: teachers
  endpoint:
    path: /teachers
    method: GET
- name: teacher
  endpoint:
    path: /teachers/{id}
    method: GET
- name: students
  endpoint:
    path: /students
    method: GET
- name: student
  endpoint:
    path: /students/{id}
    method: GET
- name: Accounts
  endpoint:
    path: /services/canvas/resources/accounts
    method: GET
- name: Courses
  endpoint:
    path: /services/canvas/resources/courses
    method: GET
- name: Products
  endpoint:
    path: /api/public/v1/products
    method: GET
- name: categories
  endpoint:
    path: /ims/oneroster/v1p1/sis/classes/{id}/categories
    method: GET
    data_selector: categories
- name: orgs
  endpoint:
    path: /ims/oneroster/v1p1/orgs
    method: GET
    data_selector: orgs
- name: specific_org
  endpoint:
    path: /ims/oneroster/v1p1/orgs/{id}
    method: GET
    data_selector: org
- name: schools
  endpoint:
    path: /ims/oneroster/v1p1/schools
    method: GET
    data_selector: orgs
- name: specific_school
  endpoint:
    path: /ims/oneroster/v1p1/schools/{id}
    method: GET
    data_selector: org
- name: enrollments
  endpoint:
    path: /ims/oneroster/v1p1/enrollments
    method: GET
    data_selector: enrollments
- name: specific_enrollment
  endpoint:
    path: /ims/oneroster/v1p1/enrollments/{id}
    method: GET
    data_selector: enrollment
- name: terms
  endpoint:
    path: /ims/oneroster/v1p1/terms
    method: GET
    data_selector: academicSessions
- name: specific_term
  endpoint:
    path: /ims/oneroster/v1p1/terms/{id}
    method: GET
    data_selector: academicSession
- name: academic_sessions
  endpoint:
    path: /ims/oneroster/v1p1/academicSession
    method: GET
    data_selector: academicSessions
- name: specific_academic_session
  endpoint:
    path: /ims/oneroster/v1p1/academicSession/{id}
    method: GET
    data_selector: academicSession
- name: grading_periods
  endpoint:
    path: /ims/oneroster/v1p1/gradingPeriods
    method: GET
    data_selector: academicSessions
- name: specific_grading_period
  endpoint:
    path: /ims/oneroster/v1p1/gradingPeriods/{id}
    method: GET
    data_selector: academicSession
- name: courses
  endpoint:
    path: /ims/oneroster/v1p1/courses
    method: GET
    data_selector: courses
- name: specific_course
  endpoint:
    path: /ims/oneroster/v1p1/courses/{id}
    method: GET
    data_selector: course
- name: classes
  endpoint:
    path: /ims/oneroster/v1p1/classes
    method: GET
    data_selector: classes
- name: Products
  endpoint:
    path: /api/public/v1/products
    method: GET
- name: class
  endpoint:
    path: /ims/oneroster/v1p1/classes/{id}
    method: GET
    data_selector: class
    params: {}
- name: users
  endpoint:
    path: /ims/oneroster/v1p1/users
    method: GET
    data_selector: users
    params: {}
- name: teachers
  endpoint:
    path: /ims/oneroster/v1p1/teachers
    method: GET
    data_selector: users
    params: {}
- name: students
  endpoint:
    path: /ims/oneroster/v1p1/students
    method: GET
    data_selector: users
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
- name: products_collection_get
  endpoint:
    path: /public/v1/products
    method: GET
    data_selector: products
    params:
      per_page: 20
- name: products_collection_post
  endpoint:
    path: /public/v1/products
    method: POST
    data_selector: products
    params:
      per_page: 20
- name: product_details_get
  endpoint:
    path: /public/v1/products/{id}
    method: GET
    data_selector: product
- name: learn_more_post
  endpoint:
    path: /public/v1/learn_more
    method: POST
    data_selector: message
- name: quizzes
  endpoint:
    path: /services/canvas/resources/quizzes
    method: GET
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
- name: quizzes
  endpoint:
    path: /api/v1/quizzes
    method: GET
    data_selector: quizzes
- name: accounts
  endpoint:
    path: /v2/platform/accounts
    method: GET
    data_selector: data
- name: account_self
  endpoint:
    path: /v2/platform/accounts/self
    method: GET
    data_selector: data
- name: account_by_id
  endpoint:
    path: /v2/platform/accounts/{id}
    method: GET
    data_selector: data
- name: create_account
  endpoint:
    path: /v2/platform/accounts
    method: POST
    data_selector: data
- name: update_account
  endpoint:
    path: /v2/platform/accounts/{id}
    method: PATCH
- name: delete_account
  endpoint:
    path: /v2/platform/accounts/{id}
    method: DELETE
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
- name: quizzes
  endpoint:
    path: /api/v1/quizzes
    method: GET
- name: courses
  endpoint:
    path: /services/canvas/resources/courses
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /services/canvas/resources/users
    method: GET
    data_selector: records
    params: {}
- name: Accounts
  endpoint:
    path: /services/canvas/resources/accounts
    method: GET
- name: Users
  endpoint:
    path: /services/canvas/resources/users
    method: GET
- name: batch_show
  endpoint:
    path: /api/banks/batch_show
    method: GET
    data_selector: object
    params: {}
- name: content_exports
  endpoint:
    path: /api/content_exports
    method: POST
    data_selector: object
    params: {}
- name: check_shareability_stimuli
  endpoint:
    path: /api/stimuli/check_shareability
    method: POST
    data_selector: object
    params: {}
- name: check_shareability_items
  endpoint:
    path: /api/items/check_shareability
    method: POST
    data_selector: object
    params: {}
- name: tags
  endpoint:
    path: /api/tags
    method: GET
    data_selector: object
    params: {}
- name: quizzes
  endpoint:
    path: /api/quizzes
    method: GET
    data_selector: object
    params: {}
- name: quiz_clone_jobs
  endpoint:
    path: /api/quizzes/{quiz_id}/quiz_clone_jobs
    method: POST
    data_selector: object
    params: {}
- name: quiz_sessions_time
  endpoint:
    path: /api/quiz_sessions/{id}/time
    method: GET
    data_selector: object
    params: {}
- name: quiz_session_response_events
  endpoint:
    path: /api/quiz_sessions/{quiz_session_id}/quiz_session_response_events
    method: GET
    data_selector: any[]
    params: {}
- name: update_courses
  endpoint:
    path: /api/courses/{canvas_id}
    method: PUT
    data_selector: object
    params: {}
- name: associate_courses
  endpoint:
    path: /api/courses/{canvas_id}/associate_courses
    method: PATCH
    data_selector: object
    params: {}
- name: associate_quizzes
  endpoint:
    path: /api/courses/{canvas_id}/associate_quizzes
    method: PATCH
    data_selector: object
    params: {}
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
- name: Products
  endpoint:
    path: /api/public/v1/products
    method: GET
- name: standards
  endpoint:
    path: /rest/v4.1/standards
    method: GET
    params: {}
- name: standards
  endpoint:
    path: /rest/v4.1/standards
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
    params: {}
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
    params: {}
- name: Products
  endpoint:
    path: /api/public/v1/products
    method: GET
    data_selector: products
- name: products
  endpoint:
    path: /public/v1/products
    method: GET
    data_selector: products
    params:
      per_page: '20'
- name: product_details
  endpoint:
    path: /public/v1/products/{id}
    method: GET
    data_selector: ''
    params: {}
- name: learn_more
  endpoint:
    path: /public/v1/learn_more
    method: POST
    data_selector: ''
    params: {}
- name: standards
  endpoint:
    path: /standards
    method: GET
- name: quizzes
  endpoint:
    path: /services/canvas/resources/quizzes
    method: GET
- name: standards
  endpoint:
    path: /rest/v4.1/standards
    method: GET
    data_selector: data
    params: {}
- name: standards
  endpoint:
    path: /standards
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: quizzes
  endpoint:
    path: /api/v1/quizzes
    method: GET
- name: standards
  endpoint:
    path: /rest/v4.1/standards
    method: GET
    data_selector: data
    params:
      facet: document.publication.authorities
      limit: 0
- name: batch_show
  endpoint:
    path: /api/banks/batch_show
    method: GET
    data_selector: object
    params: {}
- name: content_exports
  endpoint:
    path: /api/content_exports
    method: POST
    data_selector: object
    params: {}
- name: check_shareability_stimuli
  endpoint:
    path: /api/stimuli/check_shareability
    method: POST
    data_selector: object
    params: {}
- name: check_shareability_items
  endpoint:
    path: /api/items/check_shareability
    method: POST
    data_selector: object
    params: {}
- name: courses
  endpoint:
    path: /api/courses/{canvas_id}
    method: PUT
    data_selector: object
    params: {}
- name: associate_courses
  endpoint:
    path: /api/courses/{canvas_id}/associate_courses
    method: PATCH
    data_selector: object
    params: {}
- name: associate_quizzes
  endpoint:
    path: /api/courses/{canvas_id}/associate_quizzes
    method: PATCH
    data_selector: object
    params: {}
- name: quiz_sessions_time
  endpoint:
    path: /api/quiz_sessions/{id}/time
    method: GET
    data_selector: object
    params: {}
- name: quiz_session_response_events
  endpoint:
    path: /api/quiz_sessions/{quiz_session_id}/quiz_session_response_events
    method: GET
    data_selector: array
    params: {}
- name: quizzes
  endpoint:
    path: /api/quizzes
    method: GET
    data_selector: object
    params: {}
- name: quiz_clone_jobs
  endpoint:
    path: /api/quizzes/{quiz_id}/quiz_clone_jobs
    method: POST
    data_selector: object
    params: {}
- name: tags
  endpoint:
    path: /api/tags
    method: GET
    data_selector: object
    params: {}
- name: standards
  endpoint:
    path: /standards
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: standards
  endpoint:
    path: /rest/v4.1/standards
    method: GET
    data_selector: records
    params: {}
- name: standards
  endpoint:
    path: /standards
    method: GET
- name: single_standard
  endpoint:
    path: /standards/{guid}
    method: GET
- name: standards
  endpoint:
    path: /rest/v4.1/standards
    method: GET
    data_selector: data
- name: standards
  endpoint:
    path: /rest/v4.1/standards
    method: GET
    data_selector: records
- name: asset_collections
  endpoint:
    path: /asset_collections
    method: POST
- name: standard_collections
  endpoint:
    path: /standard_collections/{guid}
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: topics
  endpoint:
    path: /topics
    method: GET
- name: concepts
  endpoint:
    path: /concepts
    method: GET
- name: assets
  endpoint:
    path: /assets
    method: POST
- name: retrieve_assets
  endpoint:
    path: /assets/{guid}
    method: GET
- name: update_assets
  endpoint:
    path: /assets/{guid}
    method: PATCH
- name: delete_assets
  endpoint:
    path: /assets/{guid}
    method: DELETE
- name: search_assets
  endpoint:
    path: /assets
    method: GET
- name: asset_definitions
  endpoint:
    path: /asset_definitions
    method: GET
- name: retrieve_asset_definitions
  endpoint:
    path: /asset_definitions/{guid}
    method: GET
- name: standards
  endpoint:
    path: /rest/v4.1/standards
    method: GET
    data_selector: data
    params: {}
- name: asset_collections
  endpoint:
    path: /asset_collections
    method: GET
- name: create_asset_collection
  endpoint:
    path: /asset_collections
    method: POST
- name: retrieve_asset_collection
  endpoint:
    path: /asset_collections/{guid}
    method: GET
- name: modify_asset_collection
  endpoint:
    path: /asset_collections
    method: PATCH
- name: delete_asset_collection
  endpoint:
    path: /asset_collections
    method: DELETE
- name: standards
  endpoint:
    path: /standards
    method: GET
    data_selector: data
    params: {}
- name: alignments
  endpoint:
    path: /assets/{guid}/alignments
    method: POST
- name: alignments_update
  endpoint:
    path: /assets/{guid}/alignments
    method: PATCH
- name: alignments_delete
  endpoint:
    path: /assets/{guid}/alignments
    method: DELETE
- name: predictions
  endpoint:
    path: /predictions
    method: POST
- name: deleted_alignments
  endpoint:
    path: /assets/{guid}/deleted_alignments
    method: GET
- name: topics
  endpoint:
    path: /assets/{guid}/topics
    method: POST
- name: topics_update
  endpoint:
    path: /assets/{guid}/topics
    method: PATCH
- name: topics_delete
  endpoint:
    path: /assets/{guid}/topics
    method: DELETE
- name: concepts
  endpoint:
    path: /assets/{guid}/concepts
    method: POST
- name: standards
  endpoint:
    path: /rest/v4.1/standards
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /rest/v4.1/assets
    method: GET
    data_selector: data
    params: {}
- name: topics
  endpoint:
    path: /rest/v4.1/topics
    method: GET
    data_selector: data
    params: {}
- name: predictions
  endpoint:
    path: /predictions
    method: post
- name: queue_status
  endpoint:
    path: /predictions/queue-status/{guid}
    method: get
- name: fetch_related_standards
  endpoint:
    path: /predictions/{guid}/standards
    method: get
- name: providers
  endpoint:
    path: /providers
    method: get
- name: provider
  endpoint:
    path: /providers/{guid}
    method: get
- name: courses
  endpoint:
    path: /api/v1/courses
    method: get
- name: graphql
  endpoint:
    path: /api/graphql
    method: post
- name: standards
  endpoint:
    path: /rest/v4.1/standards
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /rest/v4.1/assets
    method: GET
    data_selector: data
    params: {}
- name: standards
  endpoint:
    path: /standards
    method: GET
- name: standard
  endpoint:
    path: /standards/{guid}
    method: GET
- name: asset_collections
  endpoint:
    path: /asset_collections
    method: POST
- name: standard_collections
  endpoint:
    path: /standard_collections/{guid}
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: topics
  endpoint:
    path: /topics
    method: GET
- name: concepts
  endpoint:
    path: /concepts
    method: GET
- name: account_calendars
  endpoint:
    path: /api/v1/account_calendars
    method: GET
- name: user_notifications
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: GET
- name: assets
  endpoint:
    path: /assets
    method: POST
- name: asset_definitions
  endpoint:
    path: /asset_definitions
    method: GET
- name: account_notifications
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: POST
    data_selector: null
    params: {}
- name: reports
  endpoint:
    path: /api/v1/accounts/:account_id/reports
    method: GET
    data_selector: null
    params: {}
- name: asset_collections
  endpoint:
    path: /asset_collections
    method: GET
    data_selector: records
    params: {}
- name: create_asset_collection
  endpoint:
    path: /asset_collections
    method: POST
    data_selector: records
    params: {}
- name: retrieve_asset_collection
  endpoint:
    path: /asset_collections/{guid}
    method: GET
    data_selector: records
    params: {}
- name: modify_asset_collection
  endpoint:
    path: /asset_collections
    method: PATCH
    data_selector: records
    params: {}
- name: delete_asset_collection
  endpoint:
    path: /asset_collections
    method: DELETE
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
- name: manageable_accounts
  endpoint:
    path: /api/v1/manageable_accounts
    method: GET
    data_selector: accounts
- name: course_creation_accounts
  endpoint:
    path: /api/v1/course_creation_accounts
    method: GET
    data_selector: accounts
- name: course_accounts
  endpoint:
    path: /api/v1/course_accounts
    method: GET
    data_selector: accounts
- name: single_account
  endpoint:
    path: /api/v1/accounts/:id
    method: GET
    data_selector: account
- name: account_settings
  endpoint:
    path: /api/v1/accounts/:account_id/settings
    method: GET
    data_selector: settings
- name: environment_settings
  endpoint:
    path: /api/v1/settings/environment
    method: GET
    data_selector: environment_settings
- name: account_permissions
  endpoint:
    path: /api/v1/accounts/:account_id/permissions
    method: GET
    data_selector: permissions
- name: sub_accounts
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts
    method: GET
    data_selector: sub_accounts
- name: terms_of_service
  endpoint:
    path: /api/v1/accounts/:account_id/terms_of_service
    method: GET
    data_selector: terms_of_service
- name: help_links
  endpoint:
    path: /api/v1/accounts/:account_id/help_links
    method: GET
    data_selector: help_links
- name: manually_created_courses_account
  endpoint:
    path: /api/v1/manually_created_courses_account
    method: GET
    data_selector: account
- name: courses
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: GET
    data_selector: courses
    params: {}
- name: update_account
  endpoint:
    path: /api/v1/accounts/:id
    method: PUT
    data_selector: account
    params: {}
- name: remove_user
  endpoint:
    path: /api/v1/accounts/:account_id/users/:user_id
    method: DELETE
    data_selector: user
    params: {}
- name: remove_users
  endpoint:
    path: /api/v1/accounts/:account_id/users
    method: DELETE
    data_selector: users
    params: {}
- name: update_users
  endpoint:
    path: /api/v1/accounts/:account_id/users/bulk_update
    method: PUT
    data_selector: users
    params: {}
- name: alignments
  endpoint:
    path: /assets/{guid}/alignments
    method: POST
- name: update_alignments
  endpoint:
    path: /assets/{guid}/alignments
    method: PATCH
- name: delete_alignments
  endpoint:
    path: /assets/{guid}/alignments
    method: DELETE
- name: predictions
  endpoint:
    path: /predictions
    method: POST
- name: queue_status
  endpoint:
    path: /predictions
    method: GET
- name: deleted_alignments
  endpoint:
    path: /assets/{guid}/deleted_alignments
    method: GET
- name: topics
  endpoint:
    path: /assets/{guid}/topics
    method: POST
- name: update_topics
  endpoint:
    path: /assets/{guid}/topics
    method: PATCH
- name: delete_topics
  endpoint:
    path: /assets/{guid}/topics
    method: DELETE
- name: concepts
  endpoint:
    path: /assets/{guid}/concepts
    method: POST
- name: predictions
  endpoint:
    path: /predictions
    method: POST
- name: queue-status
  endpoint:
    path: /predictions/queue-status/{guid}
    method: GET
- name: fetch-predictions
  endpoint:
    path: /predictions/{guid}
    method: GET
- name: fetch-related-standards
  endpoint:
    path: /predictions/{guid}/standards
    method: GET
- name: department_participation
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/terms/:term_id/activity
    method: GET
- name: department_grades
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/terms/:term_id/grades
    method: GET
- name: department_statistics
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/terms/:term_id/statistics
    method: GET
- name: department_statistics_by_subaccount
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/terms/:term_id/statistics_by_subaccount
    method: GET
- name: course_participation
  endpoint:
    path: /api/v1/courses/:course_id/analytics/activity
    method: GET
- name: providers
  endpoint:
    path: /providers
    method: GET
- name: provider
  endpoint:
    path: /providers/{guid}
    method: GET
- name: topics
  endpoint:
    path: /topics/{guid}/{relationship}
    method: GET
- name: standards
  endpoint:
    path: /standards/{guid}/{relationship}
    method: GET
- name: predictions
  endpoint:
    path: /predictions/assets
    method: POST
- name: list_announcements
  endpoint:
    path: /api/v1/announcements
    method: GET
    data_selector: announcements
    params: {}
- name: list_external_feeds
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds
    method: GET
    data_selector: external_feeds
    params: {}
- name: create_external_feed
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds
    method: POST
    data_selector: external_feed
    params: {}
- name: delete_external_feed
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds/:external_feed_id
    method: DELETE
    data_selector: external_feed
    params: {}
- name: appointment_groups
  endpoint:
    path: /api/v1/appointment_groups
    method: GET
    data_selector: appointments
    params:
      scope: reservable
      include_past_appointments: false
- name: single_appointment_group
  endpoint:
    path: /api/v1/appointment_groups/:id
    method: GET
    data_selector: appointments
    params: {}
- name: oauth2_auth
  endpoint:
    path: /login/oauth2/auth
    method: GET
    data_selector: ''
    params:
      client_id: XXX
      response_type: code
      redirect_uri: https://example.com/oauth_complete
      state: YYY
- name: oauth2_token
  endpoint:
    path: /login/oauth2/token
    method: POST
    data_selector: ''
    params: {}
- name: session_token
  endpoint:
    path: /login/session_token
    method: GET
    data_selector: ''
    params: {}
- name: assignment_extensions
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/extensions
    method: POST
    data_selector: assignment_extensions
    params: {}
- name: assignment_groups
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups
    method: GET
    data_selector: assignment_groups
    params: {}
- name: assignment
  endpoint:
    path: /assignments
    method: GET
    data_selector: assignments
- name: assignment_override
  endpoint:
    path: /api/assignment_groups
    method: GET
    data_selector: records
- name: developer_keys
  endpoint:
    path: /api/v1/developer_keys/:id
    method: DELETE
    data_selector: DeveloperKey
    params: {}
- name: account_calendars
  endpoint:
    path: /api/v1/account_calendars
    method: GET
    data_selector: AccountCalendar
    params: {}
- name: account_domain_lookups
  endpoint:
    path: /api/v1/accounts/search
    method: GET
    data_selector: account_domain
    params: {}
- name: account_notifications
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: GET
    data_selector: AccountNotification
    params: {}
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: GET
    data_selector: assignments
- name: assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: GET
    data_selector: assignment
- name: user_assignments
  endpoint:
    path: /api/v1/users/:user_id/courses/:course_id/assignments
    method: GET
    data_selector: assignments
- name: duplicate_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/duplicate
    method: POST
    data_selector: assignment
- name: group_members
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/users/:user_id/group_members
    method: GET
    data_selector: group_members
- name: account_notifications
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: POST
    data_selector: null
    params: {}
- name: available_reports
  endpoint:
    path: /api/v1/accounts/:account_id/reports
    method: GET
    data_selector: null
    params: {}
- name: start_report
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report
    method: POST
    data_selector: null
    params: {}
- name: report_status
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report/:id
    method: GET
    data_selector: null
    params: {}
- name: delete_report
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report/:id
    method: DELETE
    data_selector: null
    params: {}
- name: abort_report
  endpoint:
    path: /api/v1/accounts/:account_id/reports/:report/:id/abort
    method: PUT
    data_selector: null
    params: {}
- name: create_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: POST
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: PUT
    data_selector: Assignment
    params: {}
- name: bulk_update_assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments/bulk_update
    method: PUT
    data_selector: Progress
    params: {}
- name: assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: GET
    data_selector: AssignmentOverride
    params: {}
- name: single_assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides/:id
    method: GET
    data_selector: AssignmentOverride
    params: {}
- name: group_override_redirect
  endpoint:
    path: /api/v1/groups/:group_id/assignments/:assignment_id/override
    method: GET
    data_selector: ''
    params: {}
- name: section_override_redirect
  endpoint:
    path: /api/v1/sections/:course_section_id/assignments/:assignment_id/override
    method: GET
    data_selector: ''
    params: {}
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: manageable_accounts
  endpoint:
    path: /api/v1/manageable_accounts
    method: GET
    data_selector: accounts
    params: {}
- name: course_creation_accounts
  endpoint:
    path: /api/v1/course_creation_accounts
    method: GET
    data_selector: accounts
    params: {}
- name: course_accounts
  endpoint:
    path: /api/v1/course_accounts
    method: GET
    data_selector: accounts
    params: {}
- name: single_account
  endpoint:
    path: /api/v1/accounts/:id
    method: GET
    data_selector: account
    params: {}
- name: account_settings
  endpoint:
    path: /api/v1/accounts/:account_id/settings
    method: GET
    data_selector: settings
    params: {}
- name: environment_settings
  endpoint:
    path: /api/v1/settings/environment
    method: GET
    data_selector: environment
    params: {}
- name: account_permissions
  endpoint:
    path: /api/v1/accounts/:account_id/permissions
    method: GET
    data_selector: permissions
    params: {}
- name: sub_accounts
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts
    method: GET
    data_selector: sub_accounts
    params: {}
- name: terms_of_service
  endpoint:
    path: /api/v1/accounts/:account_id/terms_of_service
    method: GET
    data_selector: terms_of_service
    params: {}
- name: help_links
  endpoint:
    path: /api/v1/accounts/:account_id/help_links
    method: GET
    data_selector: help_links
    params: {}
- name: manually_created_courses_account
  endpoint:
    path: /api/v1/manually_created_courses_account
    method: GET
    data_selector: account
    params: {}
- name: authentication_providers
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers
    method: GET
    data_selector: authentication_providers
- name: authentication_provider
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers/:id
    method: GET
    data_selector: authentication_provider
- name: authentication_provider
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers
    method: POST
    data_selector: ''
    params: {}
- name: courses
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: GET
    data_selector: courses
    params: {}
- name: update_account
  endpoint:
    path: /api/v1/accounts/:id
    method: PUT
    data_selector: account
    params: {}
- name: remove_user
  endpoint:
    path: /api/v1/accounts/:account_id/users/:user_id
    method: DELETE
    data_selector: user
    params: {}
- name: remove_users
  endpoint:
    path: /api/v1/accounts/:account_id/users
    method: DELETE
    data_selector: users
    params: {}
- name: update_users
  endpoint:
    path: /api/v1/accounts/:account_id/users/bulk_update
    method: PUT
    data_selector: bulk_update
    params: {}
- name: department_participation
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/terms/:term_id/activity
    method: GET
- name: department_grades
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/terms/:term_id/grades
    method: GET
- name: department_statistics
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/terms/:term_id/statistics
    method: GET
- name: course_participation
  endpoint:
    path: /api/v1/courses/:course_id/analytics/activity
    method: GET
- name: announcements
  endpoint:
    path: /api/v1/announcements
    method: GET
    data_selector: announcements
    params:
      context_codes[]: course_2
- name: appointment_groups
  endpoint:
    path: /api/v1/appointment_groups
    method: GET
    data_selector: appointment_groups
- name: appointment_group
  endpoint:
    path: /api/v1/appointment_groups/:id
    method: GET
    data_selector: appointment_group
- name: assignment_extensions
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/extensions
    method: POST
    data_selector: assignment_extensions
- name: assignment_groups
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups
    method: GET
    data_selector: assignment_groups
- name: assignment
  endpoint:
    path: /assignments
    method: GET
    data_selector: assignments
- name: assignment_override
  endpoint:
    path: /assignment_override
    method: GET
    data_selector: records
    params: {}
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: GET
    data_selector: assignments
- name: assignment_groups_assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups/:assignment_group_id/assignments
    method: GET
    data_selector: assignments
- name: user_assignments
  endpoint:
    path: /api/v1/users/:user_id/courses/:course_id/assignments
    method: GET
    data_selector: assignments
- name: duplicate_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/duplicate
    method: POST
    data_selector: assignment
- name: group_members
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/users/:user_id/group_members
    method: GET
    data_selector: group_members
- name: single_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: GET
    data_selector: assignment
- name: assignments
  endpoint:
    path: /courses/:course_id/assignments
    method: POST
- name: assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: PUT
    data_selector: Assignment
    params: {}
- name: bulk_update_assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments/bulk_update
    method: PUT
    data_selector: Progress
    params: {}
- name: assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: GET
    data_selector: AssignmentOverride
    params: {}
- name: authentication_providers
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers
    method: GET
- name: authentication_provider
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers/:id
    method: GET
- name: authentication_provider
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers
    method: POST
    data_selector: ''
    params: {}
- name: standards
  endpoint:
    path: /rest/v4.1/standards
    method: GET
    data_selector: data
    params: {}
- name: standards
  endpoint:
    path: /rest/v4.1/standards
    method: GET
    data_selector: data
- name: standards
  endpoint:
    path: /standards
    method: GET
- name: standards
  endpoint:
    path: /rest/v4.1/standards
    method: GET
    data_selector: data
    params: {}
- name: standards
  endpoint:
    path: /standards
    method: GET
    data_selector: data
- name: standards
  endpoint:
    path: /rest/v4.1/standards
    method: GET
    data_selector: data
    params:
      filter[standards]: status EQ 'active'
- name: standards
  endpoint:
    path: /standards
    method: GET
- name: standard_collections
  endpoint:
    path: /standard_collections
    method: GET
- name: standard_collection_details
  endpoint:
    path: /standard_collections/{guid}
    method: GET
- name: create_standard_collection
  endpoint:
    path: /standard_collections
    method: POST
- name: update_standard_collection
  endpoint:
    path: /standard_collections/{guid}
    method: PATCH
- name: delete_standard_collection
  endpoint:
    path: /standard_collections/{guid}
    method: DELETE
- name: events
  endpoint:
    path: /events
    method: GET
- name: Providers
  endpoint:
    path: /rest/v4.1/providers
    method: GET
    data_selector: records
- name: Assets
  endpoint:
    path: /rest/v4.1/assets
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest/v4.1/events
    method: GET
    data_selector: data
    params:
      filter[events]: seq GT 0
      sort[events]: seq
- name: standards
  endpoint:
    path: /rest/v4.1/standards
    method: GET
    data_selector: data
    params:
      filter[standards]: document.id EQ '351CFFCC-9BDD-11E6-ABFB-8C24CDC8CA83'
- name: topics
  endpoint:
    path: /topics
    method: GET
    data_selector: data
- name: concepts
  endpoint:
    path: /concepts
    method: GET
    data_selector: data
- name: assets
  endpoint:
    path: /assets
    method: POST
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
- name: asset_definitions
  endpoint:
    path: /asset_definitions
    method: GET
- name: asset_collections
  endpoint:
    path: /asset_collections
    method: GET
- name: standards
  endpoint:
    path: /standards
    method: GET
- name: standard_collections
  endpoint:
    path: /standard_collections
    method: GET
- name: single_standard
  endpoint:
    path: /standards/{guid}
    method: GET
- name: standard_collection_details
  endpoint:
    path: /standard_collections/{guid}
    method: GET
- name: create_standard_collection
  endpoint:
    path: /standard_collections
    method: POST
- name: update_standard_collection
  endpoint:
    path: /standard_collections/{guid}
    method: PATCH
- name: delete_standard_collection
  endpoint:
    path: /standard_collections/{guid}
    method: DELETE
- name: events
  endpoint:
    path: /events
    method: GET
- name: asset_collection
  endpoint:
    path: /asset_collections
    method: PATCH
- name: delete_asset_collection
  endpoint:
    path: /asset_collections
    method: DELETE
- name: fetch_related_standards
  endpoint:
    path: /assets/{guid}/alignments
    method: GET
- name: fetch_deleted_alignments
  endpoint:
    path: /assets/{guid}/deleted_alignments
    method: GET
- name: topics
  endpoint:
    path: /assets/{guid}/topics
    method: POST
- name: update_relationships
  endpoint:
    path: /assets/{guid}/topics
    method: PATCH
- name: remove_relationships
  endpoint:
    path: /assets/{guid}/topics
    method: DELETE
- name: fetch_related_topics
  endpoint:
    path: /assets/{guid}/topics
    method: GET
- name: concepts
  endpoint:
    path: /assets/{guid}/concepts
    method: POST
- name: update_concept_relationships
  endpoint:
    path: /assets/{guid}/concepts
    method: PATCH
- name: remove_concept_relationships
  endpoint:
    path: /assets/{guid}/concepts
    method: DELETE
- name: fetch_related_concepts
  endpoint:
    path: /assets/{guid}/concepts
    method: GET
- name: alignment_donors
  endpoint:
    path: /assets/{guid}/alignment_donors
    method: POST
- name: patch_alignment_donors
  endpoint:
    path: /assets/{guid}/alignment_donors
    method: PATCH
- name: concept_donors
  endpoint:
    path: /assets/{guid}/concept_donors
    method: POST
- name: patch_concept_donors
  endpoint:
    path: /assets/{guid}/concept_donors
    method: PATCH
- name: provider
  endpoint:
    path: /providers/{guid}
    method: GET
- name: providers
  endpoint:
    path: /providers
    method: GET
    params:
      filter: id=_me
- name: providers
  endpoint:
    path: /providers
    method: GET
- name: graphql
  endpoint:
    path: /api/graphql
    method: POST
- name: files
  endpoint:
    path: /api/v1/users/self/files
    method: POST
    data_selector: upload_url
    params: {}
- name: events
  endpoint:
    path: /rest/v4.1/events
    method: GET
    data_selector: events
- name: standards
  endpoint:
    path: /rest/v4.1/standards
    method: GET
    data_selector: standards
- name: topics
  endpoint:
    path: /topics
    method: GET
    data_selector: topics
- name: concepts
  endpoint:
    path: /concepts
    method: GET
    data_selector: concepts
- name: assets
  endpoint:
    path: /assets
    method: POST
    data_selector: assets
- name: names_and_role
  endpoint:
    path: /services/canvas/resources/names_and_role
    method: GET
    data_selector: records
- name: line_items
  endpoint:
    path: /services/canvas/resources/line_items
    method: GET
    data_selector: records
- name: score
  endpoint:
    path: /services/canvas/resources/score
    method: GET
    data_selector: records
- name: result
  endpoint:
    path: /services/canvas/resources/result
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
- name: asset_definitions
  endpoint:
    path: /asset_definitions
    method: GET
- name: asset_collections
  endpoint:
    path: /asset_collections
    method: GET
- name: account_calendars
  endpoint:
    path: /api/v1/account_calendars
    method: GET
- name: account_notifications
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: GET
- name: account_domain_lookups
  endpoint:
    path: /api/v1/accounts/search
    method: GET
- name: asset_collections
  endpoint:
    path: /asset_collections
    method: PATCH
- name: delete_asset_collection
  endpoint:
    path: /asset_collections
    method: DELETE
- name: fetch_related_standards
  endpoint:
    path: /assets/{guid}/alignments
    method: GET
- name: fetch_deleted_alignments
  endpoint:
    path: /assets/{guid}/deleted_alignments
    method: GET
- name: account_notifications
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: POST
    data_selector: null
    params: {}
- name: reports
  endpoint:
    path: /api/v1/accounts/:account_id/reports
    method: GET
    data_selector: null
    params: {}
- name: topics
  endpoint:
    path: /assets/{guid}/topics
    method: POST
- name: topics
  endpoint:
    path: /assets/{guid}/topics
    method: PATCH
- name: topics
  endpoint:
    path: /assets/{guid}/topics
    method: DELETE
- name: topics
  endpoint:
    path: /assets/{guid}/topics
    method: GET
- name: concepts
  endpoint:
    path: /assets/{guid}/concepts
    method: POST
- name: concepts
  endpoint:
    path: /assets/{guid}/concepts
    method: PATCH
- name: concepts
  endpoint:
    path: /assets/{guid}/concepts
    method: DELETE
- name: concepts
  endpoint:
    path: /assets/{guid}/concepts
    method: GET
- name: alignment_donors
  endpoint:
    path: /assets/{guid}/alignment_donors
    method: POST
- name: concept_donors
  endpoint:
    path: /assets/{guid}/concept_donors
    method: POST
- name: alignment_donors
  endpoint:
    path: /assets/{guid}/alignment_donors
    method: PATCH
- name: concept_donors
  endpoint:
    path: /assets/{guid}/concept_donors
    method: PATCH
- name: provider
  endpoint:
    path: /providers/{guid}
    method: GET
- name: providers
  endpoint:
    path: /providers
    method: GET
- name: graphql
  endpoint:
    path: /api/graphql
    method: POST
- name: list_accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: manageable_accounts
  endpoint:
    path: /api/v1/manageable_accounts
    method: GET
    data_selector: accounts
    params: {}
- name: course_creation_accounts
  endpoint:
    path: /api/v1/course_creation_accounts
    method: GET
    data_selector: accounts
    params: {}
- name: course_accounts
  endpoint:
    path: /api/v1/course_accounts
    method: GET
    data_selector: accounts
    params: {}
- name: single_account
  endpoint:
    path: /api/v1/accounts/:id
    method: GET
    data_selector: account
    params: {}
- name: account_settings
  endpoint:
    path: /api/v1/accounts/:account_id/settings
    method: GET
    data_selector: settings
    params: {}
- name: environment_settings
  endpoint:
    path: /api/v1/settings/environment
    method: GET
    data_selector: environment
    params: {}
- name: permissions
  endpoint:
    path: /api/v1/accounts/:account_id/permissions
    method: GET
    data_selector: permissions
    params: {}
- name: sub_accounts
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts
    method: GET
    data_selector: sub_accounts
    params: {}
- name: terms_of_service
  endpoint:
    path: /api/v1/accounts/:account_id/terms_of_service
    method: GET
    data_selector: terms_of_service
    params: {}
- name: help_links
  endpoint:
    path: /api/v1/accounts/:account_id/help_links
    method: GET
    data_selector: help_links
    params: {}
- name: manually_created_courses_account
  endpoint:
    path: /api/v1/manually_created_courses_account
    method: GET
    data_selector: account
    params: {}
- name: active_courses
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: GET
    data_selector: courses
    params: {}
- name: update_account
  endpoint:
    path: /api/v1/accounts/:id
    method: PUT
    data_selector: account
    params: {}
- name: accounts
  endpoint:
    path: /api/v1/accounts/:account_id
    method: GET
    data_selector: Account
- name: remove_account_admin
  endpoint:
    path: /api/v1/accounts/:account_id/admins/:user_id
    method: DELETE
    data_selector: Admin
    params:
      role_id: integer
- name: list_my_admin_roles
  endpoint:
    path: /api/v1/accounts/:account_id/admins/self
    method: GET
    data_selector: Admin
    params: {}
- name: courses_analytics_users_communication
  endpoint:
    path: /api/v1/courses/:course_id/analytics/users/:student_id/communication
    method: GET
- name: external_feeds
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds
    method: GET
- name: announcements
  endpoint:
    path: /api/v1/announcements
    method: GET
- name: appointment_groups
  endpoint:
    path: /api/v1/appointment_groups
    method: GET
- name: assignment_groups
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups
    method: GET
    data_selector: assignment_groups
    params: {}
- name: assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups/:assignment_group_id
    method: GET
    data_selector: assignment_group
    params: {}
- name: create_assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups
    method: POST
    data_selector: assignment_group
    params: {}
- name: account_calendars
  endpoint:
    path: /api/v1/account_calendars
    method: GET
- name: account_notifications
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: GET
- name: account_domain_lookups
  endpoint:
    path: /api/v1/accounts/search
    method: GET
- name: assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups
    method: GET
    data_selector: assignment_groups
- name: account_notifications
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: POST
    data_selector: null
    params: {}
- name: reports
  endpoint:
    path: /api/v1/accounts/:account_id/reports
    method: GET
    data_selector: null
    params: {}
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: GET
- name: delete_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: DELETE
- name: list_assignments_for_user
  endpoint:
    path: /api/v1/users/:user_id/courses/:course_id/assignments
    method: GET
- name: duplicate_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/duplicate
    method: POST
- name: list_group_members
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/users/:user_id/group_members
    method: GET
- name: get_single_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: GET
- name: create_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: POST
- name: edit_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: PUT
    data_selector: assignment
    params: {}
- name: list_accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
- name: manageable_accounts
  endpoint:
    path: /api/v1/manageable_accounts
    method: GET
- name: course_creation_accounts
  endpoint:
    path: /api/v1/course_creation_accounts
    method: GET
- name: course_accounts
  endpoint:
    path: /api/v1/course_accounts
    method: GET
- name: get_single_account
  endpoint:
    path: /api/v1/accounts/:id
    method: GET
- name: account_settings
  endpoint:
    path: /api/v1/accounts/:account_id/settings
    method: GET
- name: environment_settings
  endpoint:
    path: /api/v1/settings/environment
    method: GET
- name: permissions
  endpoint:
    path: /api/v1/accounts/:account_id/permissions
    method: GET
- name: sub_accounts
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts
    method: GET
- name: terms_of_service
  endpoint:
    path: /api/v1/accounts/:account_id/terms_of_service
    method: GET
- name: help_links
  endpoint:
    path: /api/v1/accounts/:account_id/help_links
    method: GET
- name: manually_created_courses_account
  endpoint:
    path: /api/v1/manually_created_courses_account
    method: GET
- name: list_active_courses
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: GET
- name: update_account
  endpoint:
    path: /api/v1/accounts/:id
    method: PUT
- name: update_multiple_users
  endpoint:
    path: /api/v1/accounts/:account_id/users/bulk_update
    method: PUT
- name: delete_user
  endpoint:
    path: /api/v1/accounts/:account_id/users/:user_id
    method: DELETE
- name: delete_multiple_users
  endpoint:
    path: /api/v1/accounts/:account_id/users
    method: DELETE
- name: restore_user
  endpoint:
    path: /api/v1/accounts/:account_id/users/:user_id/restore
    method: PUT
- name: create_sub_account
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts
    method: POST
- name: delete_sub_account
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts/:id
    method: DELETE
- name: get_account
  endpoint:
    path: /api/lti/accounts/:account_id
    method: GET
- name: list_account_admins
  endpoint:
    path: /api/v1/accounts/:account_id/admins
    method: GET
- name: make_account_admin
  endpoint:
    path: /api/v1/accounts/:account_id/admins
    method: POST
- name: bulk_update_assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments/bulk_update
    method: PUT
    data_selector: Progress
    params: {}
- name: list_assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: GET
    data_selector: AssignmentOverride
    params: {}
- name: get_single_assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides/:id
    method: GET
    data_selector: AssignmentOverride
    params: {}
- name: redirect_to_group_override
  endpoint:
    path: /api/v1/groups/:group_id/assignments/:assignment_id/override
    method: GET
    data_selector: redirect
    params: {}
- name: redirect_to_section_override
  endpoint:
    path: /api/v1/sections/:course_section_id/assignments/:assignment_id/override
    method: GET
    data_selector: redirect
    params: {}
- name: create_assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: POST
    data_selector: AssignmentOverride
    params: {}
- name: authentication_providers
  endpoint:
    path: /accounts/:account_id/authentication_providers
    method: GET
- name: authentication_provider
  endpoint:
    path: /accounts/:account_id/authentication_providers/:id
    method: GET
- name: add_authentication_provider
  endpoint:
    path: /accounts/:account_id/authentication_providers
    method: POST
- name: admins_destroy
  endpoint:
    path: /api/v1/accounts/:account_id/admins/:user_id
    method: DELETE
    data_selector: Admin
    params:
      role_id: integer
- name: admins_self_roles
  endpoint:
    path: /api/v1/accounts/:account_id/admins/self
    method: GET
    data_selector: Admin
    params: {}
- name: analytics_department_participation
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/terms/:term_id/activity
    method: GET
    data_selector: by_date
    params: {}
- name: analytics_department_grades
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/terms/:term_id/grades
    method: GET
    data_selector: grades
    params: {}
- name: analytics_department_statistics
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/terms/:term_id/statistics
    method: GET
    data_selector: statistics
    params: {}
- name: analytics_course_participation
  endpoint:
    path: /api/v1/courses/:course_id/analytics/activity
    method: GET
    data_selector: participations
    params: {}
- name: analytics_course_assignments
  endpoint:
    path: /api/v1/courses/:course_id/analytics/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: analytics_course_student_summaries
  endpoint:
    path: /api/v1/courses/:course_id/analytics/student_summaries
    method: GET
    data_selector: student_summaries
    params: {}
- name: ldap
  endpoint:
    path: /api/v1/accounts/<account_id>/authentication_providers
    method: POST
    data_selector: auth_type=ldap
    params:
      auth_host: ldap.mydomain.edu
      auth_filter: (sAMAccountName={{login}})
      auth_username: username
      auth_password: bestpasswordever
- name: saml
  endpoint:
    path: /api/v1/accounts/<account_id>/authentication_providers
    method: POST
    data_selector: auth_type=saml
    params:
      idp_entity_id: <idp_entity_id>
      log_in_url: <login_url>
      log_out_url: <logout_url>
      certificate_fingerprint: <fingerprint>
- name: cas
  endpoint:
    path: /api/v1/accounts/<account_id>/authentication_providers
    method: POST
    data_selector: auth_type=cas
    params:
      auth_base: cas.mydomain.edu
      log_in_url: <login_url>
- name: authentication_provider
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers/:id
    method: PUT
- name: communication
  endpoint:
    path: /api/v1/courses/:course_id/analytics/users/:student_id/communication
    method: GET
- name: external_feeds
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds
    method: GET
- name: announcements
  endpoint:
    path: /api/v1/announcements
    method: GET
- name: appointment_groups
  endpoint:
    path: /api/v1/appointment_groups
    method: GET
- name: assignment_groups
  endpoint:
    path: /courses/:course_id/assignment_groups
    method: GET
    data_selector: assignment_groups
- name: assignment_group
  endpoint:
    path: /courses/:course_id/assignment_groups/:assignment_group_id
    method: GET
    data_selector: assignment_group
- name: create_assignment_group
  endpoint:
    path: /courses/:course_id/assignment_groups
    method: POST
    data_selector: assignment_group
- name: standards
  endpoint:
    path: /rest/v4.1/standards
    method: GET
- name: assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups/:assignment_group_id
    method: PUT
    data_selector: AssignmentGroup
    params: {}
- name: destroy_assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups/:assignment_group_id
    method: DELETE
    data_selector: AssignmentGroup
    params: {}
- name: standards
  endpoint:
    path: /standards
    method: GET
    data_selector: data
    params: {}
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: GET
- name: delete_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: DELETE
- name: list_assignments
  endpoint:
    path: /api/v1/users/:user_id/courses/:course_id/assignments
    method: GET
- name: duplicate_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/duplicate
    method: POST
- name: list_group_members
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/users/:user_id/group_members
    method: GET
- name: get_single_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: GET
- name: create_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: POST
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: PUT
- name: standards
  endpoint:
    path: /rest/v4.1/standards
    method: GET
    data_selector: data
    params:
      filter:
        standards: status EQ 'active'
      limit: 0
- name: authentication_providers
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers
    method: GET
- name: get_authentication_provider
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers/:id
    method: GET
- name: add_authentication_provider
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers
    method: POST
- name: providers
  endpoint:
    path: /rest/v4.1/providers
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /rest/v4.1/assets
    method: GET
    data_selector: records
    params: {}
- name: ldap
  endpoint:
    path: /api/v1/accounts/<account_id>/authentication_providers
    method: POST
    data_selector: authentication_provider
    params:
      auth_type: ldap
      auth_host: ldap.mydomain.edu
      auth_filter: (sAMAccountName={{login}})
      auth_username: username
      auth_password: bestpasswordever
- name: saml
  endpoint:
    path: /api/v1/accounts/<account_id>/authentication_providers
    method: POST
    data_selector: authentication_provider
    params:
      auth_type: saml
      idp_entity_id: <idp_entity_id>
      log_in_url: <login_url>
      log_out_url: <logout_url>
      certificate_fingerprint: <fingerprint>
- name: cas
  endpoint:
    path: /api/v1/accounts/<account_id>/authentication_providers
    method: POST
    data_selector: authentication_provider
    params:
      auth_type: cas
      auth_base: cas.mydomain.edu
      log_in_url: <login_url>
- name: assets
  endpoint:
    path: /rest/v4.1/assets
    method: GET
    data_selector: assets
    params:
      filter[assets]: standards.document.guid eq 'E1C9B054-DA22-11E2-95B3-3B359DFF4B22'
- name: authentication_provider
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers/:id
    method: PUT
- name: standards
  endpoint:
    path: /rest/v4.1/standards
    method: GET
    data_selector: data
    params: {}
- name: standards
  endpoint:
    path: /standards
    method: GET
- name: standard_collections
  endpoint:
    path: /standard_collections
    method: GET
- name: standard_collection
  endpoint:
    path: /standard_collections/{guid}
    method: GET
- name: create_standard_collection
  endpoint:
    path: /standard_collections
    method: POST
- name: update_standard_collection
  endpoint:
    path: /standard_collections/{guid}
    method: PATCH
- name: delete_standard_collection
  endpoint:
    path: /standard_collections/{guid}
    method: DELETE
- name: events
  endpoint:
    path: /events
    method: GET
- name: standards
  endpoint:
    path: /standards
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
- name: standards
  endpoint:
    path: /standards
    method: GET
- name: topics
  endpoint:
    path: /topics
    method: GET
- name: concepts
  endpoint:
    path: /concepts
    method: GET
- name: assets
  endpoint:
    path: /assets
    method: POST
- name: assets
  endpoint:
    path: /assets
    method: get
- name: asset_definitions
  endpoint:
    path: /asset_definitions
    method: get
- name: asset_collections
  endpoint:
    path: /asset_collections
    method: get
- name: asset_collection_by_guid
  endpoint:
    path: /asset_collections/{guid}
    method: get
- name: create_asset_collection
  endpoint:
    path: /asset_collections
    method: post
- name: standards
  endpoint:
    path: /rest/v4.1/standards
    method: GET
    data_selector: data
- name: asset_collections
  endpoint:
    path: /asset_collections
    method: PATCH
- name: delete_asset_collection
  endpoint:
    path: /asset_collections
    method: DELETE
- name: alignments
  endpoint:
    path: /assets/{guid}/alignments
    method: POST
- name: update_alignments
  endpoint:
    path: /assets/{guid}/alignments
    method: PATCH
- name: delete_alignments
  endpoint:
    path: /assets/{guid}/alignments
    method: DELETE
- name: fetch_alignments
  endpoint:
    path: /assets/{guid}/alignments
    method: GET
- name: deleted_alignments
  endpoint:
    path: /assets/{guid}/deleted_alignments
    method: GET
- name: topics
  endpoint:
    path: /assets/{guid}/topics
    method: GET
- name: concepts
  endpoint:
    path: /assets/{guid}/concepts
    method: GET
- name: assets
  endpoint:
    path: /rest/v4.1/assets
    method: GET
    data_selector: records
    params: {}
- name: standards
  endpoint:
    path: /rest/v4.1/standards
    method: GET
    data_selector: records
    params: {}
- name: topics
  endpoint:
    path: /assets/{guid}/topics
    method: POST
- name: topics
  endpoint:
    path: /assets/{guid}/topics
    method: PATCH
- name: topics
  endpoint:
    path: /assets/{guid}/topics
    method: DELETE
- name: topics
  endpoint:
    path: /assets/{guid}/topics
    method: GET
- name: concepts
  endpoint:
    path: /assets/{guid}/concepts
    method: POST
- name: concepts
  endpoint:
    path: /assets/{guid}/concepts
    method: PATCH
- name: concepts
  endpoint:
    path: /assets/{guid}/concepts
    method: DELETE
- name: concepts
  endpoint:
    path: /assets/{guid}/concepts
    method: GET
- name: alignment_donors
  endpoint:
    path: /assets/{guid}/alignment_donors
    method: POST
- name: alignment_donors
  endpoint:
    path: /assets/{guid}/alignment_donors
    method: PATCH
- name: concept_donors
  endpoint:
    path: /assets/{guid}/concept_donors
    method: POST
- name: concept_donors
  endpoint:
    path: /assets/{guid}/concept_donors
    method: PATCH
- name: standards
  endpoint:
    path: /standards
    method: GET
- name: standard_collections
  endpoint:
    path: /standard_collections
    method: GET
- name: standard_collection
  endpoint:
    path: /standard_collections/{guid}
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: predictions
  endpoint:
    path: /predictions
    method: post
- name: queue-status
  endpoint:
    path: /predictions/queue-status/{guid}
    method: get
- name: retrieve-predictions
  endpoint:
    path: /predictions/{guid}
    method: get
- name: clarifier
  endpoint:
    path: /clarifier/{guid}
    method: get
- name: related-standards
  endpoint:
    path: /predictions/{guid}/standards
    method: get
- name: related-topics
  endpoint:
    path: /predictions/{guid}/topics
    method: get
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: standards
  endpoint:
    path: /standards
    method: GET
    data_selector: standards
- name: topics
  endpoint:
    path: /topics
    method: GET
    data_selector: topics
- name: concepts
  endpoint:
    path: /concepts
    method: GET
    data_selector: concepts
- name: assets
  endpoint:
    path: /assets
    method: POST
    data_selector: assets
- name: providers
  endpoint:
    path: /providers
    method: GET
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
- name: graphql
  endpoint:
    path: /api/graphql
    method: POST
- name: assets
  endpoint:
    path: /assets
    method: GET
- name: asset_definitions
  endpoint:
    path: /asset_definitions
    method: GET
- name: asset_collections
  endpoint:
    path: /asset_collections
    method: GET
- name: file_upload
  endpoint:
    path: /api/v1/users/self/files
    method: POST
- name: upload_status
  endpoint:
    path: <Location>
    method: POST
- name: asset_collections
  endpoint:
    path: /asset_collections
    method: PATCH
- name: delete_asset_collection
  endpoint:
    path: /asset_collections
    method: DELETE
- name: predictions
  endpoint:
    path: /predictions
    method: POST
- name: fetch_related_standards
  endpoint:
    path: /assets/{guid}/alignments
    method: GET
- name: fetch_deleted_alignments
  endpoint:
    path: /assets/{guid}/deleted_alignments
    method: GET
- name: create_relationships
  endpoint:
    path: /assets/{guid}/alignments
    method: POST
- name: update_relationships
  endpoint:
    path: /assets/{guid}/alignments
    method: PATCH
- name: remove_relationships
  endpoint:
    path: /assets/{guid}/alignments
    method: DELETE
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
- name: topics
  endpoint:
    path: /assets/{guid}/topics
    method: POST
- name: relationships
  endpoint:
    path: /assets/{guid}/topics
    method: PATCH
- name: remove_relationships
  endpoint:
    path: /assets/{guid}/topics
    method: DELETE
- name: fetch_related_topics
  endpoint:
    path: /assets/{guid}/topics
    method: GET
- name: concepts
  endpoint:
    path: /assets/{guid}/concepts
    method: POST
- name: fetch_related_concepts
  endpoint:
    path: /assets/{guid}/concepts
    method: GET
- name: alignment_donors
  endpoint:
    path: /assets/{guid}/alignment_donors
    method: POST
- name: concept_donors
  endpoint:
    path: /assets/{guid}/concept_donors
    method: POST
- name: line_items
  endpoint:
    path: /api/v1/line_items
    method: GET
    data_selector: records
- name: score
  endpoint:
    path: /api/v1/score
    method: GET
    data_selector: records
- name: result
  endpoint:
    path: /api/v1/result
    method: GET
    data_selector: records
- name: predictions
  endpoint:
    path: /predictions
    method: post
- name: queue-status
  endpoint:
    path: /predictions/queue-status/{guid}
    method: get
- name: fetch-predictions
  endpoint:
    path: /predictions/{guid}
    method: get
- name: clarifier
  endpoint:
    path: /clarifier/{guid}
    method: get
- name: provider
  endpoint:
    path: /providers/{guid}
    method: get
- name: account_notifications
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: GET
    data_selector: notifications
- name: account_calendars
  endpoint:
    path: /api/v1/account_calendars
    method: GET
    data_selector: calendars
- name: account_domain_lookups
  endpoint:
    path: /api/v1/accounts/search
    method: GET
    data_selector: domains
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: providers
  endpoint:
    path: /providers
    method: GET
- name: graphql
  endpoint:
    path: /api/graphql
    method: POST
- name: files
  endpoint:
    path: /api/v1/users/self/files
    method: POST
    data_selector: upload_url
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: manageable_accounts
  endpoint:
    path: /api/v1/manageable_accounts
    method: GET
    data_selector: accounts
    params: {}
- name: course_creation_accounts
  endpoint:
    path: /api/v1/course_creation_accounts
    method: GET
    data_selector: accounts
    params: {}
- name: course_accounts
  endpoint:
    path: /api/v1/course_accounts
    method: GET
    data_selector: accounts
    params: {}
- name: account
  endpoint:
    path: /api/v1/accounts/:id
    method: GET
    data_selector: account
    params: {}
- name: account_settings
  endpoint:
    path: /api/v1/accounts/:account_id/settings
    method: GET
    data_selector: settings
    params: {}
- name: environment_settings
  endpoint:
    path: /api/v1/settings/environment
    method: GET
    data_selector: environment_settings
    params: {}
- name: account_permissions
  endpoint:
    path: /api/v1/accounts/:account_id/permissions
    method: GET
    data_selector: permissions
    params: {}
- name: sub_accounts
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts
    method: GET
    data_selector: sub_accounts
    params: {}
- name: terms_of_service
  endpoint:
    path: /api/v1/accounts/:account_id/terms_of_service
    method: GET
    data_selector: terms_of_service
    params: {}
- name: help_links
  endpoint:
    path: /api/v1/accounts/:account_id/help_links
    method: GET
    data_selector: help_links
    params: {}
- name: manually_created_courses_account
  endpoint:
    path: /api/v1/manually_created_courses_account
    method: GET
    data_selector: account
    params: {}
- name: courses
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: GET
    data_selector: courses
    params: {}
- name: account
  endpoint:
    path: /api/v1/accounts/:account_id
    method: GET
- name: admins
  endpoint:
    path: /api/v1/accounts/:account_id/admins
    method: GET
- name: line_items
  endpoint:
    path: /v1/line_items
    method: GET
    data_selector: records
    params: {}
- name: score
  endpoint:
    path: /v1/score
    method: GET
    data_selector: records
    params: {}
- name: result
  endpoint:
    path: /v1/result
    method: GET
    data_selector: records
    params: {}
- name: account_calendars
  endpoint:
    path: /api/v1/account_calendars
    method: GET
- name: account_notifications
  endpoint:
    path: /api/v1/accounts/:account_id/account_notifications
    method: GET
- name: account_domain_lookups
  endpoint:
    path: /api/v1/accounts/search
    method: GET
- name: department_participation
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/terms/:term_id/activity
    method: GET
- name: department_grades
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/terms/:term_id/grades
    method: GET
- name: department_statistics
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/terms/:term_id/statistics
    method: GET
- name: course_participation
  endpoint:
    path: /api/v1/courses/:course_id/analytics/activity
    method: GET
- name: course_assignments
  endpoint:
    path: /api/v1/courses/:course_id/analytics/assignments
    method: GET
- name: course_student_summaries
  endpoint:
    path: /api/v1/courses/:course_id/analytics/student_summaries
    method: GET
- name: student_in_course_participation
  endpoint:
    path: /api/v1/courses/:course_id/analytics/users/:student_id/activity
    method: GET
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
- name: courses_analytics_users_communication
  endpoint:
    path: /api/v1/courses/:course_id/analytics/users/:student_id/communication
    method: GET
    data_selector: null
    params: {}
- name: external_feeds
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds
    method: GET
    data_selector: null
    params: {}
- name: announcements
  endpoint:
    path: /api/v1/announcements
    method: GET
    data_selector: null
    params: {}
- name: appointment_groups
  endpoint:
    path: /api/v1/appointment_groups
    method: GET
    data_selector: null
    params: {}
- name: appointment_groups
  endpoint:
    path: /api/v1/appointment_groups
    method: GET
- name: assignment_extensions
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/extensions
    method: POST
- name: assignment_groups
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups
    method: GET
- name: assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups
    method: GET
    data_selector: assignment_groups
- name: edit_assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups/:assignment_group_id
    method: PUT
    data_selector: assignment_group
- name: destroy_assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups/:assignment_group_id
    method: DELETE
    data_selector: assignment_group
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: manageable_accounts
  endpoint:
    path: /api/v1/manageable_accounts
    method: GET
    data_selector: accounts
    params: {}
- name: course_creation_accounts
  endpoint:
    path: /api/v1/course_creation_accounts
    method: GET
    data_selector: accounts
    params: {}
- name: course_accounts
  endpoint:
    path: /api/v1/course_accounts
    method: GET
    data_selector: accounts
    params: {}
- name: single_account
  endpoint:
    path: /api/v1/accounts/:id
    method: GET
    data_selector: account
    params: {}
- name: account_settings
  endpoint:
    path: /api/v1/accounts/:account_id/settings
    method: GET
    data_selector: settings
    params: {}
- name: environment_settings
  endpoint:
    path: /api/v1/settings/environment
    method: GET
    data_selector: environment
    params: {}
- name: permissions
  endpoint:
    path: /api/v1/accounts/:account_id/permissions
    method: GET
    data_selector: permissions
    params: {}
- name: sub_accounts
  endpoint:
    path: /api/v1/accounts/:account_id/sub_accounts
    method: GET
    data_selector: sub_accounts
    params: {}
- name: terms_of_service
  endpoint:
    path: /api/v1/accounts/:account_id/terms_of_service
    method: GET
    data_selector: terms_of_service
    params: {}
- name: help_links
  endpoint:
    path: /api/v1/accounts/:account_id/help_links
    method: GET
    data_selector: help_links
    params: {}
- name: manually_created_courses_account
  endpoint:
    path: /api/v1/manually_created_courses_account
    method: GET
    data_selector: account
    params: {}
- name: courses_in_account
  endpoint:
    path: /api/v1/accounts/:account_id/courses
    method: GET
    data_selector: courses
    params: {}
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: GET
- name: delete_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: DELETE
- name: account
  endpoint:
    path: /api/v1/accounts/:account_id
    method: GET
- name: admins
  endpoint:
    path: /api/v1/accounts/:account_id/admins
    method: GET
- name: update_users
  endpoint:
    path: /api/v1/accounts/:account_id/users/bulk_update
    method: PUT
- name: delete_user
  endpoint:
    path: /api/v1/accounts/:account_id/users/:user_id
    method: DELETE
- name: list_assignments
  endpoint:
    path: /api/v1/users/:user_id/courses/:course_id/assignments
    method: GET
- name: duplicate_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/duplicate
    method: POST
- name: list_group_members
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/users/:user_id/group_members
    method: GET
- name: get_single_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: GET
- name: create_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: POST
- name: assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: PUT
- name: department_participation
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/current/activity
    method: GET
- name: department_grades
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/current/grades
    method: GET
- name: department_statistics
  endpoint:
    path: /api/v1/accounts/:account_id/analytics/current/statistics
    method: GET
- name: course_participation
  endpoint:
    path: /api/v1/courses/:course_id/analytics/activity
    method: GET
- name: bulk_update
  endpoint:
    path: /api/v1/courses/:course_id/assignments/bulk_update
    method: PUT
- name: list_assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: GET
- name: get_single_assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides/:id
    method: GET
- name: create_assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: POST
- name: external_feeds
  endpoint:
    path: /api/v1/courses/:course_id/external_feeds
    method: GET
    data_selector: external_feeds
- name: announcements
  endpoint:
    path: /api/v1/announcements
    method: GET
    data_selector: announcements
- name: appointment_groups
  endpoint:
    path: /api/v1/appointment_groups
    method: GET
    data_selector: appointment_groups
- name: appointment_group
  endpoint:
    path: /api/v1/appointment_groups
    method: POST
    data_selector: appointment_group
    params: {}
- name: assignment_extensions
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/extensions
    method: POST
    data_selector: assignment_extensions
    params: {}
- name: assignment_groups
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups
    method: GET
    data_selector: assignment_groups
    params: {}
- name: assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: POST
    data_selector: null
    params: {}
- name: assignment_override_update
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides/:id
    method: PUT
    data_selector: null
    params: {}
- name: assignment_override_delete
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides/:id
    method: DELETE
    data_selector: null
    params: {}
- name: assignment_override_batch_retrieve
  endpoint:
    path: /api/v1/courses/:course_id/assignments/overrides
    method: GET
    data_selector: null
    params: {}
- name: assignment_override_batch_create
  endpoint:
    path: /api/v1/courses/:course_id/assignments/overrides
    method: POST
    data_selector: null
    params: {}
- name: assignment_override_batch_update
  endpoint:
    path: /api/v1/courses/:course_id/assignments/overrides
    method: PUT
    data_selector: null
    params: {}
- name: assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups
    method: PUT
- name: delete_assignment_group
  endpoint:
    path: /api/v1/courses/:course_id/assignment_groups/:assignment_group_id
    method: DELETE
- name: authentication_providers
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers
    method: POST
- name: update_authentication_provider
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers/:id
    method: PUT
- name: assignments
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: GET
- name: delete_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: DELETE
- name: blackout_dates
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates
    method: GET
- name: single_blackout_date
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates/:id
    method: GET
- name: create_blackout_date
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates
    method: POST
- name: update_blackout_date
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates/:id
    method: PUT
- name: delete_blackout_date
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates/:id
    method: DELETE
- name: assignments
  endpoint:
    path: /api/v1/users/:user_id/courses/:course_id/assignments
    method: GET
    data_selector: assignments
- name: duplicate_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/duplicate
    method: POST
    data_selector: assignment
- name: group_members
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/users/:user_id/group_members
    method: GET
    data_selector: group_members
- name: single_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: GET
    data_selector: assignment
- name: create_assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments
    method: POST
    data_selector: assignment
- name: assignment
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:id
    method: PUT
- name: bulk_update
  endpoint:
    path: /api/v1/courses/:course_id/assignments/bulk_update
    method: PUT
- name: list_assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: GET
- name: get_single_assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides/:id
    method: GET
- name: redirect_to_assignment_override_for_group
  endpoint:
    path: /api/v1/groups/:group_id/assignments/:assignment_id/override
    method: GET
- name: redirect_to_assignment_override_for_section
  endpoint:
    path: /api/v1/sections/:course_section_id/assignments/:assignment_id/override
    method: GET
- name: create_assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: POST
- name: blueprint_template
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id
    method: GET
- name: associated_courses
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/associated_courses
    method: GET
- name: update_associations
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/update_associations
    method: PUT
- name: queue_migration
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/migrations
    method: POST
- name: unsynced_changes
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/unsynced_changes
    method: GET
- name: migrations_index
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/migrations
    method: GET
- name: migrations_show
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/migrations/:id
    method: GET
- name: migration_details
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/migrations/:id/details
    method: GET
- name: subscriptions_index
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_subscriptions
    method: GET
- name: imports_index
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_subscriptions/:subscription_id/migrations
    method: GET
- name: imports_show
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_subscriptions/:subscription_id/migrations/:id
    method: GET
- name: import_details
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_subscriptions/:subscription_id/migrations/:id/details
    method: GET
- name: brand_variables
  endpoint:
    path: /api/v1/brand_variables
    method: GET
    data_selector: data
    params: {}
- name: brand_variables_sub_account
  endpoint:
    path: /api/v1/accounts/:account_id/brand_variables
    method: GET
    data_selector: data
    params: {}
- name: brand_variables_course
  endpoint:
    path: /api/v1/courses/:course_id/brand_variables
    method: GET
    data_selector: data
    params: {}
- name: assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides
    method: POST
    data_selector: assignment_override
    params: {}
- name: update_assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides/:id
    method: PUT
    data_selector: assignment_override
    params: {}
- name: delete_assignment_override
  endpoint:
    path: /api/v1/courses/:course_id/assignments/:assignment_id/overrides/:id
    method: DELETE
    data_selector: assignment_override
    params: {}
- name: batch_retrieve_assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/overrides
    method: GET
    data_selector: assignment_override
    params: {}
- name: batch_create_assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/overrides
    method: POST
    data_selector: assignment_override
    params: {}
- name: batch_update_assignment_overrides
  endpoint:
    path: /api/v1/courses/:course_id/assignments/overrides
    method: PUT
    data_selector: assignment_override
    params: {}
- name: authentication_providers
  endpoint:
    path: /api/v1/accounts/<account_id>/authentication_providers
    method: POST
    data_selector: AuthenticationProvider
- name: update_authentication_providers
  endpoint:
    path: /api/v1/accounts/:account_id/authentication_providers/:id
    method: PUT
    data_selector: AuthenticationProvider
- name: calendar_events
  endpoint:
    path: /api/v1/calendar_events
    method: POST
    data_selector: calendar_event
    params: {}
- name: single_calendar_event
  endpoint:
    path: /api/v1/calendar_events/:id
    method: GET
    data_selector: calendar_event
    params: {}
- name: reserve_time_slot
  endpoint:
    path: /api/v1/calendar_events/:id/reservations
    method: POST
    data_selector: reservation
    params: {}
- name: update_calendar_event
  endpoint:
    path: /api/v1/calendar_events/:id
    method: PUT
    data_selector: calendar_event
    params: {}
- name: delete_calendar_event
  endpoint:
    path: /api/v1/calendar_events/:id
    method: DELETE
    data_selector: calendar_event
    params: {}
- name: save_enabled_account_calendars
  endpoint:
    path: /api/v1/calendar_events/save_enabled_account_calendars
    method: POST
    data_selector: account_calendars
    params: {}
- name: set_course_timetable
  endpoint:
    path: /api/v1/courses/:course_id/calendar_events/timetable
    method: POST
    data_selector: timetable
    params: {}
- name: get_course_timetable
  endpoint:
    path: /api/v1/courses/:course_id/calendar_events/timetable
    method: GET
    data_selector: timetable
    params: {}
- name: set_course_timetable_events
  endpoint:
    path: /api/v1/courses/:course_id/calendar_events/timetable_events
    method: POST
    data_selector: timetable_events
    params: {}
- name: blackout_dates
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates
    method: GET
- name: single_blackout_date
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates/:id
    method: GET
- name: create_blackout_date
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates
    method: POST
- name: update_blackout_date
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates/:id
    method: PUT
- name: delete_blackout_date
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates/:id
    method: DELETE
- name: bulk_update_blackout_dates
  endpoint:
    path: /api/v1/courses/:course_id/blackout_dates
    method: PUT
- name: collaborations
  endpoint:
    path: /api/v1/courses/:course_id/collaborations
    method: GET
- name: collaboration_members
  endpoint:
    path: /api/v1/collaborations/:id/members
    method: GET
- name: potential_collaborators
  endpoint:
    path: /api/v1/courses/:course_id/potential_collaborators
    method: GET
- name: blueprint_template
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id
    method: GET
    data_selector: BlueprintTemplate
- name: associated_courses
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/associated_courses
    method: GET
    data_selector: Course
- name: update_associations
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/update_associations
    method: PUT
- name: queue_migration
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/migrations
    method: POST
- name: unsynced_changes
  endpoint:
    path: /api/v1/courses/:course_id/blueprint_templates/:template_id/unsynced_changes
    method: GET
    data_selector: ChangeRecord
- name: list_content_exports
  endpoint:
    path: /api/v1/courses/:course_id/content_exports
    method: GET
- name: show_content_export
  endpoint:
    path: /api/v1/courses/:course_id/content_exports/:id
    method: GET
- name: export_content
  endpoint:
    path: /api/v1/courses/:course_id/content_exports
    method: POST
- name: list_migration_issues
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:content_migration_id/migration_issues
    method: GET
- name: get_migration_issue
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:content_migration_id/migration_issues/:id
    method: GET
- name: update_migration_issue
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:content_migration_id/migration_issues/:id
    method: PUT
- name: list_content_migrations
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations
    method: GET
- name: get_content_migration
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:id
    method: GET
- name: brand_variables
  endpoint:
    path: /api/v1/brand_variables
    method: GET
    data_selector: records
- name: brand_variables_sub_account
  endpoint:
    path: /api/v1/accounts/:account_id/brand_variables
    method: GET
    data_selector: records
- name: brand_variables_course
  endpoint:
    path: /api/v1/courses/:course_id/brand_variables
    method: GET
    data_selector: records
- name: experience_summary
  endpoint:
    path: /api/v1/career/experience_summary
    method: GET
    data_selector: ExperienceSummary
- name: switch_experience
  endpoint:
    path: /api/v1/career/switch_experience
    method: POST
    data_selector: response
- name: switch_role
  endpoint:
    path: /api/v1/career/switch_role
    method: POST
    data_selector: response
- name: create_content_migration
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations
    method: POST
    data_selector: ContentMigration
    params: {}
- name: update_content_migration
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:id
    method: PUT
    data_selector: ContentMigration
    params: {}
- name: list_migrators
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/migrators
    method: GET
    data_selector: migrators
    params: {}
- name: list_selective_import_items
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:id/selective_data
    method: GET
    data_selector: selective_data
    params: {}
- name: get_asset_id_mapping
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:id/asset_id_mapping
    method: GET
    data_selector: asset_id_mapping
    params: {}
- name: collaborations
  endpoint:
    path: /api/v1/courses/:course_id/collaborations
    method: GET
    data_selector: collaborations
- name: collaboration_members
  endpoint:
    path: /api/v1/collaborations/:id/members
    method: GET
    data_selector: members
- name: potential_collaborators
  endpoint:
    path: /api/v1/courses/:course_id/potential_collaborators
    method: GET
    data_selector: potential_collaborators
- name: content_exports
  endpoint:
    path: /api/v1/courses/:course_id/content_exports
    method: GET
    data_selector: ContentExport
- name: migration_issues
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations/:content_migration_id/migration_issues
    method: GET
    data_selector: MigrationIssue
- name: content_migrations
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations
    method: GET
    data_selector: ContentMigration
- name: content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares
    method: POST
    data_selector: ''
    params: {}
- name: sent_content_shares
  endpoint:
    path: /api/v1/users/:user_id/content_shares/sent
    method: GET
    data_selector: ''
    params: {}
- name: received_content_shares
  endpoint:
    path: /api/v1/users/:user_id/content_shares/received
    method: GET
    data_selector: ''
    params: {}
- name: unread_count
  endpoint:
    path: /api/v1/users/:user_id/content_shares/unread_count
    method: GET
    data_selector: ''
    params: {}
- name: single_content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares/:id
    method: GET
    data_selector: ''
    params: {}
- name: remove_content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares/:id
    method: DELETE
    data_selector: ''
    params: {}
- name: add_users_to_content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares/:id/add_users
    method: POST
    data_selector: ''
    params: {}
- name: update_content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares/:id
    method: PUT
    data_selector: ''
    params: {}
- name: content_migrations
  endpoint:
    path: /api/v1/courses/:course_id/content_migrations
    method: POST
    data_selector: ContentMigration
    params: {}
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: conversations
    params: {}
- name: create_conversation
  endpoint:
    path: /api/v1/conversations
    method: POST
    data_selector: conversation
    params: {}
- name: get_running_batches
  endpoint:
    path: /api/v1/conversations/batches
    method: GET
    data_selector: batches
    params: {}
- name: get_single_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: GET
    data_selector: conversation
    params: {}
- name: edit_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: PUT
    data_selector: conversation
    params: {}
- name: mark_all_as_read
  endpoint:
    path: /api/v1/conversations/mark_all_as_read
    method: POST
    data_selector: ''
    params: {}
- name: delete_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: DELETE
    data_selector: conversation
    params: {}
- name: content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares
    method: POST
    data_selector: null
    params: {}
- name: sent_content_shares
  endpoint:
    path: /api/v1/users/:user_id/content_shares/sent
    method: GET
    data_selector: null
    params: {}
- name: received_content_shares
  endpoint:
    path: /api/v1/users/:user_id/content_shares/received
    method: GET
    data_selector: null
    params: {}
- name: unread_count
  endpoint:
    path: /api/v1/users/:user_id/content_shares/unread_count
    method: GET
    data_selector: null
    params: {}
- name: content_share_details
  endpoint:
    path: /api/v1/users/:user_id/content_shares/:id
    method: GET
    data_selector: null
    params: {}
- name: remove_content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares/:id
    method: DELETE
    data_selector: null
    params: {}
- name: add_users_to_content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares/:id/add_users
    method: POST
    data_selector: null
    params: {}
- name: update_content_share
  endpoint:
    path: /api/v1/users/:user_id/content_shares/:id
    method: PUT
    data_selector: null
    params: {}
- name: Course Pace
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing/:id
    method: GET
    data_selector: CoursePace
    params: {}
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: conversations
- name: create_conversation
  endpoint:
    path: /api/v1/conversations
    method: POST
    data_selector: conversation
- name: get_running_batches
  endpoint:
    path: /api/v1/conversations/batches
    method: GET
    data_selector: batches
- name: get_single_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: GET
    data_selector: conversation
- name: edit_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: PUT
    data_selector: conversation
- name: mark_all_as_read
  endpoint:
    path: /api/v1/conversations/mark_all_as_read
    method: POST
- name: delete_conversation
  endpoint:
    path: /api/v1/conversations/:id
    method: DELETE
    data_selector: conversation
- name: create_course_pace
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing
    method: POST
    data_selector: quiz_extensions
    params: {}
- name: update_course_pace
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing/:id
    method: PUT
    data_selector: quiz_extensions
    params: {}
- name: delete_course_pace
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing/:id
    method: DELETE
    data_selector: ''
    params: {}
- name: status_of_report
  endpoint:
    path: /api/v1/courses/:course_id/reports/:report_type/:id
    method: GET
    data_selector: ''
    params: {}
- name: start_report
  endpoint:
    path: /api/v1/courses/:course_id/reports/:report_type
    method: POST
    data_selector: ''
    params: {}
- name: status_of_last_report
  endpoint:
    path: /api/v1/courses/:course_id/reports/:report_type
    method: GET
    data_selector: ''
    params: {}
- name: course_pace
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing/:id
    method: GET
    data_selector: course_pace
    params: {}
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
    params: {}
- name: create_course_pace
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing
    method: POST
- name: update_course_pace
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing/:id
    method: PUT
- name: delete_course_pace
  endpoint:
    path: /api/v1/courses/:course_id/course_pacing/:id
    method: DELETE
- name: set_quiz_extensions
  endpoint:
    path: /api/v1/courses/:course_id/quiz_extensions
    method: POST
- name: status_of_report
  endpoint:
    path: /api/v1/courses/:course_id/reports/:report_type/:id
    method: GET
- name: start_report
  endpoint:
    path: /api/v1/courses/:course_id/reports/:report_type
    method: POST
- name: status_of_last_report
  endpoint:
    path: /api/v1/courses/:course_id/reports/:report_type
    method: GET
- name: user_courses
  endpoint:
    path: /users/:user_id/courses
    method: GET
- name: user_progress
  endpoint:
    path: /courses/:course_id/users/:user_id/progress
    method: GET
- name: create_course
  endpoint:
    path: /accounts/:account_id/courses
    method: POST
- name: upload_file
  endpoint:
    path: /courses/:course_id/files
    method: POST
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: courses
- name: user_courses
  endpoint:
    path: /users/:user_id/courses
    method: GET
    data_selector: courses
- name: user_progress
  endpoint:
    path: /courses/:course_id/users/:user_id/progress
    method: GET
    data_selector: progress
- name: create_course
  endpoint:
    path: /accounts/:account_id/courses
    method: POST
    data_selector: course
- name: upload_file
  endpoint:
    path: /courses/:course_id/files
    method: POST
    data_selector: file
- name: students
  endpoint:
    path: /api/v1/courses/:course_id/students
    method: GET
- name: users
  endpoint:
    path: /api/v1/courses/:course_id/users
    method: GET
- name: recent_students
  endpoint:
    path: /api/v1/courses/:course_id/recent_students
    method: GET
- name: user
  endpoint:
    path: /api/v1/courses/:course_id/users/:id
    method: GET
- name: content_share_users
  endpoint:
    path: /api/v1/courses/:course_id/content_share_users
    method: GET
- name: preview_html
  endpoint:
    path: /api/v1/courses/:course_id/preview_html
    method: POST
- name: activity_stream
  endpoint:
    path: /api/v1/courses/:course_id/activity_stream
    method: GET
- name: activity_stream_summary
  endpoint:
    path: /api/v1/courses/:course_id/activity_stream/summary
    method: GET
- name: todo_items
  endpoint:
    path: /api/v1/courses/:course_id/todo
    method: GET
- name: destroy
  endpoint:
    path: /api/v1/courses/:id
    method: DELETE
- name: api_settings
  endpoint:
    path: /api/v1/courses/:course_id/settings
    method: GET
- name: update_settings
  endpoint:
    path: /api/v1/courses/:course_id/settings
    method: PUT
- name: student_view_student
  endpoint:
    path: /api/v1/courses/:course_id/student_view_student
    method: GET
- name: course
  endpoint:
    path: /api/v1/courses/:id
    method: GET
    data_selector: course
    params: {}
- name: update_course
  endpoint:
    path: /api/v1/courses/:id
    method: PUT
    data_selector: course
    params: {}
- name: students
  endpoint:
    path: /api/v1/courses/:course_id/students
    method: GET
- name: users
  endpoint:
    path: /api/v1/courses/:course_id/users
    method: GET
- name: recent_students
  endpoint:
    path: /api/v1/courses/:course_id/recent_students
    method: GET
- name: user
  endpoint:
    path: /api/v1/courses/:course_id/users/:id
    method: GET
- name: content_share_users
  endpoint:
    path: /api/v1/courses/:course_id/content_share_users
    method: GET
- name: preview_html
  endpoint:
    path: /api/v1/courses/:course_id/preview_html
    method: POST
- name: activity_stream
  endpoint:
    path: /api/v1/courses/:course_id/activity_stream
    method: GET
- name: activity_stream_summary
  endpoint:
    path: /api/v1/courses/:course_id/activity_stream/summary
    method: GET
- name: todo_items
  endpoint:
    path: /api/v1/courses/:course_id/todo
    method: GET
- name: destroy
  endpoint:
    path: /api/v1/courses/:id
    method: DELETE
- name: api_settings
  endpoint:
    path: /api/v1/courses/:course_id/settings
    method: GET
- name: update_settings
  endpoint:
    path: /api/v1/courses/:course_id/settings
    method: PUT
- name: student_view_student
  endpoint:
    path: /api/v1/courses/:course_id/student_view_student
    method: GET
- name: course
  endpoint:
    path: /api/v1/courses/:id
    method: GET
    data_selector: course
    params: {}
- name: custom_gradebook_columns
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns
    method: GET
    data_selector: custom_columns
- name: create_custom_gradebook_column
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns
    method: POST
    data_selector: custom_column
- name: update_custom_gradebook_column
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id
    method: PUT
    data_selector: custom_column
- name: delete_custom_gradebook_column
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id
    method: DELETE
    data_selector: custom_column
- name: list_column_data
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id/data
    method: GET
    data_selector: column_data
- name: update_column_data
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id/data/:user_id
    method: PUT
    data_selector: column_data
- name: bulk_update_column_data
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_column_data
    method: PUT
    data_selector: progress
- name: developer_key_account_bindings
  endpoint:
    path: /api/v1/accounts/:account_id/developer_keys/:developer_key_id/developer_key_account_bindings
    method: POST
- name: developer_keys
  endpoint:
    path: /api/v1/accounts/:account_id/developer_keys
    method: GET
- name: custom_gradebook_columns
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns
    method: GET
    data_selector: custom_columns
    params: {}
- name: create_custom_gradebook_column
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns
    method: POST
    data_selector: custom_column
    params: {}
- name: update_custom_gradebook_column
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id
    method: PUT
    data_selector: custom_column
    params: {}
- name: delete_custom_gradebook_column
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id
    method: DELETE
    data_selector: custom_column
    params: {}
- name: list_column_entries
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id/data
    method: GET
    data_selector: column_data
    params: {}
- name: update_column_data
  endpoint:
    path: /api/v1/courses/:course_id/custom_gradebook_columns/:id/data/:user_id
    method: PUT
    data_selector: column_datum
    params: {}
- name: developer_key_account_binding
  endpoint:
    path: /api/v1/accounts/:account_id/developer_keys/:developer_key_id/developer_key_account_bindings
    method: POST
    data_selector: DeveloperKeyAccountBinding
- name: developer_keys
  endpoint:
    path: /api/v1/accounts/:account_id/developer_keys
    method: GET
    data_selector: DeveloperKey
- name: discussion_topics
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics
    method: GET
    data_selector: DiscussionTopic
    params: {}
- name: create_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics
    method: POST
    data_selector: DiscussionTopic
    params: {}
- name: update_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: PUT
    data_selector: DiscussionTopic
    params: {}
- name: delete_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: DELETE
    data_selector: DiscussionTopic
    params: {}
- name: discussion_topics
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics
    method: GET
    data_selector: discussion_topics
    params: {}
- name: create_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics
    method: POST
    data_selector: discussion_topic
    params: {}
- name: update_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: PUT
    data_selector: discussion_topic
    params: {}
- name: delete_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: DELETE
    data_selector: discussion_topic
    params: {}
- name: discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: GET
    data_selector: discussion_topic
- name: discussion_topic_summary
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries
    method: GET
    data_selector: summary
- name: create_discussion_topic_summary
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries
    method: POST
    data_selector: summary
- name: disable_summary
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries/disable
    method: PUT
    data_selector: success
- name: feedback_summary
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries/:summary_id/feedback
    method: POST
    data_selector: feedback
- name: view_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/view
    method: GET
    data_selector: topic_view
- name: list_topic_entries
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries
    method: GET
    data_selector: entries
- name: add_entry
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries
    method: POST
    data_selector: entry
- name: duplicate_discussion_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/duplicate
    method: POST
    data_selector: duplicate_topic
- name: get_single_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id
    method: GET
- name: find_last_summary
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries
    method: GET
- name: find_or_create_summary
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries
    method: POST
- name: disable_summary
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries/disable
    method: PUT
- name: summary_feedback
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/summaries/:summary_id/feedback
    method: POST
- name: get_full_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/view
    method: GET
- name: post_entry
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries
    method: POST
- name: duplicate_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/duplicate
    method: POST
- name: list_topic_entries
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries
    method: GET
- name: post_reply
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/replies
    method: POST
- name: create_enrollment_term
  endpoint:
    path: /api/v1/accounts/:account_id/terms
    method: POST
    data_selector: enrollment_term
    params: {}
- name: enrollment_terms
  endpoint:
    path: /api/v1/accounts/:account_id/terms
    method: GET
    data_selector: enrollment_terms
- name: update_enrollment_term
  endpoint:
    path: /api/v1/accounts/:account_id/terms/:id
    method: PUT
    data_selector: enrollment_term
- name: delete_enrollment_term
  endpoint:
    path: /api/v1/accounts/:account_id/terms/:id
    method: DELETE
    data_selector: enrollment_term
- name: entry_replies
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/replies
    method: GET
    data_selector: replies
    params: {}
- name: entry_list
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entry_list
    method: GET
    data_selector: entries
    params:
      ids[]: string
- name: mark_topic_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read
    method: PUT
    data_selector: success
    params: {}
- name: mark_all_topic_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/read_all
    method: PUT
    data_selector: success
    params: {}
- name: mark_topic_unread
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read
    method: DELETE
    data_selector: success
    params: {}
- name: mark_all_entries_read
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read_all
    method: PUT
    data_selector: success
    params:
      forced_read_state: boolean
- name: mark_all_entries_unread
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/read_all
    method: DELETE
    data_selector: success
    params:
      forced_read_state: boolean
- name: rate_entry
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/entries/:entry_id/rating
    method: POST
    data_selector: success
    params:
      rating: integer
- name: subscribe_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/subscribed
    method: PUT
    data_selector: success
    params: {}
- name: unsubscribe_topic
  endpoint:
    path: /api/v1/courses/:course_id/discussion_topics/:topic_id/subscribed
    method: DELETE
    data_selector: success
    params: {}
- name: list_enrollments
  endpoint:
    path: /api/v1/courses/:course_id/enrollments
    method: GET
- name: enrollment_by_id
  endpoint:
    path: /api/v1/accounts/:account_id/enrollments/:id
    method: GET
- name: enroll_user
  endpoint:
    path: /api/v1/courses/:course_id/enrollments
    method: POST
- name: bulk_enrollment
  endpoint:
    path: /api/v1/accounts/:account_id/bulk_enrollment
    method: POST
- name: conclude_enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id
    method: DELETE
- name: accept_course_invitation
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id/accept
    method: POST
- name: reject_course_invitation
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id/reject
    method: POST
- name: reactivate_enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id/reactivate
    method: PUT
- name: add_last_attended_date
  endpoint:
    path: /api/v1/courses/:course_id/users/:user_id/last_attended
    method: PUT
- name: update_enrollment_term
  endpoint:
    path: /api/v1/accounts/:account_id/terms/:id
    method: PUT
- name: delete_enrollment_term
  endpoint:
    path: /api/v1/accounts/:account_id/terms/:id
    method: DELETE
- name: list_enrollment_terms
  endpoint:
    path: /api/v1/accounts/:account_id/terms
    method: GET
    params:
      workflow_state[]: active
      include[]: overrides
      term_name: ''
- name: retrieve_enrollment_term
  endpoint:
    path: /api/v1/accounts/:account_id/terms/:id
    method: GET
- name: epub_exports
  endpoint:
    path: /api/v1/epub_exports
    method: GET
    data_selector: courseEpubExports
    params: {}
- name: create_epub_export
  endpoint:
    path: /api/v1/courses/:course_id/epub_exports
    method: POST
    data_selector: epubExport
    params: {}
- name: show_epub_export
  endpoint:
    path: /api/v1/courses/:course_id/epub_exports/:id
    method: GET
    data_selector: epubExport
    params: {}
- name: external_tools
  endpoint:
    path: /api/v1/courses/:course_id/external_tools
    method: GET
    data_selector: external_tools
    params: {}
- name: sessionless_launch
  endpoint:
    path: /api/v1/courses/:course_id/external_tools/sessionless_launch
    method: GET
    data_selector: sessionless_launch
    params: {}
- name: single_external_tool
  endpoint:
    path: /api/v1/courses/:course_id/external_tools/:external_tool_id
    method: GET
    data_selector: external_tool
    params: {}
- name: enrollments
  endpoint:
    path: /api/v1/courses/:course_id/enrollments
    method: GET
    data_selector: enrollments
    params: {}
- name: enrollment_by_id
  endpoint:
    path: /api/v1/accounts/:account_id/enrollments/:id
    method: GET
    data_selector: enrollment
    params: {}
- name: enroll_user
  endpoint:
    path: /api/v1/courses/:course_id/enrollments
    method: POST
    data_selector: enrollment
    params: {}
- name: bulk_enrollment
  endpoint:
    path: /api/v1/accounts/:account_id/bulk_enrollment
    method: POST
    data_selector: progress
    params: {}
- name: accept_course_invitation
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id/accept
    method: POST
    data_selector: success
    params: {}
- name: reject_course_invitation
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id/reject
    method: POST
    data_selector: success
    params: {}
- name: reactivate_enrollment
  endpoint:
    path: /api/v1/courses/:course_id/enrollments/:id/reactivate
    method: PUT
    data_selector: enrollment
    params: {}
- name: last_attended
  endpoint:
    path: /api/v1/courses/:course_id/users/:user_id/last_attended
    method: PUT
    data_selector: enrollment
    params: {}
- name: external_tools
  endpoint:
    path: /api/v1/courses/:course_id/external_tools
    method: POST
    data_selector: external_tool
    params: {}
- name: favorites_courses
  endpoint:
    path: /api/v1/users/self/favorites/courses
    method: GET
    data_selector: courses
    params: {}
- name: favorites_groups
  endpoint:
    path: /api/v1/users/self/favorites/groups
    method: GET
    data_selector: groups
    params: {}
- name: ePub Export List
  endpoint:
    path: /api/v1/epub_exports
    method: GET
    data_selector: course_epub_exports
- name: Create ePub Export
  endpoint:
    path: /api/v1/courses/:course_id/epub_exports
    method: POST
    data_selector: epub_export
- name: Show ePub export
  endpoint:
    path: /api/v1/courses/:course_id/epub_exports/:id
    method: GET
    data_selector: epub_export
- name: list_features
  endpoint:
    path: /api/v1/courses/:course_id/features
    method: GET
- name: list_enabled_features
  endpoint:
    path: /api/v1/courses/:course_id/features/enabled
    method: GET
- name: list_environment_features
  endpoint:
    path: /api/v1/features/environment
    method: GET
- name: get_feature_flag
  endpoint:
    path: /api/v1/courses/:course_id/features/flags/:feature
    method: GET
- name: set_feature_flag
  endpoint:
    path: /api/v1/courses/:course_id/features/flags/:feature
    method: PUT
- name: remove_feature_flag
  endpoint:
    path: /api/v1/courses/:course_id/features/flags/:feature
    method: DELETE
- name: external_tools
  endpoint:
    path: /api/v1/courses/:course_id/external_tools
    method: GET
    data_selector: external_tools
    params: {}
- name: sessionless_launch
  endpoint:
    path: /api/v1/courses/:course_id/external_tools/sessionless_launch
    method: GET
    data_selector: sessionless_launch
    params: {}
- name: single_external_tool
  endpoint:
    path: /api/v1/courses/:course_id/external_tools/:external_tool_id
    method: GET
    data_selector: external_tool
    params: {}
- name: files
  endpoint:
    path: /api/v1/courses/:course_id/files
    method: GET
    data_selector: files
- name: public_url
  endpoint:
    path: /api/v1/files/:id/public_url
    method: GET
    data_selector: public_url
- name: get_file
  endpoint:
    path: /api/v1/files/:id
    method: GET
    data_selector: file
- name: delete_file
  endpoint:
    path: /api/v1/files/:id
    method: DELETE
    data_selector: file
- name: list_folders
  endpoint:
    path: /api/v1/folders/:id/folders
    method: GET
    data_selector: folders
- name: get_folder
  endpoint:
    path: /api/v1/courses/:course_id/folders/:id
    method: GET
    data_selector: folder
- name: external_tools
  endpoint:
    path: /api/v1/courses/:course_id/external_tools
    method: POST
    data_selector: external_tool
- name: favorite_courses
  endpoint:
    path: /api/v1/users/self/favorites/courses
    method: GET
    data_selector: courses
- name: favorite_groups
  endpoint:
    path: /api/v1/users/self/favorites/groups
    method: GET
    data_selector: groups
- name: grade_change_events_by_assignment
  endpoint:
    path: /api/v1/audit/grade_change/assignments/:assignment_id
    method: GET
    data_selector: null
    params:
      start_time: DateTime
      end_time: DateTime
- name: grade_change_events_by_course
  endpoint:
    path: /api/v1/audit/grade_change/courses/:course_id
    method: GET
    data_selector: null
    params:
      start_time: DateTime
      end_time: DateTime
- name: grade_change_events_by_student
  endpoint:
    path: /api/v1/audit/grade_change/students/:student_id
    method: GET
    data_selector: null
    params:
      start_time: DateTime
      end_time: DateTime
- name: grade_change_events_by_grader
  endpoint:
    path: /api/v1/audit/grade_change/graders/:grader_id
    method: GET
    data_selector: null
    params:
      start_time: DateTime
      end_time: DateTime
- name: advanced_grade_change_query
  endpoint:
    path: /api/v1/audit/grade_change
    method: GET
    data_selector: null
    params:
      course_id: integer
      assignment_id: integer
      student_id: integer
      grader_id: integer
      start_time: DateTime
      end_time: DateTime
- name: list_features
  endpoint:
    path: /api/v1/courses/:course_id/features
    method: GET
    data_selector: features
- name: list_enabled_features
  endpoint:
    path: /api/v1/courses/:course_id/features/enabled
    method: GET
    data_selector: enabled_features
- name: list_environment_features
  endpoint:
    path: /api/v1/features/environment
    method: GET
    data_selector: environment_features
- name: get_feature_flag
  endpoint:
    path: /api/v1/courses/:course_id/features/flags/:feature
    method: GET
    data_selector: feature_flag
- name: set_feature_flag
  endpoint:
    path: /api/v1/courses/:course_id/features/flags/:feature
    method: PUT
    data_selector: updated_feature_flag
- name: remove_feature_flag
  endpoint:
    path: /api/v1/courses/:course_id/features/flags/:feature
    method: DELETE
    data_selector: deleted_feature_flag
- name: list_files
  endpoint:
    path: /api/v1/courses/:course_id/files
    method: GET
    data_selector: files
- name: get_public_inline_preview_url
  endpoint:
    path: /api/v1/files/:id/public_url
    method: GET
    data_selector: public_url
- name: get_file
  endpoint:
    path: /api/v1/files/:id
    method: GET
    data_selector: file
- name: update_file
  endpoint:
    path: /api/v1/files/:id
    method: PUT
    data_selector: file
- name: delete_file
  endpoint:
    path: /api/v1/files/:id
    method: DELETE
    data_selector: file
- name: get_icon_metadata
  endpoint:
    path: /api/v1/files/:id/icon_metadata
    method: GET
    data_selector: icon_metadata
- name: grade_change_events_by_assignment
  endpoint:
    path: /api/v1/audit/grade_change/assignments/:assignment_id
    method: GET
    data_selector: GradeChangeEvent
    params:
      start_time: DateTime
      end_time: DateTime
- name: grade_change_events_by_course
  endpoint:
    path: /api/v1/audit/grade_change/courses/:course_id
    method: GET
    data_selector: GradeChangeEvent
    params:
      start_time: DateTime
      end_time: DateTime
- name: grade_change_events_by_student
  endpoint:
    path: /api/v1/audit/grade_change/students/:student_id
    method: GET
    data_selector: GradeChangeEvent
    params:
      start_time: DateTime
      end_time: DateTime
- name: grade_change_events_by_grader
  endpoint:
    path: /api/v1/audit/grade_change/graders/:grader_id
    method: GET
    data_selector: GradeChangeEvent
    params:
      start_time: DateTime
      end_time: DateTime
- name: grade_change_events_advanced_query
  endpoint:
    path: /api/v1/audit/grade_change
    method: GET
    data_selector: GradeChangeEvent
    params:
      course_id: integer
      assignment_id: integer
      student_id: integer
      grader_id: integer
      start_time: DateTime
      end_time: DateTime
notes:
- Some objects may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects may return nulls in deeply nested fields.
- To access API endpoints for most of our services you need to get an Access Key.
- API responses may vary based on user permissions.
- Rate limits are enforced on API calls.
- Rate limits are enforced on all API requests.
- Uses OAuth2 for authentication
- Ensure correct OAuth2 setup for API access.
- Use SSL for all requests to the API.
- Treat the API key like a password.
- Non-SSL requests will result in redirects, and your API key will be sent in the
  clear.
- Rate limits may apply to the API usage
- Most API requests require a valid session.
- API requests are limited at a rate of 2500 requests per hour per user.
- Authenticating requests with an OAuth2 Bearer token
- Some objects may require specific permissions to access.
- Request body should be in JSON format
- Uses OAuth2 with refresh token — requires setup of connected app in API
- Some endpoints may have rate limits
- API usage is subject to rate limits.
- Uses OAuth2 with password grant for authentication.
- When a response is paginated, the response headers will include a link header.
- If the endpoint does not support pagination, or if all results fit on a single page,
  the link header will be omitted.
- The link header contains URLs that you can use to fetch additional pages of results.
- Uses OAuth2 with refresh token — requires setup of connected app in Instructure
- Requires OAuth2 authentication setup.
- API rate limits apply.
- Access tokens will expire, and if an expired token is used, a 401 status code will
  be returned.
- The refresh token can be used to automatically renew an access token without requiring
  the password again.
- Ensure to handle rate limits appropriately.
- User must have an owner role on the issuer.
- Requires OAuth access token for authorization
- Restricted to owners or editors (not staff) of the corresponding Issuer.
- Restricted to owners or editors of the corresponding Issuer.
- Requires OAuth2 access token for all requests.
- Requires OAuth2 authentication
- Uses OAuth2 for authorization.
- Uses OAuth2 authentication
- Some properties are optional while creating issuers and badge classes.
- Some objects like Course may return nulls in deeply nested fields
- Some API responses may include additional metadata.
- Snapshot queries are ideal for creating an initial full copy of the dataset or for
  occasional full updates.
- Incremental queries retrieve only the changes or updates that have occurred since
  the last query.
- Snapshot queries cover the last 30 days of data for the canvas_logs dataset.
- Data in DAP is refreshed every 4 hours.
- The DAP API does not support time-travel queries, meaning it only provides access
  to the latest state of the data.
- Output always begins with a header row, which lists all metadata and data field
  names.
- Strings are quoted with double quotes if they contain special characters such as
  the double quote itself, the comma delimiter, a newline, a carriage return, a tab
  character, etc.
- Empty strings are always represented as "" to avoid ambiguity with missing values.
- Missing values (a.k.a. NULL) are represented with no data (no characters between
  delimiters).
- Parquet files do not have a simple header row as seen in TSV or CSV formats.
- Parquet uses nullable columns for missing data and stores them efficiently.
- Some endpoints may require specific permissions.
- Call Throttling may apply.
- Rate Limits & Policies apply to API usage.
- API requires OAuth2 authentication.
- Be aware of rate limits while making requests.
- DAP CLI follows the rate limiting policies of DAP. Be mindful of these limits when
  making requests.
- Be mindful of rate limiting policies when making requests.
- Ensure OAuth2 token is valid for API access.
- API supports both REST and GraphQL
- Ensure to handle rate limiting
- OAuth2 authentication required.
- Rate limits apply to API requests.
- Some objects like Contact may return nulls in deeply nested fields
- Check API limits to avoid throttling.
- Requires OAuth2 authorization.
- Some endpoints may require additional parameters not listed in the base documentation.
- Uses OAuth2 with bearer token.
- OAuth2 authentication is required for accessing the API.
- API calls may be throttled.
- The API supports both REST and GraphQL.
- Ensure OAuth2 credentials are properly set up.
- Some objects like Quiz may return nulls in deeply nested fields
- API supports pagination and rate limiting.
- Requires setup of connected app in api
- AB Connect is built upon the most comprehensive collection of connected K-12 standards
  metadata.
- user.id is optional
- Uses HMAC for authentication.
- By default, list results are returned in order of decreasing relevance.
- Page sizes are capped at 100 objects per page to prevent resource depletion on the
  server.
- Uses token bucket model for rate limiting
- Some accounts may have different limits and these thresholds may change over time
- Each field can have only one value, so you can't mix methods or support multiple
  endpoints.
- Keep your partner key secret. Don't send it to the web client for any reason.
- Limit the method to the minimum required capabilities.
- Filter limits the results that are returned or updated by the request.
- Rate limits are enforced globally and per user.
- All endpoints except Clarifier support faceting.
- Facet summaries that have high counts may not be exact - they are approximate for
  performance reasons.
- The data available on the relationship endpoints is a conflation between the related
  object (attributes and relationships) and the relationship properties (meta).
- Objects returned on the relationship endpoint do not support accessing *their* relationships
  nor including the further related data.
- Standards are organized hierarchically under authorities.
- Check the utilization.type of a Standard to validate its usage.
- Crosswalks are not available on all accounts.
- Content alignment is not a once and done situation.
- Using sparse fieldsets and minimizing facet requests are recommended for better
  performance.
- All calls against the Standards resource must be implemented as HTTP GET requests.
- Uses HMAC SHA256 for authentication — requires partner ID and key.
- Default page size is 10 elements.
- Access to AB Concepts is licensed separately.
- If you are receiving a 401 error, check with AB Support to ensure you are licensed.
- API controls limit call frequency and payload sizes.
- Some accounts may have different limits and thresholds may change over time.
- Allowing 'all methods' on one endpoint is not currently supported.
- All calls against the Asset resource must include proper Partner Authentication
  Credentials.
- Filtering utilizes the filter parameter in the URL query.
- Results are returned in order of decreasing relevance by default.
- The facet results appear in the meta section of the JSON API response.
- Faceting on a large number of values has performance implications and should be
  avoided.
- Access to the Academic Benchmarks data and services is licensed by breadth of coverage
  (authority and subject area) as well as depth of metadata and functionality.
- When filtering Standards, deleted Standards are excluded from filter results unless
  the filter criteria explicitly includes Standards with deleted status.
- Access to Predictions is licensed.
- Calculating Predictions can be resource intensive and take several seconds or even
  a few minutes.
- In many cases, an authority will clearly state that their Standards are derived
  from a national document but in cases where they disclaim derivation but are very
  closely modeled after the national document, AB Connect still exposes derivative
  relationships.
- While a Standard will often have a 1:1 mapping with a Standard in a derived state,
  it is possible that there are multiple Standards derived from the single national
  Standard. This typically happens when a state breaks out a compound Standard into
  multiple, more specific Standards.
- All API responses are in JSON format.
- All timestamps are sent and returned in ISO 8601 format (UTC time zone).
- Ensure proper handling of Standards updates and alignments
- All calls against the Standards resource must be implemented as HTTP GET requests,
  and must include proper Partner Authentication Credentials.
- Developer keys issued after Oct 2015 generate tokens with a 1 hour expiration. Applications
  must use refresh tokens to generate new access tokens.
- Requires setup of developer keys and appropriate scopes.
- Some endpoints require specific account_id to be provided.
- Calculating Predictions can take several seconds to a few minutes.
- Returns a paginated list of announcements for the given courses and date range.
- Requests that return multiple items will be paginated to 10 items by default.
- The returned Link headers should be used to retrieve additional pages.
- 'BETA: This API endpoint is not finalized, and there could be breaking changes before
  its final release.'
- URL to the external tool is http://instructure.com
- Developer keys may be scoped or unscoped.
- Unscoped keys will have access to all Canvas resources available to the authorizing
  user.
- Returns a paginated list of authentication providers
- Each authentication provider must include an 'auth_type' parameter.
- Provider specifications not specifying a valid auth_type are ignored.
- Returns the paginated list of announcements for the given courses and date range.
- Supports various assignment-related objects including Assignment, RubricRating,
  and NeedsGradingCount.
- While the expires, signature and optionally the user are included in the URL parameters,
  the method and resource values are inferred from the actual call being made.
- Make the life of the signature reasonably short.
- When requesting facets with a large number of values (count > 10,000) only the first
  10,000 entries are returned.
- Data available on the relationship endpoints is a conflation between the related
  object and the relationship properties.
- Objects returned on the relationship endpoint do not support accessing their relationships.
- Filtering is done using the filter parameter in the URL query.
- Results are returned in order of decreasing relevance.
- AB Connect allows you to share your content's description with your partners.
- Although this section focused on the Standards endpoint as an example, all endpoints
  except Clarifier support faceting.
- Facet summaries that have high counts (counts in the thousands) may not be exact
  - they are approximate for performance reasons.
- Using sparse fieldsets and minimizing facet requests can improve performance.
- Lazy load the UI to request just enough information to show the user what they requested.
- Standards may not have unique identifiers.
- Deleted standards can be accessed but may have limited metadata.
- AB Connect handles Consumer's licensing automatically.
- Uses AB Connect's Embeddable Widgets for integration.
- Delivery Events can occur on sections as well as documents.
- Events that occur on Standards that are not delivered to you are not visible to
  you.
- API authentication is done with OAuth2.
- The request is signed and will be denied if any parameters from the upload_params
  response are added, removed or modified.
- Developer keys issued after Oct 2015 generate tokens with a 1 hour expiration
- Applications must use refresh tokens to generate new access tokens
- The Academic Benchmarks Topic Taxonomy is licensed separately.
- Developer keys issued after Oct 2015 generate tokens with a 1 hour expiration.
- Use of Academic Benchmarks Assets, Topics, Concepts and Clarifier is enabled through
  licensing.
- The account's identifier in the Student Information System is included if the user
  has permission to view SIS information.
- To locate your own Provider object, use the filter parameter and request Providers
  with ID '_me'.
- Uses OAuth2 with Bearer token for authentication.
- Canvas uses OAuth2 for authentication and authorization of the Canvas API.
- Grading periods must exist to request assignment groups.
- The main directive for filtering entities in AB Connect is the inclusion of the
  filter parameter in the URL query.
- Uses OAuth2 with refresh token — requires setup of connected app in AB Connect
- Ensure proper licensing for shared data with Consumers
- Use sparse fieldsets to request only the specific fields required
- Requests must include partner ID and key for authentication.
- Responses are handled by a production Academic Benchmarks server.
- Keep your partner key secret.
- Filtering can utilize the filter parameter in the URL query.
- Standards are organized in a hierarchy but are not necessarily returned in that
  order.
- AB Connect allows sharing of content descriptions with partners.
- Uses sparse fieldsets to optimize performance
- Best practice is to lazy load data rather than fetching large sets
- Access to the Clarifier is controlled by licensing.
- The request is signed, and will be denied if any parameters from the upload_params
  response are added, removed or modified.
- Content Enrichment uses intermediaries like Topics, Concepts and Key Ideas when
  relating Asset and Standards.
- Welcome to Our New API Docs! This is the new home for all things API.
- All API responses are in JSON format
- All timestamps are sent and returned in ISO 8601 format (UTC time zone)
- Applications must use refresh tokens to generate new access tokens.
- API for accessing Assignment Group and Assignment information.
- Requires setup of connected app in Canvas
- 'BETA: This API resource is not finalized, and there could be breaking changes before
  its final release.'
- Mark all conversations as read using a single endpoint.
- This is the new home for all things API.
- If a user has content management rights, but not full course editing rights, the
  only attribute editable through the update endpoint will be 'syllabus_body'.
- Allowed values for course[event] include 'claim', 'offer', 'conclude', 'delete',
  'undelete'.
- Creating an LTI 1.3 registration is not supported here and should be done via the
  LTI Registration API.
- Returns the paginated list of discussion topics for this course or group.
- Currently, only a root level admin user can return other users’ enrollments.
- The API supports operations for adding and removing favorites for courses and groups.
- The API supports pagination for file listing.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Invalid access token.
- '404 Not Found: The requested resource was not found.'
- '403 Forbidden: You do not have permission to access this resource.'
- '429 Too Many Requests: You have hit a rate limit.'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Ensure valid access token'
- '429 Too Many Requests: Rate limit exceeded'
- '204: Updating a program'
- '204: Deleting a specific program'
- '200: Listing programs'
- 201 Creating a program
- 200 Getting a specific email domain set
- '401 Unauthorized: Check your access token.'
- '404 Not Found: Ensure the endpoint is correct.'
- '401 Unauthorized: Invalid access token.'
- '404 Not Found: Resource does not exist.'
- '404 Not Found: Check the endpoint path'
- '401 Unauthorized: Recheck OAuth credentials'
- '429 Too Many Requests: Throttle API calls'
- 'INVALID_REQUEST: Ensure all required parameters are included.'
- 'ACCESS_DENIED: Check that the user has the necessary permissions.'
- '401 Unauthorized: Recheck OAuth token validity.'
- '403 Forbidden: Check your permissions.'
- '404 Not Found: Verify the endpoint.'
- '400 Bad Request: Check required parameters.'
- '400 Bad Request: Check request parameters and body'
- '401 Unauthorized: Ensure OAuth access token is valid'
- 400 Bad Request
- '400 Bad Request: Check the request body for required fields'
- '400 Bad Request: Invalid parameters or data format.'
- '400 Bad Request: Validate request parameters.'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Ensure valid OAuth token'
- '400: Bad Request'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check your API token'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: The requested resource does not exist'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify authentication credentials.'
- '404 Not Found: Check the endpoint path.'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: Verify the endpoint URL.'
- Codes in the 2xx range indicate success.
- Codes in the 4xx range indicate incorrect or incomplete parameters (e.g. invalid
  authentication credentials, non-exist namespace etc.).
- Codes in the 5xx range indicate a server-side issue (e.g. gateway timeout error,
  restricted client access etc.).
- '401 Unauthorized: Check your API token.'
- '404 Not Found: Check endpoint path'
- '500 Internal Server Error: Try again later'
- Codes in the 4xx range indicate incorrect or incomplete parameters.
- Codes in the 5xx range indicate a server-side issue.
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Token may be expired.'
- '404 Not Found: Ensure that the resource exists.'
- '404: ID not found'
- '409: Conflict, when running the schedule is rejected'
- '429: When running the schedule is rejected due to rate limiting'
- '400 Bad Request: Check the request format and parameters.'
- '404 Not Found: Ensure the resource ID is correct.'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Ensure the token is valid.'
- '404 Not Found: Verify the endpoint path.'
- '401 Unauthorized: Recheck bearer token'
- '404 Product not found: Validate the product ID'
- '422 Not accepting leads: Unprocessable Entity'
- '404 Not Found: Check the endpoint and parameters.'
- '403 Forbidden: Ensure proper authorization.'
- '401 Unauthorized: Recheck authentication parameters.'
- 'HTTP 429: Rate limit exceeded'
- 401 Unauthorized
- 404 Product not found
- 'Unauthorized: Recheck your credentials.'
- 'Request failed: Verify the request format and parameters.'
- '404 Not Found: Check the endpoint or resource ID.'
- '403 Forbidden: Verify your permissions.'
- 'HTTP 429: Rate limit exceeded, wait before making another call.'
- '400 Bad Request: Check query parameters for correctness'
- '404 Not Found: Verify endpoint and resource identifiers'
- '401 Unauthorized: Check your credentials and licensing.'
- 'ActiveRecord::RecordNotFound: Unknown host'
- '401 Unauthorized: Check partner ID, key or signature.'
- 'HTTP 429: Too Many Requests - Rate limiting error.'
- '401 Unauthorized: Recheck credentials or signature expiration'
- 'HTTP 429: Rate limit exceeded. Consider implementing client-side throttling.'
- '401 Unauthorized: Check your credentials and the details of the error message body.'
- '401 Unauthorized: Check with AB Support to ensure you are licensed for Predictions.'
- 'invalid_scope: If the developer key does require scopes and no scope parameter
  is specified.'
- '401 Unauthorized: Check the provided access token and its scopes.'
- '401 Unauthorized: Recheck OAuth token or permissions.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '401 Unauthorized: Requested endpoint''s scope has not been granted.'
- '401 Unauthorized: Check the partner key or signature.'
- 'HTTP 429: Rate limit exceeded. Implement client-side throttling.'
- '403: Not licensed for the given GUID.'
- '404: GUID not found.'
- '500: Internal server error.'
- Authentication errors will be surfaced to the parent app.
- '403 Forbidden: Verify licensing or request access to additional GUIDs.'
- '401 Unauthorized: Recheck credentials or licensing.'
- '403 Forbidden (Rate Limit Exceeded): Your application should be prepared for this
  error.'
- '401 Unauthorized: Check with AB Support to ensure you are licensed.'
- 'unauthorized_client: Developer key not enabled for the requested account'
- '401 Unauthorized: Verify token or scopes'
- '403 Forbidden (Rate Limit Exceeded): Your application should be prepared for this
  error and retry the request at a later time.'
- '301 Moved Permanently: Follow the redirect to the new location.'
- '201 Created: Check the Location header for the created resource.'
- 'unauthorized_client: If the developer key is not enabled in the requested account'
- '403 Forbidden: Not allowed to extend assignments for this course'
- '400 Bad Request: Any of the extensions are invalid'
- '401 Unauthorized: Check partner key or ID.'
- 'HTTP 429: Rate limit exceeded, please adjust your request frequency.'
- '401 Unauthorized: Recheck credentials or license'
- '400 Bad Request: Check the request format and parameters'
- '401 Unauthorized: Recheck API keys or token expiration.'
- '403 Forbidden: Check license access for requested GUID.'
- '404 Not Found: Requested resource does not exist.'
- '401 Unauthorized: Check with AB Support to ensure you are licensed for Predictions
  or Clarifier.'
- '401 Unauthorized: Check credentials and licensing for access.'
- '403 Forbidden (Rate Limit Exceeded): Your application should be prepared for this
  error, and retry the request at a later time.'
- 'invalid_scope: Ensure the requested scopes are valid for the developer key'
- 'unauthorized_client: Developer key not enabled for the requested account.'
- '403 Forbidden: If you are not allowed to extend assignments for this course'
- '400 Bad Request: If any of the extensions are invalid'
- '401 Unauthorized: If the user does not have permission or the token is invalid.'
- '404 Not Found: Course or group ID does not exist'
- '401 Unauthorized: Invalid or missing access token'
- '403 Forbidden: Check permissions for the user.'
- '404 Not Found: The specified file does not exist.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - oauthaccessToken
  - NamedCredential
  - TenantInfo
  - Actor
  - Integration
  - OAuth2
  - AccessToken
  - ClientCredentials
  - partner.id
  - auth.signature
  - auth.expires
  - DeveloperKey
client:
  base_url: https://<canvas>
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
