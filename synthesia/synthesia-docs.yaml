resources:
- name: Entity ID
  endpoint:
    path: urn:amazon:cognito:sp:eu-west-1_7hEawdalF
    method: SET
    data_selector: Entity ID
    params: {}
- name: Reply URL
  endpoint:
    path: https://studio.auth.synthesia.io/saml2/idpresponse
    method: SET
    data_selector: Reply URL
    params: {}
- name: Unique User Identifier
  endpoint:
    path: ToLowercase(user.mail)
    method: SET
    data_selector: Unique User Identifier
    params: {}
- name: Attributes
  endpoint:
    path: email, company, family_name, given_name
    method: SET
    data_selector: Attributes
    params: {}
- name: templates
  endpoint:
    path: /templates/
    method: GET
    data_selector: ''
- name: avatar_ids
  endpoint:
    path: /avatars
    method: GET
    data_selector: avatars
    params: {}
- name: videos_from_template
  endpoint:
    path: /videos/fromTemplate
    method: POST
- name: Single Sign On URL
  endpoint:
    path: https://studio.auth.synthesia.io/saml2/idpresponse
    method: GET
- name: Audience URI
  endpoint:
    path: urn:amazon:cognito:sp:eu-west-1_7hEawdalF
    method: GET
- name: webhook
  endpoint:
    path: /v2/webhooks/{webhook_id}
    method: GET
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
- name: script_audio
  endpoint:
    path: /v2/scriptAudio
    method: POST
- name: list_videos
  endpoint:
    params:
      source:
      - workspace
      - my_videos
      - shared_with_me
- name: list_templates
  endpoint:
    params:
      source:
      - workspace
      - synthesia
- name: videos
  endpoint:
    path: /videos
    method: POST
- name: avatar_generation
  endpoint:
    path: /api/v1/avatars/generate
    method: POST
- name: photo_upload
  endpoint:
    path: /api/v1/photos/upload
    method: POST
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: videos
    params: {}
- name: create_brand_kit
  endpoint:
    path: /create/brand_kit
    method: POST
    data_selector: result
    params: {}
- name: manage_brand_kits
  endpoint:
    path: /manage/brand_kits
    method: GET
    data_selector: kits
    params: {}
- name: apply_brand_kit
  endpoint:
    path: /apply/brand_kit
    method: PUT
    data_selector: result
    params: {}
- name: supported_voices
  endpoint:
    path: /voices
    method: GET
    data_selector: voices
- name: create_video
  endpoint:
    path: /create_video
    method: POST
    data_selector: response
    params:
      test: 'true'
      title: My first Synthetic video
      scriptText: Hello, World! This is my first synthetic video, made with the Synthesia
        API!
      avatar: anna_costume1_cameraA
      background: green_screen
- name: retrieve_video
  endpoint:
    path: /retrieve_video
    method: GET
    data_selector: status
    params: {}
- name: workspace_settings
  endpoint:
    path: /api/v1/workspace/settings
    method: GET
    data_selector: settings
    params: {}
- name: workspace_members
  endpoint:
    path: /api/v1/workspace/members
    method: GET
    data_selector: members
    params: {}
- name: video_metadata
  endpoint:
    path: /api/video/metadata
    method: GET
    data_selector: videoMetadata
- name: video_preview
  endpoint:
    path: /api/video/preview
    method: GET
    data_selector: videoPreview
- name: video_generation
  endpoint:
    path: /api/video/generate
    method: POST
    data_selector: videoGeneration
- name: videos
  endpoint:
    path: /videos
    method: PATCH
    data_selector: ''
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: POST
- name: screen_recording
  endpoint:
    path: /recordings
    method: POST
    data_selector: recordings
    params: {}
- name: create_video_from_template
  endpoint:
    path: /v1/videos
    method: POST
    data_selector: video
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhooks
    params: {}
- name: delete_webhooks
  endpoint:
    path: /webhooks/
    method: DELETE
- name: organization_settings
  endpoint:
    path: /organization/settings
    method: GET
    data_selector: settings
    params: {}
- name: feature_settings
  endpoint:
    path: /organization/feature_settings
    method: GET
    data_selector: features
    params: {}
- name: organization_invitations
  endpoint:
    path: /organization/invitations
    method: GET
    data_selector: invitations
    params: {}
- name: organization_permissions
  endpoint:
    path: /organization/permissions
    method: GET
    data_selector: permissions
    params: {}
- name: members
  endpoint:
    path: /organization/members
    method: GET
    data_selector: members
    params: {}
- name: workspaces
  endpoint:
    path: /organization/workspaces
    method: GET
    data_selector: workspaces
    params: {}
- name: translation
  endpoint:
    path: /translate
    method: POST
    data_selector: translations
    params: {}
- name: xliff_upload
  endpoint:
    path: /upload/xliff
    method: POST
    data_selector: uploads
    params: {}
- name: publish_translations
  endpoint:
    path: /publish/translations
    method: POST
    data_selector: publish
    params: {}
- name: Create Video
  endpoint:
    method: POST
- name: List Videos
  endpoint:
    method: GET
- name: Retrieve Video
  endpoint:
    method: GET
- name: video_embed
  endpoint:
    path: /embeds/videos/{video_id}
    method: GET
- name: video_share
  endpoint:
    path: /videos/{video_id}
    method: GET
- name: videos
  endpoint:
    path: /videos/
    method: GET
    data_selector: status
    params: {}
- name: personalized_videos
  endpoint:
    path: /bulk_personalization
    method: POST
    data_selector: videos
    params: {}
- name: translated_video
  endpoint:
    path: /translate/manual
    method: POST
- name: video_completed
  endpoint:
    path: /webhooks/video.completed
    method: POST
    data_selector: data
- name: video_failed
  endpoint:
    path: /webhooks/video.failed
    method: POST
    data_selector: data
- name: templates
  endpoint:
    path: /templates
    method: GET
    data_selector: null
    params:
      SOURCE: null
- name: video
  endpoint:
    path: /api/videos
    method: GET
    data_selector: videos
    params: {}
- name: video_xliff
  endpoint:
    path: /videos//xliff
    method: GET
    data_selector: application/xml
- name: template
  endpoint:
    path: /templates
    method: GET
    data_selector: templates
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhooks
    params: {}
- name: create_personal_avatar
  endpoint:
    path: /create/avatar
    method: POST
    data_selector: avatar_creation_response
- name: delete_personal_avatar
  endpoint:
    path: /delete/avatar
    method: DELETE
    data_selector: avatar_deletion_response
- name: delete_video
  endpoint:
    path: /videos/{video_id}
    method: DELETE
notes:
- User will still be able to login with email and password during the testing phase.
- Login with SSO is not yet enabled during the testing phase.
- Search results are based on title and description (not script content).
- The dropdown shows your recently accessed content, not your most recent searches.
- The NameID must be lower case.
- The email must be lower case.
- Crowdin requires a Synthesia API key to access your video content.
- You can add a bullet point to a text element by typing an asterisk (*) and hitting
  the spacebar.
- Change allIf you click Change all after changing a color, Synthesia replaces ALL
  occurrences of that color by the new one across your whole video.
- You must be at least 18 years of age to create a Studio Avatar.
- Edits that have removed parts of the performance from the middle of the video or
  jump cuts are not permitted. Your footage may be rejected if there are any jump
  cuts or edits that remove parts of your performance.
- 'Important: A key requirement of the photos is that nobody else can appear in them.'
- By default, published videos are not discoverable via search engines.
- SCORM export is an Enterprise Plan feature.
- Video Analytics are only available for videos shared via Synthesia's video player.
- You need to provide your Synthesia API key to finish the integration process.
- Brand kits and their permissions are workspace-level.
- None of the brand kit components are required, and there is no minimum amount to
  specify for any of them.
- Avatar and Voice sharing are only available on Synthesia's Enterprise plan.
- This API requires OAuth2 authentication.
- Voice IDs can be used to select specific voices.
- Some Workspace settings are overridden by Organization settings.
- The maximum amount of scenes per video is 50 scenes.
- Viewers can toggle captions on and off from within the video player.
- Voice cloning is an Enterprise Plan feature.
- Deleting a voice will permanently delete it and all data associated with it. This
  action cannot be undone.
- When you create an API key it will belong to your account, not the workspace.
- All languages and dialects supported for Synthesia translation feature.
- The AI screen recorder allows for a maximum duration of 60 minutes.
- It is recommended to keep recordings under 30 minutes for smoother transcription
  and easier editing.
- Variables are case sensitive.
- Variable names for text and media elements can only contain alphanumeric characters
  and underscores.
- Organizations are only available for Synthesia Enterprise plans.
- When an organization is deleted, all workspaces (and the content within them!) are
  permanently deleted.
- Video translation is an Enterprise Plan feature.
- You can only perform translations using a single method (either manual selection
  or .xliff upload).
- Deleting a folder containing translations cannot be undone.
- If you log in via SSO, you will not have the option to change your password or authentication
  method.
- Translations are available in 80+ languages, and captions are available in 60+ languages.
- A video's status may be `in_progress` for 2-40 minutes.
- If the video's status is `completed`, the response will include time-limited download
  URLs for captions in .srt and .vtt formats, video file in .mp4 format, static thumbnail
  in .jpg format, and animated thumbnail in .gif format (if a GIF thumbnail is present).
- It's not possible to save your videos or your progress before generation.
- If the signature is compromised, recreate the webhook subscription to prevent unauthorized
  access.
- The connection is one-time only.
- Rate limits vary based on your payment plan
- We expect a non-error response code (1xx, 2xx or 3xx) within six seconds in order
  to consider event delivery a success.
- In the case that event delivery fails, we will retry twice over a ten-minute window.
- The consent video must be recorded live, and it must be the same person in the Personal
  Avatar creation footage.
- Background removal for Personal Avatars is not available for Personal Avatars created
  by uploading pre-recorded footage.
errors:
- 'Paywall: User is not part of the workspace.'
- 'Blocked by Admin: User needs to be added in the relevant group in Azure AD.'
- 'Redirection with SAML error: Ask IdP administrator to review the subtasks from
  step 1.'
- '401 Unauthorized: Ensure your access token is valid.'
- '404 Not Found: Verify the endpoint you are trying to access.'
- '500 Internal Server Error: An unexpected error occurred on the server.'
- '429 Too Many Requests: Indicates which limit has been breached.'
- '429 Too Many Requests: Rate limit exceeded'
auth_info:
  mentioned_objects:
  - Synthesia-Signature
  - Synthesia-Timestamp
client:
  base_url: https://api.synthesia.io/v2
  headers:
    Accept: application/json
    Authorization: Bearer {{ dlt.secrets['synthesia_api_key'] }}
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.synthesia.io/oauth2/token
    client_id: '{{ dlt.secrets[''synthesia_client_id''] }}'
    client_secret: '{{ dlt.secrets[''synthesia_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''synthesia_refresh_token''] }}'
    location: header
    header_name: Authorization
  paginator: {}
source_metadata: null
