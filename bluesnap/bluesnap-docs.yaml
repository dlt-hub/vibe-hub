resources:
- name: report_data
  endpoint:
    path: /v8976-Reporting/reference/get-report-data
    method: GET
    data_selector: data
    params: {}
- name: custom_report
  endpoint:
    path: /v8976-Reporting/reference/custom-reporting-api-overview
    method: GET
    data_selector: custom_report_data
    params: {}
- name: Create Wallet
  endpoint:
    path: /v8976-Tools/reference/create-wallet
    method: GET
- name: Retrieve Wallet
  endpoint:
    path: /v8976-Tools/reference/retrieve-wallet
    method: GET
- name: Onboard Apple Pay
  endpoint:
    path: /v8976-Tools/reference/onboard-apple-pay-merchant
    method: GET
- name: Update Apple Pay Onboarding Information
  endpoint:
    path: /v8976-Tools/reference/update-apple-pay-onboarding-information
    method: GET
- name: Retrieve Apple Pay Onboarding Information
  endpoint:
    path: /v8976-Tools/reference/retrieve-apple-pay-onboarding-information
    method: GET
- name: Create/Retrieve Visa Checkout API Key
  endpoint:
    path: /v8976-Tools/reference/create-visa-checkout-api-key
    method: GET
- name: 3D Secure
  endpoint:
    path: /v8976-Tools/reference/3-d-secure-for-api
- name: Account Updater
  endpoint:
    path: /v8976-Tools/reference/account-updater
- name: Convert Currency
  endpoint:
    path: /v8976-Tools/reference/convert-currency
- name: Hosted Payment Fields
  endpoint:
    path: /v8976-Tools/reference/hosted-payment-fields
- name: Payment Request Button
  endpoint:
    path: /v8976-Tools/reference/payment-request-button
- name: Retrieve Card Info
  endpoint:
    path: /v8976-Tools/reference/retrieve-card-info
- name: Secured Payment Collector
  endpoint:
    path: /v8976-Tools/reference/secured-payment-collector
- name: SEPA Direct Debit
  endpoint:
    path: /v8976-Tools/reference/get-mandate-text
- name: User Management
  endpoint:
    path: /v8976-Tools/reference/user-management-overview
- name: Wallets
  endpoint:
    path: /v8976-Tools/reference/wallets
- name: transactions
  endpoint:
    path: /transactions
    method: POST
    data_selector: transaction
    params: {}
- name: transactions
  endpoint:
    path: /services/2/transactions
    method: POST
- name: transactions
  endpoint:
    path: /services/2/transactions
    method: POST
    data_selector: response
    params: {}
- name: alt-transactions
  endpoint:
    path: /services/2/alt-transactions
    method: POST
    data_selector: response
    params: {}
- name: refund
  endpoint:
    path: /services/2/transactions/refund/:transactionId
    method: POST
    data_selector: response
    params: {}
- name: vaulted-shoppers
  endpoint:
    path: /services/2/vaulted-shoppers
    method: POST
    data_selector: response
    params: {}
- name: recurring-plans
  endpoint:
    path: /services/2/recurring/plans
    method: POST
    data_selector: response
    params: {}
- name: recurring-subscriptions
  endpoint:
    path: /services/2/recurring/subscriptions
    method: POST
    data_selector: response
    params: {}
- name: vendors
  endpoint:
    path: /services/2/vendors
    method: POST
    data_selector: response
    params: {}
- name: card_transactions
  endpoint:
    path: /services/2/transactions
    method: POST
    data_selector: transaction
    params: {}
- name: recurring_subscriptions
  endpoint:
    path: /services/2/recurring/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: merchant_managed_subscriptions
  endpoint:
    path: /services/2/recurring/ondemand
    method: POST
    data_selector: subscription
    params: {}
- name: notification_config
  endpoint:
    path: /services/2/notification-config/
    method: GET
    data_selector: ''
- name: enable_disable_webhooks
  endpoint:
    path: /services/2/notification-config/
    method: POST
    data_selector: ''
- name: delete_webhook_configurations
  endpoint:
    path: /services/2/notification-config/
    method: DELETE
    data_selector: ''
- name: auth_capture
  endpoint:
    path: /v8976-XML/reference/auth-capture
    method: POST
    data_selector: card-transaction
- name: auth_only
  endpoint:
    path: /v8976-XML/reference/auth-only
    method: POST
    data_selector: card-transaction
- name: capture
  endpoint:
    path: /v8976-XML/reference/capture
    method: POST
    data_selector: card-transaction
- name: auth_capture
  endpoint:
    path: /v8976-JSON/reference/auth-capture
    method: POST
    data_selector: level3Data
    params: {}
- name: auth_only
  endpoint:
    path: /v8976-JSON/reference/auth-only
    method: POST
    data_selector: level3Data
    params: {}
- name: capture
  endpoint:
    path: /v8976-JSON/reference/capture
    method: POST
    data_selector: level3Data
    params: {}
- name: chargeback_representment
  endpoint:
    path: /chargeback/upload_representment
    method: POST
    data_selector: response
    params:
      chargeback_id: required
      mid: optional
- name: Card on File Implementation
  endpoint:
    path: /reference/card-on-file
    method: GET
    data_selector: details
    params: {}
- name: create_tax_quote
  endpoint:
    path: /services/2/transactions
    method: POST
    data_selector: response
    params: {}
- name: auth_capture
  endpoint:
    path: /services/2/transactions
    method: POST
    data_selector: response
    params: {}
- name: auth_only
  endpoint:
    path: /services/2/transactions
    method: POST
    data_selector: response
    params: {}
- name: capture
  endpoint:
    path: /services/2/transactions
    method: PUT
    data_selector: response
    params: {}
- name: update_subscription
  endpoint:
    path: /services/2/recurring/subscriptions/{subscription_id}
    method: PUT
    data_selector: response
    params: {}
- name: refund
  endpoint:
    path: /services/2/transactions/refund/{transaction_id}
    method: POST
    data_selector: response
    params: {}
- name: cvv_response_codes
  endpoint:
    path: /reference/cvv-response-codes
    method: GET
    data_selector: cvv-response-code
- name: order
  endpoint:
    path: /v8976-Extended/reference/order
    method: GET
- name: shopper
  endpoint:
    path: /v8976-Extended/reference/shopper
    method: GET
- name: language_codes
  endpoint:
    path: /reference/language-codes
    method: GET
    data_selector: supported_languages
    params: {}
- name: auth_capture
  endpoint:
    path: /v8976-XML/reference/auth-capture
    method: POST
- name: auth_only
  endpoint:
    path: /v8976-XML/reference/auth-only
    method: POST
- name: create_paypal_transaction
  endpoint:
    path: /v8976-XML/reference/create-paypal-transaction
    method: POST
- name: create_ecp_transaction
  endpoint:
    path: /v8976-XML/reference/create-ecp-transaction
    method: POST
- name: create_sepa_dd_transaction
  endpoint:
    path: /v8976-XML/reference/create-sepa-dd-transaction
    method: POST
- name: create_batch_transaction
  endpoint:
    path: /v8976-XML/reference/create-batch-transaction
    method: POST
- name: create_plan
  endpoint:
    path: /v8976-XML/reference/create-plan
    method: POST
- name: create_subscription
  endpoint:
    path: /v8976-XML/reference/create-subscription
    method: POST
- name: refund
  endpoint:
    path: /v8976-XML/reference/refund
    method: POST
- name: create_vaulted_shopper
  endpoint:
    path: /v8976-XML/reference/create-vaulted-shopper
    method: POST
- name: create_vendor
  endpoint:
    path: /v8976-XML/reference/create-vendor
    method: POST
- name: Brazil
  endpoint:
    path: /reference/state-and-province-codes#section-brazil
    method: GET
- name: Canada
  endpoint:
    path: /reference/state-and-province-codes#section-canada
    method: GET
- name: Germany
  endpoint:
    path: /reference/state-and-province-codes#section-germany
    method: GET
- name: India
  endpoint:
    path: /reference/state-and-province-codes#section-india
    method: GET
- name: United States
  endpoint:
    path: /reference/state-and-province-codes#section-united-states
    method: GET
- name: payment_fields_tokens
  endpoint:
    path: /services/2/payment-fields-tokens
    method: POST
    data_selector: ''
- name: update_shopper
  endpoint:
    path: /v8976-Extended/reference/update-shopper
    method: POST
    data_selector: shopper
- name: create_order_existing_shopper
  endpoint:
    path: /v8976-Extended/reference/create-order
    method: POST
    data_selector: order
- name: create_shopping_context
  endpoint:
    path: /v8976-Extended/reference/create-shopping-context
    method: POST
    data_selector: shopping_context
- name: process_payment
  endpoint:
    path: /v8976-JSON/reference/auth-capture
    method: POST
    data_selector: response
- name: create_vaulted_shopper
  endpoint:
    path: /v8976-JSON/reference/create-vaulted-shopper
    method: POST
    data_selector: response
- name: update_vaulted_shopper
  endpoint:
    path: /v8976-JSON/reference/update-vaulted-shopper
    method: POST
    data_selector: response
- name: create_order_new_shopper
  endpoint:
    path: /v8976-Extended/reference/create-shopper-and-order
    method: POST
    data_selector: response
- name: create_shopping_context
  endpoint:
    path: /v8976-Extended/reference/create-shopping-context
    method: POST
    data_selector: response
- name: convert_price
  endpoint:
    path: /services/2/tools/merchant-currency-convertor
    method: GET
    data_selector: value
    params:
      from: USD
      to: EUR
      amount: '100'
- name: wallet
  endpoint:
    path: /v8976-Tools/reference/create-wallet
    method: POST
- name: retrieve_wallet
  endpoint:
    path: /v8976-Tools/reference/retrieve-wallet
    method: GET
- name: onboard_apple_pay
  endpoint:
    path: /v8976-Tools/reference/onboard-apple-pay-merchant
    method: POST
- name: update_apple_pay_onboarding
  endpoint:
    path: /v8976-Tools/reference/update-apple-pay-onboarding-information
    method: POST
- name: retrieve_apple_pay_onboarding
  endpoint:
    path: /v8976-Tools/reference/retrieve-apple-pay-onboarding-information
    method: GET
- name: create_retrieve_visa_checkout_api_key
  endpoint:
    path: /v8976-Tools/reference/create-visa-checkout-api-key
    method: POST
- name: 3D Secure
  endpoint:
    path: /v8976-Tools/reference/3-d-secure-for-api
    method: GET
- name: Account Updater
  endpoint:
    path: /v8976-Tools/reference/account-updater
    method: GET
- name: Convert Currency
  endpoint:
    path: /v8976-Tools/reference/convert-currency
    method: GET
- name: Hosted Payment Fields
  endpoint:
    path: /v8976-Tools/reference/hosted-payment-fields
    method: GET
- name: Payment Request Button
  endpoint:
    path: /v8976-Tools/reference/payment-request-button
    method: GET
- name: Retrieve Card Info
  endpoint:
    path: /v8976-Tools/reference/retrieve-card-info
    method: GET
- name: Secured Payment Collector
  endpoint:
    path: /v8976-Tools/reference/secured-payment-collector
    method: GET
- name: SEPA Direct Debit
  endpoint:
    path: /v8976-Tools/reference/sepa-direct-debit
    method: GET
- name: User Management
  endpoint:
    path: /v8976-Tools/reference/user-management-overview
    method: GET
- name: 3D Secure Token
  endpoint:
    path: /services/2/payment-fields-tokens
    method: POST
- name: Retrieve Bank Details
  endpoint:
    path: /services/2/payment-fields-tokens/prefill
    method: POST
- name: 3D Secure
  endpoint:
    path: /3-d-secure
    method: GET
    data_selector: 3D Secure data
    params: {}
- name: Account Updater
  endpoint:
    path: /account-updater
    method: GET
    data_selector: account updater data
    params: {}
- name: Bank Directory
  endpoint:
    path: /bank-directory
    method: GET
    data_selector: bank directory data
    params: {}
- name: Chargebacks
  endpoint:
    path: /chargeback-representment-upload
    method: POST
    data_selector: chargeback data
    params: {}
- name: Convert Currency
  endpoint:
    path: /convert-currency
    method: GET
    data_selector: conversion rates
    params: {}
- name: Encrypt/Decrypt Parameters
  endpoint:
    path: /encrypt-parameters
    method: POST
    data_selector: encryption data
    params: {}
- name: Hosted Payment Fields
  endpoint:
    path: /hosted-payment-fields
    method: GET
    data_selector: hosted payment fields data
    params: {}
- name: Retrieve Card Info
  endpoint:
    path: /retrieve-card-info
    method: GET
    data_selector: card info
    params: {}
- name: Retrieve Payment Methods
  endpoint:
    path: /retrieve-payment-methods
    method: GET
    data_selector: payment methods
    params: {}
- name: payment-fields-tokens
  endpoint:
    path: /services/2/payment-fields-tokens
    method: POST
    data_selector: token
- name: payment-fields-tokens-prefill
  endpoint:
    path: /services/2/payment-fields-tokens/prefill
    method: POST
    data_selector: token
- name: Get Mandate Text
  endpoint:
    path: /v8976-Tools/reference/get-mandate-text
    method: GET
- name: Get Pre-Notification Text
  endpoint:
    path: /v8976-Tools/reference/get-pre-notification-text
    method: GET
- name: Create Tax Quote
  endpoint:
    path: /v8976-Tools/reference/create-tax-quote
    method: POST
- name: Retrieve Tax Quote
  endpoint:
    path: /v8976-Tools/reference/retrieve-tax-quote
    method: GET
- name: Create User
  endpoint:
    path: /v8976-Tools/reference/create-user-api
    method: POST
- name: Retrieve User
  endpoint:
    path: /v8976-Tools/reference/retrieve-user-api
    method: GET
- name: Create Wallet
  endpoint:
    path: /v8976-Tools/reference/create-wallet
    method: POST
- name: Retrieve Wallet
  endpoint:
    path: /v8976-Tools/reference/retrieve-wallet
    method: GET
- name: transactions
  endpoint:
    path: /services/2/transactions
    method: POST
    data_selector: ''
    params: {}
- name: 3D Secure Token
  endpoint:
    path: /services/2/payment-fields-tokens
    method: POST
    data_selector: token
- name: Hosted Payment Fields Token
  endpoint:
    path: /services/2/payment-fields-tokens/prefill
    method: POST
    data_selector: token
- name: 3DS Payments Token
  endpoint:
    path: /services/2/payment-fields-tokens
    method: POST
    data_selector: location
    params:
      shopperId: SHOPPERID
- name: Transactions
  endpoint:
    path: /services/2/transactions
    method: POST
    data_selector: response
    params:
      cardTransactionType: AUTH_CAPTURE
      amount: 25.0
      currency: USD
      pfToken: PAYMENT_TOKEN
      threeDSecure:
        threeDSecureReferenceId: '1234'
- name: payment_fields_tokens
  endpoint:
    path: /services/2/payment-fields-tokens
    method: POST
    data_selector: token
- name: payment_fields_tokens_prefill
  endpoint:
    path: /services/2/payment-fields-tokens/prefill
    method: POST
    data_selector: token
- name: 3D Secure
  endpoint:
    path: /services/2/payment-fields-tokens
    method: POST
- name: payment_fields_tokens
  endpoint:
    path: /services/2/payment-fields-tokens
    method: POST
    params:
      authenticationrequired3ds: 'true'
      challengerequested3ds: 'true'
- name: authentication_required_3ds
  endpoint:
    path: /services/2/payment-fields-tokens/authentication-required-3ds
    method: PUT
    data_selector: token
- name: 3D Secure Token
  endpoint:
    path: /services/2/three-d-secure
    method: POST
    data_selector: three-d-secure-token
- name: three-d-secure
  endpoint:
    path: /services/2/three-d-secure
    method: POST
    data_selector: three-d-secure-token
- name: three-d-secure
  endpoint:
    path: /v8976-Tools/reference/three-d-secure-xml-resource
    method: GET
    data_selector: threeDSecureToken
- name: three-d-secure
  endpoint:
    path: /v8976-Tools/reference/three-d-secure-xml-resource
    method: GET
- name: three-d-secure
  endpoint:
    path: /v8976-Tools/reference/three-d-secure
    method: GET
- name: three-d-secure
  endpoint:
    path: /v8976-Tools/reference/threedsecure-json-object
    method: GET
    data_selector: three-d-secure-token
- name: account_updater
  endpoint:
    path: /v8976-Tools/reference/create-account-updater
    method: POST
- name: retrieve_account_updater
  endpoint:
    path: /v8976-Tools/reference/retrieve-account-updater
    method: GET
- name: batch-account-update
  endpoint:
    path: /v8976-Tools/reference/account-updater
    method: GET
    data_selector: account-update
    params: {}
- name: batch-account-update
  endpoint:
    path: /services/2/account-updater
    method: POST
    data_selector: batch-account-update
    params: {}
- name: batch_account_update
  endpoint:
    path: /v8976-Tools/reference/retrieve-account-updater
    method: GET
    data_selector: account-update
    params: {}
- name: account_updater
  endpoint:
    path: /services/2/account-updater/{account-update-batch-id}
    method: GET
    data_selector: batch-account-update
    params: {}
- name: account-update
  endpoint:
    path: /v8976-Tools/reference/account-update
    method: GET
    data_selector: records
    params: {}
- name: batch-account-update
  endpoint:
    path: /v8976-Tools/reference/batch-account-update
    method: GET
    data_selector: records
    params: {}
- name: credit-card
  endpoint:
    path: /v8976-Tools/reference/credit-card
    method: GET
    data_selector: records
    params: {}
- name: original-card
  endpoint:
    path: /v8976-Tools/reference/original-card
    method: GET
    data_selector: records
    params: {}
- name: updated-card
  endpoint:
    path: /v8976-Tools/reference/updated-card
    method: GET
    data_selector: records
    params: {}
- name: account-update
  endpoint:
    path: /v8976-Tools/reference/account-update
    method: POST
    data_selector: properties
    params:
      merchant-updater-id: required
      original-card: required
- name: account-update
  endpoint:
    path: /v8976-Tools/reference/account-update
    method: GET
    data_selector: response
- name: batch-account-update
  endpoint:
    path: /v8976-Tools/reference/batch-account-update
    method: GET
    data_selector: response
- name: account-update
  endpoint:
    path: /v8976-Tools/reference/account-update
    method: POST
    data_selector: account-update
    params:
      account-update-batch-id: Unique ID provided by the merchant. Maximum 25 characters.
- name: batch-account-update
  endpoint:
    path: /v8976-Tools/reference/batch-account-update
    method: GET
    data_selector: account-update-batch-id
    params: {}
- name: account-update
  endpoint:
    path: /v8976-Tools/reference/account-update
    method: GET
    data_selector: account-update
    params: {}
- name: credit-card
  endpoint:
    path: /v8976-Tools/reference/credit-card-resource
    method: GET
    data_selector: details
    params: {}
- name: credit-card
  endpoint:
    path: /v8976-Tools/reference/credit-card-resource
    method: GET
    data_selector: records
- name: original-card
  endpoint:
    path: /v8976-Tools/reference/original-card
    method: GET
    data_selector: original-card
- name: original-card
  endpoint:
    path: /v8976-Tools/reference/original-card
    method: GET
- name: credit-card
  endpoint:
    path: /v8976-Tools/reference/credit-card-resource
    method: GET
- name: updated-card
  endpoint:
    path: /v8976-Tools/reference/updated-card
    method: GET
- name: updated-card
  endpoint:
    path: /v8976-Tools/reference/updated-card
    method: GET
    data_selector: updated-card
    params: {}
- name: credit-card
  endpoint:
    path: /v8976-Tools/reference/credit-card-resource
    method: GET
- name: original-card
  endpoint:
    path: /v8976-Tools/reference/original-card
    method: GET
- name: updated-card
  endpoint:
    path: /v8976-Tools/reference/updated-card
    method: GET
- name: bank-directory
  endpoint:
    path: /v8976-Tools/reference/bank-directory-xml-resource
    method: GET
- name: bank-directory
  endpoint:
    path: /services/2/tools/bank-directory-info
    method: POST
    data_selector: bank-directory
    params: {}
- name: bank_directory
  endpoint:
    path: /services/2/tools/bank-directory-info
    method: POST
    data_selector: issuers-info
- name: bank-directory
  endpoint:
    path: /v8976-Tools/reference/bank-directory-xml-resource
    method: GET
- name: bank-directory
  endpoint:
    path: /v8976-Tools/reference/bank-directory-xml-resource
    method: GET
    data_selector: issuers-info
    params:
      payment-method: IDEAL
      currency-code: EUR
      country-code: NL
- name: currency_rates
  endpoint:
    path: /services/2/tools/currency-rates
    method: GET
    data_selector: currencyRate
    params:
      base-currency: USD
      quote-currency: '{currency_code}'
- name: param-encryption
  endpoint:
    path: /v8976-Tools/reference/param-encryption
    method: GET
    data_selector: encrypted-token
- name: param-encryption
  endpoint:
    path: /services/2/tools/param-encryption
    method: POST
    data_selector: encrypted-token
- name: param-decryption
  endpoint:
    path: /services/2/tools/param-decryption
    method: POST
    data_selector: decrypted-token
- name: param-decryption
  endpoint:
    path: /v8976-Tools/reference/param-decryption
    method: GET
    data_selector: decrypted-token
- name: param-decryption
  endpoint:
    path: /v8976-Tools/reference/param-decryption
    method: GET
    data_selector: decrypted-string
    params:
      encrypted-token: required
- name: parameter
  endpoint:
    path: /v8976-Tools/reference/parameter
    method: GET
    data_selector: records
- name: parameter
  endpoint:
    path: /v8976-Tools/reference/parameter
    method: GET
- name: parameters
  endpoint:
    path: /v8976-Tools/reference/parameter
    method: GET
- name: payment_fields_token
  endpoint:
    path: /services/2/payment-fields-tokens
    method: POST
- name: Hosted Payment Fields
  endpoint:
    path: /v8976-Tools/reference/hosted-payment-fields
    method: GET
    data_selector: records
    params: {}
- name: Create Hosted Payment Fields Token
  endpoint:
    path: /v8976-Tools/reference/create-hosted-payment-fields-token
    method: POST
    data_selector: records
    params: {}
- name: Customizing the Hosted Payment Fields
  endpoint:
    path: /v8976-Tools/reference/customizing-the-hosted-payment-fields
    method: GET
    data_selector: records
    params: {}
- name: Hosted Payment Field Errors
  endpoint:
    path: /v8976-Tools/reference/hosted-payment-field-errors
    method: GET
    data_selector: records
    params: {}
- name: payment_fields_tokens
  endpoint:
    path: /services/2/payment-fields-tokens
    method: POST
- name: credit-card-info
  endpoint:
    path: /services/2/tools/credit-card-info-resolver
    method: GET
    data_selector: credit-card
- name: credit_card_info
  endpoint:
    path: /services/2/tools/credit-card-info-resolver
    method: POST
    data_selector: credit-card
- name: credit_card_info
  endpoint:
    path: /services/2/tools/credit-card-info-resolver
    method: POST
    data_selector: creditCard
- name: credit_card_info
  endpoint:
    path: /services/2/tools/credit-card-info-resolver
    method: POST
    data_selector: creditCard
- name: payment_methods
  endpoint:
    path: /retrieve-payment-methods
    method: GET
    data_selector: payment-methods-info
    params: {}
- name: payment_methods
  endpoint:
    path: /services/2/tools/payment-methods-info
    method: POST
    data_selector: supported-payment-method
    params:
      country: US
      currency: USD
- name: payment_tokens
  endpoint:
    path: /services/2/payment-fields-tokens
    method: POST
- name: create_ecp_transaction
  endpoint:
    path: /services/2/alt-transactions/
    method: POST
    data_selector: null
    params: {}
- name: threeDSecure
  endpoint:
    path: /v8976-Basics/reference/3-d-secure-for-api
    method: GET
    data_selector: authResult
- name: translations
  endpoint:
    path: /services/2/translations/sepa/mandate
    method: GET
    data_selector: translations
- name: mandate_text
  endpoint:
    path: /get-mandate-text
    method: GET
    data_selector: translations
- name: pre_notification_text
  endpoint:
    path: /get-pre-notification-text
    method: GET
    data_selector: translations
- name: mandate_text
  endpoint:
    path: /services/2/translations/sepa/mandate
    method: GET
    data_selector: translations
- name: Get Mandate Text
  endpoint:
    path: /services/2/translations/sepa/mandate
    method: GET
    data_selector: translations
    params:
      language: xyz
- name: get_pre_notification_text
  endpoint:
    path: /services/2/translations/sepa/prenotification
    method: GET
    params: {}
- name: translations
  endpoint:
    path: /services/2/translations/sepa/prenotification
    method: GET
    data_selector: translations
    params:
      language: en
- name: Get Pre-Notification Text
  endpoint:
    path: /services/2/translations/sepa/prenotification
    method: GET
    data_selector: translations
    params: {}
- name: Get Pre-Notification Text
  endpoint:
    path: /v8976-Tools/reference/get-pre-notification-text
    method: GET
    data_selector: translations
- name: pre_notification_text
  endpoint:
    path: /v8976-Tools/reference/get-pre-notification-text
    method: GET
- name: Get Mandate Text
  endpoint:
    path: /translations/get-mandate-text
    method: GET
    data_selector: translation
- name: Get Pre-Notification Text
  endpoint:
    path: /translations/get-pre-notification-text
    method: GET
    data_selector: translation
- name: tax_quote
  endpoint:
    path: /services/2/tax-quote
    method: POST
    data_selector: tax-quote
- name: tax-quote
  endpoint:
    path: /services/2/tax-quote
    method: POST
    data_selector: tax-quote
- name: tax_quote
  endpoint:
    path: /services/2/tax-quote/{tax_quote_id}
    method: GET
    data_selector: tax-quote
- name: tax_quote
  endpoint:
    path: /services/2/tax-quote/{tax-reference}
    method: GET
    data_selector: tax-quote
- name: taxQuote
  endpoint:
    path: /v8976-Tools/reference/taxquote-json-object
    method: GET
    data_selector: taxQuote
- name: taxQuote
  endpoint:
    path: /v8976-Tools/reference/taxquote-json-object
    method: GET
    data_selector: taxQuote
    params: {}
- name: shipTo
  endpoint:
    path: /v8976-Tools/reference/shipto-json-object
    method: GET
    data_selector: destination_address_details
- name: shipFrom
  endpoint:
    path: /v8976-Tools/reference/shipfrom-json-object
    method: GET
    data_selector: address
- name: shipFrom
  endpoint:
    path: /v8976-Tools/reference/shipFrom
    method: GET
    data_selector: shipFrom
    params:
      zip: required
      country: required
- name: lines
  endpoint:
    path: /v8976-Tools/reference/lines
    method: GET
- name: lines
  endpoint:
    path: /lines
    method: POST
    data_selector: lines
- name: tax_quote
  endpoint:
    path: /v8976-Tools/reference/tax-quote
    method: GET
    data_selector: taxQuote
- name: tax-quote
  endpoint:
    path: /v8976-Tools/reference/tax-quote
    method: POST
    data_selector: tax-quote
    params: {}
- name: ship-to
  endpoint:
    path: /v8976-Tools/reference/ship-to
    method: GET
    data_selector: destination_address_details
    params: {}
- name: ship_to
  endpoint:
    path: /v8976-Tools/reference/ship-to
    method: GET
    data_selector: shipTo
- name: ship_from
  endpoint:
    path: /v8976-Tools/reference/ship-from
    method: GET
    data_selector: shipFrom
- name: ship-from
  endpoint:
    path: /v8976-Tools/reference/ship-from
    method: GET
    data_selector: records
- name: ship_from
  endpoint:
    path: /v8976-Tools/reference/ship-from
    method: GET
    data_selector: details
    params:
      zip: required
      country: required
- name: lines
  endpoint:
    path: /lines
    method: GET
    data_selector: lines
- name: Create User
  endpoint:
    path: /v8976-Tools/reference/create-user-api
    method: POST
- name: Retrieve User
  endpoint:
    path: /v8976-Tools/reference/retrieve-user-api
    method: GET
- name: Update User
  endpoint:
    path: /v8976-Tools/reference/update-user-api
    method: PUT
- name: Delete User
  endpoint:
    path: /v8976-Tools/reference/delete-user-api
    method: DELETE
- name: Generate SSO Token
  endpoint:
    path: /v8976-Tools/reference/generate-sso-token-api
- name: create_user
  endpoint:
    path: /services/2/cp/user
    method: POST
    data_selector: ''
    params: {}
- name: generate_sso_token
  endpoint:
    path: /services/2/generateSSOLoginToken/{onbehalfofmid}
    method: POST
    data_selector: ''
    params:
      requestingUserIp: required
- name: user
  endpoint:
    path: /services/2/cp/user/{userId}
    method: GET
    data_selector: userId
    params:
      onbehalfofmid: linked_account_id
- name: retrieve_all_users
  endpoint:
    path: /services/2/cp/user/all
    method: GET
    data_selector: users
    params: {}
- name: user
  endpoint:
    path: /services/2/cp/user/{userId}
    method: PUT
- name: delete_user
  endpoint:
    path: /services/2/cp/user/{user_id}
    method: DELETE
    data_selector: 'null'
    params:
      onbehalfofmid: linked_account_id
- name: user_permissions
  endpoint:
    path: /v8976-Tools/reference/user-permissions
    method: GET
    data_selector: permissions
    params: {}
- name: wallet
  endpoint:
    path: /services/2/wallets
    method: POST
    data_selector: wallet
    params: {}
- name: wallet
  endpoint:
    path: /wallets
    method: POST
    data_selector: wallet
    params: {}
- name: wallet
  endpoint:
    path: /services/2/wallets/{walletId}
    method: GET
- name: wallet
  endpoint:
    path: /services/2/wallets/:walletid
    method: GET
    data_selector: wallet
- name: wallet
  endpoint:
    path: /services/2/wallets/{walletId}
    method: GET
    data_selector: wallet
- name: visa_checkout_api_keys
  endpoint:
    path: /services/2/wallets/visa/apikeys
    method: POST
    data_selector: apiKeys
- name: onboard_apple_pay
  endpoint:
    path: /services/2/wallets/onboarding
    method: POST
    data_selector: wallet
    params: {}
- name: onboard_apple_pay
  endpoint:
    path: /services/2/wallets/onboarding
    method: POST
    data_selector: ''
    params: {}
- name: onboard_apple_pay
  endpoint:
    path: /services/2/wallets/onboarding
    method: POST
    data_selector: ''
    params: {}
- name: Update Apple Pay Onboarding Information
  endpoint:
    path: /services/2/wallets/onboarding
    method: POST
    data_selector: wallet
- name: Update Apple Pay Onboarding Information
  endpoint:
    path: /services/2/wallets/onboarding
    method: PUT
    data_selector: wallet
- name: apple_pay_onboarding
  endpoint:
    path: /services/2/wallets/onboarding/{onboardingId}
    method: GET
    data_selector: wallet
- name: apple_pay_onboarding
  endpoint:
    path: /services/2/wallets/onboarding/{onboardingId}
    method: GET
    data_selector: wallet
    params: {}
- name: retrieve_apple_pay_onboarding_information
  endpoint:
    path: /services/2/wallets/onboarding/:onboardingId
    method: GET
    data_selector: wallet
- name: create_wallet
  endpoint:
    path: /v8976-Tools/reference/create-wallet
    method: POST
- name: retrieve_wallet
  endpoint:
    path: /v8976-Tools/reference/retrieve-wallet
    method: GET
- name: create_wallet
  endpoint:
    path: /create-wallet
    method: POST
    data_selector: wallet
- name: retrieve_wallet
  endpoint:
    path: /retrieve-wallet
    method: GET
    data_selector: wallet
- name: update_apple_pay_onboarding
  endpoint:
    path: /update-apple-pay-onboarding-information
    method: POST
    data_selector: applePay
- name: wallet
  endpoint:
    path: /v8976-Tools/reference/wallet
    method: GET
- name: create_wallet
  endpoint:
    path: /create-wallet
    method: POST
    data_selector: wallet
    params: {}
- name: retrieve_wallet
  endpoint:
    path: /retrieve-wallet
    method: GET
    data_selector: wallet
    params: {}
- name: transactions
  endpoint:
    path: /services/2/transactions
    method: POST
- name: batch order placement
  endpoint:
    path: /services/2/batch/order-placement
    method: POST
- name: onboarding
  endpoint:
    path: /services/2/wallets/onboarding
    method: POST
    data_selector: wallet
    params: {}
- name: create_wallet
  endpoint:
    path: /services/2/wallets
    method: POST
    data_selector: wallet
    params: {}
- name: create_order
  endpoint:
    path: /services/2/orders
    method: POST
    data_selector: order
    params: {}
- name: create_shopping_context
  endpoint:
    path: /v8976-Extended/reference/create-shopping-context
    method: POST
    data_selector: shopping_context
    params: {}
- name: tokenizationSpecification
  endpoint:
    path: /payment-gateway
    method: POST
    data_selector: parameters
    params:
      gateway: bluesnap
      gatewayMerchantId: yourBlueSnapMerchantId
- name: transactions
  endpoint:
    path: /services/2/transactions
    method: POST
    data_selector: transaction
    params: {}
- name: wallets
  endpoint:
    path: /services/2/wallets
    method: POST
    data_selector: response
    params: {}
- name: retrieve_wallet
  endpoint:
    path: /services/2/wallets/{walletId}
    method: GET
    data_selector: wallet
    params: {}
- name: create_wallet
  endpoint:
    path: /services/2/wallets
    method: POST
    data_selector: checkoutInformation
- name: visa_checkout
  endpoint:
    path: /wallet-services-web/xo/button.png
    method: GET
- name: visa_checkout_js_library
  endpoint:
    path: /checkout-widget/resources/js/integration/v1/sdk.js
    method: GET
- name: Create Merchant-Managed Subscription
  endpoint:
    path: /services/2/recurring/ondemand
    method: POST
- name: Merchant-Managed Subscription
  endpoint:
    path: /v8976-JSON/reference/create-merchant-managed-subscription
    method: POST
- name: merchant_managed_subscription
  endpoint:
    path: /services/2/recurring/ondemand
    method: POST
    data_selector: transaction
    params: {}
- name: create_merchant_managed_subscription_charge
  endpoint:
    path: /services/2/recurring/ondemand
    method: POST
    data_selector: response
    params:
      amount: 45
      currency: USD
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: Create Merchant-Managed Subscription Charge
  endpoint:
    path: /v8976-JSON/reference/create-merchant-managed-subscription-charge
    method: POST
- name: Create Merchant-Managed Subscription Charge
  endpoint:
    path: /services/2/recurring/ondemand/{subscriptionId}
    method: POST
    data_selector: charge
- name: create_merchant_managed_subscription_charge
  endpoint:
    path: /services/2/recurring/ondemand/{subscriptionId}
    method: POST
    data_selector: charge
    params:
      amount: 45
      currency: USD
      merchantTransactionId: MyUniqueOnDemandSubscription
      taxReference: 048deff0-a285-47e1-bc39-42f79bf0095b
- name: cardTransaction
  endpoint:
    path: /cardTransactions
    method: GET
    data_selector: cardTransactions
    params: {}
- name: auth_capture
  endpoint:
    path: /services/2/transactions
    method: POST
    data_selector: transactionId
- name: transactions
  endpoint:
    path: /services/2/transactions
    method: POST
    data_selector: transaction
    params: {}
- name: transactions
  endpoint:
    path: /services/2/transactions
    method: POST
    data_selector: transactionResult
- name: transactions
  endpoint:
    path: /services/2/transactions
    method: POST
    data_selector: response
- name: transactions
  endpoint:
    path: /services/2/transactions
    method: POST
    data_selector: ''
    params: {}
- name: authenticationResult
  endpoint:
    path: /v8976-JSON/reference/3-d-secure-for-api#authentication-results
    method: GET
    data_selector: authenticationResult
- name: threeDSecure
  endpoint:
    path: /v8976-JSON/reference/threedsecure
    method: GET
notes:
- We recommend using BlueSnap's currency converter to avoid FX rate discrepancies.
- Using Hosted Payment Fields limits PCI compliance burden to SAQ-A level.
- Supports JSON and XML formats for API requests and responses.
- You must have a BlueSnap account to generate API credentials.
- IP checking adds an important security layer for your account.
- Idempotency is used to safely retry HTTP POST requests to prevent requests from
  being performed multiple times.
- All merchants are required to comply with the Payment Card Industry (PCI) Data Security
  Standard (DSS).
- All the user's details (including billing and shipping info and credit card details)
  and the fraud session ID are included in the token; therefore, you do not need to
  include this information in the request.
- Level 2/3 Data is supported for select configurations. Contact Merchant Support
  for more details.
- Level 2 and Level 3 interchange rates are only possible on Commercial, Corporate,
  Fleet, and Purchase Cards. Consumer and business cards are not eligible for interchange
  rates.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- BlueSnap's APIs support end-to-end subscription management.
- Users can manage their own subscription plans and recurring billing.
- The request should be multipart/form-data
- On production, only one upload is allowed per case
- Always include the shopper's email address and zip code for optimal fraud scoring
  results.
- Merchants must disclose the basic terms of the subscription at the point of payment.
- If the products you sell do not require a recurring payment, or if you prefer not
  to store your shopper’s payment information, you can omit this approval box and
  set this value to false.
- The information provided here is for guidance and not legal advice. Surcharging
  rules and regulations are subject to change. Please consult on your setup to ensure
  your compliance.
- Tax quotes expire 24 hours after creation.
- Partial captures are not supported at this time.
- The SDK and a demo app are available on GitHub.
- Refer to the repository's README for detailed usage instructions.
- The BlueSnap Flutter SDK allows you to build payments into your Flutter applications.
- Use BlueSnap and Apple Pay within apps to sell physical goods or services.
- Use In-App purchases to sell virtual goods.
- Device Data Collector is a JavaScript element embedded into the checkout form that
  collects shopper device data.
- Credit card availability may vary depending on your country of domicile.
- These codes appear in the response within the cvv-response-code property.
- See the tutorials on setting up a basic checkout page and accepting your first credit
  card payment.
- Contact your Implementation Specialist to have your account configured for testing.
- To test other payment methods such as Apple Pay or Visa Checkout, follow the instructions
  on the relevant payment method page.
- Google Pay™ does not support test cards; however, you can use a live card in Google’s
  test environment.
- Token expires 60 minutes after its creation.
- Secured Payments Token expires after 60 minutes.
- Enable IPNs for your account
- Merchant-initiated transactions are out-of-scope for 3D Secure
- 3D Secure uses URLs that vary based on the credit card issuer
- The Secured Payments Token expires after 60 minutes.
- Use the Merchant Managed Subscription API for merchant-initiated transactions.
- Account updates are not available in sandbox.
- Updated about 1 month ago
- The code to retrieve the location header parameter needs to be case-insensitive
  to account for HTTP/1 and HTTP/2 protocols.
- The Hosted Payment Fields Token will expire after 60 minutes.
- When set to true, this enables masking capability for the credit card number input.
- When set to true, this enables masking capability for the cvv input.
- Using any unsupported CSS properties results in failure of the Hosted Payment Fields.
- IT IS MANDATORY TO CALL ONE OF THE FUNCTIONS in paymentAuthorized property.
- IT IS MANDATORY TO CALL THE update() in shippingAddressChange event.
- IT IS MANDATORY TO CALL THE update() in shippingOptionChange event.
- The Payment Request Button token expires after 60 minutes.
- Uses Basic Authentication
- Response includes card details in XML format
- Token expires after 60 minutes
- Use Hosted Payment Fields to collect card data at SAQ A
- To process an ACH/ECP payment, include pfToken in the request.
- Supported ISO 639-1 language codes include Bulgarian (bg), Czech (cs), Danish (da),
  Dutch (nl), Estonian (et), Finnish (fi), French (fr), German (de), Greek (el), Hungarian
  (hu), Italian (it), Latvian (lv), Lithuanian (lt), Maltese (mt), Norwegian (no),
  Polish (pl), Portuguese (pt), Romanian (ro), Slovak (sk), Slovenian (sl), Spanish
  (es), Swedish (sv)
- No content is required in the request body.
- Enter the language query parameter into the web service URL.
- The amount property included in the lines array refers to the total cost of the
  line items being purchased.
- Authorization is required in Basic format.
- Contains the destination address details of where the products/services will be
  delivered
- The Create User API allows the creation of a user in the BlueSnap account.
- Each session only remains active for 30 minutes.
- If the session was closed while working, you need to create a new login token since
  BlueSnap does not maintain the status of lost sessions.
- Users set up with Administrators or User Maintenance roles have access to the BlueSnap
  Merchant Portal User Management page.
- The 'wallet' resource for a specific wallet ID can only be retrieved within 15 minutes
  from its creation.
- The wallet resource for a specific wallet ID can only be retrieved within 15 minutes
  from its creation.
- This API call is supported for Apple Pay on the web.
- API call is supported for Apple Pay on the web.
- Apple Pay is not supported when using an iframe.
- If you're accepting donations, Apple requires that you register with Benevity before
  you begin implementing Apple Pay in your iOS app.
- A successful response is 201 Created and includes a location header with an Onboarding
  ID.
- You do not need to enter the actual information, you need to specify the parameters
  that you want to pull from the shopper.
- 'Before you get begin development, review the following as applicable: Set up a
  web interface and Set up an Android app interface.'
- By integrating Google Pay, you are agreeing to Google’s terms & conditions.
- Sandbox supports Google Pay tokens produced by either setting (TEST or PRODUCTION),
  but BlueSnap's Production environment only supports PRODUCTION Google tokens.
- While the Google Pay API is available in many markets, tokenized cards are only
  available in a subset of countries and only on compatible Android devices. Refer
  to Google’s integration guide before testing tokenized cards.
- BlueSnap requires at least basic billing address information in the token.
- The Google Pay token might result in a regular Credit Card or a Tokenized Card.
- Masterpass is supported for both first time transactions & recurring transactions.
- Make sure to obtain the wallet ID after completing the Masterpass step.
- To test the Visa Checkout flow, you'll need a test Visa Checkout account with a
  test card added.
- You cannot perform two requests with the same call ID.
- Supports various payment methods including credit cards, Apple Pay, SEPA Direct
  Debit, ACH/ECP, and Google Pay.
- Requires setup of connected app in merchant API
- 'Defaults to subscriptionId: 10543419'
- Authorization requires Basic authentication with username and password encoded in
  Base64
- To test Apple Pay, follow the steps in the Apple Pay Guide.
- When you include the wallet ID in the request, a vaulted shopper is automatically
  created and the vaulted shopper ID is returned in the response.
- Defaults to 11 for amount
- Defaults to DescTest for softDescriptor
- Defaults to USD for currency
- Defaults to AUTH_CAPTURE for cardTransactionType
- Error handling overview available in the documentation.
errors:
- HTTP status codes are sent back in the API responses to indicate whether a request
  was successful.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '200 OK: If successful'
- Other error codes not specified
- '15011 FRAUD_DETECTED: Transaction triggered fraud rules.'
- GENERAL_PAYMENT_PROCESSING_ERROR
- AUTHORIZATION_AMOUNT_ALREADY_REVERSED
- AUTHORIZATION_AMOUNT_NOT_VALID
- AUTHORIZATION_EXPIRED
- AUTHORIZATION_NOT_FOUND
- BLS_CONNECTION_PROBLEM
- CALL_ISSUER
- CARD_LOST_OR_STOLEN
- CVV_ERROR
- DO_NOT_HONOR
- EXPIRED_CARD
- HIGH_RISK_ERROR
- INCORRECT_INFORMATION
- INCORRECT_SETUP
- INSUFFICENT_FUNDS
- INVALID_AMOUNT
- INVALID_CARD_NUMBER
- INVALID_CARD_TYPE
- INVALID_PIN_OR_PW_OR_ID_ERROR
- INVALID_TRANSACTION
- INVALID_TRANSACTION_TYPE
- LIMIT_EXCEEDED
- PAYMENT_METHOD_NOT_SUPPORTED
- PICKUP_CARD
- PROCESSING_AMOUNT_ERROR
- PROCESSING_DUPLICATE
- PROCESSING_GENERAL_DECLINE
- PROCESSING_TIMEOUT
- REFUND_FAILED
- RESTRICTED_CARD
- STRONG_CUSTOMER_AUTHENTICATION_REQUIRED
- SYSTEM_TECHNICAL_ERROR
- THE_ISSUER_IS_UNAVAILABLE_OR_OFFLINE
- THREE_D_SECURE_FAILURE
- THREE_D_SECURITY_AUTHENTICATION_REQUIRED
- ACCOUNT_CLOSED
- AUTHORIZATION_REVOKED
- '1: On a status of Success'
- '10: On a status of Invalid Data when an error prevents the process from continuing.'
- '15: On a status of Invalid Data when an error does not prevent the process from
  continuing.'
- '22013: CC_TYPE_IS_NOT_SUPPORTED_BY_THE_MERCHANT'
- '14040: TOKEN_IS_EXPIRED'
- '14042: TOKEN_IS_NOT_ASSOCIATED_WITH_A_PAYMENT_METHOD'
- '14104: SHOPPER_CC_NOT_FOUND'
- '14102/10: THREE_D_SECURE_MISSING_REQUIRED_FIELDS'
- 'AUTHENTICATION_INCOMPLETE: 3D Secure authentication was incomplete'
- 'Invalid amount: <given_amount>'
- Amount is mandatory and must be of type number
- Currency <given_currency> is not supported
- Currency is mandatory
- Invalid ccNumber
- Invalid cvv
- Invalid expDate
- Invalid ccType
- Invalid last4Digits
- Invalid Data
- Invalid provided currency
- Invalid billingFirstName
- CC_TYPE_IS_NOT_SUPPORTED_BY_THE_MERCHANT
- TOKEN_IS_EXPIRED
- TOKEN_IS_NOT_ASSOCIATED_WITH_A_PAYMENT_METHOD
- SHOPPER_CC_NOT_FOUND
- THREE_D_SECURE_MISSING_REQUIRED_FIELDS
- Parameter <given_key> with value of <given_value> is invalid
- Success
- Inner Error
- Server Error
- '10: On a status of Invalid Data when an error prevents the process from continuing.
  For example: Invalid provided currency.'
- '15: On a status of Invalid Data when an error does not prevent the process from
  continuing. (The callback is called with a warning array. The process continues
  and callback is called again on completion or another error). For example: Invalid
  billingFirstName.'
- AUTHENTICATION_INCOMPLETE
- '14100: 3D Secure is not enabled'
- '14101: 3D Secure authentication failed'
- '14102/10: 3D Secure object is missing required fields'
- '14103: 3D Secure client error'
- '14100: Problem: 3D Secure is not enabled  Resolution: Enable 3D Secure'
- '14101: Problem: 3D Secure authentication failed  Resolution: Inform the shopper
  to try a different payment method'
- '14102/10: Problem: 3D Secure object is missing required fields { ... }  Resolution:
  Make sure 3D Secure object has both transaction amount and currency'
- '14103: Problem: 3D Secure client error  Resolution: Continue without 3DS'
- 'AUTHENTICATION_FAILED: The card on the transaction could not be authenticated.'
- 'AUTHENTICATION_INCOMPLETE: 3D Secure authentication was incomplete because the
  shopper failed to complete the challenge request from their issuing bank.'
- '200 OK: Successful response'
- '200 OK: Success'
- '400 Bad Request: Check your request syntax'
- '401 Unauthorized: Invalid credentials'
- '403 Forbidden: Access denied'
- '404 Not Found: Resource does not exist'
- '500*: The account number was changed'
- '501*: The account was closed.'
- '502*: The expiration date was changed.'
- '503: The issuing bank does not participate in the update program.'
- '504*: Contact the cardholder for updated information.'
- '505: No match found.'
- '506: No changes found.'
- '000: Approved for submission to account updater process.'
- '301: Invalid account number: check the card number and resubmit.'
- '320: Invalid Expiration date: check the card expiration date and resubmit.'
- '330: Invalid payment type.'
- '390: Card not supported.'
- '500: The account number was changed. Submit the account number returned in the
  completion response.'
- '501: The account was closed. Contact the cardholder for updated information.'
- '502: The expiration date was changed. Submit the expiration date returned in the
  completion response.'
- '503: The issuing bank does not participate in the update program. Submit the original
  card information.'
- '504: Contact the cardholder for updated information.'
- '505: No match found. Submit the original card information.'
- '506: No changes found. Submit the original card information.'
- '507: The cardholder has opted out of the update program.'
- '10000: INVALID_API_VERSION'
- '10001: VALIDATION_GENERAL_FAILURE'
- '11001: XSS_EXCEPTION'
- '20001: BATCH_ID_REQUIRED'
- '20001: MANDATORY_PARAMETER_REQUIRED'
- '20002: TOO_MANY_ACCOUNT_UPDATES'
- '20003: BATCH_ID_ALREADY_EXISTS'
- '20004: ACQUIRING_ENTITY_UNAVAILABLE'
- '20007: BATCH_HAS_EXPIRED'
- 'PRICING_CURRENCY_NOT_FOUND: Invalid currency code'
- 'ENCRYPTION_PASSWORD_REQUIRED: Encryption password is required.'
- 'EXPIRATION_PARAMETER_REQUIRED: Expiration parameter is required.'
- 'INVALID_PAGE_NAME: Page name is invalid or missing.'
- 'INVALID_SHOPPER_ID: The Shopper ID passed in the request is invalid.'
- 'INVALID_SKU_PARAMETER: Invalid SKU parameter.'
- 'MISSING_ARGUMENTS: Arguments are missing in the request.'
- 'MISSING_PARAMETER_KEY_OR_VALUE: Missing parameter key or value.'
- 'NO_SHOPPER_FOR_SUBSCRIPTION_ID: Shopper not found for subscription ID.'
- 'PLAN_CHANGE_WITH_MORE_THAN_ONE_SKU: Plan change with more than one SKU.'
- 'SHOPPER_CREATING_SELLER_MISMATCH: Seller and shopper creating seller mismatch for
  subscription.'
- 'SHOPPER_ID_REQUIRED: Shopper ID is required.'
- 'SHOPPER_NOT_FOUND: The Shopper ID passed in the request was not found.'
- 'SUBSCRIPTION_ID_REQUIRED: Subscription ID is required.'
- 'SUBSCRIPTION_NOT_FOUND: The subscription ID passed in the request was not found.'
- 'VALIDATION_GENERAL_FAILURE: The resource representation passed in the request has
  violated validation rules.'
- 'ENCRYPTED_STRING_REQUIRED: Encrypted string is required.'
- 'INVALID_ENCRYPTION_TOKEN_OR_PASSWORD: Invalid encryption token or password.'
- '14040: Token is expired'
- '14002: Invalid credit card number'
- '14041: Could not find the token'
- '14042: Token is not associated with a payment method, please verify your client
  integration or contact BlueSnap support.'
- '10: Invalid Data'
- '20: Inner Error'
- '40: Can''t use the requested wallet(s), no payment option is available'
- '40: Can''t use requested Wallet/s, no payment option is available.'
- 'UNABLE_TO_RESOLVE_CARD_INFO: Unable to resolve credit card info.'
- 'BIN_IS_NOT_VALID: card number needs to be at least 6 digits long.'
- 'MISSING_CARD_NUMBER: Card number is missing.'
- 'CARD_TYPE_NOT_SUPPORTED: Card type is not supported.'
- 'CARD_NUMBER_NOT_VALID: Card number is not valid.'
- '22020: NO_PAYMENT_METHODS: There are no payment methods available for this shopper.'
- Invalid ecpRoutingNumber
- Invalid ecpAccountType
- Invalid ecpAccountNumber
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Invalid authentication credentials'
- HTTP status code 200 OK indicates a successful response.
- '401 Unauthorized: Recheck authentication credentials'
- '300: EXTERNAL_TAX_SERVICE_ERROR: Tax calculation cannot be determined. Zip is not
  valid for the state. The provided address contains a postal code and state combination
  that is not valid.'
- '300: EXTERNAL_TAX_SERVICE_ERROR: Unknown country name or code. [country code] is
  not a known country name or code.'
- '13001: CURRENCY_CODE_NOT_FOUND: Currency Not Found: [currency code]'
- '24011: CURRENCY_CODE_NOT_FOUND: Currency code is missing.'
- '24019: UNKNOWN_COUNTRY_CODE: The country code provided is not recognized. Please
  check and resubmit.'
- '43003: MISSING_MANDATORY_ARGUMENT: Missing mandatory argument: [argument] which
  is required for tax calculation'
- '43004: REDUNDANT_ITEM_CODE_ELEMENT: item code element: [line item code] should
  not be redundant in the same request'
- '43006: UNEXPECTED_ARGUMENT: element: [argument] is unexpected in the request'
- '43007: MERCHANT_NOT_BOARDED_TO_TAX_SERVICE: User: [user] is not boarded to tax
  service'
- '50106: UNKNOWN_STATE_CODE: The state code provided is not recognized. Please check
  and resubmit.'
- '-: USER_NOT_AUTHORIZED: User: [user] is not authorized to retrieve tax reference:
  [tax-reference-number]'
- '200 OK: User created successfully.'
- '200 OK: If successful, the response HTTP status code is 200 OK.'
- '403 Forbidden: Insufficient privileges'
- '401 Unauthorized: No response body'
- '400: Validation errors with specific messages'
- errorName: Failed to generate SSO token
  code: '50500'
  description: 'Insufficient Privileges: not allowed to call this API'
- errorName: VALIDATION_GENERAL_FAILURE
  code: '10001'
  description: 'Invalid first name '
- errorName: VALIDATION_GENERAL_FAILURE
  code: '10001'
  description: 'Invalid last name '
- errorName: VALIDATION_GENERAL_FAILURE
  code: '10001'
  description: Invalid email @bls.com
- '200 OK: Successful retrieval of wallet resource.'
- 'HTTP 201 Created: Successful request'
- 'HTTP 201 Created: Onboarding successful'
- '200 OK: Successful response with currently registered domains.'
- '200 OK: Successful retrieval of onboarding information.'
- '23001: MISSING_WALLET_FIELDS: Wallet must include {field name} element  Note: Required
  elements are outlined here.'
- '23002: INVALID_WALLET_FIELDS: The value {value} in ''wallet_type'' element is invalid'
- '23003: WALLET_PROCESSING_FAILURE: Wallet processor is currently unavailable, please
  try again later'
- '23005: WALLET_EXPIRED: Wallet ID {ID number} has expired'
- '23006: WALLET_DUPLICATE_PAYMENT_METHODS: Wallet id 321 was received with duplicate
  payment methods'
- '23007: WALLET_PAYMENT_NOT_ENABLED: Wallet {wallet type} not enabled for this account'
- '23008: DUPLICATE_WALLET_RESOURCE: You are trying to create a duplicate resource
  with the following call_id: {callId}'
- '23009: WALLET_CLIENT_KEY_FAILURE: An error occurred creating the VISA_CHECKOUT
  API Key. Please try again and contact merchants@bluesnap.com, if the problem persists.'
- '23010: INVALID_WALLET_PAYMENT_DATA: Could not retrieve payment data from APPLE_PAY'
- '23011: WALLET_ONBOARDING_ERROR: Unexpected error registering to APPLE_PAY'
- '23012: WALLET_MISSING_DOMAIN: Domain is missing'
- '23013: WALLET_UNREGISTERED_DOMAIN: Domain was not previously registered with Apple   Register
  domain via Onboard Apple Pay and try again.'
- '23014: WALLET_CHECKOUT_CANCELED: Customer canceled the wallet checkout flow without
  completing the purchase'
- '24012: USER_NOT_AUTHORIZED: Wallet onboarding details do not exist or are not accessible
  by this user'
- 'WALLET_NOT_FOUND: Ensure the wallet ID is correct'
- 'INVALID_CALL_ID: Check the call ID provided'
- 'WALLET_PROCESSING_FAILURE: Wallet processor is currently unavailable, please try
  again later'
- 'WALLET_CHECKOUT_CANCELED: Customer canceled the wallet checkout flow without completing
  the purchase'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: Check the request format and required fields.'
- '401 Unauthorized: Ensure the correct authentication credentials are provided.'
- '429 Too Many Requests: Reduce the frequency of API calls.'
- '200 OK: Successful request'
- Non-reusable cards cannot be used as a payment method.
- 'Unauthorized: Check credentials'
- 'Invalid request: Ensure all required parameters are present'
- 'INVALID_TRANSACTION_TYPE: Transaction type is invalid.  Note: HTTP status is 403
  Forbidden'
- 'MISSING_SHOPPER_OR_CARD_HOLDER: No card holder or vaulted shopper ID'
- 'INVALID_HTTP_METHOD: CAPTURE transactions should be sent using an HTTP PUT method'
- 'MISSING_CARD_TYPE: cardType element is required'
- 'BLS_NO_SUCH_SHOPPER_PAYMENT_METHOD: Shopper has no relevant saved payment method.   For
  example, CC.'
- 'INVALID_API_VERSION: The API version passed in the request is invalid.'
- 'PAYMENT_GENERAL_FAILURE: A general payment failure has occurred.'
- 'VALIDATION_GENERAL_FAILURE: The resource passed in the request has violated validation
  rules. Additional information about the specific issue is provided in the error
  description.'
- 'INVALID_MERCHANT_TRANSACTION_ID: Merchant-transaction-id should be up to 50 characters'
- 'INVALID_RECURRING_TRANSACTION: recurring-transaction element is missing or invalid'
- 'MERCHANT_CONFIGURATION_ERROR: Merchant Configuration Error'
- 'MISSING_CARD_TYPE: card-type element is required'
- 'XSS_EXCEPTION: User input suspected as malicious.'
- 'THREE_D_SECURITY_AUTHENTICATION_REQUIRED: Soft Decline due to no 3D Secure Authentication.'
- 'ACCOUNT_CLOSED: Payment processing failure because account is closed.'
- 'AUTHORIZATION_AMOUNT_ALREADY_REVERSED: Payment processing failure because the authorization
  has already been reversed.'
- 'AUTHORIZATION_AMOUNT_NOT_VALID: Payment processing failure due to invalid amount
  for this transaction.'
- 'AUTHORIZATION_EXPIRED: Payment processing failure because the authorization has
  expired.'
- 'AUTHORIZATION_REVOKED: Authorization has been revoked for recurring transaction.'
- 'AUTHORIZATION_NOT_FOUND: Payment processing failure because the authorization was
  not found.'
- 'BLS_CONNECTION_PROBLEM: Your payment request could not be successfully completed.'
- 'CALL_ISSUER: Payment processing failure due to an unspecified error. Please contact
  the issuing bank.'
- 'CARD_LOST_OR_STOLEN: The card is lost or stolen.'
- 'CVV_ERROR: Payment processing failure due to CVV error.'
- 'DO_NOT_HONOR: Payment processing failure due to issuing bank decline.'
- 'EXPIRED_CARD: Payment processing failure due to expired card.'
- 'GENERAL_PAYMENT_PROCESSING_ERROR: Payment processing failure due to an unspecified
  error.'
- 'HIGH_RISK_ERROR: Payment processing failure due to high risk.'
- 'INCORRECT_INFORMATION: Payment processing failure due to incorrect information.'
- 'INCORRECT_SETUP: Payment processing failure due to incorrect setup.'
- 'INSUFFICIENT_FUNDS: Payment processing failure due to insufficient funds.'
- 'INVALID_AMOUNT: Payment processing failure due to invalid amount for this transaction.'
- 'INVALID_CARD_NUMBER: Payment processing failure due to invalid card number.'
- 'INVALID_CARD_TYPE: Payment processing failure due to invalid card type.'
- 'INVALID_PIN_OR_PW_OR_ID_ERROR: Payment processing failure due to invalid PIN, password,
  or ID error.'
- 'INVALID_TRANSACTION: Payment processing failure because this transaction is not
  allowed by the issuer.'
- 'LIMIT_EXCEEDED: Payment processing failure because card limit was exceeded.'
- 'NEW_ACCOUNT_INFORMATION_AVAILABLE: Payment processing failure because account is
  no longer active.'
- 'PICKUP_CARD: Payment processing failure. The card has been reported lost or stolen
  and should be removed from use.'
- 'PROCESSING_AMOUNT_ERROR: Payment processing failure due to invalid amount for this
  transaction.'
- 'PROCESSING_DUPLICATE: Payment processing failure due to duplication.'
- 'PROCESSING_GENERAL_DECLINE: Payment processing failure due to an unspecified error
  returned.'
- 'PROCESSING_TIMEOUT: Payment processing failure due to timeout.'
- 'PROCESSING_TRANSACTION_NOT_AUTHORIZED: Payment processing failure because the transaction
  is unauthorized.'
- 'REFUND_FAILED: A general payment failure has occurred for this refund.'
- 'RESTRICTED_CARD: Payment processing failure due to restricted card.'
- 'STRONG_CUSTOMER_AUTHENTICATION_REQUIRED: Soft Decline due to no Strong Customer
  Authentication.'
- 'SYSTEM_TECHNICAL_ERROR: Payment processing failure due to problematic transaction.'
- 'THE_ISSUER_IS_UNAVAILABLE_OR_OFFLINE: Payment processing failure because the issuer
  is unavailable or offline.'
- 'THREE_D_SECURE_FAILURE: Payment processing failure due to 3D secure failure.'
- 'PAYMENT_METHOD_NOT_SUPPORTED: Payment processing failure because the attempted
  operation is not supported for this payment method.'
- 'NO_AVAILABLE_PROCESSORS: There are no available processors for the specific request.'
- 'SHOPPER_COUNTRY_OFAC_SANCTIONED: One of the shopper''s countries was defined as
  OFAC sanctioned.'
- 'MULTIPLE_PAYMENT_METHODS_NON_SELECTED: Shopper has multiple payment methods, but
  none is selected.'
- 'MULTIPLE_TRANSACTIONS_FOUND: Transaction retrieval service failure. Multiple transactions
  found with merchant transaction ID: ${merchantTransactionId}.'
- 'TRANSACTION_LOCKED: Transaction ${transactionType} failed. Transaction locked.'
- 'TRANSACTION_PAYMENT_METHOD_NOT_SUPPORTED: Payment method is not supported.'
- 'TRANSACTION_NOT_AUTHORIZED: Transaction is not authorized.'
- 'TRANSACTION_ALREADY_EXISTS: Transaction AUTH_REVERSAL FAILED. Transaction already
  exists.'
- 'TRANSACTION_EXPIRED: Transaction has expired.'
- 'TRANSACTION_ID_REQUIRED: Transaction ID is required.'
- 'INVALID_TRANSACTION_ID: Transaction ID is invalid.'
- 'TRANSACTION_ALREADY_CAPTURED: Transaction was already captured.'
- 'TRANSACTION_CARD_NOT_VALID: Transaction CAPTURE failed. Card is no longer valid.'
- 'MISSING_RELEVANT_METHOD_FOR_SHOPPER: Shopper has no relevant saved payment method.'
- 'CREDIT_CARD_DETAILS_PLAIN_AND_ENCRYPTED: Shopper credit card cannot contain both
  plain and encrypted details.'
- 'CREDIT_CARD_ENCRYPTED_NUMBER_REQUIRED: Encrypted Field ''Encrypted Card Number''
  is required.'
- 'CREDIT_CARD_ENCRYPTED_SECURITY_CODE_REQUIRED: Encrypted Field ''Encrypted Security
  Code'' is required.'
- 'EXTERNAL_TAX_SERVICE_MISMATCH_CURRENCY: The given currency must match the original
  tax quote currency.'
- 'EXTERNAL_TAX_SERVICE_UNEXPECTED_TOTAL_PAYMENT: The given total payment must match
  the original total calculated in the given tax quote reference.'
- 'EXTERNAL_TAX_SERVICE_TAX_REFERENCE_ALREADY_USED: The given tax reference was already
  in use.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://sandbox.bluesnap.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
