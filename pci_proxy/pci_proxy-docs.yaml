resources:
- name: transactions
  endpoint:
    path: /v1/transactions
    method: POST
- name: tokens
  endpoint:
    path: /v1/pull
    method: POST
    data_selector: token
    params: {}
- name: tokenizations
  endpoint:
    path: /v1/tokenizations
    method: POST
- name: aliases
  endpoint:
    path: /v1/aliases
    method: POST
- name: transactions
  endpoint:
    path: /v1/transactions
    method: POST
- name: cards
  endpoint:
    path: /v1/cards
    method: POST
- name: tokenization
  endpoint:
    path: /v1/tokenizations
    method: POST
    data_selector: token
    params: {}
- name: forward_tokens
  endpoint:
    path: /v1/pull
    method: POST
    data_selector: token
    params: {}
- name: pull
  endpoint:
    path: /v1/pull
    method: POST
    data_selector: reservations
- name: Push
  endpoint:
    path: /push
    method: POST
- name: tokenize
  endpoint:
    path: /v1/aliases/tokenize
    method: POST
    data_selector: responses
- name: wallet_tokenization
  endpoint:
    path: /wallet-tokenization
    method: POST
    data_selector: tokenizedData
- name: tokenize
  endpoint:
    path: /v1/transactions/secureFields/tokenize
    method: POST
    data_selector: transactionId
- name: get_token
  endpoint:
    path: /v1/tokenizations/{{transactionId}}
    method: POST
    data_selector: alias
- name: token_status
  endpoint:
    path: /v1/aliases/{alias}
    method: GET
    data_selector: response
    params: {}
- name: tokenize
  endpoint:
    path: /v1/aliases/tokenize
    method: POST
    data_selector: responses
    params: {}
- name: token_status
  endpoint:
    path: /v1/aliases/{alias}
    method: GET
    data_selector: card
    params: {}
- name: tokenize
  endpoint:
    path: /v1/aliases/tokenize
    method: POST
    data_selector: responses
    params: {}
- name: aliases
  endpoint:
    path: /v1/aliases/{alias_id}
    method: GET
    data_selector: alias
- name: tokenize
  endpoint:
    path: /v1/aliases/tokenize
    method: POST
    data_selector: responses
    params: {}
- name: token_status
  endpoint:
    path: /docs/token-status
    method: GET
    data_selector: walletIndicator
    params: {}
- name: merchant_identifier
  endpoint:
    path: /merchant/identifier
    method: POST
    data_selector: identifier
- name: payment_processing_certificate
  endpoint:
    path: /payment/processing/certificate
    method: POST
    data_selector: certificate
- name: merchant_identity_certificate
  endpoint:
    path: /merchant/identity/certificate
    method: POST
    data_selector: identity_certificate
- name: links
  endpoint:
    path: /v1/links
    method: POST
    data_selector: ''
    params: {}
- name: requests
  endpoint:
    path: /v1/requests
    method: POST
    data_selector: link
    params: {}
- name: request_statuses
  endpoint:
    path: /docs/doc-vault-request-status-and-webhooks
    method: GET
    data_selector: statuses
    params: {}
- name: webhooks
  endpoint:
    path: /docs/doc-vault-request-status-and-webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: tokenization
  endpoint:
    path: /v1/tokenizations/{{tokenizationId}}
    method: POST
    data_selector: paymentMethod
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions/{transactionId}
    method: GET
    data_selector: transactionId
- name: transactions
  endpoint:
    path: /v1/transactions
    method: POST
    data_selector: mobileToken
    params: {}
- name: token_status
  endpoint:
    path: /docs/token-status
    method: GET
    data_selector: status
    params: {}
- name: convert_tokens
  endpoint:
    path: /docs/convert-tokens
    method: POST
    data_selector: conversion
    params: {}
- name: delete_tokens
  endpoint:
    path: /docs/delete-tokens
    method: DELETE
    data_selector: deletion
    params: {}
- name: credit_card_check
  endpoint:
    path: /docs/credit-card-check
    method: POST
    data_selector: validation
    params: {}
- name: token_status
  endpoint:
    path: /v1/aliases/{{alias}}
    method: GET
- name: convert_tokens
  endpoint:
    path: /v1/aliases
    method: POST
    data_selector: alias
- name: delete_tokens
  endpoint:
    path: /v1/aliases/{{alias}}
    method: DELETE
    data_selector: '204'
    params: {}
- name: patch_tokens
  endpoint:
    path: /v1/aliases/{alias}
    method: PATCH
    data_selector: alias
    params: {}
- name: credit_card_check
  endpoint:
    path: /v1/transactions/validate
    method: POST
    data_selector: response
    params:
      currency: EUR
- name: BIN data
  endpoint:
    path: /v1/cards/bin
    method: POST
    data_selector: response
- name: 3D Secure API
  endpoint:
    path: /docs/3d-secure-api
    method: GET
    data_selector: records
    params: {}
- name: init_transaction
  endpoint:
    path: /init
    method: POST
- name: transactions
  endpoint:
    path: /v1/transactions
    method: POST
    data_selector: transactionId
    params: {}
- name: transaction_status
  endpoint:
    path: /v1/transactions/{{transactionId}}
    method: GET
    data_selector: transactionId
    params: {}
- name: secureFields
  endpoint:
    path: /v1/transactions/secureFields
    method: POST
    data_selector: data
    params: {}
- name: secureFields
  endpoint:
    path: /v1/transactions/secureFields
    method: POST
    data_selector: transactionId
- name: transaction
  endpoint:
    path: /v1/transactions/{{transactionId}}
    method: GET
    data_selector: transactionId
- name: update_transaction
  endpoint:
    path: /v1/transactions/secureFields/{{transactionId}}
    method: PATCH
    data_selector: ''
    params: {}
- name: transaction_status
  endpoint:
    path: /v1/transactions/{transactionId}
    method: GET
    data_selector: transactionId
- name: init_transaction
  endpoint:
    path: /v1/transactions
    method: POST
    data_selector: mobileToken
- name: initiate_transaction
  endpoint:
    path: /v1/transactions
    method: POST
    data_selector: mobileToken
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: POST
    data_selector: mobileToken
- name: multipleAuthentication
  endpoint:
    path: /v1/transactions/3RI/multipleAuthentication/{transactionId}
    method: POST
    data_selector: 3D
    params: {}
- name: Receiver Pull
  endpoint:
    path: /forward-proxy/receiver/pull
    method: POST
- name: Receiver Push
  endpoint:
    path: /forward-proxy/receiver/push
    method: POST
- name: forward_tokens
  endpoint:
    path: /v1/ft
    method: POST
    data_selector: response
    params: {}
- name: transactionId
  endpoint:
    path: /show-api
    method: POST
- name: transaction
  endpoint:
    path: /v1/transactions/secureFields/show
    method: POST
    data_selector: transactionId
- name: transactionId
  endpoint:
    path: /v1/transactions/secureFields/show
    method: POST
    data_selector: transactionId
    params: {}
- name: transactionId
  endpoint:
    path: /v1/transactions/secureFields/show
    method: POST
    data_selector: ''
    params: {}
- name: reveal
  endpoint:
    path: /v1/transactions/secureFields/show/reveal
    method: POST
    data_selector: ''
    params: {}
- name: authorize
  endpoint:
    path: /v1/transactions/authorize
    method: POST
- name: settle
  endpoint:
    path: /v1/transactions/settle
    method: POST
- name: Request Network Tokens
  endpoint:
    path: /nt-provisioning
    method: POST
    data_selector: tokens
    params: {}
- name: request_network_token
  endpoint:
    path: /v1/aliases/tokenize
    method: POST
    data_selector: requests
- name: request_cryptogram
  endpoint:
    path: /v1/aliases/detokenize
    method: POST
    data_selector: requests
- name: forward_token
  endpoint:
    path: /v1/pull
    method: POST
    data_selector: data
    params: {}
- name: Alias Status
  endpoint:
    path: /v1/aliases/{alias}
    method: GET
    data_selector: response
- name: token_update_notifications
  endpoint:
    path: /network-token-update-notifications
    method: POST
- name: delete_network_token
  endpoint:
    path: /v1/aliases/{alias}
    method: DELETE
    data_selector: null
    params: {}
- name: card_assets
  endpoint:
    path: /request-card-assets
    method: GET
- name: card_art
  endpoint:
    path: /v1/aliases/{alias}/card-art
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Test Credentials
  endpoint:
    path: /docs/test-credentials
    method: GET
    data_selector: test_credentials
    params: {}
- name: contract_roles
  endpoint:
    path: /user_management/contract_roles
    method: GET
    data_selector: roles
- name: project_roles
  endpoint:
    path: /user_management/project_roles
    method: GET
    data_selector: roles
- name: payment_methods
  endpoint:
    path: /set-up-payment-methods
    method: GET
- name: IPv4
  endpoint:
    path: /ip-whitelisting/ipv4
    method: GET
    data_selector: addresses
    params: {}
- name: IPv6
  endpoint:
    path: /ip-whitelisting/ipv6
    method: GET
    data_selector: addresses
    params: {}
- name: custom_domain
  endpoint:
    path: /custom-domains
    method: POST
    data_selector: response
    params: {}
- name: tokenization
  endpoint:
    path: /v1/tokenizations/{{transactionId}}
    method: POST
    data_selector: token
- name: forward_tokens
  endpoint:
    path: /v1/pull
    method: POST
    data_selector: token
- name: tokenizations
  endpoint:
    path: /v1/tokenizations
    method: POST
- name: aliases
  endpoint:
    path: /v1/aliases
    method: POST
- name: transactions
  endpoint:
    path: /v1/transactions
    method: POST
- name: cards
  endpoint:
    path: /v1/cards
    method: POST
- name: tokenizations
  endpoint:
    path: /v1/tokenizations
    method: POST
- name: aliases
  endpoint:
    path: /v1/aliases
    method: POST
- name: transactions
  endpoint:
    path: /v1/transactions
    method: POST
- name: cards
  endpoint:
    path: /v1/cards
    method: POST
- name: Filter and Forward Proxy Pull
  endpoint:
    path: /v1/pull
    method: POST
- name: Filter and Forward Proxy Push
  endpoint:
    path: /v1/push/{pushKey}
    method: POST
- name: Tokenizations, Aliases, 3D Secure Authentication
  endpoint:
    path: /v1/tokenizations
    method: POST
- name: Document Vault
  endpoint:
    path: /v1/requests
    method: POST
- name: Tokenization Link
  endpoint:
    path: /v1/links
    method: POST
- name: tokenizations
  endpoint:
    path: /v1/tokenizations
    method: POST
- name: aliases
  endpoint:
    path: /v1/aliases
    method: POST
- name: transactions
  endpoint:
    path: /v1/transactions
    method: POST
- name: cards
  endpoint:
    path: /v1/cards
    method: POST
- name: document vault
  endpoint:
    path: /v1/requests
    method: POST
- name: tokenization link
  endpoint:
    path: /v1/links
    method: POST
- name: Filter / Forward
  endpoint:
    path: /health
    method: GET
- name: Show API, Secure Fields
  endpoint:
    path: /upp/jsonp-health-check?callback=foo
    method: GET
- name: 3D Secure API
  endpoint:
    path: /upp/check
    method: GET
- name: tokenization
  endpoint:
    path: /v1/tokenizations/{tokenizationId}
    method: POST
- name: tokenization
  endpoint:
    path: /v1/aliases/tokenize
    method: POST
    data_selector: responses
- name: detokenize
  endpoint:
    path: /v1/aliases/detokenize
    method: POST
    data_selector: responses
- name: get_alias_info
  endpoint:
    path: /v1/aliases/{alias}
    method: GET
    data_selector: alias
    params: {}
- name: delete_alias
  endpoint:
    path: /v1/aliases/{alias}
    method: DELETE
- name: patch_alias
  endpoint:
    path: /v1/aliases/{alias}
    method: PATCH
- name: convert_alias
  endpoint:
    path: /v1/aliases
    method: POST
    data_selector: alias
    params: {}
- name: alias_card_art
  endpoint:
    path: /v1/aliases/{alias}/card-art
    method: GET
    data_selector: object
- name: transactions
  endpoint:
    path: /v1/transactions
    method: POST
    data_selector: null
    params: {}
- name: transaction_status
  endpoint:
    path: /v1/transactions/{transactionId}
    method: GET
- name: secure_fields_transaction
  endpoint:
    path: /v1/transactions/secureFields
    method: POST
    data_selector: transactionId
- name: secure_fields_transaction
  endpoint:
    path: /v1/transactions/secureFields/{transactionId}
    method: PATCH
- name: show_sensitive_data_web
  endpoint:
    path: /v1/transactions/secureFields/show
    method: POST
    data_selector: response
    params: {}
- name: reveal_sensitive_data
  endpoint:
    path: /v1/transactions/secureFields/show/reveal
    method: POST
    data_selector: object
    params: {}
- name: tokenization
  endpoint:
    path: /v1/transactions/secureFields/tokenize
    method: POST
- name: validate_alias
  endpoint:
    path: /v1/transactions/validate
    method: POST
- name: card_bin_lookup
  endpoint:
    path: /v1/cards/bin
    method: POST
    data_selector: cardBinResponse
    params: {}
- name: pull
  endpoint:
    path: /v1/pull
    method: POST
    data_selector: response
    params: {}
- name: tokenizations
  endpoint:
    path: /v1/tokenizations
    method: POST
    data_selector: response
    params: {}
- name: aliases
  endpoint:
    path: /v1/aliases
    method: POST
    data_selector: response
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: POST
    data_selector: response
    params: {}
- name: cards
  endpoint:
    path: /v1/cards
    method: POST
    data_selector: response
    params: {}
- name: push_requests
  endpoint:
    path: /v1/push/{uniquePushKey}
    method: POST
- name: pull_requests
  endpoint:
    path: /pull
    method: POST
- name: tokenizations
  endpoint:
    path: /v1/tokenizations
    method: POST
- name: aliases
  endpoint:
    path: /v1/aliases
    method: POST
- name: transactions
  endpoint:
    path: /v1/transactions
    method: POST
- name: cards
  endpoint:
    path: /v1/cards
    method: POST
- name: forward_files
  endpoint:
    path: /ft
    method: POST
    data_selector: object
    params: {}
- name: requests
  endpoint:
    path: /v1/requests
    method: POST
    data_selector: link
    params: {}
- name: tokenization_link
  endpoint:
    path: /v1/links
    method: POST
- name: tokenization_link
  endpoint:
    path: /v1/links/{id}
    method: GET
    data_selector: object
- name: delete_tokenization_link
  endpoint:
    path: /v1/links/{id}
    method: DELETE
- name: tokenization
  endpoint:
    path: /v1/tokenizations/{tokenizationId}
    method: POST
    data_selector: object
    params: {}
- name: tokenization
  endpoint:
    path: /v1/aliases/tokenize
    method: POST
    data_selector: responses
- name: get_tokenization
  endpoint:
    path: /v1/tokenizations
    method: GET
    data_selector: responses
- name: card_bin_lookup
  endpoint:
    path: /v1/cards/bin
    method: POST
- name: pull
  endpoint:
    path: /v1/pull
    method: POST
    data_selector: response
    params: {}
- name: tokenizations
  endpoint:
    path: /v1/tokenizations
    method: POST
    data_selector: response
    params: {}
- name: aliases
  endpoint:
    path: /v1/aliases
    method: POST
    data_selector: response
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: POST
    data_selector: response
    params: {}
- name: cards
  endpoint:
    path: /v1/cards
    method: POST
    data_selector: response
    params: {}
- name: push
  endpoint:
    path: /push/{uniquePushKey}
    method: POST
- name: pull
  endpoint:
    path: /pull
    method: POST
- name: ft
  endpoint:
    path: /ft
    method: POST
- name: v1_requests
  endpoint:
    path: /v1/requests
    method: POST
- name: tokenizations
  endpoint:
    path: /v1/tokenizations
    method: POST
- name: aliases
  endpoint:
    path: /v1/aliases
    method: POST
- name: transactions
  endpoint:
    path: /v1/transactions
    method: POST
- name: cards
  endpoint:
    path: /v1/cards
    method: POST
- name: forward_files
  endpoint:
    path: /v1/ft
    method: POST
    data_selector: object
    params: {}
- name: requests
  endpoint:
    path: /v1/requests
    method: POST
    data_selector: link
    params: {}
- name: tokenization_link
  endpoint:
    path: /v1/links/{id}
    method: GET
    data_selector: object
notes:
- Explore PCI Proxy's products and integrations. Find out how to work with payment
  data securely and out of PCI scope.
- Tokenization happens before sensitive card data touches your servers and reduces
  your PCI scope.
- Receivers must be PCI DSS compliant, since they are accepting sensitive card data.
  A valid AOC is required for each third-party receiver.
- Activating your account for production starts the billing process.
- You will also need to change sandbox endpoints to their corresponding production
  endpoints.
- In sandbox mode, only test credentials are allowed.
- Businesses that are sending/receiving sensitive cardholder data in plain text format
  must be PCI DSS compliant.
- The maximum number of requests per batch is 100.
- This document assumes that the reader already has a restrictive Content Security
  Policy in place.
- Merchants which are subject to Strong Customer Authentication must make sure to
  submit country and amount.
- Ensure to specify 'datatrans' as the PSP in payment requests.
- The Google Pay API may return either PAN_ONLY cards stored on Google.com or CRYPTOGRAM_3DS
  device tokens from Android devices.
- Apple Pay only returns a tokenized device PAN (DPAN) and never the actual funding
  PAN (FPAN).
- A payment processing certificate expires every 25 months.
- Use openssl to create a certificate signing request.
- Create a Tokenization Link to securely collect sensitive card data using a pre-built
  tokenization page hosted by PCI Proxy.
- A Tokenization Link can only be consumed once.
- Tokenization Links support 3D Secure Authentication out of the box.
- The Document Vault feature requires activation by our team.
- It requires MFA to be enabled on your account.
- PCI DSS standards require a strict adherence to retention policies.
- 'Access: Restrict the number of users who have access to sensitive data to an absolute
  minimum.'
- 'Business case: To use the Document Vault, a clear and well-documented business
  case is required. The business case needs to be reviewed and approved by the PCI
  Proxy team.'
- 'Unique user accounts: Each user needs their own dedicated user account. Shared
  logins are not allowed.'
- 'Multi-factor authentication: User accounts must be secured with MFA.'
- This section covers tokenization of credit cards and CVVs only.
- For 3D Secure Authentications within our SDKs, see 3D Secure on Mobile.
- For the card scanner to work, a usage description for camera use will be required
  in your .plist file.
- 'Check `init(merchantId:cvvOnlyCard:)` for iOS and `PCIPTokenization(merchantId:
  String, cvvOnlyCard: CvvOnlyCard)` for Android in the respective API references
  to learn more.'
- Apple Pay requires setup of Apple developer account and certifications.
- No separate setup needed for Google Pay.
- The Token manage endpoints only work for aliases in the Alias 2.0 format.
- Adding the expiry date is required when you want to provision a Network Token.
- Removing PANs is only available for accounts enabled for Network Tokenization.
- Credit Card Check only works for CHF, EUR and USD.
- Due to regulations from the European Banking Authority SCA has been a standard in
  the European Economic Area since 2019.
- 3D Secure Fields requires a 3D Secure enrolled acquiring contract for each card
  brand.
- All 'amounts' in these APIs are in minor units.
- The 3RI endpoints are in beta version and might be changed over time.
- Testing needs to be conducted directly on production environment.
- This integration type requires us to whitelist the third-party's IP address so that
  we recognize them.
- Only PCI DSS compliant merchants are allowed to use the reverse Vault API as it
  returns sensitive plain text data which extends your PCI DSS scope.
- CVV aliases expire 30 minutes after the first usage.
- You must be aware of security and compliance obligations as described in Security
  and Compliance.
- The Show API displays sensitive cardholder data and should only be used for end
  users.
- Shared user logins are not allowed.
- transactionId obtained via the Show API allows access to sensitive data.
- Do not store them anywhere unless absolutely necessary and consume them as soon
  as possible.
- The Reveal endpoint is only supported for native mobile applications.
- Network Tokens only work with Alias 2.0 and Alias 2.0 length preserving formats.
- Access to sensitive payment information is only available upon request and subject
  to approval.
- When testing in our sandbox, we recommend using the Traffic Inspector feature to
  see what PCI Proxy is converting to and what is being forwarded to the target's
  endpoint.
- A Network Token can have pre-defined states such as ACTIVE, PENDING, INACTIVE, SUSPENDED,
  DELETED, and FAILED.
- Due to limitation on the scheme APIs, we can only update the masked card number
  for Visa and Mastercard.
- We recommend using the last4 property for identification purposes in customer profiles,
  as it will be updated for all available brands
- To enable Network Token update notifications, configure your webhook in the Network
  Tokenization section of your project settings.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Currently only image/png is supported.
- Please be aware that the schemes do not provide official test cards. Hence the following
  test cards are internal ones to simulate certain operations through PCI Proxy and
  might not work with your payment gateway or acquirer.
- No liability shift provided by Network Tokens, SCA still required.
- CVC is not required for creation of a Network Token, but may be needed based on
  use-case.
- The Traffic Inspector is only applicable for Test/Sandbox projects.
- It is not available in production mode since it logs sensitive data.
- Credit card or bank account information meant for production cannot be used in the
  sandbox environment.
- Some services may prevent unauthorized access to their servers. In that case, only
  whitelisted IP addresses are allowed to connect. If possible, please whitelist all
  our ranges.
- Only official documents from the PCI SSC website are recognized for PCI DSS validation.
- You can use your own domain name instead of PCI Proxy endpoint URLs while still
  being out of PCI DSS scope.
- PCI Proxy reduces PCI DSS scope by not storing, processing, or transmitting sensitive
  cardholder data.
- You need to create a Checkout.com account for integration.
- The majority of the API endpoints use Basic authentication.
- Use the Merchant ID and the API password.
- Idempotency is only available for POST requests.
errors:
- '400 Bad Request: Check the payload for required fields'
- '401 Unauthorized: Recheck your credentials'
- '403 Forbidden: Ensure your IP is whitelisted'
- Tokenization expired.
- Tokenization not found.
- Invalid merchantId
- Invalid merchant setup. Server-to-server security must be enabled
- Invalid field
- 'DELETED: Tokenization Link has been permanently deleted.'
- 'EXPIRED_CARD: expired card'
- card network errors
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'DECLINED: Unable to provision a token because the scheme or issuer refused it for
  some reason.'
- 'INTERNAL_ERROR: Some internal error - please contact us.'
- 'MISSING_FIELD: Returned by PCI Proxy in case some data are missing to provision
  a token.'
- 'TOKEN_PROVIDER_UNAVAILABLE: Unable to provision a token due to some sort of unavailability
  of the card schemes and/or issuer.'
- 'UNKNOWN_ERROR: Anything else except above mentioned errors.'
- 'FAILED: Network Token provisioning request failed.'
- 'Max retries exceeded: Exponential backoff until an HTTP 2xx status code is received.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck API key or token expiration'
- '1: Missing header: <HEADER-NAME>.'
- '2: Invalid merchantId.'
- '3: Target host not allowed: x-cc-url.'
- '4: Invalid merchant setup: security sign was not defined.'
- '5: Invalid authentication (API-key or sign).'
- '6: Invalid proxy type.'
- '7: Invalid XPath.'
- '8: Invalid target URL.'
- '9: Invalid proxy type: white-label not matched.'
- '50: Missing parameter: <PARAMETER-NAME>.'
- '100: Unsupported method: <METHOD-NAME>.'
- '200: Could not apply XPath on XML response: <XPATH-EXPRESSION>.'
- '201: Denied by velocity check.'
- '202: Denied by parallel connection checker.'
- '203: Denied by whitelist.'
- '300: Unknown content type in third-party response: <CONTENT-TYPE>.'
- '301: Unknown content type in source request: <CONTENT-TYPE>.'
- '303: Invalid payload.'
- '400: Pull not configured.'
- '401: Missing push configuration for: <REASON>.'
- '402: Missing billing configuration for: <REASON>.'
- '403: Invalid SSL certificate.'
- '800: Connection error.'
- '900: PCI Proxy error.'
- '901: PCI Proxy internal error.'
- Unknown Error
- Unauthorized
- Invalid JSON Payload
- Unrecognized Property
- Invalid Property
- Client Error
- Server Error
- Invalid Transaction Status
- Transaction Not Found
- Expired Card
- Invalid Card
- Blocked Card
- Unsupported Card
- Invalid Alias
- Invalid CVV
- Duplicate RefNo
- Declined
- Soft Declined
- Invalid Sign
- Blocked by Velocity Checker
- Third Party Error
- Referral
- Invalid Setup
- 400 Invalid request
- PLAIN_NOT_FOUND
- INVALID_EXPIRATION
- CLIENT_ERROR
- INVALID_CVV
- UNKNOWN_ERROR
- UNRECOGNIZED_PROPERTY
- SERVER_ERROR
- INVALID_FINGERPRINT
- ILLEGAL_ARGUMENT
- UNAUTHORIZED
- COULD_NOT_OBTAIN_NETWORK_TOKEN
- INVALID_PLAIN_VALUE_FOR_TEST_MODE
- MAX_REQUESTS_PER_CALL_EXCEEDED
- VELOCITY_ERROR
- INVALID_PLAIN_VALUE
- FINGERPRINT_NOT_FOUND
- INTERNAL_ERROR
- INVALID_JSON_PAYLOAD
- INVALID_CONFIGURATION
- COULD_NOT_DECRYPT_TOKEN
- ALIAS_NOT_FOUND
- COULD_NOT_DELETE_NETWORK_TOKEN
- DECLINED
- FORBIDDEN
- INVALID_ALIAS
- INVALID_STATE
- INVALID_PROPERTY
- TOKEN_PROVIDER_UNAVAILABLE
- INVALID_HEADER
- COULD_NOT_OBTAIN_CARD_ART
- DELETE_NOT_ALLOWED
- SERVICE_NOT_ALLOWED
- INVALID_SETUP
- EXPIRED_CARD
- INVALID_TRANSACTION_STATUS
- REFERRAL
- BLOCKED_CARD
- NOT_SUPPORTED_BY_THIRD_PARTY
- PAYMENT_REFERENCE_ID_EXIST
- BLOCKED_BY_VELOCITY_CHECKER
- THIRD_PARTY_ERROR
- INVALID_SIGN
- UNSUPPORTED_CARD
- UNSUPPORTED_PAYMENT_METHOD
- SOFT_DECLINED
- REQUEST_ID_EXIST
- DUPLICATE_REFNO
- TRANSACTION_NOT_FOUND
- INVALID_CARD
- 409 Invalid transaction status
- 400 Bad request. Something went wrong.
- BIN_NOT_FOUND
- 401 Invalid authentication (api-key or sign)
- 403 Denied by whitelist
- 404 Invalid proxy type
- 405 Unsupported method
- 429 Denied by parallel connection checker
- 500 Unable to reach tokenization service
- '400 Bad Request: Optional list of errors'
- '401 Unauthorized: Error message'
- '404 Not found: Error message'
- '400 Bad Request: Error message'
- 400 Bad Request
- 401 Unauthorized
- 404 Not found
- 400 Invalid BIN request
- 204 Denied by whitelist
- 503 Service Unavailable
- '400 Bad Request: Check request parameters'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.sandbox.datatrans.com
  headers:
    Accept: application/json
source_metadata: null
