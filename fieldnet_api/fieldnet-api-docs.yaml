resources:
- name: equipment
  endpoint:
    path: /equipment
    method: GET
- name: irrigation_systems
  endpoint:
    path: /irrigation-systems
    method: GET
- name: irrigation_controllers
  endpoint:
    path: /irrigation-controllers
    method: GET
- name: advisor_fields
  endpoint:
    path: /fields
    method: GET
- name: rtus
  endpoint:
    path: /rtus
    method: GET
- name: organizations
  endpoint:
    path: /organizations
    method: GET
- name: connect
  endpoint:
    path: /connect
    method: GET
- name: policy_assignments
  endpoint:
    path: /policy-assignments
    method: GET
- name: resources
  endpoint:
    path: /resources
    method: GET
- name: equipment
  endpoint:
    path: /equipment
    method: GET
- name: irrigation_systems
  endpoint:
    path: /irrigation-systems
    method: GET
- name: irrigation_controllers
  endpoint:
    path: /irrigation-controllers
    method: GET
- name: advisor_fields
  endpoint:
    path: /fields
    method: GET
- name: rtus
  endpoint:
    path: /rtus
    method: GET
- name: organizations
  endpoint:
    path: /organizations
    method: GET
- name: connect
  endpoint:
    path: /connect
    method: GET
- name: policy_assignments
  endpoint:
    path: /policy-assignments
    method: GET
- name: resources
  endpoint:
    path: /resources
    method: GET
- name: authorize
  endpoint:
    path: /connect/authorize
    method: GET
    params:
      client_id: The application client id
      redirect_uri: The authorization code callback url (must match the url visible
        on the manage applications page)
      response_type: code
      code_challenge: The PKCE code challenge (base64 encoded SHA256 hash of code
        verifier)
      code_challenge_method: S256
      scope: api offline_access
      state: An application defined value allowing the application to correlate the
        authorize request with the callback.
- name: token
  endpoint:
    path: /connect/token
    method: POST
    params:
      client_id: The application client id
      client_secret: The application client secret
      redirect_uri: The authorization code callback url (must match the url visible
        on the manage applications page)
      grant_type: authorization_code
      code_verifier: The PKCE code verifier generated earlier
      code: The auth code returned in the callback
- name: token
  endpoint:
    path: /connect/token
    method: POST
    data_selector: null
    params: {}
- name: equipment
  endpoint:
    path: /v2/equipment
    method: GET
    data_selector: records
- name: irrigation_systems
  endpoint:
    path: /v2/irrigation-systems
    method: GET
    data_selector: records
- name: organizations
  endpoint:
    path: /v2/organizations
    method: GET
    data_selector: records
- name: equipment
  endpoint:
    path: /equipment
    method: GET
    data_selector: records
    params: {}
- name: irrigation_systems
  endpoint:
    path: /irrigation-systems
    method: GET
    data_selector: features
    params: {}
- name: irrigation_system_detail
  endpoint:
    path: /irrigation-systems/{equipment-id}
    method: GET
    data_selector: features
    params: {}
- name: applied_irrigation
  endpoint:
    path: /irrigation-systems/{equipment-id}/applied-irrigation
    method: GET
    data_selector: features
    params:
      from: ISO8601 timestamp specifying the start of time range, required
      to: ISO8601 timestamp specifying the end of time range, optional - defaults
        to the current time if not supplied
- name: applied_nutrients
  endpoint:
    path: /irrigation-systems/{equipment-id}/applied-nutrients/{nutrient-substance-id}
    method: GET
    data_selector: features
    params: {}
- name: avoid_ignore_areas
  endpoint:
    path: /irrigation-systems/{equipment-id}/avoid-ignore-areas
    method: GET
- name: update_avoid_ignore_areas
  endpoint:
    path: /irrigation-systems/{equipment-id}/avoid-ignore-areas
    method: PUT
- name: irrigation_controllers
  endpoint:
    path: /irrigation-controllers
    method: GET
    data_selector: null
    params:
      page: 1
      page-size: 300
- name: single_irrigation_controller
  endpoint:
    path: /irrigation-controllers/{equipment-id}
    method: GET
    data_selector: null
    params: {}
- name: irrigation_controller
  endpoint:
    path: /irrigation-controllers
    method: GET
    data_selector: data
    params: {}
- name: irrigation_settings
  endpoint:
    path: /irrigation-controllers/{equipment-id}/settings
    method: GET
- name: update_irrigation_settings
  endpoint:
    path: /irrigation-controllers/{equipment-id}/settings
    method: PATCH
- name: endgun_table
  endpoint:
    path: /irrigation-controllers/{equipment-id}/endguns/{endgun-number}/tables/{table-number}
    method: GET
- name: endgun_table_update
  endpoint:
    path: /irrigation-controllers/{equipment-id}/endguns/{endgun-number}/tables/{table-number}
    method: PUT
- name: plans
  endpoint:
    path: /irrigation-controllers/{equipment-id}/plans
    method: GET
    data_selector: metadata
- name: create_plan
  endpoint:
    path: /irrigation-controllers/{equipment-id}/plans
    method: POST
- name: get_plan
  endpoint:
    path: /irrigation-controllers/{equipment-id}/plans/{plan-id}
    method: GET
- name: update_plan
  endpoint:
    path: /irrigation-controllers/{equipment-id}/plans/{plan-id}
    method: PUT
- name: delete_plan
  endpoint:
    path: /irrigation-controllers/{equipment-id}/plans/{plan-id}
    method: DELETE
- name: irrigation_controller_history
  endpoint:
    path: /irrigation-controllers/{equipment-id}/history
    method: GET
    data_selector: events
- name: irrigation_controller_history_single_event
  endpoint:
    path: /irrigation-controllers/{equipment-id}/history/{date}
    method: GET
    data_selector: event
- name: update_irrigation_controller_note
  endpoint:
    path: /irrigation-controllers/{equipment-id}/history/{date}
    method: PATCH
    data_selector: update_note
- name: sectional_irrigation_adjustments
  endpoint:
    path: /irrigation-controllers/{equipment-id}/sectional-irrigation-adjustments/{date}
    method: GET
- name: sectional_irrigation_adjustments_update
  endpoint:
    path: /irrigation-controllers/{equipment-id}/sectional-irrigation-adjustments/{date}
    method: PUT
- name: advisor_fields
  endpoint:
    path: /fields
    method: GET
    data_selector: fields
    params:
      page: 1
- name: single_advisor_field
  endpoint:
    path: /fields/{field-id}
    method: GET
    data_selector: field
    params: {}
- name: field_configuration
  endpoint:
    path: /fields/{field-id}/configuration
    method: GET
- name: field_configuration_update
  endpoint:
    path: /fields/{field-id}/configuration
    method: PATCH
- name: crop_zones
  endpoint:
    path: /fields/{field-id}/crop-zones
    method: GET
- name: crop_zones_update
  endpoint:
    path: /fields/{field-id}/crop-zones
    method: PUT
- name: growth_stages
  endpoint:
    path: /fields/{field-id}/crop-zones/{crop-zone-id}/growth-stages
    method: GET
- name: overwrite_growth_stages
  endpoint:
    path: /fields/{field-id}/crop-zones/{crop-zone-id}/growth-stages
    method: PUT
- name: soil_zones
  endpoint:
    path: /fields/{field-id}/soil-zones
    method: GET
- name: soil_zones_update
  endpoint:
    path: /fields/{field-id}/soil-zones
    method: PUT
- name: available_water_adjustments
  endpoint:
    path: /fields/{field-id}/available-water-adjustments
    method: GET
- name: available_water_adjustments_update
  endpoint:
    path: /fields/{field-id}/available-water-adjustments
    method: PUT
- name: daily_weather
  endpoint:
    path: /fields/{field-id}/daily-weather
    method: GET
- name: hourly_weather
  endpoint:
    path: /fields/{field-id}/hourly-weather
    method: GET
- name: rainfall_adjustments
  endpoint:
    path: /fields/{field-id}/rainfall-adjustments
    method: GET
    data_selector: rainfall depths
    params: {}
- name: rainfall_adjustments_patch
  endpoint:
    path: /fields/{field-id}/rainfall-adjustments
    method: PATCH
    data_selector: overwrites rainfall
    params: {}
- name: model_runs
  endpoint:
    path: /fields/{field-id}/model-runs
    method: GET
    data_selector: model_runs
    params: {}
- name: specific_model_run
  endpoint:
    path: /fields/{field-id}/model-runs/{model-run-id}
    method: GET
    data_selector: model_run
    params: {}
- name: management_zones
  endpoint:
    path: /fields/{field-id}/model-runs/{model-run-id}/management-zones
    method: GET
- name: management_zone
  endpoint:
    path: /fields/{field-id}/model-runs/{model-run-id}/management-zones/{management-zone-id}
    method: GET
- name: imagery_list
  endpoint:
    path: /fields/{field-id}/imagery
    method: GET
    data_selector: FeatureCollection
- name: imagery_image
  endpoint:
    path: /fields/{field-id}/imagery/{acquired-timestamp}/layer/{layer}
    method: GET
    data_selector: image/tiff
- name: system_availability
  endpoint:
    path: /fields/{field-id}/system-availability
    method: GET
- name: update_system_availability
  endpoint:
    path: /fields/{field-id}/system-availability
    method: PUT
- name: RTUs
  endpoint:
    path: /rtus
    method: GET
- name: RTU Connection Log
  endpoint:
    path: /rtus/{rtu-id}/connection-log
    method: GET
- name: Create RTU
  endpoint:
    path: /rtus/create-rtu
    method: GET
- name: RTU Connection Log
  endpoint:
    path: /rtus/{rtu-id}/connection-log
    method: GET
    data_selector: items
- name: create_rtu
  endpoint:
    path: /rtus
    method: POST
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations
    params:
      page: 1
      page-size: 30
      include-shared: true
      include-disabled: false
- name: organization_by_id
  endpoint:
    path: /organizations/{organization-id}
    method: GET
    data_selector: organization
- name: authorize
  endpoint:
    path: /connect/authorize
    method: GET
    params:
      client_id: ''
      redirect_uri: ''
      response_type: ''
      code_challenge: ''
      code_challenge_method: ''
      scope: ''
- name: token
  endpoint:
    path: /connect/token
    method: POST
    params: {}
- name: policy_assignments
  endpoint:
    path: /policy-assignments
    method: GET
    data_selector: policy_assignments
    params: {}
- name: policy_assignment_check
  endpoint:
    path: /policy-assignments/resources/{resourceId}/consumers/{consumerId}/policies/{policy}
    method: HEAD
    data_selector: policy_assignment_check
    params: {}
- name: single_policy_assignment
  endpoint:
    path: /policy-assignments/resources/{resourceId}/consumers/{consumerId}/policies/{policy}
    method: GET
    data_selector: single_policy_assignment
    params: {}
- name: resources
  endpoint:
    path: /resources
    method: GET
    data_selector: resources
    params: {}
- name: resource
  endpoint:
    path: /resources/{resource-id}
    method: GET
    data_selector: resource
    params: {}
- name: resources
  endpoint:
    path: /resources
    method: GET
    data_selector: resources
- name: resource
  endpoint:
    path: /resources/{resource-id}
    method: GET
    data_selector: resource
- name: weather_stations
  endpoint:
    path: /weather-stations
    method: GET
- name: weather_station_observations
  endpoint:
    path: /weather-stations/{equipment-id}/observations
    method: GET
- name: weather_stations
  endpoint:
    path: /weather-stations
    method: GET
- name: weather_station_observations
  endpoint:
    path: /weather-stations/{equipment-id}/observations
    method: GET
- name: weather_station_observations
  endpoint:
    path: /weather-stations/{equipment-id}/observations
    method: GET
    data_selector: statuses
- name: weather_station_observations
  endpoint:
    path: /weather-stations/{equipment-id}/observations
    method: GET
- name: soil_moisture_stations
  endpoint:
    path: /soil-moisture-stations
    method: GET
    data_selector: records
    params: {}
- name: soil_moisture_station_observations
  endpoint:
    path: /soil-moisture-stations/{equipment-id}/observations
    method: GET
    data_selector: records
    params: {}
- name: soil_moisture_stations
  endpoint:
    path: /soil-moisture-stations
    method: GET
    data_selector: soil moisture stations
    params: {}
- name: soil_moisture_station_observations
  endpoint:
    path: /soil-moisture-stations/{equipment-id}/observations
    method: GET
    data_selector: soil moisture station observations
    params: {}
- name: soil_moisture_station_observations
  endpoint:
    path: /soil-moisture-stations/{equipment-id}/observations
    method: GET
    data_selector: observations
    params:
      from: ISO 8601 formatted string representing the earliest date in the desired
        range
      to: ISO 8601 formatted string representing the most recent date in the desired
        range
      page: Specifies the page number to return as items are return in blocks of 30.
        Returns page 1 if not specified
- name: soil_moisture_station_observations
  endpoint:
    path: /soil-moisture-stations/{equipment-id}/observations
    method: GET
    data_selector: observations
    params:
      from: ISO 8601 formatted string
      to: ISO 8601 formatted string
      page: '1'
notes:
- Access to this API is granted on a case-by-case basis at Lindsay's discretion.
- If the access token has expired this will be indicated by a 401 Unauthorized error
  being returned from API calls.
- The access token provided must be valid and must not have expired.
- Returns a list of events between two supplied dates, if no dates are supplied the
  date range defaults to the last 30 days.
- Hourly weather data may not be available for the full duration of the growing season.
- Authorization is currently enforced by verifying the consumer_id belongs to the
  requesting access token.
- The Weather Stations endpoint facilitates all aspects relating to weather stations
  and their observations.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '403 Forbidden: Access control issue'
- '400 Bad request: The submitted information was either missing information or contains
  invalid data.'
- '401 Unauthorized: The API consumer is not authenticated. Typically, this is because
  the token is not valid or authorization was revoked.'
- '402 Payment Required: Used when the requested action requires a valid subscription
  to complete, and no valid subscription is present.'
- '403 Forbidden: The API consumer is successfully authenticated but lacks the appropriate
  permissions to access the resource in question.'
- '404 Not Found: The specified resource does not exist'
- '405 Method Not Allowed: The specified HTTP verb is not accepted on this resource.'
- '406 Not Acceptable: The content-type specified on the request accept header is
  not supported by this resource.'
- '415 Unsupported Media Type: The content-type specified on the request content-type
  header is not accepted by this resource.'
- '429 Too Many Requests: The request could not be fulfilled because a rate limit
  was exceeded.'
- '500 Internal Error: An error occurred internally'
- '501 Not Implemented: The requested feature or resource is planned but has not been
  completed yet.'
- '503 Service Unavailable: The request could not be fulfilled because of server maintenance'
auth_info:
  mentioned_objects: []
client:
  base_url: https://v2.api.myfieldnet.com
source_metadata: null
