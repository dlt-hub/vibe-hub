resources:
- name: createSession
  endpoint:
    path: /createSession
    method: POST
- name: scheduleSession
  endpoint:
    path: /scheduleSession
    method: POST
- name: rescheduleSession
  endpoint:
    path: /rescheduleSession
    method: POST
- name: closeSession
  endpoint:
    path: /closeSession
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: supported_browsers
  endpoint:
    path: /supported_browsers
    method: GET
    data_selector: browsers
    params: {}
- name: supported_os_languages
  endpoint:
    path: /supported_os_languages
    method: GET
    data_selector: os_languages
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Behavior & Policy Settings
  endpoint:
    path: /behavior-policy-settings
    method: GET
    data_selector: settings
    params: {}
- name: Feature Enablement
  endpoint:
    path: /feature-enablement
    method: GET
    data_selector: features
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /api/v1/remote_support
    method: GET
    data_selector: records
- name: live
  endpoint:
    path: /api/v1/live
    method: GET
    data_selector: records
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
    params: {}
- name: live
  endpoint:
    path: /services/data/vXX.X/sobjects/Live
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
- name: S3 Bucket Access
  endpoint:
    path: /aws/s3
    method: POST
    data_selector: result
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: Windows
  endpoint:
    path: /windows/prod/v3/support/msi
    method: GET
- name: MacOS
  endpoint:
    path: /mac/prod/pkg/latest
    method: GET
- name: Linux
  endpoint:
    path: /linux/support/installer
    method: GET
- name: S3 Bucket Access
  endpoint:
    path: /s3/bucket/access
    method: POST
    data_selector: response
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: Windows MSI
  endpoint:
    path: /windows/prod/v3/support/msi
    method: GET
    data_selector: downloads
- name: MacOS PKG
  endpoint:
    path: /mac/prod/pkg/latest
    method: GET
    data_selector: downloads
- name: Linux DEB
  endpoint:
    path: /linux/support/installer
    method: GET
    data_selector: downloads
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
- name: live
  endpoint:
    path: /services/data/vXX.X/sobjects/Live
    method: GET
    data_selector: records
- name: beam
  endpoint:
    path: /services/data/vXX.X/sobjects/Beam
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params:
      status: active
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support_session
  endpoint:
    path: /myhelpscreen.com
    method: GET
    data_selector: session_info
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /sessions
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: sessions
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /api/v1/session
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
- name: live
  endpoint:
    path: /services/data/vXX.X/sobjects/Live
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: logs
  endpoint:
    path: /api/v1/logs
    method: GET
    data_selector: logs
    params: {}
- name: admin_permission_request
  endpoint:
    path: /request/admin
    method: POST
    data_selector: requestData
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: remote_support
  endpoint:
    path: /api/v1/remote_support
    method: GET
    data_selector: data
- name: file_management
  endpoint:
    path: /api/v1/file_management
    method: GET
    data_selector: data
- name: remote_support
  endpoint:
    path: /api/v1/remote_support
    method: GET
    data_selector: data
    params: {}
- name: live_support
  endpoint:
    path: /api/v1/live_support
    method: GET
    data_selector: data
    params: {}
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
- name: live
  endpoint:
    path: /services/data/vXX.X/sobjects/Live
    method: GET
    data_selector: records
- name: CampaignMember
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
- name: Contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: uac_request
  endpoint:
    path: /uac/request
    method: POST
    data_selector: request
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session_history
  endpoint:
    path: /api/v1/session/history
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /api/v1/remote_support
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /api/v1/remote_support
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /sessions
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/session
    method: GET
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
    params: {}
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sessions
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: background_upload
  endpoint:
    path: /api/v1/backgrounds/upload
    method: POST
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: S3 Bucket Access
  endpoint:
    path: /services/data/vXX.X/sobjects/S3BucketAccess
    method: POST
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: desktop_session
  endpoint:
    path: /sessions
    method: POST
    data_selector: sessionData
    params: {}
- name: session
  endpoint:
    path: /v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: user
  endpoint:
    path: /v1/users
    method: GET
    data_selector: users
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: sessions
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: user
  endpoint:
    path: /services/data/vXX.X/sobjects/User
    method: GET
    data_selector: records
    params: {}
- name: product_enhancements
  endpoint:
    path: /api/product/enhancements
    method: GET
    data_selector: enhancements
    params: {}
- name: issues_resolved
  endpoint:
    path: /api/issues/resolved
    method: GET
    data_selector: issues
    params: {}
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: Product Enhancements
  endpoint:
    path: /product/enhancements
    method: GET
    data_selector: enhancements
- name: Corrected Issues
  endpoint:
    path: /corrected/issues
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/session
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: sessions
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: live_sessions
  endpoint:
    path: /services/data/vXX.X/sobjects/LiveSession
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: beam_group
  endpoint:
    path: /beam_groups
    method: GET
    data_selector: groups
    params: {}
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
- name: live
  endpoint:
    path: /services/data/vXX.X/sobjects/Live
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: windows_install
  endpoint:
    path: /windows/prod/v3/support/msi
    method: GET
    data_selector: installer
    params:
      BEAMGROUPKEY: your-group-key
      BEAMAUTHTYPE: password
      BEAMPASSWORD: secure123
      BEAMHIDEUI: '1'
      BEAMFILTERLABEL: Laptop-IT
      BEAMFILTERTAGS: it,windows
- name: macos_install
  endpoint:
    path: /mac/prod/beam
    method: GET
    data_selector: installer
    params:
      groupKey: your-group-key
      authMode: noauth
      hideUI: true
      autoupdate: false
      label: mac-laptop-1
      tags: mac,finance
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Beam Groups
  endpoint:
    path: /beam_groups
    method: GET
    data_selector: groups
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: Beam Client Installation
  endpoint:
    path: /windows/prod/v3/support/msi
    method: GET
- name: Beam Client Installation macOS
  endpoint:
    path: /mac/prod/beam
    method: GET
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Remote Support
  endpoint:
    path: /remote/support
    method: GET
    data_selector: records
- name: Live
  endpoint:
    path: /live
    method: GET
    data_selector: records
- name: Beam
  endpoint:
    path: /beam
    method: GET
    data_selector: records
- name: CoBrowse
  endpoint:
    path: /cobrowse
    method: GET
    data_selector: records
- name: Replay
  endpoint:
    path: /replay
    method: GET
    data_selector: records
- name: Live Plus
  endpoint:
    path: /live-plus
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: remote_support
  endpoint:
    path: /api/remote-support
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: remote_support
  endpoint:
    path: /api/remote_support
    method: GET
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: records
    params: {}
- name: Remote Support
  endpoint:
    path: /remote/support
    method: GET
    data_selector: records
- name: Live
  endpoint:
    path: /live
    method: GET
    data_selector: records
- name: Beam
  endpoint:
    path: /beam
    method: GET
    data_selector: records
- name: CoBrowse
  endpoint:
    path: /cobrowse
    method: GET
    data_selector: records
- name: Replay
  endpoint:
    path: /replay
    method: GET
    data_selector: records
- name: Live Plus
  endpoint:
    path: /live-plus
    method: GET
    data_selector: records
- name: Mobile SDK
  endpoint:
    path: /mobile-sdk
    method: GET
    data_selector: records
- name: ScreenMeet AI
  endpoint:
    path: /ai
    method: GET
    data_selector: records
- name: Integrations
  endpoint:
    path: /integrations
    method: GET
    data_selector: records
- name: Link Scrambling
  endpoint:
    path: /cobrowse/link-scrambling
    method: GET
- name: Laser Pointer
  endpoint:
    path: /cobrowse/laser-pointer
    method: GET
- name: Highlighter
  endpoint:
    path: /cobrowse/highlighter
    method: GET
- name: Confidential Overlay Enable
  endpoint:
    path: /cobrowse/confidential-overlay-enable
    method: GET
- name: Confidential Overlay Color
  endpoint:
    path: /cobrowse/confidential-overlay-color
    method: GET
- name: File Transfer
  endpoint:
    path: /cobrowse/file-transfer
    method: GET
- name: Disable Scroll
  endpoint:
    path: /cobrowse/disable-scroll
    method: GET
- name: Multidomain
  endpoint:
    path: /cobrowse/multidomain
    method: GET
- name: Video Chat
  endpoint:
    path: /cobrowse/video-chat
    method: GET
- name: Combined Session Url
  endpoint:
    path: /cobrowse/combined-session-url
    method: GET
- name: Remote Control
  endpoint:
    path: /cobrowse/remote-control
    method: GET
- name: Screenshot
  endpoint:
    path: /cobrowse/screenshot
    method: GET
- name: Inactivity Timeout Duration
  endpoint:
    path: /cobrowse/inactivity-timeout-duration
    method: GET
- name: Session ID Length
  endpoint:
    path: /cobrowse/session-id-length
    method: GET
- name: Session Pin Length
  endpoint:
    path: /cobrowse/session-pin-length
    method: GET
- name: Startup Config
  endpoint:
    path: /cobrowse/startup-config
    method: GET
- name: Single Tab Cobrowse
  endpoint:
    path: /cobrowse/single-tab-cobrowse
    method: GET
- name: URL Invites
  endpoint:
    path: /cobrowse/url-invites
    method: GET
- name: Session Recording
  endpoint:
    path: /cobrowse/session-recording
    method: GET
- name: Server CSS Cacheing
  endpoint:
    path: /cobrowse/server-css-cacheing
    method: GET
- name: Use Proxy
  endpoint:
    path: /cobrowse/use-proxy
    method: GET
- name: Canvas Streaming
  endpoint:
    path: /cobrowse/canvas-streaming
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: link_scrambling
  endpoint:
    path: /cobrowse/link_scrambling
    method: GET
    data_selector: settings
    params: {}
- name: laser_pointer
  endpoint:
    path: /cobrowse/laser_pointer
    method: GET
    data_selector: settings
    params: {}
- name: highlighter
  endpoint:
    path: /cobrowse/highlighter
    method: GET
    data_selector: settings
    params: {}
- name: confidential_overlay_enable
  endpoint:
    path: /cobrowse/confidential_overlay_enable
    method: GET
    data_selector: settings
    params: {}
- name: confidential_overlay_color
  endpoint:
    path: /cobrowse/confidential_overlay_color
    method: GET
    data_selector: settings
    params: {}
- name: file_transfer
  endpoint:
    path: /cobrowse/file_transfer
    method: GET
    data_selector: settings
    params: {}
- name: disable_scroll
  endpoint:
    path: /cobrowse/disable_scroll
    method: GET
    data_selector: settings
    params: {}
- name: multidomain
  endpoint:
    path: /cobrowse/multidomain
    method: GET
    data_selector: settings
    params: {}
- name: video_chat
  endpoint:
    path: /cobrowse/video_chat
    method: GET
    data_selector: settings
    params: {}
- name: combined_session_url
  endpoint:
    path: /cobrowse/combined_session_url
    method: GET
    data_selector: settings
    params: {}
- name: remote_control
  endpoint:
    path: /cobrowse/remote_control
    method: GET
    data_selector: settings
    params: {}
- name: screenshot
  endpoint:
    path: /cobrowse/screenshot
    method: GET
    data_selector: settings
    params: {}
- name: inactivity_timeout_duration
  endpoint:
    path: /cobrowse/inactivity_timeout_duration
    method: GET
    data_selector: settings
    params: {}
- name: session_id_length
  endpoint:
    path: /cobrowse/session_id_length
    method: GET
    data_selector: settings
    params: {}
- name: session_pin_length
  endpoint:
    path: /cobrowse/session_pin_length
    method: GET
    data_selector: settings
    params: {}
- name: startup_config
  endpoint:
    path: /cobrowse/startup_config
    method: GET
    data_selector: settings
    params: {}
- name: single_tab_cobrowse
  endpoint:
    path: /cobrowse/single_tab_cobrowse
    method: GET
    data_selector: settings
    params: {}
- name: url_invites
  endpoint:
    path: /cobrowse/url_invites
    method: GET
    data_selector: settings
    params: {}
- name: session_recording
  endpoint:
    path: /cobrowse/session_recording
    method: GET
    data_selector: settings
    params: {}
- name: server_css_cacheing
  endpoint:
    path: /cobrowse/server_css_cacheing
    method: GET
    data_selector: settings
    params: {}
- name: use_proxy
  endpoint:
    path: /cobrowse/use_proxy
    method: GET
    data_selector: settings
    params: {}
- name: canvas_streaming
  endpoint:
    path: /cobrowse/canvas_streaming
    method: GET
    data_selector: settings
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: file_storage
  endpoint:
    path: /services/storage
    method: POST
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
- name: live_support
  endpoint:
    path: /services/data/vXX.X/sobjects/LiveSupport
    method: GET
    data_selector: records
- name: remote_support
  endpoint:
    path: /remote/support
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /api/remote_support
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /api/v1/remote_support
    method: GET
    data_selector: data
    params: {}
- name: locale_data
  endpoint:
    path: /addL18nLocale
    method: POST
    data_selector: localNames, values
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session_download_metadata
  endpoint:
    path: /api/session_download_metadata
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
    params: {}
- name: live
  endpoint:
    path: /services/data/vXX.X/sobjects/Live
    method: GET
    data_selector: records
    params: {}
- name: openModal
  endpoint:
    path: /modal/openModal
    method: GET
    data_selector: modal
- name: startSession
  endpoint:
    path: /modal/startSession
    method: POST
    data_selector: session
    params:
      pin: 6 digit string
- name: promptSession
  endpoint:
    path: /modal/promptSession
    method: POST
    data_selector: sessionPrompt
    params:
      pin: 6 digit string
- name: endSession
  endpoint:
    path: /modal/endSession
    method: POST
    data_selector: endSession
- name: session
  endpoint:
    path: /cobrowse/session
    method: POST
    data_selector: sessionData
    params: {}
- name: session_events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: video_chat
  endpoint:
    path: /video_chat
    method: GET
    data_selector: session
- name: remote_support
  endpoint:
    path: /remote/support
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session_events
  endpoint:
    path: /events
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: dynamic_cobrowse_min
  endpoint:
    path: /dynamicCobrowse.min.js
    method: GET
- name: dynamic_cobrowse
  endpoint:
    path: /dynamicCobrowse.js
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params: {}
- name: session_info
  endpoint:
    path: /session/info
    method: GET
    data_selector: session_metadata
    params: {}
- name: session_log
  endpoint:
    path: /session/log
    method: GET
    data_selector: session_events
    params: {}
- name: session_files
  endpoint:
    path: /session/files
    method: GET
    data_selector: uploaded_files
    params: {}
- name: session_metrics
  endpoint:
    path: /session/metrics
    method: GET
    data_selector: session_metrics_data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dynamicCobrowse.min.js
  endpoint:
    path: /dynamicCobrowse.min.js
    method: GET
- name: dynamicCobrowse.js
  endpoint:
    path: /dynamicCobrowse.js
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
- name: live_sessions
  endpoint:
    path: /services/data/vXX.X/sobjects/LiveSession
    method: GET
    data_selector: records
- name: cobrowse_sessions
  endpoint:
    path: /services/data/vXX.X/sobjects/CobrowseSession
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: remote_support
  endpoint:
    path: /api/v1/remote_support
    method: GET
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /v1/sessions
    method: GET
    data_selector: sessions
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
    params: {}
- name: remote_support_session
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupportSession
    method: GET
    data_selector: records
- name: live_session
  endpoint:
    path: /services/data/vXX.X/sobjects/LiveSession
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: sessions
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: replay_settings
  endpoint:
    path: /replay/settings
    method: GET
    data_selector: settings
    params: {}
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: logs
  endpoint:
    path: /api/logs
    method: GET
    data_selector: logs
    params: {}
- name: remote_support_settings
  endpoint:
    path: /api/remote_support/settings
    method: GET
    data_selector: settings
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /v1/docs/salesforce-apex-api-reference
    method: POST
    data_selector: session
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: audio_recording
  endpoint:
    path: /replay/audio-recording
    method: GET
    data_selector: audioRecordingEnabled
    params: {}
- name: automatic_audio_recording
  endpoint:
    path: /replay/automatic-audio-recording
    method: GET
    data_selector: automaticAudioRecording
    params: {}
- name: desktop_bitrate
  endpoint:
    path: /replay/desktop-bitrate
    method: GET
    data_selector: bitrateForRecordingOnDesktop
    params: {}
- name: mobile_bitrate
  endpoint:
    path: /replay/mobile-bitrate
    method: GET
    data_selector: bitrateForRecordingOnMobile
    params: {}
- name: link_expiration_days
  endpoint:
    path: /replay/link-expiration-days
    method: GET
    data_selector: daysUntilLinkExpires
    params: {}
- name: legal_disclaimer
  endpoint:
    path: /replay/legal-disclaimer
    method: GET
    data_selector: legalDisclaimer
    params: {}
- name: completed_text
  endpoint:
    path: /replay/completed-text
    method: GET
    data_selector: completedText
    params: {}
- name: help_text
  endpoint:
    path: /replay/help-text
    method: GET
    data_selector: helpText
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
- name: live
  endpoint:
    path: /services/data/vXX.X/sobjects/Live
    method: GET
    data_selector: records
- name: beam
  endpoint:
    path: /services/data/vXX.X/sobjects/Beam
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: sessions
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /services/data/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: sessions
- name: user
  endpoint:
    path: /api/users
    method: GET
    data_selector: users
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: sessions
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
- name: live
  endpoint:
    path: /services/data/vXX.X/sobjects/Live
    method: GET
    data_selector: records
- name: beam
  endpoint:
    path: /services/data/vXX.X/sobjects/Beam
    method: GET
    data_selector: records
- name: cobrowse
  endpoint:
    path: /services/data/vXX.X/sobjects/CoBrowse
    method: GET
    data_selector: records
- name: replay
  endpoint:
    path: /services/data/vXX.X/sobjects/Replay
    method: GET
    data_selector: records
- name: live_plus
  endpoint:
    path: /services/data/vXX.X/sobjects/LivePlus
    method: GET
    data_selector: records
- name: mobile_sdk
  endpoint:
    path: /services/data/vXX.X/sobjects/MobileSDK
    method: GET
    data_selector: records
- name: screenmeet_ai
  endpoint:
    path: /services/data/vXX.X/sobjects/ScreenMeetAI
    method: GET
    data_selector: records
- name: salesforce_integration
  endpoint:
    path: /services/data/vXX.X/sobjects/SalesforceIntegration
    method: GET
    data_selector: records
- name: sessions
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: sdk_dependency
  endpoint:
    path: /repository/maven-releases/
    method: GET
    data_selector: dependencies
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: ScreenMeetSDK
  endpoint:
    path: /sdk/integration
    method: POST
    data_selector: session
    params: {}
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: iOS
  endpoint:
    path: /v1/docs/developer-notes-ios
    method: GET
- name: Android
  endpoint:
    path: /v1/docs/developer-notes-android
    method: GET
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: remote_support
  endpoint:
    path: /api/v1/remote_support
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /remote-support
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: Screenmeet Beam Group Manager
  endpoint:
    path: /services/data/vXX.X/sobjects/Screenmeet_Beam_Group_Manager
    method: POST
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: Case
  endpoint:
    path: /services/data/vXX.X/sobjects/Case
    method: GET
    data_selector: records
    params: {}
- name: Case
  endpoint:
    path: /services/data/vXX.X/sobjects/Case
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /api/v1/remote_support
    method: GET
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: sessions
- name: session
  endpoint:
    path: /api/v1/session
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: POST
    data_selector: records
    params: {}
- name: Case
  endpoint:
    path: /services/data/vXX.X/sobjects/Case
    method: GET
    data_selector: records
    params: {}
- name: Solution
  endpoint:
    path: /services/data/vXX.X/sobjects/Solution
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /api/remote_support
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /docs/remote-support-overview
    method: GET
    data_selector: records
    params: {}
- name: live
  endpoint:
    path: /docs/live-overview
    method: GET
    data_selector: records
    params: {}
- name: beam
  endpoint:
    path: /docs/screenmeet-beam-overview
    method: GET
    data_selector: records
    params: {}
- name: cobrowse
  endpoint:
    path: /docs/cobrowse-overview
    method: GET
    data_selector: records
    params: {}
- name: replay
  endpoint:
    path: /docs/replay-overview
    method: GET
    data_selector: records
    params: {}
- name: live_plus
  endpoint:
    path: /docs/live-plus-overview
    method: GET
    data_selector: records
    params: {}
- name: mobile_sdk
  endpoint:
    path: /docs/mobile-sdk-overview
    method: GET
    data_selector: records
    params: {}
- name: screenmeet_ai
  endpoint:
    path: /docs/screenmeet-ai-overview
    method: GET
    data_selector: records
    params: {}
- name: integrations_salesforce
  endpoint:
    path: /docs/salesforce-integration-overview
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: ScreenMeet Case Session
  endpoint:
    path: /services/data/vXX.X/sobjects/ScreenMeet_Case_Session__c
    method: GET
    data_selector: records
    params: {}
- name: ScreenMeet Live Session
  endpoint:
    path: /services/data/vXX.X/sobjects/screenmeet__Live_Session__c
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: sessions
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: junction_object
  endpoint:
    path: /services/data/junction_object
    method: POST
    data_selector: records
    params: {}
- name: parent_object
  endpoint:
    path: /services/data/parent_object
    method: GET
    data_selector: records
    params: {}
- name: Cases Closed Last 90 Days
  endpoint:
    path: /services/data/vXX.X/sobjects/CasesClosedLast90Days
    method: GET
    data_selector: records
    params: {}
- name: Case and ScreenMeet Session Summary
  endpoint:
    path: /services/data/vXX.X/sobjects/CaseAndScreenMeetSessionSummary
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ScreenMeet_Live_Session_C
  endpoint:
    path: /services/data/vXX.X/sobjects/ScreenMeet_Live_Session_C
    method: GET
    data_selector: records
- name: screenmeet__ScreenMeet_Session_Feature__c
  endpoint:
    path: /services/data/vXX.X/sobjects/screenmeet__ScreenMeet_Session_Feature__c
    method: GET
    data_selector: records
- name: Cases
  endpoint:
    path: /services/data/vXX.X/sobjects/Case
    method: GET
    data_selector: records
- name: Users
  endpoint:
    path: /services/data/vXX.X/sobjects/User
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: CreateScreenMeetSession
  endpoint:
    path: /services/screenmeet/session
    method: POST
    data_selector: record
- name: ScreenMeet_Live_Session_C
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: screenmeet__ScreenMeet_Session_Feature__c
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: session
  endpoint:
    path: /services/data/v1.12/sobjects/Session
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: user
  endpoint:
    path: /services/data/vXX.X/sobjects/User
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session_create
  endpoint:
    path: /api/v1/sessions
    method: POST
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/ScreenMeetSession
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: createSession
  endpoint:
    path: /createSession
    method: POST
    data_selector: session
    params: {}
- name: scheduleSession
  endpoint:
    path: /scheduleSession
    method: POST
    data_selector: session
    params: {}
- name: rescheduleRemoteSession
  endpoint:
    path: /rescheduleRemoteSession
    method: POST
    data_selector: session
    params: {}
- name: closeRemoteSession
  endpoint:
    path: /closeRemoteSession
    method: POST
    data_selector: session
    params: {}
- name: session
  endpoint:
    path: /sessions
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: live_session
  endpoint:
    path: /services/data/vXX.X/sobjects/ScreenMeetLiveSession
    method: GET
    data_selector: records
    params: {}
- name: ServiceAppointment
  endpoint:
    path: /api/v1/serviceappointments
    method: POST
    data_selector: data
    params: {}
- name: LiveSession
  endpoint:
    path: /api/v1/livesessions
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /remote/support
    method: GET
    data_selector: records
    params: {}
- name: ServiceAppointment
  endpoint:
    path: /serviceappointments
    method: POST
    data_selector: data
    params: {}
- name: LiveSession
  endpoint:
    path: /livesessions
    method: POST
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: remote_support
  endpoint:
    path: /remote/support
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /api/v1/session
    method: GET
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /services/data/v1/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
- name: live
  endpoint:
    path: /services/data/vXX.X/sobjects/Live
    method: GET
    data_selector: records
- name: roles
  endpoint:
    path: /sys_properties.list
    method: GET
    data_selector: ''
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /api/remote_support
    method: GET
    data_selector: records
- name: live
  endpoint:
    path: /api/live
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
- name: sessions
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: sessions
- name: incident
  endpoint:
    path: /access_control/incident
    method: GET
    data_selector: records
    params:
      operation: read
- name: interaction
  endpoint:
    path: /access_control/interaction
    method: GET
    data_selector: records
    params:
      operation: read
- name: sys_cs_message
  endpoint:
    path: /access_control/sys_cs_message
    method: GET
    data_selector: records
    params:
      operation: read
- name: task
  endpoint:
    path: /access_control/task
    method: GET
    data_selector: records
    params:
      operation: read
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/sessions
    method: POST
    data_selector: session
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params: {}
- name: Beam Group
  endpoint:
    path: /beam/groups
    method: POST
    data_selector: groups
    params: {}
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: data
- name: beam_group
  endpoint:
    path: /api/beam_group
    method: POST
    data_selector: data
    params: {}
- name: sessions
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
    params: {}
- name: createSession
  endpoint:
    path: /api/createSession
    method: POST
    data_selector: session
    params: {}
- name: scheduleSession
  endpoint:
    path: /api/scheduleSession
    method: POST
    data_selector: session
    params: {}
- name: rescheduleSession
  endpoint:
    path: /api/rescheduleSession
    method: POST
    data_selector: session
    params: {}
- name: closeSession
  endpoint:
    path: /api/closeSession
    method: POST
    data_selector: success
    params: {}
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
- name: live
  endpoint:
    path: /services/data/vXX.X/sobjects/Live
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session_history
  endpoint:
    path: /services/data/vXX.X/sobjects/SessionHistory
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_support
  endpoint:
    path: /services/data/vXX.X/sobjects/RemoteSupport
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sessions
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /v1/sessions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: user
  endpoint:
    path: /v1/users
    method: GET
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sessions
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /services/session
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: user
  endpoint:
    path: /services/user
    method: GET
    data_selector: records
    params: {}
- name: session_history
  endpoint:
    path: /api/v1/session_history
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: user
  endpoint:
    path: /api/users
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /services/data/vXX.X/sobjects/Session
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: session
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Different session types have different preferences that apply to them.
- If options are omitted, they are treated as 'false'.
- Some objects like Contact may return nulls in deeply nested fields
- Some objects may return nulls in deeply nested fields
- Ensure API key is included in the request header.
- Uses OAuth2 with refresh token — requires setup of connected app in ScreenMeet
- Requires setup of connected app in ScreenMeet
- Some API calls may have rate limits
- Currently, our solution is designed for single-user environments, and we do not
  offer support for multi-user environments.
- We support connections over IPv4. Connections over IPv6 are not supported.
- Whitelist *.screenmeet.com and *.scrn.mt for port 443 via TCP and UDP
- To ensure seamless operation of ScreenMeet services, we recommend adding an exception
  for traffic to and from *.screenmeet.com.
- To ensure seamless operation of ScreenMeet services, we recommend adding an exception
  for traffic to and from `*.screenmeet.com`.
- While basic ScreenMeet functionality may still work under TLS inspection, it is
  strongly advised to follow the recommended configuration to avoid security warnings
  and ensure full compatibility with all ScreenMeet features.
- For this functionality to work properly in escalated scenarios, the certificate
  needs to be installed for the local machine and NOT just for the local user.
- Administrators can enter a list of file extensions that are restricted from being
  transferred.
- Toggle that determines if transferred files will be saved after the Session ends.
- Toggle that determines if uploaded files will be scanned with Clam AV and will reject
  any contaminated files.
- This is an enhanced security feature built into our ScreenMeet Remote Support Client
  for Windows.
- Requires setup of connected app in api
- Allows administrators to configure the settings for the cloud file storage for an
  organization.
- Requires setup of connected app in API
- Allow Embedded Video Player - This enables the embedded video player
- Allow Video Recordings to be Downloaded - This gives the option to users to download
  the recording
- Requires OAuth2 for API access
- 'Best Practice: For most environments, enable AUTOUPGRADE=true to ensure clients
  receive the latest features and security updates automatically.'
- 'Files will be uploaded to the S3 bucket under the path: <prefix>/<year>/<month>/<day>/<session_id>'
- Uses OAuth2 with refresh token — requires setup of connected app in API
- If no agents view the Session for 20 minutes, the Session will timeout and close
  automatically.
- After ten minutes of no activity, the Session will time out and close automatically.
- If upgrading from a client version below 2.61.6, uninstall the previous version
  before installing the new client.
- For most environments, enable AUTOUPGRADE=true to ensure clients receive the latest
  features and security updates automatically.
- No Option to Reset Security Token
- Only publish scripts vetted by IT/security.
- Avoid destructive commands unless approved via change control.
- Only publish scripts vetted by IT/security. Avoid destructive commands unless approved
  via change control.
- Most branding changes are applied within 5 business days after confirmation. Complex
  requests may require additional time.
- Uses OAuth2 with refresh token — requires setup of connected app in screenmeet
- Ensure text and background combinations meet WCAG 2.1 AA accessibility standards.
- Use official corporate brand colors for consistency across tools.
- Maintain clear hover state contrasts for interactive elements.
- Preview changes in both light and dark mode before submission.
- Some sessions may return nulls in deeply nested fields
- The application does not persist on the agents device once the session has been
  completed.
- Users may need to approve/whitelist the executable file that is run depending on
  their antivirus.
- Remote control not available for iOS devices.
- Compatible with Android 5.0+ and iOS 12.3.x+.
- Some requests may have specific permissions required
- Ensure to follow the OAuth2 flow for authentication
- Check API limits to avoid throttling
- Uses OAuth2 with refresh token — requires setup of application in api
- Requires API key for authentication
- Rate limits apply on API calls
- File transfers are limited to 2GB. Any files larger than this will provide an error
  and we suggest the use of third-party transfer tools to facilitate large file transfers.
- By default, the stream performance is at 100%.
- If the stream experiences interruptions or slowdown during an active session, an
  option to activate Low Performance Mode will be presented to the Agent.
- Uses OAuth2 with refresh token.
- Agents must request admin privileges during the session to interact with UAC prompts.
- In MSI-based sessions, where Limited Admin Permissions are active, indirect escalation
  can be used.
- Uses OAuth2 with refresh token
- Some endpoints may return nested objects
- An Administrator must enable the Privacy Curtain feature.
- The Privacy Curtain will become enabled when Remote Control is ON.
- The Agent can assume complete control of the user’s device. However, all the information
  will be hidden by the Privacy Curtain on the primary screen of the client’s device
  and on all connected displays.
- The Privacy Curtain feature is available on both consumer and Server editions of
  Windows version 2004 (build 19041) and later.
- Requires API key for certain endpoints.
- Rate limiting is enforced.
- Remote Control and UAC must be enabled.
- Users are required to have a hard-wired connection to the network because WiFi is
  disabled in safe mode.
- Switch Keyboard Mapping to User's Keyboard. Consider language impact before applying.
- Use User's Keyboard only when controlling VMs or when agent and user share the same
  keyboard layout.
- Icons with a blue/yellow shield on the top left will require UAC to be enabled
- End users must have a hardline connection to the network as WiFi is disabled in
  safe mode.
- Requires connected app setup for OAuth2
- Some responses may contain nulls in nested fields
- Some API endpoints may have rate limits
- Requires OAuth2 setup with a connected app.
- Security fix for Windows client to use new secure endpoint
- Added ability in the File Transfer window to open the folder that files will be
  transferred to on the host.
- Added option to delete transferred files after session ends.
- Scaling is now disabled on the viewer for ultra-wide monitors
- Agent chat window has been updated to now include a send button and resizable input
  field.
- Agent chat window now has splitter, styles, and multi-line support
- Mac client can now open preinstalled PKG remote support file when visiting the support
  download page.
- the iOS client has been updated to support new SSL certificates
- User experience for the copy/paste feature has been updated to no longer require
  remote clipboard.
- Windows Tools UI for the Agent Viewer has been updated to support resizing to a
  smaller window
- Added a feature to allow pasting from the clipboard into lock/login screens on Mac
- Added ability to reboot Mac devices from agent portal
- Various MacOS bug fixes
- Enhanced security with the support for 9-digit pins
- Upgrades have been made to the capture pipeline to improve stream quality
- Improved compatibility of the Viewer with Firefox
- Resolved an issue in the Viewer's System Info dialog that displayed an incorrect
  proxy value
- Better error handling has been implemented on the Beam server
- Increased app stability during periods of unreliable network connectivity
- Addressed an issue where starting a session via the command line interfered with
  another closing session
- Various minor bug fixes and enhancements for Windows users
- Executed a series of accessibility enhancements for both MacOS and Windows, marking
  a significant initiative towards improving usability for all users, especially those
  with disabilities.
- Enabled the configuration of OrgRestrictList via the command line on MacOS, offering
  more customization options and enhancing security measures.
- Some API features may be limited based on permissions
- Enhanced security and implemented rate limiting.
- Avoided hanging on the consent screen for MacOS in collaboration with Tanium.
- Improved accessibility in toolbar windows and the AI Assist window for the viewer.
- Updated the /handleDevice endpoint following a pentest, enhancing security for all
  customers.
- Whitelist *.screenmeet.com and *.scrn.mt for port 443 via TCP and UDP.
- Network speed of at least 1.5 Mbit/s (3G) or better.
- Some API responses may vary based on user permissions
- Rate limits apply to API calls
- Idle timeout within Live is 30 minutes.
- 'Files will be uploaded to the S3 bucket under the path: /<prefix>/<year>/<month>/<day>/<session_id>'
- This is an additional, optional ScreenMeet service that is offered.
- Contact support@screenmeet.com for pricing and to setup your custom domain.
- OAuth2 authentication is required to access the API
- The styling of the Live experience can be customized. Currently, these customizations
  have to be applied by the ScreenMeet team.
- Requires setup of connected app in ScreenMeet.
- Some objects may return nulls in deeply nested fields.
- Some endpoints may have rate limits
- Requires setup of connected app in ScreenMeet API
- Some objects like User may return nulls in deeply nested fields
- Live now supports Chrome on iOS 14.3 and later.
- Added support for Static IP
- Some session data may return null values
- Corrected an issue that caused audio only recordings to show video.
- Corrected an issue where, in some cases, download links were missing for recordings
- Corrected an issue that caused resolution of recording files to be lower than expected.
- Added widget UI for the native app on Windows.
- Improved the app's stability on Windows when on unreliable networks.
- Addressed multiple minor bugs on Windows.
- Some API responses may contain null values in certain fields
- Ensure proper OAuth scopes are assigned
- Requires setup of OAuth for API access
- OAuth2 requires setup of application in the ScreenMeet console.
- OAuth2 authentication requires a connected app setup in ScreenMeet.
- ScreenMeet actively supports versions of the Beam client released within the last
  two years.
- For optimal performance, security, and access to the latest features and bug fixes,
  we recommend upgrading your client every 4-6 months.
- The Device Group Key links the device to the correct organizational access group.
- In order to connect to a device, you must fill out the credentials that correspond
  to the device’s authentication method.
- Users must be active to appear in 'Specific Users' access control.
- The `Device Group Key` links the device to the correct organizational access group.
- Requires OAuth2 authentication setup.
- Beam logging configuration updated for ScreenMeet console
- Requires API key for access
- Rate limits apply to requests
- Requires OAuth2 configuration.
- Ensure the API key has sufficient permissions.
- Optimized capture pipeline for WebRTC to improve streaming performance on Mac devices.
- Improved Beam ETL performance.
- Completed Beam platform maintenance to improve the stability of the platform.
- Improved error handling on the Beam server.
- Fixed inability to establish new Beam sessions on MacOS, enhancing the reliability
  of connections.
- Resolved the issue where Windows devices remained listed in the Beam device table
  post-uninstallation, ensuring accurate device tracking and management.
- Addressed the problem preventing the establishment of Beam sessions, streamlining
  session initiation and connectivity.
- Fixed an issue with the Beam client on MacOS, where it didn't function correctly,
  ensuring seamless operation and user experience.
- Corrected the functionality of the Beam client on MacOS requiring manual restart
  after poor network conditions, improving usability and reliability.
- Updated the /handleDevice endpoint for enhanced security following a penetration
  test, bolstering Beam's security framework.
- Resolved a critical display issue where the device was not shown in the Beam group,
  ensuring all devices are accurately accounted for within the system.
- Fixed an application-breaking issue when enabling UI during an active session on
  Mac with Beam, enhancing the stability and usability of the Beam feature.
- Enhanced security and functionality of the /handleDevice endpoint post-penetration
  test, reinforcing Beam's commitment to robust security practices.
- Ensure to configure app settings before use
- Resolved an issue that caused the beam session to not resume after the computer
  was restarted.
- Resolved an issue causing a beam device to remain offline on Mac after waking from
  sleep mode.
- Setup requires configuration of OAuth2 in the admin console.
- Error message handling has been enhanced to provide a clear message to the user
  when a device fails to validate.
- Beam group keys can now be retrieved after the group has been created.
- The ‘Session Recording’ option for Remote Support now also applies to Beam sessions.
- Added a ‘Remove All’ button on the beam device search screen.
- Some features may be limited based on user roles
- Cobrowse is a fairly low bandwidth streaming solution and should perform acceptably
  on connections speeds of 1.5 Mbit/s (3G) or better.
- A website integrating Cobrowse should make its assets like images, stylesheets,
  css, icons, and fonts be publicly accessible on the internet so that the agent view
  may re-use them to help correctly render the page.
- VPNs, firewalls, or other corporate networks must whitelist the Secure Websocket
  protocol (wss) wss://*.screenmeet.com as well as https://*.screenmeet.com for port
  443 via TCP and UDP.
- A website integrating Cobrowse should make its assets like images, stylesheets,
  css, icons, and fonts be publicly accessible on the internet.
- Deployment keys are specific and bind your CoBrowse sessions to the organization
  that the deployment key was created on.
- 'If you''re changing environments (ex: moving from stage to QA or QA -> prod), you
  must generate a new deployment key and replace the key within the snippet on your
  page.'
- For these settings to apply, file transfer must first be enabled at the session
  policy level.
- File retention settings do not apply to CoBrowse sessions.
- Hotkeys can be customized
- Hotkeys can be disabled by setting the property 'useHotkeys' to false.
- Some services may have rate limits
- This is intended for web developers who wish to have deep granular control of the
  Cobrowse UI elements that appear during a Cobrowse session.
- The ScreenMeet provided modal is not injected into the page until the openModal
  method is called at least once.
- Password fields are always excluded by default.
- If you navigate to a url with a hash param or query param of `cobrowse_pin=<valid
  pin number>` a session will automatically start.
- 'If you append #startcb to a url it will automatically trigger opening the cobrowse
  pin entry modal.'
- Requires specific configuration for CoBrowse sessions.
- Uses a specific HTML structure for integration with Cobrowse
- Ensure required elements are present to avoid breaking the experience
- Check permission settings for API access.
- Deployment keys are organization specific and bind your CoBrowse sessions to the
  organization that the deployment key was created on.
- If you navigate to a url with a hash param or query param of cobrowse_pin=<valid
  pin number> a session will automatically start.
- Cobrowse remote control must be enabled in the Cobrowse Configuration settings by
  the organization admin before agents will be presented with the option to start
  remote control during a session.
- Cobrowse remote control currently supports most interactions and inputs.
- It can also be selectively disabled for certain elements or blocks within in a page.
- Canvas Streaming setting must be enabled in Cobrowse configuration settings.
- Ensure that ScreenMeet’s CoBrowse scripts are not blocked.
- Common errors include wrong pin or not providing the deployment key.
- Adjust CSP to allow *.screenmeet.com.
- The template given is mostly a bare html page with just enough elements to accomplish
  combined Cobrowsing plus persistent Live chat.
- Scripts must be downloaded and edited before uploading to your website.
- Replace 'YOUR_DEPLOYMENT_KEY' with the 6 letter deployment key.
- Ensure correct permissions are assigned for API access
- Cobrowse requires enabling 'Canvas Streaming' in the Cobrowse configuration settings.
- Canvas elements must be marked with a class '.cb-stream' to be shared.
- Requires OAuth2 with refresh token
- Enhanced internal error logging to aid in session stability and troubleshooting.
- Added the ability to force recording on all CoBrowse sessions by default.
- Upgraded internal architecture to allow customers to use static IP addresses for
  CoBrowse.
- Added language localization to the agent UI within CoBrowse.
- Added domain wildcard support for CoBrowse page traversal(when an organization needs
  their CoBrowse sessions to traverse multiple pages).
- Deployment key must replace the string 'YOUR_DEPLOYMENT_KEY'.
- Some endpoints may return limited data based on permissions
- Requires setup of connected app in screenmeet
- Added functionality to disable the unlock scrolling feature
- Enhanced file transfer dialog internationalization.
- Implemented virus scanning upon file uploads/transfers.
- Separated CoBrowse viewer from the Support Viewer to enhance maintainability.
- Prevent file upload errors due to ClamAV API throttling
- Minor UI bugfixes and improvements
- Resolved an issue where the 'id' attribute was not set in the viewer's cobrowse
  iframe, ensuring a more stable and identifiable session environment.
- Corrected the behavior of elements with a sticky position in the viewer, ensuring
  they remain sticky relative to the window scroll position as expected.
- Addressed an issue where PII masking image sizes could be overridden by customer
  stylesheets, maintaining the integrity and security of personal information.
- Fixed a problem where the viewer could get stuck on the modal window during session
  establishment, ensuring smoother session starts and user experiences.
- Requires authentication setup via OAuth2.
- Ensure to handle token expiry properly.
- API rate limits may apply
- Some users may have limited access based on roles
- API calls may be rate-limited.
- Ensure OAuth scopes are correctly set.
- Some fields may return nulls under certain conditions
- Whitelist *.[screenmeet.com] on port 443 for TCP traffic.
- Uses OAuth2 with refresh token — requires setup of connected app in api.
- Implemented stringent security measures to address an arbitrary file upload vulnerability,
  significantly enhancing the security posture and protecting against unauthorized
  file manipulation.
- Requires OAuth2 setup for accessing API
- Some features may not be available in all regions
- The desktop application is only required when remote control is needed.
- Some fields may be null in API responses
- Creating a session documentation available
- API limits may apply.
- Uses Mobile API key for authentication
- Requires integration with ScreenMeet Console or Salesforce to create sessions
- ScreenMeet SDK requires an updated set of ProGuard rules.
- ScreenMeet SDK uses native libraries, which are specific for every CPU architecture.
- Ensure proper setup of SDK to handle video streams
- ScreenMeet SDK for iOS depends on the Google WebRTC cocoapod, which is built with
  bitcode disabled.
- ScreenMeet SDK for iOS depends on the Google WebRTC cocoapod, which is built with
  bitcode disabled, which requires enclosing projects to disable bitcode as well.
- With the latest arm-architecture Macbooks, there may be issues building in Xcode
  for the simulator.
- From the Apple developer forums, Xcode 16.x appears to have general incompatibilities
  and is not recommended. If continuing with Xcode 15.x, please continue to use 3.0.10.
- Check API limits for session creation
- Retain Raw Data must be enabled. Please reach out to ScreenMeet support to enable
  this for you.
- Integration with CRM/ITSM platforms like Salesforce and ServiceNow also requires
  the ScreenMeet App for these platforms.
- Some fields may return null values in certain conditions
- ScreenMeet 2.0 is only designed for Salesforce customers who have transitioned to
  the Lightning Experience.
- You will be required to dedicate one user account to act as a service account to
  enable communication between ScreenMeet and your Salesforce Organization.
- In addition to your regular user accounts, you will be required to dedicate one
  user account to act as a service account to enable communication between ScreenMeet
  and your Salesforce Organization.
- You will need a System Administrator account on your Organization to perform the
  installation.
- Do not select ***Install for All Users*** — this will give administrative privileges
  to every user, which can create security risks.
- Do not select Install for All Users — this will give administrative privileges to
  every user, which can create security risks.
- For security reasons, we recommend using a dedicated user account for the ScreenMeet
  Service and not an account shared with other third-party integrations.
- We do not recommend cloning permission sets.
- Assignments can be managed using Permission Set Groups
- Ensure proper field level security for the 'screenmeet__Has_SM_sessions__c' field
  on cases
- Assign the ScreenMeet Agent permission set permission set to all users using ScreenMeet
  to create video, remote support, replay, or CoBrowse sessions.
- Assign the ScreenMeet Admin permission set to all users who will be responsible
  for maintaining the solution, such as your system administrators or project leads.
- Permissions assignments can also be managed using Permission Set Groups, which combine
  several permission sets into a single group.
- A new permission set named Screenmeet Beam Group Manager has been created.
- Adjust component visibility to only show to users with ScreenMeet permissions.
- Adjust component visibility to only show to users who have the ScreenMeet agent/supervisor/admin
  role.
- Every time you create or refresh a sandbox, Salesforce generates a new Organization
  ID.
- ScreenMeet organization is created after the first login from the sandbox.
- Make sure you have the username, password, and security token for the service account
  user before proceeding.
- If validation fails, it is usually because the username, password, or security token
  is incorrect.
- Requires setup of the connected app in ScreenMeet
- The ScreenMeet service account will be accessing the case Description and Subject
  fields and will create new Comment and Resolution entries.
- 'Test in a Sandbox: We strongly recommend performing and testing the full upgrade
  process in a sandbox environment before upgrading your production organization.'
- 'System Administrator Access: You will need Salesforce System Administrator permissions
  to perform this upgrade.'
- This is a significant upgrade that involves a change in the data model.
- Failure to update your customizations will cause them to break.
- Requires OAuth2 authentication for accessing all API endpoints.
- Ensure to handle the token refresh process.
- This is an advanced topic, and it is recommended that you have some foundational
  knowledge on relational databases as well as Apex coding to proceed.
- After setting the data relationship between Case and ScreenMeet Live Session, configure
  how the related lists will appear on the Case Page.
- Adjusting component visibility to only those with ScreenMeet permissions is suggested
  for improved page performance.
- You will always see the option to enable any product, but be aware that you must
  have a license for that product to be enabled.
- Some fields will not be available since you will not be using cases which our reports
  are based on.
- Ensure user has required permissions for session creation
- Avoid making direct changes to ScreenMeet Live Session
- ScreenMeet Live Session object is NOT THE SOURCE OF TRUTH for the actual state of
  the sessions.
- Ensure the user has the necessary permissions.
- The ScreenMeet Live Session object is NOT THE SOURCE OF TRUTH for the actual state
  of the sessions.
- It should be treated as an eventually-consistent mirror of the actual session state
  information.
- If you use the ScreenMeet API with synchronous code, add the @future(Callout=true)
  annotation.
- Some responses may contain nulls in certain fields
- We only recommend using the Host URL in communication channels such as email or
  SMS (text) as a security best practice.
- Ensure that the ServiceAppointment object is correctly configured to work with live
  sessions
- Some endpoints may return pagination information
- 'Root Cause: CSP Trusted Sites. Add https://*.screenmeet.com as described in CSP
  Trust Sites.'
- Check that Chatter is enabled in your organization.
- Requires connected app setup for OAuth2.
- After signing in to salesforce with the service account, there's no option to Reset
  Security Token.
- 'Root Cause: Check Login IP Range is not set for the service account profile.'
- Ensure the settings 'Lock sessions to the IP address from which they originated'
  and 'Enforce login IP ranges on every request' are unchecked.
- No option to reset security token
- Ensure the settings 'Lock sessions to the IP address from which they originated'
  and 'Enforce login IP ranges on every request' are unchecked. These settings are
  required to properly validate a session.
- Some APIs may return nulls in deeply nested fields
- Setup of connected app in ScreenMeet required for OAuth2.
- Some fields may return null values depending on session state
- A standard ServiceNow deployment and a ScreenMeet account will be needed to use
  ScreenMeet.
- Installation of ScreenMeet will require an Admin to install within ServiceNow.
- For optimal performance, security, and access to the latest features and bug fixes,
  we recommend upgrading your ScreenMeet ServiceNow package every 4-6 months.
- This issue has been resolved in version 2.9.5 and later of the ScreenMeet application.
- 'Workaround #1: Press the refresh/reload button in your browser to clear the error.'
- 'Workaround #2: Allow creation of the ScreenMeet session before the incident has
  been saved. As an administrator, update the system property for your ServiceNow
  instance x_prois_sm.ui.use.before.save to true.'
- Only use this workaround if you are NOT using ScreenMeet’s AI Plus features.
- After installing, you will be provided a trial for 30 days and will be a fully functional
  license.
- Resolved issue in version 2.9.5 and later.
- When creating an incident, the ScreenMeet widget may display the error 'Please save
  the new Incident record before using ScreenMeet' even when the incident has been
  saved.
- Ensure to set up a connected app for OAuth2
- Supports OAuth2 authentication
- You must have administrator access to your ServiceNow instance.
- You must have the necessary ScreenMeet product licenses in place.
- Install the most recent version of ScreenMeet from ServiceNow Store.
- Ensure that the user is configured such that their password never expires to avoid
  service interruption
- Familiarity with assigning roles to users and groups in ServiceNow.
- The required permissions are implemented as a role x_prois_sm.ai_summarization for
  versions 2.9.8 and above.
- Ensure that the ScreenMeet application was included in the instance cloning process
- Ensure that the application registry for ScreenMeet connect exists
- Ensure that the Service account for ScreenMeet was included in the cloning process
- Ensure that the preexisting ScreenMeet role assignment is assigned to any/all users
- Ensure to handle token expiration correctly.
- The base ScreenMeet application must also be installed and configured before proceeding.
- Requires setup of connected app in ScreenMeet console
- Requires ScreenMeet version 2.9.11 or newer
- If you make one general beam role and assign it to different beam groups, all users
  with that role will have access to all beam group devices.
- The x_prois_sm_sessions table is NOT THE SOURCE OF TRUTH for the actual state of
  the sessions.
- Supports creating, scheduling, and rescheduling sessions.
- Uses OAuth2 with refresh token — requires setup of connected app in ServiceNow
- We recommend making a role for each individual beam group.
- Requires OAuth2 authentication setup in the ScreenMeet console.
- x_prois_sm_sessions is NOT THE SOURCE OF TRUTH for the actual state of the sessions.
- Session data may vary based on user permissions
- Installation of ScreenMeet will require an Admin to install within Zendesk Support
  or Chat.
- ScreenMeet actively supports versions of the ScreenMeet Zendesk package released
  within the last two years.
- Uses OAuth2 with refresh token - requires setup of connected app in api
- Some API responses may vary based on permissions
- ScreenMeet’s user management and authentication comply with customers' own access
  and security policies. No external user database is required, it’s all fully managed
  in Dynamics 365.
- Highly secure, all session data is SSL encrypted using TLS 1.2 transport security
  with AES-256-bit encryption. SOC 2 Type 2 Certified.
- Microsoft Omnichannel for Customer service hub installed in your environment
- Dynamics Administrator privileges
- Azure Activity Directory privileges required to consent on behalf of your org to
  use ScreenMeet Solutions
- Create an application user in dynamics and assign ScreenMeet API Service security
  role to it.
- Requires OAuth2 authentication
- Session data may contain nested structures
- Requires OAuth2 with refresh token setup
- Starting version v3.2.5 each D365 user/team intending to use ScreenMeet products
  must be assigned at least one operation-based role and a product-based role.
- You will need ScreenMeet Admin security role assigned to your D365 user to obtain
  ScreenMeet ApiKey.
- To configure 2way communication between D365 and ScreenMeet, create an application
  user in dynamics and assign ScreenMeet API Service security role to it.
- Requires OAuth2 authentication.
- Ensure to handle pagination for large datasets.
- Requires setup of connected app in Dynamics
- Requires OAuth2 authentication for access
- 1 Minute to read
- Some sessions may return nulls in certain fields
- Connection requires OAuth2 with a refresh token.
- Some endpoints may return nulls in deeply nested fields
- Requires ScreenMeet Admin security role assigned to D365 user to obtain ScreenMeet
  ApiKey.
- Make sure to trim everything after .com in the instance URL.
- Agents are logged in automatically with JWT Authentication.
- Previously, agents would click the login button to initiate the OAuth flow.
- Create an application user in dynamics and assign ScreenMeet API Service security
  role
- starting version v3.2.5 each D365 user/team intending to use ScreenMeet products
  must be assigned at least one operation-based role and a product-based role
- Ensure OAuth2 is configured correctly in the application settings.
- Requires OAuth2 setup for API access
- Rate limits apply to API requests
- Uses OAuth2 with refresh token — requires setup of connected app in ScreenMeet.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check OAuth token'
- '404 Not Found: Verify the endpoint path'
- 'INVALID_FIELD: Check the field names or parameters used'
- 'TypeError: Failed to fetch: Check network connection or API availability'
- '4043: The device certificate was not properly installed. A fitting certificate
  was not found on the device.'
- '4044: The certificate is either malformed or invalid.'
- '401 Unauthorized: Check credentials and permissions'
- HTTP 404 Error Code NOT_FOUND
- 'INVALID_FIELD: Recheck field names and types'
- 'TypeError: Failed to fetch: Check network connectivity or endpoint accessibility'
- INVALID_FIELD_FOR_INSERT_UPDATE
- 404 NO_ACCESS
- '401 Unauthorized: Check your authentication credentials'
- '403 Forbidden: You do not have permission to access this resource'
- '404 Not Found: The requested endpoint does not exist'
- '403 Forbidden: Invalid token or insufficient permissions'
- '404 Not Found: Check the endpoint URL or resource ID'
- '429 Too Many Requests: Rate limit exceeded'
- '403 Forbidden: Check permissions'
- '404 Not Found: Verify endpoint and parameters'
- '401 Unauthorized: Check OAuth token validity'
- '403 Forbidden: Check API key permissions'
- '404 Not Found: Verify endpoint URL'
- '500 Internal Server Error: Retry the request later'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '401 Unauthorized: Check OAuth token expiration'
- '404 Not Found: Verify endpoint path'
- '403 Forbidden: Check your API key and permissions.'
- '404 Not Found: Ensure the endpoint is correct.'
- '500 Internal Server Error: Try again later.'
- '401 Unauthorized: Check your API key or token'
- '404 Not Found: Endpoint does not exist'
- '401 Unauthorized: Check your credentials.'
- '403 Forbidden: Insufficient permissions.'
- Resolved issue with display message to request control permission
- Resolved issue with Windows 8 where the privacy curtain is shown for agent after
  reboot
- Resolved issue with tool button icons not being aligned properly
- Resolved margin issues with the Advanced Settings window
- Resolved an issue where remote support system information is inaccurate.
- Resolved an issue where the Edge browser download pointer pointed to the wrong location.
- Resolved an issue on macOS where remote control works improperly when the User stops
  it while the network is disconnected
- Resolved an issue where a session may get disconnected when an Agent is remotely
  controlling a User’s device with macOS Monterey
- Resolved an issue where installation of Windows client fails after manually uninstalling
  the previous version of the client.
- Resolved issue where Windows client crashes when install on Azure VM
- Resolved issue where WindowsServiceLog DB file remained after the session ended.
- Addressed a race condition on Windows that previously led to errors during session
  launch, ensuring a smoother and error-free starting experience.
- 'INVALID_FIELD: Check the fields sent in the request'
- '401 Unauthorized: Recheck OAuth token'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: Check endpoint path'
- '401 Unauthorized: Check API key or token validity'
- '404 Not Found: Ensure the endpoint is correct'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '500 Internal Server Error: Retry after some time'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify client credentials'
- '429 Too Many Requests: Exceeded rate limits'
- '404 NOT_FOUND: The resource could not be found'
- 'INVALID_FIELD_FOR_INSERT_UPDATE: Check the fields being used for the operation'
- '403 Forbidden: Check user permissions'
- '401 Unauthorized: Verify access token'
- '404 Not Found: Resource does not exist'
- '401 Unauthorized: Check your OAuth credentials'
- '403 Forbidden: Ensure you have the right permissions'
- INVALID_FIELD
- 'TypeError: Failed to fetch'
- 'Package Installation Error - Case-Case Layout: feedLayout is not supported for
  this layout'
- '401 Unauthorized: Check token validity'
- 'INVALID_TOKEN: Check if the token is expired or malformed.'
- 'SESSION_NOT_FOUND: Verify the session ID.'
- '403 Forbidden: Ensure the user has the necessary permissions.'
- 'INVALID_FIELD: Check the field names used in the request.'
- '401 Unauthorized: Verify client credentials and token.'
- 'Invalid authentication: Check your auth type and credentials'
- 'Group Key not found: Ensure the Device Group Key is correct'
- '401 Unauthorized: Check token validity.'
- '404 Not Found: Verify endpoint path.'
- '401 Unauthorized: Check API key and permissions'
- '401 Unauthorized: Check the API key or token.'
- '404 Not Found: Verify the endpoint URL.'
- 'REQUEST_LIMIT_EXCEEDED: Please reduce the number of requests'
- '401 Unauthorized: Verify token validity'
- '401 Unauthorized: Check your OAuth token validity.'
- '404 Not Found: Ensure the endpoint path is correct.'
- Resolved an issue where windows credentials login was not working when connecting
  to a beam device.
- Fixed an issue where the BeamHideUi was not working even when it was set to True.
- '401 Unauthorized: Verify your access token.'
- '403 Forbidden: Ensure you have the correct permissions.'
- '404 Not Found: Endpoint may be incorrect.'
- Could not establish a connection to CoBrowse. Ensure WebSockets are available
- '403 Forbidden: Access denied, check user roles'
- '404 Not Found: Ensure the endpoint URL is correct'
- '401 Unauthorized: Check your token and scopes.'
- '401 Unauthorized: Check client_id and client_secret'
- '403 Forbidden: Ensure correct permissions.'
- '429 Too Many Requests: Reduce request frequency'
- '400: Bad Request - Check request parameters'
- '401: Unauthorized - Check OAuth token'
- '429: Too Many Requests - Rate limit exceeded'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Recheck OAuth credentials'
- '429 Too Many Requests: Throttling limit reached'
- 'INVALID_FIELD: Check if the field exists and is spelled correctly'
- 'TypeError: Failed to fetch: Ensure the endpoint URL is correct'
- 'Package Installation Error: Verify installation steps followed correctly'
- '401 Unauthorized: Check your access token'
- '404 Not Found: Verify the endpoint is correct'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '401 Unauthorized: Check your credentials and permissions.'
- '429 Too Many Requests: Reduce the frequency of API calls.'
- 'INVALID_SESSION: Ensure session ID is correct'
- 'UNAUTHORIZED: Check OAuth token validity'
- 'INVALID_FIELD: Check the field name used in the request'
- 'TypeError: Failed to fetch: Ensure the API endpoint is correct and accessible'
- '401 Unauthorized: Check your credentials and token validity.'
- '404 Not Found: Ensure the endpoint exists.'
- '401 Unauthorized: Check client credentials.'
- '400 Bad Request: Validate input parameters'
- '403 Forbidden: Ensure proper permissions are assigned'
- 'INVALID_SESSION: Check session ID and permissions'
- 'SESSION_NOT_FOUND: Verify session exists before calling APIs'
- '401 Unauthorized: Verify OAuth tokens'
- '404 Not Found: Ensure endpoint path is correct'
- '400: INVALID_FIELD'
- 'Failed to Fetch: Check network connection or API availability'
- '404: NOT_FOUND: Incorrect Object settings on the permission set.'
- '401 Unauthorized: Check the provided token.'
- '400: INVALID_FIELD_FOR_INSERT_UPDATE when creating a session'
- 'Request Limit Exceeded: Throttle API calls or reduce frequency'
- '400: INVALID_FIELD_FOR_INSERT_UPDATE: Incorrect Object settings on the permission
  set.'
- 'INVALID_FIELD: Check the field names used in the request'
- 'TypeError: Failed to fetch: Ensure the API endpoint is correct'
- '401 Unauthorized: Verify token validity and permissions.'
- '403 Forbidden: Check API access permissions.'
- '401 Unauthorized: Check client credentials'
- '404 Not Found: Ensure endpoint is correct'
- If the integration fails, ensure the Service account username/password are valid/accurate
- 'If the ScreenMeet component still perpetually spins, log into the ScreenMeet console
  referenced in Resolution #1 and click on configure and validate instance again.'
- '404 Not Found: The requested resource does not exist.'
- '400 Bad Request: Invalid parameters supplied'
- '401 Unauthorized: Authentication failed'
- '404 Not Found: Session not found'
- '401 Unauthorized: Check your OAuth token'
- 'INVALID_FIELD: Check if the field name is correct'
- 'Package Installation Error: Verify layout compatibility'
- 'INVALID_FIELD: Check the field names in your request'
- 'TypeError: Failed to fetch: Ensure the URL is correct and the server is reachable'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of API calls'
- 'INVALID_TOKEN: Ensure the token is valid and has not expired'
- '403 Forbidden: Check permissions for the requested resource'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify credentials.'
- '404 Not Found: Resource may not exist.'
- '401 Unauthorized: Check authentication credentials'
- '404 Not Found: Verify endpoint and resource availability'
- '401 Unauthorized: Check client credentials or token validity.'
- '404 Not Found: Verify the endpoint path.'
- '401 Unauthorized: Check if the token is valid or expired.'
- 'INVALID_FIELD: Check the field names in the request'
- '429 Too Many Requests: Reduce the frequency of API calls'
- '404 Not Found: Check the endpoint path'
- '401 Unauthorized: Verify OAuth token validity'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthToken
  - OAuth2Token
  - OAuth2
  - AccessToken
  - ClientCredential
  - Session
  - PermissionSet
  - ScreenMeetAPI
  - ScreenMeetSessionParams
client:
  base_url: https://api.screenmeet.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
