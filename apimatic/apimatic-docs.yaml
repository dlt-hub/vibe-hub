resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: .apimaticsettings.json
  endpoint:
    path: MyApi/openapi.yaml
    method: GET
    data_selector: OpenAPIDefinitionPaths
    params: {}
- name: operation
  endpoint:
    path: /{operation}
    method: GET
    data_selector: result
    params:
      x: precision
      y: precision
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Calculate
  endpoint:
    path: /{operation}
    method: GET
    data_selector: Precision
    params:
      operation: Template
      x: Query
      y: Query
- name: APIMATIC-META.json
  endpoint:
    path: APIMATIC-META.json
    method: GET
    data_selector: MergeConfiguration
- name: ValidationConfiguration
  endpoint:
    path: /validate-lint-apis/configuring-validation/
    method: GET
    data_selector: ValidationConfiguration
    params: {}
- name: ValidationConfiguration
  endpoint:
    path: /validate-lint-apis/configuring-validation/
    method: GET
    data_selector: ValidationConfiguration
    params: {}
notes:
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- 'Review internal integrations: Audit any internal applications, services, or tools
  that use your TypeScript SDK to ensure they follow the recommended patterns shown
  above.'
- 'Notify your SDK consumers: Share the import pattern examples from this changelog
  with your SDK users, emphasizing that integrations following TypeScript best practices
  won''t require any changes.'
- API requests can be routed through custom proxy servers.
- Configure proxy settings using the ProxySettings instance.
- Removed usage of javax.* namespaces from apimatic/core.
- Maintained support for Java 8 and above, ensuring broader SDK usability.
- Proxy configuration allows API requests to be routed through custom proxy servers.
- Direct internet access is restricted in many enterprise environments.
- An API imported into APIMatic is not available to the public rather is displayed
  in preview mode.
- Merging multiple API specification documents should not be confused with importing
  or transforming a single API specification split into multiple files.
- Merging multiple API specifications can be configured to enable and customize merging
  of the specifications.
- The default API Portal is a Single-Page Application (SPA). SPAs aren't SEO-friendly
  but more straightforward to deploy and less prone to deployment mistakes.
- APIMatic supports generating an SEO-friendly API Documentation Portal with a few
  changes to the Build file and support from the server-side.
- Docs as code is an approach to treat the documentation as a connected part of the
  code.
- The Sync API has a time limit of 4 minutes.
- An authentication key is required to authenticate APIMatic APIs.
- For free access to the Docs as Code API, drop an email at support@apimatic.io.
- To get access to the API for generating a Portal via the docs as code workflow,
  please contact sales@apimatic.io.
- Endpoints are arranged based on the order in which they are written within the API
  specification file.
- Publishing an API Portal will help getting feedback on the API while it is being
  designed, and the API can be improved based on the feedback.
- Importing an API definition into Dashboard is recommended for generating SDK or
  Developer Experience portal.
- Importing is not recommended if only converting between API specification formats.
- Validation rules/rulesets can only be enabled but not skipped nor can their severity
  be changed.
- This feature is currently only supported for OpenAPI v2.0 and v3.0 files and works
  only when the UseStrictValidation import setting is set to true.
- Feature is currently limited to only Java and TS SDKs using OAuth 2.0 client credentials
  grant type.
- Feature currently limited to only Java and TS SDKs using OAuth 2.0 client credentials
  grant type.
- SDK automatically retrieves or refreshes the auth-token from the auth server if
  it's expired or undefined.
- We are now introducing multiple authentication support across our tooling.
- Full support for Implicit Grant is only available in AngularJS SDK because the grant
  is meant to be used in user-agent based applications.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '500: Something within the API specification file is causing the portal generation
  to fail.'
- 'There is a problem loading the documentation: An expired account subscription or
  invalid API specification causes the portal to display this error.'
- 'AuthValidationException: The following authentication credentials were required:
  -> Missing required auth credential: token -> Missing required auth credential:
  api-key'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://app.apimatic.io
  headers:
    Accept: application/json
source_metadata: null
