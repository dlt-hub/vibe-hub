resources:
- name: responses
  endpoint:
    path: /cx/surveys/{surveyID}/responses
    method: POST
    data_selector: response
    params: {}
- name: survey_url
  endpoint:
    path: /cx/transactions/survey-url
    method: POST
    data_selector: surveyURL
- name: survey_url
  endpoint:
    path: /cx/transactions/survey-url
    method: POST
    data_selector: surveyURL
- name: survey_responses
  endpoint:
    path: /cx/responses
    method: POST
    data_selector: response
    params:
      perPage: 100
- name: survey_responses
  endpoint:
    path: /cx/responses
    method: POST
    data_selector: response
    params:
      page: '1'
      perPage: '100'
- name: survey_details
  endpoint:
    path: /a/api/v2/cx/surveys/{{surveyID}}
    method: GET
    data_selector: response
- name: survey
  endpoint:
    path: /a/api/v2/cx/surveys/{{surveyID}}
    method: GET
    data_selector: response
- name: batch_survey_urls
  endpoint:
    path: /a/api/v2/cx/transactions/batch-survey-urls
    method: POST
- name: transactions
  endpoint:
    path: /cx/transactions/import
    method: POST
    data_selector: response
    params: {}
- name: batch_survey_urls
  endpoint:
    path: /cx/transactions/batch-survey-urls
    method: POST
    data_selector: response
    params: {}
- name: email_engagement
  endpoint:
    path: /cx/transactions/email-engagement
    method: POST
- name: transactions
  endpoint:
    path: /cx/transactions/import
    method: POST
    data_selector: response
    params: {}
- name: transaction
  endpoint:
    path: /cx/transactions/{transactionID}
    method: GET
    params:
      transactionID: integer
- name: email_engagement
  endpoint:
    path: /cx/transactions/email-engagement
    method: POST
- name: transaction
  endpoint:
    path: /cx/transactions/{transactionID}
    method: GET
    data_selector: response
    params:
      transactionID: required
- name: users
  endpoint:
    path: /cx/feedback/{workspaceID}/users
    method: GET
    data_selector: response
    params:
      feedbackID: integer
- name: user
  endpoint:
    path: /cx/feedback/{workspaceID}/users/{{userID}}
    method: GET
- name: users
  endpoint:
    path: /cx/feedback/{workspaceID}/users
    method: GET
    data_selector: response
    params:
      feedbackID: integer
- name: segments
  endpoint:
    path: /cx/feedback/{workspaceID}/segments
    method: GET
    data_selector: response
    params:
      feedbackID: required
- name: Get User By ID
  endpoint:
    path: /cx/feedback/{workspaceID}/users/{{userID}}
    method: GET
    data_selector: response
    params:
      feedbackID: integer
      userID: integer
- name: segments
  endpoint:
    path: /cx/feedback/{workspaceID}/segments
    method: GET
    data_selector: response
    params:
      feedbackID: integer
      userID: integer
- name: segments
  endpoint:
    path: /cx/feedback/{workspaceID}/segments
    method: GET
    data_selector: response
    params:
      perPage: 100
- name: closed_loop_tickets
  endpoint:
    path: /cx/tickets/detractors
    method: POST
    data_selector: response
    params: {}
- name: segments
  endpoint:
    path: /cx/feedback/{workspaceID}/segments
    method: GET
    data_selector: response
    params:
      feedbackID: integer
      userID: integer
- name: closed_loop_tickets
  endpoint:
    path: /a/api/v2/cx/tickets/detractors
    method: POST
    data_selector: response
    params:
      perPage: '100'
- name: cx_ticket
  endpoint:
    path: /cx/tickets/{{workspaceID}}
    method: GET
    data_selector: response
    params:
      feedbackID: integer
      userID: integer
- name: cx_ticket
  endpoint:
    path: /cx/tickets/{{workspaceID}}
    method: GET
    data_selector: response
    params:
      feedbackID: integer
      userID: integer
- name: surveys
  endpoint:
    path: /cx/feedbacks/{workspaceID}/surveys
    method: GET
    data_selector: response
    params: {}
- name: surveys
  endpoint:
    path: /a/api/v2/cx/feedbacks/{{workspaceID}}/surveys
    method: GET
    data_selector: response
    params:
      feedbackID: integer
- name: user_feedback
  endpoint:
    path: /cx/users/{{userID}}/feedbacks
    method: GET
    data_selector: response
    params:
      feedbackID: integer
- name: feedbacks
  endpoint:
    path: /cx/users/{{userID}}/feedbacks
    method: GET
    data_selector: response
    params:
      feedbackID: integer
- name: panel_member
  endpoint:
    path: /micropanel/members/{memberID}
    method: GET
    data_selector: response
    params:
      memberID: integer
- name: panel_member
  endpoint:
    path: /micropanel/members/{memberID}
    method: GET
    data_selector: response
    params:
      memberID: integer
- name: panel_member
  endpoint:
    path: /micropanel/members/search
    method: GET
    data_selector: response
    params:
      emailID: email
- name: get_member_using_emails
  endpoint:
    path: /micropanel/members/search
    method: GET
    data_selector: response
    params:
      emailID: email
- name: panel_members
  endpoint:
    path: /micropanel/members
    method: POST
    data_selector: response
    params: {}
- name: panel_members
  endpoint:
    path: /micropanel/members
    method: POST
    data_selector: response
    params: {}
- name: participant_statistics
  endpoint:
    path: /cx/transactions/participant-stats
    method: POST
    data_selector: response
    params:
      page: 1
      perPage: 100
- name: participant_statistics
  endpoint:
    path: /a/api/v2/cx/transactions/participant-stats
    method: POST
    data_selector: response
    params:
      page: 1
      perPage: 100
- name: respondents
  endpoint:
    path: /micropanel/members
    method: GET
    data_selector: response
    params: {}
- name: respondents
  endpoint:
    path: /micropanel/members
    method: GET
    data_selector: response
    params: {}
- name: panel_members
  endpoint:
    path: /cx/feedback/panel-members
    method: GET
    data_selector: response
    params: {}
- name: respondents
  endpoint:
    path: /feedback/panel-members
    method: GET
    data_selector: response
    params: {}
- name: root_causes
  endpoint:
    path: /a/api/v2/get-rootcause-list
    method: GET
    data_selector: response
- name: root_causes
  endpoint:
    path: /a/api/v2/rootcause
    method: GET
    data_selector: response
- name: panel_members
  endpoint:
    path: /cx/feedback/panel-members
    method: POST
    data_selector: response
    params:
      perPage: 100
- name: panel_members
  endpoint:
    path: /panel-members
    method: POST
    data_selector: response
    params: {}
notes:
- Please do not share your secret API keys in publicly accessible areas such GitHub,
  client-side code, and so forth.
- Each API key in CX is specific to the Workspace level.
errors:
- 'BAD_REQUEST: Invalid URL parameters'
- 'UNAUTHORIZED: Incorrect API Key'
- 'FORBIDDEN: The user does not have permission to access the resource'
- 'NOT_FOUND: The resource that you''re trying to access doesn''t exist'
- 'INTERNAL_SERVER_ERROR: We are not able to process your request'
- '1040: Resource Not Found - The resource that you''re trying to access doesn''t
  exist'
- '1003: Bad Request - Invalid URL parameters'
- '1010: Authorization Error - Incorrect API Key'
- '1002: Bad Request - Invalid schema in the body provided.'
- '1001: Bad Request - The body provided was not a proper JSON string'
- '1013: Forbidden - The user does not have permission to access the resource'
- '1011: Forbidden - Permission has not been granted by the user to make this request.'
- '1040: Resource Not Found'
- '1003: Invalid URL parameters'
- '1010: Authorization Error'
- '1002: Invalid schema in the body provided.'
- '1001: The body provided was not a proper JSON string'
- '1013: Forbidden'
- '1011: Permission has not been granted by the user to make this request.'
- '400 Bad Request: Check request format and payload'
- '401 Unauthorized: Verify API key'
- '403 Forbidden: Check permissions'
- '404 Not Found: Endpoint does not exist'
- '500 Internal Server Error: Retry later'
- '400 Bad Request: Check request body format'
- '401 Unauthorized: Check API key'
- '404 Not Found: Check endpoint URL'
- '500 Internal Server Error: Try again later'
- name: BAD_REQUEST
  httpStatusCode: 400
  id: '1000'
  message: Invalid URL parameters
  docs: www.questionpro.com/api/error-codes.html
- name: UNAUTHORIZED
  httpStatusCode: 401
  id: '1010'
  message: Incorrect API Key
  docs: www.questionpro.com/api/error-codes.html
- name: FORBIDDEN
  httpStatusCode: 403
  id: '1013'
  message: The user does not have permission to access the resource
  docs: www.questionpro.com/api/error-codes.html
- name: NOT_FOUND
  httpStatusCode: 404
  id: '1040'
  message: The resource that you're trying to access doesn't exist
  docs: www.questionpro.com/api/error-codes.html
- name: INTERNAL_SERVER_ERROR
  httpStatusCode: 500
  id: '1026'
  message: We are not able to process your request
  docs: www.questionpro.com/api/error-codes.html
- name: FORBIDDEN
  httpStatusCode: 403
  id: '1013'
  message: The user does not have permission to access the resource
  resourceUrl: resource_url
  docs: www.questionpro.com/api/error-codes.html
- name: NOT_FOUND
  httpStatusCode: 404
  id: '1040'
  message: The resource that you're trying to access doesn't exist
  resourceUrl: resource_url
  docs: www.questionpro.com/api/error-codes.html
- name: INTERNAL_SERVER_ERROR
  httpStatusCode: 500
  id: '1026'
  message: We are not able to process your request
  resourceUrl: resource_url
  docs: www.questionpro.com/api/error-codes.html
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.questionpro.{{env}}/a/api/v2
  auth:
    type: apikey
    location: header
    header_name: api-key
source_metadata: null
