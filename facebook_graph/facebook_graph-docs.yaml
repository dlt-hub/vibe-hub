resources:
- name: account_management
  endpoint:
    path: /admin/accounts
    method: REST
- name: security_events
  endpoint:
    path: /admin/security_events
    method: REST
- name: account_management
  endpoint:
    method: GET
- name: security_audit_logs
  endpoint:
    method: GET
- name: account_management
  endpoint:
    path: SCIM-based account management API
    method: GET
- name: security_audit_logs
  endpoint:
    path: security log API
    method: GET
- name: mobile_advertiser_ids
  endpoint:
    method: GET
- name: login
  endpoint:
    path: /LoginManager
    method: GET
- name: profile
  endpoint:
    path: /Profile
    method: GET
- name: share
  endpoint:
    path: /ShareApi
    method: POST
- name: graph_api
  endpoint:
    path: /GraphRequest
    method: GET
- name: facebook-applinks
  endpoint:
    path: /facebook-applinks
    method: GET
- name: facebook-common
  endpoint:
    path: /facebook-common
    method: GET
- name: facebook-core
  endpoint:
    path: /facebook-core
    method: GET
- name: facebook-gamingservices
  endpoint:
    path: /facebook-gamingservices
    method: GET
- name: facebook-login
  endpoint:
    path: /facebook-login
    method: GET
- name: facebook-messenger
  endpoint:
    path: /facebook-messenger
    method: GET
- name: facebook-share
  endpoint:
    path: /facebook-share
    method: GET
- name: FacebookContentProvider
  endpoint:
    path: /app/manifests/AndroidManifest.xml
    method: GET
    data_selector: provider
- name: user
  endpoint:
    path: /user/me
    method: GET
    data_selector: .
    params:
      fields: id,name,link
- name: share_to_reel
  endpoint:
    path: com.facebook.reels.SHARE_TO_REEL
    method: POST
    data_selector: extra
    params:
      APPLICATION_ID: com.facebook.platform.extra.APPLICATION_ID
      videoAssetUri: video/mp4
      stickerAssetUri: interactive_asset_uri
- name: share_to_reel
  endpoint:
    path: /com.instagram.share.ADD_TO_REEL
    method: POST
- name: share_to_reel_multiple
  endpoint:
    path: /com.instagram.share.ADD_TO_REEL_MULTIPLE
    method: POST
- name: Facebook_Login
  endpoint:
    path: /services/data/v16.0/sobjects/FacebookLogin
    method: GET
- name: Sharing
  endpoint:
    path: /services/data/v16.0/sobjects/Sharing
    method: GET
- name: App_Events
  endpoint:
    path: /services/data/v16.0/sobjects/AppEvents
    method: GET
- name: App_Advertising
  endpoint:
    path: /services/data/v16.0/sobjects/AppAdvertising
    method: GET
- name: Facebook_Login
  endpoint:
    path: /docs/android#FacebookLogin
    method: GET
- name: Sharing
  endpoint:
    path: /docs/android#Sharing
    method: GET
- name: App_Events
  endpoint:
    path: /docs/android#AppEvents
    method: GET
- name: Promote_App
  endpoint:
    path: /docs/android#PromoteApp
    method: GET
- name: app_installation
  endpoint:
    path: /docs/app-events
    method: GET
- name: app_launch
  endpoint:
    path: /docs/app-events
    method: GET
- name: app_internal_purchase
  endpoint:
    path: /docs/app-events
    method: GET
- name: sdk_crash_report
  endpoint:
    path: /docs/app-events
    method: GET
- name: app_events
  endpoint:
    path: /docs/app-events
    method: GET
- name: app_installation
  endpoint:
    path: /app-events
    method: POST
- name: app_launch
  endpoint:
    path: /app-events
    method: POST
- name: in_app_purchase
  endpoint:
    path: /app-events
    method: POST
- name: in_app_subscriptions_and_trials
  endpoint:
    path: /app-events
    method: POST
- name: sdk_crash_report
  endpoint:
    path: /app-events
    method: POST
- name: anr_report
  endpoint:
    path: /app-events
    method: POST
- name: app_events
  endpoint:
    path: /docs/app-events
    method: GET
- name: app_events
  endpoint:
    path: /app_events
    method: POST
    data_selector: data
- name: applinks_metadata_ios
  endpoint:
    path: /applinks
    method: GET
- name: applinks_metadata_android
  endpoint:
    path: /android
    method: GET
- name: applink_events
  endpoint:
    path: /android
    method: GET
    data_selector: extras
- name: app_links
  endpoint:
    path: /
    method: GET
    data_selector: .
    params:
      ids: http://fb.me/729250327126474
      fields: app_links
- name: app_link_data
  endpoint:
    path:
      url: null
    method: GET
    data_selector: al_applink_data
    params:
      target_url: '{the-target-url}'
      extras:
        fb_app_id: '{your-fb-app-id}'
        fb_access_token: '{your-access-token}'
        fb_expires_in: '3600'
      referer_app_link:
        url: '{your-fb-app-back-link}'
        app_name: Facebook
- name: ios_metadata
  endpoint:
    path: /documentation.html
    method: GET
    data_selector: meta
- name: iphone_metadata
  endpoint:
    path: /documentation.html
    method: GET
    data_selector: meta
- name: ipad_metadata
  endpoint:
    path: /documentation.html
    method: GET
    data_selector: meta
- name: android_metadata
  endpoint:
    path: /documentation.html
    method: GET
    data_selector: meta
- name: windows_phone_metadata
  endpoint:
    path: /documentation.html
    method: GET
    data_selector: meta
- name: windows
  endpoint:
    path: al:windows:url
    method: GET
- name: universal_windows
  endpoint:
    path: al:windows_universal:url
    method: GET
- name: applinks_navigation
  endpoint:
    path: /applinks
    method: GET
- name: app_links_data
  endpoint:
    path: /graph_api/app_links
    method: GET
- name: general_info
  endpoint:
    method: GET
- name: ads_buying
  endpoint:
    path: /ads_buying
- name: crash_reports
  endpoint:
    path: /crash_reports
- name: instagram_management
  endpoint:
    path: /instagram_management
- name: page_management
  endpoint:
    path: /page_management
- name: switch_access_tokens
  endpoint:
    path: /switch_access_tokens
- name: onboarding_clients_at_scale
  endpoint:
    path: /onboarding_clients_at_scale
- name: using_other_apis
  endpoint:
    path: /using_other_apis
- name: campaign
  endpoint:
    method: GET
- name: promoted_object
  endpoint:
    params:
      daily_budget: 20000
      optimization_goal: CONVERSIONS
      promoted_object:
        omnichannel_object:
          app:
          - application_id: ''
            custom_event_type: PURCHASE
            object_store_urls:
            - https://play.google.com/store/apps/details?id=com.facebook.ka
            - https://apps.apple.com/us/app/facebook/id284882215
          pixel:
          - pixel_id: ''
            custom_event_type: PURCHASE
- name: ad_specification
  endpoint:
    params:
      creative:
        name: ''
        applink_treatment: ''
        object_story_spec: ''
        omnichannel_link_spec: ''
- name: tracking_specifications
  endpoint:
    params:
      tracking_specs:
      - action.type:
        - offsite_conversion
        fb_pixel:
        - ''
      - action.type:
        - mobile_app_install
        application:
        - ''
      - action.type:
        - app_custom_event
        application:
        - ''
- name: template_url_spec
  endpoint:
    params:
      creative:
        applink_treatment: deeplink_with_web_fallback
        template_url_spec:
          android:
            url: example://product/{{product.retailer_id | urlencode}}
          config:
            app_id: <APPLICATION_ID>
          ios:
            url: example://product/{{product.name | urlencode}}
          web:
            url: https://www.example.com/deeplink/{{product.name | urlencode}}
- name: omnichannel_link_spec
  endpoint:
    params:
      applink_treatment: deeplink_with_web_fallback
      omnichannel_link_spec:
        web:
          url: web_url
        app:
          application_id: ''
          platform_specs:
            android:
              url: android_deeplink
            ios:
              url: ios_deeplink
- name: object_story_spec
  endpoint:
    params:
      instagram_user_id: <IG_USER_ID>
      page_id: ''
      link_data:
        call_to_action:
          type: LEARN_MORE
        link: web_url
        message: Purchase now!
        name: Sample creative
      object_type: SHARE
- name: ad_creatives
  endpoint:
    path: /act_<AD_ACCOUNT_ID>/adcreatives
    method: GET
    data_selector: data
    params:
      fields: instagram_user_id
- name: customer_support_email
  endpoint:
    path: None
    method: Email
    data_selector: None
- name: subscription_products
  endpoint:
    path: /any-url
    method: GET
    params:
      product_id: <product-id:1>
      coupon: <promo>
      products_json: <products_json>
- name: commerce_merchant_settings
  endpoint:
    path: /v23.0/{page_id}/commerce_merchant_settings
    method: GET
    data_selector: data
    params:
      fields: id,shops{id,fb_sales_channel},cta,offsite_iab_checkout_enabled_countries
- name: campaigns
  endpoint:
    path: /v22.0/act_{ad_account_id}/campaigns
    method: POST
    params:
      status: PAUSED
- name: adsets
  endpoint:
    path: /v22.0/act_{ad_account_id}/adsets
    method: POST
    params:
      billing_event: IMPRESSIONS
      bid_strategy: LOWEST_COST_WITHOUT_CAP
      status: PAUSED
- name: ad_creatives
  endpoint:
    path: /v22.0/act_{ad_account_id}/adcreatives
    method: POST
    params:
      status: PAUSED
- name: ads
  endpoint:
    path: /v22.0/act_{ad_account_id}/ads
    method: POST
    params:
      status: PAUSED
- name: orders
  endpoint:
    path: /orders
    method: GET
- name: order_details
  endpoint:
    path: /orders/details
    method: GET
- name: order_snapshot
  endpoint:
    path: /order_snapshot
    method: POST
- name: fulfillment
  endpoint:
    path: /shipments
    method: GET
- name: shipping_profiles
  endpoint:
    path: /shipping_profiles
    method: POST
- name: cancellation_refund
  endpoint:
    path: /orders/cancellations_refunds
    method: GET
- name: returns
  endpoint:
    path: /orders/returns
    method: GET
- name: shipping_carrier_codes
  endpoint:
    path: /shipping_carrier_codes
    method: GET
- name: inventory_update
  endpoint:
    method: POST
- name: finance_report
  endpoint:
    method: GET
- name: payouts
  endpoint:
    path: /payouts
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: orders
  endpoint:
    path: /orders
    method: GET
- name: checkout
  endpoint:
    path: /checkout
    method: GET
    params:
      products: comma-separated list of product IDs and quantities
      coupon: single promotional code
- name: checkout
  endpoint:
    path: /checkout
    method: GET
    params:
      products: comma-separated list of product IDs and quantities
      coupon: single optional coupon code
- name: local_inventory_feed
  endpoint:
    path: /checkout
    method: GET
    params:
      products: 123:3,124:2,125:1
      products_json: '{"123":{"store_code":"1"}, "124":{"store_code":"2"}}'
- name: store_location_setup
  endpoint:
    path: /business-manager/store-setup
    method: POST
- name: product_pick_up_eligibility
  endpoint:
    path: /product-feed
    method: POST
    params:
      product_delivery_methods:
      - shipping
      - local_pickup
- name: dyi_deep_link
  endpoint:
    path: /dyi
    method: GET
    params:
      source: external
      account_type: '0'
      sections[0]: FRIENDS_V2
      sections[1]: PERSONAL_INFO
      import_service: GoogleDrive
- name: tyi_deep_link
  endpoint:
    path: /tyi
    method: GET
    params:
      source: external
      account_type: '1'
      import_service: Dropbox
- name: data_transfer
  endpoint:
    method: POST
- name: Download_Your_Information
  endpoint:
    path: /DYI
    method: GET
- name: Transfer_a_copy_of_Your_Information
  endpoint:
    path: /TYI
    method: GET
- name: app_settings
  endpoint:
    path: /oauth/access_token
    method: GET
    params:
      client_id: '{your-app-id}'
      client_secret: '{your-app-secret}'
      grant_type: client_credentials
- name: user_pages
  endpoint:
    path: /{your-user-id}/accounts
    method: GET
    params:
      access_token: '{user-access-token}'
- name: login_events
  endpoint:
    method: GET
    data_selector: events
- name: user_permissions
  endpoint:
    path: /reauthorizeDataAccess
    method: POST
- name: user_data_access
  endpoint:
    path: /debug_token
    method: GET
- name: user_data
  endpoint:
    path: /user
    method: GET
    data_selector: data
- name: permissions
  endpoint:
    path: /permissions
    method: GET
    data_selector: permissions
- name: client_business_id
  endpoint:
    path: /v23.0/me
    method: GET
    params:
      fields: client_business_id
      access_token: '{{ dlt.secrets[''business_integration_system_user_access_token'']
        }}'
- name: system_user_access_tokens
  endpoint:
    path: /v23.0/<CLIENT_BUSINESS_ID>/system_user_access_tokens
    method: POST
    params:
      appsecret_proof: '{{ dlt.secrets[''appsecret_proof_hash''] }}'
      access_token: '{{ dlt.secrets[''access_token''] }}'
      system_user_id: '{{ dlt.secrets[''system_user_id''] }}'
      fetch_only: true
- name: device_login
  endpoint:
    path: /<API_VERSION>/device/login
    method: POST
    data_selector: .
    params:
      access_token: <YOUR_APP_ID|CLIENT_TOKEN>
      scope: <COMMA_SEPARATED_PERMISSION_NAMES>
      redirect_uri: <VALID_OAUTH_REDIRECT_URL>
- name: device_login_status
  endpoint:
    path: /<API_VERSION>/device/login_status
    method: POST
    data_selector: .
    params:
      access_token: <YOUR_APP_ID|CLIENT_TOKEN>
      code: <LONG_CODE_FROM_STEP_1>
- name: user_profile
  endpoint:
    path: /me
    method: GET
    data_selector: .
    params:
      fields: name,picture
      access_token: <USER_ACCESS_TOKEN>
- name: ios_facebook_login
  endpoint:
    path: /
    method: GET
- name: user_permissions
  endpoint:
    method: GET
- name: user_data
  endpoint:
    path: /me
    method: GET
- name: user_accounts
  endpoint:
    path: /me/accounts
    method: GET
- name: user_login_status
  endpoint:
    path: /en_US/sdk.js
    method: GET
    data_selector: authResponse
    params:
      scope: public_profile,email
- name: page_view
  endpoint:
    path: /
    method: GET
    data_selector: PageView
- name: standard_events
  endpoint:
    path: /fbq('track')
    method: POST
    params: {}
- name: product_list
  endpoint:
    path: /APP_ID/products
    method: GET
    data_selector: data
- name: product_purchases
  endpoint:
    path: /APP_ID/purchases
    method: GET
    data_selector: data
- name: consume_product
  endpoint:
    path: /PURCHASE_TOKEN/consume
    method: POST
- name: detail_report
  endpoint:
    path: /COMPANY_ID/report
    method: GET
    data_selector: ''
    params:
      date: YYYY-MM-DD
      type: detail
      access_token: '{{ dlt.secrets[''access_token''] }}'
- name: digest_report
  endpoint:
    path: /COMPANY_ID/report
    method: GET
    data_selector: ''
    params:
      date: YYYY-MM-DD
      type: digest
      access_token: '{{ dlt.secrets[''access_token''] }}'
- name: payments_webhooks
  endpoint:
    path: /docs/games_payments/webhooks
    method: GET
- name: payments_products
  endpoint:
    path: /docs/games_payments/products
    method: GET
- name: payment_info
  endpoint:
    path: /{payment_id}
    method: GET
    data_selector: .
    params:
      fields: test
- name: user_segmentation
  endpoint:
    path: /{USER_ID}
    method: GET
    data_selector: test_group
    params:
      fields: test_group
- name: payments_subscription
  endpoint:
    path: /{APP_ID}/subscriptions
    method: POST
    params:
      object: payments
      fields: actions,disputes
      callback_url: '{{ callback_url }}'
      verify_token: '{{ verify_token }}'
- name: payments_subscription_list
  endpoint:
    path: /{APP_ID}/subscriptions
    method: GET
- name: batch_requests
  endpoint:
    path: /me
    method: POST
    data_selector: batch
    params:
      batch: '[JSON-OBJECT]'
      include_headers: false
- name: user_profile
  endpoint:
    path: /me
    method: GET
    data_selector: .
    params:
      fields: id,name
- name: user_email
  endpoint:
    path: /me
    method: GET
    data_selector: .
    params:
      fields: email
- name: user_node
  endpoint:
    path: /USER-ID
    method: GET
    data_selector: .
    params:
      fields: id,name,email,picture
- name: user_photos
  endpoint:
    path: /USER-ID/photos
    method: GET
    data_selector: data
- name: page_feed
  endpoint:
    path: /PAGE-ID/feed
    method: POST
    data_selector: .
    params:
      fields: created_time,from,id,message
- name: photo_node
  endpoint:
    path: /PHOTO-ID
    method: DELETE
    data_selector: .
- name: metadata_fields
  endpoint:
    path: /USER-ID
    method: GET
    data_selector: metadata.fields
    params:
      metadata: 1
- name: video
  endpoint:
    path: /video
    method: GET
- name: Album
  endpoint:
    path: /Album
    method: GET
- name: Anfrage
  endpoint:
    path: /request
    method: GET
- name: App-Link-Host
  endpoint:
    path: /App-Link-Host
    method: GET
- name: Application
  endpoint:
    path: /Application
    method: GET
- name: CPASAdvertiser Partnership Recommendation
  endpoint:
    path: /CPASAdvertiser Partnership Recommendation
    method: GET
- name: Canvas
  endpoint:
    path: /Canvas
    method: GET
- name: Canvas Button
  endpoint:
    path: /Canvas Button
    method: GET
- name: Canvas Carousel
  endpoint:
    path: /Canvas Carousel
    method: GET
- name: Canvas Footer
  endpoint:
    path: /Canvas Footer
    method: GET
- name: Canvas Header
  endpoint:
    path: /Canvas Header
    method: GET
- name: Canvas Photo
  endpoint:
    path: /Canvas Photo
    method: GET
- name: Canvas Product List
  endpoint:
    path: /Canvas Product List
    method: GET
- name: Canvas Product Set
  endpoint:
    path: /Canvas Product Set
    method: GET
- name: Canvas Text
  endpoint:
    path: /Canvas Text
    method: GET
- name: Canvas Video
  endpoint:
    path: /Canvas Video
    method: GET
- name: Collaborative Ads Directory
  endpoint:
    path: /Collaborative Ads Directory
    method: GET
- name: Debug Token
  endpoint:
    path: /Debug Token
    method: GET
- name: Event
  endpoint:
    path: /Event
    method: GET
- name: Extended Credit Allocation Config
  endpoint:
    path: /Extended Credit Allocation Config
    method: GET
- name: Games IAPProduct
  endpoint:
    path: /Games IAPProduct
    method: GET
- name: Group Message
  endpoint:
    path: /Group Message
    method: GET
- name: Gruppe
  endpoint:
    path: /Gruppe
    method: GET
- name: Gruppendokument
  endpoint:
    path: /group-doc
    method: GET
- name: Image Copyright
  endpoint:
    path: /Image Copyright
    method: GET
- name: Instagram Oembed
  endpoint:
    path: /Instagram Oembed
    method: GET
- name: Kommentar
  endpoint:
    path: /comment
    method: GET
- name: Link
  endpoint:
    path: /Link
    method: GET
- name: Live Video Input Stream
  endpoint:
    path: /Live Video Input Stream
    method: GET
- name: Mailing Address
  endpoint:
    path: /Mailing Address
    method: GET
- name: Media Fingerprint
  endpoint:
    path: /Media Fingerprint
    method: GET
- name: Meilenstein
  endpoint:
    path: /milestone
    method: GET
- name: Meldung
  endpoint:
    path: /Meldung
    method: GET
- name: Nachrichtenverlauf
  endpoint:
    path: /thread
    method: GET
- name: Object Private Replies
  endpoint:
    path: /Object Private Replies
    method: GET
- name: Objekt „Gefällt mir“-Angabe
  endpoint:
    path: /Objekt „Gefällt mir“-Angabe
    method: GET
- name: Objektkommentare
  endpoint:
    path: /Objektkommentare
    method: GET
- name: Objektreaktionen
  endpoint:
    path: /Objektreaktionen
    method: GET
- name: Oembed Page
  endpoint:
    path: /Oembed Page
    method: GET
- name: Oembed Post
  endpoint:
    path: /Oembed Post
    method: GET
- name: Oembed Video
  endpoint:
    path: /Oembed Video
    method: GET
- name: Offline Conversion Data Set Upload
  endpoint:
    path: /Offline Conversion Data Set Upload
    method: GET
- name: Ort-Markierung
  endpoint:
    path: /Ort-Markierung
    method: GET
- name: Page
  endpoint:
    path: /Page
    method: GET
- name: Page Call To Action
  endpoint:
    path: /Page Call To Action
    method: GET
- name: Page Post
  endpoint:
    path: /Page Post
    method: GET
- name: Page Upcoming Change
  endpoint:
    path: /Page Upcoming Change
    method: GET
- name: Page/insights
  endpoint:
    path: /Page/insights
    method: GET
- name: Photo
  endpoint:
    path: /Photo
    method: GET
- name: Place
  endpoint:
    path: /Place
    method: GET
- name: Place Topic
  endpoint:
    path: /Place Topic
    method: GET
- name: Post
  endpoint:
    path: /Post
    method: GET
- name: Profil
  endpoint:
    path: /profile
    method: GET
- name: Shadow IGUser
  endpoint:
    path: /Shadow IGUser
    method: GET
- name: Sharedposts-Objekt
  endpoint:
    path: /object/sharedposts
    method: GET
- name: Testnutzer
  endpoint:
    path: /test-user
    method: GET
- name: Threat Exchange Impact Report
  endpoint:
    path: /Threat Exchange Impact Report
    method: GET
- name: Unterhaltung
  endpoint:
    path: /conversation
    method: GET
- name: User
  endpoint:
    path: /User
    method: GET
- name: Video Copyright
  endpoint:
    path: /Video Copyright
    method: GET
- name: Video List
  endpoint:
    path: /Video List
    method: GET
- name: Video Poll
  endpoint:
    path: /Video Poll
    method: GET
- name: Video Poll Option
  endpoint:
    path: /Video Poll Option
    method: GET
- name: Whats App Business Account
  endpoint:
    path: /Whats App Business Account
    method: GET
- name: Whats App Business HSM
  endpoint:
    path: /Whats App Business HSM
    method: GET
- name: Whats App Business Solution
  endpoint:
    path: /Whats App Business Solution
    method: GET
- name: Zahlung
  endpoint:
    path: /payment
    method: GET
- name: Ads Archive
  endpoint:
    path: /AdsArchive
    method: GET
- name: Binary Transparency Artifacts
  endpoint:
    path: /BinaryTransparencyArtifacts
    method: GET
- name: Binary Transparency Proofs
  endpoint:
    path: /BinaryTransparencyProofs
    method: GET
- name: Branded Content Search
  endpoint:
    path: /BrandedContentSearch
    method: GET
    params:
      created_at_min: '2023-08-17'
- name: Debug Token
  endpoint:
    path: /DebugToken
    method: GET
- name: Generatepreviews
  endpoint:
    path: /Generatepreviews
    method: GET
- name: Message Template Library
  endpoint:
    path: /MessageTemplateLibrary
    method: GET
- name: video_copyright_rule
  endpoint:
    path: /{page_id}/video_copyright_rules
    method: POST
    params:
      access_token: XXXXXXXX
      name: testrule
      condition_groups: '[{action:"MANUAL_REVIEW",conditions:[{type:"MONITORING_TYPE",operator:"IS",value:"VIDEO_ONLY"},{type:"OVERLAP_DURATION",operator:"LESS_THAN",value:120000},{type:"GEO",operator:"IN_SET",value:["AR","AU"]}]}]'
- name: video_copyright_rule_info
  endpoint:
    path: /{video_copyright_rule_id}
    method: GET
    params:
      access_token: XXXXXXXX
- name: delete_video_copyright_rule
  endpoint:
    path: /{video_copyright_rule_id}
    method: DELETE
    params:
      access_token: XXXXXXXX
- name: video_copyright
  endpoint:
    path: /{page_id}/video_copyrights
    method: POST
    params:
      access_token: XXXXXXXX
      copyright_content_id: 576425449198708
      is_reference_video: true
      monitoring_type: VIDEO_ONLY
      rule_id: 576407315867188
      whitelisted_ids: '[139577256378818]'
      ownership_countries: '[“us”,”ca”]'
- name: media_insights
  endpoint:
    path: /{ig-media-id}/insights
    method: GET
    data_selector: data
    params:
      metric: video_views
- name: user_insights
  endpoint:
    path: /{ig-user-id}/insights
    method: GET
    data_selector: data
    params:
      metric: impressions, reach, engagement, video_views
- name: media
  endpoint:
    path: /{ig-user-id}/media
    method: GET
    data_selector: data
- name: comments
  endpoint:
    path: /{ig-media-id}/comments
    method: GET
    data_selector: data
- name: comments
  endpoint:
    path: /<IG_MEDIA_ID>/comments
    method: GET
    data_selector: data
- name: comment_replies
  endpoint:
    path: /<IG_COMMENT_ID>/replies
    method: GET
    data_selector: data
- name: reply_to_comment
  endpoint:
    path: /<IG_COMMENT_ID>/replies
    method: POST
    data_selector: id
- name: hide_unhide_comment
  endpoint:
    path: /<IG_COMMENT_ID>
    method: POST
    data_selector: id
- name: disable_enable_comments
  endpoint:
    path: /<IG_MEDIA_ID>
    method: POST
    data_selector: id
- name: delete_comment
  endpoint:
    path: /<IG_COMMENT_ID>
    method: DELETE
    data_selector: id
- name: media_container
  endpoint:
    path: /<IG_ID>/media
    method: POST
    data_selector: id
    params:
      upload_type: resumable
- name: media_publish
  endpoint:
    path: /<IG_ID>/media_publish
    method: POST
    data_selector: id
- name: media_status
  endpoint:
    path: /<IG_CONTAINER_ID>
    method: GET
    data_selector: status_code
- name: content_publishing_limit
  endpoint:
    path: /<IG_ID>/content_publishing_limit
    method: GET
- name: video_upload
  endpoint:
    path: /ig-api-upload/<IG_MEDIA_CONTAINER_ID>
    method: POST
- name: reels_publish
  endpoint:
    path: /<IG_ID>/media
    method: POST
    data_selector: media_product_type
    params:
      media_type: REELS
- name: story_publish
  endpoint:
    path: /<IG_ID>/media
    method: POST
    data_selector: media_product_type
    params:
      media_type: STORIES
- name: instagram_business_management
  endpoint:
    path: /instagram_business_management
    method: GET
    data_selector: data
- name: media_insights
  endpoint:
    path: /<INSTAGRAM_MEDIA_ID>/insights
    method: GET
    data_selector: data
    params:
      metric: engagement,impressions,reach
      period: day
- name: account_insights
  endpoint:
    path: /<INSTAGRAM_ACCOUNT_ID>/insights
    method: GET
    data_selector: data
    params:
      metric: impressions,reach,profile_views
      period: day
- name: instagram_post_embed
  endpoint:
    path: /instagram_oembed
    method: GET
    data_selector: html
    params:
      url: <URL_OF_THE_POST>
      access_token: <ACCESS_TOKEN>
- name: instagram_post_thumbnail
  endpoint:
    path: /instagram_oembed
    method: GET
    data_selector: thumbnail_url
    params:
      url: <URL_OF_THE_POST>
      maxwidth: <MAX_WIDTH>
      fields: thumbnail_url,author_name,provider_name,provider_url
      access_token: <ACCESS_TOKEN>
- name: instagram_basic
- name: instagram_manage_comments
- name: comments_management
  endpoint:
    path: /me/comments
    method: GET
- name: media_publishing
  endpoint:
    path: /me/media
    method: POST
- name: messaging
  endpoint:
    path: /me/messages
    method: POST
- name: private_reply
  endpoint:
    path: /<APP_USERS_IG_ID>/messages
    method: POST
- name: instagram_comment
  endpoint:
    path: null
    method: GET
- name: media_container
  endpoint:
    path: null
    method: GET
- name: instagram_hashtag
  endpoint:
    path: null
    method: GET
- name: media
  endpoint:
    path: null
    method: GET
- name: business_or_creator_account
  endpoint:
    path: null
    method: GET
- name: facebook_page
  endpoint:
    path: null
    method: GET
- name: open_instagram_app
  endpoint:
    path: /
    method: GET
- name: create_story
  endpoint:
    path: /create/story
    method: GET
- name: load_post_by_id
  endpoint:
    path: /p/{media_id}
    method: GET
- name: load_user_by_username
  endpoint:
    path: /{username}
    method: GET
- name: load_location_feed_by_id
  endpoint:
    path: /explore/locations/{location_id}
    method: GET
- name: load_hashtag_page_by_name
  endpoint:
    path: /explore/tags/{tag_name}
    method: GET
- name: sharing_to_stories
  endpoint:
    method: POST
    params:
      facebook_app_id: '{{ your_facebook_app_id }}'
- name: webhook_events
  endpoint:
    path: /me/subscribed_apps
    method: POST
    data_selector: entry
    params:
      subscribed_fields: <LIST_OF_WEBHOOK_FIELDS>
      access_token: <ACCESS_TOKEN>
- name: business_and_creator_accounts
  endpoint:
    method: GET
- name: media_management
  endpoint:
    method: GET
- name: messaging
  endpoint:
    method: GET
- name: content_sharing
  endpoint:
    method: GET
- name: instagram_business_and_creator_accounts
  endpoint:
    method: GET
- name: instagram_messaging
  endpoint:
    method: GET
- name: instagram_oembed
  endpoint:
    path: /instagram_oembed
    method: GET
    params:
      url: <URL_OF_THE_POST>
      access_token: <ACCESS_TOKEN>
      maxwidth: <MAX_WIDTH>
      fields: thumbnail_url,author_name,provider_name,provider_url
- name: story_creation
  endpoint:
    path: /create/story
    method: GET
- name: media_post
  endpoint:
    path: /p/{media_id}
    method: GET
- name: user_profile
  endpoint:
    path: /{username}
    method: GET
- name: location_feed
  endpoint:
    path: /explore/locations/{location_id}
    method: GET
- name: hashtag_page
  endpoint:
    path: /explore/tags/{tag_name}
    method: GET
- name: share_to_instagram_stories
  endpoint:
    method: POST
- name: user_data
  endpoint:
    method: GET
- name: facebook_login
  endpoint:
    method: GET
- name: app_events
  endpoint:
    method: GET
- name: share_content
  endpoint:
    method: GET
- name: user_profile
  endpoint:
    path: me
    method: GET
- name: user_likes
  endpoint:
    path: me/likes
    method: GET
- name: delete_object
  endpoint:
    path:
      object_id: null
    method: DELETE
- name: share_to_reels
  endpoint:
    method: POST
    data_selector: pasteboardItems
    params:
      Facebook App ID: '{{ dlt.secrets[''facebook_app_id''] }}'
      Background Video: '{{ dlt.secrets[''background_video_url''] }}'
      Sticker Asset: '{{ dlt.secrets[''sticker_image_url''] }}'
- name: share_background_video
  endpoint:
    path: /share
    method: OPEN
    data_selector: pasteboardItems
    params:
      appID: NSString
      backgroundVideo: NSURL
      backgroundVideoData: Data
- name: share_background_video_with_sticker
  endpoint:
    path: /share
    method: OPEN
    data_selector: pasteboardItems
    params:
      appID: NSString
      backgroundVideo: NSURL
      backgroundVideoData: Data
      stickerImage: NSURL
      stickerImageData: Data
- name: share_video_to_reels
  endpoint:
    path: facebook-reels://share
    method: POST
    data_selector: pasteboardItems
    params:
      backgroundVideo: URL for the video
      appID: Your Facebook App ID
- name: share_video_with_sticker_to_reels
  endpoint:
    path: facebook-reels://share
    method: POST
    data_selector: pasteboardItems
    params:
      backgroundVideo: URL for the video
      stickerImage: URL for the image
      appID: Your Facebook App ID
- name: user_login
  endpoint:
    method: POST
    params:
      permissions:
      - public_profile
      - email
- name: Facebook_User_Data
  endpoint:
    method: GET
- name: facebook_user_data
  endpoint:
    method: GET
- name: user_login_status
  endpoint:
    path: /user/login_status
    method: GET
- name: user_login
  endpoint:
    path: /user/login
    method: GET
- name: user_logout
  endpoint:
    path: /user/logout
    method: GET
- name: user_assumption_login
  endpoint:
    path: /user/assumption_login
    method: GET
- name: subscribe_event
  endpoint:
    path: /event/subscribe
    method: GET
- name: unsubscribe_event
  endpoint:
    path: /event/unsubscribe
    method: GET
- name: log_app_event
  endpoint:
    path: /app_events/log
    method: GET
- name: log_purchase
  endpoint:
    path: /app_events/log_purchase
    method: GET
- name: log_app_launch
  endpoint:
    path: /app_events/log_app_launch
    method: GET
- name: parse_xfbml
  endpoint:
    path: /xfbml/parse
    method: GET
- name: flush_resources
  endpoint:
    path: /canvas/flush_resources
    method: GET
- name: collect_resource_stats
  endpoint:
    path: /canvas/collect_resource_stats
    method: GET
- name: canvas_scroll_to
  endpoint:
    path: /canvas/scroll_to
    method: GET
- name: canvas_resize_timer
  endpoint:
    path: /canvas/resize_timer
    method: GET
- name: canvas_resize
  endpoint:
    path: /canvas/resize
    method: GET
- name: canvas_register_callback
  endpoint:
    path: /canvas/register_callback
    method: GET
- name: canvas_page_usable
  endpoint:
    path: /canvas/page_usable
    method: GET
- name: set_audience_targeting
  endpoint:
    path: /<LIVE_VIDEO_ID>
    method: POST
    data_selector: targeting
    params:
      targeting:
        age_min: 17
        geo_locations:
          countries:
          - US
          - CA
          - MX
- name: retrieve_audience_targeting
  endpoint:
    path: /<LIVE_VIDEO_ID>
    method: GET
    data_selector: targeting
    params:
      fields: targeting
- name: live_video_creation
  endpoint:
    path: /{user-id}/live_videos
    method: POST
    params:
      status: LIVE_NOW
      enable_backup_ingest: true
- name: fetch_ingest_streams
  endpoint:
    path: /{live-video-id}
    method: GET
    params:
      fields: ingest_streams
- name: switch_master_ingest_stream
  endpoint:
    path: /{live-video-id}
    method: POST
    params:
      master_ingest_stream_id: '{master-ingest-stream-id}'
- name: live_video_creation
  endpoint:
    path: /me/live_videos
    method: POST
    params:
      status: LIVE_NOW
- name: end_live_video
  endpoint:
    path: /<LIVE_VIDEO_ID>
    method: POST
    params:
      end_live_video: true
- name: delete_live_video
  endpoint:
    path: /<LIVE_VIDEO_ID>
    method: DELETE
- name: comments
  endpoint:
    path: /{live-video-id}/comments
    method: GET
    data_selector: data
- name: reactions
  endpoint:
    path: /{live-video-id}/reactions
    method: GET
    data_selector: data
- name: live_comments
  endpoint:
    path: /{live-video-id}/live_comments
    method: GET
    data_selector: data
- name: live_reactions
  endpoint:
    path: /{live-video-id}/live_reactions
    method: GET
    data_selector: data
- name: create_poll
  endpoint:
    path: /{live-video-id}/polls
    method: POST
    params:
      question: '{question}'
      options: '{options}'
- name: close_poll
  endpoint:
    path: /{video-poll-id}
    method: POST
    params:
      action: CLOSE
- name: show_voting
  endpoint:
    path: /{video-poll-id}
    method: POST
    params:
      action: SHOW_VOTING
- name: show_results
  endpoint:
    path: /{video-poll-id}
    method: POST
    params:
      action: SHOW_RESULTS
- name: get_poll_options
  endpoint:
    path: /{video-poll-id}/poll_options
    method: GET
    params:
      fields: poll_options
- name: get_votes_for_option
  endpoint:
    path: /{video-poll-option-id}
    method: GET
    params:
      fields: total_votes
- name: get_votes_for_all_options
  endpoint:
    path: /{video-poll-id}
    method: GET
    params:
      fields: poll_options{total_votes}
- name: live_video
  endpoint:
    path: /live_video
    method: DELETE
- name: live_videos_event
  endpoint:
    path: /event/live_videos
    method: GET
- name: live_videos_group
  endpoint:
    path: /group/live_videos
    method: GET
- name: live_video_fields_edges
  endpoint:
    path: /live_video/fields_edges
    method: GET
- name: video_polls_live_video
  endpoint:
    path: /live_video/video_polls
    method: GET
- name: profiles_reacted_live_video
  endpoint:
    path: /live_video/profiles_reacted
    method: GET
- name: live_videos_page
  endpoint:
    path: /page/live_videos
    method: GET
- name: live_videos_user
  endpoint:
    path: /user/live_videos
    method: GET
- name: update_live_video
  endpoint:
    path: /live_video/update
    method: UPDATE
- name: create_live_video_input_stream
  endpoint:
    path: /live_video/create_input_stream
    method: CREATE
- name: fields_edges_live_video_input_stream
  endpoint:
    path: /live_video_input_stream/fields_edges
    method: GET
- name: video_polls_fields_edges
  endpoint:
    path: /video_polls/fields_edges
    method: GET
- name: update_video_poll
  endpoint:
    path: /video_poll/update
    method: UPDATE
- name: live_video_embed
  endpoint:
    path: /{live_video_id}
    method: POST
    params:
      embeddable: true
      access_token: '{your-access-token}'
- name: live_video_html
  endpoint:
    path: /{live_video_id}
    method: GET
    params:
      fields: embed_html
      access_token: '{your-access-token}'
- name: work_account_status
  endpoint:
    path: /<API_VERSION>/<USER_ID>
    method: GET
    data_selector: user
    params:
      fields: is_work_account
- name: user_access_expire_time
  endpoint:
    path: /<API_VERSION>/<OBJECT_ID>
    method: GET
    data_selector: user
    params:
      fields: user_access_expire_time
      access_token: <ACCESS_TOKEN>
- name: campaign
- name: ad_group
- name: ad_creative
- name: ad
- name: multiple_objects
  endpoint:
    path: /<API_VERSION>
    method: GET
    data_selector: data
    params:
      ids: '[id1,id2]'
- name: multiple_objects_with_fields
  endpoint:
    path: /<API_VERSION>
    method: GET
    data_selector: data
    params:
      ids: '[id1,id2]'
      fields: field1,field2
- name: archived_objects
  endpoint:
    path: /<API_VERSION>
    method: GET
    data_selector: data
    params:
      ids: archived_object_id
- name: server_events
  endpoint:
    method: POST
- name: adcreatives
  endpoint:
    path: /act_<AD_ACCOUNT_ID>/adcreatives
    method: POST
    params:
      name: Sample Promoted Post
      object_story_id: <PAGE_ID>_<POST_ID>
      access_token: <ACCESS_TOKEN>
- name: ads
  endpoint:
    path: /act_<AD_ACCOUNT_ID>/ads
    method: POST
    params:
      name: My Ad
      adset_id: <AD_SET_ID>
      creative: '{"creative_id": "<CREATIVE_ID>"}'
      status: PAUSED
      access_token: <ACCESS_TOKEN>
- name: adsets
  endpoint:
    path: /act_<AD_ACCOUNT_ID>/adsets
    method: POST
    params:
      name: Desktop Ad Set
      campaign_id: <CAMPAIGN_ID>
      daily_budget: 10000
      targeting: '{"geo_locations": {"countries":["US"]}, "publisher_platforms": ["facebook","audience_network"]}'
      optimization_goal: LINK_CLICKS
      billing_event: IMPRESSIONS
      bid_amount: 1000
      status: PAUSED
      access_token: <ACCESS_TOKEN>
- name: generatepreviews
  endpoint:
    path: /act_<AD_ACCOUNT_ID>/generatepreviews
    method: GET
    params:
      creative: '{"object_story_id":"<PAGE_ID>_<POST_ID>"}'
      ad_format: DESKTOP_FEED_STANDARD
      access_token: <ACCESS_TOKEN>
- name: ad_campaign_insights
  endpoint:
    path: /AD_CAMPAIGN_ID/insights
    method: GET
    data_selector: data
    params:
      date_preset: last_7d
- name: ad_insights
  endpoint:
    path: /AD_ID/insights
    method: GET
    data_selector: data
    params:
      fields: impressions
- name: campaign_ad_level_insights
  endpoint:
    path: /CAMPAIGN_ID/insights
    method: GET
    data_selector: data
    params:
      level: ad
      fields: impressions,ad_id
- name: filtered_insights
  endpoint:
    path: /AD_OBJECT_ID/insights
    method: GET
    data_selector: data
    params:
      level: ad
      filtering: '[{"field":"ad.adlabels","operator":"ANY", "value":["Label Name"]}]'
      time_range: '{"since":"2015-03-01","until":"2015-03-31"}'
      fields: id,name,insights{unique_clicks,cpm,total_actions}
- name: archived_ads_insights
  endpoint:
    path: /act_<AD_ACCOUNT_ID>/insights
    method: GET
    data_selector: data
    params:
      level: ad
      filtering: '[{"field":"ad.effective_status","operator":"IN","value":["ARCHIVED"]}]'
- name: adcreatives
  endpoint:
    path: /act_<AD_ACCOUNT_ID>/adcreatives
    method: POST
    data_selector: data
    params:
      name: <name>
      object_story_spec: '{}'
      access_token: '{{ dlt.secrets[''facebook_access_token''] }}'
- name: ads
  endpoint:
    path: /act_<AD_ACCOUNT_ID>/ads
    method: POST
    data_selector: data
    params:
      name: <name>
      adset_id: <AD_SET_ID>
      creative: '{}'
      status: PAUSED
      access_token: '{{ dlt.secrets[''facebook_access_token''] }}'
- name: adsets
  endpoint:
    path: /act_<AD_ACCOUNT_ID>/adsets
    method: POST
    data_selector: data
    params:
      name: <name>
      billing_event: IMPRESSIONS
      optimization_goal: LINK_CLICKS
      campaign_id: <CAMPAIGN_ID>
      daily_budget: 15000
      bid_amount: 3000
      targeting: '{}'
      promoted_object: '{}'
      status: PAUSED
      access_token: '{{ dlt.secrets[''facebook_access_token''] }}'
- name: system_user
  endpoint:
    method: POST
    params:
      actions: create, retrieve, update, invalidate
- name: app_installation_and_key_generation
  endpoint:
    method: POST
- name: permissions_management
  endpoint:
    method: POST
- name: api_calls
  endpoint:
    method: POST
- name: custom_audiences
  endpoint:
    method: POST
- name: campaign
  endpoint:
    path: /act_{ad_account_id}/campaigns
    method: POST
    params:
      buying_type: AUCTION
      objective: OUTCOME_TRAFFIC
      status: PAUSED
      special_ad_categories:
      - NONE
- name: adset
  endpoint:
    path: /act_{ad_account_id}/adsets
    method: POST
    params:
      billing_event: IMPRESSIONS
      destination_type: MESSENGER
      optimization_goal: CONVERSATIONS
      status: PAUSED
- name: ad_creatives
  endpoint:
    path: /act_ad_account_id/adcreatives
    method: POST
    params:
      access_token: ''
      name: ''
      object_story_spec: {}
- name: messenger_lead_forms
  endpoint:
    path: /messenger_lead_forms
    method: POST
    params:
      access_token: ''
      privacy_url: ''
      step_list: []
- name: messenger_lead_forms_list
  endpoint:
    path: /page_id/messenger_lead_forms
    method: GET
- name: ads
  endpoint:
    path: /act_ad_account_id/ads
    method: POST
    params:
      access_token: ''
      adset_id: ''
      creative:
        creative_id: ''
      status: ''
- name: nlp_configs
  endpoint:
    path: /v23.0/me/nlp_configs
    method: POST
    params:
      nlp_enabled: true
      model: PORTUGUESE
- name: disable_nlp_configs
  endpoint:
    path: /v23.0/me/nlp_configs
    method: POST
    params:
      nlp_enabled: false
- name: messaging_referrals
  endpoint:
    path: /messaging_referrals
    method: GET
    data_selector: flow_id
- name: response_feedback
  endpoint:
    path: /response_feedback
    method: GET
- name: instagram_api_components
  endpoint:
    path: /instagram_business_basic, /instagram_business_content_publishing, /instagram_business_manage_comments,
      /instagram_business_manage_messages
    method: GET
- name: ig_reel_attachments
  endpoint:
    path: /messaging
    method: POST
    data_selector: ig_reel
- name: media_comments
  endpoint:
    path: /media
    method: GET
    data_selector: original_media_id
- name: message_edits
  endpoint:
    path: /message_edits
    method: GET
- name: message_echoes
  endpoint:
    path: /message_echoes
    method: GET
- name: notification_message_tokens
  endpoint:
    path: /PAGE-ID/notification_message_tokens
    method: GET
    data_selector: next_eligible_time
- name: messaging_events_api
  endpoint:
    path: /messaging_events
    method: POST
    data_selector: lead_submitted
- name: custom_labels_api
  endpoint:
    path: /custom_labels
    method: GET
    data_selector: page_label_name
- name: user_profile_api
  endpoint:
    path: /user_profile
    method: GET
    data_selector: user_name
- name: message_echo_webhook
  endpoint:
    path: /message_echo
    method: GET
    data_selector: app_id
- name: messaging_feature_status
  endpoint:
    path: /me
    method: GET
    data_selector: messaging_feature_status
    params:
      fields: messaging_feature_status
- name: pass_thread_control
  endpoint:
    path: /me/pass_thread_control
    method: POST
- name: release_thread_control
  endpoint:
    path: /me/release_thread_control
    method: POST
- name: thread_owner
  endpoint:
    path: /PAGE-ID/thread_owner
    method: GET
    params:
      recipient: PSID
- name: conversations
  endpoint:
    path: /LATEST-API-VERSION/PAGE-ID/conversations
    method: GET
    data_selector: data
    params:
      platform: PLATFORM
      user_id: INSTAGRAM-OR-PAGE-SCOPED-ID
- name: messages
  endpoint:
    path: /LATEST-API-VERSION/CONVERSATION-ID
    method: GET
    data_selector: messages.data
    params:
      fields: messages
- name: message_details
  endpoint:
    path: /LATEST-API-VERSION/MESSAGE-ID
    method: GET
    data_selector: id
    params:
      fields: id,created_time,from,to,message
- name: click_to_messenger_ads
  endpoint:
    path: /click-to-messenger-ads
    method: GET
- name: lead_generation_ads
  endpoint:
    path: /lead-generation-ads
    method: GET
- name: message_us_button
  endpoint:
    path: /message-us-button
    method: GET
- name: private_replies
  endpoint:
    path: /private-replies
    method: GET
- name: messenger_search
  endpoint:
    path: /messenger-search
    method: GET
- name: share_messaging_experience
  endpoint:
    path: /share-messaging-experience
    method: GET
- name: chat_plugin
  endpoint:
    path: /chat-plugin
    method: GET
- name: checkbox_plugin
  endpoint:
    path: /checkbox-plugin
    method: GET
- name: send_us_a_message_plugin
  endpoint:
    path: /send-us-a-message-plugin
    method: GET
- name: send_to_messenger_plugin
  endpoint:
    path: /send-to-messenger-plugin
    method: GET
- name: m_me_links
  endpoint:
    path: /m-me-links
    method: GET
- name: login_connect_with_messenger
  endpoint:
    path: /login-connect-with-messenger
    method: GET
- name: accounts
  endpoint:
    path: /me/accounts
    method: GET
    data_selector: data
    params:
      access_token: '[TEST_USER_ACCESS_TOKEN]'
- name: subscribed_apps
  endpoint:
    path: /me/subscribed_apps
    method: POST
    params:
      access_token: '[TEST_USER_PAGE_ACCESS_TOKEN]'
- name: webhook_setup
  endpoint:
    path: /webhook-reference#setup
    method: GET
- name: page_accounts
  endpoint:
    path: /me/accounts
    method: GET
    data_selector: data
- name: conversations
  endpoint:
    path: /{page_id}/conversations
    method: GET
    params:
      fields: participants,messages{id,message}
- name: send_message
  endpoint:
    path: /{page_id}/messages
    method: POST
- name: handover_protocol
  endpoint:
    method: not mentioned
- name: conversations
  endpoint:
    path: /conversations
    method: GET
    data_selector: data
- name: messaging
  endpoint:
    method: POST
- name: conversations
  endpoint:
    method: GET
- name: conversations
  endpoint:
    path: /conversations
    method: GET
- name: send
  endpoint:
    path: /send
    method: POST
- name: private_replies
  endpoint:
    path: /private_replies
    method: POST
- name: send_message
  endpoint:
    path: /{PSID}/messages
    method: POST
    data_selector: .
    params:
      messaging_type: RESPONSE
      message_type: text
      recipient_id: PSID
      message_id: AG5Hz2U...
- name: messages
  endpoint:
    path: /PAGE-ID/subscribed_apps
    method: POST
    data_selector: entry.messaging
    params:
      subscribed_fields: messages
      access_token: PAGE-ACCESS-TOKEN
- name: webhook_verification
  endpoint:
    path: /webhook
    method: GET
    params:
      hub.mode: subscribe
      hub.verify_token: mytoken
      hub.challenge: 1158201444
- name: close_webview
  endpoint:
    path: /closeWindow/
    method: GET
    params:
      image_url: <IMAGE_URL>
      display_text: <DISPLAY_TEXT>
- name: notify_authorizations
  endpoint:
    path: /<CONTAINER_ID>/notify_authorizations
    method: POST
- name: notify_captures
  endpoint:
    path: /<CONTAINER_ID>/notify_captures
    method: POST
- name: notify_disputes
  endpoint:
    path: /<CONTAINER_ID>/notify_disputes
    method: POST
- name: notify_payments
  endpoint:
    path: /<CONTAINER_ID>/notify_payments
    method: POST
- name: notify_refunds
  endpoint:
    path: /<CONTAINER_ID>/notify_refunds
    method: POST
- name: merchant
  endpoint:
    path: /metapay_partner/merchant
    method: POST
- name: merchants
  endpoint:
    path: /metapay_partner/merchants
    method: GET
  paginator:
    type: cursor
    cursor_path: paging.cursors.after
    cursor_param: after
- name: payment_container
  endpoint:
    path: /payment-processing
    method: GET
    data_selector: container
- name: page_view
  endpoint:
    path: /
    method: GET
    data_selector: script
    params:
      event: PageView
- name: add_payment_info
  endpoint:
    path: /track
    method: POST
    params:
      eventID: optional
- name: add_to_cart
  endpoint:
    path: /track
    method: POST
    params:
      eventID: optional
- name: add_to_wishlist
  endpoint:
    path: /track
    method: POST
    params:
      eventID: optional
- name: complete_registration
  endpoint:
    path: /track
    method: POST
    params:
      eventID: optional
- name: contact
  endpoint:
    path: /track
    method: POST
    params:
      eventID: optional
- name: customize_product
  endpoint:
    path: /track
    method: POST
    params:
      eventID: optional
- name: find_location
  endpoint:
    path: /track
    method: POST
    params:
      eventID: optional
- name: initiate_checkout
  endpoint:
    path: /track
    method: POST
    params:
      eventID: optional
- name: lead
  endpoint:
    path: /track
    method: POST
    params:
      eventID: optional
- name: purchase
  endpoint:
    path: /track
    method: POST
    params:
      eventID: optional
- name: schedule
  endpoint:
    path: /track
    method: POST
    params:
      eventID: optional
- name: search
  endpoint:
    path: /track
    method: POST
    params:
      eventID: optional
- name: start_trial
  endpoint:
    path: /track
    method: POST
    params:
      eventID: optional
- name: submit_application
  endpoint:
    path: /track
    method: POST
    params:
      eventID: optional
- name: subscribe
  endpoint:
    path: /track
    method: POST
    params:
      eventID: optional
- name: view_content
  endpoint:
    path: /track
    method: POST
    params:
      eventID: optional
- name: video_stories
  endpoint:
    path: /{page_id}/video_stories
    method: POST
    params:
      upload_phase: start
- name: video_upload
  endpoint:
    path: /video-upload/{video_id}
    method: POST
- name: video_id_status
  endpoint:
    path: /{video_id}
    method: GET
    params:
      fields: status
- name: publish_video_stories
  endpoint:
    path: /{page_id}/video_stories
    method: POST
    params:
      upload_phase: finish
- name: photo_stories
  endpoint:
    path: /{page_id}/photo_stories
    method: POST
- name: stories_list
  endpoint:
    path: /{page_id}/stories
    method: GET
- name: video_stories
  endpoint:
    path: /page_id/video_stories
    method: POST
    params:
      upload_phase: start
- name: video_upload
  endpoint:
    path: https://rupload.facebook.com/video-upload/
    method: POST
- name: video_status
  endpoint:
    path: /video_id
    method: GET
    params:
      fields: status
- name: photo_stories
  endpoint:
    path: /page_id/photo_stories
    method: POST
- name: stories
  endpoint:
    path: /page_id/stories
    method: GET
- name: comment_on_page_post
  endpoint:
    path: /page_post_id/comments
    method: POST
    data_selector: id
    params:
      message: your_message_text
- name: get_comments
  endpoint:
    path: /page_post_id/comments
    method: GET
    data_selector: data
    params:
      fields: from,message
- name: mention_on_page_post
  endpoint:
    path: /v23.0
    method: POST
    data_selector: id
    params:
      message: page_post_id@[your_message_text]
- name: mention_on_comment
  endpoint:
    path: /v23.0
    method: POST
    data_selector: id
    params:
      message: comment_id@[your_message_text,PSID,PSID]
- name: accounts
  endpoint:
    path: /user_id/accounts
    method: GET
    data_selector: data
    params:
      access_token: user_access_token
- name: page_feed_post
  endpoint:
    path: /page_id/feed
    method: POST
    params:
      message: your_message_text
      access_token: page_access_token
- name: page_feed_get
  endpoint:
    path: /page_id/feed
    method: GET
    data_selector: data
    params:
      access_token: page_access_token
- name: pages
  endpoint:
    path: /user_id/accounts
    method: GET
    data_selector: data
- name: page_roles
  endpoint:
    path: /page_id/roles
    method: GET
    data_selector: data
- name: page_details
  endpoint:
    path: /page_id
    method: GET
    params:
      fields: about,attire,bio,location,parking,hours,emails,website
- name: page_update
  endpoint:
    path: /page_id
    method: POST
- name: page_settings
  endpoint:
    path: /page_id/settings
    method: GET
    data_selector: data
- name: page_settings_update
  endpoint:
    path: /page_id/settings
    method: POST
- name: page_reviews
  endpoint:
    path: /page_id/ratings
    method: GET
    data_selector: data
- name: page_user_blocked
  endpoint:
    path: /page_id/blocked
    method: POST
- name: page_access
  endpoint:
    path: /me/accounts
    method: GET
- name: post_publish
  endpoint:
    path: /{page_id}/feed
    method: POST
    params:
      message: your_message_text
      link: your_url
      published: true/false
      scheduled_publish_time: unix_time_stamp_of_a_future_date or ISO 8601 date
- name: post_photo
  endpoint:
    path: /{page_id}/photos
    method: POST
    params:
      url: path_to_photo
- name: fetch_posts
  endpoint:
    path: /{page_id}/feed
    method: GET
    data_selector: data
- name: update_post
  endpoint:
    path: /{page_post_id}
    method: POST
    params:
      message: new_content
- name: delete_post
  endpoint:
    path: /{page_post_id}
    method: DELETE
- name: pages_search
  endpoint:
    path: /pages/search
    method: GET
    data_selector: data
    params:
      q: '{{ search_keyword }}'
      fields: id,name,location,link
- name: feed_notifications
  endpoint:
    path: /{page-id}/subscribed_apps
    method: POST
    params:
      subscribed_fields: feed
      access_token: '{page-access_token}'
- name: messages_notifications
  endpoint:
    path: /{page-id}/subscribed_apps
    method: POST
    params:
      subscribed_fields: messages
      access_token: '{page_access_token}'
- name: installed_apps
  endpoint:
    path: /{page-id}/subscribed_apps
    method: GET
    params:
      access_token: '{page_access_token}'
- name: post_comment
  endpoint:
    path: /{page-post-id}/comments
    method: POST
    params:
      message: I want chocolate cake !
      access_token: '{page_access_token}'
- name: deprecated_metrics
  endpoint:
    path: /changelog
    method: GET
- name: list_pages
  endpoint:
    path: /user_id/accounts
    method: GET
    data_selector: data
- name: post_page
  endpoint:
    path: /page_id/feed
    method: POST
    params:
      message: your_message_text
      access_token: page_access_token
- name: get_page_feed
  endpoint:
    path: /page_id/feed
    method: GET
    data_selector: data
    params:
      access_token: page_access_token
- name: page_accounts
  endpoint:
    path: /user_id/accounts
    method: GET
    data_selector: data
- name: page_roles
  endpoint:
    path: /page_id/roles
    method: GET
    data_selector: data
- name: page_details
  endpoint:
    path: /page_id
    method: GET
    params:
      fields: about,attire,bio,location,parking,hours,emails,website
- name: update_page_details
  endpoint:
    path: /page_id
    method: POST
- name: page_settings
  endpoint:
    path: /page_id/settings
    method: GET
    data_selector: data
- name: update_page_settings
  endpoint:
    path: /page_id/settings
    method: POST
- name: page_reviews
  endpoint:
    path: /page_id/ratings
    method: GET
    data_selector: data
- name: block_user
  endpoint:
    path: /page_id/blocked
    method: POST
- name: publish_post
  endpoint:
    path: /{page_id}/feed
    method: POST
    data_selector: id
    params:
      message: <your_message_text>
      link: <your_url>
      published: true
      scheduled_publish_time: <unix_time_stamp>
- name: publish_photo
  endpoint:
    path: /{page_id}/photos
    method: POST
    data_selector: id
    params:
      url: <path_to_photo>
- name: get_feed
  endpoint:
    path: /{page_id}/feed
    method: GET
    data_selector: data
- name: update_post
  endpoint:
    path: /{page_post_id}
    method: POST
    data_selector: success
    params:
      message: <new_content>
- name: delete_post
  endpoint:
    path: /{page_post_id}
    method: DELETE
    data_selector: success
- name: pages_search
  endpoint:
    path: /pages/search
    method: GET
    data_selector: data
    params:
      q: '{{ search_keyword }}'
      fields: id,name,location,link
- name: page_upcoming_changes
  endpoint:
    path: /{page-id}
    method: GET
    data_selector: data
- name: accept_reject_proposal
  endpoint:
    path: /{proposal-id}
    method: POST
    params:
      accept: true
- name: page_feed
  endpoint:
    path: /{page-id}/subscribed_apps
    method: POST
    params:
      subscribed_fields: feed
- name: page_messages
  endpoint:
    path: /{page-id}/subscribed_apps
    method: POST
    params:
      subscribed_fields: messages
- name: permissions
  endpoint:
    method: GET
- name: page_insights
  endpoint:
    path: /{page-id}/insights/{metric-name}
    method: GET
    data_selector: data
    params:
      metric: '{metric}'
      period: '{period}'
      since: '{since}'
      until: '{until}'
- name: page_post_insights
  endpoint:
    path: /{page-post-id}/insights
    method: GET
    data_selector: data
    params:
      metric: '{metric}'
      period: '{period}'
      since: '{since}'
      until: '{until}'
- name: page_video_ad_breaks
  endpoint:
    path: /{page-id}/insights
    method: GET
    data_selector: data
    params:
      metric: page_daily_video_ad_break_ad_impressions_by_crosspost_status
      period: day
      since: '2017-12-10'
      until: '2017-12-14'
- name: post_video_ad_breaks
  endpoint:
    path: /{page-post-id}/insights
    method: GET
    data_selector: data
    params:
      metric: post_video_ad_break_ad_impressions
      period: day
      since: '2017-12-10'
      until: '2017-12-14'
- name: comments
  endpoint:
    path: /mywebhook.php
    method: POST
- name: embedded_post
  endpoint:
    path: /{page-id}/feed
    method: GET
    params:
      fields: permalink_url
- name: video_embed
  endpoint:
    path: /video.php
    method: GET
    data_selector: embed_html
    params:
      v: '{id}'
- name: like_button
  endpoint:
    path: /like-button
    method: GET
- name: oembed_page
  endpoint:
    path: /oembed_page
    method: GET
    data_selector: html
    params:
      url: '{{ url }}'
      access_token: '{{ access_token }}'
- name: oembed_post
  endpoint:
    path: /oembed_post
    method: GET
    data_selector: html
    params:
      url: '{{ url }}'
      access_token: '{{ access_token }}'
- name: oembed_video
  endpoint:
    path: /oembed_video
    method: GET
    data_selector: html
    params:
      url: '{{ url }}'
      access_token: '{{ access_token }}'
- name: facebook_page_plugin
  endpoint:
    path: /plugins/page-plugin
    method: GET
    params:
      data-href: https://www.facebook.com/{your-page-name}
      data-tabs: timeline,events,messages
      data-width: 380
      data-hide-cover: false
      data-show-facepile: true
      js.src: https://connect.facebook.net/{locale}/sdk.js#xfbml=1&version=v2.5
- name: private_computation_setup
  endpoint:
    path: /hub/shell
    method: POST
    data_selector: result
- name: publish_reel
  endpoint:
    path: /reels
    method: POST
    params:
      privacy: Public
- name: video_reels
  endpoint:
    path: /{page-id}/video_reels
    method: POST
    data_selector: data
    params:
      video_id: '{{ video_id }}'
      description: '{{ description }}'
      title: '{{ title }}'
      upload_phase: finish
      video_state: PUBLISHED
- name: video_upload
  endpoint:
    path: /video-upload/{video_id}
    method: POST
    data_selector: data
    params:
      offset: '{{ offset }}'
      file_size: '{{ file_size }}'
- name: collaborators
  endpoint:
    path: /{video-id}/collaborators
    method: POST
    data_selector: data
    params:
      target_id: '{{ collaborator_page_id }}'
- name: published_reels
  endpoint:
    path: /{page-id}/video_reels
    method: GET
    data_selector: data
- name: share_content
  endpoint:
    path: /android
    method: POST
    data_selector: content
- name: device_share
  endpoint:
    path: /device/share
    method: POST
    params:
      access_token: <APPID|CLIENT_TOKEN>
      href: <LINK_TO_SHARE>
      action_type: <ACTION_TYPE>
      action_properties: <ACTION_PROPERTIES>
      quote: <QUOTE>
      hashtag: <HASHTAG>
- name: share_content
  endpoint:
    path: /docs/sharing/ios
    method: GET
- name: share_dialog
  endpoint:
    path: /docs/sharing/ios
    method: GET
- name: media
  endpoint:
    path: /me/media
    method: GET
    data_selector: gif_url
- name: threads_posts_shares
  endpoint:
    path: /me/threads_posts
    method: GET
    data_selector: shares
- name: user_profiles
  endpoint:
    path: /me/replies
    method: GET
    data_selector: name
- name: threads_insights
  endpoint:
    path: /{threads-user-id}/threads_insights
    method: GET
    data_selector: followers_count
    params:
      breakdown:
      - country
      - city
      - age
      - gender
      since: '1712991600'
      until: current_timestamp
- name: user_replies
  endpoint:
    path: /me/replies
    method: GET
    data_selector: reply_audience
- name: create_posts
  endpoint:
    method: POST
- name: threads_user_access
  endpoint:
    method: GET
    params:
      incremental: expires_in
- name: media_insights
  endpoint:
    path: /{threads_media_id}/insights
    method: GET
    data_selector: data
    params:
      metric: comma-separated metrics list
- name: user_insights
  endpoint:
    path: /{threads_user_id}/threads_insights
    method: GET
    data_selector: data
    params:
      metric: metric
      since: optional start time
      until: optional end time
- name: keyword_search
  endpoint:
    path: /keyword_search
    method: GET
    data_selector: data
    params:
      q: <KEYWORD>
      search_type: TOP
      fields: id,text,media_type,permalink,timestamp,username,has_replies,is_quote_post,is_reply
- name: user_recent_searches
  endpoint:
    path: /me
    method: GET
    data_selector: data
    params:
      fields: recently_searched_keywords
- name: threads_publishing_limit
  endpoint:
    path: /{threads-user-id}/threads_publishing_limit
    method: GET
    data_selector: data
    params:
      fields: quota_usage,config
- name: threads_reply_publishing_limit
  endpoint:
    path: /{threads-user-id}/threads_publishing_limit
    method: GET
    data_selector: data
    params:
      fields: reply_quota_usage,reply_config
- name: upload_and_check_media
  endpoint:
    path: /upload_and_check_media
    method: POST
- name: retrieve_media_by_id_or_keyword
  endpoint:
    path: /retrieve_media_by_id_or_keyword
    method: GET
- name: retrieve_replies_and_conversations
  endpoint:
    path: /retrieve_replies_and_conversations
    method: GET
- name: retrieve_user_posts_profile_and_publishing_limit
  endpoint:
    path: /retrieve_user_posts_profile_and_publishing_limit
    method: GET
- name: retrieve_thread_location_objects_by_id
  endpoint:
    path: /retrieve_thread_location_objects_by_id
    method: GET
- name: search_locations_for_marking_posts
  endpoint:
    path: /search_locations_for_marking_posts
    method: GET
- name: retrieve_insights_for_media_and_users
  endpoint:
    path: /retrieve_insights_for_media_and_users
    method: GET
- name: embed_thread_posts_content
  endpoint:
    path: /embed_thread_posts_content
    method: GET
- name: retrieve_data_via_access_token
  endpoint:
    path: /retrieve_data_via_access_token
    method: GET
- name: manage_reply
  endpoint:
    path: /<THREADS_REPLY_ID>/manage_reply
    method: POST
    params:
      hide: true
- name: threads_control
  endpoint:
    path: /me/threads
    method: POST
    params:
      reply_control: accounts_you_follow
- name: threads_publish
  endpoint:
    path: /<THREADS_USER_ID>/threads_publish
    method: POST
    params:
      creation_id: <MEDIA_CONTAINER_ID>
- name: mentions
  endpoint:
    path: /{user_id}/mentions
    method: GET
    data_selector: data
- name: threads_publishing_limit
  endpoint:
    path: /{threads-user-id}/threads_publishing_limit
    method: GET
    data_selector: data
    params:
      fields: reply_quota_usage,reply_config
- name: threads
  endpoint:
    path: /me/threads
    method: GET
    data_selector: data
    params:
      fields: id,media_product_type,media_type,media_url,permalink,owner,username,text,timestamp,shortcode,thumbnail_url,children,is_quote_post
      since: '2023-10-15'
      until: '2023-11-18'
      limit: 1
- name: thread_media
  endpoint:
    path: /<THREADS_MEDIA_ID>
    method: GET
    data_selector: data
    params:
      fields: id,media_product_type,media_type,media_url,permalink,owner,username,text,timestamp,shortcode,thumbnail_url,children,is_quote_post
- name: mentions
  endpoint:
    path: /<THREADS_USER_ID>/mentions
    method: GET
    params:
      fields: <LIST_OF_FIELDS>
      access_token: <ACCESS_TOKEN>
      since: '1688540400'
      until: <CURRENT_TIMESTAMP>
- name: post_intent
  endpoint:
    path: /intent/post
    method: GET
- name: follow_intent
  endpoint:
    path: /intent/follow
    method: GET
- name: threads_publish
  endpoint:
    path: /{threads-user-id}/threads_publish
    method: POST
- name: threads_container_status
  endpoint:
    path: /{threads-container-id}
    method: GET
    data_selector: status
- name: threads_publishing_limit
  endpoint:
    path: /{ig-user-id}/threads_publishing_limit
    method: GET
    data_selector: data
- name: threads_replies
  endpoint:
    path: /webhook
    method: POST
    data_selector: values.value
- name: sdk_versions
  endpoint:
    path: /unity/change-log
    method: GET
- name: picture_api
  endpoint:
    path: /me/picture
    method: GET
- name: api_calls
  endpoint:
    path: /FB.API
    method: GET
    params:
      version: Graph API v2.5
- name: SDK Reference
  endpoint:
    path: /docs/unity/downloads
    method: GET
- name: init_sdk
  endpoint:
    method: POST
- name: login
  endpoint:
    method: POST
- name: app_activation
  endpoint:
    method: POST
- name: retrieve_login_status
  endpoint:
    method: POST
- name: share_link
  endpoint:
    method: POST
- name: log_app_event
  endpoint:
    method: POST
- name: initialize_sdk
  endpoint:
    method: POST
- name: api_call_graph_api
  endpoint:
    method: POST
- name: share_dialog
  endpoint:
    method: POST
- name: legacy_feed_sharing_dialog
  endpoint:
    method: POST
- name: game_request_dialog
  endpoint:
    method: POST
- name: get_app_invoked_url
  endpoint:
    method: GET
- name: authorize_read_permissions
  endpoint:
    method: POST
- name: authorize_publish_permissions
  endpoint:
    method: POST
- name: log_user_out
  endpoint:
    method: POST
- name: retrieve_login_status
  endpoint:
    method: GET
- name: access_token_info
  endpoint:
    method: GET
- name: check_sdk_initialized
  endpoint:
    method: GET
- name: check_user_logged_in_authorized
  endpoint:
    method: GET
- name: signal_app_launch_resume
  endpoint:
    method: POST
- name: publish_app_event
  endpoint:
    method: POST
- name: publish_purchase_event
  endpoint:
    method: POST
- name: update_access_token
  endpoint:
    method: POST
- name: open_app_invite_dialog
  endpoint:
    method: POST
- name: fetch_deferred_applink
  endpoint:
    method: GET
- name: set_preferred_dialog_type
  endpoint:
    method: POST
- name: prompt_payment
  endpoint:
    method: POST
- name: create_game_group
  endpoint:
    method: POST
- name: join_game_group
  endpoint:
    method: POST
- name: user_profile
  endpoint:
    path: /me
    method: GET
    data_selector: result.ResultDictionary
    params:
      fields: first_name
- name: login
  endpoint:
    method: GET
- name: share
  endpoint:
    method: GET
- name: game_invites
  endpoint:
    method: GET
- name: app_events
  endpoint:
    method: GET
- name: ads
  endpoint:
    method: GET
- name: app_links
  endpoint:
    method: GET
- name: audience_network
  endpoint:
    method: GET
- name: login
- name: share
- name: game_invites
- name: app_events
- name: ads
- name: app_links
- name: audience_network
- name: create_ab_test
  endpoint:
    path: /{PAGE_ID}/ab_tests
    method: POST
    params:
      control_video_id: '{control_video_id}'
      description: '{description}'
      experiment_video_ids: '{experiment_video_ids}'
      name: '{name}'
      optimization_goal: '{optimization_goal}'
      duration: '{duration}'
      scheduled_experiment_timestamp: '{scheduled_experiment_timestamp}'
- name: read_ab_test
  endpoint:
    path: /{AB_TEST_ID}
    method: GET
- name: list_ab_tests
  endpoint:
    path: /{PAGE_ID}/ab_tests
    method: GET
    params:
      since: '{since}'
      until: '{until}'
- name: delete_ab_test
  endpoint:
    path: /{AB_TEST_ID}
    method: DELETE
- name: user_accounts
  endpoint:
    path: /me/accounts
    method: GET
    data_selector: data
- name: group_videos
  endpoint:
    path: /group/videos
    method: GET
- name: create_group_video
  endpoint:
    path: /group/videos
    method: POST
- name: page_videos
  endpoint:
    path: /page/videos
    method: GET
- name: create_page_video
  endpoint:
    path: /page/videos
    method: POST
- name: user_videos
  endpoint:
    path: /user/videos
    method: GET
- name: published_video_details
  endpoint:
    path: /published/video/details
    method: GET
- name: video_captions
  endpoint:
    path: /video/captions
    method: GET
- name: video_comments
  endpoint:
    path: /video/comments
    method: GET
- name: video_shared_pages
  endpoint:
    path: /video/shared/pages
    method: GET
- name: video_likes
  endpoint:
    path: /video/likes
    method: GET
- name: video_poll_settings
  endpoint:
    path: /video/poll_settings
    method: GET
- name: video_polls
  endpoint:
    path: /video/polls
    method: GET
- name: video_shared_posts
  endpoint:
    path: /video/shared_posts
    method: GET
- name: video_sponsor_tags
  endpoint:
    path: /video/sponsor_tags
    method: GET
- name: video_tags
  endpoint:
    path: /video/tags
    method: GET
- name: video_thumbnails
  endpoint:
    path: /video/thumbnails
    method: GET
- name: video_insights
  endpoint:
    path: /video/insights
    method: GET
- name: update_published_video
  endpoint:
    path: /published/video/update
    method: POST
- name: update_video_captions
  endpoint:
    path: /video/captions/update
    method: POST
- name: create_video_comment
  endpoint:
    path: /video/comments/create
    method: POST
- name: create_video_poll
  endpoint:
    path: /video/polls/create
    method: POST
- name: create_video_thumbnail
  endpoint:
    path: /video/thumbnails/create
    method: POST
- name: delete_published_video
  endpoint:
    path: /published/video
    method: DELETE
- name: delete_video_caption
  endpoint:
    path: /video/captions
    method: DELETE
- name: business_capability_update
  endpoint:
    path: /webhooks
    method: POST
- name: account_alerts
  endpoint:
    path: /webhooks
    method: POST
- name: message_status
  endpoint:
    path: /message_status
    method: GET
    data_selector: notifications
- name: business_customer
  endpoint:
    method: POST
- name: marketing_messages
  endpoint:
    path: /PHONE_NUMBER_ID/marketing_messages
    method: GET
- name: messaging_limits
  endpoint:
    path: /whatsapp/messaging-limits
    method: GET
- name: business_verification
  endpoint:
    path: /whatsapp/business-verification
    method: POST
- name: identity_verification
  endpoint:
    path: /whatsapp/identity-verification
    method: POST
- name: business_phone_number_status
  endpoint:
    path: /{WHATSAPP_BUSINESS_PHONE_NUMBER_ID}
    method: GET
    params:
      fields: status
- name: business_phone_number_display_name
  endpoint:
    path: /{WHATSAPP_BUSINESS_PHONE_NUMBER_ID}
    method: GET
    params:
      fields: verified_name,name_status
- name: update_business_phone_number_display_name
  endpoint:
    path: /{WHATSAPP_BUSINESS_PHONE_NUMBER_ID}
    method: POST
    params:
      new_display_name:
        new_display_name_value: null
- name: business_profile
  endpoint:
    path: /{WHATSAPP_BUSINESS_ACCOUNT_ID}/whatsapp_business_profile
    method: GET
    params:
      fields: about,address,description,email,profile_picture_url,websites,vertical
- name: update_business_profile
  endpoint:
    path: /{WHATSAPP_BUSINESS_ACCOUNT_ID}/whatsapp_business_profile
    method: POST
- name: set_two_step_verification_pin
  endpoint:
    path: /{WHATSAPP_BUSINESS_PHONE_NUMBER_ID}
    method: POST
    params:
      pin:
        pin_value: null
- name: business_phone_number_status
  endpoint:
    path: /{WHATSAPP_BUSINESS_PHONE_NUMBER_ID}
    method: GET
    params:
      fields: status
- name: business_phone_number_display_name
  endpoint:
    path: /{WHATSAPP_BUSINESS_PHONE_NUMBER_ID}
    method: GET
    params:
      fields: verified_name,name_status
- name: update_business_phone_number_display_name
  endpoint:
    path: /{WHATSAPP_BUSINESS_PHONE_NUMBER_ID}
    method: POST
    params:
      new_display_name:
        new_display_name_value: null
- name: business_profile
  endpoint:
    path: /{WHATSAPP_BUSINESS_ACCOUNT_ID}/whatsapp_business_profile
    method: GET
    params:
      fields: about,address,description,email,profile_picture_url,websites,vertical
- name: update_business_profile
  endpoint:
    path: /{WHATSAPP_BUSINESS_ACCOUNT_ID}/whatsapp_business_profile
    method: POST
- name: set_new_pin
  endpoint:
    path: /{WHATSAPP_BUSINESS_PHONE_NUMBER_ID}
    method: POST
    params:
      pin:
        new_pin_value: null
- name: pricing_information
  endpoint:
    path: /v13.0/{your-whatsapp-business-account-id}/message_templates
    method: GET
    data_selector: data
- name: conversations
  endpoint:
    path: /v13.0/{your-whatsapp-business-account-id}/conversations
    method: GET
    data_selector: conversations
- name: message_webhooks
  endpoint:
    path: /v13.0/{your-whatsapp-business-account-id}/webhooks
    method: GET
    data_selector: messages
- name: whatsapp_business_account
  endpoint:
    path: /webhooks
    method: POST
    data_selector: entry.changes
    params: {}
- name: contacts
  endpoint:
    path: /webhooks
    method: POST
    data_selector: contacts
    params: {}
- name: messages
  endpoint:
    path: /webhooks
    method: POST
    data_selector: messages
    params: {}
- name: errors
  endpoint:
    path: /webhooks
    method: POST
    data_selector: errors
    params: {}
- name: statuses
  endpoint:
    path: /webhooks
    method: POST
    data_selector: statuses
    params: {}
- name: pricing
  endpoint:
    path: /webhooks
    method: POST
    data_selector: pricing
    params: {}
- name: webhook_callback
  endpoint:
    path: /callback
    method: POST
- name: messages
  endpoint:
    path: /me/messages
    method: POST
- name: thread_name_update
  endpoint:
    path: /t_{thread_id}/threadname
    method: POST
- name: thread_participants
  endpoint:
    path: /t_{thread_id}/participants
    method: POST
- name: delete_thread_participants
  endpoint:
    path: /t_{thread_id}/participants
    method: DELETE
- name: facebook_login
  endpoint:
    method: POST
- name: app_events
  endpoint:
    method: POST
- name: mobile_app_engagement_ads
  endpoint:
    method: POST
- name: mobile_app_install_ads
  endpoint:
    method: POST
- name: access_token_tool
  endpoint:
    path: /tools/access_token
    method: GET
- name: api_upgrade_tool
  endpoint:
    path: /tools/api_upgrade
    method: GET
notes:
- Ensure access control complies with local laws including geofiltering and age restrictions
- Respect the appearance and functional limits set by Meta products
- Properly integrate login to prevent app crashes or freezes during testing
- Follow guidelines and approval processes for using Meta logos and branding
- Be honest about your relationship with Meta when communicating with the press or
  users; obtain approval for official press releases or blog posts mentioning Meta
- Do not include logos, watermarks, calls to action, or promotional content in stories
  shared on Facebook and Instagram
- Ensure stories are not generic and lead to an enhanced experience or allow users
  to create their own stories when interacted with
- Avoid participating in programs promoting the exchange or sale of likes, shares,
  followers, comments, accounts, pages, profiles, groups, or any product features
  or functionalities
- Obtain written permission from Meta before promoting or advertising online gambling,
  real-money skill games, or online lotteries using Meta products
- Developers may face additional terms if exceeding 5 million MAU, 100 million API
  calls per day, or 50 million impressions per day
- Ensure communication channels through developer notifications and emails from fb.com
  or facebookmail.com are not filtered out and associated email addresses are up-to-date
- iOS and Android apps must be published in a supported app store
- Ensure Business Manager account information is current and accurate
- Compliance with app development policies may be required if your app creates a negative
  experience, and non-compliance may lead to enforcement actions
- Enforcement actions may be taken against apps compromising the stability of Meta's
  servers or other apps on the platform
- Standard and extended access to the Ads API can be downgraded to development access
  after 30 days of non-use
- Access tokens expire 2 hours after being generated
- Only one active access token per integration; generating a new one invalidates the
  old
- Access tokens should be used from server environments under the owning company's
  control
- Do not store or transmit app secrets or access tokens in insecure environments like
  mobile apps or web browsers
- All integrations must comply with Meta Platform Terms
- Supports multiple types of Mobile Advertiser IDs including Apple IDFA, Android Advertising
  ID, and Facebook-App-specific ID
- Facebook SDK for Android has removed deprecated classes such as FacebookUninstallTracker
  and uses OAuth2 for authentication
- Major changes in version 4.0 include removal of the UiLifecycleHelper, LoginFragment,
  and various selection fragments
- AccessToken now includes userId
- Error handling has been updated with new methods
- Requires Android API 15 or higher
- Uses OAuth2 for authentication; ensure correct Key-Hashes are configured for development
  and release environments
- Requires Facebook SDK for Android to integrate sharing functionality.
- App must be published live before sharing to Reels is enabled.
- Video and sticker assets must be local files on the user's device.
- Ensure the Instagram app is installed for intent handling
- Requires URI permission grants for media sharing
- For Android 11, make sure to add a queries block in AndroidMainfest.xml to fix issues
- Uses Facebook SDK with integration into Android apps; requires Android API 15 or
  higher
- Requires Android API 15
- Compliance with Facebook Open Source terms and privacy policy needed
- Automatic event logging can be disabled
- Limit of 1000 unique event names per app.
- Event and parameter names must consist of 2-40 alphanumeric characters.
- The length of a parameter value must not exceed 100 characters.
- Custom events appear in ad reports as "Other Mobile App Actions" and are not detailed.
- Automatic logging of in-app purchases can be enabled or disabled, which tracks events
  like purchase start, purchase, and purchase cancellation.
- Auto-event logging can be disabled or re-enabled programmatically in the app code
- Requires App ID and App Secret for integration
- Maximum of 1,000 different event names; no new event types logged once this cap
  is reached
- Requires managing user data privacy and compliance as per Apple App Store guidelines
- Automatic event logging is enabled by default; can be disabled manually.
- should_fallback=false to handle cases where the app is not installed on iOS devices
- Uses Bolts framework for handling deep linking and app links
- Deep-linking protocol varies by platform (iOS, Android, Windows Phone)
- Unique URL schemes are recommended to avoid collisions with other apps
- Meta provides a Graph API endpoint to look up data for URLs that support the App
  Links standard.
- Token expiration messages indicate the need for a new access token.
- The `instagram_actor_id` field is deprecated from v22.0 and will be fully deprecated
  by January 20, 2026; migrate to `instagram_user_id`.
- Access tokens should be backed by a system user for stability
- Before approval by App Review, only a test commerce account can be accessed
- Default order state is IN_PROGRESS unless order acknowledgment is configured
- Emails are sent from predefined Facebook and Instagram domains. Ensure these are
  not blocked by your organization's email infrastructure.
- Customer service must respond to inquiries within 2 business days.
- Anti-spoofing measures like SPF, DKIM, and DMARC are recommended to prevent email
  spoofing.
- Integration with Meta requires handling subscription products with specific attributes
  and custom checkout URLs.
- Products with comma (,) or colon (:) characters in their ID are not supported.
- API is in a closed, invite-only Beta program
- Integration only allows API access to test commerce accounts before App Review approval
- Order Management integration is unidirectional; Facebook does not make API calls
  to your systems
- Ensure the checkout page does not redirect or lose cart state
- Handle edge cases such as products not available or out of stock
- Integration requires setting up store locations in Business Manager and creating
  a local inventory catalog.
- Integration requires setting up store locations and product pick-up eligibility
  in Business Manager for lightweight Shops Ads.
- Encourages the use of OAuth 2.0 for securing endpoints
- Typical process completion time is 10 days
- Suggests internal employee testing for service validation
- OAuth is used for authorization with scopes to limit application's access
- Integration with the Data Transfer Project (DTP)
- OAuth 2.0 Authorization Code flow is used for authentication
- Requires OAuth scopes configuration
- Access tokens can be short-lived; refresh tokens may be used for re-authentication
- OAuth 2.0 Authorization Code flow is required for API authentication
- Integration with the Data Transfer Project (DTP) is necessary
- Follow the Onboarding Guide for detailed steps
- Meta supports standard data transfer formats and is a partner of the Data Transfer
  Initiative (DTI)
- Integration involves onboarding via the Developer Portal
- Developers must comply with Platform Terms and Developer Policies to use APIs
- Business verification is required for accessing advanced permissions
- Developers should maintain high standards of data security as per industry practices
- Access tokens are necessary for most API calls and come in different types.
- User access tokens can be short-lived or long-lived.
- Mobile apps using Facebook SDKs automatically manage user access tokens.
- App access tokens should never be exposed in client-side code.
- Ensure all keys transferred between client and server are done securely via HTTPS.
- Requires setting of client tokens and app ID in Android manifest for operation.
- Automatically logs app events unless specifically disabled.
- Access token valid for 60 days; automatic renewal with SDK usage
- Data access expires after 90 days, based on last user interaction
- Permissions like ads_read and others do not expire
- Apps must implement a data deletion callback to comply with development guidelines
- Regular validation of access tokens is crucial; tokens may expire for security reasons
  even before their planned expiry date
- API calls are limited to 200 per hour per app in development mode
- Access expires after 90 days unless the user re-authorizes or is active
- Uses OAuth2 with authorization code flow for Business Integration System User Access
  Token and user access token
- Requires configuration ID (config_id) to replace scope in OAuth requests
- OAuth2 with device login requires HTTPS.
- Device login requests must be POST.
- Device access tokens are valid up to 60 days.
- Only specific permissions can be requested without Facebook review; all others require
  App Review process
- GDPR compliance requires implementation of a data deletion callback and a contact
  email for data deletion requests
- HTTPS is mandatory for all operations as of October 6, 2018
- All API calls must include 'appsecret_proof' parameter when 'App-Secret required'
  is enabled in app settings
- Use of short-lived access tokens generated via code flow is recommended for better
  security
- 'Recommended call-to-action labels: ''Weiter mit Facebook'' or ''Anmelden mit Facebook'''
- Use the approved 'f'-logo from the Facebook Brand Resource Center
- Button colors should be Facebook-Blue (5890FF) or black and white if color constraints
  exist
- Button placement should be thumb-accessible on mobile devices
- Facebook SDK for Javascript supports only HTTPS pages for authentication.
- No app review required for public_profile and email permissions.
- Requires Facebook account login and cookie consent for using social plugins in Europe.
- Facebook Login could increase login conversions significantly as seen in Skyscanner's
  case.
- Requires user to be logged in to see and use social plugins such as "Like" and "Comment"
  in the EU region
- Users must consent to cookies for apps and websites to use social plugins in the
  EU region
- The Pixel code should be added between the <head> tags to avoid execution blocks
  by browsers or third-party code.
- Pixel uses cookies to match website visitors with Facebook User accounts.
- Requires compliance with General Data Protection Regulation depending on business
  location.
- Include 'eventID' as the fourth parameter in the 'fbq('track')' function for deduplication
  with Conversions API.
- Products can be managed without a server.
- Supports in-app product creation and management directly via the App Dashboard.
- Payments Lite does not need a server-push to modify products.
- All dispute cases are automatically refunded and closed in Payments Lite, a serverless
  payment system.
- Reports are generated daily and can be accessed after 12 noon US Pacific Time
- Reports are available for download for up to 45 days
- Reports cover a single day from 12AM-11:59:59PM US Pacific Time
- Company access token does not expire unless the company secret is reset
- Payments must be configured per app, with company registration required.
- Web payments are only available to Cloud Games.
- Dynamic pricing requires server-side handling to return prices.
- Static pricing caches product details for fast transaction processing.
- Object cache for `og:product` expires every 7 days, requiring a rescrape.
- Test payments don't appear in user's Purchase History or payment reporting
- Test transactions are marked with a 'test' field set to 1 in the Graph API return
  data
- Payment testers are automatically set up to test subscription payments
- Requires HTTPS for the callback URL.
- Uses OAuth2 for authentication.
- Webhooks only triggered for changes; no updates for 'initiated' status payments.
- Webhooks for payments do not stack; each update is a new one.
- Must respond with HTTP 200 to webhook POST requests; other responses considered
  failures.
- Webhooks POST requests contain JSON payload.
- Batch requests allow multiple operations in a single HTTP request.
- Responses may include status codes and optional headers and body.
- Supports JSONP and individual access tokens per request in batch.
- Access token required even if individual requests specify their own tokens.
- Supports multipart/mime attachments for binary elements in requests.
- Large or complex batches may cause timeouts, leading to partially completed batches.
- Versionierte Änderungen gelten sofort für die neueste Version und später auch für
  andere Versionen
- Außerplanmäßige Änderungen gelten sofort für alle Versionen
- Access to most nodes and fields requires specific permissions
- Access tokens typically expire in about an hour
- Requires an access token for making API calls; each endpoint may require specific
  permissions.
- Default response format is JSON.
- Supports versioning in API calls; using the oldest version by default if not specified.
- App Review is required for apps requesting Advanced Access using either Facebook
  Login or Instagram Login.
- Apps may automatically be granted Advanced Access when migrating to Instagram API
  with Instagram Login without needing App Review.
- API calls to deprecated versions or endpoints will return errors.
- Deprecation warnings are provided for endpoints and metrics.
- New fields and metrics introduced in newer versions.
- Use webhooks to prevent rate limiting for real-time comment updates.
- Ensure server can handle load from live_comments webhooks for Instagram Live stories.
- Media must be hosted on publicly accessible server for publishing.
- Instagram accounts are limited to 100 API-published posts within a 24-hour period.
- Reels and stories have specific media_type parameters for publishing.
- Business Verification is required before you can publish your app
- API setup with Instagram login allows app users to log in using their Instagram
  credentials
- API setup with Facebook login is for business apps linked to a Facebook Page
- Requires App Review process completion for live data access
- Timestamps in API responses use UTC with zero offset and are formatted using ISO-8601
- Old scope values will be deprecated on January 27, 2025; Update required to maintain
  functionality
- Authorization supports both 'Bearer <ACCESS_TOKEN>' as part of the Authorization
  header and as a query parameter.
- The oEmbed endpoint is used to fetch HTML embedding code and basic metadata of an
  Instagram post.
- The current oEmbed Read feature will be deprecated on October 1, 2025.
- author_name, author_url, thumbnail_height, thumbnail_url, and thumbnail_width fields
  will be fully deprecated by October 1, 2025.
- Standard Access limits functionality until Advanced Access is granted
- Meta App Review required for Advanced Access
- 'Endpoints are accessed based on login type: Instagram credentials for graph.instagram.com
  and Facebook credentials for graph.facebook.com'
- Business Verification required for apps requiring Advanced Access
- Instagram Platform uses CDN URLs for retrieving media content
- Requires Facebook App ID to share content to Instagram Stories
- Only supports sharing via implicit intents on Android and custom URL schemes on
  iOS
- Event Notifications are aggregated and sent in a batch with a maximum of 1000 updates.
- Webhook setup requires TLS/SSL certificate; self-signed certificates are not supported.
- mTLS can be configured in the App Dashboard for additional security.
- Requires an Instagram Business or Creator account linked to a Facebook Page
- Requires an Instagram Business or Creator account
- Requires linking with a Facebook Page
- Supports sharing to Instagram using various methods but does not involve direct
  API data extraction.
- Uses platform-specific features for sharing, which may not be applicable for traditional
  API ingestion.
- Requires a Facebook App-ID to share content to Instagram Stories from January 2023
- Uses implicit intents on Android and custom URL schemes on iOS
- Requires setup of Simulator build package for app review submission
- SDK available from GitHub and can be integrated via Swift Package Manager, CocoaPods,
  or Carthage
- Requires Client Token for all calls to the Graph API starting from version 13.0
- Requires user authentication through Facebook login
- Supports batching requests to minimize network traffic
- Facebook SDK simplifies integration, especially for media sharing with FBSDKShareKit.framework
- Requires app to be in Live Mode to share content
- Custom URL scheme registration needed in Info.plist under LSApplicationQueriesSchemes
- Utilizes custom URL schemes to interact with the Instagram app directly from another
  app
- Requires adding app-specific details to Info.plist for iOS apps
- Videos should be between 3 and 60 seconds, under 50 MB, and in specific video formats
- Requires registration of Facebook's custom URL scheme in the app's Info.plist
- Videos should be between 3 and 60 seconds, under 50MB, and in H.264, H.265, or WebM
  formats
- Optional sticker images should be in JPG or PNG formats with recommended dimensions
  of 640 x 480
- Suffix only works with letters
- Old SDK versions downloadable from the iOS download area
- Native 'Share' dialog cannot be run on a simulator
- Manual class loading necessary in Objective-C for categories
- Use physical device to test native 'Share' dialog
- Add '-ObjC' linker flag to load all Objective-C classes or categories
- AccessToken used for user identity and session management
- Only one user session can be active per device
- SDK functionality uses specific user contact, location, identification, and device
  information.
- Requires a Client Token for all Graph API calls starting from SDK version 13.0
- Facebook SDK for JavaScript supports the two latest versions of major browsers including
  Chrome, Firefox, Edge, Safari, and Internet Explorer (only version 11)
- The default language for Facebook generated buttons and plugins is 'en_US', but
  it can be changed in the 'src' attribute
- The SDK can immediately try to fetch user status after initialization if 'status'
  is set to 'true'
- XFBML parsing is controlled by setting 'xfbml' to 'true' or 'false'
- Debug version of the SDK should not be used in production environments due to larger
  payload and potential negative impact on performance
- This API is deprecated as of July 1, 2022; no new features will be added and support
  may be limited.
- enable_backup_ingest=true must be included in the query string to activate backup
  streaming when creating a LiveVideo object.
- Use secure_stream_url for primary stream; secure_stream_secondary_urls for backup
  streams.
- Host URL for streaming events differs: https://streaming-graph.facebook.com
- Live streaming delay of 4-5 seconds
- Live API requires audio; video-only streams will be terminated
- If a live feed disconnects, you have 2-3 minutes to reconnect using the original
  stream URL or you must generate a new key and URL
- Geo-gating and audience targeting are possible
- Live videos cannot currently be promoted
- Incorporating third-party ads in live streams violates Facebook's Live Video policy
- Captions can be added post-broadcast or during streaming to Facebook's servers using
  CEA-608 standard
- Managed Meta accounts are intended only for work, limiting access to user_* permissions.
- Webhooks notify about access changes during the 30-day window after migration initiation.
- 'Ads API permissions required: ''ads_management'' or ''ads_read'''
- Sandbox mode available for testing API calls without actual ad delivery
- API changes are versioned and adjustments may be needed every 90 days
- Direct integration with advertiser's server is required
- Server events processed similarly to other channels like Meta Pixel or SDKs
- Requires an active ad account to manage ads
- Access to API functionalities requires setting up an app and verifying users and
  permissions
- 'Permissions required: ads_read'
- API responses based on access levels and permissions
- Errors commonly caused by rate limits and timeouts
- API requires OAuth2 authentication with refresh token flow.
- Supports creating ad creatives, ads, and ad sets via POST methods.
- The 'instagram_actor_id' field is deprecated for v22.0 and will be completely deprecated
  by January 20, 2026; migrate to 'instagram_user_id'
- The API endpoints allow creating ad creatives, querying messenger lead forms, and
  managing ads.
- API uses OAuth2 for authentication.
- NLP integration can be done via Meta App Dashboard or programmatically.
- Supports multiple languages, configurable through the model parameter.
- NLP fields nlp and nlpv2 are included in message webhooks when NLP is enabled.
- The nlp field will be deprecated on June 18, 2024.
- Meta's Conversation Routing does not support Handover Protocol features like pass_thread_control
  and release_thread_control for future use.
- API access via Handover Protocol and Send API for passing and releasing thread control.
- Endpoint data selections are based on provided example responses and the structure
  of JSON data.
- Page level permissions required for One-time Notification API
- Token expiry is within 1 year and token is single use only
- Requires 'pages_show_list' and 'pages_messaging' permissions
- Messages must be sent within 24 hours of receiving the customer's message to avoid
  errors
- The handover protocol will be replaced by Conversation Forwarding by May 2025.
- Requires Facebook Login for Business to access user profile information
- Requires App Review for extended access permissions
- Enforces rate limits based on active users and API usage
- Requires the use of Facebook Login for Business to manage permissions.
- Messaging rate limits apply based on active users and message content.
- Standard messaging window is 24 hours
- Message tags allow messages outside the standard window without promotional content
- Attachment uploads and media messages are supported
- Instagram Messaging API does not support news messages or promotional messages
- Private replies must be sent within seven days of the original post or comment
- Information about access token types, requestor, expiration available in the Meta
  access token debugger
- Check the Meta Platform Dashboard for connectivity issues or outages
- Report platform errors through Meta Platform error reports
- Payloads are formatted in JSON and include the names of the changed fields or the
  new values.
- Webhooks use SHA256 signatures in the 'X-Hub-Signature-256' header to ensure payload
  authenticity.
- Ensure your server can handle HTTPS requests with valid TLS/SSL certificates for
  webhook setup.
- Closing webview through redirect only works on Android; iOS will display text and
  image but not close automatically.
- Messenger platform allows apps to send and receive messages between your Facebook
  business page and customers or followers.
- Supports messaging solutions with existing and potential customers through Facebook
  and Instagram.
- Messaging solutions are supported by the Messenger from Meta infrastructure
- Allows messaging between a business's Facebook Page and users, or a professional
  Instagram account and users
- Meta Pay API requires app access token sent via the `Authorization` header.
- Each request must include an `FBPAY_SIGNATURE` header.
- Meta Pay uses encryption with public keys of payment partners; requires exchange
  of keys during onboarding
- Container data is encrypted and needs to be decrypted by the payment partner
- Meta Pixel is loaded asynchronously and does not block the display of the web page
- All advertisers use the same Pixel script, which likely will be in the browser's
  cache if a user has visited any website with the Pixel installed
- Requires `pages_manage_posts`, `pages_read_engagement`, `pages_show_list`, and for
  business system users, `business_management` permissions.
- Supports video formats like JPEG, BMP, PNG, GIF, TIFF for photos and MP4 for videos.
  Videos should be 540p minimum resolution.
- Videos should be between 3 to 90 seconds long, and not exceed 60 seconds when published
  as a story.
- Facebook's API may reject files hosted on sites that restrict access via robots.txt.
  Files hosted on Meta CDN will get rejected.
- On March 14, 2024, and September 16, 2024, several Page Insights metrics will be
  deprecated.
- Requires linking the app with a verified business to access certain features
- Rate limits may apply; see dashboard for details
- Requires permissions: pages_manage_metadata, pages_manage_posts, pages_manage_read_engagement,
    pages_show_list
- Graph Explorer can be used to test API without adding code to your app
- Requires Facebook Login for Business to obtain User or Page access token
- Permissions needed include pages_manage_engagement, pages_manage_metadata, and others
- Authentication via access tokens, which are unique to each page, app user, and app.
- Access tokens expire and must be obtained through Facebook Login for Business.
- Pages API endpoints require specific permissions granted to the app by the app user.
- Requires permissions: pages_manage_engagement, pages_manage_posts, pages_read_engagement,
    pages_read_user_engagement, publish_video
- Access token needed in all API calls
- Geo targeting might have limitations regarding overlapping locations
- Endpoint /search?type=place is deprecated in v8.0+ and in all versions on Nov. 2,
  2020.
- Requires `pages_manage_metadata` and `pages_show_list` permissions for subscribing
  to feed notifications
- Requires `pages_messaging` permission for subscribing to message notifications
- Notifications are sent only if the app is installed on the page and the page has
  not disabled the App platform
- Metrics related to Page Insights will be deprecated on specific dates, rendering
  them inaccessible post those dates.
- Graph Explorer is a UI tool to experiment with Facebook APIs without adding code
  to your app or website.
- Permissions required include: pages_manage_metadata, pages_manage_posts, pages_manage_read_engagement,
    pages_show_list
- Authentication requires user consent to access pages and manage them.
- The API uses OAuth2 tokens for securing calls.
- Permissions required include various `pages_manage`, `pages_read`, and `publish_video`.
- Authentication requires unique page access tokens that expire
- Some endpoints require a feature to be approved via App Review before live mode
  use
- Rate limits apply to API calls
- 'Permissions required: pages_manage_engagement, pages_manage_posts, pages_read_engagement,
  pages_read_user_engagement, publish_video'
- 'Tasks required for app users: CREATE_CONTENT, MANAGE, MODERATE'
- Endpoint "/search?type=place" is deprecated as of API version 8.0 and will be completely
  unavailable after November 2, 2020.
- Requires 'MODERATE' task permission on the Page being queried.
- Supports real-time notifications via webhooks for page_upcoming_change and page_change_proposal.
- Requires page access token for authentication
- Only sends notifications if the app is installed on the page
- Requires user-granted permissions for accessing data
- Permissions not used for 90 days require re-granting by the user
- The Comment Plugin allows users to comment on content via their Facebook account
  and share this activity with friends on Facebook.
- The Comment Plugin includes built-in moderation tools and powerful moderation features.
- Comments posted via the Comment Plugin cannot be replied to via the Graph API.
- Minimum data-width for video is 220; no maximum limit, but cannot exceed the parent
  element's size.
- Automatic resizing on mobile web to fit the parent element's inner width.
- Do not use CSS style to adjust plugin size; use data-width attribute instead.
- Localization adjustments may require modification of social plugin width to accommodate
  different languages.
- For users in the Europe region, the 'Like' and 'Comment' social plugins are only
  supported if the users are logged into their Facebook account and have consented
  to cookies for apps and websites.
- The 'Like' button can experience disruptions due to updated cookie consent prompts
  in Europe.
- API endpoints are only for embedding Facebook content in websites and apps; other
  uses are strictly prohibited.
- Deprecation of fields author_name, author_url, thumbnail_height, thumbnail_url,
  and thumbnail_width starting October 1, 2025.
- Rate limits depend on the type of access key used; App access keys allow up to 5
  million requests per day.
- Client access keys have significantly lower rate limits compared to app access keys.
- Requires AWS temporary security credentials with a minimum 12-hour expiration length
- Ensuring quota availability for creating new VPCs is necessary
- Check for the existence of a Default VPC or EC2-Classic usage in the region
- Meta's Private Computation uses AWS infrastructure for data processing.
- Data is stored in S3 buckets and managed through AWS Glue and other AWS services.
- The system supports automatic and manual diagnostic data sharing with Meta.
- VPC peering connection issues can be retried directly from the deployment UI.
- Publishing to a Page has implicit public scope, only 'Public' option should be available
  for privacy parameter
- Hosts include graph.facebook.com for API calls and rupload.facebook.com for video
  uploads.
- Rate limits include 30 API-published posts within a 24-hour period.
- App Review is required for apps used by anyone without a role on the app or in a
  related business; not required for internal use by users with roles.
- From June 15, 2025, App Review will include Data Access Renewal components.
- Approved permissions and features are active for all users; unapproved ones are
  restricted to users with roles on the app.
- Failure to allow testing of requested permissions and features during App Review
  can lead to rejection of the submission.
- Requires configuring Facebook App ID and linking it with Android app
- Requires generating a key hash and adding it under Sample Apps in Developer Settings
- Share dialog changes to native Facebook App for Android and returns control to your
  app after posting
- If Facebook App is not installed, share dialog automatically redirects to a web-based
  dialog
- Enable GZIP or deflate encoding on your web server to ensure proper sharing via
  Facebook Crawler
- Use Open Graph meta-tags to optimize how content is read by Facebook Crawler
- Update content more frequently than the standard 24-hour interval using the Sharing
  Debugger tool
- Device sharing via Facebook requires HTTPS due to TLS/HTTPS requirements.
- Only POST method is supported for device operation requests.
- User interaction required for publishing on behalf of the user.
- App must not pre-fill shared content as it violates Facebook platform policy
- Sharing via Facebook for iOS simulators is not supported, use a physical device
  for testing
- Uses Open Graph-Tags to control how content is displayed on Facebook
- Facebook crawler uses gzip and deflate encodings
- Requires access token and specific permissions for the node being targeted
- During the test phase, tokens can be easily generated and permissions granted using
  the Graph API Explorer
- 'Permissions required: `threads_basic` for all Threads API endpoints; `threads_content_publish`
  for post publishing endpoints'
- If the app does not have Advanced Access for the `threads_content_publish` permission,
  posting is restricted to the account of the developer and accounts of app testers
- Posts made with the Threads API by users who have enabled sharing for Fediverse
  will be shared with the Fediverse starting August 28, 2024
- Access tokens are user-specific and can be either short-lived (1 hour) or long-lived
  (60 days).
- Long-lived tokens can be refreshed prior to expiration.
- Data for user insights before June 1, 2024, is not guaranteed
- Data before April 13, 2024 (Unix timestamp 1712991600), is not available for user
  insights
- Access token required with specific permissions during the test phase.
- Threads profiles have a daily limit of 250 posts and 1000 replies through the API.
- Endpoint `/manage_reply` hides all nested replies automatically when hiding top-level
  replies
- Parameter `reply_control` can be set to `everyone`, `accounts_you_follow`, or `mentioned_only`
- Requires manual construction of previous and next query strings using before and
  after cursors
- Requires specific permissions: threads_basic, threads_content_publish, threads_manage_replies
- Requires 'threads_basic' permission for all API calls
- Access limited to threads test users unless granted Advanced Access
- Requires proper access token and permissions for the node being targeted
- Only mentions created by Threads test users can be retrieved without Advanced Access
  permission for `threads_manage_mentions`
- Requires permissions with Advanced Access level to receive webhook notifications
- FB.Init and FB.Login callback ordering issue
- FBResult replaces FB.AppEvents.LogEvent and FB.AppEvents.LogPurchase
- FBResult is mainly a wrapper around Unity's WWW class
- Breaking change in Android plugin; manual deletion of old files required
- FB.Init on Android doesn't always show the login dialog
- Requires initialization of SDK before use
- Uses OAuth2 for authentication
- Login requires `public_profile` and `email` permissions
- Requires removal of previous SDK versions before importing a new one
- Post-build script adds a Facebook menu item; check build for errors if not visible
- Unity editor environment has limited functionality; stubbed functions
- Uses REST API; functions are asynchronous
- Minimum supported Unity versions are 2019.4.39f1 for Android, iOS, and Windows;
  2021.3.4f1 for WebGL
- Minimum supported cocoapods version is 1.11.3
- Minimum deployment target for iOS is 15.2
- Namespace for Facebook functions has changed to 'using Facebook.Unity;' in v7.x
- Requires Unity 2019.4.39f1 and up
- Provides integration with multiple gaming platforms including WebGL, Unity Web Player,
  Android, and iOS
- This API allows managing A/B tests for videos on Facebook Pages.
- Graph API Explorer is used to retrieve access tokens with necessary permissions
- Messaging limits can initially be 250 business-initiated conversations per 24-hour
  period, scalable up to 1K through self-service and beyond through automatic scaling
  based on quality ratings and usage.
- Quality rating affects eligibility for messaging limit increases.
- Identity verification required for limit increase beyond initial thresholds.
- Message statuses include: deleted by user, delivered, send failed, read, in transit,
    and catalog item unavailable
- Messages can be formatted with bold, italic, strikethrough, and monospace
- Messaging templates are recommended for handling customer inquiries that exceed
  24 hours
- Embedded Signup uses Facebook Login for Business and JavaScript SDK
- Limitation on number of new business customers that can be onboarded in a 7-day
  window
- Messaging limits are initially set to 250 and can be increased up to 1K by the user
  or more through automatic scaling
- Verification process required for limit increase
- Quality rating impacts limit adjustments
- Phone numbers behind an IVR system that are unable to receive registration calls
  are not supported.
- Business phone numbers can only be registered for use with one API at a time: Cloud
    API or On-Premises API.
- Initially limited to 2 registered business phone numbers, can be increased up to
  20 based on API usage metrics.
- Cannot delete a business phone number via API.
- Cannot disable two-step verification using the API.
- Business phone numbers can only be registered to one API at a time; either Cloud
  API or On-Premises API.
- Initial limit of 2 registered business phone numbers per portfolio; can be increased
  to 20 upon qualifying conditions.
- Two-step verification PIN required for significant account changes.
- Cannot disable two-step verification via API.
- Phone numbers behind IVR systems that can't receive calls are not supported.
- Numbers can't be deleted via API if they have been used to send paid messages in
  the last 30 days.
- Charges for conversations are based on the country of the user's phone number
- Free service conversations for all businesses from November 1, 2024
- Authentication-international rates introduced starting June 1, 2024
- Per-message pricing starts July 1, 2025 for MM Lite API
- Embedded Signup used for onboarding business customers
- Multi-Partner Solutions involve joint management of business customer assets
- System tokens used by Solution Partners when sharing credit lines
- Business tokens used for accessing onboarded customer data
- Webhooks use HTTPS; server must support HTTPS requests and have a valid TLS/SSL
  certificate. Self-signed certificates are not supported.
- Full HTTP roundtrip should take less than 5 seconds.
- Requests are one-time only; Workplace will not automatically disable a link webhooks
  subscription.
- Bots require administrator role to be created in Workplace by Meta
- Bots can post and interact in groups if given specific permissions like 'Gruppeninhalte
  lesen' and 'In Gruppen posten'
- Direct message functionalities are enabled through permissions like 'Nachrichten
  an beliebige Mitglieder senden'
- Access keys for custom integrations do not expire and are not exchanged when users
  are removed or disabled
- Only system administrators of a Workplace community can create apps and generate
  access keys
- Integration focuses on personalized content and ad targeting
- Uses OAuth2 with refresh token â€” requires setup of connected app in API
- Some objects like Contact may return nulls in deeply nested fields
errors:
- Invalid Token: Access token expired or invalidated; generate a new token
- GraphRequest Error: Check LoginManager.resolveError()
- remote_app_id does not match stored id: Check and ensure the correct Key-Hash is
    used
- error_code: sub error code
  error_message: error message
  user_facing_error_message: user facing error message
- Activity_not_found: Verify that the Instagram app is installed and resolves the
    intent
- Permissions request error: Ensure no new permissions are requested before the last
    one is completed; all permission requests are asynchronous
- 401 Unauthorized: Ensure proper OAuth setup and token validity
- Multiple app launch events within 60 seconds are not logged
- 100 Invalid parameter: Exceeding the limit of 1000 unique event names or invalid
    event/parameter names.
- Misconfiguration in manifest can lead to failure in disabling SDK features
- Incorrect setup of event logging can lead to missing data in analytics
- Event Not Logged: Check if automatic event logging is disabled
- 100 Invalid parameter: Exceeded the limit of different event names
- 401 Unauthorized: Recheck API token or user authentication credentials
- '401 Unauthorized: Recheck Facebook app ID or access token validity.'
- al_nav_out: Raised when your app switches out to an App Links URL
- al_nav_in: Raised when your app opens an incoming App Links URL
- al_ref_back_out: Raised when your app returns back the referrer app using the built-in
    top navigation back bar view
- incorrect parameters: Check Graph API Docs for error codes and handling
- permission denied: Check your access token or app secret for permissions
- unknown path: Check your access token or app secret for permissions
- NullPointerException: Likely an SDK bug or your own bug; report on Facebook Platform
    Bugs
- MalformedResponseException: Likely an SDK bug or your own bug; report on Facebook
    Platform Bugs
- Unknown error: Potentially a server bug; report on Meta Platform Bugs
- Token expired: Request a new page access token and try again.
- 'Deprecation Warning: Use `instagram_user_id` instead of `instagram_actor_id`.'
- 401 Unauthorized: Check if the access token has required permissions or if it has
    been invalidated
- 'Emails blocked by client''s email system: Ensure that Facebook and Instagram domains
  are whitelisted.'
- common_error_codes:
    description: Learn about the common error codes used in the Commerce Platform
      and how to take appropriate action.
- 'Access Denied: Ensure your app is approved via an App Review before accessing production
  accounts'
- If experiencing issues or have queries, contact dataportability@meta.com
- Frequently Asked Questions: Consult for support in onboarding
- Invalid or expired token: Ensure the access token is valid and not expired.
- 'No access token could be retrieved for the user: Ensure user is properly authenticated
  and tokens are managed.'
- 'An error occurred: General error handling advice needed.'
- PERMISSION_EXPIRED: Request reauthorization from user to regain data access
- Access token invalid: Ensure access tokens are regularly validated to avoid relying
    on expired tokens
- 401 Unauthorized: Recheck OAuth scopes or token expiration
- REQUEST_LIMIT_EXCEEDED: Reduce frequency or paginate requests
- If the app does not function as expected after switching to Facebook Login for Business,
  you can revert within 30 days
- code_expired: The device code has expired. Start the device login process again.
- Invalid API method: Ensure 'Device Login' is enabled in your app settings.
- PERMISSION_DENIED: Ensure permissions are granted or approved in App Review
- INVALID_APP_SECRET: Verify that the app secret is correct and not compromised
- INVALID_REDIRECT_URI: Ensure that the redirect URI matches one in the list of valid
    OAuth redirect URIs exactly, including any parameters except 'state'
- REQUEST_LIMIT_EXCEEDED: Request fewer permissions initially to potentially avoid
    the need for Login Review
- 401 Unauthorized: User cancelled login or did not fully authorize.
- '401 Unauthorized: Check if user is logged into Facebook and has given cookie consent
  for apps and websites.'
- 401 Unauthorized: Check if user is logged in and consent to cookies is given for
    apps and websites in the EU region
- error_code: 1383010
  error_message: User canceled the order.
- 200: Success response, expected when webhook notifications are correctly received
    and processed.
- Non-200: Considered as errors; retry logic is employed. Ensure server is properly
    handling requests.
- code: 403
  message: OAuthException
  suggestion: Check permissions for the requested operations.
- Standard error response: Standard API error message format returned on failures
    such as non-existent fields in request.
- code: 100
  message: (#100) The After Cursor specified exceeds the max limit supported by this
    endpoint
  type: OAuthException
- API requests to deprecated endpoints will return an error message.
- EXPIRED: The container was not published within 24 hours and has expired.
- ERROR: The container failed to complete the publishing process.
- FINISHED: The container and its media object are ready to be published.
- IN_PROGRESS: The container is still in the publishing process.
- PUBLISHED: The container's media object has been published.
- PERMISSION_DENIED: Check if the required permissions are granted for the Instagram
    product
- If using a Client Access Token, combine it with your Meta-App-ID using a vertical
  bar, otherwise the request will fail.
- 'Rate Limit Exceeded: Reduce API call frequency or use webhooks to avoid hitting
  rate limits'
- Die App, von der du etwas geteilt hast, unterstützt aktuell das Teilen in Stories nicht: Ensure
    Facebook App ID is correctly configured
- 200 OK HTTPS: Correct response to Event Notifications.
- Deprecation notice: Migrate to the new Instagram API by December 4, 2024, to avoid
    service disruption
- Die App, von der du etwas geteilt hast, unterstützt aktuell das Teilen in Stories nicht: Provide
    a valid Facebook App-ID
- FBSDKErrorDeveloperMessageKey: An error message for the developer
- FBSDKErrorLocalizedDescriptionKey: A localized user facing message, if available
- FBSDKErrorLocalizedTitleKey: A localized user facing title, if available
- FBSDKGraphRequestErrorCategoryKey: An enum describing if the error category, such
    as transient, recoverable, other
- FBSDKGraphRequestErrorGraphErrorCode: The Graph API error code
- FBSDKGraphRequestErrorErrorSubcode: The Graph API error subcode
- FBSDKGraphRequestErrorHTTPStatusCodeKey: The HTTP status code returned by the Graph
    API
- FBSDKGraphRequestErrorParsedJSONResponseKey: The raw JSON response from the Graph
    API
- NSRecoveryAttempterErrorKey: A recovery attempter conforming to
- NSLocalizedRecoverySuggestionErrorKey: A localized user facing message describing
    the recovery
- NSLocalizedRecoveryOptionsErrorKey: An array of localized labels for buttons describing
    the recovery options
- If access token is missing or invalid, appropriate error handling should be implemented
- CannotOpenURL: Handle cases where the Instagram app cannot be opened or the custom
    URL scheme is not recognized
- Cannot open URL: Ensure that the custom URL scheme is correctly registered and that
    the Facebook app is installed
- unrecognized selector sent to instance: Load classes manually in application:didFinishLaunchingWithOptions
    or use '-ObjC' linker flag
- plist configuration errors: Ensure plist contains lines for FacebookAppID, FacebookDisplayName,
    and a URL type entry for fb{app-id}
- REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency
- No specific error patterns provided.
- code: 200
  subcode: 1363120
  message: Permissions error
  type: OAuthException
  mitigation: Youâ€™re not eligible to go live. Your profile needs to be at least
    60 days old before you can go live on Facebook. Learn more at https://www.facebook.com/business/help/167417030499767?id=1123223941353904
- code: 200
  subcode: 1363144
  message: Permissions error
  type: OAuthException
  mitigation: Youâ€™re not eligible to go live. You need at least 100 followers before
    you can go live from your profile. Learn more at https://www.facebook.com/business/help/167417030499767?id=1123223941353904
- Typical error responses need to be handled as per HTTP standards
- COPYRIGHT__LIVE_COPYRIGHT_VIOLATION: Your live video has been stopped because it
    may contain audio or visual content that belongs to a different Page.
- VIDEO__CREATE_FAILED: There was a problem and your video was not uploaded. Please
    try again.
- LIVE_VIDEO__DELETE_FAILED: There was a problem and we were not able to delete your
    live video. Please try again.
- LIVE_VIDEO__EDIT_API_NOT_ALLOWED: Editing a live video using the Video Edit API
    is not allowed. Use the live video ID.
- LIVE_VIDEO__LIVE_STREAM_ERROR: There was an error during the stream
- LIVE_VIDEO__NOT_EXIST: The live video you are trying to access does not exist in
    the system any more.
- LIVE_VIDEO__PRIVACY_REQUIRED: You need to set a privacy before going live.
- 2001363120: You’re not eligible to go live Your profile needs to be at least 60
    days old before you can go live on Facebook.
- 2001363144: You’re not eligible to go live You need at least 100 followers before
    you can go live from your profile.
- Audio distortion may occur if the video stream is received with distorted audio
  signals or if there's a high bitrate
- Problems with audio/video synchronization might occur due to limited bandwidth
- If live video ends prematurely without sending a 'POST' request with 'end_live_video'
  parameter, ensure to send it to seal or process the transmission
- code: 100
  message: (#100) Object does not exist, cannot be loaded due to missing permission
    or reviewable feature, or does not support this operation.
  type: OAuthException
- PERMISSION_DENIED: Check if the session key or user ID is valid for the requested
    account
- ERROR_TYPE: Too many requests or timeouts
- 401 Unauthorized: Recheck OAuth scopes or token validity.
- RATE_LIMIT_EXCEEDED: Reduce request frequency.
- INVALID_OR_EXPIRED_TOKEN: Ensure tokens are regularly refreshed and correct scopes
    are requested
- MISSING_OR_INVALID_PARAMETERS: Always check input data before making API calls
- RESOURCE_NOT_FOUND: Verify resources like campaigns or ad groups exist before operations
- RATE_LIMIT_EXCEEDED: Use exponential backoff strategies to manage request rates
- 401 Unauthorized: Check OAuth credentials or token expiration.
- success: 'true'
- 'Message older than last 20: Message has been deleted.'
- Invalid OAuth access token: Recheck OAuth scopes or token expiration
- An unknown error occurred: Missing permissions can cause this issue
- Received invalid JSON reply: There is a system delay in returning the error message
- An unexpected error has occurred. Please retry your request later: Check the status
    of the Meta Developer Platform
- Service temporarily unavailable Privacy ToS not accepted: The Page admin must accept
    the Privacy Terms of Service for Custom Labels
- Rate Limit error: Application request limit reached; Pause requests until current
    requests drop below the limit
- Marketing Messages – There has to be a minimum delay between 2 notifications for the given notification: Keep
    track of which users you have sent messages to per the agreed cadence
- User is performing too many actions: When the Marketing Message opt–in request limit
    has been exceeded
- No Permission For Pages Associated to Instant Games: The User Profile API is not
    available for PSIDs associated with Instant Game Pages
- Application does not have permission for this action: When the Page is temporarily
    restricted from sending Marketing Message opt–in requests
- This message is sent outside of allowed window: Apps can only send a message to
    a customer within 24 hours of receiving the customer's message
- Cannot verify the connection between the IG account, the logged in user and the page: Advise
    the user to check the linkage and perhaps link and unlink the page and the IG
    account to fix the issue
- Bad Parameter Error: Invalid FBID; Check to make sure the ID or token you are using
    is valid
- Unsupported get request: Make sure the ID in your request exists and that your app
    has the proper permissions to access it
- Failed to fetch the file from the url: Check that the URL is valid, with a valid
    SSL certificate, valid file size, and that the server is responding fast enough
    to avoid timeouts
- Upload attachment failure: The provided media type does not match type of file provided
    in the URL
- Video upload timed out or video is corrupted: Note that if the video can't be fetched
    within 75 seconds, it will time out
- Invalid product id: Check to make sure the product ID you are using in your Product
    Template is a valid ID and that your app has permission to access it
- The page is not linked to an Instagram account: The Page ID used in your API calls
    must be for the Facebook Page linked to your Instagram Professional account
- No matching Instagram user: Check to make sure the ID you are using is a valid Instagram–scoped
    ID
- The business has been blocked from sending messages via the IG Messaging API: Check
    to make sure you do not have any policy violations that must be rectified before
    you can send messages using the Messenger Platform
- The action is invalid since it's not the thread owner: Check that your app has the
    correct permissions and access tokens to manage the conversation
- Scope of service exceeded: When a Page sends more than 1 opt–in request to the user
    on the same topic, inform the user on your website that an opt–in request was
    already sent to Messenger
- Calls to this api have exceeded the rate limit: Your app has reached the rate limit;
    Pause API calls and try again later
- ? Could not send Instant Game message to the user at this time, only 5 notifications
    can be sent to a user within 10 days since they last played
  : Pause your requests until the number of requests falls below the limit
- No profile available for this user: Currently, the User Profile API does not support
    retrieving profile information for Messenger accounts that were created using
    a phone number
- Insufficient permission to access user profile: The app calling the User Profile
    API has not been granted the permissions needed to access one or more of the requested
    fields
- 200: Ensure to return status code 200 from webhook to avoid repeated calls
- Timeout: Webhook responses must be sent within 20 seconds to avoid timeouts
- Error when sending messages outside the 24-hour window: Ensure messages are sent
    within 24 hours of receipt
- 400: Attempt to send a message by an app without control of the conversation.
- 36103: Messaging not available yet
- REQUEST_LIMIT_EXCEEDED: Reduce frequency of API calls
- DELAYED_MESSAGE_DELIVERY: Occurs when account receives a high volume of messages
- MESSAGE_NOT_DELIVERED: Retry sending when message volume decreases
- Message Delayed: Your message may be delayed due to high message volume.
- Message Not Delivered: Your message was not delivered due to high message volume.
    Try again later.
- If using message_type 'tagged' outside the standard window, ensure it complies with
  allowed use cases
- 404 Not Found: Return this if event is not from a page subscription.
- WEBHOOKS_DISABLED: Notification if webhook delivery fails persistently; subscription
    will be paused.
- If a webhook invocation fails, retry the invocation at least three times for at
  least seventy two hours with incremental backoff.
- Misuse of container: Verify container context before processing to prevent misuse
- 'invalid metric error: This occurs when deprecated metrics are called.'
- 1705: There was an error posting to this wall
- code: You can't create a video engagement Custom Audience with video {object_id}
    because this video isn't associated with a Page or New Page Experience.
  message: This video must be associated with a classic Page or a new Page experience
    to create a video engagement Custom Audience.
- code: This endpoint is not supported in the new Pages experience.
  message: The endpoint in your call is not supported. Visit the New Pages Experience
    Overview for more information.
- code: This field is not supported in the new Pages experience.
  message: The field of the endpoint in your call is not supported. Visit the New
    Pages Experience Overview for more information.
- code: A Page access token is required for this call for the new Pages experience.
  message: This endpoint must be called with a Page access token.
- code: The corresponding UI feature of this API is deprecated or not available on
    New Page Experience
  message: The corresponding UI feature of this API is deprecated or not available
    on New Page Experience. Please review the Graph API Reference or the New Pages
    Experience Overview for more information about this endpoint and its fields.
- code: This ad objective is not supported for New Page Experience yet. You can create
    it with a Page instead.
  message: This ad objective is not supported for the new Pages experience.
- code: Viewer doesn't have permission to perform this action.
  message: You do not have permission to perform this task. Contact an admin of the
    Page to request access.
- code: New Pages experience insights are only available for Pages with at least 100
    Page followers.
  message: Page insights are only available for Pages that have at least 100 followers.
- code: To access this info, the post needs to be set to public.
  message: Page insights are only available for public posts.
- code: You can only get insights on the original post of a shared post but only if
    you own the original post. You can only boost the original post of a shared post
    but only if you own the original post.
  message: You can only get insights on the original post, as long as you are the
    owner, of a shared post.
- code: To access this info, you need to be the creator of the post.
  message: To get insights or boost a shared Page post, you must be the owner of the
    original post and must use the original post to get insights or boost the post.
- code: '{Name} tagged you in this post. To access this info, you need to be the creator
    of the post.'
  message: To get insights or boost a post in which your Page was mentioned, you must
    own the post.
- code: This info isn't available for profile pictures. To get insights or boost a
    post, you can add this photo to a new post.
  message: Insights or boosting a profile picture change is not supported. Create
    a post with the new profile picture to boost and get insights.
- code: This info isn't available for cover photos. To get insights or boost a post,
    you can add this photo to a new post.
  message: Insights or boosting a cover photo change is not supported. Create a post
    with the new cover photo to boost and get insights.
- code: This info isn't available for live videos.
  message: Insights or boosting a live video is not supported.
- code: This info isn't available right now.
  message: Insights are not available for this post.
- id: ''
  description: Successful post will return an ID for the post
- 401 Unauthorized: Check the validity of the access token or permissions
- REQUEST_LIMIT_EXCEEDED: Rate limits apply to API calls; monitor usage in the App
    Dashboard.
- Some of your locations overlap. Remove a location: Adjust targeting parameters depending
    on desired coverage
- invalid_metric_error: Returned when deprecated metrics are accessed.
- code: You can't create a video engagement Custom Audience with video {object_id}
    because this video isn't associated with a Page or New Page Experience
  message: This video must be associated with a classic Page or a new Page experience
    to create a video engagement Custom Audience
- code: This endpoint is not supported in the new Pages experience
  message: The endpoint in your call is not supported. Visit the New Pages Experience
    Overview for more information
- code: This field is not supported in the new Pages experience
  message: The field of the endpoint in your call is not supported. Visit the New
    Pages Experience Overview for more information
- code: A Page access token is required for this call for the new Pages experience
  message: This endpoint must be called with a Page access token
- code: The corresponding UI feature of this API is deprecated or not available on
    New Page Experience
  message: The corresponding UI feature of this API is deprecated or not available
    on New Page Experience. Please review the Graph API Reference or the New Pages
    Experience Overview for more information about this endpoint and its fields
- code: This ad objective is not supported for New Page Experience yet. You can create
    it with a Page instead
  message: This ad objective is not supported for the new Pages experience
- code: Viewer doesn't have permission to perform this action
  message: You do not have permission to perform this task. Contact an admin of the
    Page to request access
- code: New Pages experience insights are only available for Pages with at least 100
    Page followers
  message: Page insights are only available for Pages that have at least 100 followers
- code: To access this info, the post needs to be set to public
  message: Page insights are only available for public posts
- code: You can only get insights on the original post of a shared post but only if
    you own the original post. You can only boost the original post of a shared post
    but only if you own the original post
  message: You can only get insights on the original post, as long as you are the
    owner, of a shared post
- code: To access this info, you need to be the creator of the post
  message: To get insights or boost a shared Page post, you must be the owner of the
    original post and must use the original post to get insights or boost the post
- code: '{Name} tagged you in this post. To access this info, you need to be the creator
    of the post'
  message: To get insights or boost a post in which your Page was mentioned, you must
    own the post
- code: This info isn't available for profile pictures. To get insights or boost a
    post, you can add this photo to a new post
  message: Insights or boosting a profile picture change is not supported. Create
    a post with the new profile picture to boost and get insights
- code: This info isn't available for cover photos. To get insights or boost a post,
    you can add this photo to a new post
  message: Insights or boosting a cover photo change is not supported. Create a post
    with the new cover photo to boost and get insights
- code: This info isn't available for live videos
  message: Insights or boosting a live video is not supported
- code: This info isn't available right now
  message: Insights are not available for this post
- REQUEST_LIMIT_EXCEEDED: Reduce frequency of requests or manage API call budget
- If a field is not returned in the response, the Page does not have this value set.
- 'Rate limits exceeded: Monitor your app''s calls in the App Dashboard'
- Some of your locations overlap. Remove one location.
- action: pending
- action: accepted_manually
- action: accepted_automatically
- action: rejected_manually
- success: 'false'
  solution: Check if the app is installed on the page and has the correct permissions
- 401 Unauthorized: Ensure permissions are granted and not expired
- error_code: (No. 100)
  error_message: The value must be a valid Insights metric
  description: There might be a spelling or syntax error
- error_code: No Metrics Specified
  error_message: No metrics to retrieve specified. Specify one or more metrics to
    retrieve and try again.
  description: Occurs if no metrics are specified in the request
- plugin_comment:
    advice: Check the moderation settings if visibility issues occur.
- plugin_comment_reply:
    advice: Ensure replies are enabled and visible in the moderation settings.
- If the video player does not display in Wordpress, check for '&' character conversion
  in the embed code.
- If the 'Like' or 'Comment' plugins are not visible, ensure the user is logged in
  and has consented to cookies.
- If using a client access key, it must be combined with the app ID using a vertical
  bar '|'.
- ERROR_SHARING_DIAGNOSTIC_DATA: Retry or contact Meta support if persistent.
- code: 100
  message: '(#100) Missing parameter: {a list of missing parameters}'
  mitigation: Ensure all required parameters are included in requests.
- message: The video you tried to upload has an aspect ratio that isn't supported
    on Facebook.
  mitigation: Aspect ratios for videos need to be between 16x9 and 9x16.
- message: The video you tried to upload has resolution that isn't supported on Facebook
    for this product.
  mitigation: Minimum resolution is 540 x 960 pixels; recommended resolution is 1080
    x 1920 pixels.
- message: The video you tried to upload has a duration that isn't supported on Facebook
    for this product.
  mitigation: Reels duration must be between 3 and 90 seconds.
- message: The video you tried to upload has an average frame rate that isn't supported
    on Facebook for this product.
  mitigation: Reels frame rate must be between 24 and 60 frames per second.
- No direct feedback mechanism to verify if a share operation by a device has been
  completed.
- If your app does not have Advanced Access for the `threads_content_publish` permission,
  you can only post on behalf of your account and your app testers' accounts
- 'Access token expired: Refresh the token using the refresh token endpoint or re-authenticate
  to obtain a new access token.'
- REQUEST_LIMIT_EXCEEDED: Thread profiles can publish a maximum of 1000 replies via
    the API within 24 hours
- PERMISSION_DENIED: Ensure 'threads_basic' permission is granted for production access
- FAILED_DOWNLOADING_VIDEO: Handle failed video download.
- FAILED_PROCESSING_AUDIO: Handle failed audio processing.
- FAILED_PROCESSING_VIDEO: Handle failed video processing.
- INVALID_ASPEC_RATIO: Check aspect ratio validity.
- INVALID_BIT_RATE: Check bit rate validity.
- INVALID_DURATION: Check duration validity.
- INVALID_FRAME_RATE: Check frame rate validity.
- INVALID_AUDIO_CHANNELS: Check audio channel count validity.
- INVALID_AUDIO_CHANNEL_LAYOUT: Check audio channel layout validity.
- UNKNOWN: Handle unknown errors.
- Unauthorized: App lacks permissions with Advanced Access level
- FB.Feed failed with certain toID, 'Link, or actionName parameters
- 'User cancelled login: Handle user cancellation appropriately'
- 'Error: Handle errors during login or other operations'
- 'Failure: Access Token could not be retrieved: Ensure user is logged into Facebook
  on the device'
- 'Compilation errors: Check your build and ensure all assets are properly imported
  and settings are correctly configured'
- '401 Unauthorized: Check user''s login status or permissions'
- If upgrading from a version below v7.x, it's necessary to remove explicit versioning
  in Graph API calls.
- id: On success your app will receive a JSON response with the ID for your A/B test.
- alert_type: INCREASED_CAPABILITIES_ELIGIBILITY_NEED_MORE_INFO
  action: Complete identity verification
- alert_type: Send high-quality messages or open 1K conversations in 30 days.
  action: Ensure messaging quality to increase limits
- Exceeding customer onboarding limit: You will receive an email notification when
    approaching the limit.
- QUERY_TIMEOUT: Break down filters or add selectivity
- INCREASED_CAPABILITIES_ELIGIBILITY_NEED_MORE_INFO: Follow the instructions to provide
    additional information for identity verification
- max_daily_conversation_per_phone: Indicates the new messaging limits after approval
- '401 Unauthorized: Check the OAuth tokens, ensure the access token is not expired'
- PERMISSION_DENIED: Ensure permissions are approved through App Review
- Critical: The problem has serious impacts on your production environment, causing
    the API to not function. You cannot send messages or add/register new phone numbers.
    The problem interrupts your business operations, and there are no procedural solutions.
- Urgent: The problem affects your production environment by hindering API functionalities,
    which prevents most of your messages from being sent. The problem causes severe
    interruptions to key parts of your business operations, and there are no procedural
    solutions.
- Moderate: The problem affects your production environment, with minor or periodic
    issues with the API, preventing some of your messages from being sent. The problem
    causes minor interruptions to parts of your business operations, but there are
    procedural solutions. It includes all other issues not classified as 'Critical'
    or 'Urgent'.
- Resolved: When an issue with Critical or Urgent severity is resolved but there are
    still pending requirements, the severity level is updated to 'Resolved'.
- If a Workplace user ID appears for the first time, set the `linked_user` field to
  `false` prompting Workplace to display an `Activate Preview` button.
- 'If bot does not respond: Check bot''s permissions and webhook configurations'
- Unauthorized: Recheck OAuth scopes or token expiration
auth_info:
  mentioned_objects:
  - Ads API
  - Access Token
  - App ID
  - App Secret
  - Permissions
  - access tokens
  - AccessToken
  - LoginManager
  - AccessTokenTracker
  - Profile
  - ProfileTracker
  - FacebookSdk
  - Key-Hashes
  - GraphRequest
  - GraphResponse
  - GraphRequestBatch
  - Meta_App_ID
  - Facebook Login
  - Facebook Graph API
  - accessToken
  - BFURL
  - APIContext
  - AdAccount
  - Campaign
  - pixel_id
  - application_id
  - InstagramUserID
  - PixelID
  - ApplicationID
  - System User
  - Business Manager
  - access_token
  - App Review
  - OAuth 2.0
  - OAuth
  - Scope
  - OAuth Configuration form
  - OAuth scopes
  - Client ID
  - Redirect URL
  - Access Token Revocation URL
  - Developer_Portal
  - Onboarding_Guide
  - com.facebook.AccessToken
  - FBSDKAccessToken
  - FB.getAuthResponse
  - LoginButton
  - FB.login
  - ASWebAuthenticationSession
  - SFAuthenticationSession
  - Business Verification
  - Contract
  - Business Integration System User Access Token
  - Roles and Permissions
  - AppSecret
  - public_profile
  - email
  - SDK
  - OAuth Redirect URIs
  - instagram_business_basic
  - instagram_business_content_publish
  - instagram_business_manage_comments
  - instagram_business_manage_messages
  - OAuthToken
  - Instagram login
  - Facebook login
  - Instagram User
  - Meta login flow
  - Instagram professional account
  - Facebook Page
  - Business Login for Instagram
  - Facebook Login for Business
  - Instagram app ID
  - Instagram app secret
  - Facebook App ID
  - Verify token
  - TOKEN
  - Instagram Business Account
  - Instagram Creator Account
  - Facebook App-ID
  - FBSDKCoreKit
  - FBSDKLoginKit
  - FBSDKShareKit
  - FBSDKGamingServicesKit
  - LSApplicationQueriesSchemes
  - FacebookAppID
  - FacebookDisplayName
  - FacebookUrlSchemeSuffix
  - Client-Token
  - Webhooks
  - Migration APIs
  - App
  - Werbekonto
  - Access Key
  - Wit.ai
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Webhook
  - fb_exchange_token
  - User access token
  - Page access token
  - pages_messaging
  - Instagram Login
  - Meta Social Graph
  - Enterprise Verification
  - Meta-Zugriffstoken-Debugger
  - appSecret
  - app ID
  - app secret
  - FBPaymentContainer
  - partnerEncryptionKeyPem
  - fbpayTestRootCertPem
  - Business Management
  - Pages Show List
  - Public Profile
  - PSID (Page-Scoped User ID)
  - App Permissions
  - Page Access Token
  - App Access Key
  - Client Access Key
  - EC2
  - VPC
  - AssumeRole
  - Access Token Debugger
  - IAM AWS services
  - Zugriffstoken
  - Graph API Explorer
  - Authorization window
  - Access tokens
  - threads_basic
  - threads_content_publish
  - threads_manage_replies
  - Client token
  - FB.LoginWithReadPermissions
  - FB.LoginWithPublishPermissions
  - CREATE_CONTENT
  - pages_manage_engagement
  - pages_show_list
  - pages_manage_posts
  - pages_read_engagement
  - pages_read_user_content
  - Page ID
  - WhatsApp Manager
  - Business-Token
  - Systemtoken
  - whatsapp_business_messaging
  - whatsapp_business_management
  - webhook
  - System User Access tokens
  - Finance editor role
  - HMAC-SHA256
  - page
  - bot
  - Token for the custom integration
  - Apps
client:
  auth:
    type: oauth2
    token_url: https://graph.work.meta.com/work_get_token
    location: header
    header_name: access_token
    flow: auth_code
    client_id: '{{ dlt.secrets[''company_id''] }}'
    client_secret: '{{ dlt.secrets[''company_secret''] }}'
    scope:
    - instagram_business_basic
    - instagram_business_content_publish
    - instagram_business_manage_messages
    - instagram_business_manage_comments
    refresh_token: '{{ dlt.secrets[''facebook_refresh_token''] }}'
    minimum_token_length: 12 hours
  base_url: https://developers.facebook.com/docs/admin-center/api-reference
  headers:
    Accept: application/json
    Prefer-Html-Meta-Tags: al
    Content-Type: application/json
    X-Hub-Signature-256: sha256=
    FBPAY_SIGNATURE: '{{ dlt.secrets[''fbpay_signature''] }}'
    Content-Security-Policy: default-src 'self' static.xx.fbcdn.net graph.facebook.com;
    Accept-Encoding: gzip, deflate
    Content-type: application/json
    User-Agent: Webhooks/1.0
  paginator:
    type: cursor
    cursor_path: paging.cursors.after
    cursor_param: after
    page_size_param: limit
    default_page_size: 90
source_metadata: null
