resources:
- name: issues
  endpoint:
    path: /rest/api/2/search
    method: GET
    data_selector: issues
    params:
      incremental: updated_at
- name: sync_operations
  endpoint:
    path: /api/sync_operations
    method: GET
    data_selector: operations
    params: {}
- name: sync_operations
  endpoint:
    path: /api/sync/operations
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: epics
  endpoint:
    path: /rest/api/2/epic
    method: GET
    data_selector: records
    params: {}
- name: sprints
  endpoint:
    path: /rest/agile/1.0/sprint
    method: GET
    data_selector: values
    params: {}
- name: issues
  endpoint:
    path: /rest/api/3/search
    method: GET
    data_selector: issues
    params:
      jql: project = MYPROJECT
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: epics
  endpoint:
    path: /rest/api/3/epic
    method: GET
    data_selector: values
- name: comments
  endpoint:
    path: /rest/api/3/issue/{issueIdOrKey}/comment
    method: GET
    data_selector: comments
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: User
  endpoint:
    path: /api/user
    method: GET
    data_selector: data
    params: {}
- name: Comment
  endpoint:
    path: /api/comment
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: comments
    params: {}
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: attachments
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: issues
- name: projects
  endpoint:
    path: /rest/api/3/project
    method: GET
    data_selector: projects
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: issues
- name: projects
  endpoint:
    path: /rest/api/3/project
    method: GET
    data_selector: projects
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: User
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: Issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /api/issues
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sync_operations
  endpoint:
    path: /api/sync_operations
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: comments
    params: {}
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: attachments
    params: {}
- name: Outgoing sync
  endpoint:
    path: /outgoing/sync
    method: POST
    data_selector: replica
    params: {}
- name: Incoming sync
  endpoint:
    path: /incoming/sync
    method: POST
    data_selector: issue
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: comments
    params: {}
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: attachments
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: CampaignMember
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params: {}
- name: Contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: comments
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: User
  endpoint:
    path: /api/user
    method: GET
    data_selector: data
    params: {}
- name: Comment
  endpoint:
    path: /api/comment
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: azure_devops_proxy_user
  endpoint:
    path: /azure/devops/proxy_user
    method: POST
- name: github_proxy_user
  endpoint:
    path: /github/proxy_user
    method: POST
- name: freshdesk_proxy_user
  endpoint:
    path: /freshdesk/proxy_user
    method: POST
- name: freshservice_proxy_user
  endpoint:
    path: /freshservice/proxy_user
    method: POST
- name: hp_alm_qc_proxy_user
  endpoint:
    path: /hp_alm_qc/proxy_user
    method: POST
- name: jira_cloud_proxy_user
  endpoint:
    path: /jira/cloud/proxy_user
    method: POST
- name: jira_on_premise_proxy_user
  endpoint:
    path: /jira/on_premise/proxy_user
    method: POST
- name: salesforce_proxy_user
  endpoint:
    path: /salesforce/proxy_user
    method: POST
- name: servicenow_proxy_user
  endpoint:
    path: /servicenow/proxy_user
    method: POST
- name: zendesk_proxy_user
  endpoint:
    path: /zendesk/proxy_user
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Jira On-Premise
  endpoint:
    path: /exalate/jira-on-premise
    method: GET
- name: Jira Cloud
  endpoint:
    path: /exalate/jira-cloud
    method: GET
- name: Zendesk
  endpoint:
    path: /exalate/zendesk
    method: GET
- name: Salesforce
  endpoint:
    path: /exalate/salesforce
    method: GET
- name: ServiceNow
  endpoint:
    path: /exalate/servicenow
    method: GET
- name: Azure Devops
  endpoint:
    path: /exalate/azure-devops
    method: GET
- name: User
  endpoint:
    path: /api/user
    method: GET
    data_selector: data
    params: {}
- name: Comment
  endpoint:
    path: /api/comment
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comment
  endpoint:
    path: /api/comments
    method: GET
    data_selector: comments
    params: {}
- name: attachment
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: attachments
    params: {}
- name: database
  endpoint:
    path: /services/data/vXX.X/sobjects/Database
    method: GET
    data_selector: records
    params: {}
- name: jcloudnode
  endpoint:
    path: /services/data/vXX.X/sobjects/Jcloudnode
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
    params: {}
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /services/data/vXX.X/sobjects/Database
    method: GET
    data_selector: records
- name: jcloudnode
  endpoint:
    path: /services/data/vXX.X/sobjects/JCloudNode
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sync_operations
  endpoint:
    path: /api/sync
    method: POST
    data_selector: data
    params: {}
- name: User
  endpoint:
    path: /api/user
    method: GET
- name: Issue
  endpoint:
    path: /api/issue
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /api/user
    method: GET
    data_selector: user_data
- name: sync_room
  endpoint:
    path: /api/v1/sync-room
    method: GET
    data_selector: results
- name: database
  endpoint:
    path: /services/data/vXX.X/sobjects/Postgres
    method: GET
    data_selector: records
    params: {}
- name: azurenode
  endpoint:
    path: /services/data/vXX.X/sobjects/AzureNode
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /services/data/vXX.X/sobjects/Database
    method: GET
    data_selector: records
- name: azurenode
  endpoint:
    path: /services/data/vXX.X/sobjects/AzureNode
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
- name: work_logs
  endpoint:
    path: /api/worklogs
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /services/data/vXX.X/sobjects/Database
    method: GET
    data_selector: records
- name: azurenode
  endpoint:
    path: /services/data/vXX.X/sobjects/AzureNode
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /rest/api/2/search
    method: GET
    data_selector: issues
    params:
      jql: project = MYPROJECT
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /api/user
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sync_operations
  endpoint:
    path: /sync/operations
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: sync_operations
  endpoint:
    path: /api/sync_operations
    method: GET
    data_selector: records
    params: {}
- name: status
  endpoint:
    path: /api/status
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /rest/api/2/issue
    method: GET
    data_selector: issues
    params: {}
- name: database
  endpoint:
    path: /services/data/vXX.X/sobjects/Database
    method: POST
    data_selector: records
    params:
      DB_NAME: githubnode
      DB_USER: exalate
      DB_PASS: exalate
- name: githubnode
  endpoint:
    path: /services/data/vXX.X/sobjects/GitHubNode
    method: POST
    data_selector: records
    params:
      GITHUBNODE_PG_DB: githubnode?gssEncMode=disable
      GITHUBNODE_PG_USER: exalate
      GITHUBNODE_PG_PWD: exalate
      GITHUBNODE_PORT: '9002'
      NODE_SELF_URL: https://foo.com
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
    params: {}
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /services/data/vXX.X/sobjects/Database
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: comments
    params: {}
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: attachments
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
    params: {}
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /api/v1/user
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /rest/api/2/search
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: repositories
  endpoint:
    path: /user/repos
    method: GET
    data_selector: repositories
    params: {}
- name: issues
  endpoint:
    path: /repos/{owner}/{repo}/issues
    method: GET
    data_selector: issues
    params: {}
- name: worklogs
  endpoint:
    path: /api/worklogs
    method: GET
    data_selector: records
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /var/lib/postgresql/data
    method: POST
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: work_item
  endpoint:
    path: /api/workitems
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: comment
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /persist/db
    method: POST
    data_selector: records
- name: zendesknode
  endpoint:
    path: /opt/zendesknode/data
    method: POST
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    method: GET
- name: contact
  endpoint:
    method: GET
- name: user
  endpoint:
    path: /api/v1/user
    method: GET
    data_selector: data
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
    params: {}
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: issue
  endpoint:
    path: /rest/api/2/issue
    method: GET
    data_selector: issues
    params: {}
- name: issues
  endpoint:
    path: /rest/api/2/search
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sync_room
  endpoint:
    path: /api/sync_room
    method: GET
    data_selector: records
- name: user
  endpoint:
    path: /api/v1/user
    method: GET
    data_selector: data
    params: {}
- name: status
  endpoint:
    path: /api/v1/status
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /services/database
    method: POST
    data_selector: environment
    params:
      POSTGRES_PASSWORD: exalate
      DB_NAME: snownode
      DB_USER: exalate
      DB_PASS: exalate
- name: snownode
  endpoint:
    path: /services/snownode
    method: GET
    data_selector: environment
    params:
      SNOWNODE_PG_HOST: database
      SNOWNODE_PG_DB: snownode?gssEncMode=disable
      SNOWNODE_PG_USER: exalate
      SNOWNODE_PG_PWD: exalate
      SNOWNODE_PORT: '9000'
      NODE_SELF_URL: https://foo.com
- name: database
  endpoint:
    path: /services/data/vXX.X/sobjects/Database
    method: GET
    data_selector: records
    params: {}
- name: snownode
  endpoint:
    path: /services/data/vXX.X/sobjects/Snownode
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
- name: database
  endpoint:
    path: /services/data/vXX.X/sobjects/Database
    method: POST
    data_selector: records
    params:
      incremental: created_at
- name: snownode
  endpoint:
    path: /services/data/vXX.X/sobjects/SnowNode
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /rest/api/2/issue
    method: GET
    data_selector: issues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: comments
    params: {}
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: attachments
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: workLogs
  endpoint:
    path: /docs/addWorkLog
    method: POST
- name: comments
  endpoint:
    path: /docs/commentHelper
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sync_operations
  endpoint:
    path: /api/v1/sync_operations
    method: GET
    data_selector: operations
- name: configurations
  endpoint:
    path: /api/v1/configurations
    method: GET
    data_selector: configurations
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: database
  endpoint:
    path: /docker-entrypoint-initdb.d/init-user-db.sh
    method: POST
- name: salesforce
  endpoint:
    path: /salesforcenode/data
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: data
    params: {}
- name: create_issue_error
  endpoint:
    path: /docs/create-issue-error
    method: GET
    data_selector: null
    params: {}
- name: attachment_checksum_failed
  endpoint:
    path: /docs/attachment-checksum-failed
    method: GET
    data_selector: null
    params: {}
- name: attachment_error
  endpoint:
    path: /docs/attachment-error
    method: GET
    data_selector: null
    params: {}
- name: server_file_system_access_error
  endpoint:
    path: /docs/server-file-system-access-error
    method: GET
    data_selector: null
    params: {}
- name: error_updating_an_issue
  endpoint:
    path: /docs/error-updating-an-issue
    method: GET
    data_selector: null
    params: {}
- name: worklog_error
  endpoint:
    path: /docs/worklog-error
    method: GET
    data_selector: null
    params: {}
- name: project_key_is_invalid
  endpoint:
    path: /docs/project-key-is-invalid
    method: GET
    data_selector: null
    params: {}
- name: java_lang_errors_cause_exalate_synchronization_to_stop
  endpoint:
    path: /docs/javalangerrors-cause-exalate-synchronization-to-stop
    method: GET
    data_selector: null
    params: {}
- name: comment_cant_be_created_because_the_text_is_too_long
  endpoint:
    path: /docs/comment-cant-be-created-because-the-text-is-too-long
    method: GET
    data_selector: null
    params: {}
- name: general_ssle_engine_problem
  endpoint:
    path: /docs/general-sslengine-problem
    method: GET
    data_selector: null
    params: {}
- name: unhandled_hub_custom_field_value_conversion_exception_error
  endpoint:
    path: /docs/unhandledhubcustomfieldvalueconversionexception-error
    method: GET
    data_selector: null
    params: {}
- name: ambiguous_method_overloading_for_method_nodehelper_getissuetype
  endpoint:
    path: /docs/ambiguous-method-overloading-for-method-nodehelpergetissuetype
    method: GET
    data_selector: null
    params: {}
- name: connection_cant_be_renamed
  endpoint:
    path: /docs/connection-cant-be-renamed
    method: GET
    data_selector: null
    params: {}
- name: unblocking_the_required_fields_error
  endpoint:
    path: /docs/unblocking-required-fields-error
    method: GET
    data_selector: null
    params: {}
- name: invalid_license_key
  endpoint:
    path: /docs/invalid-license-key
    method: GET
    data_selector: null
    params: {}
- name: error_notifications_arent_sent_to_the_administrators
  endpoint:
    path: /docs/error-notifications-arent-sent-to-the-administrators
    method: GET
    data_selector: null
    params: {}
- name: filter_local_doesnt_filter_out_service_management_internal_comments
  endpoint:
    path: /docs/filterlocal-doesnt-filter-out-service-management-internal-comments
    method: GET
    data_selector: null
    params: {}
- name: cant_sync_attachments_between_jira_on_windows_server_and_hp_almqc
  endpoint:
    path: /docs/cant-sync-attachments-between-jira-on-windows-server-and-hp-alm/qc
    method: GET
    data_selector: null
    params: {}
- name: overlap_between_custom_fields_and_system_fields
  endpoint:
    path: /docs/overlap-between-custom-fields-and-system-fields
    method: GET
    data_selector: null
    params: {}
- name: workaround_on_updating_closed_issues_that_cant_be_edited
  endpoint:
    path: /docs/workaround-on-updating-closed-issues-that-cant-be-edited
    method: GET
    data_selector: null
    params: {}
- name: free_plan_license_errors
  endpoint:
    path: /docs/free-plan-license-errors
    method: GET
    data_selector: null
    params: {}
- name: cannot_sync_the_epic_name_field
  endpoint:
    path: /docs/cannot-sync-the-epic-name-field
    method: GET
    data_selector: null
    params: {}
- name: our_team_has_been_notified
  endpoint:
    path: /docs/our-team-has-been-notified
    method: GET
    data_selector: null
    params: {}
- name: issue_does_not_exist_or_you_do_not_have_permission_to_see_it
  endpoint:
    path: /docs/issue-does-not-exist-or-you-do-not-have-permission-to-see-it
    method: GET
    data_selector: null
    params: {}
- name: communication_with_an_instance_is_giving_a_network_error_after_upgrading_to_exalate_5_0
  endpoint:
    path: /docs/communication-with-an-instance-is-giving-a-network-error-after-upgrading-to-exalate-50
    method: GET
    data_selector: null
    params: {}
- name: updating_external_scripts_to_be_compatible_with_exalate_5_2_2_onwards
  endpoint:
    path: /docs/updating-external-scripts-to-be-compatible-with-exalate-522-onwards
    method: GET
    data_selector: null
    params: {}
- name: root_cause_sync_rules_scripts_errors
  endpoint:
    path: /docs/root-causing-sync-rules-script-errors
    method: GET
    data_selector: null
    params: {}
- name: this_mapping_is_not_supported
  endpoint:
    path: /docs/this-mapping-is-not-supported
    method: GET
    data_selector: null
    params: {}
- name: known_issue_exalate_isnt_displaying_correctly_in_ie_11
  endpoint:
    path: /docs/known-issue-exalate-isnt-displaying-correctly-in-ie-11
    method: GET
    data_selector: null
    params: {}
- name: known_issue_with_syncing_summary_longer_than_255_characters
  endpoint:
    path: /docs/known-issue-syncing-summary-longer-than-255-characters
    method: GET
    data_selector: null
    params: {}
- name: known_issue_permission_warnings_in_exalate_logs
  endpoint:
    path: /docs/known-issue-permission-warnings-in-exalate-logs
    method: GET
    data_selector: null
    params: {}
- name: known_issue_the_cancel_subscription_modal_displays_incorrect_number_of_issues_under_sync
  endpoint:
    path: /docs/known-issue-the-cancel-subscription-modal-displays-incorrect-number-of-issues-under-sync
    method: GET
    data_selector: null
    params: {}
- name: issues
  endpoint:
    path: /rest/api/3/search
    method: GET
    data_selector: issues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /rest/api/2/search
    method: GET
    data_selector: issues
    params:
      incremental: updated
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: work_logs
  endpoint:
    path: /api/worklogs
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /rest/api/2/issue
    method: GET
    data_selector: issues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sync_room
  endpoint:
    path: /api/sync_room
    method: GET
    data_selector: data
    params: {}
- name: User
  endpoint:
    path: /api/user
    method: GET
    data_selector: data
    params: {}
- name: Case
  endpoint:
    path: /api/case
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: work_log
  endpoint:
    path: /api/worklogs
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
- name: application
  endpoint:
    path: /etc/init.d/hpqcnode
    method: START
    data_selector: RUN_AS_USER
    params:
      DHPQCNODE_SYS_USER: root
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: data
    params: {}
- name: database
  endpoint:
    path: /psql
    method: POST
    data_selector: result
    params:
      DB_NAME: hpqcnode
      DB_USER: idalko
      DB_PASS: idalko
- name: hpqcnode
  endpoint:
    path: /opt/hpqcnode/data
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /docker-entrypoint-initdb.d/init-user-db.sh
    method: POST
    data_selector: records
    params: {}
- name: hpqcnode
  endpoint:
    path: /opt/hpqcnode/data
    method: GET
    data_selector: records
    params: {}
- name: postgresql
  endpoint:
    path: /postgresql
    method: POST
    data_selector: database
    params:
      DB_NAME: hpqcnode
      DB_USER: idalko
      DB_PASS: idalko
- name: exalate_hpqcnode
  endpoint:
    path: /hpqcnode
    method: POST
    data_selector: hpqcnode
    params: {}
- name: proxy_user
  endpoint:
    path: /proxy_user
    method: POST
    data_selector: user
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ServiceNow
  endpoint:
    path: /api/now/table
    method: GET
    data_selector: result
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: issues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /rest/api/2/issue
    method: GET
    data_selector: fields
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: connection
  endpoint:
    path: /connections
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sync_room
  endpoint:
    path: /api/sync_room
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: User
  endpoint:
    path: /api/user
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /api/v1/user
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: issues
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /api/v1/user
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /rest/api/3/search
    method: GET
    data_selector: issues
    params:
      incremental: updated
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: fields
    params: {}
- name: sync_operation
  endpoint:
    path: /api/sync_operation
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: User
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: User
  endpoint:
    path: /api/user
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /rest/api/2/search
    method: GET
    data_selector: issues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /rest/api/2/search
    method: GET
    data_selector: issues
    params: {}
- name: User
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: Comments
  endpoint:
    path: /api/v1/comments
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
- name: user
  endpoint:
    path: /api/v1/user
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
    params: {}
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v2/tickets
    method: GET
    data_selector: tickets
- name: contacts
  endpoint:
    path: /api/v2/contacts
    method: GET
    data_selector: contacts
- name: attachments
  endpoint:
    path: /docs/freshservice-fields-and-entities-available-for-synchronization
    method: GET
- name: comments
  endpoint:
    path: /docs/freshservice-fields-and-entities-available-for-synchronization
    method: GET
- name: priority
  endpoint:
    path: /docs/freshservice-fields-and-entities-available-for-synchronization
    method: GET
- name: status
  endpoint:
    path: /docs/freshservice-fields-and-entities-available-for-synchronization
    method: GET
- name: custom_fields
  endpoint:
    path: /docs/freshservice-fields-and-entities-available-for-synchronization
    method: GET
- name: rich_text
  endpoint:
    path: /docs/freshservice-fields-and-entities-available-for-synchronization
    method: GET
- name: inline_images
  endpoint:
    path: /docs/freshservice-fields-and-entities-available-for-synchronization
    method: GET
- name: tickets
  endpoint:
    path: /api/v2/tickets
    method: GET
    data_selector: tickets
    params: {}
- name: issues
  endpoint:
    path: /rest/api/3/search
    method: GET
    data_selector: issues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/v1/comments
    method: GET
    data_selector: comments
    params: {}
- name: attachments
  endpoint:
    path: /api/v1/attachments
    method: GET
    data_selector: attachments
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: syncPriorities
  endpoint:
    path: /rest/issuehub/4.0/config/feature.syncPriorities
    method: PUT
- name: syncPriorities
  endpoint:
    path: /rest/issuehub/4.0/config/feature.syncPriorities
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sync_operations
  endpoint:
    path: /api/sync
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /rest/api/2/search
    method: GET
    data_selector: issues
    params:
      jql: project = 'EXAMPLE'
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /rest/api/2/search
    method: GET
    data_selector: issues
    params:
      jql: project = MYPROJECT
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
    params: {}
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
    params: {}
- name: comments
  endpoint:
    path: /api/v1/comments
    method: GET
    data_selector: records
    params: {}
- name: attachments
  endpoint:
    path: /api/v1/attachments
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: example_resource
  endpoint:
    path: /api/example
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: issue
  endpoint:
    path: /rest/api/2/issue
    method: GET
    data_selector: issues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: workLogs
  endpoint:
    path: /workLogs
    method: GET
- name: comments
  endpoint:
    path: /comments
    method: GET
- name: testType
  endpoint:
    path: /testType
    method: GET
- name: testPlan
  endpoint:
    path: /testPlan
    method: GET
- name: status
  endpoint:
    path: /status
    method: GET
- name: priority
  endpoint:
    path: /priority
    method: GET
- name: options
  endpoint:
    path: /options
    method: GET
- name: userByUsername
  endpoint:
    path: /userByUsername
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: User
  endpoint:
    path: /api/user
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: issues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
    params: {}
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: User
  endpoint:
    path: /api/v1/user
    method: GET
    data_selector: data
- name: Issue
  endpoint:
    path: /api/v1/issue
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /rest/api/2/issue
    method: GET
    data_selector: issues
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: unexalate_operation
  endpoint:
    path: /api/unexalate
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: work_item
  endpoint:
    path: /api/v1/work_items
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
    params: {}
- name: sprint
  endpoint:
    path: /sprints
    method: POST
    data_selector: replica
    params: {}
- name: issue
  endpoint:
    path: /issues
    method: POST
    data_selector: replica
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /api/issues
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
    params:
      incremental: updated_at
- name: comments
  endpoint:
    path: /comments
    method: GET
    data_selector: comments
    params: {}
- name: issue
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
- name: Script Listener
  endpoint:
    path: /rest/api/2/event
    method: POST
    data_selector: event
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: custom_fields
  endpoint:
    path: /rest/api/2/customFields
    method: GET
    data_selector: customFields
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Product Choices
  endpoint:
    path: /customFields/Product Choices
    method: GET
    data_selector: value
    params: {}
- name: issue
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
- name: comment
  endpoint:
    path: /api/v1/comments
    method: GET
    data_selector: comments
- name: comments
  endpoint:
    path: /rest/api/2/issue/{issueIdOrKey}/comment
    method: GET
    data_selector: comments
    params: {}
- name: issues
  endpoint:
    path: /rest/api/2/issue
    method: GET
    data_selector: issues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
    params: {}
- name: cascading_select
  endpoint:
    path: /customFields/Cascading select
    method: GET
    data_selector: customFields
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Group Picker
  endpoint:
    path: /rest/api/3/groupuserpicker
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: customFields
  endpoint:
    path: /customFields
    method: GET
    data_selector: customFields
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: components
  endpoint:
    path: /api/components
    method: POST
    data_selector: components
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue_labels
  endpoint:
    path: /sync/issue/labels
    method: POST
    data_selector: replica.labels
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
- name: comment
  endpoint:
    path: /api/v1/comments
    method: GET
    data_selector: comments
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: epics
  endpoint:
    path: /docs/how-to-sync-epics-in-jira-on-premise
    method: GET
    data_selector: records
- name: sprints
  endpoint:
    path: /docs/jira-on-premise-d0267c9-how-to-sync-sprints
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /api/issues
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assignee
  endpoint:
    path: /assignee
    method: GET
    data_selector: properties
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
    params: {}
- name: watchers
  endpoint:
    path: /watchers
    method: GET
    data_selector: watchers
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
    params: {}
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
    params: {}
- name: select_list_to_text_custom_field
  endpoint:
    path: /sync/select-list-to-text-custom-field
    method: POST
    data_selector: replica.customKeys
    params: {}
- name: text_custom_field_to_select_list
  endpoint:
    path: /sync/text-custom-field-to-select-list
    method: POST
    data_selector: replica.customKeys
    params: {}
- name: comments
  endpoint:
    path: /services/data/vXX.X/comments
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /services/data/v1/issues
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: versions
  endpoint:
    path: /versions
    method: GET
    data_selector: versions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: GET
- name: comments
  endpoint:
    path: /comments
    method: GET
- name: custom_fields
  endpoint:
    path: /custom_fields
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /rest/api/3/issue/{issueKey}
    method: GET
    data_selector: fields.subtasks
- name: transitions
  endpoint:
    path: /rest/api/2/issue/transitions
    method: POST
    data_selector: transition
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
- name: comments
  endpoint:
    path: /api/v1/comments
    method: GET
    data_selector: comments
- name: References
  endpoint:
    path: /docs/search?phrase=:custom+fields
    method: POST
    data_selector: issue.customFields."References".value
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: outgoing_sync
  endpoint:
    path: /outgoing_sync
    method: POST
    data_selector: issue
    params: {}
- name: incoming_sync
  endpoint:
    path: /incoming_sync
    method: POST
    data_selector: issue
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: issues
- name: project
  endpoint:
    path: /rest/api/3/project
    method: GET
    data_selector: projects
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sprint
  endpoint:
    path: /sprints
    method: GET
    data_selector: sprints
- name: issue
  endpoint:
    path: /issues
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /rest/api/2/issue
    method: GET
    data_selector: issues
    params: {}
- name: project
  endpoint:
    path: /rest/api/2/project
    method: GET
    data_selector: projects
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sync_ranks
  endpoint:
    path: /sync/ranks
    method: POST
    data_selector: result
    params: {}
- name: issue
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /api/issues
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
    params: {}
- name: comment
  endpoint:
    path: /help/addcomment
    method: POST
    data_selector: comments
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: project_mapping
  endpoint:
    path: /docs/how-to-sync-cascading-select-custom-fields-in-jira-on-premise
    method: GET
    data_selector: projectMapping
- name: issue
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: issues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: select_list_to_text_custom_field
  endpoint:
    path: /sync/select-list-to-text-custom-field
    method: POST
    data_selector: data
    params: {}
- name: text_custom_field_to_select_list
  endpoint:
    path: /sync/text-custom-field-to-select-list
    method: POST
    data_selector: data
    params: {}
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
- name: sync_room
  endpoint:
    path: /api/sync_room
    method: GET
    data_selector: data
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: label_custom_field
  endpoint:
    path: /sync/customFields/label-cust1
    method: GET
    data_selector: customFields.label-cust1
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
    params:
      incremental: updated_at
- name: custom_fields
  endpoint:
    path: /sync/custom_fields
    method: POST
    data_selector: replica.customKeys
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: SyncRoom
  endpoint:
    path: /syncroom
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /api/issues
    method: GET
    data_selector: data
    params: {}
- name: Cascading select
  endpoint:
    path: /sync/cascading-select
    method: GET
    data_selector: replica.customFields
    params: {}
- name: group_picker_single
  endpoint:
    path: /sync/group-picker/single
    method: POST
    data_selector: replica.customFields
    params: {}
- name: group_picker_multiple
  endpoint:
    path: /sync/group-picker/multiple
    method: POST
    data_selector: replica.customFields
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sync_status
  endpoint:
    path: /api/sync/status
    method: GET
    data_selector: data
    params: {}
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/v1/comments
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /api/v1/attachments
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
- name: components
  endpoint:
    path: /sync/components
    method: POST
    data_selector: issue.components
- name: assign_synced_issue
  endpoint:
    path: /assign/synced_issue
    method: POST
    data_selector: issue.assignee
- name: sync_operation
  endpoint:
    path: /api/sync
    method: POST
    data_selector: results
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue_labels
  endpoint:
    path: /sync/issue_labels
    method: POST
    data_selector: labels
    params: {}
- name: priority
  endpoint:
    path: /sync/priority
    method: POST
    data_selector: replica.priority
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: time_tracking
  endpoint:
    path: /sync/time-tracking
    method: POST
    data_selector: replica
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: securityLevel
  endpoint:
    path: /api/securityLevel
    method: GET
    data_selector: securityLevels
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: worklogs
  endpoint:
    path: /worklogs
    method: POST
    data_selector: workLogs
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue_sync
  endpoint:
    path: /exalate/issue/sync
    method: POST
    data_selector: result
    params: {}
- name: bulk_exalate
  endpoint:
    path: /exalate/bulk/sync
    method: POST
    data_selector: result
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /api/issues
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: issue
  endpoint:
    path: /rest/api/2/issue
    method: GET
    data_selector: fields
    params: {}
- name: issue
  endpoint:
    path: /rest/api/2/issue
    method: GET
    data_selector: issues
- name: project
  endpoint:
    path: /rest/api/2/project
    method: GET
    data_selector: projects
- name: sync_operations
  endpoint:
    path: /sync/operations
    method: GET
    data_selector: records
- name: bulk_operations
  endpoint:
    path: /bulk/operations
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: change_history
  endpoint:
    path: /issue/changeHistory
    method: GET
    data_selector: changeHistory
    params: {}
- name: issues
  endpoint:
    path: /api/issues
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
- name: watchers
  endpoint:
    path: /watchers
    method: POST
    data_selector: issue.watchers
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: issue
  endpoint:
    path: /rest/api/2/issue
    method: GET
    data_selector: issues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sync_operations
  endpoint:
    path: /sync/operations
    method: GET
    data_selector: operations
- name: bulk_operations
  endpoint:
    path: /bulk/operations
    method: GET
    data_selector: bulkOperations
- name: SyncRoom
  endpoint:
    path: /syncroom
    method: GET
    data_selector: participants
    params: {}
- name: request_participants
  endpoint:
    path: /api/request_participants
    method: GET
    data_selector: value
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: issues
- name: fix_versions
  endpoint:
    path: /sync/fixVersions
    method: POST
    data_selector: versions
    params: {}
- name: affected_versions
  endpoint:
    path: /sync/affectedVersions
    method: POST
    data_selector: versions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /sync/issue
    method: POST
    data_selector: issue
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sync_operations
  endpoint:
    path: /api/sync_operations
    method: GET
    data_selector: records
- name: bulk_operations
  endpoint:
    path: /api/bulk_operations
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
    params:
      incremental: updated_at
- name: issues
  endpoint:
    path: /api/issues
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: data
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
    params: {}
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /api/issues
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: replica.attachments
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Area Path
  endpoint:
    path: /area-path
    method: POST
    data_selector: areaPath
- name: Iteration Path
  endpoint:
    path: /iteration-path
    method: POST
    data_selector: iterationPath
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: customfield_export
  endpoint:
    path: /{issueKey}/{customFieldId}/EXPORT
    method: GET
    data_selector: displays
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: work_item_fields
  endpoint:
    path: /_apis/wit/workfields
    method: GET
    data_selector: value
    params: {}
- name: fields
  endpoint:
    path: /_apis/wit/fields
    method: GET
    data_selector: fields
    params:
      api-version: '6.0'
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /rest/api/2/search
    method: GET
    data_selector: issues
    params: {}
- name: sync_epics
  endpoint:
    path: /sync/epics
    method: POST
    data_selector: syncData
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /var/lib/postgresql/data
    method: POST
    data_selector: data
    params:
      DB_NAME: snownode
      DB_USER: idalko
      DB_PASS: idalko
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/v1/comments
    method: GET
    data_selector: records
    params: {}
- name: attachments
  endpoint:
    path: /api/v1/attachments
    method: GET
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /services/data/vXX.X/sobjects/Database
    method: POST
    data_selector: records
    params:
      DB_NAME: snownode
      DB_USER: idalko
      DB_PASS: idalko
- name: comments
  endpoint:
    path: /api/v1/comments
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /api/v1/attachments
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: table_access
  endpoint:
    path: /api/now/v2/table/<tablename>
    method: GET
- name: import_set
  endpoint:
    path: /api/now/import/<stagingTableName>
    method: GET
- name: user_role_inheritance
  endpoint:
    path: /api/global/user_role_inheritance
    method: GET
- name: journal_field
  endpoint:
    path: /api/now/v2/table/sys_journal_field
    method: GET
- name: attachment_file
  endpoint:
    path: /api/now/v1/attachment/file
    method: GET
- name: sys_attachment
  endpoint:
    path: /api/now/v2/table/sys_attachment
    method: GET
- name: sys_user
  endpoint:
    path: /api/now/v2/table/sys_user
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sys_user
  endpoint:
    path: /api/now/v2/table/sys_user
    method: GET
    data_selector: result
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Case
  endpoint:
    path: /api/now/table/case
    method: GET
    data_selector: result
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
    params:
      incremental: updated_at
- name: change_request
  endpoint:
    path: /api/now/table/change_request
    method: GET
    data_selector: result
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: problem
  endpoint:
    path: /api/now/table/problem
    method: GET
    data_selector: result
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: incident
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: customerCase
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: problem
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: changeRequest
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: requested_item
  endpoint:
    path: /sc_req_item
    method: GET
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Catalog Task
  endpoint:
    path: /services/data/vXX.X/sobjects/CatalogTask
    method: POST
    data_selector: catalogTask
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /rest/api/3/search
    method: GET
    data_selector: issues
    params:
      incremental: updated
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: attachments
  endpoint:
    path: /api/now/attachment
    method: GET
    data_selector: result
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: comments
    params: {}
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: attachments
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: epic
  endpoint:
    path: /api/now/table/epic
    method: POST
    data_selector: result
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /rest/api/2/issue
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: incident
  endpoint:
    path: /incident
    method: GET
    data_selector: records
    params: {}
- name: cmdb_ci_business_app
  endpoint:
    path: /cmdb_ci_business_app
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: import_set
  endpoint:
    path: /service_now/import_set
    method: POST
    data_selector: data
    params:
      coalesce: sys_id
- name: issue
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: fields
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /var/lib/postgresql/data
    method: POST
    data_selector: records
    params:
      DB_NAME: snownode
      DB_USER: idalko
      DB_PASS: idalko
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /services/data/vXX.X/sobjects/Database
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: database
  endpoint:
    path: /var/lib/postgresql/data
    method: GET
    data_selector: records
    params: {}
- name: unidirectional_sync_service_desk
  endpoint:
    path: /api/unidirectional_sync_service_desk
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: comments
  endpoint:
    path: /api/v2/comments
    method: GET
    data_selector: comments
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /comments
    method: POST
    data_selector: comments
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: incoming_comments
  endpoint:
    path: /api/v1/comments
    method: POST
    data_selector: comments
    params: {}
- name: issues
  endpoint:
    path: /rest/api/3/search
    method: GET
    data_selector: issues
    params:
      incremental: updated
- name: issues
  endpoint:
    path: /rest/api/2/issue
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: jira_issue
  endpoint:
    path: /api/v1/jira/issues
    method: GET
    data_selector: issues
    params:
      incremental: updated_at
- name: service_now_incident
  endpoint:
    path: /api/v1/servicenow/incidents
    method: GET
    data_selector: incidents
    params: {}
- name: issue
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: issues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: comments
    params: {}
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: attachments
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ticket_user_fields
  endpoint:
    path: /api/v2/tickets
    method: GET
    data_selector: tickets
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /rest/api/2/issue
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
    params: {}
- name: issue
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: issues
- name: project
  endpoint:
    path: /rest/api/3/project
    method: GET
    data_selector: projects
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: comments
  endpoint:
    path: /comments
    method: GET
    data_selector: comments
    params: {}
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue_labels
  endpoint:
    path: /issues/labels
    method: GET
    data_selector: labels
    params: {}
- name: epics
  endpoint:
    path: /rest/api/2/epic
    method: GET
    data_selector: issues
- name: sprints
  endpoint:
    path: /rest/agile/1.0/sprint
    method: GET
    data_selector: values
- name: comments
  endpoint:
    path: /rest/api/2/issue/{issueIdOrKey}/comment
    method: GET
    data_selector: comments
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: customfield_export
  endpoint:
    path: /${issueKey}/${customFieldId}/EXPORT
    method: GET
    data_selector: displays
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Case
  endpoint:
    path: /services/data/vXX.X/sobjects/Case
    method: GET
    data_selector: records
    params: {}
- name: Task
  endpoint:
    path: /services/data/vXX.X/sobjects/Task
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: issues
  endpoint:
    path: /rest/api/2/search
    method: GET
    data_selector: issues
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: epics
  endpoint:
    path: /rest/api/2/epics
    method: GET
    data_selector: records
- name: sprints
  endpoint:
    path: /rest/api/2/sprints
    method: GET
    data_selector: records
- name: comments
  endpoint:
    path: /rest/api/2/comments
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issues
  endpoint:
    path: /api/issues
    method: GET
    data_selector: records
- name: comments
  endpoint:
    path: /api/comments
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: replica.attachments
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /api/issues
    method: GET
    data_selector: issues
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Freshdesk
  endpoint:
    path: /docs/how-to-install-exalate-for-freshdesk
    method: GET
- name: Freshservice
  endpoint:
    path: /docs/how-to-install-exalate-for-freshservice
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /rest/api/3/issue
    method: GET
    data_selector: issues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ticket_fields
  endpoint:
    path: /api/v2/ticket_fields
    method: GET
    data_selector: fields
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Freshdesk
  endpoint:
    path: /docs/how-to-install-exalate-for-freshdesk
    method: GET
- name: Freshservice
  endpoint:
    path: /docs/how-to-install-exalate-for-freshservice
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in JIRA
- Ensure proper OAuth setup before using the API
- Uses OAuth2 authentication — requires setup of connected app in Exalate
- Requires setup of connected app in Exalate
- Exalate supports many out-of-the-box entities for different platforms like Jira,
  Zendesk, Azure DevOps, ServiceNow, etc.
- In addition to this, it also comes with an advanced intuitive scripting engine that
  allows users to write Groovy scripts for synchronizing almost any kind of information.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in Jira
- Some endpoints may have rate limiting
- Requires setting up an OAuth 2.0 integration in Jira Cloud.
- Requires setup of OAuth2 with Atlassian developer console.
- Uses OAuth2 with refresh token — requires setup of connected app in Exalate
- Some objects may return nulls in deeply nested fields
- OAuth2 authentication is required for accessing the Jira API
- Ensure that your instance URL is correctly formatted
- Ensure that the application link is properly configured in Jira Cloud.
- Requires OAuth setup in Atlassian developer console
- Requires OAuth setup in Atlassian Developer Console
- Requires user permission for API access
- Rate limiting applied to API requests
- We are moving Exalate for HP QC/ALM into basic maintenance mode. This transition
  period will last until November 2024, after which support will be halted completely.
- Local connection is not supported on Azure DevOps and GitHub.
- Ensure that the API keys are securely stored in your secrets management system.
- Rate limits apply; please check the documentation for details.
- Ensure that all required fields are mapped correctly during synchronization.
- Check for rate limiting on API calls.
- Uses OAuth2 for authentication
- The look and feel may show some differences depending on the work management system,
  but the options remain essentially the same.
- The delegated admin user must fulfil the requirements of being a member of the exalate_console_admin
  group and a project admin.
- Some endpoints may have rate limits.
- Data returned may vary based on user permissions.
- Some objects may return nulls in deeply nested fields.
- Ensure proper permissions are set for API access.
- 'The delegated admin user must fulfil the following requirements: be a member of
  the exalate_console_admin group, be a project admin.'
- For Jira On-Premise the delegated admin user does not have to be a project admin.
- Delegated admins can only access Exalate through the Project Settings of the projects
  where they are admins.
- Exalate does not support installation on AWS environments, including AWS Elastic
  Container Service (ECS).
- At least 4GB of memory required.
- A dual-core CPU, sufficient for syncing ~ 200 transactions per hour.
- The minimal required Disk Space = (The application itself weighs less than 100 MB)
  + Java install (~200Mb) + Postgres Install (~200MB) + application data size.
- One synced issue (with default sync rules) takes a couple of KBytes in the database
  for the duration of the transaction.
- 'The average disk space used: 762MB (application install+java+configuration) + 264MB
  (database) + 98MB (data).'
- The DB_NAME and JCLOUDNODE_PG_DB must match to start the db correctly.
- For unencrypted connections from Exalate to a Postgres version 10 or higher, disable
  gssEncMode.
- Ensure JCLOUDNODE_PG_DB and DB_NAME match to start the db correctly.
- For unencrypted connections to Postgres 10 or higher, disable gssEncMode.
- API may have rate limits that could affect data synchronization.
- Ensure proper authentication setup before making API calls.
- Exalate version has a lifespan of 2 years. This is to ensure backward compatibility
  over the whole platform.
- Ensure that a correct database is setup using a createdb.sh.
- We provide a free evaluation period of 30 days. The evaluation period can be extended
  twice until 90 days.
- By default, the proxy user is the user who installs Exalate.
- The user installing Exalate must not have an 'inherited' access to PCA, but MUST
  instead be directly part of PCA group.
- Exalate installs a Sync Panel to all Azure DevOps processes by default.
- Exalate provides synchronization between different issue trackers.
- The - AZURENODE_PG_DB= and - DB_NAME= must match in order to start the db correctly.
- 'Known Issue: Exalate isn''t Displaying Correctly in IE 11'
- 'Known Issue: With Syncing Summary Longer Than 255 Characters'
- 'Known issue: permission warnings in Exalate logs'
- 'Known Issue: The ''Cancel Subscription'' modal displays incorrect amount of issues
  under sync'
- Use OAuth2 for authentication.
- Rate limits may apply.
- Some fields may return nulls in deeply nested structures
- Ensure that the volumes are included in your backup strategy.
- Ensure that the API token is generated for the user accessing Jira.
- Make sure that the user generating the PAT belongs to the Project Collection Administrators
  group.
- Set the longest expiration period for the token to keep it valid for as long as
  possible.
- Without the Member Entitlement Management scope, Exalate is not able to sync work
  items.
- Exalate requires a connected app setup for OAuth2 authentication.
- To install Exalate, you need to be an organization owner or have admin permissions
  in a repository.
- The user account that wishes to access the Exalate dashboard needs to have organization
  visibility set to Public.
- By default, Exalate is installed on the account that is currently logged in.
- Ensure OAuth consumer is correctly set up in Jira
- Some fields may not sync due to permission settings
- The - GITNODE_PG_DB= and - DB_NAME= must match in order to start the db correctly.
- 'Note: the - GITHUBNODE_PG_DB= and - DB_NAME= must match in order to start the db
  correctly.'
- 'Ensure that the volumes are included in your backup strategy: persist'
- The application requires setup of connected app in API
- Ensure to configure the OAuth2 app correctly before usage.
- Rate limits may apply based on the API usage.
- If you lost the URL of your Exalate app for GitHub, follow [this link](https://connect.exalate.net/github/find)
  to recover it.
- Requires proper setup of OAuth for access.
- Some fields may not sync correctly due to API limitations.
- OAuth2 with refresh token is required to access user repositories.
- Some API calls may have rate limits
- Make sure to handle API rate limits carefully.
- Check for required permissions on user roles.
- Exalate requires a dedicated Zendesk admin as a proxy user.
- You can also change the Proxy user in Zendesk if required.
- The - ZENDESKNODE_PG_DB= and - DB_NAME= must match in order to start the db correctly.
- Some objects like Comment may return nulls in deeply nested fields
- The ZENDESKNODE_PG_DB and DB_NAME must match in order to start the db correctly.
- Exalate 5.6.0 and above validates the origin header.
- Ensure that a correct database is setup using a createdb.sh
- 'The file must be executable (you can use the command: chmod +x createdb.sh to make
  the file executable)'
- The Exalate version has a lifespan of 2 years. This is to ensure backward compatibility
  over the whole platform.
- Exalate requires a dedicated Zendesk admin as a Proxy user.
- Requires setup of connected app in api
- Ensure proper OAuth2 setup for Exalate to work correctly.
- Some API calls may require specific scopes to be granted.
- Dev environments cannot install applications from the ServiceNow store.
- To access the bridge app on dev environments, follow the steps to deploy the Exalate
  bridge using an XML-based update set.
- Make sure to set 'Web service access only'.
- Uses OAuth2 with refresh token — requires setup of connected app in jira
- Ensure the OAuth app is configured correctly in Jira.
- Ensure the connected app is properly configured for OAuth2 authentication.
- 'Note: the - SNOWNODE_PG_DB= and - DB_NAME= must match in order to start the db
  correctly.'
- Exalate uses OAuth2 with refresh token — requires setup of connected app.
- Ensure that the volumes are included in your backup strategy
- Requires OAuth2 setup in Atlassian Developer Console
- Exalate auto-renews the access token whenever the application lifespan expires.
  The lifespan is expressed in seconds, 7200 seconds is 2 hours.
- This authentication can be used as long as the refresh token is valid. You can generate
  a new refresh token following the setup steps once it is expired.
- OAuth2 token management is required for API access.
- Some objects like comments may return nulls in deeply nested fields
- The Proxy user is the ServiceNow user who carries out the synchronization between
  the Exalate node and the ServiceNow instance.
- 'The minimum permissions required for the Proxy user are: import_set_loader, import_transformer,
  import_scheduler, snc_platform_rest_api_access.'
- The best approach is to create a new role and add the above permissions to that
  role.
- Make sure that along with these basic roles, the Proxy user is also a member of
  ITIL or similar.
- To allow you to add comments to incidents (or whatever entity you want to sync),
  add 3 ACLs (create, read, write) on sys_journal_field to the Exalate role.
- The Proxy user can be used to log in to the Exalate console.
- 'Exalate is a java based application using standard java: the keystore can be found
  in the current location of the cacerts path (images with a version < 5.1.0)'
- location can change without notice but probably will not as it is pretty standard
- Requires setup of connected app in HP ALM/QC
- Exalate is coming as a docker image and can be deployed using a docker-compose
- Some fields may return nulls in nested structures.
- It can be that a password is requested - the default is 'changeit'
- For Professional Edition organizations, all requests for API access must be purchased
  according to Salesforce guidelines.
- Editions without API Access like Group Edition and Essentials Edition are not supported
  at the moment.
- The - SALESFORCENODE_PG_DB= and - DB_NAME= must match in order to start the db correctly.
- 'Note: the - SALESFORCENODE_PG_DB= and - DB_NAME=must match in order to start the
  db correctly.'
- To complete the app Oauth registration flow with Salesforce is required that your
  container's Fully Qualified Domain Name (NODE_SELF_URL specified in the docker-compose
  file) has a A+ rating on https://www.ssllabs.com/ssltest/analyze.html.
- To manage SSL termination in our experience the simplest way is using the jwilder/nginx-proxy
  approach.
- Rate Limit limitations for Freshservice
- Custom Keys may be needed for specific configurations
- Requires configuration of connected app in Exalate
- You need to remove the sync panel from every object where it has been previously
  added.
- When installing Salesforce from the AppExchange marketplace you can choose whether
  to install the app for all the users, admins only, or some specific profiles.
- If you later change your mind, you can grant permissions to specific user profiles
  to use Exalate.
- Integration supports OAuth2 authentication.
- Ensure to set up a connected app for OAuth2 authentication.
- OAuth2 authentication is required for accessing JIRA API.
- Ensure correct permissions are set for the API user.
- OAuth2 with refresh token is required for authentication.
- Ensure that the connected app is properly set up in Exalate.
- When refreshing a Salesforce sandbox, it is crucial to ensure that the Exalate application
  remains operational.
- After a refresh, users have to provide the app credentials (Consumer Key and Consumer
  Secret); otherwise, Exalate will not operate.
- This security measure prevents production data leakage.
- There's no need to reinstall Exalate or create a new connected app post-refresh.
- The security review is ongoing, so the App is not yet published on the AppExchange.
- This document provides a series of steps to install version 2 of the Exalate Bridge
  App.
- Exalate uses OAuth2 for authentication
- Ensure proper configuration of the application for successful API calls
- Ensure the proper setup of connected app in Exalate for OAuth2.
- Be aware of possible null values in nested fields during extraction.
- Attachments aren't synced to Task
- Comments cannot be synced when feed tracking is not enabled
- Impersonation of comments
- Sync action Reply to Comments is not currently supported
- It is not possible to use Textarea fields for a search query when creating a trigger
- Some objects may have limitations in data returned
- Exalate for HP ALM/QC supports HP ALM v. 11.05 - 12.55. Starting from version 5.0.11,
  Exalate supports HP ALM/QC version 15.0.
- You need to have Exalate for HPQC version 5.0 and higher
- For versions lower than 5.0, please deploy Oracle Java version 1.8
- Requires proper authentication setup to access the API.
- Ensure to handle rate limits appropriately.
- All environment variables are optional.
- Make sure that the remote side knows that you're stopping synchronization and are
  ready to handle synchronization errors.
- Ensure that the database server comes up when the server is booted.
- A proxy user is a Freshdesk account responsible for accessing the information stored
  on your instance.
- A proxy user is a Freshservice account that is responsible for accessing the information
  stored on your instance and applying any incoming changes.
- Requires setup of connected app in Jira
- Some fields may return null values
- Your instance must be public.
- You must be in the Evaluation (trial) period or have a Paid license.
- Requires setup of connected app in Jira.
- Requires setup of an OAuth consumer in Jira
- Ensure to handle rate limiting as per API guidelines
- Requires setup of OAuth in Jira
- Some fields may not sync correctly if not configured properly
- Some fields may not sync correctly due to API limitations
- Connections in Basic mode have a set of Sync Rules, generated by Exalate.
- 'With a Basic connection, you can sync a basic set of work item data: summary, description,
  comments, attachments, and work item types.'
- All comments are synced as public comments.
- You cannot modify Sync Rules in Basic Mode.
- To accept the Connection invitation you need an Invitation Code.
- The Invitation Code includes pre-populated Connection details such as Connection
  name, instance short names, and Destination instance URL.
- 'Known issue: Exalate isn''t Displaying Correctly in IE 11'
- OAuth2 authentication is required for access.
- Ensure that the client has the necessary permissions.
- OAuth2 with refresh token is required for Exalate integration.
- Ensure that the client ID and secret are correctly set up in the dlt secrets.
- You need either an Evaluation (trial) period or a Paid license.
- Ensure that the OAuth application is properly configured in Atlassian.
- You must be either in the Evaluation (trial) period or have a Paid license.
- Ensure proper OAuth setup in Jira.
- Check for permission issues when syncing.
- Some endpoints may require additional permissions or scopes.
- We are moving Exalate for HP QC/ALM into basic maintenance mode. This transition
  period lasts until June 2024, after which support will be halted completely.
- The connection name is limited to 255 characters.
- OAuth2 authentication required.
- Requires a valid OAuth setup including a consumer key and public key.
- Your instance is public.
- You are either in the Evaluation (trial) period or have a Paid license.
- This API requires authentication using OAuth2.
- Ensure the API token is valid and has the required scopes.
- Outgoing sync and Incoming sync scripts are generated by default once the connection
  has been set up.
- Outgoing sync and Incoming sync scripts are platform specific.
- Ensure the Jira API is enabled in your instance settings.
- Projects are not applicable to Zendesk in which case only the Filter Entities screen
  is visible.
- Uses OAuth2 for authentication.
- Make sure to set the correct OAuth scopes for accessing issues.
- OAuth2 authentication is required for accessing the API.
- Outgoing sync and Incoming sync are platform specific.
- Changes in existing connections are not applied until you update the entity.
- Currently, it is not possible to create a trigger using a query with text area fields.
- The Freshdesk API only allows one filter value at a time.
- Some entities may return null values in nested fields
- To start the synchronization, you need to Bulk Exalate on the trigger.
- To stop the synchronization, you need to Bulk Unexalate the trigger.
- Use snake_case for custom field names.
- API supports pagination through 'next_page' and 'previous_page' links
- In the Freshdesk connector the triggers are executed by a scheduler rather than
  in real-time.
- Requires setup of an OAuth 2.0 (3LO) application in Atlassian developer console
- API supports syncing across multiple platforms.
- The option is enabled by default in Exalate for Jira on-premise starting from version
  5.3.0.
- To make sure that the Sync Transaction Prioritization works properly, the latest
  version of Exalate should be installed on both sides.
- Requires OAuth2 setup for token management
- Requires setup of an OAuth consumer in Jira.
- Ensure that you have the correct scopes enabled.
- Some API calls may have limitations based on user permissions
- Before doing any bulk operation it is recommended to validate the configuration.
- You can test it by syncing one issue before you do Bulk Exalate to make sure the
  configuration works as expected.
- Bulk Exalate syncs all un-synced entities matching the trigger search query and
  checks if the already synced entities need to send an update.
- Integration requires Jira API access.
- Make sure to set up OAuth credentials in your Jira instance.
- Starting from Exalate for Github version 5.4.0 the .csv file requires the issue
  key that contains the full repo name.
- Exalate generates the file automatically each time you do a clean-up by connection.
- Uses OAuth2 with refresh token — requires setup of connected app in HP ALM/QC
- OAuth2 with refresh token requires setup of connected app in Exalate
- The Exalate app provides a Sync Queue utility to monitor outgoing and incoming synchronization
  messages that are in progress.
- The tool stores data related to the synchronization that is under processing.
- You can track attachment synchronization separately.
- The Sync Queue can be filtered by Connection name or a particular Local or Remote
  entity ID.
- The Outgoing sync tab displays outgoing synchronization events queued in the In
  progress status.
- The Incoming sync tab displays incoming synchronization requests queued in the In
  progress status.
- Some API endpoints may have rate limits.
- Ensure proper configuration to avoid sync issues.
- Rate limits may apply depending on usage.
- Exalate generates the issue mapping .csv file automatically after you clean-up a
  connection. The file is located in **{$JIRA_HOME}/exports/**directory.
- 'Mapping filename template: connect-${"ISSUE" or "RELATION" or "INSTANCE"}-${ $issueKey
  or $connectionName }-${ $currentDateTime.format("yyyyMMdd_HHmmss") }.csv'
- Requires setup of OAuth in your Atlassian account
- Unexalate operation must be enabled in General Settings.
- Unexalate operation is available only if the issue was synchronized before!
- Uses OAuth2 with refresh token
- Some objects like work_item may return nulls in deeply nested fields
- Epics can only be synced for company-managed projects in Jira.
- The script works only when using scripting rules on Jira Cloud. It's not compatible
  with Exalate Visual mode.
- 'Important: You should separately synchronize all issues that are linked to a specific
  issue to keep an association between them on the Destination side.'
- In Basic connections, all public and private comments are synced as public.
- It is not possible to impersonate comments in Basic connections.
- Requires installation of Script Runner plugin for Jira
- Custom listener script must be written in Groovy
- Requires OAuth2 authentication setup in Exalate.
- This method overrides all the existing labels in the custom field.
- Whenever using the Visual Mode, it is not possible to set the Request type on a
  Jira Service Management project.
- To be able to set the customField request type to a certain value - make sure that
  the ticket is created with the corresponding issue typ.
- Ensure OAuth2 is correctly configured in Exalate.
- The custom field name/options and issue type options are provided only for demonstration
  purposes.
- The new version of the Elements Connect custom field (v5.13.0) does not accept an
  array of ids as a value. You must convert ids to values.
- If you sync the components with Jira Server, you need to map the remote component
  lead email to the local component lead email.
- GitHub allows to include spaces in the labels, while it's impossible to have ones
  in Jira.
- Azure DevOps uses the semicolon (;) as the tag separator.
- Setting the time spent in Jira Cloud directly is not supported, it needs to be set
  through worklogs.
- The example below works only for connections in Scripting mode.
- Ensure OAuth2 is set up correctly in Exalate.
- According to the Atlassian changes in user privacy policy, Jira Cloud user may hide
  the email address visibility in the Atlassian account settings. This affects worklog
  synchronization since Exalate uses API to search by email.
- Jira on-premise and Jira Cloud use different nodeHelper methods for user sync.
- Some fields may have restrictions on synchronization
- Updating watchers on Jira Cloud does not trigger Exalate synchronization event.
- The change history item cannot be updated on the Jira Cloud side.
- Exalate allows sending change history info from Jira Cloud to other instances but
  not updating it on the Jira Cloud instance.
- Exalate provides a way to create versions from the scripts to handle this situation.
- Add-on allows integration of external information into the context of an issue
- Requires lookup of values in the same way as Elements Connect does
- 'Known Issue: Salesforce Installation Problems'
- Known Product Limitations
- Ensure to configure OAuth2 settings in the Exalate application.
- OAuth2 setup is required for authentication
- Rate limits apply to API calls
- References is the name of the custom field, you've created in the first step. You
  can change it to any custom name.
- OAuth2 authentication is required for accessing Jira API.
- 'The maximum attachment size that you can synchronize depends on a couple of factors:
  the attachment size limit on both instances and instance HTTP/HTTPS connection timeouts.'
- We've tested the synchronization of attachments with the size up to 1 GB, which
  worked without any issues, bigger attachments should not be a problem either.
- Requires Exalate for Jira Server/DataCenter version 4.5.1 or higher
- The script works only when using scripting rules on Jira On-premise. It's not compatible
  with Exalate Visual mode.
- Sprint synchronization in Jira on-premise is available only for connections in Script
  mode.
- Uses OAuth2 with refresh token — requires setup of an Atlassian application
- Some projects may have custom fields that are not documented
- By using this approach, the slave board shows the stories in the priority as determined
  on the master
- Another board can still be used to prioritize the stories on the slave.
- merge local and received comments (this is a default behavior)
- filter comments
- format received comments
- Exalate allows handing comments visibility based on a user group or role restriction.
- Requires OAuth 2.0 setup in Atlassian Developer Console
- Use PRODX as a default if no mapping is found.
- Uses OAuth2 with refresh token — requires setup of OAuth in Jira.
- Some fields may have limitations based on the user's permissions.
- In case an issue is not synchronized and you want to trigger synchronization by
  updating the issue filed, you need to create a JQL trigger.
- Requires setup of connected app in Exalate.
- Ensure to handle null pointer exceptions by setting empty arrays.
- Ensure OAuth2 is correctly configured in your Exalate instance.
- The first sync for an issue requires setting a project key.
- Custom fields are replicated based on their names.
- 'Known issue: Projects List isn''t Available during Connection Setup'
- API requires setup of connected app
- User permissions may affect data synchronization
- 'An assignee is an object with some properties. Each property is of type text. You
  can sync the following properties: key, email, displayName, username.'
- Exalate allows extracting the received option values from the cascading select to
  a text field.
- Some API calls may have rate limits.
- Requires setup of OAuth2 credentials
- Check API limits to avoid throttling
- Some operations may have rate limits
- Tempo on Jira on-premise has a Java API. It is not public but still straightforward
  to use.
- Some entities may return nulls in deeply nested fields
- Ensure proper authentication setup for Exalate API
- Check rate limits on API calls
- Components field is one of the standard fields of an issue.
- If you sync components with Jira Cloud, several ways to create components exist.
- Known issues with specific integrations
- Set default priority to 'Major' if no priority exists on local side.
- Set default priority to 'Low' if the priority name does not exist on local side.
- Setting time spent in Jira Cloud directly is not supported, it needs to be set through
  worklogs.
- Some APIs may have rate limits that need to be considered.
- If you sync subtasks before the parent task, you get an error.
- The proxy user needs to have permissions to access the security levels you are trying
  to set.
- In the permission scheme - ensure that the proxy user has 'Set Issue Security' permission.
- The custom field name/options and issue type options are provided only for demonstration
  purposes. You can easily replace them with your actual data.
- Before doing any bulk operation it is recommended you validate the configuration.
- User object has 'active' property in Jira, so you can also check whether the user
  is active or not.
- Ensure the API token is generated and valid for authentication.
- Requires OAuth2 setup for API access
- issue.changeHistory is an array of ChangeHistory
- Uses OAuth2 with refresh token — requires setup of connected app in API
- Ensure that the resolution from the remote side is mapped to the local resolution
  objects.
- There are multiple use cases in issue types synchronization.
- The default issue links synchronization behavior does not include merging issue
  links from the source and destination issues. Once the issue has been synchronized,
  it has the same links as the source issue.
- If you sync the issue via multiple connections, issue links are overwritten.
- In case you don't want the source issue links to be overridden if the remote side
  doesn't have any issue links we recommend using the external script IssueLinks.groovy.
- We use cookies to improve your experience on our website, serve personalized ads
  or content, and analyze our traffic.
- This article describes how to send custom headers from Jira on-premise to the Exalate
  application which is installed on a separate server.
- Keys and their respective values should be separated by colons (:) and each key/value
  pair should be separated by an escaped semi-colon (\;)
- All the headers should be surrounded by single or double quotes
- Uses cookies for functionality and tracking.
- Users are matched by email.
- Depending on the Jira Service management version the name of the customer request
  type might differ. Please make sure that you have the correct custom field name
  in the script.
- OAuth2 authentication is required for accessing Jira data.
- Some fields may return null if they are not set in Jira.
- Basic versions synchronization involves receiving versions from a remote Jira instance.
- In a local connection, you have only one set of the Sync Rules for both sides.
- We provide these scripts as an example. There is no guarantee of script stability,
  as they didn't run through a complete validation cycle.
- Ensure correct API version is used for endpoints
- OAuth2 authentication is required for API access.
- The code below helps to add a custom field to a replica. Use this code in the Outgoing
  sync on the source side.
- The receiving side gets a replica and process it in the Incoming sync.
- 'The maximum attachment size that you can synchronize depends on a couple of factors:
  the attachment size limit on both instances (you can configure the max attachment
  size in Jira) and instance HTTP/HTTPS connection timeouts.'
- We've tested the synchronization of attachments with the size up to 1 GB, which
  worked without any issues; bigger attachments should not be a problem either.
- The add-on doesn't provide a JIRA-level API for lookups.
- Requires setup of Azure DevOps service connections.
- Requires proper OAuth setup in Atlassian developer console.
- Ensure to select the correct project for syncing issues.
- Some resources may require additional permission scopes
- HTML tags are removed from descriptions by default in Visual connections.
- The method to remove HTML tags does not work if converting data from Markdown to
  HTML in Jira Cloud.
- PostgreSQL must be accessed over SSL.
- Ensure to provide the certificate and the key to the postgres server.
- 'SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, bits: 256, compression:
  off)'
- SSL is confirmed to be on
- The only configuration to be added to the docker-compose is by specifying that the
  PGSSLMODE is required
- Rate limits apply to API calls.
- The user table has much more fields
- Ensure you have proper permissions set in Jira.
- API rate limits may apply.
- In ServiceNow, Exalate treats work notes as internal comments. The entity.work_notes
  script is not supported.
- Exalate for Jira Cloud and Jira On-premise have different functionalities.
- Requires setup of connected app in ServiceNow
- You can define the sync behavior for attachments in different ways.
- The maximum attachment size that you can synchronize depends on a couple of factors.
- Requires proper setup of OAuth integration and API access permissions
- Use the variable entity.tableName to know the entity being synced.
- The key field is used to identify records in ServiceNow.
- Ensure 'Coalesce on Empty Fields' is checked for syncing.
- Field mapped to 'sys_id' must have 'Coalesce' option enabled.
- Uses Basic Authentication with user:password format
- Ensure API key is set up correctly.
- You can only apply this if you are hosting your own Exalate app for ServiceNow.
- If you are not and you need this, please contact Exalate support.
- 'Add the custom headers to the following ServiceNow environment variable: ${?PROXY_HEADERS}'
- Start up your ServiceNow instance
- Run the synchronization as usual. Now requests include the custom headers you've
  set.
- Assume you are bringing up an Exalate on docker, and you have the need to secure
  the connection between the application and the database using SSL.
- 'With the standard configuration you will encounter an error: ''FATAL: SSL connection
  is required. Please specify SSL options and retry.'''
- Confirm that SSL is enabled
- Ensure PostgreSQL is coming up with SSL mode on
- Provide the certificate and the key to the postgres server
- Ensure postgres is coming up with SSL mode on
- Ensure postgres is coming up with ssl mode on
- OAuth2 authentication is required for all API calls.
- By default, Exalate adds a comment, received from the other side on behalf of the
  proxy user.
- Requires configuration of OAuth on the Jira instance.
- Some fields may be null if not present in the request.
- Integrates with Jira Cloud and Server
- Requires appropriate API permissions
- We've tested the synchronization of attachments with the size up to 1 GB, which
  worked without any issues.
- Ensure OAuth2 configuration is set up correctly in Exalate.
- API may have rate limits depending on the plan.
- Some endpoints may have limits on data retrieval
- Elements Connect provides a REST API allowing to extract the values as shown in
  the issue.
- The add-on doesn't provide a JIRA-level API to actually do this lookup.
- During the sync, Zendesk sends data in Markdown and other nodes, such as Azure DevOps,
  could send data in HTML. Due to format differences, some formatting errors for text,
  images, lists, tables, links, and comments might appear after the sync. You can
  use Exalate scripts to prevent this.
- Requires OAuth2 authentication setup in Jira.
- Remote issue URL is provided in the incoming sync script
- You can change the custom field name to any custom name
- Requires configuration of connected app in Exalate.
- The Exalate app does not provide a sync panel on a GitHub issue.
- Azure DevOps uses the semicolon (;) as the tag separator. Therefore you should avoid
  using this character as part of your label/tag.
- Uses entity.entityType to define the entity being synced.
- '"Rate Limit" Limitations for Freshservice'
- Some instances like Salesforce that rely on customKeys or internal map do not support
  sync of custom fields like date/DateTime from the go.
- 'To sync object priority from Salesforce to Jira, use the rule: replica.Priority
  = entity.Priority.'
- 'To sync object priority from Jira to Salesforce, use the rule: entity.Priority
  = replica.priority.name.'
- Ensure the API token is generated and has the necessary permissions.
- You need to replace 5.0.13 in "s@idalko/hpqcnode:.*@idalko/hpqcnode:5.0.13@g" for
  the latest version, you're upgrading to.
- We are moving Exalate for HP QC/ALM into basic maintenance mode. This transition
  period lasts until June 2024, after which support is halted completely.
- Exalate for HP QC/ALM is moving into basic maintenance mode until November 2024.
- Ensure that the API is properly configured to handle OAuth2 authentication.
- Make sure customer request type is assigned on the issue that you are synchronizing
- Integration may require specific permissions in Jira.
- Some fields may not be available based on the project configuration.
- 'Warning: We are moving Exalate for HP QC/ALM into basic maintenance mode. This
  transition period will last until November 2024, after which support will be halted
  completely.'
- Some endpoints may have rate limits
- Documentation available for various integrations and scripts.
- By default, attachment synchronization is disabled in Freshdesk.
- This is done to avoid potential errors caused by exceeding the storage limits on
  Freshdesk tickets.
- Syncing attachments is disabled in Freshdesk due to the 20 MB per ticket limit.
- Enabling attachment sync could lead to errors if the total attachment size per ticket
  exceeds Freshdesk's limits.
- Deleting an attachment from a comment does not update the updated_at field, which
  does not trigger a new sync event.
- Exalate supports the synchronization of notes added via the Add Note button in Freshdesk.
- The Reply and Forward features are not supported by Exalate.
- The default 'Priority' field is a system field and cannot be edited, modified, or
  hidden.
- Available priority values are Low, Medium, High, and Urgent.
- Uses OAuth2 with refresh token — requires setup of a connected app in Jira
- In Freshdesk, the status field is represented by numeric IDs rather than names.
- Exalate supports all eight types of custom fields from Freshdesk.
- When creating a new custom field in Freshdesk, you can define both the Label for
  Agents and the Label for Customers.
- All custom field names must begin with cf_.
- Label is automatically converted to lowercase.
- Any spaces in the label are replaced with underscores (_).
- Special characters are stripped out.
- Certain system-reserved words may not be allowed as part of the custom field name.
- Rich text can only be used in descriptions and comments. Multi-line custom fields
  do not support rich text.
- This functionality only supports image files. Other file types or extensions are
  not supported.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your OAuth credentials'
- '429 Too Many Requests: Rate limit exceeded'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check your credentials or token expiration'
- '404 Not Found: Ensure the endpoint is correct'
- '401 Unauthorized: Check your credentials and permissions.'
- '403 Forbidden: Ensure your user has access to the requested resource.'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Verify the authentication credentials'
- '401 Unauthorized: Check if the OAuth token is valid or has expired.'
- '403 Forbidden: Ensure the user has the required permissions to access the resource.'
- '401 Unauthorized: Check OAuth credentials'
- '404 Not Found: Resource may not exist or check endpoint path'
- '401 Unauthorized: Check credentials or permissions'
- '404 Not Found: Verify endpoint and resource availability'
- '401 Unauthorized: Check the authentication details'
- '404 Not Found: Verify the requested resource exists'
- '429 Too Many Requests: Slow down your request rate'
- Network connectivity
- Authentication issues
- Configuration failures
- Compatibility problems
- Sync Rules/Script errors
- '404 Not Found: Ensure the endpoint exists'
- '401 Unauthorized: Check the authentication credentials.'
- '403 Forbidden: Ensure you have the necessary permissions.'
- '429 Too Many Requests: You have exceeded the rate limit.'
- '400 Bad Request: Check the request parameters for correctness.'
- '401 Unauthorized: Verify the authentication credentials.'
- '404 Not Found: Confirm the endpoint path and resource.'
- Error when the synchronization is blocked.
- Instance-wide error that blocks all the Connections within that instance.
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Ensure valid authentication credentials.'
- '401 Unauthorized: Verify API key or token.'
- '404 Not Found: Ensure the endpoint URL is correct.'
- 'PROJECT_KEY_IS_INVALID: Project key is invalid'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of requests.'
- '401 Unauthorized: Check your authentication credentials.'
- 'Invalid PAT: Recheck Personal Access Token permissions'
- 'Unauthorized: Ensure user is Project Administrator and part of PCA'
- '401 Unauthorized: Check your API key or token.'
- '404 Not Found: Endpoint may be incorrect.'
- Project Key is Invalid
- Issue Does Not Exist or You Do Not Have Permission to See it
- '401 Unauthorized: Check your token or scopes.'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Check the provided credentials'
- '403 Forbidden: Ensure the user has sufficient permissions'
- '404 Not Found: Verify the endpoint path'
- '401 Unauthorized: Check OAuth token or scopes.'
- '404 Not Found: Verify the endpoint path.'
- '403 Forbidden: Check user permissions'
- '404 Not Found: Verify the resource URL'
- '500 Internal Server Error: Retry the request or check Jira status'
- '401 Unauthorized: Check your credentials.'
- '403 Forbidden: Ensure you have the right permissions.'
- 'INVALID_AUTHENTICATION: Check OAuth credentials.'
- 'NOT_FOUND: Resource does not exist.'
- 'FORBIDDEN: Insufficient permissions for the operation.'
- '404 Not Found: Check the repository name or owner.'
- '401 Unauthorized: Verify your access token.'
- '403 Forbidden: Ensure correct permissions are set for API access.'
- '404 Not Found: Verify the endpoint and resource existence.'
- '401 Unauthorized: Check API key or authentication token.'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Check the provided OAuth token.'
- 'invalid_credentials: Check the username and password.'
- 'token_expired: Refresh the OAuth token.'
- '403 Forbidden: Verify user permissions'
- '401 Unauthorized: Check credentials and permissions.'
- '403 Forbidden: Ensure you have access to the requested resource.'
- '401 Unauthorized: Check your OAuth configuration'
- '403 Forbidden: You do not have permission to access this resource.'
- '401 Unauthorized: Check OAuth token or scopes'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: Check endpoint URL'
- '429 Too Many Requests: Reduce frequency of requests.'
- '401 Unauthorized: Check your OAuth credentials.'
- '403 Forbidden: Ensure the user has permission for the requested resource.'
- '404 Not Found: Verify the endpoint and resource ID.'
- '401 Unauthorized: Check OAuth scopes or token expiration.'
- '500 Internal Server Error: Verify API endpoint availability.'
- '400 Bad Request: Invalid request parameters'
- '401 Unauthorized: Check your OAuth token'
- '500 Internal Server Error: Try again later'
- '403 Forbidden: Check API key or permissions.'
- '500 Internal Server Error: Retry the request or check service status.'
- '401 Unauthorized: Check API key or token expiration'
- '401 Unauthorized: Check your credentials'
- Installation issues may be logged in /tmp.
- Refer to logs in /opt/hpqcnode/data/logs for problems while running the Exalate
  server.
- '403 Forbidden: You do not have permission'
- '404 Not Found: The requested resource does not exist'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '401 Unauthorized: Check token validity and permissions'
- '429 Too Many Requests: Throttle your requests'
- '404 Not Found: Check the endpoint path or issue key'
- '401 Unauthorized: Check your token and permissions'
- '403 Forbidden: Verify user permissions and role assignments'
- '401 Unauthorized: Verify credentials and permissions'
- '404 Not Found: Check the endpoint and parameters'
- '401 Unauthorized: Check your OAuth token and permissions.'
- '400 Bad Request: Review the payload structure for the API call.'
- '401 Unauthorized: Check your client credentials and token.'
- '401 Unauthorized: Check your credentials and permissions'
- '403 Forbidden: Verify your API key and permissions'
- '429 Too Many Requests: Rate limit exceeded, reduce your request frequency'
- '400 Bad Request: Check if the request format is correct.'
- '401 Unauthorized: Verify token validity.'
- '404 Not Found: Ensure resource exists.'
- '404 Not Found: Ensure the endpoint is correct.'
- '429 Too Many Requests: Rate limit exceeded, try again later.'
- '403 Forbidden: Check if the API token has the required permissions.'
- '404 Not Found: Verify the endpoint URL and resource availability.'
- '400 Bad Request: Verify your request parameters.'
- '404 Not Found: The requested resource could not be found.'
- '400 Bad Request: Check if the request parameters are valid.'
- '401 Unauthorized: Verify the provided OAuth tokens.'
- '404 Not Found: Ensure the resource exists.'
- '401 Unauthorized: Check your API credentials.'
- '404 Not Found: Verify the endpoint URL.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- If a trigger query is not valid, an error pop-up will appear, listing the errors
  in the query.
- Invalid field name
- Incorrect data type
- Misused logical operator
- '404 Not Found: Check the endpoint URL'
- '403 Forbidden: Ensure the API key is correct and has appropriate permissions'
- '401 Unauthorized: Check your OAuth credentials and scopes'
- '403 Forbidden: Ensure you have the correct permissions'
- '404 Not Found: Verify the endpoint and resource'
- '401 Unauthorized: Check OAuth token validity.'
- '500 Internal Server Error: Retry the request or contact support.'
- '401 Unauthorized: Check OAuth token validity'
- '500 Internal Server Error: Contact support with logs'
- '403 Forbidden: Verify user permissions.'
- '404 Not Found: Check the endpoint URL.'
- '400 Bad Request: Check your request parameters.'
- '400 Bad Request: Check the request format and payload.'
- '403 Forbidden: Insufficient permissions for the requested action'
- '401 Unauthorized: Check your credentials and token validity.'
- '403 Forbidden: Ensure you have the correct permissions.'
- '403 Forbidden: Check permissions for the requested resource'
- '401 Unauthorized: Check client credentials and token validity.'
- '401 Unauthorized: Check if the token is valid or if the scopes are correct'
- '401 Unauthorized: Check the credentials or permissions.'
- '404 Not Found: Verify the endpoint or resource ID.'
- '429 Too Many Requests: Reduce the frequency of requests'
- '404 Not Found: Check the endpoint or resource ID'
- '401 Unauthorized: Verify OAuth token and permissions'
- '403 Forbidden: Ensure the user has the required permissions.'
- '404 Not Found: Verify the endpoint and resource.'
- 'INVALID_AUTHENTICATION: Check your credentials and permissions.'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of your API calls.'
- '401 Unauthorized: Check your token validity'
- 'INVALID_TOKEN: Check your token and try again'
- 'RATE_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '400 Bad Request: Validate your request parameters'
- '401 Unauthorized: Verify authentication credentials'
- '429 Too Many Requests: Throttle API calls'
- '400 Bad Request: Check the API documentation for required fields.'
- '401 Unauthorized: Ensure that the access token is valid.'
- 'Subtask cannot be created: parent issue with remote id was not found.'
- '401 Unauthorized: Check if the API token is correct.'
- '401 Unauthorized: Check client credentials'
- '404 Not Found: Verify endpoint URL'
- '401 Unauthorized: Verify OAuth token and permissions.'
- 'INVALID_CREDENTIALS: Check your client ID and secret'
- 'RATE_LIMIT_EXCEEDED: Reduce frequency of requests'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Check OAuth token'
- '500 Internal Server Error: Retry after some time'
- '403 Forbidden: Check permissions for the API access'
- '401 Unauthorized: Recheck OAuth token validity'
- '403 Forbidden: You do not have permission to access this resource'
- '404 Not Found: The requested resource could not be found'
- '401 Unauthorized: Verify your authentication credentials.'
- '403 Forbidden: Check your permissions.'
- '401 Unauthorized: Check your API credentials'
- '404 Not Found: Ensure the endpoint path is correct'
- '401 Unauthorized: Check authentication credentials.'
- 'FATAL: SSL connection is required. Please specify SSL options and retry.'
- '401 Unauthorized: Check your OAuth token or scopes.'
- '401 Unauthorized: Check the OAuth token and permissions.'
- '401 Unauthorized: Check your authentication credentials'
- '429 Too Many Requests: Rate limit exceeded, reduce request frequency'
- '401 Unauthorized: Check your OAuth2 token and scopes.'
- '401 Unauthorized: Verify token is valid.'
- '404 Not Found: Endpoint is incorrect.'
- '401 Unauthorized: Check OAuth credentials.'
- '401 Unauthorized: Check if the provided credentials are correct.'
- '404 Not Found: Verify the requested resource exists.'
- '400 Bad Request: Check the request format and parameters.'
- '404 Not Found: Ensure the endpoint and resource exist.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuth 2.0
  - OAuth 1.0
  - AccessToken
  - OAuthApp
  - OAuthConsumer
  - OAuthToken
  - OAuth2
  - RefreshToken
  - API Key
  - Bearer Token
  - OAuth
  - API Token
  - AtlassianOAuth
  - authentication context
  - Access Token
  - ApplicationLink
  - AuthorizationCode
client:
  base_url: https://exalate.com
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
