resources:
- name: deployment.canceled
  endpoint:
    path: /webhooks/deployment/canceled
    method: POST
    data_selector: payload
- name: deployment.check-rerequested
  endpoint:
    path: /webhooks/deployment/check-rerequested
    method: POST
    data_selector: payload
- name: deployment.cleanup
  endpoint:
    path: /webhooks/deployment/cleanup
    method: POST
    data_selector: payload
- name: deployment.created
  endpoint:
    path: /webhooks/deployment/created
    method: POST
    data_selector: payload
- name: deployment.error
  endpoint:
    path: /webhooks/deployment/error
    method: POST
    data_selector: payload
- name: deployment.integration.action.cancel
  endpoint:
    path: /webhooks/deployment/integration/action/cancel
    method: POST
    data_selector: payload
- name: deployment.integration.action.cleanup
  endpoint:
    path: /webhooks/deployment/integration/action/cleanup
    method: POST
    data_selector: payload
- name: deployment.integration.action.start
  endpoint:
    path: /webhooks/deployment/integration/action/start
    method: POST
    data_selector: payload
- name: deployment.promoted
  endpoint:
    path: /webhooks/deployment/promoted
    method: POST
    data_selector: payload
- name: deployment.ready
  endpoint:
    path: /webhooks/deployment/ready
    method: POST
    data_selector: payload
- name: deployment.succeeded
  endpoint:
    path: /webhooks/deployment/succeeded
    method: POST
    data_selector: payload
- name: domain.created
  endpoint:
    path: /webhooks/domain/created
    method: POST
    data_selector: payload
- name: domain.auto-renew-changed
  endpoint:
    path: /webhooks/domain/auto-renew-changed
    method: POST
    data_selector: payload
- name: domain.certificate-add
  endpoint:
    path: /webhooks/domain/certificate-add
    method: POST
    data_selector: payload
- name: domain.certificate-add-failed
  endpoint:
    path: /webhooks/domain/certificate-add-failed
    method: POST
    data_selector: payload
- name: domain.certificate-deleted
  endpoint:
    path: /webhooks/domain/certificate-deleted
    method: POST
    data_selector: payload
- name: domain.certificate-renew
  endpoint:
    path: /webhooks/domain/certificate-renew
    method: POST
    data_selector: payload
- name: domain.certificate-renew-failed
  endpoint:
    path: /domain/certificate-renew-failed
    method: GET
    data_selector: payload
    params: {}
- name: domain.dns-records-changed
  endpoint:
    path: /domain/dns-records-changed
    method: GET
    data_selector: payload
    params: {}
- name: domain.renewal
  endpoint:
    path: /domain/renewal
    method: GET
    data_selector: payload
    params: {}
- name: domain.renewal-failed
  endpoint:
    path: /domain/renewal-failed
    method: GET
    data_selector: payload
    params: {}
- name: domain.transfer-in-completed
  endpoint:
    path: /domain/transfer-in-completed
    method: GET
    data_selector: payload
    params: {}
- name: domain.transfer-in-failed
  endpoint:
    path: /domain/transfer-in-failed
    method: GET
    data_selector: payload
    params: {}
- name: domain.transfer-in-started
  endpoint:
    path: /domain/transfer-in-started
    method: GET
    data_selector: payload
    params: {}
- name: project.domain-created
  endpoint:
    path: /project/domain-created
    method: GET
    data_selector: payload
    params: {}
- name: project.domain-deleted
  endpoint:
    path: /project/domain-deleted
    method: GET
    data_selector: payload
    params: {}
- name: project.domain-moved
  endpoint:
    path: /project/domain-moved
    method: GET
    data_selector: payload
    params: {}
- name: project.domain-unverified
  endpoint:
    path: /project/domain-unverified
    method: GET
    data_selector: payload
    params: {}
- name: project.domain-updated
  endpoint:
    path: /project/domain-updated
    method: GET
    data_selector: payload
    params: {}
- name: project.domain-verified
  endpoint:
    path: /project/domain-verified
    method: GET
    data_selector: payload
    params: {}
- name: integration-configuration.permission-upgraded
  endpoint:
    path: /integration-configuration/permission-upgraded
    method: GET
    data_selector: payload
    params: {}
- name: integration-configuration.removed
  endpoint:
    path: /integration-configuration/removed
    method: GET
    data_selector: payload
    params: {}
- name: integration-configuration.scope-change-confirmed
  endpoint:
    path: /integration-configuration/scope-change-confirmed
    method: GET
    data_selector: payload
    params: {}
- name: integration-resource.project-connected
  endpoint:
    path: /integration-resource/project-connected
    method: GET
    data_selector: payload
    params: {}
- name: integration-resource.project-disconnected
  endpoint:
    path: /integration-resource/project-disconnected
    method: GET
    data_selector: payload
    params: {}
- name: marketplace.invoice.created
  endpoint:
    path: /marketplace/invoice/created
    method: GET
    data_selector: payload
    params: {}
- name: marketplace.invoice.notpaid
  endpoint:
    path: /marketplace/invoice/notpaid
    method: GET
    data_selector: payload
    params: {}
- name: marketplace.invoice.paid
  endpoint:
    path: /marketplace/invoice/paid
    method: GET
    data_selector: payload
    params: {}
- name: marketplace.invoice.refunded
  endpoint:
    path: /marketplace/invoice/refunded
    method: GET
    data_selector: payload
    params: {}
- name: marketplace.member.changed
  endpoint:
    path: /marketplace/member/changed
    method: GET
    data_selector: payload
    params: {}
- name: observability.anomaly
  endpoint:
    path: /observability/anomaly
    method: POST
    data_selector: payload
- name: observability.anomaly-error
  endpoint:
    path: /observability/anomaly-error
    method: POST
    data_selector: payload
- name: project.created
  endpoint:
    path: /project.created
    method: POST
    data_selector: payload
- name: project.removed
  endpoint:
    path: /project.removed
    method: POST
    data_selector: payload
- name: project.rolling-release.approved
  endpoint:
    path: /project.rolling-release.approved
    method: POST
    data_selector: payload
- name: project.rolling-release.completed
  endpoint:
    path: /project.rolling-release.completed
    method: POST
    data_selector: payload
- name: project.rolling-release.aborted
  endpoint:
    path: /project.rolling-release.aborted
    method: POST
    data_selector: payload
- name: project.rolling-release.started
  endpoint:
    path: /project.rolling-release.started
    method: POST
    data_selector: payload
- name: deployment
  endpoint:
    path: /deployment
    method: POST
    data_selector: payload
- name: project
  endpoint:
    path: /project
    method: POST
    data_selector: payload
- name: requests
  endpoint:
    path: /v1/requests
    method: GET
    data_selector: data
- name: logs
  endpoint:
    path: /v1/logs
    method: GET
    data_selector: data
- name: WAF Rules
  endpoint:
    path: /api/waf/rules
    method: POST
    data_selector: rules
    params: {}
- name: WAF Logs
  endpoint:
    path: /api/waf/logs
    method: GET
    data_selector: logs
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: upcoming_events
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
    params: {}
- name: deployments
  endpoint:
    path: /api/deployments
    method: GET
    data_selector: data
    params: {}
- name: domains
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: domains
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sandbox
  endpoint:
    path: /create-sandbox
    method: POST
    data_selector: sandbox
    params:
      timeout: '600000'
      resources:
        vcpus: 4
      runtime: node22
      ports:
      - 3000
- name: ai_templates
  endpoint:
    path: /api/ai/templates
    method: GET
    data_selector: templates
- name: Braintrust
  endpoint:
    path: /marketplace/braintrust
    method: GET
- name: Stripe
  endpoint:
    path: /marketplace/stripe
    method: GET
- name: MongoDB Atlas
  endpoint:
    path: /marketplace/mongodbatlas
    method: GET
- name: Neon
  endpoint:
    path: /marketplace/neon
    method: GET
- name: Upstash
  endpoint:
    path: /marketplace/upstash
    method: GET
- name: Supabase
  endpoint:
    path: /marketplace/supabase
    method: GET
- name: Redis
  endpoint:
    path: /marketplace/redis
    method: GET
- name: Nile
  endpoint:
    path: /marketplace/nile
    method: GET
- name: MotherDuck
  endpoint:
    path: /marketplace/motherduck
    method: GET
- name: xAI
  endpoint:
    path: /marketplace/xai
    method: GET
- name: Groq
  endpoint:
    path: /marketplace/groq
    method: GET
- name: fal
  endpoint:
    path: /marketplace/fal
    method: GET
- name: Deep Infra
  endpoint:
    path: /marketplace/deepinfra
    method: GET
- name: Sentry
  endpoint:
    path: /marketplace/sentry
    method: GET
- name: Checkly
  endpoint:
    path: /marketplace/checkly
    method: GET
- name: Dash0
  endpoint:
    path: /marketplace/dash0
    method: GET
- name: Prisma
  endpoint:
    path: /marketplace/prisma
    method: GET
- name: Mux
  endpoint:
    path: /marketplace/mux
    method: GET
- name: Turso Cloud
  endpoint:
    path: /marketplace/tursocloud
    method: GET
- name: Gel
  endpoint:
    path: /marketplace/gel
    method: GET
- name: Statsig
  endpoint:
    path: /marketplace/statsig
    method: GET
- name: Inngest
  endpoint:
    path: /marketplace/inngest
    method: GET
- name: Hypertune
  endpoint:
    path: /marketplace/hypertune
    method: GET
- name: GrowthBook
  endpoint:
    path: /marketplace/growthbook
    method: GET
- name: Auth0
  endpoint:
    path: /marketplace/auth0
    method: GET
- name: Clerk
  endpoint:
    path: /marketplace/clerk
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Vercel Functions
  endpoint:
    path: /server/api
    method: GET
    data_selector: routes
    params: {}
- name: Image Optimization
  endpoint:
    path: /docs/image-optimization
    method: GET
    data_selector: features
    params: {}
- name: Open Graph Images
  endpoint:
    path: /__og-image__/image/og.png
    method: GET
    data_selector: og_image
    params: {}
- name: Web Analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: data
    params: {}
- name: Speed Insights
  endpoint:
    path: /speed-insights
    method: GET
    data_selector: data
    params: {}
- name: Draft Mode
  endpoint:
    path: /draft-mode
    method: GET
    data_selector: data
    params: {}
- name: astro
  endpoint:
    path: /api/astro
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
- name: templates
  endpoint:
    path: /v1/templates
    method: GET
    data_selector: records
- name: templates
  endpoint:
    path: /api/templates
    method: GET
    data_selector: records
    params: {}
- name: templates
  endpoint:
    path: /v1/templates
    method: GET
    data_selector: templates
    params: {}
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: mint_nft_moralis
  endpoint:
    path: /templates/web3/mint-nft-moralis
    method: GET
- name: wallet_manager_coinbase
  endpoint:
    path: /templates/web3/wallet-dashboard-with-coinbase-developer-platform
    method: GET
- name: x402_ai_starter
  endpoint:
    path: /templates/ai/x402-ai-starter
    method: GET
- name: coinbase_onchain
  endpoint:
    path: /templates/web3/coinbase-onchain
    method: GET
- name: onchain_agentkit
  endpoint:
    path: /templates/ai/onchain-agentkit
    method: GET
- name: coinbase_commerce
  endpoint:
    path: /templates/web3/coinbase-commerce
    method: GET
- name: web3_data_fetching
  endpoint:
    path: /templates/web3/web3-data-fetching
    method: GET
- name: Rate Limit API Requests
  endpoint:
    path: /templates/vercel-firewall/rate-limit-api-requests-firewall-rule
    method: POST
- name: Block OFAC-Sanctioned Countries
  endpoint:
    path: /templates/vercel-firewall/block-ofac-sanctioned-countries-firewall-rule
    method: POST
- name: Emergency Redirect
  endpoint:
    path: /templates/vercel-firewall/emergency-redirect-firewall-rule
    method: POST
- name: Block WordPress URLs
  endpoint:
    path: /templates/vercel-firewall/block-wordpress-urls-firewall-rule
    method: POST
- name: Block Bad Bots
  endpoint:
    path: /templates/vercel-firewall/block-bad-bots-firewall-rule
    method: POST
- name: Block AI Bots
  endpoint:
    path: /templates/vercel-firewall/block-ai-bots-firewall-rule
    method: POST
- name: Mint a single NFT with Moralis
  endpoint:
    path: /templates/web3/mint-nft-moralis
    method: GET
- name: Wallet Manager with Coinbase Developer Platform
  endpoint:
    path: /templates/web3/wallet-dashboard-with-coinbase-developer-platform
    method: GET
- name: x402 AI Starter
  endpoint:
    path: /templates/ai/x402-ai-starter
    method: GET
- name: Coinbase Onchain
  endpoint:
    path: /templates/web3/coinbase-onchain
    method: GET
- name: Onchain AgentKit
  endpoint:
    path: /templates/ai/onchain-agentkit
    method: GET
- name: Coinbase Commerce
  endpoint:
    path: /templates/web3/coinbase-commerce
    method: GET
- name: Web3 Data Fetching
  endpoint:
    path: /templates/web3/web3-data-fetching
    method: GET
- name: Rate Limit API Requests Firewall Rule
  endpoint:
    path: /templates/vercel-firewall/rate-limit-api-requests-firewall-rule
    method: GET
- name: Block OFAC-Sanctioned Countries Firewall Rule
  endpoint:
    path: /templates/vercel-firewall/block-ofac-sanctioned-countries-firewall-rule
    method: GET
- name: Emergency Redirect Firewall Rule
  endpoint:
    path: /templates/vercel-firewall/emergency-redirect-firewall-rule
    method: GET
- name: Block WordPress URLs Firewall Rule
  endpoint:
    path: /templates/vercel-firewall/block-wordpress-urls-firewall-rule
    method: GET
- name: Block Bad Bots Firewall Rule
  endpoint:
    path: /templates/vercel-firewall/block-bad-bots-firewall-rule
    method: GET
- name: Block AI Bots Firewall Rule
  endpoint:
    path: /templates/vercel-firewall/block-ai-bots-firewall-rule
    method: GET
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: templates
  endpoint:
    path: /v1/templates
    method: GET
    data_selector: templates
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Nuxt.js 3 Boilerplate
  endpoint:
    path: /templates/nuxt/nuxtjs-boilerplate
    method: GET
- name: Onelink
  endpoint:
    path: /templates/saas/onelink
    method: GET
- name: Logspot
  endpoint:
    path: /templates/blog/logspot
    method: GET
- name: Shopware Ecommerce Store with Nuxt
  endpoint:
    path: /templates/ecommerce/shopware-nuxt-ecommerce
    method: GET
- name: Content Wind
  endpoint:
    path: /templates/portfolio/content-wind
    method: GET
- name: Nuxt 3 Kitchen Sink
  endpoint:
    path: /templates/nuxt/nuxt-3-kitchen-sink
    method: GET
- name: Docus
  endpoint:
    path: /templates/documentation/docus
    method: GET
- name: Nuxt AI Chatbot
  endpoint:
    path: /templates/ai/nuxt-ai-chatbot
    method: GET
- name: Get Started with Upstash Redis & Nuxt
  endpoint:
    path: /templates/nuxt/get-started-with-upstash-redis-and-nuxt
    method: GET
- name: Redis Nuxt.js Starter
  endpoint:
    path: /templates/nuxt/kv-redis-nuxt
    method: GET
- name: Nuxt Commerce
  endpoint:
    path: /templates/ecommerce/nuxt-commerce
    method: GET
- name: Postgres + Nuxt Starter
  endpoint:
    path: /templates/nuxt/postgres-nuxt
    method: GET
- name: Alpine
  endpoint:
    path: /templates/blog/alpine
    method: GET
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
    params: {}
- name: Flask Hello World
  endpoint:
    path: /templates/backend/flask-hello-world
    method: GET
- name: Django Hello World
  endpoint:
    path: /templates/backend/django-hello-world
    method: GET
- name: Next.js Flask Starter
  endpoint:
    path: /templates/backend/nextjs-flask-starter
    method: GET
- name: FastAPI Boilerplate
  endpoint:
    path: /templates/python/fastapi-python-boilerplate
    method: GET
- name: Flask Boilerplate
  endpoint:
    path: /templates/python/flask-python-boilerplate
    method: GET
- name: Python Hello World
  endpoint:
    path: /templates/python/python-hello-world
    method: GET
- name: FastHTML Boilerplate
  endpoint:
    path: /templates/python/fasthtml-python-boilerplate
    method: GET
- name: AI SDK Python Streaming
  endpoint:
    path: /templates/ai/ai-sdk-python-streaming
    method: GET
- name: Next.js FastAPI Starter
  endpoint:
    path: /templates/ai/nextjs-fastapi-starter
    method: GET
- name: Flask Alt Text Generator
  endpoint:
    path: /templates/ai/flask-alt-text-generator
    method: GET
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
- name: domains
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: domains
- name: domain
  endpoint:
    path: /domains
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
- name: domains
  endpoint:
    path: /domains
    method: GET
    data_selector: domains
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: frameworks
  endpoint:
    path: /docs/frameworks
    method: GET
    data_selector: frameworks
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Deployment Protection
  endpoint:
    path: /docs/security/deployment-protection
    method: GET
    data_selector: features
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: project
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
- name: deployment
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
- name: Vercel Authentication
  endpoint:
    path: /docs/security/deployment-protection/methods-to-protect-deployments/vercel-authentication
    method: GET
- name: Password Protection
  endpoint:
    path: /docs/security/deployment-protection/methods-to-protect-deployments/password-protection
    method: GET
- name: Trusted IPs
  endpoint:
    path: /docs/security/deployment-protection/methods-to-protect-deployments/trusted-ips
    method: GET
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
    params: {}
- name: text_generation
  endpoint:
    path: /api/chat
    method: GET
    data_selector: result
    params: {}
- name: embedding
  endpoint:
    path: /api/embed
    method: GET
    data_selector: result
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: provider_options
  endpoint:
    path: /api/chat/route
    method: POST
    data_selector: result
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: models
  endpoint:
    path: /v1/models
    method: GET
    data_selector: models
    params: {}
- name: model
  endpoint:
    path: /v1/models/{model}
    method: GET
    data_selector: model
    params:
      model: required
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: completion
    params: {}
- name: embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
    data_selector: embedding
    params: {}
- name: credits
  endpoint:
    path: /v1/credits
    method: GET
    data_selector: credits
    params: {}
- name: generation
  endpoint:
    path: /v1/generation
    method: GET
    data_selector: generation
    params: {}
- name: models
  endpoint:
    path: /v1/models
    method: GET
    data_selector: data
- name: model
  endpoint:
    path: /v1/models/{model}
    method: GET
    data_selector: model
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: completion
- name: credits
  endpoint:
    path: /v1/credits
    method: GET
    data_selector: credits
- name: generation
  endpoint:
    path: /v1/generation
    method: GET
    data_selector: generation
- name: provider_options
  endpoint:
    path: /api/chat/route.ts
    method: POST
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: models
  endpoint:
    path: /v1/models
    method: GET
    data_selector: data
- name: retrieve_model
  endpoint:
    path: /v1/models/{model}
    method: GET
    data_selector: data
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
- name: credits
  endpoint:
    path: /v1/credits
    method: GET
- name: generation
  endpoint:
    path: /v1/generation
    method: GET
- name: chat_completion
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: models_list
  endpoint:
    path: /v1/models
    method: GET
    data_selector: models
- name: retrieve_model
  endpoint:
    path: /v1/models/{model}
    method: GET
    data_selector: model
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
- name: embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
    data_selector: data
- name: credits
  endpoint:
    path: /v1/credits
    method: GET
    data_selector: credits
- name: generation_lookup
  endpoint:
    path: /v1/generation
    method: GET
    data_selector: generation
- name: tool_calls
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
    data_selector: data
    params: {}
- name: embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
- name: chat.completions
  endpoint:
    path: /v1/chat/completions
    method: POST
- name: models
  endpoint:
    path: /v1/models
    method: GET
- name: model
  endpoint:
    path: /v1/models/{model}
    method: GET
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
- name: credits
  endpoint:
    path: /v1/credits
    method: GET
- name: generation
  endpoint:
    path: /v1/generation
    method: GET
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /v1/models
    method: GET
    data_selector: data
- name: retrieve_model
  endpoint:
    path: /v1/models/{model}
    method: GET
    data_selector: id
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
- name: credits
  endpoint:
    path: /v1/credits
    method: GET
- name: generation_lookup
  endpoint:
    path: /v1/generation
    method: GET
- name: list_models
  endpoint:
    path: /v1/models
    method: GET
    data_selector: data
- name: retrieve_model
  endpoint:
    path: /v1/models/{model}
    method: GET
    data_selector: id
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
- name: generate_embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
- name: check_credits
  endpoint:
    path: /v1/credits
    method: GET
- name: lookup_generation
  endpoint:
    path: /v1/generation
    method: GET
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
    data_selector: data
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
    data_selector: data
    params: {}
- name: embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
    data_selector: data
    params: {}
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: models
  endpoint:
    path: /v1/models
    method: GET
    data_selector: data
- name: retrieve_model
  endpoint:
    path: /v1/models/{model}
    method: GET
    data_selector: model
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
- name: credits
  endpoint:
    path: /v1/credits
    method: GET
- name: generation_lookup
  endpoint:
    path: /v1/generation
    method: GET
- name: list_models
  endpoint:
    path: /v1/models
    method: GET
- name: retrieve_model
  endpoint:
    path: /v1/models/{model}
    method: GET
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
- name: generate_embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
- name: check_credits
  endpoint:
    path: /v1/credits
    method: GET
- name: generation_lookup
  endpoint:
    path: /v1/generation
    method: GET
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
    data_selector: data
    params: {}
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
    data_selector: data
    params: {}
- name: credits
  endpoint:
    path: /v1/credits
    method: GET
    data_selector: balance
    params: {}
- name: generation_lookup
  endpoint:
    path: /v1/generation
    method: GET
    data_selector: data
    params:
      id: '{generation_id}'
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: list_models
  endpoint:
    path: /v1/models
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /v1/models
    method: GET
    data_selector: data
    params: {}
- name: model_details
  endpoint:
    path: /v1/models/{model}
    method: GET
    data_selector: id
    params:
      model: required
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: id
    params: {}
- name: credits
  endpoint:
    path: /v1/credits
    method: GET
    data_selector: credits
    params: {}
- name: models
  endpoint:
    path: /v1/models
    method: GET
- name: retrieve_model
  endpoint:
    path: /v1/models/{model}
    method: GET
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
- name: credits
  endpoint:
    path: /v1/credits
    method: GET
- name: generation_lookup
  endpoint:
    path: /v1/generation
    method: GET
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: credits
  endpoint:
    path: /credits
    method: GET
    data_selector: ''
    params: {}
- name: generation_lookup
  endpoint:
    path: /generation
    method: GET
    data_selector: data
    params:
      id: gen_<ulid>
- name: models
  endpoint:
    path: /models
    method: GET
    data_selector: ''
    params: {}
- name: embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
    data_selector: data
    params: {}
- name: credits
  endpoint:
    path: /v1/credits
    method: GET
    data_selector: balance
    params: {}
- name: generation_lookup
  endpoint:
    path: /v1/generation
    method: GET
    data_selector: data
    params:
      id: gen_<ulid>
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: list_models
  endpoint:
    path: /v1/models
    method: GET
    data_selector: data
    params: {}
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /v1/models
    method: GET
    data_selector: data
- name: retrieve_model
  endpoint:
    path: /v1/models/{model}
    method: GET
    data_selector: data
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
- name: embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
- name: credits
  endpoint:
    path: /v1/credits
    method: GET
- name: generation_lookup
  endpoint:
    path: /v1/generation
    method: GET
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: credits
  endpoint:
    path: /credits
    method: GET
    data_selector: ''
    params: {}
- name: generation_lookup
  endpoint:
    path: /generation
    method: GET
    data_selector: data
    params:
      id: gen_<ulid>
- name: list_models
  endpoint:
    path: /models
    method: GET
    data_selector: ''
    params: {}
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: google_gemini_2.5_flash_image
  endpoint:
    path: /models/gemini-2.5-flash-image-preview
    method: GET
    data_selector: models
    params: {}
- name: LangChain
  endpoint:
    path: /docs/ai-gateway/framework-integrations/langchain
- name: LangFuse
  endpoint:
    path: /docs/ai-gateway/framework-integrations/langfuse
- name: LiteLLM
  endpoint:
    path: /docs/ai-gateway/framework-integrations/litellm
- name: LlamaIndex
  endpoint:
    path: /docs/ai-gateway/framework-integrations/llamaindex
- name: Mastra
  endpoint:
    path: /docs/ai-gateway/framework-integrations/mastra
- name: Pydantic AI
  endpoint:
    path: /docs/ai-gateway/framework-integrations/pydantic-ai
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
    params: {}
- name: image_generation
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: roll_dice
  endpoint:
    path: /api/mcp
    method: GET
    data_selector: content
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: mcp
  endpoint:
    path: /api/mcp
    method: GET
    data_selector: tools
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: grok-2
  endpoint:
    path: /api/chat
    method: POST
    data_selector: result
    params: {}
- name: grok-3
  endpoint:
    path: /api/chat
    method: POST
    data_selector: result
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: llama-3.1-8b-instant
  endpoint:
    path: /api/chat/route
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: models
  endpoint:
    path: /v1/models
    method: GET
    data_selector: data
- name: completions
  endpoint:
    path: /v1/completions
    method: POST
    data_selector: choices
- name: text_to_speech
  endpoint:
    path: /textToSpeech
    method: POST
    data_selector: audio
    params:
      modelId: eleven_multilingual_v2
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Sonar Pro
  endpoint:
    path: /api/sonar-pro
    method: POST
- name: Sonar
  endpoint:
    path: /api/sonar
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: predictions
  endpoint:
    path: /predictions
    method: POST
    data_selector: prediction
    params: {}
- name: prediction_status
  endpoint:
    path: /predictions/{id}
    method: GET
    data_selector: prediction
    params: {}
- name: predictions
  endpoint:
    path: /predictions
    method: POST
    data_selector: prediction
    params: {}
- name: prediction_status
  endpoint:
    path: /predictions/{id}
    method: GET
    data_selector: prediction
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: builds
  endpoint:
    path: /v1/builds
    method: GET
    data_selector: builds
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: routes
  endpoint:
    path: /api/routes
    method: GET
    data_selector: routes
- name: routes
  endpoint:
    path: /api/routes
    method: GET
    data_selector: routes
- name: Serverless Function
  endpoint:
    path: .vercel/output/functions/<name>.func/.vc-config.json
    method: GET
    data_selector: configuration
    params: {}
- name: Edge Function
  endpoint:
    path: .vercel/output/functions/<name>.func/.vc-config.json
    method: GET
    data_selector: configuration
    params: {}
- name: Prerender Function
  endpoint:
    path: .vercel/output/functions/<name>.prerender-config.json
    method: GET
    data_selector: configuration
    params: {}
- name: static_files
  endpoint:
    path: /static
    method: GET
    data_selector: files
    params: {}
- name: serverless_functions
  endpoint:
    path: /functions
    method: GET
    data_selector: functions
    params: {}
- name: edge_functions
  endpoint:
    path: /edge
    method: GET
    data_selector: edge_functions
    params: {}
- name: prerender_functions
  endpoint:
    path: /prerender
    method: GET
    data_selector: prerender_functions
    params: {}
- name: builds
  endpoint:
    path: /v1/builds
    method: GET
    data_selector: builds
    params: {}
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: build_settings
  endpoint:
    path: /build_settings
    method: GET
    data_selector: settings
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: framework_settings
  endpoint:
    path: /docs/framework-settings
    method: GET
    data_selector: settings
    params: {}
- name: build_command
  endpoint:
    path: /docs/build-command
    method: GET
    data_selector: commands
    params: {}
- name: output_directory
  endpoint:
    path: /docs/output-directory
    method: GET
    data_selector: directory
    params: {}
- name: install_command
  endpoint:
    path: /docs/install-command
    method: GET
    data_selector: commands
    params: {}
- name: development_command
  endpoint:
    path: /docs/development-command
    method: GET
    data_selector: commands
    params: {}
- name: root_directory
  endpoint:
    path: /docs/root-directory
    method: GET
    data_selector: directory
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: deploy_hook
  endpoint:
    path: /v1/integrations/deploy/{project_id}/{deploy_hook_id}
    method: POST
    data_selector: job
    params: {}
- name: deployments
  endpoint:
    path: /v1/deployments
    method: POST
    data_selector: deployment
    params: {}
- name: deploy_hook
  endpoint:
    path: /v1/integrations/deploy/{project_id}/{hook_id}
    method: POST
    data_selector: job
    params: {}
- name: custom_environment
  endpoint:
    path: /v9/projects/<project-id-or-name>/custom-environments
    method: POST
    data_selector: result
    params: {}
- name: custom_environment
  endpoint:
    path: /v9/projects/<project-id-or-name>/custom-environments
    method: POST
    data_selector: result
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: analytics
  endpoint:
    path: /api/v1/analytics
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: deployments
  endpoint:
    path: /v13/deployments/<deployment-id>
    method: DELETE
- name: custom_environment
  endpoint:
    path: /v9/projects/<project-id-or-name>/custom-environments
    method: POST
    data_selector: result
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: deployments
  endpoint:
    path: /v13/deployments/<deployment-id>
    method: DELETE
- name: og_metadata
  endpoint:
    path: /api/vercel
    method: GET
    data_selector: metadata
    params: {}
- name: twitter_metadata
  endpoint:
    path: /api/static
    method: GET
    data_selector: metadata
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: claim_deployment
  endpoint:
    path: /claim-deployment
    method: GET
- name: project_transfer_request
  endpoint:
    path: /projects/:idOrName/transfer-request
    method: POST
- name: complete_project_transfer
  endpoint:
    path: /projects/transfer-request/:code
    method: PUT
- name: open_graph_metadata
  endpoint:
    path: /api/vercel
    method: GET
    data_selector: metadata
    params: {}
- name: share_preview_deployment
  endpoint:
    path: /docs/deployments/share-preview-deployment
    method: GET
    data_selector: records
- name: invite_users
  endpoint:
    path: /docs/deployments/invite-users
    method: GET
    data_selector: records
- name: preview_deployment
  endpoint:
    path: /deployments
    method: GET
    data_selector: deployments
    params: {}
- name: web_analytics
  endpoint:
    path: /api/web/analytics
    method: GET
    data_selector: data
    params: {}
- name: preview_deployment
  endpoint:
    path: /docs/deployments/preview-deployment
    method: GET
    data_selector: deployments
    params: {}
- name: vercel_env
  endpoint:
    path: /api/vercel_env
    method: GET
    data_selector: env_vars
    params: {}
- name: git_commit
  endpoint:
    params:
      commit_message: Update about page
      commit_author_login: johndoe
      commit_author_name: John Doe
      pull_request_id: '23'
      env: production
      target_env: production
      url: my-site.vercel.app
      branch_url: my-site-git-improve-about-page.vercel.app
      project_production_url: my-site.com
      git_provider: github
      repo_slug: my-site
      repo_owner: acme
      repo_id: '117716146'
      commit_ref: improve-about-page
      commit_sha: fa1eade47b73733d6312d5abfad33ce9e4068081
- name: git_commit
  endpoint:
    path: /api/git_commit
    method: GET
    data_selector: records
    params: {}
- name: deployment
  endpoint:
    path: /api/deployments
    method: GET
    data_selector: records
- name: environment
  endpoint:
    path: /env
    method: GET
    data_selector: records
    params: {}
- name: production_environment
  endpoint:
    path: /SANITY_STUDIO_VERCEL_TARGET_ENV
    method: GET
    data_selector: production
    params: {}
- name: git_provider
  endpoint:
    path: /SANITY_STUDIO_VERCEL_GIT_PROVIDER
    method: GET
    data_selector: github
    params: {}
- name: git_repo_slug
  endpoint:
    path: /SANITY_STUDIO_VERCEL_GIT_REPO_SLUG
    method: GET
    data_selector: my-site
    params: {}
- name: git_repo_owner
  endpoint:
    path: /SANITY_STUDIO_VERCEL_GIT_REPO_OWNER
    method: GET
    data_selector: acme
    params: {}
- name: git_repo_id
  endpoint:
    path: /SANITY_STUDIO_VERCEL_GIT_REPO_ID
    method: GET
    data_selector: '117716146'
    params: {}
- name: git_commit_ref
  endpoint:
    path: /SANITY_STUDIO_VERCEL_GIT_COMMIT_REF
    method: GET
    data_selector: improve-about-page
    params: {}
- name: git_commit_sha
  endpoint:
    path: /SANITY_STUDIO_VERCEL_GIT_COMMIT_SHA
    method: GET
    data_selector: fa1eade47b73733d6312d5abfad33ce9e4068081
    params: {}
- name: git_commit_message
  endpoint:
    path: /SANITY_STUDIO_VERCEL_GIT_COMMIT_MESSAGE
    method: GET
    data_selector: Update about page
    params: {}
- name: git_commit_author_login
  endpoint:
    path: /SANITY_STUDIO_VERCEL_GIT_COMMIT_AUTHOR_LOGIN
    method: GET
    data_selector: johndoe
    params: {}
- name: git_commit_author_name
  endpoint:
    path: /SANITY_STUDIO_VERCEL_GIT_COMMIT_AUTHOR_NAME
    method: GET
    data_selector: John Doe
    params: {}
- name: SANITY_STUDIO_VERCEL_TARGET_ENV
  endpoint:
    params:
      environment: production
- name: SANITY_STUDIO_VERCEL_URL
  endpoint:
    params:
      url: my-site.vercel.app
- name: SANITY_STUDIO_VERCEL_BRANCH_URL
  endpoint:
    params:
      branch_url: my-site-git-improve-about-page.vercel.app
- name: SANITY_STUDIO_VERCEL_PROJECT_PRODUCTION_URL
  endpoint:
    params:
      production_url: my-site.com
- name: SANITY_STUDIO_VERCEL_GIT_PROVIDER
  endpoint:
    params:
      git_provider: github
- name: SANITY_STUDIO_VERCEL_GIT_REPO_SLUG
  endpoint:
    params:
      repo_slug: my-site
- name: SANITY_STUDIO_VERCEL_GIT_REPO_OWNER
  endpoint:
    params:
      repo_owner: acme
- name: SANITY_STUDIO_VERCEL_GIT_REPO_ID
  endpoint:
    params:
      repo_id: '117716146'
- name: SANITY_STUDIO_VERCEL_GIT_COMMIT_REF
  endpoint:
    params:
      commit_ref: improve-about-page
- name: SANITY_STUDIO_VERCEL_GIT_COMMIT_SHA
  endpoint:
    params:
      commit_sha: fa1eade47b73733d6312d5abfad33ce9e4068081
- name: SANITY_STUDIO_VERCEL_GIT_COMMIT_MESSAGE
  endpoint:
    params:
      commit_message: Update about page
- name: SANITY_STUDIO_VERCEL_GIT_COMMIT_AUTHOR_LOGIN
  endpoint:
    params:
      author_login: johndoe
- name: SANITY_STUDIO_VERCEL_GIT_COMMIT_AUTHOR_NAME
  endpoint:
    params:
      author_name: John Doe
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
- name: environment_variables
  endpoint:
    path: /api/environment_variables
    method: GET
    data_selector: variables
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: deployments
  endpoint:
    path: /deployments
    method: GET
    data_selector: deployments
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
    params: {}
- name: creating_shared_environment_variables
  endpoint:
    path: /docs/accounts/create-a-team
    method: GET
- name: linking_to_projects
  endpoint:
    path: /docs/projects/overview
    method: GET
- name: removing_shared_environment_variables
  endpoint:
    path: /docs/environment-variables
    method: GET
- name: repository
  endpoint:
    path: /api/deployments
    method: POST
    data_selector: deployment
    params: {}
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
    params: {}
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
    params: {}
- name: vercel_deployment
  endpoint:
    path: /docs/deployments
    method: POST
    data_selector: deployment
    params: {}
- name: system_environment_variables
  endpoint:
    path: /docs/environment-variables/system-environment-variables
    method: GET
    data_selector: variables
- name: VERCEL
  endpoint:
    path: /env/VERCEL
    method: GET
    data_selector: value
- name: CI
  endpoint:
    path: /env/CI
    method: GET
    data_selector: value
- name: VERCEL_ENV
  endpoint:
    path: /env/VERCEL_ENV
    method: GET
    data_selector: value
- name: VERCEL_TARGET_ENV
  endpoint:
    path: /env/VERCEL_TARGET_ENV
    method: GET
    data_selector: value
- name: VERCEL_URL
  endpoint:
    path: /env/VERCEL_URL
    method: GET
    data_selector: value
- name: VERCEL_BRANCH_URL
  endpoint:
    path: /env/VERCEL_BRANCH_URL
    method: GET
    data_selector: value
- name: VERCEL_PROJECT_PRODUCTION_URL
  endpoint:
    path: /env/VERCEL_PROJECT_PRODUCTION_URL
    method: GET
    data_selector: value
- name: VERCEL_REGION
  endpoint:
    path: /env/VERCEL_REGION
    method: GET
    data_selector: value
- name: VERCEL_DEPLOYMENT_ID
  endpoint:
    path: /env/VERCEL_DEPLOYMENT_ID
    method: GET
    data_selector: value
- name: VERCEL_PROJECT_ID
  endpoint:
    path: /env/VERCEL_PROJECT_ID
    method: GET
    data_selector: value
- name: VERCEL_SKEW_PROTECTION_ENABLED
  endpoint:
    path: /env/VERCEL_SKEW_PROTECTION_ENABLED
    method: GET
    data_selector: value
- name: VERCEL_AUTOMATION_BYPASS_SECRET
  endpoint:
    path: /env/VERCEL_AUTOMATION_BYPASS_SECRET
    method: GET
    data_selector: value
- name: VERCEL_OIDC_TOKEN
  endpoint:
    path: /env/VERCEL_OIDC_TOKEN
    method: GET
    data_selector: value
- name: VERCEL_GIT_PROVIDER
  endpoint:
    path: /env/VERCEL_GIT_PROVIDER
    method: GET
    data_selector: value
- name: VERCEL_GIT_REPO_SLUG
  endpoint:
    path: /env/VERCEL_GIT_REPO_SLUG
    method: GET
    data_selector: value
- name: VERCEL_GIT_REPO_OWNER
  endpoint:
    path: /env/VERCEL_GIT_REPO_OWNER
    method: GET
    data_selector: value
- name: VERCEL_GIT_REPO_ID
  endpoint:
    path: /env/VERCEL_GIT_REPO_ID
    method: GET
    data_selector: value
- name: VERCEL_GIT_COMMIT_REF
  endpoint:
    path: /env/VERCEL_GIT_COMMIT_REF
    method: GET
    data_selector: value
- name: VERCEL_GIT_COMMIT_SHA
  endpoint:
    path: /env/VERCEL_GIT_COMMIT_SHA
    method: GET
    data_selector: value
- name: VERCEL_GIT_COMMIT_MESSAGE
  endpoint:
    path: /env/VERCEL_GIT_COMMIT_MESSAGE
    method: GET
    data_selector: value
- name: VERCEL_GIT_COMMIT_AUTHOR_LOGIN
  endpoint:
    path: /env/VERCEL_GIT_COMMIT_AUTHOR_LOGIN
    method: GET
    data_selector: value
- name: VERCEL_GIT_COMMIT_AUTHOR_NAME
  endpoint:
    path: /env/VERCEL_GIT_COMMIT_AUTHOR_NAME
    method: GET
    data_selector: value
- name: VERCEL_GIT_PREVIOUS_SHA
  endpoint:
    path: /env/VERCEL_GIT_PREVIOUS_SHA
    method: GET
    data_selector: value
- name: VERCEL_GIT_PULL_REQUEST_ID
  endpoint:
    path: /env/VERCEL_GIT_PULL_REQUEST_ID
    method: GET
    data_selector: value
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: VERCEL_GIT_REPO_SLUG
  endpoint:
    path: /
    method: GET
    data_selector: my-site
- name: VERCEL_GIT_REPO_OWNER
  endpoint:
    path: /
    method: GET
    data_selector: acme
- name: VERCEL_GIT_REPO_ID
  endpoint:
    path: /
    method: GET
    data_selector: '13343236'
- name: VERCEL_GIT_COMMIT_REF
  endpoint:
    path: /
    method: GET
    data_selector: improve-about-page
- name: VERCEL_GIT_COMMIT_SHA
  endpoint:
    path: /
    method: GET
    data_selector: fa1eade47b73733d6312d5abfad33ce9e4068081
- name: VERCEL_GIT_COMMIT_MESSAGE
  endpoint:
    path: /
    method: GET
    data_selector: Add John Doe to about page
- name: VERCEL_GIT_COMMIT_AUTHOR_LOGIN
  endpoint:
    path: /
    method: GET
    data_selector: johndoe
- name: VERCEL_GIT_COMMIT_AUTHOR_NAME
  endpoint:
    path: /
    method: GET
    data_selector: John Doe
- name: VERCEL_GIT_PULL_REQUEST_ID
  endpoint:
    path: /
    method: GET
    data_selector: '23'
- name: GitHub
  endpoint:
    path: /docs/git/vercel-for-github
    method: GET
    data_selector: repositories
- name: GitLab
  endpoint:
    path: /docs/git/vercel-for-gitlab
    method: GET
    data_selector: repositories
- name: Bitbucket
  endpoint:
    path: /docs/git/vercel-for-bitbucket
    method: GET
    data_selector: repositories
- name: Azure DevOps
  endpoint:
    path: /docs/git/vercel-for-azure-pipelines
    method: GET
    data_selector: repositories
- name: instant_rollback
  endpoint:
    path: /api/rollback
    method: POST
    data_selector: rollback_info
- name: GitHub Repository
  endpoint:
    path: /api/github/repository
    method: GET
    data_selector: data
    params: {}
- name: vercel-deployment-task
  endpoint:
    path: /docs/rest-api#creating-an-access-token
    method: POST
    data_selector: output
    params: {}
- name: vercel-azdo-pr-comment-task
  endpoint:
    path: /docs/rest-api#creating-an-access-token
    method: POST
    data_selector: output
    params: {}
- name: microfrontends
  endpoint:
    path: /microfrontends.json
    method: GET
    data_selector: applications
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
    params: {}
- name: web
  endpoint:
    path: /microfrontends/web
    method: GET
    data_selector: applications.web
    params: {}
- name: docs
  endpoint:
    path: /microfrontends/docs
    method: GET
    data_selector: applications.docs
    params: {}
- name: repository
  endpoint:
    path: /repos/{owner}/{repo}
    method: GET
    data_selector: repository
- name: system_environment_variables
  endpoint:
    path: /docs/environment-variables/system-environment-variables
    method: GET
    data_selector: variables
    params: {}
- name: microfrontends
  endpoint:
    path: /microfrontends.json
    method: GET
    data_selector: applications
- name: instant_rollback
  endpoint:
    path: /deployments/rollback
    method: POST
    data_selector: rollback_info
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: microfrontends
  endpoint:
    path: /microfrontends
    method: GET
    data_selector: applications
- name: applications
  endpoint:
    path: /microfrontends.json
    method: GET
    data_selector: applications
    params: {}
- name: turbo
  endpoint:
    path: /docs
    method: GET
    data_selector: pipeline
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: microfrontends
  endpoint:
    path: /microfrontends.json
    method: GET
    data_selector: applications
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: turbo
  endpoint:
    path: /docs
    method: GET
    data_selector: resources
- name: rolling_releases
  endpoint:
    path: /api/rolling-releases
    method: GET
    data_selector: releases
    params: {}
- name: remote_cache
  endpoint:
    path: /tmp/nx-cache
    method: SET
    data_selector: cacheDirectory
    params: {}
- name: webhook_events
  endpoint:
    path: /webhooks
    method: POST
    data_selector: payload
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
- name: package_managers
  endpoint:
    path: /docs/deployments/builds#build-process
    method: GET
    data_selector: data
    params: {}
- name: compute_capable_regions
  endpoint:
    path: /regions
    method: GET
    data_selector: regions
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: rolling_release
  endpoint:
    path: /api/rolling-release
    method: GET
    data_selector: releases
    params: {}
- name: web_analytics
  endpoint:
    path: /analytics/web
    method: GET
    data_selector: data
    params: {}
- name: account_webhooks
  endpoint:
    path: /webhooks/account
    method: POST
    data_selector: events
    params: {}
- name: integration_webhooks
  endpoint:
    path: /webhooks/integration
    method: POST
    data_selector: events
    params: {}
- name: default_cache_control
  endpoint:
    path: /default-cache-control
    method: GET
    data_selector: cache-control
    params: {}
- name: recommended_settings
  endpoint:
    path: /recommended-settings
    method: GET
    data_selector: recommended-settings
    params: {}
- name: s_maxage_example
  endpoint:
    path: /s-maxage-example
    method: GET
    data_selector: s-maxage-example
    params: {}
- name: swr_example
  endpoint:
    path: /swr-example
    method: GET
    data_selector: swr-example
    params: {}
- name: example_usage
  endpoint:
    path: /example-usage
    method: GET
    data_selector: example-usage
    params: {}
- name: x-vercel-id
  endpoint:
    path: /app/api/header/route.ts
    method: GET
    data_selector: vercelId
- name: x-forwarded-host
  endpoint:
    path: /app/api/header/route.ts
    method: GET
    data_selector: host
- name: x-forwarded-proto
  endpoint:
    path: /app/api/header/route.ts
    method: GET
    data_selector: protocol
- name: x-forwarded-for
  endpoint:
    path: /app/api/header/route.ts
    method: GET
    data_selector: ip
- name: x-vercel-deployment-url
  endpoint:
    path: /app/api/header/route.ts
    method: GET
    data_selector: deploymentUrl
- name: x-vercel-ip-continent
  endpoint:
    path: /app/api/header/route.ts
    method: GET
    data_selector: continent
- name: x-vercel-ip-country
  endpoint:
    path: /app/api/header/route.ts
    method: GET
    data_selector: country
- name: x-vercel-ip-country-region
  endpoint:
    path: /app/api/header/route.ts
    method: GET
    data_selector: region
- name: x-vercel-ip-city
  endpoint:
    path: /app/api/header/route.ts
    method: GET
    data_selector: city
- name: x-vercel-ip-latitude
  endpoint:
    path: /app/api/header/route.ts
    method: GET
    data_selector: latitude
- name: x-vercel-ip-longitude
  endpoint:
    path: /app/api/header/route.ts
    method: GET
    data_selector: longitude
- name: x-vercel-ip-timezone
  endpoint:
    path: /app/api/header/route.ts
    method: GET
    data_selector: timezone
- name: x-vercel-ip-postal-code
  endpoint:
    path: /app/api/header/route.ts
    method: GET
    data_selector: postalCode
- name: x-vercel-signature
  endpoint:
    path: /app/api/header/route.ts
    method: POST
    data_selector: signature
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: regions
  endpoint:
    path: /regions
    method: GET
    data_selector: regions
    params: {}
- name: cache_control_example
  endpoint:
    path: /app/api/cache-control-example/route.ts
    method: GET
    data_selector: Cache-Control headers example
    params: {}
- name: vercel_json_example
  endpoint:
    path: /vercel.json
    method: GET
    data_selector: Cache-Control headers example
    params: {}
- name: next_config_example
  endpoint:
    path: /next.config.js
    method: GET
    data_selector: Cache-Control headers example
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: cache_purge
  endpoint:
    path: /docs/cdn/purge
    method: POST
- name: default_cache_control
  endpoint:
    path: /default/cache-control
    method: GET
    data_selector: default-cache-control
    params: {}
- name: recommended_settings
  endpoint:
    path: /recommended/settings
    method: GET
    data_selector: recommended-settings
    params: {}
- name: s_maxage
  endpoint:
    path: /s-maxage
    method: GET
    data_selector: s-maxage
    params: {}
- name: stale_while_revalidate
  endpoint:
    path: /stale-while-revalidate
    method: GET
    data_selector: stale-while-revalidate
    params: {}
- name: stale_if_error
  endpoint:
    path: /stale-if-error
    method: GET
    data_selector: stale-if-error
    params: {}
- name: using_private
  endpoint:
    path: /using-private
    method: GET
    data_selector: using-private
    params: {}
- name: pragma_no_cache
  endpoint:
    path: /pragma-no-cache
    method: GET
    data_selector: pragma-no-cache
    params: {}
- name: cdn_cache_control_header
  endpoint:
    path: /cdn-cache-control-header
    method: GET
    data_selector: cdn-cache-control-header
    params: {}
- name: vercel_cdn_cache_control
  endpoint:
    path: /vercel-cdn-cache-control
    method: GET
    data_selector: vercel-cdn-cache-control
    params: {}
- name: cache_control
  endpoint:
    path: /cache-control
    method: GET
    data_selector: cache-control
    params: {}
- name: blog_posts
  endpoint:
    path: /blog
    method: GET
    data_selector: posts
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: blog_posts
  endpoint:
    path: /blog
    method: GET
    data_selector: posts
- name: revalidate
  endpoint:
    path: /api/revalidate
    method: GET
    data_selector: revalidated
- name: Reads
  endpoint:
    path: /docs/incremental-static-regeneration/limits-and-pricing#isr-reads-chart
    method: GET
- name: Writes
  endpoint:
    path: /docs/incremental-static-regeneration/limits-and-pricing#isr-writes-chart
    method: GET
- name: purge_cache
  endpoint:
    path: /v1/purge
    method: POST
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
- name: dynamic_redirects
  endpoint:
    path: /api/route
    method: GET
    data_selector: redirects
- name: static_redirects
  endpoint:
    path: /vercel.json
    method: GET
    data_selector: redirects
- name: rewrites
  endpoint:
    path: /rewrites
    method: GET
    data_selector: rewrites
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
    params: {}
- name: adding_domain
  endpoint:
    path: /docs/domains/working-with-domains/add-a-domain
    method: GET
- name: removing_domain
  endpoint:
    path: /docs/domains/working-with-domains/remove-a-domain
    method: GET
- name: renewing_domain
  endpoint:
    path: /docs/domains/working-with-domains/renew-a-domain
    method: GET
- name: transferring_domains
  endpoint:
    path: /docs/domains/working-with-domains/transfer-your-domain
    method: GET
- name: blog_posts
  endpoint:
    path: /blog
    method: GET
    data_selector: posts
- name: managing_dns_records
  endpoint:
    path: /docs/domains/managing-dns-records
    method: GET
    data_selector: records
- name: working_with_nameservers
  endpoint:
    path: /docs/domains/working-with-nameservers
    method: GET
    data_selector: records
- name: blog_posts
  endpoint:
    path: /blog
    method: GET
    data_selector: posts
- name: revalidate
  endpoint:
    path: /api/revalidate
    method: GET
    data_selector: revalidated
- name: dns_records
  endpoint:
    path: /domains/managing-dns-records
    method: GET
    data_selector: records
- name: dns_records
  endpoint:
    path: /v1/dns_records
    method: GET
    data_selector: records
- name: rewrites
  endpoint:
    path: /api/:path*
    method: GET
    data_selector: rewrites
    params: {}
- name: nameservers
  endpoint:
    path: /domains/nameservers
    method: GET
    data_selector: nameservers
    params: {}
- name: domains
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: records
- name: domains
  endpoint:
    path: /domains
    method: GET
    data_selector: records
    params: {}
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
    params: {}
- name: nameservers
  endpoint:
    path: /nameservers
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: domain_configuration
  endpoint:
    path: /docs/domains/add-a-domain
    method: GET
    data_selector: domains
- name: dns_records
  endpoint:
    path: /docs/domains/configure-dns
    method: GET
    data_selector: dns
- name: dns_records
  endpoint:
    path: /api/dns/records
    method: GET
    data_selector: records
    params: {}
- name: domains
  endpoint:
    path: /api/domains
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: supported_tlds
  endpoint:
    path: /v1/registrar/tlds/supported
    method: GET
- name: availability_for_a_domain
  endpoint:
    path: /v1/registrar/availability
    method: GET
- name: buy_a_domain
  endpoint:
    path: /v1/registrar/buy-a-domain
    method: POST
- name: renew_a_domain
  endpoint:
    path: /v1/registrar/renew-a-domain
    method: POST
- name: image_optimization
  endpoint:
    path: /_next/image
    method: GET
    data_selector: images
    params: {}
- name: image_optimization
  endpoint:
    path: /api/image-optimization
    method: GET
    data_selector: images
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: domain_configuration
  endpoint:
    path: /docs/domains/configuration
    method: GET
    data_selector: records
- name: dns_issues
  endpoint:
    path: /docs/domains/dns-issues
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Manage CDN Usage
  endpoint:
    path: /manage-cdn-usage
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: supported_tlds
  endpoint:
    path: /v1/registrar/tlds/supported
    method: GET
- name: availability_for_a_domain
  endpoint:
    path: /v1/registrar/availability
    method: GET
- name: buy_a_domain
  endpoint:
    path: /v1/registrar/buy-a-domain
    method: POST
- name: renew_a_domain
  endpoint:
    path: /v1/registrar/renew-a-domain
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: image_optimization
  endpoint:
    path: /docs/image-optimization
    method: GET
    data_selector: usage
- name: limits_and_pricing
  endpoint:
    path: /docs/image-optimization/limits-and-pricing
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cdn_usage
  endpoint:
    path: /v1/cdn/usage
    method: GET
    data_selector: usage
    params: {}
- name: comments
  endpoint:
    path: /comments
    method: GET
    data_selector: comments
- name: draft_content
  endpoint:
    path: /draft/content
    method: GET
    data_selector: content
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: Flags Explorer
  endpoint:
    path: /docs/feature-flags/flags-explorer
    method: GET
- name: comments
  endpoint:
    path: /api/comments
    method: POST
    data_selector: comments
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: draft_content
  endpoint:
    path: /draft/content
    method: GET
    data_selector: content
    params: {}
- name: toolbar_visibility_team
  endpoint:
    path: /dashboard/settings/general/vercel-toolbar
    method: GET
- name: toolbar_visibility_project
  endpoint:
    path: /dashboard/projects/{project_id}/settings/general/vercel-toolbar
    method: GET
- name: toolbar_session_disable
  endpoint:
    path: /toolbar/session/disable
    method: POST
- name: toolbar_automation_disable
  endpoint:
    path: /toolbar/automation/disable
    method: POST
- name: toolbar_branch_control
  endpoint:
    path: /dashboard/projects/{project_id}/settings/branches
    method: POST
- name: comments
  endpoint:
    path: /docs/comments
    method: GET
    data_selector: comments
    params: {}
- name: feature_flags
  endpoint:
    path: /docs/feature-flags
    method: GET
    data_selector: feature_flags
    params: {}
- name: draft_mode
  endpoint:
    path: /docs/draft-mode
    method: GET
    data_selector: draft_mode
    params: {}
- name: edit_mode
  endpoint:
    path: /docs/edit-mode
    method: GET
    data_selector: edit_mode
    params: {}
- name: layout_shifts
  endpoint:
    path: /docs/vercel-toolbar/layout-shift-tool
    method: GET
    data_selector: layout_shifts
    params: {}
- name: interaction_timing
  endpoint:
    path: /docs/vercel-toolbar/interaction-timing-tool
    method: GET
    data_selector: interaction_timing
    params: {}
- name: accessibility_audit
  endpoint:
    path: /docs/vercel-toolbar/accessibility-audit-tool
    method: GET
    data_selector: accessibility_audit
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: ''
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: hello
  endpoint:
    path: /api/hello/route.ts
    method: GET
    data_selector: response
    params: {}
- name: abort-controller
  endpoint:
    path: /api/abort-controller/route.ts
    method: GET
    data_selector: response
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: ''
- name: runtime_logs
  endpoint:
    path: /docs/runtime-logs
    method: GET
- name: number_of_logs_per_request
  endpoint:
    path: /docs/number-of-logs-per-request
    method: GET
- name: nextjs_logs
  endpoint:
    path: /docs/next.js-logs
    method: GET
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: regional_pricing
  endpoint:
    path: /regional_pricing
    method: GET
    data_selector: prices
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: hello
  endpoint:
    path: /api/hello
    method: GET
    data_selector: Response
- name: abort-controller
  endpoint:
    path: /api/abort-controller
    method: GET
    data_selector: Response
- name: function_logs
  endpoint:
    path: /v1/functions/logs
    method: GET
    data_selector: logs
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: functions
  endpoint:
    path: /api/functions
    method: GET
    data_selector: functions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: middleware
  endpoint:
    path: /create/middleware
    method: POST
    data_selector: middleware
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
    params: {}
- name: middleware
  endpoint:
    path: /middleware.ts
    method: POST
    data_selector: request
    params: {}
- name: cron_jobs
  endpoint:
    path: /cron-jobs
    method: GET
- name: regional_pricing
  endpoint:
    path: /regional/pricing
    method: GET
    data_selector: regions
    params: {}
- name: cron_job
  endpoint:
    path: /api/hello
    method: GET
    data_selector: response
    params:
      schedule: 0 5 * * *
- name: cron_jobs
  endpoint:
    path: /docs/cron-jobs/manage-cron-jobs
    method: GET
    data_selector: records
- name: middleware
  endpoint:
    path: /middleware.ts
    method: GET
    data_selector: Response
    params: {}
- name: cron_jobs
  endpoint:
    path: /api/sync-slack-team/T0CAQ10TZ
    method: GET
    data_selector: crons
- name: cron_jobs
  endpoint:
    path: /api/sync-slack-team/T4BOE34OP
    method: GET
    data_selector: crons
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cron_jobs
  endpoint:
    path: /docs/cron-jobs
    method: GET
    data_selector: jobs
    params: {}
- name: middleware
  endpoint:
    path: /create-routing-middleware
    method: POST
    data_selector: response
    params: {}
- name: middleware
  endpoint:
    path: /about/:path*
    method: GET
- name: middleware_multiple_paths
  endpoint:
    path: /about/:path*, /dashboard/:path*
    method: GET
- name: middleware_regex
  endpoint:
    path: /((?!api|_next/static|favicon.ico).*)
    method: GET
- name: middleware_character_matching
  endpoint:
    path: /blog/:slug(\d{1,})
    method: GET
- name: og_image
  endpoint:
    path: /og-image
    method: POST
    data_selector: data
    params: {}
- name: cron_jobs
  endpoint:
    path: /docs/cron-jobs/manage-cron-jobs
    method: GET
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: cron_jobs
  endpoint:
    path: /api/hello
    method: GET
    data_selector: jobs
    params:
      schedule: 0 5 * * *
- name: dynamic_title
  endpoint:
    path: /app/api/og/route.tsx
    method: GET
    data_selector: ImageResponse
- name: dynamic_external_image
  endpoint:
    path: /app/api/og/route.tsx
    method: GET
    data_selector: ImageResponse
- name: emoji
  endpoint:
    path: /app/api/og/route.tsx
    method: GET
    data_selector: ImageResponse
- name: svg
  endpoint:
    path: /app/api/og/route.tsx
    method: GET
    data_selector: ImageResponse
- name: generate_image
  endpoint:
    path: /api/og
    method: GET
    data_selector: image_response
- name: sync_slack_team
  endpoint:
    path: /api/sync-slack-team/T0CAQ10TZ
    method: GET
    data_selector: null
    params: {}
- name: sync_slack_team_2
  endpoint:
    path: /api/sync-slack-team/T4BOE34OP
    method: GET
    data_selector: null
    params: {}
- name: og_image
  endpoint:
    path: /og-image
    method: POST
    data_selector: imageUrl
    params: {}
- name: og_image
  endpoint:
    path: /api/og
    method: GET
    data_selector: image
    params: {}
- name: main_parameters
  endpoint:
    path: /main-parameters
    method: GET
- name: options_parameters
  endpoint:
    path: /options-parameters
    method: GET
- name: fonts_parameters
  endpoint:
    path: /fonts-parameters-within-options
    method: GET
- name: supported_html_css_features
  endpoint:
    path: /supported-html-and-css-features
    method: GET
- name: add_domain
  endpoint:
    path: /projects/addProjectDomain
    method: POST
    data_selector: requestBody
- name: verify_domain
  endpoint:
    path: /projects/verifyProjectDomain
    method: POST
    data_selector: requestBody
- name: remove_domain
  endpoint:
    path: /projects/removeProjectDomain
    method: DELETE
    data_selector: requestBody
- name: dynamic_title
  endpoint:
    path: /app/api/og/route.tsx
    method: GET
- name: dynamic_external_image
  endpoint:
    path: /app/api/og/route.tsx
    method: GET
- name: emoji
  endpoint:
    path: /app/api/og/route.tsx
    method: GET
- name: svg
  endpoint:
    path: /app/api/og/route.tsx
    method: GET
- name: og_image
  endpoint:
    path: /api/og
    method: GET
    data_selector: image
    params: {}
- name: encrypted_image
  endpoint:
    path: /api/encrypted
    method: GET
    data_selector: image
    params: {}
- name: private_repository
  endpoint:
    path: https://github.com/vercel/some-private-repo.git
    method: GET
- name: Vercel Functions
  endpoint:
    path: /docs/observability/insights#vercel-functions
    method: GET
- name: Edge Functions
  endpoint:
    path: /docs/observability/insights#edge-requests
    method: GET
- name: External APIs
  endpoint:
    path: /docs/observability/insights#external-apis
    method: GET
- name: Edge Requests
  endpoint:
    path: /docs/observability/insights#edge-requests
    method: GET
- name: Middleware
  endpoint:
    path: /docs/observability/insights#middleware
    method: GET
- name: Fast Data Transfer
  endpoint:
    path: /docs/observability/insights#fast-data-transfer
    method: GET
- name: Image Optimization
  endpoint:
    path: /docs/observability/insights#image-optimization
    method: GET
- name: ISR (Incremental Static Regeneration)
  endpoint:
    path: /docs/observability/insights#isr-incremental-static-regeneration
    method: GET
- name: Blob
  endpoint:
    path: /docs/observability/insights#blob
    method: GET
- name: Build Diagnostics
  endpoint:
    path: /docs/observability/insights#build-diagnostics
    method: GET
- name: AI Gateway
  endpoint:
    path: /docs/observability/insights#ai-gateway
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: resource_limits
  endpoint:
    path: /resource_limits
    method: GET
    data_selector: limits
- name: pricing
  endpoint:
    path: /pricing
    method: GET
    data_selector: pricing_info
- name: included_allotment
  endpoint:
    path: /included_allotment
    method: GET
    data_selector: allotment_info
- name: maximum_runtime_duration
  endpoint:
    path: /maximum_runtime_duration
    method: GET
    data_selector: runtime_info
- name: concurrent_sandboxes_limit
  endpoint:
    path: /concurrent_sandboxes_limit
    method: GET
    data_selector: concurrent_limit_info
- name: alerts
  endpoint:
    path: /v1/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: otel_integration
  endpoint:
    path: /docs/integrations
    method: GET
    data_selector: integrations
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: data
    params: {}
- name: alert_types
  endpoint:
    path: /api/alerts/types
    method: GET
    data_selector: alert_types
- name: configure_alerts
  endpoint:
    path: /api/alerts/configure
    method: POST
    data_selector: configuration
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: performance_metrics
  endpoint:
    path: /metrics/performance
    method: GET
    data_selector: metrics
    params: {}
- name: otel_integration
  endpoint:
    path: /integrations
    method: GET
    data_selector: integrations
    params: {}
- name: Speed Insights Script
  endpoint:
    path: /_vercel/speed-insights/script.js
    method: GET
    data_selector: script
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Real Experience Score
  endpoint:
    path: /speed-insights/real-experience-score
    method: GET
    data_selector: metrics
    params: {}
- name: Core Web Vitals
  endpoint:
    path: /speed-insights/core-web-vitals
    method: GET
    data_selector: metrics
    params: {}
- name: Other metrics
  endpoint:
    path: /speed-insights/other-metrics
    method: GET
    data_selector: metrics
    params: {}
- name: speed_insights_data
  endpoint:
    path: /blog/[slug]
    method: GET
    data_selector: data_points
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: deployments
  endpoint:
    path: /v1/deployments
    method: GET
    data_selector: deployments
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: Speed Insights Script
  endpoint:
    path: /_vercel/speed-insights/script.js
    method: GET
    data_selector: script
    params: {}
- name: project
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: real_experience_score
  endpoint:
    path: /api/v1/res
    method: GET
    data_selector: data
    params: {}
- name: core_web_vitals
  endpoint:
    path: /api/v1/core_web_vitals
    method: GET
    data_selector: data
    params: {}
- name: speed_insights
  endpoint:
    path: /v1/speed-insights
    method: GET
    data_selector: metrics
    params: {}
- name: speed_insights_data
  endpoint:
    path: /path/to/speed_insights_data
    method: GET
    data_selector: data_points
    params: {}
- name: speed_insights
  endpoint:
    path: /_vercel/speed-insights/vitals
    method: POST
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Recommended to validate webhook requests using the x-vercel-signature header.
- DDoS Mitigation continuously analyzes incoming traffic to detect signs of DDoS attacks.
- Dynamic Scaling proactively absorbs increased traffic to prevent overwhelming applications.
- Uses OAuth2 with refresh token for authentication.
- Vercel offers DDoS protection for enterprise customers.
- Vercel has a SOC 2 Type 2 attestation.
- Vercel is ISO 27001:2013 certified.
- BotID is real-time, frictionless protection for your most important routes. No CAPTCHAs
  or fine-tuning required.
- BotID runs detection scripts inside the session. It is resistant to spoofing, replay,
  and inspection.
- Custom rules can propagate globally in under 300ms.
- Requires API key for access
- Some endpoints may have rate limits
- Deploy with zero downtime.
- Zero configuration.
- Turborepo on Vercel requires little to no configuration to integrate with your favorite
  tools
- Remote caching without the hassle.
- API supports OAuth2 with refresh token flow.
- Vercel is DPF certified, ensuring compliance with data protection laws.
- Vercel is ISO 27001:2022 certified.
- Authentication requires a connected app setup.
- Requires an OAuth setup to access the API.
- API may have rate limits on requests.
- Uses OAuth2 with refresh token.
- SSL certificates are generated automatically.
- Automate your deployment process then review among your team with Preview Deployments,
  generated with every commit.
- Requires setup of OAuth application in Vercel
- Empowering design engineers to do their best work, at the moment of inspiration.
- OAuth Sign-in available for GitHub, Google, GitLab, Bitbucket.
- Requires setup of OAuth app in Vercel
- Some objects like Contact may return nulls in deeply nested fields
- The development token expires after 12 hours.
- Authentication is handled automatically via OIDC tokens for Vercel deployments.
- For non-Vercel deployments, provide an AI Gateway API key by setting the AI_GATEWAY_API_KEY
  environment variable.
- Requires setup of connected app in Vercel
- API requires authentication
- Uses OAuth2 with refresh token — requires setup of connected app in Vercel
- API requires authentication setup.
- Static files are cached for up to 31 days.
- Requires no additional services needed to procure or set up.
- Astro middleware is not the same as Vercel's Routing Middleware.
- You must use Vercel's Routing Middleware for rewrites.
- Automatically optimizes and caches assets for the best performance
- Requires no additional services to procure or set up
- Supports zero-downtime rollouts
- OAuth2 with refresh token is required for API access.
- Requires setup of a Vercel account to obtain credentials
- Requires OAuth authentication setup.
- Requires OAuth2 setup
- Ensure API key is kept secure
- Functions should always execute close to where your data source is to reduce latency.
- Uses OAuth2 for authentication
- Uses OAuth2 with refresh token — requires setup of Vercel application
- Ensure proper OAuth2 setup for authentication.
- API usage is subject to rate limits.
- API requires OAuth2 authentication for access.
- Requires OAuth2 setup for authentication.
- A project is the application that you have deployed to Vercel.
- You can have multiple projects connected to a single repository.
- OAuth2 requires setup of the connected app in Vercel
- Uses OAuth2 with refresh token for authentication
- Requires setup of OAuth credentials in Vercel
- All domains purchased on Vercel have WHOIS privacy enabled by default.
- Uses OAuth2 with refresh token — requires setup of connected app in vercel
- Collaboration is key in successful development projects, and Vercel offers robust
  features to enhance collaboration among developers.
- Setup requires connected app in Vercel
- API may have rate limits on calls
- Assigning a custom domain to your project guarantees that visitors to your application
  will have a tailored experience that aligns with your brand.
- The framework list is not exhaustive, but a representation of the most popular frameworks
  deployed on Vercel.
- We're committed to having support for all Vercel features across frameworks, and
  continue to work with framework authors on adding support.
- Incremental migration allows legacy and new systems to operate simultaneously.
- Implement a Content Security Policy (CSP) and proper security headers
- Enable Deployment Protection to prevent unauthorized access to your deployments
- Configure the Vercel Web Application Firewall (WAF) to monitor, block, and challenge
  incoming traffic
- Enable Log Drains to persist logs from your deployments
- Review common SSL certificate issues
- Enable a Preview Deployment Suffix to use a custom domain for Preview Deployments
- Commit your lockfiles to pin dependencies and speed up builds through caching
- Consider implementing rate limiting to prevent abuse
- Review and implement access roles to ensure the correct permissions are set for
  your team members
- Enable SAML SSO and SCIM (Enterprise plans with Owner role only)
- Enable Audit Logs to track and analyze team member activity (Enterprise plans with
  Owner role only)
- Ensure that cookies comply with the allowed cookie policy (Enterprise plans with
  Owner role only)
- Setup a firewall rule to block requests from unwanted bots
- Available on Pro and Enterprise plans
- Enterprise plans only allow automatic Function failover
- Enterprise plans can run load tests on applications
- To create an Authorization Bearer token, see the access token section of the API
  documentation.
- Activity Log is available on all plans
- Vercel does not emit any logs to third-party services. The Activity Log is only
  available to the account owner and team members.
- Incremental migration allows the current and new site to operate simultaneously.
- Deployment Protection requires authentication for all requests
- Features available on different plans
- Sharable Links are available on all plans
- Protection Bypass for Automation is available on all plans
- Deployment Protection Exceptions are available on Enterprise plans or with the Advanced
  Deployment Protection add-on for Pro plans
- OPTIONS Allowlist is available on all plans
- Enable Observability Plus to debug and optimize performance, investigate errors,
  monitor traffic, and more (Available on Pro and Enterprise plans)
- Enable automatic Function failover to add multi-region redundancy and protect against
  regional outages (Enterprise plans only)
- Consider running a load test on your application to stress your upstream services
  (Enterprise plans only)
- Directory Sync is available on Enterprise plans
- Changes to your Directory Provider will automatically be synced with your team members
- Deployment protection requires authentication for all requests, including those
  to Middleware.
- This feature is available on the Enterprise plan.
- Sharable Links allow external access to specific branch deployments through a secure
  query parameter.
- Protection Bypass for Automation generates a secret that can be used as a System
  Environment Variable to bypass protection features.
- Ensure correct OAuth scopes are set for access
- Rate limits apply for API requests
- Teams can enforce two-factor authentication (2FA) for all members.
- Password Protection is available on Enterprise plans or with the Advanced Deployment
  Protection add-on for Pro plans
- Trusted IPs restrict deployment access to specified IPv4 addresses and CIDR ranges
- Vercel Agent is available in Beta on Enterprise and Pro plans
- Directory Sync is only available for Enterprise Teams
- Ensure at least one person in your team has the owner role to prevent account lockout
- SAML is available on Enterprise and Pro plans
- To configure SAML SSO, you must be an owner of the team
- Two-factor authentication (2FA) adds an additional layer of security.
- Teams can enforce 2FA for all members.
- Vercel Agent is available in Beta on Enterprise and Pro plans.
- The AI SDK abstracts away the differences between model providers.
- Uses API key for authentication
- Model and provider can be specified in API calls
- 'No lock-in: purchase AI Gateway Credits as you use them, with no obligation to
  renew your commitment.'
- If you use a custom API key, there is no markup or fee from AI Gateway.
- Uses API key for authentication.
- Reasoning output can be enabled for models that support it.
- Streaming responses are sent as Server-Sent Events (SSE)
- The API key must be set in the environment variable AI_GATEWAY_API_KEY or VERCEL_OIDC_TOKEN.
- The reasoning parameter controls how reasoning tokens are generated and returned.
- Uses API key for authorization
- Modalities parameter is not yet in OpenAI Python types but supported by our gateway
- Uses API key for authorization.
- Supports both non-streaming and streaming chat completions.
- Supports image and PDF attachments as part of requests.
- API key is required for authentication.
- Vercel OIDC tokens are only valid for 12 hours, so you will need to refresh them
  periodically during local development.
- Integrating credentials like this with AI Gateway is sometimes referred to as Bring-Your-Own-Key,
  or BYOK.
- Provider credentials are scoped to be available throughout your Vercel team, so
  you can use the same credentials across multiple projects.
- Streaming responses are supported when stream is set to true.
- Images must be converted to base64 before being sent.
- API requires an API key sent in the Authorization header.
- Generated images are returned as `GeneratedFile` objects in the `result.files` array.
- The mcp-handler provides built-in OAuth support to secure your MCP server.
- If total input tokens (prompt + cache reads/writes) exceed 200K, input is charged
  2× and output 1.5×; otherwise standard rates apply.
- 'Always confirm you''re connecting to Vercel''s official MCP endpoint: https://mcp.vercel.com'
- Connecting to Vercel MCP grants the AI system you're using the same access as your
  Vercel user account
- Vercel MCP only supports AI clients that have been reviewed and approved by Vercel.
- If you have not installed an AI provider through the Vercel dashboard, then you
  will have ten lifetime generations per provider (they do not refresh, and once used,
  are spent) regardless of plan.
- Some objects may return nulls in deeply nested fields
- Supports various AI models for high-performance tasks
- Allows streaming responses up to 30 seconds
- This integration gives you access to the large selection of available AI models
  and allows you to manage your tokens, billing and usage directly from Vercel.
- The integration provides access to a selection of AI models and the ability to manage
  tokens, billing, and usage directly from Vercel.
- Integrating LMNT with Vercel enables your applications to offer accurate insights
  and forecasts, particularly useful in finance and healthcare sectors.
- Use ElevenLabs for generating natural-sounding synthetic voices in applications.
- Requires setup of connected app in Vercel.
- Always keep your API keys confidential. Do not expose them in client-side code.
- Integrating Perplexity via its Sonar API with Vercel allows your applications to
  deliver real-time, web-wide research and question-answering capabilities.
- The REPLICATE_API_TOKEN environment variable is required.
- Ensure you have the latest version of Vercel CLI
- 'All requests must be encoded as JSON with the Content-Type: application/json header.'
- Vercel Access Tokens are required to authenticate and use the Vercel SDK.
- Ensure the token has the correct scope and has not expired.
- Integrating Together AI with Vercel empowers your applications with enhanced user
  interaction and co-creative functionalities.
- Access Tokens are required to authenticate and use the Vercel API.
- Setting an expiration date on an Access Token is highly recommended.
- Vercel automatically performs a build every time you deploy your code
- The maximum build time is 45 minutes
- Uses OAuth2 with refresh token
- 'Build timeout: The maximum build time is 45 minutes.'
- 'Build cache: Each build cache can be up to 1 GB.'
- Build Logs and Source Protection is enabled by default.
- Vercel does not provide the build image itself, but you can use the Amazon Linux
  2023 base image to test things locally.
- Vercel builds your project with a shallow clone of the Git repository.
- New projects on Enterprise teams will have on-demand concurrency turned on by default.
- On-demand concurrent builds is available on Enterprise and Pro plans
- Deploy Hooks allow triggering deployments without authentication.
- Limit of 5 deploy hooks per project for Hobby and Pro accounts, and 10 for Enterprise
  accounts.
- To trigger a workflow in response to Vercel deployments using `repository_dispatch`,
  use the `vercel/repository-dispatch/actions/status@v1` action to set a status on
  the commit for Vercel Deployment Checks.
- Vercel provides unlimited deployment retention for all deployments, regardless of
  the plan that you are on.
- Deploy Hooks do not require authentication
- Hobby and Pro accounts have a limit of 5 deploy hooks per project. Enterprise accounts
  have a limit of 10 deploy hooks per project.
- To create an Authorization Bearer token, refer to the access token section of the
  API documentation.
- Some responses may vary based on account type
- Generated URLs are publicly accessible by default, but can be configured to be private
  using deployment protection.
- If more than 63 characters are present before the .vercel.app suffix, they will
  be truncated.
- If the project-name resembles a regular web domain, it may be shortened to avoid
  that resemblance.
- Ensure to have the required permissions for API access.
- Deployment retention policies allow control over how long deployment data is stored.
- Ensure to set the correct permissions for OAuth tokens.
- Builds can fail without providing any build logs when Vercel detects a missing precondition
  that prevents a build from starting.
- By default, the system generates this report only when it detects a problem. To
  receive a report for every deployment, set VERCEL_BUILD_SYSTEM_REPORT=1 as an environment
  variable.
- Generated URLs are publicly accessible by default, but can be configured to be private.
- Deleting a deployment prevents you from using instant rollback on it and might break
  the links used in integrations
- You can set a deployment retention policy to automatically delete deployments after
  a certain period
- Uses Open Graph protocol for metadata
- Twitter metadata falls back to Open Graph values if not specified
- Sometimes, your Deployment Build can hit platform limits so that the build will
  be cancelled and throw a corresponding error that will be shown in the Build logs.
- Requires setup of OAuth2 for authentication
- OG images must have an absolute URL derived from the deployment’s URL.
- Anyone with the link can view your deployment if deployment protection is not enabled.
- Collaborators do not need a Vercel account unless they wish to comment or view a
  protected deployment.
- Collaboration is free for public repositories.
- Hobby Plan does not support collaboration for private repositories.
- Pro Plan allows for collaboration through team membership.
- Preview Deployment Suffix is available on Enterprise and Pro plans.
- Environment variables are key-value pairs configured outside your source code so
  that each value can change depending on the Environment.
- Any change you make to environment variables are not applied to previous deployments,
  they only apply to new deployments.
- Developers on all plans using the runtimes stated can use a total of 64 KB in Environment
  Variables per-Deployment on Vercel.
- While Vercel allows environment variables up to a total of 64KB in size, Edge Functions
  and Middleware using the edge runtime are limited to 5KB per Environment Variable.
- Anyone can view the deployment if deployment protection is not enabled.
- With deployment protection enabled, only authorized users can view the deployment.
- Framework environment variables are not prefixed when pulled into your local development
  environment with vercel env pull.
- Environment variables are key-value pairs configured outside your source code so
  that each value can change depending on the environment.
- Uses environment variables for deployment configuration
- The value can be either production, preview, development, or the name of a custom
  environment.
- Uses Vercel environment variables for configuration.
- Changes to environment variables are not applied to previous deployments, they only
  apply to new deployments.
- You must redeploy your project to update the value of any variables you change in
  the deployment.
- 'The following environment variable names are reserved and therefore unavailable
  for use: AWS_SECRET_KEY, AWS_EXECUTION_ENV, AWS_LAMBDA_LOG_GROUP_NAME, AWS_LAMBDA_LOG_STREAM_NAME,
  AWS_LAMBDA_FUNCTION_NAME, AWS_LAMBDA_FUNCTION_MEMORY_SIZE, AWS_LAMBDA_FUNCTION_VERSION,
  NOW_REGION, TZ, LAMBDA_TASK_ROOT, LAMBDA_RUNTIME_DIR.'
- 'The following environment variable names are allowed by Vercel Function runtimes:
  AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_SESSION_TOKEN, AWS_REGION, AWS_DEFAULT_REGION.'
- Sensitive environment variables are non-readable once created.
- API requires OAuth2 authentication
- Rate limits may apply to API requests
- Branch-specific variables are not currently supported with Shared Environment Variables
- Automatically expose System Environment Variables for deployments
- Some React warnings will display as build errors when exposing environment variables
- Requires OAuth2 authentication.
- Ensure to set up your API keys correctly.
- The following environment variable names are reserved and therefore unavailable
  for use.
- The following environment variable names are allowed by Vercel Function runtimes.
- Production deployment will be created each time you merge to the production branch.
- By default, every preview branch automatically receives its own domain.
- Requires setup of OAuth2 in Vercel dashboard
- Rate limits apply to API usage
- Shared Environment Variables are created on the Team Settings page
- When a project-level and a Shared Environment Variable share the same key and environment,
  the project-level environment variable always overrides the Shared Environment Variable.
- Uses OAuth2 with GitHub integration.
- Requires Collaborator access to the repository.
- Uses OAuth2 with refresh token — requires setup of connected app in Vercel.
- Create a Vercel Personal Access Token for deployment.
- Use secret variables to store sensitive information.
- When importing or connecting a Bitbucket repository, we require that you have Admin
  access to the corresponding repository.
- Automatic deployments on every branch push and merges onto the production branch.
- You cannot run parallel roll backs on the same project
- Only one deployment can be rolled back at a time for every project
- Vercel for GitHub automatically deploys your GitHub projects.
- Requires setup of connected app in GitHub.
- Microfrontends is available in Beta on all plans
- You must create a Vercel Personal Access Token and use it in Azure Pipelines as
  a secret variable.
- Requires setup of OAuth2 with Vercel for authentication
- The local proxy allows developers to run only the microfrontend they are working
  on locally.
- To disable the local proxy redirect, set the environment variable MFE_DISABLE_LOCAL_PROXY_REWRITE=1.
- Requires Admin access to the repository for webhook configuration.
- GitLab integration requires Maintainer access to the corresponding repository.
- Microfrontends is available in Beta on all plans.
- Only one deployment can be rolled back at a time for every project.
- A rolled back deployment stays disabled in your deployment list.
- Some endpoints may return varying data structures
- Microfrontends may add additional complexity to your development process.
- env and globalEnv key support is available in Turborepo version 1.5 or later.
- Building a Next.js application that is using Skew Protection always results in a
  Turborepo cache miss.
- Remote Caching is automatically enabled on Vercel for organizations with Turborepo
  enabled on their monorepo.
- Use nx version 14.6.2 or later
- Use nx-cloud version 14.6.0 or later
- Ensure the NX_CACHE_DIRECTORY=/tmp/nx-cache is set
- Set the cacheDirectory option to /tmp/nx-cache at tasksRunnerOptions.{runner}.options
  in your nx.json
- Uses Vercel CLI 20.1.0 or newer to manage monorepos.
- Uses npm by default when no lock file exists.
- Protected Git Scopes are available on Enterprise plans.
- Those with the owner role can access this feature.
- Vercel Remote Cache is free for all plans, subject to fair use guidelines.
- Rolling Releases impact which deployment a user gets when they make a page load.
- Skew Protection is available on Pro and Enterprise plans.
- Pro teams have a maximum age of 12 hours and Enterprise teams can configure a custom
  maximum age.
- Webhook endpoint URLs must be public.
- When no lock file exists, Vercel uses npm by default.
- Vercel's CDN is designed to deploy new releases of your site without downtime by
  purging the Edge Cache globally and replacing the current deployment.
- Use caching headers to optimize performance.
- Use compression headers to reduce data size.
- Rolling Releases should work out-of-the-box for most projects
- CSP acts as a second line of defense, reducing the risk of XSS exploits.
- While CSP is a robust security measure, it's part of a multi-layered security strategy.
- Skew Protection is available on Pro and Enterprise plans
- Pro teams have a maximum age of 12 hours and Enterprise teams can configure a custom
  maximum age
- Requires OAuth2 authentication for access.
- Data may be subject to rate limits.
- Webhooks can be configured at the account level for Pro and Enterprise plans.
- Webhook URLs must be public to receive events.
- Vercel's CDN is a globally distributed platform that stores content near your customers
  and runs compute in regions close to your data, reducing latency and improving end-user
  performance.
- Static files are automatically cached at the edge on Vercel's CDN for the lifetime
  of the deployment after the first request.
- Purge is not the same as creating a new deployment because it will also purge Image
  Optimization content, which is usually preserved between deployments.
- Out of the box, every deployment on Vercel is served over an HTTPS connection.
- Enabling HTTPS redirection for deployments is considered an industry standard, and
  therefore it is not possible to disable it.
- Vercel helps reduce data transfer and improve performance by supporting both Gzip
  and Brotli compression.
- Incremental Static Regeneration is available on all plans
- Pages can be generated when requested by a visitor or through an API instead of
  during the build
- The `x-vercel-cache` header indicates the cache status of static assets and responses.
- The response may include headers like `x-vercel-id` to indicate regions and prevent
  infinite loops.
- Uses Incremental Static Regeneration (ISR) for caching and revalidation.
- If a static file is unchanged, the cached value can persist across deployments due
  to the hash used in the filename.
- ISR Reads and Writes are priced regionally based on the Vercel function region(s)
  set at your project level.
- There is no limit on storage for ISR, all the data you write remains cached for
  the duration you specify.
- Ensure proper authentication setup in Vercel before making API calls.
- API calls may be rate limited
- Cache tags are case-sensitive.
- Purge event is not billed but can temporarily increase Function Duration and other
  metrics.
- Redirects can be configured to consider the source country of requests.
- Every deployment is served over an HTTPS connection.
- HTTP requests are automatically forwarded to HTTPS using the 308 status code.
- HSTS is supported and preloaded for .vercel.app domain.
- Vercel uses Gzip and Brotli compression algorithms.
- DNS records are an entry in a database that maps the domain with the IP address
- Nameservers are an important part of the DNS
- SSL Certificates are a way to show that there is a secure connection from your domain
  to your website
- Uses OAuth2 with refresh token — requires setup of a Vercel application
- Incremental Static Regeneration allows you to create or update content on your site
  without redeploying.
- DNS is the system used to connect domain names to IP addresses.
- Vercel defaults to 60s for a DNS record.
- Managing DNS Records is a feature offered by Vercel.
- DNS Records can take up to 24 hours to fully update.
- OAuth2 authentication is required for API access.
- Nameservers provided by Vercel are ns1.vercel-dns.com and ns2.vercel-dns.com.
- Nameserver changes can take up to 48 hours to complete due to DNS propagation.
- This overview shows a point of view of a user visiting your site.
- The /.well-known path is reserved and cannot be redirected or rewritten.
- Only Enterprise teams can configure custom SSL.
- The automatically generated certificate will remain in place, but a custom certificate
  is prioritized over the existing certificate.
- Pre-generate SSL certificates requires the domain to belong to a team.
- DNS records can take time to propagate.
- A short TTL (minimum 30s) is beneficial if you are constantly updating the content.
- DNS changes can take a while to propagate across the globe, depending on the previous
  DNS record TTL length.
- When adding a new DNS record to a domain, the Name field should use the prefix or
  location of the record.
- DNS records can take up to 24 hours to fully update.
- Default records can't be removed, but new records can override them.
- Optimizes images for different device sizes and formats.
- Automatically optimizes images on demand when deployed to Vercel.
- Automatically generated certificate will remain in place, but a custom certificate
  is prioritized over the existing certificate.
- You can include canonical names CN's for other subdomains on the certificate without
  needing to add these domains to Vercel.
- Wildcards certificates can be uploaded.
- Certificates with an explicitly defined subdomain are prioritized over a wildcard
  certificate when both are valid for a given subdomain.
- Vercel cannot automatically renew custom certificates.
- Image Optimization is free for Hobby users within the usage limits.
- Requires setup of OAuth2 application in Vercel.
- If your images do not change in less than a month, set max-age=2678400 (31 days)
  in the Cache-Control header.
- Use the unoptimized property on the Image component for source images that do not
  benefit from optimization.
- Authentication requires setup of a connected app in Vercel.
- Common issues may arise from misconfigured domain settings.
- Propagation times for DNS changes can vary.
- Once you exceed the limits, new source images will fail to optimize and return a
  runtime error response with 402 status code.
- Fast Data Transfer usage incurs alongside Edge Requests every time a user visits
  your site
- Fast Origin Transfer is incurred when using any of Vercel's compute products
- Optimizing images reduces file size while maintaining high quality.
- Cached optimized images are available close to users whenever requested.
- You can enable or disable comments at the account level with certain permissions.
- You can optionally choose to allow the setting to be overridden at the project level.
- To help you minimize Image Optimization usage costs, consider implementing caching
  strategies and optimizing image formats.
- Legacy Pricing for Image Optimization
- Requires setup of Vercel API tokens
- Fast Data Transfer usage incurs alongside Edge Requests every time a user visits
  your site, and is priced regionally.
- Fast Origin Transfer is incurred when using any of Vercel's compute products.
- Edge Requests are for all requests made to your site, including static assets and
  functions.
- Commenting is available in production and localhost when using the Vercel Toolbar
  package.
- Private Slack channels will not appear in the dropdown list when setting up the
  Slack integration unless you have already invited the Vercel app to the channel.
- Request collapsing is supported for Incremental Static Regeneration (ISR) and Image
  Optimization.
- Only team members will be able to view pages in Draft Mode.
- Viewers outside your Vercel team cannot enable Draft Mode or see your draft content,
  even with a draft URL.
- Some API calls may require specific permissions.
- Feature flags are a powerful tool that allows you to control the visibility of features
  in your application.
- Vercel offers various options to integrate feature flags into your application.
- Flags Explorer is available on all plans.
- Web Analytics are available on all plans.
- Edge Config is available on all plans.
- Users must be logged in to create comments.
- Comments left on pages with query params in the URL may not appear on the page when
  you visit the base URL.
- To see all pages with similar URLs, filter by page and search with a `*` wildcard.
- Requires OAuth2 authentication setup with client ID and secret.
- Commenting is available for deployments made with the Vercel CLI
- Keys are truncated to 256 characters
- Values are truncated to 256 characters
- Reported values must be JSON serializable or they will be ignored
- Uses ISR to fetch and render data from a headless CMS
- Only team members will be able to view pages in Draft Mode
- The Vercel Toolbar is enabled by default for all preview deployments.
- Overrides are not persisted and only affect the user applying them, in the environment
  in which they were set.
- To disable the toolbar project-wide, select the project in the dashboard.
- Presence of the x-vercel-skip-toolbar header triggers Vercel to disable the toolbar.
- Feature Flags integration is available in Beta on all plans
- The browser extension is available on all plans.
- The accessibility audit tool is enabled by default.
- Fluid compute is enabled by default for new projects as of April 23, 2025.
- 'To disable the toolbar in the current browser tab: Activate the Vercel Toolbar
  by clicking on it and select Disable for Session.'
- 'Functions are archived when they are not invoked: Within 2 weeks for Production
  Deployments, Within 48 hours for Preview Deployments.'
- Fluid compute allows multiple invocations to share a single function instance.
- Supports cancellation feature in Node.js runtime.
- Can perform cleanup operations on SIGTERM signal.
- Users on the Pro and Enterprise plans can use Vercel's support for Log Drains to
  collect and analyze your logs using third-party providers.
- Logs are held for an amount of time based on your plan.
- Requires OAuth2 authentication for accessing data.
- Vercel Functions have a maximum payload size of 4.5 MB.
- File descriptors limit is 1,024 shared across concurrent executions.
- You should copy your OpenAI API key in the .env.local file with name OPENAI_API_KEY.
- Vercel Functions are region-first, and can be deployed to up to 3 regions on Pro
  or 18 on Enterprise.
- Some API calls may be rate-limited based on your plan.
- Cancelling requests is useful for cleaning up resources or stopping long-running
  tasks.
- Data Cache is available in Beta on all plans
- Vercel Data Cache is used for caching data fetched during a function's execution
- Requires setup of OAuth2 credentials in Vercel.
- Each of the logs are 256 KB per line.
- Maximum payload size for the request body or the response body of a Vercel Function
  is 4.5 MB.
- The default runtime for Routing Middleware is Edge.
- You can change the runtime of your Routing Middleware by exporting a config object
  with a runtime property in your middleware.ts file.
- Routing Middleware is available on Node.js and Edge runtimes.
- Edge is the default runtime for Routing Middleware.
- Routing Middleware will be invoked for every route in your project.
- If you only want it to be run on specific paths, you can define those with a custom
  matcher config or with conditional statements.
- Cron jobs on Vercel do not support alternative expressions like MON, SUN, JAN, or
  DEC
- You cannot configure both day of the month and day of the week at the same time.
  When one has a value, the other must be *
- The timezone is always UTC
- Some data may return nulls in deeply nested fields
- Vercel Data Cache is automatically enabled to cache segment-level data alongside
  ISR in the app router
- Uses Edge as default runtime for Routing Middleware.
- Disabled cron jobs will still be listed and will count towards your cron jobs limits
- Cron jobs do not follow redirects
- Cron Jobs are available on all plans
- Each project has a hard limit of 20 cron jobs per project
- Edge is the default runtime for Routing Middleware
- Only ttf, otf, and woff font formats are supported.
- Maximum bundle size of 500KB.
- Some API responses may vary based on user permissions
- Cron jobs execute every day at 5:00 am UTC
- Uses Next.js with @vercel/og for image generation.
- Uses @vercel/og for image generation
- Supports multiple font formats
- Vercel will not retry an invocation if a cron job fails
- GitHub personal access token or GitHub App token required for authentication.
- Vercel Sandbox is available in Beta.
- 'Recommended OG image size: 1200x630 pixels'
- Automatic SSL certificate issuance and renewal
- Low-latency responses globally with the Vercel CDN
- Wildcard domain requires Vercel nameservers
- DNS propagation delays can take 24–48 hours
- Multi-tenant preview URLs are available exclusively for Enterprise customers.
- Custom SSL certificates are available exclusively for Enterprise customers.
- Fine-grained tokens provide repository-specific access and enhanced security.
- Set the GitHub access token as an environment variable.
- Observability is available on all plans at no additional cost.
- Observability Plus users have a longer retention period and more granular data.
- Vercel Sandbox is available in Beta on all plans.
- Currently, Vercel Sandbox is only available in the iad1 region.
- Users on all plans can use Observability at no additional cost, with some limitations.
- Observability is available for all projects in the team.
- Alerts are available in Beta on Enterprise and Pro plans with Observability Plus
- Unlimited custom domains
- Unlimited *.yourdomain.com subdomains
- Domain management through REST API or SDK
- Preview environment support to test changes
- Support for 35+ frontend and backend frameworks
- Forgetting to verify domain ownership can block SSL certificate issuance
- Misspelled domain can block domain verification or routing
- Logs are shown in realtime and grouped as per request.
- Each action of writing to standard output, such as using console.log, results in
  a separate log entry.
- The maximum number of logs is 256 lines per request.
- Each of those logs can be up to 256 KB per line.
- The sum of all log lines can be up to 1 MB per request.
- Domain management operations through the Vercel API are subject to standard API
  rate limits.
- Uses OpenTelemetry for tracing
- Service name must be set in the service catalog for APM vendor
- Tracing is available on all plans with a limit up to 1 million spans per month,
  per team.
- Enabling and disabling Observability Plus are available on Enterprise and Pro plans
- Free observability users can still open a query, but they cannot modify any filters
  or create new queries
- Alerts are available in Beta on Enterprise and Pro plans with Observability Plus.
- Monitoring will be sunset for Pro plans at the end of your next billing cycle in
  November 2025.
- Logs are streamed. Each log output can be up to 256KB, and each request can log
  up to 1MB of data in total, with a limit of 256 individual log lines per request.
- Runtime logs are stored with varying retention times based on the plan.
- Use of OTel collector is recommended due to its performance benefits.
- Enabling Speed Insights will add new routes scoped at /_vercel/speed-insights/*
  after your next deployment.
- To view the data, go to your dashboard, select your project, and click the Speed
  Insights tab.
- Available on Enterprise and Pro plans
- Those with the owner role can access this feature
- Timestamps in the Speed Insights view are in local time (not UTC).
- Up to 6 data points can be potentially tracked per visit.
- Data points are collected anonymously
- Does not store information to reconstruct browsing sessions
- Notebooks are available on Enterprise and Pro plans
- You need to enable Observability Plus to use Notebooks since you need to run queries.
- The Speed Insights feature does not collect or store information that would enable
  us to reconstruct a browsing session across pages or identify a user.
errors:
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Invalid or expired token.'
- 'Access Denied: Access Denied'
- '403: Access Denied'
- '403 Forbidden: Check API key permissions'
- '404 Not Found: Verify endpoint path'
- '429 Too Many Requests: Rate limit exceeded'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '404 Not Found: Check the endpoint path for correctness.'
- '500 Internal Server Error: Retry the request after some time.'
- '401 Unauthorized: Check your access token.'
- '403 Forbidden: You do not have permission to access this resource.'
- '429 Too Many Requests: Rate limit exceeded, try again later.'
- '401 Unauthorized: Check your token and permissions.'
- '401 Unauthorized: Check OAuth scopes or token expiration'
- '401 Unauthorized: Check your OAuth token'
- '403 Forbidden: Verify your permissions'
- '404 Not Found: Endpoint does not exist'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check your OAuth token or client credentials.'
- '401 Unauthorized: Check your credentials or token expiration'
- '404 Not Found: The requested resource could not be found'
- '401 Unauthorized: Check your authentication credentials.'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Check credentials'
- '403 Forbidden: Check permissions for the API token'
- '404 Not Found: Verify the endpoint and parameters'
- '403 Forbidden: Check API key or permissions.'
- '404 Not Found: Verify endpoint path.'
- '404 Not Found: Endpoint does not exist.'
- '401 Unauthorized: Check your access token or permissions.'
- '404 Not Found: Ensure the endpoint exists.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '401 Unauthorized: Recheck OAuth credentials'
- '429 Too Many Requests: Throttle API calls'
- 'RATE_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'Access restricted: Ensure proper authentication is configured.'
- '429 Too Many Requests: Exceeded rate limit'
- '401 Unauthorized: Check your OAuth token and scopes'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '400 Bad Request: Check your input parameters'
- '401 Unauthorized: Invalid API key'
- '404 Not Found: Check the endpoint path'
- '401 Unauthorized: Recheck API key or token expiration'
- '400 Bad Request: Invalid request parameters'
- '401 Unauthorized: Invalid or missing authentication'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: Model or endpoint not found'
- '500 Internal Server Error: Server error'
- '401 Unauthorized: Recheck API key'
- '401 Unauthorized: Check API key validity'
- '401 Unauthorized: Check API key or token.'
- '401 Unauthorized: Check your API key.'
- '500: Internal Server Error - Check if the REPLICATE_API_TOKEN is set.'
- '500: Internal Server Error: Check if the prediction ID is correct.'
- '403: Failed authentication'
- '403: Permission error due to expired token or incorrect scope.'
- '403: Failed Authentication'
- '403: Permission errors can occur if the token is expired, does not have the correct
  scope, or the operation is not available for the team.'
- 'Build timeout: The maximum build time is 45 minutes'
- '403 Forbidden: Check permissions'
- '401 Unauthorized: Recheck OAuth token'
- 'Build failed: Check logs for more details.'
- 'Build timeout: Exceeded 45 minutes limit.'
- 'DEPLOY_HOOK_FAILED: Check the status check on the commit associated with the deploy
  hook'
- 'Deploy Hook fails to create a deployment: Check the status check on the commit
  associated with the deploy hook'
- '403 Forbidden: Check your permissions or token validity'
- '429 Too Many Requests: Reduce frequency of API calls'
- '404 Not Found: Check the endpoint URL or resource ID'
- '401 Unauthorized: Check OAuth credentials'
- '403 Forbidden: Check API permissions.'
- '404 Not Found: Verify the endpoint path.'
- Missing Build script
- Recursive invocation of commands
- Pnpm engine unsupported
- '401 Unauthorized: Check API key or OAuth token'
- '403 Forbidden: Verify user permissions'
- '429 Too Many Requests: Reduce the frequency of requests'
- '401 Unauthorized: Ensure valid access token'
- '404 Not Found: Check the endpoint or resource ID'
- '401 Unauthorized: Check your API token and permissions.'
- '404 Not Found: The requested resource could not be found.'
- '429 Too Many Requests: Reduce API call frequency'
- '401 Unauthorized: Check OAuth2 token validity'
- '403 Forbidden: Insufficient permissions to access the repository.'
- '401 Unauthorized: Check your OAuth tokens'
- '401 Unauthorized: Check token validity'
- Please contact your account owner to enable Remote Caching on Vercel.
- Build outputs cannot be found on cache hit
- Unexpected cache misses
- '404 Not Found: Ensure the requested resource exists.'
- 'INVALID_TOKEN: Verify the provided token.'
- 'RATE_LIMIT_EXCEEDED: Reduce the number of requests.'
- '404 Not Found: Check the endpoint path.'
- 'cache stampede problem: A good use case for deleting the cache is when the origin
  has also been deleted, for example it returns a `404` or `410` status code.'
- 'REVALIDATED: The response was served from the origin server and the cache was refreshed
  due to an authorization from the user in the incoming request.'
- '429 Too Many Requests: You have exceeded your rate limit.'
- '403 Forbidden: Check permissions or access rights'
- '404 Not Found: Verify endpoint paths'
- '500 Internal Server Error: Contact support'
- Cache stampede problem can occur if many concurrent requests hit your origin.
- 'REQUEST_LIMIT_EXCEEDED: Exceeding the limit of 1,024 redirects.'
- 'REQUEST_LIMIT_EXCEEDED: Exceeding the maximum number of redirects in the array.'
- 'STRING_LENGTH_EXCEEDED: Source or destination string length exceeds the limit.'
- This team has already registered this domain
- You have already registered this domain
- The domain mydomain.com is not available or Another Vercel account is using this
  domain
- 'DNS_CHECK_FAILED: Verify the DNS records in your registrar''s dashboard.'
- 'RECORD_NOT_FOUND: Ensure the record exists before attempting to delete.'
- '402: New images will fail to optimize and instead return a runtime error response.'
- '401 Unauthorized: Check your OAuth token.'
- '401 Unauthorized: Check your token or OAuth scopes.'
- 'Invalid Configuration: Domain may be in use by another account.'
- SSL certificate generation issues may arise from missing CAA records.
- '402: deployment_disabled'
- '401 Unauthorized: Check API token validity'
- '429 Too Many Requests: Slow down requests to avoid throttling'
- '403 Forbidden: Check your permissions.'
- '429 Too Many Requests: You are being rate limited.'
- '401 Unauthorized: Check token validity and scopes.'
- '404 Not Found: Ensure the endpoint path is correct.'
- 'FUNCTION_PAYLOAD_TOO_LARGE: Payload exceeds the 4.5 MB limit.'
- 'FUNCTION_INVOCATION_TIMEOUT: Function did not respond in the allotted time.'
- '401 Unauthorized: Check your authentication tokens.'
- '400 Bad Request: Check the request parameters and try again.'
- '401 Unauthorized: Ensure OAuth token is valid.'
- '404 Not Found: Check if the endpoint exists.'
- 'FUNCTION_PAYLOAD_TOO_LARGE: Payload exceeds the maximum limit of 4.5 MB.'
- 'FUNCTION_INVOCATION_TIMEOUT: Function did not respond within the duration limit.'
- 'Maximum URL length: 14 KB'
- 'Maximum request body length: 4 MB'
- 'Maximum number of request headers: 64'
- 'Maximum request headers length: 16 KB'
- '404 Not Found: Check the endpoint path and parameters'
- 'Item size exceeds 2 MB: items larger won''t be cached'
- 'Exceeded maximum tags per item: 64 tags'
- 'Maximum tag length exceeded: 256 bytes'
- '404: Not Found'
- '403 Forbidden: Insufficient permissions for this operation'
- '404 Not Found: The requested resource does not exist'
- Maximum bundle size of 500KB. The bundle size includes your JSX, CSS, fonts, images,
  and any other assets.
- 'Domain addition: 100 requests per hour per team'
- 'Domain verification: 50 requests per hour per team'
- 'Domain removal: 100 requests per hour per team'
- Limitations may apply depending on your plan.
- If you disable Observability Plus before the billing cycle ends, you will lose access
  to existing data.
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- No additional error codes provided.
- invalid queries when using Monitoring
- Exceeding log entry limits results in only querying the most recent logs.
- '0 to 49 (red): Poor'
- '50 to 89 (orange): Needs Improvement'
- '90 to 100 (green): Good'
- Invalid queries when using Monitoring may occur if an incorrect location parameter
  is defined.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - OAuthToken
  - NamedCredential
  - VERCEL_OIDC_TOKEN
  - VERCEL_TEAM_ID
  - VERCEL_PROJECT_ID
  - VERCEL_TOKEN
  - OAuth2
  - Authorization
  - API Key
  - AI_GATEWAY_API_KEY
  - AuthInfo
  - OAuth Token
  - Auth Provider
  - Bearer token
  - access token
  - BearerToken
  - Web Hooks
  - Issues
  - Repository
  - Pull requests
  - Team
  - Account
  - Token
  - Client
client:
  base_url: https://api.vercel.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://api.vercel.com/v1/oauth/token
    client_id: '{{ dlt.secrets[''vercel_client_id''] }}'
    client_secret: '{{ dlt.secrets[''vercel_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''vercel_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
