resources:
- name: channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: channel
- name: webhook
  endpoint:
    path: /webhooks/{webhook_id}
    method: GET
    data_selector: webhook
- name: sticker
  endpoint:
    path: /stickers/{sticker_id}
    method: GET
    data_selector: sticker
- name: sticker_pack
  endpoint:
    path: /sticker-packs/{pack_id}
    method: GET
    data_selector: sticker_pack
- name: user_notes
  endpoint:
    path: /users/@me/notes
    method: GET
    data_selector: notes
- name: private_channels
  endpoint:
    path: /users/@me/channels
    method: GET
    data_selector: private_channels
- name: settings
  endpoint:
    path: /users/@me/settings
    method: GET
    data_selector: settings
- name: connections
  endpoint:
    path: /users/@me/connections
    method: GET
    data_selector: connections
- name: send_friend_request
  endpoint:
    path: /send_friend_request
    method: POST
    data_selector: user
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: commands
- name: typing
  endpoint:
    path: /typing
    method: POST
    data_selector: typing_indicator
- name: unack
  endpoint:
    path: /unack
    method: POST
    data_selector: unacknowledged
- name: unblock
  endpoint:
    path: /unblock
    method: POST
    data_selector: unblocked_user
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
    data_selector: uploaded_files
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: user_commands
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
    params: {}
- name: affinities
  endpoint:
    path: /user/affinities
    method: GET
    data_selector: affinities
    params: {}
- name: guild_affinities
  endpoint:
    path: /guild/affinities
    method: GET
    data_selector: guild_affinities
    params: {}
- name: channel_affinities
  endpoint:
    path: /channel/affinities
    method: GET
    data_selector: channel_affinities
    params: {}
- name: premium_affinities
  endpoint:
    path: /premium/affinities
    method: GET
    data_selector: premium_affinities
    params: {}
- name: invite
  endpoint:
    path: /api/v10/invite/{invite_code}
    method: GET
    data_selector: invite
    params: {}
- name: VoiceClient
  endpoint:
    path: /discord/api/voice_client
    method: GET
    data_selector: VoiceClient
    params: {}
- name: PCMAudio
  endpoint:
    data_selector: stream
- name: FFmpegAudio
  endpoint:
    data_selector: source
- name: FFmpegPCMAudio
  endpoint:
    data_selector: source
- name: FFmpegOpusAudio
  endpoint:
    data_selector: source
- name: messages
  endpoint:
    path: /api/v9/channels/{channel.id}/messages
    method: GET
- name: guild
  endpoint:
    path: /guilds/{guild_id}
    method: GET
    data_selector: Guild
    params:
      with_counts: true
- name: guild_preview
  endpoint:
    path: /guilds/{guild_id}/preview
    method: GET
    data_selector: Guild
    params: {}
- name: user
  endpoint:
    path: /users/{user_id}
    method: GET
    data_selector: User
    params: {}
- name: user_profile
  endpoint:
    path: /users/{user_id}/profile
    method: GET
    data_selector: UserProfile
    params:
      with_mutual_guilds: true
      with_mutual_friends_count: false
      with_mutual_friends: true
- name: teams
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: applications
  endpoint:
    path: /applications
    method: POST
    data_selector: application
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
- name: fetch_webhook
  endpoint:
    path: /webhooks/{webhook_id}
    method: GET
    data_selector: Webhook
- name: fetch_private_channels
  endpoint:
    path: /channels/@me
    method: GET
    data_selector: abc.PrivateChannel
- name: fetch_settings
  endpoint:
    path: /users/@me/settings
    method: GET
    data_selector: UserSettings
- name: fetch_relationships
  endpoint:
    path: /users/@me/relationships
    method: GET
    data_selector: Relationship
- name: friend_suggestions
  endpoint:
    path: /friend_suggestions
    method: GET
    data_selector: List[FriendSuggestion]
- name: country_code
  endpoint:
    path: /country_code
    method: GET
    data_selector: str
- name: location_info
  endpoint:
    path: /location_info
    method: GET
    data_selector: Tuple[str, Optional[str>]
- name: preferred_rtc_regions
  endpoint:
    path: /preferred_rtc_regions
    method: GET
    data_selector: List[Tuple[str, List[str>]]
- name: create_dm
  endpoint:
    path: /create_dm
    method: POST
    data_selector: DMChannel
- name: create_group
  endpoint:
    path: /create_group
    method: POST
    data_selector: GroupChannel
- name: send_friend_request
  endpoint:
    path: /send_friend_request
    method: POST
    data_selector: None
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
- name: library
  endpoint:
    path: /library
    method: GET
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
- name: fetch_entitlements
  endpoint:
    path: /fetch_entitlements
    method: GET
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
- name: send_friend_request
  endpoint:
    path: /send_friend_request
    method: POST
- name: send
  endpoint:
    path: /send
    method: POST
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
- name: typing
  endpoint:
    path: /typing
    method: POST
- name: unack
  endpoint:
    path: /unack
    method: POST
- name: unblock
  endpoint:
    path: /unblock
    method: POST
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
- name: primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
- name: AudioSource
  endpoint:
    path: /discord/AudioSource
    method: GET
    data_selector: methods
    params: {}
- name: PCMAudio
  endpoint:
    path: /discord/PCMAudio
    method: GET
    data_selector: methods
    params: {}
- name: FFmpegAudio
  endpoint:
    path: /discord/FFmpegAudio
    method: GET
    data_selector: methods
    params: {}
- name: FFmpegPCMAudio
  endpoint:
    path: /discord/FFmpegPCMAudio
    method: GET
    data_selector: methods
    params: {}
- name: FFmpegOpusAudio
  endpoint:
    path: /discord/FFmpegOpusAudio
    method: GET
    data_selector: methods
    params: {}
- name: recent_mentions
  endpoint:
    path: /messages/recent_mentions
    method: GET
    data_selector: messages
    params: {}
- name: user_affinities
  endpoint:
    path: /user/affinities
    method: GET
    data_selector: affinities
    params: {}
- name: guild_affinities
  endpoint:
    path: /guild/affinities
    method: GET
    data_selector: affinities
    params: {}
- name: channel_affinities
  endpoint:
    path: /channel/affinities
    method: GET
    data_selector: affinities
    params: {}
- name: premium_affinities
  endpoint:
    path: /premium/affinities
    method: GET
    data_selector: affinities
    params: {}
- name: experiments
  endpoint:
    path: /experiments
    method: GET
    data_selector: experiments
    params: {}
- name: recent_avatars
  endpoint:
    path: /user/recent_avatars
    method: GET
    data_selector: avatars
    params: {}
- name: invite
  endpoint:
    path: /invites/{invite.code}
    method: GET
    data_selector: invite
    params: {}
- name: PCMVolumeTransformer
  endpoint:
    path: /PCMVolumeTransformer
    method: GET
    data_selector: attributes
    params: {}
- name: File
  endpoint:
    path: /File
    method: GET
    data_selector: attributes
    params: {}
- name: CloudFile
  endpoint:
    path: /CloudFile
    method: GET
    data_selector: attributes
    params: {}
- name: voice_client
  endpoint:
    path: /voice
    method: POST
    data_selector: voice_client_data
- name: PCMAudio
  endpoint:
    path: /discord/PCMAudio
    method: GET
    data_selector: attributes
    params: {}
- name: FFmpegAudio
  endpoint:
    path: /discord/FFmpegAudio
    method: GET
    data_selector: attributes
    params: {}
- name: FFmpegPCMAudio
  endpoint:
    path: /discord/FFmpegPCMAudio
    method: GET
    data_selector: attributes
    params: {}
- name: FFmpegOpusAudio
  endpoint:
    path: /discord/FFmpegOpusAudio
    method: GET
    data_selector: attributes
    params: {}
- name: scheduled_event
  endpoint:
    path: /on_scheduled_event_create
    method: POST
    data_selector: event
- name: scheduled_event_update
  endpoint:
    path: /on_scheduled_event_update
    method: POST
    data_selector: before
- name: scheduled_event_user_add
  endpoint:
    path: /on_scheduled_event_user_add
    method: POST
    data_selector: event
- name: scheduled_event_user_remove
  endpoint:
    path: /on_scheduled_event_user_remove
    method: POST
    data_selector: event
- name: scheduled_event_ack
  endpoint:
    path: /on_scheduled_event_ack
    method: POST
    data_selector: event
- name: stage_instance_create
  endpoint:
    path: /on_stage_instance_create
    method: POST
    data_selector: stage_instance
- name: stage_instance_update
  endpoint:
    path: /on_stage_instance_update
    method: POST
    data_selector: before
- name: thread_create
  endpoint:
    path: /on_thread_create
    method: POST
    data_selector: thread
- name: thread_update
  endpoint:
    path: /on_thread_update
    method: POST
    data_selector: before
- name: voice_state_update
  endpoint:
    path: /on_voice_state_update
    method: POST
    data_selector: member
- name: message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: guild
  endpoint:
    path: /guilds/{guild_id}
    method: GET
    data_selector: guild
    params: {}
- name: invite
  endpoint:
    path: /invites/{invite}
    method: DELETE
    data_selector: deletedInvite
- name: user
  endpoint:
    path: /users/{user_id}
    method: GET
    data_selector: user
- name: widget
  endpoint:
    path: /guilds/{guild_id}/widget
    method: GET
    data_selector: widget
- name: user_profile
  endpoint:
    path: /users/{user_id}/profile
    method: GET
    data_selector: profile
- name: channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: channel
- name: webhook
  endpoint:
    path: /webhooks/{webhook_id}
    method: GET
    data_selector: webhook
- name: sticker
  endpoint:
    path: /stickers/{sticker_id}
    method: GET
    data_selector: sticker
- name: sticker_pack
  endpoint:
    path: /sticker-packs/{pack_id}
    method: GET
    data_selector: stickerPack
- name: notes
  endpoint:
    path: /users/@me/notes
    method: GET
    data_selector: notes
- name: connections
  endpoint:
    path: /users/@me/connections
    method: GET
    data_selector: connections
- name: settings
  endpoint:
    path: /users/@me/settings
    method: GET
    data_selector: settings
- name: tracking_settings
  endpoint:
    path: /users/@me/tracking-settings
    method: GET
    data_selector: trackingSettings
- name: fetch_relationships
  endpoint:
    path: /fetch_relationships
    method: GET
- name: friend_suggestions
  endpoint:
    path: /friend_suggestions
    method: GET
- name: fetch_country_code
  endpoint:
    path: /fetch_country_code
    method: GET
- name: fetch_location_info
  endpoint:
    path: /fetch_location_info
    method: GET
- name: fetch_preferred_rtc_regions
  endpoint:
    path: /fetch_preferred_rtc_regions
    method: GET
- name: create_dm
  endpoint:
    path: /create_dm
    method: POST
- name: create_group
  endpoint:
    path: /create_group
    method: POST
- name: send_friend_request
  endpoint:
    path: /send_friend_request
    method: POST
- name: applications
  endpoint:
    path: /applications
    method: GET
- name: detectable_applications
  endpoint:
    path: /detectable_applications
    method: GET
- name: fetch_application
  endpoint:
    path: /fetch_application/{application_id}
    method: GET
- name: fetch_partial_application
  endpoint:
    path: /fetch_partial_application/{application_id}
    method: GET
- name: fetch_public_application
  endpoint:
    path: /fetch_public_application/{application_id}
    method: GET
- name: fetch_public_applications
  endpoint:
    path: /fetch_public_applications
    method: GET
- name: teams
  endpoint:
    path: /teams
    method: GET
- name: fetch_team
  endpoint:
    path: /fetch_team/{team_id}
    method: GET
- name: team
  endpoint:
    path: /team
    method: GET
- name: application
  endpoint:
    path: /application
    method: POST
- name: company
  endpoint:
    path: /companies
    method: GET
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
- name: payment
  endpoint:
    path: /payments
    method: GET
- name: role_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: role_update
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: role_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: invite_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: invite_update
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: invite_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: webhook_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: webhook_update
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: webhook_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: emoji_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: emoji_update
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: emoji_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: message_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: message_bulk_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: message_pin
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: message_unpin
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: integration_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: integration_update
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: integration_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: stage_instance_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: stage_instance_update
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: stage_instance_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: sticker_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: sticker_update
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: sticker_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: scheduled_event_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: auditLog
    params: {}
- name: audit_log
  endpoint:
    path: /guilds/{guild_id}/audit-logs
    method: GET
    data_selector: audit_log_entries
- name: AuditLogDiff
  endpoint:
    path: /audit-log-diff
    method: GET
    data_selector: records
- name: webhook
  endpoint:
    path: /{webhook.id}/{webhook.token}
    method: POST
    data_selector: content
    params: {}
- name: WebhookMessage
  endpoint:
    path: /discord/webhook/message
    method: POST
    data_selector: message
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
- name: audio_source
  endpoint:
    path: /discord/audiosource
    method: GET
    data_selector: audioData
- name: ffmpeg_audio
  endpoint:
    path: /discord/ffmpegaudio
    method: GET
    data_selector: ffmpegData
- name: ffmpeg_opus_audio
  endpoint:
    path: /discord/ffmpegopusaudio
    method: GET
    data_selector: ffmpegOpusData
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params:
      with_counts: true
- name: invites
  endpoint:
    path: /invites
    method: GET
    data_selector: invites
    params: {}
- name: scheduled_event_create
  endpoint:
    path: /on_scheduled_event_create
    method: POST
- name: scheduled_event_delete
  endpoint:
    path: /on_scheduled_event_delete
    method: POST
- name: scheduled_event_update
  endpoint:
    path: /on_scheduled_event_update
    method: POST
- name: scheduled_event_user_add
  endpoint:
    path: /on_scheduled_event_user_add
    method: POST
- name: scheduled_event_user_remove
  endpoint:
    path: /on_scheduled_event_user_remove
    method: POST
- name: scheduled_event_ack
  endpoint:
    path: /on_scheduled_event_ack
    method: POST
- name: stage_instance_create
  endpoint:
    path: /on_stage_instance_create
    method: POST
- name: stage_instance_delete
  endpoint:
    path: /on_stage_instance_delete
    method: POST
- name: stage_instance_update
  endpoint:
    path: /on_stage_instance_update
    method: POST
- name: thread_create
  endpoint:
    path: /on_thread_create
    method: POST
- name: thread_join
  endpoint:
    path: /on_thread_join
    method: POST
- name: thread_update
  endpoint:
    path: /on_thread_update
    method: POST
- name: thread_remove
  endpoint:
    path: /on_thread_remove
    method: POST
- name: thread_delete
  endpoint:
    path: /on_thread_delete
    method: POST
- name: raw_thread_delete
  endpoint:
    path: /on_raw_thread_delete
    method: POST
- name: thread_member_join
  endpoint:
    path: /on_thread_member_join
    method: POST
- name: thread_member_remove
  endpoint:
    path: /on_thread_member_remove
    method: POST
- name: raw_thread_member_remove
  endpoint:
    path: /on_raw_thread_member_remove
    method: POST
- name: voice_state_update
  endpoint:
    path: /on_voice_state_update
    method: POST
- name: invite
  endpoint:
    path: /invites/{invite}
    method: DELETE
- name: fetch_widget
  endpoint:
    path: /guilds/{guild_id}/widget
    method: GET
- name: fetch_user
  endpoint:
    path: /users/{user_id}
    method: GET
- name: fetch_user_profile
  endpoint:
    path: /users/{user_id}/profile
    method: GET
- name: fetch_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
- name: fetch_webhook
  endpoint:
    path: /webhooks/{webhook_id}
    method: GET
- name: fetch_sticker
  endpoint:
    path: /stickers/{sticker_id}
    method: GET
- name: sticker_packs
  endpoint:
    path: /sticker-packs
    method: GET
- name: fetch_sticker_pack
  endpoint:
    path: /sticker-packs/{pack_id}
    method: GET
- name: fetch_notes
  endpoint:
    path: /users/@me/notes
    method: GET
- name: fetch_note
  endpoint:
    path: /users/{user_id}/notes
    method: GET
- name: fetch_connections
  endpoint:
    path: /users/@me/connections
    method: GET
- name: fetch_private_channels
  endpoint:
    path: /users/@me/channels
    method: GET
- name: fetch_settings
  endpoint:
    path: /users/@me/settings
    method: GET
- name: email_settings
  endpoint:
    path: /users/@me/email-settings
    method: GET
- name: fetch_tracking_settings
  endpoint:
    path: /users/@me/tracking-settings
    method: GET
- name: team
  endpoint:
    path: /teams
    method: GET
- name: company
  endpoint:
    path: /companies
    method: GET
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
- name: payment
  endpoint:
    path: /payments
    method: GET
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: plans
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: listing
    params:
      application_id: int
      localize: bool
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: listings
    params:
      application_ids: int
      localize: bool
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
    params:
      branch_ids: int
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: affinities
- name: UserExperiment
  endpoint:
    path: /path/to/UserExperiment
    method: GET
    data_selector: records
    params: {}
- name: GuildExperiment
  endpoint:
    path: /path/to/GuildExperiment
    method: GET
    data_selector: records
    params: {}
- name: role_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: role_update
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: role_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: invite_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: invite_update
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: invite_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: webhook_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: webhook_update
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: webhook_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: emoji_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: emoji_update
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: emoji_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: message_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: message_bulk_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: message_pin
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: message_unpin
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: integration_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: integration_update
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: integration_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: stage_instance_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: stage_instance_update
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: stage_instance_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: sticker_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: sticker_update
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: sticker_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: scheduled_event_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: audit_log_entry
  endpoint:
    path: /guilds/{guild_id}/audit-logs
    method: GET
    data_selector: audit_log_entries
- name: AuditLogDiff
  endpoint:
    path: /api/audit-log-diff
    method: GET
    data_selector: data
- name: webhook
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}
    method: POST
    data_selector: message
    params: {}
- name: send_message
  endpoint:
    path: /webhook/send
    method: POST
    data_selector: WebhookMessage
- name: fetch_message
  endpoint:
    path: /webhook/message/{id}
    method: GET
    data_selector: WebhookMessage
- name: edit_message
  endpoint:
    path: /webhook/message/{message_id}
    method: PATCH
    data_selector: WebhookMessage
- name: delete_message
  endpoint:
    path: /webhook/message/{message_id}
    method: DELETE
    data_selector: 'null'
- name: reaction_add
  endpoint:
    path: /discord/on_reaction_add
    method: POST
    data_selector: reaction
- name: reaction_remove
  endpoint:
    path: /discord/on_reaction_remove
    method: POST
    data_selector: reaction
- name: reaction_clear
  endpoint:
    path: /discord/on_reaction_clear
    method: POST
    data_selector: message
- name: raw_reaction_add
  endpoint:
    path: /discord/on_raw_reaction_add
    method: POST
    data_selector: payload
- name: raw_reaction_remove
  endpoint:
    path: /discord/on_raw_reaction_remove
    method: POST
    data_selector: payload
- name: raw_reaction_clear
  endpoint:
    path: /discord/on_raw_reaction_clear
    method: POST
    data_selector: payload
- name: guild_role_create
  endpoint:
    path: /discord/on_guild_role_create
    method: POST
    data_selector: role
- name: guild_role_delete
  endpoint:
    path: /discord/on_guild_role_delete
    method: POST
    data_selector: role
- name: guild_role_update
  endpoint:
    path: /discord/on_guild_role_update
    method: POST
    data_selector: before
- name: scheduled_event_create
  endpoint:
    path: /discord/on_scheduled_event_create
    method: POST
    data_selector: event
- name: scheduled_event_delete
  endpoint:
    path: /discord/on_scheduled_event_delete
    method: POST
    data_selector: event
- name: scheduled_event_update
  endpoint:
    path: /discord/on_scheduled_event_update
    method: POST
    data_selector: before
- name: thread_create
  endpoint:
    path: /discord/on_thread_create
    method: POST
    data_selector: thread
- name: thread_join
  endpoint:
    path: /discord/on_thread_join
    method: POST
    data_selector: thread
- name: thread_update
  endpoint:
    path: /discord/on_thread_update
    method: POST
    data_selector: before
- name: voice_state_update
  endpoint:
    path: /discord/on_voice_state_update
    method: POST
    data_selector: member
- name: WebhookMessage
  endpoint:
    path: /webhook/message
    method: POST
    data_selector: message
    params: {}
- name: audit_log
  endpoint:
    path: /guilds/{guild_id}/audit-logs
    method: GET
    data_selector: audit_log_entries
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
- name: revoke_invites
  endpoint:
    path: /invite/revoke
    method: POST
- name: fetch_widget
  endpoint:
    path: /guilds/{guild_id}/widget
    method: GET
- name: fetch_user
  endpoint:
    path: /users/{user_id}
    method: GET
- name: fetch_user_profile
  endpoint:
    path: /users/{user_id}/profile
    method: GET
- name: fetch_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
- name: fetch_webhook
  endpoint:
    path: /webhooks/{webhook_id}
    method: GET
- name: fetch_sticker
  endpoint:
    path: /stickers/{sticker_id}
    method: GET
- name: sticker_packs
  endpoint:
    path: /sticker-packs
    method: GET
- name: fetch_sticker_pack
  endpoint:
    path: /sticker-packs/{pack_id}
    method: GET
- name: fetch_notes
  endpoint:
    path: /users/@me/notes
    method: GET
- name: fetch_note
  endpoint:
    path: /users/{user_id}/notes
    method: GET
- name: fetch_connections
  endpoint:
    path: /users/@me/connections
    method: GET
- name: fetch_private_channels
  endpoint:
    path: /users/@me/channels
    method: GET
- name: fetch_settings
  endpoint:
    path: /users/@me/settings
    method: GET
- name: email_settings
  endpoint:
    path: /users/@me/email-settings
    method: GET
- name: fetch_tracking_settings
  endpoint:
    path: /users/@me/tracking-settings
    method: GET
- name: sync_webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
- name: edit_message
  endpoint:
    path: /edit_message
    method: POST
    data_selector: message
    params: {}
- name: delete_message
  endpoint:
    path: /delete_message
    method: DELETE
    data_selector: message
    params: {}
- name: fetch_relationships
  endpoint:
    path: /fetch_relationships
    method: GET
- name: friend_suggestions
  endpoint:
    path: /friend_suggestions
    method: GET
- name: fetch_country_code
  endpoint:
    path: /fetch_country_code
    method: GET
- name: fetch_location_info
  endpoint:
    path: /fetch_location_info
    method: GET
- name: fetch_preferred_rtc_regions
  endpoint:
    path: /fetch_preferred_rtc_regions
    method: GET
- name: create_dm
  endpoint:
    path: /create_dm
    method: POST
- name: create_group
  endpoint:
    path: /create_group
    method: POST
- name: send_friend_request
  endpoint:
    path: /send_friend_request
    method: POST
- name: applications
  endpoint:
    path: /applications
    method: GET
- name: detectable_applications
  endpoint:
    path: /detectable_applications
    method: GET
- name: fetch_application
  endpoint:
    path: /fetch_application
    method: GET
- name: fetch_partial_application
  endpoint:
    path: /fetch_partial_application
    method: GET
- name: fetch_public_application
  endpoint:
    path: /fetch_public_application
    method: GET
- name: fetch_public_applications
  endpoint:
    path: /fetch_public_applications
    method: GET
- name: teams
  endpoint:
    path: /teams
    method: GET
- name: fetch_team
  endpoint:
    path: /fetch_team
    method: GET
- name: RawMessageDeleteEvent
  endpoint:
    path: /raw/message/delete
    method: POST
    data_selector: payload
- name: RawBulkMessageDeleteEvent
  endpoint:
    path: /raw/bulk/message/delete
    method: POST
    data_selector: payload
- name: RawMessageUpdateEvent
  endpoint:
    path: /raw/message/update
    method: POST
    data_selector: payload
- name: RawPollVoteActionEvent
  endpoint:
    path: /raw/poll/vote/action
    method: POST
    data_selector: payload
- name: RawReactionActionEvent
  endpoint:
    path: /raw/reaction/action
    method: POST
    data_selector: payload
- name: RawReactionClearEvent
  endpoint:
    path: /raw/reaction/clear
    method: POST
    data_selector: payload
- name: RawReactionClearEmojiEvent
  endpoint:
    path: /raw/reaction/clear/emoji
    method: POST
    data_selector: payload
- name: RawIntegrationDeleteEvent
  endpoint:
    path: /raw/integration/delete
    method: POST
    data_selector: payload
- name: RawThreadMembersUpdate
  endpoint:
    path: /raw/thread/members/update
    method: POST
    data_selector: payload
- name: RawThreadDeleteEvent
  endpoint:
    path: /raw/thread/delete
    method: POST
    data_selector: payload
- name: RawMemberRemoveEvent
  endpoint:
    path: /raw/member/remove
    method: POST
    data_selector: payload
- name: team
  endpoint:
    path: /teams
    method: GET
- name: application
  endpoint:
    path: /applications
    method: POST
- name: company
  endpoint:
    path: /companies
    method: GET
- name: payment_source
  endpoint:
    path: /payment_sources
    method: GET
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
- name: File
  endpoint:
    path: /discord/File
    method: GET
    data_selector: attributes
    params: {}
- name: CloudFile
  endpoint:
    path: /discord/CloudFile
    method: GET
    data_selector: attributes
    params: {}
- name: PartialWebhookChannel
  endpoint:
    path: /discord/PartialWebhookChannel
    method: GET
    data_selector: attributes
    params: {}
- name: guild_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: commands
    params:
      query: null
      limit: null
      command_ids: null
      application: null
      with_applications: true
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params:
      query: null
      limit: null
      command_ids: null
      application: null
      with_applications: true
- name: on_message
  endpoint:
    path: /client/event/on_message
    method: POST
    data_selector: message
    params: {}
- name: change_presence
  endpoint:
    path: /client/change_presence
    method: POST
    data_selector: presence
    params: {}
- name: fetch_guilds
  endpoint:
    path: /client/fetch_guilds
    method: GET
    data_selector: guilds
    params:
      with_counts: true
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: eula
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: mentions
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: delete_status
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhook_id
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: leave_status
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: unverified_application
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
    data_selector: result
    params: {}
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
    data_selector: hubs
    params: {}
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
    data_selector: hub
    params: {}
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
    data_selector: suggestion
    params: {}
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
    data_selector: is_taken
    params: {}
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
    data_selector: avatars
    params: {}
- name: fetch_widget
  endpoint:
    path: /fetch_widget
    method: GET
    data_selector: widget
    params: {}
- name: fetch_user
  endpoint:
    path: /fetch_user
    method: GET
    data_selector: user
    params: {}
- name: fetch_user_profile
  endpoint:
    path: /fetch_user_profile
    method: GET
    data_selector: profile
    params: {}
- name: fetch_channel
  endpoint:
    path: /fetch_channel
    method: GET
    data_selector: channel
    params: {}
- name: fetch_webhook
  endpoint:
    path: /fetch_webhook
    method: GET
    data_selector: webhook
    params: {}
- name: fetch_sticker
  endpoint:
    path: /fetch_sticker
    method: GET
    data_selector: sticker
    params: {}
- name: sticker_packs
  endpoint:
    path: /sticker_packs
    method: GET
    data_selector: sticker_packs
    params: {}
- name: fetch_notes
  endpoint:
    path: /fetch_notes
    method: GET
    data_selector: notes
    params: {}
- name: fetch_connections
  endpoint:
    path: /fetch_connections
    method: GET
    data_selector: connections
    params: {}
- name: fetch_private_channels
  endpoint:
    path: /fetch_private_channels
    method: GET
    data_selector: private_channels
    params: {}
- name: fetch_settings
  endpoint:
    path: /fetch_settings
    method: GET
    data_selector: settings
    params: {}
- name: email_settings
  endpoint:
    path: /email_settings
    method: GET
    data_selector: email_settings
    params: {}
- name: fetch_tracking_settings
  endpoint:
    path: /fetch_tracking_settings
    method: GET
    data_selector: tracking_settings
    params: {}
- name: application
  endpoint:
    path: /create_application
    method: POST
- name: team
  endpoint:
    path: /create_team
    method: POST
- name: companies
  endpoint:
    path: /search_companies
    method: GET
- name: company
  endpoint:
    path: /fetch_company
    method: GET
- name: activity_statistics
  endpoint:
    path: /activity_statistics
    method: GET
- name: global_activity_statistics
  endpoint:
    path: /global_activity_statistics
    method: GET
- name: payment_sources
  endpoint:
    path: /payment_sources
    method: GET
- name: payment_source
  endpoint:
    path: /fetch_payment_source
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: premium_guild_subscriptions
  endpoint:
    path: /premium_guild_subscriptions
    method: GET
- name: premium_guild_subscription_slots
  endpoint:
    path: /premium_guild_subscription_slots
    method: GET
- name: premium_guild_subscription_cooldown
  endpoint:
    path: /premium_guild_subscription_cooldown
    method: GET
- name: subscription
  endpoint:
    path: /fetch_subscription
    method: GET
- name: payments
  endpoint:
    path: /payments
    method: GET
- name: payment
  endpoint:
    path: /fetch_payment
    method: GET
- name: promotions
  endpoint:
    path: /promotions
    method: GET
- name: audit_log
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: audit_log_diff
  endpoint:
    path: /guilds/{guild_id}/audit-logs
    method: GET
    data_selector: changes
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
- name: user_offer
  endpoint:
    path: /user/offer
    method: GET
- name: trial_offer
  endpoint:
    path: /trial/offer
    method: GET
- name: pricing_promotion
  endpoint:
    path: /pricing/promotion
    method: GET
- name: library
  endpoint:
    path: /library
    method: GET
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
- name: giftable_entitlements
  endpoint:
    path: /giftable/entitlements
    method: GET
- name: premium_entitlements
  endpoint:
    path: /premium/entitlements
    method: GET
- name: fetch_gift
  endpoint:
    path: /fetch/gift
    method: GET
- name: fetch_sku
  endpoint:
    path: /fetch/sku
    method: GET
- name: fetch_store_listing
  endpoint:
    path: /fetch/store_listing
    method: GET
- name: fetch_published_store_listing
  endpoint:
    path: /fetch/published/store_listing
    method: GET
- name: fetch_published_store_listings
  endpoint:
    path: /fetch/published/store_listings
    method: GET
- name: message
  endpoint:
    path: /webhook/message
    method: POST
- name: SyncWebhook
  endpoint:
    path: /syncwebhook
    method: POST
- name: edit_message
  endpoint:
    path: /edit_message
    method: POST
    data_selector: message
    params: {}
- name: delete_message
  endpoint:
    path: /delete_message
    method: DELETE
    data_selector: message
    params: {}
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
    params:
      application_id: int
      localize: bool
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
    params:
      application_ids: int
      localize: bool
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: subscription_plans
    params:
      sku_id: int
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: subscription_plans
    params:
      sku_ids: int
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: EULA
    params:
      eula_id: int
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
    params:
      branch_ids: int
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier_mapping
    params:
      price_tier: int
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: recent_mentions
    params:
      limit: int
      before: Union[Snowflake, datetime]
      guild: Guild
      roles: bool
      everyone: bool
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: delete_confirmation
    params:
      message: abc.Snowflake
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhook_id
    params:
      application: Application
      channel: TextChannel
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: leave_confirmation
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: unverified_application
    params:
      name: str
      icon: File
      os: OperatingSystem
      executable: str
      publisher: str
      distributor: Distributor
      sku: str
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
    params:
      with_guild_experiments: bool
- name: RawMessageDeleteEvent
  endpoint:
    path: /on_raw_message_delete
    method: POST
    data_selector: payload
- name: RawBulkMessageDeleteEvent
  endpoint:
    path: /on_raw_bulk_message_delete
    method: POST
    data_selector: payload
- name: RawMessageUpdateEvent
  endpoint:
    path: /on_raw_message_edit
    method: POST
    data_selector: payload
- name: RawPollVoteActionEvent
  endpoint:
    path: /on_raw_poll_vote_add
    method: POST
    data_selector: payload
- name: RawReactionActionEvent
  endpoint:
    path: /on_raw_reaction_add
    method: POST
    data_selector: payload
- name: RawReactionClearEvent
  endpoint:
    path: /on_raw_reaction_clear
    method: POST
    data_selector: payload
- name: RawIntegrationDeleteEvent
  endpoint:
    path: /on_raw_integration_delete
    method: POST
    data_selector: payload
- name: RawThreadMembersUpdate
  endpoint:
    path: /on_raw_thread_member_remove
    method: POST
    data_selector: payload
- name: RawThreadDeleteEvent
  endpoint:
    path: /on_raw_thread_delete
    method: POST
    data_selector: payload
- name: RawMemberRemoveEvent
  endpoint:
    path: /on_raw_member_remove
    method: POST
    data_selector: payload
- name: File
  endpoint:
    path: /abc.Messageable.send
    method: POST
    data_selector: file objects
    params: {}
- name: CloudFile
  endpoint:
    path: /abc.Messageable.upload_files
    method: POST
    data_selector: file objects
    params: {}
- name: PartialWebhookChannel
  endpoint:
    path: /webhook
    method: GET
    data_selector: channel
    params: {}
- name: guild_channel
  endpoint:
    path: /discord/api/v9/guilds/{guild_id}/channels
    method: GET
    data_selector: channels
    params: {}
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
    data_selector: response
    params: {}
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
    data_selector: hubs
    params: {}
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
    data_selector: hub
    params: {}
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
    data_selector: suggested_username
    params: {}
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
    data_selector: is_taken
    params: {}
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
    data_selector: avatars
    params: {}
- name: messageable
  endpoint:
    path: /discord/abc/Messageable
    method: GET
    data_selector: commands
    params: {}
- name: AudioSource
  endpoint:
    path: /discord/AudioSource
    method: GET
    data_selector: methods
    params: {}
- name: PCMAudio
  endpoint:
    path: /discord/PCMAudio
    method: GET
    data_selector: methods
    params: {}
- name: FFmpegAudio
  endpoint:
    path: /discord/FFmpegAudio
    method: GET
    data_selector: methods
    params: {}
- name: FFmpegPCMAudio
  endpoint:
    path: /discord/FFmpegPCMAudio
    method: GET
    data_selector: methods
    params: {}
- name: FFmpegOpusAudio
  endpoint:
    path: /discord/FFmpegOpusAudio
    method: GET
    data_selector: methods
    params: {}
- name: fetch_guilds
  endpoint:
    path: /guilds
    method: GET
- name: fetch_guild
  endpoint:
    path: /guilds/{guild_id}
    method: GET
- name: create_guild
  endpoint:
    path: /guilds
    method: POST
- name: join_guild
  endpoint:
    path: /guilds/{guild_id}/members/@me
    method: PUT
- name: leave_guild
  endpoint:
    path: /guilds/{guild_id}/members/@me
    method: DELETE
- name: revoke_invites
  endpoint:
    path: /invites/revoke
    method: POST
- name: fetch_widget
  endpoint:
    path: /guilds/{guild_id}/widget
    method: GET
- name: fetch_user
  endpoint:
    path: /users/{user_id}
    method: GET
- name: fetch_user_profile
  endpoint:
    path: /users/{user_id}/profile
    method: GET
- name: fetch_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
- name: fetch_webhook
  endpoint:
    path: /webhooks/{webhook_id}
    method: GET
- name: fetch_sticker
  endpoint:
    path: /stickers/{sticker_id}
    method: GET
- name: sticker_packs
  endpoint:
    path: /sticker-packs
    method: GET
- name: fetch_sticker_pack
  endpoint:
    path: /sticker-packs/{pack_id}
    method: GET
- name: fetch_notes
  endpoint:
    path: /users/@me/notes
    method: GET
- name: fetch_note
  endpoint:
    path: /users/{user_id}/notes
    method: GET
- name: fetch_connections
  endpoint:
    path: /users/@me/connections
    method: GET
- name: authorize_connection
  endpoint:
    path: /connections/authorize
    method: POST
- name: create_connection
  endpoint:
    path: /connections
    method: POST
- name: fetch_private_channels
  endpoint:
    path: /users/@me/channels
    method: GET
- name: fetch_settings
  endpoint:
    path: /users/@me/settings
    method: GET
- name: legacy_settings
  endpoint:
    path: /users/@me/legacy-settings
    method: GET
- name: email_settings
  endpoint:
    path: /users/@me/email-settings
    method: GET
- name: fetch_tracking_settings
  endpoint:
    path: /users/@me/tracking-settings
    method: GET
- name: edit_legacy_settings
  endpoint:
    path: /users/@me/edit-legacy-settings
    method: PATCH
- name: role_delete
  endpoint:
    path: /audit-log/role_delete
    method: GET
- name: invite_create
  endpoint:
    path: /audit-log/invite_create
    method: GET
- name: invite_update
  endpoint:
    path: /audit-log/invite_update
    method: GET
- name: invite_delete
  endpoint:
    path: /audit-log/invite_delete
    method: GET
- name: webhook_create
  endpoint:
    path: /audit-log/webhook_create
    method: GET
- name: webhook_update
  endpoint:
    path: /audit-log/webhook_update
    method: GET
- name: webhook_delete
  endpoint:
    path: /audit-log/webhook_delete
    method: GET
- name: emoji_create
  endpoint:
    path: /audit-log/emoji_create
    method: GET
- name: emoji_update
  endpoint:
    path: /audit-log/emoji_update
    method: GET
- name: emoji_delete
  endpoint:
    path: /audit-log/emoji_delete
    method: GET
- name: message_delete
  endpoint:
    path: /audit-log/message_delete
    method: GET
- name: message_bulk_delete
  endpoint:
    path: /audit-log/message_bulk_delete
    method: GET
- name: message_pin
  endpoint:
    path: /audit-log/message_pin
    method: GET
- name: message_unpin
  endpoint:
    path: /audit-log/message_unpin
    method: GET
- name: integration_create
  endpoint:
    path: /audit-log/integration_create
    method: GET
- name: integration_update
  endpoint:
    path: /audit-log/integration_update
    method: GET
- name: integration_delete
  endpoint:
    path: /audit-log/integration_delete
    method: GET
- name: stage_instance_create
  endpoint:
    path: /audit-log/stage_instance_create
    method: GET
- name: stage_instance_update
  endpoint:
    path: /audit-log/stage_instance_update
    method: GET
- name: stage_instance_delete
  endpoint:
    path: /audit-log/stage_instance_delete
    method: GET
- name: sticker_create
  endpoint:
    path: /audit-log/sticker_create
    method: GET
- name: sticker_update
  endpoint:
    path: /audit-log/sticker_update
    method: GET
- name: sticker_delete
  endpoint:
    path: /audit-log/sticker_delete
    method: GET
- name: scheduled_event_create
  endpoint:
    path: /audit-log/scheduled_event_create
    method: GET
- name: scheduled_event_update
  endpoint:
    path: /audit-log/scheduled_event_update
    method: GET
- name: fetch_relationships
  endpoint:
    path: /fetch_relationships
    method: GET
    data_selector: relationships
- name: friend_suggestions
  endpoint:
    path: /friend_suggestions
    method: GET
    data_selector: friend_suggestions
- name: fetch_country_code
  endpoint:
    path: /fetch_country_code
    method: GET
    data_selector: country_code
- name: fetch_location_info
  endpoint:
    path: /fetch_location_info
    method: GET
    data_selector: location_info
- name: fetch_preferred_rtc_regions
  endpoint:
    path: /fetch_preferred_rtc_regions
    method: GET
    data_selector: preferred_rtc_regions
- name: applications
  endpoint:
    path: /applications
    method: GET
    data_selector: applications
- name: detectable_applications
  endpoint:
    path: /detectable_applications
    method: GET
    data_selector: detectable_applications
- name: fetch_application
  endpoint:
    path: /fetch_application/{application_id}
    method: GET
    data_selector: application
- name: fetch_partial_application
  endpoint:
    path: /fetch_partial_application/{application_id}
    method: GET
    data_selector: partial_application
- name: fetch_public_application
  endpoint:
    path: /fetch_public_application/{application_id}
    method: GET
    data_selector: public_application
- name: fetch_public_applications
  endpoint:
    path: /fetch_public_applications
    method: GET
    data_selector: public_applications
- name: teams
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: fetch_team
  endpoint:
    path: /fetch_team/{team_id}
    method: GET
    data_selector: team
- name: audit_log_diff
  endpoint:
    path: /guilds/{guild.id}/audit-logs
    method: GET
    data_selector: changes
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: team
  endpoint:
    path: /teams
    method: POST
    data_selector: team
- name: application
  endpoint:
    path: /applications
    method: POST
    data_selector: application
- name: company
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
- name: payment_source
  endpoint:
    path: /payment_sources
    method: GET
    data_selector: payment_sources
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: webhook
  endpoint:
    path: /webhook
    method: GET
    data_selector: webhook_data
- name: SyncWebhook
  endpoint:
    path: /webhooks/{channel_id}/{webhook_id}
    method: POST
- name: SyncWebhookMessage
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}/messages/{message.id}
    method: PATCH
    data_selector: message
    params: {}
- name: SyncWebhook
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}
    method: GET
    data_selector: webhook
    params: {}
- name: GuildChannel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
    params: {}
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: UserOffer
    params: {}
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: TrialOffer
    params: {}
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: PricingPromotion
    params: {}
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: LibraryApplication
    params: {}
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: OAuth2Token
    params: {}
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: Entitlement
    params: {}
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
    data_selector: Entitlement
    params: {}
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
    data_selector: Entitlement
    params: {}
- name: fetch_entitlements
  endpoint:
    path: /fetch_entitlements
    method: GET
    data_selector: Entitlement
    params: {}
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
    data_selector: Gift
    params: {}
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
    data_selector: SKU
    params: {}
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
    data_selector: StoreListing
    params: {}
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
    data_selector: StoreListing
    params: {}
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
    data_selector: StoreListing
    params: {}
- name: fetch_message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: Message
    params: {}
- name: ack
  endpoint:
    path: /channels/{channel_id}/ack
    method: POST
    data_selector: acknowledged
    params: {}
- name: unack
  endpoint:
    path: /channels/{channel_id}/unack
    method: POST
    data_selector: unacknowledged
    params: {}
- name: application_commands
  endpoint:
    path: /channels/{channel_id}/application-commands
    method: GET
    data_selector: commands
    params: {}
- name: user
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
    params: {}
- name: user_note
  endpoint:
    path: /user/note
    method: GET
    data_selector: note
- name: mutual_friends
  endpoint:
    path: /user/mutual_friends
    method: GET
    data_selector: friends
- name: message_history
  endpoint:
    path: /channel/history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
    params: {}
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
    params: {}
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
    params: {}
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: subscription_plans
    params: {}
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: subscription_plans
    params: {}
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: eula
    params: {}
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
    params: {}
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
    params: {}
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier
    params: {}
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
    params: {}
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
    params: {}
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: recent_mentions
    params: {}
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: recent_mention
    params: {}
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
    params: {}
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
    params: {}
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
    params: {}
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
    params: {}
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhook_id
    params: {}
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: leave_status
    params: {}
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: unverified_application
    params: {}
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
    params: {}
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
    data_selector: result
    params: {}
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
    data_selector: hubs
    params: {}
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
    data_selector: joined_hub
    params: {}
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
    data_selector: suggestion
    params: {}
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
    data_selector: is_taken
    params: {}
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
    data_selector: avatars
    params: {}
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 200
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
- name: message_reference
  endpoint:
    path: /discord/message/reference
    method: POST
- name: send_friend_request
  endpoint:
    path: /discord/user/friend_request
    method: POST
- name: slash_commands
  endpoint:
    path: /discord/channel/slash_commands
    method: GET
- name: typing_indicator
  endpoint:
    path: /discord/channel/typing
    method: POST
- name: unacknowledge
  endpoint:
    path: /discord/channel/unack
    method: POST
- name: upload_files
  endpoint:
    path: /discord/user/upload_files
    method: POST
- name: user_commands
  endpoint:
    path: /discord/user/commands
    method: GET
- name: legacy_user_settings
  endpoint:
    path: /user/settings
    method: GET
    data_selector: settings
    params: {}
- name: invite_create
  endpoint:
    path: /on_invite_create
    method: CALL
    data_selector: invite
    params: {}
- name: invite_delete
  endpoint:
    path: /on_invite_delete
    method: CALL
    data_selector: invite
    params: {}
- name: guild_feature_ack
  endpoint:
    path: /on_guild_feature_ack
    method: CALL
    data_selector: payload
    params: {}
- name: integration_create
  endpoint:
    path: /on_integration_create
    method: CALL
    data_selector: integration
    params: {}
- name: integration_update
  endpoint:
    path: /on_integration_update
    method: CALL
    data_selector: integration
    params: {}
- name: guild_integrations_update
  endpoint:
    path: /on_guild_integrations_update
    method: CALL
    data_selector: guild
    params: {}
- name: webhooks_update
  endpoint:
    path: /on_webhooks_update
    method: CALL
    data_selector: channel
    params: {}
- name: raw_integration_delete
  endpoint:
    path: /on_raw_integration_delete
    method: CALL
    data_selector: payload
    params: {}
- name: interaction
  endpoint:
    path: /on_interaction
    method: CALL
    data_selector: interaction
    params: {}
- name: interaction_finish
  endpoint:
    path: /on_interaction_finish
    method: CALL
    data_selector: interaction
    params: {}
- name: modal
  endpoint:
    path: /on_modal
    method: CALL
    data_selector: modal
    params: {}
- name: member_join
  endpoint:
    path: /on_member_join
    method: CALL
    data_selector: member
    params: {}
- name: member_remove
  endpoint:
    path: /on_member_remove
    method: CALL
    data_selector: member
    params: {}
- name: raw_member_remove
  endpoint:
    path: /on_raw_member_remove
    method: CALL
    data_selector: payload
    params: {}
- name: member_update
  endpoint:
    path: /on_member_update
    method: CALL
    data_selector: before, after
    params: {}
- name: user_update
  endpoint:
    path: /on_user_update
    method: CALL
    data_selector: before, after
    params: {}
- name: member_ban
  endpoint:
    path: /on_member_ban
    method: CALL
    data_selector: guild, user
    params: {}
- name: member_unban
  endpoint:
    path: /on_member_unban
    method: CALL
    data_selector: guild, user
    params: {}
- name: presence_update
  endpoint:
    path: /on_presence_update
    method: CALL
    data_selector: before, after
    params: {}
- name: raw_member_list_update
  endpoint:
    path: /on_raw_member_list_update
    method: CALL
    data_selector: data
    params: {}
- name: message
  endpoint:
    path: /on_message
    method: CALL
    data_selector: message
    params: {}
- name: message_edit
  endpoint:
    path: /on_message_edit
    method: CALL
    data_selector: before, after
    params: {}
- name: message_delete
  endpoint:
    path: /on_message_delete
    method: CALL
    data_selector: message
    params: {}
- name: bulk_message_delete
  endpoint:
    path: /on_bulk_message_delete
    method: CALL
    data_selector: messages
    params: {}
- name: message_ack
  endpoint:
    path: /on_message_ack
    method: CALL
    data_selector: message, manual
    params: {}
- name: raw_message_edit
  endpoint:
    path: /on_raw_message_edit
    method: CALL
    data_selector: payload
    params: {}
- name: raw_message_delete
  endpoint:
    path: /on_raw_message_delete
    method: CALL
    data_selector: payload
    params: {}
- name: raw_bulk_message_delete
  endpoint:
    path: /on_raw_bulk_message_delete
    method: CALL
    data_selector: payload
    params: {}
- name: raw_message_ack
  endpoint:
    path: /on_raw_message_ack
    method: CALL
    data_selector: payload
    params: {}
- name: recent_mention_delete
  endpoint:
    path: /on_recent_mention_delete
    method: CALL
    data_selector: message
    params: {}
- name: raw_recent_mention_delete
  endpoint:
    path: /on_raw_recent_mention_delete
    method: CALL
    data_selector: message_id
    params: {}
- name: poll_vote_add
  endpoint:
    path: /on_poll_vote_add
    method: CALL
    data_selector: user, answer
    params: {}
- name: poll_vote_remove
  endpoint:
    path: /on_poll_vote_remove
    method: CALL
    data_selector: user, answer
    params: {}
- name: uploads_store_asset
  endpoint:
    path: /uploads/store_asset
    method: POST
    data_selector: asset
- name: skus
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    data_selector: sku
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
    data_selector: sku
- name: create_sku
  endpoint:
    path: /create_sku
    method: POST
    data_selector: sku
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: fetch_entitlement
  endpoint:
    path: /fetch_entitlement
    method: GET
    data_selector: entitlement
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
- name: create_gift_batch
  endpoint:
    path: /create_gift_batch
    method: POST
    data_selector: gift_batch
- name: branches
  endpoint:
    path: /branches
    method: GET
    data_selector: branches
- name: create_branch
  endpoint:
    path: /create_branch
    method: POST
    data_selector: branch
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
    data_selector: manifest_labels
- name: fetch_discoverability
  endpoint:
    path: /fetch_discoverability
    method: GET
    data_selector: discoverability
- name: fetch_embedded_activity_config
  endpoint:
    path: /fetch_embedded_activity_config
    method: GET
    data_selector: embedded_activity_config
- name: edit_embedded_activity_config
  endpoint:
    path: /edit_embedded_activity_config
    method: PATCH
    data_selector: embedded_activity_config
- name: application_bot
  endpoint:
    path: /api/v1/bots
    method: GET
    data_selector: bots
    params: {}
- name: reaction_add
  endpoint:
    path: /reaction_add
    method: POST
    data_selector: payload
- name: reaction_remove
  endpoint:
    path: /reaction_remove
    method: POST
    data_selector: payload
- name: reaction_clear
  endpoint:
    path: /reaction_clear
    method: POST
    data_selector: payload
- name: reaction_clear_emoji
  endpoint:
    path: /reaction_clear_emoji
    method: POST
    data_selector: payload
- name: raw_reaction_add
  endpoint:
    path: /raw_reaction_add
    method: POST
    data_selector: payload
- name: raw_reaction_remove
  endpoint:
    path: /raw_reaction_remove
    method: POST
    data_selector: payload
- name: raw_reaction_clear
  endpoint:
    path: /raw_reaction_clear
    method: POST
    data_selector: payload
- name: raw_reaction_clear_emoji
  endpoint:
    path: /raw_reaction_clear_emoji
    method: POST
    data_selector: payload
- name: guild_role_create
  endpoint:
    path: /guild_role_create
    method: POST
    data_selector: role
- name: guild_role_delete
  endpoint:
    path: /guild_role_delete
    method: POST
    data_selector: role
- name: guild_role_update
  endpoint:
    path: /guild_role_update
    method: POST
    data_selector:
      before: before
      after: after
- name: scheduled_event_create
  endpoint:
    path: /scheduled_event_create
    method: POST
    data_selector: event
- name: scheduled_event_delete
  endpoint:
    path: /scheduled_event_delete
    method: POST
    data_selector: event
- name: scheduled_event_update
  endpoint:
    path: /scheduled_event_update
    method: POST
    data_selector:
      before: before
      after: after
- name: send_message
  endpoint:
    path: /api/v10/channels/{channel.id}/messages
    method: POST
    data_selector: message
    params: {}
- name: upload_files
  endpoint:
    path: /api/v10/channels/{channel.id}/messages
    method: POST
    data_selector: uploaded_files
    params: {}
- name: audit_log
  endpoint:
    path: /audit-log
    method: GET
    data_selector: audit_logs
    params: {}
- name: ApplicationBranch
  endpoint:
    path: /application/branch
    method: GET
- name: ApplicationBuild
  endpoint:
    path: /application/build
    method: GET
- name: Manifest
  endpoint:
    path: /manifest
    method: GET
- name: Team
  endpoint:
    path: /team
    method: GET
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: audit_log_diff
  endpoint:
    path: /guilds/{guild_id}/audit-logs
    method: GET
    data_selector: changes
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}
    method: POST
    data_selector: content
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: voice
  endpoint:
    path: /voice
    method: GET
    data_selector: voice_state
    params: {}
- name: gift
  endpoint:
    path: /discord/gifts
    method: GET
    data_selector: records
- name: gift_batch
  endpoint:
    path: /discord/gift_batches
    method: GET
    data_selector: records
- name: library_application
  endpoint:
    path: /discord/library_applications
    method: GET
    data_selector: records
- name: SyncWebhook
  endpoint:
    path: /syncwebhook
    method: GET
- name: Subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: guild_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: invites
  endpoint:
    path: /invites
    method: GET
- name: messageable
  endpoint:
    path: /messageable
    method: GET
- name: subscription_trial
  endpoint:
    path: /discord/subscription_trial
    method: GET
    data_selector: trial
- name: premium_guild_subscription
  endpoint:
    path: /discord/premium_guild_subscription
    method: GET
    data_selector: premium_guild_subscription
- name: premium_guild_subscription_slot
  endpoint:
    path: /discord/premium_guild_subscription_slot
    method: GET
    data_selector: premium_guild_subscription_slot
- name: premium_guild_subscription_cooldown
  endpoint:
    path: /discord/premium_guild_subscription_cooldown
    method: GET
    data_selector: premium_guild_subscription_cooldown
- name: subscription_plan
  endpoint:
    path: /discord/subscription_plan
    method: GET
    data_selector: subscription_plan
- name: sku
  endpoint:
    path: /discord/SKU
    method: GET
    data_selector: records
    params: {}
- name: message
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: listings
- name: ApplicationCommand
  endpoint:
    path: /applications/{application_id}/commands
    method: GET
- name: ClientUser
  endpoint:
    path: /users/@me
    method: GET
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: listings
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: guild
  endpoint:
    path: /guild
    method: GET
    data_selector: guild
    params: {}
- name: guild
  endpoint:
    path: /guilds/{guild.id}
    method: GET
    data_selector: guild
- name: user_note
  endpoint:
    path: /user/note
    method: POST
- name: fetch_message
  endpoint:
    path: /user/message/{id}
    method: GET
- name: fetch_mutual_friends
  endpoint:
    path: /user/mutual_friends
    method: GET
- name: fetch_note
  endpoint:
    path: /user/note
    method: GET
- name: greet
  endpoint:
    path: /user/greet
    method: POST
- name: history
  endpoint:
    path: /user/history
    method: GET
- name: pins
  endpoint:
    path: /user/pins
    method: GET
- name: profile
  endpoint:
    path: /user/profile
    method: GET
- name: search
  endpoint:
    path: /user/search
    method: GET
- name: search_messages
  endpoint:
    path: /guilds/{guild.id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: prune_members
  endpoint:
    path: /guilds/{guild.id}/prune
    method: POST
    data_selector: pruned_count
    params:
      days: 7
- name: templates
  endpoint:
    path: /guilds/{guild.id}/templates
    method: GET
    data_selector: templates
    params: {}
- name: webhooks
  endpoint:
    path: /guilds/{guild.id}/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: invites
  endpoint:
    path: /guilds/{guild.id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: channel_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    params:
      limit: 200
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    params:
      limit: 25
- name: create_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: POST
    data_selector: sticker
    params: {}
- name: delete_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers/{sticker_id}
    method: DELETE
    data_selector: sticker
    params: {}
- name: fetch_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: GET
    data_selector: events
    params: {}
- name: create_scheduled_event
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: POST
    data_selector: event
    params: {}
- name: fetch_roles
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
    params: {}
- name: create_role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: POST
    data_selector: role
    params: {}
- name: user_settings
  endpoint:
    path: /users/@me/settings
    method: GET
    data_selector: settings
- name: LegacyUserSettings
  endpoint:
    path: /legacy/user/settings
    method: GET
    data_selector: settings
    params: {}
- name: automod_rules
  endpoint:
    path: /guilds/{guild_id}/automod/rules
    method: GET
    data_selector: automod_rules
- name: fetch_automod_rule
  endpoint:
    path: /guilds/{guild_id}/automod/rules/{automod_rule_id}
    method: GET
    data_selector: automod_rule
- name: create_automod_rule
  endpoint:
    path: /guilds/{guild_id}/automod/rules
    method: POST
    data_selector: automod_rule
- name: admin_community_eligibility
  endpoint:
    path: /guilds/{guild_id}/admin-community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /guilds/{guild_id}/admin-community/join
    method: POST
    data_selector: guild
- name: migrate_command_scope
  endpoint:
    path: /guilds/{guild_id}/migrate-command-scope
    method: POST
    data_selector: integration_ids
- name: ban
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: bans
    params: {}
- name: bulk_ban
  endpoint:
    path: /guilds/{guild_id}/bans
    method: PUT
    data_selector: bulk_ban
    params: {}
- name: role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
    params: {}
- name: activity_statistics
  endpoint:
    path: /applications/{application.id}/activity-statistics
    method: GET
- name: assets
  endpoint:
    path: /applications/{application.id}/assets
    method: GET
- name: branches
  endpoint:
    path: /applications/{application.id}/branches
    method: GET
- name: create_asset
  endpoint:
    path: /applications/{application.id}/assets
    method: POST
- name: create_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: POST
- name: create_branch
  endpoint:
    path: /applications/{application.id}/branches
    method: POST
- name: create_gift_batch
  endpoint:
    path: /applications/{application.id}/gifts
    method: POST
- name: create_sku
  endpoint:
    path: /applications/{application.id}/skus
    method: POST
- name: create_store_asset
  endpoint:
    path: /applications/{application.id}/store-assets
    method: POST
- name: edit
  endpoint:
    path: /applications/{application.id}
    method: PATCH
- name: edit_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: PATCH
- name: fetch_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: GET
- name: fetch_discoverability
  endpoint:
    path: /applications/{application.id}/discoverability
    method: GET
- name: has_bot
  endpoint:
    path: /applications/{application.id}/has-bot
    method: GET
- name: AutoModRule
  endpoint:
    path: /discord/automod/rules
    method: GET
    data_selector: rules
- name: IntegrationApplication
  endpoint:
    path: /discord/integration/application
    method: GET
    data_selector: applications
- name: AutoModRule
  endpoint:
    path: /auto-mod/rules
    method: GET
    data_selector: rules
    params: {}
- name: member
  endpoint:
    path: /discord/member
    method: GET
    data_selector: data
    params: {}
- name: uploads_store_asset
  endpoint:
    path: /uploads/store_asset
    method: POST
    data_selector: asset
- name: skus
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    data_selector: primary_sku
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
    data_selector: store_listing_sku
- name: create_sku
  endpoint:
    path: /create_sku
    method: POST
    data_selector: sku
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: fetch_entitlement
  endpoint:
    path: /fetch_entitlement/{entitlement_id}
    method: GET
    data_selector: entitlement
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
- name: create_gift_batch
  endpoint:
    path: /create_gift_batch
    method: POST
    data_selector: gift_batch
- name: branches
  endpoint:
    path: /branches
    method: GET
    data_selector: branches
- name: create_branch
  endpoint:
    path: /create_branch
    method: POST
    data_selector: branch
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
    data_selector: manifest_labels
- name: fetch_discoverability
  endpoint:
    path: /fetch_discoverability
    method: GET
    data_selector: discoverability
- name: fetch_embedded_activity_config
  endpoint:
    path: /fetch_embedded_activity_config
    method: GET
    data_selector: embedded_activity_config
- name: mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
    data_selector: friends
- name: note
  endpoint:
    path: /fetch_note
    method: GET
    data_selector: note
- name: voice_connection
  endpoint:
    path: /connect
    method: POST
    data_selector: voice_client
- name: activity_statistics
  endpoint:
    path: /activity/statistics
    method: GET
    data_selector: statistics
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
- name: entitlement_ticket
  endpoint:
    path: /entitlement/ticket
    method: GET
    data_selector: ticket
- name: eula
  endpoint:
    path: /eula
    method: GET
    data_selector: eula
- name: primary_store_listing
  endpoint:
    path: /store/listing/primary
    method: GET
    data_selector: store_listing
- name: published_store_listings
  endpoint:
    path: /store/listings/published
    method: GET
    data_selector: store_listings
- name: ticket
  endpoint:
    path: /ticket
    method: GET
    data_selector: ticket
- name: member
  endpoint:
    path: /api/v1/members
    method: GET
    data_selector: members
- name: pinned_messages
  endpoint:
    path: /pinned_messages
    method: GET
    data_selector: Message
- name: member_profile
  endpoint:
    path: /member_profile
    method: GET
    data_selector: MemberProfile
- name: search_messages
  endpoint:
    path: /search_messages
    method: GET
    data_selector: Message
- name: send_message
  endpoint:
    path: /send_message
    method: POST
    data_selector: Message
- name: unacknowledge
  endpoint:
    path: /unacknowledge
    method: POST
    data_selector: success
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
    data_selector: CloudFile
- name: member_profile
  endpoint:
    path: /discord/api/v2/member_profile
    method: GET
    data_selector: records
- name: application_activity_statistics
  endpoint:
    path: /application_activity_statistics
    method: GET
    data_selector: records
- name: voice_client
  endpoint:
    path: /voice/connect
    method: POST
    data_selector: voice_client_data
- name: dm_channel
  endpoint:
    path: /dm/create
    method: POST
    data_selector: dm_channel_data
- name: message
  endpoint:
    path: /messages/fetch
    method: GET
    data_selector: message_data
- name: builds
  endpoint:
    path: /builds
    method: GET
- name: live_build
  endpoint:
    path: /live_build
    method: GET
- name: latest_build
  endpoint:
    path: /latest_build
    method: GET
- name: create_build
  endpoint:
    path: /create_build
    method: POST
- name: promote
  endpoint:
    path: /promote
    method: POST
- name: delete
  endpoint:
    path: /delete
    method: DELETE
- name: member_profile
  endpoint:
    path: /member/profile
    method: GET
    data_selector: data
    params: {}
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: send_friend_request
  endpoint:
    path: /send_friend_request
    method: POST
    data_selector: response
    params: {}
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: commands
    params: {}
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
    params: {}
- name: payouts
  endpoint:
    path: /teams/{team_id}/payouts
    method: GET
    data_selector: payouts
    params:
      limit: '100'
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
    data_selector: files
    params: {}
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: voice_client
  endpoint:
    path: /voice
    method: GET
    data_selector: voice
- name: dm_channel
  endpoint:
    path: /dm
    method: POST
    data_selector: channel
- name: PartialEmoji
  endpoint:
    path: /partial_emoji
    method: GET
    data_selector: records
- name: Sticker
  endpoint:
    path: /sticker
    method: GET
    data_selector: records
- name: StickerItem
  endpoint:
    path: /sticker_item
    method: GET
    data_selector: records
- name: StickerPack
  endpoint:
    path: /sticker_pack
    method: GET
    data_selector: records
- name: StandardSticker
  endpoint:
    path: /standard_sticker
    method: GET
    data_selector: records
- name: guild_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
    data_selector: stickers
- name: category_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params:
      query: null
      limit: null
      command_ids: null
      application: null
      with_applications: true
- name: forums
  endpoint:
    path: /forums
    method: GET
    data_selector: forums
- name: directory_channels
  endpoint:
    path: /directory_channels
    method: GET
    data_selector: directory_channels
- name: directories
  endpoint:
    path: /directories
    method: GET
    data_selector: directories
- name: invites
  endpoint:
    path: /invites
    method: GET
    data_selector: invites
- name: gift
  endpoint:
    path: /discord/gift
    method: GET
    data_selector: records
- name: gift_batch
  endpoint:
    path: /discord/gift_batch
    method: GET
    data_selector: records
- name: library_application
  endpoint:
    path: /discord/library_application
    method: GET
    data_selector: records
- name: text_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: subscription
  endpoint:
    path: /discord/subscription
    method: GET
    data_selector: records
- name: SubscriptionTrial
  endpoint:
    path: /discord/SubscriptionTrial
    method: GET
- name: PremiumGuildSubscription
  endpoint:
    path: /discord/PremiumGuildSubscription
    method: GET
- name: PremiumGuildSubscriptionSlot
  endpoint:
    path: /discord/PremiumGuildSubscriptionSlot
    method: GET
- name: PremiumGuildSubscriptionCooldown
  endpoint:
    path: /discord/PremiumGuildSubscriptionCooldown
    method: GET
- name: SubscriptionPlan
  endpoint:
    path: /discord/SubscriptionPlan
    method: GET
- name: notification_settings
  endpoint:
    path: /notification_settings
    method: GET
    data_selector: notification_settings
- name: overwrites
  endpoint:
    path: /overwrites
    method: GET
    data_selector: overwrites
- name: overwrites_for
  endpoint:
    path: /overwrites_for
    method: GET
    data_selector: overwrites_for
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pins
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: search
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: send
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: set_permissions
- name: SubscriptionPlanPrices
  endpoint:
    path: /subscription_plan_prices
    method: GET
    data_selector: country_prices
- name: Payment
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
- name: SKU
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
- name: SKU
  endpoint:
    path: /discord/SKU
    method: GET
    data_selector: records
    params: {}
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: records
- name: create_channel
  endpoint:
    path: /channels
    method: POST
    data_selector: channel
    params: {}
- name: edit_channel
  endpoint:
    path: /channels/{channel_id}
    method: PATCH
    data_selector: channel
    params: {}
- name: delete_channel
  endpoint:
    path: /channels/{channel_id}
    method: DELETE
    data_selector: channel
    params: {}
- name: metadata
  endpoint:
    path: /discord/metadata
    method: GET
    data_selector: items
- name: read_state
  endpoint:
    path: /discord/read_state
    method: GET
    data_selector: items
- name: asset
  endpoint:
    path: /discord/asset
    method: GET
    data_selector: items
- name: guild
  endpoint:
    path: /guilds/{guild.id}
    method: GET
    data_selector: guild
    params: {}
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: message
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
    params: {}
- name: discovery_splash
  endpoint:
    path: /guilds/{guild.id}/discovery_splash
    method: GET
- name: member_count
  endpoint:
    path: /guilds/{guild.id}/member_count
    method: GET
- name: online_count
  endpoint:
    path: /guilds/{guild.id}/online_count
    method: GET
- name: chunked
  endpoint:
    path: /guilds/{guild.id}/chunked
    method: GET
- name: created_at
  endpoint:
    path: /guilds/{guild.id}/created_at
    method: GET
- name: voice_states
  endpoint:
    path: /voice_states
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: purge
  endpoint:
    path: /channels/{channel_id}/messages
    method: DELETE
    data_selector: deleted_messages
    params:
      limit: 100
- name: read_state
  endpoint:
    path: /read_state
    method: GET
    data_selector: read_state
- name: scheduled_events
  endpoint:
    path: /scheduled_events
    method: GET
    data_selector: scheduled_events
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: commands
- name: directory_channel
  endpoint:
    path: /directory/channels
    method: GET
    data_selector: entries
- name: create_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: POST
    data_selector: sticker
- name: delete_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers/{sticker_id}
    method: DELETE
    data_selector: sticker
- name: subscribed_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events/subscribed
    method: GET
    data_selector: events
- name: fetch_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: GET
    data_selector: events
- name: fetch_scheduled_event
  endpoint:
    path: /guilds/{guild_id}/scheduled-events/{scheduled_event_id}
    method: GET
    data_selector: event
- name: create_scheduled_event
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: POST
    data_selector: event
- name: top_emojis
  endpoint:
    path: /guilds/{guild_id}/emojis/top
    method: GET
    data_selector: emojis
- name: fetch_emojis
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: GET
    data_selector: emojis
- name: fetch_emoji
  endpoint:
    path: /guilds/{guild_id}/emojis/{emoji_id}
    method: GET
    data_selector: emoji
- name: create_custom_emoji
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: POST
    data_selector: emoji
- name: delete_emoji
  endpoint:
    path: /guilds/{guild_id}/emojis/{emoji_id}
    method: DELETE
    data_selector: emoji
- name: fetch_roles
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
- name: fetch_role
  endpoint:
    path: /guilds/{guild_id}/roles/{role_id}
    method: GET
    data_selector: role
- name: create_role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: POST
    data_selector: role
- name: fetch_entries
  endpoint:
    path: /fetch_entries
    method: GET
- name: search_entries
  endpoint:
    path: /search_entries
    method: GET
- name: create_entry
  endpoint:
    path: /create_entry
    method: POST
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
- name: delete
  endpoint:
    path: /delete
    method: DELETE
- name: invites
  endpoint:
    path: /invites
    method: GET
- name: forum_channel
  endpoint:
    path: /discord/forum_channel
    method: GET
    data_selector: forum_channels
- name: edit_role_positions
  endpoint:
    path: edit_role_positions
    method: POST
- name: role_member_counts
  endpoint:
    path: role_member_counts
    method: GET
- name: kick
  endpoint:
    path: kick
    method: POST
- name: ban
  endpoint:
    path: ban
    method: POST
- name: unban
  endpoint:
    path: unban
    method: POST
- name: bulk_ban
  endpoint:
    path: bulk_ban
    method: POST
- name: vanity_invite
  endpoint:
    path: vanity_invite
    method: GET
- name: audit_logs
  endpoint:
    path: audit_logs
    method: GET
- name: ack
  endpoint:
    path: ack
    method: POST
- name: widget
  endpoint:
    path: widget
    method: GET
- name: edit_widget
  endpoint:
    path: edit_widget
    method: POST
- name: welcome_screen
  endpoint:
    path: welcome_screen
    method: GET
- name: messages
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params: {}
- name: automod_rules
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: fetch_automod_rule
  endpoint:
    path: /automod/rules/{automod_rule_id}
    method: GET
    data_selector: rule
- name: create_automod_rule
  endpoint:
    path: /automod/rules
    method: POST
    data_selector: rule
- name: admin_community_eligibility
  endpoint:
    path: /admin/community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /admin/community/join
    method: POST
    data_selector: community
- name: migrate_command_scope
  endpoint:
    path: /guilds/{guild_id}/migrate
    method: POST
    data_selector: integration_ids
- name: ban_entry
  endpoint:
    path: /bans
    method: GET
    data_selector: bans
    params: {}
- name: bulk_ban_result
  endpoint:
    path: /bulk_ban
    method: POST
    data_selector: bulkBanResult
    params: {}
- name: role
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
    params: {}
- name: origin_channel_id
  endpoint:
    path: /origin_channel_id
    method: GET
    data_selector: data
    params: {}
- name: notification_settings
  endpoint:
    path: /notification_settings
    method: GET
    data_selector: data
    params: {}
- name: owner
  endpoint:
    path: /owner
    method: GET
    data_selector: data
    params: {}
- name: call
  endpoint:
    path: /call
    method: GET
    data_selector: data
    params: {}
- name: type
  endpoint:
    path: /type
    method: GET
    data_selector: data
    params: {}
- name: guild
  endpoint:
    path: /guild
    method: GET
    data_selector: data
    params: {}
- name: icon
  endpoint:
    path: /icon
    method: GET
    data_selector: data
    params: {}
- name: created_at
  endpoint:
    path: /created_at
    method: GET
    data_selector: data
    params: {}
- name: jump_url
  endpoint:
    path: /jump_url
    method: GET
    data_selector: data
    params: {}
- name: read_state
  endpoint:
    path: /read_state
    method: GET
    data_selector: data
    params: {}
- name: last_message
  endpoint:
    path: /last_message
    method: GET
    data_selector: data
    params: {}
- name: acked_message_id
  endpoint:
    path: /acked_message_id
    method: GET
    data_selector: data
    params: {}
- name: acked_message
  endpoint:
    path: /acked_message
    method: GET
    data_selector: data
    params: {}
- name: acked_pin_timestamp
  endpoint:
    path: /acked_pin_timestamp
    method: GET
    data_selector: data
    params: {}
- name: mention_count
  endpoint:
    path: /mention_count
    method: GET
    data_selector: data
    params: {}
- name: last_viewed_timestamp
  endpoint:
    path: /last_viewed_timestamp
    method: GET
    data_selector: data
    params: {}
- name: member
  endpoint:
    path: /members
    method: GET
    data_selector: members
    params: {}
- name: mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
- name: note
  endpoint:
    path: /fetch_note
    method: GET
- name: delete_note
  endpoint:
    path: /delete_note
    method: DELETE
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
      cls: VoiceClient
      ring: true
- name: ack
  endpoint:
    path: /ack
    method: POST
    data_selector: ack
    params: {}
- name: ack_pins
  endpoint:
    path: /ack_pins
    method: POST
    data_selector: ack_pins
    params: {}
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
    data_selector: commands
    params: {}
- name: fetch_message
  endpoint:
    path: /fetch_message/{id}
    method: GET
    data_selector: message
    params:
      id: int
- name: greet
  endpoint:
    path: /greet
    method: POST
    data_selector: sticker_greeting
    params: {}
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: search_results
    params:
      limit: 25
      offset: 0
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: unacknowledge_messages
  endpoint:
    path: /channels/{channel_id}/messages/unack
    method: POST
    data_selector: status
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages/files
    method: POST
    data_selector: files
- name: fetch_message
  endpoint:
    path: /channels/{channel_id}/messages/{message_id}
    method: GET
    data_selector: message
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
- name: pinned_messages
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: messages
- name: member_profile
  endpoint:
    path: /guilds/{guild_id}/members/{member_id}
    method: GET
    data_selector: profile
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages/{message_id}/attachments
    method: POST
    data_selector: uploaded_files
- name: member
  endpoint:
    path: /discord/api/member
    method: GET
    data_selector: member_data
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params:
      limit: null
- name: slash_commands
  endpoint:
    path: /slash-commands
    method: GET
    data_selector: commands
    params:
      limit: null
- name: member_profile
  endpoint:
    path: /api/v1/member_profile
    method: GET
    data_selector: profiles
    params: {}
- name: message
  endpoint:
    path: /discord/message
    method: GET
    data_selector: message
    params: {}
- name: guild_avatar_decoration
  endpoint:
    path: /guild_avatar_decoration
    method: GET
    data_selector: Asset
- name: guild_avatar_decoration_expires_at
  endpoint:
    path: /guild_avatar_decoration_expires_at
    method: GET
    data_selector: datetime.datetime
- name: guild_avatar_decoration_sku_id
  endpoint:
    path: /guild_avatar_decoration_sku_id
    method: GET
    data_selector: int
- name: guild_banner
  endpoint:
    path: /guild_banner
    method: GET
    data_selector: Asset
- name: guild_permissions
  endpoint:
    path: /guild_permissions
    method: GET
    data_selector: Permissions
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: Message
    params:
      limit: 100
- name: id
  endpoint:
    path: /id
    method: GET
    data_selector: User.id
- name: mention
  endpoint:
    path: /mention
    method: GET
    data_selector: str
- name: mobile_status
  endpoint:
    path: /mobile_status
    method: GET
    data_selector: Status
- name: premium
  endpoint:
    path: /premium
    method: GET
    data_selector: bool
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: list
- name: message
  endpoint:
    path: /messages
    method: GET
    data_selector: records
    params: {}
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
    data_selector: uploaded_files
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
- name: PartialEmoji
  endpoint:
    path: /discord/PartialEmoji
    method: GET
    data_selector: records
- name: Sticker
  endpoint:
    path: /discord/Sticker
    method: GET
    data_selector: records
- name: StickerItem
  endpoint:
    path: /discord/StickerItem
    method: GET
    data_selector: records
- name: StickerPack
  endpoint:
    path: /discord/StickerPack
    method: GET
    data_selector: records
- name: StandardSticker
  endpoint:
    path: /discord/StandardSticker
    method: GET
    data_selector: records
- name: invite
  endpoint:
    path: /invites
    method: GET
    data_selector: invites
    params: {}
- name: guild_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
    data_selector: stickers
- name: category_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: invite
  endpoint:
    path: /api/v1/invite
    method: GET
    data_selector: invite_data
- name: File
  endpoint:
    path: /discord/File
    method: GET
    data_selector: attributes
- name: CloudFile
  endpoint:
    path: /discord/CloudFile
    method: GET
    data_selector: attributes
- name: text_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: application
  endpoint:
    path: /create_application
    method: POST
    data_selector: application
    params: {}
- name: team
  endpoint:
    path: /create_team
    method: POST
    data_selector: team
    params: {}
- name: companies
  endpoint:
    path: /search_companies
    method: GET
    data_selector: companies
    params: {}
- name: company
  endpoint:
    path: /fetch_company/{company_id}
    method: GET
    data_selector: company
    params: {}
- name: activity_statistics
  endpoint:
    path: /activity_statistics
    method: GET
    data_selector: activity_statistics
    params: {}
- name: payment_sources
  endpoint:
    path: /payment_sources
    method: GET
    data_selector: payment_sources
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: premium_guild_subscriptions
  endpoint:
    path: /premium_guild_subscriptions
    method: GET
    data_selector: premium_guild_subscriptions
    params: {}
- name: premium_guild_subscription_slots
  endpoint:
    path: /premium_guild_subscription_slots
    method: GET
    data_selector: premium_guild_subscription_slots
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
    params: {}
- name: history
  endpoint:
    params:
      limit: '100'
- name: invites
  endpoint:
    params: {}
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
- name: library
  endpoint:
    path: /library
    method: GET
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
- name: fetch_entitlements
  endpoint:
    path: /fetch_entitlements
    method: GET
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
- name: create_channel
  endpoint:
    path: /channels
    method: POST
    data_selector: channel
    params:
      name: channel_name
      category: category_id
      reason: reason_for_creation
- name: edit_channel
  endpoint:
    path: /channels/{channel_id}
    method: PATCH
    data_selector: channel
    params:
      name: new_channel_name
      bitrate: new_bitrate
      nsfw: is_nsfw
      user_limit: new_user_limit
      position: new_position
      sync_permissions: sync_permissions
      category: new_category_id
      slowmode_delay: slowmode_in_seconds
      reason: reason_for_editing
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: message
    params: {}
- name: partial_message
  endpoint:
    path: /messages/{message_id}/partial
    method: GET
    data_selector: partial_message
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    params:
      limit: 25
      most_relevant: false
- name: send
  endpoint:
    path: /send
    method: POST
    params: {}
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    params: {}
- name: unack
  endpoint:
    path: /unack
    method: POST
    params: {}
- name: voice_states
  endpoint:
    path: /voice_states
    method: GET
    data_selector: mapping
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: storeListing
    params:
      application_id: int
      localize: bool
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: storeListings
    params:
      application_ids: int
      localize: bool
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscriptionPlans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: subscriptionPlans
    params:
      sku_id: int
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: subscriptionPlans
    params:
      sku_ids: int
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: EULA
    params:
      eula_id: int
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: liveBuildIds
    params:
      branch_ids: int
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: priceTiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: priceTier
    params:
      price_tier: int
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premiumUsage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkoutRecovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: recentMentions
    params:
      limit: int
      before: Snowflake or datetime
      guild: Guild
      roles: bool
      everyone: bool
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: acknowledged
    params:
      message: Snowflake
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: userAffinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guildAffinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channelAffinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premiumAffinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhookId
    params:
      application: Application
      channel: TextChannel
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: unverifiedApplication
    params:
      name: str
      icon: File
      os: OperatingSystem
      executable: str
      publisher: str
      distributor: Distributor
      sku: str
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experimentRollouts
    params:
      with_guild_experiments: bool
- name: read_state
  endpoint:
    path: /channels/{channel_id}/read_state
    method: GET
    data_selector: read_state
    params: {}
- name: scheduled_events
  endpoint:
    path: /channels/{channel_id}/scheduled_events
    method: GET
    data_selector: scheduled_events
    params: {}
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /channels/{channel_id}/permissions/{target_id}
    method: PUT
    data_selector: permissions
    params: {}
- name: directory_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: entries
- name: directory_entry
  endpoint:
    path: /fetch_entries
    method: GET
    data_selector: entries
- name: search_directory_entries
  endpoint:
    path: /search_entries
    method: GET
    data_selector: entries
- name: create_directory_entry
  endpoint:
    path: /create_entry
    method: POST
    data_selector: entry
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
    data_selector: invite
- name: forum_channel
  endpoint:
    path: /discord/forum_channel
    method: GET
    data_selector: forum_channels
- name: create_thread
  endpoint:
    path: /threads
    method: POST
    data_selector: thread
    params: {}
- name: archived_threads
  endpoint:
    path: /threads/archived
    method: GET
    data_selector: threads
    params:
      limit: 100
- name: create_invite
  endpoint:
    path: /invites
    method: POST
    data_selector: invite
    params: {}
- name: permissions_synced
  endpoint:
    path: /permissions/synced
    method: GET
- name: requested_at
  endpoint:
    path: /discord/DMChannel/requested_at
    method: GET
- name: is_message_request
  endpoint:
    path: /discord/DMChannel/is_message_request
    method: GET
- name: is_accepted
  endpoint:
    path: /discord/DMChannel/is_accepted
    method: GET
- name: is_spam
  endpoint:
    path: /discord/DMChannel/is_spam
    method: GET
- name: add_recipients
  endpoint:
    path: /discord/DMChannel/add_recipients
    method: POST
- name: close
  endpoint:
    path: /discord/DMChannel/close
    method: POST
- name: connect
  endpoint:
    path: /discord/DMChannel/connect
    method: POST
- name: accept
  endpoint:
    path: /discord/DMChannel/accept
    method: POST
- name: decline
  endpoint:
    path: /discord/DMChannel/decline
    method: POST
- name: ack
  endpoint:
    path: /discord/DMChannel/ack
    method: POST
- name: ack_pins
  endpoint:
    path: /discord/DMChannel/ack_pins
    method: POST
- name: application_commands
  endpoint:
    path: /discord/DMChannel/application_commands
    method: GET
- name: fetch_message
  endpoint:
    path: /discord/DMChannel/fetch_message
    method: GET
- name: greet
  endpoint:
    path: /discord/DMChannel/greet
    method: POST
- name: history
  endpoint:
    path: /discord/DMChannel/history
    method: GET
- name: pins
  endpoint:
    path: /discord/DMChannel/pins
    method: GET
- name: search
  endpoint:
    path: /discord/DMChannel/search
    method: GET
- name: group_channel
  endpoint:
    path: /api/v2.1/group_channels
    method: GET
    data_selector: channels
    params: {}
- name: create_invite
  endpoint:
    path: /channels/{channel_id}/invites
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /channels/{channel_id}/connect
    method: POST
    data_selector: voice_client
- name: ack
  endpoint:
    path: /channels/{channel_id}/ack
    method: POST
    data_selector: ack
- name: ack_pins
  endpoint:
    path: /channels/{channel_id}/ack_pins
    method: POST
    data_selector: ack_pins
- name: application_commands
  endpoint:
    path: /channels/{channel_id}/application_commands
    method: GET
    data_selector: commands
- name: fetch_message
  endpoint:
    path: /channels/{channel_id}/messages/{id}
    method: GET
    data_selector: message
- name: greet
  endpoint:
    path: /channels/{channel_id}/greet
    method: POST
    data_selector: greet
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: search_results
    params:
      limit: 25
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: unacknowledge_channel
  endpoint:
    path: /channels/{channel_id}/messages/unack
    method: POST
    data_selector: unacknowledged
    params: {}
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages/files
    method: POST
    data_selector: files
    params: {}
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: /slash/commands
    method: GET
    data_selector: commands
    params: {}
- name: thread
  endpoint:
    path: /discord/Thread
    method: GET
    data_selector: records
    params: {}
- name: message
  endpoint:
    path: /discord/message
    method: GET
    data_selector: message
    params: {}
- name: message
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
- name: message
  endpoint:
    path: /messages
    method: GET
    data_selector: content
    params: {}
- name: clear_reaction
  endpoint:
    path: /messages/{message_id}/reactions/{emoji}/remove
    method: DELETE
    data_selector: data
    params: {}
- name: create_thread
  endpoint:
    path: /channels/{channel_id}/threads
    method: POST
    data_selector: data
    params: {}
- name: AudioSource
  endpoint:
    path: /discord/AudioSource
    method: GET
    data_selector: audio_stream
    params: {}
- name: PCMAudio
  endpoint:
    path: /discord/PCMAudio
    method: GET
    data_selector: raw_pcm_audio
    params: {}
- name: FFmpegAudio
  endpoint:
    path: /discord/FFmpegAudio
    method: GET
    data_selector: ffmpeg_audio_source
    params: {}
- name: FFmpegPCMAudio
  endpoint:
    path: /discord/FFmpegPCMAudio
    method: GET
    data_selector: ffmpeg_pcm_audio
    params: {}
- name: FFmpegOpusAudio
  endpoint:
    path: /discord/FFmpegOpusAudio
    method: GET
    data_selector: ffmpeg_opus_audio
    params: {}
- name: reaction
  endpoint:
    path: /reaction
    method: GET
    data_selector: attributes
    params: {}
- name: invite
  endpoint:
    path: /invites/{invite_code}
    method: GET
    data_selector: invite
    params: {}
- name: invite
  endpoint:
    path: /invites/{invite.code}
    method: GET
    data_selector: invite
- name: File
  endpoint:
    path: /discord/File
    method: POST
    data_selector: File
    params: {}
- name: CloudFile
  endpoint:
    path: /discord/CloudFile
    method: POST
    data_selector: CloudFile
    params: {}
- name: message_history
  endpoint:
    path: /channel/history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: guild_settings_update
  endpoint:
    path: discord.on_guild_settings_update
    method: CALL
    data_selector: before, after
    params: {}
- name: required_action_update
  endpoint:
    path: discord.on_required_action_update
    method: CALL
    data_selector: action
    params: {}
- name: payment_sources_update
  endpoint:
    path: discord.on_payment_sources_update
    method: CALL
    data_selector: ''
    params: {}
- name: subscriptions_update
  endpoint:
    path: discord.on_subscriptions_update
    method: CALL
    data_selector: ''
    params: {}
- name: payment_client_add
  endpoint:
    path: discord.on_payment_client_add
    method: CALL
    data_selector: purchase_token_hash, expires_at
    params: {}
- name: payment_update
  endpoint:
    path: discord.on_payment_update
    method: CALL
    data_selector: payment
    params: {}
- name: premium_guild_subscription_slot_create
  endpoint:
    path: discord.on_premium_guild_subscription_slot_create
    method: CALL
    data_selector: slot
    params: {}
- name: premium_guild_subscription_slot_update
  endpoint:
    path: discord.on_premium_guild_subscription_slot_update
    method: CALL
    data_selector: slot
    params: {}
- name: billing_popup_bridge_callback
  endpoint:
    path: discord.on_billing_popup_bridge_callback
    method: CALL
    data_selector: payment_source_type, path, query, state
    params: {}
- name: library_application_update
  endpoint:
    path: discord.on_library_application_update
    method: CALL
    data_selector: application
    params: {}
- name: entitlement_create
  endpoint:
    path: discord.on_entitlement_create
    method: CALL
    data_selector: entitlement
    params: {}
- name: entitlement_update
  endpoint:
    path: discord.on_entitlement_update
    method: CALL
    data_selector: entitlement
    params: {}
- name: entitlement_delete
  endpoint:
    path: discord.on_entitlement_delete
    method: CALL
    data_selector: entitlement
    params: {}
- name: gift_create
  endpoint:
    path: discord.on_gift_create
    method: CALL
    data_selector: gift
    params: {}
- name: gift_update
  endpoint:
    path: discord.on_gift_update
    method: CALL
    data_selector: gift
    params: {}
- name: connections_update
  endpoint:
    path: discord.on_connections_update
    method: CALL
    data_selector: ''
    params: {}
- name: connection_create
  endpoint:
    path: discord.on_connection_create
    method: CALL
    data_selector: connection
    params: {}
- name: connection_update
  endpoint:
    path: discord.on_connection_update
    method: CALL
    data_selector: before, after
    params: {}
- name: connections_link_callback
  endpoint:
    path: discord.on_connections_link_callback
    method: CALL
    data_selector: provider, code, state
    params: {}
- name: relationship_add
  endpoint:
    path: discord.on_relationship_add
    method: CALL
    data_selector: relationship
    params: {}
- name: relationship_remove
  endpoint:
    path: discord.on_relationship_remove
    method: CALL
    data_selector: relationship
    params: {}
- name: relationship_update
  endpoint:
    path: discord.on_relationship_update
    method: CALL
    data_selector: before, after
    params: {}
- name: friend_suggestion_add
  endpoint:
    path: discord.on_friend_suggestion_add
    method: CALL
    data_selector: friend_suggestion
    params: {}
- name: friend_suggestion_remove
  endpoint:
    path: discord.on_friend_suggestion_remove
    method: CALL
    data_selector: user
    params: {}
- name: raw_friend_suggestion_remove
  endpoint:
    path: discord.on_raw_friend_suggestion_remove
    method: CALL
    data_selector: user_id
    params: {}
- name: note_update
  endpoint:
    path: discord.on_note_update
    method: CALL
    data_selector: user, note
    params: {}
- name: raw_note_update
  endpoint:
    path: discord.on_raw_note_update
    method: CALL
    data_selector: user_id, note
    params: {}
- name: oauth2_token_revoke
  endpoint:
    path: discord.on_oauth2_token_revoke
    method: CALL
    data_selector: token, application_id
    params: {}
- name: call_create
  endpoint:
    path: discord.on_call_create
    method: CALL
    data_selector: call
    params: {}
- name: call_delete
  endpoint:
    path: discord.on_call_delete
    method: CALL
    data_selector: call
    params: {}
- name: call_update
  endpoint:
    path: discord.on_call_update
    method: CALL
    data_selector: before, after
    params: {}
- name: guild_available
  endpoint:
    path: discord.on_guild_available
    method: CALL
    data_selector: guild
    params: {}
- name: guild_unavailable
  endpoint:
    path: discord.on_guild_unavailable
    method: CALL
    data_selector: guild
    params: {}
- name: guild_join
  endpoint:
    path: discord.on_guild_join
    method: CALL
    data_selector: guild
    params: {}
- name: guild_remove
  endpoint:
    path: discord.on_guild_remove
    method: CALL
    data_selector: guild
    params: {}
- name: guild_update
  endpoint:
    path: discord.on_guild_update
    method: CALL
    data_selector: before, after
    params: {}
- name: guild_emojis_update
  endpoint:
    path: discord.on_guild_emojis_update
    method: CALL
    data_selector: guild, before, after
    params: {}
- name: guild_stickers_update
  endpoint:
    path: discord.on_guild_stickers_update
    method: CALL
    data_selector: guild, before, after
    params: {}
- name: application_command_index_update
  endpoint:
    path: discord.on_application_command_index_update
    method: CALL
    data_selector: guild
    params: {}
- name: audit_log_entry_create
  endpoint:
    path: discord.on_audit_log_entry_create
    method: CALL
    data_selector: entry
    params: {}
- name: fetch_widget
  endpoint:
    path: /fetch_widget
    method: GET
- name: fetch_user
  endpoint:
    path: /fetch_user
    method: GET
- name: fetch_user_profile
  endpoint:
    path: /fetch_user_profile
    method: GET
- name: fetch_channel
  endpoint:
    path: /fetch_channel
    method: GET
- name: fetch_webhook
  endpoint:
    path: /fetch_webhook
    method: GET
- name: fetch_sticker
  endpoint:
    path: /fetch_sticker
    method: GET
- name: sticker_packs
  endpoint:
    path: /sticker_packs
    method: GET
- name: fetch_sticker_pack
  endpoint:
    path: /fetch_sticker_pack
    method: GET
- name: fetch_notes
  endpoint:
    path: /fetch_notes
    method: GET
- name: fetch_note
  endpoint:
    path: /fetch_note
    method: GET
- name: fetch_connections
  endpoint:
    path: /fetch_connections
    method: GET
- name: authorize_connection
  endpoint:
    path: /authorize_connection
    method: GET
- name: create_connection
  endpoint:
    path: /create_connection
    method: POST
- name: fetch_private_channels
  endpoint:
    path: /fetch_private_channels
    method: GET
- name: fetch_settings
  endpoint:
    path: /fetch_settings
    method: GET
- name: legacy_settings
  endpoint:
    path: /legacy_settings
    method: GET
- name: email_settings
  endpoint:
    path: /email_settings
    method: GET
- name: fetch_tracking_settings
  endpoint:
    path: /fetch_tracking_settings
    method: GET
- name: edit_legacy_settings
  endpoint:
    path: /edit_legacy_settings
    method: PATCH
- name: fetch_relationships
  endpoint:
    path: /fetch_relationships
    method: GET
- name: friend_suggestions
  endpoint:
    path: /friend_suggestions
    method: GET
- name: fetch_country_code
  endpoint:
    path: /fetch_country_code
    method: GET
- name: fetch_location_info
  endpoint:
    path: /fetch_location_info
    method: GET
- name: fetch_preferred_rtc_regions
  endpoint:
    path: /fetch_preferred_rtc_regions
    method: GET
- name: create_dm
  endpoint:
    path: /create_dm
    method: POST
- name: create_group
  endpoint:
    path: /create_group
    method: POST
- name: send_friend_request
  endpoint:
    path: /send_friend_request
    method: POST
- name: applications
  endpoint:
    path: /applications
    method: GET
- name: detectable_applications
  endpoint:
    path: /detectable_applications
    method: GET
- name: fetch_application
  endpoint:
    path: /fetch_application
    method: GET
- name: fetch_partial_application
  endpoint:
    path: /fetch_partial_application
    method: GET
- name: fetch_public_application
  endpoint:
    path: /fetch_public_application
    method: GET
- name: fetch_public_applications
  endpoint:
    path: /fetch_public_applications
    method: GET
- name: teams
  endpoint:
    path: /teams
    method: GET
- name: fetch_team
  endpoint:
    path: /fetch_team
    method: GET
- name: role_delete
  endpoint:
    path: /audit-logs/role_delete
    method: GET
    data_selector: AuditLogDiff
- name: invite_create
  endpoint:
    path: /audit-logs/invite_create
    method: GET
    data_selector: AuditLogDiff
- name: invite_update
  endpoint:
    path: /audit-logs/invite_update
    method: GET
    data_selector: AuditLogDiff
- name: invite_delete
  endpoint:
    path: /audit-logs/invite_delete
    method: GET
    data_selector: AuditLogDiff
- name: webhook_create
  endpoint:
    path: /audit-logs/webhook_create
    method: GET
    data_selector: AuditLogDiff
- name: webhook_update
  endpoint:
    path: /audit-logs/webhook_update
    method: GET
    data_selector: AuditLogDiff
- name: webhook_delete
  endpoint:
    path: /audit-logs/webhook_delete
    method: GET
    data_selector: AuditLogDiff
- name: emoji_create
  endpoint:
    path: /audit-logs/emoji_create
    method: GET
    data_selector: AuditLogDiff
- name: emoji_update
  endpoint:
    path: /audit-logs/emoji_update
    method: GET
    data_selector: AuditLogDiff
- name: emoji_delete
  endpoint:
    path: /audit-logs/emoji_delete
    method: GET
    data_selector: AuditLogDiff
- name: message_delete
  endpoint:
    path: /audit-logs/message_delete
    method: GET
    data_selector: AuditLogDiff
- name: message_bulk_delete
  endpoint:
    path: /audit-logs/message_bulk_delete
    method: GET
    data_selector: AuditLogDiff
- name: message_pin
  endpoint:
    path: /audit-logs/message_pin
    method: GET
    data_selector: AuditLogDiff
- name: message_unpin
  endpoint:
    path: /audit-logs/message_unpin
    method: GET
    data_selector: AuditLogDiff
- name: integration_create
  endpoint:
    path: /audit-logs/integration_create
    method: GET
    data_selector: AuditLogDiff
- name: integration_update
  endpoint:
    path: /audit-logs/integration_update
    method: GET
    data_selector: AuditLogDiff
- name: integration_delete
  endpoint:
    path: /audit-logs/integration_delete
    method: GET
    data_selector: AuditLogDiff
- name: stage_instance_create
  endpoint:
    path: /audit-logs/stage_instance_create
    method: GET
    data_selector: AuditLogDiff
- name: stage_instance_update
  endpoint:
    path: /audit-logs/stage_instance_update
    method: GET
    data_selector: AuditLogDiff
- name: stage_instance_delete
  endpoint:
    path: /audit-logs/stage_instance_delete
    method: GET
    data_selector: AuditLogDiff
- name: sticker_create
  endpoint:
    path: /audit-logs/sticker_create
    method: GET
    data_selector: AuditLogDiff
- name: sticker_update
  endpoint:
    path: /audit-logs/sticker_update
    method: GET
    data_selector: AuditLogDiff
- name: sticker_delete
  endpoint:
    path: /audit-logs/sticker_delete
    method: GET
    data_selector: AuditLogDiff
- name: scheduled_event_create
  endpoint:
    path: /audit-logs/scheduled_event_create
    method: GET
    data_selector: AuditLogDiff
- name: scheduled_event_update
  endpoint:
    path: /audit-logs/scheduled_event_update
    method: GET
    data_selector: AuditLogDiff
- name: create_application
  endpoint:
    path: /create_application
    method: POST
- name: create_team
  endpoint:
    path: /create_team
    method: POST
- name: search_companies
  endpoint:
    path: /search_companies
    method: POST
- name: fetch_company
  endpoint:
    path: /fetch_company
    method: GET
- name: activity_statistics
  endpoint:
    path: /activity_statistics
    method: GET
- name: global_activity_statistics
  endpoint:
    path: /global_activity_statistics
    method: GET
- name: payment_sources
  endpoint:
    path: /payment_sources
    method: GET
- name: fetch_payment_source
  endpoint:
    path: /fetch_payment_source
    method: GET
- name: create_payment_source
  endpoint:
    path: /create_payment_source
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: premium_guild_subscriptions
  endpoint:
    path: /premium_guild_subscriptions
    method: GET
- name: premium_guild_subscription_slots
  endpoint:
    path: /premium_guild_subscription_slots
    method: GET
- name: premium_guild_subscription_cooldown
  endpoint:
    path: /premium_guild_subscription_cooldown
    method: GET
- name: fetch_subscription
  endpoint:
    path: /fetch_subscription
    method: GET
- name: preview_subscription
  endpoint:
    path: /preview_subscription
    method: POST
- name: create_subscription
  endpoint:
    path: /create_subscription
    method: POST
- name: payments
  endpoint:
    path: /payments
    method: GET
- name: fetch_payment
  endpoint:
    path: /fetch_payment
    method: GET
- name: promotions
  endpoint:
    path: /promotions
    method: GET
- name: promotions
  endpoint:
    path: /promotions
    method: GET
    data_selector: promotions
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: user_offer
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: trial_offer
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: pricing_promotion
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: library
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: authorizations
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
    data_selector: giftable_entitlements
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
    data_selector: premium_entitlements
- name: fetch_entitlements
  endpoint:
    path: /fetch_entitlements
    method: GET
    data_selector: entitlements
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
    data_selector: gift
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
    data_selector: sku
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
    data_selector: store_listing
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
    data_selector: store_listing
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
    data_selector: store_listings
- name: sync_webhook
  endpoint:
    path: /sync/webhook
    method: POST
    data_selector: webhook
    params: {}
- name: SyncWebhook
  endpoint:
    path: /webhook
    method: POST
    data_selector: webhook
- name: SyncWebhookMessage
  endpoint:
    path: /webhook/message
    method: POST
    data_selector: message
- name: guild_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
    params: {}
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
    params: {}
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
    params: {}
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: subscription_plans
    params: {}
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: subscription_plans
    params: {}
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: eula
    params: {}
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
    params: {}
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
    params: {}
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier
    params: {}
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
    params: {}
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
    params: {}
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: recent_mentions
    params: {}
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: delete_mention
    params: {}
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
    params: {}
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
    params: {}
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
    params: {}
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
    params: {}
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhook_id
    params: {}
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: leave_program
    params: {}
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: unverified_application
    params: {}
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
    params: {}
- name: user
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
    params: {}
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
    data_selector: result
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: POST
    data_selector: hubs
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
    data_selector: hub
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
    data_selector: suggestion
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
    data_selector: is_taken
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
    data_selector: avatars
- name: AudioSource
  endpoint:
    path: /discord/AudioSource
    method: GET
    data_selector: records
- name: PCMAudio
  endpoint:
    path: /discord/PCMAudio
    method: GET
    data_selector: records
- name: FFmpegAudio
  endpoint:
    path: /discord/FFmpegAudio
    method: GET
    data_selector: records
- name: FFmpegPCMAudio
  endpoint:
    path: /discord/FFmpegPCMAudio
    method: GET
    data_selector: records
- name: FFmpegOpusAudio
  endpoint:
    path: /discord/FFmpegOpusAudio
    method: GET
    data_selector: records
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: '200'
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: '25'
- name: AutoModRule
  endpoint:
    path: /automod/rules
    method: POST
    data_selector: rules
- name: AutoModAction
  endpoint:
    path: /automod/actions
    method: POST
    data_selector: actions
- name: message
  endpoint:
    path: /messages
    method: POST
    data_selector: message
    params: {}
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: user
    params: {}
- name: connection
  endpoint:
    path: /connections
    method: GET
- name: relationship
  endpoint:
    path: /relationships
    method: GET
- name: friend_suggestion
  endpoint:
    path: /friend_suggestions
    method: GET
- name: user_settings
  endpoint:
    path: /users/@me/settings
    method: GET
    data_selector: settings
- name: current_game
  endpoint:
    path: /discord.LegacyUserSettings.show_current_game
    method: GET
    data_selector: show_current_game
- name: stream_notifications
  endpoint:
    path: /discord.LegacyUserSettings.stream_notifications_enabled
    method: GET
    data_selector: stream_notifications_enabled
- name: timezone_offset
  endpoint:
    path: /discord.LegacyUserSettings.timezone_offset
    method: GET
    data_selector: timezone_offset
- name: view_nsfw_commands
  endpoint:
    path: /discord.LegacyUserSettings.view_nsfw_commands
    method: GET
    data_selector: view_nsfw_commands
- name: view_nsfw_guilds
  endpoint:
    path: /discord.LegacyUserSettings.view_nsfw_guilds
    method: GET
    data_selector: view_nsfw_guilds
- name: activity_statistics
  endpoint:
    path: /applications/{application.id}/activity-statistics
    method: GET
- name: create_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: POST
- name: reaction_add
  endpoint:
    path: /discord/on_reaction_add
    method: POST
- name: reaction_remove
  endpoint:
    path: /discord/on_reaction_remove
    method: POST
- name: reaction_clear
  endpoint:
    path: /discord/on_reaction_clear
    method: POST
- name: reaction_clear_emoji
  endpoint:
    path: /discord/on_reaction_clear_emoji
    method: POST
- name: raw_reaction_add
  endpoint:
    path: /discord/on_raw_reaction_add
    method: POST
- name: raw_reaction_remove
  endpoint:
    path: /discord/on_raw_reaction_remove
    method: POST
- name: raw_reaction_clear
  endpoint:
    path: /discord/on_raw_reaction_clear
    method: POST
- name: raw_reaction_clear_emoji
  endpoint:
    path: /discord/on_raw_reaction_clear_emoji
    method: POST
- name: guild_role_create
  endpoint:
    path: /discord/on_guild_role_create
    method: POST
- name: guild_role_delete
  endpoint:
    path: /discord/on_guild_role_delete
    method: POST
- name: guild_role_update
  endpoint:
    path: /discord/on_guild_role_update
    method: POST
- name: scheduled_event_create
  endpoint:
    path: /discord/on_scheduled_event_create
    method: POST
- name: scheduled_event_delete
  endpoint:
    path: /discord/on_scheduled_event_delete
    method: POST
- name: scheduled_event_update
  endpoint:
    path: /discord/on_scheduled_event_update
    method: POST
- name: scheduled_event_user_add
  endpoint:
    path: /discord/on_scheduled_event_user_add
    method: POST
- name: scheduled_event_user_remove
  endpoint:
    path: /discord/on_scheduled_event_user_remove
    method: POST
- name: raw_scheduled_event_user_add
  endpoint:
    path: /discord/on_raw_scheduled_event_user_add
    method: POST
- name: raw_scheduled_event_user_remove
  endpoint:
    path: /discord/on_raw_scheduled_event_user_remove
    method: POST
- name: scheduled_event_ack
  endpoint:
    path: /discord/on_scheduled_event_ack
    method: POST
- name: stage_instance_create
  endpoint:
    path: /discord/on_stage_instance_create
    method: POST
- name: stage_instance_delete
  endpoint:
    path: /discord/on_stage_instance_delete
    method: POST
- name: stage_instance_update
  endpoint:
    path: /discord/on_stage_instance_update
    method: POST
- name: thread_create
  endpoint:
    path: /discord/on_thread_create
    method: POST
- name: thread_join
  endpoint:
    path: /discord/on_thread_join
    method: POST
- name: thread_update
  endpoint:
    path: /discord/on_thread_update
    method: POST
- name: thread_remove
  endpoint:
    path: /discord/on_thread_remove
    method: POST
- name: thread_delete
  endpoint:
    path: /discord/on_thread_delete
    method: POST
- name: raw_thread_delete
  endpoint:
    path: /discord/on_raw_thread_delete
    method: POST
- name: thread_member_join
  endpoint:
    path: /discord/on_thread_member_join
    method: POST
- name: thread_member_remove
  endpoint:
    path: /discord/on_thread_member_remove
    method: POST
- name: raw_thread_member_remove
  endpoint:
    path: /discord/on_raw_thread_member_remove
    method: POST
- name: voice_state_update
  endpoint:
    path: /discord/on_voice_state_update
    method: POST
- name: MessageType
  endpoint:
    path: /discord/MessageType
    method: GET
    data_selector: types
    params: {}
- name: InviteType
  endpoint:
    path: /discord/InviteType
    method: GET
    data_selector: types
    params: {}
- name: UserFlags
  endpoint:
    path: /discord/UserFlags
    method: GET
    data_selector: flags
    params: {}
- name: HypeSquadHouse
  endpoint:
    path: /discord/HypeSquadHouse
    method: GET
    data_selector: houses
    params: {}
- name: VerificationLevel
  endpoint:
    path: /discord/VerificationLevel
    method: GET
    data_selector: levels
    params: {}
- name: NotificationLevel
  endpoint:
    path: /discord/NotificationLevel
    method: GET
    data_selector: levels
    params: {}
- name: HighlightLevel
  endpoint:
    path: /discord/HighlightLevel
    method: GET
    data_selector: levels
    params: {}
- name: uploads
  endpoint:
    path: /uploads
    method: POST
    data_selector: asset
- name: skus
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    data_selector: primary_sku
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
    data_selector: store_listing_sku
- name: create_sku
  endpoint:
    path: /create_sku
    method: POST
    data_selector: sku
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: fetch_entitlement
  endpoint:
    path: /fetch_entitlement/{entitlement_id}
    method: GET
    data_selector: entitlement
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
- name: create_gift_batch
  endpoint:
    path: /create_gift_batch
    method: POST
    data_selector: gift_batch
- name: branches
  endpoint:
    path: /branches
    method: GET
    data_selector: branches
- name: create_branch
  endpoint:
    path: /create_branch
    method: POST
    data_selector: branch
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
    data_selector: manifest_labels
- name: fetch_discoverability
  endpoint:
    path: /fetch_discoverability
    method: GET
    data_selector: discoverability
- name: fetch_embedded_activity_config
  endpoint:
    path: /fetch_embedded_activity_config
    method: GET
    data_selector: embedded_activity_config
- name: edit_embedded_activity_config
  endpoint:
    path: /edit_embedded_activity_config
    method: PATCH
    data_selector: embedded_activity_config
- name: application_profile
  endpoint:
    path: /applications/@me
    method: GET
    data_selector: data
    params: {}
- name: application_bot
  endpoint:
    path: /applications/@me/bot
    method: GET
    data_selector: data
    params: {}
- name: edit
  endpoint:
    method: POST
- name: token
  endpoint:
    method: GET
- name: audit_log_diff
  endpoint:
    path: /audit-log/diff
    method: GET
    data_selector: records
- name: role_delete
  endpoint:
    path: /audit-log/role_delete
    method: GET
    data_selector: records
- name: invite_create
  endpoint:
    path: /audit-log/invite_create
    method: GET
    data_selector: records
- name: invite_update
  endpoint:
    path: /audit-log/invite_update
    method: GET
    data_selector: records
- name: invite_delete
  endpoint:
    path: /audit-log/invite_delete
    method: GET
    data_selector: records
- name: webhook_create
  endpoint:
    path: /audit-log/webhook_create
    method: GET
    data_selector: records
- name: webhook_update
  endpoint:
    path: /audit-log/webhook_update
    method: GET
    data_selector: records
- name: webhook_delete
  endpoint:
    path: /audit-log/webhook_delete
    method: GET
    data_selector: records
- name: emoji_create
  endpoint:
    path: /audit-log/emoji_create
    method: GET
    data_selector: records
- name: emoji_update
  endpoint:
    path: /audit-log/emoji_update
    method: GET
    data_selector: records
- name: emoji_delete
  endpoint:
    path: /audit-log/emoji_delete
    method: GET
    data_selector: records
- name: message_delete
  endpoint:
    path: /audit-log/message_delete
    method: GET
    data_selector: records
- name: message_bulk_delete
  endpoint:
    path: /audit-log/message_bulk_delete
    method: GET
    data_selector: records
- name: message_pin
  endpoint:
    path: /audit-log/message_pin
    method: GET
    data_selector: records
- name: message_unpin
  endpoint:
    path: /audit-log/message_unpin
    method: GET
    data_selector: records
- name: integration_create
  endpoint:
    path: /audit-log/integration_create
    method: GET
    data_selector: records
- name: integration_update
  endpoint:
    path: /audit-log/integration_update
    method: GET
    data_selector: records
- name: integration_delete
  endpoint:
    path: /audit-log/integration_delete
    method: GET
    data_selector: records
- name: stage_instance_create
  endpoint:
    path: /audit-log/stage_instance_create
    method: GET
    data_selector: records
- name: stage_instance_update
  endpoint:
    path: /audit-log/stage_instance_update
    method: GET
    data_selector: records
- name: stage_instance_delete
  endpoint:
    path: /audit-log/stage_instance_delete
    method: GET
    data_selector: records
- name: sticker_create
  endpoint:
    path: /audit-log/sticker_create
    method: GET
    data_selector: records
- name: sticker_update
  endpoint:
    path: /audit-log/sticker_update
    method: GET
    data_selector: records
- name: sticker_delete
  endpoint:
    path: /audit-log/sticker_delete
    method: GET
    data_selector: records
- name: scheduled_event_create
  endpoint:
    path: /audit-log/scheduled_event_create
    method: GET
    data_selector: records
- name: scheduled_event_update
  endpoint:
    path: /audit-log/scheduled_event_update
    method: GET
    data_selector: records
- name: application_build
  endpoint:
    path: /discord/application/builds
    method: GET
    data_selector: builds
- name: application_branch
  endpoint:
    path: /discord/application/branches
    method: GET
    data_selector: branches
- name: team
  endpoint:
    path: /discord/teams
    method: GET
    data_selector: teams
- name: audit_log_diff
  endpoint:
    path: /guilds/{guild_id}/audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: team
  endpoint:
    path: /discord/Team
    method: GET
    data_selector: teams
- name: team_member
  endpoint:
    path: /discord/TeamMember
    method: GET
    data_selector: members
- name: payout
  endpoint:
    path: /discord/Team/payouts
    method: GET
    data_selector: payouts
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: user
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
    params: {}
- name: friends
  endpoint:
    path: /users/@me/friends
    method: GET
    data_selector: friends
    params: {}
- name: mutual_friends
  endpoint:
    path: /users/@me/friends/{user_id}/mutual
    method: GET
    data_selector: mutual_friends
    params: {}
- name: sync_webhook
  endpoint:
    path: /sync/webhook
    method: POST
    data_selector: webhook
    params: {}
- name: edit_message
  endpoint:
    path: /edit_message
    method: POST
    data_selector: message
    params: {}
- name: delete_message
  endpoint:
    path: /delete_message
    method: DELETE
    data_selector: message
    params: {}
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: guild_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: invites
  endpoint:
    path: /invites
    method: GET
- name: messageable
  endpoint:
    path: /messageable
    method: GET
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: SubscriptionTrial
  endpoint:
    path: /discord/SubscriptionTrial
    method: GET
    data_selector: records
- name: PremiumGuildSubscription
  endpoint:
    path: /discord/PremiumGuildSubscription
    method: GET
    data_selector: records
- name: PremiumGuildSubscriptionSlot
  endpoint:
    path: /discord/PremiumGuildSubscriptionSlot
    method: GET
    data_selector: records
- name: PremiumGuildSubscriptionCooldown
  endpoint:
    path: /discord/PremiumGuildSubscriptionCooldown
    method: GET
    data_selector: records
- name: SubscriptionPlan
  endpoint:
    path: /discord/SubscriptionPlan
    method: GET
    data_selector: records
- name: user
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
    params: {}
- name: subscription_plan_prices
  endpoint:
    path: /v2/subscription_plan_prices
    method: GET
    data_selector: country_prices
- name: payment
  endpoint:
    path: /v2/payments
    method: GET
    data_selector: payments
- name: sku
  endpoint:
    path: /v2/skus
    method: GET
    data_selector: skus
- name: SKU
  endpoint:
    path: /discord/sku
    method: GET
    data_selector: sku
- name: user_profile
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /api/v2/user/profile
    method: GET
    data_selector: user
- name: guild
  endpoint:
    path: /guilds/{guild.id}
    method: GET
    data_selector: guild
    params: {}
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: '200'
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: '25'
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: discovery_splash
  endpoint:
    path: /guilds/{guild_id}/discovery_splash
    method: GET
- name: member_count
  endpoint:
    path: /guilds/{guild_id}/member_count
    method: GET
- name: online_count
  endpoint:
    path: /guilds/{guild_id}/online_count
    method: GET
- name: chunked
  endpoint:
    path: /guilds/{guild_id}/chunked
    method: GET
- name: created_at
  endpoint:
    path: /guilds/{guild_id}/created_at
    method: GET
- name: PrimaryGuild
  endpoint:
    path: /discord/PrimaryGuild
    method: GET
    data_selector: attributes
    params: {}
- name: DisplayNameStyle
  endpoint:
    path: /discord/DisplayNameStyle
    method: GET
    data_selector: attributes
    params: {}
- name: UserAffinity
  endpoint:
    path: /discord/UserAffinity
    method: GET
    data_selector: attributes
    params: {}
- name: GuildAffinity
  endpoint:
    path: /discord/GuildAffinity
    method: GET
    data_selector: attributes
    params: {}
- name: ChannelAffinity
  endpoint:
    path: /discord/ChannelAffinity
    method: GET
    data_selector: attributes
    params: {}
- name: BillingAddress
  endpoint:
    path: /discord/BillingAddress
    method: GET
    data_selector: attributes
    params: {}
- name: PaymentSource
  endpoint:
    path: /discord/PaymentSource
    method: GET
    data_selector: attributes
    params: {}
- name: PremiumUsage
  endpoint:
    path: /discord/PremiumUsage
    method: GET
    data_selector: attributes
    params: {}
- name: create_directory_channel
  endpoint:
    path: /channels
    method: POST
    data_selector: channel
    params: {}
- name: create_forum
  endpoint:
    path: /forums
    method: POST
    data_selector: forum
    params: {}
- name: create_forum_channel
  endpoint:
    path: /forum_channels
    method: POST
    data_selector: forum_channel
    params: {}
- name: user_settings
  endpoint:
    path: /users/@me/settings
    method: GET
    data_selector: settings
    params: {}
- name: sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: POST
    data_selector: sticker
    params: {}
- name: scheduled_event
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: POST
    data_selector: event
    params: {}
- name: emoji
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: POST
    data_selector: emoji
    params: {}
- name: role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: POST
    data_selector: role
    params: {}
- name: current_game
  endpoint:
    path: /show_current_game
    method: GET
    data_selector: records
- name: stream_notifications
  endpoint:
    path: /stream_notifications_enabled
    method: GET
    data_selector: records
- name: timezone_offset
  endpoint:
    path: /timezone_offset
    method: GET
    data_selector: records
- name: view_nsfw_commands
  endpoint:
    path: /view_nsfw_commands
    method: GET
    data_selector: records
- name: view_nsfw_guilds
  endpoint:
    path: /view_nsfw_guilds
    method: GET
    data_selector: records
- name: welcome_screen
  endpoint:
    path: /guilds/{guild_id}/welcome-screen
    method: PATCH
    data_selector: welcome_screen
- name: applications
  endpoint:
    path: /guilds/{guild_id}/applications
    method: GET
    data_selector: applications
- name: premium_subscriptions
  endpoint:
    path: /guilds/{guild_id}/premium-subscriptions
    method: GET
    data_selector: premium_subscriptions
- name: price_tiers
  endpoint:
    path: /guilds/{guild_id}/price-tiers
    method: GET
    data_selector: price_tiers
- name: application_info
  endpoint:
    path: /applications/{application.id}
    method: GET
    data_selector: application
    params: {}
- name: automod_rules
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: fetch_automod_rule
  endpoint:
    path: /automod/rules/{automod_rule_id}
    method: GET
    data_selector: rule
- name: create_automod_rule
  endpoint:
    path: /automod/rules
    method: POST
    data_selector: created_rule
- name: admin_community_eligibility
  endpoint:
    path: /admin/community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /admin/community/join
    method: POST
    data_selector: joined_community
- name: migrate_command_scope
  endpoint:
    path: /commands/migrate
    method: POST
    data_selector: migrated_integrations
- name: directory_broadcast_eligibility
  endpoint:
    path: /directory/broadcast/eligibility
    method: GET
    data_selector: broadcast_eligibility
- name: edit_application
  endpoint:
    path: /applications/{application.id}
    method: PATCH
- name: fetch_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: GET
- name: create_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: POST
- name: edit_bot
  endpoint:
    path: /bots/{bot.id}
    method: PATCH
- name: request_intents
  endpoint:
    path: /applications/{application.id}/request_intents
    method: POST
- name: whitelisted
  endpoint:
    path: /applications/{application.id}/whitelisted
    method: GET
- name: whitelist
  endpoint:
    path: /applications/{application.id}/whitelist
    method: POST
- name: create_asset
  endpoint:
    path: /applications/{application.id}/assets
    method: POST
- name: store_assets
  endpoint:
    path: /applications/{application.id}/assets
    method: GET
- name: create_store_asset
  endpoint:
    path: /applications/{application.id}/store_assets
    method: POST
- name: ban_entry
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: bans
    params: {}
- name: bulk_ban_result
  endpoint:
    path: /guilds/{guild_id}/bans/bulk
    method: POST
    data_selector: bulkBanResult
    params: {}
- name: role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
    params: {}
- name: application_profile
  endpoint:
    path: /api/v2/applications/@me
    method: GET
    data_selector: data
- name: application_bot
  endpoint:
    path: /api/v2/applications/@me/bot
    method: GET
    data_selector: data
- name: auto_mod_rule
  endpoint:
    path: /discord/automod/rules
    method: GET
    data_selector: rules
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: member
  endpoint:
    path: /guilds/{guild.id}/members
    method: GET
    data_selector: members
    params:
      incremental: joined_at
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
    data_selector: mutual_friends
- name: fetch_note
  endpoint:
    path: /fetch_note
    method: GET
    data_selector: note
- name: delete_note
  endpoint:
    path: /delete_note
    method: DELETE
    data_selector: note
- name: application_activity_statistics
  endpoint:
    path: /application/activity/statistics
    method: GET
    data_selector: records
- name: application_tester
  endpoint:
    path: /application/tester
    method: GET
    data_selector: records
- name: embedded_activity_config
  endpoint:
    path: /embedded/activity/config
    method: GET
    data_selector: records
- name: detectable_application
  endpoint:
    path: /detectable/application
    method: GET
    data_selector: records
- name: unverified_application
  endpoint:
    path: /unverified/application
    method: GET
    data_selector: records
- name: application_branch
  endpoint:
    path: /application/branch
    method: GET
    data_selector: records
- name: member_profile
  endpoint:
    path: /discord/api/member_profile
    method: GET
    data_selector: profile_data
    params: {}
- name: builds
  endpoint:
    path: /builds
    method: GET
- name: live_build_id
  endpoint:
    path: /live_build_id
    method: GET
- name: latest_build
  endpoint:
    path: /latest_build
    method: GET
- name: create_build
  endpoint:
    path: /create_build
    method: POST
- name: promote
  endpoint:
    path: /promote
    method: POST
- name: delete_build
  endpoint:
    path: /delete_build
    method: DELETE
- name: member_profile
  endpoint:
    path: /guilds/{guild_id}/members/{user_id}
    method: GET
    data_selector: member_profile
    params: {}
- name: voice_client
  endpoint:
    path: /voice/connect
    method: POST
    data_selector: voice_client_data
- name: dm_channel
  endpoint:
    path: /dm/create
    method: POST
    data_selector: dm_channel_data
- name: message_history
  endpoint:
    path: /messages/history
    method: GET
    data_selector: message_history_data
- name: pins
  endpoint:
    path: /messages/pins
    method: GET
    data_selector: pinned_messages_data
- name: upload_files
  endpoint:
    path: /users/@me/attachments
    method: POST
    data_selector: uploaded_files
- name: user_commands
  endpoint:
    path: /applications/{application.id}/commands
    method: GET
    data_selector: commands
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params:
      query: null
      limit: null
      command_ids: null
      application: null
      with_applications: true
- name: guild_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
    data_selector: stickers
- name: category_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: gift
  endpoint:
    path: /discord/gift
    method: GET
    data_selector: gift_data
- name: gift_batch
  endpoint:
    path: /discord/gift_batch
    method: GET
    data_selector: batch_data
- name: library_application
  endpoint:
    path: /discord/library_application
    method: GET
    data_selector: application_data
- name: forums
  endpoint:
    path: /forums
    method: GET
    data_selector: channels
- name: directory_channels
  endpoint:
    path: /directory_channels
    method: GET
    data_selector: channels
- name: directories
  endpoint:
    path: /directories
    method: GET
    data_selector: channels
- name: text_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: SubscriptionTrial
  endpoint:
    path: /discord/SubscriptionTrial
    method: GET
    data_selector: trial
    params: {}
- name: PremiumGuildSubscription
  endpoint:
    path: /discord/PremiumGuildSubscription
    method: GET
    data_selector: subscription
    params: {}
- name: PremiumGuildSubscriptionSlot
  endpoint:
    path: /discord/PremiumGuildSubscriptionSlot
    method: GET
    data_selector: slot
    params: {}
- name: SubscriptionPlan
  endpoint:
    path: /discord/SubscriptionPlan
    method: GET
    data_selector: plan
    params: {}
- name: edit_channel
  endpoint:
    path: /channels/{channel.id}
    method: PATCH
- name: clone_channel
  endpoint:
    path: /channels/{channel.id}/clone
    method: POST
- name: delete_messages
  endpoint:
    path: /channels/{channel.id}/messages/bulk-delete
    method: POST
- name: purge_messages
  endpoint:
    path: /channels/{channel.id}/messages
    method: DELETE
- name: webhooks
  endpoint:
    path: /channels/{channel.id}/webhooks
    method: GET
- name: create_webhook
  endpoint:
    path: /channels/{channel.id}/webhooks
    method: POST
- name: follow_channel
  endpoint:
    path: /channels/{channel.id}/follow
    method: POST
- name: get_partial_message
  endpoint:
    path: /channels/{channel.id}/messages/{message_id}
    method: GET
- name: get_thread
  endpoint:
    path: /channels/{channel.id}/threads/{thread_id}
    method: GET
- name: create_thread
  endpoint:
    path: /channels/{channel.id}/threads
    method: POST
- name: archived_threads
  endpoint:
    path: /channels/{channel.id}/threads/archived
    method: GET
- name: SubscriptionPlanPrices
  endpoint:
    path: /subscription_plan_prices
    method: GET
    data_selector: country_prices
- name: Payment
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
- name: SKU
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: sku
  endpoint:
    path: /discord/sku
    method: GET
    data_selector: sku
    params: {}
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: listings
- name: sku
  endpoint:
    path: /sku
    method: GET
    data_selector: skus
- name: notification_settings
  endpoint:
    path: /channels/{channel_id}/notification_settings
    method: GET
    data_selector: settings
- name: overwrites
  endpoint:
    path: /channels/{channel_id}/overwrites
    method: GET
    data_selector: overwrites
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: messages
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
- name: send
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /channels/{channel_id}/permissions/{target_id}
    method: PUT
    data_selector: permissions
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: listings
- name: guild
  endpoint:
    path: /guilds/{guild.id}
    method: GET
    data_selector: guild
    params: {}
- name: channels
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: members
  endpoint:
    path: /guilds/{guild_id}/members
    method: GET
    data_selector: members
- name: roles
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
- name: scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: GET
    data_selector: scheduled_events
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: message
    params: {}
- name: partial_message
  endpoint:
    path: /messages/partial/{message_id}
    method: POST
    data_selector: partial_message
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
    params: {}
- name: bans
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: ban_entries
    params:
      limit: 1000
- name: channels
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
    params: {}
- name: members
  endpoint:
    path: /guilds/{guild_id}/members
    method: GET
    data_selector: members
    params: {}
- name: stage_channel
  endpoint:
    path: /api/v2/stage_channels
    method: GET
    data_selector: channels
    params: {}
- name: history
  endpoint:
    path: /channel/history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channel/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /channel/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: purge
  endpoint:
    path: /channel/purge
    method: POST
    data_selector: deleted_messages
    params:
      limit: 100
- name: sticker
  endpoint:
    path: /stickers
    method: GET
    data_selector: stickers
- name: scheduled_event
  endpoint:
    path: /scheduled_events
    method: GET
    data_selector: events
- name: emoji
  endpoint:
    path: /emojis
    method: GET
    data_selector: emojis
- name: role
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
- name: read_state
  endpoint:
    path: /read_state
    method: GET
    data_selector: read_state
- name: scheduled_events
  endpoint:
    path: /scheduled_events
    method: GET
    data_selector: scheduled_events
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: directory_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: entries
- name: fetch_entries
  endpoint:
    path: /fetch_entries
    method: GET
    data_selector: entries
    params: {}
- name: create_entry
  endpoint:
    path: /create_entry
    method: POST
    data_selector: entry
    params: {}
- name: search_entries
  endpoint:
    path: /search_entries
    method: GET
    data_selector: entries
    params: {}
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
    data_selector: invite
    params: {}
- name: welcome_screen
  endpoint:
    path: /guilds/{guild_id}/welcome-screen
    method: GET
    data_selector: welcome_screen
- name: applications
  endpoint:
    path: /guilds/{guild_id}/applications
    method: GET
    data_selector: applications
- name: premium_subscriptions
  endpoint:
    path: /guilds/{guild_id}/premium-subscriptions
    method: GET
    data_selector: premium_subscriptions
- name: entitlements
  endpoint:
    path: /guilds/{guild_id}/entitlements
    method: GET
    data_selector: entitlements
- name: price_tiers
  endpoint:
    path: /guilds/{guild_id}/price-tiers
    method: GET
    data_selector: price_tiers
- name: members
  endpoint:
    path: /guilds/{guild_id}/members
    method: GET
    data_selector: members
- name: automod_rules
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: fetch_automod_rule
  endpoint:
    path: /automod/rules/{automod_rule_id}
    method: GET
    data_selector: rule
- name: create_automod_rule
  endpoint:
    path: /automod/rules
    method: POST
    data_selector: rule
- name: ban_entry
  endpoint:
    path: /guilds/{guild.id}/bans
    method: GET
    data_selector: bans
    params: {}
- name: bulk_ban_result
  endpoint:
    path: /guilds/{guild.id}/bans
    method: POST
    data_selector: bulk_bans
    params: {}
- name: role
  endpoint:
    path: /guilds/{guild.id}/roles
    method: GET
    data_selector: roles
    params: {}
- name: archived_threads
  endpoint:
    path: /archived_threads
    method: async
    data_selector: null
    params: {}
- name: clone
  endpoint:
    path: /clone
    method: async
    data_selector: null
    params: {}
- name: create_invite
  endpoint:
    path: /create_invite
    method: async
    data_selector: null
    params: {}
- name: create_tag
  endpoint:
    path: /create_tag
    method: async
    data_selector: null
    params: {}
- name: create_thread
  endpoint:
    path: /create_thread
    method: async
    data_selector: null
    params: {}
- name: create_webhook
  endpoint:
    path: /create_webhook
    method: async
    data_selector: null
    params: {}
- name: delete
  endpoint:
    path: /delete
    method: async
    data_selector: null
    params: {}
- name: edit
  endpoint:
    path: /edit
    method: async
    data_selector: null
    params: {}
- name: get_tag
  endpoint:
    path: /get_tag
    method: def
    data_selector: null
    params: {}
- name: get_thread
  endpoint:
    path: /get_thread
    method: def
    data_selector: null
    params: {}
- name: invites
  endpoint:
    path: /invites
    method: async
    data_selector: null
    params: {}
- name: is_media
  endpoint:
    path: /is_media
    method: def
    data_selector: null
    params: {}
- name: is_nsfw
  endpoint:
    path: /is_nsfw
    method: def
    data_selector: null
    params: {}
- name: move
  endpoint:
    path: /move
    method: async
    data_selector: null
    params: {}
- name: overwrites_for
  endpoint:
    path: /overwrites_for
    method: def
    data_selector: null
    params: {}
- name: permissions_for
  endpoint:
    path: /permissions_for
    method: def
    data_selector: null
    params: {}
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: async
    data_selector: null
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: async
    data_selector: null
    params: {}
- name: auto_mod_rule
  endpoint:
    path: /auto_mod/rules
    method: GET
- name: integration_application
  endpoint:
    path: /integration/applications
    method: GET
- name: DMChannel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: channel
    params: {}
- name: message_request
  endpoint:
    path: /discord/DMChannel/is_message_request
    method: GET
    data_selector: is_message_request
- name: accepted_request
  endpoint:
    path: /discord/DMChannel/is_accepted
    method: GET
    data_selector: is_accepted
- name: spam_request
  endpoint:
    path: /discord/DMChannel/is_spam
    method: GET
    data_selector: is_spam
- name: history
  endpoint:
    path: /discord/DMChannel/history
    method: GET
    data_selector: history
    params:
      limit: 100
- name: pins
  endpoint:
    path: /discord/DMChannel/pins
    method: GET
    data_selector: pins
- name: search
  endpoint:
    path: /discord/DMChannel/search
    method: GET
    data_selector: search
    params:
      limit: 25
- name: member
  endpoint:
    path: /api/v9/guilds/{guild.id}/members/{user.id}
    method: GET
    data_selector: member
    params: {}
- name: group_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: channel
    params: {}
- name: private_channel
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params: {}
- name: request_to_speak
  endpoint:
    path: /request_to_speak
    method: POST
- name: move_to
  endpoint:
    path: /move_to
    method: POST
- name: timeout
  endpoint:
    path: /timeout
    method: POST
- name: add_roles
  endpoint:
    path: /add_roles
    method: POST
- name: remove_roles
  endpoint:
    path: /remove_roles
    method: POST
- name: get_role
  endpoint:
    path: /get_role
    method: GET
- name: is_timed_out
  endpoint:
    path: /is_timed_out
    method: GET
- name: ack
  endpoint:
    path: /ack
    method: POST
- name: ack_pins
  endpoint:
    path: /ack_pins
    method: POST
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
- name: edit_note
  endpoint:
    path: /edit_note
    method: POST
- name: fetch_message
  endpoint:
    path: /fetch_message
    method: GET
- name: greet
  endpoint:
    path: /greet
    method: POST
- name: history
  endpoint:
    path: /history
    method: GET
- name: create_invite
  endpoint:
    path: /channels/{channel.id}/invites
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /channels/{channel.id}/voice
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
- name: ack
  endpoint:
    path: /channels/{channel.id}/ack
    method: POST
    data_selector: ack_response
- name: ack_pins
  endpoint:
    path: /channels/{channel.id}/ack_pins
    method: POST
    data_selector: ack_pins_response
- name: application_commands
  endpoint:
    path: /channels/{channel.id}/application_commands
    method: GET
    data_selector: commands
- name: fetch_message
  endpoint:
    path: /channels/{channel.id}/messages/{id}
    method: GET
    data_selector: message
- name: history
  endpoint:
    path: /channels/{channel.id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /channels/{channel.id}/pins
    method: GET
    data_selector: pinned_messages
- name: search
  endpoint:
    path: /channels/{channel.id}/messages/search
    method: GET
    data_selector: search_results
    params:
      limit: 25
- name: send_message
  endpoint:
    path: /send
    method: POST
    data_selector: message
- name: unacknowledge_messages
  endpoint:
    path: /unack
    method: POST
    data_selector: unacknowledged
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
    data_selector: uploaded_files
- name: fetch_message
  endpoint:
    path: /fetch_message
    method: GET
    data_selector: message
- name: pinned_messages
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: messages
- name: member_profile
  endpoint:
    path: /users/@me/guilds/{guild_id}/members/{user_id}
    method: GET
    data_selector: profile
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: unacknowledge_messages
  endpoint:
    path: /channels/{channel_id}/unacknowledge
    method: POST
    data_selector: status
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/files
    method: POST
    data_selector: uploaded_files
- name: member_profile
  endpoint:
    path: /discord/member/profile
    method: GET
    data_selector: records
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
- name: slash_commands
  endpoint:
    path: /slash/commands
    method: GET
    data_selector: commands
- name: member_profile
  endpoint:
    path: /api/v1/member/profile
    method: GET
    data_selector: records
- name: guild_avatar_decoration
  endpoint:
    path: /guild_avatar_decoration
    method: GET
- name: guild_avatar_decoration_expires_at
  endpoint:
    path: /guild_avatar_decoration_expires_at
    method: GET
- name: guild_avatar_decoration_sku_id
  endpoint:
    path: /guild_avatar_decoration_sku_id
    method: GET
- name: guild_banner
  endpoint:
    path: /guild_banner
    method: GET
- name: guild_permissions
  endpoint:
    path: /guild_permissions
    method: GET
- name: history
  endpoint:
    path: /history
    method: GET
    params:
      limit: 100
- name: id
  endpoint:
    path: /id
    method: GET
- name: is_blocked
  endpoint:
    path: /is_blocked
    method: GET
- name: is_blocker
  endpoint:
    path: /is_blocker
    method: GET
- name: is_friend
  endpoint:
    path: /is_friend
    method: GET
- name: is_on_mobile
  endpoint:
    path: /is_on_mobile
    method: GET
- name: is_pomelo
  endpoint:
    path: /is_pomelo
    method: GET
- name: is_timed_out
  endpoint:
    path: /is_timed_out
    method: GET
- name: mention
  endpoint:
    path: /mention
    method: GET
- name: mobile_status
  endpoint:
    path: /mobile_status
    method: GET
- name: mutual_friends_count
  endpoint:
    path: /mutual_friends_count
    method: GET
- name: name
  endpoint:
    path: /name
    method: GET
- name: premium
  endpoint:
    path: /premium
    method: GET
- name: primary_guild
  endpoint:
    path: /primary_guild
    method: GET
- name: public_flags
  endpoint:
    path: /public_flags
    method: GET
- name: raw_status
  endpoint:
    path: /raw_status
    method: GET
- name: relationship
  endpoint:
    path: /relationship
    method: GET
- name: roles
  endpoint:
    path: /roles
    method: GET
- name: remove_tags
  endpoint:
    path: /remove_tags
    method: POST
- name: join
  endpoint:
    path: /join
    method: POST
- name: leave
  endpoint:
    path: /leave
    method: POST
- name: add_user
  endpoint:
    path: /add_user
    method: POST
- name: remove_user
  endpoint:
    path: /remove_user
    method: POST
- name: fetch_members
  endpoint:
    path: /fetch_members
    method: GET
- name: delete
  endpoint:
    path: /delete
    method: DELETE
- name: get_partial_message
  endpoint:
    path: /get_partial_message
    method: GET
- name: ack
  endpoint:
    path: /ack
    method: POST
- name: ack_pins
  endpoint:
    path: /ack_pins
    method: POST
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
- name: fetch_message
  endpoint:
    path: /fetch_message
    method: GET
- name: greet
  endpoint:
    path: /greet
    method: POST
- name: history
  endpoint:
    path: /history
    method: GET
- name: pins
  endpoint:
    path: /pins
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
- name: PartialEmoji
  endpoint:
    path: /api/v2/partial_emoji
    method: GET
    data_selector: emoji_data
- name: Sticker
  endpoint:
    path: /api/v2/sticker
    method: GET
    data_selector: sticker_data
- name: guild_sticker
  endpoint:
    path: /stickers
    method: GET
    data_selector: stickers
- name: category_channel
  endpoint:
    path: /channels/categories
    method: GET
    data_selector: channels
- name: forums
  endpoint:
    path: /forums
    method: GET
- name: directory_channels
  endpoint:
    path: /directory_channels
    method: GET
- name: directories
  endpoint:
    path: /directories
    method: GET
- name: text_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: reaction
  endpoint:
    path: /reaction
    method: GET
    data_selector: reactions
    params: {}
- name: archived_threads
  endpoint:
    path: /archived/threads
    method: GET
    data_selector: threads
    params:
      limit: None
      before: Optional[Union[Snowflake, datetime.datetime]]
      private: bool
      joined: bool
- name: message_history
  endpoint:
    path: /messages/history
    method: GET
    data_selector: messages
    params:
      limit: '100'
      before: Optional[Union[Snowflake, datetime.datetime]]
      after: Optional[Union[Snowflake, datetime.datetime]]
      around: Optional[Union[Snowflake, datetime.datetime]]
      oldest_first: Optional[bool]
- name: invite
  endpoint:
    path: /invites/{invite_code}
    method: GET
    data_selector: invite
    params: {}
- name: invite
  endpoint:
    path: /invites/{invite.code}
    method: GET
    data_selector: invite
    params: {}
- name: invite
  endpoint:
    path: /invites/{invite.code}
    method: GET
    data_selector: invite
    params: {}
- name: voice_channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: voice_states
- name: invite
  endpoint:
    path: /invites/{invite_code}
    method: GET
    data_selector: invite
- name: create_channel
  endpoint:
    path: /channels
    method: POST
    data_selector: channel
    params: {}
- name: edit_channel
  endpoint:
    path: /channels/{channel_id}
    method: PATCH
    data_selector: channel
    params: {}
- name: delete_channel
  endpoint:
    path: /channels/{channel_id}
    method: DELETE
    data_selector: channel
    params: {}
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: Message
    params: {}
- name: partial_message
  endpoint:
    path: /messages/{message_id}/partial
    method: GET
    data_selector: PartialMessage
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinnedMessages
    params: {}
- name: purge
  endpoint:
    path: /channels/{channel_id}/messages/bulk-delete
    method: POST
    data_selector: deletedMessages
    params:
      limit: 100
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      most_relevant: false
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
    params: {}
- name: stage_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: channel
    params: {}
- name: company
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
- name: payment_source
  endpoint:
    path: /payment_sources
    method: GET
    data_selector: payment_sources
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: promotions
  endpoint:
    path: /promotions
    method: GET
    data_selector: promotions
    params: {}
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: user_offer
    params:
      payment_gateway: null
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: trial_offer
    params: {}
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: pricing_promotion
    params: {}
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: library
    params: {}
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: authorizations
    params: {}
- name: read_state
  endpoint:
    path: /channels/{channel_id}/read_state
    method: GET
    data_selector: read_state
- name: scheduled_events
  endpoint:
    path: /channels/{channel_id}/scheduled_events
    method: GET
    data_selector: scheduled_events
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /channels/{channel_id}/permissions/{overwrite_id}
    method: PUT
    data_selector: permissions
- name: directory_channel
  endpoint:
    path: /directory-channel
    method: GET
    data_selector: entries
- name: forum_channel
  endpoint:
    path: /discord/forum_channel
    method: GET
    data_selector: records
- name: threads
  endpoint:
    path: /forum/threads
    method: POST
    data_selector: thread
    params: {}
- name: webhooks
  endpoint:
    path: /forum/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: invites
  endpoint:
    path: /forum/invites
    method: GET
    data_selector: invites
    params: {}
- name: permissions_synced
  endpoint:
    path: /permissions/synced
    method: GET
- name: set_permissions
  endpoint:
    path: /permissions/set
    method: POST
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
    params: {}
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
    params: {}
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
    params: {}
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: sku_subscription_plans
    params: {}
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: skus_subscription_plans
    params: {}
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: eula
    params: {}
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
    params: {}
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
    params: {}
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier
    params: {}
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
    params: {}
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
    params: {}
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: recent_mentions
    params: {}
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: delete_mention
    params: {}
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
    params: {}
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
    params: {}
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
    params: {}
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
    params: {}
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: join_program
    params: {}
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: leave_program
    params: {}
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: report_application
    params: {}
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
    params: {}
- name: requested_at
  endpoint:
    path: /discord/DMChannel/requested_at
    method: GET
- name: is_message_request
  endpoint:
    path: /discord/DMChannel/is_message_request
    method: GET
- name: is_accepted
  endpoint:
    path: /discord/DMChannel/is_accepted
    method: GET
- name: is_spam
  endpoint:
    path: /discord/DMChannel/is_spam
    method: GET
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
    data_selector: waitlist
    params: {}
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
    data_selector: hubs
    params: {}
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
    data_selector: hub
    params: {}
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
    data_selector: suggestion
    params: {}
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
    data_selector: username_check
    params: {}
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
    data_selector: avatars
    params: {}
- name: messages
  endpoint:
    path: /channels/{channel.id}/messages
    method: GET
    data_selector: messages
- name: send_message
  endpoint:
    path: /channels/{channel.id}/messages
    method: POST
    data_selector: message
- name: group_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: AudioSource
  endpoint:
    path: /discord/AudioSource
    method: GET
    data_selector: audio_streams
    params: {}
- name: PCMAudio
  endpoint:
    path: /discord/PCMAudio
    method: GET
    data_selector: pcm_audio
    params: {}
- name: FFmpegAudio
  endpoint:
    path: /discord/FFmpegAudio
    method: GET
    data_selector: ffmpeg_audio
    params: {}
- name: FFmpegPCMAudio
  endpoint:
    path: /discord/FFmpegPCMAudio
    method: GET
    data_selector: ffmpeg_pcm_audio
    params: {}
- name: FFmpegOpusAudio
  endpoint:
    path: /discord/FFmpegOpusAudio
    method: GET
    data_selector: ffmpeg_opus_audio
    params: {}
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
      cls: VoiceClient
      ring: true
- name: ack
  endpoint:
    path: /ack
    method: POST
    data_selector: ack_response
    params: {}
- name: ack_pins
  endpoint:
    path: /ack_pins
    method: POST
    data_selector: ack_pins_response
    params: {}
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
    data_selector: commands
    params: {}
- name: fetch_message
  endpoint:
    path: /fetch_message
    method: GET
    data_selector: message
    params: {}
- name: greet
  endpoint:
    path: /greet
    method: POST
    data_selector: greet_response
    params: {}
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: search_results
    params:
      limit: 25
      offset: 0
- name: message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: /slash/commands
    method: GET
    data_selector: commands
    params: {}
- name: audit_log
  endpoint:
    path: /guilds/{guild.id}/audit-logs
    method: GET
    data_selector: audit_log_entries
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}
    method: POST
    data_selector: message
- name: remove_tags
  endpoint:
    path: /remove_tags
    method: POST
- name: join
  endpoint:
    path: /join
    method: POST
- name: leave
  endpoint:
    path: /leave
    method: POST
- name: add_user
  endpoint:
    path: /add_user
    method: POST
- name: remove_user
  endpoint:
    path: /remove_user
    method: POST
- name: fetch_members
  endpoint:
    path: /fetch_members
    method: GET
- name: delete
  endpoint:
    path: /delete
    method: DELETE
- name: get_partial_message
  endpoint:
    path: /get_partial_message
    method: GET
- name: ack
  endpoint:
    path: /ack
    method: POST
- name: ack_pins
  endpoint:
    path: /ack_pins
    method: POST
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
- name: fetch_message
  endpoint:
    path: /fetch_message
    method: GET
- name: greet
  endpoint:
    path: /greet
    method: POST
- name: history
  endpoint:
    path: /history
    method: GET
- name: pins
  endpoint:
    path: /pins
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
- name: webhook
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}
    method: POST
    data_selector: webhook
    params: {}
- name: GuildChannel
  endpoint:
    path: /guilds/{guild.id}/channels
    method: GET
    data_selector: channels
- name: stage_instance
  endpoint:
    path: /stage-instance
    method: GET
    data_selector: records
- name: private_call
  endpoint:
    path: /private-call
    method: GET
    data_selector: records
- name: group_call
  endpoint:
    path: /group-call
    method: GET
    data_selector: records
- name: call_message
  endpoint:
    path: /call-message
    method: GET
    data_selector: records
- name: message
  endpoint:
    path: /message
    method: GET
    data_selector: records
- name: invites
  endpoint:
    path: /invites
    method: GET
    data_selector: invites
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: message
- name: message
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
- name: user
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
- name: message
  endpoint:
    path: /messages
    method: POST
    data_selector: content
    params: {}
- name: reaction
  endpoint:
    path: /reactions
    method: POST
    data_selector: reaction_data
    params: {}
- name: thread
  endpoint:
    path: /threads
    method: POST
    data_selector: thread_data
    params: {}
- name: attachment
  endpoint:
    path: /attachments
    method: GET
    data_selector: attachments
- name: message_reference
  endpoint:
    path: /message_references
    method: GET
    data_selector: messages
- name: role_subscription_info
  endpoint:
    path: /role_subscription_info
    method: GET
    data_selector: subscription_info
- name: purchase_notification
  endpoint:
    path: /purchase_notifications
    method: GET
    data_selector: notifications
- name: fetch_message
  endpoint:
    path: /fetch_message/{id}
    method: GET
    data_selector: Message
    params: {}
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
    data_selector: mutual_friends
    params: {}
- name: fetch_note
  endpoint:
    path: /fetch_note
    method: GET
    data_selector: note
    params: {}
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: search_results
    params:
      limit: 25
- name: ActionRow
  endpoint:
    path: /discord/ActionRow
    method: GET
- name: Button
  endpoint:
    path: /discord/Button
    method: GET
- name: SelectMenu
  endpoint:
    path: /discord/SelectMenu
    method: GET
- name: TextInput
  endpoint:
    path: /discord/TextInput
    method: GET
- name: invite
  endpoint:
    path: /invites/{invite.code}
    method: GET
    data_selector: invite
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: '200'
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: '25'
- name: invite
  endpoint:
    path: /invites/{invite.code}
    method: GET
    data_selector: invite
    params: {}
- name: invite
  endpoint:
    path: /invites/{code}
    method: GET
    data_selector: invite_data
- name: invite
  endpoint:
    path: /invites/{invite.code}
    method: GET
    data_selector: invite
    params: {}
- name: legacy_user_settings
  endpoint:
    path: /legacy/user/settings
    method: GET
    data_selector: settings
    params: {}
- name: guild_settings
  endpoint:
    path: /guild/settings
    method: GET
    data_selector: settings
    params: {}
- name: fetch_guilds
  endpoint:
    method: GET
- name: fetch_guild
  endpoint:
    method: GET
- name: create_guild
  endpoint:
    method: POST
- name: join_guild
  endpoint:
    method: POST
- name: leave_guild
  endpoint:
    method: POST
- name: fetch_invite
  endpoint:
    method: GET
- name: create_invite
  endpoint:
    method: POST
- name: accept_invite
  endpoint:
    method: POST
- name: delete_invite
  endpoint:
    method: DELETE
- name: activity_statistics
  endpoint:
    path: /applications/{application.id}/activity_statistics
    method: GET
- name: assets
  endpoint:
    path: /applications/{application.id}/assets
    method: GET
- name: branches
  endpoint:
    path: /applications/{application.id}/branches
    method: GET
- name: create_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: POST
- name: create_branch
  endpoint:
    path: /applications/{application.id}/branches
    method: POST
- name: create_sku
  endpoint:
    path: /applications/{application.id}/skus
    method: POST
- name: edit
  endpoint:
    path: /applications/{application.id}
    method: PATCH
- name: fetch_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: GET
- name: publish_store_listing
  endpoint:
    path: /applications/{application.id}/store_listings
    method: POST
- name: store_asset
  endpoint:
    path: /uploads/store_asset
    method: POST
    data_selector: asset
    params: {}
- name: skus
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
    params:
      with_bundled_skus: true
      localize: true
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    data_selector: sku
    params:
      localize: true
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
    data_selector: sku
    params:
      localize: true
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
    params:
      limit: 100
- name: fetch_entitlement
  endpoint:
    path: /entitlements/{entitlement_id}
    method: GET
    data_selector: entitlement
    params: {}
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
    params: {}
- name: create_gift_batch
  endpoint:
    path: /gift_batches
    method: POST
    data_selector: gift_batch
    params: {}
- name: branches
  endpoint:
    path: /branches
    method: GET
    data_selector: branches
    params: {}
- name: create_branch
  endpoint:
    path: /branches
    method: POST
    data_selector: branch
    params: {}
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
    data_selector: manifest_labels
    params: {}
- name: fetch_discoverability
  endpoint:
    path: /discoverability
    method: GET
    data_selector: discoverability
    params: {}
- name: fetch_embedded_activity_config
  endpoint:
    path: /embedded_activity_config
    method: GET
    data_selector: embedded_activity_config
    params: {}
- name: edit_embedded_activity_config
  endpoint:
    path: /embedded_activity_config
    method: PATCH
    data_selector: embedded_activity_config
    params: {}
- name: create_application
  endpoint:
    path: /create_application
    method: POST
    data_selector: application
    params: {}
- name: create_team
  endpoint:
    path: /create_team
    method: POST
    data_selector: team
    params: {}
- name: search_companies
  endpoint:
    path: /search_companies
    method: GET
    data_selector: companies
    params: {}
- name: fetch_company
  endpoint:
    path: /fetch_company/{company_id}
    method: GET
    data_selector: company
    params: {}
- name: activity_statistics
  endpoint:
    path: /activity_statistics
    method: GET
    data_selector: statistics
    params: {}
- name: global_activity_statistics
  endpoint:
    path: /global_activity_statistics
    method: GET
    data_selector: global_statistics
    params: {}
- name: payment_sources
  endpoint:
    path: /payment_sources
    method: GET
    data_selector: payment_sources
    params: {}
- name: fetch_payment_source
  endpoint:
    path: /fetch_payment_source/{source_id}
    method: GET
    data_selector: payment_source
    params: {}
- name: create_payment_source
  endpoint:
    path: /create_payment_source
    method: POST
    data_selector: payment_source
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: premium_guild_subscriptions
  endpoint:
    path: /premium_guild_subscriptions
    method: GET
    data_selector: premium_guild_subscriptions
    params: {}
- name: premium_guild_subscription_slots
  endpoint:
    path: /premium_guild_subscription_slots
    method: GET
    data_selector: subscription_slots
    params: {}
- name: premium_guild_subscription_cooldown
  endpoint:
    path: /premium_guild_subscription_cooldown
    method: GET
    data_selector: subscription_cooldown
    params: {}
- name: fetch_subscription
  endpoint:
    path: /fetch_subscription/{subscription_id}
    method: GET
    data_selector: subscription
    params: {}
- name: create_subscription
  endpoint:
    path: /create_subscription
    method: POST
    data_selector: subscription
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
    params: {}
- name: fetch_payment
  endpoint:
    path: /fetch_payment/{payment_id}
    method: GET
    data_selector: payment
    params: {}
- name: promotions
  endpoint:
    path: /promotions
    method: GET
    data_selector: promotions
    params: {}
- name: application_commands
  endpoint:
    path: /application/commands
    method: GET
- name: fetch_mutual_friends
  endpoint:
    path: /users/{user_id}/friends
    method: GET
- name: fetch_note
  endpoint:
    path: /users/{user_id}/note
    method: GET
- name: application_activity_statistics
  endpoint:
    path: /application/activity/statistics
    method: GET
    data_selector: statistics
    params: {}
- name: application_tester
  endpoint:
    path: /application/tester
    method: GET
    data_selector: testers
    params: {}
- name: embedded_activity_config
  endpoint:
    path: /embedded/activity/config
    method: GET
    data_selector: config
    params: {}
- name: detectable_application
  endpoint:
    path: /detectable/application
    method: GET
    data_selector: applications
    params: {}
- name: unverified_application
  endpoint:
    path: /unverified/application
    method: GET
    data_selector: unverified_apps
    params: {}
- name: application_branch
  endpoint:
    path: /application/branch
    method: GET
    data_selector: branches
    params: {}
- name: promotions
  endpoint:
    path: /promotions
    method: GET
    data_selector: promotions
    params: {}
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: user_offer
    params:
      payment_gateway: null
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: trial_offer
    params: {}
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: pricing_promotion
    params: {}
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: library
    params: {}
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: authorizations
    params: {}
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
    params:
      with_sku: true
      with_application: true
      include_ended: true
      entitlement_type: null
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
    data_selector: giftable_entitlements
    params: {}
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
    data_selector: premium_entitlements
    params:
      include_consumed: true
- name: fetch_entitlements
  endpoint:
    path: /fetch_entitlements
    method: GET
    data_selector: entitlements
    params:
      application_id: null
      include_consumed: true
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
    data_selector: gift
    params:
      code: null
      with_application: false
      with_subscription_plan: true
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
    data_selector: sku
    params:
      sku_id: null
      localize: true
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
    data_selector: store_listing
    params:
      listing_id: null
      localize: true
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
    data_selector: store_listing
    params:
      sku_id: null
      localize: true
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
    data_selector: store_listings
    params:
      application_id: null
      localize: true
- name: ApplicationBranch
  endpoint:
    path: /discord/ApplicationBranch
    method: GET
- name: ApplicationBuild
  endpoint:
    path: /discord/ApplicationBuild
    method: GET
- name: ManifestLabel
  endpoint:
    path: /discord/ManifestLabel
    method: GET
- name: Manifest
  endpoint:
    path: /discord/Manifest
    method: GET
- name: Team
  endpoint:
    path: /discord/Team
    method: GET
- name: voice_client
  endpoint:
    path: /voice/connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 30.0
      reconnect: true
      cls: VoiceClient
      self_mute: false
      self_deaf: false
- name: dm_channel
  endpoint:
    path: /dm/create
    method: POST
    data_selector: dm_channel
    params: {}
- name: message_history
  endpoint:
    path: /messages/history
    method: GET
    data_selector: message_history
    params:
      limit: 100
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: voice
  endpoint:
    path: /voice
    method: GET
    data_selector: voice_state
    params: {}
- name: gift
  endpoint:
    path: /discord/gift
    method: GET
    data_selector: gifts
    params: {}
- name: gift_batch
  endpoint:
    path: /discord/gift_batch
    method: GET
    data_selector: gift_batches
    params: {}
- name: library_application
  endpoint:
    path: /discord/library_application
    method: GET
    data_selector: library_applications
    params: {}
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
    params:
      application_id: int
      localize: bool
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
    params:
      application_ids: int
      localize: bool
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: subscription_plans
    params:
      sku_id: int
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: subscription_plans
    params:
      sku_ids: int
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: eula
    params:
      eula_id: int
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
    params:
      branch_ids: int
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier
    params:
      price_tier: int
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: recent_mentions
    params:
      limit: int
      before: Union[Snowflake, datetime]
      guild: Guild
      roles: bool
      everyone: bool
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: delete_mention
    params:
      message: abc.Snowflake
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhook_id
    params:
      application: Application
      channel: TextChannel
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: leave_program
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: unverified_application
    params:
      name: str
      icon: File
      os: OperatingSystem
      executable: str
      publisher: str
      distributor: Distributor
      sku: str
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
    params:
      with_guild_experiments: bool
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: SubscriptionTrial
  endpoint:
    path: /discord/SubscriptionTrial
    method: GET
    data_selector: trial
- name: PremiumGuildSubscription
  endpoint:
    path: /discord/PremiumGuildSubscription
    method: GET
    data_selector: premium_guild_subscription
- name: PremiumGuildSubscriptionSlot
  endpoint:
    path: /discord/PremiumGuildSubscriptionSlot
    method: GET
    data_selector: premium_guild_subscription_slot
- name: SubscriptionPlan
  endpoint:
    path: /discord/SubscriptionPlan
    method: GET
    data_selector: subscription_plan
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
    data_selector: userExperiment
    params: {}
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
    data_selector: Guild
    params: {}
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
    data_selector: Guild
    params: {}
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
    data_selector: username
    params: {}
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
    data_selector: isTaken
    params: {}
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
    data_selector: RecentAvatar
    params: {}
- name: subscription_plan_prices
  endpoint:
    path: /subscriptionPlanPrices
    method: GET
    data_selector: country_prices
- name: payment
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
- name: sku
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
- name: sku
  endpoint:
    path: /discord/sku
    method: GET
    data_selector: records
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: listings
    params: {}
- name: ReadState
  endpoint:
    path: /api/readstate
    method: GET
    data_selector: read_states
- name: Asset
  endpoint:
    path: /api/asset
    method: GET
    data_selector: assets
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: bans
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: ban_entries
    params:
      limit: 1000
- name: guild_settings_update
  endpoint:
    path: /guilds/settings/update
    method: POST
- name: payment_sources_update
  endpoint:
    path: /payment/sources/update
    method: POST
- name: subscriptions_update
  endpoint:
    path: /subscriptions/update
    method: POST
- name: payment_client_add
  endpoint:
    path: /payment/client/add
    method: POST
- name: premium_guild_subscription_slot_create
  endpoint:
    path: /premium/guild/subscription/slot/create
    method: POST
- name: premium_guild_subscription_slot_update
  endpoint:
    path: /premium/guild/subscription/slot/update
    method: POST
- name: billing_popup_bridge_callback
  endpoint:
    path: /billing/popup/bridge/callback
    method: POST
- name: library_application_update
  endpoint:
    path: /library/application/update
    method: POST
- name: entitlement_create
  endpoint:
    path: /entitlement/create
    method: POST
- name: entitlement_update
  endpoint:
    path: /entitlement/update
    method: POST
- name: entitlement_delete
  endpoint:
    path: /entitlement/delete
    method: POST
- name: gift_create
  endpoint:
    path: /gift/create
    method: POST
- name: gift_update
  endpoint:
    path: /gift/update
    method: POST
- name: connections_update
  endpoint:
    path: /connections/update
    method: POST
- name: connection_create
  endpoint:
    path: /connection/create
    method: POST
- name: connection_update
  endpoint:
    path: /connection/update
    method: POST
- name: relationship_add
  endpoint:
    path: /relationship/add
    method: POST
- name: relationship_remove
  endpoint:
    path: /relationship/remove
    method: POST
- name: relationship_update
  endpoint:
    path: /relationship/update
    method: POST
- name: note_update
  endpoint:
    path: /note/update
    method: POST
- name: raw_note_update
  endpoint:
    path: /raw/note/update
    method: POST
- name: oauth2_token_revoke
  endpoint:
    path: /oauth2/token/revoke
    method: POST
- name: call_create
  endpoint:
    path: /call/create
    method: POST
- name: call_delete
  endpoint:
    path: /call/delete
    method: POST
- name: call_update
  endpoint:
    path: /call/update
    method: POST
- name: guild_available
  endpoint:
    path: /guild/available
    method: POST
- name: guild_unavailable
  endpoint:
    path: /guild/unavailable
    method: POST
- name: guild_join
  endpoint:
    path: /guild/join
    method: POST
- name: guild_remove
  endpoint:
    path: /guild/remove
    method: POST
- name: guild_update
  endpoint:
    path: /guild/update
    method: POST
- name: guild_emojis_update
  endpoint:
    path: /guild/emojis/update
    method: POST
- name: guild_stickers_update
  endpoint:
    path: /guild/stickers/update
    method: POST
- name: application_command_index_update
  endpoint:
    path: /application/command/index/update
    method: POST
- name: audit_log_entry_create
  endpoint:
    path: /audit/log/entry/create
    method: POST
- name: search_messages
  endpoint:
    path: /guilds/{guild.id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: prune_members
  endpoint:
    path: /guilds/{guild.id}/prune
    method: POST
    data_selector: pruned_count
    params:
      days: 7
      compute_prune_count: true
- name: templates
  endpoint:
    path: /guilds/{guild.id}/templates
    method: GET
    data_selector: templates
    params: {}
- name: webhooks
  endpoint:
    path: /guilds/{guild.id}/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: invites
  endpoint:
    path: /guilds/{guild.id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: create_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: POST
    data_selector: sticker
- name: delete_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers/{sticker_id}
    method: DELETE
    data_selector: sticker
- name: subscribed_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events/subscribed
    method: GET
    data_selector: scheduled_events
- name: fetch_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: GET
    data_selector: scheduled_events
- name: fetch_scheduled_event
  endpoint:
    path: /guilds/{guild_id}/scheduled-events/{scheduled_event_id}
    method: GET
    data_selector: scheduled_event
- name: create_scheduled_event
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: POST
    data_selector: scheduled_event
- name: top_emojis
  endpoint:
    path: /guilds/{guild_id}/emojis/top
    method: GET
    data_selector: emojis
- name: fetch_emojis
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: GET
    data_selector: emojis
- name: fetch_emoji
  endpoint:
    path: /guilds/{guild_id}/emojis/{emoji_id}
    method: GET
    data_selector: emoji
- name: create_custom_emoji
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: POST
    data_selector: emoji
- name: delete_emoji
  endpoint:
    path: /guilds/{guild_id}/emojis/{emoji_id}
    method: DELETE
    data_selector: emoji
- name: fetch_roles
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
- name: fetch_role
  endpoint:
    path: /guilds/{guild_id}/roles/{role_id}
    method: GET
    data_selector: role
- name: create_role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: POST
    data_selector: role
- name: invite_create
  endpoint:
    path: /invite/create
    method: POST
- name: invite_delete
  endpoint:
    path: /invite/delete
    method: DELETE
- name: guild_feature_ack
  endpoint:
    path: /guild/feature/ack
    method: POST
- name: integration_create
  endpoint:
    path: /integration/create
    method: POST
- name: integration_update
  endpoint:
    path: /integration/update
    method: PUT
- name: guild_integrations_update
  endpoint:
    path: /guild/integrations/update
    method: POST
- name: webhooks_update
  endpoint:
    path: /webhooks/update
    method: POST
- name: raw_integration_delete
  endpoint:
    path: /integration/raw/delete
    method: DELETE
- name: interaction
  endpoint:
    path: /interaction
    method: POST
- name: interaction_finish
  endpoint:
    path: /interaction/finish
    method: POST
- name: modal
  endpoint:
    path: /modal
    method: POST
- name: member_join
  endpoint:
    path: /member/join
    method: POST
- name: member_remove
  endpoint:
    path: /member/remove
    method: DELETE
- name: raw_member_remove
  endpoint:
    path: /member/raw/remove
    method: DELETE
- name: member_update
  endpoint:
    path: /member/update
    method: PATCH
- name: user_update
  endpoint:
    path: /user/update
    method: PATCH
- name: member_ban
  endpoint:
    path: /guild/ban
    method: PUT
- name: member_unban
  endpoint:
    path: /guild/unban
    method: DELETE
- name: presence_update
  endpoint:
    path: /presence/update
    method: PATCH
- name: raw_member_list_update
  endpoint:
    path: /member/raw/list/update
    method: PATCH
- name: message
  endpoint:
    path: /message
    method: POST
- name: message_edit
  endpoint:
    path: /message/edit
    method: PATCH
- name: message_delete
  endpoint:
    path: /message/delete
    method: DELETE
- name: bulk_message_delete
  endpoint:
    path: /message/bulk/delete
    method: DELETE
- name: message_ack
  endpoint:
    path: /message/ack
    method: POST
- name: raw_message_edit
  endpoint:
    path: /message/raw/edit
    method: PATCH
- name: raw_message_delete
  endpoint:
    path: /message/raw/delete
    method: DELETE
- name: raw_bulk_message_delete
  endpoint:
    path: /message/raw/bulk/delete
    method: DELETE
- name: raw_message_ack
  endpoint:
    path: /message/raw/ack
    method: POST
- name: recent_mention_delete
  endpoint:
    path: /mention/recent/delete
    method: DELETE
- name: raw_recent_mention_delete
  endpoint:
    path: /mention/raw/recent/delete
    method: DELETE
- name: poll_vote_add
  endpoint:
    path: /poll/vote/add
    method: POST
- name: poll_vote_remove
  endpoint:
    path: /poll/vote/remove
    method: DELETE
- name: raw_poll_vote_add
  endpoint:
    path: /poll/raw/vote/add
    method: POST
- name: raw_poll_vote_remove
  endpoint:
    path: /poll/raw/vote/remove
    method: DELETE
- name: welcome_screen
  endpoint:
    path: /guilds/{guild_id}/welcome-screen
    method: PATCH
    data_selector: welcome_screen
    params: {}
- name: applications
  endpoint:
    path: /guilds/{guild_id}/applications
    method: GET
    data_selector: applications
    params: {}
- name: premium_subscriptions
  endpoint:
    path: /guilds/{guild_id}/premium-subscriptions
    method: GET
    data_selector: premium_subscriptions
    params: {}
- name: price_tiers
  endpoint:
    path: /guilds/{guild_id}/price-tiers
    method: GET
    data_selector: price_tiers
    params: {}
- name: reaction_add
  endpoint:
    path: /reaction/add
    method: POST
    data_selector: payload
- name: reaction_remove
  endpoint:
    path: /reaction/remove
    method: POST
    data_selector: payload
- name: reaction_clear
  endpoint:
    path: /reaction/clear
    method: POST
    data_selector: payload
- name: reaction_clear_emoji
  endpoint:
    path: /reaction/clear_emoji
    method: POST
    data_selector: payload
- name: raw_reaction_add
  endpoint:
    path: /raw/reaction/add
    method: POST
    data_selector: payload
- name: raw_reaction_remove
  endpoint:
    path: /raw/reaction/remove
    method: POST
    data_selector: payload
- name: raw_reaction_clear
  endpoint:
    path: /raw/reaction/clear
    method: POST
    data_selector: payload
- name: raw_reaction_clear_emoji
  endpoint:
    path: /raw/reaction/clear_emoji
    method: POST
    data_selector: payload
- name: automod_rules
  endpoint:
    path: /guild/{guild_id}/automod/rules
    method: GET
    data_selector: automod_rules
- name: fetch_automod_rule
  endpoint:
    path: /guild/{guild_id}/automod/rules/{automod_rule_id}
    method: GET
    data_selector: automod_rule
- name: create_automod_rule
  endpoint:
    path: /guild/{guild_id}/automod/rules
    method: POST
    data_selector: automod_rule
- name: admin_community_eligibility
  endpoint:
    path: /guild/{guild_id}/admin/community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /guild/{guild_id}/admin/community/join
    method: POST
    data_selector: community
- name: migrate_command_scope
  endpoint:
    path: /guild/{guild_id}/migrate/command/scope
    method: POST
    data_selector: integration_ids
- name: audit_log
  endpoint:
    path: /api/v9/audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: ban_entry
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: bans
    params: {}
- name: bulk_ban_result
  endpoint:
    path: /guilds/{guild_id}/bans/bulk
    method: POST
    data_selector: result
    params: {}
- name: audit_log_diff
  endpoint:
    path: /audit-log/diff
    method: GET
    data_selector: changes
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
- name: member
  endpoint:
    path: /discord/members
    method: GET
    data_selector: members
    params: {}
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
    data_selector: mutual_friends
- name: fetch_note
  endpoint:
    path: /fetch_note
    method: GET
    data_selector: note
- name: delete_note
  endpoint:
    path: /delete_note
    method: DELETE
    data_selector: delete_note
- name: SyncWebhook
  endpoint:
    path: /webhooks/{channel_id}/{webhook_id}
    method: POST
    data_selector: webhook
    params: {}
- name: members
  endpoint:
    path: /guilds/{guild_id}/members
    method: GET
    data_selector: members
- name: sync_webhook
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}
    method: POST
    data_selector: ''
    params: {}
- name: pinned_messages
  endpoint:
    path: /messages/pinned
    method: GET
    data_selector: messages
- name: member_profile
  endpoint:
    path: /members/profile
    method: GET
    data_selector: profile
- name: search_messages
  endpoint:
    path: /messages/search
    method: GET
    data_selector: messages
- name: send_message
  endpoint:
    path: /messages/send
    method: POST
    data_selector: message
- name: unacknowledge_messages
  endpoint:
    path: /messages/unack
    method: POST
    data_selector: unacknowledged
- name: upload_files
  endpoint:
    path: /files/upload
    method: POST
    data_selector: uploaded_files
- name: guild_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: member_profile
  endpoint:
    path: /discord/member/profile
    method: GET
    data_selector: profile
    params: {}
- name: ApplicationCommand
  endpoint:
    path: /application/commands
    method: GET
- name: ClientUser
  endpoint:
    path: /users/@me
    method: GET
- name: user
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
- name: fetch_message
  endpoint:
    path: /fetch_message/:id
    method: GET
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
- name: fetch_note
  endpoint:
    path: /fetch_note
    method: GET
- name: pins
  endpoint:
    path: /pins
    method: GET
- name: history
  endpoint:
    path: /history
    method: GET
    params:
      limit: 100
- name: search
  endpoint:
    path: /search
    method: GET
    params:
      limit: 25
      offset: 0
- name: user_profile
  endpoint:
    path: /user/profile
    method: GET
    data_selector: profile
- name: guild_avatar_decoration
  endpoint:
    path: /guild_avatar_decoration
    method: GET
    data_selector: Asset
- name: guild_avatar_decoration_expires_at
  endpoint:
    path: /guild_avatar_decoration_expires_at
    method: GET
    data_selector: datetime.datetime
- name: guild_avatar_decoration_sku_id
  endpoint:
    path: /guild_avatar_decoration_sku_id
    method: GET
    data_selector: int
- name: guild_banner
  endpoint:
    path: /guild_banner
    method: GET
    data_selector: Asset
- name: guild_permissions
  endpoint:
    path: /guild_permissions
    method: GET
    data_selector: Permissions
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: Message
    params:
      limit: 100
- name: id
  endpoint:
    path: /id
    method: GET
    data_selector: User.id
- name: is_blocked
  endpoint:
    path: /is_blocked
    method: GET
    data_selector: bool
- name: is_blocker
  endpoint:
    path: /is_blocker
    method: GET
    data_selector: bool
- name: is_friend
  endpoint:
    path: /is_friend
    method: GET
    data_selector: bool
- name: is_on_mobile
  endpoint:
    path: /is_on_mobile
    method: GET
    data_selector: bool
- name: is_pomelo
  endpoint:
    path: /is_pomelo
    method: GET
    data_selector: bool
- name: is_timed_out
  endpoint:
    path: /is_timed_out
    method: GET
    data_selector: bool
- name: mention
  endpoint:
    path: /mention
    method: GET
    data_selector: str
- name: mobile_status
  endpoint:
    path: /mobile_status
    method: GET
    data_selector: Status
- name: mutual_friends_count
  endpoint:
    path: /mutual_friends_count
    method: GET
    data_selector: int
- name: name
  endpoint:
    path: /name
    method: GET
    data_selector: User.name
- name: premium
  endpoint:
    path: /premium
    method: GET
    data_selector: bool
- name: profile
  endpoint:
    path: /profile
    method: GET
    data_selector: MemberProfile
- name: public_flags
  endpoint:
    path: /public_flags
    method: GET
    data_selector: User.public_flags
- name: raw_status
  endpoint:
    path: /raw_status
    method: GET
    data_selector: str
- name: relationship
  endpoint:
    path: /relationship
    method: GET
    data_selector: User.relationship
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: list[Role]
- name: channel_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: '200'
- name: channel_search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: '25'
- name: PartialEmoji
  endpoint:
    path: /discord/PartialEmoji
    method: GET
    data_selector: assets
    params: {}
- name: Sticker
  endpoint:
    path: /discord/Sticker
    method: GET
    data_selector: assets
    params: {}
- name: message
  endpoint:
    path: /messages
    method: POST
    data_selector: message
    params: {}
- name: friend_request
  endpoint:
    path: /friend-requests
    method: POST
    data_selector: request
    params: {}
- name: slash_commands
  endpoint:
    path: /slash-commands
    method: GET
    data_selector: commands
    params: {}
- name: user_commands
  endpoint:
    path: /user-commands
    method: GET
    data_selector: commands
    params: {}
- name: forums
  endpoint:
    path: /forums
    method: GET
- name: directory_channels
  endpoint:
    path: /directory_channels
    method: GET
- name: directories
  endpoint:
    path: /directories
    method: GET
- name: create_text_channel
  endpoint:
    path: /create_text_channel
    method: POST
- name: create_voice_channel
  endpoint:
    path: /create_voice_channel
    method: POST
- name: create_stage_channel
  endpoint:
    path: /create_stage_channel
    method: POST
- name: create_directory
  endpoint:
    path: /create_directory
    method: POST
- name: create_directory_channel
  endpoint:
    path: /create_directory_channel
    method: POST
- name: create_forum
  endpoint:
    path: /create_forum
    method: POST
- name: create_forum_channel
  endpoint:
    path: /create_forum_channel
    method: POST
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
- name: text_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: channel
- name: PrimaryGuild
  endpoint:
    path: /guilds/{guild_id}
    method: GET
    data_selector: guild
    params: {}
- name: UserAffinity
  endpoint:
    path: /users/{user_id}/affinities
    method: GET
    data_selector: affinities
    params: {}
- name: GuildAffinity
  endpoint:
    path: /guilds/{guild_id}/affinities
    method: GET
    data_selector: affinities
    params: {}
- name: ChannelAffinity
  endpoint:
    path: /channels/{channel_id}/affinities
    method: GET
    data_selector: affinities
    params: {}
- name: BillingAddress
  endpoint:
    path: /billing/address
    method: GET
    data_selector: address
    params: {}
- name: PaymentSource
  endpoint:
    path: /billing/payment-sources
    method: GET
    data_selector: payment_sources
    params: {}
- name: PremiumUsage
  endpoint:
    path: /users/{user_id}/premium-usage
    method: GET
    data_selector: premium_usage
    params: {}
- name: user_settings
  endpoint:
    path: /user/settings
    method: GET
    data_selector: settings
- name: legacy_user_settings
  endpoint:
    path: /user/legacy_settings
    method: GET
    data_selector: settings
- name: voice_channel
  endpoint:
    path: /voice_channel
    method: GET
    data_selector: voice_channels
    params: {}
- name: legacy_user_settings
  endpoint:
    path: /discord/legacy_user_settings
    method: GET
    data_selector: settings
    params: {}
- name: guild_settings
  endpoint:
    path: /discord/guild_settings
    method: GET
    data_selector: guild_settings
    params: {}
- name: channel_settings
  endpoint:
    path: /discord/channel_settings
    method: GET
    data_selector: channel_settings
    params: {}
- name: channel_create
  endpoint:
    path: /channels/create
    method: POST
    data_selector: channel
    params: {}
- name: channel_edit
  endpoint:
    path: /channels/edit
    method: PATCH
    data_selector: channel
    params: {}
- name: channel_delete
  endpoint:
    path: /channels/delete
    method: DELETE
    data_selector: channel
    params: {}
- name: TrackingSettings
  endpoint:
    path: /tracking/settings
    method: GET
    data_selector: settings
- name: EmailSettings
  endpoint:
    path: /email/settings
    method: GET
    data_selector: settings
- name: GuildFolder
  endpoint:
    path: /guild/folder
    method: GET
    data_selector: folders
- name: GuildProgress
  endpoint:
    path: /guild/progress
    method: GET
    data_selector: progress
- name: AudioContext
  endpoint:
    path: /audio/context
    method: GET
    data_selector: audio
- name: MuteConfig
  endpoint:
    path: /mute/config
    method: GET
    data_selector: mute
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: Message
- name: partial_message
  endpoint:
    path: /messages/{message_id}/partial
    method: POST
    data_selector: PartialMessage
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: Invite
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: Message
- name: purge
  endpoint:
    path: /channels/{channel_id}/messages/bulk-delete
    method: POST
    data_selector: Message
- name: application_info
  endpoint:
    path: /applications/{application.id}
    method: GET
    data_selector: data
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      most_relevant: false
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /channels/{channel_id}/permissions/{overwrite_id}
    method: PUT
    data_selector: permissions
    params: {}
- name: voice_states
  endpoint:
    path: /voice_states
    method: GET
    data_selector: voice_states
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: store_asset
  endpoint:
    path: /uploads/store_asset
    method: POST
- name: skus
  endpoint:
    path: /skus
    method: GET
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
- name: create_sku
  endpoint:
    path: /create_sku
    method: POST
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
- name: fetch_entitlement
  endpoint:
    path: /fetch_entitlement
    method: GET
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
- name: create_gift_batch
  endpoint:
    path: /create_gift_batch
    method: POST
- name: branches
  endpoint:
    path: /branches
    method: GET
- name: create_branch
  endpoint:
    path: /create_branch
    method: POST
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
- name: fetch_discoverability
  endpoint:
    path: /fetch_discoverability
    method: GET
- name: fetch_embedded_activity_config
  endpoint:
    path: /fetch_embedded_activity_config
    method: GET
- name: edit_embedded_activity_config
  endpoint:
    path: /edit_embedded_activity_config
    method: POST
- name: read_state
  endpoint:
    path: /read_state
    method: GET
    data_selector: read_state
- name: scheduled_events
  endpoint:
    path: /scheduled_events
    method: GET
    data_selector: scheduled_events
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: commands
- name: directory_channel
  endpoint:
    path: /directory/channels
    method: GET
    data_selector: entries
    params: {}
- name: application_profile
  endpoint:
    path: /applications/@me
    method: GET
    data_selector: data
    params: {}
- name: archived_threads
  endpoint:
    path: /channels/{channel_id}/threads/archived
    method: GET
- name: create_invite
  endpoint:
    path: /channels/{channel_id}/invites
    method: POST
- name: create_thread
  endpoint:
    path: /channels/{channel_id}/threads
    method: POST
- name: edit
  endpoint:
    path: /channels/{channel_id}
    method: PATCH
- name: get_thread
  endpoint:
    path: /channels/{channel_id}/threads/{thread_id}
    method: GET
- name: ApplicationActivityStatistics
  endpoint:
    path: /application/activity/statistics
    method: GET
    data_selector: records
- name: ApplicationTester
  endpoint:
    path: /application/tester
    method: GET
    data_selector: records
- name: EmbeddedActivityConfig
  endpoint:
    path: /embedded/activity/config
    method: GET
    data_selector: records
- name: DetectableApplication
  endpoint:
    path: /detectable/application
    method: GET
    data_selector: records
- name: UnverifiedApplication
  endpoint:
    path: /unverified/application
    method: GET
    data_selector: records
- name: ApplicationBranch
  endpoint:
    path: /application/branch
    method: GET
    data_selector: records
- name: permissions_synced
  endpoint:
    path: /permissions_synced
    method: GET
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
- name: PrivateChannel
  endpoint:
    path: /PrivateChannel
    method: GET
- name: ApplicationBranch
  endpoint:
    path: /discord/ApplicationBranch
    method: GET
- name: ApplicationBuild
  endpoint:
    path: /discord/ApplicationBuild
    method: GET
- name: ManifestLabel
  endpoint:
    path: /discord/ManifestLabel
    method: GET
- name: Manifest
  endpoint:
    path: /discord/Manifest
    method: GET
- name: Team
  endpoint:
    path: /discord/Team
    method: GET
- name: message_request
  endpoint:
    path: /dm_channel/message_request
    method: GET
    data_selector: records
- name: dm_channel
  endpoint:
    path: /dm_channel
    method: GET
    data_selector: records
- name: team
  endpoint:
    path: /v1/teams
    method: GET
    data_selector: teams
- name: message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: files
    params: {}
- name: group_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: data
    params: {}
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params: {}
- name: team_payout
  endpoint:
    path: /team/payouts
    method: GET
    data_selector: payouts
    params: {}
- name: company
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params: {}
- name: eula
  endpoint:
    path: /eulas
    method: GET
    data_selector: eulas
    params: {}
- name: entitlement
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
    params: {}
- name: create_invite
  endpoint:
    path: /channels/{channel.id}/invites
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /channels/{channel.id}/connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
      cls: VoiceClient
      ring: true
- name: ack
  endpoint:
    path: /channels/{channel.id}/ack
    method: POST
    data_selector: null
    params: {}
- name: fetch_message
  endpoint:
    path: /channels/{channel.id}/messages/{id}
    method: GET
    data_selector: message
    params: {}
- name: history
  endpoint:
    path: /channels/{channel.id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /channels/{channel.id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: search
  endpoint:
    path: /channels/{channel.id}/messages/search
    method: GET
    data_selector: search_results
    params:
      limit: 25
      offset: 0
- name: gift
  endpoint:
    path: /discord/gift
    method: GET
- name: PremiumGuildSubscription
  endpoint:
    path: /premium_guild_subscriptions
    method: GET
- name: PremiumGuildSubscriptionSlot
  endpoint:
    path: /premium_guild_subscription_slots
    method: GET
- name: SubscriptionPlan
  endpoint:
    path: /subscription_plans
    method: GET
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: messages
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
- name: send
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: slash_commands
  endpoint:
    path: /applications/{application_id}/guilds/{guild_id}/commands
    method: GET
    data_selector: commands
- name: SKU
  endpoint:
    path: /discord/SKU
    method: GET
    data_selector: records
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: /slash/commands
    method: GET
    data_selector: commands
    params: {}
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: records
- name: sku
  endpoint:
    path: /sku
    method: GET
    data_selector: records
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: listings
- name: Metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: items
- name: ReadState
  endpoint:
    path: /readstate
    method: GET
    data_selector: items
- name: Asset
  endpoint:
    path: /asset
    method: GET
    data_selector: items
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: member
  endpoint:
    path: /guilds/{guild_id}/members
    method: GET
    data_selector: members
- name: message
  endpoint:
    path: /discord/api/message
    method: GET
    data_selector: records
- name: create_directory_channel
  endpoint:
    path: /create_directory_channel
    method: POST
    data_selector: channel
- name: create_forum
  endpoint:
    path: /create_forum
    method: POST
    data_selector: forum
- name: leave_guild
  endpoint:
    path: /leave
    method: POST
    data_selector: guild
- name: delete_guild
  endpoint:
    path: /delete
    method: DELETE
    data_selector: guild
- name: edit_guild
  endpoint:
    path: /edit
    method: PATCH
    data_selector: guild
- name: attachment
  endpoint:
    path: /attachments
    method: GET
    data_selector: attachments
- name: message_reference
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
- name: message_snapshot
  endpoint:
    path: /message_snapshots
    method: GET
    data_selector: snapshots
- name: role_subscription_info
  endpoint:
    path: /role_subscriptions
    method: GET
    data_selector: subscriptions
- name: purchase_notification
  endpoint:
    path: /purchase_notifications
    method: GET
    data_selector: notifications
- name: guild_product_purchase
  endpoint:
    path: /guild_product_purchases
    method: GET
    data_selector: purchases
- name: create_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: POST
    data_selector: sticker
- name: delete_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers/{sticker_id}
    method: DELETE
    data_selector: sticker
- name: fetch_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: GET
    data_selector: events
- name: create_scheduled_event
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: POST
    data_selector: event
- name: top_emojis
  endpoint:
    path: /guilds/{guild_id}/emojis/top
    method: GET
    data_selector: emojis
- name: fetch_emojis
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: GET
    data_selector: emojis
- name: fetch_roles
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
- name: create_role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: POST
    data_selector: role
- name: audit_logs
  endpoint:
    path: /guilds/{guild_id}/audit-logs
    method: GET
    data_selector: entries
    params:
      limit: 100
- name: activity_statistics
  endpoint:
    path: /applications/{application.id}/activity/statistics
    method: GET
    data_selector: activity_statistics
- name: create_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: POST
    data_selector: bot
- name: welcome_screen
  endpoint:
    path: /guilds/{guild_id}/welcome-screen
    method: GET
    data_selector: welcome_screen
- name: applications
  endpoint:
    path: /guilds/{guild_id}/applications
    method: GET
    data_selector: applications
- name: premium_subscriptions
  endpoint:
    path: /guilds/{guild_id}/premium-subscriptions
    method: GET
    data_selector: premium_subscriptions
- name: entitlements
  endpoint:
    path: /guilds/{guild_id}/entitlements
    method: GET
    data_selector: entitlements
- name: price_tiers
  endpoint:
    path: /guilds/{guild_id}/price-tiers
    method: GET
    data_selector: price_tiers
- name: members
  endpoint:
    path: /guilds/{guild_id}/members
    method: GET
    data_selector: members
- name: whitelist_user
  endpoint:
    path: /whitelist
    method: POST
    data_selector: user
    params: {}
- name: create_asset
  endpoint:
    path: /assets
    method: POST
    data_selector: asset
    params: {}
- name: store_assets
  endpoint:
    path: /store/assets
    method: GET
    data_selector: assets
    params: {}
- name: create_store_asset
  endpoint:
    path: /store/assets
    method: POST
    data_selector: store_asset
    params: {}
- name: skus
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
    params:
      with_bundled_skus: true
      localize: true
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    data_selector: sku
    params:
      localize: true
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
    data_selector: sku
    params:
      localize: true
- name: create_sku
  endpoint:
    path: /skus
    method: POST
    data_selector: sku
    params: {}
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
    params:
      limit: 100
- name: automod_rules
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: automod_rules
- name: fetch_automod_rule
  endpoint:
    path: /automod/rules/{automod_rule_id}
    method: GET
    data_selector: automod_rule
- name: create_automod_rule
  endpoint:
    path: /automod/rules
    method: POST
    data_selector: automod_rule
- name: admin_community_eligibility
  endpoint:
    path: /admin/community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /admin/community/join
    method: POST
    data_selector: guild
- name: migrate_command_scope
  endpoint:
    path: /command/scope/migrate
    method: POST
    data_selector: integration_ids
- name: directory_broadcast_eligibility
  endpoint:
    path: /directory/broadcast/eligibility
    method: GET
    data_selector: broadcast_eligibility
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
- name: branches
  endpoint:
    path: /branches
    method: GET
    data_selector: branches
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
- name: activity_statistics
  endpoint:
    path: /activity_statistics
    method: GET
    data_selector: activity_statistics
- name: store_listings
  endpoint:
    path: /store_listings
    method: GET
    data_selector: store_listings
- name: ban_entry
  endpoint:
    path: /bans
    method: GET
    data_selector: bans
    params: {}
- name: bulk_ban_result
  endpoint:
    path: /bulk_ban
    method: POST
    data_selector: bulkBanResult
    params: {}
- name: role
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
    params: {}
- name: partial_application
  endpoint:
    path: /applications/{application.id}
    method: GET
    data_selector: data
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
    params: {}
- name: send_message
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: friend_request
  endpoint:
    path: /friend_request
    method: POST
    data_selector: request
    params: {}
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: commands
    params: {}
- name: AutoModRule
  endpoint:
    path: /auto-mod/rules
    method: POST
    data_selector: rule
- name: member
  endpoint:
    path: /guilds/{guild.id}/members/{user.id}
    method: GET
    data_selector: member
    params: {}
- name: invite
  endpoint:
    path: /invites/{code}
    method: GET
    data_selector: invite_data
- name: invite
  endpoint:
    path: /invites/{code}
    method: GET
    data_selector: invite
    params: {}
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
    data_selector: mutual_friends
- name: fetch_note
  endpoint:
    path: /fetch_note
    method: GET
    data_selector: note
- name: delete_note
  endpoint:
    path: /delete_note
    method: DELETE
- name: connect
  endpoint:
    path: /connect
    method: POST
- name: ban
  endpoint:
    path: /ban
    method: POST
- name: unban
  endpoint:
    path: /unban
    method: POST
- name: kick
  endpoint:
    path: /kick
    method: POST
- name: edit
  endpoint:
    path: /edit
    method: PATCH
- name: member
  endpoint:
    path: /members
    method: GET
    data_selector: records
- name: pinned_messages
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: messages
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: unacknowledge_messages
  endpoint:
    path: /channels/{channel_id}/messages/unack
    method: POST
    data_selector: unacknowledged
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages/files
    method: POST
    data_selector: uploaded_files
- name: member_profile
  endpoint:
    path: /api/v2/member/profile
    method: GET
    data_selector: data
    params: {}
- name: guilds
  endpoint:
    path: /users/@me/guilds
    method: GET
    data_selector: guilds
    params:
      with_counts: true
- name: invites
  endpoint:
    path: /users/@me/invites
    method: GET
    data_selector: invites
    params: {}
- name: member_profile
  endpoint:
    path: /users/@me
    method: GET
    data_selector: data
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
    data_selector: files
    params: {}
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: application
  endpoint:
    path: /applications
    method: POST
    data_selector: application
    params: {}
- name: team
  endpoint:
    path: /teams
    method: POST
    data_selector: team
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params: {}
- name: company
  endpoint:
    path: /companies/{company_id}
    method: GET
    data_selector: company
    params: {}
- name: activity_statistics
  endpoint:
    path: /activity/statistics
    method: GET
    data_selector: statistics
    params: {}
- name: payment_sources
  endpoint:
    path: /payment_sources
    method: GET
    data_selector: payment_sources
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
    params:
      limit: 100
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: UserOffer
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: TrialOffer
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: PricingPromotion
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: LibraryApplication
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: OAuth2Token
- name: PartialEmoji
  endpoint:
    path: /discord/PartialEmoji
    method: GET
    data_selector: attributes
- name: Sticker
  endpoint:
    path: /discord/Sticker
    method: GET
    data_selector: attributes
- name: StickerItem
  endpoint:
    path: /discord/StickerItem
    method: GET
    data_selector: attributes
- name: StickerPack
  endpoint:
    path: /discord/StickerPack
    method: GET
    data_selector: attributes
- name: StandardSticker
  endpoint:
    path: /discord/StandardSticker
    method: GET
    data_selector: attributes
- name: guild_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
    data_selector: stickers
- name: category_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: text_channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: channel
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: sku_subscription_plans
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: skus_subscription_plans
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: eula
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: mentions
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: delete_mention
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: join_program
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: leave_program
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: report_application
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
- name: archived_threads
  endpoint:
    path: /threads/archived
    method: GET
    data_selector: threads
    params:
      limit: None
      before: None
      private: 'false'
      joined: 'false'
- name: create_invite
  endpoint:
    path: /channels/{channel_id}/invites
    method: POST
    data_selector: invite
    params:
      max_age: 0
      max_uses: 0
      temporary: false
      unique: true
      guest: false
      application_bypass: false
      target_type: None
      target_user: None
      target_application: None
      reason: None
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
      before: None
      after: None
      around: None
      oldest_first: 'false'
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
    data_selector: response
    params: {}
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
    data_selector: hubs
    params: {}
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
    data_selector: hub
    params: {}
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
    data_selector: username
    params: {}
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
    data_selector: is_taken
    params: {}
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
    data_selector: avatars
    params: {}
- name: notification_settings
  endpoint:
    path: /notification_settings
    method: GET
    data_selector: settings
- name: overwrites
  endpoint:
    path: /overwrites
    method: GET
    data_selector: overwrites
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pinnedMessages
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: sentMessage
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissionsSet
- name: AudioSource
  endpoint:
    path: /discord/audiosource
    method: GET
    data_selector: audio_sources
    params: {}
- name: PCMAudio
  endpoint:
    path: /discord/pcmaudio
    method: GET
    data_selector: pcm_audio
    params: {}
- name: FFmpegAudio
  endpoint:
    path: /discord/ffmpegaudio
    method: GET
    data_selector: ffmpeg_audio
    params: {}
- name: FFmpegPCMAudio
  endpoint:
    path: /discord/ffmpegpcmaudio
    method: GET
    data_selector: ffmpeg_pcm_audio
    params: {}
- name: FFmpegOpusAudio
  endpoint:
    path: /discord/ffmpegopusaudio
    method: GET
    data_selector: ffmpeg_opus_audio
    params: {}
- name: voice_channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: data
    params: {}
- name: channel
  endpoint:
    path: /channels
    method: POST
    data_selector: channel
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: message
    params: {}
- name: partial_message
  endpoint:
    path: /messages/partial/{message_id}
    method: GET
    data_selector: partial_message
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: purge
  endpoint:
    path: /channels/{channel_id}/messages/bulk-delete
    method: POST
    data_selector: deleted_messages
    params:
      limit: 100
- name: audit_log
  endpoint:
    path: /audit-log
    method: GET
    data_selector: audit_log
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
    params: {}
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    params: {}
- name: voice_states
  endpoint:
    path: /voice_states
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: stage_channel
  endpoint:
    path: /stage_channel
    method: POST
    data_selector: channel
    params: {}
- name: audit_log_diff
  endpoint:
    path: /guilds/{guild_id}/audit-logs
    method: GET
    data_selector: audit_log_entries
    params: {}
- name: read_state
  endpoint:
    path: /channels/{channel_id}/read_state
    method: GET
- name: scheduled_events
  endpoint:
    path: /channels/{channel_id}/scheduled_events
    method: GET
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    params:
      limit: 25
      offset: 0
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
- name: set_permissions
  endpoint:
    path: /channels/{channel_id}/permissions/{overwrite}
    method: PUT
- name: slash_commands
  endpoint:
    path: /channels/{channel_id}/commands
    method: GET
- name: sync_webhook
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}
    method: POST
- name: directory_channel
  endpoint:
    path: /directory/channels
    method: GET
    data_selector: entries
- name: webhook
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}
    method: POST
    data_selector: message
    params: {}
- name: fetch_entries
  endpoint:
    path: /fetch_entries
    method: GET
    data_selector: entries
- name: search_entries
  endpoint:
    path: /search_entries
    method: GET
    data_selector: entries
- name: create_entry
  endpoint:
    path: /create_entry
    method: POST
    data_selector: entry
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
    data_selector: invite
- name: delete
  endpoint:
    path: /delete
    method: DELETE
    data_selector: result
- name: guild_channel
  endpoint:
    path: /guilds/{guild.id}/channels
    method: GET
    data_selector: channels
- name: forum_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: permissions_synced
  endpoint:
    path: /permissions/synced
    method: GET
    data_selector: permissions
    params: {}
- name: set_permissions
  endpoint:
    path: /permissions/set
    method: POST
    data_selector: permissions
    params: {}
- name: fetch_message
  endpoint:
    path: /fetch_message
    method: GET
    data_selector: Message
    params:
      id: int
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: Message
    params:
      limit: int
      before: Snowflake|datetime
      after: Snowflake|datetime
      around: Snowflake|datetime
      oldest_first: bool
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: Message
    params:
      content: str
      limit: int
      offset: int
      before: Snowflake|datetime
      after: Snowflake|datetime
      oldest_first: bool
      most_relevant: bool
- name: requested_at
  endpoint:
    path: /discord/DMChannel/requested_at
    method: GET
- name: is_message_request
  endpoint:
    path: /discord/DMChannel/is_message_request
    method: GET
- name: is_accepted
  endpoint:
    path: /discord/DMChannel/is_accepted
    method: GET
- name: is_spam
  endpoint:
    path: /discord/DMChannel/is_spam
    method: GET
- name: permissions_for
  endpoint:
    path: /discord/DMChannel/permissions_for
    method: POST
- name: add_recipients
  endpoint:
    path: /discord/DMChannel/add_recipients
    method: POST
- name: get_partial_message
  endpoint:
    path: /discord/DMChannel/get_partial_message
    method: GET
- name: close
  endpoint:
    path: /discord/DMChannel/close
    method: POST
- name: connect
  endpoint:
    path: /discord/DMChannel/connect
    method: POST
- name: accept
  endpoint:
    path: /discord/DMChannel/accept
    method: POST
- name: decline
  endpoint:
    path: /discord/DMChannel/decline
    method: POST
- name: ack
  endpoint:
    path: /discord/DMChannel/ack
    method: POST
- name: ack_pins
  endpoint:
    path: /discord/DMChannel/ack_pins
    method: POST
- name: application_commands
  endpoint:
    path: /discord/DMChannel/application_commands
    method: GET
- name: fetch_message
  endpoint:
    path: /discord/DMChannel/fetch_message
    method: GET
- name: greet
  endpoint:
    path: /discord/DMChannel/greet
    method: POST
- name: history
  endpoint:
    path: /discord/DMChannel/history
    method: GET
- name: pins
  endpoint:
    path: /discord/DMChannel/pins
    method: GET
- name: search
  endpoint:
    path: /discord/DMChannel/search
    method: GET
- name: message_history
  endpoint:
    path: /channel/history
    method: GET
    data_selector: messages
    params:
      limit: '200'
- name: search_messages
  endpoint:
    path: /channel/search
    method: GET
    data_selector: messages
    params:
      limit: '25'
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params: {}
- name: group_channel
  endpoint:
    path: /api/v2.1/group_channel
    method: GET
    data_selector: records
- name: user_settings
  endpoint:
    path: /users/@me/settings
    method: GET
    data_selector: settings
    params: {}
- name: legacy_user_settings
  endpoint:
    path: /legacy/user/settings
    method: GET
    data_selector: settings
    params: {}
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: unacknowledge
  endpoint:
    path: /channels/{channel_id}/messages/unacknowledge
    method: POST
    data_selector: unacknowledged
    params: {}
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages/files
    method: POST
    data_selector: uploaded_files
    params: {}
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: activity_statistics
  endpoint:
    path: /applications/{application.id}/activity_statistics
    method: GET
- name: edit
  endpoint:
    path: /applications/{application.id}
    method: PATCH
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: /slash/commands
    method: GET
    data_selector: commands
    params: {}
- name: stage_instance
  endpoint:
    path: /stage_instance
    method: GET
    data_selector: records
- name: private_call
  endpoint:
    path: /private_call
    method: GET
    data_selector: records
- name: group_call
  endpoint:
    path: /group_call
    method: GET
    data_selector: records
- name: message
  endpoint:
    path: /discord/api/messages
    method: GET
    data_selector: message
- name: PartialMessage
  endpoint:
    path: /discord/PartialMessage
    method: GET
    data_selector: attributes
    params: {}
- name: application_branch
  endpoint:
    path: /application/branch
    method: GET
- name: application_build
  endpoint:
    path: /application/build
    method: GET
- name: manifest
  endpoint:
    path: /manifest
    method: GET
- name: team
  endpoint:
    path: /team
    method: GET
- name: payouts
  endpoint:
    path: /team/payouts
    method: GET
    data_selector: payouts
    params:
      limit: 96
- name: attachment
  endpoint:
    path: /attachments
    method: GET
    data_selector: attachments
- name: reaction
  endpoint:
    path: /reaction
    method: GET
    data_selector: records
- name: voice_client
  endpoint:
    path: /connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 30.0
      reconnect: true
- name: dm_channel
  endpoint:
    path: /create_dm
    method: POST
    data_selector: dm_channel
    params: {}
- name: interaction
  endpoint:
    path: /interactions
    method: GET
    data_selector: records
- name: component
  endpoint:
    path: /components
    method: GET
    data_selector: records
- name: File
  endpoint:
    path: /discord/File
    method: POST
    data_selector: attributes
- name: CloudFile
  endpoint:
    path: /discord/CloudFile
    method: POST
    data_selector: attributes
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: team_payout
  endpoint:
    path: /team_payout
    method: GET
    data_selector: payouts
    params: {}
- name: entitlement
  endpoint:
    path: /entitlement
    method: GET
    data_selector: entitlements
    params: {}
- name: application
  endpoint:
    path: /applications
    method: GET
    data_selector: applications
- name: Subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: entitlement
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: gift_batch
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
- name: branch
  endpoint:
    path: /branches
    method: GET
    data_selector: branches
- name: activity_statistics
  endpoint:
    path: /activity_statistics
    method: GET
    data_selector: statistics
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
- name: store_listing
  endpoint:
    path: /store_listings
    method: GET
    data_selector: store_listings
- name: application
  endpoint:
    path: /applications
    method: GET
    data_selector: applications
- name: PremiumGuildSubscription
  endpoint:
    path: /discord/PremiumGuildSubscription
    method: GET
    data_selector: records
    params: {}
- name: PremiumGuildSubscriptionSlot
  endpoint:
    path: /discord/PremiumGuildSubscriptionSlot
    method: GET
    data_selector: records
    params: {}
- name: SubscriptionPlan
  endpoint:
    path: /discord/SubscriptionPlan
    method: GET
    data_selector: records
    params: {}
- name: application_profile
  endpoint:
    path: /applications/@me
    method: GET
    data_selector: applicationProfile
- name: application_bot
  endpoint:
    path: /applications/@me/bot
    method: GET
    data_selector: applicationBot
- name: subscription_plan_prices
  endpoint:
    path: /v2/subscription_plan_prices
    method: GET
    data_selector: country_prices
    params: {}
- name: payment
  endpoint:
    path: /v2/payments
    method: GET
    data_selector: payments
    params: {}
- name: sku
  endpoint:
    path: /v2/skus
    method: GET
    data_selector: skus
    params: {}
- name: SKU
  endpoint:
    path: /discord/SKU
    method: GET
    data_selector: records
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: Message
- name: send_message
  endpoint:
    path: /send
    method: POST
    data_selector: Message
- name: invite
  endpoint:
    path: /invites/{invite.code}
    method: GET
    data_selector: invite
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: listings
- name: invite
  endpoint:
    path: /api/v9/invites
    method: GET
    data_selector: invites
    params: {}
- name: discovery_splash
  endpoint:
    path: /guilds/{guild.id}/discovery-splash
    method: GET
- name: member_count
  endpoint:
    path: /guilds/{guild.id}/member-count
    method: GET
- name: online_count
  endpoint:
    path: /guilds/{guild.id}/online-count
    method: GET
- name: chunked
  endpoint:
    path: /guilds/{guild.id}/chunked
    method: GET
- name: created_at
  endpoint:
    path: /guilds/{guild.id}/created-at
    method: GET
- name: fetch_guilds
  endpoint:
    path: /guilds
    method: GET
- name: fetch_guild
  endpoint:
    path: /guilds/{guild_id}
    method: GET
- name: fetch_guild_preview
  endpoint:
    path: /guilds/{guild_id}/preview
    method: GET
- name: create_guild
  endpoint:
    path: /guilds
    method: POST
- name: join_guild
  endpoint:
    path: /guilds/{guild_id}/members/@me
    method: PUT
- name: leave_guild
  endpoint:
    path: /guilds/{guild_id}/members/@me
    method: DELETE
- name: fetch_invite
  endpoint:
    path: /invites/{invite}
    method: GET
- name: create_invite
  endpoint:
    path: /channels/{channel_id}/invites
    method: POST
- name: accept_invite
  endpoint:
    path: /invites/{invite}
    method: POST
- name: delete_invite
  endpoint:
    path: /invites/{invite}
    method: DELETE
- name: search_messages
  endpoint:
    path: /guilds/{guild_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: prune_members
  endpoint:
    path: /guilds/{guild_id}/prune
    method: POST
    data_selector: pruned_count
    params:
      days: 7
- name: fetch_stickers
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
    data_selector: stickers
    params: {}
- name: fetch_relationships
  endpoint:
    path: /fetch_relationships
    method: GET
- name: friend_suggestions
  endpoint:
    path: /friend_suggestions
    method: GET
- name: fetch_country_code
  endpoint:
    path: /fetch_country_code
    method: GET
- name: fetch_location_info
  endpoint:
    path: /fetch_location_info
    method: GET
- name: fetch_preferred_rtc_regions
  endpoint:
    path: /fetch_preferred_rtc_regions
    method: GET
- name: create_dm
  endpoint:
    path: /create_dm
    method: POST
- name: create_group
  endpoint:
    path: /create_group
    method: POST
- name: send_friend_request
  endpoint:
    path: /send_friend_request
    method: POST
- name: applications
  endpoint:
    path: /applications
    method: GET
- name: detectable_applications
  endpoint:
    path: /detectable_applications
    method: GET
- name: fetch_application
  endpoint:
    path: /fetch_application
    method: GET
- name: fetch_partial_application
  endpoint:
    path: /fetch_partial_application
    method: GET
- name: fetch_public_application
  endpoint:
    path: /fetch_public_application
    method: GET
- name: fetch_public_applications
  endpoint:
    path: /fetch_public_applications
    method: GET
- name: teams
  endpoint:
    path: /teams
    method: GET
- name: fetch_team
  endpoint:
    path: /fetch_team
    method: GET
- name: create_sticker
  endpoint:
    path: /guilds/{guild.id}/stickers
    method: POST
    data_selector: sticker
- name: delete_sticker
  endpoint:
    path: /guilds/{guild.id}/stickers/{sticker.id}
    method: DELETE
    data_selector: sticker
- name: subscribed_scheduled_events
  endpoint:
    path: /guilds/{guild.id}/scheduled-events
    method: GET
    data_selector: events
- name: fetch_scheduled_events
  endpoint:
    path: /guilds/{guild.id}/scheduled-events
    method: GET
    data_selector: events
- name: fetch_scheduled_event
  endpoint:
    path: /guilds/{guild.id}/scheduled-events/{scheduled_event_id}
    method: GET
    data_selector: event
- name: create_scheduled_event
  endpoint:
    path: /guilds/{guild.id}/scheduled-events
    method: POST
    data_selector: event
- name: top_emojis
  endpoint:
    path: /guilds/{guild.id}/emojis/top
    method: GET
    data_selector: emojis
- name: fetch_emojis
  endpoint:
    path: /guilds/{guild.id}/emojis
    method: GET
    data_selector: emojis
- name: fetch_emoji
  endpoint:
    path: /guilds/{guild.id}/emojis/{emoji_id}
    method: GET
    data_selector: emoji
- name: create_custom_emoji
  endpoint:
    path: /guilds/{guild.id}/emojis
    method: POST
    data_selector: emoji
- name: delete_emoji
  endpoint:
    path: /guilds/{guild.id}/emojis/{emoji.id}
    method: DELETE
    data_selector: emoji
- name: fetch_roles
  endpoint:
    path: /guilds/{guild.id}/roles
    method: GET
    data_selector: roles
- name: fetch_role
  endpoint:
    path: /guilds/{guild.id}/roles/{role_id}
    method: GET
    data_selector: role
- name: create_role
  endpoint:
    path: /guilds/{guild.id}/roles
    method: POST
    data_selector: role
- name: application
  endpoint:
    path: /applications
    method: POST
- name: team
  endpoint:
    path: /teams
    method: POST
- name: company
  endpoint:
    path: /companies
    method: GET
- name: payment_source
  endpoint:
    path: /payment_sources
    method: GET
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
- name: promotion
  endpoint:
    path: /promotions
    method: GET
- name: audit_logs
  endpoint:
    params:
      limit: 100
- name: kick
  endpoint: {}
- name: ban
  endpoint: {}
- name: unban
  endpoint: {}
- name: bulk_ban
  endpoint: {}
- name: vanity_invite
  endpoint: {}
- name: widget
  endpoint: {}
- name: welcome_screen
  endpoint: {}
- name: welcome_screen
  endpoint:
    path: /guilds/{guild_id}/welcome-screen
    method: GET
    data_selector: welcome_screen
    params: {}
- name: applications
  endpoint:
    path: /guilds/{guild_id}/applications
    method: GET
    data_selector: applications
    params: {}
- name: premium_subscriptions
  endpoint:
    path: /guilds/{guild_id}/premium-subscriptions
    method: GET
    data_selector: premium_subscriptions
    params: {}
- name: price_tiers
  endpoint:
    path: /guilds/{guild_id}/price-tiers
    method: GET
    data_selector: price_tiers
    params: {}
- name: members
  endpoint:
    path: /guilds/{guild_id}/members
    method: GET
    data_selector: members
    params: {}
- name: promotions
  endpoint:
    path: /promotions
    method: GET
    data_selector: promotions
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: user_offer
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: trial_offer
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: pricing_promotion
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: library
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: authorizations
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
    data_selector: giftable_entitlements
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
    data_selector: premium_entitlements
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
    data_selector: gift
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
    data_selector: sku
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
    data_selector: store_listing
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
    data_selector: published_store_listing
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
    data_selector: published_store_listings
- name: automod_rules
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: automod_rules
- name: fetch_automod_rule
  endpoint:
    path: /automod/rules/{automod_rule_id}
    method: GET
    data_selector: automod_rule
- name: create_automod_rule
  endpoint:
    path: /automod/rules
    method: POST
    data_selector: automod_rule
- name: admin_community_eligibility
  endpoint:
    path: /admin/community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /admin/community/join
    method: POST
    data_selector: community
- name: migrate_command_scope
  endpoint:
    path: /migrate/command/scope
    method: POST
    data_selector: integration_ids
- name: directory_broadcast_eligibility
  endpoint:
    path: /directory/broadcast/eligibility
    method: GET
    data_selector: broadcast_eligibility
- name: ban_entry
  endpoint:
    path: /bans
    method: GET
    data_selector: bans
    params: {}
- name: bulk_ban_result
  endpoint:
    path: /bulk_ban
    method: POST
    data_selector: bulkBanResult
    params: {}
- name: role
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
    params: {}
- name: primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
    params: {}
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
    params: {}
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: subscription_plans
    params: {}
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier
    params: {}
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
    params: {}
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: mentions
    params: {}
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
    data_selector: response
    params: {}
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
    data_selector: hubs
    params: {}
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
    data_selector: joined_hub
    params: {}
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
    data_selector: suggested_username
    params: {}
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
    data_selector: is_taken
    params: {}
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
    data_selector: avatars
    params: {}
- name: member
  endpoint:
    path: /discord/members
    method: GET
    data_selector: members
    params: {}
- name: mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
    data_selector: mutual_friends
- name: note
  endpoint:
    path: /fetch_note
    method: GET
    data_selector: note
- name: delete_note
  endpoint:
    path: /delete_note
    method: DELETE
- name: member
  endpoint:
    path: /api/v1/members
    method: GET
    data_selector: members
- name: ResolvedInvite
  endpoint:
    path: /discord/utils/resolve_invite
    method: POST
    data_selector: invite
    params: {}
- name: snowflake_time
  endpoint:
    path: /discord/utils/snowflake_time
    method: GET
    data_selector: id
    params: {}
- name: pinned_messages
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: messages
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: unacknowledge_messages
  endpoint:
    path: /channels/{channel_id}/messages/unack
    method: POST
    data_selector: unacknowledged
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages/files
    method: POST
    data_selector: uploaded_files
- name: member_profile
  endpoint:
    path: /api/v1/member_profile
    method: GET
    data_selector: data
    params: {}
- name: food
  endpoint:
    path: /discord/api/v2/food
    method: GET
- name: activity
  endpoint:
    path: /discord/api/v2/activity
    method: GET
- name: travel
  endpoint:
    path: /discord/api/v2/travel
    method: GET
- name: objects
  endpoint:
    path: /discord/api/v2/objects
    method: GET
- name: symbols
  endpoint:
    path: /discord/api/v2/symbols
    method: GET
- name: flags
  endpoint:
    path: /discord/api/v2/flags
    method: GET
- name: history
  endpoint:
    path: /channel/history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: search
  endpoint:
    path: /channel/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: audit_log_diff
  endpoint:
    path: /audit-log/diff
    method: GET
    data_selector: changes
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
    data_selector: files
    params: {}
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}
    method: POST
    data_selector: webhook
    params: {}
- name: PartialEmoji
  endpoint:
    path: /discord/PartialEmoji
    method: GET
    data_selector: records
- name: Sticker
  endpoint:
    path: /discord/Sticker
    method: GET
    data_selector: records
- name: StickerItem
  endpoint:
    path: /discord/StickerItem
    method: GET
    data_selector: records
- name: StickerPack
  endpoint:
    path: /discord/StickerPack
    method: GET
    data_selector: records
- name: StandardSticker
  endpoint:
    path: /discord/StandardSticker
    method: GET
    data_selector: records
- name: guild_sticker
  endpoint:
    path: /guilds/{guild.id}/stickers/{sticker.id}
    method: GET
    data_selector: sticker
- name: category_channel
  endpoint:
    path: /guilds/{guild.id}/channels
    method: GET
    data_selector: channels
- name: sync_webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook_data
- name: forums
  endpoint:
    path: /forums
    method: GET
- name: directory_channels
  endpoint:
    path: /directory_channels
    method: GET
- name: directories
  endpoint:
    path: /directories
    method: GET
- name: create_text_channel
  endpoint:
    path: /create_text_channel
    method: POST
- name: create_voice_channel
  endpoint:
    path: /create_voice_channel
    method: POST
- name: create_stage_channel
  endpoint:
    path: /create_stage_channel
    method: POST
- name: create_directory
  endpoint:
    path: /create_directory
    method: POST
- name: create_directory_channel
  endpoint:
    path: /create_directory_channel
    method: POST
- name: create_forum
  endpoint:
    path: /create_forum
    method: POST
- name: create_forum_channel
  endpoint:
    path: /create_forum_channel
    method: POST
- name: edit_message
  endpoint:
    path: /edit_message
    method: POST
    data_selector: message
- name: delete_message
  endpoint:
    path: /delete_message
    method: DELETE
    data_selector: message
- name: text_channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: channel
    params: {}
- name: guild_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: fetch_message
  endpoint:
    path: /fetch_message/{id}
    method: GET
    data_selector: message
    params: {}
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
    data_selector: commands
    params: {}
- name: notification_settings
  endpoint:
    path: /notification_settings
    method: GET
    data_selector: notification_settings
- name: overwrites
  endpoint:
    path: /overwrites
    method: GET
    data_selector: overwrites
- name: overwrites_for
  endpoint:
    path: /overwrites_for
    method: GET
    data_selector: overwrites_for
- name: permissions_synced
  endpoint:
    path: /permissions_synced
    method: GET
    data_selector: permissions_synced
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pins
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: search
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: send
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: set_permissions
- name: user_profile
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: message
    params: {}
- name: partial_message
  endpoint:
    path: /messages/{message_id}/partial
    method: POST
    data_selector: partial_message
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: fetch_message
  endpoint:
    path: /fetch_message/{id}
    method: GET
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
- name: fetch_note
  endpoint:
    path: /fetch_note
    method: GET
- name: pins
  endpoint:
    path: /pins
    method: GET
- name: history
  endpoint:
    path: /history
    method: GET
    params:
      limit: 100
- name: search
  endpoint:
    path: /search
    method: GET
    params:
      limit: 25
      offset: 0
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
    params: {}
- name: voice_states
  endpoint:
    path: /voice/states
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: history
  endpoint:
    path: /StageChannel/history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /StageChannel/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /StageChannel/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    params:
      limit: 200
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    params: {}
- name: message
  endpoint:
    path: /messages
    method: POST
    data_selector: message
    params: {}
- name: user_profile
  endpoint:
    path: /users/@me
    method: GET
    data_selector: profile
    params: {}
- name: read_state
  endpoint:
    path: /channels/{channel_id}/read_state
    method: GET
    data_selector: read_state
- name: scheduled_events
  endpoint:
    path: /channels/{channel_id}/scheduled_events
    method: GET
    data_selector: scheduled_events
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /channels/{channel_id}/permissions/{overwrite_id}
    method: PUT
    data_selector: permissions
- name: directory_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: entries
- name: PrimaryGuild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: UserAffinity
  endpoint:
    path: /user/affinities
    method: GET
    data_selector: affinities
- name: GuildAffinity
  endpoint:
    path: /guilds/affinities
    method: GET
    data_selector: guildAffinities
- name: ChannelAffinity
  endpoint:
    path: /channels/affinities
    method: GET
    data_selector: channelAffinities
- name: BillingAddress
  endpoint:
    path: /billing/addresses
    method: GET
    data_selector: billingAddresses
- name: PaymentSource
  endpoint:
    path: /payment/sources
    method: GET
    data_selector: paymentSources
- name: PremiumUsage
  endpoint:
    path: /premium/usage
    method: GET
    data_selector: premiumUsage
- name: forum_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: connection
  endpoint:
    path: /discord/Connection
    method: GET
- name: partial_connection
  endpoint:
    path: /discord/PartialConnection
    method: GET
- name: relationship
  endpoint:
    path: /discord/Relationship
    method: GET
- name: friend_suggestion
  endpoint:
    path: /discord/FriendSuggestion
    method: GET
- name: thread
  endpoint:
    path: /api/v9/channels/{channel_id}/threads
    method: POST
    data_selector: thread
    params: {}
- name: webhook
  endpoint:
    path: /api/v9/channels/{channel_id}/webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: invite
  endpoint:
    path: /api/v9/channels/{channel_id}/invites
    method: POST
    data_selector: invite
    params: {}
- name: user_settings
  endpoint:
    path: /user/settings
    method: GET
    data_selector: settings
    params: {}
- name: user_settings
  endpoint:
    path: /user/settings
    method: GET
    data_selector: settings
- name: application
  endpoint:
    path: /applications/{application.id}
    method: GET
    data_selector: data
- name: requested_at
  endpoint:
    path: /discord/DMChannel/requested_at
    method: GET
- name: is_message_request
  endpoint:
    path: /discord/DMChannel/is_message_request
    method: GET
- name: is_accepted
  endpoint:
    path: /discord/DMChannel/is_accepted
    method: GET
- name: is_spam
  endpoint:
    path: /discord/DMChannel/is_spam
    method: GET
- name: permissions_for
  endpoint:
    path: /discord/DMChannel/permissions_for
    method: GET
- name: add_recipients
  endpoint:
    path: /discord/DMChannel/add_recipients
    method: POST
- name: close
  endpoint:
    path: /discord/DMChannel/close
    method: DELETE
- name: connect
  endpoint:
    path: /discord/DMChannel/connect
    method: POST
- name: accept
  endpoint:
    path: /discord/DMChannel/accept
    method: POST
- name: decline
  endpoint:
    path: /discord/DMChannel/decline
    method: POST
- name: ack
  endpoint:
    path: /discord/DMChannel/ack
    method: POST
- name: ack_pins
  endpoint:
    path: /discord/DMChannel/ack_pins
    method: POST
- name: application_commands
  endpoint:
    path: /discord/DMChannel/application_commands
    method: GET
- name: fetch_message
  endpoint:
    path: /discord/DMChannel/fetch_message
    method: GET
- name: greet
  endpoint:
    path: /discord/DMChannel/greet
    method: POST
- name: history
  endpoint:
    path: /discord/DMChannel/history
    method: GET
- name: pins
  endpoint:
    path: /discord/DMChannel/pins
    method: GET
- name: search
  endpoint:
    path: /discord/DMChannel/search
    method: GET
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
      cls: VoiceClient
      ring: true
- name: ack
  endpoint:
    path: /ack
    method: POST
    data_selector: acknowledgment
    params: {}
- name: ack_pins
  endpoint:
    path: /ack_pins
    method: POST
    data_selector: acknowledgment
    params: {}
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
    data_selector: commands
    params: {}
- name: fetch_message
  endpoint:
    path: /fetch_message/{id}
    method: GET
    data_selector: message
    params: {}
- name: greet
  endpoint:
    path: /greet
    method: POST
    data_selector: sticker_greeting
    params: {}
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: message_history
    params:
      limit: 100
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: search_results
    params:
      limit: 25
      most_relevant: false
- name: ApplicationBranch
  endpoint:
    path: /application_branch
    method: GET
    data_selector: builds
- name: ApplicationBuild
  endpoint:
    path: /application_build
    method: GET
    data_selector: builds
- name: ManifestLabel
  endpoint:
    path: /manifest_label
    method: GET
    data_selector: labels
- name: Manifest
  endpoint:
    path: /manifest
    method: GET
    data_selector: manifests
- name: Team
  endpoint:
    path: /team
    method: GET
    data_selector: teams
- name: send_message
  endpoint:
    path: /send
    method: POST
- name: unacknowledge
  endpoint:
    path: /unack
    method: POST
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
- name: team_member
  endpoint:
    path: /teams/members
    method: GET
    data_selector: members
    params: {}
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
    params: {}
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: commands
    params: {}
- name: search_messages
  endpoint:
    path: /channel/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send_message
  endpoint:
    path: /channel/send
    method: POST
    data_selector: message
    params: {}
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params: {}
- name: team_payout
  endpoint:
    path: /team/payouts
    method: GET
    data_selector: payouts
    params: {}
- name: entitlement
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
    params: {}
- name: Gift
  endpoint:
    path: /discord/gift
    method: GET
    data_selector: gift
- name: GiftBatch
  endpoint:
    path: /discord/gift-batch
    method: GET
    data_selector: gift_batch
- name: LibraryApplication
  endpoint:
    path: /discord/library-application
    method: GET
    data_selector: library_application
- name: remove_tags
  endpoint:
    path: /remove_tags
    method: POST
- name: join
  endpoint:
    path: /join
    method: POST
- name: leave
  endpoint:
    path: /leave
    method: POST
- name: add_user
  endpoint:
    path: /add_user
    method: POST
- name: remove_user
  endpoint:
    path: /remove_user
    method: POST
- name: fetch_members
  endpoint:
    path: /fetch_members
    method: GET
- name: delete
  endpoint:
    path: /delete
    method: DELETE
- name: get_partial_message
  endpoint:
    path: /get_partial_message
    method: GET
- name: ack
  endpoint:
    path: /ack
    method: POST
- name: ack_pins
  endpoint:
    path: /ack_pins
    method: POST
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
- name: fetch_message
  endpoint:
    path: /fetch_message
    method: GET
- name: greet
  endpoint:
    path: /greet
    method: POST
- name: history
  endpoint:
    path: /history
    method: GET
- name: pins
  endpoint:
    path: /pins
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
- name: Subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: thread_member
  endpoint:
    path: /threads/members
    method: GET
    data_selector: members
- name: stage_instance
  endpoint:
    path: /stage-instances
    method: GET
    data_selector: instances
- name: message
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
- name: SKU
  endpoint:
    path: /discord/SKU
    method: GET
    data_selector: records
- name: Payment
  endpoint:
    path: /discord/Payment
    method: GET
    data_selector: records
- name: SubscriptionPlanPrices
  endpoint:
    path: /discord/SubscriptionPlanPrices
    method: GET
    data_selector: records
- name: sku
  endpoint:
    path: /discord/sku
    method: GET
    data_selector: records
- name: message
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
    params: {}
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: records
- name: sku
  endpoint:
    path: /sku
    method: GET
    data_selector: records
- name: PartialMessage
  endpoint:
    path: /discord/PartialMessage
    method: GET
    data_selector: message
- name: guild
  endpoint:
    path: /guilds/{guild.id}
    method: GET
    data_selector: guild
- name: File
  endpoint:
    path: /discord/File
    method: POST
    data_selector: attributes
    params: {}
- name: CloudFile
  endpoint:
    path: /discord/CloudFile
    method: POST
    data_selector: attributes
    params: {}
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: guild
  endpoint:
    path: /guilds/{guild_id}
    method: GET
    data_selector: guild
    params: {}
- name: messages
  endpoint:
    params:
      limit: optional
      before: optional
      after: optional
      around: optional
      oldest_first: optional
- name: create_directory_channel
  endpoint:
    path: /channels
    method: POST
    data_selector: channel
    params: {}
- name: create_forum
  endpoint:
    path: /forums
    method: POST
    data_selector: forum
    params: {}
- name: create_forum_channel
  endpoint:
    path: /forum_channels
    method: POST
    data_selector: forum_channel
    params: {}
- name: leave_guild
  endpoint:
    path: /guilds/{guild_id}/leave
    method: POST
    data_selector: leave_response
    params: {}
- name: delete_guild
  endpoint:
    path: /guilds/{guild_id}
    method: DELETE
    data_selector: delete_response
    params: {}
- name: edit_guild
  endpoint:
    path: /guilds/{guild_id}
    method: PATCH
    data_selector: edited_guild
    params: {}
- name: bans
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: ban_entries
    params:
      limit: 1000
- name: fetch_member
  endpoint:
    path: /guilds/{guild_id}/members/{member_id}
    method: GET
    data_selector: member
    params: {}
- name: invite
  endpoint:
    path: /invites/{invite}
    method: DELETE
- name: user_notes
  endpoint:
    path: /users/@me/notes
    method: GET
- name: private_channels
  endpoint:
    path: /users/@me/channels
    method: GET
- name: connections
  endpoint:
    path: /users/@me/connections
    method: GET
- name: create_sticker
  endpoint:
    path: /guilds/{guild.id}/stickers
    method: POST
- name: delete_sticker
  endpoint:
    path: /guilds/{guild.id}/stickers/{sticker.id}
    method: DELETE
- name: subscribed_scheduled_events
  endpoint:
    path: /guilds/{guild.id}/scheduled-events
    method: GET
- name: fetch_scheduled_events
  endpoint:
    path: /guilds/{guild.id}/scheduled-events
    method: GET
- name: fetch_scheduled_event
  endpoint:
    path: /guilds/{guild.id}/scheduled-events/{scheduled_event_id}
    method: GET
- name: create_scheduled_event
  endpoint:
    path: /guilds/{guild.id}/scheduled-events
    method: POST
- name: top_emojis
  endpoint:
    path: /guilds/{guild.id}/emojis/top
    method: GET
- name: fetch_emojis
  endpoint:
    path: /guilds/{guild.id}/emojis
    method: GET
- name: fetch_emoji
  endpoint:
    path: /guilds/{guild.id}/emojis/{emoji_id}
    method: GET
- name: create_custom_emoji
  endpoint:
    path: /guilds/{guild.id}/emojis
    method: POST
- name: delete_emoji
  endpoint:
    path: /guilds/{guild.id}/emojis/{emoji.id}
    method: DELETE
- name: fetch_roles
  endpoint:
    path: /guilds/{guild.id}/roles
    method: GET
- name: fetch_role
  endpoint:
    path: /guilds/{guild.id}/roles/{role_id}
    method: GET
- name: create_role
  endpoint:
    path: /guilds/{guild.id}/roles
    method: POST
- name: user_settings
  endpoint:
    path: /users/@me/settings
    method: GET
    data_selector: settings
- name: friend_suggestions
  endpoint:
    path: /users/@me/friend-suggestions
    method: GET
    data_selector: suggestions
- name: applications
  endpoint:
    path: /users/@me/applications
    method: GET
    data_selector: applications
- name: detectable_applications
  endpoint:
    path: /applications/detectable
    method: GET
    data_selector: applications
- name: teams
  endpoint:
    path: /users/@me/teams
    method: GET
    data_selector: teams
- name: welcome_screen
  endpoint:
    path: /guilds/{guild_id}/welcome-screen
    method: PATCH
    data_selector: welcome_screen
    params: {}
- name: applications
  endpoint:
    path: /guilds/{guild_id}/applications
    method: GET
    data_selector: applications
    params: {}
- name: premium_subscriptions
  endpoint:
    path: /guilds/{guild_id}/premium-subscriptions
    method: GET
    data_selector: premium_subscriptions
    params: {}
- name: price_tiers
  endpoint:
    path: /guilds/{guild_id}/price-tiers
    method: GET
    data_selector: price_tiers
    params: {}
- name: application
  endpoint:
    path: /create_application
    method: POST
- name: team
  endpoint:
    path: /create_team
    method: POST
- name: companies
  endpoint:
    path: /search_companies
    method: GET
- name: company
  endpoint:
    path: /fetch_company
    method: GET
- name: activity_statistics
  endpoint:
    path: /activity_statistics
    method: GET
- name: global_activity_statistics
  endpoint:
    path: /global_activity_statistics
    method: GET
- name: payment_sources
  endpoint:
    path: /payment_sources
    method: GET
- name: payment_source
  endpoint:
    path: /fetch_payment_source
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: premium_guild_subscriptions
  endpoint:
    path: /premium_guild_subscriptions
    method: GET
- name: premium_guild_subscription_slots
  endpoint:
    path: /premium_guild_subscription_slots
    method: GET
- name: premium_guild_subscription_cooldown
  endpoint:
    path: /premium_guild_subscription_cooldown
    method: GET
- name: subscription
  endpoint:
    path: /fetch_subscription
    method: GET
- name: payments
  endpoint:
    path: /payments
    method: GET
- name: payment
  endpoint:
    path: /fetch_payment
    method: GET
- name: promotions
  endpoint:
    path: /promotions
    method: GET
- name: automod_rules
  endpoint:
    path: /guilds/{guild.id}/automod/rules
    method: GET
    data_selector: automod_rules
- name: fetch_automod_rule
  endpoint:
    path: /guilds/{guild.id}/automod/rules/{automod_rule_id}
    method: GET
    data_selector: automod_rule
- name: create_automod_rule
  endpoint:
    path: /guilds/{guild.id}/automod/rules
    method: POST
    data_selector: automod_rule
- name: admin_community_eligibility
  endpoint:
    path: /guilds/{guild.id}/admin_community/eligibility
    method: GET
    data_selector: is_eligible
- name: join_admin_community
  endpoint:
    path: /guilds/{guild.id}/admin_community/join
    method: POST
    data_selector: guild
- name: migrate_command_scope
  endpoint:
    path: /guilds/{guild.id}/migrate_command_scope
    method: POST
    data_selector: integration_ids
- name: directory_broadcast_eligibility
  endpoint:
    path: /guilds/{guild.id}/directory_broadcast_eligibility
    method: GET
    data_selector: eligibility
- name: webhook_channels
  endpoint:
    path: /guilds/{guild.id}/webhook_channels
    method: GET
    data_selector: channels
- name: leave_guild
  endpoint:
    path: /guilds/{guild.id}/leave
    method: POST
    data_selector: success
- name: delete_guild
  endpoint:
    path: /guilds/{guild.id}
    method: DELETE
    data_selector: success
- name: ban_entry
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: bans
    params: {}
- name: bulk_ban_result
  endpoint:
    path: /guilds/{guild_id}/bans
    method: POST
    data_selector: bulk_ban
    params: {}
- name: role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
    params: {}
- name: user_offer
  endpoint:
    path: /user/offer
    method: GET
- name: trial_offer
  endpoint:
    path: /trial/offer
    method: GET
- name: pricing_promotion
  endpoint:
    path: /pricing/promotion
    method: GET
- name: library
  endpoint:
    path: /library
    method: GET
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
- name: giftable_entitlements
  endpoint:
    path: /giftable/entitlements
    method: GET
- name: premium_entitlements
  endpoint:
    path: /premium/entitlements
    method: GET
- name: fetch_entitlements
  endpoint:
    path: /fetch/entitlements
    method: GET
- name: fetch_gift
  endpoint:
    path: /fetch/gift
    method: GET
- name: fetch_sku
  endpoint:
    path: /fetch/sku
    method: GET
- name: fetch_store_listing
  endpoint:
    path: /fetch/store_listing
    method: GET
- name: fetch_published_store_listing
  endpoint:
    path: /fetch/published_store_listing
    method: GET
- name: fetch_published_store_listings
  endpoint:
    path: /fetch/published_store_listings
    method: GET
- name: auto_mod_rule
  endpoint:
    path: /auto_mod/rules
    method: GET
    data_selector: rules
- name: AutoModRule
  endpoint:
    path: /auto_mod_rule
    method: POST
    data_selector: rule
    params: {}
- name: AutoModAction
  endpoint:
    path: /auto_mod_action
    method: GET
    data_selector: action
    params: {}
- name: AutoModTrigger
  endpoint:
    path: /auto_mod_trigger
    method: GET
    data_selector: trigger
    params: {}
- name: member
  endpoint:
    path: /discord/members
    method: GET
    data_selector: members
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
- name: voice_channel
  endpoint:
    path: /voice_channel
    method: GET
    data_selector: voice_channel
- name: timed_out_until
  endpoint:
    path: /timed_out_until
    method: GET
    data_selector: timed_out_until
- name: avatar
  endpoint:
    path: /avatar
    method: GET
    data_selector: avatar
- name: banner
  endpoint:
    path: /banner
    method: GET
    data_selector: banner
- name: bio
  endpoint:
    path: /bio
    method: GET
    data_selector: bio
- name: bypass_verification
  endpoint:
    path: /bypass_verification
    method: GET
    data_selector: bypass_verification
- name: reason
  endpoint:
    path: /reason
    method: GET
    data_selector: reason
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: eula
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: mentions
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: confirmation
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhook_id
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: confirmation
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: reported_application
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
- name: pinned_messages
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: messages
- name: member_profile
  endpoint:
    path: /guilds/{guild_id}/members/{member_id}
    method: GET
    data_selector: profile
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
- name: member_profile
  endpoint:
    path: /discord/member/profile
    method: GET
    data_selector: records
- name: member_profile
  endpoint:
    path: /api/v1/member_profile
    method: GET
    data_selector: member_data
    params: {}
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
    data_selector: result
    params: {}
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
    data_selector: hubs
    params: {}
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
    data_selector: hub
    params: {}
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
    data_selector: suggestion
    params: {}
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
    data_selector: is_taken
    params: {}
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
    data_selector: avatars
    params: {}
- name: AudioSource
  endpoint:
    path: /discord/AudioSource
    method: GET
    data_selector: records
    params: {}
- name: PCMAudio
  endpoint:
    path: /discord/PCMAudio
    method: GET
    data_selector: records
    params: {}
- name: FFmpegAudio
  endpoint:
    path: /discord/FFmpegAudio
    method: GET
    data_selector: records
    params: {}
- name: FFmpegPCMAudio
  endpoint:
    path: /discord/FFmpegPCMAudio
    method: GET
    data_selector: records
    params: {}
- name: FFmpegOpusAudio
  endpoint:
    path: /discord/FFmpegOpusAudio
    method: GET
    data_selector: records
    params: {}
- name: guild_avatar_decoration
  endpoint:
    path: /guild_avatar_decoration
    method: GET
- name: guild_avatar_decoration_expires_at
  endpoint:
    path: /guild_avatar_decoration_expires_at
    method: GET
- name: guild_avatar_decoration_sku_id
  endpoint:
    path: /guild_avatar_decoration_sku_id
    method: GET
- name: guild_banner
  endpoint:
    path: /guild_banner
    method: GET
- name: guild_permissions
  endpoint:
    path: /guild_permissions
    method: GET
- name: history
  endpoint:
    path: /history
    method: GET
    params:
      limit: 100
- name: id
  endpoint:
    path: /id
    method: GET
- name: is_blocked
  endpoint:
    path: /is_blocked
    method: GET
- name: is_blocker
  endpoint:
    path: /is_blocker
    method: GET
- name: is_friend
  endpoint:
    path: /is_friend
    method: GET
- name: is_on_mobile
  endpoint:
    path: /is_on_mobile
    method: GET
- name: is_pomelo
  endpoint:
    path: /is_pomelo
    method: GET
- name: is_timed_out
  endpoint:
    path: /is_timed_out
    method: GET
- name: mention
  endpoint:
    path: /mention
    method: GET
- name: mobile_status
  endpoint:
    path: /mobile_status
    method: GET
- name: mutual_friends_count
  endpoint:
    path: /mutual_friends_count
    method: GET
- name: name
  endpoint:
    path: /name
    method: GET
- name: premium
  endpoint:
    path: /premium
    method: GET
- name: primary_guild
  endpoint:
    path: /primary_guild
    method: GET
- name: public_flags
  endpoint:
    path: /public_flags
    method: GET
- name: raw_status
  endpoint:
    path: /raw_status
    method: GET
- name: relationship
  endpoint:
    path: /relationship
    method: GET
- name: roles
  endpoint:
    path: /roles
    method: GET
- name: guild_settings_update
  endpoint:
    path: /guild/settings/update
    method: POST
    data_selector: settings
- name: payment_sources_update
  endpoint:
    path: /payment/sources/update
    method: POST
    data_selector: sources
- name: subscriptions_update
  endpoint:
    path: /subscriptions/update
    method: POST
    data_selector: subscriptions
- name: premium_guild_subscription_slot_create
  endpoint:
    path: /premium/guild/subscription/slot/create
    method: POST
    data_selector: slot
- name: premium_guild_subscription_slot_update
  endpoint:
    path: /premium/guild/subscription/slot/update
    method: POST
    data_selector: slot
- name: guilds_available
  endpoint:
    path: /guilds/available
    method: GET
    data_selector: guilds
- name: guilds_unavailable
  endpoint:
    path: /guilds/unavailable
    method: GET
    data_selector: guilds
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
    data_selector: files
    params:
      max_files: 10
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: PartialEmoji
  endpoint:
    path: /discord/PartialEmoji
    method: GET
    data_selector: emoji_data
- name: Sticker
  endpoint:
    path: /discord/Sticker
    method: GET
    data_selector: sticker_data
- name: StickerItem
  endpoint:
    path: /discord/StickerItem
    method: GET
    data_selector: sticker_item_data
- name: StickerPack
  endpoint:
    path: /discord/StickerPack
    method: GET
    data_selector: sticker_pack_data
- name: StandardSticker
  endpoint:
    path: /discord/StandardSticker
    method: GET
    data_selector: standard_sticker_data
- name: audit_log
  endpoint:
    path: /guilds/{guild_id}/audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: GuildSticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
    data_selector: stickers
- name: CategoryChannel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: forums
  endpoint:
    path: /forums
    method: GET
- name: directory_channels
  endpoint:
    path: /directory_channels
    method: GET
- name: directories
  endpoint:
    path: /directories
    method: GET
- name: text_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: audit_log_diff
  endpoint:
    path: /audit_logs/diff
    method: GET
    data_selector: changes
    params: {}
- name: fetch
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}
    method: GET
- name: send
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}
    method: POST
- name: delete
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}
    method: DELETE
- name: voice_channel
  endpoint:
    path: /discord/api/v2/voice_channels
    method: GET
    data_selector: channels
- name: webhook
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}
    method: POST
    data_selector: webhook
    params: {}
- name: GuildChannel
  endpoint:
    path: /discord/abc/GuildChannel
    method: GET
    data_selector: attributes
    params: {}
- name: invites
  endpoint:
    path: /invites
    method: GET
    data_selector: invites
    params:
      manage_channels: true
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: message
    params: {}
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: message
    params: {}
- name: partial_message
  endpoint:
    path: /messages/{message_id}/partial
    method: GET
    data_selector: partial_message
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: search
  endpoint:
    path: /voice-channel/search
    method: GET
    data_selector: messages
    params:
      limit: 25
- name: send
  endpoint:
    path: /voice-channel/send
    method: POST
    data_selector: message
    params:
      tts: false
- name: set_permissions
  endpoint:
    path: /voice-channel/set_permissions
    method: POST
    data_selector: permissions
    params: {}
- name: user
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
- name: voice_states
  endpoint:
    path: /voice_states
    method: GET
    data_selector: voice_states
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: typing
  endpoint:
    path: /channel/typing
    method: POST
    data_selector: typing_status
- name: slash_commands
  endpoint:
    path: /channel/slash_commands
    method: GET
    data_selector: commands
- name: user_commands
  endpoint:
    path: /user/user_commands
    method: GET
    data_selector: user_commands
- name: create_dm
  endpoint:
    path: /user/create_dm
    method: POST
    data_selector: dm_channel
- name: block
  endpoint:
    path: /user/block
    method: POST
    data_selector: block_status
- name: unblock
  endpoint:
    path: /user/unblock
    method: POST
    data_selector: unblock_status
- name: read_state
  endpoint:
    path: /channels/{channel_id}/read_state
    method: GET
    data_selector: read_state
- name: scheduled_events
  endpoint:
    path: /channels/{channel_id}/scheduled_events
    method: GET
    data_selector: scheduled_events
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /channels/{channel_id}/permissions/{overwrite_id}
    method: PUT
    data_selector: permissions
- name: slash_commands
  endpoint:
    path: /channels/{channel_id}/commands
    method: GET
    data_selector: commands
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    params:
      limit: 200
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    params:
      limit: 25
- name: directory_channel
  endpoint:
    path: /directory_channels
    method: GET
    data_selector: entries
- name: fetch_entries
  endpoint:
    path: /fetch_entries
    method: GET
- name: search_entries
  endpoint:
    path: /search_entries
    method: GET
- name: create_entry
  endpoint:
    path: /create_entry
    method: POST
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
- name: delete
  endpoint:
    path: /delete
    method: DELETE
- name: forum_channel
  endpoint:
    path: /discord/forum_channel
    method: GET
    data_selector: forum_channels
- name: legacy_user_settings
  endpoint:
    path: /api/v2/user/settings
    method: GET
    data_selector: settings
    params: {}
- name: permissions_synced
  endpoint:
    path: /permissions/synced
    method: GET
    data_selector: permissions_synced
- name: set_permissions
  endpoint:
    path: /permissions/set
    method: POST
    data_selector: set_permissions
- name: requested_at
  endpoint:
    path: /discord/DMChannel/requested_at
    method: GET
- name: is_message_request
  endpoint:
    path: /discord/DMChannel/is_message_request
    method: GET
- name: is_accepted
  endpoint:
    path: /discord/DMChannel/is_accepted
    method: GET
- name: is_spam
  endpoint:
    path: /discord/DMChannel/is_spam
    method: GET
- name: add_recipients
  endpoint:
    path: /discord/DMChannel/add_recipients
    method: POST
- name: fetch_message
  endpoint:
    path: /discord/DMChannel/fetch_message
    method: GET
- name: history
  endpoint:
    path: /discord/DMChannel/history
    method: GET
- name: pins
  endpoint:
    path: /discord/DMChannel/pins
    method: GET
- name: store_asset
  endpoint:
    path: /uploads/store_asset
    method: POST
    data_selector: asset
    params: {}
- name: skus
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
    params: {}
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    data_selector: primary_sku
    params: {}
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
    data_selector: store_listing_sku
    params: {}
- name: create_sku
  endpoint:
    path: /create_sku
    method: POST
    data_selector: sku
    params: {}
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
    params:
      limit: 100
- name: fetch_entitlement
  endpoint:
    path: /entitlement/{entitlement_id}
    method: GET
    data_selector: entitlement
    params: {}
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
    params: {}
- name: create_gift_batch
  endpoint:
    path: /create_gift_batch
    method: POST
    data_selector: gift_batch
    params: {}
- name: branches
  endpoint:
    path: /branches
    method: GET
    data_selector: branches
    params: {}
- name: create_branch
  endpoint:
    path: /create_branch
    method: POST
    data_selector: branch
    params: {}
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
    data_selector: manifest_labels
    params: {}
- name: fetch_discoverability
  endpoint:
    path: /fetch_discoverability
    method: GET
    data_selector: discoverability
    params: {}
- name: fetch_embedded_activity_config
  endpoint:
    path: /embedded_activity_config
    method: GET
    data_selector: embedded_activity_config
    params: {}
- name: edit_embedded_activity_config
  endpoint:
    path: /edit_embedded_activity_config
    method: PATCH
    data_selector: embedded_activity_config
    params: {}
- name: create_invite
  endpoint:
    path: /channels/{channel_id}/invites
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /channels/{channel_id}/connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: search_results
    params:
      limit: 25
      offset: 0
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: unacknowledge_messages
  endpoint:
    path: /channels/{channel_id}/messages/unack
    method: PATCH
    data_selector: unacknowledged
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages/files
    method: POST
    data_selector: uploaded_files
- name: application_branch
  endpoint:
    path: /application/branch
    method: GET
- name: application_build
  endpoint:
    path: /application/build
    method: GET
- name: team
  endpoint:
    path: /team
    method: GET
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: /slash/commands
    method: GET
    data_selector: commands
    params: {}
- name: team_member
  endpoint:
    path: /team/member
    method: GET
    data_selector: members
    params: {}
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    params:
      limit: 25
      offset: 0
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
- name: message
  endpoint:
    path: /discord/api/v10/messages
    method: GET
    data_selector: message
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params: {}
- name: payout
  endpoint:
    path: /team/payout
    method: GET
    data_selector: payouts
    params: {}
- name: company
  endpoint:
    path: /company
    method: GET
    data_selector: companies
    params: {}
- name: eula
  endpoint:
    path: /eula
    method: GET
    data_selector: eulas
    params: {}
- name: invite
  endpoint:
    path: /api/invite
    method: GET
    data_selector: invite
    params: {}
- name: invite
  endpoint:
    path: /invites
    method: GET
    data_selector: invites
- name: message
  endpoint:
    path: /messages
    method: GET
    data_selector: content
    params: {}
- name: reaction
  endpoint:
    path: /reaction
    method: GET
    data_selector: records
- name: interaction
  endpoint:
    path: /interactions
    method: POST
    data_selector: interaction
- name: component
  endpoint:
    path: /components
    method: POST
    data_selector: component
- name: fetch_guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params:
      with_counts: true
- name: fetch_guild
  endpoint:
    path: /guilds/{guild_id}
    method: GET
    data_selector: guild
    params:
      with_counts: true
- name: create_guild
  endpoint:
    path: /guilds
    method: POST
    data_selector: guild
    params: {}
- name: join_guild
  endpoint:
    path: /guilds/{guild_id}/members
    method: PUT
    data_selector: guild
    params:
      lurking: false
- name: leave_guild
  endpoint:
    path: /guilds/{guild_id}/members/@me
    method: DELETE
    data_selector: guild
    params: {}
- name: File
  endpoint:
    path: /discord/File
    method: GET
    data_selector: attributes
    params: {}
- name: CloudFile
  endpoint:
    path: /discord/CloudFile
    method: GET
    data_selector: attributes
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
    params: {}
- name: fetch_widget
  endpoint:
    path: /guilds/{guild_id}/widget
    method: GET
    data_selector: widget
- name: fetch_user
  endpoint:
    path: /users/{user_id}
    method: GET
    data_selector: user
- name: fetch_user_profile
  endpoint:
    path: /users/{user_id}/profile
    method: GET
    data_selector: profile
- name: fetch_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: channel
- name: fetch_webhook
  endpoint:
    path: /webhooks/{webhook_id}
    method: GET
    data_selector: webhook
- name: fetch_sticker
  endpoint:
    path: /stickers/{sticker_id}
    method: GET
    data_selector: sticker
- name: fetch_private_channels
  endpoint:
    path: /users/@me/channels
    method: GET
    data_selector: private_channels
- name: fetch_settings
  endpoint:
    path: /users/@me/settings
    method: GET
    data_selector: settings
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: Message
    params: {}
- name: send_message
  endpoint:
    path: /send
    method: POST
    data_selector: Message
    params: {}
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
    data_selector: CloudFile
    params: {}
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: UserCommand
    params: {}
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: SlashCommand
    params: {}
- name: applications
  endpoint:
    path: /applications
    method: POST
- name: teams
  endpoint:
    path: /teams
    method: POST
- name: companies
  endpoint:
    path: /companies
    method: GET
- name: payments
  endpoint:
    path: /payments
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: promotions
  endpoint:
    path: /promotions
    method: GET
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
- name: library
  endpoint:
    path: /library
    method: GET
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
- name: fetch_entitlements
  endpoint:
    path: /fetch_entitlements
    method: GET
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
- name: on_message
  endpoint:
    path: /on_message
    method: POST
- name: change_presence
  endpoint:
    path: /change_presence
    method: POST
- name: change_voice_state
  endpoint:
    path: /change_voice_state
    method: POST
- name: fetch_guilds
  endpoint:
    path: /fetch_guilds
    method: GET
- name: fetch_template
  endpoint:
    path: /fetch_template
    method: GET
- name: fetch_guild
  endpoint:
    path: /fetch_guild
    method: GET
- name: fetch_guild_preview
  endpoint:
    path: /fetch_guild_preview
    method: GET
- name: create_guild
  endpoint:
    path: /create_guild
    method: POST
- name: join_guild
  endpoint:
    path: /join_guild
    method: POST
- name: leave_guild
  endpoint:
    path: /leave_guild
    method: POST
- name: fetch_stage_instance
  endpoint:
    path: /fetch_stage_instance
    method: GET
- name: invites
  endpoint:
    path: /invites
    method: GET
- name: fetch_invite
  endpoint:
    path: /fetch_invite
    method: GET
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
- name: accept_invite
  endpoint:
    path: /accept_invite
    method: POST
- name: delete_invite
  endpoint:
    path: /delete_invite
    method: DELETE
- name: fetch_widget
  endpoint:
    path: /fetch_widget
    method: GET
    data_selector: widget
    params: {}
- name: fetch_user
  endpoint:
    path: /fetch_user
    method: GET
    data_selector: user
    params: {}
- name: fetch_user_profile
  endpoint:
    path: /fetch_user_profile
    method: GET
    data_selector: profile
    params: {}
- name: fetch_channel
  endpoint:
    path: /fetch_channel
    method: GET
    data_selector: channel
    params: {}
- name: fetch_webhook
  endpoint:
    path: /fetch_webhook
    method: GET
    data_selector: webhook
    params: {}
- name: fetch_sticker
  endpoint:
    path: /fetch_sticker
    method: GET
    data_selector: sticker
    params: {}
- name: sticker_packs
  endpoint:
    path: /sticker_packs
    method: GET
    data_selector: sticker_packs
    params: {}
- name: fetch_private_channels
  endpoint:
    path: /fetch_private_channels
    method: GET
    data_selector: private_channels
    params: {}
- name: fetch_settings
  endpoint:
    path: /fetch_settings
    method: GET
    data_selector: settings
    params: {}
- name: email_settings
  endpoint:
    path: /email_settings
    method: GET
    data_selector: email_settings
    params: {}
- name: fetch_tracking_settings
  endpoint:
    path: /fetch_tracking_settings
    method: GET
    data_selector: tracking_settings
    params: {}
- name: fetch_relationships
  endpoint:
    path: /fetch_relationships
    method: GET
- name: friend_suggestions
  endpoint:
    path: /friend_suggestions
    method: GET
- name: fetch_country_code
  endpoint:
    path: /fetch_country_code
    method: GET
- name: fetch_location_info
  endpoint:
    path: /fetch_location_info
    method: GET
- name: fetch_preferred_rtc_regions
  endpoint:
    path: /fetch_preferred_rtc_regions
    method: GET
- name: create_dm
  endpoint:
    path: /create_dm
    method: POST
- name: create_group
  endpoint:
    path: /create_group
    method: POST
- name: send_friend_request
  endpoint:
    path: /send_friend_request
    method: POST
- name: applications
  endpoint:
    path: /applications
    method: GET
- name: detectable_applications
  endpoint:
    path: /detectable_applications
    method: GET
- name: fetch_application
  endpoint:
    path: /fetch_application
    method: GET
- name: fetch_partial_application
  endpoint:
    path: /fetch_partial_application
    method: GET
- name: fetch_public_application
  endpoint:
    path: /fetch_public_application
    method: GET
- name: fetch_public_applications
  endpoint:
    path: /fetch_public_applications
    method: GET
- name: teams
  endpoint:
    path: /teams
    method: GET
- name: fetch_team
  endpoint:
    path: /fetch_team
    method: GET
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: application
  endpoint:
    path: /applications
    method: POST
    data_selector: application
- name: company
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
- name: payment_source
  endpoint:
    path: /payment_sources
    method: GET
    data_selector: payment_sources
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: premium_guild_subscription
  endpoint:
    path: /premium_guild_subscriptions
    method: GET
    data_selector: premium_guild_subscriptions
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
    params:
      application_id: int
      localize: bool
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
    params:
      application_ids: int
      localize: bool
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: sku_subscription_plans
    params:
      sku_id: int
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: skus_subscription_plans
    params:
      sku_ids: int
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: EULA
    params:
      eula_id: int
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
    params:
      branch_ids: int
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier_mapping
    params:
      price_tier: int
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: mentions
    params:
      limit: int
      before: Snowflake or datetime
      guild: Guild
      roles: bool
      everyone: bool
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: POST
    data_selector: delete_response
    params:
      message: Snowflake
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhook_id
    params:
      application: Application
      channel: TextChannel
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: leave_response
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: unverified_application
    params:
      name: str
      icon: File
      os: OperatingSystem
      executable: str
      publisher: str
      distributor: Distributor
      sku: str
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
    params:
      with_guild_experiments: bool
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
    data_selector: result
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
    data_selector: hubs
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
    data_selector: hub
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
    data_selector: suggested_username
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
    data_selector: is_taken
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
    data_selector: recent_avatars
- name: AudioSource
  endpoint:
    path: /discord/AudioSource
    method: GET
    data_selector: audio_sources
- name: PCMAudio
  endpoint:
    path: /discord/PCMAudio
    method: GET
    data_selector: pcm_audio
- name: FFmpegAudio
  endpoint:
    path: /discord/FFmpegAudio
    method: GET
    data_selector: ffmpeg_audio
- name: FFmpegPCMAudio
  endpoint:
    path: /discord/FFmpegPCMAudio
    method: GET
    data_selector: ffmpeg_pcm_audio
- name: FFmpegOpusAudio
  endpoint:
    path: /discord/FFmpegOpusAudio
    method: GET
    data_selector: ffmpeg_opus_audio
- name: promotions
  endpoint:
    path: /promotions
    method: GET
    data_selector: promotions
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: user_offer
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: trial_offer
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: pricing_promotion
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: applications
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: authorized_applications
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
    data_selector: giftable_entitlements
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
    data_selector: premium_entitlements
- name: fetch_entitlements
  endpoint:
    path: /fetch_entitlements
    method: GET
    data_selector: entitlements
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
    data_selector: gift
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
    data_selector: sku
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
    data_selector: store_listing
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
    data_selector: published_store_listing
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
    data_selector: published_store_listings
- name: AutoModRule
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: Channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
    params:
      application_id: int
      localize: bool
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
    params:
      application_ids: list[int]
      localize: bool
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: subscription_plans
    params:
      sku_id: int
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: subscription_plans
    params:
      sku_ids: list[int]
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: EULA
    params:
      eula_id: int
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
    params:
      branch_ids: list[int]
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier_mapping
    params:
      price_tier: int
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: mentions
    params:
      limit: int
      before: Union[Snowflake, datetime]
      guild: Guild
      roles: bool
      everyone: bool
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: deleted_mention
    params:
      message: abc.Snowflake
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhook_id
    params:
      application: Application
      channel: TextChannel
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: leave_status
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: unverified_application
    params:
      name: str
      icon: File
      os: OperatingSystem
      executable: str
      publisher: str
      distributor: Distributor
      sku: str
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
    params:
      with_guild_experiments: bool
- name: user_experiment
  endpoint:
    path: /user/experiment
    method: GET
    data_selector: data
    params: {}
- name: guild_experiment
  endpoint:
    path: /guild/experiment
    method: GET
    data_selector: data
    params: {}
- name: AudioSource
  endpoint:
    path: /AudioSource
    method: GET
    data_selector: audio_stream
- name: PCMAudio
  endpoint:
    path: /PCMAudio
    method: GET
    data_selector: raw_pcm_audio
- name: FFmpegAudio
  endpoint:
    path: /FFmpegAudio
    method: GET
    data_selector: ffmpeg_audio_source
- name: FFmpegPCMAudio
  endpoint:
    path: /FFmpegPCMAudio
    method: GET
    data_selector: ffmpeg_pcm_audio_source
- name: FFmpegOpusAudio
  endpoint:
    path: /FFmpegOpusAudio
    method: GET
    data_selector: ffmpeg_opus_audio_source
- name: invite_create
  endpoint:
    path: /invite/create
    method: POST
    data_selector: invite
    params: {}
- name: invite_delete
  endpoint:
    path: /invite/delete
    method: DELETE
    data_selector: invite
    params: {}
- name: guild_feature_ack
  endpoint:
    path: /guild/feature/ack
    method: POST
    data_selector: payload
    params: {}
- name: integration_create
  endpoint:
    path: /integration/create
    method: POST
    data_selector: integration
    params: {}
- name: integration_update
  endpoint:
    path: /integration/update
    method: PUT
    data_selector: integration
    params: {}
- name: guild_integrations_update
  endpoint:
    path: /guild/integrations/update
    method: PATCH
    data_selector: guild
    params: {}
- name: webhooks_update
  endpoint:
    path: /webhooks/update
    method: PATCH
    data_selector: channel
    params: {}
- name: raw_integration_delete
  endpoint:
    path: /integration/delete
    method: DELETE
    data_selector: payload
    params: {}
- name: interaction
  endpoint:
    path: /interaction
    method: POST
    data_selector: interaction
    params: {}
- name: interaction_finish
  endpoint:
    path: /interaction/finish
    method: POST
    data_selector: interaction
    params: {}
- name: modal
  endpoint:
    path: /modal
    method: POST
    data_selector: modal
    params: {}
- name: member_join
  endpoint:
    path: /member/join
    method: POST
    data_selector: member
    params: {}
- name: member_remove
  endpoint:
    path: /member/remove
    method: DELETE
    data_selector: member
    params: {}
- name: raw_member_remove
  endpoint:
    path: /member/remove/raw
    method: DELETE
    data_selector: payload
    params: {}
- name: member_update
  endpoint:
    path: /member/update
    method: PATCH
    data_selector: before, after
    params: {}
- name: user_update
  endpoint:
    path: /user/update
    method: PATCH
    data_selector: before, after
    params: {}
- name: member_ban
  endpoint:
    path: /guild/ban
    method: POST
    data_selector: guild, user
    params: {}
- name: member_unban
  endpoint:
    path: /guild/unban
    method: POST
    data_selector: guild, user
    params: {}
- name: presence_update
  endpoint:
    path: /presence/update
    method: PATCH
    data_selector: before, after
    params: {}
- name: raw_member_list_update
  endpoint:
    path: /member/list/update
    method: POST
    data_selector: data
    params: {}
- name: message
  endpoint:
    path: /message
    method: POST
    data_selector: message
    params: {}
- name: message_edit
  endpoint:
    path: /message/edit
    method: PATCH
    data_selector: before, after
    params: {}
- name: message_delete
  endpoint:
    path: /message/delete
    method: DELETE
    data_selector: message
    params: {}
- name: bulk_message_delete
  endpoint:
    path: /messages/delete/bulk
    method: DELETE
    data_selector: messages
    params: {}
- name: message_ack
  endpoint:
    path: /message/ack
    method: POST
    data_selector: message, manual
    params: {}
- name: raw_message_edit
  endpoint:
    path: /message/edit/raw
    method: PATCH
    data_selector: payload
    params: {}
- name: raw_message_delete
  endpoint:
    path: /message/delete/raw
    method: DELETE
    data_selector: payload
    params: {}
- name: raw_bulk_message_delete
  endpoint:
    path: /messages/delete/bulk/raw
    method: DELETE
    data_selector: payload
    params: {}
- name: raw_message_ack
  endpoint:
    path: /message/ack/raw
    method: POST
    data_selector: payload
    params: {}
- name: recent_mention_delete
  endpoint:
    path: /mention/delete/recent
    method: DELETE
    data_selector: message
    params: {}
- name: raw_recent_mention_delete
  endpoint:
    path: /mention/delete/recent/raw
    method: DELETE
    data_selector: message_id
    params: {}
- name: poll_vote_add
  endpoint:
    path: /poll/vote/add
    method: POST
    data_selector: user, answer
    params: {}
- name: poll_vote_remove
  endpoint:
    path: /poll/vote/remove
    method: DELETE
    data_selector: user, answer
    params: {}
- name: raw_poll_vote_add
  endpoint:
    path: /poll/vote/add/raw
    method: POST
    data_selector: payload
    params: {}
- name: raw_poll_vote_remove
  endpoint:
    path: /poll/vote/remove/raw
    method: DELETE
    data_selector: payload
    params: {}
- name: message_type
  endpoint:
    path: /discord/MessageType
    method: GET
    data_selector: types
    params: {}
- name: invite_type
  endpoint:
    path: /discord/InviteType
    method: GET
    data_selector: types
    params: {}
- name: user_flags
  endpoint:
    path: /discord/UserFlags
    method: GET
    data_selector: flags
    params: {}
- name: audit_log_diff
  endpoint:
    path: /guilds/{guild_id}/audit-logs
    method: GET
    data_selector: changes
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhooks
    params: {}
- name: guild_settings_update
  endpoint:
    path: /guilds/{guild_id}/settings
    method: GET
    data_selector: settings
- name: payment_sources_update
  endpoint:
    path: /payment/sources
    method: GET
    data_selector: sources
- name: subscriptions_update
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: payment_client_add
  endpoint:
    path: /payment/client
    method: POST
    data_selector: client
- name: payment_update
  endpoint:
    path: /payment
    method: PATCH
    data_selector: payment
- name: premium_guild_subscription_slot_create
  endpoint:
    path: /premium/guild/subscription/slot
    method: POST
    data_selector: slot
- name: premium_guild_subscription_slot_update
  endpoint:
    path: /premium/guild/subscription/slot
    method: PATCH
    data_selector: slot
- name: billing_popup_bridge_callback
  endpoint:
    path: /billing/popup/bridge
    method: POST
    data_selector: callback
- name: library_application_update
  endpoint:
    path: /library/application
    method: PATCH
    data_selector: application
- name: entitlement_create
  endpoint:
    path: /entitlement
    method: POST
    data_selector: entitlement
- name: entitlement_update
  endpoint:
    path: /entitlement
    method: PATCH
    data_selector: entitlement
- name: entitlement_delete
  endpoint:
    path: /entitlement
    method: DELETE
    data_selector: entitlement
- name: gift_create
  endpoint:
    path: /gift
    method: POST
    data_selector: gift
- name: gift_update
  endpoint:
    path: /gift
    method: PATCH
    data_selector: gift
- name: connections_update
  endpoint:
    path: /connections
    method: GET
    data_selector: connections
- name: connection_create
  endpoint:
    path: /connection
    method: POST
    data_selector: connection
- name: connection_update
  endpoint:
    path: /connection
    method: PATCH
    data_selector: connection
- name: relationship_add
  endpoint:
    path: /relationship
    method: POST
    data_selector: relationship
- name: relationship_remove
  endpoint:
    path: /relationship
    method: DELETE
    data_selector: relationship
- name: relationship_update
  endpoint:
    path: /relationship
    method: PATCH
    data_selector: relationship
- name: friend_suggestion_add
  endpoint:
    path: /friend_suggestion
    method: POST
    data_selector: friend_suggestion
- name: friend_suggestion_remove
  endpoint:
    path: /friend_suggestion
    method: DELETE
    data_selector: friend_suggestion
- name: note_update
  endpoint:
    path: /note
    method: PATCH
    data_selector: note
- name: oauth2_token_revoke
  endpoint:
    path: /oauth2/token/revoke
    method: POST
    data_selector: revoke
- name: SyncWebhook
  endpoint:
    path: /webhooks/{guild_id}/{id}
    method: POST
    data_selector: webhook
    params: {}
- name: guild_channel
  endpoint:
    path: /api/guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: invite_create
  endpoint:
    path: /guilds/{guild_id}/invites
    method: POST
    data_selector: invite
- name: invite_delete
  endpoint:
    path: /invites/{invite_code}
    method: DELETE
    data_selector: invite
- name: guild_feature_ack
  endpoint:
    path: /guilds/{guild_id}/features
    method: PUT
    data_selector: payload
- name: integration_create
  endpoint:
    path: /guilds/{guild_id}/integrations
    method: POST
    data_selector: integration
- name: integration_update
  endpoint:
    path: /integrations/{integration_id}
    method: PATCH
    data_selector: integration
- name: guild_integrations_update
  endpoint:
    path: /guilds/{guild_id}/integrations
    method: GET
    data_selector: guild
- name: webhooks_update
  endpoint:
    path: /channels/{channel_id}/webhooks
    method: GET
    data_selector: channel
- name: raw_integration_delete
  endpoint:
    path: /integrations/{integration_id}
    method: DELETE
    data_selector: payload
- name: interaction
  endpoint:
    path: /interactions
    method: POST
    data_selector: interaction
- name: member_join
  endpoint:
    path: /guilds/{guild_id}/members
    method: POST
    data_selector: member
- name: member_remove
  endpoint:
    path: /guilds/{guild_id}/members/{user_id}
    method: DELETE
    data_selector: member
- name: message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: message_edit
  endpoint:
    path: /channels/{channel_id}/messages/{message_id}
    method: PATCH
    data_selector: message
- name: message_delete
  endpoint:
    path: /channels/{channel_id}/messages/{message_id}
    method: DELETE
    data_selector: message
- name: fetch_message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: Message
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: Message
    params:
      limit: 100
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: Message
    params:
      limit: 25
      offset: 0
- name: client_user
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
    params: {}
- name: message_type
  endpoint:
    path: /discord/message_type
    method: GET
    data_selector: messageTypes
- name: invite_type
  endpoint:
    path: /discord/invite_type
    method: GET
    data_selector: inviteTypes
- name: user_flags
  endpoint:
    path: /discord/user_flags
    method: GET
    data_selector: userFlags
- name: audit_log_diff
  endpoint:
    path: /audit-log-diff
    method: GET
    data_selector: attributes
- name: scheduled_event
  endpoint:
    path: /scheduled-events
    method: GET
    data_selector: attributes
- name: note
  endpoint:
    path: /user/note
    method: POST
- name: message
  endpoint:
    path: /user/message
    method: GET
- name: mutual_friends
  endpoint:
    path: /user/mutual_friends
    method: GET
- name: pins
  endpoint:
    path: /user/pins
    method: GET
- name: user_profile
  endpoint:
    path: /user/profile
    method: GET
    data_selector: profile
    params: {}
- name: audit_log_diff
  endpoint:
    path: /guilds/{guild_id}/audit-logs
    method: GET
    data_selector: changes
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 200
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
- name: message
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
- name: thread
  endpoint:
    path: /threads
    method: GET
    data_selector: threads
- name: PrimaryGuild
  endpoint:
    path: /discord/PrimaryGuild
    method: GET
    data_selector: attributes
- name: DisplayNameStyle
  endpoint:
    path: /discord/DisplayNameStyle
    method: GET
    data_selector: attributes
- name: UserAffinity
  endpoint:
    path: /discord/UserAffinity
    method: GET
    data_selector: attributes
- name: GuildAffinity
  endpoint:
    path: /discord/GuildAffinity
    method: GET
    data_selector: attributes
- name: ChannelAffinity
  endpoint:
    path: /discord/ChannelAffinity
    method: GET
    data_selector: attributes
- name: BillingAddress
  endpoint:
    path: /discord/BillingAddress
    method: GET
    data_selector: attributes
- name: PaymentSource
  endpoint:
    path: /discord/PaymentSource
    method: GET
    data_selector: attributes
- name: PremiumUsage
  endpoint:
    path: /discord/PremiumUsage
    method: GET
    data_selector: attributes
- name: webhook
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}
    method: POST
    data_selector: webhook
    params: {}
- name: connection
  endpoint:
    path: /discord/Connection
    method: GET
- name: partial_connection
  endpoint:
    path: /discord/PartialConnection
    method: GET
- name: relationship
  endpoint:
    path: /discord/Relationship
    method: GET
- name: friend_suggestion
  endpoint:
    path: /discord/FriendSuggestion
    method: GET
- name: edit_message
  endpoint:
    path: /edit_message
    method: POST
- name: delete_message
  endpoint:
    path: /delete_message
    method: DELETE
- name: GuildChannel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: user_settings
  endpoint:
    path: /user/settings
    method: GET
    data_selector: settings
    params: {}
- name: invites
  endpoint:
    path: /invites
    method: GET
- name: legacy_user_settings
  endpoint:
    path: /legacy/user/settings
    method: GET
    data_selector: settings
    params: {}
- name: fetch_message
  endpoint:
    path: /fetch_message/{id}
    method: GET
    data_selector: Message
    params: {}
- name: ack
  endpoint:
    path: /ack
    method: POST
    data_selector: None
    params: {}
- name: unack
  endpoint:
    path: /unack
    method: POST
    data_selector: None
    params: {}
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: Message
    params: {}
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: Message
    params:
      limit: 100
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: Message
    params:
      limit: 25
      offset: 0
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
    data_selector: List[Union[SlashCommand, UserCommand, MessageCommand]]
    params: {}
- name: ApplicationCommand
  endpoint:
    path: /application-commands
    method: POST
    data_selector: applicationCommands
    params: {}
- name: ClientUser
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
    params: {}
- name: application
  endpoint:
    path: /applications/@me
    method: GET
    data_selector: application
- name: user_profile
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
- name: skus
  endpoint:
    path: /applications/{application.id}/skus
    method: GET
    data_selector: skus
    params: {}
- name: gift_batches
  endpoint:
    path: /applications/{application.id}/gift-batches
    method: GET
    data_selector: gift_batches
    params: {}
- name: application_profile
  endpoint:
    path: /applications/@me
    method: GET
    data_selector: data
- name: application_bot
  endpoint:
    path: /applications/@me/bot
    method: GET
    data_selector: data
- name: note
  endpoint:
    path: /user/note
    method: GET
    data_selector: note
- name: message
  endpoint:
    path: /user/message/{id}
    method: GET
    data_selector: message
- name: mutual_friends
  endpoint:
    path: /user/mutual_friends
    method: GET
    data_selector: mutual_friends
- name: pins
  endpoint:
    path: /user/pins
    method: GET
    data_selector: pinned_messages
- name: profile
  endpoint:
    path: /user/profile
    method: GET
    data_selector: profile
- name: history
  endpoint:
    path: /user/history
    method: GET
    data_selector: messages
- name: user_profile
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: send_friend_request
  endpoint:
    path: /users/@me/relationships/{user_id}
    method: PUT
    data_selector: friend_request
    params: {}
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: '200'
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: '25'
- name: application_activity_statistics
  endpoint:
    path: /application/activity/statistics
    method: GET
    data_selector: statistics
- name: ProfileMetadata
  endpoint:
    path: /discord/profile_metadata
    method: GET
    data_selector: metadata
- name: application_build
  endpoint:
    path: /applications/{application_id}/builds
    method: GET
- name: application_branch
  endpoint:
    path: /applications/{application_id}/branches
    method: GET
- name: team
  endpoint:
    path: /teams
    method: GET
- name: voice_client
  endpoint:
    path: /voice/connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 30.0
      reconnect: true
- name: dm_channel
  endpoint:
    path: /dm/create
    method: POST
    data_selector: dm_channel
    params: {}
- name: PrimaryGuild
  endpoint:
    path: /discord/PrimaryGuild
    method: GET
    data_selector: attributes
- name: DisplayNameStyle
  endpoint:
    path: /discord/DisplayNameStyle
    method: GET
    data_selector: attributes
- name: UserAffinity
  endpoint:
    path: /discord/UserAffinity
    method: GET
    data_selector: attributes
- name: GuildAffinity
  endpoint:
    path: /discord/GuildAffinity
    method: GET
    data_selector: attributes
- name: ChannelAffinity
  endpoint:
    path: /discord/ChannelAffinity
    method: GET
    data_selector: attributes
- name: BillingAddress
  endpoint:
    path: /discord/BillingAddress
    method: GET
    data_selector: attributes
- name: PaymentSource
  endpoint:
    path: /discord/PaymentSource
    method: GET
    data_selector: attributes
- name: PremiumUsage
  endpoint:
    path: /discord/PremiumUsage
    method: GET
    data_selector: attributes
- name: Connection
  endpoint:
    path: /discord/connection
    method: GET
- name: PartialConnection
  endpoint:
    path: /discord/partial_connection
    method: GET
- name: Relationship
  endpoint:
    path: /discord/relationship
    method: GET
- name: FriendSuggestion
  endpoint:
    path: /discord/friend_suggestion
    method: GET
- name: FriendSuggestionReason
  endpoint: {}
- name: UserSettings
  endpoint: {}
- name: user_settings
  endpoint:
    path: /user/settings
    method: GET
    data_selector: settings
    params: {}
- name: user_settings
  endpoint:
    path: /user/settings
    method: GET
    data_selector: settings
    params: {}
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: team_payout
  endpoint:
    path: /team_payout
    method: GET
    data_selector: payouts
    params: {}
- name: company
  endpoint:
    path: /company
    method: GET
    data_selector: companies
    params: {}
- name: eula
  endpoint:
    path: /eula
    method: GET
    data_selector: eulas
    params: {}
- name: entitlement
  endpoint:
    path: /entitlement
    method: GET
    data_selector: entitlements
    params: {}
- name: gift
  endpoint:
    path: /discord/gifts
    method: GET
    data_selector: gifts
    params: {}
- name: gift_batch
  endpoint:
    path: /discord/gift_batches
    method: GET
    data_selector: gift_batches
    params: {}
- name: activity_statistics
  endpoint:
    path: /applications/{application.id}/activity/statistics
    method: GET
    data_selector: statistics
- name: assets
  endpoint:
    path: /applications/{application.id}/assets
    method: GET
    data_selector: assets
- name: branches
  endpoint:
    path: /applications/{application.id}/branches
    method: GET
    data_selector: branches
- name: create_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: POST
    data_selector: bot
- name: edit
  endpoint:
    path: /applications/{application.id}
    method: PATCH
    data_selector: application
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: PremiumGuildSubscription
  endpoint:
    path: /premium_guild_subscriptions
    method: GET
    data_selector: records
- name: PremiumGuildSubscriptionSlot
  endpoint:
    path: /premium_guild_subscription_slots
    method: GET
    data_selector: records
- name: SubscriptionPlan
  endpoint:
    path: /subscription_plans
    method: GET
    data_selector: records
- name: SubscriptionPlanPrices
  endpoint:
    path: /v10/subscription/plans/prices
    method: GET
    data_selector: country_prices
- name: Payment
  endpoint:
    path: /v10/payments
    method: GET
    data_selector: payments
- name: SKU
  endpoint:
    path: /v10/skus
    method: GET
    data_selector: skus
- name: SKU
  endpoint:
    path: /discord/SKU
    method: GET
    data_selector: records
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: store_listings
- name: uploads
  endpoint:
    path: /uploads/store_asset
    method: POST
    data_selector: created_asset
- name: skus
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    data_selector: primary_sku
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
    data_selector: store_listing_sku
- name: create_sku
  endpoint:
    path: /create_sku
    method: POST
    data_selector: sku_created
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: fetch_entitlement
  endpoint:
    path: /fetch_entitlement/{entitlement_id}
    method: GET
    data_selector: entitlement
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
- name: create_gift_batch
  endpoint:
    path: /create_gift_batch
    method: POST
    data_selector: gift_batch_created
- name: branches
  endpoint:
    path: /branches
    method: GET
    data_selector: branches
- name: create_branch
  endpoint:
    path: /create_branch
    method: POST
    data_selector: branch_created
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
    data_selector: manifest_labels
- name: fetch_discoverability
  endpoint:
    path: /fetch_discoverability
    method: GET
    data_selector: discoverability
- name: fetch_embedded_activity_config
  endpoint:
    path: /fetch_embedded_activity_config
    method: GET
    data_selector: embedded_activity_config
- name: edit_embedded_activity_config
  endpoint:
    path: /edit_embedded_activity_config
    method: PATCH
    data_selector: embedded_activity_config_updated
- name: application_profile
  endpoint:
    path: /applications/@me
    method: GET
    data_selector: data
- name: application_bot
  endpoint:
    path: /applications/@me/bot
    method: GET
    data_selector: data
- name: guild
  endpoint:
    path: /guilds/{guild.id}
    method: GET
    data_selector: guild
    params: {}
- name: application_activity_statistics
  endpoint:
    path: /api/v2/application_activity_statistics
    method: GET
    data_selector: statistics
    params: {}
- name: create_text_channel
  endpoint:
    method: POST
- name: create_voice_channel
  endpoint:
    method: POST
- name: create_stage_channel
  endpoint:
    method: POST
- name: create_category
  endpoint:
    method: POST
- name: create_directory
  endpoint:
    method: POST
- name: application_build
  endpoint:
    path: /applications/{application_id}/builds
    method: GET
    data_selector: builds
- name: application_manifest
  endpoint:
    path: /applications/{application_id}/manifests
    method: GET
    data_selector: manifests
- name: application_team
  endpoint:
    path: /applications/{application_id}/teams
    method: GET
    data_selector: teams
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: team_member
  endpoint:
    path: /team_members
    method: GET
    data_selector: members
- name: voice_client
  endpoint:
    path: /voice/connect
    method: POST
    data_selector: voiceConnection
    params:
      timeout: 30.0
      reconnect: true
- name: dm_channel
  endpoint:
    path: /dm/create
    method: POST
    data_selector: channel
    params: {}
- name: create_directory_channel
  endpoint:
    path: /create_directory_channel
    method: POST
    data_selector: channel
    params: {}
- name: create_forum
  endpoint:
    path: /create_forum
    method: POST
    data_selector: forum
    params: {}
- name: create_forum_channel
  endpoint:
    path: /create_forum_channel
    method: POST
    data_selector: forum_channel
    params: {}
- name: leave
  endpoint:
    path: /leave
    method: POST
    data_selector: guild
    params: {}
- name: delete
  endpoint:
    path: /delete
    method: DELETE
    data_selector: guild
    params: {}
- name: edit
  endpoint:
    path: /edit
    method: PATCH
    data_selector: guild
    params: {}
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: invite
  endpoint:
    path: /invites/{invite_code}
    method: GET
    data_selector: invite
- name: invite
  endpoint:
    path: /invites/{invite_code}
    method: GET
    data_selector: inviteDetails
- name: sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: POST
    data_selector: sticker
    params:
      incremental: created_at
- name: scheduled_event
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: POST
    data_selector: scheduled_event
    params:
      incremental: start_time
- name: emoji
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: GET
    data_selector: emojis
    params: {}
- name: role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
    params: {}
- name: change_presence
  endpoint:
    path: /client/change_presence
    method: POST
    data_selector: result
    params: {}
- name: fetch_guilds
  endpoint:
    path: /client/fetch_guilds
    method: GET
    data_selector: guilds
    params:
      with_counts: true
- name: fetch_invite
  endpoint:
    path: /client/fetch_invite
    method: GET
    data_selector: invite
    params:
      with_counts: true
- name: automod_rules
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: fetch_automod_rule
  endpoint:
    path: /automod/rules/{automod_rule_id}
    method: GET
    data_selector: rule
- name: create_automod_rule
  endpoint:
    path: /automod/rules
    method: POST
    data_selector: rule
- name: admin_community_eligibility
  endpoint:
    path: /admin/community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /admin/community/join
    method: POST
    data_selector: community
- name: migrate_command_scope
  endpoint:
    path: /command/scope/migrate
    method: POST
    data_selector: migrate
- name: directory_broadcast_eligibility
  endpoint:
    path: /directory/broadcast/eligibility
    method: GET
    data_selector: broadcast_eligibility
- name: fetch_widget
  endpoint:
    path: /fetch_widget
    method: GET
    data_selector: widget
- name: fetch_user
  endpoint:
    path: /fetch_user
    method: GET
    data_selector: user
- name: fetch_user_profile
  endpoint:
    path: /fetch_user_profile
    method: GET
    data_selector: profile
- name: fetch_channel
  endpoint:
    path: /fetch_channel
    method: GET
    data_selector: channel
- name: fetch_webhook
  endpoint:
    path: /fetch_webhook
    method: GET
    data_selector: webhook
- name: fetch_sticker
  endpoint:
    path: /fetch_sticker
    method: GET
    data_selector: sticker
- name: sticker_packs
  endpoint:
    path: /sticker_packs
    method: GET
    data_selector: stickerPacks
- name: fetch_notes
  endpoint:
    path: /fetch_notes
    method: GET
    data_selector: notes
- name: fetch_connections
  endpoint:
    path: /fetch_connections
    method: GET
    data_selector: connections
- name: fetch_private_channels
  endpoint:
    path: /fetch_private_channels
    method: GET
    data_selector: privateChannels
- name: fetch_settings
  endpoint:
    path: /fetch_settings
    method: GET
    data_selector: settings
- name: ban_entry
  endpoint:
    path: /bans
    method: GET
    data_selector: bans
    params: {}
- name: bulk_ban_result
  endpoint:
    path: /bulk_ban
    method: POST
    data_selector: bulkBanResult
    params: {}
- name: scheduled_event
  endpoint:
    path: /scheduled-events
    method: GET
    data_selector: events
- name: role
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
- name: team
  endpoint:
    path: /create_team
    method: POST
    data_selector: Team
- name: application
  endpoint:
    path: /create_application
    method: POST
    data_selector: Application
- name: company
  endpoint:
    path: /search_companies
    method: POST
    data_selector: Company
- name: payment_source
  endpoint:
    path: /fetch_payment_source
    method: GET
    data_selector: PaymentSource
- name: subscription
  endpoint:
    path: /fetch_subscription
    method: GET
    data_selector: Subscription
- name: member
  endpoint:
    path: /members
    method: GET
    data_selector: members
    params: {}
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
    data_selector: mutual_friends
- name: fetch_note
  endpoint:
    path: /fetch_note
    method: GET
    data_selector: note
- name: delete_note
  endpoint:
    path: /delete_note
    method: DELETE
- name: connect
  endpoint:
    path: /connect
    method: POST
- name: ban
  endpoint:
    path: /ban
    method: POST
- name: unban
  endpoint:
    path: /unban
    method: POST
- name: kick
  endpoint:
    path: /kick
    method: POST
- name: edit
  endpoint:
    path: /edit
    method: PATCH
- name: promotions
  endpoint:
    path: /promotions
    method: GET
    data_selector: promotions
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: user_offer
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: trial_offer
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: pricing_promotion
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: library
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: authorizations
- name: fetch_authorization
  endpoint:
    path: /fetch_authorization
    method: GET
    data_selector: authorization
- name: create_authorization
  endpoint:
    path: /create_authorization
    method: POST
    data_selector: authorization
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
    data_selector: giftable_entitlements
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
    data_selector: premium_entitlements
- name: fetch_entitlements
  endpoint:
    path: /fetch_entitlements
    method: GET
    data_selector: entitlements
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
    data_selector: gift
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
    data_selector: sku
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
    data_selector: store_listing
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
    data_selector: store_listing
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
    data_selector: store_listings
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
    params:
      application_id: int
      localize: bool
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
    params:
      application_ids: int
      localize: bool
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: subscription_plans
    params:
      sku_id: int
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: subscription_plans
    params:
      sku_ids: int
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: EULA
    params:
      eula_id: int
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
    params:
      branch_ids: int
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier_mapping
    params:
      price_tier: int
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: recent_mentions
    params:
      limit: int
      before: Union[Snowflake, datetime.datetime]
      guild: Guild
      roles: bool
      everyone: bool
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: acknowledged_message
    params:
      message: abc.Snowflake
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhook_id
    params:
      application: Application
      channel: TextChannel
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: leave_status
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: reported_application
    params:
      name: str
      icon: File
      os: OperatingSystem
      executable: str
      publisher: str
      distributor: Distributor
      sku: str
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiment_rollouts
    params:
      with_guild_experiments: bool
- name: guild_avatar_decoration
  endpoint:
    path: /guild_avatar_decoration
    method: GET
    data_selector: Asset
- name: guild_avatar_decoration_expires_at
  endpoint:
    path: /guild_avatar_decoration_expires_at
    method: GET
    data_selector: datetime.datetime
- name: guild_avatar_decoration_sku_id
  endpoint:
    path: /guild_avatar_decoration_sku_id
    method: GET
    data_selector: int
- name: guild_banner
  endpoint:
    path: /guild_banner
    method: GET
    data_selector: Asset
- name: guild_permissions
  endpoint:
    path: /guild_permissions
    method: GET
    data_selector: Permissions
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: Message
- name: id
  endpoint:
    path: /id
    method: GET
    data_selector: User.id
- name: is_blocked
  endpoint:
    path: /is_blocked
    method: GET
    data_selector: bool
- name: is_blocker
  endpoint:
    path: /is_blocker
    method: GET
    data_selector: bool
- name: is_friend
  endpoint:
    path: /is_friend
    method: GET
    data_selector: bool
- name: is_on_mobile
  endpoint:
    path: /is_on_mobile
    method: GET
    data_selector: bool
- name: is_pomelo
  endpoint:
    path: /is_pomelo
    method: GET
    data_selector: bool
- name: is_timed_out
  endpoint:
    path: /is_timed_out
    method: GET
    data_selector: bool
- name: mention
  endpoint:
    path: /mention
    method: GET
    data_selector: str
- name: mobile_status
  endpoint:
    path: /mobile_status
    method: GET
    data_selector: Status
- name: mutual_friends_count
  endpoint:
    path: /mutual_friends_count
    method: GET
    data_selector: int
- name: name
  endpoint:
    path: /name
    method: GET
    data_selector: User.name
- name: premium
  endpoint:
    path: /premium
    method: GET
    data_selector: bool
- name: public_flags
  endpoint:
    path: /public_flags
    method: GET
    data_selector: User.public_flags
- name: raw_status
  endpoint:
    path: /raw_status
    method: GET
    data_selector: str
- name: relationship
  endpoint:
    path: /relationship
    method: GET
    data_selector: User.relationship
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: list
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
    data_selector: result
    params: {}
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
    data_selector: hubs
    params: {}
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
    data_selector: joined_hub
    params: {}
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
    data_selector: suggested_username
    params: {}
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
    data_selector: is_taken
    params: {}
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
    data_selector: recent_avatars
    params: {}
- name: send
  endpoint:
    path: /send
    method: POST
- name: unack
  endpoint:
    path: /unack
    method: POST
- name: unban
  endpoint:
    path: /unban
    method: POST
- name: unblock
  endpoint:
    path: /unblock
    method: POST
- name: AudioSource
  endpoint:
    path: /discord/audiosource
    method: GET
    data_selector: records
- name: PCMAudio
  endpoint:
    path: /discord/pcmaudio
    method: GET
    data_selector: records
- name: FFmpegAudio
  endpoint:
    path: /discord/ffmpegaudio
    method: GET
    data_selector: records
- name: FFmpegPCMAudio
  endpoint:
    path: /discord/ffmpegpcmaudio
    method: GET
    data_selector: records
- name: FFmpegOpusAudio
  endpoint:
    path: /discord/ffmpegopusaudio
    method: GET
    data_selector: records
- name: PartialEmoji
  endpoint:
    path: /discord/PartialEmoji
    method: GET
    data_selector: records
- name: Sticker
  endpoint:
    path: /discord/Sticker
    method: GET
    data_selector: records
- name: StickerItem
  endpoint:
    path: /discord/StickerItem
    method: GET
    data_selector: records
- name: StickerPack
  endpoint:
    path: /discord/StickerPack
    method: GET
    data_selector: records
- name: StandardSticker
  endpoint:
    path: /discord/StandardSticker
    method: GET
    data_selector: records
- name: guild_sticker
  endpoint:
    path: /guilds/{guild.id}/stickers/{sticker.id}
    method: GET
    data_selector: sticker
- name: category_channel
  endpoint:
    path: /guilds/{guild.id}/channels/{channel.id}
    method: GET
    data_selector: channel
- name: text_channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: channel
    params: {}
- name: guild_settings_update
  endpoint:
    path: /guilds/settings/update
    method: POST
    data_selector: settings
    params: {}
- name: payment_sources_update
  endpoint:
    path: /payment/sources/update
    method: POST
    data_selector: payment_sources
    params: {}
- name: subscriptions_update
  endpoint:
    path: /subscriptions/update
    method: POST
    data_selector: subscriptions
    params: {}
- name: payment_client_add
  endpoint:
    path: /payment/client/add
    method: POST
    data_selector: payment_client
    params: {}
- name: billing_popup_bridge_callback
  endpoint:
    path: /billing/popup/bridge/callback
    method: POST
    data_selector: callback
    params: {}
- name: entitlement_create
  endpoint:
    path: /entitlements/create
    method: POST
    data_selector: entitlement
    params: {}
- name: gift_create
  endpoint:
    path: /gifts/create
    method: POST
    data_selector: gift
    params: {}
- name: connections_update
  endpoint:
    path: /connections/update
    method: POST
    data_selector: connections
    params: {}
- name: relationship_update
  endpoint:
    path: /relationships/update
    method: POST
    data_selector: relationship
    params: {}
- name: note_update
  endpoint:
    path: /notes/update
    method: POST
    data_selector: note
    params: {}
- name: oauth2_token_revoke
  endpoint:
    path: /oauth2/token/revoke
    method: POST
    data_selector: token_revoke
    params: {}
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: message
    params: {}
- name: partial_message
  endpoint:
    path: /messages/{message_id}/partial
    method: GET
    data_selector: partial_message
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
    params: {}
- name: invite_create
  endpoint:
    path: /invite/create
    method: POST
    data_selector: invite
- name: invite_delete
  endpoint:
    path: /invite/delete
    method: DELETE
    data_selector: invite
- name: guild_feature_ack
  endpoint:
    path: /guild/feature/ack
    method: POST
    data_selector: payload
- name: integration_create
  endpoint:
    path: /integration/create
    method: POST
    data_selector: integration
- name: integration_update
  endpoint:
    path: /integration/update
    method: PATCH
    data_selector: integration
- name: guild_integrations_update
  endpoint:
    path: /guild/integrations/update
    method: PATCH
    data_selector: guild
- name: webhooks_update
  endpoint:
    path: /webhooks/update
    method: PATCH
    data_selector: channel
- name: raw_integration_delete
  endpoint:
    path: /raw/integration/delete
    method: DELETE
    data_selector: payload
- name: interaction
  endpoint:
    path: /interaction
    method: POST
    data_selector: interaction
- name: interaction_finish
  endpoint:
    path: /interaction/finish
    method: POST
    data_selector: interaction
- name: modal
  endpoint:
    path: /modal
    method: POST
    data_selector: modal
- name: member_join
  endpoint:
    path: /member/join
    method: POST
    data_selector: member
- name: member_remove
  endpoint:
    path: /member/remove
    method: DELETE
    data_selector: member
- name: raw_member_remove
  endpoint:
    path: /raw/member/remove
    method: DELETE
    data_selector: payload
- name: member_update
  endpoint:
    path: /member/update
    method: PATCH
    data_selector: before, after
- name: user_update
  endpoint:
    path: /user/update
    method: PATCH
    data_selector: before, after
- name: member_ban
  endpoint:
    path: /member/ban
    method: POST
    data_selector: guild, user
- name: member_unban
  endpoint:
    path: /member/unban
    method: POST
    data_selector: guild, user
- name: presence_update
  endpoint:
    path: /presence/update
    method: PATCH
    data_selector: before, after
- name: raw_member_list_update
  endpoint:
    path: /raw/member/list/update
    method: POST
    data_selector: data
- name: message
  endpoint:
    path: /message
    method: POST
    data_selector: message
- name: message_edit
  endpoint:
    path: /message/edit
    method: PATCH
    data_selector: before, after
- name: message_delete
  endpoint:
    path: /message/delete
    method: DELETE
    data_selector: message
- name: bulk_message_delete
  endpoint:
    path: /bulk/message/delete
    method: DELETE
    data_selector: messages
- name: message_ack
  endpoint:
    path: /message/ack
    method: POST
    data_selector: message, manual
- name: raw_message_edit
  endpoint:
    path: /raw/message/edit
    method: PATCH
    data_selector: payload
- name: raw_message_delete
  endpoint:
    path: /raw/message/delete
    method: DELETE
    data_selector: payload
- name: raw_bulk_message_delete
  endpoint:
    path: /raw/bulk/message/delete
    method: DELETE
    data_selector: payload
- name: raw_message_ack
  endpoint:
    path: /raw/message/ack
    method: POST
    data_selector: payload
- name: recent_mention_delete
  endpoint:
    path: /recent/mention/delete
    method: DELETE
    data_selector: message
- name: raw_recent_mention_delete
  endpoint:
    path: /raw/recent/mention/delete
    method: DELETE
    data_selector: message_id
- name: poll_vote_add
  endpoint:
    path: /poll/vote/add
    method: POST
    data_selector: user, answer
- name: poll_vote_remove
  endpoint:
    path: /poll/vote/remove
    method: DELETE
    data_selector: user, answer
- name: raw_poll_vote_add
  endpoint:
    path: /raw/poll/vote/add
    method: POST
    data_selector: payload
- name: raw_poll_vote_remove
  endpoint:
    path: /raw/poll/vote/remove
    method: DELETE
    data_selector: payload
- name: voice_states
  endpoint:
    path: /voice_states
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: reaction_add
  endpoint:
    path: /reaction/add
    method: POST
    data_selector: payload
    params: {}
- name: reaction_remove
  endpoint:
    path: /reaction/remove
    method: POST
    data_selector: payload
    params: {}
- name: reaction_clear
  endpoint:
    path: /reaction/clear
    method: POST
    data_selector: payload
    params: {}
- name: reaction_clear_emoji
  endpoint:
    path: /reaction/clear_emoji
    method: POST
    data_selector: payload
    params: {}
- name: raw_reaction_add
  endpoint:
    path: /raw/reaction/add
    method: POST
    data_selector: payload
    params: {}
- name: raw_reaction_remove
  endpoint:
    path: /raw/reaction/remove
    method: POST
    data_selector: payload
    params: {}
- name: raw_reaction_clear
  endpoint:
    path: /raw/reaction/clear
    method: POST
    data_selector: payload
    params: {}
- name: raw_reaction_clear_emoji
  endpoint:
    path: /raw/reaction/clear_emoji
    method: POST
    data_selector: payload
    params: {}
- name: read_state
  endpoint:
    path: /read_state
    method: GET
    data_selector: read_state
- name: scheduled_events
  endpoint:
    path: /scheduled_events
    method: GET
    data_selector: scheduled_events
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: commands
- name: directory_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: entries
- name: create_thread
  endpoint:
    path: /threads
    method: POST
    data_selector: thread
    params: {}
- name: archived_threads
  endpoint:
    path: /threads/archived
    method: GET
    data_selector: threads
    params:
      limit: 100
- name: create_invite
  endpoint:
    path: /invites
    method: POST
    data_selector: invite
    params: {}
- name: sticker_picker_section
  endpoint:
    path: /sticker_picker_section
    method: GET
- name: theme
  endpoint:
    path: /theme
    method: GET
- name: locale
  endpoint:
    path: /locale
    method: GET
- name: mfa_level
  endpoint:
    path: /mfa_level
    method: GET
- name: entity_type
  endpoint:
    path: /entity_type
    method: GET
- name: event_status
  endpoint:
    path: /event_status
    method: GET
- name: required_action_type
  endpoint:
    path: /required_action_type
    method: GET
- name: connection_type
  endpoint:
    path: /connection_type
    method: GET
- name: client_type
  endpoint:
    path: /client_type
    method: GET
- name: gift_style
  endpoint:
    path: /gift_style
    method: GET
- name: interaction_type
  endpoint:
    path: /interaction_type
    method: GET
- name: component_type
  endpoint:
    path: /component_type
    method: GET
- name: button_style
  endpoint:
    path: /button_style
    method: GET
- name: text_style
  endpoint:
    path: /text_style
    method: GET
- name: application_command_type
  endpoint:
    path: /application_command_type
    method: GET
- name: application_command_option_type
  endpoint:
    path: /application_command_option_type
    method: GET
- name: permissions_synced
  endpoint:
    path: /permissions/synced
    method: GET
    data_selector: permissions_synced
    params: {}
- name: set_permissions
  endpoint:
    path: /permissions/set
    method: POST
    data_selector: set_permissions
    params: {}
- name: AuditLogDiff
  endpoint:
    path: /audit-log/diff
    method: GET
    data_selector: changes
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
- name: requested_at
  endpoint:
    path: /discord/DMChannel/requested_at
    method: GET
- name: is_message_request
  endpoint:
    path: /discord/DMChannel/is_message_request
    method: GET
- name: is_accepted
  endpoint:
    path: /discord/DMChannel/is_accepted
    method: GET
- name: is_spam
  endpoint:
    path: /discord/DMChannel/is_spam
    method: GET
- name: permissions_for
  endpoint:
    path: /discord/DMChannel/permissions_for
    method: GET
- name: add_recipients
  endpoint:
    path: /discord/DMChannel/add_recipients
    method: POST
- name: close
  endpoint:
    path: /discord/DMChannel/close
    method: DELETE
- name: connect
  endpoint:
    path: /discord/DMChannel/connect
    method: POST
- name: accept
  endpoint:
    path: /discord/DMChannel/accept
    method: POST
- name: decline
  endpoint:
    path: /discord/DMChannel/decline
    method: POST
- name: ack
  endpoint:
    path: /discord/DMChannel/ack
    method: POST
- name: ack_pins
  endpoint:
    path: /discord/DMChannel/ack_pins
    method: POST
- name: application_commands
  endpoint:
    path: /discord/DMChannel/application_commands
    method: GET
- name: fetch_message
  endpoint:
    path: /discord/DMChannel/fetch_message
    method: GET
- name: greet
  endpoint:
    path: /discord/DMChannel/greet
    method: POST
- name: history
  endpoint:
    path: /discord/DMChannel/history
    method: GET
- name: pins
  endpoint:
    path: /discord/DMChannel/pins
    method: GET
- name: search
  endpoint:
    path: /discord/DMChannel/search
    method: GET
- name: SyncWebhook
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}
    method: POST
    data_selector: webhook
    params: {}
- name: guild_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: invites
  endpoint:
    path: /invites
    method: GET
- name: slash_commands
  endpoint:
    path: /applications/{application_id}/guilds/{guild_id}/commands
    method: GET
- name: user_commands
  endpoint:
    path: /users/@me/commands
    method: GET
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
      cls: VoiceClient
      ring: true
- name: ack
  endpoint:
    path: /ack
    method: POST
    data_selector: ack_response
    params: {}
- name: ack_pins
  endpoint:
    path: /ack_pins
    method: POST
    data_selector: ack_pins_response
    params: {}
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
    data_selector: commands
    params: {}
- name: fetch_message
  endpoint:
    path: /fetch_message/{id}
    method: GET
    data_selector: message
    params: {}
- name: greet
  endpoint:
    path: /greet
    method: POST
    data_selector: greet_response
    params: {}
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: search_results
    params:
      limit: 25
      offset: 0
- name: fetch_message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: Message
    params: {}
- name: ack
  endpoint:
    path: /channels/{channel_id}/messages/ack
    method: POST
    data_selector: None
    params: {}
- name: unack
  endpoint:
    path: /channels/{channel_id}/messages/unack
    method: POST
    data_selector: None
    params: {}
- name: ack_pins
  endpoint:
    path: /channels/{channel_id}/messages/ack_pins
    method: POST
    data_selector: None
    params: {}
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: List[Message]
    params: {}
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: fetch_message
  endpoint:
    path: /channels/{channel_id}/messages/{message_id}
    method: GET
    data_selector: message
    params: {}
- name: user
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
- name: slash_commands
  endpoint:
    path: /slash/commands
    method: GET
    data_selector: commands
- name: user_note
  endpoint:
    path: /user/note
    method: GET
    data_selector: note
- name: mutual_friends
  endpoint:
    path: /user/mutual_friends
    method: GET
    data_selector: mutual_friends
- name: message_history
  endpoint:
    path: /channel/history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pinned_messages
  endpoint:
    path: /channel/pins
    method: GET
    data_selector: pinned_messages
- name: user_profile
  endpoint:
    path: /user/profile
    method: GET
    data_selector: profile
- name: search_messages
  endpoint:
    path: /messages/search
    method: GET
    data_selector: messages
    params:
      slop: 2
- name: send_message
  endpoint:
    path: /messages/send
    method: POST
    data_selector: message
    params: {}
- name: user_profile
  endpoint:
    path: /user/profile
    method: GET
    data_selector: profile
    params: {}
- name: stage_instance
  endpoint:
    path: /stage-instances
    method: GET
    data_selector: stage_instances
- name: private_call
  endpoint:
    path: /private-calls
    method: GET
    data_selector: private_calls
- name: group_call
  endpoint:
    path: /group-calls
    method: GET
    data_selector: group_calls
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    params:
      limit: 200
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    params:
      limit: 25
- name: message
  endpoint:
    path: /discord/api/v1/messages
    method: GET
    data_selector: messages
- name: partial_message
  endpoint:
    path: /discord/PartialMessage
    method: GET
    data_selector: messages
    params: {}
- name: user_settings
  endpoint:
    path: /users/@me/settings
    method: GET
    data_selector: settings
    params: {}
- name: File
  endpoint:
    path: /discord/File
    method: POST
    data_selector: file
    params: {}
- name: CloudFile
  endpoint:
    path: /discord/CloudFile
    method: POST
    data_selector: cloud_file
    params: {}
- name: Payment
  endpoint:
    path: /discord/Payment
    method: POST
    data_selector: payment
    params: {}
- name: current_game
  endpoint:
    path: /show_current_game
    method: GET
    data_selector: show_current_game
- name: stream_notifications
  endpoint:
    path: /stream_notifications_enabled
    method: GET
    data_selector: stream_notifications_enabled
- name: timezone_offset
  endpoint:
    path: /timezone_offset
    method: GET
    data_selector: timezone_offset
- name: view_nsfw_commands
  endpoint:
    path: /view_nsfw_commands
    method: GET
    data_selector: view_nsfw_commands
- name: view_nsfw_guilds
  endpoint:
    path: /view_nsfw_guilds
    method: GET
    data_selector: view_nsfw_guilds
- name: SKU
  endpoint:
    path: /discord/sku
    method: GET
    data_selector: records
- name: SKUPrice
  endpoint:
    path: /discord/SKUPrice
    method: GET
    data_selector: records
- name: StoreListing
  endpoint:
    path: /discord/StoreListing
    method: GET
    data_selector: records
- name: StoreAsset
  endpoint:
    path: /discord/StoreAsset
    method: GET
    data_selector: records
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: channels
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: threads
  endpoint:
    path: /guilds/{guild_id}/threads
    method: GET
    data_selector: threads
- name: members
  endpoint:
    path: /guilds/{guild_id}/members
    method: GET
    data_selector: members
- name: store_asset_upload
  endpoint:
    path: /uploads/store_asset
    method: POST
    data_selector: created_asset
- name: skus
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    data_selector: primary_sku
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
    data_selector: store_listing_sku
- name: create_sku
  endpoint:
    path: /skus
    method: POST
    data_selector: sku_created
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: fetch_entitlement
  endpoint:
    path: /entitlements/{entitlement_id}
    method: GET
    data_selector: entitlement
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
- name: create_gift_batch
  endpoint:
    path: /gift_batches
    method: POST
    data_selector: gift_batch_created
- name: branches
  endpoint:
    path: /branches
    method: GET
    data_selector: branches
- name: create_branch
  endpoint:
    path: /branches
    method: POST
    data_selector: branch_created
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
    data_selector: manifest_labels
- name: fetch_discoverability
  endpoint:
    path: /discoverability
    method: GET
    data_selector: discoverability
- name: fetch_embedded_activity_config
  endpoint:
    path: /embedded_activity_config
    method: GET
    data_selector: embedded_activity_config
- name: edit_embedded_activity_config
  endpoint:
    path: /embedded_activity_config
    method: PATCH
    data_selector: embedded_activity_config_updated
- name: create_text_channel
  endpoint:
    path: /create_text_channel
    method: POST
    data_selector: channel
    params: {}
- name: create_voice_channel
  endpoint:
    path: /create_voice_channel
    method: POST
    data_selector: channel
    params: {}
- name: create_stage_channel
  endpoint:
    path: /create_stage_channel
    method: POST
    data_selector: channel
    params: {}
- name: create_category
  endpoint:
    path: /create_category
    method: POST
    data_selector: channel
    params: {}
- name: create_directory
  endpoint:
    path: /create_directory
    method: POST
    data_selector: channel
    params: {}
- name: bans
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: bans
- name: fetch_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: channel
- name: fetch_member
  endpoint:
    path: /guilds/{guild_id}/members/{member_id}
    method: GET
    data_selector: member
- name: application
  endpoint:
    path: /applications
    method: GET
    data_selector: data
- name: bans
  endpoint:
    params:
      limit: 1000
- name: search
  endpoint:
    params:
      limit: 25
      offset: 0
      most_relevant: false
- name: application_activity_statistics
  endpoint:
    path: /application/activity/statistics
    method: GET
    data_selector: records
- name: application_build
  endpoint:
    path: /discord/application/builds
    method: GET
- name: application_branch
  endpoint:
    path: /discord/application/branches
    method: GET
- name: manifest
  endpoint:
    path: /discord/manifests
    method: GET
- name: team
  endpoint:
    path: /discord/teams
    method: GET
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: team_member
  endpoint:
    path: /teams/{team_id}/members
    method: GET
    data_selector: members
- name: member
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
    params: {}
- name: application
  endpoint:
    path: /create_application
    method: POST
- name: team
  endpoint:
    path: /create_team
    method: POST
- name: companies
  endpoint:
    path: /search_companies
    method: GET
- name: company
  endpoint:
    path: /fetch_company
    method: GET
- name: activity_statistics
  endpoint:
    path: /activity_statistics
    method: GET
- name: global_activity_statistics
  endpoint:
    path: /global_activity_statistics
    method: GET
- name: payment_sources
  endpoint:
    path: /payment_sources
    method: GET
- name: payment_source
  endpoint:
    path: /fetch_payment_source
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: premium_guild_subscriptions
  endpoint:
    path: /premium_guild_subscriptions
    method: GET
- name: premium_guild_subscription_slots
  endpoint:
    path: /premium_guild_subscription_slots
    method: GET
- name: premium_guild_subscription_cooldown
  endpoint:
    path: /premium_guild_subscription_cooldown
    method: GET
- name: subscription
  endpoint:
    path: /fetch_subscription
    method: GET
- name: payments
  endpoint:
    path: /payments
    method: GET
- name: payment
  endpoint:
    path: /fetch_payment
    method: GET
- name: promotions
  endpoint:
    path: /promotions
    method: GET
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: send_friend_request
  endpoint:
    path: /users/@me/friends
    method: POST
    data_selector: friend_request
    params: {}
- name: slash_commands
  endpoint:
    path: /applications/{application_id}/guilds/{guild_id}/commands
    method: GET
    data_selector: commands
    params: {}
- name: gift
  endpoint:
    path: /discord/Gift
    method: GET
    data_selector: gifts
    params: {}
- name: gift_batch
  endpoint:
    path: /discord/GiftBatch
    method: GET
    data_selector: gift_batches
    params: {}
- name: library_application
  endpoint:
    path: /discord/LibraryApplication
    method: GET
    data_selector: library_applications
    params: {}
- name: promotions
  endpoint:
    path: /promotions
    method: GET
    data_selector: promotions
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: user_offer
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: trial_offer
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: pricing_promotion
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: library
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: authorizations
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
    data_selector: giftable_entitlements
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
    data_selector: premium_entitlements
- name: fetch_entitlements
  endpoint:
    path: /fetch_entitlements
    method: GET
    data_selector: fetch_entitlements
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
    data_selector: gift
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
    data_selector: sku
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
    data_selector: store_listing
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
    data_selector: published_store_listing
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
    data_selector: published_store_listings
- name: Subscription
  endpoint:
    path: /discord/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: SubscriptionTrial
  endpoint:
    path: /discord/SubscriptionTrial
    method: GET
- name: PremiumGuildSubscription
  endpoint:
    path: /discord/PremiumGuildSubscription
    method: GET
- name: PremiumGuildSubscriptionSlot
  endpoint:
    path: /discord/PremiumGuildSubscriptionSlot
    method: GET
- name: PremiumGuildSubscriptionCooldown
  endpoint:
    path: /discord/PremiumGuildSubscriptionCooldown
    method: GET
- name: SubscriptionPlan
  endpoint:
    path: /discord/SubscriptionPlan
    method: GET
- name: primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
- name: subscription_plan_prices
  endpoint:
    path: /v2/subscription/plans/prices
    method: GET
    data_selector: country_prices
    params: {}
- name: payments
  endpoint:
    path: /v2/payments
    method: GET
    data_selector: payments
    params: {}
- name: sku
  endpoint:
    path: /discord/SKU
    method: GET
    data_selector: records
- name: store_listing
  endpoint:
    path: /store/listings
    method: GET
    data_selector: records
- name: sku_price
  endpoint:
    path: /sku/prices
    method: GET
    data_selector: records
- name: poll_vote
  endpoint:
    path: /commands
    method: POST
    data_selector: UserCommand
    params: {}
- name: Metadata
  endpoint:
    path: /discord/metadata
    method: GET
    data_selector: metadata
- name: ReadState
  endpoint:
    path: /discord/readstate
    method: GET
    data_selector: read_states
- name: Asset
  endpoint:
    path: /discord/asset
    method: GET
    data_selector: assets
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: AuditLogDiff
  endpoint:
    path: /audit-log/diff
    method: GET
    data_selector: changes
- name: get_member_named
  endpoint:
    path: /guilds/{guild_id}/members/{name}
    method: GET
- name: create_text_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: POST
- name: create_voice_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: POST
- name: create_stage_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: POST
- name: create_category
  endpoint:
    path: /guilds/{guild_id}/channels
    method: POST
- name: create_category_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: POST
- name: create_directory
  endpoint:
    path: /guilds/{guild_id}/channels
    method: POST
- name: create_directory_channel
  endpoint:
    path: /channels
    method: POST
    data_selector: channel
    params: {}
- name: create_forum
  endpoint:
    path: /channels
    method: POST
    data_selector: forum
    params: {}
- name: create_forum_channel
  endpoint:
    path: /channels
    method: POST
    data_selector: forum_channel
    params: {}
- name: guild_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: search_messages
  endpoint:
    path: /guilds/{guild_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: prune_members
  endpoint:
    path: /guilds/{guild_id}/prune
    method: POST
    data_selector: pruned_count
    params:
      days: 30
- name: webhooks
  endpoint:
    path: /guilds/{guild_id}/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: invites
  endpoint:
    path: /guilds/{guild_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: invites
  endpoint:
    path: /channels/{channel.id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: upload_files
  endpoint:
    path: /channels/{channel.id}/files
    method: POST
    data_selector: uploaded_files
    params: {}
- name: send_message
  endpoint:
    path: /channels/{channel.id}/messages
    method: POST
    data_selector: message
    params: {}
- name: user_commands
  endpoint:
    path: /users/@me/commands
    method: GET
    data_selector: commands
- name: application_commands
  endpoint:
    path: /applications/@me/commands
    method: GET
    data_selector: commands
- name: automod_rules
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: fetch_automod_rule
  endpoint:
    path: /automod/rules/{automod_rule_id}
    method: GET
    data_selector: rule
- name: create_automod_rule
  endpoint:
    path: /automod/rules
    method: POST
    data_selector: rule
- name: admin_community_eligibility
  endpoint:
    path: /admin/community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /admin/community/join
    method: POST
    data_selector: community
- name: migrate_command_scope
  endpoint:
    path: /command/scope/migrate
    method: POST
    data_selector: integration_ids
- name: directory_broadcast_eligibility
  endpoint:
    path: /directory/broadcast/eligibility
    method: GET
    data_selector: eligibility
- name: ban_entry
  endpoint:
    path: /bans
    method: GET
    data_selector: bans
- name: bulk_ban_result
  endpoint:
    path: /bulk_ban
    method: POST
    data_selector: result
- name: role
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    params:
      limit: 200
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    params:
      limit: 25
- name: auto_mod_rule
  endpoint:
    path: /auto_mod/rules
    method: GET
    data_selector: rules
- name: integration_application
  endpoint:
    path: /integration/applications
    method: GET
    data_selector: applications
- name: member
  endpoint:
    path: /discord/api/members
    method: GET
    data_selector: members
    params: {}
- name: user_settings
  endpoint:
    path: /users/@me/settings
    method: GET
    data_selector: settings
    params: {}
- name: mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
    data_selector: mutual_friends
- name: user_note
  endpoint:
    path: /fetch_note
    method: GET
    data_selector: note
- name: delete_user_note
  endpoint:
    path: /delete_note
    method: DELETE
    data_selector: delete_note
- name: user_settings
  endpoint:
    path: /users/@me/settings
    method: GET
    data_selector: settings
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
- name: voice_channel
  endpoint:
    path: /voice_channel
    method: GET
    data_selector: voice_channel
- name: timed_out_until
  endpoint:
    path: /timed_out_until
    method: GET
    data_selector: timed_out_until
- name: avatar
  endpoint:
    path: /avatar
    method: GET
    data_selector: avatar
- name: banner
  endpoint:
    path: /banner
    method: GET
    data_selector: banner
- name: bio
  endpoint:
    path: /bio
    method: GET
    data_selector: bio
- name: bypass_verification
  endpoint:
    path: /bypass_verification
    method: GET
    data_selector: bypass_verification
- name: reason
  endpoint:
    path: /reason
    method: GET
    data_selector: reason
- name: member_profile
  endpoint:
    path: /discord/api/member_profile
    method: GET
    data_selector: member_profiles
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: upload_store_asset
  endpoint:
    path: /uploads/store_asset
    method: POST
    data_selector: asset
- name: retrieve_skus
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
- name: retrieve_primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    data_selector: primary_sku
- name: retrieve_store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
    data_selector: store_listing_sku
- name: create_sku
  endpoint:
    path: /create_sku
    method: POST
    data_selector: sku
- name: fetch_entitlement
  endpoint:
    path: /entitlements/{entitlement_id}
    method: GET
    data_selector: entitlement
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
- name: create_gift_batch
  endpoint:
    path: /create_gift_batch
    method: POST
    data_selector: gift_batch
- name: branches
  endpoint:
    path: /branches
    method: GET
    data_selector: branches
- name: create_branch
  endpoint:
    path: /create_branch
    method: POST
    data_selector: branch
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
    data_selector: manifest_labels
- name: fetch_discoverability
  endpoint:
    path: /discoverability
    method: GET
    data_selector: discoverability
- name: fetch_embedded_activity_config
  endpoint:
    path: /embedded_activity_config
    method: GET
    data_selector: embedded_activity_config
- name: edit_embedded_activity_config
  endpoint:
    path: /edit_embedded_activity_config
    method: PATCH
    data_selector: updated_config
- name: PartialEmoji
  endpoint:
    path: /discord/PartialEmoji
    method: GET
    data_selector: assets
    params: {}
- name: Sticker
  endpoint:
    path: /discord/Sticker
    method: GET
    data_selector: assets
    params: {}
- name: StickerItem
  endpoint:
    path: /discord/StickerItem
    method: GET
    data_selector: assets
    params: {}
- name: StickerPack
  endpoint:
    path: /discord/StickerPack
    method: GET
    data_selector: assets
    params: {}
- name: StandardSticker
  endpoint:
    path: /discord/StandardSticker
    method: GET
    data_selector: assets
    params: {}
- name: application_profile
  endpoint:
    path: /applications/@me
    method: GET
    data_selector: data
- name: application_bot
  endpoint:
    path: /applications/@me/bot
    method: GET
    data_selector: data
- name: GuildSticker
  endpoint:
    path: /guilds/{guild.id}/stickers
    method: GET
    data_selector: stickers
- name: CategoryChannel
  endpoint:
    path: /guilds/{guild.id}/channels
    method: GET
    data_selector: channels
- name: text_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
    params: {}
- name: team_member
  endpoint:
    path: /teams/members
    method: GET
    data_selector: members
    params: {}
- name: notification_settings
  endpoint:
    path: /channels/{channel_id}/notification_settings
    method: GET
    data_selector: settings
- name: overwrites
  endpoint:
    path: /channels/{channel_id}/overwrites
    method: GET
    data_selector: overwrites
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
- name: send
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /channels/{channel_id}/permissions/{target_id}
    method: PUT
    data_selector: permissions
- name: UserCommand
  endpoint:
    path: /commands
    method: GET
    data_selector: commands
- name: DMChannel
  endpoint:
    path: /dm
    method: POST
    data_selector: channel
- name: Message
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
- name: channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: channel
    params: {}
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: Message
- name: partial_message
  endpoint:
    path: /messages/{message_id}/partial
    method: GET
    data_selector: PartialMessage
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: Message
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: Invite
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: Message
- name: purge
  endpoint:
    path: /channels/{channel_id}/messages
    method: DELETE
    data_selector: Message
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params:
      query: null
      limit: null
      command_ids: null
      application: null
      with_applications: true
- name: gift
  endpoint:
    path: /discord/Gift
    method: GET
    data_selector: records
- name: gift_batch
  endpoint:
    path: /discord/GiftBatch
    method: GET
    data_selector: records
- name: library_application
  endpoint:
    path: /discord/LibraryApplication
    method: GET
    data_selector: records
- name: search
  endpoint:
    path: /channel/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /channel/send
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /channel/set_permissions
    method: POST
    data_selector: permissions
    params: {}
- name: voice_states
  endpoint:
    path: /voice_states
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: subscription
  endpoint:
    path: /discord/subscription
    method: GET
    data_selector: records
- name: stage_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: stage_channel
    params: {}
- name: sku
  endpoint:
    path: /discord/sku
    method: GET
    data_selector: records
- name: guild
  endpoint:
    path: /guild
    method: GET
    data_selector: guild
- name: read_state
  endpoint:
    path: /read_state
    method: GET
    data_selector: read_state
- name: scheduled_events
  endpoint:
    path: /scheduled_events
    method: GET
    data_selector: scheduled_events
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: commands
- name: directory_entry
  endpoint:
    path: /fetch_entries
    method: GET
- name: search_entries
  endpoint:
    path: /search_entries
    method: GET
- name: create_entry
  endpoint:
    path: /create_entry
    method: POST
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
- name: delete_channel
  endpoint:
    path: /delete
    method: DELETE
- name: forum_channel
  endpoint:
    path: /discord/forum_channels
    method: GET
    data_selector: records
- name: forum_thread
  endpoint:
    path: /forums/threads
    method: POST
    data_selector: thread
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: permissions_synced
  endpoint:
    path: /permissions/synced
    method: GET
    data_selector: permissions_synced
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: set_permissions
- name: sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
    data_selector: stickers
- name: scheduled_event
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: GET
    data_selector: scheduled_events
- name: emoji
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: GET
    data_selector: emojis
- name: role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
- name: requested_at
  endpoint:
    path: /discord/DMChannel/requested_at
    method: GET
- name: is_message_request
  endpoint:
    path: /discord/DMChannel/is_message_request
    method: GET
- name: is_accepted
  endpoint:
    path: /discord/DMChannel/is_accepted
    method: GET
- name: is_spam
  endpoint:
    path: /discord/DMChannel/is_spam
    method: GET
- name: add_recipients
  endpoint:
    path: /discord/DMChannel/add_recipients
    method: POST
- name: fetch_message
  endpoint:
    path: /discord/DMChannel/fetch_message
    method: GET
- name: pins
  endpoint:
    path: /discord/DMChannel/pins
    method: GET
- name: search
  endpoint:
    path: /discord/DMChannel/search
    method: GET
- name: welcome_screen
  endpoint:
    path: /guilds/{guild_id}/welcome-screen
    method: GET
    data_selector: welcome_screen
    params: {}
- name: applications
  endpoint:
    path: /guilds/{guild_id}/applications
    method: GET
    data_selector: applications
    params: {}
- name: premium_subscriptions
  endpoint:
    path: /guilds/{guild_id}/premium-subscriptions
    method: GET
    data_selector: premium_subscriptions
    params: {}
- name: price_tiers
  endpoint:
    path: /guilds/{guild_id}/price-tiers
    method: GET
    data_selector: price_tiers
    params: {}
- name: members
  endpoint:
    path: /guilds/{guild_id}/members
    method: GET
    data_selector: members
    params: {}
- name: message
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params: {}
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: uploaded_files
    params: {}
- name: group_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: automod_rules
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: fetch_automod_rule
  endpoint:
    path: /automod/rules/{automod_rule_id}
    method: GET
    data_selector: rule
- name: create_automod_rule
  endpoint:
    path: /automod/rules
    method: POST
    data_selector: rule
- name: check_admin_community_eligibility
  endpoint:
    path: /admin/community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /admin/community/join
    method: POST
    data_selector: community
- name: migrate_command_scope
  endpoint:
    path: /guilds/{guild_id}/migrate_command_scope
    method: POST
    data_selector: integration_ids
- name: role
  endpoint:
    path: /discord/api/v1/roles
    method: GET
    data_selector: roles
- name: role_move
  endpoint:
    path: /roles/move
    method: POST
- name: role_delete
  endpoint:
    path: /roles/delete
    method: DELETE
- name: member_count
  endpoint:
    path: /roles/member_count
    method: GET
- name: create_invite
  endpoint:
    path: /api/v2/invite
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: voice_connect
  endpoint:
    path: /api/v2/voice/connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
- name: history
  endpoint:
    path: /api/v2/messages/history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: search
  endpoint:
    path: /api/v2/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      most_relevant: false
- name: scheduled_event
  endpoint:
    path: /discord/scheduled_events
    method: GET
    data_selector: events
- name: integration
  endpoint:
    path: /discord/integration
    method: GET
    data_selector: integrations
    params: {}
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: unacknowledge_messages
  endpoint:
    path: /channels/{channel_id}/messages/unack
    method: POST
    data_selector: unacknowledged
    params: {}
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages/files
    method: POST
    data_selector: uploaded_files
    params: {}
- name: pinned_messages
  endpoint:
    path: /channels/{channel.id}/pins
    method: GET
    data_selector: messages
- name: search_messages
  endpoint:
    path: /channels/{channel.id}/messages/search
    method: GET
    data_selector: messages
- name: send_message
  endpoint:
    path: /channels/{channel.id}/messages
    method: POST
    data_selector: message
- name: assets
  endpoint:
    path: /assets
    method: GET
- name: published_store_listings
  endpoint:
    path: /store_listings
    method: GET
- name: primary_store_listing
  endpoint:
    path: /primary_store_listing
    method: GET
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
- name: ticket
  endpoint:
    path: /ticket
    method: GET
- name: entitlement_ticket
  endpoint:
    path: /entitlement_ticket
    method: GET
- name: activity_statistics
  endpoint:
    path: /activity_statistics
    method: GET
- name: user_commands
  endpoint:
    path: user_commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: slash_commands
    method: GET
    data_selector: commands
    params: {}
- name: AutoModRule
  endpoint:
    path: /discord/AutoModRule
    method: GET
    data_selector: rules
- name: AutoModAction
  endpoint:
    path: /discord/AutoModAction
    method: GET
    data_selector: actions
- name: AutoModRuleTriggerType
  endpoint:
    path: /discord/AutoModRuleTriggerType
    method: GET
- name: member
  endpoint:
    path: /api/v1/members
    method: GET
    data_selector: members
- name: invite
  endpoint:
    path: /invites/{code}
    method: GET
    data_selector: invite
    params: {}
- name: File
  endpoint:
    path: /discord/File
    method: POST
    data_selector: attributes
    params: {}
- name: CloudFile
  endpoint:
    path: /discord/CloudFile
    method: POST
    data_selector: attributes
    params: {}
- name: message_send
  endpoint:
    path: /api/v2/messages/send
    method: POST
    data_selector: message
    params: {}
- name: message_unack
  endpoint:
    path: /api/v2/messages/unack
    method: POST
    data_selector: message
    params: {}
- name: file_upload
  endpoint:
    path: /api/v2/files/upload
    method: POST
    data_selector: file
    params: {}
- name: message
  endpoint:
    path: /messages
    method: GET
    data_selector: records
- name: member
  endpoint:
    path: /members
    method: GET
    data_selector: member
    params: {}
- name: partial_message
  endpoint:
    path: /discord/PartialMessage
    method: GET
    data_selector: records
- name: messages
  endpoint:
    path: /messages
    method: GET
    params:
      limit: null
      before: null
      after: null
      around: null
      oldest_first: true
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
    params: {}
- name: reaction
  endpoint:
    path: /reaction
    method: GET
    data_selector: records
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: Message
    params: {}
- name: interaction
  endpoint:
    path: /interactions
    method: GET
    data_selector: records
- name: component
  endpoint:
    path: /components
    method: GET
    data_selector: records
- name: File
  endpoint:
    path: /discord/File
    method: POST
    data_selector: file
    params: {}
- name: CloudFile
  endpoint:
    path: /discord/CloudFile
    method: POST
    data_selector: cloud_file
    params: {}
- name: Payment
  endpoint:
    path: /discord/Payment
    method: POST
    data_selector: payment
    params: {}
- name: SKU
  endpoint:
    path: /discord/skus
    method: GET
    data_selector: records
- name: SKUPrice
  endpoint:
    path: /discord/SKUPrice
    method: GET
- name: StoreListing
  endpoint:
    path: /discord/StoreListing
    method: GET
- name: StoreAsset
  endpoint:
    path: /discord/StoreAsset
    method: GET
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: channels
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: threads
  endpoint:
    path: /guilds/{guild_id}/threads
    method: GET
    data_selector: threads
- name: members
  endpoint:
    path: /guilds/{guild_id}/members
    method: GET
    data_selector: members
- name: create_text_channel
  endpoint:
    path: /guilds/{guild.id}/channels
    method: POST
    data_selector: channel
- name: create_voice_channel
  endpoint:
    path: /guilds/{guild.id}/channels
    method: POST
    data_selector: channel
- name: create_stage_channel
  endpoint:
    path: /guilds/{guild.id}/channels
    method: POST
    data_selector: channel
- name: create_category
  endpoint:
    path: /guilds/{guild.id}/channels
    method: POST
    data_selector: channel
- name: create_category_channel
  endpoint:
    path: /guilds/{guild.id}/channels
    method: POST
    data_selector: channel
- name: create_directory
  endpoint:
    path: /guilds/{guild.id}/channels
    method: POST
    data_selector: channel
- name: create_directory_channel
  endpoint:
    path: /guilds/{guild.id}/channels
    method: POST
    data_selector: channel
- name: bans
  endpoint:
    params:
      limit: 1000
- name: search
  endpoint:
    params:
      limit: 25
      offset: 0
      most_relevant: false
- name: invite
  endpoint:
    path: /invites/{invite}
    method: DELETE
    data_selector: deleted_invite
    params: {}
- name: widget
  endpoint:
    path: /guilds/{guild_id}/widget
    method: GET
    data_selector: widget
    params: {}
- name: user
  endpoint:
    path: /users/{user_id}
    method: GET
    data_selector: user
    params: {}
- name: user_profile
  endpoint:
    path: /users/{user_id}/profile
    method: GET
    data_selector: user_profile
    params:
      with_mutual_guilds: true
      with_mutual_friends_count: false
      with_mutual_friends: true
- name: private_channels
  endpoint:
    path: /users/@me/channels
    method: GET
    data_selector: private_channels
    params: {}
- name: on_message
  endpoint:
    path: /client/event/on_message
    method: POST
    data_selector: message
    params: {}
- name: change_presence
  endpoint:
    path: /client/change_presence
    method: POST
    data_selector: presence
    params: {}
- name: change_voice_state
  endpoint:
    path: /client/change_voice_state
    method: POST
    data_selector: voice_state
    params: {}
- name: fetch_guilds
  endpoint:
    path: /client/fetch_guilds
    method: GET
    data_selector: guilds
    params:
      with_counts: true
- name: fetch_template
  endpoint:
    path: /client/fetch_template
    method: GET
    data_selector: template
    params: {}
- name: fetch_guild
  endpoint:
    path: /client/fetch_guild
    method: GET
    data_selector: guild
    params:
      with_counts: true
- name: create_guild
  endpoint:
    path: /client/create_guild
    method: POST
    data_selector: guild
    params: {}
- name: join_guild
  endpoint:
    path: /client/join_guild
    method: POST
    data_selector: guild
    params: {}
- name: leave_guild
  endpoint:
    path: /client/leave_guild
    method: POST
    data_selector: guild
    params: {}
- name: fetch_stage_instance
  endpoint:
    path: /client/fetch_stage_instance
    method: GET
    data_selector: stage_instance
    params: {}
- name: invites
  endpoint:
    path: /client/invites
    method: GET
    data_selector: invites
    params: {}
- name: fetch_invite
  endpoint:
    path: /client/fetch_invite
    method: GET
    data_selector: invite
    params:
      with_counts: true
- name: create_invite
  endpoint:
    path: /client/create_invite
    method: POST
    data_selector: invite
    params: {}
- name: accept_invite
  endpoint:
    path: /client/accept_invite
    method: POST
    data_selector: invite
    params: {}
- name: delete_invite
  endpoint:
    path: /client/delete_invite
    method: DELETE
    data_selector: invite
    params: {}
- name: fetch_user
  endpoint:
    path: /users/{user_id}
    method: GET
    data_selector: User
    params: {}
- name: fetch_widget
  endpoint:
    path: /guilds/{guild_id}/widget
    method: GET
    data_selector: Widget
    params: {}
- name: fetch_private_channels
  endpoint:
    path: /users/@me/channels
    method: GET
    data_selector: PrivateChannels
    params: {}
- name: fetch_settings
  endpoint:
    path: /users/@me/settings
    method: GET
    data_selector: UserSettings
    params: {}
- name: team
  endpoint:
    path: /team
    method: GET
- name: application
  endpoint:
    path: /application
    method: POST
- name: company
  endpoint:
    path: /company
    method: GET
- name: activity_statistics
  endpoint:
    path: /activity/statistics
    method: GET
- name: payment_sources
  endpoint:
    path: /payment_sources
    method: GET
- name: subscription
  endpoint:
    path: /subscription
    method: POST
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: eula
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: recent_mentions
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: delete_recent_mention
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: join_active_developer_program
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: leave_active_developer_program
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: report_unverified_application
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
- name: join_hub_waitlist
  endpoint:
    path: /v2/join_hub_waitlist
    method: POST
    data_selector: data
    params: {}
- name: lookup_hubs
  endpoint:
    path: /v2/lookup_hubs
    method: GET
    data_selector: hubs
    params: {}
- name: join_hub
  endpoint:
    path: /v2/join_hub
    method: POST
    data_selector: hub
    params: {}
- name: pomelo_suggestion
  endpoint:
    path: /v2/pomelo_suggestion
    method: GET
    data_selector: suggestion
    params: {}
- name: check_pomelo_username
  endpoint:
    path: /v2/check_pomelo_username
    method: GET
    data_selector: is_taken
    params: {}
- name: recent_avatars
  endpoint:
    path: /v2/recent_avatars
    method: GET
    data_selector: avatars
    params: {}
- name: promotions
  endpoint:
    path: /promotions
    method: GET
    data_selector: promotions
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: user_offer
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: trial_offer
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: pricing_promotion
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: library
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: authorizations
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
    data_selector: giftable_entitlements
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
    data_selector: premium_entitlements
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
    data_selector: gift
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
    data_selector: sku
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
    data_selector: store_listing
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
    data_selector: published_store_listing
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
    data_selector: published_store_listings
- name: AudioSource
  endpoint:
    path: /discord/AudioSource
    method: GET
    data_selector: audio_data
    params: {}
- name: PCMAudio
  endpoint:
    path: /discord/PCMAudio
    method: GET
    data_selector: audio_data
    params: {}
- name: FFmpegAudio
  endpoint:
    path: /discord/FFmpegAudio
    method: GET
    data_selector: audio_data
    params: {}
- name: FFmpegPCMAudio
  endpoint:
    path: /discord/FFmpegPCMAudio
    method: GET
    data_selector: audio_data
    params: {}
- name: FFmpegOpusAudio
  endpoint:
    path: /discord/FFmpegOpusAudio
    method: GET
    data_selector: audio_data
    params: {}
- name: AutoModRule
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: AutoModAction
  endpoint:
    path: /automod/actions
    method: GET
    data_selector: actions
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
    params:
      application_id: int
      localize: bool
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
    params:
      application_ids: int
      localize: bool
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: subscription_plans
    params:
      sku_id: int
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: subscription_plans
    params:
      sku_ids: int
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: eula
    params:
      eula_id: int
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
    params:
      branch_ids: int
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier
    params:
      price_tier: int
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: recent_mentions
    params:
      limit: int
      before: Union[Snowflake, datetime]
      guild: Guild
      roles: bool
      everyone: bool
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: delete_status
    params:
      message: abc.Snowflake
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhook_id
    params:
      application: Application
      channel: TextChannel
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: leave_status
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: unverified_application
    params:
      name: str
      icon: File
      os: OperatingSystem
      executable: str
      publisher: str
      distributor: Distributor
      sku: str
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
    params:
      with_guild_experiments: bool
- name: ContentFilter
  endpoint:
    path: /discord/content_filter
    method: GET
    data_selector: filter_levels
- name: Status
  endpoint:
    path: /discord/status
    method: GET
    data_selector: status_levels
- name: AuditLogAction
  endpoint:
    path: /discord/audit_log_action
    method: GET
    data_selector: actions
- name: EmbeddedActivityPlatform
  endpoint:
    path: /discord/EmbeddedActivityPlatform
    method: GET
- name: EmbeddedActivityOrientation
  endpoint:
    path: /discord/EmbeddedActivityOrientation
    method: GET
- name: EmbeddedActivityLabelType
  endpoint:
    path: /discord/EmbeddedActivityLabelType
    method: GET
- name: EmbeddedActivityReleasePhase
  endpoint:
    path: /discord/EmbeddedActivityReleasePhase
    method: GET
- name: PayoutAccountStatus
  endpoint:
    path: /discord/PayoutAccountStatus
    method: GET
- name: PayoutStatus
  endpoint:
    path: /discord/PayoutStatus
    method: GET
- name: PayoutReportType
  endpoint:
    path: /discord/PayoutReportType
    method: GET
- name: WebhookType
  endpoint:
    path: /discord/WebhookType
    method: GET
- name: ExpireBehaviour
  endpoint:
    path: /discord/ExpireBehaviour
    method: GET
- name: DefaultAvatar
  endpoint:
    path: /discord/DefaultAvatar
    method: GET
- name: StickerType
  endpoint:
    path: /discord/StickerType
    method: GET
- name: StickerFormatType
  endpoint:
    path: /discord/StickerFormatType
    method: GET
- name: InviteTarget
  endpoint:
    path: /discord/InviteTarget
    method: GET
- name: VideoQualityMode
  endpoint:
    path: /discord/VideoQualityMode
    method: GET
- name: PrivacyLevel
  endpoint:
    path: /discord/PrivacyLevel
    method: GET
- name: NSFWLevel
  endpoint:
    path: /discord/NSFWLevel
    method: GET
- name: RelationshipType
  endpoint:
    path: /discord/RelationshipType
    method: GET
- name: FriendSuggestionReasonType
  endpoint:
    path: /discord/FriendSuggestionReasonType
    method: GET
- name: UserContentFilter
  endpoint:
    path: /discord/UserContentFilter
    method: GET
- name: PremiumType
  endpoint:
    path: /discord/PremiumType
    method: GET
- name: PaymentSourceType
  endpoint:
    path: /discord/PaymentSourceType
    method: GET
- name: PaymentGateway
  endpoint:
    path: /discord/PaymentGateway
    method: GET
- name: SubscriptionType
  endpoint:
    path: /discord/SubscriptionType
    method: GET
- name: SubscriptionStatus
  endpoint:
    path: /discord/SubscriptionStatus
    method: GET
- name: message_type
  endpoint:
    path: /discord/message/type
    method: GET
- name: invite_type
  endpoint:
    path: /discord/invite/type
    method: GET
- name: user_flags
  endpoint:
    path: /discord/user/flags
    method: GET
- name: hype_squad_house
  endpoint:
    path: /discord/hypesquad/house
    method: GET
- name: verification_level
  endpoint:
    path: /discord/verification/level
    method: GET
- name: notification_level
  endpoint:
    path: /discord/notification/level
    method: GET
- name: highlight_level
  endpoint:
    path: /discord/highlight/level
    method: GET
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhooks
    params: {}
- name: audit_log_diff
  endpoint:
    path: /api/v10/audit-log-diff
    method: GET
    data_selector: changes
    params: {}
- name: SyncWebhook
  endpoint:
    path: /discord/sync_webhook
    method: GET
- name: SyncWebhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: edit_message
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}/messages/{message_id}
    method: PATCH
- name: delete_message
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}/messages/{message_id}
    method: DELETE
- name: guild_channel
  endpoint:
    path: /guilds/{guild.id}/channels
    method: GET
    data_selector: channels
- name: SyncWebhookMessage
  endpoint:
    path: /webhooks/{webhook_id}/{webhook_token}/messages/{message_id}
    method: PATCH
    data_selector: message
    params: {}
- name: SyncWebhook
  endpoint:
    path: /webhooks/{webhook_id}/{webhook_token}
    method: GET
    data_selector: webhook
    params: {}
- name: guild_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: invites
  endpoint:
    path: /invites
    method: GET
    data_selector: active_invites
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: message
- name: user
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
- name: edit_note
  endpoint:
    path: /edit_note
    method: POST
- name: fetch_message
  endpoint:
    path: /fetch_message/{id}
    method: GET
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
- name: fetch_note
  endpoint:
    path: /fetch_note
    method: GET
- name: greet
  endpoint:
    path: /greet
    method: POST
- name: history
  endpoint:
    path: /history
    method: GET
- name: is_blocked
  endpoint:
    path: /is_blocked
    method: GET
- name: is_friend
  endpoint:
    path: /is_friend
    method: GET
- name: is_pomelo
  endpoint:
    path: /is_pomelo
    method: GET
- name: mentioned_in
  endpoint:
    path: /mentioned_in
    method: GET
- name: pins
  endpoint:
    path: /pins
    method: GET
- name: profile
  endpoint:
    path: /profile
    method: GET
- name: public_flags
  endpoint:
    path: /public_flags
    method: GET
- name: relationship
  endpoint:
    path: /relationship
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
- name: connection
  endpoint:
    path: /connection
    method: GET
- name: friend_suggestion
  endpoint:
    path: /friend_suggestions
    method: GET
- name: messages
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 50
      before: null
      after: null
- name: channel_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 200
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
- name: UserCommand
  endpoint:
    path: user_commands
    method: GET
- name: SlashCommand
  endpoint:
    path: slash_commands
    method: GET
- name: user_settings
  endpoint:
    path: /user/settings
    method: GET
    data_selector: settings
- name: legacy_user_settings
  endpoint:
    path: /legacy/user/settings
    method: GET
    data_selector: settings
    params: {}
- name: activity_statistics
  endpoint:
    path: /applications/{application.id}/activity-statistics
    method: GET
- name: assets
  endpoint:
    path: /applications/{application.id}/assets
    method: GET
- name: branches
  endpoint:
    path: /applications/{application.id}/branches
    method: GET
- name: TrackingSettings
  endpoint:
    path: /tracking/settings
    method: GET
    data_selector: settings
- name: EmailSettings
  endpoint:
    path: /email/settings
    method: GET
    data_selector: settings
- name: GuildFolder
  endpoint:
    path: /guild/folders
    method: GET
    data_selector: folders
- name: GuildProgress
  endpoint:
    path: /guild/progress
    method: GET
    data_selector: progress
- name: AudioContext
  endpoint:
    path: /audio/context
    method: GET
    data_selector: context
- name: MuteConfig
  endpoint:
    path: /mute/config
    method: GET
    data_selector: muteStatus
- name: activity_statistics
  endpoint:
    path: /applications/{application.id}/activity_statistics
    method: GET
- name: create_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: POST
- name: store_asset
  endpoint:
    path: /uploads/store_asset
    method: POST
    data_selector: asset
    params: {}
- name: skus
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
    params:
      with_bundled_skus: true
      localize: true
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    data_selector: sku
    params:
      localize: true
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
    data_selector: sku
    params:
      localize: true
- name: create_sku
  endpoint:
    path: /create_sku
    method: POST
    data_selector: sku
    params: {}
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
    params:
      limit: 100
- name: fetch_entitlement
  endpoint:
    path: /fetch_entitlement/{entitlement_id}
    method: GET
    data_selector: entitlement
    params: {}
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
    params: {}
- name: create_gift_batch
  endpoint:
    path: /create_gift_batch
    method: POST
    data_selector: gift_batch
    params: {}
- name: branches
  endpoint:
    path: /branches
    method: GET
    data_selector: branches
    params: {}
- name: create_branch
  endpoint:
    path: /create_branch
    method: POST
    data_selector: branch
    params: {}
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
    data_selector: manifest_labels
    params: {}
- name: fetch_discoverability
  endpoint:
    path: /fetch_discoverability
    method: GET
    data_selector: discoverability
    params: {}
- name: fetch_embedded_activity_config
  endpoint:
    path: /fetch_embedded_activity_config
    method: GET
    data_selector: embedded_activity_config
    params: {}
- name: activity_statistics
  endpoint:
    path: /applications/{application.id}/activity_statistics
    method: GET
    data_selector: statistics
    params: {}
- name: assets
  endpoint:
    path: /applications/{application.id}/assets
    method: GET
    data_selector: assets
    params: {}
- name: entitlement_ticket
  endpoint:
    path: /applications/{application.id}/entitlement_ticket
    method: GET
    data_selector: ticket
    params: {}
- name: primary_store_listing
  endpoint:
    path: /applications/{application.id}/store_listing
    method: GET
    data_selector: store_listing
    params: {}
- name: published_store_listings
  endpoint:
    path: /applications/{application.id}/published_store_listings
    method: GET
    data_selector: store_listings
    params: {}
- name: store_asset
  endpoint:
    path: /store/assets/upload
    method: POST
    data_selector: asset
    params: {}
- name: skus
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
    params: {}
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    data_selector: sku
    params: {}
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
    data_selector: sku
    params: {}
- name: create_sku
  endpoint:
    path: /skus/create
    method: POST
    data_selector: sku
    params: {}
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
    params:
      limit: 100
- name: fetch_entitlement
  endpoint:
    path: /entitlements/{entitlement_id}
    method: GET
    data_selector: entitlement
    params: {}
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
    params: {}
- name: create_gift_batch
  endpoint:
    path: /gift_batches/create
    method: POST
    data_selector: gift_batch
    params: {}
- name: branches
  endpoint:
    path: /branches
    method: GET
    data_selector: branches
    params: {}
- name: create_branch
  endpoint:
    path: /branches/create
    method: POST
    data_selector: branch
    params: {}
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
    data_selector: labels
    params: {}
- name: fetch_discoverability
  endpoint:
    path: /discoverability
    method: GET
    data_selector: discoverability
    params: {}
- name: fetch_embedded_activity_config
  endpoint:
    path: /embedded_activity_config
    method: GET
    data_selector: config
    params: {}
- name: edit_embedded_activity_config
  endpoint:
    path: /embedded_activity_config/edit
    method: PATCH
    data_selector: config
    params: {}
- name: application_activity_statistics
  endpoint:
    path: /application/activity/statistics
    method: GET
    data_selector: statistics
    params: {}
- name: detectable_application
  endpoint:
    path: /detectable/application
    method: GET
    data_selector: applications
    params: {}
- name: unverified_application
  endpoint:
    path: /unverified/application
    method: GET
    data_selector: applications
    params: {}
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
    params: {}
- name: team_member
  endpoint:
    path: /teams/{team_id}/members
    method: GET
    data_selector: members
    params: {}
- name: application_build
  endpoint:
    path: /discord/ApplicationBuild
    method: GET
    data_selector: builds
- name: application_branch
  endpoint:
    path: /discord/ApplicationBranch
    method: GET
    data_selector: branches
- name: manifest
  endpoint:
    path: /discord/Manifest
    method: GET
    data_selector: manifests
- name: team
  endpoint:
    path: /discord/Team
    method: GET
    data_selector: teams
- name: team
  endpoint:
    path: /team
    method: GET
    data_selector: team
    params: {}
- name: voice_client
  endpoint:
    path: /connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 30.0
      reconnect: true
- name: dm_channel
  endpoint:
    path: /create_dm
    method: POST
    data_selector: dm_channel
    params: {}
- name: user_note
  endpoint:
    path: /delete_note
    method: DELETE
    data_selector: note
    params: {}
- name: message_history
  endpoint:
    path: /history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: connect
  endpoint:
    path: /voice/connect
    method: POST
    data_selector: VoiceClient
    params:
      timeout: 30.0
      reconnect: true
- name: create_dm
  endpoint:
    path: /dm/create
    method: POST
    data_selector: DMChannel
    params: {}
- name: delete_note
  endpoint:
    path: /note/delete
    method: DELETE
    data_selector: None
    params: {}
- name: edit_note
  endpoint:
    path: /note/edit
    method: PATCH
    data_selector: None
    params:
      note: null
- name: fetch_message
  endpoint:
    path: /message/fetch
    method: GET
    data_selector: Message
    params:
      id: null
- name: fetch_mutual_friends
  endpoint:
    path: /friends/mutual
    method: GET
    data_selector: User
    params: {}
- name: fetch_note
  endpoint:
    path: /note/fetch
    method: GET
    data_selector: str
    params: {}
- name: greet
  endpoint:
    path: /greet
    method: POST
    data_selector: Message
    params:
      sticker: null
      allowed_mentions: null
      reference: null
      mention_author: null
- name: history
  endpoint:
    path: /channel/history
    method: GET
    data_selector: Message
    params:
      limit: 100
      before: null
      after: null
      around: null
      oldest_first: false
- name: pins
  endpoint:
    path: /channel/pins
    method: GET
    data_selector: Message
    params: {}
- name: remove_friend
  endpoint:
    path: /friend/remove
    method: DELETE
    data_selector: None
    params: {}
- name: gift
  endpoint:
    path: /gifts
    method: GET
    data_selector: gifts
    params: {}
- name: gift_batch
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
    params: {}
- name: library_application
  endpoint:
    path: /library_applications
    method: GET
    data_selector: library_applications
    params: {}
- name: Subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params:
      query: null
      limit: null
      command_ids: null
      application: null
      with_applications: true
- name: PremiumGuildSubscription
  endpoint:
    path: /premium_guild_subscriptions
    method: GET
    data_selector: records
- name: PremiumGuildSubscriptionSlot
  endpoint:
    path: /premium_guild_subscription_slots
    method: GET
    data_selector: records
- name: SubscriptionPlan
  endpoint:
    path: /subscription_plans
    method: GET
    data_selector: records
- name: SubscriptionPlanPrices
  endpoint:
    path: /subscription-plan-prices
    method: GET
    data_selector: country_prices
    params: {}
- name: Payment
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
    params: {}
- name: SKU
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
    params: {}
- name: gift
  endpoint:
    path: /discord/gift
    method: GET
    data_selector: gifts
    params: {}
- name: gift_batch
  endpoint:
    path: /discord/gift_batch
    method: GET
    data_selector: gift_batches
    params: {}
- name: library_application
  endpoint:
    path: /discord/library_application
    method: GET
    data_selector: library_applications
    params: {}
- name: sku
  endpoint:
    path: /discord/sku
    method: GET
    data_selector: records
    params: {}
- name: subscription
  endpoint:
    path: /discord/subscription
    method: GET
    data_selector: subscriptions
    params: {}
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: records
- name: gift_batch
  endpoint:
    path: /gift/batch
    method: POST
    data_selector: giftBatch
- name: gifts
  endpoint:
    path: /gifts
    method: GET
    data_selector: gifts
- name: create_gift
  endpoint:
    path: /create/gift
    method: POST
    data_selector: gift
- name: preview_purchase
  endpoint:
    path: /preview/purchase
    method: POST
    data_selector: purchasePrice
- name: purchase
  endpoint:
    path: /purchase
    method: POST
    data_selector: entitlements
- name: SubscriptionPlanPrices
  endpoint:
    path: /subscription_plan_prices
    method: GET
    data_selector: country_prices
    params: {}
- name: Payment
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
    params: {}
- name: SKU
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
    params: {}
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: listings
    params: {}
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: records
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: listings
    params: {}
- name: create_directory_channel
  endpoint:
    path: /create_directory_channel
    method: POST
- name: create_forum
  endpoint:
    path: /create_forum
    method: POST
- name: create_forum_channel
  endpoint:
    path: /create_forum_channel
    method: POST
- name: leave
  endpoint:
    path: /leave
    method: POST
- name: delete
  endpoint:
    path: /delete
    method: POST
- name: edit
  endpoint:
    path: /edit
    method: POST
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: channels
  endpoint:
    path: /channels
    method: GET
- name: threads
  endpoint:
    path: /threads
    method: GET
- name: members
  endpoint:
    path: /members
    method: GET
- name: scheduled_events
  endpoint:
    path: /scheduled_events
    method: GET
- name: search_messages
  endpoint:
    path: /guilds/{guild_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: prune_members
  endpoint:
    path: /guilds/{guild_id}/prune
    method: POST
    data_selector: pruned
    params: {}
- name: create_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: POST
    data_selector: sticker
- name: delete_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers/{sticker_id}
    method: DELETE
    data_selector: sticker
- name: fetch_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: GET
    data_selector: scheduled_events
- name: fetch_emojis
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: GET
    data_selector: emojis
- name: fetch_roles
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
- name: welcome_screen
  endpoint:
    path: /guilds/{guild.id}/welcome-screen
    method: GET
    data_selector: welcome_screen
    params: {}
- name: applications
  endpoint:
    path: /guilds/{guild.id}/applications
    method: GET
    data_selector: applications
    params: {}
- name: premium_subscriptions
  endpoint:
    path: /guilds/{guild.id}/premium-subscriptions
    method: GET
    data_selector: premium_subscriptions
    params: {}
- name: entitlements
  endpoint:
    path: /guilds/{guild.id}/entitlements
    method: GET
    data_selector: entitlements
    params: {}
- name: price_tiers
  endpoint:
    path: /guilds/{guild.id}/price-tiers
    method: GET
    data_selector: price_tiers
    params: {}
- name: members
  endpoint:
    path: /guilds/{guild.id}/members
    method: GET
    data_selector: members
    params: {}
- name: create_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: POST
    data_selector: sticker
    params: {}
- name: delete_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers/{sticker_id}
    method: DELETE
    data_selector: sticker
    params: {}
- name: subscribed_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events/subscribed
    method: GET
    data_selector: events
    params: {}
- name: fetch_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: GET
    data_selector: events
    params:
      with_counts: true
- name: fetch_scheduled_event
  endpoint:
    path: /guilds/{guild_id}/scheduled-events/{scheduled_event_id}
    method: GET
    data_selector: event
    params:
      with_counts: true
- name: create_scheduled_event
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: POST
    data_selector: event
    params: {}
- name: top_emojis
  endpoint:
    path: /guilds/{guild_id}/emojis/top
    method: GET
    data_selector: emojis
    params: {}
- name: fetch_emojis
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: GET
    data_selector: emojis
    params: {}
- name: fetch_emoji
  endpoint:
    path: /guilds/{guild_id}/emojis/{emoji_id}
    method: GET
    data_selector: emoji
    params: {}
- name: create_custom_emoji
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: POST
    data_selector: emoji
    params: {}
- name: delete_emoji
  endpoint:
    path: /guilds/{guild_id}/emojis/{emoji_id}
    method: DELETE
    data_selector: emoji
    params: {}
- name: fetch_roles
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
    params: {}
- name: fetch_role
  endpoint:
    path: /guilds/{guild_id}/roles/{role_id}
    method: GET
    data_selector: role
    params: {}
- name: create_role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: POST
    data_selector: role
    params: {}
- name: automod_rules
  endpoint:
    path: /guilds/{guild_id}/automod/rules
    method: GET
    data_selector: automod_rules
- name: fetch_automod_rule
  endpoint:
    path: /guilds/{guild_id}/automod/rules/{automod_rule_id}
    method: GET
    data_selector: automod_rule
- name: create_automod_rule
  endpoint:
    path: /guilds/{guild_id}/automod/rules
    method: POST
    data_selector: automod_rule
- name: admin_community_eligibility
  endpoint:
    path: /guilds/{guild_id}/admin/community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /guilds/{guild_id}/admin/community/join
    method: POST
    data_selector: guild
- name: migrate_command_scope
  endpoint:
    path: /guilds/{guild_id}/migrate/command_scope
    method: POST
    data_selector: integration_ids
- name: directory_broadcast_eligibility
  endpoint:
    path: /guilds/{guild_id}/directory/broadcast/eligibility
    method: GET
    data_selector: broadcast_eligibility
- name: ban_entry
  endpoint:
    path: /guilds/{guild.id}/bans
    method: GET
    data_selector: bans
    params: {}
- name: bulk_ban_result
  endpoint:
    path: /guilds/{guild.id}/bans/bulk
    method: POST
    data_selector: bulkBanResult
    params: {}
- name: role
  endpoint:
    path: /guilds/{guild.id}/roles
    method: GET
    data_selector: roles
    params: {}
- name: automod_rules
  endpoint:
    path: /guilds/{guild_id}/automod/rules
    method: GET
    data_selector: automod_rules
- name: fetch_automod_rule
  endpoint:
    path: /guilds/{guild_id}/automod/rules/{automod_rule_id}
    method: GET
    data_selector: automod_rule
- name: create_automod_rule
  endpoint:
    path: /guilds/{guild_id}/automod/rules
    method: POST
    data_selector: automod_rule
- name: admin_community_eligibility
  endpoint:
    path: /guilds/{guild_id}/admin_community/eligibility
    method: GET
- name: join_admin_community
  endpoint:
    path: /guilds/{guild_id}/admin_community/join
    method: POST
- name: migrate_command_scope
  endpoint:
    path: /guilds/{guild_id}/migrate_command_scope
    method: POST
- name: directory_broadcast_eligibility
  endpoint:
    path: /guilds/{guild_id}/directory_broadcast/eligibility
    method: GET
- name: scheduled_event
  endpoint:
    path: /scheduled-events
    method: GET
    data_selector: events
- name: role
  endpoint:
    path: /discord/roles
    method: GET
    data_selector: roles
- name: auto_mod_rule
  endpoint:
    path: /auto_mod/rules
    method: GET
    data_selector: rules
- name: scheduled_event
  endpoint:
    path: /scheduled_events
    method: GET
    data_selector: events
- name: integration
  endpoint:
    path: /discord/integration
    method: GET
- name: member
  endpoint:
    path: /guilds/{guild.id}/members/{user.id}
    method: GET
    data_selector: member
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
- name: published_store_listings
  endpoint:
    path: /published_store_listings
    method: GET
    data_selector: store_listings
- name: primary_store_listing
  endpoint:
    path: /primary_store_listing
    method: GET
    data_selector: primary_listing
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: ticket
  endpoint:
    path: /ticket
    method: GET
    data_selector: ticket
- name: entitlement_ticket
  endpoint:
    path: /entitlement_ticket
    method: GET
    data_selector: entitlement_ticket
- name: activity_statistics
  endpoint:
    path: /activity_statistics
    method: GET
    data_selector: statistics
- name: automod_rules
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
- name: fetch_note
  endpoint:
    path: /fetch_note
    method: GET
- name: delete_note
  endpoint:
    path: /delete_note
    method: DELETE
- name: connect
  endpoint:
    path: /connect
    method: POST
- name: ban
  endpoint:
    path: /ban
    method: POST
- name: unban
  endpoint:
    path: /unban
    method: POST
- name: kick
  endpoint:
    path: /kick
    method: POST
- name: edit
  endpoint:
    path: /edit
    method: PATCH
- name: AutoModRuleTriggerType
  endpoint:
    path: /discord/AutoModRuleTriggerType
    method: GET
- name: member
  endpoint:
    path: /discord/api/v1/members
    method: GET
    data_selector: members
- name: invite
  endpoint:
    path: /invites/{code}
    method: GET
    data_selector: invite
    params: {}
- name: pinned_messages
  endpoint:
    path: /pins
    method: GET
    data_selector: Message
- name: member_profile
  endpoint:
    path: /profile
    method: GET
    data_selector: MemberProfile
- name: search_messages
  endpoint:
    path: /search
    method: GET
    data_selector: Message
- name: File
  endpoint:
    path: /discord/File
    method: POST
    data_selector: attributes
- name: CloudFile
  endpoint:
    path: /discord/CloudFile
    method: POST
    data_selector: attributes
- name: member_profile
  endpoint:
    path: /discord/member/profile
    method: GET
    data_selector: records
    params: {}
- name: messages
  endpoint:
    path: /commands
    method: GET
    data_selector: UserCommand
- name: member_profile
  endpoint:
    path: /member/profile
    method: GET
    data_selector: member_data
- name: member_profile
  endpoint:
    path: /guilds/{guild_id}/members/{user_id}
    method: GET
    data_selector: member
    params: {}
- name: member
  endpoint:
    path: /guilds/{guild_id}/members/{member_id}
    method: GET
    data_selector: member
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
    data_selector: files
    params: {}
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: PartialEmoji
  endpoint:
    path: /path/to/partial-emoji
    method: GET
    data_selector: emoji_data
- name: Sticker
  endpoint:
    path: /path/to/sticker
    method: GET
    data_selector: sticker_data
- name: StickerItem
  endpoint:
    path: /path/to/sticker-item
    method: GET
    data_selector: sticker_item_data
- name: StickerPack
  endpoint:
    path: /path/to/sticker-pack
    method: GET
    data_selector: sticker_pack_data
- name: StandardSticker
  endpoint:
    path: /path/to/standard-sticker
    method: GET
    data_selector: standard_sticker_data
- name: messages
  endpoint:
    params:
      limit: Optional[int]
      before: Optional[Union[Snowflake, datetime.datetime]]
      after: Optional[Union[Snowflake, datetime.datetime]]
      around: Optional[Union[Snowflake, datetime.datetime]]
      oldest_first: Optional[bool]
- name: pinned_messages
  endpoint:
    params: {}
- name: profile
  endpoint:
    params:
      with_mutual_guilds: bool
      with_mutual_friends_count: bool
      with_mutual_friends: bool
- name: search
  endpoint:
    params:
      content: content
      limit: '25'
      offset: '0'
      before: Optional[...]
      after: Optional[...]
      authors: Optional[...]
      author_types: Optional[...]
      mentions: Optional[...]
      mention_everyone: Optional[...]
      pinned: Optional[...]
      has: Optional[...]
      embed_types: Optional[...]
      embed_providers: Optional[...]
      link_hostnames: Optional[...]
      attachment_filenames: Optional[...]
      attachment_extensions: Optional[...]
      application_command_id: Optional[...]
      application_command_name: Optional[...]
      oldest_first: Optional[...]
      most_relevant: 'False'
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: Message
- name: guild_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
    data_selector: stickers
- name: category_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: forums
  endpoint:
    path: /forums
    method: GET
- name: directory_channels
  endpoint:
    path: /directory_channels
    method: GET
- name: directories
  endpoint:
    path: /directories
    method: GET
- name: member_profile
  endpoint:
    path: /api/v2/member_profile
    method: GET
    data_selector: messages
    params: {}
- name: text_channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: channel
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: Message
    params:
      limit: null
      before: null
      after: null
      around: null
      oldest_first: true
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: Message
    params: {}
- name: send_message
  endpoint:
    path: /send
    method: POST
    data_selector: Message
    params: {}
- name: archived_threads
  endpoint:
    path: /channels/{channel_id}/threads/archived
    method: GET
    data_selector: threads
    params:
      limit: null
      before: null
      private: null
      joined: null
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
      before: null
      after: null
      around: null
      oldest_first: null
- name: notification_settings
  endpoint:
    path: /channels/{channel_id}/notification_settings
    method: GET
- name: overwrites
  endpoint:
    path: /channels/{channel_id}/overwrites
    method: GET
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
- name: send
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
- name: set_permissions
  endpoint:
    path: /channels/{channel_id}/permissions/{overwrite_id}
    method: PUT
- name: guilds
  endpoint:
    path: /guilds
    method: GET
- name: invites
  endpoint:
    path: /invites
    method: GET
- name: messages
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: message
    params: {}
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: '100'
- name: pinned_messages
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: team
  endpoint:
    path: /teams
    method: POST
    data_selector: team
- name: application
  endpoint:
    path: /applications
    method: POST
    data_selector: application
- name: company
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
- name: payment_source
  endpoint:
    path: /payment_sources
    method: GET
    data_selector: payment_sources
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
    params: {}
- name: voice_states
  endpoint:
    path: /voice_states
    method: GET
    data_selector: voice_states
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: user_offer
  endpoint:
    path: /user/offer
    method: GET
    data_selector: user_offer
- name: trial_offer
  endpoint:
    path: /trial/offer
    method: GET
    data_selector: trial_offer
- name: pricing_promotion
  endpoint:
    path: /pricing/promotion
    method: GET
    data_selector: pricing_promotion
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: library
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: authorizations
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: giftable_entitlements
  endpoint:
    path: /giftable/entitlements
    method: GET
    data_selector: giftable_entitlements
- name: premium_entitlements
  endpoint:
    path: /premium/entitlements
    method: GET
    data_selector: premium_entitlements
- name: fetch_entitlements
  endpoint:
    path: /fetch/entitlements
    method: GET
    data_selector: fetch_entitlements
- name: fetch_gift
  endpoint:
    path: /fetch/gift
    method: GET
    data_selector: fetch_gift
- name: fetch_sku
  endpoint:
    path: /fetch/sku
    method: GET
    data_selector: fetch_sku
- name: fetch_store_listing
  endpoint:
    path: /fetch/store_listing
    method: GET
    data_selector: fetch_store_listing
- name: fetch_published_store_listing
  endpoint:
    path: /fetch/published_store_listing
    method: GET
    data_selector: fetch_published_store_listing
- name: fetch_published_store_listings
  endpoint:
    path: /fetch/published_store_listings
    method: GET
    data_selector: fetch_published_store_listings
- name: read_state
  endpoint:
    path: /channels/{channel_id}/read_state
    method: GET
    data_selector: read_state
- name: scheduled_events
  endpoint:
    path: /channels/{channel_id}/scheduled_events
    method: GET
    data_selector: scheduled_events
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /channels/{channel_id}/permissions/{overwrite_id}
    method: PUT
    data_selector: permissions
- name: directory_channel
  endpoint:
    path: /directory/channel
    method: GET
    data_selector: entries
    params: {}
- name: fetch_entries
  endpoint:
    path: /fetch_entries
    method: GET
- name: search_entries
  endpoint:
    path: /search_entries
    method: GET
- name: create_entry
  endpoint:
    path: /create_entry
    method: POST
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
- name: delete
  endpoint:
    path: /delete
    method: DELETE
- name: invites
  endpoint:
    path: /invites
    method: GET
- name: forum_channel
  endpoint:
    path: /forum_channels
    method: GET
    data_selector: channels
    params: {}
- name: permissions_synced
  endpoint:
    path: /discord/permissions_synced
    method: GET
    data_selector: permissions_synced
- name: set_permissions
  endpoint:
    path: /discord/set_permissions
    method: POST
    data_selector: permissions
    params: {}
- name: DMChannel
  endpoint:
    path: /discord/DMChannel
    method: GET
    data_selector: DMChannel
    params: {}
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
    params:
      application_id: int
      localize: bool
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
    params:
      application_ids: int
      localize: bool
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: subscription_plans
    params:
      sku_id: int
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: subscription_plans
    params:
      sku_ids: int
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: EULA
    params:
      eula_id: int
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
    params:
      branch_ids: int
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier_mapping
    params:
      price_tier: int
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: recent_mentions
    params:
      limit: int
      before: Snowflake or datetime
      guild: Guild
      roles: bool
      everyone: bool
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: deleted_mention
    params:
      message: Snowflake
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhook_id
    params:
      application: Application
      channel: TextChannel
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: DELETE
    data_selector: result
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: unverified_application
    params:
      name: str
      icon: File
      os: OperatingSystem
      executable: str
      publisher: str
      distributor: Distributor
      sku: str
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
    params:
      with_guild_experiments: bool
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
- name: requested_at
  endpoint:
    path: /discord/DMChannel/requested_at
    method: GET
- name: is_message_request
  endpoint:
    path: /discord/DMChannel/is_message_request
    method: GET
- name: is_accepted
  endpoint:
    path: /discord/DMChannel/is_accepted
    method: GET
- name: is_spam
  endpoint:
    path: /discord/DMChannel/is_spam
    method: GET
- name: permissions_for
  endpoint:
    path: /discord/DMChannel/permissions_for
    method: GET
- name: add_recipients
  endpoint:
    path: /discord/DMChannel/add_recipients
    method: POST
- name: close
  endpoint:
    path: /discord/DMChannel/close
    method: DELETE
- name: connect
  endpoint:
    path: /discord/DMChannel/connect
    method: POST
- name: accept
  endpoint:
    path: /discord/DMChannel/accept
    method: POST
- name: decline
  endpoint:
    path: /discord/DMChannel/decline
    method: POST
- name: ack
  endpoint:
    path: /discord/DMChannel/ack
    method: POST
- name: ack_pins
  endpoint:
    path: /discord/DMChannel/ack_pins
    method: POST
- name: application_commands
  endpoint:
    path: /discord/DMChannel/application_commands
    method: GET
- name: fetch_message
  endpoint:
    path: /discord/DMChannel/fetch_message
    method: GET
- name: greet
  endpoint:
    path: /discord/DMChannel/greet
    method: POST
- name: history
  endpoint:
    path: /discord/DMChannel/history
    method: GET
- name: pins
  endpoint:
    path: /discord/DMChannel/pins
    method: GET
- name: search
  endpoint:
    path: /discord/DMChannel/search
    method: GET
- name: AudioSource
  endpoint:
    path: /discord/AudioSource
    method: GET
    data_selector: records
- name: PCMAudio
  endpoint:
    path: /discord/PCMAudio
    method: GET
    data_selector: records
- name: FFmpegAudio
  endpoint:
    path: /discord/FFmpegAudio
    method: GET
    data_selector: records
- name: FFmpegPCMAudio
  endpoint:
    path: /discord/FFmpegPCMAudio
    method: GET
    data_selector: records
- name: FFmpegOpusAudio
  endpoint:
    path: /discord/FFmpegOpusAudio
    method: GET
    data_selector: records
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params: {}
- name: AutoModRule
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: AudioSource
  endpoint:
    path: /audio/source
    method: GET
    data_selector: sources
- name: origin_channel_id
  endpoint:
    path: /GroupChannel/origin_channel_id
    method: GET
    data_selector: origin_channel_id
- name: notification_settings
  endpoint:
    path: /GroupChannel/notification_settings
    method: GET
    data_selector: notification_settings
- name: owner
  endpoint:
    path: /GroupChannel/owner
    method: GET
    data_selector: owner
- name: call
  endpoint:
    path: /GroupChannel/call
    method: GET
    data_selector: call
- name: type
  endpoint:
    path: /GroupChannel/type
    method: GET
    data_selector: type
- name: guild
  endpoint:
    path: /GroupChannel/guild
    method: GET
    data_selector: guild
- name: icon
  endpoint:
    path: /GroupChannel/icon
    method: GET
    data_selector: icon
- name: created_at
  endpoint:
    path: /GroupChannel/created_at
    method: GET
    data_selector: created_at
- name: jump_url
  endpoint:
    path: /GroupChannel/jump_url
    method: GET
    data_selector: jump_url
- name: read_state
  endpoint:
    path: /GroupChannel/read_state
    method: GET
    data_selector: read_state
- name: last_message
  endpoint:
    path: /GroupChannel/last_message
    method: GET
    data_selector: last_message
- name: acked_message_id
  endpoint:
    path: /GroupChannel/acked_message_id
    method: GET
    data_selector: acked_message_id
- name: acked_message
  endpoint:
    path: /GroupChannel/acked_message
    method: GET
    data_selector: acked_message
- name: acked_pin_timestamp
  endpoint:
    path: /GroupChannel/acked_pin_timestamp
    method: GET
    data_selector: acked_pin_timestamp
- name: mention_count
  endpoint:
    path: /GroupChannel/mention_count
    method: GET
    data_selector: mention_count
- name: last_viewed_timestamp
  endpoint:
    path: /GroupChannel/last_viewed_timestamp
    method: GET
    data_selector: last_viewed_timestamp
- name: guild_settings_update
  endpoint:
    path: /guilds/settings/update
    method: POST
    data_selector: settings
- name: payment_sources_update
  endpoint:
    path: /payment/sources/update
    method: POST
    data_selector: sources
- name: subscriptions_update
  endpoint:
    path: /subscriptions/update
    method: POST
    data_selector: subscriptions
- name: premium_guild_subscription_slot_create
  endpoint:
    path: /premium/guild/subscription/slot/create
    method: POST
    data_selector: slot
- name: premium_guild_subscription_slot_update
  endpoint:
    path: /premium/guild/subscription/slot/update
    method: POST
    data_selector: slot
- name: billing_popup_bridge_callback
  endpoint:
    path: /billing/popup/bridge/callback
    method: POST
    data_selector: callback
- name: library_application_update
  endpoint:
    path: /library/application/update
    method: POST
    data_selector: application
- name: entitlement_create
  endpoint:
    path: /entitlement/create
    method: POST
    data_selector: entitlement
- name: gift_create
  endpoint:
    path: /gift/create
    method: POST
    data_selector: gift
- name: connections_update
  endpoint:
    path: /connections/update
    method: POST
    data_selector: connections
- name: friend_suggestion_add
  endpoint:
    path: /friend/suggestion/add
    method: POST
    data_selector: friend_suggestion
- name: note_update
  endpoint:
    path: /note/update
    method: POST
    data_selector: note
- name: oauth2_token_revoke
  endpoint:
    path: /oauth2/token/revoke
    method: POST
    data_selector: token
- name: call_create
  endpoint:
    path: /call/create
    method: POST
    data_selector: call
- name: guild_available
  endpoint:
    path: /guild/available
    method: GET
    data_selector: guild
- name: guild_join
  endpoint:
    path: /guild/join
    method: POST
    data_selector: guild
- name: guild_remove
  endpoint:
    path: /guild/remove
    method: POST
    data_selector: guild
- name: guild_update
  endpoint:
    path: /guild/update
    method: POST
    data_selector: guild
- name: audit_log_entry_create
  endpoint:
    path: /guild/audit/log/entry/create
    method: POST
    data_selector: entry
- name: create_invite
  endpoint:
    path: /channels/{channel_id}/invites
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /voice/{channel_id}/connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
- name: ack
  endpoint:
    path: /channels/{channel_id}/ack
    method: POST
    data_selector: ack
    params: {}
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pins
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: message
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: files
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: /slash/commands
    method: GET
    data_selector: commands
    params: {}
- name: commands
  endpoint:
    path: /api/commands
    method: GET
- name: invite_create
  endpoint:
    path: /invites/create
    method: POST
    data_selector: invite
- name: invite_delete
  endpoint:
    path: /invites/delete
    method: DELETE
    data_selector: invite
- name: guild_feature_ack
  endpoint:
    path: /guild/feature/ack
    method: POST
    data_selector: payload
- name: integration_create
  endpoint:
    path: /integrations/create
    method: POST
    data_selector: integration
- name: integration_update
  endpoint:
    path: /integrations/update
    method: PATCH
    data_selector: integration
- name: guild_integrations_update
  endpoint:
    path: /guild/integrations/update
    method: POST
    data_selector: guild
- name: webhooks_update
  endpoint:
    path: /webhooks/update
    method: POST
    data_selector: channel
- name: raw_integration_delete
  endpoint:
    path: /integrations/raw/delete
    method: DELETE
    data_selector: payload
- name: interaction
  endpoint:
    path: /interactions
    method: POST
    data_selector: interaction
- name: interaction_finish
  endpoint:
    path: /interactions/finish
    method: POST
    data_selector: interaction
- name: modal
  endpoint:
    path: /modal
    method: POST
    data_selector: modal
- name: member_join
  endpoint:
    path: /members/join
    method: POST
    data_selector: member
- name: member_remove
  endpoint:
    path: /members/remove
    method: DELETE
    data_selector: member
- name: raw_member_remove
  endpoint:
    path: /members/raw/remove
    method: DELETE
    data_selector: payload
- name: member_update
  endpoint:
    path: /members/update
    method: PATCH
    data_selector:
      before: before
      after: after
- name: user_update
  endpoint:
    path: /users/update
    method: PATCH
    data_selector:
      before: before
      after: after
- name: member_ban
  endpoint:
    path: /guilds/{guild}/bans/{user}
    method: PUT
    data_selector:
      guild: guild
      user: user
- name: member_unban
  endpoint:
    path: /guilds/{guild}/bans/{user}
    method: DELETE
    data_selector:
      guild: guild
      user: user
- name: presence_update
  endpoint:
    path: /presence/update
    method: PATCH
    data_selector:
      before: before
      after: after
- name: raw_member_list_update
  endpoint:
    path: /members/raw/list/update
    method: POST
    data_selector: data
- name: message
  endpoint:
    path: /messages
    method: POST
    data_selector: message
- name: message_edit
  endpoint:
    path: /messages/edit
    method: PATCH
    data_selector:
      before: before
      after: after
- name: message_delete
  endpoint:
    path: /messages/delete
    method: DELETE
    data_selector: message
- name: bulk_message_delete
  endpoint:
    path: /messages/bulk/delete
    method: DELETE
    data_selector: messages
- name: message_ack
  endpoint:
    path: /messages/ack
    method: POST
    data_selector:
      message: message
      manual: manual
- name: raw_message_edit
  endpoint:
    path: /messages/raw/edit
    method: PATCH
    data_selector: payload
- name: raw_message_delete
  endpoint:
    path: /messages/raw/delete
    method: DELETE
    data_selector: payload
- name: raw_bulk_message_delete
  endpoint:
    path: /messages/raw/bulk/delete
    method: DELETE
    data_selector: payload
- name: raw_message_ack
  endpoint:
    path: /messages/raw/ack
    method: POST
    data_selector: payload
- name: recent_mention_delete
  endpoint:
    path: /mentions/recent/delete
    method: DELETE
    data_selector: message
- name: raw_recent_mention_delete
  endpoint:
    path: /mentions/raw/recent/delete
    method: DELETE
    data_selector: message_id
- name: poll_vote_add
  endpoint:
    path: /polls/vote/add
    method: POST
    data_selector:
      user: user
      answer: answer
- name: poll_vote_remove
  endpoint:
    path: /polls/vote/remove
    method: DELETE
    data_selector:
      user: user
      answer: answer
- name: raw_poll_vote_add
  endpoint:
    path: /polls/raw/vote/add
    method: POST
    data_selector: payload
- name: raw_poll_vote_remove
  endpoint:
    path: /polls/raw/vote/remove
    method: DELETE
    data_selector: payload
- name: message
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
- name: audit_log_diff
  endpoint:
    path: /audit/logs/diff
    method: GET
    data_selector: changes
- name: PartialMessage
  endpoint:
    path: /discord/PartialMessage
    method: GET
    data_selector: message
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
- name: reaction
  endpoint:
    path: /reaction
    method: GET
    data_selector: records
- name: invite
  endpoint:
    path: /api/v1/invites
    method: GET
    data_selector: invites
    params: {}
- name: invite
  endpoint:
    path: /invites/{invite_code}
    method: GET
    data_selector: invite
    params: {}
- name: sync_webhook
  endpoint:
    path: /webhooks/:id/:token
    method: POST
- name: invite
  endpoint:
    path: /invite
    method: GET
    data_selector: invite_data
- name: edit_message
  endpoint:
    path: /edit_message
    method: POST
- name: delete_message
  endpoint:
    path: /delete_message
    method: DELETE
- name: invite
  endpoint:
    path: /discord/invite
    method: GET
    data_selector: invites
    params: {}
- name: guild_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: invites
  endpoint:
    path: /invites
    method: GET
- name: messages
  endpoint:
    path: /messages
    method: POST
- name: ApplicationCommand
  endpoint:
    path: /application-commands
    method: GET
    data_selector: commands
    params: {}
- name: user
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: invites
  endpoint:
    path: /invites
    method: GET
    data_selector: invites
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 200
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
- name: fetch_user
  endpoint:
    path: /fetch_user/{user_id}
    method: GET
    data_selector: discord.User
- name: fetch_user_profile
  endpoint:
    path: /fetch_user_profile/{user_id}
    method: GET
    data_selector: discord.UserProfile
- name: fetch_widget
  endpoint:
    path: /fetch_widget/{guild_id}
    method: GET
    data_selector: discord.Widget
- name: fetch_channel
  endpoint:
    path: /fetch_channel/{channel_id}
    method: GET
    data_selector: discord.abc.GuildChannel, discord.abc.PrivateChannel, discord.Thread
- name: message
  endpoint:
    path: /channels/{channel.id}/messages
    method: POST
    data_selector: message
    params: {}
- name: friend_request
  endpoint:
    path: /users/@me/relationships
    method: POST
    data_selector: friend_request
    params: {}
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: records
    params: {}
- name: applications
  endpoint:
    path: /applications
    method: POST
    data_selector: application
    params: {}
- name: teams
  endpoint:
    path: /teams
    method: POST
    data_selector: team
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
    params: {}
- name: connection
  endpoint:
    path: /discord/Connection
    method: GET
- name: partial_connection
  endpoint:
    path: /discord/PartialConnection
    method: GET
- name: relationship
  endpoint:
    path: /discord/Relationship
    method: GET
- name: friend_suggestion
  endpoint:
    path: /discord/FriendSuggestion
    method: GET
- name: user_settings
  endpoint:
    path: /users/@me/settings
    method: GET
    data_selector: settings
- name: LegacyUserSettings
  endpoint:
    path: /legacy/user/settings
    method: GET
- name: GuildSettings
  endpoint:
    path: /guild/settings
    method: GET
- name: ChannelSettings
  endpoint:
    path: /channel/settings
    method: GET
- name: promotions
  endpoint:
    path: /promotions
    method: GET
    data_selector: promotions
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: user_offer
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: trial_offer
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: pricing_promotion
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: applications
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: oauth2_applications
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
    data_selector: giftable_entitlements
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
    data_selector: premium_entitlements
- name: fetch_authorization
  endpoint:
    path: /fetch_authorization
    method: GET
    data_selector: authorization
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
    data_selector: gift
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
    data_selector: sku
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
    data_selector: store_listing
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
    data_selector: published_store_listing
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
    data_selector: published_store_listings
- name: activity_statistics
  endpoint:
    path: /applications/{application.id}/activity/statistics
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /applications/{application.id}/assets
    method: GET
    data_selector: data
    params: {}
- name: branches
  endpoint:
    path: /applications/{application.id}/branches
    method: GET
    data_selector: data
    params: {}
- name: create_asset
  endpoint:
    path: /applications/{application.id}/assets
    method: POST
    data_selector: data
    params: {}
- name: create_bot
  endpoint:
    path: /applications/{application.id}/bots
    method: POST
    data_selector: data
    params: {}
- name: create_branch
  endpoint:
    path: /applications/{application.id}/branches
    method: POST
    data_selector: data
    params: {}
- name: create_gift_batch
  endpoint:
    path: /applications/{application.id}/gift-batch
    method: POST
    data_selector: data
    params: {}
- name: create_sku
  endpoint:
    path: /applications/{application.id}/skus
    method: POST
    data_selector: data
    params: {}
- name: create_store_asset
  endpoint:
    path: /applications/{application.id}/store-assets
    method: POST
    data_selector: data
    params: {}
- name: edit
  endpoint:
    path: /applications/{application.id}
    method: PATCH
    data_selector: data
    params: {}
- name: edit_bot
  endpoint:
    path: /applications/{application.id}/bots
    method: PATCH
    data_selector: data
    params: {}
- name: fetch_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: GET
    data_selector: data
    params: {}
- name: fetch_discoverability
  endpoint:
    path: /applications/{application.id}/discoverability
    method: GET
    data_selector: data
    params: {}
- name: fetch_embedded_activity_config
  endpoint:
    path: /applications/{application.id}/embedded-activity-config
    method: GET
    data_selector: data
    params: {}
- name: primary_sku
  endpoint:
    path: /applications/{application.id}/primary-sku
    method: GET
    data_selector: data
    params: {}
- name: primary_store_listing
  endpoint:
    path: /applications/{application.id}/primary-store-listing
    method: GET
    data_selector: data
    params: {}
- name: published_store_listings
  endpoint:
    path: /applications/{application.id}/published-store-listings
    method: GET
    data_selector: data
    params: {}
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
    params: {}
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
    params: {}
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: eula
    params: {}
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
    params: {}
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
    params: {}
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
    params: {}
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: mentions
    params:
      limit: 25
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
    params: {}
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
    params: {}
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
    params: {}
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
    params: {}
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhook_id
    params: {}
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: response
    params: {}
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: unverified_application
    params: {}
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiment_rollouts
    params:
      with_guild_experiments: true
- name: application_profile
  endpoint:
    path: /applications/@me
    method: GET
    data_selector: data
- name: application_bot
  endpoint:
    path: /applications/@me/bot
    method: GET
    data_selector: data
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
- name: application_activity_statistics
  endpoint:
    path: /application_activity_statistics
    method: GET
    data_selector: statistics
- name: ApplicationBranch
  endpoint:
    path: /application/branch
    method: GET
    data_selector: builds
- name: ApplicationBuild
  endpoint:
    path: /application/build
    method: GET
    data_selector: builds
- name: ManifestLabel
  endpoint:
    path: /manifest/label
    method: GET
    data_selector: labels
- name: Manifest
  endpoint:
    path: /manifest
    method: GET
    data_selector: manifests
- name: Team
  endpoint:
    path: /team
    method: GET
    data_selector: teams
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: team_member
  endpoint:
    path: /teams/{team_id}/members
    method: GET
    data_selector: members
- name: reaction_add
  endpoint:
    path: /on_reaction_add
    method: POST
    data_selector: reaction
- name: reaction_remove
  endpoint:
    path: /on_reaction_remove
    method: POST
    data_selector: reaction
- name: reaction_clear
  endpoint:
    path: /on_reaction_clear
    method: POST
    data_selector: message
- name: reaction_clear_emoji
  endpoint:
    path: /on_reaction_clear_emoji
    method: POST
    data_selector: reaction
- name: raw_reaction_add
  endpoint:
    path: /on_raw_reaction_add
    method: POST
    data_selector: payload
- name: raw_reaction_remove
  endpoint:
    path: /on_raw_reaction_remove
    method: POST
    data_selector: payload
- name: raw_reaction_clear
  endpoint:
    path: /on_raw_reaction_clear
    method: POST
    data_selector: payload
- name: raw_reaction_clear_emoji
  endpoint:
    path: /on_raw_reaction_clear_emoji
    method: POST
    data_selector: payload
- name: guild_role_create
  endpoint:
    path: /on_guild_role_create
    method: POST
    data_selector: role
- name: guild_role_delete
  endpoint:
    path: /on_guild_role_delete
    method: POST
    data_selector: role
- name: guild_role_update
  endpoint:
    path: /on_guild_role_update
    method: POST
    data_selector: before
- name: scheduled_event_create
  endpoint:
    path: /on_scheduled_event_create
    method: POST
    data_selector: event
- name: scheduled_event_delete
  endpoint:
    path: /on_scheduled_event_delete
    method: POST
    data_selector: event
- name: scheduled_event_update
  endpoint:
    path: /on_scheduled_event_update
    method: POST
    data_selector: before
- name: scheduled_event_user_add
  endpoint:
    path: /on_scheduled_event_user_add
    method: POST
    data_selector: event
- name: scheduled_event_user_remove
  endpoint:
    path: /on_scheduled_event_user_remove
    method: POST
    data_selector: event
- name: raw_scheduled_event_user_add
  endpoint:
    path: /on_raw_scheduled_event_user_add
    method: POST
    data_selector: event
- name: raw_scheduled_event_user_remove
  endpoint:
    path: /on_raw_scheduled_event_user_remove
    method: POST
    data_selector: event
- name: scheduled_event_ack
  endpoint:
    path: /on_scheduled_event_ack
    method: POST
    data_selector: event
- name: stage_instance_create
  endpoint:
    path: /on_stage_instance_create
    method: POST
    data_selector: stage_instance
- name: stage_instance_delete
  endpoint:
    path: /on_stage_instance_delete
    method: POST
    data_selector: stage_instance
- name: stage_instance_update
  endpoint:
    path: /on_stage_instance_update
    method: POST
    data_selector: before
- name: thread_create
  endpoint:
    path: /on_thread_create
    method: POST
    data_selector: thread
- name: thread_join
  endpoint:
    path: /on_thread_join
    method: POST
    data_selector: thread
- name: thread_update
  endpoint:
    path: /on_thread_update
    method: POST
    data_selector: before
- name: thread_remove
  endpoint:
    path: /on_thread_remove
    method: POST
    data_selector: thread
- name: thread_delete
  endpoint:
    path: /on_thread_delete
    method: POST
    data_selector: thread
- name: raw_thread_delete
  endpoint:
    path: /on_raw_thread_delete
    method: POST
    data_selector: payload
- name: thread_member_join
  endpoint:
    path: /on_thread_member_join
    method: POST
    data_selector: member
- name: thread_member_remove
  endpoint:
    path: /on_thread_member_remove
    method: POST
    data_selector: member
- name: raw_thread_member_remove
  endpoint:
    path: /on_raw_thread_member_remove
    method: POST
    data_selector: payload
- name: voice_state_update
  endpoint:
    path: /on_voice_state_update
    method: POST
    data_selector: member
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params: {}
- name: team_payout
  endpoint:
    path: /team/payouts
    method: GET
    data_selector: payouts
    params: {}
- name: company
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params: {}
- name: eula
  endpoint:
    path: /eulas
    method: GET
    data_selector: eulas
    params: {}
- name: entitlement
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
    params: {}
- name: gift
  endpoint:
    path: /discord/gift
    method: GET
    data_selector: gift
- name: gift_batch
  endpoint:
    path: /discord/gift_batch
    method: GET
    data_selector: gift_batch
- name: library_application
  endpoint:
    path: /discord/library_application
    method: GET
    data_selector: library_application
- name: AuditLogAction
  endpoint:
    path: /discord/AuditLogAction
    method: GET
    data_selector: actions
    params: {}
- name: ContentFilter
  endpoint:
    path: /discord/ContentFilter
    method: GET
    data_selector: filters
    params: {}
- name: Status
  endpoint:
    path: /discord/Status
    method: GET
    data_selector: statuses
    params: {}
- name: subscription_plan
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: records
- name: payment
  endpoint:
    path: /payments
    method: GET
    data_selector: records
- name: sku
  endpoint:
    path: /skus
    method: GET
    data_selector: records
- name: sku
  endpoint:
    path: /discord/sku
    method: GET
    data_selector: records
- name: audit_log_diff
  endpoint:
    path: /guilds/{guild.id}/audit-logs
    method: GET
    data_selector: changes
    params: {}
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: records
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: listings
- name: guild
  endpoint:
    path: /api/v1/guilds
    method: GET
    data_selector: guilds
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: guild
  endpoint:
    path: /guilds/{guild.id}
    method: GET
    data_selector: guild
    params: {}
- name: bans
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: bans
    params:
      limit: 1000
- name: message
  endpoint:
    path: /webhook/message
    method: GET
    data_selector: message
- name: thread
  endpoint:
    path: /webhook/thread
    method: GET
    data_selector: thread
- name: SyncWebhook
  endpoint:
    path: /discord/webhook
    method: POST
    data_selector: webhook
- name: edit_message
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}/messages/{message_id}
    method: PATCH
    data_selector: message
    params: {}
- name: delete_message
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}/messages/{message_id}
    method: DELETE
    data_selector: message
    params: {}
- name: guild_channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: channel
- name: create_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: POST
    data_selector: sticker
- name: delete_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers/{sticker_id}
    method: DELETE
    data_selector: sticker
- name: fetch_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: GET
    data_selector: events
- name: create_scheduled_event
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: POST
    data_selector: event
- name: fetch_emojis
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: GET
    data_selector: emojis
- name: create_custom_emoji
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: POST
    data_selector: emoji
- name: fetch_roles
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
- name: create_role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: POST
    data_selector: role
- name: automod_rules
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: fetch_automod_rule
  endpoint:
    path: /automod/rules/{automod_rule_id}
    method: GET
    data_selector: rule
- name: create_automod_rule
  endpoint:
    path: /automod/rules
    method: POST
    data_selector: rule
- name: admin_community_eligibility
  endpoint:
    path: /admin/community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /admin/community/join
    method: POST
    data_selector: community
- name: migrate_command_scope
  endpoint:
    path: /command/scope/migrate
    method: POST
    data_selector: integration_ids
- name: BanEntry
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: bans
    params: {}
- name: BulkBanResult
  endpoint:
    path: /guilds/{guild_id}/bans/bulk
    method: POST
    data_selector: result
    params: {}
- name: Role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
    params: {}
- name: channel_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    params:
      limit: 200
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    params:
      limit: 25
      most_relevant: false
- name: scheduled_event
  endpoint:
    path: /scheduled_events
    method: POST
    data_selector: event
    params: {}
- name: integration
  endpoint:
    path: /integrations
    method: GET
    data_selector: integrations
    params: {}
- name: billing_address
  endpoint:
    path: /discord/BillingAddress
    method: GET
    data_selector: records
- name: payment_source
  endpoint:
    path: /discord/PaymentSource
    method: GET
    data_selector: records
- name: premium_usage
  endpoint:
    path: /discord/PremiumUsage
    method: GET
    data_selector: records
- name: auto_mod_rule
  endpoint:
    path: /auto_mod_rule
    method: GET
- name: member
  endpoint:
    path: /api/v10/members
    method: GET
    data_selector: members
    params: {}
- name: LegacyUserSettings
  endpoint:
    path: /legacy/user/settings
    method: GET
    data_selector: settings
    params: {}
- name: activity_statistics
  endpoint:
    path: /applications/{application.id}/activity-statistics
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /applications/{application.id}/assets
    method: GET
    data_selector: data
    params: {}
- name: branches
  endpoint:
    path: /applications/{application.id}/branches
    method: GET
    data_selector: data
    params: {}
- name: member_profile
  endpoint:
    path: /api/v1/member_profile
    method: GET
    data_selector: records
    params: {}
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      limit: 25
      offset: 0
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
    data_selector: files
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
- name: PartialEmoji
  endpoint:
    path: /discord/PartialEmoji
    method: GET
- name: Sticker
  endpoint:
    path: /discord/Sticker
    method: GET
- name: StickerItem
  endpoint:
    path: /discord/StickerItem
    method: GET
- name: StickerPack
  endpoint:
    path: /discord/StickerPack
    method: GET
- name: StandardSticker
  endpoint:
    path: /discord/StandardSticker
    method: GET
- name: application_branch
  endpoint:
    path: /applications/{application_id}/branches
    method: GET
    data_selector: branches
- name: application_build
  endpoint:
    path: /applications/{application_id}/builds
    method: GET
    data_selector: builds
- name: manifest
  endpoint:
    path: /applications/{application_id}/manifests
    method: GET
    data_selector: manifests
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: guild_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
    data_selector: stickers
- name: category_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: voice_client
  endpoint:
    path: /voice/connect
    method: POST
    data_selector: voiceConnection
    params:
      timeout: 30.0
      reconnect: true
- name: dm_channel
  endpoint:
    path: /dm/create
    method: POST
    data_selector: channel
    params: {}
- name: message_history
  endpoint:
    path: /messages/history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /messages/pins
    method: GET
    data_selector: pinnedMessages
    params: {}
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params: {}
- name: team_payout
  endpoint:
    path: /team/payouts
    method: GET
    data_selector: payouts
    params: {}
- name: company
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params: {}
- name: EULA
  endpoint:
    path: /eulas
    method: GET
    data_selector: eulas
    params: {}
- name: entitlement
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
    params: {}
- name: Gift
  endpoint:
    path: /discord/gift
    method: GET
    data_selector: records
- name: voice_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: channel
    params: {}
- name: Subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: message
- name: partial_message
  endpoint:
    path: /messages/partial/{message_id}
    method: GET
    data_selector: partial_message
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
- name: purge
  endpoint:
    path: /channels/{channel_id}/messages/bulk-delete
    method: POST
    data_selector: deleted_messages
- name: subscription_trial
  endpoint:
    path: /discord/SubscriptionTrial
    method: GET
    data_selector: trial
- name: premium_guild_subscription
  endpoint:
    path: /discord/PremiumGuildSubscription
    method: GET
    data_selector: premium_guild_subscription
- name: premium_guild_subscription_slot
  endpoint:
    path: /discord/PremiumGuildSubscriptionSlot
    method: GET
    data_selector: premium_guild_subscription_slot
- name: premium_guild_subscription_cooldown
  endpoint:
    path: /discord/PremiumGuildSubscriptionCooldown
    method: GET
    data_selector: premium_guild_subscription_cooldown
- name: subscription_plan
  endpoint:
    path: /discord/SubscriptionPlan
    method: GET
    data_selector: subscription_plan
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: '25'
      offset: '0'
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
    params: {}
- name: SKU
  endpoint:
    path: /discord/sku
    method: GET
    data_selector: records
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: records
- name: voice_states
  endpoint:
    path: /voice_states
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: stage_channel
  endpoint:
    path: /stage_channel
    method: GET
- name: StoreListing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: store_listings
- name: guild
  endpoint:
    path: /guilds/{guild.id}
    method: GET
- name: channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: data
    params: {}
- name: guild
  endpoint:
    path: /guilds/{guild.id}
    method: GET
    data_selector: guild
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: purge
  endpoint:
    path: /channels/{channel_id}/messages
    method: DELETE
    data_selector: deleted_messages
    params:
      limit: 100
- name: bans
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: ban_entries
    params:
      limit: 1000
- name: fetch_channels
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
    params: {}
- name: fetch_member
  endpoint:
    path: /guilds/{guild_id}/members/{member_id}
    method: GET
    data_selector: member
    params: {}
- name: read_state
  endpoint:
    path: /discord/StageChannel/read_state
    method: GET
- name: scheduled_events
  endpoint:
    path: /discord/StageChannel/scheduled_events
    method: GET
- name: search
  endpoint:
    path: /discord/StageChannel/search
    method: GET
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /discord/StageChannel/send
    method: POST
- name: set_permissions
  endpoint:
    path: /discord/StageChannel/set_permissions
    method: POST
- name: slash_commands
  endpoint:
    path: /discord/StageChannel/slash_commands
    method: GET
- name: directory_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: entries
- name: forum_channel
  endpoint:
    path: /forum_channels
    method: GET
    data_selector: records
- name: create_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: POST
    data_selector: sticker
- name: delete_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers/{sticker_id}
    method: DELETE
    data_selector: sticker
- name: subscribed_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: GET
    data_selector: events
- name: fetch_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: GET
    data_selector: events
- name: create_scheduled_event
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: POST
    data_selector: event
- name: top_emojis
  endpoint:
    path: /guilds/{guild_id}/emojis/top
    method: GET
    data_selector: emojis
- name: fetch_emojis
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: GET
    data_selector: emojis
- name: fetch_roles
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
- name: create_role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: POST
    data_selector: role
- name: permissions_synced
  endpoint:
    path: /permissions_synced
    method: GET
    data_selector: records
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: records
- name: applications
  endpoint:
    path: /guilds/{guild.id}/applications
    method: GET
- name: premium_subscriptions
  endpoint:
    path: /guilds/{guild.id}/premium-subscriptions
    method: GET
- name: entitlements
  endpoint:
    path: /guilds/{guild.id}/entitlements
    method: GET
- name: price_tiers
  endpoint:
    path: /guilds/{guild.id}/price-tiers
    method: GET
- name: members
  endpoint:
    path: /guilds/{guild.id}/members
    method: GET
- name: automod_rules
  endpoint:
    path: /guilds/{guild.id}/automod/rules
    method: GET
    data_selector: automod_rules
- name: fetch_automod_rule
  endpoint:
    path: /guilds/{guild.id}/automod/rules/{automod_rule_id}
    method: GET
    data_selector: automod_rule
- name: create_automod_rule
  endpoint:
    path: /guilds/{guild.id}/automod/rules
    method: POST
    data_selector: automod_rule
- name: admin_community_eligibility
  endpoint:
    path: /guilds/{guild.id}/admin-community-eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /guilds/{guild.id}/admin-community
    method: POST
    data_selector: community
- name: migrate_command_scope
  endpoint:
    path: /guilds/{guild.id}/migrate-command-scope
    method: POST
    data_selector: integration_ids
- name: webhook_channels
  endpoint:
    path: /guilds/{guild.id}/webhook-channels
    method: GET
    data_selector: webhook_channels
- name: origin_channel_id
  endpoint:
    path: /origin_channel_id
    method: GET
    data_selector: origin_channel_id
- name: typing
  endpoint:
    path: /typing
    method: POST
    data_selector: typing
- name: notification_settings
  endpoint:
    path: /notification_settings
    method: GET
    data_selector: notification_settings
- name: owner
  endpoint:
    path: /owner
    method: GET
    data_selector: owner
- name: call
  endpoint:
    path: /call
    method: GET
    data_selector: call
- name: type
  endpoint:
    path: /type
    method: GET
    data_selector: type
- name: guild
  endpoint:
    path: /guild
    method: GET
    data_selector: guild
- name: icon
  endpoint:
    path: /icon
    method: GET
    data_selector: icon
- name: created_at
  endpoint:
    path: /created_at
    method: GET
    data_selector: created_at
- name: jump_url
  endpoint:
    path: /jump_url
    method: GET
    data_selector: jump_url
- name: read_state
  endpoint:
    path: /read_state
    method: GET
    data_selector: read_state
- name: last_message
  endpoint:
    path: /last_message
    method: GET
    data_selector: last_message
- name: acked_message_id
  endpoint:
    path: /acked_message_id
    method: GET
    data_selector: acked_message_id
- name: acked_message
  endpoint:
    path: /acked_message
    method: GET
    data_selector: acked_message
- name: acked_pin_timestamp
  endpoint:
    path: /acked_pin_timestamp
    method: GET
    data_selector: acked_pin_timestamp
- name: mention_count
  endpoint:
    path: /mention_count
    method: GET
    data_selector: mention_count
- name: last_viewed_timestamp
  endpoint:
    path: /last_viewed_timestamp
    method: GET
    data_selector: last_viewed_timestamp
- name: BanEntry
  endpoint:
    path: /bans
    method: GET
    data_selector: bans
    params: {}
- name: BulkBanResult
  endpoint:
    path: /bulk_ban
    method: POST
    data_selector: bulkBanResult
    params: {}
- name: Role
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
    params: {}
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
      cls: VoiceClient
      ring: true
- name: ack
  endpoint:
    path: /ack
    method: POST
    data_selector: ack_response
- name: ack_pins
  endpoint:
    path: /ack_pins
    method: POST
    data_selector: ack_pins_response
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
    data_selector: commands
- name: fetch_message
  endpoint:
    path: /fetch_message/{id}
    method: GET
    data_selector: message
- name: greet
  endpoint:
    path: /greet
    method: POST
    data_selector: greeting
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pinned_messages
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: search_results
    params:
      limit: 25
      offset: 0
- name: member
  endpoint:
    path: /guilds/{guild.id}/members/{user.id}
    method: GET
    data_selector: member
- name: send_message
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: unacknowledge_messages
  endpoint:
    path: /unack
    method: POST
    data_selector: unacknowledged
    params: {}
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
    data_selector: uploaded_files
    params: {}
- name: member
  endpoint:
    path: /members
    method: GET
    data_selector: members
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params:
      limit: null
- name: slash_commands
  endpoint:
    path: /channel/slash_commands
    method: GET
    data_selector: commands
    params:
      limit: null
- name: pinned_messages
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: messages
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: unacknowledge_messages
  endpoint:
    path: /channels/{channel_id}/messages/unacknowledge
    method: POST
    data_selector: unacknowledged
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages/files
    method: POST
    data_selector: uploaded_files
- name: member_profile
  endpoint:
    path: /api/v1/member_profile
    method: GET
    data_selector: member_data
    params: {}
- name: member_profile
  endpoint:
    path: /guilds/{guild.id}/members/{user.id}
    method: GET
    data_selector: member
    params: {}
- name: scheduled_event
  endpoint:
    path: /scheduled_events
    method: GET
    data_selector: events
- name: speakers
  endpoint:
    path: /speakers
    method: GET
    data_selector: members
- name: participant_count
  endpoint:
    path: /participant_count
    method: GET
    data_selector: count
- name: message
  endpoint:
    path: /discord/api/v1/messages
    method: GET
    data_selector: messages
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: send_friend_request
  endpoint:
    path: /send_friend_request
    method: POST
    data_selector: request
    params: {}
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: commands
    params: {}
- name: timeout
  endpoint:
    path: /timeout
    method: POST
    data_selector: timeout
    params: {}
- name: unack
  endpoint:
    path: /unack
    method: POST
    data_selector: unacknowledged
    params: {}
- name: unban
  endpoint:
    path: /unban
    method: POST
    data_selector: unban
    params: {}
- name: unblock
  endpoint:
    path: /unblock
    method: POST
    data_selector: unblock
    params: {}
- name: message
  endpoint:
    path: /messages
    method: GET
    data_selector: records
    params: {}
- name: PartialMessage
  endpoint:
    path: /discord/PartialMessage
    method: GET
    data_selector: records
- name: PartialEmoji
  endpoint:
    path: /discord/PartialEmoji
    method: GET
    data_selector: records
- name: Sticker
  endpoint:
    path: /discord/Sticker
    method: GET
    data_selector: records
- name: StickerItem
  endpoint:
    path: /discord/StickerItem
    method: GET
    data_selector: records
- name: StickerPack
  endpoint:
    path: /discord/StickerPack
    method: GET
    data_selector: records
- name: StandardSticker
  endpoint:
    path: /discord/StandardSticker
    method: GET
    data_selector: records
- name: clear_reaction
  endpoint:
    path: /clear_reaction
    method: POST
- name: create_thread
  endpoint:
    path: /create_thread
    method: POST
- name: ack
  endpoint:
    path: /ack
    method: POST
- name: unack
  endpoint:
    path: /unack
    method: POST
- name: fetch_thread
  endpoint:
    path: /fetch_thread
    method: GET
- name: reply
  endpoint:
    path: /reply
    method: POST
- name: greet
  endpoint:
    path: /greet
    method: POST
- name: end_poll
  endpoint:
    path: /end_poll
    method: POST
- name: forums
  endpoint:
    path: /forums
    method: GET
- name: directory_channels
  endpoint:
    path: /directory_channels
    method: GET
- name: directories
  endpoint:
    path: /directories
    method: GET
- name: text_channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: channel
    params: {}
- name: reaction
  endpoint:
    path: /reactions
    method: GET
    data_selector: attributes
- name: ActionRow
  endpoint:
    path: /discord/ActionRow
    method: GET
    data_selector: children
- name: Button
  endpoint:
    path: /discord/Button
    method: GET
    data_selector: label
- name: SelectMenu
  endpoint:
    path: /discord/SelectMenu
    method: GET
    data_selector: options
- name: TextInput
  endpoint:
    path: /discord/TextInput
    method: GET
    data_selector: value
- name: invite
  endpoint:
    path: /invites/{invite_code}
    method: GET
    data_selector: invite
    params: {}
- name: invite
  endpoint:
    path: /api/v10/invites/{invite.code}
    method: GET
    data_selector: invite
    params: {}
- name: invite
  endpoint:
    path: /invites/{invite.code}
    method: GET
    data_selector: invite
    params: {}
- name: notification_settings
  endpoint:
    path: /channels/{channel_id}/notification_settings
    method: GET
    data_selector: notification_settings
- name: overwrites
  endpoint:
    path: /channels/{channel_id}/overwrites
    method: GET
    data_selector: overwrites
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pins
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
- name: send
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /channels/{channel_id}/permissions/{overwrite_id}
    method: PUT
    data_selector: permissions
- name: invite
  endpoint:
    path: /invites
    method: GET
    data_selector: invites
- name: voice_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: voice_channels
- name: channel
  endpoint:
    path: /channels
    method: POST
- name: edit_channel
  endpoint:
    path: /channels/{channel.id}
    method: PATCH
- name: create_invite
  endpoint:
    path: /channels/{channel.id}/invites
    method: POST
- name: create_webhook
  endpoint:
    path: /channels/{channel.id}/webhooks
    method: POST
- name: delete_channel
  endpoint:
    path: /channels/{channel.id}
    method: DELETE
- name: message
  endpoint:
    path: /message/{id}
    method: GET
    data_selector: message
    params: {}
- name: partial_message
  endpoint:
    path: /message/{message_id}/partial
    method: GET
    data_selector: partial_message
    params: {}
- name: history
  endpoint:
    path: /channel/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channel/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /channel/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: purge
  endpoint:
    path: /channel/{channel_id}/messages/purge
    method: DELETE
    data_selector: deleted_messages
    params:
      limit: 100
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: '25'
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
    params: {}
- name: fetch_relationships
  endpoint:
    path: /fetch_relationships
    method: GET
- name: friend_suggestions
  endpoint:
    path: /friend_suggestions
    method: GET
- name: fetch_country_code
  endpoint:
    path: /fetch_country_code
    method: GET
- name: fetch_location_info
  endpoint:
    path: /fetch_location_info
    method: GET
- name: fetch_preferred_rtc_regions
  endpoint:
    path: /fetch_preferred_rtc_regions
    method: GET
- name: create_dm
  endpoint:
    path: /create_dm
    method: POST
- name: create_group
  endpoint:
    path: /create_group
    method: POST
- name: send_friend_request
  endpoint:
    path: /send_friend_request
    method: POST
- name: applications
  endpoint:
    path: /applications
    method: GET
- name: detectable_applications
  endpoint:
    path: /detectable_applications
    method: GET
- name: fetch_application
  endpoint:
    path: /fetch_application/{application_id}
    method: GET
- name: fetch_partial_application
  endpoint:
    path: /fetch_partial_application/{application_id}
    method: GET
- name: fetch_public_application
  endpoint:
    path: /fetch_public_application/{application_id}
    method: GET
- name: fetch_public_applications
  endpoint:
    path: /fetch_public_applications
    method: GET
- name: teams
  endpoint:
    path: /teams
    method: GET
- name: fetch_team
  endpoint:
    path: /fetch_team/{team_id}
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
- name: promotions
  endpoint:
    path: /promotions
    method: GET
    data_selector: promotions
- name: read_state
  endpoint:
    path: /read_state
    method: GET
- name: scheduled_events
  endpoint:
    path: /scheduled_events
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
- name: directory_channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: directory_entries
    params: {}
- name: fetch_entries
  endpoint:
    path: /fetch_entries
    method: GET
    data_selector: entries
- name: search_entries
  endpoint:
    path: /search_entries
    method: GET
    data_selector: entries
- name: create_entry
  endpoint:
    path: /create_entry
    method: POST
    data_selector: entry
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
    data_selector: invite
- name: delete
  endpoint:
    path: /delete
    method: DELETE
- name: invites
  endpoint:
    path: /invites
    method: GET
    data_selector: active_invites
- name: archived_threads
  endpoint:
    path: /channels/{channel_id}/threads/archived
    method: GET
- name: create_thread
  endpoint:
    path: /channels/{channel_id}/threads
    method: POST
- name: edit
  endpoint:
    path: /channels/{channel_id}
    method: PATCH
- name: promotions
  endpoint:
    path: /promotions
    method: GET
    data_selector: promotions
    params: {}
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: user_offer
    params:
      payment_gateway: null
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: trial_offer
    params: {}
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: pricing_promotion
    params: {}
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: library
    params: {}
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: authorizations
    params: {}
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
    params:
      with_sku: true
      with_application: true
      include_ended: true
      entitlement_type: null
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
    data_selector: giftable_entitlements
    params: {}
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
    data_selector: premium_entitlements
    params:
      include_consumed: true
- name: fetch_entitlements
  endpoint:
    path: /fetch_entitlements
    method: GET
    data_selector: fetch_entitlements
    params:
      application_id: null
      include_consumed: true
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
    data_selector: fetch_gift
    params:
      code: null
      with_application: false
      with_subscription_plan: true
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
    data_selector: fetch_sku
    params:
      sku_id: null
      localize: true
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
    data_selector: fetch_store_listing
    params:
      listing_id: null
      localize: true
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
    data_selector: fetch_published_store_listing
    params:
      sku_id: null
      localize: true
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
    data_selector: fetch_published_store_listings
    params:
      application_id: null
      localize: true
- name: create_thread
  endpoint:
    path: /channels/{channel_id}/threads
    method: POST
    params: {}
- name: archived_threads
  endpoint:
    path: /channels/{channel_id}/threads/archived
    method: GET
    params:
      limit: 100
- name: create_invite
  endpoint:
    path: /channels/{channel_id}/invites
    method: POST
    params: {}
- name: permissions_synced
  endpoint:
    path: /permissions/synced
    method: GET
    data_selector: permissions_synced
- name: requested_at
  endpoint:
    path: /discord/DMChannel/requested_at
    method: GET
    data_selector: requested_at
- name: is_message_request
  endpoint:
    path: /discord/DMChannel/is_message_request
    method: GET
    data_selector: is_message_request
- name: is_accepted
  endpoint:
    path: /discord/DMChannel/is_accepted
    method: GET
    data_selector: is_accepted
- name: is_spam
  endpoint:
    path: /discord/DMChannel/is_spam
    method: GET
    data_selector: is_spam
- name: permissions_for
  endpoint:
    path: /discord/DMChannel/permissions_for
    method: GET
    data_selector: permissions
- name: add_recipients
  endpoint:
    path: /discord/DMChannel/add_recipients
    method: POST
    data_selector: new_group
- name: close
  endpoint:
    path: /discord/DMChannel/close
    method: DELETE
    data_selector: close_channel
- name: connect
  endpoint:
    path: /discord/DMChannel/connect
    method: POST
    data_selector: voice_client
- name: accept
  endpoint:
    path: /discord/DMChannel/accept
    method: POST
    data_selector: accepted_request
- name: decline
  endpoint:
    path: /discord/DMChannel/decline
    method: DELETE
    data_selector: declined_request
- name: ack
  endpoint:
    path: /discord/DMChannel/ack
    method: POST
    data_selector: acknowledged_messages
- name: pins
  endpoint:
    path: /discord/DMChannel/pins
    method: GET
    data_selector: pinned_messages
- name: history
  endpoint:
    path: /discord/DMChannel/history
    method: GET
    data_selector: message_history
- name: search
  endpoint:
    path: /discord/DMChannel/search
    method: GET
    data_selector: search_results
- name: group_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: channel
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
    params: {}
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
    params: {}
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
    params: {}
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: subscription_plans
    params: {}
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: subscription_plans
    params: {}
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: eula
    params: {}
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
    params: {}
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
    params: {}
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier
    params: {}
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
    params: {}
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
    params: {}
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: recent_mentions
    params: {}
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: delete_status
    params: {}
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
    params: {}
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
    params: {}
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
    params: {}
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
    params: {}
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhook_id
    params: {}
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: DELETE
    data_selector: leave_status
    params: {}
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: reported_application
    params: {}
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
    params: {}
- name: group_channel
  endpoint:
    path: /v2/group_channel
    method: GET
    data_selector: channels
    params: {}
- name: create_invite
  endpoint:
    path: /channels/{channel_id}/invites
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /channels/{channel_id}/connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
- name: ack
  endpoint:
    path: /channels/{channel_id}/ack
    method: POST
    data_selector: acknowledgement
    params: {}
- name: fetch_message
  endpoint:
    path: /channels/{channel_id}/messages/{message_id}
    method: GET
    data_selector: message
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: search_results
    params:
      limit: 25
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: unacknowledge_messages
  endpoint:
    path: /channels/{channel_id}/messages/unack
    method: POST
    data_selector: unacknowledged
    params: {}
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages/files
    method: POST
    data_selector: uploaded_files
    params: {}
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: messages
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
- name: send
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: slash_commands
  endpoint:
    path: /channels/{channel_id}/commands
    method: GET
    data_selector: commands
- name: guild_settings_update
  endpoint:
    path: /guild/settings/update
    method: CALL
    data_selector: update
- name: payment_sources_update
  endpoint:
    path: /payment/sources/update
    method: CALL
    data_selector: update
- name: subscriptions_update
  endpoint:
    path: /subscriptions/update
    method: CALL
    data_selector: update
- name: payment_client_add
  endpoint:
    path: /payment/client/add
    method: CALL
    data_selector: add
- name: payment_update
  endpoint:
    path: /payment/update
    method: CALL
    data_selector: update
- name: premium_guild_subscription_slot_create
  endpoint:
    path: /premium/guild/subscription/slot/create
    method: CALL
    data_selector: create
- name: premium_guild_subscription_slot_update
  endpoint:
    path: /premium/guild/subscription/slot/update
    method: CALL
    data_selector: update
- name: billing_popup_bridge_callback
  endpoint:
    path: /billing/popup/bridge/callback
    method: CALL
    data_selector: callback
- name: library_application_update
  endpoint:
    path: /library/application/update
    method: CALL
    data_selector: update
- name: entitlement_create
  endpoint:
    path: /entitlement/create
    method: CALL
    data_selector: create
- name: entitlement_update
  endpoint:
    path: /entitlement/update
    method: CALL
    data_selector: update
- name: entitlement_delete
  endpoint:
    path: /entitlement/delete
    method: CALL
    data_selector: delete
- name: gift_create
  endpoint:
    path: /gift/create
    method: CALL
    data_selector: create
- name: gift_update
  endpoint:
    path: /gift/update
    method: CALL
    data_selector: update
- name: connections_update
  endpoint:
    path: /connections/update
    method: CALL
    data_selector: update
- name: connection_create
  endpoint:
    path: /connection/create
    method: CALL
    data_selector: create
- name: connection_update
  endpoint:
    path: /connection/update
    method: CALL
    data_selector: update
- name: relationship_add
  endpoint:
    path: /relationship/add
    method: CALL
    data_selector: add
- name: relationship_remove
  endpoint:
    path: /relationship/remove
    method: CALL
    data_selector: remove
- name: relationship_update
  endpoint:
    path: /relationship/update
    method: CALL
    data_selector: update
- name: friend_suggestion_add
  endpoint:
    path: /friend/suggestion/add
    method: CALL
    data_selector: add
- name: friend_suggestion_remove
  endpoint:
    path: /friend/suggestion/remove
    method: CALL
    data_selector: remove
- name: note_update
  endpoint:
    path: /note/update
    method: CALL
    data_selector: update
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: /channel/slash_commands
    method: GET
    data_selector: commands
    params: {}
- name: stage_instance
  endpoint:
    path: /stage-instance
    method: GET
    data_selector: data
- name: private_call
  endpoint:
    path: /private-call
    method: GET
    data_selector: data
- name: group_call
  endpoint:
    path: /group-call
    method: GET
    data_selector: data
- name: message
  endpoint:
    path: /discord/message
    method: GET
    data_selector: fields
    params: {}
- name: invite_create
  endpoint:
    path: /on_invite_create
    method: CALL
    data_selector: invite
    params: {}
- name: invite_delete
  endpoint:
    path: /on_invite_delete
    method: CALL
    data_selector: invite
    params: {}
- name: guild_feature_ack
  endpoint:
    path: /on_guild_feature_ack
    method: CALL
    data_selector: payload
    params: {}
- name: integration_create
  endpoint:
    path: /on_integration_create
    method: CALL
    data_selector: integration
    params: {}
- name: integration_update
  endpoint:
    path: /on_integration_update
    method: CALL
    data_selector: integration
    params: {}
- name: guild_integrations_update
  endpoint:
    path: /on_guild_integrations_update
    method: CALL
    data_selector: guild
    params: {}
- name: webhooks_update
  endpoint:
    path: /on_webhooks_update
    method: CALL
    data_selector: channel
    params: {}
- name: raw_integration_delete
  endpoint:
    path: /on_raw_integration_delete
    method: CALL
    data_selector: payload
    params: {}
- name: interaction
  endpoint:
    path: /on_interaction
    method: CALL
    data_selector: interaction
    params: {}
- name: interaction_finish
  endpoint:
    path: /on_interaction_finish
    method: CALL
    data_selector: interaction
    params: {}
- name: modal
  endpoint:
    path: /on_modal
    method: CALL
    data_selector: modal
    params: {}
- name: member_join
  endpoint:
    path: /on_member_join
    method: CALL
    data_selector: member
    params: {}
- name: member_remove
  endpoint:
    path: /on_member_remove
    method: CALL
    data_selector: member
    params: {}
- name: raw_member_remove
  endpoint:
    path: /on_raw_member_remove
    method: CALL
    data_selector: payload
    params: {}
- name: member_update
  endpoint:
    path: /on_member_update
    method: CALL
    data_selector: before, after
    params: {}
- name: user_update
  endpoint:
    path: /on_user_update
    method: CALL
    data_selector: before, after
    params: {}
- name: member_ban
  endpoint:
    path: /on_member_ban
    method: CALL
    data_selector: guild, user
    params: {}
- name: member_unban
  endpoint:
    path: /on_member_unban
    method: CALL
    data_selector: guild, user
    params: {}
- name: presence_update
  endpoint:
    path: /on_presence_update
    method: CALL
    data_selector: before, after
    params: {}
- name: raw_member_list_update
  endpoint:
    path: /on_raw_member_list_update
    method: CALL
    data_selector: data
    params: {}
- name: message
  endpoint:
    path: /on_message
    method: CALL
    data_selector: message
    params: {}
- name: message_edit
  endpoint:
    path: /on_message_edit
    method: CALL
    data_selector: before, after
    params: {}
- name: message_delete
  endpoint:
    path: /on_message_delete
    method: CALL
    data_selector: message
    params: {}
- name: bulk_message_delete
  endpoint:
    path: /on_bulk_message_delete
    method: CALL
    data_selector: messages
    params: {}
- name: message_ack
  endpoint:
    path: /on_message_ack
    method: CALL
    data_selector: message, manual
    params: {}
- name: raw_message_edit
  endpoint:
    path: /on_raw_message_edit
    method: CALL
    data_selector: payload
    params: {}
- name: raw_message_delete
  endpoint:
    path: /on_raw_message_delete
    method: CALL
    data_selector: payload
    params: {}
- name: raw_bulk_message_delete
  endpoint:
    path: /on_raw_bulk_message_delete
    method: CALL
    data_selector: payload
    params: {}
- name: raw_message_ack
  endpoint:
    path: /on_raw_message_ack
    method: CALL
    data_selector: payload
    params: {}
- name: recent_mention_delete
  endpoint:
    path: /on_recent_mention_delete
    method: CALL
    data_selector: message
    params: {}
- name: raw_recent_mention_delete
  endpoint:
    path: /on_raw_recent_mention_delete
    method: CALL
    data_selector: message_id
    params: {}
- name: poll_vote_add
  endpoint:
    path: /on_poll_vote_add
    method: CALL
    data_selector: user, answer
    params: {}
- name: poll_vote_remove
  endpoint:
    path: /on_poll_vote_remove
    method: CALL
    data_selector: user, answer
    params: {}
- name: voice_channel
  endpoint:
    path: /discord/voice_channel
    method: GET
    data_selector: channels
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: users
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
    params: {}
- name: AutoModRuleTriggerType
  endpoint:
    path: /discord/AutoModRuleTriggerType
    method: GET
- name: AutoModRuleEventType
  endpoint:
    path: /discord/AutoModRuleEventType
    method: GET
- name: AutoModRuleActionType
  endpoint:
    path: /discord/AutoModRuleActionType
    method: GET
- name: ForumLayoutType
  endpoint:
    path: /discord/ForumLayoutType
    method: GET
- name: ForumOrderType
  endpoint:
    path: /discord/ForumOrderType
    method: GET
- name: ReadStateType
  endpoint:
    path: /discord/ReadStateType
    method: GET
- name: DirectoryEntryType
  endpoint:
    path: /discord/DirectoryEntryType
    method: GET
- name: DirectoryCategory
  endpoint:
    path: /discord/DirectoryCategory
    method: GET
- name: HubType
  endpoint:
    path: /discord/HubType
    method: GET
- name: PollLayoutType
  endpoint:
    path: /discord/PollLayoutType
    method: GET
- name: ReactionType
  endpoint:
    path: /discord/ReactionType
    method: GET
- name: PurchaseNotificationType
  endpoint:
    path: /discord/PurchaseNotificationType
    method: GET
- name: MessageReferenceType
  endpoint:
    path: /discord/MessageReferenceType
    method: GET
- name: PromotionType
  endpoint:
    path: /discord/PromotionType
    method: GET
- name: AuditLogEntry
  endpoint:
    path: /discord/AuditLogEntry
    method: GET
- name: AuditLogChanges
  endpoint:
    path: /discord/AuditLogChanges
    method: GET
- name: AuditLogDiff
  endpoint:
    path: /discord/AuditLogDiff
    method: GET
- name: audit_log_diff
  endpoint:
    path: /guilds/{guild.id}/audit-logs
    method: GET
    data_selector: changes
    params: {}
- name: fetch_guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params:
      with_counts: true
- name: fetch_guild
  endpoint:
    path: /guilds/{guild_id}
    method: GET
    data_selector: guild
    params:
      with_counts: true
- name: fetch_template
  endpoint:
    path: /templates/{code}
    method: GET
    data_selector: template
    params: {}
- name: accept_invite
  endpoint:
    path: /invites/{url}
    method: POST
    data_selector: invite
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: user_settings
  endpoint:
    path: /users/@me/settings
    method: GET
    data_selector: settings
    params: {}
- name: friend_suggestions
  endpoint:
    path: /users/@me/suggestions
    method: GET
    data_selector: suggestions
    params: {}
- name: edit_message
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}/messages/{message_id}
    method: PATCH
    data_selector: message
    params: {}
- name: delete_message
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}/messages/{message_id}
    method: DELETE
    data_selector: message
    params: {}
- name: GuildChannel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: application
  endpoint:
    path: /create_application
    method: POST
- name: team
  endpoint:
    path: /create_team
    method: POST
- name: companies
  endpoint:
    path: /search_companies
    method: GET
- name: company
  endpoint:
    path: /fetch_company
    method: GET
- name: activity_statistics
  endpoint:
    path: /activity_statistics
    method: GET
- name: global_activity_statistics
  endpoint:
    path: /global_activity_statistics
    method: GET
- name: payment_sources
  endpoint:
    path: /payment_sources
    method: GET
- name: payment_source
  endpoint:
    path: /fetch_payment_source
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: premium_guild_subscriptions
  endpoint:
    path: /premium_guild_subscriptions
    method: GET
- name: premium_guild_subscription_slots
  endpoint:
    path: /premium_guild_subscription_slots
    method: GET
- name: premium_guild_subscription_cooldown
  endpoint:
    path: /premium_guild_subscription_cooldown
    method: GET
- name: subscription
  endpoint:
    path: /fetch_subscription
    method: GET
- name: payments
  endpoint:
    path: /payments
    method: GET
- name: payment
  endpoint:
    path: /fetch_payment
    method: GET
- name: promotions
  endpoint:
    path: /promotions
    method: GET
- name: invites
  endpoint:
    path: /invites
    method: GET
- name: slash_commands
  endpoint:
    path: /applications/{application_id}/guilds/{guild_id}/commands
    method: GET
- name: user_commands
  endpoint:
    path: /users/{user_id}/commands
    method: GET
- name: promotions
  endpoint:
    path: /promotions
    method: GET
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
- name: library
  endpoint:
    path: /library
    method: GET
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
- name: fetch_message
  endpoint:
    path: /fetch_message
    method: GET
    data_selector: message
    params:
      id: int
- name: ack
  endpoint:
    path: /ack
    method: POST
    data_selector: status
    params: {}
- name: unack
  endpoint:
    path: /unack
    method: POST
    data_selector: status
    params:
      mention_count: int
- name: ack_pins
  endpoint:
    path: /ack_pins
    method: POST
    data_selector: status
    params: {}
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: messages
    params:
      limit: int
      before: Union[Snowflake, datetime]
      after: Union[Snowflake, datetime]
      around: Union[Snowflake, datetime]
      oldest_first: bool
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: search_results
    params:
      content: str
      limit: int
      offset: int
      before: Union[Snowflake, datetime]
      after: Union[Snowflake, datetime]
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
    data_selector: commands
    params: {}
- name: ApplicationCommand
  endpoint:
    path: /application-commands
    method: GET
- name: ClientUser
  endpoint:
    path: /users/@me
    method: GET
- name: user
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
- name: user_commands
  endpoint:
    path: /users/@me/commands
    method: GET
    data_selector: commands
- name: application_commands
  endpoint:
    path: /applications/@me/commands
    method: GET
    data_selector: commands
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing/{application_id}
    method: GET
    data_selector: store_listing
    params:
      localize: true
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
    params:
      localize: true
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans/{sku_id}
    method: GET
    data_selector: subscription_plans
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_eula
  endpoint:
    path: /fetch_eula/{eula_id}
    method: GET
    data_selector: eula
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier/{price_tier}
    method: GET
    data_selector: price_tier
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: recent_mentions
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention/{message}
    method: DELETE
    data_selector: delete_status
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhook_id
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: leave_status
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: unverified_application
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
- name: edit_note
  endpoint:
    path: /user/edit_note
    method: POST
- name: fetch_message
  endpoint:
    path: /user/fetch_message/{id}
    method: GET
- name: fetch_mutual_friends
  endpoint:
    path: /user/fetch_mutual_friends
    method: GET
- name: fetch_note
  endpoint:
    path: /user/fetch_note
    method: GET
- name: greet
  endpoint:
    path: /user/greet
    method: POST
- name: history
  endpoint:
    path: /user/history
    method: GET
- name: pins
  endpoint:
    path: /user/pins
    method: GET
- name: profile
  endpoint:
    path: /user/profile
    method: GET
- name: search
  endpoint:
    path: /user/search
    method: GET
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
    data_selector: result
    params: {}
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
    data_selector: hubs
    params: {}
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
    data_selector: hub
    params: {}
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
    data_selector: username
    params: {}
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
    data_selector: is_taken
    params: {}
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
    data_selector: avatars
    params: {}
- name: user_profile
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
- name: message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: AudioSource
  endpoint:
    path: /AudioSource
    method: GET
    data_selector: records
- name: PCMAudio
  endpoint:
    path: /PCMAudio
    method: GET
    data_selector: records
- name: FFmpegAudio
  endpoint:
    path: /FFmpegAudio
    method: GET
    data_selector: records
- name: FFmpegPCMAudio
  endpoint:
    path: /FFmpegPCMAudio
    method: GET
    data_selector: records
- name: FFmpegOpusAudio
  endpoint:
    path: /FFmpegOpusAudio
    method: GET
    data_selector: records
- name: recent_avatar
  endpoint:
    path: /recent_avatar
    method: GET
    data_selector: recent_avatars
- name: profile_metadata
  endpoint:
    path: /profile_metadata
    method: GET
    data_selector: profile_metadata
- name: profile_badge
  endpoint:
    path: /profile_badge
    method: GET
    data_selector: profile_badges
- name: invite_create
  endpoint:
    path: /invites/create
    method: POST
    data_selector: invite
- name: invite_delete
  endpoint:
    path: /invites/delete
    method: DELETE
    data_selector: invite
- name: guild_feature_ack
  endpoint:
    path: /guilds/features/ack
    method: POST
    data_selector: payload
- name: integration_create
  endpoint:
    path: /integrations/create
    method: POST
    data_selector: integration
- name: integration_update
  endpoint:
    path: /integrations/update
    method: PUT
    data_selector: integration
- name: guild_integrations_update
  endpoint:
    path: /guilds/integrations/update
    method: PATCH
    data_selector: guild
- name: webhooks_update
  endpoint:
    path: /channels/webhooks/update
    method: PATCH
    data_selector: channel
- name: member_join
  endpoint:
    path: /guilds/members/join
    method: POST
    data_selector: member
- name: member_remove
  endpoint:
    path: /guilds/members/remove
    method: DELETE
    data_selector: member
- name: PrimaryGuild
  endpoint:
    path: /discord/PrimaryGuild
    method: GET
    data_selector: attributes
    params: {}
- name: DisplayNameStyle
  endpoint:
    path: /discord/DisplayNameStyle
    method: GET
    data_selector: attributes
    params: {}
- name: UserAffinity
  endpoint:
    path: /discord/UserAffinity
    method: GET
    data_selector: attributes
    params: {}
- name: GuildAffinity
  endpoint:
    path: /discord/GuildAffinity
    method: GET
    data_selector: attributes
    params: {}
- name: ChannelAffinity
  endpoint:
    path: /discord/ChannelAffinity
    method: GET
    data_selector: attributes
    params: {}
- name: BillingAddress
  endpoint:
    path: /discord/BillingAddress
    method: GET
    data_selector: attributes
    params: {}
- name: PaymentSource
  endpoint:
    path: /discord/PaymentSource
    method: GET
    data_selector: attributes
    params: {}
- name: PremiumUsage
  endpoint:
    path: /discord/PremiumUsage
    method: GET
    data_selector: attributes
    params: {}
- name: friend_suggestion
  endpoint:
    path: /friend_suggestions
    method: GET
- name: relationship
  endpoint:
    path: /relationships
    method: GET
- name: connection
  endpoint:
    path: /connections
    method: GET
- name: user_settings
  endpoint:
    path: /user/settings
    method: GET
    data_selector: settings
- name: legacy_user_settings
  endpoint:
    path: /legacy/user/settings
    method: GET
    data_selector: settings
    params: {}
- name: guild_settings
  endpoint:
    path: /guilds/{guild_id}/settings
    method: GET
    data_selector: guild_settings
    params: {}
- name: channel_settings
  endpoint:
    path: /channels/{channel_id}/settings
    method: GET
    data_selector: channel_settings
    params: {}
- name: applications
  endpoint:
    path: /applications
    method: GET
    data_selector: applications
- name: role_delete
  endpoint:
    path: /audit-logs/role_delete
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: invite_create
  endpoint:
    path: /audit-logs/invite_create
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: invite_update
  endpoint:
    path: /audit-logs/invite_update
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: invite_delete
  endpoint:
    path: /audit-logs/invite_delete
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: webhook_create
  endpoint:
    path: /audit-logs/webhook_create
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: webhook_update
  endpoint:
    path: /audit-logs/webhook_update
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: webhook_delete
  endpoint:
    path: /audit-logs/webhook_delete
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: emoji_create
  endpoint:
    path: /audit-logs/emoji_create
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: emoji_update
  endpoint:
    path: /audit-logs/emoji_update
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: emoji_delete
  endpoint:
    path: /audit-logs/emoji_delete
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: message_delete
  endpoint:
    path: /audit-logs/message_delete
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: message_bulk_delete
  endpoint:
    path: /audit-logs/message_bulk_delete
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: message_pin
  endpoint:
    path: /audit-logs/message_pin
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: message_unpin
  endpoint:
    path: /audit-logs/message_unpin
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: integration_create
  endpoint:
    path: /audit-logs/integration_create
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: integration_update
  endpoint:
    path: /audit-logs/integration_update
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: integration_delete
  endpoint:
    path: /audit-logs/integration_delete
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: stage_instance_create
  endpoint:
    path: /audit-logs/stage_instance_create
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: stage_instance_update
  endpoint:
    path: /audit-logs/stage_instance_update
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: stage_instance_delete
  endpoint:
    path: /audit-logs/stage_instance_delete
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: sticker_create
  endpoint:
    path: /audit-logs/sticker_create
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: sticker_update
  endpoint:
    path: /audit-logs/sticker_update
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: sticker_delete
  endpoint:
    path: /audit-logs/sticker_delete
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: scheduled_event_create
  endpoint:
    path: /audit-logs/scheduled_event_create
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: scheduled_event_update
  endpoint:
    path: /audit-logs/scheduled_event_update
    method: GET
    data_selector: AuditLogDiff
    params: {}
- name: store_asset
  endpoint:
    path: /uploads/store_asset
    method: POST
    data_selector: created_asset
- name: skus
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    data_selector: primary_sku
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
    data_selector: store_listing_sku
- name: create_sku
  endpoint:
    path: /create_sku
    method: POST
    data_selector: sku_created
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: fetch_entitlement
  endpoint:
    path: /fetch_entitlement
    method: GET
    data_selector: entitlement
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
- name: create_gift_batch
  endpoint:
    path: /create_gift_batch
    method: POST
    data_selector: gift_batch_created
- name: branches
  endpoint:
    path: /branches
    method: GET
    data_selector: branches
- name: create_branch
  endpoint:
    path: /create_branch
    method: POST
    data_selector: branch_created
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
    data_selector: manifest_labels
- name: fetch_discoverability
  endpoint:
    path: /fetch_discoverability
    method: GET
    data_selector: discoverability
- name: fetch_embedded_activity_config
  endpoint:
    path: /fetch_embedded_activity_config
    method: GET
    data_selector: embedded_activity_config
- name: edit_embedded_activity_config
  endpoint:
    path: /edit_embedded_activity_config
    method: POST
    data_selector: embedded_activity_config_updated
- name: audit_log_diff
  endpoint:
    path: /audit-log/diff
    method: GET
    data_selector: changes
    params: {}
- name: activity_statistics
  endpoint:
    path: /activity/statistics
    method: GET
    data_selector: statistics
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
- name: entitlement_ticket
  endpoint:
    path: /entitlement_ticket
    method: GET
    data_selector: ticket
- name: eula
  endpoint:
    path: /eula
    method: GET
    data_selector: eula
- name: primary_store_listing
  endpoint:
    path: /primary_store_listing
    method: GET
    data_selector: store_listing
- name: published_store_listings
  endpoint:
    path: /published_store_listings
    method: GET
    data_selector: store_listings
- name: ticket
  endpoint:
    path: /ticket
    method: GET
    data_selector: ticket
- name: webhook
  endpoint:
    path: /webhooks/{webhook_id}/{webhook_token}
    method: POST
    data_selector: webhook
    params: {}
- name: application_profile
  endpoint:
    path: /applications/@me
    method: GET
    data_selector: data
- name: application_bot
  endpoint:
    path: /bots/@me
    method: GET
    data_selector: data
- name: SyncWebhook
  endpoint:
    path: /syncwebhook
    method: POST
    data_selector: webhook
    params: {}
- name: guild_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: application
  endpoint:
    path: /discord/ApplicationActivityStatistics/application
    method: GET
- name: application_id
  endpoint:
    path: /discord/ApplicationActivityStatistics/application_id
    method: GET
- name: duration
  endpoint:
    path: /discord/ApplicationActivityStatistics/duration
    method: GET
- name: first_played_at
  endpoint:
    path: /discord/ApplicationActivityStatistics/first_played_at
    method: GET
- name: last_played_at
  endpoint:
    path: /discord/ApplicationActivityStatistics/last_played_at
    method: GET
- name: sku_duration
  endpoint:
    path: /discord/ApplicationActivityStatistics/sku_duration
    method: GET
- name: user
  endpoint:
    path: /discord/ApplicationActivityStatistics/user
    method: GET
- name: user_id
  endpoint:
    path: /discord/ApplicationActivityStatistics/user_id
    method: GET
- name: fetch_message
  endpoint:
    path: /fetch_message/{id}
    method: GET
    data_selector: message
    params: {}
- name: ack
  endpoint:
    path: /ack
    method: POST
    data_selector: acknowledged
    params: {}
- name: unack
  endpoint:
    path: /unack
    method: POST
    data_selector: unacknowledged
    params: {}
- name: ack_pins
  endpoint:
    path: /ack_pins
    method: POST
    data_selector: acknowledged
    params: {}
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: searched_messages
    params:
      limit: 25
      offset: 0
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
    data_selector: commands
    params: {}
- name: application_build
  endpoint:
    path: /application/builds
    method: GET
    data_selector: builds
- name: application_branch
  endpoint:
    path: /application/branches
    method: GET
    data_selector: branches
- name: manifest
  endpoint:
    path: /manifests
    method: GET
    data_selector: manifests
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: user
  endpoint:
    path: /user
    method: GET
    data_selector: user
    params: {}
- name: user_commands
  endpoint:
    path: /users/@me/commands
    method: GET
    data_selector: commands
    params: {}
- name: application_commands
  endpoint:
    path: /applications/@me/commands
    method: GET
    data_selector: commands
    params: {}
- name: team_member
  endpoint:
    path: /teams/members
    method: GET
    data_selector: members
    params: {}
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
    params: {}
- name: user_note
  endpoint:
    path: /users/@me/note
    method: GET
    data_selector: note
- name: mutual_friends
  endpoint:
    path: /users/@me/mutual_friends
    method: GET
    data_selector: mutual_friends
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pinned_messages
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
- name: voice_client
  endpoint:
    path: /voice/connect
    method: POST
- name: dm_channel
  endpoint:
    path: /dm/create
    method: POST
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    params:
      limit: 200
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    params:
      limit: 25
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params:
      limit: null
      query: null
      command_ids: null
      application: null
      with_applications: true
- name: team_payout
  endpoint:
    path: /team_payouts
    method: GET
    data_selector: payouts
    params: {}
- name: company
  endpoint:
    path: /company
    method: GET
    data_selector: companies
    params: {}
- name: entitlement
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: user_settings
  endpoint:
    path: /user/settings
    method: GET
- name: legacy_user_settings
  endpoint:
    path: /user/settings
    method: GET
    data_selector: settings
    params: {}
- name: guild_settings
  endpoint:
    path: /guilds/{guild_id}/settings
    method: GET
    data_selector: settings
    params: {}
- name: channel_settings
  endpoint:
    path: /channels/{channel_id}/settings
    method: GET
    data_selector: settings
    params: {}
- name: SubscriptionTrial
  endpoint:
    path: /discord/SubscriptionTrial
    method: GET
    data_selector: trial
    params: {}
- name: PremiumGuildSubscription
  endpoint:
    path: /discord/PremiumGuildSubscription
    method: GET
    data_selector: subscription
    params: {}
- name: PremiumGuildSubscriptionSlot
  endpoint:
    path: /discord/PremiumGuildSubscriptionSlot
    method: GET
    data_selector: slot
    params: {}
- name: PremiumGuildSubscriptionCooldown
  endpoint:
    path: /discord/PremiumGuildSubscriptionCooldown
    method: GET
    data_selector: cooldown
    params: {}
- name: SubscriptionPlan
  endpoint:
    path: /discord/SubscriptionPlan
    method: GET
    data_selector: plan
    params: {}
- name: TrackingSettings
  endpoint:
    path: /tracking/settings
    method: GET
    data_selector: settings
    params: {}
- name: EmailSettings
  endpoint:
    path: /email/settings
    method: GET
    data_selector: settings
    params: {}
- name: GuildProgress
  endpoint:
    path: /guild/progress
    method: GET
    data_selector: progress
    params: {}
- name: AudioContext
  endpoint:
    path: /audio/context
    method: GET
    data_selector: context
    params: {}
- name: MuteConfig
  endpoint:
    path: /mute/config
    method: GET
    data_selector: config
    params: {}
- name: SubscriptionPlanPrices
  endpoint:
    path: /subscription_plan_prices
    method: GET
    data_selector: prices
    params: {}
- name: Payment
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
    params: {}
- name: SKU
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
    params: {}
- name: application
  endpoint:
    path: /applications/@me
    method: GET
    data_selector: application
- name: sku
  endpoint:
    path: /discord/sku
    method: GET
    data_selector: skus
- name: store_listing
  endpoint:
    path: /store/listings
    method: GET
    data_selector: listings
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: edit_application
  endpoint:
    path: /applications/{application.id}/edit
    method: PATCH
- name: fetch_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: GET
- name: create_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: POST
- name: edit_bot
  endpoint:
    path: /bots/{bot.id}/edit
    method: PATCH
- name: request_intents
  endpoint:
    path: /applications/{application.id}/request-intents
    method: POST
- name: whitelisted
  endpoint:
    path: /applications/{application.id}/whitelisted
    method: GET
- name: whitelist
  endpoint:
    path: /applications/{application.id}/whitelist
    method: POST
- name: create_asset
  endpoint:
    path: /applications/{application.id}/assets
    method: POST
- name: store_assets
  endpoint:
    path: /applications/{application.id}/store-assets
    method: GET
- name: create_store_asset
  endpoint:
    path: /applications/{application.id}/store-assets
    method: POST
- name: discovery_splash
  endpoint:
    path: /guilds/{guild.id}/discovery_splash
    method: GET
    data_selector: asset
- name: member_count
  endpoint:
    path: /guilds/{guild.id}/member_count
    method: GET
    data_selector: count
- name: online_count
  endpoint:
    path: /guilds/{guild.id}/online_count
    method: GET
    data_selector: count
- name: chunked
  endpoint:
    path: /guilds/{guild.id}/chunked
    method: GET
    data_selector: chunked
- name: created_at
  endpoint:
    path: /guilds/{guild.id}/created_at
    method: GET
    data_selector: creation_time
- name: bans
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: bans
    params:
      limit: 1000
- name: uploads
  endpoint:
    path: /uploads
    method: POST
    data_selector: asset
- name: skus
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    data_selector: sku
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
    data_selector: sku
- name: create_sku
  endpoint:
    path: /create_sku
    method: POST
    data_selector: sku
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: fetch_entitlement
  endpoint:
    path: /fetch_entitlement/{entitlement_id}
    method: GET
    data_selector: entitlement
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
- name: create_gift_batch
  endpoint:
    path: /create_gift_batch
    method: POST
    data_selector: gift_batch
- name: branches
  endpoint:
    path: /branches
    method: GET
    data_selector: branches
- name: create_branch
  endpoint:
    path: /create_branch
    method: POST
    data_selector: branch
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
    data_selector: manifest_labels
- name: fetch_discoverability
  endpoint:
    path: /fetch_discoverability
    method: GET
    data_selector: discoverability
- name: fetch_embedded_activity_config
  endpoint:
    path: /fetch_embedded_activity_config
    method: GET
    data_selector: embedded_activity_config
- name: application_profile
  endpoint:
    path: /applications/@me
    method: GET
    data_selector: data
    params: {}
- name: application_bot
  endpoint:
    path: /applications/@me/bot
    method: GET
    data_selector: data
    params: {}
- name: search_messages
  endpoint:
    path: /guilds/{guild.id}/messages/search
    method: GET
    params:
      limit: 25
      offset: 0
- name: prune_members
  endpoint:
    path: /guilds/{guild.id}/prune
    method: POST
    params: {}
- name: templates
  endpoint:
    path: /guilds/{guild.id}/templates
    method: GET
    params: {}
- name: webhooks
  endpoint:
    path: /guilds/{guild.id}/webhooks
    method: GET
    params: {}
- name: estimate_pruned_members
  endpoint:
    path: /guilds/{guild.id}/prune/estimate
    method: GET
    params: {}
- name: invites
  endpoint:
    path: /guilds/{guild.id}/invites
    method: GET
    params: {}
- name: create_template
  endpoint:
    path: /guilds/{guild.id}/templates
    method: POST
    params: {}
- name: create_integration
  endpoint:
    path: /guilds/{guild.id}/integrations
    method: POST
    params: {}
- name: integrations
  endpoint:
    path: /guilds/{guild.id}/integrations
    method: GET
    params: {}
- name: application_commands
  endpoint:
    path: /guilds/{guild.id}/commands
    method: GET
    params: {}
- name: fetch_stickers
  endpoint:
    path: /guilds/{guild.id}/stickers
    method: GET
    params: {}
- name: fetch_sticker
  endpoint:
    path: /guilds/{guild.id}/stickers/{sticker_id}
    method: GET
    params: {}
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: send_friend_request
  endpoint:
    path: /users/{user_id}/friend-requests
    method: POST
    data_selector: friend_request
    params: {}
- name: create_sticker
  endpoint:
    path: /guilds/{guild.id}/stickers
    method: POST
    data_selector: sticker
- name: delete_sticker
  endpoint:
    path: /guilds/{guild.id}/stickers/{sticker.id}
    method: DELETE
    data_selector: sticker
- name: subscribed_scheduled_events
  endpoint:
    path: /users/@me/guilds/{guild.id}/scheduled-events
    method: GET
    data_selector: scheduled_events
- name: fetch_scheduled_events
  endpoint:
    path: /guilds/{guild.id}/scheduled-events
    method: GET
    data_selector: scheduled_events
- name: create_scheduled_event
  endpoint:
    path: /guilds/{guild.id}/scheduled-events
    method: POST
    data_selector: scheduled_event
- name: fetch_emojis
  endpoint:
    path: /guilds/{guild.id}/emojis
    method: GET
    data_selector: emojis
- name: create_custom_emoji
  endpoint:
    path: /guilds/{guild.id}/emojis
    method: POST
    data_selector: emoji
- name: fetch_roles
  endpoint:
    path: /guilds/{guild.id}/roles
    method: GET
    data_selector: roles
- name: create_role
  endpoint:
    path: /guilds/{guild.id}/roles
    method: POST
    data_selector: role
- name: application_activity_statistics
  endpoint:
    path: /discord/application/activity/statistics
    method: GET
    data_selector: records
- name: ApplicationBranch
  endpoint:
    path: /application/branch
    method: GET
- name: ApplicationBuild
  endpoint:
    path: /application/build
    method: GET
- name: ManifestLabel
  endpoint:
    path: /manifest/label
    method: GET
- name: Manifest
  endpoint:
    path: /manifest
    method: GET
- name: Team
  endpoint:
    path: /team
    method: GET
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
    params: {}
- name: team_member
  endpoint:
    path: /team/members
    method: GET
    data_selector: members
    params: {}
- name: team_payout
  endpoint:
    path: /team/payouts
    method: GET
    data_selector: payouts
    params: {}
- name: welcome_screen
  endpoint:
    path: /guilds/{guild_id}/welcome-screen
    method: GET
- name: applications
  endpoint:
    path: /guilds/{guild_id}/applications
    method: GET
- name: premium_subscriptions
  endpoint:
    path: /guilds/{guild_id}/premium-subscriptions
    method: GET
- name: price_tiers
  endpoint:
    path: /guilds/{guild_id}/price-tiers
    method: GET
- name: entitlements
  endpoint:
    path: /guilds/{guild_id}/entitlements
    method: GET
- name: members
  endpoint:
    path: /guilds/{guild_id}/members
    method: GET
- name: create_dm
  endpoint:
    path: /create_dm
    method: POST
- name: history
  endpoint:
    path: /history
    method: GET
    params:
      limit: 100
- name: pins
  endpoint:
    path: /pins
    method: GET
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
- name: automod_rules
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: fetch_automod_rule
  endpoint:
    path: /automod/rules/{automod_rule_id}
    method: GET
    data_selector: rule
- name: create_automod_rule
  endpoint:
    path: /automod/rules
    method: POST
    data_selector: rule
- name: ban_entry
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: bans
    params: {}
- name: bulk_ban_result
  endpoint:
    path: /guilds/{guild_id}/bans/bulk
    method: POST
    data_selector: banned
    params: {}
- name: role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
    params: {}
- name: gift
  endpoint:
    path: /discord/gift
    method: GET
    data_selector: gift_data
- name: gift_batch
  endpoint:
    path: /discord/gift_batch
    method: GET
    data_selector: gift_batch_data
- name: library_application
  endpoint:
    path: /discord/library_application
    method: GET
    data_selector: library_application_data
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: auto_mod_rule
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: integration_application
  endpoint:
    path: /applications
    method: GET
    data_selector: applications
- name: member
  endpoint:
    path: /members
    method: GET
    data_selector: members
- name: PremiumGuildSubscription
  endpoint:
    path: /premium_guild_subscription
    method: GET
    data_selector: records
- name: PremiumGuildSubscriptionSlot
  endpoint:
    path: /premium_guild_subscription_slot
    method: GET
    data_selector: records
- name: SubscriptionPlan
  endpoint:
    path: /subscription_plan
    method: GET
    data_selector: records
- name: subscription_plan_prices
  endpoint:
    path: /api/v2/subscription_plan_prices
    method: GET
    data_selector: prices
    params: {}
- name: payment
  endpoint:
    path: /api/v2/payments
    method: GET
    data_selector: payments
    params: {}
- name: sku
  endpoint:
    path: /api/v2/sku
    method: GET
    data_selector: skus
    params: {}
- name: SKU
  endpoint:
    path: /discord/SKU
    method: GET
    data_selector: records
- name: store_listing
  endpoint:
    path: /store/listings
    method: GET
    data_selector: listings
- name: roles
  endpoint:
    path: /roles
    method: GET
- name: voice_channel
  endpoint:
    path: /voice_channel
    method: GET
- name: timed_out_until
  endpoint:
    path: /timed_out_until
    method: GET
- name: avatar
  endpoint:
    path: /avatar
    method: GET
- name: banner
  endpoint:
    path: /banner
    method: GET
- name: bio
  endpoint:
    path: /bio
    method: GET
- name: bypass_verification
  endpoint:
    path: /bypass_verification
    method: GET
- name: reason
  endpoint:
    path: /reason
    method: GET
- name: member_profile
  endpoint:
    path: /member/profile
    method: GET
    data_selector: records
- name: bans
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: bans
    params:
      limit: 1000
- name: fetch_channels
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
    params: {}
- name: fetch_member
  endpoint:
    path: /guilds/{guild_id}/members/{member_id}
    method: GET
    data_selector: member
    params: {}
- name: PartialEmoji
  endpoint:
    path: /partial_emoji
    method: GET
    data_selector: records
- name: Sticker
  endpoint:
    path: /sticker
    method: GET
    data_selector: records
- name: StickerItem
  endpoint:
    path: /sticker_item
    method: GET
    data_selector: records
- name: StickerPack
  endpoint:
    path: /sticker_pack
    method: GET
    data_selector: records
- name: StandardSticker
  endpoint:
    path: /standard_sticker
    method: GET
    data_selector: records
- name: search_messages
  endpoint:
    path: /guilds/{guild_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: prune_members
  endpoint:
    path: /guilds/{guild_id}/prune
    method: POST
    data_selector: pruned
    params: {}
- name: forums
  endpoint:
    path: /forums
    method: GET
- name: directory_channels
  endpoint:
    path: /directory_channels
    method: GET
- name: directories
  endpoint:
    path: /directories
    method: GET
- name: text_channel
  endpoint:
    path: /path/to/text_channel
    method: GET
    data_selector: records
    params: {}
- name: sticker
  endpoint:
    path: /guilds/{guild.id}/stickers
    method: POST
    data_selector: sticker
    params: {}
- name: scheduled_event
  endpoint:
    path: /guilds/{guild.id}/scheduled-events
    method: POST
    data_selector: scheduled_event
    params: {}
- name: emoji
  endpoint:
    path: /guilds/{guild.id}/emojis
    method: POST
    data_selector: emoji
    params: {}
- name: role
  endpoint:
    path: /guilds/{guild.id}/roles
    method: POST
    data_selector: role
    params: {}
- name: notification_settings
  endpoint:
    path: /channels/{channel.id}/notification_settings
    method: GET
    data_selector: notification_settings
- name: overwrites
  endpoint:
    path: /channels/{channel.id}/overwrites
    method: GET
    data_selector: overwrites
- name: pins
  endpoint:
    path: /channels/{channel.id}/pins
    method: GET
    data_selector: pins
- name: search
  endpoint:
    path: /channels/{channel.id}/messages/search
    method: GET
    data_selector: search
- name: send_message
  endpoint:
    path: /channels/{channel.id}/messages
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /channels/{channel.id}/permissions/{overwrite.id}
    method: PUT
    data_selector: permissions
- name: applications
  endpoint:
    path: /guilds/{guild_id}/applications
    method: GET
    data_selector: applications
- name: premium_subscriptions
  endpoint:
    path: /guilds/{guild_id}/premium_subscriptions
    method: GET
    data_selector: premium_subscriptions
- name: entitlements
  endpoint:
    path: /guilds/{guild_id}/entitlements
    method: GET
    data_selector: entitlements
- name: price_tiers
  endpoint:
    path: /guilds/{guild_id}/price_tiers
    method: GET
    data_selector: price_tiers
- name: members
  endpoint:
    path: /guilds/{guild_id}/members
    method: GET
    data_selector: members
- name: voice_channel
  endpoint:
    path: /discord/voice_channel
    method: GET
- name: channel_create
  endpoint:
    path: /channels
    method: POST
    data_selector: channel
    params: {}
- name: channel_edit
  endpoint:
    path: /channels/{channel.id}
    method: PATCH
    data_selector: channel
    params: {}
- name: channel_delete
  endpoint:
    path: /channels/{channel.id}
    method: DELETE
    data_selector: channel
    params: {}
- name: automod_rules
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: fetch_automod_rule
  endpoint:
    path: /automod/rules/{automod_rule_id}
    method: GET
    data_selector: rule
- name: create_automod_rule
  endpoint:
    path: /automod/rules
    method: POST
    data_selector: rule
- name: admin_community_eligibility
  endpoint:
    path: /admin/community/eligibility
    method: GET
    data_selector: eligible
- name: join_admin_community
  endpoint:
    path: /admin/community/join
    method: POST
    data_selector: community
- name: migrate_command_scope
  endpoint:
    path: /guilds/{guild_id}/migrate
    method: POST
    data_selector: migrated_ids
- name: directory_broadcast_eligibility
  endpoint:
    path: /directory/broadcast/eligibility
    method: GET
    data_selector: eligibility
- name: ban_entry
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: bans
- name: bulk_ban_result
  endpoint:
    path: /guilds/{guild_id}/bans/bulk
    method: POST
    data_selector: bulkBanResult
- name: role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: message
- name: partial_message
  endpoint:
    path: /messages/{message_id}/partial
    method: GET
    data_selector: partial_message
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
- name: purge
  endpoint:
    path: /channels/{channel_id}/messages
    method: DELETE
    data_selector: deleted_messages
- name: scheduled_event
  endpoint:
    path: /scheduled-events
    method: GET
    data_selector: events
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
    params: {}
- name: voice_states
  endpoint:
    path: /voice_states
    method: GET
    data_selector: voice_states
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: member
  endpoint:
    path: /discord/api/guilds/{guild_id}/members/{member_id}
    method: GET
    data_selector: member
    params: {}
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
    data_selector: mutual_friends
- name: fetch_note
  endpoint:
    path: /fetch_note
    method: GET
    data_selector: note
- name: delete_note
  endpoint:
    path: /delete_note
    method: DELETE
    data_selector: delete_response
- name: member
  endpoint:
    path: /guilds/{guild_id}/members/{user_id}
    method: GET
    data_selector: member
    params: {}
- name: read_state
  endpoint:
    path: /channels/{channel.id}/read_state
    method: GET
- name: scheduled_events
  endpoint:
    path: /channels/{channel.id}/scheduled_events
    method: GET
- name: search_messages
  endpoint:
    path: /channels/{channel.id}/messages/search
    method: GET
    params:
      limit: 25
      offset: 0
- name: directory_channel
  endpoint:
    path: /directory/channel
    method: GET
    data_selector: entries
- name: pinned_messages
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: messages
- name: member_profile
  endpoint:
    path: /guilds/{guild_id}/members/{member_id}
    method: GET
    data_selector: profile
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: fetch_entries
  endpoint:
    path: /fetch_entries
    method: GET
    data_selector: entries
    params:
      entity_ids: int
- name: search_entries
  endpoint:
    path: /search_entries
    method: GET
    data_selector: entries
    params:
      query: str
      category: DirectoryCategory
- name: create_entry
  endpoint:
    path: /create_entry
    method: POST
    data_selector: entry
    params:
      guild: Guild
      category: DirectoryCategory
      description: str
- name: member_profile
  endpoint:
    path: /users/@me
    method: GET
    data_selector: member
    params: {}
- name: forum_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: records
- name: permissions_synced
  endpoint:
    path: /permissions/synced
    method: GET
    data_selector: permissions_synced
- name: set_permissions
  endpoint:
    path: /permissions/set
    method: POST
    data_selector: set_permissions
- name: PartialEmoji
  endpoint:
    path: /api/vX/emojis
    method: GET
    data_selector: emojis
    params: {}
- name: Sticker
  endpoint:
    path: /api/vX/stickers
    method: GET
    data_selector: stickers
    params: {}
- name: guild_sticker
  endpoint:
    path: /guilds/{guild.id}/stickers
    method: GET
    data_selector: stickers
- name: category_channel
  endpoint:
    path: /channels/{channel.id}/categories
    method: GET
    data_selector: categories
- name: requested_at
  endpoint:
    path: /discord/DMChannel/requested_at
    method: GET
    data_selector: requested_at
- name: is_message_request
  endpoint:
    path: /discord/DMChannel/is_message_request
    method: GET
    data_selector: is_message_request
- name: is_accepted
  endpoint:
    path: /discord/DMChannel/is_accepted
    method: GET
    data_selector: is_accepted
- name: is_spam
  endpoint:
    path: /discord/DMChannel/is_spam
    method: GET
    data_selector: is_spam
- name: add_recipients
  endpoint:
    path: /discord/DMChannel/add_recipients
    method: POST
    data_selector: add_recipients
- name: close
  endpoint:
    path: /discord/DMChannel/close
    method: DELETE
    data_selector: close
- name: connect
  endpoint:
    path: /discord/DMChannel/connect
    method: POST
    data_selector: connect
- name: accept
  endpoint:
    path: /discord/DMChannel/accept
    method: POST
    data_selector: accept
- name: decline
  endpoint:
    path: /discord/DMChannel/decline
    method: POST
    data_selector: decline
- name: ack
  endpoint:
    path: /discord/DMChannel/ack
    method: POST
    data_selector: ack
- name: history
  endpoint:
    path: /discord/DMChannel/history
    method: GET
    data_selector: history
- name: pins
  endpoint:
    path: /discord/DMChannel/pins
    method: GET
    data_selector: pins
- name: search
  endpoint:
    path: /discord/DMChannel/search
    method: GET
    data_selector: search
- name: forums
  endpoint:
    path: /forums
    method: GET
- name: directory_channels
  endpoint:
    path: /directory_channels
    method: GET
- name: directories
  endpoint:
    path: /directories
    method: GET
- name: create_text_channel
  endpoint:
    path: /create_text_channel
    method: POST
- name: create_voice_channel
  endpoint:
    path: /create_voice_channel
    method: POST
- name: create_stage_channel
  endpoint:
    path: /create_stage_channel
    method: POST
- name: create_directory
  endpoint:
    path: /create_directory
    method: POST
- name: create_directory_channel
  endpoint:
    path: /create_directory_channel
    method: POST
- name: create_forum
  endpoint:
    path: /create_forum
    method: POST
- name: create_forum_channel
  endpoint:
    path: /create_forum_channel
    method: POST
- name: invites
  endpoint:
    path: /invites
    method: GET
- name: group_channel
  endpoint:
    path: /group_channel
    method: GET
    data_selector: channel_data
- name: text_channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: channel
    params: {}
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
      cls: VoiceClient
      ring: true
- name: ack
  endpoint:
    path: /ack
    method: POST
    data_selector: ack_result
- name: ack_pins
  endpoint:
    path: /ack_pins
    method: POST
    data_selector: ack_pins_result
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
    data_selector: commands
- name: fetch_message
  endpoint:
    path: /fetch_message/{id}
    method: GET
    data_selector: message
- name: greet
  endpoint:
    path: /greet
    method: POST
    data_selector: greeting
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pinned_messages
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: search_results
    params:
      limit: 25
      offset: 0
- name: parameters
  endpoint:
    path: /parameters
    method: GET
    data_selector: records
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: files
    params: {}
- name: channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: message
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: /channel/slash_commands
    method: GET
    data_selector: commands
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
    params: {}
- name: voice_states
  endpoint:
    path: /voice_states
    method: GET
    data_selector: voice_states
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: thread
  endpoint:
    path: /threads
    method: GET
    data_selector: threads
- name: message
  endpoint:
    path: /discord/messages
    method: GET
    data_selector: messages
- name: fetch_entries
  endpoint:
    path: /fetch_entries
    method: GET
    data_selector: entries
- name: search_entries
  endpoint:
    path: /search_entries
    method: GET
    data_selector: entries
- name: create_entry
  endpoint:
    path: /create_entry
    method: POST
    data_selector: entry
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
    data_selector: invite
- name: delete
  endpoint:
    path: /delete
    method: DELETE
- name: invites
  endpoint:
    path: /invites
    method: GET
    data_selector: active_invites
- name: partial_message
  endpoint:
    path: /discord/PartialMessage
    method: GET
    data_selector: partial_messages
    params: {}
- name: forum_channel
  endpoint:
    path: /discord/forum_channel
    method: GET
    data_selector: records
    params: {}
- name: reaction
  endpoint:
    path: /discord/reaction
    method: GET
    data_selector: reactions
    params: {}
- name: create_thread
  endpoint:
    path: /channels/{channel_id}/threads
    method: POST
    data_selector: thread
    params: {}
- name: create_invite
  endpoint:
    path: /channels/{channel_id}/invites
    method: POST
    data_selector: invite
    params:
      max_age: 0
      max_uses: 0
      temporary: false
      unique: true
- name: interaction
  endpoint:
    path: /discord/interactions
    method: POST
    data_selector: interaction
    params: {}
- name: component
  endpoint:
    path: /discord/components
    method: POST
    data_selector: component
    params: {}
- name: permissions_synced
  endpoint:
    path: /permissions/synced
    method: GET
    data_selector: permissions
    params: {}
- name: voice_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: requested_at
  endpoint:
    path: /discord/DMChannel/requested_at
    method: GET
- name: is_message_request
  endpoint:
    path: /discord/DMChannel/is_message_request
    method: GET
- name: is_accepted
  endpoint:
    path: /discord/DMChannel/is_accepted
    method: GET
- name: is_spam
  endpoint:
    path: /discord/DMChannel/is_spam
    method: GET
- name: add_recipients
  endpoint:
    path: /discord/DMChannel/add_recipients
    method: POST
- name: close
  endpoint:
    path: /discord/DMChannel/close
    method: DELETE
- name: connect
  endpoint:
    path: /discord/DMChannel/connect
    method: POST
- name: accept
  endpoint:
    path: /discord/DMChannel/accept
    method: POST
- name: decline
  endpoint:
    path: /discord/DMChannel/decline
    method: POST
- name: ack
  endpoint:
    path: /discord/DMChannel/ack
    method: POST
- name: history
  endpoint:
    path: /discord/DMChannel/history
    method: GET
- name: pins
  endpoint:
    path: /discord/DMChannel/pins
    method: GET
- name: search
  endpoint:
    path: /discord/DMChannel/search
    method: GET
- name: messages
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params: {}
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: invites
  endpoint:
    path: /channels/{channel.id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: user_commands
  endpoint:
    path: /users/{user.id}/commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: /channels/{channel.id}/commands
    method: GET
    data_selector: commands
    params: {}
- name: fetch_widget
  endpoint:
    path: /fetch_widget
    method: GET
- name: fetch_user
  endpoint:
    path: /fetch_user
    method: GET
- name: fetch_user_profile
  endpoint:
    path: /fetch_user_profile
    method: GET
- name: fetch_channel
  endpoint:
    path: /fetch_channel
    method: GET
- name: fetch_webhook
  endpoint:
    path: /fetch_webhook
    method: GET
- name: fetch_sticker
  endpoint:
    path: /fetch_sticker
    method: GET
- name: sticker_packs
  endpoint:
    path: /sticker_packs
    method: GET
- name: fetch_private_channels
  endpoint:
    path: /fetch_private_channels
    method: GET
- name: fetch_settings
  endpoint:
    path: /fetch_settings
    method: GET
- name: email_settings
  endpoint:
    path: /email_settings
    method: GET
- name: fetch_tracking_settings
  endpoint:
    path: /fetch_tracking_settings
    method: GET
- name: create_invite
  endpoint:
    path: /channels/{channel.id}/invites
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /voice/{channel.id}/connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
      cls: VoiceClient
      ring: true
- name: ack
  endpoint:
    path: /channels/{channel.id}/ack
    method: POST
    data_selector: ack_response
- name: ack_pins
  endpoint:
    path: /channels/{channel.id}/ack_pins
    method: POST
    data_selector: ack_pins_response
- name: application_commands
  endpoint:
    path: /channels/{channel.id}/application_commands
    method: GET
    data_selector: commands
- name: fetch_message
  endpoint:
    path: /channels/{channel.id}/messages/{message.id}
    method: GET
    data_selector: message
- name: greet
  endpoint:
    path: /channels/{channel.id}/greet
    method: POST
    data_selector: greet_response
- name: history
  endpoint:
    path: /channels/{channel.id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /channels/{channel.id}/pins
    method: GET
    data_selector: pinned_messages
- name: search
  endpoint:
    path: /channels/{channel.id}/messages/search
    method: GET
    data_selector: search_results
    params:
      limit: 25
- name: create_application
  endpoint:
    path: /create_application
    method: POST
- name: create_team
  endpoint:
    path: /create_team
    method: POST
- name: search_companies
  endpoint:
    path: /search_companies
    method: GET
- name: fetch_company
  endpoint:
    path: /fetch_company
    method: GET
- name: activity_statistics
  endpoint:
    path: /activity_statistics
    method: GET
- name: global_activity_statistics
  endpoint:
    path: /global_activity_statistics
    method: GET
- name: payment_sources
  endpoint:
    path: /payment_sources
    method: GET
- name: fetch_payment_source
  endpoint:
    path: /fetch_payment_source
    method: GET
- name: create_payment_source
  endpoint:
    path: /create_payment_source
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: premium_guild_subscriptions
  endpoint:
    path: /premium_guild_subscriptions
    method: GET
- name: premium_guild_subscription_slots
  endpoint:
    path: /premium_guild_subscription_slots
    method: GET
- name: premium_guild_subscription_cooldown
  endpoint:
    path: /premium_guild_subscription_cooldown
    method: GET
- name: fetch_subscription
  endpoint:
    path: /fetch_subscription
    method: GET
- name: preview_subscription
  endpoint:
    path: /preview_subscription
    method: POST
- name: create_subscription
  endpoint:
    path: /create_subscription
    method: POST
- name: payments
  endpoint:
    path: /payments
    method: GET
- name: fetch_payment
  endpoint:
    path: /fetch_payment
    method: GET
- name: promotions
  endpoint:
    path: /promotions
    method: GET
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: uploaded_files
    params: {}
- name: fetch_message
  endpoint:
    path: /channels/{channel_id}/messages/{message_id}
    method: GET
    data_selector: message
    params: {}
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: /slash/commands
    method: GET
    data_selector: commands
    params: {}
- name: user_offer
  endpoint:
    path: /user/offer
    method: GET
    data_selector: UserOffer
- name: trial_offer
  endpoint:
    path: /trial/offer
    method: GET
    data_selector: TrialOffer
- name: pricing_promotion
  endpoint:
    path: /pricing/promotion
    method: GET
    data_selector: PricingPromotion
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: LibraryApplication
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: OAuth2Token
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: Entitlement
- name: giftable_entitlements
  endpoint:
    path: /giftable/entitlements
    method: GET
    data_selector: Entitlement
- name: premium_entitlements
  endpoint:
    path: /premium/entitlements
    method: GET
    data_selector: Entitlement
- name: fetch_entitlements
  endpoint:
    path: /entitlements/{application_id}
    method: GET
    data_selector: Entitlement
- name: fetch_gift
  endpoint:
    path: /gift/{code}
    method: GET
    data_selector: Gift
- name: fetch_sku
  endpoint:
    path: /sku/{sku_id}
    method: GET
    data_selector: SKU
- name: fetch_store_listing
  endpoint:
    path: /store/listing/{listing_id}
    method: GET
    data_selector: StoreListing
- name: fetch_published_store_listing
  endpoint:
    path: /published/store/listing/{sku_id}
    method: GET
    data_selector: StoreListing
- name: fetch_published_store_listings
  endpoint:
    path: /published/store/listings/{application_id}
    method: GET
    data_selector: StoreListing
- name: threads
  endpoint:
    path: /threads
    method: GET
    data_selector: threads
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
- name: message
  endpoint:
    path: /discord/api/v2/messages
    method: GET
    data_selector: messages
- name: partial_message
  endpoint:
    path: /discord/partial_message
    method: GET
    data_selector: PartialMessage
    params: {}
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
    params:
      application_id: int
      localize: bool
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
    params:
      application_ids: int
      localize: bool
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: premium_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: sku_subscription_plans
    params:
      sku_id: int
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: skus_subscription_plans
    params:
      sku_ids: int
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: eula
    params:
      eula_id: int
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
    params:
      branch_ids: int
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier
    params:
      price_tier: int
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: recent_mentions
    params:
      limit: int
      before: Union[Snowflake, datetime]
      guild: Guild
      roles: bool
      everyone: bool
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: recent_mention_deleted
    params:
      message: abc.Snowflake
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhook_id
    params:
      application: Application
      channel: TextChannel
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: DELETE
    data_selector: active_developer_program_left
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: unverified_application
    params:
      name: str
      icon: File
      os: OperatingSystem
      executable: str
      publisher: str
      distributor: Distributor
      sku: str
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
    params:
      with_guild_experiments: bool
- name: ActionRow
  endpoint:
    path: /discord/components/actionrow
    method: GET
    data_selector: components
    params: {}
- name: Button
  endpoint:
    path: /discord/components/button
    method: GET
    data_selector: components
    params: {}
- name: SelectMenu
  endpoint:
    path: /discord/components/selectmenu
    method: GET
    data_selector: components
    params: {}
- name: TextInput
  endpoint:
    path: /discord/components/textinput
    method: GET
    data_selector: components
    params: {}
- name: invite
  endpoint:
    path: /invites/{invite.code}
    method: GET
    data_selector: invite
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
    data_selector: response_data
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
    data_selector: hubs
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
    data_selector: joined_hub
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
    data_selector: suggested_username
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
    data_selector: is_taken
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
    data_selector: recent_avatars
- name: invite
  endpoint:
    path: /invites/{invite_code}
    method: GET
    data_selector: invite
    params: {}
- name: AudioSource
  endpoint:
    path: /AudioSource
    method: GET
    data_selector: methods
    params: {}
- name: PCMAudio
  endpoint:
    path: /PCMAudio
    method: GET
    data_selector: methods
    params: {}
- name: FFmpegAudio
  endpoint:
    path: /FFmpegAudio
    method: GET
    data_selector: methods
    params: {}
- name: FFmpegPCMAudio
  endpoint:
    path: /FFmpegPCMAudio
    method: GET
    data_selector: methods
    params: {}
- name: FFmpegOpusAudio
  endpoint:
    path: /FFmpegOpusAudio
    method: GET
    data_selector: methods
    params: {}
- name: fetch_relationships
  endpoint:
    path: /fetch_relationships
    method: GET
    data_selector: relationships
- name: friend_suggestions
  endpoint:
    path: /friend_suggestions
    method: GET
    data_selector: friend_suggestions
- name: fetch_country_code
  endpoint:
    path: /fetch_country_code
    method: GET
    data_selector: country_code
- name: fetch_location_info
  endpoint:
    path: /fetch_location_info
    method: GET
    data_selector: location_info
- name: fetch_preferred_rtc_regions
  endpoint:
    path: /fetch_preferred_rtc_regions
    method: GET
    data_selector: preferred_rtc_regions
- name: applications
  endpoint:
    path: /applications
    method: GET
    data_selector: applications
- name: detectable_applications
  endpoint:
    path: /detectable_applications
    method: GET
    data_selector: detectable_applications
- name: fetch_application
  endpoint:
    path: /fetch_application/{application_id}
    method: GET
    data_selector: application
- name: application
  endpoint:
    path: /applications
    method: POST
    data_selector: application
- name: team
  endpoint:
    path: /teams
    method: POST
    data_selector: team
- name: company
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
- name: payment_source
  endpoint:
    path: /payment_sources
    method: GET
    data_selector: payment_sources
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: payment
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
- name: promotion
  endpoint:
    path: /promotions
    method: GET
    data_selector: promotions
- name: invite_create
  endpoint:
    path: /discord/on_invite_create
    method: POST
    data_selector: invite
- name: invite_delete
  endpoint:
    path: /discord/on_invite_delete
    method: POST
    data_selector: invite
- name: guild_feature_ack
  endpoint:
    path: /discord/on_guild_feature_ack
    method: POST
    data_selector: payload
- name: integration_create
  endpoint:
    path: /discord/on_integration_create
    method: POST
    data_selector: integration
- name: integration_update
  endpoint:
    path: /discord/on_integration_update
    method: POST
    data_selector: integration
- name: guild_integrations_update
  endpoint:
    path: /discord/on_guild_integrations_update
    method: POST
    data_selector: guild
- name: webhooks_update
  endpoint:
    path: /discord/on_webhooks_update
    method: POST
    data_selector: channel
- name: raw_integration_delete
  endpoint:
    path: /discord/on_raw_integration_delete
    method: POST
    data_selector: payload
- name: interaction
  endpoint:
    path: /discord/on_interaction
    method: POST
    data_selector: interaction
- name: interaction_finish
  endpoint:
    path: /discord/on_interaction_finish
    method: POST
    data_selector: interaction
- name: modal
  endpoint:
    path: /discord/on_modal
    method: POST
    data_selector: modal
- name: member_join
  endpoint:
    path: /discord/on_member_join
    method: POST
    data_selector: member
- name: member_remove
  endpoint:
    path: /discord/on_member_remove
    method: POST
    data_selector: member
- name: raw_member_remove
  endpoint:
    path: /discord/on_raw_member_remove
    method: POST
    data_selector: payload
- name: member_update
  endpoint:
    path: /discord/on_member_update
    method: POST
    data_selector: before, after
- name: user_update
  endpoint:
    path: /discord/on_user_update
    method: POST
    data_selector: before, after
- name: member_ban
  endpoint:
    path: /discord/on_member_ban
    method: POST
    data_selector: guild, user
- name: member_unban
  endpoint:
    path: /discord/on_member_unban
    method: POST
    data_selector: guild, user
- name: presence_update
  endpoint:
    path: /discord/on_presence_update
    method: POST
    data_selector: before, after
- name: raw_member_list_update
  endpoint:
    path: /discord/on_raw_member_list_update
    method: POST
    data_selector: data
- name: message
  endpoint:
    path: /discord/on_message
    method: POST
    data_selector: message
- name: message_edit
  endpoint:
    path: /discord/on_message_edit
    method: POST
    data_selector: before, after
- name: message_delete
  endpoint:
    path: /discord/on_message_delete
    method: POST
    data_selector: message
- name: bulk_message_delete
  endpoint:
    path: /discord/on_bulk_message_delete
    method: POST
    data_selector: messages
- name: message_ack
  endpoint:
    path: /discord/on_message_ack
    method: POST
    data_selector: message, manual
- name: raw_message_edit
  endpoint:
    path: /discord/on_raw_message_edit
    method: POST
    data_selector: payload
- name: raw_message_delete
  endpoint:
    path: /discord/on_raw_message_delete
    method: POST
    data_selector: payload
- name: raw_bulk_message_delete
  endpoint:
    path: /discord/on_raw_bulk_message_delete
    method: POST
    data_selector: payload
- name: raw_message_ack
  endpoint:
    path: /discord/on_raw_message_ack
    method: POST
    data_selector: payload
- name: recent_mention_delete
  endpoint:
    path: /discord/on_recent_mention_delete
    method: POST
    data_selector: message
- name: raw_recent_mention_delete
  endpoint:
    path: /discord/on_raw_recent_mention_delete
    method: POST
    data_selector: message_id
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: UserOffer
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: TrialOffer
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: PricingPromotion
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: LibraryApplication
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: OAuth2Token
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: Entitlement
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
    data_selector: Entitlement
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
    data_selector: Entitlement
- name: fetch_entitlements
  endpoint:
    path: /fetch_entitlements
    method: GET
    data_selector: Entitlement
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
    data_selector: Gift
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
    data_selector: SKU
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
    data_selector: StoreListing
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
    data_selector: StoreListing
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
    data_selector: StoreListing
- name: content_filter
  endpoint:
    path: /content-filter
    method: GET
    data_selector: filters
- name: status
  endpoint:
    path: /status
    method: GET
    data_selector: statuses
- name: audit_log
  endpoint:
    path: /audit-log
    method: GET
    data_selector: logs
- name: audit_log_diff
  endpoint:
    path: /audit-log-diff
    method: GET
    data_selector: audit_logs
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: sku_subscription_plans
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: skus_subscription_plans
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: eula
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: recent_mentions
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: deleted_recent_mention
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: joined_developer_program
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: DELETE
    data_selector: left_developer_program
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: reported_unverified_application
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
- name: sticker_picker_section
  endpoint:
    path: /discord/sticker_picker_section
    method: GET
    data_selector: sections
- name: theme
  endpoint:
    path: /discord/theme
    method: GET
    data_selector: themes
- name: locale
  endpoint:
    path: /discord/locale
    method: GET
    data_selector: locales
- name: mfa_level
  endpoint:
    path: /discord/mfa_level
    method: GET
    data_selector: mfa_levels
- name: entity_type
  endpoint:
    path: /discord/entity_type
    method: GET
    data_selector: entity_types
- name: event_status
  endpoint:
    path: /discord/event_status
    method: GET
    data_selector: event_statuses
- name: required_action_type
  endpoint:
    path: /discord/required_action_type
    method: GET
    data_selector: required_actions
- name: connection_type
  endpoint:
    path: /discord/connection_type
    method: GET
    data_selector: connection_types
- name: client_type
  endpoint:
    path: /discord/client_type
    method: GET
    data_selector: client_types
- name: gift_style
  endpoint:
    path: /discord/gift_style
    method: GET
    data_selector: gift_styles
- name: interaction_type
  endpoint:
    path: /discord/interaction_type
    method: GET
    data_selector: interaction_types
- name: component_type
  endpoint:
    path: /discord/component_type
    method: GET
    data_selector: component_types
- name: button_style
  endpoint:
    path: /discord/button_style
    method: GET
    data_selector: button_styles
- name: text_style
  endpoint:
    path: /discord/text_style
    method: GET
    data_selector: text_styles
- name: application_command_type
  endpoint:
    path: /discord/application_command_type
    method: GET
    data_selector: application_command_types
- name: application_command_option_type
  endpoint:
    path: /discord/application_command_option_type
    method: GET
    data_selector: application_command_option_types
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
    data_selector: result
    params: {}
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
    data_selector: hubs
    params: {}
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
    data_selector: hub
    params: {}
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
    data_selector: suggestion
    params: {}
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
    data_selector: is_taken
    params: {}
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
    data_selector: avatars
    params: {}
- name: AudioSource
  endpoint:
    path: /discord/AudioSource
    method: GET
    data_selector: audio_stream
    params: {}
- name: PCMAudio
  endpoint:
    path: /discord/PCMAudio
    method: GET
    data_selector: pcm_audio
    params: {}
- name: FFmpegAudio
  endpoint:
    path: /discord/FFmpegAudio
    method: GET
    data_selector: ffmpeg_audio
    params: {}
- name: FFmpegPCMAudio
  endpoint:
    path: /discord/FFmpegPCMAudio
    method: GET
    data_selector: ffmpeg_pcm_audio
    params: {}
- name: FFmpegOpusAudio
  endpoint:
    path: /discord/FFmpegOpusAudio
    method: GET
    data_selector: ffmpeg_opus_audio
    params: {}
- name: AutoModRule
  endpoint:
    path: /automod/rules
    method: POST
    data_selector: rules
- name: Channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: UserSettings
  endpoint:
    path: /user/settings
    method: GET
    data_selector: settings
- name: webhook
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}
    method: POST
- name: fetch_message
  endpoint:
    path: /fetch_message
    method: GET
    data_selector: SyncWebhookMessage
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: WebhookMessage
- name: guild_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: invites
  endpoint:
    path: /invites
    method: GET
- name: messages
  endpoint:
    path: /messages
    method: POST
- name: upload_files
  endpoint:
    path: /upload
    method: POST
- name: reaction_add
  endpoint:
    path: /reaction_add
    method: POST
- name: reaction_remove
  endpoint:
    path: /reaction_remove
    method: POST
- name: reaction_clear
  endpoint:
    path: /reaction_clear
    method: POST
- name: reaction_clear_emoji
  endpoint:
    path: /reaction_clear_emoji
    method: POST
- name: raw_reaction_add
  endpoint:
    path: /raw_reaction_add
    method: POST
- name: raw_reaction_remove
  endpoint:
    path: /raw_reaction_remove
    method: POST
- name: raw_reaction_clear
  endpoint:
    path: /raw_reaction_clear
    method: POST
- name: raw_reaction_clear_emoji
  endpoint:
    path: /raw_reaction_clear_emoji
    method: POST
- name: guild_role_create
  endpoint:
    path: /guild_role_create
    method: POST
- name: guild_role_delete
  endpoint:
    path: /guild_role_delete
    method: POST
- name: guild_role_update
  endpoint:
    path: /guild_role_update
    method: POST
- name: scheduled_event_create
  endpoint:
    path: /scheduled_event_create
    method: POST
- name: scheduled_event_delete
  endpoint:
    path: /scheduled_event_delete
    method: POST
- name: scheduled_event_update
  endpoint:
    path: /scheduled_event_update
    method: POST
- name: scheduled_event_user_add
  endpoint:
    path: /scheduled_event_user_add
    method: POST
- name: scheduled_event_user_remove
  endpoint:
    path: /scheduled_event_user_remove
    method: POST
- name: raw_scheduled_event_user_add
  endpoint:
    path: /raw_scheduled_event_user_add
    method: POST
- name: raw_scheduled_event_user_remove
  endpoint:
    path: /raw_scheduled_event_user_remove
    method: POST
- name: scheduled_event_ack
  endpoint:
    path: /scheduled_event_ack
    method: POST
- name: stage_instance_create
  endpoint:
    path: /stage_instance_create
    method: POST
- name: stage_instance_delete
  endpoint:
    path: /stage_instance_delete
    method: POST
- name: stage_instance_update
  endpoint:
    path: /stage_instance_update
    method: POST
- name: thread_create
  endpoint:
    path: /thread_create
    method: POST
- name: thread_join
  endpoint:
    path: /thread_join
    method: POST
- name: thread_update
  endpoint:
    path: /thread_update
    method: POST
- name: thread_remove
  endpoint:
    path: /thread_remove
    method: POST
- name: thread_delete
  endpoint:
    path: /thread_delete
    method: POST
- name: raw_thread_delete
  endpoint:
    path: /raw_thread_delete
    method: POST
- name: thread_member_join
  endpoint:
    path: /thread_member_join
    method: POST
- name: thread_member_remove
  endpoint:
    path: /thread_member_remove
    method: POST
- name: raw_thread_member_remove
  endpoint:
    path: /raw_thread_member_remove
    method: POST
- name: voice_state_update
  endpoint:
    path: /voice_state_update
    method: POST
- name: ApplicationCommand
  endpoint:
    path: /application-commands
    method: GET
    data_selector: commands
- name: ClientUser
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
- name: edit_note
  endpoint:
    path: /user/edit_note
    method: POST
- name: fetch_message
  endpoint:
    path: /user/fetch_message
    method: GET
- name: fetch_mutual_friends
  endpoint:
    path: /user/fetch_mutual_friends
    method: GET
- name: fetch_note
  endpoint:
    path: /user/fetch_note
    method: GET
- name: greet
  endpoint:
    path: /user/greet
    method: POST
- name: history
  endpoint:
    path: /user/history
    method: GET
- name: is_blocked
  endpoint:
    path: /user/is_blocked
    method: GET
- name: is_friend
  endpoint:
    path: /user/is_friend
    method: GET
- name: is_pomelo
  endpoint:
    path: /user/is_pomelo
    method: GET
- name: mentioned_in
  endpoint:
    path: /user/mentioned_in
    method: POST
- name: pins
  endpoint:
    path: /user/pins
    method: GET
- name: profile
  endpoint:
    path: /user/profile
    method: GET
- name: search
  endpoint:
    path: /user/search
    method: GET
- name: audit_log_diff
  endpoint:
    path: /audit-log-diff
    method: GET
    data_selector: records
- name: invite_create
  endpoint:
    path: /invite-create
    method: GET
    data_selector: records
- name: invite_update
  endpoint:
    path: /invite-update
    method: GET
    data_selector: records
- name: invite_delete
  endpoint:
    path: /invite-delete
    method: GET
    data_selector: records
- name: webhook_create
  endpoint:
    path: /webhook-create
    method: GET
    data_selector: records
- name: webhook_update
  endpoint:
    path: /webhook-update
    method: GET
    data_selector: records
- name: webhook_delete
  endpoint:
    path: /webhook-delete
    method: GET
    data_selector: records
- name: emoji_create
  endpoint:
    path: /emoji-create
    method: GET
    data_selector: records
- name: emoji_update
  endpoint:
    path: /emoji-update
    method: GET
    data_selector: records
- name: emoji_delete
  endpoint:
    path: /emoji-delete
    method: GET
    data_selector: records
- name: message_delete
  endpoint:
    path: /message-delete
    method: GET
    data_selector: records
- name: message_bulk_delete
  endpoint:
    path: /message-bulk-delete
    method: GET
    data_selector: records
- name: message_pin
  endpoint:
    path: /message-pin
    method: GET
    data_selector: records
- name: message_unpin
  endpoint:
    path: /message-unpin
    method: GET
    data_selector: records
- name: integration_create
  endpoint:
    path: /integration-create
    method: GET
    data_selector: records
- name: integration_update
  endpoint:
    path: /integration-update
    method: GET
    data_selector: records
- name: integration_delete
  endpoint:
    path: /integration-delete
    method: GET
    data_selector: records
- name: stage_instance_create
  endpoint:
    path: /stage-instance-create
    method: GET
    data_selector: records
- name: stage_instance_update
  endpoint:
    path: /stage-instance-update
    method: GET
    data_selector: records
- name: stage_instance_delete
  endpoint:
    path: /stage-instance-delete
    method: GET
    data_selector: records
- name: sticker_create
  endpoint:
    path: /sticker-create
    method: GET
    data_selector: records
- name: sticker_update
  endpoint:
    path: /sticker-update
    method: GET
    data_selector: records
- name: sticker_delete
  endpoint:
    path: /sticker-delete
    method: GET
    data_selector: records
- name: scheduled_event_create
  endpoint:
    path: /scheduled-event-create
    method: GET
    data_selector: records
- name: scheduled_event_update
  endpoint:
    path: /scheduled-event-update
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
    params: {}
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: '200'
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: '25'
- name: audit_log_diff
  endpoint:
    path: /audit_log_diff
    method: GET
    data_selector: changes
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
- name: Connection
  endpoint:
    path: /discord/connections
    method: GET
    data_selector: connections
- name: FriendSuggestion
  endpoint:
    path: /discord/friend_suggestions
    method: GET
    data_selector: suggestions
- name: FriendSuggestionReason
  endpoint:
    path: /FriendSuggestionReason
    method: GET
    data_selector: attributes
- name: UserSettings
  endpoint:
    path: /UserSettings
    method: GET
    data_selector: attributes
- name: user_settings
  endpoint:
    path: /user/settings
    method: GET
    data_selector: settings
- name: SyncWebhook
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}
    method: POST
    data_selector: message
    params: {}
- name: current_game
  endpoint:
    path: /show_current_game
    method: GET
    data_selector: settings
- name: stream_notifications
  endpoint:
    path: /stream_notifications_enabled
    method: GET
    data_selector: settings
- name: timezone_offset
  endpoint:
    path: /timezone_offset
    method: GET
    data_selector: settings
- name: view_nsfw_commands
  endpoint:
    path: /view_nsfw_commands
    method: GET
    data_selector: settings
- name: view_nsfw_guilds
  endpoint:
    path: /view_nsfw_guilds
    method: GET
    data_selector: settings
- name: webhook_message
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}/messages/{message_id}
    method: PATCH
    data_selector: message
    params: {}
- name: guild_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: TrackingSettings
  endpoint:
    path: /tracking/settings
    method: GET
    data_selector: settings
- name: EmailSettings
  endpoint:
    path: /email/settings
    method: GET
    data_selector: settings
- name: GuildFolder
  endpoint:
    path: /guild/folder
    method: GET
    data_selector: folders
- name: GuildProgress
  endpoint:
    path: /guild/progress
    method: GET
    data_selector: progress
- name: AudioContext
  endpoint:
    path: /audio/context
    method: GET
    data_selector: audioSettings
- name: MuteConfig
  endpoint:
    path: /mute/config
    method: GET
    data_selector: muteStatus
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    params:
      limit: 200
- name: message_search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    params:
      limit: 25
- name: message
  endpoint:
    path: /messages
    method: POST
    data_selector: message
- name: friend_request
  endpoint:
    path: /friend-request
    method: POST
    data_selector: request
- name: slash_commands
  endpoint:
    path: /slash-commands
    method: GET
    data_selector: commands
- name: user_commands
  endpoint:
    path: /user-commands
    method: GET
    data_selector: commands
- name: activity_statistics
  endpoint:
    path: /async/activity_statistics
    method: GET
- name: assets
  endpoint:
    path: /async/assets
    method: GET
- name: branches
  endpoint:
    path: /async/branches
    method: GET
- name: create_asset
  endpoint:
    path: /async/create_asset
    method: POST
- name: create_bot
  endpoint:
    path: /async/create_bot
    method: POST
- name: create_branch
  endpoint:
    path: /async/create_branch
    method: POST
- name: create_gift_batch
  endpoint:
    path: /async/create_gift_batch
    method: POST
- name: create_sku
  endpoint:
    path: /async/create_sku
    method: POST
- name: create_store_asset
  endpoint:
    path: /async/create_store_asset
    method: POST
- name: edit
  endpoint:
    path: /async/edit
    method: PATCH
- name: edit_bot
  endpoint:
    path: /async/edit_bot
    method: PATCH
- name: edit_embedded_activity_config
  endpoint:
    path: /async/edit_embedded_activity_config
    method: PATCH
- name: entitlement_ticket
  endpoint:
    path: /async/entitlement_ticket
    method: GET
- name: entitlements
  endpoint:
    path: /async/entitlements
    method: GET
- name: eula
  endpoint:
    path: /async/eula
    method: GET
- name: fetch_bot
  endpoint:
    path: /async/fetch_bot
    method: GET
- name: fetch_discoverability
  endpoint:
    path: /async/fetch_discoverability
    method: GET
- name: fetch_embedded_activity_config
  endpoint:
    path: /async/fetch_embedded_activity_config
    method: GET
- name: fetch_entitlement
  endpoint:
    path: /async/fetch_entitlement
    method: GET
- name: gift_batches
  endpoint:
    path: /async/gift_batches
    method: GET
- name: has_bot
  endpoint:
    path: /def/has_bot
    method: GET
- name: is_rpc_enabled
  endpoint:
    path: /def/is_rpc_enabled
    method: GET
- name: manifest_labels
  endpoint:
    path: /async/manifest_labels
    method: GET
- name: primary_sku
  endpoint:
    path: /async/primary_sku
    method: GET
- name: primary_store_listing
  endpoint:
    path: /async/primary_store_listing
    method: GET
- name: published_store_listings
  endpoint:
    path: /async/published_store_listings
    method: GET
- name: request_intents
  endpoint:
    path: /async/request_intents
    method: POST
- name: secret
  endpoint:
    path: /async/secret
    method: GET
- name: skus
  endpoint:
    path: /async/skus
    method: GET
- name: store_assets
  endpoint:
    path: /async/store_assets
    method: GET
- name: store_listing_sku
  endpoint:
    path: /async/store_listing_sku
    method: GET
- name: ticket
  endpoint:
    path: /async/ticket
    method: GET
- name: whitelist
  endpoint:
    path: /async/whitelist
    method: POST
- name: whitelisted
  endpoint:
    path: /async/whitelisted
    method: GET
- name: user_settings
  endpoint:
    path: /user/settings
    method: GET
    data_selector: settings
    params: {}
- name: edit
  endpoint:
    path: /applications/{application.id}/edit
    method: POST
    data_selector: application
    params: {}
- name: fetch_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: GET
    data_selector: bot
    params: {}
- name: create_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: POST
    data_selector: bot
    params: {}
- name: edit_bot
  endpoint:
    path: /applications/{application.id}/bot/edit
    method: PATCH
    data_selector: bot
    params: {}
- name: request_intents
  endpoint:
    path: /applications/{application.id}/request_intents
    method: POST
    data_selector: intents
    params: {}
- name: whitelisted
  endpoint:
    path: /applications/{application.id}/whitelisted
    method: GET
    data_selector: testers
    params: {}
- name: whitelist
  endpoint:
    path: /applications/{application.id}/whitelist
    method: POST
    data_selector: tester
    params: {}
- name: create_asset
  endpoint:
    path: /applications/{application.id}/assets
    method: POST
    data_selector: asset
    params: {}
- name: store_assets
  endpoint:
    path: /applications/{application.id}/store/assets
    method: GET
    data_selector: assets
    params: {}
- name: create_store_asset
  endpoint:
    path: /applications/{application.id}/store/assets
    method: POST
    data_selector: store_asset
    params: {}
- name: activity_statistics
  endpoint:
    path: /applications/{application.id}/activity_statistics
    method: GET
- name: create_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: POST
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: application_activity_statistics
  endpoint:
    path: /discord/application/activity/statistics
    method: GET
    data_selector: statistics
- name: uploads_store_asset
  endpoint:
    path: /uploads/store_asset
    method: POST
- name: skus
  endpoint:
    path: /skus
    method: GET
    params:
      with_bundled_skus: true
      localize: true
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    params:
      localize: true
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
    params:
      localize: true
- name: create_sku
  endpoint:
    path: /create_sku
    method: POST
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    params:
      limit: 100
- name: fetch_entitlement
  endpoint:
    path: /fetch_entitlement/{entitlement_id}
    method: GET
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
- name: create_gift_batch
  endpoint:
    path: /create_gift_batch
    method: POST
- name: branches
  endpoint:
    path: /branches
    method: GET
- name: create_branch
  endpoint:
    path: /create_branch
    method: POST
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
- name: fetch_discoverability
  endpoint:
    path: /fetch_discoverability
    method: GET
- name: fetch_embedded_activity_config
  endpoint:
    path: /fetch_embedded_activity_config
    method: GET
- name: edit_embedded_activity_config
  endpoint:
    path: /edit_embedded_activity_config
    method: POST
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: application_profile
  endpoint:
    path: /applications/@me
    method: GET
    data_selector: data
- name: store_listings
  endpoint:
    path: /applications/{application.id}/store_listings
    method: GET
    data_selector: data
- name: bot
  endpoint:
    path: /api/v10/applications/{application.id}/bot
    method: GET
    data_selector: ''
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: team_payout
  endpoint:
    path: /team_payout
    method: GET
    data_selector: payouts
    params: {}
- name: company
  endpoint:
    path: /company
    method: GET
    data_selector: companies
    params: {}
- name: eula
  endpoint:
    path: /eula
    method: GET
    data_selector: eulas
    params: {}
- name: entitlement
  endpoint:
    path: /entitlement
    method: GET
    data_selector: entitlements
    params: {}
- name: application_activity_statistics
  endpoint:
    path: /application_activity_statistics
    method: GET
    data_selector: statistics
    params: {}
- name: gift
  endpoint:
    path: /discord/gift
    method: GET
    data_selector: gift
    params: {}
- name: gift_batch
  endpoint:
    path: /discord/gift_batch
    method: GET
    data_selector: gift_batch
    params: {}
- name: library_application
  endpoint:
    path: /discord/library_application
    method: GET
    data_selector: library_application
    params: {}
- name: application_build
  endpoint:
    path: /application/builds
    method: GET
    data_selector: builds
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: Subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: team_member
  endpoint:
    path: /teams/{team_id}/members
    method: GET
    data_selector: members
- name: SubscriptionTrial
  endpoint:
    path: /discord/SubscriptionTrial
    method: GET
    data_selector: trial
- name: PremiumGuildSubscription
  endpoint:
    path: /discord/PremiumGuildSubscription
    method: GET
    data_selector: premium_subscription
- name: PremiumGuildSubscriptionSlot
  endpoint:
    path: /discord/PremiumGuildSubscriptionSlot
    method: GET
    data_selector: subscription_slot
- name: PremiumGuildSubscriptionCooldown
  endpoint:
    path: /discord/PremiumGuildSubscriptionCooldown
    method: GET
    data_selector: cooldown
- name: SubscriptionPlan
  endpoint:
    path: /discord/SubscriptionPlan
    method: GET
    data_selector: subscription_plan
- name: SubscriptionPlanPrices
  endpoint:
    path: /subscription_plan_prices
    method: GET
    data_selector: country_prices
    params: {}
- name: Payment
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
    params: {}
- name: SKU
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
    params: {}
- name: dm_channel
  endpoint:
    path: /users/@me/channels
    method: POST
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    params:
      limit: 100
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
- name: store_listing
  endpoint:
    path: /store/listings
    method: GET
    data_selector: listings
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: team_payout
  endpoint:
    path: /team_payout
    method: GET
    data_selector: payouts
    params: {}
- name: Metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: items
- name: ReadState
  endpoint:
    path: /readstate
    method: GET
    data_selector: items
- name: Asset
  endpoint:
    path: /asset
    method: GET
    data_selector: items
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: SubscriptionTrial
  endpoint:
    path: /discord/SubscriptionTrial
    method: GET
    data_selector: id
- name: PremiumGuildSubscription
  endpoint:
    path: /discord/PremiumGuildSubscription
    method: GET
    data_selector: id
- name: PremiumGuildSubscriptionSlot
  endpoint:
    path: /discord/PremiumGuildSubscriptionSlot
    method: GET
    data_selector: id
- name: SubscriptionPlan
  endpoint:
    path: /discord/SubscriptionPlan
    method: GET
    data_selector: id
- name: SubscriptionPlanPrices
  endpoint:
    path: /subscription_plan_prices
    method: GET
    data_selector: prices
    params: {}
- name: Payment
  endpoint:
    path: /payments
    method: POST
    data_selector: payment
    params: {}
- name: SKU
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
    params: {}
- name: sku
  endpoint:
    path: /discord/sku
    method: GET
    data_selector: records
- name: store_listing
  endpoint:
    path: /store/listings
    method: GET
    data_selector: listings
- name: sku
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: listings
    params: {}
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: create_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: POST
    data_selector: sticker
- name: delete_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers/{sticker_id}
    method: DELETE
    data_selector: sticker
- name: subscribed_scheduled_events
  endpoint:
    path: /users/@me/guilds/{guild_id}/scheduled-events
    method: GET
    data_selector: scheduled_events
- name: fetch_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: GET
    data_selector: scheduled_events
- name: create_scheduled_event
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: POST
    data_selector: scheduled_event
- name: fetch_roles
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
- name: fetch_emojis
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: GET
    data_selector: emojis
- name: guild
  endpoint:
    path: /guild
    method: GET
    data_selector: guild
    params: {}
- name: automod_rules
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: fetch_automod_rule
  endpoint:
    path: /automod/rules/{automod_rule_id}
    method: GET
    data_selector: rule
- name: create_automod_rule
  endpoint:
    path: /automod/rules
    method: POST
    data_selector: rule
- name: admin_community_eligibility
  endpoint:
    path: /admin/community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /admin/community/join
    method: POST
    data_selector: community
- name: migrate_command_scope
  endpoint:
    path: /migrate/command/scope
    method: POST
    data_selector: integration_ids
- name: directory_broadcast_eligibility
  endpoint:
    path: /directory/broadcast/eligibility
    method: GET
    data_selector: eligibility
- name: create_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: POST
    data_selector: sticker
    params: {}
- name: delete_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers/{sticker_id}
    method: DELETE
    data_selector: sticker
    params: {}
- name: fetch_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: GET
    data_selector: events
    params: {}
- name: fetch_emojis
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: GET
    data_selector: emojis
    params: {}
- name: fetch_roles
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
    params: {}
- name: ban_entry
  endpoint:
    path: /bans
    method: GET
    data_selector: records
- name: bulk_ban_result
  endpoint:
    path: /bulk_ban
    method: POST
    data_selector: records
- name: role
  endpoint:
    path: /roles
    method: GET
    data_selector: records
- name: welcome_screen
  endpoint:
    path: /guilds/{guild_id}/welcome-screen
    method: PATCH
    data_selector: welcome_screen
    params: {}
- name: applications
  endpoint:
    path: /guilds/{guild_id}/applications
    method: GET
    data_selector: applications
    params: {}
- name: premium_subscriptions
  endpoint:
    path: /guilds/{guild_id}/premium-subscriptions
    method: GET
    data_selector: premium_subscriptions
    params: {}
- name: price_tiers
  endpoint:
    path: /guilds/{guild_id}/price-tiers
    method: GET
    data_selector: price_tiers
    params: {}
- name: members
  endpoint:
    path: /guilds/{guild_id}/members
    method: GET
    data_selector: members
    params: {}
- name: AutoModRule
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: IntegrationApplication
  endpoint:
    path: /integration/applications
    method: GET
    data_selector: applications
- name: member
  endpoint:
    path: /members
    method: GET
    data_selector: members
- name: automod_rules
  endpoint:
    path: /guilds/{guild_id}/automod/rules
    method: GET
    data_selector: automod_rules
- name: fetch_automod_rule
  endpoint:
    path: /guilds/{guild_id}/automod/rules/{automod_rule_id}
    method: GET
    data_selector: automod_rule
- name: create_automod_rule
  endpoint:
    path: /guilds/{guild_id}/automod/rules
    method: POST
    data_selector: automod_rule
- name: admin_community_eligibility
  endpoint:
    path: /guilds/{guild_id}/admin-community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /guilds/{guild_id}/admin-community/join
    method: POST
    data_selector: guild
- name: migrate_command_scope
  endpoint:
    path: /guilds/{guild_id}/migrate-command-scope
    method: POST
    data_selector: integration_ids
- name: member
  endpoint:
    path: /guilds/{guild_id}/members/{member_id}
    method: GET
    data_selector: member
    params: {}
- name: ban_entry
  endpoint:
    path: /bans
    method: GET
    data_selector: bans
    params: {}
- name: bulk_ban_result
  endpoint:
    path: /bulk_ban
    method: POST
    data_selector: bulkBanResult
    params: {}
- name: role
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
    params: {}
- name: pinned_messages
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: messages
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: unacknowledge_channel
  endpoint:
    path: /channels/{channel_id}/unack
    method: POST
    data_selector: status
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/upload
    method: POST
    data_selector: files
- name: member_profile
  endpoint:
    path: /member/profile
    method: GET
    data_selector: records
- name: member_profile
  endpoint:
    path: /api/v1/members
    method: GET
    data_selector: members
    params: {}
- name: member
  endpoint:
    path: /members
    method: GET
    data_selector: members
- name: member
  endpoint:
    path: /members
    method: GET
    data_selector: members
    params: {}
- name: guild_avatar_decoration
  endpoint:
    path: /guild_avatar_decoration
    method: GET
- name: guild_avatar_decoration_expires_at
  endpoint:
    path: /guild_avatar_decoration_expires_at
    method: GET
- name: guild_avatar_decoration_sku_id
  endpoint:
    path: /guild_avatar_decoration_sku_id
    method: GET
- name: guild_banner
  endpoint:
    path: /guild_banner
    method: GET
- name: guild_permissions
  endpoint:
    path: /guild_permissions
    method: GET
- name: id
  endpoint:
    path: /id
    method: GET
- name: mention
  endpoint:
    path: /mention
    method: GET
- name: mobile_status
  endpoint:
    path: /mobile_status
    method: GET
- name: premium
  endpoint:
    path: /premium
    method: GET
- name: primary_guild
  endpoint:
    path: /primary_guild
    method: GET
- name: public_flags
  endpoint:
    path: /public_flags
    method: GET
- name: raw_status
  endpoint:
    path: /raw_status
    method: GET
- name: relationship
  endpoint:
    path: /relationship
    method: GET
- name: roles
  endpoint:
    path: /roles
    method: GET
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: Message
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: Message
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: Message
- name: unack
  endpoint:
    path: /unack
    method: POST
    data_selector: Message
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
    data_selector: CloudFile
- name: member_profile
  endpoint:
    path: /members/profiles
    method: GET
    data_selector: profiles
    params: {}
- name: PartialEmoji
  endpoint:
    path: /discord/PartialEmoji
    method: GET
    data_selector: assets
    params: {}
- name: Sticker
  endpoint:
    path: /discord/Sticker
    method: GET
    data_selector: assets
    params: {}
- name: StickerItem
  endpoint:
    path: /discord/StickerItem
    method: GET
    data_selector: assets
    params: {}
- name: StickerPack
  endpoint:
    path: /discord/StickerPack
    method: GET
    data_selector: assets
    params: {}
- name: StandardSticker
  endpoint:
    path: /discord/StandardSticker
    method: GET
    data_selector: assets
    params: {}
- name: voice_client
  endpoint:
    path: /voice/client
    method: POST
- name: dm_channel
  endpoint:
    path: /dm/channel
    method: POST
- name: message
  endpoint:
    path: /message/{id}
    method: GET
    data_selector: message
- name: mutual_friends
  endpoint:
    path: /mutual/friends
    method: GET
- name: note
  endpoint:
    path: /note
    method: GET
- name: guild_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
    data_selector: stickers
- name: category_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: member_profile
  endpoint:
    path: /guilds/{guild.id}/members/{user.id}
    method: GET
    data_selector: profile
    params: {}
- name: forums
  endpoint:
    path: /forums
    method: GET
- name: directory_channels
  endpoint:
    path: /directory_channels
    method: GET
- name: directories
  endpoint:
    path: /directories
    method: GET
- name: text_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
    data_selector: files
    params: {}
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: PartialEmoji
  endpoint:
    path: /discord/PartialEmoji
    method: GET
    data_selector: PartialEmoji
    params: {}
- name: Sticker
  endpoint:
    path: /discord/Sticker
    method: GET
    data_selector: Sticker
    params: {}
- name: StickerItem
  endpoint:
    path: /discord/StickerItem
    method: GET
    data_selector: StickerItem
    params: {}
- name: StickerPack
  endpoint:
    path: /discord/StickerPack
    method: GET
    data_selector: StickerPack
    params: {}
- name: StandardSticker
  endpoint:
    path: /discord/StandardSticker
    method: GET
    data_selector: StandardSticker
    params: {}
- name: voice_channel
  endpoint:
    path: /voice_channels
    method: GET
    data_selector: channels
- name: guild_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
    data_selector: stickers
- name: category_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: categories
- name: forums
  endpoint:
    path: /forums
    method: GET
- name: directory_channels
  endpoint:
    path: /directory_channels
    method: GET
- name: directories
  endpoint:
    path: /directories
    method: GET
- name: channel
  endpoint:
    path: /channels
    method: POST
- name: text_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
- name: partial_message
  endpoint:
    path: /messages/{message_id}
    method: POST
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
- name: purge
  endpoint:
    path: /channels/{channel_id}/messages
    method: DELETE
- name: search
  endpoint:
    path: /search
    method: GET
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
    params: {}
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    params: {}
- name: archived_threads
  endpoint:
    path: /archived-threads
    method: GET
    params:
      limit: None
      before: None
      private: bool
      joined: bool
- name: invites
  endpoint:
    path: /invites
    method: GET
    data_selector: invites
- name: message_history
  endpoint:
    path: /message-history
    method: GET
    params:
      limit: 100
      before: None
      after: None
      around: None
      oldest_first: None
- name: voice_states
  endpoint:
    path: /voice/states
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: notification_settings
  endpoint:
    path: /notification_settings
    method: GET
    data_selector: settings
- name: overwrites
  endpoint:
    path: /overwrites
    method: GET
    data_selector: overwrites
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: messages
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
- name: channel_history
  endpoint:
    path: /channel/history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: active_invites
  endpoint:
    path: /channel/invites
    method: GET
    data_selector: invites
    params: {}
- name: pinned_messages
  endpoint:
    path: /channel/pins
    method: GET
    data_selector: messages
    params: {}
- name: voice_channel
  endpoint:
    path: /voice/channels
    method: GET
    data_selector: channels
- name: read_state
  endpoint:
    path: /read_state
    method: GET
    data_selector: read_state
- name: scheduled_events
  endpoint:
    path: /scheduled_events
    method: GET
    data_selector: scheduled_events
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: commands
- name: directory_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: channel
- name: fetch_entries
  endpoint:
    path: /fetch_entries
    method: GET
    data_selector: entries
    params: {}
- name: search_entries
  endpoint:
    path: /search_entries
    method: GET
    data_selector: entries
    params: {}
- name: create_entry
  endpoint:
    path: /create_entry
    method: POST
    data_selector: entry
    params: {}
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
    data_selector: invite
    params: {}
- name: delete
  endpoint:
    path: /delete
    method: DELETE
    data_selector: response
    params: {}
- name: invites
  endpoint:
    path: /invites
    method: GET
    data_selector: invites
    params: {}
- name: message
  endpoint:
    path: /message/{id}
    method: GET
    data_selector: message
    params: {}
- name: partial_message
  endpoint:
    path: /message/{message_id}/partial
    method: GET
    data_selector: partial_message
    params: {}
- name: history
  endpoint:
    path: /channel/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channel/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /channel/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: forum_channel
  endpoint:
    path: /discord/api/forum_channel
    method: GET
    data_selector: channel
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      most_relevant: false
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /channels/{channel_id}/permissions/{overwrite_id}
    method: PUT
    data_selector: permissions
    params: {}
- name: threads
  endpoint:
    path: /threads
    method: POST
    data_selector: threads
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: invites
  endpoint:
    path: /invites
    method: GET
    data_selector: invites
    params: {}
- name: permissions_synced
  endpoint:
    path: /permissions/synced
    method: GET
    data_selector: permissions
- name: set_permissions
  endpoint:
    path: /permissions/set
    method: POST
    data_selector: permissions
- name: voice_states
  endpoint:
    path: /voice_states
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
- name: requested_at
  endpoint:
    path: /discord/DMChannel/requested_at
    method: GET
    data_selector: requested_at
- name: is_message_request
  endpoint:
    path: /discord/DMChannel/is_message_request
    method: GET
    data_selector: is_message_request
- name: is_accepted
  endpoint:
    path: /discord/DMChannel/is_accepted
    method: GET
    data_selector: is_accepted
- name: is_spam
  endpoint:
    path: /discord/DMChannel/is_spam
    method: GET
    data_selector: is_spam
- name: stage_channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: channel
    params: {}
- name: read_state
  endpoint:
    path: /read_state
    method: GET
- name: scheduled_events
  endpoint:
    path: /scheduled_events
    method: GET
- name: search_messages
  endpoint:
    path: /search
    method: GET
    params:
      limit: 25
      offset: 0
- name: send_message
  endpoint:
    path: /send
    method: POST
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
- name: directory_channel
  endpoint:
    path: /directory_channel
    method: GET
    data_selector: entries
    params: {}
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
      cls: VoiceClient
      ring: true
- name: ack
  endpoint:
    path: /ack
    method: POST
    data_selector: acknowledgement
- name: ack_pins
  endpoint:
    path: /ack_pins
    method: POST
    data_selector: acknowledgement
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
    data_selector: commands
- name: fetch_message
  endpoint:
    path: /fetch_message/{id}
    method: GET
    data_selector: message
    params:
      id: message_id
- name: greet
  endpoint:
    path: /greet
    method: POST
    data_selector: greeting
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: message_history
    params:
      limit: 100
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pinned_messages
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: search_results
    params:
      limit: 25
      offset: 0
- name: fetch_entries
  endpoint:
    path: /fetch_entries
    method: GET
    data_selector: entries
    params: {}
- name: search_entries
  endpoint:
    path: /search_entries
    method: GET
    data_selector: entries
    params: {}
- name: create_entry
  endpoint:
    path: /create_entry
    method: POST
    data_selector: entry
    params: {}
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
    data_selector: invite
    params: {}
- name: delete
  endpoint:
    path: /delete
    method: DELETE
    data_selector: deleted
    params: {}
- name: forum_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: /slash/commands
    method: GET
    data_selector: commands
    params: {}
- name: permissions_synced
  endpoint:
    path: /permissions/synced
    method: GET
    data_selector: permissions_synced
    params: {}
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: set_permissions
    params: {}
- name: requested_at
  endpoint:
    path: requested_at
    method: GET
- name: is_message_request
  endpoint:
    path: is_message_request
    method: GET
- name: is_accepted
  endpoint:
    path: is_accepted
    method: GET
- name: is_spam
  endpoint:
    path: is_spam
    method: GET
- name: permissions_for
  endpoint:
    path: permissions_for
    method: GET
- name: add_recipients
  endpoint:
    path: add_recipients
    method: POST
- name: close
  endpoint:
    path: close
    method: DELETE
- name: connect
  endpoint:
    path: connect
    method: POST
- name: accept
  endpoint:
    path: accept
    method: POST
- name: decline
  endpoint:
    path: decline
    method: POST
- name: ack
  endpoint:
    path: ack
    method: POST
- name: ack_pins
  endpoint:
    path: ack_pins
    method: POST
- name: application_commands
  endpoint:
    path: application_commands
    method: GET
- name: fetch_message
  endpoint:
    path: fetch_message
    method: GET
- name: greet
  endpoint:
    path: greet
    method: POST
- name: history
  endpoint:
    path: history
    method: GET
- name: pins
  endpoint:
    path: pins
    method: GET
- name: search
  endpoint:
    path: search
    method: GET
- name: remove_tags
  endpoint:
    path: /remove_tags
    method: POST
    data_selector: tags
- name: join
  endpoint:
    path: /join
    method: POST
    data_selector: ''
- name: leave
  endpoint:
    path: /leave
    method: POST
    data_selector: ''
- name: add_user
  endpoint:
    path: /add_user
    method: POST
    data_selector: user
- name: remove_user
  endpoint:
    path: /remove_user
    method: POST
    data_selector: user
- name: fetch_members
  endpoint:
    path: /fetch_members
    method: GET
    data_selector: ''
- name: delete
  endpoint:
    path: /delete
    method: DELETE
    data_selector: reason
- name: get_partial_message
  endpoint:
    path: /get_partial_message
    method: GET
    data_selector: message_id
- name: ack
  endpoint:
    path: /ack
    method: POST
    data_selector: ''
- name: ack_pins
  endpoint:
    path: /ack_pins
    method: POST
    data_selector: ''
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
    data_selector: ''
- name: fetch_message
  endpoint:
    path: /fetch_message
    method: GET
    data_selector: id
- name: greet
  endpoint:
    path: /greet
    method: POST
    data_selector: sticker
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: ''
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: ''
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: content
- name: group_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
    params: {}
- name: message
  endpoint:
    path: /discord/api/messages
    method: GET
    data_selector: records
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
      cls: VoiceClient
      ring: true
- name: ack
  endpoint:
    path: /ack
    method: POST
    data_selector: ack
    params: {}
- name: ack_pins
  endpoint:
    path: /ack_pins
    method: POST
    data_selector: ack_pins
    params: {}
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
    data_selector: application_commands
    params: {}
- name: fetch_message
  endpoint:
    path: /fetch_message/{id}
    method: GET
    data_selector: message
    params:
      id: message_id
- name: greet
  endpoint:
    path: /greet
    method: POST
    data_selector: sticker_greeting
    params: {}
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: search_results
    params:
      limit: 25
      offset: 0
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: file
    params: {}
- name: fetch_message
  endpoint:
    path: /channels/{channel_id}/messages/{message_id}
    method: GET
    data_selector: message
    params: {}
- name: reaction
  endpoint:
    path: /reaction
    method: GET
    data_selector: reactions
    params: {}
- name: ActionRow
  endpoint:
    path: /discord/components/actionrow
    method: GET
- name: Button
  endpoint:
    path: /discord/components/button
    method: GET
- name: SelectMenu
  endpoint:
    path: /discord/components/selectmenu
    method: GET
- name: TextInput
  endpoint:
    path: /discord/components/textinput
    method: GET
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: /channel/slash_commands
    method: GET
    data_selector: commands
    params: {}
- name: invite
  endpoint:
    path: /invites/{invite_code}
    method: GET
    data_selector: invite
    params: {}
- name: invite
  endpoint:
    path: /invites
    method: GET
    data_selector: invites
    params: {}
- name: event
  endpoint:
    path: /event
    method: POST
- name: guild
  endpoint:
    path: /guild
    method: GET
- name: send_message
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: unacknowledge_messages
  endpoint:
    path: /unack
    method: POST
    data_selector: unacknowledged
    params: {}
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
    data_selector: uploaded_files
    params: {}
- name: fetch_widget
  endpoint:
    path: /fetch_widget
    method: GET
    data_selector: Widget
- name: fetch_user
  endpoint:
    path: /fetch_user
    method: GET
    data_selector: discord.User
- name: fetch_user_profile
  endpoint:
    path: /fetch_user_profile
    method: GET
    data_selector: UserProfile
- name: fetch_channel
  endpoint:
    path: /fetch_channel
    method: GET
    data_selector: Union[abc.GuildChannel, abc.PrivateChannel, Thread]
- name: fetch_webhook
  endpoint:
    path: /fetch_webhook
    method: GET
    data_selector: Webhook
- name: fetch_sticker
  endpoint:
    path: /fetch_sticker
    method: GET
    data_selector: Union[StandardSticker, GuildSticker]
- name: sticker_packs
  endpoint:
    path: /sticker_packs
    method: GET
    data_selector: List[StickerPack]
- name: fetch_notes
  endpoint:
    path: /fetch_notes
    method: GET
    data_selector: Dict[int, str]
- name: fetch_connections
  endpoint:
    path: /fetch_connections
    method: GET
    data_selector: List[Connection]
- name: fetch_private_channels
  endpoint:
    path: /fetch_private_channels
    method: GET
    data_selector: List[abc.PrivateChannel]
- name: fetch_settings
  endpoint:
    path: /fetch_settings
    method: GET
    data_selector: UserSettings
- name: email_settings
  endpoint:
    path: /email_settings
    method: GET
    data_selector: EmailSettings
- name: fetch_tracking_settings
  endpoint:
    path: /fetch_tracking_settings
    method: GET
    data_selector: TrackingSettings
- name: relationships
  endpoint:
    path: /fetch_relationships
    method: GET
    data_selector: relationships
- name: friend_suggestions
  endpoint:
    path: /friend_suggestions
    method: GET
    data_selector: friend_suggestions
- name: country_code
  endpoint:
    path: /fetch_country_code
    method: GET
    data_selector: country_code
- name: location_info
  endpoint:
    path: /fetch_location_info
    method: GET
    data_selector: location_info
- name: preferred_rtc_regions
  endpoint:
    path: /fetch_preferred_rtc_regions
    method: GET
    data_selector: preferred_rtc_regions
- name: applications
  endpoint:
    path: /applications
    method: GET
    data_selector: applications
- name: detectable_applications
  endpoint:
    path: /detectable_applications
    method: GET
    data_selector: detectable_applications
- name: teams
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: ActionRow
  endpoint:
    path: /discord/actionrow
    method: GET
    data_selector: components
    params: {}
- name: Button
  endpoint:
    path: /discord/button
    method: GET
    data_selector: components
    params: {}
- name: SelectMenu
  endpoint:
    path: /discord/selectmenu
    method: GET
    data_selector: components
    params: {}
- name: TextInput
  endpoint:
    path: /discord/textinput
    method: GET
    data_selector: components
    params: {}
- name: invite
  endpoint:
    path: /invites/{invite.code}
    method: GET
    data_selector: invite
    params: {}
- name: application
  endpoint:
    path: /applications
    method: POST
    data_selector: application
- name: team
  endpoint:
    path: /teams
    method: POST
    data_selector: team
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
- name: company
  endpoint:
    path: /companies/{company_id}
    method: GET
    data_selector: company
- name: activity_statistics
  endpoint:
    path: /activity/statistics
    method: GET
    data_selector: statistics
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
- name: payment_source
  endpoint:
    path: /payment_sources/{source_id}
    method: GET
    data_selector: payment_source
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: premium_guild_subscriptions
  endpoint:
    path: /premium/guild/subscriptions
    method: GET
    data_selector: premium_guild_subscriptions
- name: invite
  endpoint:
    path: /invites/{code}
    method: GET
    data_selector: invite
    params: {}
- name: invite
  endpoint:
    path: /invites/{invite.code}
    method: GET
    data_selector: invite
    params: {}
- name: invite
  endpoint:
    path: /invites/{code}
    method: GET
    data_selector: invite
    params: {}
- name: on_message
  endpoint:
    path: /client/event
    method: POST
    data_selector: message
    params: {}
- name: change_presence
  endpoint:
    path: /client/change_presence
    method: POST
    data_selector: presence
    params: {}
- name: fetch_guilds
  endpoint:
    path: /client/fetch_guilds
    method: GET
    data_selector: guilds
    params:
      with_counts: true
- name: fetch_invite
  endpoint:
    path: /client/fetch_invite
    method: GET
    data_selector: invite
    params: {}
- name: promotions
  endpoint:
    path: /promotions
    method: GET
    data_selector: promotions
    params: {}
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: user_offer
    params:
      payment_gateway: null
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: trial_offer
    params: {}
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: pricing_promotion
    params: {}
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: library
    params: {}
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: authorizations
    params: {}
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
    params:
      with_sku: true
      with_application: true
      include_ended: true
      entitlement_type: null
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
    data_selector: giftable_entitlements
    params: {}
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
    data_selector: premium_entitlements
    params:
      include_consumed: true
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
    data_selector: gift
    params:
      with_application: false
      with_subscription_plan: true
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
    data_selector: sku
    params:
      localize: true
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
    data_selector: store_listing
    params:
      localize: true
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
    data_selector: store_listing
    params:
      localize: true
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
    data_selector: store_listings
    params:
      localize: true
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
    params:
      application_id: integer
      localize: boolean
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: subscription_plans
    params:
      sku_id: integer
      country_code: string
      payment_source: PaymentSource
      with_unpublished: boolean
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
    params:
      branch_ids: integer
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier_mapping
    params:
      price_tier: integer
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: mentions
    params:
      limit: integer
      before: Snowflake or datetime
      guild: Guild
      roles: boolean
      everyone: boolean
- name: revoke_invites
  endpoint:
    path: /invites
    method: POST
- name: fetch_widget
  endpoint:
    path: /guilds/{guild_id}/widget
    method: GET
- name: fetch_user
  endpoint:
    path: /users/{user_id}
    method: GET
- name: fetch_user_profile
  endpoint:
    path: /users/{user_id}/profile
    method: GET
- name: fetch_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
- name: fetch_webhook
  endpoint:
    path: /webhooks/{webhook_id}
    method: GET
- name: fetch_sticker
  endpoint:
    path: /stickers/{sticker_id}
    method: GET
- name: sticker_packs
  endpoint:
    path: /sticker-packs
    method: GET
- name: fetch_sticker_pack
  endpoint:
    path: /sticker-packs/{pack_id}
    method: GET
- name: fetch_notes
  endpoint:
    path: /users/@me/notes
    method: GET
- name: fetch_note
  endpoint:
    path: /users/{user_id}/notes
    method: GET
- name: fetch_connections
  endpoint:
    path: /users/@me/connections
    method: GET
- name: authorize_connection
  endpoint:
    path: /connections/authorize
    method: POST
- name: create_connection
  endpoint:
    path: /connections
    method: POST
- name: fetch_private_channels
  endpoint:
    path: /users/@me/channels
    method: GET
- name: fetch_settings
  endpoint:
    path: /users/@me/settings
    method: GET
- name: legacy_settings
  endpoint:
    path: /users/@me/legacy-settings
    method: GET
- name: email_settings
  endpoint:
    path: /users/@me/email-settings
    method: GET
- name: fetch_tracking_settings
  endpoint:
    path: /users/@me/tracking-settings
    method: GET
- name: edit_legacy_settings
  endpoint:
    path: /users/@me/legacy-settings
    method: PATCH
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
    data_selector: waitlist_response
    params: {}
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
    data_selector: hubs
    params: {}
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
    data_selector: joined_hub
    params: {}
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
    data_selector: suggested_username
    params: {}
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
    data_selector: is_taken
    params: {}
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
    data_selector: avatars
    params: {}
- name: application
  endpoint:
    path: /create_application
    method: POST
- name: team
  endpoint:
    path: /create_team
    method: POST
- name: companies
  endpoint:
    path: /search_companies
    method: POST
- name: company
  endpoint:
    path: /fetch_company
    method: GET
- name: activity_statistics
  endpoint:
    path: /activity_statistics
    method: GET
- name: global_activity_statistics
  endpoint:
    path: /global_activity_statistics
    method: GET
- name: payment_sources
  endpoint:
    path: /payment_sources
    method: GET
- name: payment_source
  endpoint:
    path: /fetch_payment_source
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: premium_guild_subscriptions
  endpoint:
    path: /premium_guild_subscriptions
    method: GET
- name: premium_guild_subscription_slots
  endpoint:
    path: /premium_guild_subscription_slots
    method: GET
- name: premium_guild_subscription_cooldown
  endpoint:
    path: /premium_guild_subscription_cooldown
    method: GET
- name: subscription
  endpoint:
    path: /fetch_subscription
    method: GET
- name: payments
  endpoint:
    path: /payments
    method: GET
- name: payment
  endpoint:
    path: /fetch_payment
    method: GET
- name: promotions
  endpoint:
    path: /promotions
    method: GET
- name: automod_rule_create
  endpoint:
    path: /automod/rule/create
    method: POST
- name: automod_rule_update
  endpoint:
    path: /automod/rule/update
    method: POST
- name: automod_rule_delete
  endpoint:
    path: /automod/rule/delete
    method: POST
- name: automod_action
  endpoint:
    path: /automod/action
    method: POST
- name: guild_channel_create
  endpoint:
    path: /guild/channel/create
    method: POST
- name: guild_channel_delete
  endpoint:
    path: /guild/channel/delete
    method: POST
- name: guild_channel_update
  endpoint:
    path: /guild/channel/update
    method: POST
- name: private_channel_create
  endpoint:
    path: /private/channel/create
    method: POST
- name: private_channel_delete
  endpoint:
    path: /private/channel/delete
    method: POST
- name: private_channel_update
  endpoint:
    path: /private/channel/update
    method: POST
- name: user_offer
  endpoint:
    method: GET
- name: trial_offer
  endpoint:
    method: GET
- name: pricing_promotion
  endpoint:
    method: GET
- name: library
  endpoint:
    method: GET
- name: authorizations
  endpoint:
    method: GET
- name: fetch_authorization
  endpoint:
    method: GET
- name: create_authorization
  endpoint:
    method: POST
- name: entitlements
  endpoint:
    method: GET
- name: giftable_entitlements
  endpoint:
    method: GET
- name: premium_entitlements
  endpoint:
    method: GET
- name: fetch_entitlements
  endpoint:
    method: GET
- name: fetch_gift
  endpoint:
    method: GET
- name: fetch_sku
  endpoint:
    method: GET
- name: fetch_store_listing
  endpoint:
    method: GET
- name: fetch_published_store_listing
  endpoint:
    method: GET
- name: fetch_published_store_listings
  endpoint:
    method: GET
- name: primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
    params:
      application_id: int
      localize: bool
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
    params: {}
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
    params: {}
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: eula
    params:
      eula_id: int
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: mentions
    params:
      limit: int
      before: datetime
      guild: Guild
      roles: bool
      everyone: bool
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
    data_selector: response
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
    data_selector: hubs
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
    data_selector: hub
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
    data_selector: username
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
    data_selector: is_taken
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
    data_selector: avatars
- name: invite_create
  endpoint:
    path: /invite/create
    method: POST
    data_selector: invite
- name: invite_delete
  endpoint:
    path: /invite/delete
    method: DELETE
    data_selector: invite
- name: guild_feature_ack
  endpoint:
    path: /guild/feature/ack
    method: POST
    data_selector: payload
- name: integration_create
  endpoint:
    path: /integration/create
    method: POST
    data_selector: integration
- name: integration_update
  endpoint:
    path: /integration/update
    method: PATCH
    data_selector: integration
- name: guild_integrations_update
  endpoint:
    path: /guild/integrations/update
    method: POST
    data_selector: guild
- name: webhooks_update
  endpoint:
    path: /webhooks/update
    method: POST
    data_selector: channel
- name: raw_integration_delete
  endpoint:
    path: /integration/raw/delete
    method: DELETE
    data_selector: payload
- name: interaction
  endpoint:
    path: /interaction
    method: POST
    data_selector: interaction
- name: interaction_finish
  endpoint:
    path: /interaction/finish
    method: POST
    data_selector: interaction
- name: modal
  endpoint:
    path: /modal
    method: POST
    data_selector: modal
- name: member_join
  endpoint:
    path: /member/join
    method: POST
    data_selector: member
- name: member_remove
  endpoint:
    path: /member/remove
    method: DELETE
    data_selector: member
- name: raw_member_remove
  endpoint:
    path: /member/raw/remove
    method: DELETE
    data_selector: payload
- name: member_update
  endpoint:
    path: /member/update
    method: PATCH
    data_selector:
      before: before
      after: after
- name: user_update
  endpoint:
    path: /user/update
    method: PATCH
    data_selector:
      before: before
      after: after
- name: member_ban
  endpoint:
    path: /member/ban
    method: POST
    data_selector:
      guild: guild
      user: user
- name: member_unban
  endpoint:
    path: /member/unban
    method: POST
    data_selector:
      guild: guild
      user: user
- name: presence_update
  endpoint:
    path: /presence/update
    method: PATCH
    data_selector:
      before: before
      after: after
- name: raw_member_list_update
  endpoint:
    path: /member/raw/list/update
    method: PATCH
    data_selector: data
- name: message
  endpoint:
    path: /message
    method: POST
    data_selector: message
- name: message_edit
  endpoint:
    path: /message/edit
    method: PATCH
    data_selector:
      before: before
      after: after
- name: message_delete
  endpoint:
    path: /message/delete
    method: DELETE
    data_selector: message
- name: bulk_message_delete
  endpoint:
    path: /message/bulk/delete
    method: DELETE
    data_selector: messages
- name: message_ack
  endpoint:
    path: /message/ack
    method: POST
    data_selector:
      message: message
      manual: manual
- name: raw_message_edit
  endpoint:
    path: /message/raw/edit
    method: PATCH
    data_selector: payload
- name: raw_message_delete
  endpoint:
    path: /message/raw/delete
    method: DELETE
    data_selector: payload
- name: raw_bulk_message_delete
  endpoint:
    path: /message/raw/bulk/delete
    method: DELETE
    data_selector: payload
- name: raw_message_ack
  endpoint:
    path: /message/raw/ack
    method: POST
    data_selector: payload
- name: recent_mention_delete
  endpoint:
    path: /recent/mention/delete
    method: DELETE
    data_selector: message
- name: raw_recent_mention_delete
  endpoint:
    path: /recent/mention/raw/delete
    method: DELETE
    data_selector: message_id
- name: AudioSource
  endpoint:
    path: /discord/AudioSource
    method: GET
    data_selector: audio_stream
    params: {}
- name: PCMAudio
  endpoint:
    path: /discord/PCMAudio
    method: GET
    data_selector: pcm_audio
    params: {}
- name: FFmpegAudio
  endpoint:
    path: /discord/FFmpegAudio
    method: GET
    data_selector: ffmpeg_audio
    params: {}
- name: FFmpegPCMAudio
  endpoint:
    path: /discord/FFmpegPCMAudio
    method: GET
    data_selector: ffmpeg_pcm_audio
    params: {}
- name: FFmpegOpusAudio
  endpoint:
    path: /discord/FFmpegOpusAudio
    method: GET
    data_selector: ffmpeg_opus_audio
    params: {}
- name: audit_log_diff
  endpoint:
    path: /audit-log-diff
    method: GET
    data_selector: attributes
- name: scheduled_event_create
  endpoint:
    path: /scheduled-events/create
    method: POST
    data_selector: attributes
- name: scheduled_event_update
  endpoint:
    path: /scheduled-events/update
    method: PATCH
    data_selector: attributes
- name: audit_log_diff
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log_diff
    params: {}
- name: audit_log_diff
  endpoint:
    path: /guilds/{guild.id}/audit-logs
    method: GET
    data_selector: audit_log_changes
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhooks
    params: {}
- name: SyncWebhook
  endpoint:
    path: /webhook
    method: POST
- name: AutoModRuleTriggerType
  endpoint:
    path: /discord/automod/rule/trigger-type
    method: GET
    data_selector: rules
- name: AutoModRuleEventType
  endpoint:
    path: /discord/automod/rule/event-type
    method: GET
    data_selector: events
- name: AutoModRuleActionType
  endpoint:
    path: /discord/automod/rule/action-type
    method: GET
    data_selector: actions
- name: ForumLayoutType
  endpoint:
    path: /discord/forum/layout-type
    method: GET
    data_selector: layouts
- name: ForumOrderType
  endpoint:
    path: /discord/forum/order-type
    method: GET
    data_selector: orders
- name: ReadStateType
  endpoint:
    path: /discord/read/state-type
    method: GET
    data_selector: readStates
- name: DirectoryEntryType
  endpoint:
    path: /discord/directory/entry-type
    method: GET
    data_selector: directoryEntries
- name: DirectoryCategory
  endpoint:
    path: /discord/directory/category
    method: GET
    data_selector: categories
- name: HubType
  endpoint:
    path: /discord/hub/type
    method: GET
    data_selector: hubs
- name: PollLayoutType
  endpoint:
    path: /discord/poll/layout-type
    method: GET
    data_selector: pollLayouts
- name: ReactionType
  endpoint:
    path: /discord/reaction/type
    method: GET
    data_selector: reactions
- name: PurchaseNotificationType
  endpoint:
    path: /discord/purchase/notification/type
    method: GET
    data_selector: purchaseNotifications
- name: MessageReferenceType
  endpoint:
    path: /discord/message/reference/type
    method: GET
    data_selector: messageReferences
- name: PromotionType
  endpoint:
    path: /discord/promotion/type
    method: GET
    data_selector: promotions
- name: AuditLogEntry
  endpoint:
    path: /discord/audit/log/entry
    method: GET
    data_selector: auditEntries
- name: AuditLogChanges
  endpoint:
    path: /discord/audit/log/changes
    method: GET
    data_selector: auditChanges
- name: AuditLogDiff
  endpoint:
    path: /discord/audit/log/diff
    method: GET
    data_selector: auditDiffs
- name: audit_log_diff
  endpoint:
    path: /audit-log-diff
    method: GET
    data_selector: changes
    params: {}
- name: SyncWebhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
- name: SyncWebhookMessage
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}/messages
    method: POST
    data_selector: message
- name: GuildChannel
  endpoint:
    path: /channels
    method: GET
- name: ApplicationCommand
  endpoint:
    path: /applications/{application_id}/commands
    method: GET
- name: ClientUser
  endpoint:
    path: /users/@me
    method: GET
- name: edit_message
  endpoint:
    path: /edit_message
    method: POST
- name: delete_message
  endpoint:
    path: /delete_message
    method: DELETE
- name: user
  endpoint:
    path: /user
    method: GET
- name: guild_channel
  endpoint:
    path: /guilds/{guild.id}/channels
    method: GET
    data_selector: channels
- name: user
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
    params: {}
- name: message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: friend_request
  endpoint:
    path: /users/{user_id}/friend-requests
    method: POST
    data_selector: friend_request
    params: {}
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: uploaded_files
    params: {}
- name: fetch_message
  endpoint:
    path: /fetch_message/{id}
    method: GET
    data_selector: Message
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
    data_selector: mutual_friends
- name: fetch_note
  endpoint:
    path: /fetch_note
    method: GET
    data_selector: note
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pinned_messages
- name: profile
  endpoint:
    path: /profile
    method: GET
    data_selector: UserProfile
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: search_results
    params:
      limit: 25
      offset: 0
- name: PrimaryGuild
  endpoint:
    path: /discord/PrimaryGuild
    method: GET
    data_selector: attributes
- name: DisplayNameStyle
  endpoint:
    path: /discord/DisplayNameStyle
    method: GET
    data_selector: attributes
- name: UserAffinity
  endpoint:
    path: /discord/UserAffinity
    method: GET
    data_selector: attributes
- name: GuildAffinity
  endpoint:
    path: /discord/GuildAffinity
    method: GET
    data_selector: attributes
- name: ChannelAffinity
  endpoint:
    path: /discord/ChannelAffinity
    method: GET
    data_selector: attributes
- name: BillingAddress
  endpoint:
    path: /discord/BillingAddress
    method: GET
    data_selector: attributes
- name: PaymentSource
  endpoint:
    path: /discord/PaymentSource
    method: GET
    data_selector: attributes
- name: PremiumUsage
  endpoint:
    path: /discord/PremiumUsage
    method: GET
    data_selector: attributes
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: '200'
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: '25'
- name: Connection
  endpoint:
    path: /discord/connections
    method: GET
- name: FriendSuggestion
  endpoint:
    path: /discord/friend_suggestions
    method: GET
- name: message
  endpoint:
    path: /discord/message
    method: POST
- name: user_settings
  endpoint:
    path: /user/settings
    method: GET
    data_selector: settings
- name: legacy_user_settings
  endpoint:
    path: /api/v2/user/settings
    method: GET
    data_selector: settings
    params: {}
- name: guild_settings
  endpoint:
    path: /api/v2/guilds/{guild_id}/settings
    method: GET
    data_selector: settings
    params: {}
- name: channel_settings
  endpoint:
    path: /api/v2/channels/{channel_id}/settings
    method: GET
    data_selector: settings
    params: {}
- name: Connection
  endpoint:
    path: /discord/Connection
    method: GET
- name: PartialConnection
  endpoint:
    path: /discord/PartialConnection
    method: GET
- name: Relationship
  endpoint:
    path: /discord/Relationship
    method: GET
- name: FriendSuggestion
  endpoint:
    path: /discord/FriendSuggestion
    method: GET
- name: user_settings
  endpoint:
    path: /users/@me/settings
    method: GET
    data_selector: settings
- name: activity_statistics
  endpoint:
    path: /applications/{application.id}/activity_statistics
    method: GET
- name: assets
  endpoint:
    path: /applications/{application.id}/assets
    method: GET
- name: branches
  endpoint:
    path: /applications/{application.id}/branches
    method: GET
- name: create_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: POST
- name: edit
  endpoint:
    path: /applications/{application.id}
    method: PATCH
- name: current_game
  endpoint:
    path: /user/settings/current_game
    method: GET
    data_selector: settings
- name: stream_notifications
  endpoint:
    path: /user/settings/stream_notifications
    method: GET
    data_selector: settings
- name: timezone_offset
  endpoint:
    path: /user/settings/timezone_offset
    method: GET
    data_selector: settings
- name: nsfw_commands
  endpoint:
    path: /user/settings/view_nsfw_commands
    method: GET
    data_selector: settings
- name: nsfw_guilds
  endpoint:
    path: /user/settings/view_nsfw_guilds
    method: GET
    data_selector: settings
- name: activity_statistics
  endpoint:
    path: /applications/{application.id}/activity-statistics
    method: GET
    data_selector: statistics
- name: create_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: POST
    data_selector: bot
- name: uploads
  endpoint:
    path: /uploads
    method: POST
    data_selector: created_asset
- name: skus
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    data_selector: primary_sku
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
    data_selector: store_listing_sku
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: fetch_entitlement
  endpoint:
    path: /fetch_entitlement/{entitlement_id}
    method: GET
    data_selector: entitlement
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
- name: create_gift_batch
  endpoint:
    path: /create_gift_batch
    method: POST
    data_selector: gift_batch
- name: branches
  endpoint:
    path: /branches
    method: GET
    data_selector: branches
- name: create_branch
  endpoint:
    path: /create_branch
    method: POST
    data_selector: branch
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
    data_selector: manifest_labels
- name: fetch_discoverability
  endpoint:
    path: /fetch_discoverability
    method: GET
    data_selector: discoverability
- name: fetch_embedded_activity_config
  endpoint:
    path: /fetch_embedded_activity_config
    method: GET
    data_selector: embedded_activity_config
- name: edit_embedded_activity_config
  endpoint:
    path: /edit_embedded_activity_config
    method: POST
    data_selector: edited_config
- name: store_asset
  endpoint:
    path: /uploads/store_asset
    method: POST
    data_selector: created asset
- name: skus
  endpoint:
    path: /skus
    method: GET
    data_selector: SKUs retrieved
    params:
      with_bundled_skus: true
      localize: true
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    data_selector: primary SKU retrieved
    params:
      localize: true
- name: create_sku
  endpoint:
    path: /create_sku
    method: POST
    data_selector: SKU created
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements retrieved
    params:
      limit: 100
- name: fetch_entitlement
  endpoint:
    path: /fetch_entitlement
    method: GET
    data_selector: entitlement retrieved
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift batches retrieved
- name: create_gift_batch
  endpoint:
    path: /create_gift_batch
    method: POST
    data_selector: gift batch created
- name: branches
  endpoint:
    path: /branches
    method: GET
    data_selector: branches retrieved
- name: create_branch
  endpoint:
    path: /create_branch
    method: POST
    data_selector: branch created
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
    data_selector: manifest labels retrieved
- name: fetch_discoverability
  endpoint:
    path: /fetch_discoverability
    method: GET
    data_selector: discoverability retrieved
- name: application_profile
  endpoint:
    path: /applications/@me
    method: GET
    data_selector: data
    params: {}
- name: application_store_listings
  endpoint:
    path: /applications/@me/store-listings
    method: GET
    data_selector: data
    params: {}
- name: application_profile
  endpoint:
    path: /applications/@me
    method: GET
    data_selector: data
- name: application_bot
  endpoint:
    path: /applications/@me/bot
    method: GET
    data_selector: data
- name: application_build
  endpoint:
    path: /applications/{application_id}/builds
    method: GET
    data_selector: builds
- name: application_branch
  endpoint:
    path: /applications/{application_id}/branches
    method: GET
    data_selector: branches
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: ApplicationBranch
  endpoint:
    path: /application/branch
    method: GET
- name: ApplicationBuild
  endpoint:
    path: /application/build
    method: GET
- name: ManifestLabel
  endpoint:
    path: /manifest/label
    method: GET
- name: Manifest
  endpoint:
    path: /manifest
    method: GET
- name: Team
  endpoint:
    path: /team
    method: GET
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: team_members
  endpoint:
    path: /teams/{team_id}/members
    method: GET
    data_selector: members
- name: payouts
  endpoint:
    path: /payouts
    method: GET
    data_selector: payouts
    params:
      limit: '96'
- name: applications
  endpoint:
    path: /applications
    method: GET
    data_selector: applications
    params: {}
- name: fetch_members
  endpoint:
    path: /members
    method: GET
    data_selector: members
    params: {}
- name: invite_member
  endpoint:
    path: /invite_member
    method: POST
    data_selector: member
    params: {}
- name: create_company
  endpoint:
    path: /create_company
    method: POST
    data_selector: company
    params: {}
- name: leave
  endpoint:
    path: /leave
    method: POST
    data_selector: status
    params: {}
- name: delete
  endpoint:
    path: /delete
    method: DELETE
    data_selector: status
    params: {}
- name: dm_channel
  endpoint:
    path: /users/@me/dm_channels
    method: POST
    data_selector: channel
- name: message
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
- name: voice_client
  endpoint:
    path: /connect
    method: POST
    data_selector: voice_client_data
- name: dm_channel
  endpoint:
    path: /create_dm
    method: POST
    data_selector: dm_channel_data
- name: message
  endpoint:
    path: /fetch_message
    method: GET
    data_selector: message_data
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: team_payout
  endpoint:
    path: /team_payout
    method: GET
    data_selector: payouts
    params: {}
- name: company
  endpoint:
    path: /company
    method: GET
    data_selector: companies
    params: {}
- name: eula
  endpoint:
    path: /eula
    method: GET
    data_selector: eulas
    params: {}
- name: entitlement
  endpoint:
    path: /entitlement
    method: GET
    data_selector: entitlements
    params: {}
- name: gift
  endpoint:
    path: /discord/gift
    method: GET
    data_selector: gift
- name: gift_batch
  endpoint:
    path: /discord/gift_batch
    method: GET
    data_selector: gift_batch
- name: library_application
  endpoint:
    path: /discord/library_application
    method: GET
    data_selector: library_application
- name: gift
  endpoint:
    path: /discord/gift
    method: GET
    data_selector: records
- name: gift_batch
  endpoint:
    path: /discord/gift_batch
    method: GET
    data_selector: records
- name: library_application
  endpoint:
    path: /discord/library_application
    method: GET
    data_selector: records
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: records
- name: PremiumGuildSubscription
  endpoint:
    path: /premium_guild_subscription
    method: GET
- name: PremiumGuildSubscriptionCooldown
  endpoint:
    path: /premium_guild_subscription/cooldown
    method: GET
- name: SubscriptionPlan
  endpoint:
    path: /subscription_plan
    method: GET
- name: subscription
  endpoint:
    path: /discord/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: SubscriptionPlanPrices
  endpoint:
    path: /v2/subscription_plan_prices
    method: GET
    data_selector: country_prices
- name: Payment
  endpoint:
    path: /v2/payments
    method: GET
    data_selector: payments
- name: SKU
  endpoint:
    path: /v2/skus
    method: GET
    data_selector: skus
- name: sku
  endpoint:
    path: /discord/SKU
    method: GET
    data_selector: records
- name: subscription_trial
  endpoint:
    path: /discord/SubscriptionTrial
    method: GET
- name: premium_guild_subscription
  endpoint:
    path: /discord/PremiumGuildSubscription
    method: GET
- name: premium_guild_subscription_slot
  endpoint:
    path: /discord/PremiumGuildSubscriptionSlot
    method: GET
- name: premium_guild_subscription_cooldown
  endpoint:
    path: /discord/PremiumGuildSubscriptionCooldown
    method: GET
- name: subscription_plan
  endpoint:
    path: /discord/SubscriptionPlan
    method: GET
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: store_listings
    params: {}
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
- name: sku
  endpoint:
    path: /discord/SKU
    method: GET
    data_selector: sku
    params: {}
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: records
- name: sku_price
  endpoint:
    path: /sku/price
    method: GET
    data_selector: records
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: listings
- name: guild
  endpoint:
    path: /guilds/{guild_id}
    method: GET
    data_selector: guild
    params: {}
- name: Metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: data
- name: ReadState
  endpoint:
    path: /readstate
    method: GET
    data_selector: data
- name: Asset
  endpoint:
    path: /asset
    method: GET
    data_selector: data
- name: create_directory_channel
  endpoint:
    path: /create_directory_channel
    method: POST
- name: create_forum
  endpoint:
    path: /create_forum
    method: POST
- name: leave
  endpoint:
    path: /leave
    method: POST
- name: delete
  endpoint:
    path: /delete
    method: DELETE
- name: edit
  endpoint:
    path: /edit
    method: PATCH
- name: guild
  endpoint:
    path: /guilds/{guild.id}
    method: GET
    data_selector: data
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: guild
  endpoint:
    path: /guilds/{guild.id}
    method: GET
    data_selector: guild
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: automod_rules
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: fetch_automod_rule
  endpoint:
    path: /automod/rules/{automod_rule_id}
    method: GET
    data_selector: rule
- name: create_automod_rule
  endpoint:
    path: /automod/rules
    method: POST
    data_selector: rule
- name: admin_community_eligibility
  endpoint:
    path: /admin/community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /admin/community/join
    method: POST
    data_selector: community
- name: migrate_command_scope
  endpoint:
    path: /commands/migrate
    method: POST
    data_selector: integration_ids
- name: directory_broadcast_eligibility
  endpoint:
    path: /directory/broadcast/eligibility
    method: GET
    data_selector: eligibility
- name: ban_entry
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: bans
    params: {}
- name: bulk_ban_result
  endpoint:
    path: /guilds/{guild_id}/bans/bulk
    method: POST
    data_selector: banned
    params: {}
- name: create_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: POST
    data_selector: sticker
- name: delete_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers/{sticker_id}
    method: DELETE
    data_selector: sticker
- name: subscribed_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events/subscribed
    method: GET
    data_selector: events
- name: fetch_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: GET
    data_selector: events
- name: create_scheduled_event
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: POST
    data_selector: event
- name: top_emojis
  endpoint:
    path: /guilds/{guild_id}/emojis/top
    method: GET
    data_selector: emojis
- name: fetch_emojis
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: GET
    data_selector: emojis
- name: fetch_roles
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
- name: create_role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: POST
    data_selector: role
- name: auto_mod_rule
  endpoint:
    path: /auto_mod_rule
    method: GET
- name: AutoModRule
  endpoint:
    path: /auto-moderation/rules
    method: POST
    data_selector: rules
- name: member
  endpoint:
    path: /guilds/{guild.id}/members/{user.id}
    method: GET
    data_selector: member
- name: welcome_screen
  endpoint:
    path: /guilds/{guild_id}/welcome-screen
    method: PATCH
    data_selector: welcome_screen
    params: {}
- name: applications
  endpoint:
    path: /guilds/{guild_id}/applications
    method: GET
    data_selector: applications
    params: {}
- name: premium_subscriptions
  endpoint:
    path: /guilds/{guild_id}/premium-subscriptions
    method: GET
    data_selector: premium_subscriptions
    params: {}
- name: price_tiers
  endpoint:
    path: /guilds/{guild_id}/price-tiers
    method: GET
    data_selector: price_tiers
    params: {}
- name: members
  endpoint:
    path: /guilds/{guild_id}/members
    method: GET
    data_selector: members
    params: {}
- name: mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
    data_selector: mutual_friends
- name: user_note
  endpoint:
    path: /fetch_note
    method: GET
    data_selector: user_note
- name: delete_user_note
  endpoint:
    path: /delete_note
    method: DELETE
    data_selector: delete_note
- name: automod_rules
  endpoint:
    path: /guilds/{guild_id}/automod/rules
    method: GET
    data_selector: automod_rules
- name: fetch_automod_rule
  endpoint:
    path: /guilds/{guild_id}/automod/rules/{automod_rule_id}
    method: GET
    data_selector: automod_rule
- name: create_automod_rule
  endpoint:
    path: /guilds/{guild_id}/automod/rules
    method: POST
    data_selector: automod_rule
- name: admin_community_eligibility
  endpoint:
    path: /guilds/{guild_id}/admin_community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /guilds/{guild_id}/admin_community/join
    method: POST
    data_selector: community_guild
- name: member_profile
  endpoint:
    path: /member/profile
    method: GET
    data_selector: profile
    params: {}
- name: member_profile
  endpoint:
    path: /member/profile
    method: GET
    data_selector: profile
    params: {}
- name: send
  endpoint:
    path: /send
    method: POST
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
- name: auto_mod_rule
  endpoint:
    path: /discord/auto_mod_rule
    method: GET
- name: member
  endpoint:
    path: /guilds/{guild_id}/members/{user_id}
    method: GET
    data_selector: member
    params: {}
- name: partial_emoji
  endpoint:
    path: /partial_emoji
    method: GET
    data_selector: records
- name: sticker
  endpoint:
    path: /sticker
    method: GET
    data_selector: records
- name: sticker_item
  endpoint:
    path: /sticker_item
    method: GET
    data_selector: records
- name: sticker_pack
  endpoint:
    path: /sticker_pack
    method: GET
    data_selector: records
- name: standard_sticker
  endpoint:
    path: /standard_sticker
    method: GET
    data_selector: records
- name: forums
  endpoint:
    path: /forums
    method: GET
- name: directory_channels
  endpoint:
    path: /directory_channels
    method: GET
- name: directories
  endpoint:
    path: /directories
    method: GET
- name: text_channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: channel
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
    data_selector: mutual_friends
- name: fetch_note
  endpoint:
    path: /fetch_note
    method: GET
    data_selector: note
- name: delete_note
  endpoint:
    path: /delete_note
    method: DELETE
    data_selector: delete_note
- name: connect
  endpoint:
    path: /connect
    method: POST
    data_selector: connect
- name: ban
  endpoint:
    path: /ban
    method: POST
    data_selector: ban
- name: unban
  endpoint:
    path: /unban
    method: POST
    data_selector: unban
- name: kick
  endpoint:
    path: /kick
    method: POST
    data_selector: kick
- name: edit
  endpoint:
    path: /edit
    method: PATCH
    data_selector: edit
- name: member_profile
  endpoint:
    path: /discord/member/profile
    method: GET
    data_selector: profile
    params: {}
- name: notification_settings
  endpoint:
    path: /channels/{channel_id}/notification_settings
    method: GET
    data_selector: notification_settings
- name: overwrites
  endpoint:
    path: /channels/{channel_id}/overwrites
    method: GET
    data_selector: overwrites
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pins
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
- name: send
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /channels/{channel_id}/permissions/{overwrite_id}
    method: PUT
    data_selector: permissions
- name: voice_client
  endpoint:
    path: /voice/connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 30.0
      reconnect: true
      self_deaf: false
      self_mute: false
- name: dm_channel
  endpoint:
    path: /dm/create
    method: POST
    data_selector: dm_channel
    params: {}
- name: fetch_mutual_friends
  endpoint:
    path: /user/mutual_friends
    method: GET
    data_selector: mutual_friends
    params: {}
- name: member_profile
  endpoint:
    path: /member/profile
    method: GET
    data_selector: records
- name: channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: channel
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
    data_selector: files
    params:
      max_files: 10
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params:
      limit: 25
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: message
    params: {}
- name: partial_message
  endpoint:
    path: /messages/{message_id}/partial
    method: GET
    data_selector: partial_message
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: '100'
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: purge
  endpoint:
    path: /channels/{channel_id}/messages
    method: DELETE
    data_selector: deleted_messages
    params:
      limit: '100'
- name: PartialEmoji
  endpoint:
    path: /api/vX/stickers/partial
    method: GET
    data_selector: assets
- name: Sticker
  endpoint:
    path: /api/vX/stickers
    method: GET
    data_selector: stickers
- name: StickerItem
  endpoint:
    path: /api/vX/sticker_items
    method: GET
    data_selector: sticker_items
- name: StickerPack
  endpoint:
    path: /api/vX/sticker_packs
    method: GET
    data_selector: sticker_packs
- name: StandardSticker
  endpoint:
    path: /api/vX/standard_stickers
    method: GET
    data_selector: standard_stickers
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      most_relevant: false
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /channels/{channel_id}/permissions/{overwrite_id}
    method: PUT
    data_selector: permissions
    params: {}
- name: GuildSticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
    data_selector: stickers
- name: CategoryChannel
  endpoint:
    path: /channels/{channel_id}/categories
    method: GET
    data_selector: categories
- name: voice_states
  endpoint:
    path: /voice_states
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: stage_instance
  endpoint:
    path: /stage_instance
    method: GET
- name: forums
  endpoint:
    path: /forums
    method: GET
- name: directory_channels
  endpoint:
    path: /directory_channels
    method: GET
- name: directories
  endpoint:
    path: /directories
    method: GET
- name: text_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: read_state
  endpoint:
    path: /stage_channel/read_state
    method: GET
    data_selector: read_state
- name: scheduled_events
  endpoint:
    path: /stage_channel/scheduled_events
    method: GET
    data_selector: scheduled_events
- name: search_messages
  endpoint:
    path: /stage_channel/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send_message
  endpoint:
    path: /stage_channel/send
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /stage_channel/set_permissions
    method: POST
    data_selector: permissions
- name: history
  endpoint:
    params:
      limit: '100'
- name: invites
  endpoint: {}
- name: create_invite
  endpoint:
    params:
      max_age: '0'
      max_uses: '0'
      temporary: 'False'
      unique: 'True'
- name: fetch_entries
  endpoint:
    path: /fetch_entries
    method: GET
    data_selector: entries
- name: search_entries
  endpoint:
    path: /search_entries
    method: GET
    data_selector: entries
- name: create_entry
  endpoint:
    path: /create_entry
    method: POST
    data_selector: entry
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
    data_selector: invite
- name: voice_channel
  endpoint:
    path: /voice_channel
    method: GET
    data_selector: channel_data
- name: forum_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: create_channel
  endpoint:
    path: /channels
    method: POST
    params: {}
- name: edit_channel
  endpoint:
    path: /channels/{channel_id}
    method: PATCH
    params: {}
- name: delete_channel
  endpoint:
    path: /channels/{channel_id}
    method: DELETE
    params: {}
- name: permissions_synced
  endpoint:
    path: /permissions/synced
    method: GET
- name: set_permissions
  endpoint:
    path: /permissions/set
    method: POST
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: message
    params: {}
- name: partial_message
  endpoint:
    path: /messages/{message_id}/partial
    method: GET
    data_selector: partial_message
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
    params: {}
- name: voice_states
  endpoint:
    path: /voice_states
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: requested_at
  endpoint:
    path: /discord/DMChannel/requested_at
    method: GET
- name: is_message_request
  endpoint:
    path: /discord/DMChannel/is_message_request
    method: GET
- name: is_accepted
  endpoint:
    path: /discord/DMChannel/is_accepted
    method: GET
- name: is_spam
  endpoint:
    path: /discord/DMChannel/is_spam
    method: GET
- name: permissions_for
  endpoint:
    path: /discord/DMChannel/permissions_for
    method: GET
- name: add_recipients
  endpoint:
    path: /discord/DMChannel/add_recipients
    method: POST
- name: close
  endpoint:
    path: /discord/DMChannel/close
    method: POST
- name: connect
  endpoint:
    path: /discord/DMChannel/connect
    method: POST
- name: accept
  endpoint:
    path: /discord/DMChannel/accept
    method: POST
- name: decline
  endpoint:
    path: /discord/DMChannel/decline
    method: POST
- name: ack
  endpoint:
    path: /discord/DMChannel/ack
    method: POST
- name: ack_pins
  endpoint:
    path: /discord/DMChannel/ack_pins
    method: POST
- name: application_commands
  endpoint:
    path: /discord/DMChannel/application_commands
    method: GET
- name: fetch_message
  endpoint:
    path: /discord/DMChannel/fetch_message
    method: GET
- name: greet
  endpoint:
    path: /discord/DMChannel/greet
    method: POST
- name: history
  endpoint:
    path: /discord/DMChannel/history
    method: GET
- name: pins
  endpoint:
    path: /discord/DMChannel/pins
    method: GET
- name: search
  endpoint:
    path: /discord/DMChannel/search
    method: GET
- name: message
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
- name: read_state
  endpoint:
    path: /discord/StageChannel/read_state
    method: GET
    data_selector: read_state
- name: scheduled_events
  endpoint:
    path: /discord/StageChannel/scheduled_events
    method: GET
    data_selector: scheduled_events
- name: search
  endpoint:
    path: /discord/StageChannel/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /discord/StageChannel/send
    method: POST
    data_selector: sent_message
- name: set_permissions
  endpoint:
    path: /discord/StageChannel/set_permissions
    method: POST
    data_selector: permissions_set
- name: slash_commands
  endpoint:
    path: /discord/StageChannel/slash_commands
    method: GET
    data_selector: commands
- name: directory_channel
  endpoint:
    path: /directory/channels
    method: GET
    data_selector: channels
- name: create_invite
  endpoint:
    path: /channels/{channel_id}/invites
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /channels/{channel_id}/connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
- name: ack
  endpoint:
    path: /channels/{channel_id}/ack
    method: POST
    data_selector: acknowledgment
    params: {}
- name: ack_pins
  endpoint:
    path: /channels/{channel_id}/ack_pins
    method: POST
    data_selector: acknowledgment
    params: {}
- name: application_commands
  endpoint:
    path: /channels/{channel_id}/application_commands
    method: GET
    data_selector: commands
    params: {}
- name: fetch_message
  endpoint:
    path: /channels/{channel_id}/messages/{id}
    method: GET
    data_selector: message
    params: {}
- name: greet
  endpoint:
    path: /channels/{channel_id}/greet
    method: POST
    data_selector: sticker_greeting
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: search_results
    params:
      limit: 25
- name: fetch_entries
  endpoint:
    path: /v1/fetch_entries
    method: GET
    data_selector: entries
- name: search_entries
  endpoint:
    path: /v1/search_entries
    method: GET
    data_selector: entries
- name: create_entry
  endpoint:
    path: /v1/create_entry
    method: POST
    data_selector: entry
- name: create_invite
  endpoint:
    path: /v1/create_invite
    method: POST
    data_selector: invite
- name: delete_channel
  endpoint:
    path: /v1/delete_channel
    method: DELETE
    data_selector: response
- name: forum_channel
  endpoint:
    path: /discord/forum_channel
    method: GET
    data_selector: forum_channels
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: /slash/commands
    method: GET
    data_selector: commands
    params: {}
- name: permissions_synced
  endpoint:
    path: /permissions_synced
    method: GET
    data_selector: permissions_synced
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: set_permissions
- name: DMChannel
  endpoint:
    path: /DMChannel
    method: GET
    data_selector: DMChannel
- name: requested_at
  endpoint:
    path: /discord/DMChannel/requested_at
    method: GET
    data_selector: datetime.datetime
- name: is_message_request
  endpoint:
    path: /discord/DMChannel/is_message_request
    method: GET
    data_selector: bool
- name: is_accepted
  endpoint:
    path: /discord/DMChannel/is_accepted
    method: GET
    data_selector: bool
- name: is_spam
  endpoint:
    path: /discord/DMChannel/is_spam
    method: GET
    data_selector: bool
- name: permissions_for
  endpoint:
    path: /discord/DMChannel/permissions_for
    method: GET
    data_selector: Permissions
- name: add_recipients
  endpoint:
    path: /discord/DMChannel/add_recipients
    method: POST
    data_selector: GroupChannel
- name: close
  endpoint:
    path: /discord/DMChannel/close
    method: DELETE
    data_selector: HTTPException
- name: connect
  endpoint:
    path: /discord/DMChannel/connect
    method: POST
    data_selector: VoiceClient
- name: accept
  endpoint:
    path: /discord/DMChannel/accept
    method: POST
    data_selector: HTTPException
- name: decline
  endpoint:
    path: /discord/DMChannel/decline
    method: DELETE
    data_selector: HTTPException
- name: ack
  endpoint:
    path: /discord/DMChannel/ack
    method: POST
    data_selector: HTTPException
- name: history
  endpoint:
    path: /discord/DMChannel/history
    method: GET
    data_selector: Message
- name: pins
  endpoint:
    path: /discord/DMChannel/pins
    method: GET
    data_selector: List[Message]
- name: search
  endpoint:
    path: /discord/DMChannel/search
    method: GET
    data_selector: Message
- name: message
  endpoint:
    path: /discord/api/v1/messages
    method: GET
    data_selector: messages
- name: messages
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 50
      before: message_id
      after: message_id
- name: thread
  endpoint:
    path: /channels/{channel_id}/threads
    method: POST
    data_selector: thread
    params: {}
- name: message
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params: {}
- name: group_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: PartialMessage
  endpoint:
    path: /discord/PartialMessage
    method: GET
    data_selector: records
- name: create_invite
  endpoint:
    path: /channels/{channel_id}/invites
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /voice/{channel_id}/connect
    method: POST
    data_selector: voice_client
- name: ack
  endpoint:
    path: /channels/{channel_id}/ack
    method: POST
    data_selector: ack
- name: ack_pins
  endpoint:
    path: /channels/{channel_id}/pins/ack
    method: POST
    data_selector: ack_pins
- name: application_commands
  endpoint:
    path: /channels/{channel_id}/application-commands
    method: GET
    data_selector: commands
- name: fetch_message
  endpoint:
    path: /channels/{channel_id}/messages/{message_id}
    method: GET
    data_selector: message
- name: greet
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: greet_message
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: search_results
- name: attachment
  endpoint:
    path: /attachments
    method: GET
    data_selector: attachments
- name: message_reference
  endpoint:
    path: /message_references
    method: GET
    data_selector: message_reference
- name: deleted_referenced_message
  endpoint:
    path: /deleted_referenced_messages
    method: GET
    data_selector: deleted_referenced_message
- name: message_snapshot
  endpoint:
    path: /message_snapshots
    method: GET
    data_selector: message_snapshot
- name: role_subscription_info
  endpoint:
    path: /role_subscription_info
    method: GET
    data_selector: role_subscription_info
- name: purchase_notification
  endpoint:
    path: /purchase_notifications
    method: GET
    data_selector: purchase_notification
- name: guild_product_purchase
  endpoint:
    path: /guild_product_purchases
    method: GET
    data_selector: guild_product_purchase
- name: reaction
  endpoint:
    path: /reaction
    method: GET
    data_selector: reactions
    params: {}
- name: interaction
  endpoint:
    path: /interactions
    method: GET
    data_selector: interactions
- name: component
  endpoint:
    path: /components
    method: GET
    data_selector: components
- name: action_row
  endpoint:
    path: /action-rows
    method: GET
    data_selector: action_rows
- name: button
  endpoint:
    path: /buttons
    method: GET
    data_selector: buttons
- name: select_menu
  endpoint:
    path: /select-menus
    method: GET
    data_selector: select_menus
- name: text_input
  endpoint:
    path: /text-inputs
    method: GET
    data_selector: text_inputs
- name: user_commands
  endpoint:
    path: /users/@me/commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: /channels/{channel_id}/commands
    method: GET
    data_selector: commands
    params: {}
- name: commands
  endpoint:
    path: /commands
    method: GET
- name: on_message
  endpoint:
    path: /client/event/on_message
    method: POST
    data_selector: message
- name: change_presence
  endpoint:
    path: /client/change_presence
    method: POST
    data_selector: presence
- name: fetch_guilds
  endpoint:
    path: /client/fetch_guilds
    method: GET
    data_selector: guilds
- name: fetch_invite
  endpoint:
    path: /client/fetch_invite
    method: GET
    data_selector: invite
- name: stage_instance
  endpoint:
    path: /stage_instances
    method: GET
    data_selector: records
- name: private_call
  endpoint:
    path: /private_calls
    method: GET
    data_selector: records
- name: group_call
  endpoint:
    path: /group_calls
    method: GET
    data_selector: records
- name: call_message
  endpoint:
    path: /call_messages
    method: GET
    data_selector: records
- name: message
  endpoint:
    path: /messages
    method: GET
    data_selector: records
- name: message
  endpoint:
    path: /discord/api/vX.X/messages
    method: GET
    data_selector: content
    params: {}
- name: clear_reaction
  endpoint:
    path: /messages/{message_id}/reactions/{emoji}/clear
    method: DELETE
- name: create_thread
  endpoint:
    path: /channels/{channel_id}/threads
    method: POST
- name: fetch_widget
  endpoint:
    path: /fetch_widget
    method: GET
    data_selector: widget
    params: {}
- name: fetch_user
  endpoint:
    path: /fetch_user/{user_id}
    method: GET
    data_selector: user
    params: {}
- name: fetch_user_profile
  endpoint:
    path: /fetch_user_profile/{user_id}
    method: GET
    data_selector: user_profile
    params:
      with_mutual_guilds: true
      with_mutual_friends_count: false
      with_mutual_friends: true
- name: fetch_channel
  endpoint:
    path: /fetch_channel/{channel_id}
    method: GET
    data_selector: channel
    params: {}
- name: fetch_webhook
  endpoint:
    path: /fetch_webhook/{webhook_id}
    method: GET
    data_selector: webhook
    params: {}
- name: fetch_sticker
  endpoint:
    path: /fetch_sticker/{sticker_id}
    method: GET
    data_selector: sticker
    params: {}
- name: fetch_sticker_pack
  endpoint:
    path: /fetch_sticker_pack/{pack_id}
    method: GET
    data_selector: sticker_pack
    params: {}
- name: fetch_notes
  endpoint:
    path: /fetch_notes
    method: GET
    data_selector: notes
    params: {}
- name: fetch_note
  endpoint:
    path: /fetch_note/{user_id}
    method: GET
    data_selector: note
    params: {}
- name: fetch_connections
  endpoint:
    path: /fetch_connections
    method: GET
    data_selector: connections
    params: {}
- name: fetch_private_channels
  endpoint:
    path: /fetch_private_channels
    method: GET
    data_selector: private_channels
    params: {}
- name: fetch_settings
  endpoint:
    path: /fetch_settings
    method: GET
    data_selector: settings
    params: {}
- name: email_settings
  endpoint:
    path: /email_settings
    method: GET
    data_selector: email_settings
    params: {}
- name: fetch_tracking_settings
  endpoint:
    path: /fetch_tracking_settings
    method: GET
    data_selector: tracking_settings
    params: {}
- name: reaction
  endpoint:
    path: /reaction
    method: GET
    data_selector: reactions
    params: {}
- name: fetch_relationships
  endpoint:
    path: /fetch_relationships
    method: GET
    data_selector: relationships
- name: friend_suggestions
  endpoint:
    path: /friend_suggestions
    method: GET
    data_selector: friend_suggestions
- name: fetch_country_code
  endpoint:
    path: /fetch_country_code
    method: GET
    data_selector: country_code
- name: fetch_location_info
  endpoint:
    path: /fetch_location_info
    method: GET
    data_selector: location_info
- name: fetch_preferred_rtc_regions
  endpoint:
    path: /fetch_preferred_rtc_regions
    method: GET
    data_selector: preferred_rtc_regions
- name: applications
  endpoint:
    path: /applications
    method: GET
    data_selector: applications
- name: detectable_applications
  endpoint:
    path: /detectable_applications
    method: GET
    data_selector: detectable_applications
- name: teams
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: ActionRow
  endpoint:
    path: /discord/components/actionrow
    method: GET
    data_selector: children
- name: Button
  endpoint:
    path: /discord/components/button
    method: GET
    data_selector: button
- name: SelectMenu
  endpoint:
    path: /discord/components/selectmenu
    method: GET
    data_selector: selectMenu
- name: TextInput
  endpoint:
    path: /discord/components/textinput
    method: GET
    data_selector: textInput
- name: invite
  endpoint:
    path: /invites/{invite.code}
    method: GET
    data_selector: invite
- name: invite
  endpoint:
    path: /invites/{invite_code}
    method: GET
    data_selector: invite
- name: invite
  endpoint:
    path: /invites/{invite_code}
    method: GET
    data_selector: invite
- name: application
  endpoint:
    path: /create_application
    method: POST
    data_selector: application
- name: team
  endpoint:
    path: /create_team
    method: POST
    data_selector: team
- name: companies
  endpoint:
    path: /search_companies
    method: GET
    data_selector: companies
- name: company
  endpoint:
    path: /fetch_company
    method: GET
    data_selector: company
- name: activity_statistics
  endpoint:
    path: /activity_statistics
    method: GET
    data_selector: statistics
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
- name: payment_source
  endpoint:
    path: /fetch_payment_source
    method: GET
    data_selector: payment_source
- name: subscription
  endpoint:
    path: /fetch_subscription
    method: GET
    data_selector: subscription
- name: promotions
  endpoint:
    path: /promotions
    method: GET
    data_selector: promotions
- name: invite
  endpoint:
    path: /invites/{code}
    method: GET
    data_selector: invite
- name: fetch_guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: UserGuild
    params:
      with_counts: true
- name: fetch_guild
  endpoint:
    path: /guilds/{guild_id}
    method: GET
    data_selector: Guild
    params:
      with_counts: true
- name: fetch_invite
  endpoint:
    path: /invites/{url}
    method: GET
    data_selector: Invite
    params:
      with_counts: true
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: user_offer
    params: {}
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: trial_offer
    params: {}
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: pricing_promotion
    params: {}
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: library
    params: {}
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: authorizations
    params: {}
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
    params: {}
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
    data_selector: giftable_entitlements
    params: {}
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
    data_selector: premium_entitlements
    params: {}
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
    data_selector: fetch_gift
    params: {}
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
    data_selector: fetch_sku
    params: {}
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
    data_selector: fetch_store_listing
    params: {}
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
    data_selector: fetch_published_store_listing
    params: {}
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
    data_selector: fetch_published_store_listings
    params: {}
- name: fetch_widget
  endpoint:
    path: /path/to/fetch_widget
    method: GET
- name: fetch_user
  endpoint:
    path: /path/to/fetch_user
    method: GET
- name: fetch_user_profile
  endpoint:
    path: /path/to/fetch_user_profile
    method: GET
- name: fetch_channel
  endpoint:
    path: /path/to/fetch_channel
    method: GET
- name: fetch_webhook
  endpoint:
    path: /path/to/fetch_webhook
    method: GET
- name: fetch_sticker
  endpoint:
    path: /path/to/fetch_sticker
    method: GET
- name: sticker_packs
  endpoint:
    path: /path/to/sticker_packs
    method: GET
- name: fetch_sticker_pack
  endpoint:
    path: /path/to/fetch_sticker_pack
    method: GET
- name: fetch_notes
  endpoint:
    path: /path/to/fetch_notes
    method: GET
- name: fetch_note
  endpoint:
    path: /path/to/fetch_note
    method: GET
- name: fetch_connections
  endpoint:
    path: /path/to/fetch_connections
    method: GET
- name: authorize_connection
  endpoint:
    path: /path/to/authorize_connection
    method: GET
- name: create_connection
  endpoint:
    path: /path/to/create_connection
    method: POST
- name: fetch_private_channels
  endpoint:
    path: /path/to/fetch_private_channels
    method: GET
- name: fetch_settings
  endpoint:
    path: /path/to/fetch_settings
    method: GET
- name: legacy_settings
  endpoint:
    path: /path/to/legacy_settings
    method: GET
- name: email_settings
  endpoint:
    path: /path/to/email_settings
    method: GET
- name: fetch_tracking_settings
  endpoint:
    path: /path/to/fetch_tracking_settings
    method: GET
- name: edit_legacy_settings
  endpoint:
    path: /path/to/edit_legacy_settings
    method: PATCH
- name: fetch_relationships
  endpoint:
    path: /fetch_relationships
    method: GET
- name: friend_suggestions
  endpoint:
    path: /friend_suggestions
    method: GET
- name: fetch_country_code
  endpoint:
    path: /fetch_country_code
    method: GET
- name: fetch_location_info
  endpoint:
    path: /fetch_location_info
    method: GET
- name: fetch_preferred_rtc_regions
  endpoint:
    path: /fetch_preferred_rtc_regions
    method: GET
- name: applications
  endpoint:
    path: /applications
    method: GET
    params:
      with_team_applications: true
- name: detectable_applications
  endpoint:
    path: /detectable_applications
    method: GET
- name: fetch_application
  endpoint:
    path: /fetch_application
    method: GET
- name: fetch_partial_application
  endpoint:
    path: /fetch_partial_application
    method: GET
- name: fetch_public_application
  endpoint:
    path: /fetch_public_application
    method: GET
- name: fetch_public_applications
  endpoint:
    path: /fetch_public_applications
    method: GET
- name: teams
  endpoint:
    path: /teams
    method: GET
    params:
      with_payout_account_status: false
- name: fetch_team
  endpoint:
    path: /fetch_team
    method: GET
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
    params:
      application_id: int
      localize: bool
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
    params:
      application_ids: int
      localize: bool
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: subscription_plans
    params:
      sku_id: int
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: subscription_plans
    params:
      sku_ids: int
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: eula
    params:
      eula_id: int
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
    params:
      branch_ids: int
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier
    params:
      price_tier: int
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: recent_mentions
    params:
      limit: int
      before: Snowflake or datetime
      guild: Guild
      roles: bool
      everyone: bool
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: POST
    data_selector: delete_status
    params:
      message: abc.Snowflake
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhook_id
    params:
      application: Application
      channel: TextChannel
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: leave_status
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: unverified_application
    params:
      name: str
      icon: File
      os: OperatingSystem
      executable: str
      publisher: str
      distributor: Distributor
      sku: str
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
    params:
      with_guild_experiments: bool
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
    data_selector: result
    params: {}
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
    data_selector: hubs
    params: {}
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
    data_selector: hub
    params: {}
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
    data_selector: suggested_username
    params: {}
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
    data_selector: is_taken
    params: {}
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
    data_selector: avatars
    params: {}
- name: create_application
  endpoint:
    path: /applications
    method: POST
- name: create_team
  endpoint:
    path: /teams
    method: POST
- name: search_companies
  endpoint:
    path: /companies/search
    method: GET
- name: fetch_company
  endpoint:
    path: /companies/{company_id}
    method: GET
- name: activity_statistics
  endpoint:
    path: /activities/statistics
    method: GET
- name: global_activity_statistics
  endpoint:
    path: /activities/global/statistics
    method: GET
- name: payment_sources
  endpoint:
    path: /payment_sources
    method: GET
- name: fetch_payment_source
  endpoint:
    path: /payment_sources/{source_id}
    method: GET
- name: create_payment_source
  endpoint:
    path: /payment_sources
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: premium_guild_subscriptions
  endpoint:
    path: /premium_guild_subscriptions
    method: GET
- name: premium_guild_subscription_slots
  endpoint:
    path: /premium_guild_subscription_slots
    method: GET
- name: premium_guild_subscription_cooldown
  endpoint:
    path: /premium_guild_subscription_cooldown
    method: GET
- name: fetch_subscription
  endpoint:
    path: /subscriptions/{subscription_id}
    method: GET
- name: preview_subscription
  endpoint:
    path: /subscriptions/preview
    method: POST
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
- name: payments
  endpoint:
    path: /payments
    method: GET
- name: fetch_payment
  endpoint:
    path: /payments/{payment_id}
    method: GET
- name: promotions
  endpoint:
    path: /promotions
    method: GET
- name: AudioSource
  endpoint:
    path: /discord/AudioSource
    method: GET
    data_selector: methods
    params: {}
- name: PCMAudio
  endpoint:
    path: /discord/PCMAudio
    method: GET
    data_selector: methods
    params: {}
- name: FFmpegAudio
  endpoint:
    path: /discord/FFmpegAudio
    method: GET
    data_selector: methods
    params: {}
- name: FFmpegPCMAudio
  endpoint:
    path: /discord/FFmpegPCMAudio
    method: GET
    data_selector: methods
    params: {}
- name: FFmpegOpusAudio
  endpoint:
    path: /discord/FFmpegOpusAudio
    method: GET
    data_selector: methods
    params: {}
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: user_offer
    params: {}
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: trial_offer
    params: {}
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: pricing_promotion
    params: {}
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: library
    params: {}
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: authorizations
    params: {}
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
    params: {}
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
    data_selector: giftable_entitlements
    params: {}
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
    data_selector: premium_entitlements
    params: {}
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
    data_selector: fetch_gift
    params: {}
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
    data_selector: fetch_sku
    params: {}
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
    data_selector: fetch_store_listing
    params: {}
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
    data_selector: fetch_published_store_listing
    params: {}
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
    data_selector: fetch_published_store_listings
    params: {}
- name: role_delete
  endpoint:
    path: /audit-log/role-delete
    method: GET
- name: invite_create
  endpoint:
    path: /audit-log/invite-create
    method: GET
- name: invite_update
  endpoint:
    path: /audit-log/invite-update
    method: GET
- name: invite_delete
  endpoint:
    path: /audit-log/invite-delete
    method: GET
- name: webhook_create
  endpoint:
    path: /audit-log/webhook-create
    method: GET
- name: webhook_update
  endpoint:
    path: /audit-log/webhook-update
    method: GET
- name: webhook_delete
  endpoint:
    path: /audit-log/webhook-delete
    method: GET
- name: emoji_create
  endpoint:
    path: /audit-log/emoji-create
    method: GET
- name: emoji_update
  endpoint:
    path: /audit-log/emoji-update
    method: GET
- name: emoji_delete
  endpoint:
    path: /audit-log/emoji-delete
    method: GET
- name: message_delete
  endpoint:
    path: /audit-log/message-delete
    method: GET
- name: message_bulk_delete
  endpoint:
    path: /audit-log/message-bulk-delete
    method: GET
- name: message_pin
  endpoint:
    path: /audit-log/message-pin
    method: GET
- name: message_unpin
  endpoint:
    path: /audit-log/message-unpin
    method: GET
- name: integration_create
  endpoint:
    path: /audit-log/integration-create
    method: GET
- name: integration_update
  endpoint:
    path: /audit-log/integration-update
    method: GET
- name: integration_delete
  endpoint:
    path: /audit-log/integration-delete
    method: GET
- name: stage_instance_create
  endpoint:
    path: /audit-log/stage-instance-create
    method: GET
- name: stage_instance_update
  endpoint:
    path: /audit-log/stage-instance-update
    method: GET
- name: stage_instance_delete
  endpoint:
    path: /audit-log/stage-instance-delete
    method: GET
- name: sticker_create
  endpoint:
    path: /audit-log/sticker-create
    method: GET
- name: sticker_update
  endpoint:
    path: /audit-log/sticker-update
    method: GET
- name: sticker_delete
  endpoint:
    path: /audit-log/sticker-delete
    method: GET
- name: scheduled_event_create
  endpoint:
    path: /audit-log/scheduled-event-create
    method: GET
- name: scheduled_event_update
  endpoint:
    path: /audit-log/scheduled-event-update
    method: GET
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing/{application_id}
    method: GET
    data_selector: store_listing
    params:
      localize: 'True'
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
    params:
      localize: 'True'
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans/{sku_id}
    method: GET
    data_selector: subscription_plans
    params: {}
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: subscription_plans
    params: {}
- name: fetch_eula
  endpoint:
    path: /fetch_eula/{eula_id}
    method: GET
    data_selector: eula
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier/{price_tier}
    method: GET
    data_selector: price_tier_mapping
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: mentions
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention/{message}
    method: DELETE
    data_selector: deleted_mention
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhook_id
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: DELETE
    data_selector: left_program
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: reported_application
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
    data_selector: waitlist_signup
    params: {}
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
    data_selector: hubs
    params: {}
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
    data_selector: hub
    params: {}
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
    data_selector: suggested_username
    params: {}
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
    data_selector: username_taken
    params: {}
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
    data_selector: recent_avatars
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: AudioSource
  endpoint:
    path: /discord/audiosource
    method: GET
    data_selector: audio_data
- name: FFmpegAudio
  endpoint:
    path: /discord/ffmpegaudio
    method: GET
    data_selector: audio_data
- name: FFmpegPCMAudio
  endpoint:
    path: /discord/ffmpegpcmaudio
    method: GET
    data_selector: audio_data
- name: FFmpegOpusAudio
  endpoint:
    path: /discord/ffmpegopusaudio
    method: GET
    data_selector: audio_data
- name: automod_rule_create
  endpoint:
    path: /automod/rule/create
    method: POST
    data_selector: rule
- name: automod_rule_update
  endpoint:
    path: /automod/rule/update
    method: POST
    data_selector: rule
- name: automod_rule_delete
  endpoint:
    path: /automod/rule/delete
    method: DELETE
    data_selector: rule
- name: automod_action
  endpoint:
    path: /automod/action
    method: POST
    data_selector: execution
- name: webhook
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}
    method: POST
    data_selector: message
- name: edit_message
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}/messages/{message_id}
    method: PATCH
- name: delete_message
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}/messages/{message_id}
    method: DELETE
- name: guild_settings_update
  endpoint:
    path: /guilds/settings/update
    method: POST
    data_selector: settings
    params: {}
- name: payment_sources_update
  endpoint:
    path: /payment/sources/update
    method: POST
    data_selector: sources
    params: {}
- name: subscriptions_update
  endpoint:
    path: /subscriptions/update
    method: POST
    data_selector: subscriptions
    params: {}
- name: GuildChannel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: note
  endpoint:
    path: /user/note
    method: PUT
- name: message
  endpoint:
    path: /channel/message/{id}
    method: GET
- name: mutual_friends
  endpoint:
    path: /user/mutual_friends
    method: GET
- name: pins
  endpoint:
    path: /channel/pins
    method: GET
- name: profile
  endpoint:
    path: /user/profile
    method: GET
- name: invite_create
  endpoint:
    path: /invite/create
    method: POST
    data_selector: invite
- name: invite_delete
  endpoint:
    path: /invite/delete
    method: DELETE
    data_selector: invite
- name: guild_feature_ack
  endpoint:
    path: /guild/feature/ack
    method: POST
    data_selector: payload
- name: integration_create
  endpoint:
    path: /integration/create
    method: POST
    data_selector: integration
- name: integration_update
  endpoint:
    path: /integration/update
    method: PATCH
    data_selector: integration
- name: guild_integrations_update
  endpoint:
    path: /guild/integrations/update
    method: PATCH
    data_selector: guild
- name: webhooks_update
  endpoint:
    path: /webhooks/update
    method: PATCH
    data_selector: channel
- name: raw_integration_delete
  endpoint:
    path: /integration/delete
    method: DELETE
    data_selector: payload
- name: interaction
  endpoint:
    path: /interaction
    method: POST
    data_selector: interaction
- name: interaction_finish
  endpoint:
    path: /interaction/finish
    method: PATCH
    data_selector: interaction
- name: modal
  endpoint:
    path: /modal
    method: POST
    data_selector: modal
- name: member_join
  endpoint:
    path: /member/join
    method: POST
    data_selector: member
- name: member_remove
  endpoint:
    path: /member/remove
    method: DELETE
    data_selector: member
- name: raw_member_remove
  endpoint:
    path: /member/raw/remove
    method: DELETE
    data_selector: payload
- name: member_update
  endpoint:
    path: /member/update
    method: PATCH
    data_selector:
    - before
    - after
- name: user_update
  endpoint:
    path: /user/update
    method: PATCH
    data_selector:
    - before
    - after
- name: member_ban
  endpoint:
    path: /member/ban
    method: POST
    data_selector:
    - guild
    - user
- name: member_unban
  endpoint:
    path: /member/unban
    method: POST
    data_selector:
    - guild
    - user
- name: presence_update
  endpoint:
    path: /presence/update
    method: PATCH
    data_selector:
    - before
    - after
- name: raw_member_list_update
  endpoint:
    path: /member/list/update
    method: POST
    data_selector: data
- name: message
  endpoint:
    path: /message
    method: POST
    data_selector: message
- name: message_edit
  endpoint:
    path: /message/edit
    method: PATCH
    data_selector:
    - before
    - after
- name: message_delete
  endpoint:
    path: /message/delete
    method: DELETE
    data_selector: message
- name: bulk_message_delete
  endpoint:
    path: /message/bulk/delete
    method: DELETE
    data_selector: messages
- name: message_ack
  endpoint:
    path: /message/ack
    method: POST
    data_selector:
    - message
    - manual
- name: raw_message_edit
  endpoint:
    path: /message/raw/edit
    method: PATCH
    data_selector: payload
- name: raw_message_delete
  endpoint:
    path: /message/raw/delete
    method: DELETE
    data_selector: payload
- name: raw_bulk_message_delete
  endpoint:
    path: /message/raw/bulk/delete
    method: DELETE
    data_selector: payload
- name: raw_message_ack
  endpoint:
    path: /message/raw/ack
    method: POST
    data_selector: payload
- name: recent_mention_delete
  endpoint:
    path: /recent/mention/delete
    method: DELETE
    data_selector: message
- name: raw_recent_mention_delete
  endpoint:
    path: /recent/mention/raw/delete
    method: DELETE
    data_selector: message_id
- name: channel_messages
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: '200'
- name: connection
  endpoint:
    path: /connections
    method: GET
    data_selector: connections
- name: friend_suggestion
  endpoint:
    path: /friend_suggestions
    method: GET
    data_selector: suggestions
- name: MessageType
  endpoint:
    path: /discord/MessageType
    method: GET
    data_selector: message_types
- name: InviteType
  endpoint:
    path: /discord/InviteType
    method: GET
    data_selector: invite_types
- name: UserFlags
  endpoint:
    path: /discord/UserFlags
    method: GET
    data_selector: user_flags
- name: HypeSquadHouse
  endpoint:
    path: /discord/HypeSquadHouse
    method: GET
    data_selector: hypesquad_houses
- name: VerificationLevel
  endpoint:
    path: /discord/VerificationLevel
    method: GET
    data_selector: verification_levels
- name: NotificationLevel
  endpoint:
    path: /discord/NotificationLevel
    method: GET
    data_selector: notification_levels
- name: HighlightLevel
  endpoint:
    path: /discord/HighlightLevel
    method: GET
    data_selector: highlight_levels
- name: audit_log_diff
  endpoint:
    path: /audit_log_diff
    method: GET
    data_selector: records
- name: user_settings
  endpoint:
    path: /user/settings
    method: GET
    data_selector: settings
    params: {}
- name: user_settings
  endpoint:
    path: /user/settings
    method: GET
- name: TrackingSettings
  endpoint:
    path: /tracking_settings
    method: GET
    data_selector: settings
- name: EmailSettings
  endpoint:
    path: /email_settings
    method: GET
    data_selector: preferences
- name: GuildProgress
  endpoint:
    path: /guild_progress
    method: GET
    data_selector: progress
- name: AudioContext
  endpoint:
    path: /audio_context
    method: GET
    data_selector: audio
- name: activity_statistics
  endpoint:
    path: /applications/{application.id}/activity_statistics
    method: GET
    data_selector: statistics
    params: {}
- name: assets
  endpoint:
    path: /applications/{application.id}/assets
    method: GET
    data_selector: assets
    params: {}
- name: branches
  endpoint:
    path: /applications/{application.id}/branches
    method: GET
    data_selector: branches
    params: {}
- name: audit_log_diff
  endpoint:
    path: /audit-log/diff
    method: GET
    data_selector: changes
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook_data
- name: upload_store_asset
  endpoint:
    path: /upload/store/asset
    method: POST
    data_selector: created_asset
- name: skus
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    data_selector: primary_sku
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
    data_selector: store_listing_sku
- name: create_sku
  endpoint:
    path: /create_sku
    method: POST
    data_selector: sku_created
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: fetch_entitlement
  endpoint:
    path: /fetch_entitlement/{entitlement_id}
    method: GET
    data_selector: entitlement
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
- name: create_gift_batch
  endpoint:
    path: /create_gift_batch
    method: POST
    data_selector: gift_batch_created
- name: branches
  endpoint:
    path: /branches
    method: GET
    data_selector: branches
- name: create_branch
  endpoint:
    path: /create_branch
    method: POST
    data_selector: branch_created
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
    data_selector: manifest_labels
- name: fetch_discoverability
  endpoint:
    path: /fetch_discoverability
    method: GET
    data_selector: discoverability
- name: fetch_embedded_activity_config
  endpoint:
    path: /fetch_embedded_activity_config
    method: GET
    data_selector: embedded_activity_config
- name: edit_embedded_activity_config
  endpoint:
    path: /edit_embedded_activity_config
    method: PATCH
    data_selector: embedded_activity_config_edited
- name: sync_webhook
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}
    method: POST
    data_selector: message
    params: {}
- name: application_profile
  endpoint:
    path: /applications/@me
    method: GET
    data_selector: data
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: send_friend_request
  endpoint:
    path: /users/{user_id}/friend-requests
    method: POST
    data_selector: friend_request
    params: {}
- name: user
  endpoint:
    path: /user
    method: GET
    data_selector: user
- name: application_branch
  endpoint:
    path: /application_branch
    method: GET
- name: application_build
  endpoint:
    path: /application_build
    method: GET
- name: manifest
  endpoint:
    path: /manifest
    method: GET
- name: team
  endpoint:
    path: /team
    method: GET
- name: message
  endpoint:
    path: /messages
    method: GET
- name: mutual_friends
  endpoint:
    path: /mutual_friends
    method: GET
- name: note
  endpoint:
    path: /note
    method: GET
- name: pins
  endpoint:
    path: /pins
    method: GET
- name: profile
  endpoint:
    path: /profile
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
    params: {}
- name: user_profile
  endpoint:
    path: /users/@me
    method: GET
    data_selector: data
- name: dm_channel
  endpoint:
    path: /dm_channel
    method: POST
    data_selector: channel
- name: fetch_mutual_friends
  endpoint:
    path: /mutual_friends
    method: GET
    data_selector: friends
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: messages
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: '200'
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: '25'
- name: user_commands
  endpoint:
    path: user_commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: slash_commands
    method: GET
    data_selector: commands
    params: {}
- name: upload_files
  endpoint:
    path: upload_files
    method: POST
    data_selector: files
    params: {}
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: team_payout
  endpoint:
    path: /team_payout
    method: GET
    data_selector: payouts
    params: {}
- name: company
  endpoint:
    path: /company
    method: GET
    data_selector: companies
    params: {}
- name: eula
  endpoint:
    path: /eula
    method: GET
    data_selector: eulas
    params: {}
- name: entitlement
  endpoint:
    path: /entitlement
    method: GET
    data_selector: entitlements
    params: {}
- name: user_settings
  endpoint:
    path: /users/@me/settings
    method: GET
    data_selector: settings
    params: {}
- name: gift
  endpoint:
    path: /discord/gift
    method: GET
    data_selector: records
- name: gift_batch
  endpoint:
    path: /discord/gift_batch
    method: GET
    data_selector: records
- name: library_application
  endpoint:
    path: /discord/library_application
    method: GET
    data_selector: records
- name: legacy_user_settings
  endpoint:
    path: /legacy/user/settings
    method: GET
    data_selector: settings
    params: {}
- name: TrackingSettings
  endpoint:
    path: /tracking/settings
    method: GET
    data_selector: settings
- name: EmailSettings
  endpoint:
    path: /email/settings
    method: GET
    data_selector: settings
- name: GuildFolder
  endpoint:
    path: /guild/folders
    method: GET
    data_selector: folders
- name: GuildProgress
  endpoint:
    path: /guild/progress
    method: GET
    data_selector: progress
- name: AudioContext
  endpoint:
    path: /audio/context
    method: GET
    data_selector: context
- name: MuteConfig
  endpoint:
    path: /mute/config
    method: GET
    data_selector: config
- name: subscription_item
  endpoint:
    path: /discord/SubscriptionItem
    method: GET
- name: subscription_discount
  endpoint:
    path: /discord/SubscriptionDiscount
    method: GET
- name: subscription_invoice
  endpoint:
    path: /discord/SubscriptionInvoice
    method: GET
- name: subscription_renewal_mutations
  endpoint:
    path: /discord/SubscriptionRenewalMutations
    method: GET
- name: subscription_trial
  endpoint:
    path: /discord/SubscriptionTrial
    method: GET
- name: application_info
  endpoint:
    path: /applications/{application.id}
    method: GET
    data_selector: data
- name: subscription_trial
  endpoint:
    path: /discord/SubscriptionTrial
    method: GET
    data_selector: trial
    params: {}
- name: premium_guild_subscription
  endpoint:
    path: /discord/PremiumGuildSubscription
    method: GET
    data_selector: premium_guild_subscription
    params: {}
- name: premium_guild_subscription_slot
  endpoint:
    path: /discord/PremiumGuildSubscriptionSlot
    method: GET
    data_selector: premium_guild_subscription_slot
    params: {}
- name: subscription_plan
  endpoint:
    path: /discord/SubscriptionPlan
    method: GET
    data_selector: subscription_plan
    params: {}
- name: SubscriptionPlanPrices
  endpoint:
    path: /subscription_plan_prices
    method: GET
    data_selector: country_prices
- name: Payment
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
- name: SKU
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
- name: sku
  endpoint:
    path: /discord/sku
    method: GET
    data_selector: records
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: records
- name: edit_application
  endpoint:
    path: /applications/{application.id}/edit
    method: POST
    data_selector: application
    params: {}
- name: fetch_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: GET
    data_selector: bot
    params: {}
- name: create_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: POST
    data_selector: bot
    params: {}
- name: edit_bot
  endpoint:
    path: /applications/{application.id}/bot/edit
    method: PATCH
    data_selector: bot
    params: {}
- name: request_intents
  endpoint:
    path: /applications/{application.id}/intents
    method: POST
    data_selector: intents
    params: {}
- name: whitelisted
  endpoint:
    path: /applications/{application.id}/whitelist
    method: GET
    data_selector: testers
    params: {}
- name: whitelist_user
  endpoint:
    path: /applications/{application.id}/whitelist
    method: POST
    data_selector: tester
    params: {}
- name: create_asset
  endpoint:
    path: /applications/{application.id}/assets
    method: POST
    data_selector: asset
    params: {}
- name: store_assets
  endpoint:
    path: /applications/{application.id}/store/assets
    method: GET
    data_selector: store_assets
    params: {}
- name: create_store_asset
  endpoint:
    path: /applications/{application.id}/store/assets
    method: POST
    data_selector: store_asset
    params: {}
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: guild
  endpoint:
    path: /guild
    method: GET
    data_selector: guild
    params: {}
- name: uploads_store_asset
  endpoint:
    path: /uploads/store_asset
    method: POST
- name: skus
  endpoint:
    path: /applications/{application.id}/skus
    method: GET
- name: primary_sku
  endpoint:
    path: /applications/{application.id}/primary_sku
    method: GET
- name: store_listing_sku
  endpoint:
    path: /applications/{application.id}/store_listing_sku
    method: GET
- name: create_sku
  endpoint:
    path: /applications/{application.id}/skus
    method: POST
- name: entitlements
  endpoint:
    path: /applications/{application.id}/entitlements
    method: GET
- name: fetch_entitlement
  endpoint:
    path: /entitlements/{entitlement_id}
    method: GET
- name: gift_batches
  endpoint:
    path: /applications/{application.id}/gift_batches
    method: GET
- name: create_gift_batch
  endpoint:
    path: /applications/{application.id}/gift_batches
    method: POST
- name: branches
  endpoint:
    path: /applications/{application.id}/branches
    method: GET
- name: create_branch
  endpoint:
    path: /applications/{application.id}/branches
    method: POST
- name: manifest_labels
  endpoint:
    path: /applications/{application.id}/manifest_labels
    method: GET
- name: fetch_discoverability
  endpoint:
    path: /applications/{application.id}/discoverability
    method: GET
- name: fetch_embedded_activity_config
  endpoint:
    path: /applications/{application.id}/embedded_activity_config
    method: GET
- name: edit_embedded_activity_config
  endpoint:
    path: /applications/{application.id}/embedded_activity_config
    method: PATCH
- name: create_directory_channel
  endpoint:
    path: /create_directory_channel
    method: POST
    data_selector: channel
    params: {}
- name: create_forum
  endpoint:
    path: /create_forum
    method: POST
    data_selector: forum
    params: {}
- name: create_forum_channel
  endpoint:
    path: /create_forum_channel
    method: POST
    data_selector: forum_channel
    params: {}
- name: leave
  endpoint:
    path: /leave
    method: POST
    data_selector: guild
    params: {}
- name: delete
  endpoint:
    path: /delete
    method: DELETE
    data_selector: guild
    params: {}
- name: edit
  endpoint:
    path: /edit
    method: PATCH
    data_selector: guild
    params: {}
- name: application_profile
  endpoint:
    path: /applications/@me
    method: GET
    data_selector: data
    params: {}
- name: application_activity_statistics
  endpoint:
    path: /discord/application/activity/statistics
    method: GET
    data_selector: statistics
    params: {}
- name: application_branch
  endpoint:
    path: /discord/ApplicationBranch
    method: GET
- name: application_build
  endpoint:
    path: /discord/ApplicationBuild
    method: GET
- name: manifest_label
  endpoint:
    path: /discord/ManifestLabel
    method: GET
- name: manifest
  endpoint:
    path: /discord/Manifest
    method: GET
- name: team
  endpoint:
    path: /discord/Team
    method: GET
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: team_member
  endpoint:
    path: /teams/{team_id}/members
    method: GET
    data_selector: members
- name: gift
  endpoint:
    path: /discord/gift
    method: GET
    data_selector: gift_data
- name: gift_batch
  endpoint:
    path: /discord/gift/batch
    method: GET
    data_selector: gift_batch_data
- name: library_application
  endpoint:
    path: /discord/library/application
    method: GET
    data_selector: library_application_data
- name: Subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: SubscriptionTrial
  endpoint:
    path: /discord/SubscriptionTrial
    method: GET
    data_selector: trial
    params: {}
- name: PremiumGuildSubscription
  endpoint:
    path: /discord/PremiumGuildSubscription
    method: GET
    data_selector: premium_guild_subscription
    params: {}
- name: PremiumGuildSubscriptionSlot
  endpoint:
    path: /discord/PremiumGuildSubscriptionSlot
    method: GET
    data_selector: premium_guild_subscription_slot
    params: {}
- name: PremiumGuildSubscriptionCooldown
  endpoint:
    path: /discord/PremiumGuildSubscriptionCooldown
    method: GET
    data_selector: premium_guild_subscription_cooldown
    params: {}
- name: SubscriptionPlan
  endpoint:
    path: /discord/SubscriptionPlan
    method: GET
    data_selector: subscription_plan
    params: {}
- name: subscription_plan
  endpoint:
    path: /subscription_plan
    method: GET
    data_selector: records
- name: payment
  endpoint:
    path: /payment
    method: GET
    data_selector: records
- name: sku
  endpoint:
    path: /sku
    method: GET
    data_selector: records
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: listings
    params: {}
- name: guild
  endpoint:
    path: /guilds/{guild.id}
    method: GET
    data_selector: guild
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: discovery_splash
  endpoint:
    path: /guilds/{guild.id}/discovery_splash
    method: GET
    data_selector: Asset
- name: member_count
  endpoint:
    path: /guilds/{guild.id}/member_count
    method: GET
    data_selector: int
- name: online_count
  endpoint:
    path: /guilds/{guild.id}/online_count
    method: GET
    data_selector: int
- name: chunked
  endpoint:
    path: /guilds/{guild.id}/chunked
    method: GET
    data_selector: bool
- name: created_at
  endpoint:
    path: /guilds/{guild.id}/created_at
    method: GET
    data_selector: datetime.datetime
- name: create_directory_channel
  endpoint:
    path: /channels
    method: POST
    data_selector: channel
- name: create_forum
  endpoint:
    path: /forums
    method: POST
    data_selector: forum
- name: create_forum_channel
  endpoint:
    path: /forum_channels
    method: POST
    data_selector: forum_channel
- name: bans
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: bans
    params:
      limit: 1000
- name: search_messages
  endpoint:
    path: /guilds/{guild_id}/messages/search
    method: GET
- name: prune_members
  endpoint:
    path: /guilds/{guild_id}/prune
    method: POST
- name: templates
  endpoint:
    path: /guilds/{guild_id}/templates
    method: GET
- name: webhooks
  endpoint:
    path: /guilds/{guild_id}/webhooks
    method: GET
- name: estimate_pruned_members
  endpoint:
    path: /guilds/{guild_id}/prune/estimate
    method: GET
- name: invites
  endpoint:
    path: /guilds/{guild_id}/invites
    method: GET
- name: create_template
  endpoint:
    path: /guilds/{guild_id}/templates
    method: POST
- name: create_integration
  endpoint:
    path: /guilds/{guild_id}/integrations
    method: POST
- name: integrations
  endpoint:
    path: /guilds/{guild_id}/integrations
    method: GET
- name: application_commands
  endpoint:
    path: /guilds/{guild_id}/applications/{application_id}/commands
    method: GET
- name: fetch_stickers
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
- name: fetch_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers/{sticker_id}
    method: GET
- name: welcome_screen
  endpoint:
    path: /guilds/{guild.id}/welcome-screen
    method: GET
    data_selector: welcome_screen
    params: {}
- name: applications
  endpoint:
    path: /guilds/{guild.id}/applications
    method: GET
    data_selector: applications
    params: {}
- name: premium_subscriptions
  endpoint:
    path: /guilds/{guild.id}/premium-subscriptions
    method: GET
    data_selector: premium_subscriptions
    params: {}
- name: price_tiers
  endpoint:
    path: /guilds/{guild.id}/price-tiers
    method: GET
    data_selector: price_tiers
    params: {}
- name: create_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: POST
    data_selector: sticker
    params: {}
- name: delete_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers/{sticker_id}
    method: DELETE
    data_selector: sticker
    params: {}
- name: subscribed_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events/subscribed
    method: GET
    data_selector: scheduled_events
    params: {}
- name: fetch_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: GET
    data_selector: scheduled_events
    params:
      with_counts: true
- name: fetch_scheduled_event
  endpoint:
    path: /guilds/{guild_id}/scheduled-events/{scheduled_event_id}
    method: GET
    data_selector: scheduled_event
    params:
      with_counts: true
- name: create_scheduled_event
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: POST
    data_selector: scheduled_event
    params: {}
- name: top_emojis
  endpoint:
    path: /guilds/{guild_id}/emojis/top
    method: GET
    data_selector: emojis
    params: {}
- name: fetch_emojis
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: GET
    data_selector: emojis
    params: {}
- name: fetch_emoji
  endpoint:
    path: /guilds/{guild_id}/emojis/{emoji_id}
    method: GET
    data_selector: emoji
    params: {}
- name: create_custom_emoji
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: POST
    data_selector: emoji
    params: {}
- name: delete_emoji
  endpoint:
    path: /guilds/{guild_id}/emojis/{emoji_id}
    method: DELETE
    data_selector: emoji
    params: {}
- name: fetch_roles
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
    params: {}
- name: fetch_role
  endpoint:
    path: /guilds/{guild_id}/roles/{role_id}
    method: GET
    data_selector: role
    params: {}
- name: create_role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: POST
    data_selector: role
    params: {}
- name: applications
  endpoint:
    path: /guild/applications
    method: GET
    data_selector: applications
- name: premium_subscriptions
  endpoint:
    path: /guild/premium_subscriptions
    method: GET
    data_selector: premium_subscriptions
- name: price_tiers
  endpoint:
    path: /guild/price_tiers
    method: GET
    data_selector: price_tiers
- name: entitlements
  endpoint:
    path: /guild/entitlements
    method: GET
    data_selector: entitlements
- name: automod_rules
  endpoint:
    path: /guilds/{guild_id}/automod/rules
    method: GET
    data_selector: automod_rules
- name: fetch_automod_rule
  endpoint:
    path: /guilds/{guild_id}/automod/rules/{automod_rule_id}
    method: GET
    data_selector: automod_rule
- name: create_automod_rule
  endpoint:
    path: /guilds/{guild_id}/automod/rules
    method: POST
    data_selector: automod_rule
- name: admin_community_eligibility
  endpoint:
    path: /guilds/{guild_id}/admin/community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /guilds/{guild_id}/admin/community/join
    method: POST
    data_selector: community
- name: migrate_command_scope
  endpoint:
    path: /guilds/{guild_id}/migrate/command_scope
    method: POST
    data_selector: migrated_integration_ids
- name: directory_broadcast_eligibility
  endpoint:
    path: /guilds/{guild_id}/directory/broadcast/eligibility
    method: GET
    data_selector: broadcast_eligibility
- name: invites_paused
  endpoint:
    path: /guilds/{guild_id}/invites/paused
    method: GET
    data_selector: invites_paused
- name: dms_paused
  endpoint:
    path: /guilds/{guild_id}/dms/paused
    method: GET
    data_selector: dms_paused
- name: is_dm_spam_detected
  endpoint:
    path: /guilds/{guild_id}/dm/spam/detected
    method: GET
    data_selector: dm_spam_detected
- name: is_raid_detected
  endpoint:
    path: /guilds/{guild_id}/raid/detected
    method: GET
    data_selector: raid_detected
- name: ban_entry
  endpoint:
    path: /guilds/{guild.id}/bans
    method: GET
    data_selector: bans
    params: {}
- name: bulk_ban_result
  endpoint:
    path: /guilds/{guild.id}/bans
    method: POST
    data_selector: bulkBanResult
    params: {}
- name: automod_rules
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: fetch_automod_rule
  endpoint:
    path: /automod/rules/{automod_rule_id}
    method: GET
    data_selector: rule
- name: create_automod_rule
  endpoint:
    path: /automod/rules
    method: POST
    data_selector: rule
- name: admin_community_eligibility
  endpoint:
    path: /admin/community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /admin/community/join
    method: POST
    data_selector: join_result
- name: migrate_command_scope
  endpoint:
    path: /command/scope/migrate
    method: POST
    data_selector: migrated_ids
- name: directory_broadcast_eligibility
  endpoint:
    path: /directory/broadcast/eligibility
    method: GET
    data_selector: eligibility
- name: invites_paused
  endpoint:
    path: /invites/paused
    method: GET
    data_selector: paused
- name: dms_paused
  endpoint:
    path: /dms/paused
    method: GET
    data_selector: paused
- name: AutoModRule
  endpoint:
    path: /discord/automod/rules
    method: GET
    data_selector: rules
    params: {}
- name: ban_entry
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: bans
    params: {}
- name: bulk_ban_result
  endpoint:
    path: /guilds/{guild_id}/bans/bulk
    method: POST
    data_selector: banned
    params: {}
- name: role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
    params: {}
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
    data_selector: mutual_friends
- name: fetch_note
  endpoint:
    path: /fetch_note
    method: GET
    data_selector: note
- name: delete_note
  endpoint:
    path: /delete_note
    method: DELETE
    data_selector: delete_note
- name: member
  endpoint:
    path: /members
    method: GET
    data_selector: members
    params: {}
- name: member_profile
  endpoint:
    path: /members/profile
    method: GET
    data_selector: member_profile
    params: {}
- name: member_profile
  endpoint:
    path: /api/v2/members
    method: GET
    data_selector: data
    params: {}
- name: member_profile
  endpoint:
    path: /guilds/{guild_id}/members/{user_id}
    method: GET
    data_selector: member
    params: {}
- name: member_profile
  endpoint:
    path: /discord/member/profile
    method: GET
    data_selector: records
    params: {}
- name: PartialEmoji
  endpoint:
    path: /emoji/partial
    method: GET
    data_selector: data
    params: {}
- name: Sticker
  endpoint:
    path: /sticker
    method: GET
    data_selector: data
    params: {}
- name: StickerPack
  endpoint:
    path: /sticker/pack
    method: GET
    data_selector: data
    params: {}
- name: guild_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
    data_selector: stickers
    params: {}
- name: category_channel
  endpoint:
    path: /channels/{channel_id}/categories
    method: GET
    data_selector: categories
    params: {}
- name: forums
  endpoint:
    path: /forums
    method: GET
- name: directory_channels
  endpoint:
    path: /directory_channels
    method: GET
- name: directories
  endpoint:
    path: /directories
    method: GET
- name: text_channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: channel
    params: {}
- name: guild_avatar_decoration
  endpoint:
    path: /guild_avatar_decoration
    method: GET
    data_selector: Asset
- name: guild_avatar_decoration_expires_at
  endpoint:
    path: /guild_avatar_decoration_expires_at
    method: GET
    data_selector: datetime.datetime
- name: guild_avatar_decoration_sku_id
  endpoint:
    path: /guild_avatar_decoration_sku_id
    method: GET
    data_selector: int
- name: guild_banner
  endpoint:
    path: /guild_banner
    method: GET
    data_selector: Asset
- name: guild_permissions
  endpoint:
    path: /guild_permissions
    method: GET
    data_selector: Permissions
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: asynchronous iterator
    params:
      limit: 100
- name: is_blocked
  endpoint:
    path: /is_blocked
    method: GET
    data_selector: bool
- name: is_blocker
  endpoint:
    path: /is_blocker
    method: GET
    data_selector: bool
- name: is_friend
  endpoint:
    path: /is_friend
    method: GET
    data_selector: bool
- name: is_on_mobile
  endpoint:
    path: /is_on_mobile
    method: GET
    data_selector: bool
- name: is_pomelo
  endpoint:
    path: /is_pomelo
    method: GET
    data_selector: bool
- name: is_timed_out
  endpoint:
    path: /is_timed_out
    method: GET
    data_selector: bool
- name: mention
  endpoint:
    path: /mention
    method: GET
    data_selector: str
- name: mobile_status
  endpoint:
    path: /mobile_status
    method: GET
    data_selector: Status
- name: mutual_friends_count
  endpoint:
    path: /mutual_friends_count
    method: GET
    data_selector: int
- name: name
  endpoint:
    path: /name
    method: GET
    data_selector: User.name
- name: premium
  endpoint:
    path: /premium
    method: GET
    data_selector: bool
- name: public_flags
  endpoint:
    path: /public_flags
    method: GET
    data_selector: User.public_flags
- name: raw_status
  endpoint:
    path: /raw_status
    method: GET
    data_selector: str
- name: relationship
  endpoint:
    path: /relationship
    method: GET
    data_selector: User.relationship
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: list
- name: archived_threads
  endpoint:
    path: /channels/{channel_id}/threads/archived
    method: GET
    data_selector: threads
    params:
      limit: '100'
      before: null
      private: false
      joined: false
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: '100'
      before: null
      after: null
      around: null
      oldest_first: false
- name: notification_settings
  endpoint:
    path: /notification_settings
    method: GET
- name: overwrites
  endpoint:
    path: /overwrites
    method: GET
- name: overwrites_for
  endpoint:
    path: /overwrites_for
    method: GET
- name: permissions_synced
  endpoint:
    path: /permissions_synced
    method: GET
- name: pins
  endpoint:
    path: /pins
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
- name: send
  endpoint:
    path: /send
    method: POST
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
- name: PartialEmoji
  endpoint:
    path: /discord/PartialEmoji
    method: GET
    data_selector: records
- name: Sticker
  endpoint:
    path: /discord/Sticker
    method: GET
    data_selector: records
- name: StickerItem
  endpoint:
    path: /discord/StickerItem
    method: GET
    data_selector: records
- name: StickerPack
  endpoint:
    path: /discord/StickerPack
    method: GET
    data_selector: records
- name: StandardSticker
  endpoint:
    path: /discord/StandardSticker
    method: GET
    data_selector: records
- name: guild_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
    data_selector: stickers
- name: category_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: message
- name: partial_message
  endpoint:
    path: /messages/{message_id}/partial
    method: GET
    data_selector: partial_message
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
- name: purge
  endpoint:
    path: /channels/{channel_id}/messages
    method: DELETE
    data_selector: purged_messages
- name: forums
  endpoint:
    path: /forums
    method: GET
- name: directory_channels
  endpoint:
    path: /directory_channels
    method: GET
- name: directories
  endpoint:
    path: /directories
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /permissions
    method: POST
    data_selector: permissions
    params: {}
- name: channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: channel
    params: {}
- name: voice_states
  endpoint:
    path: /voice_states
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: stage_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: channel
    params: {}
- name: channel_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: channel_pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: read_state
  endpoint:
    path: /read_state
    method: GET
    data_selector: read_state
- name: scheduled_events
  endpoint:
    path: /scheduled_events
    method: GET
    data_selector: scheduled_events
- name: search_messages
  endpoint:
    path: /search
    method: GET
    data_selector: messages
- name: send_message
  endpoint:
    path: /send
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: commands
- name: voice_channel
  endpoint:
    path: /voice_channels
    method: GET
    data_selector: channels
- name: directory_channel
  endpoint:
    path: /discord/directory
    method: GET
    data_selector: entries
    params: {}
- name: channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: channel
    params: {}
- name: fetch_entries
  endpoint:
    path: /fetch_entries
    method: GET
    data_selector: entries
- name: search_entries
  endpoint:
    path: /search_entries
    method: GET
    data_selector: entries
- name: create_entry
  endpoint:
    path: /create_entry
    method: POST
    data_selector: entry
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
    data_selector: invite
- name: delete
  endpoint:
    path: /delete
    method: DELETE
- name: invites
  endpoint:
    path: /invites
    method: GET
    data_selector: active_invites
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: message
    params: {}
- name: partial_message
  endpoint:
    path: /messages/partial/{message_id}
    method: GET
    data_selector: partial_message
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: forum_channel
  endpoint:
    path: /discord/forum_channel
    method: GET
    data_selector: forum_channels
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /messages
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /permissions
    method: POST
    data_selector: permissions
    params: {}
- name: permissions_synced
  endpoint:
    params: {}
- name: set_permissions
  endpoint:
    params:
      target: Union[Member, Role]
      overwrite: Optional[PermissionOverwrite]
      permissions: keyword arguments
      reason: Optional[str]
- name: voice_states
  endpoint:
    path: /voice_states
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: purge
  endpoint:
    path: /purge
    method: DELETE
    data_selector: deleted_messages
    params:
      limit: 100
- name: requested_at
  endpoint:
    path: /discord/DMChannel/requested_at
    method: GET
- name: is_message_request
  endpoint:
    path: /discord/DMChannel/is_message_request
    method: GET
- name: is_accepted
  endpoint:
    path: /discord/DMChannel/is_accepted
    method: GET
- name: is_spam
  endpoint:
    path: /discord/DMChannel/is_spam
    method: GET
- name: permissions_for
  endpoint:
    path: /discord/DMChannel/permissions_for
    method: GET
- name: add_recipients
  endpoint:
    path: /discord/DMChannel/add_recipients
    method: POST
- name: close
  endpoint:
    path: /discord/DMChannel/close
    method: DELETE
- name: connect
  endpoint:
    path: /discord/DMChannel/connect
    method: POST
- name: accept
  endpoint:
    path: /discord/DMChannel/accept
    method: POST
- name: decline
  endpoint:
    path: /discord/DMChannel/decline
    method: POST
- name: ack
  endpoint:
    path: /discord/DMChannel/ack
    method: POST
- name: ack_pins
  endpoint:
    path: /discord/DMChannel/ack_pins
    method: POST
- name: application_commands
  endpoint:
    path: /discord/DMChannel/application_commands
    method: GET
- name: fetch_message
  endpoint:
    path: /discord/DMChannel/fetch_message
    method: GET
- name: greet
  endpoint:
    path: /discord/DMChannel/greet
    method: POST
- name: history
  endpoint:
    path: /discord/DMChannel/history
    method: GET
- name: pins
  endpoint:
    path: /discord/DMChannel/pins
    method: GET
- name: search
  endpoint:
    path: /discord/DMChannel/search
    method: GET
- name: read_state
  endpoint:
    path: /read_state
    method: GET
    data_selector: read_state
- name: scheduled_events
  endpoint:
    path: /scheduled_events
    method: GET
    data_selector: scheduled_events
- name: search_messages
  endpoint:
    path: /search
    method: GET
    data_selector: messages
- name: send_message
  endpoint:
    path: /send
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /permissions
    method: POST
    data_selector: permissions
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: commands
- name: message_search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: POST
    data_selector: messages
    params: {}
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: unacknowledge_messages
  endpoint:
    path: /channels/{channel_id}/messages/unack
    method: POST
    data_selector: unacknowledged
    params: {}
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages/files
    method: POST
    data_selector: uploaded_files
    params: {}
- name: directory_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: entries
- name: forum_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /connect
    method: POST
    data_selector: voice_client
- name: ack
  endpoint:
    path: /ack
    method: POST
    data_selector: ack_status
- name: ack_pins
  endpoint:
    path: /ack_pins
    method: POST
    data_selector: pin_status
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
    data_selector: commands
- name: fetch_message
  endpoint:
    path: /fetch_message/{id}
    method: GET
    data_selector: message
- name: greet
  endpoint:
    path: /greet
    method: POST
    data_selector: greeting
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: message_history
    params:
      limit: 100
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pinned_messages
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: search_results
    params:
      limit: 25
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: unacknowledge_channel
  endpoint:
    path: /channels/{channel_id}/messages/unack
    method: POST
    data_selector: unacknowledged
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages/files
    method: POST
    data_selector: uploaded_files
- name: permissions_synced
  endpoint:
    path: /permissions_synced
    method: GET
    data_selector: permissions_synced
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: set_permissions
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: /slash/commands
    method: GET
    data_selector: commands
    params: {}
- name: requested_at
  endpoint:
    path: /discord/DMChannel/requested_at
    method: GET
- name: is_message_request
  endpoint:
    path: /discord/DMChannel/is_message_request
    method: GET
- name: is_accepted
  endpoint:
    path: /discord/DMChannel/is_accepted
    method: GET
- name: is_spam
  endpoint:
    path: /discord/DMChannel/is_spam
    method: GET
- name: permissions_for
  endpoint:
    path: /discord/DMChannel/permissions_for
    method: GET
- name: add_recipients
  endpoint:
    path: /discord/DMChannel/add_recipients
    method: POST
- name: get_partial_message
  endpoint:
    path: /discord/DMChannel/get_partial_message
    method: GET
- name: close
  endpoint:
    path: /discord/DMChannel/close
    method: DELETE
- name: connect
  endpoint:
    path: /discord/DMChannel/connect
    method: POST
- name: accept
  endpoint:
    path: /discord/DMChannel/accept
    method: POST
- name: decline
  endpoint:
    path: /discord/DMChannel/decline
    method: POST
- name: ack
  endpoint:
    path: /discord/DMChannel/ack
    method: POST
- name: ack_pins
  endpoint:
    path: /discord/DMChannel/ack_pins
    method: POST
- name: application_commands
  endpoint:
    path: /discord/DMChannel/application_commands
    method: GET
- name: fetch_message
  endpoint:
    path: /discord/DMChannel/fetch_message
    method: GET
- name: greet
  endpoint:
    path: /discord/DMChannel/greet
    method: POST
- name: history
  endpoint:
    path: /discord/DMChannel/history
    method: GET
- name: pins
  endpoint:
    path: /discord/DMChannel/pins
    method: GET
- name: search
  endpoint:
    path: /discord/DMChannel/search
    method: GET
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: unacknowledge_messages
  endpoint:
    path: /channels/{channel_id}/unack
    method: POST
    data_selector: unacknowledged
    params: {}
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/upload_files
    method: POST
    data_selector: uploaded_files
    params: {}
- name: message_send
  endpoint:
    path: /send
    method: POST
    data_selector: message
- name: message_unack
  endpoint:
    path: /unack
    method: POST
    data_selector: status
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
    data_selector: uploaded_files
- name: stage_instance
  endpoint:
    path: /stage_instance
    method: GET
    data_selector: stage_instances
    params: {}
- name: create_invite
  endpoint:
    path: /channels/{channel_id}/invites
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /voice/{channel_id}/connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
      cls: VoiceClient
      ring: true
- name: ack
  endpoint:
    path: /channels/{channel_id}/ack
    method: POST
    data_selector: ack
    params: {}
- name: ack_pins
  endpoint:
    path: /channels/{channel_id}/ack_pins
    method: POST
    data_selector: ack_pins
    params: {}
- name: fetch_message
  endpoint:
    path: /channels/{channel_id}/messages/{id}
    method: GET
    data_selector: message
    params: {}
- name: greet
  endpoint:
    path: /channels/{channel_id}/greet
    method: POST
    data_selector: greet
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: search_results
    params:
      limit: 25
      most_relevant: false
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: unacknowledge_messages
  endpoint:
    path: /channels/{channel_id}/messages/unack
    method: POST
    data_selector: unacknowledged
    params: {}
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages/files
    method: POST
    data_selector: uploaded_files
    params: {}
- name: attachment
  endpoint:
    path: /attachments
    method: GET
    data_selector: attachments
- name: message_reference
  endpoint:
    path: /messages/references
    method: GET
    data_selector: references
- name: deleted_referenced_message
  endpoint:
    path: /deleted_messages
    method: GET
    data_selector: deleted_messages
- name: message_snapshot
  endpoint:
    path: /message_snapshots
    method: GET
    data_selector: snapshots
- name: role_subscription_info
  endpoint:
    path: /role_subscription
    method: GET
    data_selector: role_subscription_info
- name: purchase_notification
  endpoint:
    path: /purchase_notifications
    method: GET
    data_selector: purchase_notifications
- name: guild_product_purchase
  endpoint:
    path: /guild_product_purchases
    method: GET
    data_selector: guild_product_purchases
- name: ActionRow
  endpoint:
    path: /discord/components/action-row
    method: GET
    data_selector: components
- name: Button
  endpoint:
    path: /discord/components/button
    method: GET
    data_selector: components
- name: SelectMenu
  endpoint:
    path: /discord/components/select-menu
    method: GET
    data_selector: components
- name: TextInput
  endpoint:
    path: /discord/components/text-input
    method: GET
    data_selector: components
- name: invite
  endpoint:
    path: /invites
    method: GET
    data_selector: invites
    params: {}
- name: invite
  endpoint:
    path: /invite
    method: GET
    data_selector: invites
    params: {}
- name: messages
  endpoint:
    path: /api/v2/messages
    method: GET
    data_selector: results
    params: {}
- name: stage_instance
  endpoint:
    path: /stage-instance
    method: GET
    data_selector: records
- name: private_call
  endpoint:
    path: /private-call
    method: GET
    data_selector: records
- name: group_call
  endpoint:
    path: /group-call
    method: GET
    data_selector: records
- name: message
  endpoint:
    path: /discord/api/message
    method: GET
    data_selector: records
- name: invite
  endpoint:
    path: /invites/{invite}
    method: DELETE
    data_selector: deleted_invite
- name: fetch_widget
  endpoint:
    path: /guilds/{guild_id}/widget
    method: GET
    data_selector: widget
- name: fetch_user
  endpoint:
    path: /users/{user_id}
    method: GET
    data_selector: user
- name: fetch_user_profile
  endpoint:
    path: /users/{user_id}/profile
    method: GET
    data_selector: profile
- name: fetch_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: channel
- name: fetch_webhook
  endpoint:
    path: /webhooks/{webhook_id}
    method: GET
    data_selector: webhook
- name: fetch_sticker
  endpoint:
    path: /stickers/{sticker_id}
    method: GET
    data_selector: sticker
- name: sticker_packs
  endpoint:
    path: /sticker-packs
    method: GET
    data_selector: sticker_packs
- name: fetch_notes
  endpoint:
    path: /users/@me/notes
    method: GET
    data_selector: notes
- name: fetch_connections
  endpoint:
    path: /users/@me/connections
    method: GET
    data_selector: connections
- name: fetch_private_channels
  endpoint:
    path: /users/@me/channels
    method: GET
    data_selector: private_channels
- name: fetch_settings
  endpoint:
    path: /users/@me/settings
    method: GET
    data_selector: settings
- name: applications
  endpoint:
    path: /applications
    method: POST
    data_selector: application
    params: {}
- name: teams
  endpoint:
    path: /teams
    method: POST
    data_selector: team
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: reaction
  endpoint:
    path: /reaction
    method: GET
    data_selector: records
    params: {}
- name: interaction
  endpoint:
    path: /interactions
    method: POST
    data_selector: interaction
- name: component
  endpoint:
    path: /components
    method: GET
    data_selector: components
- name: File
  endpoint:
    path: /discord/File
    method: GET
    data_selector: attributes
- name: CloudFile
  endpoint:
    path: /discord/CloudFile
    method: GET
    data_selector: attributes
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
- name: library
  endpoint:
    path: /library
    method: GET
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
- name: fetch_entitlements
  endpoint:
    path: /fetch_entitlements
    method: GET
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
- name: commands
  endpoint:
    path: /commands
    method: GET
    data_selector: commands
- name: notification_settings
  endpoint:
    path: /notification_settings
    method: GET
    data_selector: notification_settings
- name: owner
  endpoint:
    path: /owner
    method: GET
    data_selector: owner
- name: call
  endpoint:
    path: /call
    method: GET
    data_selector: call
- name: type
  endpoint:
    path: /type
    method: GET
    data_selector: type
- name: guild
  endpoint:
    path: /guild
    method: GET
    data_selector: guild
- name: icon
  endpoint:
    path: /icon
    method: GET
    data_selector: icon
- name: origin_channel
  endpoint:
    path: /origin_channel
    method: GET
    data_selector: origin_channel
- name: created_at
  endpoint:
    path: /created_at
    method: GET
    data_selector: created_at
- name: jump_url
  endpoint:
    path: /jump_url
    method: GET
    data_selector: jump_url
- name: read_state
  endpoint:
    path: /read_state
    method: GET
    data_selector: read_state
- name: last_message
  endpoint:
    path: /last_message
    method: GET
    data_selector: last_message
- name: acked_message_id
  endpoint:
    path: /acked_message_id
    method: GET
    data_selector: acked_message_id
- name: acked_message
  endpoint:
    path: /acked_message
    method: GET
    data_selector: acked_message
- name: acked_pin_timestamp
  endpoint:
    path: /acked_pin_timestamp
    method: GET
    data_selector: acked_pin_timestamp
- name: mention_count
  endpoint:
    path: /mention_count
    method: GET
    data_selector: mention_count
- name: last_viewed_timestamp
  endpoint:
    path: /last_viewed_timestamp
    method: GET
    data_selector: last_viewed_timestamp
- name: permissions_for
  endpoint:
    path: /permissions_for
    method: POST
    data_selector: permissions
- name: add_recipients
  endpoint:
    path: /add_recipients
    method: POST
    data_selector: recipients
- name: remove_recipients
  endpoint:
    path: /remove_recipients
    method: POST
    data_selector: recipients
- name: edit
  endpoint:
    path: /edit
    method: PATCH
    data_selector: edited_channel
- name: leave
  endpoint:
    path: /leave
    method: POST
    data_selector: leave_status
- name: close
  endpoint:
    path: /close
    method: POST
    data_selector: close_status
- name: invites
  endpoint:
    path: /invites
    method: GET
    data_selector: invites
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
    data_selector: invite
- name: connect
  endpoint:
    path: /connect
    method: POST
    data_selector: voice_client
- name: ack
  endpoint:
    path: /ack
    method: POST
    data_selector: ack_status
- name: ack_pins
  endpoint:
    path: /ack_pins
    method: POST
    data_selector: ack_pins_status
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
    data_selector: application_commands
- name: fetch_message
  endpoint:
    path: /fetch_message
    method: GET
    data_selector: message
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: sku_subscription_plans
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: skus_subscription_plans
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: eula
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: recent_mentions
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: delete_recent_mention
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: join_active_developer_program
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: leave_active_developer_program
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: report_unverified_application
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
- name: AudioSource
  endpoint:
    path: /AudioSource
    method: GET
    data_selector: audio_stream
    params: {}
- name: PCMAudio
  endpoint:
    path: /PCMAudio
    method: GET
    data_selector: raw_pcm_audio
    params: {}
- name: FFmpegAudio
  endpoint:
    path: /FFmpegAudio
    method: GET
    data_selector: ffmpeg_audio
    params: {}
- name: FFmpegPCMAudio
  endpoint:
    path: /FFmpegPCMAudio
    method: GET
    data_selector: ffmpeg_pcm_audio
    params: {}
- name: FFmpegOpusAudio
  endpoint:
    path: /FFmpegOpusAudio
    method: GET
    data_selector: ffmpeg_opus_audio
    params: {}
- name: fetch_guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: UserGuild
    params:
      with_counts: true
- name: fetch_guild
  endpoint:
    path: /guilds/{guild_id}
    method: GET
    data_selector: Guild
    params:
      with_counts: true
- name: create_guild
  endpoint:
    path: /guilds
    method: POST
    data_selector: Guild
    params: {}
- name: join_guild
  endpoint:
    path: /guilds/{guild_id}/join
    method: POST
    data_selector: Guild
    params:
      lurking: false
- name: leave_guild
  endpoint:
    path: /guilds/{guild_id}/leave
    method: POST
    data_selector: Guild
    params:
      lurking: false
- name: fetch_invite
  endpoint:
    path: /invites/{url}
    method: GET
    data_selector: Invite
    params:
      with_counts: true
- name: invite
  endpoint:
    path: /invites/{invite}
    method: DELETE
    data_selector: deleted_invite
- name: fetch_widget
  endpoint:
    path: /guilds/{guild_id}/widget
    method: GET
    data_selector: widget
- name: fetch_user
  endpoint:
    path: /users/{user_id}
    method: GET
    data_selector: user
- name: fetch_user_profile
  endpoint:
    path: /users/{user_id}/profile
    method: GET
    data_selector: profile
- name: fetch_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: channel
- name: fetch_webhook
  endpoint:
    path: /webhooks/{webhook_id}
    method: GET
    data_selector: webhook
- name: fetch_sticker
  endpoint:
    path: /stickers/{sticker_id}
    method: GET
    data_selector: sticker
- name: sticker_packs
  endpoint:
    path: /sticker-packs
    method: GET
    data_selector: sticker_packs
- name: fetch_notes
  endpoint:
    path: /users/@me/notes
    method: GET
    data_selector: notes
- name: fetch_connections
  endpoint:
    path: /users/@me/connections
    method: GET
    data_selector: connections
- name: fetch_private_channels
  endpoint:
    path: /users/@me/channels
    method: GET
    data_selector: private_channels
- name: fetch_settings
  endpoint:
    path: /users/@me/settings
    method: GET
    data_selector: settings
- name: email_settings
  endpoint:
    path: /users/@me/email-settings
    method: GET
    data_selector: email_settings
- name: fetch_tracking_settings
  endpoint:
    path: /users/@me/tracking-settings
    method: GET
    data_selector: tracking_settings
- name: guild_settings_update
  endpoint:
    path: /guilds/settings/update
    method: POST
    data_selector: guildSettings
    params: {}
- name: payment_sources_update
  endpoint:
    path: /payment/sources/update
    method: POST
    data_selector: paymentSources
    params: {}
- name: subscriptions_update
  endpoint:
    path: /subscriptions/update
    method: POST
    data_selector: subscriptions
    params: {}
- name: payment_client_add
  endpoint:
    path: /payment/client/add
    method: POST
    data_selector: paymentClient
    params: {}
- name: premium_guild_subscription_slot_create
  endpoint:
    path: /premium/guild/subscription/slot/create
    method: POST
    data_selector: premiumGuildSubscriptionSlot
    params: {}
- name: premium_guild_subscription_slot_update
  endpoint:
    path: /premium/guild/subscription/slot/update
    method: POST
    data_selector: premiumGuildSubscriptionSlot
    params: {}
- name: billing_popup_bridge_callback
  endpoint:
    path: /billing/popup/bridge/callback
    method: POST
    data_selector: billingPopup
    params: {}
- name: library_application_update
  endpoint:
    path: /library/application/update
    method: POST
    data_selector: libraryApplication
    params: {}
- name: entitlement_create
  endpoint:
    path: /entitlement/create
    method: POST
    data_selector: entitlement
    params: {}
- name: entitlement_update
  endpoint:
    path: /entitlement/update
    method: POST
    data_selector: entitlement
    params: {}
- name: entitlement_delete
  endpoint:
    path: /entitlement/delete
    method: POST
    data_selector: entitlement
    params: {}
- name: gift_create
  endpoint:
    path: /gift/create
    method: POST
    data_selector: gift
    params: {}
- name: gift_update
  endpoint:
    path: /gift/update
    method: POST
    data_selector: gift
    params: {}
- name: connections_update
  endpoint:
    path: /connections/update
    method: POST
    data_selector: connections
    params: {}
- name: connection_create
  endpoint:
    path: /connection/create
    method: POST
    data_selector: connection
    params: {}
- name: connection_update
  endpoint:
    path: /connection/update
    method: POST
    data_selector: connection
    params: {}
- name: relationship_add
  endpoint:
    path: /relationship/add
    method: POST
    data_selector: relationship
    params: {}
- name: relationship_remove
  endpoint:
    path: /relationship/remove
    method: POST
    data_selector: relationship
    params: {}
- name: relationship_update
  endpoint:
    path: /relationship/update
    method: POST
    data_selector: relationship
    params: {}
- name: friend_suggestion_add
  endpoint:
    path: /friend/suggestion/add
    method: POST
    data_selector: friendSuggestion
    params: {}
- name: friend_suggestion_remove
  endpoint:
    path: /friend/suggestion/remove
    method: POST
    data_selector: user
    params: {}
- name: note_update
  endpoint:
    path: /note/update
    method: POST
    data_selector: note
    params: {}
- name: fetch_relationships
  endpoint:
    path: /fetch_relationships
    method: GET
- name: friend_suggestions
  endpoint:
    path: /friend_suggestions
    method: GET
- name: fetch_country_code
  endpoint:
    path: /fetch_country_code
    method: GET
- name: fetch_location_info
  endpoint:
    path: /fetch_location_info
    method: GET
- name: fetch_preferred_rtc_regions
  endpoint:
    path: /fetch_preferred_rtc_regions
    method: GET
- name: create_dm
  endpoint:
    path: /create_dm
    method: POST
- name: create_group
  endpoint:
    path: /create_group
    method: POST
- name: send_friend_request
  endpoint:
    path: /send_friend_request
    method: POST
- name: applications
  endpoint:
    path: /applications
    method: GET
- name: detectable_applications
  endpoint:
    path: /detectable_applications
    method: GET
- name: fetch_application
  endpoint:
    path: /fetch_application
    method: GET
- name: fetch_partial_application
  endpoint:
    path: /fetch_partial_application
    method: GET
- name: fetch_public_application
  endpoint:
    path: /fetch_public_application
    method: GET
- name: fetch_public_applications
  endpoint:
    path: /fetch_public_applications
    method: GET
- name: teams
  endpoint:
    path: /teams
    method: GET
- name: fetch_team
  endpoint:
    path: /fetch_team
    method: GET
- name: create_application
  endpoint:
    path: /create_application
    method: POST
- name: create_team
  endpoint:
    path: /create_team
    method: POST
- name: search_companies
  endpoint:
    path: /search_companies
    method: GET
- name: fetch_company
  endpoint:
    path: /fetch_company
    method: GET
- name: activity_statistics
  endpoint:
    path: /activity_statistics
    method: GET
- name: global_activity_statistics
  endpoint:
    path: /global_activity_statistics
    method: GET
- name: payment_sources
  endpoint:
    path: /payment_sources
    method: GET
- name: fetch_payment_source
  endpoint:
    path: /fetch_payment_source
    method: GET
- name: create_payment_source
  endpoint:
    path: /create_payment_source
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: premium_guild_subscriptions
  endpoint:
    path: /premium_guild_subscriptions
    method: GET
- name: premium_guild_subscription_slots
  endpoint:
    path: /premium_guild_subscription_slots
    method: GET
- name: premium_guild_subscription_cooldown
  endpoint:
    path: /premium_guild_subscription_cooldown
    method: GET
- name: fetch_subscription
  endpoint:
    path: /fetch_subscription
    method: GET
- name: preview_subscription
  endpoint:
    path: /preview_subscription
    method: POST
- name: create_subscription
  endpoint:
    path: /create_subscription
    method: POST
- name: payments
  endpoint:
    path: /payments
    method: GET
- name: fetch_payment
  endpoint:
    path: /fetch_payment
    method: GET
- name: promotions
  endpoint:
    path: /promotions
    method: GET
- name: promotions
  endpoint:
    path: /promotions
    method: GET
    data_selector: promotions
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: user_offer
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: trial_offer
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: pricing_promotion
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: library
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: authorizations
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
    data_selector: giftable_entitlements
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
    data_selector: premium_entitlements
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
    data_selector: gift
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
    data_selector: sku
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
    data_selector: store_listing
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
    data_selector: published_store_listing
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
    data_selector: published_store_listings
- name: role_delete
  endpoint:
    path: /audit_logs/role_delete
    method: GET
- name: invite_create
  endpoint:
    path: /audit_logs/invite_create
    method: GET
- name: invite_update
  endpoint:
    path: /audit_logs/invite_update
    method: GET
- name: invite_delete
  endpoint:
    path: /audit_logs/invite_delete
    method: GET
- name: webhook_create
  endpoint:
    path: /audit_logs/webhook_create
    method: GET
- name: webhook_update
  endpoint:
    path: /audit_logs/webhook_update
    method: GET
- name: webhook_delete
  endpoint:
    path: /audit_logs/webhook_delete
    method: GET
- name: emoji_create
  endpoint:
    path: /audit_logs/emoji_create
    method: GET
- name: emoji_update
  endpoint:
    path: /audit_logs/emoji_update
    method: GET
- name: emoji_delete
  endpoint:
    path: /audit_logs/emoji_delete
    method: GET
- name: message_delete
  endpoint:
    path: /audit_logs/message_delete
    method: GET
- name: message_bulk_delete
  endpoint:
    path: /audit_logs/message_bulk_delete
    method: GET
- name: message_pin
  endpoint:
    path: /audit_logs/message_pin
    method: GET
- name: message_unpin
  endpoint:
    path: /audit_logs/message_unpin
    method: GET
- name: integration_create
  endpoint:
    path: /audit_logs/integration_create
    method: GET
- name: integration_update
  endpoint:
    path: /audit_logs/integration_update
    method: GET
- name: integration_delete
  endpoint:
    path: /audit_logs/integration_delete
    method: GET
- name: stage_instance_create
  endpoint:
    path: /audit_logs/stage_instance_create
    method: GET
- name: stage_instance_update
  endpoint:
    path: /audit_logs/stage_instance_update
    method: GET
- name: stage_instance_delete
  endpoint:
    path: /audit_logs/stage_instance_delete
    method: GET
- name: sticker_create
  endpoint:
    path: /audit_logs/sticker_create
    method: GET
- name: sticker_update
  endpoint:
    path: /audit_logs/sticker_update
    method: GET
- name: sticker_delete
  endpoint:
    path: /audit_logs/sticker_delete
    method: GET
- name: scheduled_event_create
  endpoint:
    path: /audit_logs/scheduled_event_create
    method: GET
- name: scheduled_event_update
  endpoint:
    path: /audit_logs/scheduled_event_update
    method: GET
- name: audit_log_diff
  endpoint:
    path: /guilds/{guild_id}/audit-logs
    method: GET
    data_selector: changes
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: message
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
    params: {}
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: sku_subscription_plans
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: skus_subscription_plans
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: eula
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: recent_mentions
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: delete_recent_mention
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: join_active_developer_program
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: leave_active_developer_program
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: report_unverified_application
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
- name: sync_webhook
  endpoint:
    path: /sync_webhook
    method: GET
    data_selector: webhook_data
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
    data_selector: waitlist_response
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
    data_selector: hubs
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
    data_selector: joined_hub
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
    data_selector: suggested_username
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
    data_selector: is_taken
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
    data_selector: avatars
- name: GuildChannel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
    params: {}
- name: AudioSource
  endpoint:
    path: /discord/AudioSource
    method: GET
    data_selector: records
- name: PCMAudio
  endpoint:
    path: /discord/PCMAudio
    method: GET
    data_selector: records
- name: FFmpegAudio
  endpoint:
    path: /discord/FFmpegAudio
    method: GET
    data_selector: records
- name: FFmpegPCMAudio
  endpoint:
    path: /discord/FFmpegPCMAudio
    method: GET
    data_selector: records
- name: FFmpegOpusAudio
  endpoint:
    path: /discord/FFmpegOpusAudio
    method: GET
    data_selector: records
- name: client_user
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
    params: {}
- name: message_send
  endpoint:
    path: /channels/{channel.id}/messages
    method: POST
    data_selector: message
    params: {}
- name: message_search
  endpoint:
    path: /channels/{channel.id}/messages/search
    method: GET
    data_selector: messages
    params: {}
- name: user_profile
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
- name: channel_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 200
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
- name: user_settings
  endpoint:
    path: /user/settings
    method: GET
- name: invite_create
  endpoint:
    path: on_invite_create
    method: CALL
    data_selector: invite
- name: invite_delete
  endpoint:
    path: on_invite_delete
    method: CALL
    data_selector: invite
- name: guild_feature_ack
  endpoint:
    path: on_guild_feature_ack
    method: CALL
    data_selector: payload
- name: integration_create
  endpoint:
    path: on_integration_create
    method: CALL
    data_selector: integration
- name: integration_update
  endpoint:
    path: on_integration_update
    method: CALL
    data_selector: integration
- name: guild_integrations_update
  endpoint:
    path: on_guild_integrations_update
    method: CALL
    data_selector: guild
- name: webhooks_update
  endpoint:
    path: on_webhooks_update
    method: CALL
    data_selector: channel
- name: raw_integration_delete
  endpoint:
    path: on_raw_integration_delete
    method: CALL
    data_selector: payload
- name: interaction
  endpoint:
    path: on_interaction
    method: CALL
    data_selector: interaction
- name: interaction_finish
  endpoint:
    path: on_interaction_finish
    method: CALL
    data_selector: interaction
- name: modal
  endpoint:
    path: on_modal
    method: CALL
    data_selector: modal
- name: member_join
  endpoint:
    path: on_member_join
    method: CALL
    data_selector: member
- name: member_remove
  endpoint:
    path: on_member_remove
    method: CALL
    data_selector: member
- name: raw_member_remove
  endpoint:
    path: on_raw_member_remove
    method: CALL
    data_selector: payload
- name: member_update
  endpoint:
    path: on_member_update
    method: CALL
    data_selector:
    - before
    - after
- name: user_update
  endpoint:
    path: on_user_update
    method: CALL
    data_selector:
    - before
    - after
- name: member_ban
  endpoint:
    path: on_member_ban
    method: CALL
    data_selector:
    - guild
    - user
- name: member_unban
  endpoint:
    path: on_member_unban
    method: CALL
    data_selector:
    - guild
    - user
- name: presence_update
  endpoint:
    path: on_presence_update
    method: CALL
    data_selector:
    - before
    - after
- name: raw_member_list_update
  endpoint:
    path: on_raw_member_list_update
    method: CALL
    data_selector: data
- name: message
  endpoint:
    path: on_message
    method: CALL
    data_selector: message
- name: message_edit
  endpoint:
    path: on_message_edit
    method: CALL
    data_selector:
    - before
    - after
- name: message_delete
  endpoint:
    path: on_message_delete
    method: CALL
    data_selector: message
- name: bulk_message_delete
  endpoint:
    path: on_bulk_message_delete
    method: CALL
    data_selector: messages
- name: message_ack
  endpoint:
    path: on_message_ack
    method: CALL
    data_selector:
    - message
    - manual
- name: raw_message_edit
  endpoint:
    path: on_raw_message_edit
    method: CALL
    data_selector: payload
- name: raw_message_delete
  endpoint:
    path: on_raw_message_delete
    method: CALL
    data_selector: payload
- name: raw_bulk_message_delete
  endpoint:
    path: on_raw_bulk_message_delete
    method: CALL
    data_selector: payload
- name: raw_message_ack
  endpoint:
    path: on_raw_message_ack
    method: CALL
    data_selector: payload
- name: recent_mention_delete
  endpoint:
    path: on_recent_mention_delete
    method: CALL
    data_selector: message
- name: raw_recent_mention_delete
  endpoint:
    path: on_raw_recent_mention_delete
    method: CALL
    data_selector: message_id
- name: poll_vote_add
  endpoint:
    path: on_poll_vote_add
    method: CALL
    data_selector:
    - user
    - answer
- name: poll_vote_remove
  endpoint:
    path: on_poll_vote_remove
    method: CALL
    data_selector:
    - user
    - answer
- name: raw_poll_vote_add
  endpoint:
    path: on_raw_poll_vote_add
    method: CALL
    data_selector: payload
- name: raw_poll_vote_remove
  endpoint:
    path: on_raw_poll_vote_remove
    method: CALL
    data_selector: payload
- name: current_game
  endpoint:
    path: /current_game
    method: GET
    data_selector: settings
- name: stream_notifications
  endpoint:
    path: /stream_notifications
    method: GET
    data_selector: settings
- name: timezone_offset
  endpoint:
    path: /timezone_offset
    method: GET
    data_selector: settings
- name: nsfw_commands
  endpoint:
    path: /nsfw_commands
    method: GET
    data_selector: settings
- name: nsfw_guilds
  endpoint:
    path: /nsfw_guilds
    method: GET
    data_selector: settings
- name: applications
  endpoint:
    path: /applications
    method: GET
- name: guilds
  endpoint:
    path: /guilds
    method: GET
- name: uploads_store_asset
  endpoint:
    path: /uploads/store_asset
    method: POST
    data_selector: asset
- name: skus
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    data_selector: sku
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
    data_selector: sku
- name: create_sku
  endpoint:
    path: /create_sku
    method: POST
    data_selector: sku
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: fetch_entitlement
  endpoint:
    path: /fetch_entitlement/{entitlement_id}
    method: GET
    data_selector: entitlement
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
- name: create_gift_batch
  endpoint:
    path: /create_gift_batch
    method: POST
    data_selector: gift_batch
- name: branches
  endpoint:
    path: /branches
    method: GET
    data_selector: branches
- name: create_branch
  endpoint:
    path: /create_branch
    method: POST
    data_selector: branch
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
    data_selector: manifest_labels
- name: fetch_discoverability
  endpoint:
    path: /fetch_discoverability
    method: GET
    data_selector: discoverability
- name: fetch_embedded_activity_config
  endpoint:
    path: /fetch_embedded_activity_config
    method: GET
    data_selector: embedded_activity_config
- name: edit_embedded_activity_config
  endpoint:
    path: /edit_embedded_activity_config
    method: POST
    data_selector: embedded_activity_config
- name: reaction_add
  endpoint:
    path: /discord/on_reaction_add
    method: GET
    data_selector: reaction
- name: reaction_remove
  endpoint:
    path: /discord/on_reaction_remove
    method: GET
    data_selector: reaction
- name: reaction_clear
  endpoint:
    path: /discord/on_reaction_clear
    method: GET
    data_selector: message
- name: reaction_clear_emoji
  endpoint:
    path: /discord/on_reaction_clear_emoji
    method: GET
    data_selector: reaction
- name: raw_reaction_add
  endpoint:
    path: /discord/on_raw_reaction_add
    method: GET
    data_selector: payload
- name: raw_reaction_remove
  endpoint:
    path: /discord/on_raw_reaction_remove
    method: GET
    data_selector: payload
- name: raw_reaction_clear
  endpoint:
    path: /discord/on_raw_reaction_clear
    method: GET
    data_selector: payload
- name: raw_reaction_clear_emoji
  endpoint:
    path: /discord/on_raw_reaction_clear_emoji
    method: GET
    data_selector: payload
- name: guild_role_create
  endpoint:
    path: /discord/on_guild_role_create
    method: GET
    data_selector: role
- name: guild_role_delete
  endpoint:
    path: /discord/on_guild_role_delete
    method: GET
    data_selector: role
- name: guild_role_update
  endpoint:
    path: /discord/on_guild_role_update
    method: GET
    data_selector: before
- name: scheduled_event_create
  endpoint:
    path: /discord/on_scheduled_event_create
    method: GET
    data_selector: event
- name: scheduled_event_delete
  endpoint:
    path: /discord/on_scheduled_event_delete
    method: GET
    data_selector: event
- name: scheduled_event_update
  endpoint:
    path: /discord/on_scheduled_event_update
    method: GET
    data_selector: before
- name: scheduled_event_user_add
  endpoint:
    path: /discord/on_scheduled_event_user_add
    method: GET
    data_selector: event
- name: scheduled_event_user_remove
  endpoint:
    path: /discord/on_scheduled_event_user_remove
    method: GET
    data_selector: event
- name: raw_scheduled_event_user_add
  endpoint:
    path: /discord/on_raw_scheduled_event_user_add
    method: GET
    data_selector: event
- name: raw_scheduled_event_user_remove
  endpoint:
    path: /discord/on_raw_scheduled_event_user_remove
    method: GET
    data_selector: event
- name: scheduled_event_ack
  endpoint:
    path: /discord/on_scheduled_event_ack
    method: GET
    data_selector: event
- name: stage_instance_create
  endpoint:
    path: /discord/on_stage_instance_create
    method: GET
    data_selector: stage_instance
- name: stage_instance_delete
  endpoint:
    path: /discord/on_stage_instance_delete
    method: GET
    data_selector: stage_instance
- name: stage_instance_update
  endpoint:
    path: /discord/on_stage_instance_update
    method: GET
    data_selector: before
- name: thread_create
  endpoint:
    path: /discord/on_thread_create
    method: GET
    data_selector: thread
- name: thread_join
  endpoint:
    path: /discord/on_thread_join
    method: GET
    data_selector: thread
- name: thread_update
  endpoint:
    path: /discord/on_thread_update
    method: GET
    data_selector: before
- name: thread_remove
  endpoint:
    path: /discord/on_thread_remove
    method: GET
    data_selector: thread
- name: thread_delete
  endpoint:
    path: /discord/on_thread_delete
    method: GET
    data_selector: thread
- name: raw_thread_delete
  endpoint:
    path: /discord/on_raw_thread_delete
    method: GET
    data_selector: payload
- name: thread_member_join
  endpoint:
    path: /discord/on_thread_member_join
    method: GET
    data_selector: member
- name: thread_member_remove
  endpoint:
    path: /discord/on_thread_member_remove
    method: GET
    data_selector: member
- name: raw_thread_member_remove
  endpoint:
    path: /discord/on_raw_thread_member_remove
    method: GET
    data_selector: payload
- name: voice_state_update
  endpoint:
    path: /discord/on_voice_state_update
    method: GET
    data_selector: member
- name: application_profile
  endpoint:
    path: /applications/@me
    method: GET
    data_selector: data
- name: application_bot
  endpoint:
    path: /applications/@me/bot
    method: GET
    data_selector: data
- name: audit_log_diff
  endpoint:
    path: /audit-log-diff
    method: GET
    data_selector: data
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
- name: application_branch
  endpoint:
    path: /applications/{application_id}/branches
    method: GET
- name: application_build
  endpoint:
    path: /applications/{application_id}/builds
    method: GET
- name: application_manifest
  endpoint:
    path: /applications/{application_id}/manifests
    method: GET
- name: application_team
  endpoint:
    path: /applications/{application_id}/teams
    method: GET
- name: team
  endpoint:
    path: /team
    method: GET
- name: message_commands
  endpoint:
    path: /webhook/messages/commands
    method: GET
    data_selector: commands
    params: {}
- name: unack
  endpoint:
    path: /webhook/messages/unack
    method: POST
    data_selector: message
    params: {}
- name: reply
  endpoint:
    path: /webhook/messages/reply
    method: POST
    data_selector: message
    params: {}
- name: connect
  endpoint:
    path: /connect
    method: POST
    data_selector: VoiceClient
    params:
      timeout: 30.0
      reconnect: true
      cls: VoiceClient
      self_deaf: false
      self_mute: false
- name: create_dm
  endpoint:
    path: /create_dm
    method: POST
    data_selector: DMChannel
    params: {}
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
    data_selector: User
    params: {}
- name: SyncWebhook
  endpoint:
    path: /webhooks
    method: POST
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: team_payout
  endpoint:
    path: /team_payout
    method: GET
    data_selector: payouts
    params: {}
- name: entitlement
  endpoint:
    path: /entitlement
    method: GET
    data_selector: entitlements
    params: {}
- name: Subscription
  endpoint:
    path: /discord/subscription
    method: GET
    data_selector: subscription
- name: user
  endpoint:
    path: /users/@me
    method: GET
- name: subscription_trial
  endpoint:
    path: /discord/SubscriptionTrial
    method: GET
    data_selector: trial
- name: premium_guild_subscription
  endpoint:
    path: /discord/PremiumGuildSubscription
    method: GET
    data_selector: subscription
- name: premium_guild_subscription_slot
  endpoint:
    path: /discord/PremiumGuildSubscriptionSlot
    method: GET
    data_selector: slot
- name: premium_guild_subscription_cooldown
  endpoint:
    path: /discord/PremiumGuildSubscriptionCooldown
    method: GET
    data_selector: cooldown
- name: subscription_plan
  endpoint:
    path: /discord/SubscriptionPlan
    method: GET
    data_selector: plan
- name: typing
  endpoint:
    path: /users/{user_id}/typing
    method: POST
    data_selector: typing_status
- name: application_commands
  endpoint:
    path: /users/{user_id}/application_commands
    method: GET
    data_selector: commands
- name: SubscriptionPlanPrices
  endpoint:
    path: /subscription_plan_prices
    method: GET
    data_selector: country_prices
    params: {}
- name: Payment
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
    params: {}
- name: SKU
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
    params: {}
- name: note
  endpoint:
    path: /user/note
    method: GET
    data_selector: note
- name: message
  endpoint:
    path: /user/message/{id}
    method: GET
    data_selector: message
- name: mutual_friends
  endpoint:
    path: /user/mutual_friends
    method: GET
    data_selector: mutual_friends
- name: pins
  endpoint:
    path: /user/pins
    method: GET
    data_selector: pins
- name: history
  endpoint:
    path: /user/history
    method: GET
    data_selector: history
- name: search
  endpoint:
    path: /user/search
    method: GET
    data_selector: search
- name: profile
  endpoint:
    path: /user/profile
    method: GET
    data_selector: profile
- name: store_listing
  endpoint:
    path: /store/listings
    method: GET
    data_selector: listings
    params: {}
- name: user_profile
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user_profile
- name: guild
  endpoint:
    path: /guilds/{guild.id}
    method: GET
    data_selector: guild
    params: {}
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: '200'
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: '25'
- name: guild
  endpoint:
    path: /guild
    method: GET
    data_selector: guild
    params: {}
- name: message
  endpoint:
    path: /messages
    method: POST
    data_selector: message
- name: user_profile
  endpoint:
    path: /users/{user_id}/profile
    method: GET
    data_selector: profile
- name: create_directory_channel
  endpoint:
    path: /channels/create-directory
    method: POST
    data_selector: channel
    params: {}
- name: create_forum
  endpoint:
    path: /channels/create-forum
    method: POST
    data_selector: forum
    params: {}
- name: create_forum_channel
  endpoint:
    path: /channels/create-forum-channel
    method: POST
    data_selector: forumChannel
    params: {}
- name: leave
  endpoint:
    path: /guilds/leave
    method: POST
    data_selector: leaveResponse
    params: {}
- name: delete
  endpoint:
    path: /guilds/delete
    method: DELETE
    data_selector: deleteResponse
    params: {}
- name: edit
  endpoint:
    path: /guilds/edit
    method: PATCH
    data_selector: editResponse
    params: {}
- name: PrimaryGuild
  endpoint:
    path: /discord/PrimaryGuild
    method: GET
    data_selector: records
- name: DisplayNameStyle
  endpoint:
    path: /discord/DisplayNameStyle
    method: GET
    data_selector: records
- name: UserAffinity
  endpoint:
    path: /discord/UserAffinity
    method: GET
    data_selector: records
- name: GuildAffinity
  endpoint:
    path: /discord/GuildAffinity
    method: GET
    data_selector: records
- name: ChannelAffinity
  endpoint:
    path: /discord/ChannelAffinity
    method: GET
    data_selector: records
- name: BillingAddress
  endpoint:
    path: /discord/BillingAddress
    method: GET
    data_selector: records
- name: PaymentSource
  endpoint:
    path: /discord/PaymentSource
    method: GET
    data_selector: records
- name: PremiumUsage
  endpoint:
    path: /discord/PremiumUsage
    method: GET
    data_selector: records
- name: bans
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: ban_entries
    params:
      limit: 1000
- name: FriendSuggestionReason
  endpoint:
    path: /FriendSuggestionReason
    method: GET
- name: UserSettings
  endpoint:
    path: /UserSettings
    method: GET
- name: current_game
  endpoint:
    path: /current_game
    method: GET
    data_selector: show_current_game
    params: {}
- name: stream_notifications
  endpoint:
    path: /stream_notifications
    method: GET
    data_selector: stream_notifications_enabled
    params: {}
- name: timezone
  endpoint:
    path: /timezone
    method: GET
    data_selector: timezone_offset
    params: {}
- name: nsfw_commands
  endpoint:
    path: /nsfw_commands
    method: GET
    data_selector: view_nsfw_commands
    params: {}
- name: nsfw_guilds
  endpoint:
    path: /nsfw_guilds
    method: GET
    data_selector: view_nsfw_guilds
    params: {}
- name: welcome_screen
  endpoint:
    path: /guilds/{guild.id}/welcome-screen
    method: GET
    data_selector: welcome_screen
- name: applications
  endpoint:
    path: /guilds/{guild.id}/applications
    method: GET
    data_selector: applications
- name: premium_subscriptions
  endpoint:
    path: /guilds/{guild.id}/premium-subscriptions
    method: GET
    data_selector: premium_subscriptions
- name: price_tiers
  endpoint:
    path: /guilds/{guild.id}/price-tiers
    method: GET
    data_selector: price_tiers
- name: application
  endpoint:
    path: /applications
    method: GET
    data_selector: applications
- name: automod_rules
  endpoint:
    path: /guilds/{guild_id}/automod/rules
    method: GET
    data_selector: automod_rules
- name: fetch_automod_rule
  endpoint:
    path: /guilds/{guild_id}/automod/rules/{automod_rule_id}
    method: GET
    data_selector: automod_rule
- name: create_automod_rule
  endpoint:
    path: /guilds/{guild_id}/automod/rules
    method: POST
    data_selector: automod_rule
- name: admin_community_eligibility
  endpoint:
    path: /guilds/{guild_id}/admin_community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /guilds/{guild_id}/admin_community/join
    method: POST
    data_selector: guild
- name: migrate_command_scope
  endpoint:
    path: /guilds/{guild_id}/migrate_command_scope
    method: POST
    data_selector: integration_ids
- name: directory_broadcast_eligibility
  endpoint:
    path: /guilds/{guild_id}/directory_broadcast_eligibility
    method: GET
    data_selector: eligibility
- name: invites_paused
  endpoint:
    path: /guilds/{guild_id}/invites_paused
    method: GET
    data_selector: paused
- name: dms_paused
  endpoint:
    path: /guilds/{guild_id}/dms_paused
    method: GET
    data_selector: paused
- name: is_dm_spam_detected
  endpoint:
    path: /guilds/{guild_id}/is_dm_spam_detected
    method: GET
    data_selector: detected
- name: is_raid_detected
  endpoint:
    path: /guilds/{guild_id}/is_raid_detected
    method: GET
    data_selector: detected
- name: ban_entry
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: bans
    params: {}
- name: bulk_ban_result
  endpoint:
    path: /guilds/{guild_id}/bans/bulk
    method: POST
    data_selector: bulkBanResult
    params: {}
- name: role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
    params: {}
- name: uploads
  endpoint:
    path: /uploads
    method: POST
    data_selector: asset
    params: {}
- name: skus
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
    params:
      with_bundled_skus: true
      localize: true
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    data_selector: sku
    params:
      localize: true
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
    data_selector: sku
    params:
      localize: true
- name: create_sku
  endpoint:
    path: /create_sku
    method: POST
    data_selector: sku
    params: {}
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
    params:
      limit: 100
- name: fetch_entitlement
  endpoint:
    path: /entitlements/{entitlement_id}
    method: GET
    data_selector: entitlement
    params: {}
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
    params: {}
- name: create_gift_batch
  endpoint:
    path: /gift_batches
    method: POST
    data_selector: gift_batch
    params: {}
- name: branches
  endpoint:
    path: /branches
    method: GET
    data_selector: branches
    params: {}
- name: create_branch
  endpoint:
    path: /branches
    method: POST
    data_selector: branch
    params: {}
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
    data_selector: manifest_labels
    params: {}
- name: fetch_discoverability
  endpoint:
    path: /discoverability
    method: GET
    data_selector: discoverability
    params: {}
- name: fetch_embedded_activity_config
  endpoint:
    path: /embedded_activity_config
    method: GET
    data_selector: embedded_activity_config
    params: {}
- name: edit_embedded_activity_config
  endpoint:
    path: /embedded_activity_config
    method: PATCH
    data_selector: embedded_activity_config
    params: {}
- name: AutoModRule
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: IntegrationApplication
  endpoint:
    path: /applications
    method: GET
    data_selector: applications
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: member
  endpoint:
    path: /discord/api/members
    method: GET
    data_selector: members
- name: member
  endpoint:
    path: /api/v1/members
    method: GET
    data_selector: members
- name: ApplicationActivityStatistics
  endpoint:
    path: /application/activity/statistics
    method: GET
    data_selector: statistics
    params: {}
- name: ApplicationTester
  endpoint:
    path: /application/testers
    method: GET
    data_selector: testers
    params: {}
- name: EmbeddedActivityConfig
  endpoint:
    path: /application/embedded/activity/config
    method: GET
    data_selector: configuration
    params: {}
- name: DetectableApplication
  endpoint:
    path: /application/detectable
    method: GET
    data_selector: detectable_applications
    params: {}
- name: UnverifiedApplication
  endpoint:
    path: /application/unverified
    method: GET
    data_selector: unverified_applications
    params: {}
- name: ApplicationBranch
  endpoint:
    path: /application/branch
    method: GET
    data_selector: branches
    params: {}
- name: member_profile
  endpoint:
    path: /discord/member/profile
    method: GET
    data_selector: profile
    params: {}
- name: payouts
  endpoint:
    path: /team/payouts
    method: GET
    data_selector: payouts
    params:
      limit: 96
- name: members
  endpoint:
    path: /team/members
    method: GET
    data_selector: members
    params: {}
- name: create_dm
  endpoint:
    path: /create_dm
    method: POST
- name: delete_note
  endpoint:
    path: /delete_note
    method: DELETE
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
- name: fetch_note
  endpoint:
    path: /fetch_note
    method: GET
- name: pins
  endpoint:
    path: /pins
    method: GET
- name: profile
  endpoint:
    path: /profile
    method: GET
- name: remove_friend
  endpoint:
    path: /remove_friend
    method: DELETE
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: send_friend_request
  endpoint:
    path: /send_friend_request
    method: POST
    data_selector: friend_request
    params: {}
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: commands
    params: {}
- name: timeout
  endpoint:
    path: /timeout
    method: POST
    data_selector: timeout_response
    params: {}
- name: unack
  endpoint:
    path: /unack
    method: POST
    data_selector: unack_response
    params: {}
- name: unban
  endpoint:
    path: /unban
    method: POST
    data_selector: unban_response
    params: {}
- name: unblock
  endpoint:
    path: /unblock
    method: POST
    data_selector: unblock_response
    params: {}
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: voice_state
  endpoint:
    path: /voice_state
    method: GET
    data_selector: voice_state
    params: {}
- name: PartialEmoji
  endpoint:
    path: /discord/api/v2/partial-emoji
    method: GET
    data_selector: records
- name: Sticker
  endpoint:
    path: /discord/api/v2/sticker
    method: GET
    data_selector: records
- name: StickerItem
  endpoint:
    path: /discord/api/v2/sticker-item
    method: GET
    data_selector: records
- name: StickerPack
  endpoint:
    path: /discord/api/v2/sticker-pack
    method: GET
    data_selector: records
- name: StandardSticker
  endpoint:
    path: /discord/api/v2/standard-sticker
    method: GET
    data_selector: records
- name: gift
  endpoint:
    path: /discord/gift
    method: GET
    data_selector: records
- name: gift_batch
  endpoint:
    path: /discord/gift/batch
    method: GET
    data_selector: records
- name: library_application
  endpoint:
    path: /discord/library/application
    method: GET
    data_selector: records
- name: GuildSticker
  endpoint:
    path: /guild/stickers
    method: GET
    data_selector: stickers
- name: CategoryChannel
  endpoint:
    path: /guild/channels
    method: GET
    data_selector: channels
- name: subscription
  endpoint:
    path: /discord/subscriptions
    method: GET
    data_selector: subscriptions
- name: channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: channel
    params: {}
- name: SubscriptionTrial
  endpoint:
    path: /discord/SubscriptionTrial
    method: GET
- name: PremiumGuildSubscription
  endpoint:
    path: /discord/PremiumGuildSubscription
    method: GET
- name: PremiumGuildSubscriptionSlot
  endpoint:
    path: /discord/PremiumGuildSubscriptionSlot
    method: GET
- name: PremiumGuildSubscriptionCooldown
  endpoint:
    path: /discord/PremiumGuildSubscriptionCooldown
    method: GET
- name: SubscriptionPlan
  endpoint:
    path: /discord/SubscriptionPlan
    method: GET
- name: SubscriptionPlanPrices
  endpoint:
    path: /discord/SubscriptionPlanPrices
    method: GET
    data_selector: country_prices
- name: Payment
  endpoint:
    path: /discord/Payment
    method: GET
    data_selector: payments
- name: SKU
  endpoint:
    path: /discord/SKU
    method: GET
    data_selector: skus
- name: archived_threads
  endpoint:
    path: /threads/archived
    method: GET
    data_selector: threads
    params:
      limit: null
      before: null
      private: null
      joined: null
- name: history
  endpoint:
    path: /messages/history
    method: GET
    data_selector: messages
    params:
      limit: 100
      before: null
      after: null
      around: null
      oldest_first: null
- name: invites
  endpoint:
    path: /invites
    method: GET
    data_selector: invites
    params: {}
- name: sku
  endpoint:
    path: /discord/sku
    method: GET
    data_selector: records
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: records
- name: channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: listings
- name: guild
  endpoint:
    path: /guilds/{guild.id}
    method: GET
    data_selector: guild
    params: {}
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: channel_create
  endpoint:
    path: /channels/create
    method: POST
    data_selector: channel
    params: {}
- name: channel_edit
  endpoint:
    path: /channels/edit
    method: PATCH
    data_selector: channel
    params: {}
- name: channel_delete
  endpoint:
    path: /channels/delete
    method: DELETE
    data_selector: channel
    params: {}
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
    params: {}
- name: read_state
  endpoint:
    path: /read_state
    method: GET
    data_selector: read_state
- name: scheduled_events
  endpoint:
    path: /scheduled_events
    method: GET
    data_selector: scheduled_events
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: commands
- name: create_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: POST
    data_selector: sticker
- name: delete_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers/{sticker_id}
    method: DELETE
    data_selector: sticker
- name: subscribed_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events/subscribed
    method: GET
    data_selector: events
- name: fetch_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: GET
    data_selector: events
- name: create_scheduled_event
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: POST
    data_selector: event
- name: fetch_emojis
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: GET
    data_selector: emojis
- name: fetch_roles
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
- name: create_role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: POST
    data_selector: role
- name: directory_channel
  endpoint:
    path: /directory/channels
    method: GET
    data_selector: entries
- name: fetch_entries
  endpoint:
    path: /entries
    method: GET
- name: search_entries
  endpoint:
    path: /search
    method: GET
- name: create_entry
  endpoint:
    path: /create
    method: POST
- name: delete_channel
  endpoint:
    path: /delete
    method: DELETE
- name: create_invite
  endpoint:
    path: /invite
    method: POST
- name: archived_threads
  endpoint:
    path: /archived_threads
    method: GET
    data_selector: threads
- name: create_thread
  endpoint:
    path: /create_thread
    method: POST
    data_selector: thread
- name: welcome_screen
  endpoint:
    path: /guilds/{guild.id}/welcome-screen
    method: GET
    data_selector: welcome_screen
    params: {}
- name: applications
  endpoint:
    path: /guilds/{guild.id}/applications
    method: GET
    data_selector: applications
    params: {}
- name: premium_subscriptions
  endpoint:
    path: /guilds/{guild.id}/premium-subscriptions
    method: GET
    data_selector: premium_subscriptions
    params: {}
- name: price_tiers
  endpoint:
    path: /guilds/{guild.id}/price-tiers
    method: GET
    data_selector: price_tiers
    params: {}
- name: message_request
  endpoint:
    path: /discord/DMChannel/message_request
    method: GET
- name: direct_message
  endpoint:
    path: /discord/DMChannel/direct_message
    method: GET
- name: automod_rules
  endpoint:
    path: /guilds/{guild_id}/automod/rules
    method: GET
    data_selector: automod_rules
- name: fetch_automod_rule
  endpoint:
    path: /guilds/{guild_id}/automod/rules/{automod_rule_id}
    method: GET
    data_selector: automod_rule
- name: create_automod_rule
  endpoint:
    path: /guilds/{guild_id}/automod/rules
    method: POST
    data_selector: automod_rule
- name: join_admin_community
  endpoint:
    path: /guilds/{guild_id}/admin-community
    method: POST
    data_selector: admin_community
- name: leave
  endpoint:
    path: /guilds/{guild_id}/members/@me
    method: DELETE
    data_selector: leave_status
- name: group_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: auto_mod_rule
  endpoint:
    path: /auto-mod/rules
    method: GET
    data_selector: rules
- name: integration_application
  endpoint:
    path: /integration/applications
    method: GET
    data_selector: applications
- name: AutoModRule
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: AutoModAction
  endpoint:
    path: /automod/actions
    method: GET
    data_selector: actions
- name: create_invite
  endpoint:
    path: /create_invite
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
      cls: VoiceClient
      ring: true
- name: ack
  endpoint:
    path: /ack
    method: POST
    data_selector: ack
    params: {}
- name: ack_pins
  endpoint:
    path: /ack_pins
    method: POST
    data_selector: ack_pins
    params: {}
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
    data_selector: commands
    params: {}
- name: fetch_message
  endpoint:
    path: /fetch_message/{id}
    method: GET
    data_selector: message
    params: {}
- name: greet
  endpoint:
    path: /greet
    method: POST
    data_selector: greet
    params: {}
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: search_results
    params:
      limit: 25
      offset: 0
- name: member
  endpoint:
    path: /guilds/{guild_id}/members/{user_id}
    method: GET
    data_selector: member
    params: {}
- name: send_message
  endpoint:
    path: /send
    method: POST
- name: unacknowledge
  endpoint:
    path: /unack
    method: POST
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
- name: fetch_message
  endpoint:
    path: /fetch_message/{id}
    method: GET
- name: mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
- name: user_note
  endpoint:
    path: /fetch_note
    method: GET
- name: delete_user_note
  endpoint:
    path: /delete_note
    method: DELETE
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: /channel/slash_commands
    method: GET
    data_selector: commands
    params: {}
- name: message_send
  endpoint:
    path: /send
    method: POST
    data_selector: Message
    params: {}
- name: message_unack
  endpoint:
    path: /unack
    method: POST
    data_selector: Message
    params: {}
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
    data_selector: CloudFile
    params: {}
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
    data_selector: files
    params:
      files: List of files to upload. Must be a maximum of 10.
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params:
      query: Optional query to search for.
      limit: Optional maximum number of commands to send back.
      command_ids: Optional list of up to 100 command IDs to search for.
      application: Optional application to return commands for.
      with_applications: Whether to include applications in the response.
- name: stage_instance
  endpoint:
    path: /stage_instance
    method: GET
    data_selector: records
- name: private_call
  endpoint:
    path: /private_call
    method: GET
    data_selector: records
- name: group_call
  endpoint:
    path: /group_call
    method: GET
    data_selector: records
- name: message
  endpoint:
    path: /discord/api/v1/messages
    method: GET
    data_selector: messages
- name: PartialEmoji
  endpoint:
    path: /partial_emoji
    method: GET
    data_selector: assets
- name: Sticker
  endpoint:
    path: /sticker
    method: GET
    data_selector: assets
- name: StickerItem
  endpoint:
    path: /sticker_item
    method: GET
    data_selector: assets
- name: StickerPack
  endpoint:
    path: /sticker_pack
    method: GET
    data_selector: assets
- name: StandardSticker
  endpoint:
    path: /standard_sticker
    method: GET
    data_selector: assets
- name: partial_message
  endpoint:
    path: /discord/partial_message
    method: GET
    data_selector: message
    params: {}
- name: GuildSticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
    data_selector: stickers
- name: text_channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: channel
    params: {}
- name: reaction
  endpoint:
    path: /reaction
    method: GET
    data_selector: reactions
    params: {}
- name: invite
  endpoint:
    path: /invites/{invite_code}
    method: GET
    data_selector: invite
    params: {}
- name: invite
  endpoint:
    path: /invites/{code}
    method: GET
    data_selector: invite
    params: {}
- name: File
  endpoint:
    path: /abc.Messageable.send
    method: POST
- name: CloudFile
  endpoint:
    path: /abc.Messageable.upload_files
    method: POST
- name: notification_settings
  endpoint:
    path: /channels/{channel_id}/notification_settings
    method: GET
    data_selector: settings
- name: overwrites
  endpoint:
    path: /channels/{channel_id}/overwrites
    method: GET
    data_selector: overwrites
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: messages
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
- name: send
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /channels/{channel_id}/permissions/{overwrite_id}
    method: PUT
    data_selector: permissions
- name: messages
  endpoint:
    path: /commands/messages
    method: GET
    data_selector: Message
- name: user_commands
  endpoint:
    path: /commands/user_commands
    method: GET
    data_selector: UserCommand
- name: create_channel
  endpoint:
    method: POST
- name: edit_channel
  endpoint:
    method: PATCH
- name: delete_channel
  endpoint:
    method: DELETE
- name: create_invite
  endpoint:
    method: POST
- name: create_webhook
  endpoint:
    method: POST
- name: invite
  endpoint:
    path: /invites/{invite_code}
    method: GET
    data_selector: invite
    params: {}
- name: invite
  endpoint:
    path: /api/invite
    method: GET
    data_selector: invite
    params: {}
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: message
    params: {}
- name: partial_message
  endpoint:
    path: /messages/{message_id}/partial
    method: GET
    data_selector: partial_message
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      most_relevant: false
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
    params: {}
- name: voice_states
  endpoint:
    path: /voice_states
    method: GET
    data_selector: voice_states
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: user
  endpoint:
    path: /users/{user_id}
    method: GET
    data_selector: User
    params: {}
- name: guild_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: Channel
    params: {}
- name: widget
  endpoint:
    path: /guilds/{guild_id}/widget
    method: GET
    data_selector: Widget
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinnedMessages
    params: {}
- name: purge
  endpoint:
    path: /channels/{channel_id}/messages
    method: DELETE
    data_selector: deletedMessages
    params:
      limit: 100
- name: read_state
  endpoint:
    path: /read_state
    method: GET
    data_selector: read_state
- name: scheduled_events
  endpoint:
    path: /scheduled_events
    method: GET
    data_selector: scheduled_events
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: commands
- name: fetch_entries
  endpoint:
    path: /fetch_entries
    method: GET
    data_selector: entries
- name: search_entries
  endpoint:
    path: /search_entries
    method: GET
    data_selector: entries
- name: create_entry
  endpoint:
    path: /create_entry
    method: POST
    data_selector: entry
- name: delete_channel
  endpoint:
    path: /delete_channel
    method: DELETE
    data_selector: result
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
- name: create_application
  endpoint:
    path: /create_application
    method: POST
- name: create_team
  endpoint:
    path: /create_team
    method: POST
- name: search_companies
  endpoint:
    path: /search_companies
    method: GET
- name: fetch_company
  endpoint:
    path: /fetch_company/{company_id}
    method: GET
- name: activity_statistics
  endpoint:
    path: /activity_statistics
    method: GET
- name: global_activity_statistics
  endpoint:
    path: /global_activity_statistics
    method: GET
- name: payment_sources
  endpoint:
    path: /payment_sources
    method: GET
- name: fetch_payment_source
  endpoint:
    path: /fetch_payment_source/{source_id}
    method: GET
- name: create_payment_source
  endpoint:
    path: /create_payment_source
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: premium_guild_subscriptions
  endpoint:
    path: /premium_guild_subscriptions
    method: GET
- name: premium_guild_subscription_slots
  endpoint:
    path: /premium_guild_subscription_slots
    method: GET
- name: premium_guild_subscription_cooldown
  endpoint:
    path: /premium_guild_subscription_cooldown
    method: GET
- name: fetch_subscription
  endpoint:
    path: /fetch_subscription/{subscription_id}
    method: GET
- name: preview_subscription
  endpoint:
    path: /preview_subscription
    method: POST
- name: create_subscription
  endpoint:
    path: /create_subscription
    method: POST
- name: payments
  endpoint:
    path: /payments
    method: GET
- name: fetch_payment
  endpoint:
    path: /fetch_payment/{payment_id}
    method: GET
- name: promotions
  endpoint:
    path: /promotions
    method: GET
- name: forum_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: forums
    params: {}
- name: permissions_synced
  endpoint:
    path: /permissions_synced
    method: GET
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
- name: promotions
  endpoint:
    path: /promotions
    method: GET
    data_selector: promotions
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: user_offer
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: trial_offer
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: pricing_promotion
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: library
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: authorizations
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
    data_selector: giftable_entitlements
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
    data_selector: premium_entitlements
- name: fetch_entitlements
  endpoint:
    path: /fetch_entitlements
    method: GET
    data_selector: fetch_entitlements
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
    data_selector: fetch_gift
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
    data_selector: fetch_sku
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
    data_selector: fetch_store_listing
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
    data_selector: fetch_published_store_listing
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
    data_selector: fetch_published_store_listings
- name: messages
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
- name: typing
  endpoint:
    path: /channels/{channel_id}/typing
    method: POST
    data_selector: typing_status
- name: invite
  endpoint:
    path: /channels/{channel_id}/invites
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
- name: user_commands
  endpoint:
    path: user_commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: slash_commands
    method: GET
    data_selector: commands
    params: {}
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
    params:
      application_id: application_id
      localize: localize
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
    params:
      application_ids: application_ids
      localize: localize
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: subscription_plans
    params:
      sku_id: sku_id
      country_code: country_code
      payment_source: payment_source
      with_unpublished: with_unpublished
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: subscription_plans
    params:
      sku_ids: sku_ids
      country_code: country_code
      payment_source: payment_source
      with_unpublished: with_unpublished
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: EULA
    params:
      eula_id: eula_id
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
    params:
      branch_ids: branch_ids
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier_mapping
    params:
      price_tier: price_tier
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery_status
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: mentions
    params:
      limit: limit
      before: before
      guild: guild
      roles: roles
      everyone: everyone
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: delete_status
    params:
      message: message
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhook_id
    params:
      application: application
      channel: channel
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: leave_status
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: reported_application
    params:
      name: name
      icon: icon
      os: os
      executable: executable
      publisher: publisher
      distributor: distributor
      sku: sku
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiment_rollouts
    params:
      with_guild_experiments: with_guild_experiments
- name: remove_tags
  endpoint:
    path: /remove_tags
    method: POST
    data_selector: result
    params: {}
- name: join
  endpoint:
    path: /join
    method: POST
    data_selector: result
    params: {}
- name: leave
  endpoint:
    path: /leave
    method: POST
    data_selector: result
    params: {}
- name: add_user
  endpoint:
    path: /add_user
    method: POST
    data_selector: result
    params: {}
- name: remove_user
  endpoint:
    path: /remove_user
    method: POST
    data_selector: result
    params: {}
- name: fetch_members
  endpoint:
    path: /fetch_members
    method: GET
    data_selector: members
    params: {}
- name: delete
  endpoint:
    path: /delete
    method: DELETE
    data_selector: result
    params: {}
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: search_results
    params:
      limit: 25
- name: AudioSource
  endpoint:
    path: /discord/AudioSource
    method: GET
    data_selector: methods
    params: {}
- name: PCMAudio
  endpoint:
    path: /discord/PCMAudio
    method: GET
    data_selector: methods
    params: {}
- name: FFmpegAudio
  endpoint:
    path: /discord/FFmpegAudio
    method: GET
    data_selector: methods
    params: {}
- name: FFmpegPCMAudio
  endpoint:
    path: /discord/FFmpegPCMAudio
    method: GET
    data_selector: methods
    params: {}
- name: FFmpegOpusAudio
  endpoint:
    path: /discord/FFmpegOpusAudio
    method: GET
    data_selector: methods
    params: {}
- name: stage_instance
  endpoint:
    path: /stage_instance
    method: GET
    data_selector: data
- name: private_call
  endpoint:
    path: /private_call
    method: GET
    data_selector: data
- name: group_call
  endpoint:
    path: /group_call
    method: GET
    data_selector: data
- name: message
  endpoint:
    path: /messages
    method: GET
    data_selector: records
    params: {}
- name: PartialMessage
  endpoint:
    path: /discord/PartialMessage
    method: GET
    data_selector: attributes
    params: {}
- name: attachment
  endpoint:
    path: /attachments
    method: GET
    data_selector: attachments
    params: {}
- name: message_reference
  endpoint:
    path: /message_references
    method: GET
    data_selector: message_references
    params: {}
- name: deleted_referenced_message
  endpoint:
    path: /deleted_referenced_messages
    method: GET
    data_selector: deleted_referenced_messages
    params: {}
- name: message_snapshot
  endpoint:
    path: /message_snapshot
    method: GET
    data_selector: message_snapshots
    params: {}
- name: role_subscription_info
  endpoint:
    path: /role_subscription_info
    method: GET
    data_selector: role_subscription_info
    params: {}
- name: purchase_notification
  endpoint:
    path: /purchase_notification
    method: GET
    data_selector: purchase_notifications
    params: {}
- name: guild_product_purchase
  endpoint:
    path: /guild_product_purchase
    method: GET
    data_selector: guild_product_purchases
    params: {}
- name: reaction
  endpoint:
    path: /reaction
    method: GET
    data_selector: records
- name: invite_create
  endpoint:
    path: /invite/create
    method: POST
    data_selector: invite
- name: invite_delete
  endpoint:
    path: /invite/delete
    method: DELETE
    data_selector: invite
- name: guild_feature_ack
  endpoint:
    path: /guild/feature_ack
    method: POST
    data_selector: payload
- name: integration_create
  endpoint:
    path: /integration/create
    method: POST
    data_selector: integration
- name: integration_update
  endpoint:
    path: /integration/update
    method: PUT
    data_selector: integration
- name: guild_integrations_update
  endpoint:
    path: /guild/integrations/update
    method: PATCH
    data_selector: guild
- name: webhooks_update
  endpoint:
    path: /webhooks/update
    method: PATCH
    data_selector: channel
- name: raw_integration_delete
  endpoint:
    path: /integration/delete
    method: DELETE
    data_selector: payload
- name: interaction
  endpoint:
    path: /interaction
    method: POST
    data_selector: interaction
- name: interaction_finish
  endpoint:
    path: /interaction/finish
    method: POST
    data_selector: interaction
- name: modal
  endpoint:
    path: /modal
    method: POST
    data_selector: modal
- name: member_join
  endpoint:
    path: /member/join
    method: POST
    data_selector: member
- name: member_remove
  endpoint:
    path: /member/remove
    method: DELETE
    data_selector: member
- name: raw_member_remove
  endpoint:
    path: /member/remove/raw
    method: DELETE
    data_selector: payload
- name: member_update
  endpoint:
    path: /member/update
    method: PATCH
    data_selector: before, after
- name: user_update
  endpoint:
    path: /user/update
    method: PATCH
    data_selector: before, after
- name: member_ban
  endpoint:
    path: /member/ban
    method: POST
    data_selector: guild, user
- name: member_unban
  endpoint:
    path: /member/unban
    method: POST
    data_selector: guild, user
- name: presence_update
  endpoint:
    path: /presence/update
    method: PATCH
    data_selector: before, after
- name: raw_member_list_update
  endpoint:
    path: /member/list/update
    method: PATCH
    data_selector: data
- name: message
  endpoint:
    path: /message
    method: POST
    data_selector: message
- name: message_edit
  endpoint:
    path: /message/edit
    method: PUT
    data_selector: before, after
- name: message_delete
  endpoint:
    path: /message/delete
    method: DELETE
    data_selector: message
- name: bulk_message_delete
  endpoint:
    path: /message/bulk/delete
    method: DELETE
    data_selector: messages
- name: message_ack
  endpoint:
    path: /message/ack
    method: POST
    data_selector: message, manual
- name: raw_message_edit
  endpoint:
    path: /message/edit/raw
    method: PATCH
    data_selector: payload
- name: raw_message_delete
  endpoint:
    path: /message/delete/raw
    method: DELETE
    data_selector: payload
- name: raw_bulk_message_delete
  endpoint:
    path: /message/bulk/delete/raw
    method: DELETE
    data_selector: payload
- name: raw_message_ack
  endpoint:
    path: /message/ack/raw
    method: POST
    data_selector: payload
- name: recent_mention_delete
  endpoint:
    path: /recent/mention/delete
    method: DELETE
    data_selector: message
- name: raw_recent_mention_delete
  endpoint:
    path: /recent/mention/delete/raw
    method: DELETE
    data_selector: message_id
- name: poll_vote_add
  endpoint:
    path: /poll/vote/add
    method: POST
    data_selector: user, answer
- name: poll_vote_remove
  endpoint:
    path: /poll/vote/remove
    method: DELETE
    data_selector: user, answer
- name: ActionRow
  endpoint:
    path: /discord/components/action-row
    method: GET
- name: Button
  endpoint:
    path: /discord/components/button
    method: GET
- name: SelectMenu
  endpoint:
    path: /discord/components/select-menu
    method: GET
- name: TextInput
  endpoint:
    path: /discord/components/text-input
    method: GET
- name: invite
  endpoint:
    path: /api/invites/{invite_code}
    method: GET
    data_selector: invite
- name: invite
  endpoint:
    path: /invites/{invite.code}
    method: GET
    data_selector: invite
- name: invite
  endpoint:
    path: /invites/{invite}
    method: DELETE
- name: widget
  endpoint:
    path: /guilds/{guild_id}/widget
    method: GET
- name: user
  endpoint:
    path: /users/{user_id}
    method: GET
- name: user_profile
  endpoint:
    path: /users/{user_id}/profile
    method: GET
- name: channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
- name: webhook
  endpoint:
    path: /webhooks/{webhook_id}
    method: GET
- name: sticker
  endpoint:
    path: /stickers/{sticker_id}
    method: GET
- name: sticker_pack
  endpoint:
    path: /sticker-packs
    method: GET
- name: note
  endpoint:
    path: /users/@me/notes
    method: GET
- name: connections
  endpoint:
    path: /users/@me/connections
    method: GET
- name: settings
  endpoint:
    path: /users/@me/settings
    method: GET
- name: role_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: invite_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: invite_update
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: invite_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: webhook_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: webhook_update
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: webhook_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: emoji_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: emoji_update
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: emoji_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: message_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: message_bulk_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: message_pin
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: message_unpin
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: integration_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: integration_update
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: integration_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: stage_instance_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: stage_instance_update
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: stage_instance_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: sticker_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: sticker_update
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: sticker_delete
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: scheduled_event_create
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: scheduled_event_update
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: audit_log
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: payment_sources
  endpoint:
    path: /payment_sources
    method: GET
- name: promotions
  endpoint:
    path: /promotions
    method: GET
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhooks
    params: {}
- name: promotions
  endpoint:
    path: /promotions
    method: GET
    data_selector: promotions
    params: {}
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: user_offer
    params: {}
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: trial_offer
    params: {}
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: pricing_promotion
    params: {}
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: library
    params: {}
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: authorizations
    params: {}
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
    params: {}
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
    data_selector: giftable_entitlements
    params: {}
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
    data_selector: premium_entitlements
    params: {}
- name: fetch_entitlements
  endpoint:
    path: /fetch_entitlements
    method: GET
    data_selector: fetch_entitlements
    params: {}
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
    data_selector: fetch_gift
    params: {}
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
    data_selector: fetch_sku
    params: {}
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
    data_selector: fetch_store_listing
    params: {}
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
    data_selector: fetch_published_store_listing
    params: {}
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
    data_selector: fetch_published_store_listings
    params: {}
- name: SyncWebhook
  endpoint:
    path: /webhooks
    method: POST
- name: guild_channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: channel
    params: {}
- name: user
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
    params: {}
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
    params: {}
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
    params: {}
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
    params: {}
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: subscription_plans
    params: {}
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: subscription_plans
    params: {}
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: eula
    params: {}
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
    params: {}
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
    params: {}
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier
    params: {}
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
    params: {}
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
    params: {}
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: recent_mentions
    params: {}
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: delete_response
    params: {}
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
    params: {}
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
    params: {}
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
    params: {}
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
    params: {}
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhook_id
    params: {}
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: leave_response
    params: {}
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: reported_application
    params: {}
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
    params: {}
- name: fetch_message
  endpoint:
    path: /fetch_message
    method: GET
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
- name: fetch_note
  endpoint:
    path: /fetch_note
    method: GET
- name: pins
  endpoint:
    path: /pins
    method: GET
- name: profile
  endpoint:
    path: /profile
    method: GET
- name: history
  endpoint:
    path: /history
    method: GET
    params:
      limit: 100
- name: search
  endpoint:
    path: /search
    method: GET
    params:
      limit: 25
      offset: 0
- name: join_hub_waitlist
  endpoint:
    path: /join_hub_waitlist
    method: POST
    data_selector: response
    params: {}
- name: lookup_hubs
  endpoint:
    path: /lookup_hubs
    method: GET
    data_selector: hubs
    params: {}
- name: join_hub
  endpoint:
    path: /join_hub
    method: POST
    data_selector: joined_hub
    params: {}
- name: pomelo_suggestion
  endpoint:
    path: /pomelo_suggestion
    method: GET
    data_selector: suggested_username
    params: {}
- name: check_pomelo_username
  endpoint:
    path: /check_pomelo_username
    method: GET
    data_selector: is_taken
    params: {}
- name: recent_avatars
  endpoint:
    path: /recent_avatars
    method: GET
    data_selector: recent_avatars
    params: {}
- name: message_history
  endpoint:
    params:
      limit: 200
- name: search_messages
  endpoint:
    params:
      limit: 25
      oldest_first: true
- name: PrimaryGuild
  endpoint:
    path: /discord/PrimaryGuild
    method: GET
    data_selector: records
- name: DisplayNameStyle
  endpoint:
    path: /discord/DisplayNameStyle
    method: GET
    data_selector: records
- name: UserAffinity
  endpoint:
    path: /discord/UserAffinity
    method: GET
    data_selector: records
- name: GuildAffinity
  endpoint:
    path: /discord/GuildAffinity
    method: GET
    data_selector: records
- name: ChannelAffinity
  endpoint:
    path: /discord/ChannelAffinity
    method: GET
    data_selector: records
- name: BillingAddress
  endpoint:
    path: /discord/BillingAddress
    method: GET
    data_selector: records
- name: PaymentSource
  endpoint:
    path: /discord/PaymentSource
    method: GET
    data_selector: records
- name: PremiumUsage
  endpoint:
    path: /discord/PremiumUsage
    method: GET
    data_selector: records
- name: legacy_user_settings
  endpoint:
    path: /legacy/user/settings
    method: GET
    data_selector: settings
- name: reaction_add
  endpoint:
    path: /on_reaction_add
    method: POST
- name: reaction_remove
  endpoint:
    path: /on_reaction_remove
    method: POST
- name: reaction_clear
  endpoint:
    path: /on_reaction_clear
    method: POST
- name: reaction_clear_emoji
  endpoint:
    path: /on_reaction_clear_emoji
    method: POST
- name: raw_reaction_add
  endpoint:
    path: /on_raw_reaction_add
    method: POST
- name: raw_reaction_remove
  endpoint:
    path: /on_raw_reaction_remove
    method: POST
- name: raw_reaction_clear
  endpoint:
    path: /on_raw_reaction_clear
    method: POST
- name: raw_reaction_clear_emoji
  endpoint:
    path: /on_raw_reaction_clear_emoji
    method: POST
- name: guild_role_create
  endpoint:
    path: /on_guild_role_create
    method: POST
- name: guild_role_delete
  endpoint:
    path: /on_guild_role_delete
    method: POST
- name: guild_role_update
  endpoint:
    path: /on_guild_role_update
    method: POST
- name: scheduled_event_create
  endpoint:
    path: /on_scheduled_event_create
    method: POST
- name: scheduled_event_delete
  endpoint:
    path: /on_scheduled_event_delete
    method: POST
- name: scheduled_event_update
  endpoint:
    path: /on_scheduled_event_update
    method: POST
- name: scheduled_event_user_add
  endpoint:
    path: /on_scheduled_event_user_add
    method: POST
- name: scheduled_event_user_remove
  endpoint:
    path: /on_scheduled_event_user_remove
    method: POST
- name: raw_scheduled_event_user_add
  endpoint:
    path: /on_raw_scheduled_event_user_add
    method: POST
- name: raw_scheduled_event_user_remove
  endpoint:
    path: /on_raw_scheduled_event_user_remove
    method: POST
- name: scheduled_event_ack
  endpoint:
    path: /on_scheduled_event_ack
    method: POST
- name: stage_instance_create
  endpoint:
    path: /on_stage_instance_create
    method: POST
- name: stage_instance_delete
  endpoint:
    path: /on_stage_instance_delete
    method: POST
- name: stage_instance_update
  endpoint:
    path: /on_stage_instance_update
    method: POST
- name: thread_create
  endpoint:
    path: /on_thread_create
    method: POST
- name: thread_join
  endpoint:
    path: /on_thread_join
    method: POST
- name: thread_update
  endpoint:
    path: /on_thread_update
    method: POST
- name: thread_remove
  endpoint:
    path: /on_thread_remove
    method: POST
- name: thread_delete
  endpoint:
    path: /on_thread_delete
    method: POST
- name: raw_thread_delete
  endpoint:
    path: /on_raw_thread_delete
    method: POST
- name: thread_member_join
  endpoint:
    path: /on_thread_member_join
    method: POST
- name: thread_member_remove
  endpoint:
    path: /on_thread_member_remove
    method: POST
- name: raw_thread_member_remove
  endpoint:
    path: /on_raw_thread_member_remove
    method: POST
- name: voice_state_update
  endpoint:
    path: /on_voice_state_update
    method: POST
- name: audit_log_diff
  endpoint:
    path: /guilds/{guild_id}/audit-logs
    method: GET
    data_selector: changes
    params: {}
- name: uploads_store_asset
  endpoint:
    path: /uploads/store_asset
    method: POST
    data_selector: created_asset
- name: skus
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    data_selector: primary_sku
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
    data_selector: store_listing_sku
- name: create_sku
  endpoint:
    path: /create_sku
    method: POST
    data_selector: sku_created
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: fetch_entitlement
  endpoint:
    path: /fetch_entitlement
    method: GET
    data_selector: entitlement
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
- name: create_gift_batch
  endpoint:
    path: /create_gift_batch
    method: POST
    data_selector: gift_batch_created
- name: branches
  endpoint:
    path: /branches
    method: GET
    data_selector: branches
- name: create_branch
  endpoint:
    path: /create_branch
    method: POST
    data_selector: branch_created
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
    data_selector: manifest_labels
- name: fetch_discoverability
  endpoint:
    path: /fetch_discoverability
    method: GET
    data_selector: discoverability
- name: fetch_embedded_activity_config
  endpoint:
    path: /fetch_embedded_activity_config
    method: GET
    data_selector: embedded_activity_config
- name: edit_embedded_activity_config
  endpoint:
    path: /edit_embedded_activity_config
    method: PATCH
    data_selector: activity_config_updated
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhooks
    params: {}
- name: application_commands
  endpoint:
    path: /application/commands
    method: GET
- name: fetch_mutual_friends
  endpoint:
    path: /users/{user_id}/friends
    method: GET
- name: fetch_note
  endpoint:
    path: /users/{user_id}/note
    method: GET
- name: SyncWebhook
  endpoint:
    path: /syncwebhook
    method: POST
    data_selector: webhook
    params: {}
- name: webhook_message
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}/messages/{message.id}
    method: PATCH
    data_selector: message
    params: {}
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: files
    params: {}
- name: application_activity_statistics
  endpoint:
    path: /application_activity_statistics
    method: GET
    data_selector: statistics
    params: {}
- name: guild_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: invites
  endpoint:
    path: /invites
    method: GET
- name: slash_commands
  endpoint:
    path: /applications/{application_id}/guilds/{guild_id}/commands
    method: GET
- name: user_commands
  endpoint:
    path: /users/@me/commands
    method: GET
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
- name: application_branch
  endpoint:
    path: /applications/{application_id}/branches
    method: GET
- name: application_build
  endpoint:
    path: /applications/{application_id}/builds
    method: GET
- name: application_manifest
  endpoint:
    path: /applications/{application_id}/manifests
    method: GET
- name: application_team
  endpoint:
    path: /applications/{application_id}/teams
    method: GET
- name: user
  endpoint:
    path: /users/@me
    method: GET
- name: history
  endpoint:
    path: /api/v1/channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: fetch_mutual_friends
  endpoint:
    path: /api/v1/users/{user_id}/friends
    method: GET
    data_selector: friends
    params: {}
- name: fetch_note
  endpoint:
    path: /api/v1/users/{user_id}/note
    method: GET
    data_selector: note
    params: {}
- name: send_message
  endpoint:
    path: send
    method: POST
    data_selector: message
    params: {}
- name: unacknowledge_channel
  endpoint:
    path: unack
    method: POST
    data_selector: status
    params: {}
- name: upload_files
  endpoint:
    path: upload_files
    method: POST
    data_selector: files
    params: {}
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: team_payout
  endpoint:
    path: /team_payout
    method: GET
    data_selector: payouts
    params: {}
- name: entitlement
  endpoint:
    path: /entitlement
    method: GET
    data_selector: entitlements
    params: {}
- name: subscription
  endpoint:
    path: /discord/subscription
    method: GET
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: '200'
- name: message_search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: '25'
- name: SubscriptionTrial
  endpoint:
    path: /discord/SubscriptionTrial
    method: GET
    data_selector: trial
- name: PremiumGuildSubscription
  endpoint:
    path: /discord/PremiumGuildSubscription
    method: GET
    data_selector: subscription
- name: PremiumGuildSubscriptionSlot
  endpoint:
    path: /discord/PremiumGuildSubscriptionSlot
    method: GET
    data_selector: subscriptionSlot
- name: PremiumGuildSubscriptionCooldown
  endpoint:
    path: /discord/PremiumGuildSubscriptionCooldown
    method: GET
    data_selector: cooldown
- name: SubscriptionPlan
  endpoint:
    path: /discord/SubscriptionPlan
    method: GET
    data_selector: plan
- name: LegacyUserSettings
  endpoint:
    path: /user/settings
    method: GET
    data_selector: settings
    params: {}
- name: SubscriptionPlanPrices
  endpoint:
    path: /subscription_plan_prices
    method: GET
    data_selector: country_prices
- name: Payment
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
- name: SKU
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
- name: SKU
  endpoint:
    path: /discord/sku
    method: GET
    data_selector: records
- name: TrackingSettings
  endpoint:
    path: /tracking/settings
    method: GET
    data_selector: settings
- name: EmailSettings
  endpoint:
    path: /email/settings
    method: GET
    data_selector: settings
- name: GuildFolder
  endpoint:
    path: /guild/folder
    method: GET
    data_selector: folders
- name: GuildProgress
  endpoint:
    path: /guild/progress
    method: GET
    data_selector: progress
- name: AudioContext
  endpoint:
    path: /audio/context
    method: GET
    data_selector: audioSettings
- name: MuteConfig
  endpoint:
    path: /mute/config
    method: GET
    data_selector: muteStatus
- name: store_listing
  endpoint:
    path: /store/listing
    method: POST
    data_selector: store_listing
    params: {}
- name: gift_batch
  endpoint:
    path: /gift/batch
    method: POST
    data_selector: gift_batch
    params: {}
- name: activity_statistics
  endpoint:
    path: /applications/{application.id}/activity/statistics
    method: GET
- name: create_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: POST
- name: guild
  endpoint:
    path: /guilds/{guild.id}
    method: GET
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: discovery_splash
  endpoint:
    path: /discovery_splash
    method: GET
- name: member_count
  endpoint:
    path: /member_count
    method: GET
- name: online_count
  endpoint:
    path: /online_count
    method: GET
- name: chunked
  endpoint:
    path: /chunked
    method: GET
- name: created_at
  endpoint:
    path: /created_at
    method: GET
- name: get_member_named
  endpoint:
    path: /get_member_named
    method: GET
- name: create_text_channel
  endpoint:
    path: /create_text_channel
    method: POST
- name: create_voice_channel
  endpoint:
    path: /create_voice_channel
    method: POST
- name: create_stage_channel
  endpoint:
    path: /create_stage_channel
    method: POST
- name: create_category
  endpoint:
    path: /create_category
    method: POST
- name: create_category_channel
  endpoint:
    path: /create_category_channel
    method: POST
- name: create_directory
  endpoint:
    path: /create_directory
    method: POST
- name: store_asset
  endpoint:
    path: /uploads/store_asset
    method: POST
    data_selector: created_asset
- name: skus
  endpoint:
    path: /applications/skus
    method: GET
    data_selector: skus
- name: primary_sku
  endpoint:
    path: /applications/primary_sku
    method: GET
    data_selector: primary_sku
- name: store_listing_sku
  endpoint:
    path: /applications/store_listing_sku
    method: GET
    data_selector: store_listing_sku
- name: create_sku
  endpoint:
    path: /applications/create_sku
    method: POST
    data_selector: created_sku
- name: entitlements
  endpoint:
    path: /applications/entitlements
    method: GET
    data_selector: entitlements
- name: fetch_entitlement
  endpoint:
    path: /applications/fetch_entitlement
    method: GET
    data_selector: entitlement
- name: gift_batches
  endpoint:
    path: /applications/gift_batches
    method: GET
    data_selector: gift_batches
- name: create_gift_batch
  endpoint:
    path: /applications/create_gift_batch
    method: POST
    data_selector: created_gift_batch
- name: branches
  endpoint:
    path: /applications/branches
    method: GET
    data_selector: branches
- name: create_branch
  endpoint:
    path: /applications/create_branch
    method: POST
    data_selector: created_branch
- name: manifest_labels
  endpoint:
    path: /applications/manifest_labels
    method: GET
    data_selector: manifest_labels
- name: fetch_discoverability
  endpoint:
    path: /applications/fetch_discoverability
    method: GET
    data_selector: discoverability
- name: fetch_embedded_activity_config
  endpoint:
    path: /applications/fetch_embedded_activity_config
    method: GET
    data_selector: embedded_activity_config
- name: edit_embedded_activity_config
  endpoint:
    path: /applications/edit_embedded_activity_config
    method: PATCH
    data_selector: edited_embedded_activity_config
- name: bans
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: banEntries
    params:
      limit: 1000
- name: application_profile
  endpoint:
    path: /applications/@me
    method: GET
    data_selector: data
- name: application_bot
  endpoint:
    path: /applications/@me/bot
    method: GET
    data_selector: data
- name: application_commands
  endpoint:
    path: /application/commands
    method: GET
    data_selector: commands
- name: fetch_mutual_friends
  endpoint:
    path: /users/{user_id}/friends
    method: GET
    data_selector: friends
- name: search_messages
  endpoint:
    path: /guilds/{guild_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: prune_members
  endpoint:
    path: /guilds/{guild_id}/members/prune
    method: POST
    data_selector: pruned
- name: templates
  endpoint:
    path: /guilds/{guild_id}/templates
    method: GET
    data_selector: templates
- name: webhooks
  endpoint:
    path: /guilds/{guild_id}/webhooks
    method: GET
    data_selector: webhooks
- name: invites
  endpoint:
    path: /guilds/{guild_id}/invites
    method: GET
    data_selector: invites
- name: application_commands
  endpoint:
    path: /guilds/{guild_id}/application-commands
    method: GET
    data_selector: commands
- name: fetch_stickers
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
    data_selector: stickers
- name: send_message
  endpoint:
    path: /api/v10/channels/{channel.id}/messages
    method: POST
    data_selector: message
    params: {}
- name: send_friend_request
  endpoint:
    path: /api/v10/users/@me/friends/{user.id}
    method: POST
    data_selector: friend_request
    params: {}
- name: user_commands
  endpoint:
    path: /api/v10/users/@me/commands
    method: GET
    data_selector: user_commands
    params: {}
- name: create_sticker
  endpoint:
    path: /guilds/{guild.id}/stickers
    method: POST
    data_selector: sticker
- name: delete_sticker
  endpoint:
    path: /guilds/{guild.id}/stickers/{sticker.id}
    method: DELETE
    data_selector: sticker
- name: fetch_scheduled_events
  endpoint:
    path: /guilds/{guild.id}/scheduled-events
    method: GET
    data_selector: scheduled_events
- name: create_scheduled_event
  endpoint:
    path: /guilds/{guild.id}/scheduled-events
    method: POST
    data_selector: scheduled_event
- name: fetch_emojis
  endpoint:
    path: /guilds/{guild.id}/emojis
    method: GET
    data_selector: emojis
- name: create_custom_emoji
  endpoint:
    path: /guilds/{guild.id}/emojis
    method: POST
    data_selector: emoji
- name: fetch_roles
  endpoint:
    path: /guilds/{guild.id}/roles
    method: GET
    data_selector: roles
- name: application_activity_statistics
  endpoint:
    path: /application/activity/statistics
    method: GET
    data_selector: statistics
    params: {}
- name: application_tester
  endpoint:
    path: /application/testers
    method: GET
    data_selector: testers
    params: {}
- name: embedded_activity_config
  endpoint:
    path: /application/embedded/activity/config
    method: GET
    data_selector: config
    params: {}
- name: detectable_application
  endpoint:
    path: /application/detectable
    method: GET
    data_selector: detectable
    params: {}
- name: unverified_application
  endpoint:
    path: /application/unverified
    method: GET
    data_selector: unverified
    params: {}
- name: application_branch
  endpoint:
    path: /application/branch
    method: GET
    data_selector: branches
    params: {}
- name: application_branch
  endpoint:
    path: /application_branch
    method: GET
    data_selector: builds
- name: application_build
  endpoint:
    path: /application_build
    method: GET
    data_selector: builds
- name: manifest
  endpoint:
    path: /manifest
    method: GET
    data_selector: manifests
- name: team
  endpoint:
    path: /team
    method: GET
    data_selector: teams
- name: welcome_screen
  endpoint:
    path: /guilds/{guild_id}/welcome-screen
    method: GET
    data_selector: welcome_screen
    params: {}
- name: premium_subscriptions
  endpoint:
    path: /guilds/{guild_id}/premium-subscriptions
    method: GET
    data_selector: premium_subscriptions
    params: {}
- name: applications
  endpoint:
    path: /guilds/{guild_id}/applications
    method: GET
    data_selector: applications
    params: {}
- name: entitlements
  endpoint:
    path: /guilds/{guild_id}/entitlements
    method: GET
    data_selector: entitlements
    params: {}
- name: price_tiers
  endpoint:
    path: /guilds/{guild_id}/price-tiers
    method: GET
    data_selector: price_tiers
    params: {}
- name: dm_channel
  endpoint:
    path: /create_dm
    method: POST
    data_selector: channel
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pinned_messages
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
    data_selector: mutual_friends
- name: automod_rules
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: automod_rules
- name: fetch_automod_rule
  endpoint:
    path: /automod/rules/{automod_rule_id}
    method: GET
    data_selector: automod_rule
- name: create_automod_rule
  endpoint:
    path: /automod/rules
    method: POST
    data_selector: automod_rule
- name: admin_community_eligibility
  endpoint:
    path: /admin/community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /admin/community/join
    method: POST
    data_selector: community
- name: migrate_command_scope
  endpoint:
    path: /guilds/{guild_id}/commands/migrate
    method: POST
    data_selector: integration_ids
- name: directory_broadcast_eligibility
  endpoint:
    path: /directory/broadcast/eligibility
    method: GET
    data_selector: broadcast_eligibility
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: ban_entry
  endpoint:
    path: /guilds/{guild.id}/bans
    method: GET
    data_selector: bans
    params: {}
- name: bulk_ban_result
  endpoint:
    path: /guilds/{guild.id}/bans/bulk
    method: POST
    data_selector: bulkBanResult
    params: {}
- name: role
  endpoint:
    path: /guilds/{guild.id}/roles
    method: GET
    data_selector: roles
    params: {}
- name: gift
  endpoint:
    path: /discord/Gift
    method: GET
    data_selector: records
- name: gift_batch
  endpoint:
    path: /discord/GiftBatch
    method: GET
    data_selector: records
- name: library_application
  endpoint:
    path: /discord/LibraryApplication
    method: GET
    data_selector: records
- name: library_sku
  endpoint:
    path: /discord/LibrarySKU
    method: GET
    data_selector: records
- name: subscription
  endpoint:
    path: /discord/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: PremiumGuildSubscription
  endpoint:
    path: /discord/PremiumGuildSubscription
    method: GET
- name: PremiumGuildSubscriptionSlot
  endpoint:
    path: /discord/PremiumGuildSubscriptionSlot
    method: GET
- name: PremiumGuildSubscriptionCooldown
  endpoint:
    path: /discord/PremiumGuildSubscriptionCooldown
    method: GET
- name: SubscriptionPlan
  endpoint:
    path: /discord/SubscriptionPlan
    method: GET
- name: subscription_plan
  endpoint:
    path: /subscriptions/plans
    method: GET
    data_selector: records
- name: payment
  endpoint:
    path: /payments
    method: GET
    data_selector: records
- name: sku
  endpoint:
    path: /skus
    method: GET
    data_selector: records
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: records
- name: gift_batch
  endpoint:
    path: /gift/batch
    method: POST
    data_selector: gift_batch
- name: gifts
  endpoint:
    path: /gifts
    method: GET
    data_selector: gifts
- name: mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
    data_selector: mutual_friends
- name: user_note
  endpoint:
    path: /fetch_note
    method: GET
    data_selector: user_note
- name: delete_user_note
  endpoint:
    path: /delete_note
    method: DELETE
    data_selector: delete_note
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
- name: member
  endpoint:
    path: /members
    method: GET
    data_selector: members
- name: ReadState
  endpoint:
    path: /readstate
    method: GET
    data_selector: read_states
- name: Asset
  endpoint:
    path: /asset
    method: GET
    data_selector: assets
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: pinned_messages
  endpoint:
    path: /messages/pinned
    method: GET
    data_selector: messages
- name: member_profile
  endpoint:
    path: /members/profile
    method: GET
    data_selector: profile
- name: search_messages
  endpoint:
    path: /messages/search
    method: GET
    data_selector: messages
- name: send_message
  endpoint:
    path: /messages/send
    method: POST
    data_selector: message
- name: unacknowledge_channel
  endpoint:
    path: /channels/unacknowledge
    method: POST
    data_selector: status
- name: upload_files
  endpoint:
    path: /files/upload
    method: POST
    data_selector: uploaded_files
- name: member_profile
  endpoint:
    path: /discord/member_profile
    method: GET
    data_selector: profile
- name: discovery_splash
  endpoint:
    path: /guilds/{guild.id}/discovery_splash
    method: GET
- name: member_count
  endpoint:
    path: /guilds/{guild.id}/member_count
    method: GET
- name: online_count
  endpoint:
    path: /guilds/{guild.id}/online_count
    method: GET
- name: chunked
  endpoint:
    path: /guilds/{guild.id}/chunked
    method: GET
- name: created_at
  endpoint:
    path: /guilds/{guild.id}/created_at
    method: GET
- name: create_dm
  endpoint:
    path: /create_dm
    method: POST
    data_selector: channel
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
    data_selector: friends
- name: fetch_note
  endpoint:
    path: /fetch_note
    method: GET
    data_selector: note
- name: edit_note
  endpoint:
    path: /edit_note
    method: PATCH
    data_selector: note
- name: member_profile
  endpoint:
    path: /member/profile
    method: GET
    data_selector: data
    params: {}
- name: bans
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: banEntries
    params:
      limit: 1000
- name: channels
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
    params: {}
- name: members
  endpoint:
    path: /guilds/{guild_id}/members
    method: GET
    data_selector: members
    params: {}
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
- name: partial_emoji
  endpoint:
    path: /path/to/partial_emoji
    method: GET
    data_selector: data
    params: {}
- name: sticker
  endpoint:
    path: /path/to/sticker
    method: GET
    data_selector: data
    params: {}
- name: sticker_item
  endpoint:
    path: /path/to/sticker_item
    method: GET
    data_selector: data
    params: {}
- name: sticker_pack
  endpoint:
    path: /path/to/sticker_pack
    method: GET
    data_selector: data
    params: {}
- name: standard_sticker
  endpoint:
    path: /path/to/standard_sticker
    method: GET
    data_selector: data
    params: {}
- name: search_messages
  endpoint:
    path: /guilds/{guild_id}/messages/search
    method: GET
- name: prune_members
  endpoint:
    path: /guilds/{guild_id}/prune
    method: POST
- name: templates
  endpoint:
    path: /guilds/{guild_id}/templates
    method: GET
- name: webhooks
  endpoint:
    path: /guilds/{guild_id}/webhooks
    method: GET
- name: estimate_pruned_members
  endpoint:
    path: /guilds/{guild_id}/prune/estimate
    method: GET
- name: invites
  endpoint:
    path: /guilds/{guild_id}/invites
    method: GET
- name: create_template
  endpoint:
    path: /guilds/{guild_id}/templates
    method: POST
- name: create_integration
  endpoint:
    path: /guilds/{guild_id}/integrations
    method: POST
- name: integrations
  endpoint:
    path: /guilds/{guild_id}/integrations
    method: GET
- name: application_commands
  endpoint:
    path: /guilds/{guild_id}/commands
    method: GET
- name: fetch_stickers
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
- name: fetch_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers/{sticker_id}
    method: GET
- name: guild_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
    data_selector: stickers
- name: category_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: forums
  endpoint:
    path: /forums
    method: GET
- name: directory_channels
  endpoint:
    path: /directory_channels
    method: GET
- name: directories
  endpoint:
    path: /directories
    method: GET
- name: text_channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: channel
    params: {}
- name: create_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: POST
    data_selector: sticker
- name: delete_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers/{sticker_id}
    method: DELETE
    data_selector: sticker
- name: subscribed_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: GET
    data_selector: events
- name: fetch_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: GET
    data_selector: events
- name: fetch_scheduled_event
  endpoint:
    path: /guilds/{guild_id}/scheduled-events/{event_id}
    method: GET
    data_selector: event
- name: create_scheduled_event
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: POST
    data_selector: event
- name: top_emojis
  endpoint:
    path: /guilds/{guild_id}/emojis/top
    method: GET
    data_selector: emojis
- name: fetch_emojis
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: GET
    data_selector: emojis
- name: fetch_emoji
  endpoint:
    path: /guilds/{guild_id}/emojis/{emoji_id}
    method: GET
    data_selector: emoji
- name: create_custom_emoji
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: POST
    data_selector: emoji
- name: delete_emoji
  endpoint:
    path: /guilds/{guild_id}/emojis/{emoji_id}
    method: DELETE
    data_selector: emoji
- name: fetch_roles
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
- name: fetch_role
  endpoint:
    path: /guilds/{guild_id}/roles/{role_id}
    method: GET
    data_selector: role
- name: create_role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: POST
    data_selector: role
- name: welcome_screen
  endpoint:
    path: /guilds/{guild_id}/welcome-screen
    method: GET
    data_selector: welcome_screen
- name: applications
  endpoint:
    path: /guilds/{guild_id}/applications
    method: GET
    data_selector: applications
- name: premium_subscriptions
  endpoint:
    path: /guilds/{guild_id}/premium-subscriptions
    method: GET
    data_selector: premium_subscriptions
- name: price_tiers
  endpoint:
    path: /guilds/{guild_id}/price-tiers
    method: GET
    data_selector: price_tiers
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: message
    params: {}
- name: partial_message
  endpoint:
    path: /messages/{message_id}/partial
    method: GET
    data_selector: partial_message
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /channels/{channel_id}/permissions/{target_id}
    method: PUT
    data_selector: permission
    params: {}
- name: automod_rules
  endpoint:
    path: /guilds/{guild_id}/automod/rules
    method: GET
    data_selector: rules
- name: fetch_automod_rule
  endpoint:
    path: /guilds/{guild_id}/automod/rules/{automod_rule_id}
    method: GET
    data_selector: rule
- name: create_automod_rule
  endpoint:
    path: /guilds/{guild_id}/automod/rules
    method: POST
    data_selector: rule
- name: admin_community_eligibility
  endpoint:
    path: /guilds/{guild_id}/admin_community/eligibility
    method: GET
    data_selector: eligible
- name: join_admin_community
  endpoint:
    path: /guilds/{guild_id}/admin_community/join
    method: POST
    data_selector: guild
- name: migrate_command_scope
  endpoint:
    path: /guilds/{guild_id}/migrate_command_scope
    method: POST
    data_selector: integration_ids
- name: scheduled_event
  endpoint:
    path: /scheduled_events
    method: GET
    data_selector: events
- name: stage_channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: channel_data
- name: channel_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pinned_messages
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: members
  endpoint:
    path: /discord/api/members
    method: GET
    data_selector: members
    params: {}
- name: read_state
  endpoint:
    path: /read_state
    method: GET
    data_selector: read_state
- name: scheduled_events
  endpoint:
    path: /scheduled_events
    method: GET
    data_selector: scheduled_events
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send_message
  endpoint:
    path: /send
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: commands
- name: directory_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: directory_entries
- name: roles
  endpoint:
    path: /roles
    method: POST
    data_selector: roles
- name: voice_channel
  endpoint:
    path: /voice_channel
    method: POST
    data_selector: voice_channel
- name: timed_out_until
  endpoint:
    path: /timed_out_until
    method: POST
    data_selector: timed_out_until
- name: forum_channel
  endpoint:
    path: /discord/api/forum_channel
    method: GET
    data_selector: channels
    params: {}
- name: permissions_synced
  endpoint:
    path: /permissions/synced
    method: GET
- name: set_permissions
  endpoint:
    path: /permissions/set
    method: POST
- name: member_profile
  endpoint:
    path: /path/to/member/profile
    method: GET
    data_selector: member_data
    params: {}
- name: PartialEmoji
  endpoint:
    path: /partial_emoji
    method: GET
- name: Sticker
  endpoint:
    path: /sticker
    method: GET
- name: StickerItem
  endpoint:
    path: /sticker_item
    method: GET
- name: StickerPack
  endpoint:
    path: /sticker_pack
    method: GET
- name: StandardSticker
  endpoint:
    path: /standard_sticker
    method: GET
- name: GuildSticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
    data_selector: stickers
- name: CategoryChannel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: categories
- name: forums
  endpoint:
    path: /forums
    method: GET
- name: directory_channels
  endpoint:
    path: /directory_channels
    method: GET
- name: directories
  endpoint:
    path: /directories
    method: GET
- name: requested_at
  endpoint:
    path: /discord/DMChannel/requested_at
    method: GET
- name: is_message_request
  endpoint:
    path: /discord/DMChannel/is_message_request
    method: GET
- name: is_accepted
  endpoint:
    path: /discord/DMChannel/is_accepted
    method: GET
- name: is_spam
  endpoint:
    path: /discord/DMChannel/is_spam
    method: GET
- name: permissions_for
  endpoint:
    path: /discord/DMChannel/permissions_for
    method: GET
- name: add_recipients
  endpoint:
    path: /discord/DMChannel/add_recipients
    method: POST
- name: get_partial_message
  endpoint:
    path: /discord/DMChannel/get_partial_message
    method: GET
- name: close
  endpoint:
    path: /discord/DMChannel/close
    method: POST
- name: connect
  endpoint:
    path: /discord/DMChannel/connect
    method: POST
- name: accept
  endpoint:
    path: /discord/DMChannel/accept
    method: POST
- name: decline
  endpoint:
    path: /discord/DMChannel/decline
    method: POST
- name: ack
  endpoint:
    path: /discord/DMChannel/ack
    method: POST
- name: ack_pins
  endpoint:
    path: /discord/DMChannel/ack_pins
    method: POST
- name: application_commands
  endpoint:
    path: /discord/DMChannel/application_commands
    method: GET
- name: fetch_message
  endpoint:
    path: /discord/DMChannel/fetch_message
    method: GET
- name: greet
  endpoint:
    path: /discord/DMChannel/greet
    method: POST
- name: history
  endpoint:
    path: /discord/DMChannel/history
    method: GET
- name: pins
  endpoint:
    path: /discord/DMChannel/pins
    method: GET
- name: search
  endpoint:
    path: /discord/DMChannel/search
    method: GET
- name: text_channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: channel
- name: messages
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params: {}
- name: group_channel
  endpoint:
    path: /group_channel
    method: GET
    data_selector: channel_data
- name: create_invite
  endpoint:
    path: /channels/{channel_id}/invites
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /channels/{channel_id}/connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: notification_settings
  endpoint:
    path: notification_settings
    method: GET
- name: overwrites
  endpoint:
    path: overwrites
    method: GET
- name: overwrites_for
  endpoint:
    path: overwrites_for
    method: GET
- name: permissions_synced
  endpoint:
    path: permissions_synced
    method: GET
- name: pins
  endpoint:
    path: pins
    method: GET
- name: search
  endpoint:
    path: search
    method: GET
- name: send
  endpoint:
    path: send
    method: POST
- name: set_permissions
  endpoint:
    path: set_permissions
    method: POST
- name: voice_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: channel
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: unacknowledge_messages
  endpoint:
    path: /channels/{channel_id}/messages/unack
    method: POST
    data_selector: unacknowledged
    params: {}
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages/files
    method: POST
    data_selector: uploaded_files
    params: {}
- name: channel
  endpoint:
    path: /channels
    method: POST
    data_selector: channel
    params: {}
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: commands
    params: {}
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: message
    params: {}
- name: partial_message
  endpoint:
    path: /messages/{message_id}/partial
    method: GET
    data_selector: partial_message
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: pinned_messages
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
    params: {}
- name: voice_states
  endpoint:
    path: /voice_states
    method: GET
    data_selector: voice_states
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: stage_instance
  endpoint:
    path: /stage-instances
    method: GET
    data_selector: instances
- name: private_call
  endpoint:
    path: /calls/private
    method: GET
    data_selector: calls
- name: group_call
  endpoint:
    path: /calls/group
    method: GET
    data_selector: calls
- name: message
  endpoint:
    path: /messages
    method: GET
    data_selector: content
    params: {}
- name: read_state
  endpoint:
    path: /channels/{channel_id}/read_state
    method: GET
- name: scheduled_events
  endpoint:
    path: /channels/{channel_id}/scheduled_events
    method: GET
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    params:
      limit: 25
      offset: 0
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
- name: set_permissions
  endpoint:
    path: /channels/{channel_id}/permissions/{overwrite_id}
    method: PUT
- name: PartialMessage
  endpoint:
    path: /discord/PartialMessage
    method: GET
    data_selector: attributes
    params: {}
- name: directory_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: entries
    params: {}
- name: forum_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: clear_reaction
  endpoint:
    path: /clear_reaction
    method: POST
    data_selector: data
    params: {}
- name: create_thread
  endpoint:
    path: /create_thread
    method: POST
    data_selector: data
    params: {}
- name: ack
  endpoint:
    path: /ack
    method: POST
    data_selector: data
    params: {}
- name: unack
  endpoint:
    path: /unack
    method: POST
    data_selector: data
    params: {}
- name: fetch_thread
  endpoint:
    path: /fetch_thread
    method: GET
    data_selector: data
    params: {}
- name: reply
  endpoint:
    path: /reply
    method: POST
    data_selector: data
    params: {}
- name: greet
  endpoint:
    path: /greet
    method: POST
    data_selector: data
    params: {}
- name: end_poll
  endpoint:
    path: /end_poll
    method: POST
    data_selector: data
    params: {}
- name: Attachment
  endpoint:
    path: /attachments
    method: GET
    data_selector: attachments
- name: MessageReference
  endpoint:
    path: /message_references
    method: GET
    data_selector: message_references
- name: RoleSubscriptionInfo
  endpoint:
    path: /role_subscriptions
    method: GET
    data_selector: role_subscriptions
- name: PurchaseNotification
  endpoint:
    path: /purchase_notifications
    method: GET
    data_selector: purchase_notifications
- name: GuildProductPurchase
  endpoint:
    path: /guild_product_purchases
    method: GET
    data_selector: guild_product_purchases
- name: DMChannel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: interaction
  endpoint:
    path: /interactions
    method: POST
    data_selector: interaction
- name: component
  endpoint:
    path: /components
    method: POST
    data_selector: component
- name: message_request
  endpoint:
    path: /discord/DMChannel/message_request
    method: GET
    data_selector: records
- name: message_history
  endpoint:
    path: /discord/DMChannel/history
    method: GET
    data_selector: records
    params:
      limit: '100'
- name: pins
  endpoint:
    path: /discord/DMChannel/pins
    method: GET
    data_selector: records
- name: search
  endpoint:
    path: /discord/DMChannel/search
    method: GET
    data_selector: records
    params:
      limit: '25'
      offset: '0'
- name: File
  endpoint:
    path: /discord/File
    method: POST
    data_selector: file
- name: CloudFile
  endpoint:
    path: /discord/CloudFile
    method: POST
    data_selector: cloud_file
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: unacknowledge_channel
  endpoint:
    path: /channels/{channel_id}/unack
    method: POST
    data_selector: response
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/uploads
    method: POST
    data_selector: uploaded_files
- name: group_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: create_invite
  endpoint:
    path: /channels/{channel_id}/invites
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /channels/{channel_id}/connect
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
- name: application_commands
  endpoint:
    path: /channels/{channel_id}/commands
    method: GET
    data_selector: commands
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
- name: on_message
  endpoint:
    path: /client/event/on_message
    method: POST
    data_selector: message
- name: change_presence
  endpoint:
    path: /client/change_presence
    method: POST
    data_selector: presence
- name: fetch_guilds
  endpoint:
    path: /client/fetch_guilds
    method: GET
    data_selector: guilds
    params:
      with_counts: true
- name: fetch_guild
  endpoint:
    path: /client/fetch_guild/{guild_id}
    method: GET
    data_selector: guild
    params:
      with_counts: true
- name: create_guild
  endpoint:
    path: /client/create_guild
    method: POST
    data_selector: guild
- name: join_guild
  endpoint:
    path: /client/join_guild/{guild_id}
    method: POST
    data_selector: guild
- name: leave_guild
  endpoint:
    path: /client/leave_guild
    method: POST
    data_selector: guild
- name: user_commands
  endpoint:
    path: /user/commands
    method: GET
    data_selector: commands
    params:
      limit: '25'
- name: slash_commands
  endpoint:
    path: /slash/commands
    method: GET
    data_selector: commands
    params: {}
- name: fetch_widget
  endpoint:
    path: /fetch_widget
    method: GET
    data_selector: widget
- name: fetch_user
  endpoint:
    path: /fetch_user/{user_id}
    method: GET
    data_selector: user
- name: fetch_user_profile
  endpoint:
    path: /fetch_user_profile/{user_id}
    method: GET
    data_selector: user_profile
- name: fetch_channel
  endpoint:
    path: /fetch_channel/{channel_id}
    method: GET
    data_selector: channel
- name: fetch_webhook
  endpoint:
    path: /fetch_webhook/{webhook_id}
    method: GET
    data_selector: webhook
- name: fetch_sticker
  endpoint:
    path: /fetch_sticker/{sticker_id}
    method: GET
    data_selector: sticker
- name: fetch_private_channels
  endpoint:
    path: /fetch_private_channels
    method: GET
    data_selector: private_channels
- name: fetch_settings
  endpoint:
    path: /fetch_settings
    method: GET
    data_selector: user_settings
- name: ThreadMember
  endpoint:
    path: /discord/ThreadMember
    method: GET
    data_selector: records
    params: {}
- name: StageInstance
  endpoint:
    path: /discord/StageInstance
    method: GET
    data_selector: records
    params: {}
- name: stage_instance
  endpoint:
    path: /stage_instance
    method: GET
    data_selector: records
- name: private_call
  endpoint:
    path: /private_call
    method: GET
    data_selector: records
- name: group_call
  endpoint:
    path: /group_call
    method: GET
    data_selector: records
- name: call_message
  endpoint:
    path: /call_message
    method: GET
    data_selector: records
- name: message
  endpoint:
    path: /message
    method: GET
    data_selector: records
- name: application
  endpoint:
    path: /create_application
    method: POST
- name: team
  endpoint:
    path: /create_team
    method: POST
- name: companies
  endpoint:
    path: /search_companies
    method: GET
- name: company
  endpoint:
    path: /fetch_company
    method: GET
- name: activity_statistics
  endpoint:
    path: /activity_statistics
    method: GET
- name: global_activity_statistics
  endpoint:
    path: /global_activity_statistics
    method: GET
- name: payment_sources
  endpoint:
    path: /payment_sources
    method: GET
- name: payment_source
  endpoint:
    path: /fetch_payment_source
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: premium_guild_subscriptions
  endpoint:
    path: /premium_guild_subscriptions
    method: GET
- name: premium_guild_subscription_slots
  endpoint:
    path: /premium_guild_subscription_slots
    method: GET
- name: premium_guild_subscription_cooldown
  endpoint:
    path: /premium_guild_subscription_cooldown
    method: GET
- name: subscription
  endpoint:
    path: /fetch_subscription
    method: GET
- name: payments
  endpoint:
    path: /payments
    method: GET
- name: payment
  endpoint:
    path: /fetch_payment
    method: GET
- name: promotions
  endpoint:
    path: /promotions
    method: GET
- name: message
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
- name: message
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
    params: {}
- name: thread
  endpoint:
    path: /threads
    method: GET
    data_selector: threads
    params: {}
- name: Attachment
  endpoint:
    path: /attachments
    method: GET
    data_selector: attachments
- name: MessageReference
  endpoint:
    path: /messages/references
    method: GET
    data_selector: messageReferences
- name: RoleSubscriptionInfo
  endpoint:
    path: /role_subscriptions
    method: GET
    data_selector: roleSubscriptions
- name: PurchaseNotification
  endpoint:
    path: /purchase_notifications
    method: GET
    data_selector: purchaseNotifications
- name: promotions
  endpoint:
    path: /promotions
    method: GET
    data_selector: promotions
    params: {}
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: user_offer
    params:
      payment_gateway: null
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: trial_offer
    params: {}
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: pricing_promotion
    params: {}
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: applications
    params: {}
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: authorized_applications
    params: {}
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
    params:
      with_sku: true
      with_application: true
      include_ended: true
      entitlement_type: null
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
    data_selector: giftable_entitlements
    params: {}
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
    data_selector: premium_entitlements
    params:
      include_consumed: true
- name: fetch_entitlements
  endpoint:
    path: /fetch_entitlements
    method: GET
    data_selector: entitlements
    params:
      application_id: null
      include_consumed: true
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
    data_selector: gift
    params:
      code: null
      with_application: false
      with_subscription_plan: true
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
    data_selector: sku
    params:
      sku_id: null
      localize: true
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
    data_selector: store_listing
    params:
      listing_id: null
      localize: true
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
    data_selector: published_store_listing
    params:
      sku_id: null
      localize: true
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
    data_selector: published_store_listings
    params:
      application_id: null
      localize: true
- name: invite
  endpoint:
    path: /invites/{invite_code}
    method: GET
    data_selector: invite
- name: invite
  endpoint:
    path: /invites/{invite_code}
    method: GET
    data_selector: invite
- name: File
  endpoint:
    path: /discord/File
    method: POST
    data_selector: attributes
- name: CloudFile
  endpoint:
    path: /discord/CloudFile
    method: POST
    data_selector: attributes
- name: commands
  endpoint:
    path: /commands
    method: GET
    data_selector: commands
    params: {}
- name: invite
  endpoint:
    path: /invites/{invite_code}
    method: GET
    data_selector: invite
    params: {}
- name: invite
  endpoint:
    path: /invites/{invite_code}
    method: GET
    data_selector: invite
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
    params:
      application_id: int
      localize: bool
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
    params:
      application_ids: int
      localize: bool
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: subscription_plans
    params:
      sku_id: int
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: subscription_plans
    params:
      sku_ids: int
      country_code: str
      payment_source: PaymentSource
      with_unpublished: bool
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: EULA
    params:
      eula_id: int
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
    params:
      branch_ids: int
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier
    params:
      price_tier: int
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: recent_mentions
    params:
      limit: int
      before: Union[Snowflake, datetime]
      guild: Guild
      roles: bool
      everyone: bool
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: delete_status
    params:
      message: abc.Snowflake
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhook_id
    params:
      application: Application
      channel: TextChannel
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: leave_status
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: unverified_application
    params:
      name: str
      icon: File
      os: OperatingSystem
      executable: str
      publisher: str
      distributor: Distributor
      sku: str
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
    params:
      with_guild_experiments: bool
- name: AudioSource
  endpoint:
    path: /discord/AudioSource
    method: GET
    data_selector: records
- name: PCMAudio
  endpoint:
    path: /discord/PCMAudio
    method: GET
    data_selector: records
- name: FFmpegAudio
  endpoint:
    path: /discord/FFmpegAudio
    method: GET
    data_selector: records
- name: FFmpegPCMAudio
  endpoint:
    path: /discord/FFmpegPCMAudio
    method: GET
    data_selector: records
- name: FFmpegOpusAudio
  endpoint:
    path: /discord/FFmpegOpusAudio
    method: GET
    data_selector: records
- name: on_message
  endpoint:
    path: on_message
    method: POST
- name: change_presence
  endpoint:
    path: change_presence
    method: POST
- name: change_voice_state
  endpoint:
    path: change_voice_state
    method: POST
- name: fetch_guilds
  endpoint:
    path: fetch_guilds
    method: GET
- name: fetch_template
  endpoint:
    path: fetch_template
    method: GET
- name: fetch_guild
  endpoint:
    path: fetch_guild
    method: GET
- name: fetch_guild_preview
  endpoint:
    path: fetch_guild_preview
    method: GET
- name: create_guild
  endpoint:
    path: create_guild
    method: POST
- name: join_guild
  endpoint:
    path: join_guild
    method: POST
- name: leave_guild
  endpoint:
    path: leave_guild
    method: POST
- name: fetch_stage_instance
  endpoint:
    path: fetch_stage_instance
    method: GET
- name: invites
  endpoint:
    path: invites
    method: GET
- name: fetch_invite
  endpoint:
    path: fetch_invite
    method: GET
- name: create_invite
  endpoint:
    path: create_invite
    method: POST
- name: accept_invite
  endpoint:
    path: accept_invite
    method: POST
- name: delete_invite
  endpoint:
    path: delete_invite
    method: DELETE
- name: revoke_invites
  endpoint:
    path: /invites/revoke
    method: POST
- name: fetch_widget
  endpoint:
    path: /guilds/{guild_id}/widget
    method: GET
- name: fetch_user
  endpoint:
    path: /users/{user_id}
    method: GET
- name: fetch_user_profile
  endpoint:
    path: /users/{user_id}/profile
    method: GET
- name: fetch_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
- name: fetch_webhook
  endpoint:
    path: /webhooks/{webhook_id}
    method: GET
- name: fetch_sticker
  endpoint:
    path: /stickers/{sticker_id}
    method: GET
- name: sticker_packs
  endpoint:
    path: /sticker-packs
    method: GET
- name: fetch_sticker_pack
  endpoint:
    path: /sticker-packs/{pack_id}
    method: GET
- name: fetch_notes
  endpoint:
    path: /users/@me/notes
    method: GET
- name: fetch_note
  endpoint:
    path: /users/{user_id}/note
    method: GET
- name: fetch_connections
  endpoint:
    path: /users/@me/connections
    method: GET
- name: fetch_private_channels
  endpoint:
    path: /users/@me/channels
    method: GET
- name: fetch_settings
  endpoint:
    path: /users/@me/settings
    method: GET
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: application
  endpoint:
    path: /create_application
    method: POST
- name: team
  endpoint:
    path: /create_team
    method: POST
- name: companies
  endpoint:
    path: /search_companies
    method: GET
- name: company
  endpoint:
    path: /fetch_company
    method: GET
- name: activity_statistics
  endpoint:
    path: /activity_statistics
    method: GET
- name: global_activity_statistics
  endpoint:
    path: /global_activity_statistics
    method: GET
- name: payment_sources
  endpoint:
    path: /payment_sources
    method: GET
- name: payment_source
  endpoint:
    path: /fetch_payment_source
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: premium_guild_subscriptions
  endpoint:
    path: /premium_guild_subscriptions
    method: GET
- name: premium_guild_subscription_slots
  endpoint:
    path: /premium_guild_subscription_slots
    method: GET
- name: premium_guild_subscription_cooldown
  endpoint:
    path: /premium_guild_subscription_cooldown
    method: GET
- name: subscription
  endpoint:
    path: /fetch_subscription
    method: GET
- name: payments
  endpoint:
    path: /payments
    method: GET
- name: payment
  endpoint:
    path: /fetch_payment
    method: GET
- name: promotions
  endpoint:
    path: /promotions
    method: GET
- name: sync_webhook
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}
    method: POST
    data_selector: content
    params: {}
- name: GuildChannel
  endpoint:
    path: /api/guild_channel
    method: GET
    data_selector: channels
- name: promotions
  endpoint:
    path: /promotions
    method: GET
    data_selector: promotions
    params: {}
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: user_offer
    params: {}
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: trial_offer
    params: {}
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: pricing_promotion
    params: {}
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: applications
    params: {}
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: oauth2_applications
    params: {}
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
    params:
      include_consumed: true
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
    data_selector: giftable_entitlements
    params: {}
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
    data_selector: premium_entitlements
    params:
      include_consumed: true
- name: invites
  endpoint:
    path: /invites
    method: GET
    data_selector: invites
- name: slash_commands
  endpoint:
    path: /applications/{application_id}/guilds/{guild_id}/commands
    method: GET
    data_selector: commands
- name: user_commands
  endpoint:
    path: /users/@me/commands
    method: GET
    data_selector: commands
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: client_user
  endpoint:
    path: /user
    method: GET
    data_selector: user
    params: {}
- name: dm_channel
  endpoint:
    path: /users/@me/channels
    method: POST
    data_selector: channel
- name: application_commands
  endpoint:
    path: /applications/@me/commands
    method: GET
    data_selector: commands
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
- name: fetch_primary_store_listings
  endpoint:
    path: /fetch_primary_store_listings
    method: GET
    data_selector: store_listings
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: sku_subscription_plans
- name: fetch_skus_subscription_plans
  endpoint:
    path: /fetch_skus_subscription_plans
    method: GET
    data_selector: skus_subscription_plans
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: eula
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: recent_mentions
- name: delete_recent_mention
  endpoint:
    path: /delete_recent_mention
    method: DELETE
    data_selector: delete_recent_mention
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: join_active_developer_program
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: leave_active_developer_program
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: report_unverified_application
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
- name: send_message
  endpoint:
    path: /send
    method: POST
- name: upload_files
  endpoint:
    path: /upload
    method: POST
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: '200'
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: '25'
- name: AudioSource
  endpoint:
    path: /AudioSource
    method: GET
- name: PCMAudio
  endpoint:
    path: /PCMAudio
    method: GET
- name: FFmpegAudio
  endpoint:
    path: /FFmpegAudio
    method: GET
- name: FFmpegPCMAudio
  endpoint:
    path: /FFmpegPCMAudio
    method: GET
- name: FFmpegOpusAudio
  endpoint:
    path: /FFmpegOpusAudio
    method: GET
- name: AutoModRule
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: AutoModAction
  endpoint:
    path: /automod/actions
    method: GET
    data_selector: actions
- name: PrimaryGuild
  endpoint:
    path: /PrimaryGuild
    method: GET
    data_selector: attributes
- name: DisplayNameStyle
  endpoint:
    path: /DisplayNameStyle
    method: GET
    data_selector: attributes
- name: UserAffinity
  endpoint:
    path: /UserAffinity
    method: GET
    data_selector: attributes
- name: GuildAffinity
  endpoint:
    path: /GuildAffinity
    method: GET
    data_selector: attributes
- name: ChannelAffinity
  endpoint:
    path: /ChannelAffinity
    method: GET
    data_selector: attributes
- name: BillingAddress
  endpoint:
    path: /BillingAddress
    method: GET
    data_selector: attributes
- name: PaymentSource
  endpoint:
    path: /PaymentSource
    method: GET
    data_selector: attributes
- name: PremiumUsage
  endpoint:
    path: /PremiumUsage
    method: GET
    data_selector: attributes
- name: connection
  endpoint:
    path: /connections
    method: GET
- name: friend_suggestion
  endpoint:
    path: /friend_suggestions
    method: GET
- name: user_settings
  endpoint:
    path: /user/settings
    method: GET
- name: legacy_user_settings
  endpoint:
    path: /discord/api/user/settings
    method: GET
    data_selector: settings
    params: {}
- name: invite_create
  endpoint:
    path: /discord/on_invite_create
    method: POST
- name: invite_delete
  endpoint:
    path: /discord/on_invite_delete
    method: POST
- name: guild_feature_ack
  endpoint:
    path: /discord/on_guild_feature_ack
    method: POST
- name: integration_create
  endpoint:
    path: /discord/on_integration_create
    method: POST
- name: integration_update
  endpoint:
    path: /discord/on_integration_update
    method: POST
- name: guild_integrations_update
  endpoint:
    path: /discord/on_guild_integrations_update
    method: POST
- name: webhooks_update
  endpoint:
    path: /discord/on_webhooks_update
    method: POST
- name: raw_integration_delete
  endpoint:
    path: /discord/on_raw_integration_delete
    method: POST
- name: interaction
  endpoint:
    path: /discord/on_interaction
    method: POST
- name: interaction_finish
  endpoint:
    path: /discord/on_interaction_finish
    method: POST
- name: modal
  endpoint:
    path: /discord/on_modal
    method: POST
- name: member_join
  endpoint:
    path: /discord/on_member_join
    method: POST
- name: member_remove
  endpoint:
    path: /discord/on_member_remove
    method: POST
- name: raw_member_remove
  endpoint:
    path: /discord/on_raw_member_remove
    method: POST
- name: member_update
  endpoint:
    path: /discord/on_member_update
    method: POST
- name: user_update
  endpoint:
    path: /discord/on_user_update
    method: POST
- name: member_ban
  endpoint:
    path: /discord/on_member_ban
    method: POST
- name: member_unban
  endpoint:
    path: /discord/on_member_unban
    method: POST
- name: presence_update
  endpoint:
    path: /discord/on_presence_update
    method: POST
- name: raw_member_list_update
  endpoint:
    path: /discord/on_raw_member_list_update
    method: POST
- name: message
  endpoint:
    path: /discord/on_message
    method: POST
- name: message_edit
  endpoint:
    path: /discord/on_message_edit
    method: POST
- name: message_delete
  endpoint:
    path: /discord/on_message_delete
    method: POST
- name: bulk_message_delete
  endpoint:
    path: /discord/on_bulk_message_delete
    method: POST
- name: message_ack
  endpoint:
    path: /discord/on_message_ack
    method: POST
- name: raw_message_edit
  endpoint:
    path: /discord/on_raw_message_edit
    method: POST
- name: raw_message_delete
  endpoint:
    path: /discord/on_raw_message_delete
    method: POST
- name: raw_bulk_message_delete
  endpoint:
    path: /discord/on_raw_bulk_message_delete
    method: POST
- name: raw_message_ack
  endpoint:
    path: /discord/on_raw_message_ack
    method: POST
- name: recent_mention_delete
  endpoint:
    path: /discord/on_recent_mention_delete
    method: POST
- name: raw_recent_mention_delete
  endpoint:
    path: /discord/on_raw_recent_mention_delete
    method: POST
- name: poll_vote_add
  endpoint:
    path: /discord/on_poll_vote_add
    method: POST
- name: poll_vote_remove
  endpoint:
    path: /discord/on_poll_vote_remove
    method: POST
- name: raw_poll_vote_add
  endpoint:
    path: /discord/on_raw_poll_vote_add
    method: POST
- name: raw_poll_vote_remove
  endpoint:
    path: /discord/on_raw_poll_vote_remove
    method: POST
- name: audit_log
  endpoint:
    path: /audit/log
    method: GET
    data_selector: audit_logs
    params: {}
- name: uploads_store_asset
  endpoint:
    path: /uploads/store_asset
    method: POST
    data_selector: asset
- name: skus
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    data_selector: sku
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
    data_selector: sku
- name: create_sku
  endpoint:
    path: /create_sku
    method: POST
    data_selector: sku
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: fetch_entitlement
  endpoint:
    path: /fetch_entitlement/{entitlement_id}
    method: GET
    data_selector: entitlement
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
- name: create_gift_batch
  endpoint:
    path: /create_gift_batch
    method: POST
    data_selector: gift_batch
- name: branches
  endpoint:
    path: /branches
    method: GET
    data_selector: branches
- name: create_branch
  endpoint:
    path: /create_branch
    method: POST
    data_selector: branch
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
    data_selector: manifest_labels
- name: fetch_discoverability
  endpoint:
    path: /fetch_discoverability
    method: GET
    data_selector: discoverability
- name: fetch_embedded_activity_config
  endpoint:
    path: /fetch_embedded_activity_config
    method: GET
    data_selector: embedded_activity_config
- name: edit_embedded_activity_config
  endpoint:
    path: /edit_embedded_activity_config
    method: PATCH
    data_selector: activity_config
- name: audit_log_diff
  endpoint:
    path: /audit_log_diff
    method: GET
    data_selector: changes
- name: application_profile
  endpoint:
    path: /applications/@me
    method: GET
    data_selector: data
- name: application_bot
  endpoint:
    path: /applications/@me/bot
    method: GET
    data_selector: data
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: 25
- name: send
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
    params: {}
- name: SyncWebhook
  endpoint:
    path: /syncwebhook
    method: GET
    data_selector: webhook
    params: {}
- name: guild_channel
  endpoint:
    path: /api/v1/guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: invites
  endpoint:
    path: /invites
    method: GET
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
- name: send
  endpoint:
    path: /send
    method: POST
- name: ApplicationBranch
  endpoint:
    path: /application/branch
    method: GET
- name: ApplicationBuild
  endpoint:
    path: /application/build
    method: GET
- name: ManifestLabel
  endpoint:
    path: /manifest/label
    method: GET
- name: Manifest
  endpoint:
    path: /manifest
    method: GET
- name: Team
  endpoint:
    path: /team
    method: GET
- name: voice_client
  endpoint:
    path: /connect
    method: POST
    data_selector: voiceClient
- name: dm_channel
  endpoint:
    path: /create_dm
    method: POST
    data_selector: dmChannel
- name: message
  endpoint:
    path: /fetch_message
    method: GET
    data_selector: message
- name: mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
    data_selector: mutualFriends
- name: note
  endpoint:
    path: /fetch_note
    method: GET
    data_selector: note
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pinnedMessages
- name: fetch_message
  endpoint:
    path: /fetch_message/{id}
    method: GET
    data_selector: message
    params: {}
- name: ack
  endpoint:
    path: /ack
    method: POST
    data_selector: ack_response
    params: {}
- name: unack
  endpoint:
    path: /unack
    method: POST
    data_selector: unack_response
    params: {}
- name: ack_pins
  endpoint:
    path: /ack_pins
    method: POST
    data_selector: ack_pins_response
    params: {}
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: messages
    params:
      limit: '100'
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: search_results
    params:
      limit: '25'
      offset: '0'
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
    data_selector: application_commands
    params: {}
- name: ApplicationCommand
  endpoint:
    path: /application-commands
    method: GET
    data_selector: commands
- name: ClientUser
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
- name: user
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: voice
  endpoint:
    path: /voice
    method: GET
    data_selector: voice_state
    params: {}
- name: team_payout
  endpoint:
    path: /team_payout
    method: GET
    data_selector: payouts
    params: {}
- name: company
  endpoint:
    path: /company
    method: GET
    data_selector: companies
    params: {}
- name: eula
  endpoint:
    path: /eula
    method: GET
    data_selector: eulas
    params: {}
- name: entitlement
  endpoint:
    path: /entitlement
    method: GET
    data_selector: entitlements
    params: {}
- name: Subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: fetch_message
  endpoint:
    path: /fetch_message/{id}
    method: GET
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
- name: fetch_note
  endpoint:
    path: /fetch_note
    method: GET
- name: pins
  endpoint:
    path: /pins
    method: GET
- name: history
  endpoint:
    path: /history
    method: GET
    params:
      limit: 100
- name: search
  endpoint:
    path: /search
    method: GET
    params:
      limit: 25
      offset: 0
- name: SubscriptionTrial
  endpoint:
    path: /subscription/trial
    method: GET
    data_selector: trial
    params: {}
- name: PremiumGuildSubscription
  endpoint:
    path: /premium/guild/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: PremiumGuildSubscriptionSlot
  endpoint:
    path: /premium/guild/subscription/slot
    method: GET
    data_selector: slot
    params: {}
- name: SubscriptionPlan
  endpoint:
    path: /subscription/plan
    method: GET
    data_selector: plan
    params: {}
- name: user_profile
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user_profile
    params: {}
- name: subscription_plan_prices
  endpoint:
    path: /subscription-plan-prices
    method: GET
    data_selector: country_prices
    params: {}
- name: payment
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
    params: {}
- name: sku
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
    params: {}
- name: sku
  endpoint:
    path: /discord/SKU
    method: GET
    data_selector: records
- name: channel_message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: '200'
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
    params:
      limit: '25'
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: records
- name: sku_price
  endpoint:
    path: /sku/price
    method: GET
    data_selector: records
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
- name: FriendSuggestionReason
  endpoint:
    path: /FriendSuggestionReason
    method: GET
    data_selector: attributes
- name: UserSettings
  endpoint:
    path: /UserSettings
    method: GET
    data_selector: attributes
- name: legacy_user_settings
  endpoint:
    path: /legacy/user/settings
    method: GET
    data_selector: settings
- name: guild_settings
  endpoint:
    path: /guild/settings
    method: GET
    data_selector: guildSettings
- name: channel_settings
  endpoint:
    path: /channel/settings
    method: GET
    data_selector: channelSettings
- name: create_directory_channel
  endpoint:
    path: /create_directory_channel
    method: POST
    data_selector: channel
- name: create_forum
  endpoint:
    path: /create_forum
    method: POST
    data_selector: forum
- name: create_forum_channel
  endpoint:
    path: /create_forum_channel
    method: POST
    data_selector: forum_channel
- name: leave
  endpoint:
    path: /leave
    method: POST
    data_selector: guild
- name: delete
  endpoint:
    path: /delete
    method: DELETE
    data_selector: guild
- name: edit
  endpoint:
    path: /edit
    method: PATCH
    data_selector: guild
- name: TrackingSettings
  endpoint:
    path: /discord/TrackingSettings
    method: GET
    data_selector: attributes
    params: {}
- name: EmailSettings
  endpoint:
    path: /discord/EmailSettings
    method: GET
    data_selector: attributes
    params: {}
- name: GuildFolder
  endpoint:
    path: /discord/GuildFolder
    method: GET
    data_selector: attributes
    params: {}
- name: GuildProgress
  endpoint:
    path: /discord/GuildProgress
    method: GET
    data_selector: attributes
    params: {}
- name: AudioContext
  endpoint:
    path: /discord/AudioContext
    method: GET
    data_selector: attributes
    params: {}
- name: MuteConfig
  endpoint:
    path: /discord/MuteConfig
    method: GET
    data_selector: attributes
    params: {}
- name: bans
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: ban_entries
    params:
      limit: 1000
- name: application
  endpoint:
    path: /applications/@me
    method: GET
    data_selector: data
- name: skus
  endpoint:
    path: /skus
    method: GET
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
- name: create_sku
  endpoint:
    path: /create_sku
    method: POST
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
- name: fetch_entitlement
  endpoint:
    path: /fetch_entitlement/{entitlement_id}
    method: GET
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
- name: create_gift_batch
  endpoint:
    path: /create_gift_batch
    method: POST
- name: branches
  endpoint:
    path: /branches
    method: GET
- name: create_branch
  endpoint:
    path: /create_branch
    method: POST
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
- name: fetch_discoverability
  endpoint:
    path: /fetch_discoverability
    method: GET
- name: fetch_embedded_activity_config
  endpoint:
    path: /fetch_embedded_activity_config
    method: GET
- name: edit_embedded_activity_config
  endpoint:
    path: /edit_embedded_activity_config
    method: POST
- name: create_sticker
  endpoint:
    path: /guilds/{guild.id}/stickers
    method: POST
    data_selector: sticker
    params:
      permissions: manage_emojis_and_stickers
- name: delete_sticker
  endpoint:
    path: /guilds/{guild.id}/stickers/{sticker.id}
    method: DELETE
    data_selector: sticker
    params:
      permissions: manage_emojis_and_stickers
- name: fetch_scheduled_events
  endpoint:
    path: /guilds/{guild.id}/scheduled-events
    method: GET
    data_selector: scheduled_events
    params: {}
- name: fetch_emojis
  endpoint:
    path: /guilds/{guild.id}/emojis
    method: GET
    data_selector: emojis
    params: {}
- name: create_custom_emoji
  endpoint:
    path: /guilds/{guild.id}/emojis
    method: POST
    data_selector: emoji
    params:
      permissions: manage_emojis
- name: delete_emoji
  endpoint:
    path: /guilds/{guild.id}/emojis/{emoji.id}
    method: DELETE
    data_selector: emoji
    params:
      permissions: manage_emojis
- name: fetch_roles
  endpoint:
    path: /guilds/{guild.id}/roles
    method: GET
    data_selector: roles
    params: {}
- name: create_role
  endpoint:
    path: /guilds/{guild.id}/roles
    method: POST
    data_selector: role
    params:
      permissions: manage_roles
- name: bot
  endpoint:
    path: /bots
    method: GET
- name: welcome_screen
  endpoint:
    path: /guilds/{guild_id}/welcome-screen
    method: GET
    data_selector: welcome_screen
    params: {}
- name: applications
  endpoint:
    path: /guilds/{guild_id}/applications
    method: GET
    data_selector: applications
    params: {}
- name: premium_subscriptions
  endpoint:
    path: /guilds/{guild_id}/premium-subscriptions
    method: GET
    data_selector: premium_subscriptions
    params: {}
- name: price_tiers
  endpoint:
    path: /guilds/{guild_id}/price-tiers
    method: GET
    data_selector: price_tiers
    params: {}
- name: members
  endpoint:
    path: /guilds/{guild_id}/members
    method: GET
    data_selector: members
    params: {}
- name: application_activity_statistics
  endpoint:
    path: /application/activity/statistics
    method: GET
    data_selector: statistics
    params: {}
- name: automod_rules
  endpoint:
    path: /guilds/{guild_id}/automod/rules
    method: GET
    data_selector: automod_rules
- name: fetch_automod_rule
  endpoint:
    path: /guilds/{guild_id}/automod/rules/{automod_rule_id}
    method: GET
    data_selector: automod_rule
- name: create_automod_rule
  endpoint:
    path: /guilds/{guild_id}/automod/rules
    method: POST
    data_selector: automod_rule
- name: admin_community_eligibility
  endpoint:
    path: /guilds/{guild_id}/admin_community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /guilds/{guild_id}/admin_community/join
    method: POST
    data_selector: admin_community
- name: migrate_command_scope
  endpoint:
    path: /guilds/{guild_id}/migrate_command_scope
    method: POST
    data_selector: integration_ids
- name: ApplicationBranch
  endpoint:
    path: /discord/ApplicationBranch
    method: GET
    data_selector: builds
- name: ApplicationBuild
  endpoint:
    path: /discord/ApplicationBuild
    method: GET
    data_selector: builds
- name: ManifestLabel
  endpoint:
    path: /discord/ManifestLabel
    method: GET
    data_selector: labels
- name: Manifest
  endpoint:
    path: /discord/Manifest
    method: GET
    data_selector: manifests
- name: Team
  endpoint:
    path: /discord/Team
    method: GET
    data_selector: teams
- name: ban_entry
  endpoint:
    path: /bans
    method: GET
    data_selector: bans
    params: {}
- name: bulk_ban_result
  endpoint:
    path: /bulk_ban
    method: POST
    data_selector: bulkBanResult
    params: {}
- name: role
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
    params: {}
- name: team
  endpoint:
    path: /discord/team
    method: GET
    data_selector: records
    params: {}
- name: voice_client
  endpoint:
    path: /connect
    method: POST
    data_selector: voice_client
    params:
      timeout: '30.0'
      reconnect: true
- name: dm_channel
  endpoint:
    path: /create_dm
    method: POST
    data_selector: dm_channel
    params: {}
- name: note
  endpoint:
    path: /delete_note
    method: DELETE
    data_selector: note
    params: {}
- name: message_history
  endpoint:
    path: /history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: auto_moderation_rule
  endpoint:
    path: /auto-moderation/rules
    method: POST
    data_selector: rules
    params: {}
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params:
      query: null
      limit: null
      command_ids: null
      application: null
      with_applications: true
- name: member
  endpoint:
    path: /guilds/{guild_id}/members/{user_id}
    method: GET
    data_selector: member
- name: pinned_messages
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: messages
- name: member_profile
  endpoint:
    path: /guilds/{guild_id}/members/{user_id}
    method: GET
    data_selector: profile
- name: message_search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages/files
    method: POST
    data_selector: uploaded_files
- name: subscription
  endpoint:
    path: /discord/subscription
    method: GET
    data_selector: records
    params: {}
- name: member_profile
  endpoint:
    path: /discord/member/profile
    method: GET
    data_selector: profile
    params: {}
- name: member_profile
  endpoint:
    path: /members/@me
    method: GET
    data_selector: member_data
- name: SubscriptionTrial
  endpoint:
    path: /discord/SubscriptionTrial
    method: GET
    data_selector: subscription_trials
- name: PremiumGuildSubscription
  endpoint:
    path: /discord/PremiumGuildSubscription
    method: GET
    data_selector: premium_guild_subscriptions
- name: PremiumGuildSubscriptionSlot
  endpoint:
    path: /discord/PremiumGuildSubscriptionSlot
    method: GET
    data_selector: premium_guild_subscription_slots
- name: PremiumGuildSubscriptionCooldown
  endpoint:
    path: /discord/PremiumGuildSubscriptionCooldown
    method: GET
    data_selector: premium_guild_subscription_cooldowns
- name: SubscriptionPlan
  endpoint:
    path: /discord/SubscriptionPlan
    method: GET
    data_selector: subscription_plans
- name: payment
  endpoint:
    path: /payment
    method: GET
    data_selector: payments
    params: {}
- name: sku
  endpoint:
    path: /sku
    method: GET
    data_selector: skus
    params: {}
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: records
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: send_friend_request
  endpoint:
    path: /send_friend_request
    method: POST
    data_selector: request
    params: {}
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: commands
    params: {}
- name: timeout
  endpoint:
    path: /timeout
    method: POST
    data_selector: timeout
    params: {}
- name: unack
  endpoint:
    path: /unack
    method: POST
    data_selector: unacknowledged
    params: {}
- name: unban
  endpoint:
    path: /unban
    method: POST
    data_selector: unbanned
    params: {}
- name: unblock
  endpoint:
    path: /unblock
    method: POST
    data_selector: unblocked
    params: {}
- name: PartialEmoji
  endpoint:
    path: /partial_emoji
    method: GET
    data_selector: records
- name: Sticker
  endpoint:
    path: /sticker
    method: GET
    data_selector: records
- name: StickerItem
  endpoint:
    path: /sticker_item
    method: GET
    data_selector: records
- name: StickerPack
  endpoint:
    path: /sticker_pack
    method: GET
    data_selector: records
- name: StandardSticker
  endpoint:
    path: /standard_sticker
    method: GET
    data_selector: records
- name: discovery_splash
  endpoint:
    path: /guilds/{guild.id}/discovery_splash
    method: GET
    data_selector: Asset
- name: member_count
  endpoint:
    path: /guilds/{guild.id}/member_count
    method: GET
    data_selector: int
- name: online_count
  endpoint:
    path: /guilds/{guild.id}/online_count
    method: GET
    data_selector: int
- name: chunked
  endpoint:
    path: /guilds/{guild.id}/chunked
    method: GET
    data_selector: bool
- name: created_at
  endpoint:
    path: /guilds/{guild.id}/created_at
    method: GET
    data_selector: datetime.datetime
- name: bans
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: bans
    params:
      limit: 1000
- name: forums
  endpoint:
    path: /forums
    method: GET
    data_selector: List[ForumChannel]
- name: directory_channels
  endpoint:
    path: /directory_channels
    method: GET
    data_selector: List[DirectoryChannel]
- name: directories
  endpoint:
    path: /directories
    method: GET
    data_selector: List[DirectoryChannel]
- name: text_channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: channel
    params: {}
- name: notification_settings
  endpoint:
    path: /channels/{channel.id}/notification_settings
    method: GET
    data_selector: notification_settings
- name: overwrites
  endpoint:
    path: /channels/{channel.id}/overwrites
    method: GET
    data_selector: overwrites
- name: pins
  endpoint:
    path: /channels/{channel.id}/pins
    method: GET
    data_selector: pins
- name: search
  endpoint:
    path: /channels/{channel.id}/messages/search
    method: GET
    data_selector: messages
- name: send
  endpoint:
    path: /channels/{channel.id}/messages
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /channels/{channel.id}/permissions/{overwrite.id}
    method: PUT
    data_selector: permissions
- name: voice_channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
- name: automod_rules
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: rules
- name: fetch_automod_rule
  endpoint:
    path: /automod/rules/{automod_rule_id}
    method: GET
    data_selector: rule
- name: create_automod_rule
  endpoint:
    path: /automod/rules
    method: POST
    data_selector: rule
- name: admin_community_eligibility
  endpoint:
    path: /admin/community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /admin/community/join
    method: POST
    data_selector: community
- name: migrate_command_scope
  endpoint:
    path: /guilds/{guild_id}/migrate
    method: POST
    data_selector: migrated_ids
- name: directory_broadcast_eligibility
  endpoint:
    path: /directory/broadcast/eligibility
    method: GET
    data_selector: eligibility
- name: invites_paused
  endpoint:
    path: /guilds/{guild_id}/invites/paused
    method: GET
    data_selector: paused
- name: dms_paused
  endpoint:
    path: /guilds/{guild_id}/dms/paused
    method: GET
    data_selector: paused
- name: ban_entry
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: ban_entries
    params: {}
- name: bulk_ban_result
  endpoint:
    path: /guilds/{guild_id}/bans/bulk
    method: POST
    data_selector: bulk_ban_results
    params: {}
- name: role
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
    params: {}
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: message
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: auto_mod_rule
  endpoint:
    path: /auto_mod/rules
    method: GET
    data_selector: rules
- name: integration_application
  endpoint:
    path: /integration/applications
    method: GET
    data_selector: applications
- name: search
  endpoint:
    path: /channel/search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /channel/send
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /channel/set_permissions
    method: POST
    data_selector: permissions
    params: {}
- name: stage_channel
  endpoint:
    path: /stage_channel
    method: GET
    data_selector: records
- name: member
  endpoint:
    path: /discord/api/member
    method: GET
    data_selector: records
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
    data_selector: mutual_friends
- name: fetch_note
  endpoint:
    path: /fetch_note
    method: GET
    data_selector: note
- name: delete_note
  endpoint:
    path: /delete_note
    method: DELETE
    data_selector: note
- name: history
  endpoint:
    path: /channel/history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channel/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /channel/pins
    method: GET
    data_selector: pinnedMessages
    params: {}
- name: purge
  endpoint:
    path: /channel/purge
    method: DELETE
    data_selector: deletedMessages
    params:
      limit: 100
- name: read_state
  endpoint:
    path: /read_state
    method: GET
- name: scheduled_events
  endpoint:
    path: /scheduled_events
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
- name: pinned_messages
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: messages
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: unacknowledge_messages
  endpoint:
    path: /channels/{channel_id}/messages/unack
    method: POST
    data_selector: unacknowledged
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages/files
    method: POST
    data_selector: uploaded_files
- name: member_profile
  endpoint:
    path: /api/v1/members
    method: GET
    data_selector: members
    params: {}
- name: directory_channel
  endpoint:
    path: /discord/DirectoryChannel
    method: GET
    data_selector: entries
    params: {}
- name: webhooks
  endpoint:
    path: /discord/DirectoryChannel/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: forum_channel
  endpoint:
    path: /discord/forum_channel
    method: GET
    data_selector: forum_channels
- name: DMChannel
  endpoint:
    path: /channels/{channel.id}
    method: GET
    data_selector: data
- name: guild_avatar_decoration
  endpoint:
    path: /guild_avatar_decoration
    method: GET
- name: guild_avatar_decoration_expires_at
  endpoint:
    path: /guild_avatar_decoration_expires_at
    method: GET
- name: guild_avatar_decoration_sku_id
  endpoint:
    path: /guild_avatar_decoration_sku_id
    method: GET
- name: guild_banner
  endpoint:
    path: /guild_banner
    method: GET
- name: guild_permissions
  endpoint:
    path: /guild_permissions
    method: GET
- name: history
  endpoint:
    path: /history
    method: GET
    params:
      limit: 100
- name: id
  endpoint:
    path: /id
    method: GET
- name: is_blocked
  endpoint:
    path: /is_blocked
    method: GET
- name: is_blocker
  endpoint:
    path: /is_blocker
    method: GET
- name: is_friend
  endpoint:
    path: /is_friend
    method: GET
- name: is_on_mobile
  endpoint:
    path: /is_on_mobile
    method: GET
- name: is_pomelo
  endpoint:
    path: /is_pomelo
    method: GET
- name: is_timed_out
  endpoint:
    path: /is_timed_out
    method: GET
- name: mention
  endpoint:
    path: /mention
    method: GET
- name: mobile_status
  endpoint:
    path: /mobile_status
    method: GET
- name: mutual_friends_count
  endpoint:
    path: /mutual_friends_count
    method: GET
- name: name
  endpoint:
    path: /name
    method: GET
- name: premium
  endpoint:
    path: /premium
    method: GET
- name: primary_guild
  endpoint:
    path: /primary_guild
    method: GET
- name: public_flags
  endpoint:
    path: /public_flags
    method: GET
- name: raw_status
  endpoint:
    path: /raw_status
    method: GET
- name: relationship
  endpoint:
    path: /relationship
    method: GET
- name: roles
  endpoint:
    path: /roles
    method: GET
- name: message_request
  endpoint:
    path: /discord/dm_channel/message_request
    method: GET
- name: direct_message
  endpoint:
    path: /discord/dm_channel/direct_message
    method: GET
- name: send_message
  endpoint:
    path: /path/to/send/message
    method: POST
    data_selector: message_data
- name: send_friend_request
  endpoint:
    path: /path/to/send/friend/request
    method: POST
    data_selector: friend_request_data
- name: slash_commands
  endpoint:
    path: /path/to/slash/commands
    method: GET
    data_selector: commands_data
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: upload_files
  endpoint:
    path: /channels/{channel_id}/messages/{message_id}/attachments
    method: POST
    data_selector: attachments
- name: unacknowledge_messages
  endpoint:
    path: /channels/{channel_id}/messages/unack
    method: POST
    data_selector: unacknowledged
- name: upload_files
  endpoint:
    path: /upload_files
    method: POST
    data_selector: files
    params:
      max_files: 10
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: group_channel
  endpoint:
    path: /group_channel
    method: GET
    data_selector: channel_details
- name: PartialEmoji
  endpoint:
    path: /api/vX/emojis
    method: GET
    data_selector: emojis
- name: Sticker
  endpoint:
    path: /api/vX/stickers
    method: GET
    data_selector: stickers
- name: StickerItem
  endpoint:
    path: /api/vX/sticker_items
    method: GET
    data_selector: sticker_items
- name: StickerPack
  endpoint:
    path: /api/vX/sticker_packs
    method: GET
    data_selector: sticker_packs
- name: StandardSticker
  endpoint:
    path: /api/vX/standard_stickers
    method: GET
    data_selector: standard_stickers
- name: guild_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
    data_selector: stickers
- name: category_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: channels
- name: channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: create_invite
  endpoint:
    path: /channels/{channel_id}/invites
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /channels/{channel_id}/voice
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
- name: ack
  endpoint:
    path: /channels/{channel_id}/ack
    method: POST
    data_selector: ack_response
- name: ack_pins
  endpoint:
    path: /channels/{channel_id}/ack_pins
    method: POST
    data_selector: ack_pins_response
- name: application_commands
  endpoint:
    path: /channels/{channel_id}/application_commands
    method: GET
    data_selector: application_commands
- name: fetch_message
  endpoint:
    path: /channels/{channel_id}/messages/{id}
    method: GET
    data_selector: message
- name: greet
  endpoint:
    path: /channels/{channel_id}/greet
    method: POST
    data_selector: greet_response
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: search_results
    params:
      limit: 25
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: user_commands
  endpoint:
    path: /user_commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: commands
    params: {}
- name: notification_settings
  endpoint:
    path: /notification_settings
    method: GET
    data_selector: settings
- name: overwrites
  endpoint:
    path: /overwrites
    method: GET
    data_selector: overwrites
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: pinned_messages
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: sent_message
- name: set_permissions
  endpoint:
    path: /permissions
    method: POST
    data_selector: updated_permissions
- name: channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: channel
- name: message_search
  endpoint:
    params:
      slop: 2
- name: send_message
  endpoint:
    params:
      tts: false
- name: unacknowledge_channel
  endpoint:
    params:
      mention_count: null
- name: upload_files
  endpoint:
    params:
      files: []
- name: message
  endpoint:
    path: /channels/{channel_id}/messages/{message_id}
    method: GET
    data_selector: message
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: invites
    params: {}
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: message
  endpoint:
    path: /messages
    method: GET
    data_selector: records
- name: search
  endpoint:
    path: /search
    method: GET
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
- name: voice_states
  endpoint:
    path: /voice_states
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: Component
  endpoint:
    path: /discord/Component
    method: GET
    data_selector: ''
    params: {}
- name: ActionRow
  endpoint:
    path: /discord/ActionRow
    method: GET
    data_selector: ''
    params: {}
- name: Button
  endpoint:
    path: /discord/Button
    method: GET
    data_selector: ''
    params: {}
- name: SelectMenu
  endpoint:
    path: /discord/SelectMenu
    method: GET
    data_selector: ''
    params: {}
- name: TextInput
  endpoint:
    path: /discord/TextInput
    method: GET
    data_selector: ''
    params: {}
- name: invite
  endpoint:
    path: /invites/{code}
    method: GET
    data_selector: invite
    params: {}
- name: invite
  endpoint:
    path: /api/v9/invite/{invite_code}
    method: GET
    data_selector: invite
    params: {}
- name: read_state
  endpoint:
    path: /read_state
    method: GET
    data_selector: read_state
- name: scheduled_events
  endpoint:
    path: /scheduled_events
    method: GET
    data_selector: scheduled_events
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /set_permissions
    method: POST
    data_selector: permissions
- name: slash_commands
  endpoint:
    path: /slash_commands
    method: GET
    data_selector: commands
- name: directory_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: entries
    params: {}
- name: File
  endpoint:
    path: /discord/File
    method: POST
    data_selector: file
    params: {}
- name: CloudFile
  endpoint:
    path: /discord/CloudFile
    method: POST
    data_selector: file
    params: {}
- name: forum_channel
  endpoint:
    path: /discord/forum_channel
    method: GET
    data_selector: records
- name: widget
  endpoint:
    path: /api/v1/widget
    method: GET
    data_selector: widget
- name: permissions_synced
  endpoint:
    path: /permissions/synced
    method: GET
    data_selector: permissions
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
- name: user_profile
  endpoint:
    path: /user/profile
    method: GET
    data_selector: profile
- name: welcome_screen
  endpoint:
    path: /discord/welcome_screen
    method: GET
    data_selector: description
    params: {}
- name: tutorial
  endpoint:
    path: /discord/tutorial
    method: GET
    data_selector: indicators
    params: {}
- name: group_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: RawMessageDeleteEvent
  endpoint:
    path: /events/raw_message_delete
    method: POST
    data_selector: payload
    params: {}
- name: RawBulkMessageDeleteEvent
  endpoint:
    path: /events/raw_bulk_message_delete
    method: POST
    data_selector: payload
    params: {}
- name: RawMessageUpdateEvent
  endpoint:
    path: /events/raw_message_update
    method: POST
    data_selector: payload
    params: {}
- name: RawPollVoteActionEvent
  endpoint:
    path: /events/raw_poll_vote_action
    method: POST
    data_selector: payload
    params: {}
- name: RawReactionActionEvent
  endpoint:
    path: /events/raw_reaction_action
    method: POST
    data_selector: payload
    params: {}
- name: RawReactionClearEvent
  endpoint:
    path: /events/raw_reaction_clear
    method: POST
    data_selector: payload
    params: {}
- name: RawReactionClearEmojiEvent
  endpoint:
    path: /events/raw_reaction_clear_emoji
    method: POST
    data_selector: payload
    params: {}
- name: RawIntegrationDeleteEvent
  endpoint:
    path: /events/raw_integration_delete
    method: POST
    data_selector: payload
    params: {}
- name: RawThreadMembersUpdate
  endpoint:
    path: /events/raw_thread_members_update
    method: POST
    data_selector: payload
    params: {}
- name: RawThreadDeleteEvent
  endpoint:
    path: /events/raw_thread_delete
    method: POST
    data_selector: payload
    params: {}
- name: RawMemberRemoveEvent
  endpoint:
    path: /events/raw_member_remove
    method: POST
    data_selector: payload
    params: {}
- name: File
  endpoint:
    path: /discord/File
    method: POST
    data_selector: attributes
    params: {}
- name: CloudFile
  endpoint:
    path: /discord/CloudFile
    method: POST
    data_selector: attributes
    params: {}
- name: create_invite
  endpoint:
    path: /channels/{channel_id}/invites
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /channels/{channel_id}/connect
    method: POST
    data_selector: voice_client
- name: ack
  endpoint:
    path: /channels/{channel_id}/ack
    method: POST
- name: ack_pins
  endpoint:
    path: /channels/{channel_id}/ack_pins
    method: POST
- name: application_commands
  endpoint:
    path: /channels/{channel_id}/application_commands
    method: GET
    data_selector: commands
- name: fetch_message
  endpoint:
    path: /channels/{channel_id}/messages/{id}
    method: GET
    data_selector: message
- name: greet
  endpoint:
    path: /channels/{channel_id}/greet
    method: POST
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
- name: search
  endpoint:
    path: /channels/{channel_id}/search
    method: GET
    data_selector: search_results
- name: session
  endpoint:
    path: /discord/session
    method: GET
    data_selector: session_id
- name: activity
  endpoint:
    path: /discord/activity
    method: GET
    data_selector: activities
- name: send_message
  endpoint:
    path: /api/v2/send
    method: POST
    data_selector: message
    params: {}
- name: unacknowledge_messages
  endpoint:
    path: /api/v2/unack
    method: POST
    data_selector: unacknowledged
    params: {}
- name: upload_files
  endpoint:
    path: /api/v2/upload_files
    method: POST
    data_selector: uploaded_files
    params: {}
- name: message_history
  endpoint:
    path: /api/v2/history
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: directory_entry
  endpoint:
    path: /directory/entry
    method: GET
    data_selector: entries
- name: forum_tag
  endpoint:
    path: /forum/tag
    method: GET
    data_selector: tags
- name: user_commands
  endpoint:
    path: user_commands
    method: GET
    data_selector: commands
    params: {}
- name: slash_commands
  endpoint:
    path: slash_commands
    method: GET
    data_selector: commands
    params: {}
- name: thread_member
  endpoint:
    path: /discord/thread_member
    method: GET
    data_selector: records
- name: stage_instance
  endpoint:
    path: /discord/stage_instance
    method: GET
    data_selector: records
- name: poll
  endpoint:
    path: /polls
    method: POST
    data_selector: poll
- name: poll_answer
  endpoint:
    path: /polls/{poll_id}/answers
    method: GET
    data_selector: answers
- name: message
  endpoint:
    path: /discord/message
    method: GET
    data_selector: message
- name: echo_command
  endpoint:
    path: /commands/echo
    method: POST
    data_selector: message
    params: {}
- name: length_command
  endpoint:
    path: /commands/length
    method: POST
    data_selector: message_length
    params: {}
- name: git_command
  endpoint:
    path: /commands/git
    method: POST
    data_selector: git_operations
    params: {}
- name: attachment
  endpoint:
    path: /attachments
    method: GET
    data_selector: attachments
- name: message_reference
  endpoint:
    path: /message_reference
    method: GET
    data_selector: message_reference
- name: role_subscription_info
  endpoint:
    path: /role_subscription_info
    method: GET
    data_selector: role_subscription_info
- name: purchase_notification
  endpoint:
    path: /purchase_notification
    method: GET
    data_selector: purchase_notification
- name: guild_product_purchase
  endpoint:
    path: /guild_product_purchase
    method: GET
    data_selector: guild_product_purchase
- name: reaction
  endpoint:
    path: /reaction
    method: GET
    data_selector: reactions
    params: {}
- name: interaction
  endpoint:
    path: /interactions
    method: POST
    data_selector: interactions
    params: {}
- name: component
  endpoint:
    path: /components
    method: POST
    data_selector: components
    params: {}
- name: File
  endpoint:
    path: /discord/File
    method: POST
    data_selector: attributes
- name: CloudFile
  endpoint:
    path: /discord/CloudFile
    method: POST
    data_selector: attributes
- name: UserContentFilter
  endpoint:
    path: /v10/user/content-filter
    method: GET
    data_selector: data
    params: {}
- name: AuditLogDiff
  endpoint:
    path: /v10/audit-logs/diff
    method: GET
    data_selector: data
    params: {}
- name: invite
  endpoint:
    path: /invites/{invite}
    method: DELETE
- name: fetch_widget
  endpoint:
    path: /guilds/{guild_id}/widget
    method: GET
- name: fetch_user
  endpoint:
    path: /users/{user_id}
    method: GET
- name: fetch_user_profile
  endpoint:
    path: /users/{user_id}/profile
    method: GET
- name: fetch_channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
- name: fetch_webhook
  endpoint:
    path: /webhooks/{webhook_id}
    method: GET
- name: fetch_sticker
  endpoint:
    path: /stickers/{sticker_id}
    method: GET
- name: sticker_packs
  endpoint:
    path: /sticker-packs
    method: GET
- name: fetch_note
  endpoint:
    path: /users/{user_id}/note
    method: GET
- name: fetch_settings
  endpoint:
    path: /users/@me/settings
    method: GET
- name: fetch_relationships
  endpoint:
    path: /fetch_relationships
    method: GET
- name: friend_suggestions
  endpoint:
    path: /friend_suggestions
    method: GET
- name: fetch_country_code
  endpoint:
    path: /fetch_country_code
    method: GET
- name: fetch_location_info
  endpoint:
    path: /fetch_location_info
    method: GET
- name: fetch_preferred_rtc_regions
  endpoint:
    path: /fetch_preferred_rtc_regions
    method: GET
- name: create_dm
  endpoint:
    path: /create_dm
    method: POST
- name: create_group
  endpoint:
    path: /create_group
    method: POST
- name: send_friend_request
  endpoint:
    path: /send_friend_request
    method: POST
- name: applications
  endpoint:
    path: /applications
    method: GET
- name: detectable_applications
  endpoint:
    path: /detectable_applications
    method: GET
- name: fetch_application
  endpoint:
    path: /fetch_application
    method: GET
- name: fetch_partial_application
  endpoint:
    path: /fetch_partial_application
    method: GET
- name: fetch_public_application
  endpoint:
    path: /fetch_public_application
    method: GET
- name: fetch_public_applications
  endpoint:
    path: /fetch_public_applications
    method: GET
- name: teams
  endpoint:
    path: /teams
    method: GET
- name: fetch_team
  endpoint:
    path: /fetch_team
    method: GET
- name: create_application
  endpoint:
    path: /applications
    method: POST
- name: create_team
  endpoint:
    path: /teams
    method: POST
- name: search_companies
  endpoint:
    path: /companies/search
    method: GET
- name: fetch_company
  endpoint:
    path: /companies/{company_id}
    method: GET
- name: activity_statistics
  endpoint:
    path: /activity/statistics
    method: GET
- name: global_activity_statistics
  endpoint:
    path: /activity/global_statistics
    method: GET
- name: payment_sources
  endpoint:
    path: /payment_sources
    method: GET
- name: fetch_payment_source
  endpoint:
    path: /payment_sources/{source_id}
    method: GET
- name: create_payment_source
  endpoint:
    path: /payment_sources
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: premium_guild_subscriptions
  endpoint:
    path: /premium_guild_subscriptions
    method: GET
- name: premium_guild_subscription_slots
  endpoint:
    path: /premium_guild_subscription_slots
    method: GET
- name: premium_guild_subscription_cooldown
  endpoint:
    path: /premium_guild_subscription_cooldown
    method: GET
- name: fetch_subscription
  endpoint:
    path: /subscriptions/{subscription_id}
    method: GET
- name: preview_subscription
  endpoint:
    path: /subscriptions/preview
    method: POST
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
- name: payments
  endpoint:
    path: /payments
    method: GET
- name: fetch_payment
  endpoint:
    path: /payments/{payment_id}
    method: GET
- name: promotions
  endpoint:
    path: /promotions
    method: GET
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: user_offer
  endpoint:
    path: /user_offer
    method: GET
    data_selector: UserOffer
- name: trial_offer
  endpoint:
    path: /trial_offer
    method: GET
    data_selector: TrialOffer
- name: pricing_promotion
  endpoint:
    path: /pricing_promotion
    method: GET
    data_selector: PricingPromotion
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: LibraryApplication
- name: authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: OAuth2Token
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: Entitlement
- name: giftable_entitlements
  endpoint:
    path: /giftable_entitlements
    method: GET
    data_selector: Entitlement
- name: premium_entitlements
  endpoint:
    path: /premium_entitlements
    method: GET
    data_selector: Entitlement
- name: fetch_entitlements
  endpoint:
    path: /fetch_entitlements
    method: GET
    data_selector: Entitlement
- name: fetch_gift
  endpoint:
    path: /fetch_gift
    method: GET
    data_selector: Gift
- name: fetch_sku
  endpoint:
    path: /fetch_sku
    method: GET
    data_selector: SKU
- name: fetch_store_listing
  endpoint:
    path: /fetch_store_listing
    method: GET
    data_selector: StoreListing
- name: fetch_published_store_listing
  endpoint:
    path: /fetch_published_store_listing
    method: GET
    data_selector: StoreListing
- name: fetch_published_store_listings
  endpoint:
    path: /fetch_published_store_listings
    method: GET
    data_selector: StoreListing
- name: application
  endpoint:
    path: /applications/@me
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /users/@me
    method: GET
    data_selector: data
    params: {}
- name: fetch_primary_store_listing
  endpoint:
    path: /fetch_primary_store_listing
    method: GET
    data_selector: store_listing
- name: premium_subscription_plans
  endpoint:
    path: /premium_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_sku_subscription_plans
  endpoint:
    path: /fetch_sku_subscription_plans
    method: GET
    data_selector: subscription_plans
- name: fetch_eula
  endpoint:
    path: /fetch_eula
    method: GET
    data_selector: eula
- name: fetch_live_build_ids
  endpoint:
    path: /fetch_live_build_ids
    method: GET
    data_selector: live_build_ids
- name: price_tiers
  endpoint:
    path: /price_tiers
    method: GET
    data_selector: price_tiers
- name: fetch_price_tier
  endpoint:
    path: /fetch_price_tier
    method: GET
    data_selector: price_tier
- name: premium_usage
  endpoint:
    path: /premium_usage
    method: GET
    data_selector: premium_usage
- name: checkout_recovery
  endpoint:
    path: /checkout_recovery
    method: GET
    data_selector: checkout_recovery
- name: recent_mentions
  endpoint:
    path: /recent_mentions
    method: GET
    data_selector: mentions
- name: user_affinities
  endpoint:
    path: /user_affinities
    method: GET
    data_selector: user_affinities
- name: guild_affinities
  endpoint:
    path: /guild_affinities
    method: GET
    data_selector: guild_affinities
- name: channel_affinities
  endpoint:
    path: /channel_affinities
    method: GET
    data_selector: channel_affinities
- name: premium_affinities
  endpoint:
    path: /premium_affinities
    method: GET
    data_selector: premium_affinities
- name: join_active_developer_program
  endpoint:
    path: /join_active_developer_program
    method: POST
    data_selector: webhook_id
- name: leave_active_developer_program
  endpoint:
    path: /leave_active_developer_program
    method: POST
    data_selector: leave_status
- name: report_unverified_application
  endpoint:
    path: /report_unverified_application
    method: POST
    data_selector: reported_application
- name: fetch_experiments
  endpoint:
    path: /fetch_experiments
    method: GET
    data_selector: experiments
- name: AudioSource
  endpoint:
    path: /discord/AudioSource
    method: GET
    data_selector: audio_stream
    params: {}
- name: PCMAudio
  endpoint:
    path: /discord/PCMAudio
    method: GET
    data_selector: pcm_audio
    params: {}
- name: FFmpegAudio
  endpoint:
    path: /discord/FFmpegAudio
    method: GET
    data_selector: ffmpeg_audio
    params: {}
- name: FFmpegPCMAudio
  endpoint:
    path: /discord/FFmpegPCMAudio
    method: GET
    data_selector: ffmpeg_pcm_audio
    params: {}
- name: FFmpegOpusAudio
  endpoint:
    path: /discord/FFmpegOpusAudio
    method: GET
    data_selector: ffmpeg_opus_audio
    params: {}
- name: guild_settings_update
  endpoint:
    path: /guild/settings/update
    method: POST
    data_selector: settings
- name: payment_sources_update
  endpoint:
    path: /payment/sources/update
    method: POST
    data_selector: sources
- name: subscriptions_update
  endpoint:
    path: /subscriptions/update
    method: POST
    data_selector: subscriptions
- name: payment_client_add
  endpoint:
    path: /payment/client/add
    method: POST
    data_selector: client
- name: premium_guild_subscription_slot_create
  endpoint:
    path: /premium/guild/subscription/slot/create
    method: POST
    data_selector: slot
- name: premium_guild_subscription_slot_update
  endpoint:
    path: /premium/guild/subscription/slot/update
    method: POST
    data_selector: slot
- name: entitlement_create
  endpoint:
    path: /entitlement/create
    method: POST
    data_selector: entitlement
- name: gift_create
  endpoint:
    path: /gift/create
    method: POST
    data_selector: gift
- name: connections_update
  endpoint:
    path: /connections/update
    method: POST
    data_selector: connections
- name: relationship_update
  endpoint:
    path: /relationship/update
    method: POST
    data_selector: relationship
- name: note_update
  endpoint:
    path: /note/update
    method: POST
    data_selector: note
- name: guild_bans
  endpoint:
    path: /guilds/{guild.id}/bans
    method: GET
    data_selector: bans
- name: guild_integrations
  endpoint:
    path: /guilds/{guild.id}/integrations
    method: GET
    data_selector: integrations
- name: channel
  endpoint:
    path: /channels/{channel.id}
    method: GET
- name: guild
  endpoint:
    path: /guilds/{guild.id}
    method: GET
- name: emoji
  endpoint:
    path: /emojis/{emoji.id}
    method: GET
- name: user
  endpoint:
    path: /users/{user.id}
    method: GET
- name: invite_create
  endpoint:
    path: /invite/create
    method: POST
    data_selector: invite
- name: invite_delete
  endpoint:
    path: /invite/delete
    method: DELETE
    data_selector: invite
- name: guild_feature_ack
  endpoint:
    path: /guild/feature/ack
    method: POST
    data_selector: payload
- name: integration_create
  endpoint:
    path: /integration/create
    method: POST
    data_selector: integration
- name: integration_update
  endpoint:
    path: /integration/update
    method: PATCH
    data_selector: integration
- name: guild_integrations_update
  endpoint:
    path: /guild/integrations/update
    method: PATCH
    data_selector: guild
- name: webhooks_update
  endpoint:
    path: /webhooks/update
    method: PATCH
    data_selector: channel
- name: raw_integration_delete
  endpoint:
    path: /integration/delete
    method: DELETE
    data_selector: payload
- name: interaction
  endpoint:
    path: /interaction
    method: POST
    data_selector: interaction
- name: interaction_finish
  endpoint:
    path: /interaction/finish
    method: PATCH
    data_selector: interaction
- name: modal
  endpoint:
    path: /modal
    method: POST
    data_selector: modal
- name: member_join
  endpoint:
    path: /member/join
    method: POST
    data_selector: member
- name: member_remove
  endpoint:
    path: /member/remove
    method: DELETE
    data_selector: member
- name: raw_member_remove
  endpoint:
    path: /member/raw/remove
    method: DELETE
    data_selector: payload
- name: member_update
  endpoint:
    path: /member/update
    method: PATCH
    data_selector: before, after
- name: user_update
  endpoint:
    path: /user/update
    method: PATCH
    data_selector: before, after
- name: member_ban
  endpoint:
    path: /member/ban
    method: POST
    data_selector: guild, user
- name: member_unban
  endpoint:
    path: /member/unban
    method: POST
    data_selector: guild, user
- name: presence_update
  endpoint:
    path: /presence/update
    method: PATCH
    data_selector: before, after
- name: raw_member_list_update
  endpoint:
    path: /member/list/update
    method: PATCH
    data_selector: data
- name: message
  endpoint:
    path: /message
    method: POST
    data_selector: message
- name: message_edit
  endpoint:
    path: /message/edit
    method: PATCH
    data_selector: before, after
- name: message_delete
  endpoint:
    path: /message/delete
    method: DELETE
    data_selector: message
- name: bulk_message_delete
  endpoint:
    path: /message/bulk/delete
    method: DELETE
    data_selector: messages
- name: message_ack
  endpoint:
    path: /message/ack
    method: POST
    data_selector: message, manual
- name: raw_message_edit
  endpoint:
    path: /message/raw/edit
    method: PATCH
    data_selector: payload
- name: raw_message_delete
  endpoint:
    path: /message/raw/delete
    method: DELETE
    data_selector: payload
- name: raw_bulk_message_delete
  endpoint:
    path: /message/raw/bulk/delete
    method: DELETE
    data_selector: payload
- name: raw_message_ack
  endpoint:
    path: /message/raw/ack
    method: POST
    data_selector: payload
- name: recent_mention_delete
  endpoint:
    path: /mention/recent/delete
    method: DELETE
    data_selector: message
- name: raw_recent_mention_delete
  endpoint:
    path: /mention/raw/recent/delete
    method: DELETE
    data_selector: message_id
- name: guild_bans
  endpoint:
    path: /guilds/{guild.id}/bans
    method: GET
    data_selector: bans
    params: {}
- name: audit_log_diff
  endpoint:
    path: /audit-log-diff
    method: GET
- name: role_delete
  endpoint:
    path: /role-delete
    method: GET
- name: invite_create
  endpoint:
    path: /invite-create
    method: GET
- name: invite_update
  endpoint:
    path: /invite-update
    method: GET
- name: invite_delete
  endpoint:
    path: /invite-delete
    method: GET
- name: webhook_create
  endpoint:
    path: /webhook-create
    method: GET
- name: webhook_update
  endpoint:
    path: /webhook-update
    method: GET
- name: webhook_delete
  endpoint:
    path: /webhook-delete
    method: GET
- name: emoji_create
  endpoint:
    path: /emoji-create
    method: GET
- name: emoji_update
  endpoint:
    path: /emoji-update
    method: GET
- name: emoji_delete
  endpoint:
    path: /emoji-delete
    method: GET
- name: message_delete
  endpoint:
    path: /message-delete
    method: GET
- name: message_bulk_delete
  endpoint:
    path: /message-bulk-delete
    method: GET
- name: message_pin
  endpoint:
    path: /message-pin
    method: GET
- name: message_unpin
  endpoint:
    path: /message-unpin
    method: GET
- name: integration_create
  endpoint:
    path: /integration-create
    method: GET
- name: integration_update
  endpoint:
    path: /integration-update
    method: GET
- name: integration_delete
  endpoint:
    path: /integration-delete
    method: GET
- name: stage_instance_create
  endpoint:
    path: /stage-instance-create
    method: GET
- name: stage_instance_update
  endpoint:
    path: /stage-instance-update
    method: GET
- name: stage_instance_delete
  endpoint:
    path: /stage-instance-delete
    method: GET
- name: sticker_create
  endpoint:
    path: /sticker-create
    method: GET
- name: sticker_update
  endpoint:
    path: /sticker-update
    method: GET
- name: sticker_delete
  endpoint:
    path: /sticker-delete
    method: GET
- name: scheduled_event_create
  endpoint:
    path: /scheduled-event-create
    method: GET
- name: scheduled_event_update
  endpoint:
    path: /scheduled-event-update
    method: GET
- name: EmbeddedActivityPlatform
  endpoint:
    path: /discord/EmbeddedActivityPlatform
    method: GET
- name: EmbeddedActivityOrientation
  endpoint:
    path: /discord/EmbeddedActivityOrientation
    method: GET
- name: PayoutAccountStatus
  endpoint:
    path: /discord/PayoutAccountStatus
    method: GET
- name: PayoutStatus
  endpoint:
    path: /discord/PayoutStatus
    method: GET
- name: WebhookType
  endpoint:
    path: /discord/WebhookType
    method: GET
- name: ExpireBehaviour
  endpoint:
    path: /discord/ExpireBehaviour
    method: GET
- name: DefaultAvatar
  endpoint:
    path: /discord/DefaultAvatar
    method: GET
- name: StickerType
  endpoint:
    path: /discord/StickerType
    method: GET
- name: StickerFormatType
  endpoint:
    path: /discord/StickerFormatType
    method: GET
- name: InviteTarget
  endpoint:
    path: /discord/InviteTarget
    method: GET
- name: VideoQualityMode
  endpoint:
    path: /discord/VideoQualityMode
    method: GET
- name: PrivacyLevel
  endpoint:
    path: /discord/PrivacyLevel
    method: GET
- name: NSFWLevel
  endpoint:
    path: /discord/NSFWLevel
    method: GET
- name: RelationshipType
  endpoint:
    path: /discord/RelationshipType
    method: GET
- name: FriendSuggestionReasonType
  endpoint:
    path: /discord/FriendSuggestionReasonType
    method: GET
- name: UserContentFilter
  endpoint:
    path: /discord/UserContentFilter
    method: GET
- name: PremiumType
  endpoint:
    path: /discord/PremiumType
    method: GET
- name: PaymentSourceType
  endpoint:
    path: /discord/PaymentSourceType
    method: GET
- name: PaymentGateway
  endpoint:
    path: /discord/PaymentGateway
    method: GET
- name: SubscriptionType
  endpoint:
    path: /discord/SubscriptionType
    method: GET
- name: SubscriptionStatus
  endpoint:
    path: /discord/SubscriptionStatus
    method: GET
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: webhook
  endpoint:
    path: /webhooks/{webhook.id}/{webhook.token}
    method: POST
    data_selector: None
    params: {}
- name: webhook
  endpoint:
    path: /webhook
    method: POST
    data_selector: webhook
    params: {}
- name: guild_channel
  endpoint:
    path: /api/v9/channels
    method: GET
    data_selector: channels
- name: user
  endpoint:
    path: /users/@me
    method: GET
    data_selector: user
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: message
  endpoint:
    path: /messages
    method: GET
    data_selector: content
- name: mutual_friends
  endpoint:
    path: /mutual_friends
    method: GET
    data_selector: friends
- name: profile
  endpoint:
    path: /profile
    method: GET
    data_selector: userProfile
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    params:
      limit: 200
- name: search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    params:
      limit: 25
- name: Connection
  endpoint:
    path: /discord/Connection
    method: GET
    data_selector: records
- name: PartialConnection
  endpoint:
    path: /discord/PartialConnection
    method: GET
    data_selector: records
- name: Relationship
  endpoint:
    path: /discord/Relationship
    method: GET
    data_selector: records
- name: FriendSuggestion
  endpoint:
    path: /discord/FriendSuggestion
    method: GET
    data_selector: records
- name: user_settings
  endpoint:
    path: /user/settings
    method: GET
    data_selector: settings
    params: {}
- name: legacy_user_settings
  endpoint:
    path: /api/v2/user/settings
    method: GET
    data_selector: settings
    params: {}
- name: activity_statistics
  endpoint:
    path: /applications/{application.id}/activity/statistics
    method: GET
    data_selector: statistics
    params: {}
- name: branches
  endpoint:
    path: /applications/{application.id}/branches
    method: GET
    data_selector: branches
    params: {}
- name: create_bot
  endpoint:
    path: /applications/{application.id}/bot
    method: POST
    data_selector: bot
    params: {}
- name: uploads
  endpoint:
    path: /uploads
    method: POST
    data_selector: asset
- name: skus
  endpoint:
    path: /skus
    method: GET
    data_selector: skus
- name: primary_sku
  endpoint:
    path: /primary_sku
    method: GET
    data_selector: sku
- name: store_listing_sku
  endpoint:
    path: /store_listing_sku
    method: GET
    data_selector: sku
- name: create_sku
  endpoint:
    path: /create_sku
    method: POST
    data_selector: sku
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: entitlements
- name: fetch_entitlement
  endpoint:
    path: /entitlements/{entitlement_id}
    method: GET
    data_selector: entitlement
- name: gift_batches
  endpoint:
    path: /gift_batches
    method: GET
    data_selector: gift_batches
- name: create_gift_batch
  endpoint:
    path: /create_gift_batch
    method: POST
    data_selector: gift_batch
- name: branches
  endpoint:
    path: /branches
    method: GET
    data_selector: branches
- name: create_branch
  endpoint:
    path: /create_branch
    method: POST
    data_selector: branch
- name: manifest_labels
  endpoint:
    path: /manifest_labels
    method: GET
    data_selector: manifest_labels
- name: fetch_discoverability
  endpoint:
    path: /discoverability
    method: GET
    data_selector: discoverability
- name: fetch_embedded_activity_config
  endpoint:
    path: /embedded_activity_config
    method: GET
    data_selector: activity_config
- name: edit_embedded_activity_config
  endpoint:
    path: /edit_embedded_activity_config
    method: POST
    data_selector: activity_config
- name: application_profile
  endpoint:
    path: /oauth2/applications/@me
    method: GET
    data_selector: data
- name: application_store_listings
  endpoint:
    path: /oauth2/applications/@me/store-listings
    method: GET
    data_selector: data
- name: ApplicationBranch
  endpoint:
    path: /application/branch
    method: GET
- name: ApplicationBuild
  endpoint:
    path: /application/build
    method: GET
- name: ManifestLabel
  endpoint:
    path: /manifest/label
    method: GET
- name: Manifest
  endpoint:
    path: /manifest
    method: GET
- name: Team
  endpoint:
    path: /team
    method: GET
- name: team
  endpoint:
    path: /discord/team
    method: GET
    data_selector: team_data
- name: team_member
  endpoint:
    path: /discord/team/members
    method: GET
    data_selector: members
- name: team_applications
  endpoint:
    path: /discord/team/applications
    method: GET
    data_selector: applications
- name: team_payouts
  endpoint:
    path: /discord/team/payouts
    method: GET
    data_selector: payouts
- name: dm_channel
  endpoint:
    path: /create_dm
    method: POST
- name: history
  endpoint:
    path: /history
    method: GET
    params:
      limit: 100
- name: pins
  endpoint:
    path: /pins
    method: GET
- name: gift
  endpoint:
    path: /discord/Gift
    method: GET
    data_selector: gifts
    params: {}
- name: gift_batch
  endpoint:
    path: /discord/GiftBatch
    method: GET
    data_selector: gift_batches
    params: {}
- name: library_application
  endpoint:
    path: /discord/LibraryApplication
    method: GET
    data_selector: library_applications
    params: {}
- name: subscription_item
  endpoint:
    path: /discord/subscription/item
    method: GET
    data_selector: items
- name: subscription_discount
  endpoint:
    path: /discord/subscription/discount
    method: GET
    data_selector: discounts
- name: subscription_invoice
  endpoint:
    path: /discord/subscription/invoice
    method: GET
    data_selector: invoices
- name: SubscriptionTrial
  endpoint:
    path: /discord/SubscriptionTrial
    method: GET
    data_selector: trial
- name: PremiumGuildSubscription
  endpoint:
    path: /discord/PremiumGuildSubscription
    method: GET
    data_selector: subscription
- name: PremiumGuildSubscriptionSlot
  endpoint:
    path: /discord/PremiumGuildSubscriptionSlot
    method: GET
    data_selector: slot
- name: SubscriptionPlan
  endpoint:
    path: /discord/SubscriptionPlan
    method: GET
    data_selector: plan
- name: subscription_plan_prices
  endpoint:
    path: /subscription_plan_prices
    method: GET
    data_selector: prices
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: payment_details
- name: sku
  endpoint:
    path: /sku
    method: GET
    data_selector: sku_details
- name: SKU
  endpoint:
    path: /discord/sku
    method: GET
    data_selector: records
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
    data_selector: records
- name: sku
  endpoint:
    path: /sku
    method: GET
    data_selector: records
- name: store_listing
  endpoint:
    path: /store/listing
    method: GET
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: guild
  endpoint:
    path: /guilds/{guild.id}
    method: GET
    data_selector: guild
- name: bans
  endpoint:
    path: /guilds/{guild_id}/bans
    method: GET
    data_selector: bans
    params:
      limit: 1000
- name: fetch_channels
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
    params: {}
- name: fetch_member
  endpoint:
    path: /guilds/{guild_id}/members/{member_id}
    method: GET
    data_selector: member
    params: {}
- name: create_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: POST
    data_selector: sticker
- name: delete_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers/{sticker_id}
    method: DELETE
    data_selector: sticker
- name: fetch_scheduled_events
  endpoint:
    path: /guilds/{guild_id}/scheduled-events
    method: GET
    data_selector: scheduled_events
- name: create_custom_emoji
  endpoint:
    path: /guilds/{guild_id}/emojis
    method: POST
    data_selector: emoji
- name: delete_emoji
  endpoint:
    path: /guilds/{guild_id}/emojis/{emoji_id}
    method: DELETE
    data_selector: emoji
- name: fetch_roles
  endpoint:
    path: /guilds/{guild_id}/roles
    method: GET
    data_selector: roles
- name: welcome_screen
  endpoint:
    path: /guilds/{guild_id}/welcome-screen
    method: GET
    data_selector: welcome_screen
    params: {}
- name: applications
  endpoint:
    path: /guilds/{guild_id}/applications
    method: GET
    data_selector: applications
    params: {}
- name: premium_subscriptions
  endpoint:
    path: /guilds/{guild_id}/premium-subscriptions
    method: GET
    data_selector: premium_subscriptions
    params: {}
- name: price_tiers
  endpoint:
    path: /guilds/{guild_id}/price-tiers
    method: GET
    data_selector: price_tiers
    params: {}
- name: automod_rules
  endpoint:
    path: /automod/rules
    method: GET
    data_selector: automod_rules
- name: fetch_automod_rule
  endpoint:
    path: /automod/rules/{automod_rule_id}
    method: GET
    data_selector: automod_rule
- name: create_automod_rule
  endpoint:
    path: /automod/rules
    method: POST
    data_selector: automod_rule
- name: admin_community_eligibility
  endpoint:
    path: /admin/community/eligibility
    method: GET
    data_selector: eligibility
- name: join_admin_community
  endpoint:
    path: /admin/community/join
    method: POST
    data_selector: community
- name: member
  endpoint:
    path: /guilds/{guild_id}/members/{user_id}
    method: GET
    data_selector: member
    params: {}
- name: fetch_mutual_friends
  endpoint:
    path: /fetch_mutual_friends
    method: GET
    data_selector: mutual_friends
- name: fetch_note
  endpoint:
    path: /fetch_note
    method: GET
    data_selector: note
- name: delete_note
  endpoint:
    path: /delete_note
    method: DELETE
- name: member_profile
  endpoint:
    path: /discord/member/profile
    method: GET
    data_selector: profile
    params: {}
- name: member_profile
  endpoint:
    path: /members/{member_id}
    method: GET
    data_selector: profiles
    params: {}
- name: message_search
  endpoint:
    params:
      slop: 2
- name: send_message
  endpoint:
    params:
      tts: false
- name: PartialEmoji
  endpoint:
    path: /path/to/partial_emoji
    method: GET
    data_selector: records
- name: Sticker
  endpoint:
    path: /path/to/sticker
    method: GET
    data_selector: records
- name: StickerItem
  endpoint:
    path: /path/to/sticker_item
    method: GET
    data_selector: records
- name: StickerPack
  endpoint:
    path: /path/to/sticker_pack
    method: GET
    data_selector: records
- name: StandardSticker
  endpoint:
    path: /path/to/standard_sticker
    method: GET
    data_selector: records
- name: guild_sticker
  endpoint:
    path: /guilds/{guild_id}/stickers
    method: GET
    data_selector: stickers
- name: category_channel
  endpoint:
    path: /guilds/{guild_id}/channels
    method: GET
    data_selector: channels
- name: text_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: archived_threads
  endpoint:
    path: /threads/archived
    method: GET
    params:
      limit: None
      before: None
      private: 'False'
      joined: 'False'
- name: message_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    params:
      limit: '100'
      before: None
      after: None
      around: None
      oldest_first: None
- name: active_invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
- name: notification_settings
  endpoint:
    path: /notification-settings
    method: GET
    data_selector: settings
    params: {}
- name: overwrites
  endpoint:
    path: /overwrites
    method: GET
    data_selector: overwrites
    params: {}
- name: pins
  endpoint:
    path: /pins
    method: GET
    data_selector: messages
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
      offset: 0
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /set-permissions
    method: POST
    data_selector: permissions
    params: {}
- name: channel_create
  endpoint:
    path: /channels
    method: POST
    data_selector: channel
    params:
      name: default_channel_name
      category: default_category
      reason: default_reason
- name: channel_edit
  endpoint:
    path: /channels/{channel.id}
    method: PATCH
    data_selector: channel
    params:
      name: new_channel_name
      bitrate: new_bitrate
      nsfw: new_nsfw
      user_limit: new_user_limit
      position: new_position
      sync_permissions: new_sync_permissions
      category: new_category
      slowmode_delay: new_slowmode_delay
      reason: new_reason
- name: create_invite
  endpoint:
    path: /channels/{channel.id}/invites
    method: POST
    data_selector: invite
    params:
      max_age: 0
      max_uses: 0
      temporary: false
      unique: true
      guest: false
      application_bypass: false
- name: create_webhook
  endpoint:
    path: /channels/{channel.id}/webhooks
    method: POST
    data_selector: webhook
    params:
      name: webhook_name
      avatar: webhook_avatar
      reason: webhook_reason
- name: message
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: Message
    params: {}
- name: partial_message
  endpoint:
    path: /messages/{message_id}/partial
    method: GET
    data_selector: PartialMessage
    params: {}
- name: history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: invites
  endpoint:
    path: /channels/{channel_id}/invites
    method: GET
    data_selector: Invite
    params: {}
- name: pins
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: Message
    params: {}
- name: purge
  endpoint:
    path: /channels/{channel_id}/messages
    method: DELETE
    data_selector: deleted_messages
    params:
      limit: 100
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: messages
    params:
      limit: 25
- name: send_message
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: set_permissions
  endpoint:
    path: /permissions
    method: POST
    data_selector: permissions
    params: {}
- name: voice_states
  endpoint:
    path: /voice_states
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: stage_channel
  endpoint:
    path: /stage_channel
    method: GET
- name: channel_history
  endpoint:
    path: /channels/{channel_id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pinned_messages
  endpoint:
    path: /channels/{channel_id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: read_state
  endpoint:
    path: /channels/{channel_id}/read_state
    method: GET
    data_selector: read_state
- name: scheduled_events
  endpoint:
    path: /channels/{channel_id}/scheduled_events
    method: GET
    data_selector: scheduled_events
- name: search_messages
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: set_permissions
  endpoint:
    path: /channels/{channel_id}/permissions/{overwrite_id}
    method: PUT
    data_selector: permissions
- name: forum_channel
  endpoint:
    path: /discord/api/v2/forum_channel
    method: GET
    data_selector: records
- name: permissions_synced
  endpoint:
    path: /permissions/synced
    method: GET
    data_selector: permissions_synced
- name: set_permissions
  endpoint:
    path: /permissions/set
    method: POST
    data_selector: set_permissions
- name: message_request
  endpoint:
    path: /discord/DMChannel/is_message_request
    method: GET
- name: accepted_request
  endpoint:
    path: /discord/DMChannel/is_accepted
    method: GET
- name: spam_request
  endpoint:
    path: /discord/DMChannel/is_spam
    method: GET
- name: add_recipients
  endpoint:
    path: /discord/DMChannel/add_recipients
    method: POST
- name: close_channel
  endpoint:
    path: /discord/DMChannel/close
    method: DELETE
- name: connect_voice
  endpoint:
    path: /discord/DMChannel/connect
    method: POST
- name: accept_request
  endpoint:
    path: /discord/DMChannel/accept
    method: POST
- name: decline_request
  endpoint:
    path: /discord/DMChannel/decline
    method: POST
- name: acknowledge_messages
  endpoint:
    path: /discord/DMChannel/ack
    method: POST
- name: history
  endpoint:
    path: /discord/DMChannel/history
    method: GET
- name: pins
  endpoint:
    path: /discord/DMChannel/pins
    method: GET
- name: search_messages
  endpoint:
    path: /discord/DMChannel/search
    method: GET
- name: group_channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: create_invite
  endpoint:
    path: /channels/{channel.id}/invites
    method: POST
    data_selector: invite
    params:
      max_age: 86400
- name: connect
  endpoint:
    path: /channels/{channel.id}/voice
    method: POST
    data_selector: voice_client
    params:
      timeout: 60.0
      reconnect: true
      cls: VoiceClient
      ring: true
- name: ack
  endpoint:
    path: /channels/{channel.id}/ack
    method: POST
    data_selector: ack
    params: {}
- name: history
  endpoint:
    path: /channels/{channel.id}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: pins
  endpoint:
    path: /channels/{channel.id}/pins
    method: GET
    data_selector: pinned_messages
    params: {}
- name: search
  endpoint:
    path: /channels/{channel.id}/messages/search
    method: GET
    data_selector: search_results
    params:
      limit: 25
      most_relevant: false
- name: pinned_messages
  endpoint:
    path: /channels/{channel_id}/messages/pinned
    method: GET
    data_selector: messages
- name: message_search
  endpoint:
    path: /channels/{channel_id}/messages/search
    method: GET
    data_selector: messages
- name: send_message
  endpoint:
    path: /channels/{channel_id}/messages
    method: POST
    data_selector: message
- name: remove_tags
  endpoint:
    path: /remove_tags
    method: POST
- name: join
  endpoint:
    path: /join
    method: POST
- name: leave
  endpoint:
    path: /leave
    method: POST
- name: add_user
  endpoint:
    path: /add_user
    method: POST
- name: remove_user
  endpoint:
    path: /remove_user
    method: POST
- name: fetch_members
  endpoint:
    path: /fetch_members
    method: GET
- name: delete
  endpoint:
    path: /delete
    method: DELETE
- name: get_partial_message
  endpoint:
    path: /get_partial_message
    method: GET
- name: ack
  endpoint:
    path: /ack
    method: POST
- name: ack_pins
  endpoint:
    path: /ack_pins
    method: POST
- name: application_commands
  endpoint:
    path: /application_commands
    method: GET
- name: fetch_message
  endpoint:
    path: /fetch_message
    method: GET
- name: greet
  endpoint:
    path: /greet
    method: POST
- name: history
  endpoint:
    path: /history
    method: GET
- name: pins
  endpoint:
    path: /pins
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
- name: stage_instance
  endpoint:
    path: /stage_instance
    method: GET
    data_selector: data
- name: private_call
  endpoint:
    path: /private_call
    method: GET
    data_selector: data
- name: group_call
  endpoint:
    path: /group_call
    method: GET
    data_selector: data
- name: call_message
  endpoint:
    path: /call_message
    method: GET
    data_selector: data
- name: message
  endpoint:
    path: /message
    method: GET
    data_selector: data
- name: message
  endpoint:
    path: /discord/message
    method: GET
    data_selector: content
    params: {}
- name: attachment
  endpoint:
    path: /attachments
    method: GET
    data_selector: attachments
- name: message_reference
  endpoint:
    path: /message_references
    method: GET
    data_selector: message_references
- name: role_subscription_info
  endpoint:
    path: /role_subscription_info
    method: GET
    data_selector: role_subscription_info
- name: purchase_notification
  endpoint:
    path: /purchase_notifications
    method: GET
    data_selector: purchase_notifications
- name: reaction
  endpoint:
    path: /reaction
    method: GET
    data_selector: records
    params: {}
- name: ActionRow
  endpoint:
    path: /discord/components/actionrow
    method: GET
    data_selector: children
    params: {}
- name: Button
  endpoint:
    path: /discord/components/button
    method: GET
    data_selector: button
    params: {}
- name: SelectMenu
  endpoint:
    path: /discord/components/selectmenu
    method: GET
    data_selector: selectmenu
    params: {}
- name: TextInput
  endpoint:
    path: /discord/components/textinput
    method: GET
    data_selector: textinput
    params: {}
- name: invite
  endpoint:
    path: /invites/{invite.code}
    method: GET
    data_selector: invite
- name: invite
  endpoint:
    path: /api/v1/invite
    method: GET
    data_selector: invite_data
- name: File
  endpoint:
    path: /discord/File
    method: POST
    data_selector: attributes
- name: CloudFile
  endpoint:
    path: /discord/CloudFile
    method: POST
    data_selector: attributes
- name: widget
  endpoint:
    path: /guilds/{guild.id}/widget
    method: GET
    data_selector: widget
- name: profile
  endpoint:
    path: /discord/api/v2.1/profile
    method: GET
- name: WelcomeScreen
  endpoint:
    path: /discord/WelcomeScreen
    method: GET
    data_selector: welcome_screens
- name: Tutorial
  endpoint:
    path: /discord/Tutorial
    method: GET
    data_selector: tutorials
- name: raw_message_delete
  endpoint:
    path: /api/vX.X/raw/message/delete
    method: POST
    data_selector: payload
- name: raw_bulk_message_delete
  endpoint:
    path: /api/vX.X/raw/bulk/message/delete
    method: POST
    data_selector: payload
- name: raw_message_update
  endpoint:
    path: /api/vX.X/raw/message/update
    method: POST
    data_selector: payload
- name: raw_poll_vote_add
  endpoint:
    path: /api/vX.X/raw/poll/vote/add
    method: POST
    data_selector: payload
- name: raw_reaction_add
  endpoint:
    path: /api/vX.X/raw/reaction/add
    method: POST
    data_selector: payload
- name: raw_reaction_clear
  endpoint:
    path: /api/vX.X/raw/reaction/clear
    method: POST
    data_selector: payload
- name: raw_integration_delete
  endpoint:
    path: /api/vX.X/raw/integration/delete
    method: POST
    data_selector: payload
- name: raw_thread_member_remove
  endpoint:
    path: /api/vX.X/raw/thread/member/remove
    method: POST
    data_selector: payload
- name: raw_thread_delete
  endpoint:
    path: /api/vX.X/raw/thread/delete
    method: POST
    data_selector: payload
- name: raw_member_remove
  endpoint:
    path: /api/vX.X/raw/member/remove
    method: POST
    data_selector: payload
- name: File
  endpoint:
    path: /discord/File
    method: POST
    data_selector: attributes
- name: CloudFile
  endpoint:
    path: /discord/CloudFile
    method: POST
    data_selector: attributes
- name: Object
  endpoint:
    path: /discord/Object
    method: GET
    data_selector: attributes
- name: embed
  endpoint:
    path: /discord/Embed
    method: GET
    data_selector: embed_data
- name: File
  endpoint:
    path: /discord/File
    method: POST
    data_selector: files
    params: {}
- name: CloudFile
  endpoint:
    path: /discord/CloudFile
    method: POST
    data_selector: cloud_files
    params: {}
- name: Colour
  endpoint:
    path: /discord/Colour
    method: GET
    data_selector: attributes
- name: session
  endpoint:
    path: /discord/session
    method: GET
    data_selector: session_data
- name: activity
  endpoint:
    path: /discord/activity
    method: GET
    data_selector: activity_data
- name: DirectoryEntry
  endpoint:
    path: /discord/DirectoryEntry
    method: GET
    data_selector: entries
- name: ForumTag
  endpoint:
    path: /discord/ForumTag
    method: GET
    data_selector: tags
- name: LibraryApplicationFlags
  endpoint:
    path: /library/application/flags
    method: GET
    data_selector: flags
- name: MemberFlags
  endpoint:
    path: /guild/member/flags
    method: GET
    data_selector: flags
- name: MessageFlags
  endpoint:
    path: /message/flags
    method: GET
    data_selector: flags
- name: OnboardingProgressFlags
  endpoint:
    path: /onboarding/progress/flags
    method: GET
    data_selector: flags
- name: RoleFlags
  endpoint:
    path: /discord/RoleFlags
    method: GET
- name: SKUFlags
  endpoint:
    path: /discord/SKUFlags
    method: GET
- name: SystemChannelFlags
  endpoint:
    path: /discord/SystemChannelFlags
    method: GET
- name: poll
  endpoint:
    path: /polls
    method: GET
    data_selector: polls
    params: {}
- name: poll_answer
  endpoint:
    path: /poll_answers
    method: GET
    data_selector: answers
    params: {}
- name: example_usage
  endpoint:
    path: /examples
    method: GET
    data_selector: examples
    params: {}
- name: reaction
  endpoint:
    path: /message/reaction
    method: POST
    data_selector: reaction
    params: {}
- name: guild_subscriptions
  endpoint:
    path: /guilds/{guild_id}/subscriptions
    method: POST
    data_selector: subscriptions
- name: GuildExperiment
  endpoint:
    path: /guilds/{guild.id}/experiments
    method: GET
    data_selector: experiments
- name: UserExperiment
  endpoint:
    path: /users/@me/experiments
    method: GET
    data_selector: experiments
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: guilds
  endpoint:
    path: /guilds
    method: GET
    data_selector: data
    params: {}
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: guilds
    params: {}
- name: channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
    params: {}
- name: guild
  endpoint:
    path: /guilds
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /users/@me
    method: GET
    data_selector: data
    params: {}
- name: Emoji
  endpoint:
    path: /emoji
    method: GET
- name: GroupChannel
  endpoint:
    path: /group-channel
    method: GET
- name: Guild
  endpoint:
    path: /guild
    method: GET
- name: Member
  endpoint:
    path: /member
    method: GET
- name: PartialEmoji
  endpoint:
    path: /partial-emoji
    method: GET
- name: PartialInviteGuild
  endpoint:
    path: /partial-invite-guild
    method: GET
- name: Team
  endpoint:
    path: /team
    method: GET
- name: User
  endpoint:
    path: /user
    method: GET
- name: Webhook
  endpoint:
    path: /webhook
    method: GET
- name: Thread
  endpoint:
    path: /thread
    method: GET
- name: Message
  endpoint:
    path: /message
    method: GET
- name: channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
- name: emoji
  endpoint:
    path: /emojis/{emoji_id}
    method: GET
- name: guild
  endpoint:
    path: /guilds/{guild_id}
    method: GET
- name: user
  endpoint:
    path: /users/{user_id}
    method: GET
- name: member
  endpoint:
    path: /guilds/{guild_id}/members/{member_id}
    method: GET
- name: role
  endpoint:
    path: /guilds/{guild_id}/roles/{role_id}
    method: GET
- name: webhook
  endpoint:
    path: /webhooks/{webhook_id}
    method: GET
- name: guild_bans
  endpoint:
    path: /guilds/{guild.id}/bans
    method: GET
- name: channel
  endpoint:
    path: /channels/{channel_id}
    method: GET
    data_selector: channel
    params: {}
- name: emoji
  endpoint:
    path: /emojis/{emoji_id}
    method: GET
    data_selector: emoji
    params: {}
- name: guild
  endpoint:
    path: /guilds/{guild_id}
    method: GET
    data_selector: guild
    params: {}
- name: user
  endpoint:
    path: /users/{user_id}
    method: GET
    data_selector: user
    params: {}
notes:
- Logging on with a user token is unfortunately against the Discord Terms of Service
  and doing so might potentially get your account banned.
- New in version 2.0.
- Certain guild experiments are only available via the gateway.
- You must have the ffmpeg or avconv executable in your path environment variable
  in order for this to work.
- Some attributes may have a value of None depending on how the invite was created.
- File objects are single use and are not meant to be reused in multiple sends.
- on_error will only be dispatched to Client.event(). It will not be received by Client.wait_for()
  or Bot listeners.
- This library implements reconnection logic and thus will end up calling on_ready
  whenever a RESUME request fails.
- In order to use PCM based AudioSources, you must have the opus library installed
  on your system.
- Audio sources must be opus encoded or the library will not be able to transmit audio.
- Version 2.0 introduced positional-only parameters for certain methods.
- New in version 2.1.
- Represents an audit log 'change' object with dynamic attributes depending on the
  action.
- This module uses the Python logging module to log diagnostic and errors in an output
  independent way.
- File objects are single use and are not meant to be reused in multiple abc.Messageable.send()s.
- Unlike File, CloudFile class is not directly user-constructable, however it can
  be reused multiple times in abc.Messageable.send().
- on_error will only be dispatched to Client.event()
- This requires setting the enable_debug_events setting in the Client.
- Uses OAuth2 with authorization code — requires setup of application in Discord developer
  portal
- Messages sent by the current user are automatically marked as read, but this event
  will not dispatch.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- This library implements reconnection logic and thus will end up calling certain
  events multiple times.
- Represents an audit log 'change' object. A change object has dynamic attributes
  that depend on the type of action being done.
- 'Changed in version 2.0: Now returns a ResolvedInvite instead of a str.'
- This allows you to edit or delete a message sent by your webhook.
- This inherits from discord.Message with changes to edit() and delete() to work.
- Disabling guild subscriptions is not recommended for most use cases.
- Must be one of `60`, `1440`, `4320`, or `10080`, if provided.
- The maximum value possible is `21600`. By default no slowmode rate limit if this
  is `None`.
- Webhook cannot be used to make requests if the token is None.
- File objects are single use and are not meant to be reused.
- CloudFile can be reused multiple times.
- Some methods are deprecated and will be removed in future versions.
- Some attributes and methods may require specific permissions to access or modify.
- The slash_commands and user_commands methods are deprecated since version 2.1.
- Uses OAuth2 for authentication.
- Uses OAuth2 with refresh token — requires setup of connected app in discord
- Certain actions may result in attribute errors if attributes do not match the specified
  action.
- Webhooks can send messages to channels without a bot user or authentication.
- Webhooks are now comparable and hashable.
- This ABC must also implement Snowflake.
- async with typing() must be used instead of with syntax
- The event parameter is now positional-only.
- The guild_id parameter is now positional-only.
- You must have manage_channels in the associated guild to do this.
- Accessing an attribute that does not match the specified action will lead to an
  attribute error.
- This webhook can be created without authentication.
- The webhook API allows for sending and managing messages.
- This API supports various channel types including Text, Voice, Category, and others.
- 'Deprecated since version 2.1: This method is deprecated and will be removed in
  a future version.'
- Commands that the user does not have permission to use will not be returned.
- 'Changed in version 2.0: This no longer works with the `with` syntax, `async with`
  must be used instead.'
- 'Changed in version 2.0: Added functionality to `await` the context manager to send
  a typing indicator for 10 seconds.'
- 'Changed in version 2.1: Added `message_send_cooldown` and `thread_create_cooldown`
  attributes to the context manager.'
- Information may be missing or inaccurate if the user has blocked the client user.
- Some properties may return None if not fetched.
- The audio stream can be Opus encoded or not, however if the audio stream is not
  Opus encoded then the audio format must be 16-bit 48KHz stereo PCM.
- The audio source reads are done in a separate thread.
- All the events must be a coroutine.
- The bitness of the library must match the bitness of your python interpreter.
- Audit log entries received through the gateway are subject to data retrieval from
  cache rather than REST.
- Requires OAuth2 setup for application authorization
- In almost all cases, this is not available for partial applications.
- Requires setup of OAuth2 for authentication
- Due to a limitation with the Discord API, the Message objects returned by this method
  do not contain complete Message.reactions data.
- This API requires proper permissions to manage channels.
- This change cannot be undone.
- Some objects like Contact may return nulls in deeply nested fields
- Due to a Discord limitation, the member count may not always be up-to-date and accurate.
- Due to a Discord limitation, the online member count may not always be up-to-date
  and accurate.
- You must have manage_guild to edit the guild.
- You cannot leave a guild that you own, you must delete it instead.
- Due to a limitation with the Discord API, the Message objects returned by certain
  methods do not contain complete Message.reactions data.
- Due to a limitation with the Discord API, the Message objects returned by search
  do not contain complete Message.reactions data.
- New in version 1.6.
- You must have manage_emojis_and_stickers to create stickers.
- You must have manage_events to create scheduled events.
- You must have manage_roles to create roles.
- This API requires permissions for various actions like creating roles, managing
  guilds, and viewing audit logs.
- Settings subsections are not idempotently updated.
- This method is ratelimited heavily. Updates should be batched together and sent
  at intervals.
- You must have Permissions.manage_guild to access automod rules.
- Uses OAuth2 with code grant.
- All parameters are optional.
- You must have manage_events to do this.
- You must have manage_guild to do this.
- Requires manage_guild permission to edit, sync, enable, or disable integrations.
- Requires `Permissions.manage_guild` to edit or delete rules.
- Some properties may return nulls in certain conditions
- Some objects like Message may return nulls in deeply nested fields.
- Uses OAuth2 for authorization.
- Deprecation of some commands in version 2.1.
- Returns None if the user does not have a guild avatar decoration.
- Requires setup of OAuth2 application in Discord Developer Portal
- Due to a limitation with the Discord API, the Message objects returned by the method
  do not contain complete Message.reactions data.
- Requires OAuth2 authentication with appropriate scopes.
- 'Changed in version 2.1: The revoked attribute has been removed.'
- New properties and methods introduced in version 2.0 and 2.1.
- Uses OAuth2
- You must have manage_channels to do this.
- Users do not have access to the message bulk-delete endpoint.
- This method replaces the old overwrites with the ones given.
- Requires permissions to access specific resources.
- Rate limits apply to API calls.
- New features and properties introduced in versions 2.0 and 2.1.
- Due to a Discord limitation, member counts may not always be up-to-date and accurate.
- This function is a coroutine.
- You must have manage_webhooks to do this.
- You must have manage_webhooks to create a webhook.
- You must have manage_channels to delete the channel.
- 'New in version 2.1: Added message_send_cooldown and thread_create_cooldown attributes
  to the context manager.'
- You must have read_message_history to get archived threads.
- You must have `manage_guild` permissions to edit the welcome screen.
- For guilds with more than 1,000 members, additional permissions are required to
  chunk members.
- New in version 2.1 includes additional permissions and features.
- You must have manage_guild permissions to edit, sync, enable, or disable the integration.
- You must have `Permissions.manage_guild` to edit or delete rules.
- Represents a Discord member to a Guild.
- You must have manage_roles to use this, and the added Role must appear lower in
  the list of roles than the highest role of the client.
- Returns an asynchronous iterator of the user commands available to use on the user.
- New features and properties introduced in version 2.0 and 2.1.
- You must have manage_threads permission to use some endpoints.
- Some endpoints may fail due to permissions or invalid data.
- The message that this message references is applicable for replies and crossposted
  messages.
- Unlike File, CloudFile can be reused multiple times.
- This is useful if you want to control subscriptions manually to save bandwidth and
  memory.
- Disabling this is not recommended for most use cases.
- 'Changed in version 2.0: event parameter is now positional-only.'
- 'Changed in version 2.0: this method now returns a list of UserGuild instead of
  Guild.'
- 'Changed in version 2.0: guild_id parameter is now positional-only.'
- 'Changed in version 2.0: name and icon parameters are now keyword-only. The region
  parameter has been removed.'
- 'Changed in version 2.0: url parameter is now positional-only.'
- 'Changed in version 2.0: invite parameter is now positional-only.'
- 'Changed in version 2.0: The function now returns the deleted invite.'
- Some objects may return nulls in deeply nested fields
- Requires manage_channels permission to edit channels.
- Only news channels can be followed.
- Requires permission for read_message_history to search messages.
- Due to Discord API limitations, message objects may not contain complete reactions
  data.
- 'New in version 2.1: Added functionality to await the context manager to send a
  typing indicator for 10 seconds.'
- You do not have the proper permissions to send the message.
- Sending the message failed.
- DM this group channel originated from can only be accurately received in on_private_channel_create
  due to a Discord limitation.
- A group can only have a maximum of 10 members.
- Uses HTTP methods for interaction with Discord API.
- Deprecated since version 2.1.
- This message includes details about sender, content, and various attributes related
  to the message.
- The invite can be used to join a guild, a group DM, or add a friend.
- Some attributes can have a value of None depending on the invite creation method.
- 'Changed in version 2.0: This method now returns a list of UserGuild instead of
  Guild.'
- 'Changed in version 2.0: user_id parameter is now positional-only.'
- 'Changed in version 2.0: channel_id parameter is now positional-only.'
- 'Changed in version 2.0: webhook_id parameter is now positional-only.'
- 'Changed in version 2.0: sticker_id parameter is now positional-only.'
- 'New in version 2.0: two_way_link_type is optional for authorize_connection.'
- 'New in version 2.0: two_way_user_code is optional for authorize_connection.'
- 'New in version 2.0: continuation is an optional parameter for authorize_connection.'
- This API includes various endpoints for fetching promotions, offers, and entitlements.
- 'New in version 1.6: Editing and deleting messages functionality.'
- 'New in version 2.0: Support for avatars and attachments.'
- This information is only available via Client.fetch_user().
- Requires setup of connected app in Discord
- Some methods may not return values if the user is not authenticated
- This information is only available via [`Client.fetch_user()`](#discord.Client.fetch_user
  "discord.Client.fetch_user").
- Requires manage_guild permission to receive automod events.
- Changed in version 2.1.
- There is a rare possibility that the Invite.guild and Invite.channel attributes
  will be of Object rather than the respective models.
- This method is ratelimited heavily.
- Uses OAuth2 with refresh token for user authentication.
- Dynamic attributes depend on the type of action being done.
- Requires OAuth2 setup for authentication
- Rate limits apply to API calls
- Requires setup of connected app in Discord API
- New features introduced in version 2.1
- Ratelimited heavily — updates should be batched and sent at intervals.
- Requires specific permissions to create or manage stickers, emojis, events, and
  roles.
- This is a websocket operation and can be slow.
- Requires manage_roles, kick_members, or ban_members permissions for guilds with
  more than 1,000 members.
- Requires setup of OAuth2 credentials for authorization.
- Requires setup of a Discord application in the developer portal
- Requires authorization to access application data.
- Some fields may not be available for partial applications.
- You must have Permissions.manage_guild to edit rules.
- You must have Permissions.manage_guild to delete rules.
- Some fields may return None for members who are not fully initialized.
- You must have move_members to do this.
- You must have moderate_members to do this.
- You must have manage_roles to use this.
- 'Changed in version 1.1: Can now pass `None` to `voice_channel` to kick a member
  from voice.'
- You cannot leave a team that you own, you must delete it instead via [`delete()`](#discord.Team.delete
  "discord.Team.delete").
- Some methods are coroutines and require async context.
- This is only available for past-due subscriptions.
- This API requires authentication using OAuth2.
- Certain operations are only available for premium subscription plans.
- This data is not available for all listings.
- You must have `manage_channels` to do this.
- You must have `create_instant_invite` to do this.
- You must have `manage_webhooks` to do this.
- You must have `manage_messages` to use this (unless they’re your own).
- You must have `read_message_history` to access message history.
- You must have manage_emojis and manage_events permissions to create emojis and scheduled
  events.
- Due to a limitation with the Discord API, the Message objects returned by the search
  method do not contain complete Message.reactions data.
- Welcome channels can only accept custom emojis if Guild.premium_tier is level 2
  or above.
- For guilds with more than 1,000 members, this requires manage_roles, kick_members,
  or ban_members permissions.
- Requires Permissions.manage_guild to access automod functionalities.
- Requires OAuth2 setup for API access.
- You must have manage_events to edit or delete the scheduled event.
- You must have manage_guild to delete the integration.
- This represents a Discord direct message channel.
- Requires proper permissions to access member data.
- Some fields may return null for certain members.
- This can only be accurately received in on_private_channel_create due to a Discord
  limitation.
- 'New in version 2.0: Indicates if the client should be self-muted or self-deafened.'
- 'New in version 2.1: Fetching the mutual friends failed.'
- Some parameters have default values and types specified.
- You must have create_public_threads in order to create a public thread from a message.
- You must have manage_messages to delete others' messages.
- Edits are no longer in-place, the newly edited message is returned instead.
- New files will always appear after current attachments.
- You must have manage_messages to do this.
- NSFW channels are marked accordingly.
- This API does not require authentication.
- Requires manage_webhooks permission to create webhooks.
- Some attributes can have a value of None.
- 'New in version 2.0: This function will now raise TypeError instead of InvalidArgument.'
- 'Changed in version 2.0: `event` parameter is now positional-only.'
- 'Changed in version 2.0: `guild_id` parameter is now positional-only.'
- The guild must have the widget enabled to get this information.
- This method is an API call. If you have member cache enabled, consider get_user()
  instead.
- This method is an API call. For general usage, consider private_channels instead.
- This method is no longer the recommended way to fetch your settings. Use fetch_settings()
  instead.
- Some methods are deprecated in version 2.1
- Represents a Discord guild forum channel.
- This version introduces the permissions_synced property.
- Audit log entries received through the gateway are subject to data retrieval from
  cache rather than REST. This means that some data might not be present when you
  expect it to be.
- 'Changed in version 2.0: The id parameter is now positional-only.'
- Uses OAuth2 for authentication with a client secret.
- Ensure correct permissions are set for the bot.
- Requires setup of authenticated webhook to access certain features
- This API provides interaction with Discord's guild channels.
- Requires proper permissions for certain actions.
- The order of the mentions list is not in any particular order.
- You must have `create_public_threads` in order to create a public thread from a
  message.
- You must have `manage_messages` to do this in a non-private channel context.
- Attachments can sometimes fail to download if deleted.
- Message references may not be resolvable if messages are deleted.
- The invite can have certain attributes that may return None depending on the context.
- Some attributes can have a value of None depending on the invite type.
- If the expiration date is None, the invite will never expire.
- Requires setup of OAuth2 for bot authentication
- Some methods may require specific permissions
- This method is an API call. If you have member cache enabled, consider `get_user()`
  instead.
- Some attributes may not be available for partial applications.
- Quarantined bots cannot join more guilds or start new direct messages.
- Due to a limitation with the Discord API, the Message objects returned by the pins
  method do not contain complete reactions data.
- The `revoked` attribute has been removed.
- You do not have permissions to edit the store listing.
- Editing the store listing failed.
- Some events do not guarantee all attributes.
- You must have permissions such as manage_guild or read_message_history to access
  certain endpoints.
- You must have manage_emojis to create custom emojis.
- Requires `manage_guild` permission to edit the welcome screen.
- Members may not be included when querying depending on permissions.
- Requires Permissions.manage_guild to access automod rules and admin community features.
- Working with Guild.audit_logs() is a complicated process with a lot of machinery
  involved.
- You must have manage_events to edit or delete scheduled events.
- Requires manage_guild permission to edit, sync, enable, and disable integrations.
- You must have Permissions.manage_guild to edit or delete rules.
- Uses OAuth2 with bot token for authentication
- Webhook may return nulls in deeply nested fields
- The channel's position starts at 0.
- Member list ID of 'everyone' indicates that everyone can view the channel.
- Some information is only available via `Client.fetch_user()`.
- Due to a limitation with the Discord API, the Message objects returned by the fetch_mutual_friends
  method do not contain complete Message.reactions data.
- This information is only available via `Client.fetch_user()`.
- Represents a sticker that is found in a standard sticker pack.
- Supports various channel properties including NSFW status and permissions.
- You must have manage_messages to use this (unless they’re your own).
- You must have create_public_threads to create a public thread.
- You must have create_private_threads to create a private thread.
- You must have `manage_channels` to get this information.
- You must have `read_message_history` to do this.
- Discord has migrated user settings to a new protocol buffer format. While these
  legacy settings still exist, they are no longer sent to newer clients.
- This function will now raise TypeError instead of InvalidArgument.
- Requires permission to access message history and manage channels.
- Requires the application to have a bot attached.
- This function is intentionally low level to replace members when the member cache
  is unavailable.
- You must have `create_instant_invite` to create an invite.
- You must have `manage_channels` to get invites or delete a channel.
- Uses OAuth2 with authorization code flow.
- Some properties may not be available for all applications.
- Due to a limitation with the Discord API, the Message objects returned by some methods
  do not contain complete Message.reactions data.
- You must have `send_messages` permission to create a thread.
- You must have `manage_webhooks` permission to create a webhook.
- You must have `read_message_history` permission to get archived threads.
- You must have `create_instant_invite` permission to create an invite.
- You must have `manage_channels` permission to delete the channel.
- If there is no category then permissions are not synced.
- Direct messages do not really have the concept of permissions.
- Supports sending messages and uploading files.
- Rate limits apply to message sending.
- Uses Discord API.
- Some endpoints may have rate limits.
- Requires read_message_history permission to access message history.
- Specifying both file and files parameters will lead to an exception.
- 'Changed in version 2.0: This function will now raise TypeError or ValueError instead
  of InvalidArgument.'
- The limit was not greater than or equal to 0.
- Could not resolve the channel’s guild ID.
- You must have manage_emojis_and_stickers to create or delete stickers.
- Requires OAuth2 authentication with a valid redirect URI.
- Application requires OAuth2 authentication.
- Different versions have different payloads and supported features.
- Requires Permissions.manage_guild to access automod rules and community eligibility.
- New attributes and methods are available in version 2.1.
- You must have `manage_guild` to do this.
- Some attributes can have a value of None depending on the way the invite was created.
- Due to a Discord API limitation, a user’s Spotify activity may not appear if they
  are listening to a song with a title longer than 128 characters.
- Uses OAuth2 with authorization code — requires setup of application in Discord Developer
  Portal
- Some endpoints have rate limits that need to be respected
- 'New in version 2.0: Indicates if the client should be self-muted.'
- 'New in version 2.1: Fetches mutual friends with the user.'
- Some methods require specific permissions to execute.
- New version 2.1 includes user_offer and authorizations endpoints.
- Supports various channel properties including NSFW tagging and slowmode settings.
- The API may return 'None' for optional fields.
- You must have `create_public_threads` or `create_private_threads` to create threads.
- There is a rare possibility that the [`Invite.guild`](#discord.Invite.guild "discord.Invite.guild")
  and [`Invite.channel`](#discord.Invite.channel "discord.Invite.channel") attributes
  will be of [`Object`](#discord.Object "discord.Object") rather than the respective
  models.
- This is used by the Client to set up logging if log_handler is not None.
- Requires proper permissions to access message history and manage channels.
- Rate limits may apply to API calls.
- Dynamic attributes depend on action type in the audit log.
- Requires a valid bot token for authentication.
- This API allows management of Discord guild channels.
- You must have `send_messages` to create a thread in a forum.
- You must have `manage_webhooks` to get the list of webhooks from this channel.
- You must have `manage_channels` to create a webhook and to get information about
  invites.
- New in version 1.3.
- This information is only available via [`Client.fetch_user()`](#discord.Client.fetch_user
  'discord.Client.fetch_user').
- New features include the ability to create invites and application commands.
- Discord has migrated user settings to a new protocol buffer format.
- New features added in version 2.1
- Some methods may require specific permissions.
- You do not have permissions to upload assets.
- Uploading the asset failed.
- You must have manage_threads permissions to use this API.
- The `@everyone` or `@here` text in the message does not guarantee mention.
- updated_at was renamed to last_played_at
- application was turned into a property
- You must have `manage_messages` to delete other people’s messages.
- Changed in version 2.0.
- This API allows saving and reading attachments from messages.
- New in version 2.0 for self_mute and self_deaf.
- New in version 2.1 for delete_note, fetch_mutual_friends, fetch_note, edit_note.
- The user_commands endpoint is deprecated since version 2.1.
- The application requires OAuth2 authentication for access.
- Requires OAuth2 setup for bot permissions.
- This API version is the latest available.
- If this is set to `False`, large guilds (over 75,000 members) may not dispatch any
  non-stateful events.
- You cannot leave a guild that you own, you must delete it instead via delete().
- This method is an API call. For general usage, consider `channels` instead.
- Requires permissions like manage_guild and read_message_history for certain operations.
- Some endpoints may have rate limits or require specific scopes.
- This method now returns a dictionary mapping user IDs to notes instead of a list
  of Note objects.
- You must have appropriate permissions to create or delete stickers, emojis, events,
  and roles.
- For guilds with more than 1,000 members, specific permissions are required.
- You must have manage_roles to do this.
- You do not have permissions to change the role.
- Requires a valid webhook URL for sending messages.
- 'New in version 1.6: Edits and deletes messages owned by the webhook.'
- Uses OAuth2 with refresh token — requires setup of connected app in Discord
- 'Changed in version 2.0: This function will now raise TypeError instead of InvalidArgument.'
- Requires proper permissions to access messages and channel functionalities.
- Some properties may return `None` if not fetched.
- Must have read_message_history permission to search messages
- This API has various functionalities for managing directory channels.
- You must have `manage_channels` to delete or move the channel.
- This function replaces the old overwrites with the ones given.
- Requires OAuth2 for authorization.
- Requires setup of connected app in Discord.
- You do not have permissions to fetch SKUs.
- You do not have permissions to create SKUs.
- You do not have permissions to create a gift batch.
- You do not have permissions to fetch the embedded activity config.
- Must be a maximum of 10 files when uploading.
- Uses OAuth2 with refresh token — requires setup of application in Discord.
- Both query and command_ids cannot be passed together.
- Limit must be greater than or equal to 0.
- Permissions may be required for certain actions.
- The invite code of the stage instance is public if available.
- The guild is referred to as a 'server' in the official Discord UI.
- Returns the guild’s discovery splash asset, if available.
- You cannot leave a team that you own, you must delete it instead via delete()
- 'Changed in version 2.0: The event parameter is now positional-only.'
- 'Changed in version 2.0: Edits are no longer in place.'
- New features added in version 2.0 include activity restrictions and friend suggestions.
- Welcome channels can only accept custom emojis if guild.premium_tier is level 2
  or above.
- Requires specific permissions to manage guild automod rules.
- Eligibility checks must be performed before joining the Discord Admin Community.
- Version 2.1 introduces new attributes and methods for role management.
- Requires Permissions.manage_guild to edit or delete rules
- Checks if two members are equal.
- Checks if two members are not equal.
- Fetching the mutual friends failed.
- Fetching the note failed.
- Deleting the note failed.
- New in version 2.1 for editing notes.
- Represents a sticker that belongs to a guild.
- Represents a Discord channel category.
- Represents an audit log “change” object. A change object has dynamic attributes
  that depend on the type of action being done.
- You must have create_instant_invite permission to create an invite.
- Channel deletion requires manage_channels permission.
- This webhook can be used to send messages, fetch current webhook data, and delete
  the webhook.
- 'Changed in version 2.0: Overwrites can now be type-aware Object in case of cache
  lookup failure.'
- Uses OAuth2 with scopes — requires proper permissions to access endpoints.
- Some properties may only be available via `Client.fetch_user()`.
- Uses OAuth2 with refresh token — requires setup of application in discord
- Some endpoints may have rate limits
- 'New in version 2.0: Added `message_send_cooldown` and `thread_create_cooldown`
  attributes to the context manager.'
- Voice channels will always be sorted below text channels. This is a Discord limitation.
- Some properties are only available via Client.fetch_user()
- You must send at least one of content, embed, embeds, file, files, or view to create
  a thread in a forum.
- This can only be accurately received in on_private_channel_create() due to a Discord
  limitation.
- Some objects may return nulls in deeply nested fields.
- New features introduced in version 2.0 and 2.1.
- Must have read_message_history permission to access message history and search.
- This API allows sending messages and uploading files in Discord channels.
- Be mindful of the rate limits when sending messages.
- Due to a limitation with the Discord API, the `Message` objects returned by this
  method do not contain complete `Message.reactions` data.
- This API supports asynchronous methods.
- You must have manage_threads permission to use certain functions.
- Some message data may not be complete due to API limitations.
- This API requires authentication via OAuth2.
- This does not check if the @everyone or the @here text is in the message itself.
- user_commands() method is deprecated since version 2.1
- You must have `manage_messages` to delete other people's messages.
- You must have `manage_messages` to pin or unpin messages in a non-private channel
  context.
- You must have manage_messages to perform certain actions.
- Uses OAuth2 with authorization code flow — requires setup of application in Discord
  Developer Portal
- Disabling guild_subscriptions is not recommended for most use cases.
- Events must be a coroutine to avoid unexpected errors.
- Requires OAuth2 authentication for API access.
- Audio streams can be Opus encoded or 16-bit 48KHz stereo PCM.
- Must have ffmpeg or avconv executable in your path.
- This class must also implement Snowflake.
- If the guild or member could not be found in the internal cache this event will
  not be called.
- This function is not markdown aware and may remove meaning from the original text.
- Editing your profile failed.
- You are not in the pomelo rollout.
- 'New in version 2.0: Added functionality to await the context manager to send a
  typing indicator for 10 seconds.'
- 'New in version 2.1: Commands that the user does not have permission to use will
  not be returned.'
- 'New in version 2.0: The edit is no longer in-place, instead the newly edited settings
  are returned.'
- Some attributes may return null.
- Requires proper permissions to access certain endpoints.
- This information is only available via Client.fetch_user()
- Uses OAuth2 for authorization with potential custom install URL for specific applications.
- Due to a limitation with the Discord API, the Message objects returned by some methods
  do not contain complete reactions data.
- New in version 2.1 for deleting and editing notes.
- The opus library must be loaded for voice connections.
- Deprecated since version 2.1 for user_commands.
- Requires OAuth2 authorization for certain endpoints.
- All parameters in the edit function are optional.
- This version introduces the ability to edit the bot and request intents.
- Purchases this subscription plan can only be used on premium subscription plans.
- Due to a Discord limitation, some counts may not always be up-to-date and accurate.
- A value of `0` for max_uses indicates that it has unlimited uses.
- If the value is `None` for expires_at, the invite will never expire.
- You must have manage_emojis_and_stickers permission to create stickers.
- You must have manage_events permission to create scheduled events.
- You must have manage_emojis permission to create emojis.
- You must have manage_roles permission to create roles.
- 'Changed in version 2.1: The default value for parameters is now the current value.'
- You must have `manage_guild` in the guild to edit the welcome screen.
- For guilds with more than 1,000 members, this requires the `manage_roles`, `kick_members`,
  or `ban_members` permissions.
- This operation does not return presences.
- You must have Permissions.manage_guild to access certain endpoints.
- New features and methods introduced in version 2.0.
- Uses Discord API for member interactions
- You must have read_message_history to do this.
- New in version 2.0 for multiple endpoints.
- Some endpoints are deprecated or will be removed in future versions.
- New features introduced in version 2.1.
- Some methods may raise HTTPException on failure.
- The API uses OAuth2 for authentication.
- You must have read_message_history to retrieve message history.
- If iterating over private threads then manage_threads is also required.
- Requires read_message_history permission to retrieve messages.
- Requires manage_channels permission to create, delete, or move channels.
- Some operations may raise Forbidden or NotFound errors.
- This API allows sending messages, uploading files, and managing message history.
- You must have manage_threads to use this API.
- Some objects like Message may return nulls in deeply nested fields
- Some properties may return None if not available.
- API may require additional setup for permissions.
- This message includes various types such as Member, User, and others.
- This class can now be constructed by users.
- Requires OAuth2 setup with Discord Developer Portal.
- Represents a Discord guild, referred to as a “server” in the official Discord UI.
- Requires a connected application setup on Discord.
- New in version 1.4.
- Uses OAuth2 with refresh token — requires setup of applications in Discord
- Some operations may fail without proper permissions
- Some methods like create_dm() are done transparently for most users.
- Requires OAuth2 for authentication.
- Certain endpoints may require specific permissions
- Some API calls may require specific permissions to access certain data.
- Due to a Discord limitation, this may not always be up-to-date and accurate.
- The maximum value possible for slowmode_delay is 21600. By default, there is no
  slowmode rate limit if this is None.
- Requires permission to access message history
- Some data may not include complete reaction information
- This API requires a connected app setup.
- Requires OAuth2 authentication to access user commands.
- DM channel creation is handled automatically.
- Requires setup of Discord bot and permissions
- Requires OAuth2 setup via Discord Developer Portal.
- Uses OAuth2 with code grant flow — requires setup of connected app in Discord
- Specifying both parameters will lead to an exception.
- The bot is attached to the application.
- Some parameters are optional and can be omitted.
- Certain features are deprecated in the latest versions.
- Edits are no longer in-place, the newly edited channel is returned instead.
- This function will now raise TypeError or ValueError instead of InvalidArgument.
- 'Changed in version 1.1: The `reason` keyword-only parameter was added.'
- 'Changed in version 1.3: The `overwrites` keyword-only parameter was added.'
- 'Changed in version 2.1: The `category` keyword-only parameter was added.'
- Voice channels will always be sorted below text channels.
- Due to a Discord limitation, online member counts may not always be up-to-date and
  accurate.
- You do not have the proper permissions to create this channel.
- Creating the channel failed.
- The permission overwrite information is not in proper form.
- All parameters are optional for editing the welcome screen.
- Role management requires proper permissions such as manage_roles
- Represents a guild integration.
- Must be a maximum of 10 files for upload.
- Some functions may require additional permissions depending on the context.
- This API is designed for interacting with Discord and its features.
- 'New in version 2.0: Now accepts an enum instead of str.'
- 'New in version 2.1: Removed the paginate parameter. It is now always paginated.'
- New methods and parameters introduced in version 2.0.
- Some methods are meant to be called rarely as they are handled automatically.
- Some endpoints may raise HTTPException during retrieval.
- New features are introduced in version 2.1.
- 'New in version 2.1: This method is deprecated and will be removed in a future version.'
- Requires manage_guild permission to access automod features
- Some message types are introduced in later versions.
- This API includes various methods related to Discord functionality.
- The webhook must be authenticated to access certain features.
- 'New in version 2.0: Several functionalities require authentication.'
- Specifies the slowmode rate limit for user in this channel, in seconds.
- This is a lower level interface to WebhookMessage.edit() for editing messages.
- This is a lower level interface to WebhookMessage.delete() for deleting messages.
- This documentation describes the attributes and methods related to GuildChannel
  in Discord.
- 'New in version 2.0: Supports editing and deleting messages.'
- You must have manage_channels to get this information.
- This API supports asynchronous operations.
- Some parameters are optional for various API functions.
- Some properties and methods are only available in specific versions.
- Settings subsections are not idempotently updated. This means if you change one
  setting in a subsection on an outdated instance of UserSettings then the other settings
  in that subsection will be reset to the value of the instance.
- Requires the completion of the full OAuth2 code grant flow to join
- Requires setup of application in Discord Developer Portal
- Requires OAuth2 setup with a valid client ID and secret.
- Uses OAuth2 with refresh token.
- Requires setup of OAuth2 application in Discord Developer Portal.
- Represents a Discord guild.
- This is referred to as a 'server' in the official Discord UI.
- Requires read_message_history and manage_guild permissions.
- You must have manage_guild permission to do this.
- All parameters for editing the welcome screen are optional.
- This guild cannot be chunked or chunking failed for more than 1,000 members.
- This API requires permissions such as manage_guild for certain operations.
- Requires manage_guild permission to fetch automod rules
- Requires Permissions.manage_guild to manage automod rules.
- New features and methods introduced in version 2.1.
- This API represents roles in a Discord guild.
- You must have manage_roles to do this
- You cannot move roles above the client’s top role in the guild
- You must have `manage_guild` permission to edit, sync, enable, or disable the integration.
- You must have `move_members` to move a member to a new voice channel.
- You must have `manage_roles` to add or remove roles from a member.
- You must have `moderate_members` to apply a timeout to a member.
- You must have `read_message_history` to retrieve message history.
- The invite may return None for attributes depending on how it was created.
- This may be None if the user is listening to a song on Spotify with a title longer
  than 128 characters.
- To upload an avatar or banner, a bytes-like object must be passed in that represents
  the image being uploaded.
- New features added in version 2.0 and 2.1.
- You must have `manage_channels` to edit or clone a channel.
- You must have `manage_messages` to delete messages.
- You must have `manage_webhooks` to create or get webhooks.
- 'Changed in version 2.0: This method now returns a list of `UserGuild` instead of
  `Guild`.'
- This method is no longer the recommended way to fetch your settings. Use `fetch_settings()`
  instead.
- Requires OAuth2 authorization for access.
- You must have read_message_history to search messages.
- You must have manage_roles to set channel permissions.
- The permissions for this channel are synced with the category it belongs to.
- You must have manage_roles to set permissions.
- Uses event-driven architecture for handling messages and events.
- Ensure the opus library matches the bitness of the Python interpreter.
- Requires proper permissions to send messages.
- There is a rare possibility that attributes will be of Object rather than the respective
  models.
- Your bot's own messages and private messages are sent through the on_message event.
- Defaults to 2 for slop in message content token matching
- If None, retrieves every message in the results, but this would make it a slow operation
- If a datetime is provided for before/after, it is recommended to use a UTC aware
  datetime
- If the datetime is naive, it is assumed to be local time
- Must be used with application_command_name
- Requires permissions such as create_public_threads and manage_messages for certain
  actions.
- This API includes various message types and related attributes.
- Some objects like Webhook may return nulls in deeply nested fields
- The maximum value possible for slowmode_delay is 21600. By default no slowmode rate
  limit if this is None.
- Some attributes can have a value of None depending on how the invite was created.
- This is a lower level interface to WebhookMessage.edit() in case you only have an
  ID.
- This is a lower level interface to WebhookMessage.delete() in case you only have
  an ID.
- Represents a Discord Guild or GuildChannel invite.
- Uses OAuth2 for authentication
- Uses OAuth2 for authentication — requires setup of application in Discord Developer
  Portal
- New in version 2.0 for several functions.
- Version 2.1 introduces new features and changes.
- This does not work on audio sources that have AudioSource.is_opus() set to True.
- Deprecated methods may be removed in future versions.
- Requires OAuth2 authentication for accessing team data.
- New message types added in version 1.3
- Some message types may not be supported in earlier versions
- This API requires a valid payment method.
- This API requires OAuth2 authentication.
- You must have manage_roles to create or edit roles.
- The guild must have the welcome screen enabled to get this information.
- Requires Permissions.manage_guild to access automod rules.
- Some endpoints may require additional permissions and validations.
- You must have `manage_events` permission to edit or delete scheduled events.
- You must have `manage_guild` permission to delete integrations.
- This represents a Discord member to a Guild.
- You must have manage_roles to use this, and the added Roles must appear lower in
  the list of roles than the highest role of the client.
- You do not have permissions to create a branch.
- You must have read_message_history to access message history.
- Due to a limitation with the Discord API, Message objects returned may not contain
  complete reactions data.
- You must have [`create_instant_invite`](#discord.Permissions.create_instant_invite
  "discord.Permissions.create_instant_invite") to do this.
- You must have [`manage_channels`](#discord.Permissions.manage_channels "discord.Permissions.manage_channels")
  to get this information.
- Some methods may require specific permissions to function correctly.
- Requires OAuth2 setup with appropriate scopes
- Rate limits apply to API requests
- The online member count may not always be up-to-date and accurate.
- You must have [`send_messages`](#discord.Permissions.send_messages) to create a
  thread.
- You must have [`manage_webhooks`](#discord.Permissions.manage_webhooks) to create
  a webhook.
- Requires 'manage_guild' permission to edit the welcome screen.
- Rate limits apply for API calls.
- Requires permissions to manage guild for certain operations.
- Webhook channels can be created only in user-joined guilds.
- The endpoint will return the found commands + up to `limit` more, if available.
- You must have `manage_threads` to use this or the thread must be owned by you.
- You must have `send_messages_in_threads` to join a thread.
- Some objects like Member and User may return nulls in deeply nested fields
- The API is rate limited; handle requests accordingly.
- Certain endpoints may require additional permissions.
- New in version 1.9.
- Using the invite requires OAuth2 authentication
- If the value is None (unless received through Client.fetch_invite() with with_expiration
  disabled), the invite will never expire.
- The invite may grant temporary membership, which kicks members upon disconnect.
- The channel’s limit for number of members that can be in a voice channel.
- Requires permissions such as read_message_history and manage_channels.
- Some requests may return incomplete data.
- You must have manage_webhooks to get the webhooks.
- 'Deprecated since version 2.1: trial_offer() method will be removed in a future
  version.'
- If there is no category then this is False.
- Requires OAuth2 authentication.
- Managed group channels may have restricted operations.
- New in version 2.0
- This function is not guaranteed to be the first event called.
- Must have proper permissions to send messages or upload files.
- Rate limits apply when sending messages.
- New events introduced in version 2.0 and 2.1.
- user_commands and slash_commands are deprecated since version 2.1.
- You must have `send_messages_in_threads` to add a user to a thread.
- You must have `manage_threads` or be the creator of the thread to remove a user.
- You must have `read_message_history` to retrieve the destination’s message history.
- This is superficially similar to logging.basicConfig() but uses different defaults
  and a colour formatter if the stream can display colour.
- Requires OAuth2 setup in developer portal
- This webhook requires authentication for certain operations.
- New endpoints introduced in version 2.0
- Requires setting up OAuth2 for authentication
- This is a lower level interface for editing and deleting messages.
- 'New in version 2.1: Added functionalities related to commands and user interactions.'
- Represents a Discord profile connection.
- Requires setup of OAuth2 with redirect URIs.
- This application allows for creating and managing bots.
- 'New in version 2.0: This function will now raise ValueError instead of InvalidArgument.'
- Requires OAuth2 setup for bot applications.
- Be aware of rate limits when calling the API.
- Permission management is required to perform channel operations.
- 'New in version 1.4: Controls the mentions being processed in this message.'
- 'New in version 1.6: Allows referencing a message and controlling mentions.'
- 'New in version 2.0: The typing context manager has been updated.'
- 'New in version 2.1: Added additional parameters and functionalities.'
- Some properties may return nulls if not set
- Due to a limitation with the Discord API, the Message objects returned by some methods
  may not contain complete reactions data.
- User commands are returned as an asynchronous iterator.
- OAuth2 is required for accessing application details.
- Represents a Discord guild, referred to as a 'server' in the official Discord UI.
- Requires permissions to edit application and bot.
- New features available in version 2.1.
- You cannot leave a guild that you own, you must delete it instead
- You must have manage_guild to edit the guild
- Uses OAuth2 with refresh token — requires setup of Discord application
- Retrieves a list of teams and their members
- Payouts can be retrieved asynchronously
- Welcome channels can only accept custom emojis if `Guild.premium_tier` is level
  2 or above.
- Due to a limitation with the Discord API, the Message objects returned by the pins
  method do not contain complete Message.reactions data.
- The bulk ban operation can result in both banned and failed lists.
- This API includes attributes related to subscription management.
- Some features are version-dependent.
- This implements a lot of the functionality of User.
- Due to a Discord API limitation, this may be None if the user is listening to a
  song on Spotify with a title longer than 128 characters.
- The `Message` objects returned by the search do not contain complete reactions data.
- You must have manage_emojis permission to create custom emojis.
- You must have manage_channels to edit, clone, delete messages, and create webhooks.
- Welcome channels can only accept custom emojis if the guild premium tier is level
  2 or above.
- Some methods may require specific permissions to function correctly
- You must have `send_messages` permission to create a thread in this forum.
- Uploads files to Discord’s GCP bucket for use with send()
- The permissions for this channel are synced with the category it belongs to if applicable.
- 'New in version 2.0: Added functionality to manage threads.'
- 'New in version 2.1: Added properties for mention count and last viewed timestamp.'
- This API allows for command fetching in direct messages.
- Ensure to handle rate limits when fetching commands.
- The stage instance’s invite URL, if public.
- You must have `manage_messages` to delete or pin messages in a non-private channel
  context.
- Represents a partial message to aid with working messages when only a message and
  channel ID are present.
- Some attributes may have a value of None.
- Requires proper permissions to perform actions on channels.
- Represents an interaction.
- Currently, the only components supported by Discord are ActionRow, Button, SelectMenu,
  TextInput.
- Unlike File, this class is not directly user-constructable, however it can be reused
  multiple times in abc.Messageable.send().
- Requires OAuth2 authentication to access APIs.
- This function is for compatibility with other channel types.
- You must have `manage_messages` to pin or unpin the message.
- Invite can expire based on max_age or uses.
- 'Warning: All audio source reads are done in a separate thread.'
- Some data might not be present when you expect it to be.
- This method is an API call. For general usage, consider `private_channels` instead.
- This method is an API call.
- Requires manage_guild permission for certain events.
- Uses OAuth2 with a bot token for authentication.
- Uses OAuth2 with bot token for authentication.
- Some methods require specific permissions to be set.
- 'New in version 2.1: Added `message_send_cooldown` and `thread_create_cooldown`
  attributes to the context manager.'
- 'New in version 2.0: This information is only available via `Client.fetch_user()`.'
- Some properties may return null if not set or applicable
- 'New in version 2.1: Added functionality to the slash command API.'
- All parameters in editing functions are optional.
- Requires permissions to edit or fetch the bot.
- Interactions require a valid interactions_endpoint_url and interactions_version
  2 or higher.
- Some endpoints may require specific permissions.
- Requires a valid OAuth2 token with appropriate scopes.
- Requires manage_emojis_and_stickers permission to create or delete stickers.
- Requires manage_events permission to create scheduled events.
- Requires manage_roles permission to create roles.
- You must have manage_guild to perform certain actions on the guild.
- You must have Permissions.manage_guild to perform these actions.
- Contains various properties and methods for managing Discord members
- You must have manage_guild to delete integrations.
- You must have `manage_guild` to edit, sync, enable, or disable the integration.
- Requires a valid connection to the Discord API.
- Uploading files failed if permissions are not proper.
- New features and changes introduced in version 2.0 and 2.1.
- Requires setup of permissions for managing emojis and stickers.
- This API represents a Discord guild text channel.
- To create a public thread, you must have create_public_threads.
- For a private thread, create_private_threads is needed.
- Some requests may require specific permissions to succeed
- Retrieving pinned messages may not include complete reactions data.
- Requires OAuth2 setup for authentication.
- Some API methods may have rate limits.
- This can only be accurately received in `on_private_channel_create()` due to a Discord
  limitation.
- You must have `read_message_history` permission to access archived threads.
- You must have `manage_channels` permission to create invites or delete channels.
- Some properties may return nulls.
- The API requires OAuth2 for authentication.
- Rate limits are enforced for API calls.
- This message contains various fields including content, mentions, and embeds.
- This API provides access to various Discord functionalities.
- Some attributes can have a value of None depending on how the object was created.
- Both query and command_ids are passed.
- You do not have permissions to get the commands.
- A value of `0` indicates that it doesn’t expire.
- Some attributes may have a value of `None`.
- You must have `manage_messages` to pin the message.
- You must have `send_messages` to publish this message.
- Keep in mind that members can both react and super react with the same emoji.
- Some attributes can have a value of None depending on the way this object was created.
- 'New in version 2.0: Includes various endpoint additions.'
- 'Deprecated since version 2.1: The trial_offer method.'
- New features introduced in version 2.0 and 2.1
- Certain actions map to certain attributes being set.
- Specifies the slowmode rate limit for user in this channel, in seconds. The maximum
  value possible is `21600`. By default no slowmode rate limit if this is `None`.
- Supports editing and deleting messages.
- Partial webhooks may return null for certain properties.
- Requires proper permissions to manage channels and roles.
- Requires setup of a bot application in Discord Developer Portal.
- Information is only available via Client.fetch_user()
- Some connections may not return all metadata.
- Version 2.0 introduces new settings and changes to existing methods.
- Requires OAuth2 authentication to access user settings.
- Requires setup of OAuth2 application
- Requires setup of OAuth2 with valid redirect URIs
- Check for permissions when creating bots
- Requires setup of connected app in api
- Requires OAuth2 for authentication
- Some fields may not be available for partial applications
- Requires OAuth2 with refresh token.
- Some endpoints may require additional permissions.
- Some methods require specific permissions.
- You must have manage_emojis_and_stickers to do this.
- You must have manage_emojis to do this.
- You must have [`manage_guild`](#discord.Permissions.manage_guild) in the guild to
  do this.
- Requires Permissions.manage_guild to access certain endpoints
- Uses WebSocket for real-time events.
- Requires appropriate permissions for certain operations.
- Requires manage_guild permissions to fetch or create automod rules.
- Eligibility checks are required for joining the Discord Admin Community.
- Requires user authentication to access member information.
- 'New in version 1.1: Can now pass None to kick a member from voice.'
- 'New in version 2.1: Fetching mutual friends and editing notes.'
- You must have manage_channels to edit the channel.
- You must have manage_messages to delete messages.
- Must have read_message_history permission to search messages.
- Due to a limitation, Message objects returned by search do not contain complete
  reactions data.
- You must send at least one of `content`, `embed`, `embeds`, `file`, `files`, or
  `view` to create a thread in a forum.
- Requires permissions to send messages in the channel.
- You must have manage_channels to edit or clone the channel.
- You must have manage_threads to use this or the thread must be owned by you.
- You must have send_messages_in_threads to join a thread.
- You must have manage_channels to edit or delete a stage instance.
- Requires proper permissions to access channel messages.
- The class is trimmed down and has no rich attributes.
- Some methods may require specific permissions to access.
- This API requires authentication to send messages.
- This URL cannot be used to download the file, it is merely used to send the file
  to Discord.
- The request to get the commands failed.
- Some fields may return nulls in certain contexts.
- This API includes various message types and attachment handling.
- A value of 0 for max_age indicates that it doesn’t expire.
- If the value is None for expires_at, the invite will never expire.
- Some invite attributes may have a value of None
- 'New in version 2.0: The method now returns a list of UserGuild instead of Guild.'
- This method is no longer the recommended way to fetch your settings.
- 'Changed in version 2.0: The `id` parameter is now positional-only.'
- 'Changed in version 2.0: Now returns a [`ResolvedInvite`](#discord.ResolvedInvite
  "discord.ResolvedInvite") instead of a [`str`](https://docs.python.org/3/library/stdtypes.html#str
  "(in Python v3.13)").'
- The audio stream can be Opus encoded or not.
- You must have the ffmpeg or avconv executable in your path.
- Requires manage_guild permission to access automod functionalities.
- This is a lower level interface to edit messages with known message IDs.
- New features and updates are introduced in version 2.0 and 2.1.
- 'New in version 2.1: member_list_id property added.'
- 'New in version 2.0: jump_url property added.'
- Some classes are new in version 2.0 or 2.1
- The edit is no longer in-place, instead the newly edited settings are returned.
- 'New in version 2.0: Some parameters are now lists.'
- Requires setup of OAuth2 for authorization
- Ensure to handle rate limiting
- This API requires permissions to edit applications and bots.
- New in version 2.1
- Webhooks allow sending messages to Discord channels without a bot user.
- The edit is no longer in-place, instead the newly edited message is returned.
- The message ID to edit.
- The message ID to delete.
- Requires permissions for accessing team information.
- Due to a limitation with the Discord API, the Message objects returned by pins may
  not contain complete reactions data.
- Due to a limitation with the Discord API, Message objects returned do not contain
  complete Message.reactions data.
- User commands method is deprecated since version 2.1
- Requires user to authorize via Discord OAuth2
- Some settings may not be available or return null
- New features and parameters introduced in version 2.0.
- Requires OAuth2 authentication for accessing application info
- New features introduced in version 2.0.
- This API allows for managing applications and their associated bots.
- Due to a Discord limitation, member count may not always be up-to-date and accurate.
- Creating a channel of a specified position will not update the position of other
  channels to follow suit.
- Uses OAuth2 with refresh token — requires setup of a Discord application
- Uses OAuth2 with refresh token — requires setup of application in Discord Developer
  Portal
- Some endpoints may require specific permissions or scopes
- Requires manage_guild permission to edit the welcome screen.
- The welcome channels can only accept custom emojis if the guild's premium tier is
  level 2 or above.
- Version 2.1 introduces several new methods including automod rules and community
  eligibility checks.
- Requires appropriate permissions to access certain endpoints
- Requires manage_guild permission to edit or sync integrations.
- Version 2.1 introduces bulk ban functionality.
- New in version 2.1 for RSVPing and un-RSVPing.
- Fetching the mutual friends may fail with HTTPException
- Fetching the note may fail with HTTPException
- Deleting the note may fail with HTTPException
- You must have `manage_roles` to add or remove roles.
- You must have `moderate_members` to timeout a member.
- Requires Permissions.manage_guild to edit or delete rules.
- Guild specific nickname takes precedence over the global name.
- The joined_at field can be None if the member left and rejoined the guild.
- Requires permissions for managing channels and stickers.
- 'New in version 2.0: This no longer works with the with syntax, async with must
  be used instead.'
- Some operations may require specific permissions
- These are useful to group channels to logical compartments.
- You must have read_message_history permissions to get message history.
- This represents a Discord guild text channel.
- Some properties like last_message may not point to an existing or valid message.
- For a private thread, create_private_threads is needed instead.
- This method is useful if you have local files that you want to upload and reuse
  multiple times.
- You must have proper permissions to access this endpoint.
- You must have manage_webhooks permissions to do this.
- 'New in version 2.0: create_invite and greet functions.'
- 'New in version 2.1: application_commands and search functions.'
- You must have `manage_webhooks` to create a webhook.
- You must have `read_message_history` to get archived threads.
- You must have `manage_channels` to delete the channel or get the information about
  active invites.
- You must have manage_threads or be the creator of the thread to remove a user.
- You must have read_message_history to retrieve the destination’s message history.
- You must have read_message_history to search the channel’s messages.
- Handles messages in a group channel.
- You must have `send_messages` to publish this message to the channel’s followers.
- Deprecated since version 2.1 for user_commands and slash_commands.
- You must have [`manage_threads`](#discord.Permissions.manage_threads "discord.Permissions.manage_threads")
  to use this or the thread must be owned by you.
- You must have [`send_messages_in_threads`](#discord.Permissions.send_messages_in_threads
  "discord.Permissions.send_messages_in_threads") to join a thread.
- If the thread is private, [`manage_threads`](#discord.Permissions.manage_threads
  "discord.Permissions.manage_threads") is also needed.
- You must have [`send_messages_in_threads`](#discord.Permissions.send_messages_in_threads
  "discord.Permissions.send_messages_in_threads") to add a user to a thread.
- If the thread is private and [`invitable`](#discord.Thread.invitable "discord.Thread.invitable")
  is `False` then [`manage_messages`](#discord.Permissions.manage_messages "discord.Permissions.manage_messages")
  is required to add a user to the thread.
- You must have [`manage_threads`](#discord.Permissions.manage_threads "discord.Permissions.manage_threads")
  or be the creator of the thread to remove a user.
- You must have [`read_message_history`](#discord.Permissions.read_message_history
  "discord.Permissions.read_message_history") to do this.
- Due to a limitation with the Discord API, the [`Message`](#discord.Message "discord.Message")
  objects returned by this method do not contain complete [`Message.reactions`](#discord.Message.reactions
  "discord.Message.reactions") data.
- You must share a guild with, be friends with, or have an incoming friend request
  from this user to get this information, unless the user is a bot.
- Uses different defaults and a colour formatter if the stream can display colour.
- 'New in version 2.1: Several methods have been introduced for better functionality.'
- When fetching with an unauthenticated webhook, the returned webhook does not contain
  any user information.
- This webhook does not have a token associated with it.
- New features and settings introduced in version 2.0.
- The integration requires the completion of the full OAuth2 code grant flow to join.
- Some parameters are optional.
- Certain actions map to specific attributes being set.
- This function will now raise ValueError instead of InvalidArgument.
- Requires setup of connected app in discord API
- Some properties may not be accurate for Guilds fetched over HTTP.
- This API includes methods for creating and managing channels in a Discord server.
- The legacy settings are no longer sent to newer clients.
- The edit function is no longer in-place, instead the newly edited settings are returned.
- This functionality requires the `manage_guild` permission.
- Requires OAuth2 with code grant flow for application access
- Some methods may require additional permissions.
- You must have manage_guild permissions to edit or sync the integration.
- If a check is not provided then all messages are deleted without discrimination.
- Due to a Discord limitation, some properties may not always be up-to-date and accurate.
- You must have manage_channels to get information about instant invites.
- You must have `manage_emojis_and_stickers` to create stickers.
- You must have `manage_events` to create scheduled events.
- You must have `manage_roles` to create roles.
- You must have create_instant_invite to create an invite.
- Requires specific permissions to access certain endpoints.
- Requires manage_guild permission for certain actions.
- New features introduced in various versions, including 1.9 and 2.1.
- Incomplete message reactions data in pinned messages due to API limitations.
- Member representation includes various attributes like roles, status, etc.
- You must have manage_threads permission to use this API.
- The API raises HTTPException for failed requests.
- Some attributes can have a value of `None` depending on the way this object was
  created.
- Requires OAuth2 authentication
- Requires permissions like send_messages and manage_webhooks to interact with threads
  and channels.
- 'Deprecated since version 2.1: The trial_offer() method is deprecated and will be
  removed in a future version.'
- New features added in versions 1.9 and 2.0.
- The `search` method requires specific permissions.
- Certain attributes are only available through specific methods.
- The maximum value possible is `21600`.
- Some properties may return null if not fetched.
- Certain information is only available via specific methods like Client.fetch_user()
- Requires OAuth2 setup with bot permissions.
- Requires OAuth2 setup with client credentials.
- Deprecated user_commands method, returns asynchronous iterator.
- Requires setup of OAuth2 for API access
- Verify bot permissions for actions
- Edits the application.
- You must have manage_guild in the guild to edit the welcome screen.
- The bulk ban operation can ban multiple users at once.
- You must have [`Permissions.manage_guild`](#discord.Permissions.manage_guild "discord.Permissions.manage_guild")
  to edit rules.
- You must have [`Permissions.manage_guild`](#discord.Permissions.manage_guild "discord.Permissions.manage_guild")
  to delete rules.
- This API supports premium subscription plans.
- Requires permissions to edit the store listing.
- Certain operations may fail due to permissions.
- 'Changed in version 2.1: Removed application_command_counts and application_command_count
  as they are no longer provided by Discord.'
- Channel data is fetched via the Discord API.
- There is currently a limit of 50 static and animated emojis respectively per guild.
- You must have create_instant_invite to do this.
- You must have `manage_guild` permission to edit the welcome screen.
- Requires `read_message_history` permission to access message history.
- Requires `manage_channels` permission to get invites.
- Requires setup of OAuth2 application in Discord
- You must have manage_guild to edit, sync, enable, or disable the integration.
- This represents a Discord member and includes functionalities of the User class.
- The maximum number of files to upload is 10.
- Version 2.1 introduces new properties and methods related to message acknowledgment
  and channel viewing.
- Requires OAuth2 setup for API access
- Group channel can only have a maximum of 10 members.
- Some properties may return None if not found.
- You cannot set joined to True and private to False.
- If a datetime is provided, it is recommended to use a UTC aware datetime.
- If the datetime is naive, it is assumed to be local time.
- When using the around argument, the maximum limit is 101. Note that if the limit
  is an even number then this will return at most limit + 1 messages.
- If set to True, return messages in oldest->newest order.
- Defaults to True if after is specified, otherwise False.
- The upload_files method must not exceed 10 files.
- Uses Discord API with version 2.0 features
- Represents a Discord guild stage channel.
- You must have manage_channels to create or edit stage channels.
- New features added in version 2.1.
- Some objects like Message may return incomplete data.
- This class is trimmed down and has no rich attributes.
- Requires manage_messages permission to clear reactions.
- Requires create_public_threads permission to create threads.
- You must have `send_messages` permission to create a thread in a forum.
- At least one of `content`, `embed`, `embeds`, `file`, `files`, or `view` must be
  sent to create a thread.
- File objects are single use and are not meant to be reused in multiple send operations.
- If this is set to `False`, large guilds may not dispatch any non-stateful events.
- New features in version 2.0 and 2.1
- Due to limitations, some messages may not contain complete reactions data.
- Some methods have been updated or changed in version 2.1.
- You must have manage_threads to use these methods.
- You must have `create_public_threads` permission to create a public thread from
  a message.
- You must have `manage_messages` permission to delete or pin messages in a non-private
  channel.
- Invite may return None for certain attributes depending on how it was created.
- If the invite is not a guild invite, some attributes may be None.
- Some attributes may return None depending on the context of the invite.
- Invite attributes can be returned as None depending on the method used.
- 'Warning: The audio source reads are done in a separate thread.'
- 'Warning: You must have the ffmpeg or avconv executable in your path environment
  variable in order for this to work.'
- This API supports webhooks for sending messages.
- Some properties may return nulls in deeply nested fields
- 'Deprecated since version 2.1: trial_offer method is deprecated.'
- New functionalities added in version 2.0 and 2.1.
- All properties have setters to facilitate editing the class for use with UserSettings.edit().
- Uses OAuth2 with refresh token — requires setup of Discord application.
- Uses OAuth2 with full code grant flow.
- Some methods may have changed in version 2.1.
- 'New in version 2.0: Added functionality to `await` the context manager to send
  a typing indicator for 10 seconds.'
- Requires setup of payment source for transactions.
- Purchasing may require additional validation for premium subscriptions.
- Due to a Discord limitation, online member count may not always be up-to-date and
  accurate.
- You must have manage_emojis to create or delete emojis.
- Some fields may return null values
- For guilds with more than 1,000 members, requires manage_roles, kick_members, or
  ban_members permissions.
- This API requires OAuth2 authorization.
- Some endpoints may require specific permissions to access.
- You must have manage_guild permission to edit, sync, enable, or disable the integration.
- Some properties may not be available in all contexts.
- Certain requirements must be met for gifts to be possible.
- The guild must have ROLE_ICONS in features to use display_icon.
- You must have `manage_guild` in the guild to perform operations.
- This is done automatically by default, so you do not need to perform subscription
  unless specified.
- Requires setup of permissions for managing guild.
- 'New in version 2.1: Additional properties for roles including secondary_color and
  tertiary_color.'
- You must have the appropriate permissions to access certain resources.
- You must have manage_roles to use add_roles and remove_roles.
- You must have `manage_channels` to delete a channel or get invites.
- The permissions for this channel are synced with the category it belongs to if there
  is one.
- This API may have limitations on certain properties based on Discord's behavior.
- New features and functions introduced in various versions.
- API limitations noted for specific endpoint responses.
- Specifying both 'file' and 'files' parameters will lead to an exception.
- You must have `manage_messages` to delete or pin messages.
- The invite may expire depending on the max_age value.
- Some attributes can be None based on the invite context.
- Due to a Discord limitation, if this data is available the users will be 'anonymized'
  with linear IDs and discriminator information being incorrect.
- Actual direct messages do not really have the concept of permissions.
- Unlike File, CloudFile can be reused multiple times in sends.
- The colour values in the classmethods are mostly provided as-is and can change between
  versions should the Discord client’s representation of that colour also change.
- The `upload_files` method is useful if you have local files that you want to upload
  and reuse multiple times.
- You must have `manage_threads` to use certain thread functions.
- Due to a limitation with the Discord API, the Message objects returned do not contain
  complete reactions data.
- Requires setup of proper permissions such as create_public_threads and manage_messages.
- Commands can use subcommands and groups for nested operations.
- This API provides access to various message-related data.
- Some attributes may return null if the message is deleted.
- The library is designed to be compatible with discord.py.
- User accounts have different capabilities compared to bot accounts.
- Guild subscriptions limit events received from a guild.
- Clients can subscribe to additional features, such as typing events and member updates.
- An additional drawback is that there is no way to subscribe to presence updates
  for all members in a guild.
- It is strongly recommended that the logging module is configured, as no errors or
  warnings will be output if it is not set up.
- The default logging configuration provided by the library will print to sys.stderr
  using coloured output.
- This class is not directly user-constructable, however it can be reused multiple
  times in abc.Messageable.send().
- event parameter is now positional-only
- Requires OAuth2 setup for app in Discord Developer Portal
- Requires user to authenticate via OAuth2
- Allows your bot to reply to everyone’s message.
- Uses asyncio for handling audio streams
- Requires ffmpeg or avconv executable in the path
- Threads inherit permissions from their parent channel.
- Threads do not have their own NSFW status.
- Presence updates now have a separate event.
- Discord’s API has removed store channels as of March 10th, 2022.
- The loading and unloading of extensions and cogs is now asynchronous.
- The setup and teardown functions in extensions must now be coroutines.
- The library now less often uses `None` as the default value for function/method
  parameters.
- v2.0 drops support for Python 3.7 and earlier.
- Threads do not have their own permissions, they inherit the permissions of their
  parent channel.
- Threads do not have their own NSFW status, they inherit it from their parent channel.
- Threads do not have their own topic.
- Threads do not have their own position in the channel list.
- Discord API has removed store channels as of March 10th, 2022
- Requires OAuth2 for access
- Rate limits are enforced by the API
- The Guild.bans() endpoint is now paginated using an asynchronous iterator.
- Requires setup of a webhook in the Discord application.
- This no longer works with the `with` syntax, `async with` must be used instead.
- Added functionality to `await` the context manager to send a typing indicator for
  10 seconds.
- This API has rate limits that need to be respected.
- Some settings may have restrictions based on user permissions.
- The application requires OAuth2 for authentication.
- Deprecated user_commands method since version 2.1.
- Purchasing requires a valid payment source and may error if amounts do not match.
- All parameters for editing welcome screen are optional.
- For guilds with more than 1,000 members, certain permissions are required to fetch
  members.
- Requires Permission.manage_guild to fetch automod rules.
- New features may be added in future versions.
- Fetching mutual friends may fail with an HTTPException
- Fetching the user's note may return None if no note exists
- New in version 2.1 for certain features.
- Some fields may return nulls.
- Since messages are just iterated over and deleted one-by-one, it’s easy to get ratelimited
  using this method.
- Requires read_message_history permission to search messages.
- Some message data may not contain complete reactions information.
- New features and changes introduced in version 2.0.
- If a datetime is naive, it is assumed to be local time.
- Some properties are optional and may return None.
- Specifying both parameters will lead to an exception
- This message type includes several optional fields that may not always be present.
- This does not retrieve archived threads, as they are not retained in the internal
  cache.
- The number of members retrieved is capped.
- This class is not directly user-constructable, however it can be reused multiple
  times.
- Embed length limit is 6000 characters.
- Represents a directory entry for a channel.
- Represents a forum tag that can be applied to a thread.
- End points may return flags in a bit array format.
- Uses Poll class to create and manage polls.
- Uses aiohttp for making requests
- The library provides default configuration for the discord logger when using Client.run().
- Requires OAuth2 setup in Discord Developer Portal.
- Some objects like Channel may return nulls in deeply nested fields
- Requires OAuth2 setup in the Discord developer portal
- Webhook support has been rewritten to work better with typings and rate limits.
- Presence updates now have a separate event
- Guild.bans() no longer returns a list of every ban in the guild but instead is paginated
  using an asynchronous iterator.
- The library now less often uses None as the default value for function/method parameters.
- v2.0 drops support for Python 3.7 and earlier
- The old `Integration` class has been renamed to `StreamIntegration`.
- Presence updates now have a separate event `on_presence_update()`.
- Most of the model methods that previously edited the model in-place have been updated
  to no longer do this.
- Uses OAuth2 — requires setup of connected app in bot
errors:
- 'TypeError: An unexpected keyword argument was received.'
- 'HTTPException: The request to get recent message history failed.'
- 'HTTPException: Deleting the recent mention failed.'
- 'HTTPException: Retrieving the user affinities failed.'
- 'HTTPException: Retrieving the guild affinities failed.'
- 'HTTPException: Retrieving the channel affinities failed.'
- 'HTTPException: Retrieving the premium affinities failed.'
- 'LoginFailure: The wrong credentials are passed.'
- 'HTTPException: An unknown HTTP related error occurred.'
- 'Forbidden: You do not have permissions to revoke invites.'
- 'NotFound: The invite is invalid or expired.'
- 'HTTPException: Revoking the invite failed.'
- 'HTTPException: Getting the guilds failed.'
- 'HTTPException: Getting the template failed.'
- 'HTTPException: Joining the guild failed.'
- 'NotFound: The team was not found.'
- 'Forbidden: You are not a part of the team.'
- 'HTTPException: Retrieving the team failed.'
- 'HTTPException: Retrieving the experiment assignments failed.'
- 'HTTPException: Retrieving the recent avatars failed.'
- 'ClientException: Already playing audio or not connected.'
- 'OpusNotLoaded: Source is not opus encoded and opus is not loaded.'
- 'HTTPException: An unknown HTTP related error occurred, usually when it isn’t 200
  or the known incorrect credentials passing status code.'
- 'HTTPException: General error for API calls. Check the request format.'
- 'HTTPException: Retrieving the promotions failed.'
- 'NotFound: You do not have a user offer.'
- 'HTTPException: Retrieving the user offer failed.'
- 'HTTPException: An error occurred while processing the request.'
- 'HTTPException: Sending the message failed.'
- 'NotFound: This webhook was not found.'
- 'Forbidden: The authorization token for the webhook is incorrect.'
- 'HTTPException: Editing the message failed.'
- 'Forbidden: You do not have proper permissions to delete the message.'
- 'NotFound: The message was deleted already.'
- 'NotFound: The specified message was not found.'
- 'Forbidden: You do not have the permissions required to get a message.'
- 'HTTPException: Retrieving the message failed.'
- 'ValueError: There was no token associated with this webhook.'
- 'Forbidden: You do not have permissions to create a thread.'
- 'HTTPException: Creating the thread failed.'
- 'ValueError: This message does not have guild info attached.'
- 'Forbidden: You do not have permissions to unpin the message.'
- 'NotFound: The message or channel was not found or deleted.'
- 'HTTPException: Unpinning the message failed.'
- 'NotFound: The resource was not found.'
- 'Forbidden: You are not permitted to access this resource.'
- 'Forbidden: You do not have permissions to perform this action.'
- 'NotFound: The channel was not found or was already deleted.'
- 'HTTPException: The request failed due to an unexpected error.'
- 'TypeError: Both query and command_ids are passed.'
- 'ValueError: The limit was not greater than or equal to 0.'
- 'HTTPException: Getting the commands failed.'
- 'Forbidden: You do not have permissions to get the commands.'
- 'NotFound: The requested resource does not exist.'
- 'Forbidden: You do not have proper permissions to delete the channel.'
- 'HTTPException: Deleting the channel failed.'
- 'HTTPException: Failed to create the application.'
- 'HTTPException: Failed to create the team.'
- 'HTTPException: Searching failed.'
- 'HTTPException: Retrieving the company failed.'
- 'HTTPException: Retrieving the statistics failed.'
- 'HTTPException: Retrieving the payment sources failed.'
- 'HTTPException: Creating the payment source failed.'
- 'HTTPException: Retrieving the subscriptions failed.'
- 'HTTPException: Indicates that an HTTP error occurred.'
- 'Forbidden: Indicates that the request was not permitted.'
- 'Forbidden: You do not have the proper permissions to send the message.'
- 'TypeError: The reference object is not a Message, MessageReference or PartialMessage.'
- 'HTTPException: Editing the note failed'
- 'NotFound: The specified message was not found'
- 'Forbidden: You do not have the permissions required to get a message'
- 'Forbidden: You do not have permissions to get channel message history.'
- 'HTTPException: The request to get message history failed.'
- 'NotFound: You sent a message with the same nonce as one that has been explicitly
  deleted shortly earlier.'
- 'ValueError: The files list is not of the appropriate size.'
- 'TypeError: You specified both file and files.'
- 'Forbidden: You do not have permissions to edit this application.'
- 'HTTPException: Editing the application failed.'
- 'Forbidden: You do not have the proper permissions to send the message, or this
  is not a valid greet context.'
- 'Forbidden: You are not allowed to manage this application'
- 'HTTPException: Fetching the resource failed'
- 'Forbidden: You do not have permissions to edit the team.'
- 'HTTPException: Editing the team failed.'
- 'HTTPException: Deleting the note failed.'
- 'HTTPException: Editing the note failed.'
- 'HTTPException: Fetching the mutual friends failed.'
- 'HTTPException: Fetching the note failed.'
- 'HTTPException: Retrieving the pinned messages failed.'
- 'HTTPException: The request to search messages failed.'
- 'TypeError: Provided both before and after when most_relevant is set.'
- 'ValueError: Could not resolve the channel’s guild ID.'
- 'Forbidden: Edited a message that is not yours.'
- 'TypeError: You specified both embed and embeds'
- 'ValueError: The length of embeds was invalid, there was no token associated with
  this webhook or the webhook had no state.'
- 'HTTPException: Deleting the message failed.'
- 'Forbidden: You do not have proper permissions to access this channel.'
- 'NotFound: The channel was not found or has been deleted.'
- 'HTTPException: Invite creation failed'
- 'NotFound: The channel that was passed is a category or an invalid channel'
- 'ValueError: target_type is not a creatable invite target type'
- 'Forbidden: You do not have proper permissions to get the information'
- 'HTTPException: The request failed.'
- 'Forbidden: You do not have the required permissions.'
- 'Forbidden: You do not have permissions to edit the store listing.'
- 'HTTPException: Editing the store listing failed.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Forbidden: You do not have the proper permissions to create this channel.'
- 'HTTPException: Creating the channel failed.'
- 'TypeError: The permission overwrite information is not in proper form.'
- 'HTTPException: Request failed'
- 'NotFound: User not found'
- 'Forbidden: Insufficient permissions'
- 'ValueError: Could not resolve the channel''s guild ID.'
- 'TypeError: You specified both file and files, or the reference object is not a
  Message, MessageReference or PartialMessage.'
- 'Forbidden: You are not allowed to create stickers.'
- 'HTTPException: An error occurred creating a sticker.'
- 'NotFound: The sticker requested could not be found.'
- 'Forbidden: You do not have permissions to create the role.'
- 'HTTPException: Creating the role failed.'
- 'TypeError: An invalid keyword argument was given.'
- 'ValueError: unicode_emoji was the wrong type.'
- 'HTTPException: Editing the settings failed.'
- 'TypeError: At least one setting is required to edit.'
- 'NotFound: The guild does not have a welcome screen.'
- 'Forbidden: You do not have manage_guild.'
- 'HTTPException: Retrieving the welcome screen failed.'
- 'Forbidden: You do not have permission to perform this action.'
- 'NotFound: The requested resource was not found.'
- '401 Unauthorized: Invalid credentials provided.'
- '404 Not Found: Application not found.'
- 'Forbidden: You do not have permissions to edit the scheduled event.'
- 'Forbidden: You do not have permissions to delete the scheduled event.'
- 'HTTPException: Editing the scheduled event failed.'
- 'HTTPException: Deleting the integration failed.'
- 'Forbidden: You do not have permission to edit or delete this rule.'
- 'HTTPException: Editing or deleting the rule failed.'
- 'FORBIDDEN: You do not have permissions to access this resource'
- 'HTTPException: The request to the API failed'
- 'Forbidden: You do not have permissions to upload assets.'
- 'HTTPException: Uploading the asset failed.'
- 'FORBIDDEN: Not allowed to send a friend request to the user.'
- 'HTTPException: Sending the friend request failed.'
- 'Forbidden: You do not have the proper permissions to do the action requested.'
- 'HTTPException: The operation failed.'
- 'TypeError: The datetime object passed to timed_out_until was not timezone-aware.'
- 'Forbidden: You do not have the permission to retrieve pinned messages.'
- 'NotFound: Not allowed to fetch this profile.'
- 'HTTPException: Fetching the profile failed.'
- 'InvalidData: The member is not in this guild or has blocked you.'
- 'Forbidden: You are not allowed to manage this application.'
- 'HTTPException: Fetching the build failed.'
- 'NotFound: The build does not exist.'
- '403 Forbidden: Check permissions'
- '404 Not Found: Ensure the endpoint is correct'
- 'HTTPException: Uploading the files failed.'
- 'Forbidden: You do not have the proper permissions to upload files.'
- 'Forbidden: You do not have permission to access this resource.'
- 'Forbidden: You do not have permissions to edit the channel.'
- 'HTTPException: Editing the channel failed.'
- 'Forbidden: You do not have permissions to edit channel specific permissions.'
- 'HTTPException: Editing channel specific permissions failed.'
- 'NotFound: The role or member being edited is not part of the guild.'
- 'TypeError: The overwrite parameter was invalid or the target type was not Role
  or Member.'
- 'ValueError: The overwrite parameter and positions parameters were both unset.'
- 'Forbidden: You do not have proper permissions to do the actions required.'
- 'HTTPException: Purging the messages failed.'
- 'ValueError: If the permission overwrite information is not in proper form.'
- 'Forbidden: You do not have permissions to edit the guild.'
- 'HTTPException: Editing the guild failed.'
- 'ValueError: The image format passed in to icon is invalid. It must be PNG or JPG.'
- 'TypeError: The type passed to the default_notifications, verification_level, explicit_content_filter,
  system_channel_flags, or mfa_level parameter was of the incorrect type.'
- 'TypeError: Provided both before and after when most_relevant is set. Did not provide
  both application_command_id and application_command_name.'
- 'Forbidden: You don’t have permissions to access this resource.'
- 'HTTPException: Request failed.'
- 'HTTPException: Starting the thread failed.'
- 'ValueError: The files or embeds list is not of the appropriate size.'
- 'HTTPException: Fetching failed due to internal server error.'
- 'Forbidden: You do not have the necessary permissions.'
- 'TypeError: Provided both `before` and `after` when `most_relevant` is set.'
- 'Forbidden: You do not have permission to perform this action'
- 'Forbidden: You do not have permissions to change the role.'
- 'HTTPException: Editing the role failed.'
- 'ValueError: An invalid position was given, the default role was asked to be moved,
  or both display_icon and icon/unicode_emoji were set.'
- 'HTTPException: Deleting the scheduled event failed.'
- '403 Forbidden: You do not have permission to perform this action.'
- 'Forbidden: You do not have permissions to access this member.'
- 'HTTPException: The request to get the member failed.'
- 'HTTPException: Sending the friend request failed'
- 'HTTPException: Fetching the mutual friends failed'
- 'HTTPException: Fetching the note failed'
- 'HTTPException: Deleting the note failed'
- '403 Forbidden: You do not have the permission to retrieve pinned messages.'
- '404 NotFound: Not allowed to fetch this profile.'
- '400 HTTPException: Retrieving the pinned messages failed.'
- '400 HTTPException: Sending the message failed.'
- 'HTTPException: The request failed due to an HTTP error.'
- 'HTTPException: Getting the message failed.'
- 'Forbidden: You do not have permissions to get the message.'
- 'HTTPException: Removing the reactions failed.'
- 'Forbidden: You do not have the proper permissions to remove all the reactions.'
- 'HTTPException: Removing the reaction failed.'
- 'Forbidden: You do not have the proper permissions to remove the reaction.'
- 'NotFound: The member or emoji you specified was not found.'
- 'TypeError: The emoji parameter is invalid.'
- 'DiscordException: The asset does not have an associated state.'
- 'ValueError: The asset is a unicode emoji.'
- 'TypeError: The asset is a sticker with lottie type.'
- 'HTTPException: Downloading the asset failed.'
- 'NotFound: The asset was deleted.'
- 'HTTPException: The request to get payments failed.'
- 'Forbidden: You do not have permissions to get archived threads.'
- 'HTTPException: The request to get the archived threads failed.'
- 'ValueError: ''joined'' was set to ''True'' and ''private'' was set to ''False''.
  You cannot retrieve public archived threads that you have joined.'
- 'ValueError: An invalid position was given.'
- 'TypeError: A bad mix of arguments were passed.'
- 'Forbidden: You do not have permissions to move the channel.'
- 'HTTPException: Moving the channel failed.'
- 'FORBIDDEN: You do not have permissions to edit channel specific permissions.'
- 'Forbidden: You do not have the proper permissions'
- 'HTTPException: Creating the channel failed'
- 'FORBIDDEN: You do not have the proper permissions to send the message, or this
  is not a valid greet context.'
- 'NotFound: The specified resource was not found.'
- 'Forbidden: You don’t have permissions to access the resource.'
- 'TypeError: You specified both file and files, or you specified both embed and embeds.'
- 'Forbidden: You do not have permissions to add a recipient to this group.'
- 'HTTPException: Adding a recipient to this group failed.'
- 'HTTPException: General error occurred during request.'
- 'Forbidden: You do not have permission for this action.'
- 'Forbidden: You do not have permissions to remove these tags.'
- 'HTTPException: Removing tags failed.'
- 'Forbidden: You do not have permissions to join the thread.'
- 'HTTPException: Joining the thread failed.'
- 'HTTPException: Leaving the thread failed.'
- 'Forbidden: You do not have permissions to add the user to the thread.'
- 'HTTPException: Adding the user to the thread failed.'
- 'Forbidden: You do not have permissions to remove the user from the thread.'
- 'HTTPException: Removing the user from the thread failed.'
- 'InvalidData: Discord didn’t respond with the members.'
- 'Forbidden: You do not have permissions to delete this thread.'
- 'HTTPException: Deleting the thread failed.'
- 'HTTPException: Acking the channel failed.'
- 'HTTPException: Acking the pinned messages failed.'
- 'TypeError: Attempted to fetch commands in a DM with a non-bot user.'
- 'Forbidden: You do not have the proper permissions to access this message.'
- 'HTTPException: An error occurred while processing the request'
- 'Forbidden: Tried to suppress a message without permissions or edit a message that
  isn’t yours.'
- 'NotFound: This message does not exist.'
- 'HTTPException: Getting the users for the reaction failed.'
- 'NotFound: The user you specified, or the reaction’s message was not found.'
- 'HTTPException: Using the invite failed.'
- 'asyncio.TimeoutError: If a timeout is provided and it was reached.'
- 'HTTPException: Guild creation failed.'
- 'HTTPException: Leaving the guild failed.'
- 'NotFound: The template is invalid.'
- 'NotFound: Guild with given ID does not exist/is not public.'
- 'NotFound: The invite has expired or is invalid.'
- 'HTTPException: Retrieving the data failed.'
- 'NotFound: Resource does not exist.'
- 'TypeError: You specified both embed and embeds.'
- 'HTTPException: An error occurred during the request.'
- 'HTTPException: Blocking the user failed.'
- 'HTTPException: Unblocking the user failed.'
- 'HTTPException: Removing the user as a friend failed.'
- 'HTTPException: Retrieving the message failed'
- 'Forbidden: You do not have permissions to get channel message history'
- 'HTTPException: The request to get message history failed'
- 'Forbidden: You do not have the permission to retrieve pinned messages'
- 'HTTPException: Retrieving the pinned messages failed'
- 'NotFound: A user with this ID does not exist'
- 'HTTPException: Indicates an error occurred during the request'
- HTTPException – Acking the channel failed.
- HTTPException – Acking the pinned messages failed.
- HTTPException – Getting the commands failed.
- '401 Unauthorized: Check your access token or scopes.'
- '403 Forbidden: Ensure the bot has the necessary permissions.'
- 'Forbidden: You do not have permissions to perform this action'
- 'HTTPException: The request failed'
- 'Forbidden: Deleted a message that is not yours.'
- 'ValueError: This webhook does not have a token associated with it.'
- 'HTTPException: Acking failed.'
- 'HTTPException: Adding the reaction failed.'
- 'Forbidden: You do not have the proper permissions to react to the message.'
- 'NotFound: The emoji you specified was not found.'
- 'HTTPException: Clearing the reaction failed.'
- 'Forbidden: You do not have the proper permissions to clear the reaction.'
- '401 Unauthorized: Check your OAuth2 token'
- '403 Forbidden: Check your permissions'
- '404 Not Found: The resource could not be found'
- 'FORBIDDEN: Edited a message that is not yours'
- 'HTTPException: Editing the message failed'
- '403 Forbidden: You do not have permissions to access this resource.'
- '404 Not Found: The requested channel was not found.'
- '401 Unauthorized: Invalid token or insufficient scopes.'
- 'HTTPException: Invite creation failed.'
- 'NotFound: The channel that was passed is a category or an invalid channel.'
- 'ValueError: target_type is not a creatable invite target type.'
- 'TypeError: The `reference` object is not a `Message`, `MessageReference` or `PartialMessage`.'
- '403 Forbidden: You are not allowed to perform this action.'
- '404 NotFound: The requested resource could not be found.'
- 'Forbidden: You do not have manage_guild permission.'
- '401 Unauthorized: Check OAuth token and scopes'
- '404 Not Found: Verify the application ID'
- '403 Forbidden: You do not have permissions to edit this application'
- 'HTTPException: Editing the application failed'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Check your authentication credentials.'
- '404 Not Found: The requested resource does not exist.'
- 'Forbidden: You do not have the proper permissions to cancel the scheduled event.'
- 'HTTPException: The scheduled event could not be cancelled.'
- 'HTTPException: Retrieving the members failed.'
- 'HTTPException: RSVPing failed.'
- 'HTTPException: Un-RSVPing failed.'
- 'Forbidden: You do not have permission to edit the integration.'
- 'Forbidden: You do not have permission to edit this rule.'
- 'HTTPException: Editing the rule failed.'
- 'Forbidden: You do not have permissions to delete the rule.'
- 'HTTPException: Deleting the rule failed.'
- '403 Forbidden: You do not have permission to access this resource.'
- '404 Not Found: The specified guild or member does not exist.'
- 'ValueError: Could not resolve the channel’s guild ID. Did not provide both `application_command_id`
  and `application_command_name`.'
- 'ValueError: The `files` list is not of the appropriate size.'
- 'TypeError: You specified both `file` and `files`, or the `reference` object is
  not a Message, MessageReference or PartialMessage.'
- '[**Forbidden**](#discord.Forbidden "discord.Forbidden") – You do not have permissions
  to edit the team.'
- '[**HTTPException**](#discord.HTTPException "discord.HTTPException") – Editing the
  team failed.'
- 'HTTPException: Request failed due to API error.'
- 'Forbidden: Permissions are insufficient for the requested action.'
- 'HTTPException: Uploading the files failed'
- 'Forbidden: You do not have the proper permissions to upload files'
- 'HTTPException: Purchasing failed.'
- 'TypeError: Invalid parameters passed.'
- 'HTTPException: Creating the webhook failed.'
- 'Forbidden: You do not have permissions to create a webhook.'
- 'TypeError: The `reference` object is not a valid message type.'
- 'HTTPException: An error occurred fetching the sticker.'
- 'Forbidden: You don’t have permissions to get the entry.'
- 'HTTPException: Getting the entry failed.'
- 'HTTPException: Fetching the applications failed.'
- 'HTTPException: Fetching the premium guild subscriptions failed.'
- 'HTTPException: Retrieving the entitlements failed.'
- 'HTTPException: Fetching the price tiers failed.'
- 'Forbidden: You do not have permissions to view the automod rule.'
- 'NotFound: The automod rule does not exist within this guild.'
- 'HTTPException: Creating the automod rule failed.'
- '403 Forbidden: Insufficient permissions to perform this action.'
- '404 Not Found: The requested resource was not found.'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Ensure valid token and permissions.'
- '404 Not Found: The specified member does not exist.'
- 'TypeError: You specified both `file` and `files`.'
- 'Forbidden: Not allowed to unblock this user.'
- 'FORBIDDEN: You do not have permissions to perform this action'
- 'HTTP_EXCEPTION: An error occurred during the HTTP request'
- 'Forbidden: You do not have the proper permissions to create a thread.'
- 'NotFound: The message was not found.'
- '403 Forbidden: You do not have permissions to perform this action'
- '404 NotFound: The requested resource does not exist'
- '500 Internal Server Error: An error occurred on the server'
- 'NotFound: The user specified, or the reaction’s message was not found.'
- 'ValueError: joined was set to True and private was set to False.'
- 'NotFound: Resource does not exist'
- 'HTTPException: The request to get the commands failed.'
- 'HTTPException: Sending the message failed'
- 'NotFound: This webhook was not found'
- 'Forbidden: The authorization token for the webhook is incorrect'
- 'Forbidden: You do not have permissions to retrieve pinned messages.'
- '403 Forbidden: You do not have permissions to perform this action.'
- '404 Not Found: The channel or guild was not found.'
- '400 Bad Request: Invalid parameters were provided.'
- 'HTTPException: Removing the reaction failed'
- 'Forbidden: You do not have the proper permissions to remove the reaction'
- 'NotFound: The member or emoji you specified was not found'
- 'TypeError: The emoji parameter is invalid'
- 'HTTPException: Saving the attachment failed.'
- 'Forbidden: You do not have permissions to access this attachment.'
- 'NotFound: The attachment was deleted.'
- '400 Bad Request: Invalid parameters provided'
- '401 Unauthorized: Invalid token or missing scopes'
- '404 Not Found: Application or endpoint does not exist'
- '403 Forbidden: You do not have permissions to revoke invites.'
- '404 NotFound: The invite is invalid or expired.'
- 'HTTPException: Revoking the invites failed.'
- 'TypeError: You specified both `file` and `files`, or the `reference` object is
  not a `Message`, `MessageReference` or `PartialMessage`.'
- 'HTTPException: An error occurred during the HTTP request.'
- 'Forbidden: You do not have permissions required to get a message.'
- 'Forbidden: You do not have proper permissions to get the information.'
- 'HTTPException: An error occurred while fetching the information.'
- 'TypeError: Both after and before were provided, as Discord does not support this
  type of pagination.'
- 'HTTPException: An error occurred creating the sticker.'
- 'NotFound: The scheduled event was not found.'
- 'Forbidden: You do not have permission to get the premium guild subscriptions.'
- 'HTTPException: The request failed due to an internal error.'
- 'Forbidden: You do not have permission to edit or sync the integration.'
- 'HTTPException: Editing or syncing the integration failed.'
- 'Forbidden: Not allowed to perform this action.'
- 'Forbidden: Not allowed to send a friend request to the user.'
- 'TypeError: The datetime object passed was not timezone-aware.'
- 'Forbidden: You do not have permission'
- 'NotFound: The resource does not exist'
- 'Forbidden: You do not have proper permissions to access this resource.'
- 'NotFound: The specified channel was not found.'
- 'asyncio.TimeoutError: Could not connect to the voice channel in time.'
- 'ClientException: You are already connected to a voice channel.'
- 'OpusNotLoaded: The opus library has not been loaded.'
- 'HTTPException: Editing your profile failed.'
- 'ValueError: Username was not passed when migrating to pomelo.'
- 'NotFound: Message with the same nonce was deleted.'
- 'TypeError: Specified both file and files.'
- 'Forbidden: You do not have proper permissions to create this channel.'
- 'Forbidden: You do not have proper permissions to delete the messages.'
- 'HTTPException: Deleting the messages failed.'
- 'Forbidden: You don’t have permissions to get the webhooks.'
- 'ValueError: `joined` was set to `True` and `private` was set to `False`. You cannot
  retrieve public archived threads that you have joined.'
- 'Forbidden: You do not have permissions to get the entries.'
- 'HTTPException: Getting the entries failed.'
- 'Forbidden: You don’t have permissions to perform this action.'
- '404 Not Found: Application does not exist or has been deleted'
- '429 Too Many Requests: Rate limit exceeded'
- 'TypeError: You specified both file and files, or the reference object is not a
  Message, MessageReference, or PartialMessage.'
- 'ValueError: The `files` or `embeds` list is not of the appropriate size.'
- 'TypeError: You specified both `file` and `files`, or you specified both `embed`
  and `embeds`.'
- 'TypeError: No recipients were provided.'
- 'HTTPException: The request to send a message failed.'
- 'NotFound: The specified channel does not exist.'
- 'Forbidden: You do not have permissions to access this resource.'
- 'Forbidden: You do not have the proper permissions to perform this action.'
- 'Forbidden: You are not allowed to perform this action.'
- 'HTTPException: An error occurred during the API call.'
- '401 Unauthorized: Check your access token.'
- '404 Not Found: The application ID does not exist.'
- '403 Forbidden: You do not have permissions to edit this application.'
- 'Forbidden: You do not have `manage_guild` permission.'
- 'HTTPException: An error occurred while performing the request.'
- 'HTTPException: Inviting the user failed.'
- 'TypeError: More than 2 parameters or less than 1 parameter were passed.'
- '500 HTTPException: Retrieving the pinned messages failed.'
- '404 Not Found: Requested resource does not exist or was not found'
- '429 Too Many Requests: Rate limit exceeded, retry later'
- '404 Not Found: The channel does not exist or has been deleted.'
- '401 Unauthorized: Invalid token or insufficient permissions.'
- 'Forbidden: You do not have permissions to get the webhooks.'
- 'ValueError: ''joined'' was set to True and ''private'' was set to False.'
- 'ValueError: ''target_type'' is not a creatable invite target type.'
- 'TypeError: The `overwrite` parameter was invalid or the target type was not Role
  or Member.'
- 'ValueError: The `overwrite` parameter and `positions` parameters were both unset.'
- 'Forbidden: You do not have the permissions required to access this resource.'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Verify token validity'
- '403 Forbidden: Ensure proper permissions are granted'
- '401 Unauthorized: Invalid token provided.'
- '404 Not Found: Check if the webhook ID and token are correct.'
- 'HTTPException: Operation failed.'
- '404 NotFound: The channel was not found.'
- '500 InternalServerError: An error occurred on the server.'
- 'FORBIDDEN: You do not have permissions to create a thread.'
- 'VALUE_ERROR: The `files` or `embeds` list is not of the appropriate size.'
- 'FORBIDDEN: You do not have permissions to get channel message history.'
- 'HTTPException: The API request failed.'
- '401 Unauthorized: Invalid or missing authentication credentials.'
- '403 Forbidden: The requested operation is not allowed.'
- 'HTTPException: Fetching the entitlements failed.'
- 'HTTPException: Retrieving the EULA failed.'
- 'HTTPException: An error occurred during the API request.'
- 'Forbidden: Not allowed to block this user.'
- 'ValueError: The image format passed in to `icon` is invalid. It must be PNG or
  JPG.'
- 'HTTPException: Retrieving the widget failed.'
- 'NotFound: A user with this ID does not exist.'
- 'HTTPException: Fetching the user failed.'
- 'NotFound: A sticker pack with that ID was not found.'
- 'HTTPException: Retrieving the sticker packs failed.'
- 'ValueError: The guild is not subscribed to.'
- 'NotFound: The specified resource does not exist.'
- 'NotFound: The application does not exist or have a primary SKU.'
- 'HTTPException: Retrieving the store listing failed.'
- 'HTTPException: Signing up for the waitlist failed.'
- 'HTTPException: Looking up the hubs failed.'
- 'HTTPException: Joining the hub or requesting the verification code failed.'
- 'HTTPException: You are not in the pomelo rollout.'
- 'TypeError: Not an audio source.'
- 'ClientException: The audio source is opus encoded.'
- 'ValueError: The length of embeds was invalid or there was no token associated with
  this webhook.'
- 'asyncio.TimeoutError: Could not connect to the voice channel in time'
- 'ClientException: You are already connected to a voice channel'
- 'OpusNotLoaded: The opus library has not been loaded'
- 'Forbidden: You do not have the permissions required.'
- 'HTTPException: Fetching the SKUs failed.'
- 'HTTPException: Creating the SKU failed.'
- 'HTTPException: Fetching the gift batches failed.'
- 'HTTPException: Creating the gift batch failed.'
- 'HTTPException: Fetching the manifest labels failed.'
- 'HTTPException: Fetching the discoverability failed.'
- '404 Not Found: The requested resource could not be found.'
- '400 Bad Request: The request was invalid.'
- 'HTTPException: The gift failed to redeem.'
- 'NotFound: The owned gift was not found.'
- 'Forbidden: You do not have permissions to download the batch.'
- 'Forbidden: You do not have permissions to leave the team'
- 'HTTPException: Leaving the team failed'
- 'Forbidden: You do not have permissions to delete the team'
- 'HTTPException: Deleting the team failed'
- 'HTTPException: Retrieving your relationships failed.'
- 'HTTPException: Retrieving the applications failed.'
- 'HTTPException: Failed to create the group direct message.'
- 'Forbidden: You do not have permissions'
- 'HTTPException: Creating the role failed'
- 'TypeError: An invalid keyword argument was given'
- '403 Forbidden: Insufficient permissions.'
- '404 NotFound: The resource does not exist.'
- 'HTTPException: An error occurred while making the API request.'
- 'Forbidden: You do not have permission to edit or delete this rule'
- 'HTTPException: Editing or deleting the rule failed'
- 'HTTPException: Retrieving the premium subscription plans failed.'
- 'HTTPException: Retrieving the subscription plans failed.'
- 'HTTPException: Retrieving the live build IDs failed.'
- 'HTTPException: Retrieving the price tiers failed.'
- 'HTTPException: Retrieving the premium usage failed.'
- 'HTTPException: Retrieving the checkout recovery eligibility failed.'
- 'HTTPException: Joining the active developer program failed.'
- 'HTTPException: Leaving the active developer program failed.'
- 'HTTPException: Reporting the unverified application failed.'
- 'HTTPException: Unacking the channel failed.'
- 'HTTPException: Request failed due to server error'
- 'Forbidden: You are not allowed to edit this application’s configuration.'
- 'HTTPException: Editing the configuration failed.'
- 'HTTPException: General error when making a request to the Discord API.'
- 'Forbidden: Insufficient permissions to perform the action.'
- 'TypeError: Incorrect number of parameters passed.'
- 'NotFound: The message was deleted already'
- 'HTTPException: Unacking failed.'
- 'Forbidden: You do not have the proper permissions.'
- 'NotFound: Specified member or emoji was not found.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'HTTPException: Failed to retrieve resource'
- 'Forbidden: Access to the resource is denied'
- 'Forbidden: You do not have the proper permissions to send the message'
- '404 Not Found: Resource not found'
- 'TypeError: gift_style was passed but gift was not True.'
- 'HTTPException: Purchasing the subscription plan failed.'
- 'HTTPException: Fetching the branches failed.'
- 'HTTPException: Retrieving information failed'
- 'Forbidden: You do not have permissions to access this resource'
- 'HTTPException: Using the invite failed'
- 'Forbidden: You do not have permissions to revoke invites'
- 'NotFound: The invite is invalid or expired'
- 'Forbidden: You do not have `manage_guild`.'
- '404 Not Found: The specified resource could not be found.'
- 'FORBIDDEN: You do not have permission to edit the integration.'
- 'HTTPException: Retrieving the requested data failed.'
- 'Forbidden: You do not have access to the requested resource.'
- 'HTTPException: Indicates an issue with the requested operation.'
- '404 Not Found: Channel does not exist.'
- '403 Forbidden: You do not have permission to access this channel.'
- 'NotFound: The channel was not found.'
- 'FORBIDDEN: You do not have permissions to perform this action.'
- 'HTTPException: General error'
- 'NotFound: The specified resource was not found'
- 'Forbidden: Tried to suppress a message without permissions.'
- '401 Unauthorized: Check your OAuth token and permissions.'
- '403 Forbidden: Ensure that the bot has the necessary permissions.'
- '401 Unauthorized: Check OAuth token and permissions'
- '404 Not Found: Resource does not exist'
- 'NotFound: A user with this ID does not exist. You do not have a mutual with this
  user and the user is not a bot.'
- 'InvalidData: An unknown channel type was received from Discord.'
- 'HTTPException: Retrieving the channel failed.'
- 'NotFound: Invalid Channel ID.'
- 'Forbidden: You do not have permission to fetch this channel.'
- 'HTTPException: Retrieving the webhook failed.'
- 'NotFound: Invalid webhook ID.'
- 'Forbidden: You do not have permission to fetch this webhook.'
- 'HTTPException: Retrieving the sticker failed.'
- 'NotFound: Invalid sticker ID.'
- 'HTTPException: Creating the connection failed.'
- 'HTTPException: Retrieving your private channels failed.'
- 'HTTPException: Retrieving your settings failed.'
- 'HTTPException: Getting the email settings failed.'
- 'HTTPException: Retrieving the tracking settings failed.'
- '404 Not Found: The requested resource was not found'
- 'HTTPException: The request to the API failed.'
- '400 Bad Request: Check your parameters'
- '404 Not Found: Verify the endpoint URL'
- 'TypeError: The type passed to the `default_notifications`, `verification_level`,
  `explicit_content_filter`, `system_channel_flags`, or `mfa_level` parameter was
  of the incorrect type.'
- '403 Forbidden: Insufficient permissions to access the resource'
- '404 Not Found: The specified guild or resource does not exist'
- '429 Too Many Requests: Rate limit exceeded, please try again later'
- Editing your profile failed.
- Username was not passed when migrating to pomelo.
- Discriminator was passed when migrated to pomelo.
- Password was not passed when it was required.
- house field was not a HypeSquadHouse.
- date_of_birth field was not a datetime.datetime.
- accent_colou(u)r parameter was not a Colour.
- 'HTTPException: Failed to fetch commands.'
- 'Forbidden: Insufficient permissions to access commands.'
- '403 Forbidden: Check bot permissions'
- '404 Not Found: Member not found'
- '400 Bad Request: Check request parameters and payload.'
- '401 Unauthorized: Verify token and permissions.'
- '404 Not Found: Ensure the endpoint is correct.'
- 'HTTPException: The request has failed.'
- 'ValueError: The new `position` is less than 0 or greater than the number of channels.'
- Forbidden – You do not have permissions to edit channel specific permissions.
- HTTPException – Editing channel specific permissions failed.
- NotFound – The role or member being edited is not part of the guild.
- TypeError – The overwrite parameter was invalid or the target type was not Role
  or Member.
- ValueError – The overwrite parameter and positions parameters were both unset.
- 'Forbidden: You do not have permissions to upload files.'
- 'Forbidden: You don’t have permissions to access the entry.'
- 'NotFound: The requested resource could not be found.'
- 'HTTPException: An error occurred during the operation.'
- 'HTTPException: Editing the welcome screen failed.'
- 'Forbidden: You cannot move the role there, or lack permissions to do so.'
- 'HTTPException: Moving the role failed.'
- 'ValueError: An invalid role was passed.'
- 'HTTPException: Could not connect to the voice channel in time.'
- 'NotFound: The specified user or message was not found.'
- 'NotFound: You do not have a trial offer.'
- 'HTTPException: Retrieving the trial offer failed.'
- 'HTTPException: Retrieving the pricing promotion failed.'
- 'HTTPException: General error occurred.'
- 'HTTPException: Editing or deleting the message failed.'
- 'Forbidden: You do not have proper permissions.'
- 'HTTPException: General error during API call'
- 'HTTPException: General error occurred while processing the request.'
- '401 Unauthorized: Invalid client credentials'
- '404 Not Found: Application not found'
- 'HTTPException: Creating the branch failed.'
- 'HTTPException: Fetching the embedded activity config failed.'
- 'Forbidden: You do not have permissions to fetch SKUs.'
- 'Forbidden: You do not have permissions to create SKUs.'
- 'Forbidden: You do not have permissions to create a gift batch.'
- 'Forbidden: You do not have permissions to fetch the embedded activity config.'
- '500 Internal Server Error: An unexpected error occurred.'
- 'FORBIDDEN: You do not have permissions to edit the store listing.'
- 'TypeError: Invalid argument provided.'
- 'HTTPException: Deleting the guild failed.'
- 'Forbidden: You do not have permissions to delete the guild.'
- 'ValueError: The image format passed in to icon is invalid.'
- 'HTTPException: An error occurred with the API request.'
- 'HTTPException: Retrieving or editing the welcome screen failed.'
- 'Forbidden: You do not have manage_guild permissions.'
- 'NotFound: The specified resource does not exist'
- 'HTTPException: An error occurred while making the request.'
- 'Forbidden: You cannot move the role there, or lack permissions to do so'
- 'HTTPException: Moving the role failed'
- 'TypeError: A bad mix of arguments were passed'
- 'ValueError: An invalid role was passed'
- 'ValueError: ''joined'' was set to True and ''private'' was set to False. You cannot
  retrieve public archived threads that you have joined.'
- 'HTTPException: Creating the invite failed.'
- 'HTTPException: Retrieving the requested resource failed.'
- 'TypeError: Provided both ''before'' and ''after'' when ''most_relevant'' is set.'
- 'HTTPException: The request to search messages failed'
- 'TypeError: Provided both before and after when most_relevant is set'
- 'ValueError: Could not resolve the channel’s guild ID. Did not provide both application_command_id
  and application_command_name'
- 'HTTPException: Operation failed due to an HTTP error.'
- 'NotFound: The specified message or channel was not found.'
- 'FORBIDDEN: You do not have proper permissions'
- 'NOT_FOUND: The channel was not found or was already deleted'
- 'HTTP_EXCEPTION: Channel operation failed'
- '400 Bad Request: Invalid request parameters'
- '401 Unauthorized: Invalid token provided'
- '403 Forbidden: Insufficient permissions'
- 'ValueError: Could not resolve the channel’s guild ID. Did not provide both application_command_id
  and application_command_name.'
- 'HTTPException: Getting the commands failed'
- 'Forbidden: You do not have permissions to get the commands'
- '404 Not Found: The requested resource could not be found'
- 'Forbidden: You do not have access to this resource.'
- 'HTTPException: Retrieving the authorized applications failed.'
- 'HTTPException: Retrieving the giftable entitlements failed.'
- 'NotFound: The gift does not exist.'
- 'NotFound: The SKU does not exist.'
- 'NotFound: The listing does not exist.'
- 'NotFound: The listing does not exist or is not public.'
- 'FORBIDDEN: You do not have permissions to edit this application.'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Ensure you have the correct authentication.'
- '404 Not Found: Verify the endpoint path.'
- '403 Forbidden: You do not have the required permissions.'
- 'HTTPException: Retrieving the scheduled events failed.'
- You are not in the pomelo rollout.
- accent_colou(r) parameter was not a Colour.
- 'HTTPException: A general error occurred while processing the request.'
- 'FORBIDDEN: You are not allowed to manage this application.'
- 'NOT_FOUND: The resource does not exist.'
- 'HTTP_EXCEPTION: Request failed due to an HTTP error.'
- '[**Forbidden**](#discord.Forbidden "discord.Forbidden") – You do not have permissions
  to get archived threads.'
- '[**HTTPException**](#discord.HTTPException "discord.HTTPException") – The request
  to get the archived threads failed.'
- '[**ValueError**](https://docs.python.org/3/library/exceptions.html#ValueError "(in
  Python v3.13)") – `joined` was set to `True` and `private` was set to `False`. You
  cannot retrieve public archived threads that you have joined.'
- '401 Unauthorized: Invalid token or insufficient permissions'
- 'ValueError: The image format passed in to `icon` is invalid.'
- '403 Forbidden: You do not have permissions to get the entries.'
- 'Forbidden: You do not have ''manage_guild'' permission.'
- '403 Forbidden: You do not have permission to edit the integration.'
- '403 Forbidden: You do not have permissions to access this resource'
- 'HTTPException: The request failed due to an error.'
- 'HTTPException: Unblocking the user failed'
- 'Forbidden: Not allowed to unblock this user'
- '401 Unauthorized: Check your authorization credentials.'
- 'HTTPException: Authorizing the connection failed.'
- 'HTTPException: Retrieving the cooldown failed.'
- 'HTTPException: Retrieving the library failed.'
- 'HTTPException: Retrieving the gift failed.'
- 'Forbidden: You do not have access to the SKU.'
- 'HTTPException: Retrieving the SKU failed.'
- 'Forbidden: You do not have access to the listing.'
- 'HTTPException: Retrieving the listing failed.'
- 'HTTPException: Retrieving the listings failed.'
- 'HTTPException: Editing the group failed.'
- 'HTTPException: Leaving the group failed.'
- 'HTTPException: The request to the endpoint failed.'
- '401 Unauthorized: Check your access token'
- '404 Not Found: Check the endpoint'
- 'ValueError: The length of embeds was invalid.'
- 'HTTPException: An error occurred while making the request to the API.'
- 'TypeError: Incorrect parameters provided.'
- 'ValueError: Missing required fields.'
- '401 Unauthorized: Invalid or missing token.'
- '403 Forbidden: Insufficient permissions for the requested action.'
- '500 HTTPException: Editing the application failed.'
- 'FORBIDDEN: You do not have permissions to unpin the message.'
- 'NOTFOUND: The message or channel was not found or deleted.'
- 'HTTPEXCEPTION: Unpinning the message failed.'
- '404 Not Found: The specified channel or guild does not exist.'
- 'TypeError: You specified both file and files, or the reference object is not a
  valid type.'
- '401 Unauthorized: Invalid access token'
- '403 Forbidden: Insufficient permission'
- 'FORBIDDEN: You do not have permissions for this action'
- 'HTTP_EXCEPTION: An error occurred while processing the request'
- '403 Forbidden: You do not have permissions to get channel message history.'
- 'Forbidden: You do not have the proper permissions to create this channel'
- 'TypeError: The permission overwrite information is not in proper form'
- 'FORBIDDEN: You are not allowed to edit this application’s configuration.'
- 'HTTP_EXCEPTION: An error occurred while processing your request'
- 'Forbidden: You do not have permission to view the automod rule.'
- 'Forbidden: You do not have permissions to edit the subscription.'
- 'HTTPException: Editing the subscription failed.'
- '403 Forbidden: You do not have permission to edit or delete this rule.'
- 'TypeError: Both query and command_ids are passed'
- 'ValueError: The limit was not greater than or equal to 0'
- 'HTTPException: The request to get the commands failed'
- 'TypeError: The type passed to the parameter was of the incorrect type.'
- '403 Forbidden: You are not allowed to create stickers.'
- '403 Forbidden: You are not allowed to create scheduled events.'
- '403 Forbidden: You are not allowed to create emojis.'
- '403 Forbidden: You are not allowed to create roles.'
- 'HTTPException: The action failed.'
- 'FORBIDDEN: You do not have permissions to access this member.'
- 'Forbidden: You do not have permission to access this channel.'
- 'HTTPException: General error for API requests.'
- '404 Not Found: The specified channel does not exist.'
- 'InvalidData: Didn’t receive a response from Discord.'
- 'NotFound: The originating message was not found.'
- 'HTTPException: Interaction processing failed.'
- '404 Not Found: The specified resource was not found'
- 'Forbidden: Tried to edit a message that isn’t yours.'
- '401 Unauthorized: Check your OAuth token'
- '403 Forbidden: You do not have permission to access this resource'
- '404 Not Found: The requested resource does not exist'
- 'FORBIDDEN: You do not have permissions to upload assets.'
- '403 Forbidden: Not allowed to perform this action.'
- '404 Not Found: The specified resource does not exist.'
- 'Forbidden: You do not have permissions to edit or delete the scheduled event.'
- 'HTTPException: Editing or deleting the scheduled event failed.'
- 'FORBIDDEN: You do not have permission to perform this action'
- 'Forbidden: Insufficient permissions.'
- 'ValueError: `joined` was set to `True` and `private` was set to `False`.'
- 'Forbidden: You do not have permissions to create this channel.'
- '403 Forbidden: Insufficient permissions for the requested operation.'
- 'Forbidden: You don’t have permissions to get the entries.'
- 'ValueError: Invalid parameters provided.'
- 'HTTPException: Indicates a failure in the request to the Discord API.'
- 'NotFound: The specified user or reaction’s message was not found.'
- 'TypeError: Invalid parameters provided.'
- 'ValueError: Invalid command parameters.'
- 'HTTPException: Retrieving data failed.'
- '400 Bad Request: Invalid request parameters or request body'
- '401 Unauthorized: Invalid or expired token'
- '404 Not Found: Resource could not be found'
- 'HTTPException: Indicates an error occurred during the request.'
- 'Forbidden: You do not have permissions for this action.'
- '403 Forbidden: You do not have the proper permissions.'
- '403 Forbidden: Insufficient permissions to perform the action.'
- '404 NotFound: The specified channel or guild does not exist.'
- 'Forbidden: Not allowed to remove this user as a friend.'
- NotFound – The specified message was not found.
- Forbidden – You do not have the permissions required to get a message.
- HTTPException – Retrieving the message failed.
- HTTPException – Fetching the mutual friends failed.
- HTTPException – Fetching the note failed.
- '400 Bad Request: Invalid request parameters.'
- '401 Unauthorized: Invalid or expired token.'
- '404 Not Found: Resource does not exist.'
- '401 Unauthorized: Check your token or permissions'
- '404 Not Found: Check the application ID or endpoint'
- '500 Internal Server Error: Retry the request'
- '400 Bad Request: Invalid request parameters or missing required fields'
- '401 Unauthorized: Invalid token or token expired'
- '404 Not Found: Application ID does not exist'
- 'HTTPException: Operation failed'
- '401 Unauthorized: Invalid token or missing credentials.'
- 'HTTPException: Indicates a general HTTP error occurred.'
- 'HTTPException: Request failed due to permission issues.'
- 'NotFound: The specified resource could not be found.'
- 'Forbidden: You do not have [`manage_guild`](#discord.Permissions.manage_guild).'
- 'HTTPException: An error occurred processing the request'
- 'FORBIDDEN: You do not have permissions to edit the scheduled event.'
- 'HTTPException: An error occurred while processing your request.'
- '404 Not Found: The specified member does not exist in the guild.'
- 'ValueError: joined was set to True and private was set to False. You cannot retrieve
  public archived threads that you have joined.'
- 'HTTPException: Fetching mutual friends failed.'
- 'NOT_FOUND: The role or member being edited is not part of the guild.'
- 'Forbidden: You do not have permissions to edit the stage instance.'
- 'HTTPException: Editing a stage instance failed.'
- 'HTTPException: An error occurred'
- 'NotFound: The resource was not found'
- 'HTTPException: Request failed due to an error.'
- 'Forbidden: You do not have permissions to access this attachment'
- 'HTTPException: Retrieving the country code failed.'
- 'HTTPException: Retrieving the location information failed.'
- 'HTTPException: Retrieving the preferred voice regions failed.'
- 'HTTPException: Retrieving your connections failed.'
- 'ValueError: The invite is not a valid Discord invite, e.g. is not a URL or does
  not contain alphanumeric characters.'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Ensure valid token'
- '404 Not Found: Verify endpoint path'
- 'Forbidden: Edited a message that is not yours'
- 'ValueError: The length of embeds was invalid or there was no token associated with
  this webhook'
- 'Forbidden: You do not have the permissions required to fetch mutual friends.'
- '401 Unauthorized: Check OAuth token validity'
- '403 Forbidden: Verify if permissions are granted'
- '403 Forbidden: Check permissions for the requested action'
- '429 Too Many Requests: Rate limit exceeded, please slow down'
- 'TypeError: An integer was not passed for days.'
- 'Forbidden: You do not have permissions to prune members.'
- 'HTTPException: An error occurred while fetching or editing welcome screen.'
- 'HTTPException: Fetching the applications failed'
- 'HTTPException: Fetching the premium guild subscriptions failed'
- 'HTTPException: Fetching the price tiers failed'
- 'HTTPException: Retrieving the entitlements failed'
- 'Forbidden: You do not have permission to delete the integration.'
- 'HTTPException: An error occurred while processing your request'
- 'HTTPException: Action failed.'
- 'HTTPException: A general error occurred that is not categorized.'
- 'FORBIDDEN: You do not have permission to access this resource.'
- 'HTTP_EXCEPTION: An error occurred while processing the request.'
- 'HTTPException: Request to search messages failed.'
- 'HTTPException: The request to get the channel failed.'
- 'Forbidden: You do not have permissions to access this channel.'
- 'Forbidden: You do not have the permissions to create a thread.'
- 'TypeError: The reference object is not valid.'
- 'Forbidden: Permission denied for the action.'
- 'FORBIDDEN: You do not have the proper permissions to send the message.'
- 'NOTFOUND: You sent a message with the same nonce as one that has been explicitly
  deleted shortly earlier.'
- 'NOT_FOUND: You sent a message with the same nonce as one that has been explicitly
  deleted shortly earlier.'
- '[**Forbidden**](#discord.Forbidden "discord.Forbidden") – You do not have permissions
  to remove these tags.'
- '[**HTTPException**](#discord.HTTPException "discord.HTTPException") – Removing
  tags failed.'
- '[**Forbidden**](#discord.Forbidden "discord.Forbidden") – You do not have permissions
  to join the thread.'
- '[**HTTPException**](#discord.HTTPException "discord.HTTPException") – Joining the
  thread failed.'
- '[**HTTPException**](#discord.HTTPException "discord.HTTPException") – Leaving the
  thread failed.'
- '[**Forbidden**](#discord.Forbidden "discord.Forbidden") – You do not have permissions
  to add the user to the thread.'
- '[**HTTPException**](#discord.HTTPException "discord.HTTPException") – Adding the
  user to the thread failed.'
- '[**Forbidden**](#discord.Forbidden "discord.Forbidden") – You do not have permissions
  to remove the user from the thread.'
- '[**HTTPException**](#discord.HTTPException "discord.HTTPException") – Removing
  the user from the thread failed.'
- '[**InvalidData**](#discord.InvalidData "discord.InvalidData") – Discord didn’t
  respond with the members.'
- '[**Forbidden**](#discord.Forbidden "discord.Forbidden") – You do not have permissions
  to get channel message history.'
- '[**HTTPException**](#discord.HTTPException "discord.HTTPException") – The request
  to get message history failed.'
- '[**Forbidden**](#discord.Forbidden "discord.Forbidden") – You do not have the permission
  to retrieve pinned messages.'
- '[**HTTPException**](#discord.HTTPException "discord.HTTPException") – Retrieving
  the pinned messages failed.'
- '[**NotFound**](#discord.NotFound "discord.NotFound") – The specified message was
  not found.'
- '[**Forbidden**](#discord.Forbidden "discord.Forbidden") – You do not have the permissions
  required to get a message.'
- '[**HTTPException**](#discord.HTTPException "discord.HTTPException") – Retrieving
  the message failed.'
- '400 Bad Request: Check the request format and parameters.'
- '401 Unauthorized: Verify the access token and its permissions.'
- '429 Too Many Requests: Rate limit exceeded, back off and retry.'
- 'HTTPException: Purchasing the subscription plan failed'
- 'TypeError: gift_style was passed but gift was not True'
- 'HTTPException: Retrieving the scheduled event failed.'
- 'HTTPException: Fetching data failed.'
- '403 Forbidden: Insufficient permissions for the requested action'
- 'FORBIDDEN: You do not have the permission to retrieve pinned messages.'
- 'ValueError: ''joined'' was set to ''True'' and ''private'' was set to ''False''.'
- 'NotFound: The requested sticker could not be found.'
- 'NotFound: Specified resource not found.'
- '404 Not Found: Check if the user ID and guild ID are correct.'
- '403 Forbidden: Ensure you have permission to access this resource.'
- 'TypeError: Provided both ''before'' and ''after'' when ''most_relevant'' is set'
- 'ValueError: Could not resolve the channel’s guild ID. Did not provide both ''application_command_id''
  and ''application_command_name'''
- 'NotFound: You sent a message with the same nonce as one that has been explicitly
  deleted shortly earlier'
- '404 NotFound: The message was not found.'
- '500 HTTPException: An unexpected error occurred.'
- 'Forbidden: You do not have permissions to add these tags.'
- 'HTTPException: Adding tags failed.'
- '401 Unauthorized: Verify the OAuth token and scopes'
- '401 Unauthorized: Invalid access token.'
- '403 Forbidden: Ensure the bot has permission to access the channel.'
- '404 Not Found: Check if the channel ID is correct.'
- 'Forbidden: You do not have permission.'
- '401 Unauthorized: Check client credentials and token'
- '403 Forbidden: Check permissions for the requested resource'
- 'HTTPException: An error occurred with the API.'
- 'NotFound: The resource does not exist.'
- 'HTTPException: Fetching the members failed.'
- 'Forbidden: You do not have permissions to add these members.'
- 'Forbidden: You do not have permission to sync the integration.'
- 'HTTPException: Syncing the integration failed.'
- 'Forbidden: You do not have permission to disable the integration.'
- 'HTTPException: Disabling the integration failed.'
- 'Forbidden: You do not have permission to enable the integration.'
- 'HTTPException: Enabling the integration failed.'
- '[**Forbidden**](#discord.Forbidden "discord.Forbidden") – You do not have permission
  to edit this rule.'
- '[**HTTPException**](#discord.HTTPException "discord.HTTPException") – Editing the
  rule failed.'
- '[**Forbidden**](#discord.Forbidden "discord.Forbidden") – You do not have permissions
  to delete the rule.'
- '[**HTTPException**](#discord.HTTPException "discord.HTTPException") – Deleting
  the rule failed.'
- 'HTTPException: General error related to API calls'
- 'Forbidden: Insufficient permissions to perform this action'
- 'NotFound: The specified channel was not found'
- 'FORBIDDEN: You do not have permissions to access this resource.'
- 'Forbidden: Insufficient permissions to perform this action.'
- 'Forbidden: Insufficient permissions for the operation.'
- 'NotFound: Specified resource was not found.'
- 'FORBIDDEN: You do not have the proper permissions'
- 'HTTP_EXCEPTION: Operation failed'
- 'Forbidden: Access to the resource is denied.'
- 'HTTPException: An HTTP error occurred during the request.'
- 'Forbidden: Not allowed to perform the action.'
- 'Forbidden: You do not have the required permissions to perform this action.'
- 'HTTPException: Signing up for the waitlist failed'
- 'HTTPException: Looking up the hubs failed'
- 'HTTPException: Joining the hub or requesting the verification code failed'
- 'HTTPException: You are not in the pomelo rollout'
- 'HTTPException: Retrieving the recent avatars failed'
- '403 Forbidden: Insufficient permissions to access this resource'
- 'Forbidden: You do not have proper permissions'
- 'NotFound: The channel was not found or was already deleted'
- 'HTTPException: Deleting the channel failed'
- '401 Unauthorized: Check your credentials or OAuth scopes'
- 'NotFound: The requested sticker or emoji could not be found.'
- '403 Forbidden: Check application permissions'
- '404 NotFound: The specified resource was not found.'
- 'Forbidden: You are not allowed to edit stickers.'
- 'HTTPException: An error occurred editing the sticker.'
- 'TypeError: If the permission overwrite information is not in proper form.'
- 'Forbidden: You do not have permission to edit the scheduled event.'
- 'HTTPException: An error occurred while retrieving the data.'
- 'ClientException: Already connected to a voice channel.'
- 'Forbidden: You do not have permissions to do the actions required.'
- 'TypeError: The `reference` object is not a Message, MessageReference or PartialMessage.'
- 'HTTPException: Accepting the message request failed.'
- 'HTTPException: Editing the welcome screen failed'
- 'Forbidden: You don’t have permissions to edit the welcome screen'
- 'Forbidden: You do not have permissions to edit this entry.'
- 'HTTPException: Editing the entry failed.'
- 'HTTPException: An API call failed.'
- 'InvalidData: Didn’t receive a response from Discord'
- 'NotFound: The originating message was not found'
- 'HTTPException: Clicking the button failed'
- '401 Unauthorized: Check your token and permissions'
- '404 Not Found: Verify the endpoint and parameters'
- '401 Unauthorized: Check token validity'
- '403 Forbidden: Missing required permissions.'
- '404 Not Found: Endpoint does not exist.'
- 'ClientException: The subprocess failed to be created.'
- '401 Unauthorized: Invalid or missing token'
- 'HTTPException: Editing your profile failed'
- 'ValueError: Username was not passed when migrating to pomelo'
- '403 Forbidden: Insufficient permissions to access this resource.'
- 'HTTPException: A general error occurred.'
- '401 Unauthorized: Invalid client_id or client_secret'
- '400 Bad Request: Check your request parameters'
- '404 Not Found: Verify the endpoint or resource ID'
- 'HTTPException: Fetching the welcome screen failed.'
- 'HTTPException: An error occurred processing the request.'
- '403 Forbidden: You do not have permissions to access this member.'
- 'HTTPException: An error occurred while processing the message.'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Ensure authentication.'
- '404 Not Found: Verify endpoint path.'
- '429: RateLimited'
- '403: Forbidden'
- '404: NotFound'
- '500: DiscordServerError'
- '401 Unauthorized: Recheck OAuth token and permissions'
- '404 Not Found: Ensure the resource exists and the URL is correct'
- '403 Forbidden: Missing permissions.'
- '401 Unauthorized: Check your token or scopes'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Webhook
  - WebhookType
  - Client
  - ApplicationBot
  - User
  - Team
  - OAuth2Token
  - OAuth2Authorization
  - UserSettings
  - LegacyUserSettings
  - OAuth2
  - Application
  - Friend
  - manage_emojis_and_stickers
  - manage_events
  - manage_roles
  - Permissions
  - Message
  - Thread
  - Oauth2Token
  - Oauth2Authorization
  - Forbidden
  - HTTPException
  - Guild
  - ApplicationTester
  - SKU
  - AudioSource
  - AutoModRule
  - AutoModAction
  - GuildChannel
  - PrivateChannel
  - Member
  - DirectoryEntry
  - PaymentSource
  - SKUPrice
  - SubscriptionPlan
  - TeamMember
  - ApplicationBranch
  - ApplicationBuild
  - Manifest
  - ApplicationAsset
  - Invite
  - PartialApplication
  - manage_channels
  - manage_messages
  - manage_webhooks
  - create_public_threads
  - create_private_threads
  - read_message_history
  - AutoModRuleEventType
  - AutoModTrigger
  - AutoModRuleAction
  - OAuthToken
  - TextChannel
  - send_messages
  - ApplicationProfile
  - discord.OAuth2Authorization
  - discord.OAuth2Token
  - Bot
  - oauth2
  - Command
  - Cog
client:
  base_url: https://discord.com/api
  auth:
    type: oauth2
source_metadata: null
