resources:
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params: {}
- name: project_members
  endpoint:
    path: /v1/projects/{projectId}/members
    method: GET
    data_selector: data
    params: {}
- name: webhooks
  endpoint:
    path: /v1/projects/{projectId}/webhooks
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: data
    params: {}
- name: project_members
  endpoint:
    path: /v1/projects/{projectId}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /v1/projects/{projectId}/members/add
    method: POST
    data_selector: data
    params: {}
- name: remove_member
  endpoint:
    path: /v1/projects/{projectId}/members/remove
    method: POST
    data_selector: data
    params: {}
- name: sd_jwt_vc_template
  endpoint:
    path: /v1/projects/{projectId}/templates/credentials/sd-jwt-vc
    method: POST
    data_selector: template
    params: {}
- name: mdoc_template
  endpoint:
    path: /v1/projects/{projectId}/templates/credentials/mdoc
    method: POST
    data_selector: template
    params: {}
- name: anoncreds_template
  endpoint:
    path: /v1/projects/{projectId}/templates/credentials/anoncreds
    method: POST
    data_selector: template
    params: {}
- name: sd_jwt_vc_template
  endpoint:
    path: /v1/projects/{projectId}/templates/credentials/sd-jwt-vc
    method: POST
- name: mdoc_template
  endpoint:
    path: /v1/projects/{projectId}/templates/credentials/mdoc
    method: POST
- name: anoncreds_template
  endpoint:
    path: /v1/projects/{projectId}/templates/credentials/anoncreds
    method: POST
- name: openid4vc_issuance
  endpoint:
    path: /v1/projects/{projectId}/openid4vc/issuance/offer
    method: POST
    data_selector: credentials
    params: {}
- name: didcomm_issuance
  endpoint:
    path: /v1/projects/{projectId}/didcomm/issuance/offer
    method: POST
    data_selector: didcommIssuance
    params: {}
- name: direct_sd_jwt_vc_issuance
  endpoint:
    path: /v1/projects/{projectId}/issuance/sd-jwt-vc
    method: POST
    data_selector: credential
    params: {}
- name: retrieve_openid4vc_sessions
  endpoint:
    path: /v1/projects/{projectId}/openid4vc/issuance
    method: GET
    data_selector: sessions
    params: {}
- name: retrieve_didcomm_sessions
  endpoint:
    path: /v1/projects/{projectId}/didcomm/issuance
    method: GET
    data_selector: sessions
    params: {}
- name: retrieve_issued_credentials
  endpoint:
    path: /v1/projects/{projectId}/issuance
    method: GET
    data_selector: credentials
    params: {}
- name: openid4vc_issuance_offer
  endpoint:
    path: /v1/projects/{projectId}/openid4vc/issuance/offer
    method: POST
- name: didcomm_issuance_offer
  endpoint:
    path: /v1/projects/{projectId}/didcomm/issuance/offer
    method: POST
- name: direct_sd_jwt_vc_issuance
  endpoint:
    path: /v1/projects/{projectId}/issuance/sd-jwt-vc
    method: POST
- name: openid4vc_issuance_sessions
  endpoint:
    path: /v1/projects/{projectId}/openid4vc/issuance
    method: GET
- name: didcomm_issuance_sessions
  endpoint:
    path: /v1/projects/{projectId}/didcomm/issuance
    method: GET
- name: issued_credentials
  endpoint:
    path: /v1/projects/{projectId}/issuance
    method: GET
- name: openid4vc_verification
  endpoint:
    path: /v1/projects/{projectId}/openid4vc/verification/request
    method: POST
    data_selector: result
    params: {}
- name: didcomm_verification
  endpoint:
    path: /v1/projects/{projectId}/didcomm/verification/{didcommVerificationId}
    method: GET
    data_selector: result
    params: {}
- name: openid4vc_verification_request
  endpoint:
    path: /v1/projects/{projectId}/openid4vc/verification/request
    method: POST
    data_selector: id
- name: didcomm_verification_request
  endpoint:
    path: /v1/projects/{projectId}/didcomm/verification/{didcommVerificationId}
    method: GET
    data_selector: id
- name: projects
  endpoint:
    path: /v1/projects
    method: POST
- name: project_members
  endpoint:
    path: /v1/projects/{projectId}/members
    method: POST
- name: projects
  endpoint:
    path: /v1/projects
    method: POST
- name: project_members
  endpoint:
    path: /v1/projects/{projectId}/members
    method: POST
- name: webhook_events
  endpoint:
    path: /webhooks
    method: POST
    data_selector: events
- name: invitation_page
  endpoint:
    path: /invitation
    method: GET
    data_selector: invitation
    params: {}
- name: New Verification Response
  endpoint:
    path: /new-verification-response
    method: GET
- name: Create Issuance Offer
  endpoint:
    path: /create-issuance-offer
    method: POST
- name: Create Verification Request
  endpoint:
    path: /create-verification-request
    method: POST
- name: Get Verification Result
  endpoint:
    path: /get-verification-result
    method: GET
- name: New Verification Response
  endpoint:
    path: /new-verification-response
    method: GET
- name: Create Issuance Offer
  endpoint:
    path: /create-issuance-offer
    method: POST
- name: Create Verification Request
  endpoint:
    path: /create-verification-request
    method: POST
- name: Get Verification Result
  endpoint:
    path: /get-verification-result
    method: GET
- name: credentials
  endpoint:
    path: /api/credentials
    method: POST
- name: presentations
  endpoint:
    path: /api/presentations
    method: POST
- name: verifications
  endpoint:
    path: /api/verifications
    method: POST
- name: sd-jwt-vc credential template
  endpoint:
    path: /v1/projects/{projectId}/templates/credentials/sd-jwt-vc
    method: POST
    data_selector: credentialTemplateId
- name: OpenID4VC credential offer
  endpoint:
    path: /v1/projects/{projectId}/openid4vc/issuance/offer
    method: POST
    data_selector: credentialOfferId
- name: sd-jwt-vc credential template
  endpoint:
    path: /v1/projects/{projectId}/templates/credentials/sd-jwt-vc
    method: POST
    data_selector: template
- name: OpenID4VC credential offer
  endpoint:
    path: /v1/projects/{projectId}/openid4vc/issuance/offer
    method: POST
    data_selector: offer
- name: credentials
  endpoint:
    path: /credentials
    method: GET
    data_selector: credentials
    params: {}
- name: credentials
  endpoint:
    path: /credentials
    method: GET
    data_selector: credentials
    params: {}
- name: sample_credential
  endpoint:
    path: /services/data/vXX.X/sobjects/SampleCredential
    method: GET
    data_selector: records
- name: person_identification_data
  endpoint:
    path: /services/data/vXX.X/sobjects/PersonIdentificationData
    method: POST
    data_selector: data
    params: {}
- name: person_identification
  endpoint:
    path: /path/to/endpoint
    method: POST
    data_selector: data
    params: {}
- name: credential_template
  endpoint:
    path: /v1/projects/{projectId}/templates/credentials/mdoc
    method: POST
    data_selector: id
- name: credential_offer
  endpoint:
    path: /v1/projects/{projectId}/openid4vc/issuance/offer
    method: POST
    data_selector: id
- name: credentials
  endpoint:
    path: /credentials
    method: GET
    data_selector: credentials
    params: {}
- name: credential_template
  endpoint:
    path: /v1/projects/{projectId}/templates/credentials/mdoc
    method: POST
    data_selector: id
- name: credential_offer
  endpoint:
    path: /v1/projects/{projectId}/openid4vc/issuance/offer
    method: POST
    data_selector: id
- name: trusted_entity
  endpoint:
    path: /v1/projects/{projectId}/trusted-entities
    method: POST
    data_selector: trusted_entities
    params: {}
- name: presentation_template
  endpoint:
    path: /v1/projects/{projectId}/templates/presentations
    method: POST
    data_selector: presentation_templates
    params: {}
- name: credentials
  endpoint:
    path: /credentials
    method: GET
    data_selector: credentials
- name: presentation_template
  endpoint:
    path: /v1/projects/{projectId}/templates/presentations
    method: POST
- name: trusted_entity
  endpoint:
    path: /v1/projects/{projectId}/trusted-entities
    method: POST
    data_selector: trustedEntities
- name: presentation_template
  endpoint:
    path: /v1/projects/{projectId}/templates/presentations
    method: POST
    data_selector: templates
- name: presentation_template
  endpoint:
    path: /v1/projects/{projectId}/templates/presentations
    method: POST
    data_selector: template
- name: retrieve_presentation_template
  endpoint:
    path: /v1/projects/{projectId}/templates/presentations/{presentationTemplateId}
    method: GET
    data_selector: template
- name: sd-jwt-vc credential template
  endpoint:
    path: /sd-jwt-vc-credential-templates
    method: POST
    data_selector: credentials
- name: presentation template
  endpoint:
    path: /presentation-templates
    method: POST
    data_selector: credentials
- name: verifiable_credentials
  endpoint:
    path: /api/verifiable_credentials
    method: GET
    data_selector: records
    params: {}
- name: digital_wallet
  endpoint:
    path: /api/digital_wallet
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
notes:
- Creating multiple projects is not available in the Free tier.
- The project cannot be deleted yet so be careful with creating projects.
- Paradym is built for developers, with a focus on seamless integration, automation,
  and adherence to the latest identity standards such as eIDAS 2.0, OpenID4VC, and
  DIDComm.
- Authorization to the Paradym API is done using an API key.
- API keys are user-based, they stay consistent over different projects.
- This functionality is not currently supported from the dashboard, but will be coming
  soon.
- Currently supports issuing SD-JWT credentials and verifying SD-JWT and mDOC credentials
  over OpenID4VC, as well as issuance and verification of Anoncreds credentials over
  DIDComm.
- The Paradym API currently supports issuing SD-JWT credentials and verifying SD-JWT
  and mDOC credentials over OpenID4VC.
- Creating multiple projects is not available in the Free tier, and only available
  to the Pro and Custom tiers.
- Adding collaborators to a project is not available in the Free tier, and only available
  to the Pro and Custom tiers.
- GET requests are free
- Any credential transaction goes through an agent
- An agent is automatically created for every project
- Webhook events contain sensitive information.
- You should not use services like Webhook.site for production webhooks.
- Webhook events contain sensitive information, and these services do not verify the
  HMAC of the events.
- Webhooks are subject to a 5 second timeout. If your server does not respond with
  a 200 OK HTTP status code within 5 seconds, the webhook will be considered failed
  and will not be retried.
- To prevent events not sent by Paradym from being sent to your webhook endpoint,
  Paradym employs a security measure using SHA256 HMAC.
- Webhooks are subject to a 5 second timeout. If your server does not respond with
  a `200 OK` HTTP status code within 5 seconds, the webhook will be considered failed
  and will not be retried.
- If you choose not to use the secret, your webhook becomes vulnerable to unauthorized
  events.
- The Paradym Wallet is fully integrated with Paradym, and requires no additional
  setup.
- Configuring custom app linking is not available on the free tier
- By default, Paradym hosts an invitation page on https://paradym.id/invitation
- Paradym hosts an invitation page on https://paradym.id/invitation
- API key is required for accessing the Paradym API
- API key should be configured as an environment variable.
- All protocols and credential templates are subject to change and are mostly for
  demonstration and testing purposes.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Requires setup of connected app in api
- Issuance profiles for mDOCs over OpenID4VC are still in development.
- Creating the initial certificate through the dashboard is recommended.
- Issuance profiles for mDOCs over OpenID4VC are still in development
- Trusted entities can be linked to a specific credential that is requested in a presentation
  template.
- By default, the root certificate has a validity of 5 years.
- Revoking a certificate is an irreversible operation.
- Currently not possible to combine all credential formats in a single presentation
  template.
- A single root certificate could be enough to configure the trusted entities for
  a whole ecosystem.
- Nested attributes can only be configured through the API.
- Nested object attributes are only available for credentials with the SD-JWT VC format.
- Nested array attributes are supported for SD-JWT VC and mDOC credentials.
- The beta application is provided on an ‘as is’ and ‘as available’ basis.
- Uses OAuth2 with refresh token — requires setup of connected app in Paradym
- Some objects may return nulls in deeply nested fields
- Uses OpenID Connect flows for issuing verifiable credentials.
- Supports SD-JWTs for minimal data sharing.
- For a truly interoperable internet, open standards and protocols are essential.
- Paradym supports issuance and verification of AnonCreds credentials.
- You are strongly advised to ensure the safety of important data.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'HMAC is invalid: 401 Unauthorized'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.paradym.id
  auth:
    type: apikey
    location: header
    header_name: x-access-token
source_metadata: null
