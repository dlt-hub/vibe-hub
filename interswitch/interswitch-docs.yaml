resources:
- name: general_integration
  endpoint:
    params:
      client_id: IKIAB23A4E2756605C1ABC33CE3C287E27267F660D61
      secret: secret
      pay_item_id: '9405967'
      merchant_code: MX6072
- name: card_payment_api
  endpoint:
    params:
      client_id: IKIA3B827951EA3EC2E193C51DA1D22988F055FD27DE
      secret: ajkdpGiF6PHVrwK
      merchant_code: MX21696
      pay_item_id: '4177785'
- name: integration_credentials
  endpoint:
    path: /integration/credentials
    method: GET
- name: integration_credentials
  endpoint:
    path: /integration/credentials
    method: GET
    data_selector: credentials
    params: {}
- name: payment_requests
  endpoint:
    path: /collections/w/pay
    method: POST
    data_selector: response
    params: {}
- name: transaction_status
  endpoint:
    path: /collections/api/v1/gettransaction.json
    method: GET
    data_selector: response
    params: {}
- name: inline_checkout
  endpoint:
    path: /inline-checkout
    method: POST
    data_selector: response
    params: {}
- name: web_redirect
  endpoint:
    path: /collections/w/pay
    method: POST
    data_selector: response
    params: {}
- name: inline_checkout
  endpoint:
    path: /inline-checkout
    method: POST
    data_selector: response
    params:
      merchant_code: MX249662
      pay_item_id: Default_Payable_MX249662
      txn_ref: sample_txn_ref_123
      site_redirect_url: https://google.com/
      amount: '100000'
      currency: '976'
      mode: TEST
- name: web_redirect
  endpoint:
    path: /collections/w/pay
    method: POST
    data_selector: response
    params:
      merchant_code: MX249662
      pay_item_id: Default_Payable_MX249662
      site_redirect_url: https://example.com/payment-response
      txn_ref: 12344grtr
      amount: '100000'
      currency: '976'
- name: inline_checkout
  endpoint:
    path: /inline-checkout.js
    method: GET
- name: web_redirect
  endpoint:
    path: /collections/w/pay
    method: POST
- name: mobile_wallet_initialize
  endpoint:
    path: /collections/api/v2/mobile-wallet/initialize
    method: GET
- name: payment_request
  endpoint:
    path: /collections/api/v2/mobile-wallet/initialize
    method: GET
    data_selector: records
    params: {}
- name: purchase
  endpoint:
    path: /api/v3/purchases
    method: POST
    data_selector: transaction details
- name: authenticate_otp
  endpoint:
    path: /api/v3/purchases/otps/auths
    method: POST
    data_selector: authentication response
- name: transaction_status
  endpoint:
    path: /collections/api/v1/gettransaction
    method: GET
    data_selector: transaction details
- name: purchase
  endpoint:
    path: /api/v3/purchases
    method: POST
    data_selector: ''
    params: {}
- name: authenticate_otp
  endpoint:
    path: /api/v3/purchases/otps/auths
    method: POST
    data_selector: ''
    params: {}
- name: transaction_status
  endpoint:
    path: /collections/api/v1/gettransaction
    method: GET
    data_selector: ''
    params: {}
- name: smart-pos-core
  endpoint:
    path: /path/to/smart-pos-core
    method: GET
    data_selector: records
- name: smart-pos-emv-pax
  endpoint:
    path: /path/to/smart-pos-emv-pax
    method: GET
    data_selector: records
- name: smart-pos-emv-kozen
  endpoint:
    path: /path/to/smart-pos-emv-kozen
    method: GET
    data_selector: records
- name: smart-pos-emv-telpo
  endpoint:
    path: /path/to/smart-pos-emv-telpo
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /pay
    method: POST
    data_selector: result
    params: {}
- name: print
  endpoint:
    path: /print
    method: POST
    data_selector: result
    params: {}
- name: initialize
  endpoint:
    path: /reference/initialize
    method: POST
- name: initialize_with_paymentId
  endpoint:
    path: /reference/initialize-with-paymentid
    method: POST
- name: status
  endpoint:
    path: /reference/status
    method: GET
- name: initialize
  endpoint:
    path: /collections/api/v1/opay/initialize
    method: POST
    data_selector: response
    params:
      merchantCode: MX51426
      payableCode: WALLETMX514261638217654204
      amount: 10000
      transactionReference: my-very-own-unique-reference
- name: initialize_opay_transaction
  endpoint:
    path: /collections/api/v1/opay/initialize
    method: POST
    data_selector: response
    params:
      merchantCode: MX51426
      payableCode: WALLETMX514261638217654204
      amount: 10000
      transactionReference: my-very-own-unique-reference
- name: initialize_with_paymentId
  endpoint:
    path: /collections/api/v1/opay/initialize
    method: POST
    data_selector: response
    params: {}
- name: initialize_with_paymentId
  endpoint:
    path: /collections/api/v1/opay/initialize
    method: POST
    data_selector: response
    params:
      merchantCode: MX51426
      payableCode: WALLETMX514261638217654204
      paymentId: 474566589
      transactionReference: my-very-own-unique-reference
- name: status
  endpoint:
    path: /collections/api/v1/opay/status
    method: POST
    data_selector: responseCode
    params:
      transactionReference: reference
- name: status
  endpoint:
    path: /opay/status
    method: POST
    data_selector: responseCode
    params:
      transactionReference: my-very-own-unique-reference
- name: Card Payments API
  endpoint:
    path: /collections/api/v1/pay/cardinalCallBack
    method: POST
    data_selector: transactionRef
- name: 3D Secure Transaction
  endpoint:
    path: /collections/api/v1/pay/cardinalCallBack
    method: POST
    data_selector: transactionRef
    params: {}
- name: Authorize Transaction
  endpoint:
    path: /reference/authorize-transaction-3d-secure
    method: POST
    data_selector: ''
    params: {}
- name: Get 3DS Authentication Status
  endpoint:
    path: /collections/api/v1/payments/cardinalCallBackStatus
    method: GET
    data_selector: ''
    params:
      paymentId: '{payment ID}'
- name: authorize_transaction_3d_secure
  endpoint:
    path: /collections/api/v1/payments/cardinalCallBackStatus
    method: GET
    data_selector: responseCode
    params:
      paymentId: '{payment ID}'
- name: hosted_fields
  endpoint:
    path: /docs/hosted-fields
    method: GET
    data_selector: records
- name: Get USSD Banks
  endpoint:
    path: /ussd-banks
    method: POST
- name: Pay with USSD
  endpoint:
    path: /pay-with-ussd
    method: POST
- name: Pay With Transfer
  endpoint:
    path: /create-transaction
    method: POST
- name: Confirm Transaction Status
  endpoint:
    path: /confirm-transaction-status
    method: POST
- name: Generate QR
  endpoint:
    path: /generate-qr
    method: POST
- name: Get USSD Banks
  endpoint:
    path: /ussd/banks
    method: POST
- name: Pay with USSD
  endpoint:
    path: /pay/ussd
    method: POST
- name: Pay With Transfer
  endpoint:
    path: /create-transaction
    method: POST
- name: Confirm Transaction Status
  endpoint:
    path: /confirm-transaction-status
    method: POST
- name: Generate QR
  endpoint:
    path: /generate-qr
    method: POST
- name: initialize_transaction
  endpoint:
    path: /wallet-pay/initialize
    method: POST
    data_selector: response
    params: {}
- name: status_transaction
  endpoint:
    path: /wallet-pay/status
    method: POST
    data_selector: response
    params: {}
- name: initialize_transaction
  endpoint:
    path: /wallet-pay/initialize
    method: POST
    data_selector: response
    params: {}
- name: transaction_status
  endpoint:
    path: /wallet-pay/status
    method: POST
    data_selector: response
    params: {}
- name: create_bill
  endpoint:
    path: /collections/api/v1/gettransaction.json
    method: GET
    data_selector: records
    params:
      merchantcode: '{merchantcode}'
      transactionreference: '{reference}'
      amount: '{amount}'
- name: single_payment_link
  endpoint:
    path: /payment_links/single
    method: POST
- name: recurring_payment_link
  endpoint:
    path: /payment_links/recurring
    method: POST
- name: create_bill
  endpoint:
    path: /collections/api/v1/createbill
    method: POST
    data_selector: paymentUrl
- name: transaction_status
  endpoint:
    path: /collections/api/v1/gettransaction.json
    method: GET
    data_selector: transactionStatus
- name: webhook_events
  endpoint:
    path: /webhooks
    method: POST
    data_selector: data
- name: create_refund_transaction
  endpoint:
    path: /refunds
    method: POST
    data_selector: refund
    params: {}
- name: create_refund_transaction
  endpoint:
    path: /paymentgateway/api/v1/refunds
    method: POST
    data_selector: ''
    params: {}
- name: recurring_payments_validation
  endpoint:
    path: /api/v2/purchases/validations/recurrents
    method: POST
- name: recurring_payments
  endpoint:
    path: /api/v2/purchases/recurrents
    method: POST
- name: test_cards
  endpoint:
    path: /docs/test-cards
    method: GET
    data_selector: test_cards
    params: {}
- name: Response Codes
  endpoint:
    path: /docs/payment-response-codes
    method: GET
    data_selector: response_codes
- name: Refund API Response Codes
  endpoint:
    path: /docs/refunds
    method: GET
    data_selector: refund_response_codes
- name: tsa_payments
  endpoint:
    path: /collections/w/pay
    method: POST
    data_selector: form
    params: {}
- name: tokenize_card
  endpoint:
    path: /api/v2/purchases/validations/recurrents
    method: POST
- name: make_recurring_payment
  endpoint:
    path: /api/v2/purchases/recurrents
    method: POST
- name: preauth
  endpoint:
    path: /collections/api/v3/purchases
    method: POST
    data_selector: null
    params: {}
- name: capture
  endpoint:
    path: /collections/api/v3/purchases/capture
    method: POST
    data_selector: null
    params: {}
- name: void
  endpoint:
    path: /collections/api/v3/purchases/reverse
    method: POST
    data_selector: null
    params: {}
- name: test_cards
  endpoint:
    path: /docs/test-cards
    method: GET
    data_selector: records
    params: {}
- name: TSA Payment
  endpoint:
    path: /collections/w/pay
    method: POST
    data_selector: form
    params: {}
- name: settlement
  endpoint:
    path: /settlement
    method: GET
    data_selector: settlement_data
- name: preauth
  endpoint:
    path: /collections/api/v3/purchases
    method: POST
- name: capture
  endpoint:
    path: /collections/api/v3/purchases/capture
    method: POST
- name: void
  endpoint:
    path: /collections/api/v3/purchases/reverse
    method: POST
- name: settlement
  endpoint:
    path: /settlement
    method: GET
    data_selector: settlement_data
- name: GetBillers
  endpoint:
    path: /GetBillers
    method: GET
- name: GetBillerCategories
  endpoint:
    path: /GetBillerCategories
    method: GET
- name: GetBillersByCategory
  endpoint:
    path: /GetBillersByCategory
    method: GET
- name: SendBillPaymentAdvice
  endpoint:
    path: /SendBillPaymentAdvice
    method: POST
- name: CustomerValidation
  endpoint:
    path: /CustomerValidation
    method: POST
- name: QueryTransaction
  endpoint:
    path: /QueryTransaction
    method: GET
- name: CreateVoucher
  endpoint:
    path: /CreateVoucher
    method: POST
- name: RedeemVoucher
  endpoint:
    path: /RedeemVoucher
    method: POST
- name: biller
  endpoint:
    path: /services
    method: GET
- name: Utility Bills
  endpoint:
    path: /bills/payment/utility
    method: GET
    data_selector: Billers
- name: Utility Bills
  endpoint:
    path: /services/data/vXX.X/sobjects/UtilityBills
    method: GET
    data_selector: records
- name: GetBillers
  endpoint:
    path: /GetBillers
    method: GET
- name: GetBillerCategories
  endpoint:
    path: /GetBillerCategories
    method: GET
- name: GetBillersByCategory
  endpoint:
    path: /GetBillersByCategory
    method: GET
- name: SendBillPaymentAdvice
  endpoint:
    path: /SendBillPaymentAdvice
    method: POST
- name: CustomerValidation
  endpoint:
    path: /CustomerValidation
    method: POST
- name: QueryTransaction
  endpoint:
    path: /QueryTransaction
    method: GET
- name: CreateVoucher
  endpoint:
    path: /CreateVoucher
    method: POST
- name: RedeemVoucher
  endpoint:
    path: /RedeemVoucher
    method: POST
- name: Bills
  endpoint:
    path: /bills
    method: GET
    data_selector: records
- name: biller
  endpoint:
    path: /biller
    method: GET
    data_selector: Billers
    params: {}
- name: Get Billers
  endpoint:
    path: /services
    method: GET
- name: Get Billers By Category
  endpoint:
    path: /get-billers-by-category-2
    method: GET
- name: Event Tickets
  endpoint:
    path: /EventTickets
    method: GET
    data_selector: Billers
- name: Products and Services
  endpoint:
    path: /ProductsAndServices
    method: GET
    data_selector: Billers
- name: Billers
  endpoint:
    path: /bills/payment
    method: GET
    data_selector: Billers
    params: {}
- name: Products and Services
  endpoint:
    path: /DoPayment.aspx
    method: GET
    data_selector: Billers
    params: {}
- name: Utility Bills
  endpoint:
    path: /bills/payment
    method: GET
    data_selector: records
    params: {}
- name: bills
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: biller
  endpoint:
    path: /biller
    method: GET
    data_selector: Billers
    params: {}
- name: Utility Bills
  endpoint:
    path: /api/bills/utility
    method: GET
    data_selector: Billers
    params: {}
- name: Others
  endpoint:
    path: /api/bills/others
    method: GET
    data_selector: Billers
    params: {}
- name: Donations
  endpoint:
    path: /performInquiry
    method: GET
- name: PayDirectProduct
  endpoint:
    path: /api/paydirect/products
    method: GET
    data_selector: records
    params: {}
- name: Donations
  endpoint:
    path: /donations
    method: GET
- name: PayChoice
  endpoint:
    path: /paychoice
    method: GET
- name: Transport
  endpoint:
    path: /transport
    method: GET
- name: Event Tickets
  endpoint:
    path: /EventTickets
    method: GET
- name: Products and Services
  endpoint:
    path: /ProductsAndServices
    method: GET
- name: Mobile Money
  endpoint:
    path: /api/mobilemoney
    method: GET
    data_selector: Billers
    params: {}
- name: Billers
  endpoint:
    path: /biller
    method: GET
    data_selector: Billers
- name: Cable TV Bills
  endpoint:
    path: /cable-tv-bills
    method: GET
    data_selector: Billers
    params: {}
- name: Microfinance
  endpoint:
    path: /microfinance
    method: GET
    data_selector: Billers
    params: {}
- name: Donations
  endpoint:
    path: /donations
    method: GET
    data_selector: Billers
    params: {}
- name: Teasy Mobile
  endpoint:
    path: /teasymobile
    method: GET
    data_selector: Billers
- name: Tax Payments
  endpoint:
    path: /taxpayments
    method: GET
    data_selector: Billers
- name: Religious Institutions
  endpoint:
    path: /religiousinstitutions
    method: GET
    data_selector: Billers
- name: Quickteller Business
  endpoint:
    path: /quicktellerbusiness
    method: GET
    data_selector: Billers
- name: Transfer Money
  endpoint:
    path: /transfermoney
    method: GET
    data_selector: Billers
- name: Donations
  endpoint:
    path: /api/v1/donations
    method: GET
    data_selector: records
- name: Transfer Money
  endpoint:
    path: /Payment/PaymentDetails
    method: GET
- name: Receive Money
  endpoint:
    path: /ReceiveMoney
    method: GET
- name: Donations
  endpoint:
    path: /donations
    method: GET
- name: PayChoice
  endpoint:
    path: /paychoice
    method: GET
- name: Transport
  endpoint:
    path: /transport
    method: GET
- name: Mobile Money
  endpoint:
    path: /MobileMoney
    method: GET
    data_selector: Billers
    params: {}
- name: PayerCountryCode
  endpoint:
    path: /PayerCountryCode
    method: GET
    data_selector: SelectItems
- name: PayeeAccountType
  endpoint:
    path: /PayeeAccountType
    method: GET
    data_selector: SelectItems
- name: Amount
  endpoint:
    path: /Amount
    method: GET
    data_selector: Amount
- name: ExpectedCurrency
  endpoint:
    path: /ExpectedCurrency
    method: GET
    data_selector: SelectItems
- name: PayeeAccountNumber
  endpoint:
    path: /PayeeAccountNumber
    method: GET
    data_selector: PayeeAccountNumber
- name: PayeeFirstname
  endpoint:
    path: /PayeeFirstname
    method: GET
    data_selector: PayeeFirstname
- name: PayeeSurname
  endpoint:
    path: /PayeeSurname
    method: GET
    data_selector: PayeeSurname
- name: ReceiverPhoneNumber
  endpoint:
    path: /ReceiverPhoneNumber
    method: GET
    data_selector: ReceiverPhoneNumber
- name: TestAnswer
  endpoint:
    path: /TestAnswer
    method: GET
    data_selector: TestAnswer
- name: Teasy Mobile
  endpoint:
    path: /teasymobile
    method: GET
    data_selector: Billers
    params: {}
- name: Tax Payments
  endpoint:
    path: /taxpayments
    method: GET
    data_selector: Billers
    params: {}
- name: Religious Institutions
  endpoint:
    path: /religiousinstitutions
    method: GET
    data_selector: Billers
    params: {}
- name: Quickteller Business
  endpoint:
    path: /quicktellerbusiness
    method: GET
    data_selector: Billers
    params: {}
- name: Transfer Money
  endpoint:
    path: /transfermoney
    method: GET
    data_selector: Billers
    params: {}
- name: biller_categories
  endpoint:
    path: /services/categories
    method: GET
    data_selector: BillerCategories
    params: {}
- name: Transfer Money
  endpoint:
    path: Payment/PaymentDetails
    method: GET
    data_selector: Elements
- name: Receive Money
  endpoint:
    path: Payment/PaymentDetails
    method: GET
    data_selector: Billers
- name: get_biller_payment_items
  endpoint:
    path: /services/options
    method: GET
    data_selector: PaymentItems
    params:
      serviceid: '17589'
- name: customer_validation
  endpoint:
    path: /Transactions/validatecustomers
    method: POST
    data_selector: Customers
- name: bill_payment_advice
  endpoint:
    path: /Transactions
    method: POST
- name: query_transaction
  endpoint:
    path: /Transactions
    method: GET
    params:
      requestRef: requestReferencevalue
- name: PayerCountryCode
  endpoint:
    path: PayerCountryCode
    method: GET
    data_selector: SelectItems
- name: PayeeAccountType
  endpoint:
    path: PayeeAccountType
    method: GET
    data_selector: SelectItems
- name: Amount
  endpoint:
    path: Amount
    method: GET
    data_selector: SelectItems
- name: ExpectedCurrency
  endpoint:
    path: ExpectedCurrency
    method: GET
    data_selector: SelectItems
- name: PayeeAccountNumber
  endpoint:
    path: PayeeAccountNumber
    method: GET
    data_selector: SelectItems
- name: PayeeFirstname
  endpoint:
    path: PayeeFirstname
    method: GET
    data_selector: SelectItems
- name: PayeeSurname
  endpoint:
    path: PayeeSurname
    method: GET
    data_selector: SelectItems
- name: ReceiverPhoneNumber
  endpoint:
    path: ReceiverPhoneNumber
    method: GET
    data_selector: SelectItems
- name: TestAnswer
  endpoint:
    path: TestAnswer
    method: GET
    data_selector: SelectItems
- name: validate_customers
  endpoint:
    path: /Transactions/validatecustomers
    method: POST
    data_selector: Customers
    params: {}
- name: billers_by_category
  endpoint:
    path: /services/categories
    method: GET
    data_selector: BillerCategories
    params: {}
- name: Get Billers
  endpoint:
    path: /services/categories
    method: GET
    data_selector: BillerCategories
- name: Get Billers by Category
  endpoint:
    path: /services
    method: GET
    params:
      categoryId: '4'
- name: Get Biller Payment Items
  endpoint:
    path: /services/options
    method: GET
    params:
      serviceid: '{billerid}'
- name: Send Transaction
  endpoint:
    path: /Transactions
    method: POST
- name: Get Biller Payment Items
  endpoint:
    path: /services/options
    method: GET
    data_selector: PaymentItems
    params:
      serviceid: '17589'
- name: Customer Validation
  endpoint:
    path: /Transactions/validatecustomers
    method: POST
    data_selector: Customers
    params: {}
- name: Bill Payment Advice
  endpoint:
    path: /Transactions
    method: POST
    data_selector: TransactionRef
    params: {}
- name: Query Transaction
  endpoint:
    path: /Transactions
    method: GET
    data_selector: billPayment
    params: {}
- name: validate_customers
  endpoint:
    path: /Transactions/validatecustomers
    method: POST
    data_selector: Customers
    params: {}
- name: Get Billers
  endpoint:
    path: /services/categories
    method: GET
    data_selector: BillerCategories
- name: Get Billers by Category
  endpoint:
    path: /services
    method: GET
    data_selector: billers
    params:
      categoryId: '4'
- name: Get Biller Payment Items
  endpoint:
    path: /services/options
    method: GET
    data_selector: paymentitems
- name: Send Transaction
  endpoint:
    path: /Transactions
    method: POST
    data_selector: transactionRef
- name: create_voucher
  endpoint:
    path: /vouchers/generateVoucher
    method: POST
    data_selector: Response
    params: {}
- name: redeem_voucher
  endpoint:
    path: /vouchers/redeemVoucher
    method: POST
    data_selector: Response
    params: {}
- name: Do Transfer
  endpoint:
    path: /reference/fund-transfer
    method: POST
- name: Query Transaction
  endpoint:
    path: /reference/query-transaction-1
    method: GET
- name: Name Enquiry
  endpoint:
    path: /reference/name-inquiry
    method: POST
- name: Get Bank Code
  endpoint:
    path: /reference/bank-code-copy
    method: GET
- name: create_voucher
  endpoint:
    path: /vouchers/generateVoucher
    method: POST
    data_selector: ResponseCode
    params: {}
- name: redeem_voucher
  endpoint:
    path: /vouchers/redeemVoucher
    method: POST
    data_selector: responseCode
    params: {}
- name: DoAccountNameInquiry
  endpoint:
    path: /transactions/DoAccountNameInquiry
    method: GET
    data_selector: ResponseCode
    params: {}
- name: TransferFunds
  endpoint:
    path: /transactions/TransferFunds
    method: POST
    data_selector: ResponseCode
    params: {}
- name: Do Transfer
  endpoint:
    path: /reference/fund-transfer
    method: POST
- name: Query Transaction
  endpoint:
    path: /reference/query-transaction-1
    method: GET
- name: Name Enquiry
  endpoint:
    path: /reference/name-inquiry
    method: GET
- name: Get Bank Code
  endpoint:
    path: /reference/bank-code-copy
    method: GET
- name: bulk_transfer
  endpoint:
    path: /generic-wallet/api/v1/transaction/transfer/bulk
    method: POST
    data_selector: modelList
    params:
      walletIdType: PHONE
      walletId: '2348039609278'
      channel: SERVICE
      txnRef: '70039202'
      encryptedPin: 929aed1a3c05e21b81b1937d25934dc6
      beneficiaryWallets: []
- name: Validate Account Number
  endpoint:
    path: /transactions/DoAccountNameInquiry
    method: GET
    data_selector: null
    params: {}
- name: Single Transfer
  endpoint:
    path: /transactions/TransferFunds
    method: POST
    data_selector: null
    params: {}
- name: token_api
  endpoint:
    path: /kmw/requesttoken/perform-process
    method: POST
    data_selector: null
    params: {}
- name: cashout_api
  endpoint:
    path: /kmw/kimonoservice/amex
    method: POST
    data_selector: null
    params: {}
- name: requery_api
  endpoint:
    path: /kmw/v2/transaction/requery
    method: POST
    data_selector: null
    params: {}
- name: bulk_transfer
  endpoint:
    path: /transaction/transfer/bulk
    method: POST
    data_selector: modelList
- name: transaction_requery_request
  endpoint:
    path: /transactionRequeryRequest
    method: POST
    data_selector: transactionRequeryResponse
    params: {}
- name: transaction_requery_response
  endpoint:
    path: /transactionRequeryResponse
    method: GET
    data_selector: transactionRequeryResponse
    params: {}
- name: Token API
  endpoint:
    path: /kmw/requesttoken/perform-process
    method: POST
- name: Cashout API
  endpoint:
    path: /kmw/kimonoservice/amex
    method: POST
- name: Re-query API
  endpoint:
    path: /kmw/v2/transaction/requery
    method: POST
- name: Pin Encryption
  endpoint:
    path: /pin/encryption
    method: POST
    data_selector: pinData
    params: {}
- name: transaction_requery
  endpoint:
    path: /transactionRequery
    method: POST
    data_selector: transactionRequeryResponse
- name: Pin Encryption
  endpoint:
    path: /pin/encryption
    method: POST
    data_selector: pinData
- name: fund_transfer_banks
  endpoint:
    path: /configuration/fundstransferbanks
    method: GET
    data_selector: banks
- name: fund_transfer_banks
  endpoint:
    path: /configuration/fundstransferbanks
    method: GET
    data_selector: banks
- name: Response Codes
  endpoint:
    path: /docs/payment-response-codes
    method: GET
- name: Response Codes for Cashout
  endpoint:
    path: /docs/response-codes-1
    method: GET
- name: customer_details
  endpoint:
    path: /lending-service-data-service/api/v1/customer-details/transactions/MIG1234567
    method: GET
    data_selector: data.transactions
    params:
      offerRequestReference: MIG1234567
- name: credit_score
  endpoint:
    path: /v1/credit-score
    method: GET
    data_selector: creditScores
    params:
      msisdn: '2348123456789'
- name: accept_offer
  endpoint:
    path: /lending-service/api/v1/offers/xxxxxx9090/accept
    method: POST
    data_selector: responseMessage
- name: bank_inquiry
  endpoint:
    path: /api/v1/inquiry/bank-code/SORT_CODE/account/ACCOUNT_NUMBER
    method: GET
    data_selector: responseCode
- name: update_loan_status
  endpoint:
    path: /lending-service/api/v1/loans/09091/update
    method: PUT
    data_selector: responseMessage
- name: credit_customer
  endpoint:
    path: /lending-service/api/v1/loans/10000000044/fund
    method: POST
    data_selector: responseMessage
- name: customer_details
  endpoint:
    path: /lending-service-data-service/api/v1/customer-details/transactions/MIG1234567
    method: GET
    data_selector: data.transactions
    params:
      offerRequestReference: MIG1234567
- name: credit_score
  endpoint:
    path: /v1/credit-score
    method: GET
    data_selector: creditScores
- name: accept_offer
  endpoint:
    path: /lending-service/api/v1/offers/xxxxxx9090/accept
    method: POST
    data_selector: responseMessage
- name: verify_account
  endpoint:
    path: /api/v1/inquiry/bank-code/SORT_CODE/account/ACCOUNT_NUMBER
    method: GET
    data_selector: responseMessage
- name: update_loan_status
  endpoint:
    path: /lending-service/api/v1/loans/09091/update
    method: PUT
    data_selector: responseMessage
- name: credit_customer
  endpoint:
    path: /lending-service/api/v1/loans/10000000044/fund
    method: POST
    data_selector: responseMessage
- name: sms
  endpoint:
    path: /sms
    method: POST
    data_selector: responseMessage
    params: {}
- name: debit_customer
  endpoint:
    path: /loans/OFFER1598612621100/debit
    method: POST
    data_selector: responseMessage
    params: {}
- name: sms
  endpoint:
    path: /sms
    method: POST
    data_selector: response
    params:
      providerCode: PTB
      customerId: '2348123456789'
- name: debit_customer
  endpoint:
    path: /loans/OFFER1598612621100/debit
    method: POST
    data_selector: response
    params:
      customerId: '2348123456789'
      loanId: OFFER1598612621100
- name: bank_inquiry
  endpoint:
    path: /api/v1/inquiry/bank-code/SORT_CODE/account/ACCOUNT_NUMBER
    method: GET
- name: credit_score
  endpoint:
    path: /v1/credit-score
    method: GET
    params:
      msisdn: '2348123456789'
- name: funds_transfer
  endpoint:
    path: /lending-service/api/v1/payments/transfer
    method: POST
- name: payment_collection
  endpoint:
    path: /lending-service/api/v1/payments
    method: POST
- name: update_loan_status
  endpoint:
    path: /reference/update-loan-status
    method: POST
- name: bank_inquiry
  endpoint:
    path: /api/v1/inquiry/bank-code/SORT_CODE/account/ACCOUNT_NUMBER
    method: GET
    data_selector: response
    params: {}
- name: credit_score
  endpoint:
    path: /v1/credit-score
    method: GET
    data_selector: creditScores
    params:
      msisdn: '2348123456789'
- name: funds_transfer
  endpoint:
    path: /lending-service/api/v1/payments/transfer
    method: POST
    data_selector: response
    params: {}
- name: payment_collection
  endpoint:
    path: /lending-service/api/v1/payments
    method: POST
    data_selector: response
    params: {}
- name: providers
  endpoint:
    path: /api/v1/offers/providers
    method: GET
    data_selector: responseCode
    params:
      channelCode: QTUSSD
      serviceType: service type
- name: get_offers
  endpoint:
    path: /api/v3/offers
    method: GET
    data_selector: responseCode
    params:
      customerId: '2348123456789'
      channelCode: QTUSSD
      amount: '5000000'
      serviceType: MONEY
      bvn: '90909'
      dateOfBirth: '1998-08-08'
      providerCode: MKT
- name: payment_methods
  endpoint:
    path: /api/v1/users/2348161286594/payment-methods
    method: GET
    data_selector: responseCode
    params:
      channelCode: QTUSSD
- name: token_validation
  endpoint:
    path: /api/v2/payments/token
    method: POST
    data_selector: responseCode
- name: validate_token
  endpoint:
    path: /v2/payments/token/validate
    method: POST
    data_selector: response
    params: {}
- name: accept_offer
  endpoint:
    path: /v1/offers/{offerid}/accept
    method: POST
    data_selector: response
    params: {}
- name: providers
  endpoint:
    path: /v1/offers/providers
    method: GET
    data_selector: response
    params:
      channelCode: QTUSSD
      serviceType: service type
- name: offers
  endpoint:
    path: /v3/offers
    method: GET
    data_selector: offers
    params:
      customerId: '2348123456789'
      channelCode: QTUSSD
      amount: '5000000'
      serviceType: MONEY
      bvn: '90909'
      dateOfBirth: '1998-08-08'
      providerCode: MKT
- name: payment_methods
  endpoint:
    path: /v1/users/2348161286594/payment-methods
    method: GET
    data_selector: creditMethods
    params:
      channelCode: QTUSSD
- name: token
  endpoint:
    path: /v2/payments/token
    method: POST
    data_selector: response
    params: {}
- name: validate_payment_token
  endpoint:
    path: /v2/payments/token/validate
    method: POST
    data_selector: response
    params: {}
- name: accept_offer
  endpoint:
    path: /v1/offers/{offerid}/accept
    method: POST
    data_selector: response
    params: {}
- name: customer_status
  endpoint:
    path: /users/2348123456789/status
    method: GET
    data_selector: loans
    params:
      channelCode: QTUSSD
      strict: 'true'
- name: loan_status
  endpoint:
    path: /endpoint/10000000058
    method: GET
    data_selector: loan
    params:
      customerId: '2348123456789'
      loanId: KB:90909
      providerCode: PTB
      channelCode: QTUSSD
- name: debit_customer
  endpoint:
    path: /loans/OFFER1598612621100/debit
    method: POST
    data_selector: response
    params: {}
- name: payment_notification
  endpoint:
    path: /endpoint
    method: POST
    data_selector: response
    params: {}
- name: Get Salary Loan
  endpoint:
    path: /salary/loan
    method: GET
    data_selector: responseCode
    params: {}
- name: Salary Loan Repayment Notification
  endpoint:
    path: /salary/notify-payment
    method: GET
    data_selector: responseCode
    params: {}
- name: customer_status
  endpoint:
    path: /users/2348123456789/status
    method: GET
    data_selector: loans
    params:
      channelCode: QTUSSD
      strict: 'true'
- name: loan_status
  endpoint:
    path: /endpoint/10000000058
    method: GET
    data_selector: loan
    params:
      customerId: '2348123456789'
      loanId: KB:90909
      providerCode: PTB
      channelCode: QTUSSD
- name: debit_customer
  endpoint:
    path: /loans/OFFER1598612621100/debit
    method: POST
    data_selector: null
    params: {}
- name: payment_notification
  endpoint:
    path: /endpoint
    method: POST
    data_selector: null
    params: {}
- name: Get Tenured Offers
  endpoint:
    path: /reference/get-tenured-offers
- name: Get Customer Information
  endpoint:
    path: /reference/get-customer-information
- name: Accept Tenured Offer
  endpoint:
    path: /reference/accept-tenured-offer
- name: Verify Account Number
  endpoint:
    path: /reference/name-inquiry-by-account
- name: Send SMS
  endpoint:
    path: /reference/send-sms
- name: Value Financing Transaction Notification
  endpoint:
    path: /reference/value-financing-transaction-notification-1
- name: salary_loan
  endpoint:
    path: /salary/loan
    method: GET
    data_selector: response
    params: {}
- name: salary_loan_repayment_notification
  endpoint:
    path: /salary/notify-payment
    method: GET
    data_selector: response
    params: {}
- name: demography
  endpoint:
    path: /api/v1/request/customer-insights/kyc-attributes
    method: POST
    data_selector: data
    params: {}
- name: Get Tenured Offers
  endpoint:
    path: /reference/get-tenured-offers
- name: Get Customer Information
  endpoint:
    path: /reference/get-customer-information
- name: Accept Tenured Offer
  endpoint:
    path: /reference/accept-tenured-offer
- name: Verify Account Number
  endpoint:
    path: /reference/name-inquiry-by-account
- name: Send SMS
  endpoint:
    path: /reference/send-sms
- name: Value Financing Transaction Notification
  endpoint:
    path: /reference/value-financing-transaction-notification-1
- name: financial_history
  endpoint:
    path: /api/v1/request/customer-insights/financial-attributes
    method: POST
    data_selector: data
    params: {}
- name: financial_attributes_avg
  endpoint:
    path: /api/v1/request/customer-insights/financial-attributes-avg
    method: POST
    data_selector: data
    params: {}
- name: financial_habits
  endpoint:
    path: /api/v1/request/customer-insights/derived-attributes
    method: POST
    data_selector: data
    params: {}
- name: financial_history
  endpoint:
    path: /api/v1/request/customer-insights/financial-attributes
    method: POST
    data_selector: data
    params: {}
- name: financial_history_average
  endpoint:
    path: /api/v1/request/customer-insights/financial-attributes-avg
    method: POST
    data_selector: data
- name: financial_habits
  endpoint:
    path: /api/v1/request/customer-insights/derived-attributes
    method: POST
    data_selector: data
- name: generate_token
  endpoint:
    path: /api/v1/pwm/subscribers/{subscriberId}/tokens
    method: POST
    data_selector: subscriberId
    params: {}
- name: get_token_status
  endpoint:
    path: /api/v1/pwm/subscribers/{subscriberId}/tokens
    method: POST
    data_selector: token
    params: {}
- name: cancel_token
  endpoint:
    path: /cardless-service/api/v1/cardless-services/cancel-token
    method: POST
    data_selector: code
    params: {}
- name: single_paycode
  endpoint:
    path: /docs/single-paycode
    method: POST
    data_selector: paycode
    params: {}
- name: bulk_paycode
  endpoint:
    path: /docs/bulk-paycode-1
    method: POST
    data_selector: paycodes
    params: {}
- name: Generate Bulk Token
  endpoint:
    path: /
    method: POST
    data_selector: summary
    params: {}
- name: Get Bulk Paycode Batch Status
  endpoint:
    path: /comprehensive/status
    method: GET
    data_selector: summary
    params: {}
- name: Bulk Token Batch Cancel
  endpoint:
    path: /
    method: DELETE
    data_selector: code
    params: {}
- name: generate_token
  endpoint:
    path: /api/v1/pwm/subscribers/{subscriberId}/tokens
    method: POST
    data_selector: payWithMobileToken
- name: get_token_status
  endpoint:
    path: /api/v1/pwm/subscribers/{subscriberId}/tokens
    method: POST
    data_selector: token
- name: cancel_token
  endpoint:
    path: /cardless-service/api/v1/cardless-services/cancel-token
    method: POST
    data_selector: code
- name: generate_bulk_token
  endpoint:
    path: /
    method: POST
    data_selector: entries
    params: {}
- name: get_bulk_paycode_batch_status
  endpoint:
    path: /comprehensive/status
    method: GET
    data_selector: summary
    params:
      referenceId: '1234566'
      frontEndPartner: '455'
- name: bulk_token_batch_cancel
  endpoint:
    path: /
    method: DELETE
    data_selector: code
    params:
      transactionRef: '1234343'
      frontEndPartner: IFIS
- name: debit
  endpoint:
    path: /debit
    method: POST
- name: reversal
  endpoint:
    path: /reversal
    method: POST
- name: enquiry
  endpoint:
    path: /enquiry
    method: POST
- name: place_lien
  endpoint:
    path: /place-lien
    method: POST
- name: debit_lien
  endpoint:
    path: /debit-lien
    method: POST
- name: debit
  endpoint:
    path: /debit
    method: POST
    data_selector: response
    params: {}
- name: enquiry
  endpoint:
    path: /enquiry
    method: POST
    data_selector: response
    params: {}
- name: debit
  endpoint:
    path: /debit
    method: POST
- name: reversal
  endpoint:
    path: /reversal
    method: POST
- name: enquiry
  endpoint:
    path: /enquiry-1
    method: POST
- name: place_lien
  endpoint:
    path: /place-lien
    method: POST
- name: debit_lien
  endpoint:
    path: /debit-lien
    method: POST
- name: place_lien
  endpoint:
    path: /lien/place
    method: POST
    data_selector: request
    params: {}
- name: debit_transaction
  endpoint:
    path: /debit
    method: POST
    data_selector: response
    params: {}
- name: debit_lien
  endpoint:
    path: /lien/debit
    method: POST
    data_selector: request
    params: {}
- name: reversal
  endpoint:
    path: /reversal
    method: POST
    data_selector: request
    params: {}
- name: enquiry
  endpoint:
    path: /enquiry
    method: POST
    data_selector: response
    params: {}
- name: place_lien
  endpoint:
    path: /lien/place
    method: POST
    data_selector: ''
    params: {}
- name: Account Inquiry API
  endpoint:
    path: /api/account/inquiry
    method: GET
- name: Credit Advice API
  endpoint:
    path: /api/credit/advice
    method: POST
- name: Re-query API
  endpoint:
    path: /api/requery
    method: GET
- name: debit_lien
  endpoint:
    path: /lien/debit
    method: POST
- name: credit_inquiry
  endpoint:
    path: /business-introduction
    method: POST
    data_selector: canCredit
- name: Bank Confirmation Model
  endpoint:
    path: /docs/credit-processing-bank-confirmation-model
    method: GET
    data_selector: transaction_finality
    params: {}
- name: Retry-Requery Model
  endpoint:
    path: /docs/transaction-requery-1
    method: GET
    data_selector: transaction_success_rate
    params: {}
- name: transaction_requery
  endpoint:
    path: /transaction/requery
    method: GET
- name: Account Inquiry
  endpoint:
    path: /api/account/inquiry
    method: POST
- name: Credit Advice
  endpoint:
    path: /api/credit/advice
    method: POST
- name: Re-query
  endpoint:
    path: /api/requery
    method: GET
- name: transaction_search
  endpoint:
    path: /transaction/search
    method: GET
- name: credit_inquiry
  endpoint:
    path: /business-introduction
    method: POST
    data_selector: canCredit
- name: Transaction Search
  endpoint:
    path: /transaction/search
    method: GET
- name: transaction_requery
  endpoint:
    path: /transaction/requery
    method: GET
- name: transaction_search
  endpoint:
    path: /transaction/search
    method: POST
    data_selector: access_token
- name: quick_search
  endpoint:
    path: /quick-search
    method: POST
    data_selector: data
    params: {}
- name: reference_search
  endpoint:
    path: /gateway/reference-search
    method: POST
    data_selector: response_data
    params:
      reference_type: rrn, tran_number, payment_reference
      page_number: '1'
- name: transaction_search
  endpoint:
    path: /transaction/search
    method: POST
    data_selector: ''
    params: {}
- name: transaction
  endpoint:
    path: /reference/search
    method: GET
    data_selector: data
    params: {}
- name: quick_search
  endpoint:
    path: /gateway/quick-search
    method: POST
    data_selector: data
    params: {}
- name: bulk_search
  endpoint:
    path: /bulk/bulk-search
    method: POST
- name: download_template
  endpoint:
    path: /bulk/download-template
    method: GET
- name: check_file_status
  endpoint:
    path: /bulk/status
    method: GET
- name: bulk_search_record
  endpoint:
    path: /bulk/record
    method: GET
- name: reference_search
  endpoint:
    path: /gateway/reference-search
    method: POST
    data_selector: response
    params:
      page_number: 1
- name: get_transaction_details
  endpoint:
    path: /transaction
    method: POST
    data_selector: data
    params:
      transaction_id: ''
      Page_size: 20
      page_number: 1
- name: transaction
  endpoint:
    path: /api/v1/transaction
    method: GET
    data_selector: data
    params:
      pageSize: 20
- name: bulk_download_template
  endpoint:
    path: /bulk/download-template
    method: GET
- name: bulk_upload
  endpoint:
    path: /bulk/bulk-search
    method: POST
- name: bulk_search_record
  endpoint:
    path: /bulk/record
    method: GET
- name: check_file_status
  endpoint:
    path: /bulk/status
    method: GET
- name: bulk_download
  endpoint:
    path: /bulk/download
    method: GET
    data_selector: data
    params:
      session_id: a2005d44-e559-4a33-8115-d0524db7f7be
- name: transaction_details
  endpoint:
    path: /gateway/transaction
    method: POST
    data_selector: data
    params:
      transaction_id: ''
      Page_size: 20
      page_number: 1
- name: client_registration
  endpoint:
    path: /client/register
    method: POST
    data_selector: clientId
    params: {}
- name: encrypt_card_data
  endpoint:
    path: /encrypt-card-data
    method: POST
    data_selector: response
    params: {}
- name: create_single_card
  endpoint:
    path: /card-management/api/v1/card/request
    method: POST
    data_selector: card
    params:
      isActiveActive: 'false'
      cardType: DEBIT_EXISTING_ACCOUNT
- name: retry_single_card_creation
  endpoint:
    path: /card-management/api/v1/card/retryCardRequest
    method: POST
    data_selector: response
    params: {}
- name: client_registration
  endpoint:
    path: /client/register
    method: POST
    data_selector: clientId
    params: {}
- name: Initiate Card Data Prep
  endpoint:
    path: /card360/initiate-card-data-prep
    method: POST
    data_selector: data
    params: {}
- name: Fetch Data Prep Request
  endpoint:
    path: /card360/fetch-data-prep-request
    method: GET
    data_selector: data
    params: {}
- name: Fetch Prepared Cards
  endpoint:
    path: /card360/fetch-prepared-cards
    method: GET
    data_selector: data
    params: {}
- name: test_card_data_encryption
  endpoint:
    path: /encrypt-card-data
    method: POST
    data_selector: response
    params: {}
- name: initiate_card_data_prep
  endpoint:
    path: /card-management/api/v1/data-prep
    method: POST
    data_selector: response
    params: {}
- name: Fetch Data Prep Request
  endpoint:
    path: /card360/fetch-data-prep-request
    method: GET
- name: create_single_card
  endpoint:
    path: /card-management/api/v1/card/request
    method: POST
    data_selector: card
    params:
      isActiveActive: 'false'
      cardType: DEBIT_EXISTING_ACCOUNT
- name: data_prep
  endpoint:
    path: /card-management/api/v1/data-prep
    method: GET
    data_selector: data
    params:
      correlationId: string
      requestId: string
- name: retry_card_creation
  endpoint:
    path: /card-management/api/v1/card/retryCardRequest
    method: POST
    data_selector: null
    params: {}
- name: fetch_prepared_cards
  endpoint:
    path: /card360/fetch-prepaid-cards
    method: GET
- name: card_data_prep
  endpoint:
    path: /docs/card360-initiate-card-data-prep
    method: POST
- name: fetch_prepared_cards
  endpoint:
    path: /card-management/api/v1/data-prep
    method: GET
    data_selector: data
    params:
      issuerCode: required
      persoCode: required
      pageNum: optional
      pageSize: optional
      startDate: optional
      endDate: optional
- name: Initiate Card Data Prep
  endpoint:
    path: /card-management/api/v1/data-prep
    method: POST
    data_selector: request
    params: {}
- name: Bulk Card Production and Data Prep
  endpoint:
    path: /card360/bulk-card-production-and-data-prep
    method: POST
- name: Fetch Data Prep Request
  endpoint:
    path: /card360-fetch-data-prep-request
    method: GET
- name: Bulk Card Production
  endpoint:
    path: /card-management/api/v1/fintech-cms/cpdp
    method: POST
    data_selector: code
    params: {}
- name: fetch_data_prep_request
  endpoint:
    path: /card-management/api/v1/data-prep
    method: GET
    data_selector: data
    params:
      correlationId: string
      requestId: string
- name: Fetch Prepared Cards
  endpoint:
    path: /card360/fetch-prepaid-cards
    method: GET
- name: retry_bulk_card_production
  endpoint:
    path: /card-management/api/v1/fintech-cms/cpdp/retry
    method: POST
- name: Reissue Card PIN
  endpoint:
    path: /card360/reissue-card-pin
    method: POST
    data_selector: data
- name: reissue_card_pin
  endpoint:
    path: /card-management/api/v1/card/reissue-pin
    method: POST
    data_selector: response
    params:
      isActiveActive: 'true'
- name: data_prep
  endpoint:
    path: /card-management/api/v1/data-prep
    method: GET
    data_selector: data
    params:
      issuerCode: required
      persoCode: required
      pageNum: optional
      pageSize: optional
      startDate: optional
      endDate: optional
- name: change_card_pin
  endpoint:
    path: /card/changePin
    method: POST
    data_selector: code
    params:
      isActiveActive: true
- name: bulk_card_production
  endpoint:
    path: /card-management/api/v1/fintech-cms/cpdp
    method: POST
    data_selector: ''
    params:
      cardType: DEBIT_NEW_ACCOUNT
      isActiveActive: true
- name: get_pin
  endpoint:
    path: /card-management/api/v1/card/get-pin
    method: POST
    data_selector: pin
    params: {}
- name: block_card
  endpoint:
    path: /card-management/api/v1/card/block
    method: POST
    data_selector: response
    params: {}
- name: retry_bulk_card_production
  endpoint:
    path: /card-management/api/v1/fintech-cms/cpdp/retry
    method: POST
    data_selector: response
    params: {}
- name: Reissue Card PIN
  endpoint:
    path: /card360/reissue-card-pin
    method: POST
- name: unblock_card
  endpoint:
    path: /card-management/api/v1/card/unblock
    method: POST
    data_selector: response
    params: {}
- name: block_prepaid_card
  endpoint:
    path: /card-management/api/v1/card/prepaid/block
    method: POST
    data_selector: code
    params: {}
- name: reissue_card_pin
  endpoint:
    path: /card-management/api/v1/card/reissue-pin
    method: POST
    data_selector: pin
    params:
      isActiveActive: 'true'
- name: Change Card PIN
  endpoint:
    path: /card360/change-card-pin
    method: POST
- name: unblock_prepaid_card
  endpoint:
    path: /card-management/api/v1/card/prepaid/unblock
    method: POST
    data_selector: response
    params: {}
- name: change_card_pin
  endpoint:
    path: /card-management/api/v1/card/changePin
    method: POST
    data_selector: response
    params:
      isActiveActive: 'true'
- name: link_card_to_account
  endpoint:
    path: /card-management/api/v1/card/linkAccount
    method: POST
    data_selector: code
    params: {}
- name: get_pin
  endpoint:
    path: /card-management/api/v1/card/get-pin
    method: POST
    data_selector: pin
    params: {}
- name: Confirm Sufficient Balance for Prepaid Cards
  endpoint:
    path: /card360/confirm-sufficient-balance-for-prepaid-cards
    method: GET
- name: block_card
  endpoint:
    path: /card-management/api/v1/card/block
    method: POST
    data_selector: response
    params: {}
- name: confirm_sufficient_balance
  endpoint:
    path: /card-management/api/v1/card/prepaid/confirm_balance
    method: POST
    data_selector: isSufficient
    params: {}
- name: Confirm Sufficient Balance for Debit Cards
  endpoint:
    path: /card360/confirm-sufficient-balance-for-debit-cards
    method: GET
- name: unblock_card
  endpoint:
    path: /card-management/api/v1/card/unblock
    method: POST
    data_selector: ''
    params: {}
- name: confirm_sufficient_balance_debit_cards
  endpoint:
    path: /card-management/api/v1/card/debit/confirm_balance
    method: POST
    data_selector: response
    params: {}
- name: Get Card Balance for Prepaid Cards
  endpoint:
    path: /card360/get-card-balance-for-prepaid-cards
    method: GET
- name: block_prepaid_card
  endpoint:
    path: /card-management/api/v1/card/prepaid/block
    method: POST
- name: get_card_balance_prepaid
  endpoint:
    path: /card-management/api/v1/card/prepaid/balance
    method: POST
    data_selector: ledgerBalance
    params: {}
- name: unblock_prepaid_card
  endpoint:
    path: /card-management/api/v1/card/prepaid/unblock
    method: POST
    data_selector: response
    params: {}
- name: Get Account Balance for Debit Card Account
  endpoint:
    path: /card360/get-account-balance-for-debit-card-account
    method: GET
- name: get_account_balance
  endpoint:
    path: /card-management/api/v1/card/debit/balance
    method: POST
- name: link_card_to_account
  endpoint:
    path: /card-management/api/v1/card/linkAccount
    method: POST
- name: Fetch Multiple Cards by Issuer Number
  endpoint:
    path: /docs/card360-fetch-multiple-cards-by-issuer
    method: GET
- name: confirm_sufficient_balance_prepaid_cards
  endpoint:
    path: /card360/confirm-sufficient-balance-for-prepaid-cards
    method: GET
- name: fetch_multiple_cards
  endpoint:
    path: /card-management/api/v1/card/fetchMultiple
    method: POST
    data_selector: cardDetails
    params:
      issuerNr: 2
      cardProgram: VERVE
- name: Fetch Single Card By PAN
  endpoint:
    path: /card360/fetch-single-card-by-pan
    method: GET
- name: confirm_sufficient_balance_prepaid
  endpoint:
    path: /card-management/api/v1/card/prepaid/confirm_balance
    method: POST
    data_selector: isSufficient
    params: {}
- name: Confirm Sufficient Balance for Debit Cards
  endpoint:
    path: /card360/confirm-sufficient-balance-for-debit-cards
    method: GET
- name: fetch_single_card
  endpoint:
    path: /card-management/api/v1/card/fetchSingle
    method: POST
    data_selector: cardDetails
- name: Fetch Cards By Account
  endpoint:
    path: /card360/fetch-cards-by-account
    method: GET
- name: confirm_sufficient_balance_debit_cards
  endpoint:
    path: /card-management/api/v1/card/debit/confirm_balance
    method: POST
    data_selector: isSufficient
    params: {}
- name: fetch_card_by_account
  endpoint:
    path: /card-management/api/v1/card/fetchCardByAccount
    method: POST
    data_selector: accountCustomerCards
    params: {}
- name: Get Card Balance for Prepaid Cards
  endpoint:
    path: /card360/get-card-balance-for-prepaid-cards
    method: GET
- name: fetch_customer_card_details_by_account
  endpoint:
    path: /card360/fetch-customer-card-details-by-account
    method: GET
- name: get_card_balance
  endpoint:
    path: /card-management/api/v1/card/prepaid/balance
    method: POST
    data_selector: ledgerBalance
    params:
      pan: string
- name: customer_card_details
  endpoint:
    path: /card/account/customer/cards
    method: POST
    data_selector: detailedAccountCustomerCards
    params: {}
- name: Get Account Balance for Debit Card Account
  endpoint:
    path: /card360/get-account-balance-for-debit-card-account
    method: GET
- name: request_logs
  endpoint:
    path: /card-management/api/v1/logs/requests
    method: GET
    params: {}
- name: get_account_balance
  endpoint:
    path: /card-management/api/v1/card/debit/balance
    method: POST
    data_selector: code
    params:
      issuerNr: issuerNr
      accountId: accountId
      accountType: accountType
- name: request_logs
  endpoint:
    path: /card/changePin
    method: POST
    data_selector: requestLogs
    params: {}
- name: Fetch Multiple Cards by Issuer Number
  endpoint:
    path: /docs/card360-fetch-multiple-cards-by-issuer
    method: GET
- name: validate_card
  endpoint:
    path: /card-management/api/v1/card/validate
    method: POST
    data_selector: response
    params: {}
- name: fetch_multiple_cards_by_issuer_number
  endpoint:
    path: /card-management/api/v1/card/fetchMultiple
    method: POST
    data_selector: cardDetails
    params:
      issuerNr: issuerNr
      cardProgram: cardProgram
      lastName: lastName
      firstName: firstName
      pan: pan
- name: Fetch Single Card By PAN
  endpoint:
    path: /card360-fetch-single-card-by-pan1
    method: GET
- name: fetch_single_card_by_pan
  endpoint:
    path: /card/fetchSingle
    method: POST
    data_selector: cardDetails
- name: Fetch Cards By Account
  endpoint:
    path: /card360-fetch-cards-by-account
    method: GET
- name: create_payout_transaction
  endpoint:
    path: /merchant-wallet/api/v1/payouts
    method: POST
    data_selector: response
    params: {}
- name: customer_lookup
  endpoint:
    path: /merchant-wallet/api/v1/payouts/customer-lookup
    method: POST
    data_selector: response
    params: {}
- name: get_payout_transaction
  endpoint:
    path: /merchant-wallet/api/v1/payouts/{transactionReference}
    method: GET
    data_selector: response
    params: {}
- name: get_wallet_balance
  endpoint:
    path: /merchant-wallet/api/v1/wallet/balance/{insert merchant code here}?walletId={insert
      wallet id here}
    method: GET
    data_selector: response
    params: {}
- name: fetch_cards_by_account
  endpoint:
    path: /card-management/api/v1/card/fetchCardByAccount
    method: POST
    data_selector: accountCustomerCards
    params: {}
- name: customer_card_details
  endpoint:
    path: /card360/fetch-customer-card-details-by-account
    method: GET
- name: payout_channels
  endpoint:
    path: /payouts/payout_channels
    method: GET
    data_selector: payout_channels
    params: {}
- name: bank_transfer
  endpoint:
    path: /payouts/bank_transfer
    method: POST
    data_selector: recipient
    params: {}
- name: push_to_card
  endpoint:
    path: /payouts/push_to_card
    method: POST
    data_selector: recipient
    params: {}
- name: fetch_customer_card_details_by_account
  endpoint:
    path: /card-management/api/v1/card/account/customer/cards
    method: POST
    data_selector: detailedAccountCustomerCards
    params: {}
- name: receiving_institutions
  endpoint:
    path: /api/v1/payouts/receiving-institutions
    method: GET
    data_selector: ''
- name: fetch_request_logs
  endpoint:
    path: /card-management/api/v1/logs/client-requests
    method: POST
- name: request_logs
  endpoint:
    path: /card-management/api/v1/card/changePin
    method: POST
    data_selector: requestLogs
    params: {}
- name: validate_card
  endpoint:
    path: /card/validate
    method: POST
- name: Paycode Transaction
  endpoint:
    path: /paycode/transaction
    method: POST
    data_selector: transResponse
- name: encryptPin
  endpoint:
    path: /encryptPin
    method: POST
    data_selector: result
- name: decryptPin
  endpoint:
    path: /decryptPin
    method: POST
    data_selector: result
- name: card_transaction
  endpoint:
    path: /card-transaction-command
    method: POST
    data_selector: transResponse
- name: create_payout_transaction
  endpoint:
    path: /api/v1/payouts
    method: POST
    data_selector: response
    params: {}
- name: customer_lookup
  endpoint:
    path: /api/v1/payouts/customer-lookup
    method: POST
    data_selector: response
    params: {}
- name: get_payout_transaction
  endpoint:
    path: /api/v1/payouts/{transactionReference}
    method: GET
    data_selector: response
    params: {}
- name: get_wallet_balance
  endpoint:
    path: /api/v1/wallet/balance/{insert merchant code here}
    method: GET
    data_selector: response
    params: {}
- name: cash_transaction
  endpoint:
    path: /cash-transaction-command
    method: POST
- name: QR Transaction Command
  endpoint:
    path: /docs/qr-transaction-command
    method: GET
- name: BANK_TRANSFER
  endpoint:
    path: /payouts/bank_transfer
    method: POST
    data_selector: recipient
    params: {}
- name: PUSH_TO_CARD
  endpoint:
    path: /payouts/push_to_card
    method: POST
    data_selector: recipient
    params: {}
- name: QR Transaction Command
  endpoint:
    path: /qr-transaction
    method: POST
    data_selector: transResponse
- name: receiving_institutions
  endpoint:
    path: /receiving-institutions
    method: GET
    data_selector: institutions
- name: ussd_transaction
  endpoint:
    path: /ussd/transaction
    method: POST
    data_selector: transResponse
- name: receiving_institutions
  endpoint:
    path: /api/v1/payouts/receiving-institutions
    method: GET
- name: heartbeat
  endpoint:
    path: /heartbeat
    method: POST
    data_selector: Heartbeat
    params: {}
- name: cancel_last_payment
  endpoint:
    path: /cansel-last-payment-command
    method: POST
    data_selector: OperationalRequest
- name: paycode_transaction_command
  endpoint:
    path: /docs/paycode-transaction-command
    method: GET
- name: card_transaction_command
  endpoint:
    path: /docs/card-transaction-command
    method: GET
- name: cash_transaction_command
  endpoint:
    path: /docs/cash-transaction-command
    method: GET
- name: qr_transaction_command
  endpoint:
    path: /docs/qr-transaction-command
    method: GET
- name: ussd_transaction_command
  endpoint:
    path: /docs/ussd-transaction-command
    method: GET
- name: Paycode Transaction Command
  endpoint:
    path: /paycode-transaction-command
    method: POST
- name: paycode_transaction
  endpoint:
    path: /paycode-transaction-command
    method: POST
    data_selector: transResponse
- name: Card Transaction Command
  endpoint:
    path: /card-transaction-command
    method: POST
- name: card_transaction
  endpoint:
    path: /card-transaction-command
    method: POST
    data_selector: transResponse
- name: cash_transaction_command
  endpoint:
    path: /cash-transaction-command
    method: POST
- name: card_verification
  endpoint:
    path: /verification/card
    method: POST
    data_selector: response
    params: {}
- name: cash_transaction
  endpoint:
    path: /cash-transaction
    method: POST
    data_selector: transResponse
- name: card_payment_initiation
  endpoint:
    path: /payment/card
    method: POST
- name: QR Transaction Command
  endpoint:
    path: /qr-transaction-command
    method: POST
    data_selector: transResponse
- name: ussd_transaction_command
  endpoint:
    path: /ussd-transaction-command
    method: POST
    data_selector: transResponse
    params: {}
- name: payment_info
  endpoint:
    path: /payment/info
    method: POST
    data_selector: paymentInfo
    params: {}
- name: heartbeat_request
  endpoint:
    path: /heartbeat
    method: POST
    data_selector: Heartbeat
    params: {}
- name: create_card
  endpoint:
    path: /reference/create-card
    method: POST
    data_selector: modelList
- name: Virtual Debit Card
  endpoint:
    path: /reference/create-virtual-debit-card
    method: POST
- name: Virtual Prepaid Card
  endpoint:
    path: /reference/create-virtual-prepaid-card
    method: POST
- name: cancel_last_payment_command
  endpoint:
    path: /cansel-last-payment-command
    method: POST
    data_selector: OperationalRequest
- name: Get Transactions
  endpoint:
    path: /get-transactions
    method: GET
- name: Get Invoice Details
  endpoint:
    path: /get-invoice-details
    method: GET
- name: Get Active Suppliers
  endpoint:
    path: /get-active-suppliers
    method: GET
- name: Bluetooth Integration
  endpoint:
    path: /bluetooth/integration
    method: GET
    data_selector: instructions
    params: {}
- name: generate_access_token
  endpoint:
    path: /passport/oauth/token
    method: POST
- name: card_verification
  endpoint:
    path: /verification/card
    method: POST
- name: card_payment_initiation
  endpoint:
    path: /payment/card
    method: POST
- name: purchase
  endpoint:
    path: /purchases
    method: POST
    data_selector: object
- name: purchases
  endpoint:
    path: /purchases
    method: POST
- name: payment_info
  endpoint:
    path: /payment/info
    method: POST
    data_selector: paymentInfo
- name: authenticate_otp
  endpoint:
    path: /api/v3/purchases/otps/auths
    method: POST
    data_selector: object
    params:
      paymentId: string
      otp: string
      transactionId: string
      eciFlag: string
- name: Resend OTP
  endpoint:
    path: /purchases/otps/auths
    method: POST
- name: create_card
  endpoint:
    path: /reference/create-card
    method: POST
- name: create_virtual_debit_card
  endpoint:
    path: /reference/create-virtual-debit-card
    method: POST
- name: create_virtual_prepaid_card
  endpoint:
    path: /reference/create-virtual-prepaid-card
    method: POST
- name: Get Transactions
  endpoint:
    path: /get-transactions
    method: GET
- name: Get Transaction Status
  endpoint:
    path: /get-transaction-status
    method: GET
- name: resend_otp
  endpoint:
    path: /api/v3/purchases/otps/resend
    method: POST
- name: Authentication API
  endpoint:
    path: /reference/authentication-api
    method: post
- name: Generate Access Token
  endpoint:
    path: /reference/generate-access-token
    method: post
- name: resend_otp
  endpoint:
    path: /purchases/otps/resend
    method: POST
    data_selector: paymentId
    params: {}
- name: authorize_transaction
  endpoint:
    path: /api/v3/purchases/otps/auths/
    method: POST
    data_selector: object
    params: {}
- name: generate_access_token
  endpoint:
    path: /passport/oauth/token
    method: POST
- name: resend_otp
  endpoint:
    path: /purchases/otps/auths
    method: POST
- name: tokenize_card_recurrents
  endpoint:
    path: /api/v2/purchases/validations/recurrents
    method: POST
    data_selector: object
- name: Get Transactions
  endpoint:
    path: /get-transactions
    method: GET
- name: Create Refund Transaction
  endpoint:
    path: /create-refund-transaction
    method: POST
- name: Get Invoices
  endpoint:
    path: /get-invoices
    method: GET
- name: Get Transaction Status
  endpoint:
    path: /get-transaction-status
    method: GET
- name: recurrents_validation
  endpoint:
    path: /api/v2/purchases/validations/recurrents
    method: POST
    data_selector: authData
- name: recurrents_purchase
  endpoint:
    path: /purchases/recurrents
    method: POST
    data_selector: object
    params: {}
- name: recurrents
  endpoint:
    path: /purchases/recurrents
    method: POST
- name: purchase
  endpoint:
    path: /api/v3/purchases
    method: POST
    data_selector: object
- name: purchases
  endpoint:
    path: /purchases
    method: POST
- name: authenticate_otp
  endpoint:
    path: /api/v3/purchases/otps/auths
    method: POST
    data_selector: object
    params:
      paymentId: '3530063'
      otp: '3530063'
- name: Resend OTP
  endpoint:
    path: /purchases/otps/auths
    method: POST
    data_selector: result
- name: confirm_dynamic_transfer
  endpoint:
    path: /virtualaccounts/transaction
    method: GET
    data_selector: responseCode
    params:
      merchantCode: MX6072
      transactionReference: 123456xx1x
- name: resend_otp
  endpoint:
    path: /api/v3/purchases/otps/resend
    method: POST
- name: resend_otp
  endpoint:
    path: /purchases/otps/resend
    method: POST
    data_selector: none
    params: {}
- name: transaction
  endpoint:
    path: /virtualaccounts/transaction
    method: GET
    params:
      merchantCode: MX6072
      transactionReference: 123456xx1x
- name: get_transactions
  endpoint:
    path: /transactions
    method: GET
    params:
      merchantCode: string
      responseCode: string
      transactionReference: string
      merchantCustomerId: string
      bankCode: string
      status: string
      startDate: string
      endDate: string
      pageSize: int32
      pageNum: int32
- name: authorize_transaction
  endpoint:
    path: /api/v3/purchases/otps/auths/
    method: POST
    data_selector: object
    params:
      paymentId: '3530063'
      transactionId: MSPjKBV2Kyg91MQRMep0
      eciFlag: '07'
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: resend_otp
  endpoint:
    path: /purchases/otps/auths
    method: POST
    data_selector: response
    params: {}
- name: get_transaction_v2
  endpoint:
    path: /collections/api/v2/gettransaction.json
    method: GET
    data_selector: object
    params:
      transactionReference: original tran ref
- name: get_transaction
  endpoint:
    path: /collections/api/v2/gettransaction.json
    method: GET
    params:
      transactionReference: 1559290853mwdde9421
- name: refund
  endpoint:
    path: /paymentgateway/api/v1/refunds
    method: GET
    data_selector: content
    params:
      merchantCode: MX187
      pageNum: '1'
      pageSize: '100'
      startDate: 11/01/2018
      endDate: 12/03/2018
- name: refund_info
  endpoint:
    path: /refunds
    method: GET
    params:
      merchantCode: MX187
      pageNum: 1
      pageSize: 100
      startDate: 11/01/2018
      endDate: 12/03/2018
- name: get_refund_info
  endpoint:
    path: /refunds
    method: GET
    params:
      refundReference: string
- name: refund
  endpoint:
    path: /refunds
    method: GET
    params:
      refundReference: reference
- name: create_refund_transaction
  endpoint:
    path: /create-refund-transaction
    method: POST
    params: {}
- name: create_refund_transaction
  endpoint:
    path: /create-refund-transaction
    method: POST
- name: tokenize_card_recurrents
  endpoint:
    path: /purchases/validations/recurrents
    method: POST
    data_selector: object
    params: {}
- name: recurrents_validation
  endpoint:
    path: /api/v2/purchases/validations/recurrents
    method: POST
- name: recurrents
  endpoint:
    path: /purchases/recurrents
    method: POST
- name: recurrents
  endpoint:
    path: /api/v2/purchases/recurrents
    method: POST
- name: create_refund_transaction
  endpoint:
    path: /refunds
    method: POST
- name: refund
  endpoint:
    path: /refunds
    method: POST
    data_selector: object
- name: pay_with_ussd
  endpoint:
    path: /collections/api/v1/sdk/ussd/generate
    method: POST
    data_selector: object
    params: {}
- name: generate_qr
  endpoint:
    path: /collections/api/v1/sdk/ussd/generate
    method: POST
- name: confirm_dynamic_transfer
  endpoint:
    path: /virtualaccounts/transaction
    method: GET
    params:
      merchantCode: MX6072
      transactionReference: 123456xx1x
- name: transaction
  endpoint:
    path: /virtualaccounts/transaction
    method: GET
    params:
      merchantCode: MX6072
      transactionReference: 123456xx1x
- name: generate_qr
  endpoint:
    path: /collections/api/v1/sdk/qr/generate
    method: POST
    data_selector: object
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    params:
      merchantCode: ''
      responseCode: ''
      transactionReference: ''
      merchantCustomerId: ''
      bankCode: ''
      status: ''
      startDate: ''
      endDate: ''
      pageSize: ''
      pageNum: ''
- name: generate_qr
  endpoint:
    path: /collections/api/v1/sdk/qr/generate
    method: POST
    data_selector: result
    params: {}
- name: create_transaction
  endpoint:
    path: /collections/api/v1/sdk/transfer
    method: POST
    data_selector: result
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: get_transaction
  endpoint:
    path: /gettransaction.json
    method: GET
    data_selector: object
    params:
      transactionReference: original tran ref
- name: get_transaction
  endpoint:
    path: /collections/api/v2/gettransaction.json
    method: GET
    data_selector: object
    params:
      transactionReference: 1559290853mwdde9421
- name: refund
  endpoint:
    path: /refunds
    method: GET
    data_selector: content
    params:
      merchantCode: MX187
      pageNum: '1'
      pageSize: '100'
      startDate: 11/01/2018
      endDate: 12/03/2018
- name: refund
  endpoint:
    path: /refunds
    method: GET
    params:
      merchantCode: MX187
      pageNum: 1
      pageSize: 100
      startDate: 11/01/2018
      endDate: 12/03/2018
- name: transaction
  endpoint:
    path: /paymentgateway/api/v1/virtualaccounts/transaction
    method: POST
    data_selector: result
- name: get_refund_info
  endpoint:
    path: /paymentgateway/api/v1/refunds
    method: GET
    params:
      refundReference: '{reference}'
- name: refund
  endpoint:
    path: /refunds
    method: GET
    params:
      refundReference: reference
- name: create_refund_transaction
  endpoint:
    path: /create-refund-transaction
    method: POST
    params: {}
- name: create_refund_transaction
  endpoint:
    path: /create-refund-transaction
    method: POST
- name: create_bill
  endpoint:
    path: /paymentgateway/api/v1/paybill
    method: POST
- name: paybill
  endpoint:
    path: /paybill
    method: POST
    data_selector: result
    params: {}
- name: create_invoice
  endpoint:
    path: /create-invoice
    method: POST
    data_selector: result
    params: {}
- name: create_refund_transaction
  endpoint:
    path: /refunds
    method: POST
- name: refund
  endpoint:
    path: /refunds
    method: POST
    data_selector: refund
    params: {}
- name: create_invoice
  endpoint:
    path: /merchant/invoice/create
    method: POST
    data_selector: response
    params: {}
- name: create_invoice
  endpoint:
    path: /merchant/invoice/create
    method: POST
    data_selector: object
- name: get_invoices
  endpoint:
    path: /get-invoices
    method: GET
    data_selector: object
- name: pay_with_ussd
  endpoint:
    path: /collections/api/v1/sdk/ussd/generate
    method: POST
- name: generate_qr
  endpoint:
    path: /collections/api/v1/sdk/ussd/generate
    method: POST
- name: invoices
  endpoint:
    path: /merchant/invoice/all/{merchantCode}
    method: GET
    data_selector: content
    params:
      merchantCode: MX6072
      pageNum: '1'
      pageSize: '100'
- name: invoices
  endpoint:
    path: /merchant/invoice/all/MX6072
    method: GET
    params:
      pageNum: 1
      pageSize: 100
      merchantCode: MX6072
- name: generate_qr
  endpoint:
    path: /collections/api/v1/sdk/qr/generate
    method: POST
- name: invoice_details
  endpoint:
    path: /paymentgateway/api/v1/merchant/invoice/{reference}
    method: GET
- name: generate_qr
  endpoint:
    path: /collections/api/v1/sdk/qr/generate
    method: POST
    data_selector: null
    params: {}
- name: create_transaction
  endpoint:
    path: /collections/api/v1/sdk/pay-with-transfer
    method: POST
    data_selector: null
    params: {}
- name: invoices
  endpoint:
    path: /merchant/invoice/INVCK02JBWWC
    method: GET
- name: cancel_invoice
  endpoint:
    path: /paymentgateway/api/v1/merchant/invoice/cancel
    method: POST
- name: cancel_invoice
  endpoint:
    path: /merchant/invoice/cancel
    method: POST
    data_selector: result
    params: {}
- name: wallet_cards
  endpoint:
    path: /get-wallet-cards
    method: POST
    data_selector: paymentMethods
- name: authentication
  endpoint:
    path: /collections/api/v1/sdk/wallets
    method: POST
    data_selector: result
    params: {}
- name: transaction
  endpoint:
    path: /paymentgateway/api/v1/virtualaccounts/transaction
    method: POST
    data_selector: result
    params: {}
- name: merchant_details
  endpoint:
    path: /collections/api/v1/sdk/merchant-details
    method: GET
- name: merchant_details
  endpoint:
    path: /collections/api/v1/sdk/merchant-details
    method: GET
- name: merchant_bin_config
  endpoint:
    path: /collections/api/v2/merchantbins
    method: POST
- name: merchant_bins
  endpoint:
    path: /collections/api/v2/merchantbins
    method: POST
    data_selector: authData
- name: create_bill
  endpoint:
    path: /paybill
    method: POST
    data_selector: object
    params:
      merchantCode: MX6072
      payableCode: '9405967'
      amount: '5000'
      redirectUrl: https://webpay-ui.k8.isw.la/demo-response
      customerId: johndoe@gmail.com
      currencyCode: '566'
      customerEmail: johndoe@gmail.com
- name: pay_with_transfer
  endpoint:
    path: /paybill
    method: POST
- name: issuers
  endpoint:
    path: /collections/api/v1/ussd/issuers/NG
    method: GET
- name: Generate Token
  endpoint:
    path: /reference/generate-access-token
    method: POST
- name: generate_token
  endpoint:
    path: /passport/oauth/token
    method: POST
- name: Create Invoice
  endpoint:
    path: /merchant/invoice/create
    method: POST
- name: create_invoice
  endpoint:
    path: /merchant/invoice/create
    method: POST
- name: get_invoices
  endpoint:
    path: /get-invoices
    method: GET
- name: billers
  endpoint:
    path: /get-billers
    method: GET
    data_selector: BillerList
- name: transactions
  endpoint:
    path: /get-transactions
    method: GET
- name: query_transaction
  endpoint:
    path: /Transactions
    method: GET
    data_selector: object
    params:
      requestReference: requestReferencevalue
- name: invoices
  endpoint:
    path: /merchant/invoice/all/{merchantCode}
    method: GET
    data_selector: content
    params:
      merchantCode: MX6072
      pageNum: '1'
      pageSize: '100'
- name: transactions
  endpoint:
    path: /Transactions
    method: GET
- name: invoice
  endpoint:
    path: /merchant/invoice/all/MX6072
    method: GET
    params:
      pageNum: '1'
      pageSize: '100'
      merchantCode: MX6072
- name: billers_by_category
  endpoint:
    path: /services
    method: GET
    params:
      categoryId: '{id}'
- name: biller_payment_item
  endpoint:
    path: /quicktellerservice/api/v5/services/options
    method: GET
    params:
      serviceid: '{billerid}'
- name: get_invoice_details
  endpoint:
    path: /paymentgateway/api/v1/merchant/invoice/{reference}
    method: GET
    data_selector: object
- name: Get Billers by Category
  endpoint:
    path: /services/options
    method: GET
    data_selector: object
    params:
      serviceid: billerid
- name: invoices
  endpoint:
    path: /merchant/invoice/INVCK02JBWWC
    method: GET
- name: send_bill_payment_advice
  endpoint:
    path: /quicktellerservice/api/v5/Transactions
    method: POST
    data_selector: object
    params: {}
- name: cancel_invoice
  endpoint:
    path: /paymentgateway/api/v1/merchant/invoice/cancel
    method: POST
- name: Transactions
  endpoint:
    path: /Transactions
    method: POST
    data_selector: null
    params: {}
- name: cancel_invoice
  endpoint:
    path: /merchant/invoice/cancel
    method: POST
    data_selector: result
    params: {}
- name: validate_customer
  endpoint:
    path: /Transactions/validatecustomers
    method: POST
    data_selector: Customers
    params: {}
- name: get_wallet_cards
  endpoint:
    path: /collections/api/v1/sdk/wallets
    method: POST
- name: validate_customers
  endpoint:
    path: /Transactions/validatecustomers
    method: GET
    data_selector: customers
    params: {}
- name: authentication
  endpoint:
    path: /collections/api/v1/sdk/wallets
    method: POST
    data_selector: object
- name: biller_categories
  endpoint:
    path: /services/categories
    method: GET
    data_selector: categorys
- name: categories
  endpoint:
    path: /services/categories
    method: GET
- name: create_voucher
  endpoint:
    path: /vouchers/generateVoucher
    method: POST
    data_selector: json
    params: {}
- name: merchant_details
  endpoint:
    path: /collections/api/v1/sdk/merchant-details
    method: GET
- name: merchant_details
  endpoint:
    path: /collections/api/v1/sdk/merchant-details
    method: GET
- name: redeem_voucher
  endpoint:
    path: /vouchers/redeemVoucher
    method: POST
- name: merchant_bin_config
  endpoint:
    path: /collections/api/v2/merchantbins
    method: POST
    data_selector: object
- name: redeem_voucher
  endpoint:
    path: /vouchers/redeemVoucher
    method: POST
- name: bank_codes
  endpoint:
    path: /bank-code-copy
    method: GET
- name: bank_codes
  endpoint:
    path: /quicktellerservice/api/v5/configuration/fundstransferbanks
    method: GET
    data_selector: banks
- name: merchant_bins
  endpoint:
    path: /merchantbins
    method: POST
    data_selector: authData
    params: {}
- name: fund_transfer_banks
  endpoint:
    path: /configuration/fundstransferbanks%20(COPY)
    method: GET
- name: ussd_banks
  endpoint:
    path: /collections/api/v1/ussd/issuers/NG
    method: GET
    data_selector: array of objects
- name: single_transfer
  endpoint:
    path: /transactions/TransferFunds
    method: POST
- name: issuers
  endpoint:
    path: /collections/api/v1/ussd/issuers/NG
    method: GET
- name: TransferFunds
  endpoint:
    path: /transactions/TransferFunds
    method: POST
- name: Generate Access Token
  endpoint:
    path: /reference/generate-access-token
    method: POST
- name: Get Transactions
  endpoint:
    path: /reference/get-transactions
    method: GET
- name: bulk_transfer
  endpoint:
    path: /generic-wallet/api/v1/transaction/transfer/bulk
    method: POST
    data_selector: modelList
    params: {}
- name: bulk_transfer
  endpoint:
    path: /generic-wallet/api/v1/transaction/transfer/bulk
    method: POST
- name: bank_code
  endpoint:
    path: /quicktellerservice/api/v5/configuration/fundstransferbanks
    method: GET
    data_selector: banks
- name: fundstransferbanks
  endpoint:
    path: /configuration/fundstransferbanks
    method: GET
- name: customer_referral
  endpoint:
    path: /connect/customerreferral/
    method: POST
- name: customers
  endpoint:
    path: /connect/customers/
    method: POST
- name: campaigns
  endpoint:
    path: /api/v1/campaigns/
    method: POST
- name: customer_bank_accounts
  endpoint:
    path: /api/v1/customer-bank-accounts/
    method: POST
- name: dashboard
  endpoint:
    path: /api/v1/dashboard/
    method: GET
- name: fixed_values
  endpoint:
    path: /api/v1/fixed-values/
    method: GET
- name: savings_plans
  endpoint:
    path: /api/v1/savings-plans/
    method: GET
- name: payment_transactions
  endpoint:
    path: /api/v1/payment-transactions/
    method: POST
- name: customer_transactions
  endpoint:
    path: /api/v1/customer-transactions/
    method: GET
- name: fixed_deposits
  endpoint:
    path: /api/v1/fixed-deposits/
    method: POST
- name: provider_details
  endpoint:
    path: /api/v1/provider-details/
    method: POST
- name: ifis
  endpoint:
    path: /api/v1/ifis/
    method: POST
- name: ifis_service
  endpoint:
    path: /ifis-service/
    method: GET
- name: quickteller_wealthhub
  endpoint:
    path: /quickteller-wealthhub/api/v1/
    method: POST
- name: postoffice
  endpoint:
    path: /postoffice/
    method: POST
- name: request_token
  endpoint:
    path: /kmw/requesttoken/perform-process
    method: POST
    data_selector: object
- name: get_billers
  endpoint:
    path: /get-billers
    method: GET
    data_selector: BillerList
- name: transaction_requery
  endpoint:
    path: /transaction/requery
    method: POST
    data_selector: object
- name: transaction_requery
  endpoint:
    path: /transaction/requery
    method: POST
    data_selector: transactionRequeryRequest
- name: query_transaction
  endpoint:
    path: /Transactions
    method: GET
    data_selector: object
    params:
      requestReference: requestReferencevalue
- name: Transactions
  endpoint:
    path: /Transactions
    method: GET
- name: create_card
  endpoint:
    path: /generic-wallet/api/v1/cards/get
    method: GET
    params:
      walletIdType: required
      channel: required
      walletId: required
- name: get_cards
  endpoint:
    path: /generic-wallet/api/v1/cards/get
    method: GET
- name: Get Billers by Category
  endpoint:
    path: /services
    method: GET
    data_selector: response
    params:
      categoryId: '{id}'
- name: change_pin
  endpoint:
    path: /generic-wallet/api/v1/cards/change/pin
    method: POST
- name: services
  endpoint:
    path: /quicktellerservice/api/v5/services
    method: GET
    params:
      categoryId: id
- name: change_pin
  endpoint:
    path: /cards/change/pin
    method: POST
    data_selector: object
- name: biller_payment_item
  endpoint:
    path: /services/options
    method: GET
    params:
      serviceid: '{billerid}'
- name: get_balance
  endpoint:
    path: /generic-wallet/api/v1/cards/balance
    method: POST
- name: Get Balance
  endpoint:
    path: /generic-wallet/api/v1/cards/balance
    method: POST
- name: send_bill_payment_advice
  endpoint:
    path: /Transactions
    method: POST
- name: balance_statement
  endpoint:
    path: /generic-wallet/api/v1/cards/balance/statement
    method: POST
    data_selector: modelList
    params:
      walletIdType: NIN
      channel: '9999'
      walletId: SERVICE
      fromDate: 30/05/2018
      toDate: 30/04/2018
      domain: ISW
- name: Transactions
  endpoint:
    path: /Transactions
    method: POST
    data_selector: response
    params: {}
- name: Get Balance Statement
  endpoint:
    path: /generic-wallet/api/v1/cards/balance/statement
    method: POST
    data_selector: object
    params: {}
- name: validate_customers
  endpoint:
    path: /Transactions/validatecustomers
    method: POST
    data_selector: Customers
- name: reset_pin
  endpoint:
    path: /generic-wallet/api/v1/cards/reset/pin
    method: POST
- name: reset_pin
  endpoint:
    path: /generic-wallet/api/v1/cards/reset/pin
    method: POST
- name: validate_customers
  endpoint:
    path: /Transactions/validatecustomers
    method: GET
- name: biller_categories
  endpoint:
    path: /services/categories
    method: GET
    data_selector: categorys
- name: select_pin
  endpoint:
    path: /generic-wallet/api/v1/cards/select/pin
    method: POST
    data_selector: object
- name: select_pin
  endpoint:
    path: /generic-wallet/api/v1/cards/select/pin
    method: POST
- name: categories
  endpoint:
    path: /services/categories
    method: GET
- name: generateVoucher
  endpoint:
    path: /generateVoucher
    method: POST
    data_selector: ''
- name: delete_pin
  endpoint:
    path: /generic-wallet/api/v1/cards/delete
    method: POST
    data_selector: object
    params: {}
- name: redeem_voucher
  endpoint:
    path: /vouchers/redeemVoucher
    method: POST
- name: block_card
  endpoint:
    path: /generic-wallet/api/v1/cards/block
    method: POST
- name: redeem_voucher
  endpoint:
    path: /vouchers/redeemVoucher
    method: POST
- name: get_bank_codes
  endpoint:
    path: /bank-code-copy
    method: GET
- name: block_card
  endpoint:
    path: /cards/block
    method: POST
- name: unblock_card
  endpoint:
    path: /unblock-card
    method: POST
- name: bank_codes
  endpoint:
    path: /quicktellerservice/api/v5/configuration/fundstransferbanks
    method: GET
    data_selector: banks
- name: unblock_card
  endpoint:
    path: /generic-wallet/api/v1/cards/unblock
    method: POST
    data_selector: object
- name: fund_transfer_banks
  endpoint:
    path: /configuration/fundstransferbanks%20(COPY)
    method: GET
- name: unblock_card
  endpoint:
    path: /generic-wallet/api/v1/cards/unblock
    method: POST
- name: single_transfer
  endpoint:
    path: /transactions/TransferFunds
    method: POST
- name: TransferFunds
  endpoint:
    path: /transactions/TransferFunds
    method: POST
- name: GetBankCodes
  endpoint:
    path: /bank-code-copy
    method: GET
- name: BulkTransfer
  endpoint:
    path: /bulk-transfer-1
    method: POST
- name: bulk_transfer
  endpoint:
    path: /generic-wallet/api/v1/transaction/transfer/bulk
    method: POST
    data_selector: response
    params: {}
- name: bulk_transfer
  endpoint:
    path: /generic-wallet/api/v1/transaction/transfer/bulk
    method: POST
- name: bank_code
  endpoint:
    path: /quicktellerservice/api/v5/configuration/fundstransferbanks
    method: GET
    data_selector: banks
- name: salary_information
  endpoint:
    path: /salaries/info
    method: GET
    data_selector: object
    params: {}
- name: fundstransferbanks
  endpoint:
    path: /configuration/fundstransferbanks
    method: GET
- name: salary_info
  endpoint:
    path: /salaries/info
    method: GET
    data_selector: object
- name: request_token
  endpoint:
    path: /kmw/requesttoken/perform-process
    method: POST
- name: salary_loan
  endpoint:
    path: /lending-service/api/v1/salary/loan
    method: GET
    data_selector: object
    params:
      customerId: string
      channelCode: string
      providerCode: string
      amount: double
      amountPayable: int64
      accountNumber: string
      bankCode: string
      tenure: string
      offerid: string
      interest: double
      loanSchemeCode: string
- name: salary_loan
  endpoint:
    path: /salary/loan
    method: POST
    data_selector: response
    params: {}
- name: transaction_requery
  endpoint:
    path: /transaction/requery
    method: POST
- name: salary_loan_repayment_notification
  endpoint:
    path: /lending-service/api/v1/salary/notify-payment
    method: GET
    data_selector: object
    params:
      customerId: string
      channelCode: string
      providerCode: string
      amount: string
      loanId: string
      transactionRef: string
      currency: string
- name: transaction_requery
  endpoint:
    path: /transaction/requery
    method: POST
    data_selector: transactionRequeryRequest
- name: salary_loan
  endpoint:
    path: /salary/notify-payment
    method: GET
- name: tenured_offers
  endpoint:
    path: /tenured-offers
    method: GET
- name: create_card
  endpoint:
    path: /generic-wallet/api/v1/cards/get
    method: GET
    params:
      walletIdType: ''
      channel: ''
      walletId: ''
- name: get_cards
  endpoint:
    path: /generic-wallet/api/v1/cards/get
    method: GET
- name: get_tenured_offers
  endpoint:
    path: /get-tenured-offers
    method: GET
    data_selector: records
- name: change_pin
  endpoint:
    path: /generic-wallet/api/v1/cards/change/pin
    method: POST
- name: change_pin
  endpoint:
    path: /generic-wallet/api/v1/cards/change/pin
    method: POST
    data_selector: object
- name: tenured_offers
  endpoint:
    path: /tenured-offers
    method: GET
    params:
      customerId: '2348030583962'
      amount: '100000'
      merchantCode: MX007
      bvn: '1000000002'
- name: Get Balance
  endpoint:
    path: /cards/balance
    method: POST
- name: Get Balance Statement
  endpoint:
    path: /get-balance-statement
    method: POST
- name: tenured_offers
  endpoint:
    path: /tenured-offers
    method: GET
    params:
      customerId: '2348030583962'
      amount: '100000'
      mechantCode: MX007
      bvn: '1000000002'
      providerCode: MINES
      channelCode: QTUSSD
      merchantCode: merchantId
      itemDescription: itemDescription
- name: get_balance_statement
  endpoint:
    path: /generic-wallet/api/v1/cards/balance/statement
    method: POST
    data_selector: response
    params:
      walletIdType: NIN
      channel: '9999'
      walletId: SERVICE
      fromDate: 30/05/2018
      toDate: 30/04/2018
      domain: ISW
- name: Accept Tenured Offer
  endpoint:
    path: /accept-tenured-offer
    method: POST
- name: Get Tenured Offers
  endpoint:
    path: /get-tenured-offers
    method: GET
- name: balance_statement
  endpoint:
    path: /generic-wallet/api/v1/cards/balance/statement
    method: POST
    data_selector: object
- name: accept_tenured_offer
  endpoint:
    path: /lending-service/api/v1/tenured-offers/{offerId}/accept
    method: POST
- name: reset_pin
  endpoint:
    path: /generic-wallet/api/v1/cards/reset/pin
    method: POST
- name: reset_pin
  endpoint:
    path: /generic-wallet/api/v1/cards/reset/pin
    method: POST
- name: tenured_offers
  endpoint:
    path: /tenured-offers/default-2172/accept
    method: POST
    data_selector: object
- name: select_pin
  endpoint:
    path: /generic-wallet/api/v1/cards/select/pin
    method: POST
- name: credit_score
  endpoint:
    path: /credit-score-engine/v1/credit-score
    method: GET
    data_selector: credit_score
    params:
      msisdn: string
- name: delete_pin
  endpoint:
    path: /generic-wallet/api/v1/cards/delete
    method: POST
- name: credit_score
  endpoint:
    path: /v1/credit-score
    method: GET
    params:
      msisdn: '2348123456789'
- name: credit_score_history
  endpoint:
    path: /v1/credit-score-history
    method: GET
    params: {}
- name: delete_card
  endpoint:
    path: /generic-wallet/api/v1/cards/delete
    method: POST
- name: block_card
  endpoint:
    path: /generic-wallet/api/v1/cards/block
    method: POST
    data_selector: object
- name: credit_score_history
  endpoint:
    path: /credit-score-engine/v1/credit-score/history
    method: GET
    data_selector: creditScores
    params:
      msisdn: string
- name: block_card
  endpoint:
    path: /generic-wallet/api/v1/cards/block
    method: POST
- name: unblock_card
  endpoint:
    path: /generic-wallet/api/v1/cards/unblock
    method: POST
- name: credit-score-history
  endpoint:
    path: /credit-score/history
    method: GET
- name: credit_report
  endpoint:
    path: /credit-report
    method: POST
- name: unblock_card
  endpoint:
    path: /generic-wallet/api/v1/cards/unblock
    method: POST
    data_selector: object
- name: unblock_card
  endpoint:
    path: /cards/unblock
    method: POST
- name: credit_report
  endpoint:
    path: /credit-report
    method: POST
- name: credit_customer
  endpoint:
    path: /credit-customer
    method: POST
- name: salary_information
  endpoint:
    path: /salary-lending-service/api/v1/salaries/info
    method: GET
    data_selector: object
    params:
      startDate: date
      endDate: date
- name: get_salary_info
  endpoint:
    path: /salaries/info
    method: GET
- name: salary_loan
  endpoint:
    path: /lending-service/api/v1/salary/loan
    method: GET
    data_selector: object
    params:
      customerId: string
      channelCode: string
      providerCode: string
      amount: double
      amountPayable: int64
      accountNumber: string
      bankCode: string
      tenure: string
      offerid: string
      interest: double
      loanSchemeCode: string
- name: credit_customer
  endpoint:
    path: /lending-service/api/v1/loans/{loanId}/fund
    method: POST
    data_selector: object
    params: {}
- name: salary_loan
  endpoint:
    path: /salary/loan
    method: POST
    data_selector: response
    params: {}
- name: fund_loan
  endpoint:
    path: /loans/10000000044/fund
    method: POST
- name: salary_loan_repayment_notification
  endpoint:
    path: /lending-service/api/v1/salary/notify-payment
    method: GET
    params:
      customerId: string
      channelCode: string
      providerCode: string
      amount: string
      loanId: string
      transactionRef: string
      currency: string
- name: salary_loan
  endpoint:
    path: /salary/notify-payment
    method: GET
    data_selector: object
- name: tenured_offers
  endpoint:
    path: /get-tenured-offers
    method: GET
    data_selector: object
- name: Get Tenured Offers
  endpoint:
    path: /get-tenured-offers
    method: GET
- name: transfer
  endpoint:
    path: /payments/transfer
    method: POST
    data_selector: object
- name: transfer
  endpoint:
    path: /payments/transfer
    method: POST
- name: tenured_offers
  endpoint:
    path: /tenured-offers
    method: GET
    params:
      customerId: '2348030583962'
      amount: '100000'
      merchantCode: MX007
      bvn: '1000000002'
- name: tenured_offers
  endpoint:
    path: /tenured-offers
    method: GET
    params:
      customerId: '2348030583962'
      amount: '100000'
      mechantCode: MX007
      bvn: '1000000002'
      providerCode: MINES
      channelCode: QTUSSD
      merchantCode: merchantId
      itemDescription: itemDescription
- name: Get Tenured Offers
  endpoint:
    path: /reference/get-tenured-offers
    method: GET
- name: Accept Tenured Offer
  endpoint:
    path: /reference/accept-tenured-offer
    method: POST
- name: accept_tenured_offer
  endpoint:
    path: /lending-service/api/v1/tenured-offers/{offerId}/accept
    method: POST
    data_selector: response
    params:
      offerId: default-2172
      customerId: '2348161286594'
      merchantCode: VNA
      providerCode: MINES
- name: debit_customer
  endpoint:
    path: /lending-service/api/v1/loans/{loanId}/debit
    method: POST
    data_selector: object
    params:
      loanId:
        required: true
        default: OFFER1598612621100
      customerId:
        required: true
        default: '2348123456789'
      amount:
        required: true
        default: 5000
      providerCode:
        required: true
        default: MKT
      transactionId:
        required: true
        default: '145688247534499'
- name: accept_tenured_offer
  endpoint:
    path: /tenured-offers/default-2172/accept
    method: POST
- name: debit
  endpoint:
    path: /loans/OFFER1598612621100/debit
    method: POST
    data_selector: object
    params: {}
- name: credit_score
  endpoint:
    path: /credit-score-engine/v1/credit-score
    method: GET
    data_selector: json
    params:
      msisdn: string
- name: credit_score
  endpoint:
    path: /v1/credit-score
    method: GET
    data_selector: object
    params:
      msisdn: '2348123456789'
- name: credit_score_history
  endpoint:
    path: /credit-score-engine/v1/credit-score/history
    method: GET
    data_selector: creditScores
    params:
      msisdn: msisdn
- name: do_payment
  endpoint:
    path: /lending-service/api/v1/payments
    method: POST
    data_selector: object
    params: {}
- name: debit_customer
  endpoint:
    path: /payments
    method: POST
    data_selector: object
- name: credit_score_history
  endpoint:
    path: /credit-score/history
    method: GET
- name: credit_report
  endpoint:
    path: /lending-service/api/v1/credit-report
    method: POST
    data_selector: response_body
- name: credit_report
  endpoint:
    path: /credit-report
    method: POST
- name: credit_customer
  endpoint:
    path: /credit-customer
    method: POST
- name: get_token_with_wallet
  endpoint:
    path: /lending-service/api/v1/payments/wallet/token
    method: POST
- name: do_payment
  endpoint:
    path: /payments/wallet/token
    method: POST
- name: requery_payment
  endpoint:
    path: /requery-payment
    method: GET
- name: credit_customer
  endpoint:
    path: /lending-service/api/v1/loans/{loanId}/fund
    method: POST
- name: fund_loan
  endpoint:
    path: /loans/10000000044/fund
    method: POST
- name: requery_payment
  endpoint:
    path: /lending-service/api/v1/payments/query
    method: GET
    params:
      transactionId: '101202303404505'
      providerCode: PTB
- name: query_transaction
  endpoint:
    path: /payments/query
    method: GET
    params:
      providerCode: PTB
      transactionId: transactionId
- name: funds_transfer
  endpoint:
    path: /payments/transfer
    method: POST
    data_selector: object
    params: {}
- name: transfer
  endpoint:
    path: /payments/transfer
    method: POST
    data_selector: response
    params: {}
- name: update_loan_status
  endpoint:
    path: /lending-service/api/v1/loans/{loanId}/update
    method: PUT
    data_selector: json
    params: {}
- name: update_loan_status
  endpoint:
    path: /loans/{loanId}/update
    method: PUT
- name: debit_customer
  endpoint:
    path: /lending-service/api/v1/loans/{loanId}/debit
    method: POST
    params: {}
- name: debit
  endpoint:
    path: /loans/OFFER1598612621100/debit
    method: POST
    data_selector: object
- name: send_sms
  endpoint:
    path: /lending-service/api/v1/sms
    method: POST
    params:
      providerCode: PTB
      customerId: '2348123456789'
- name: do_payment
  endpoint:
    path: /payments
    method: POST
    data_selector: object
    params: {}
- name: Debit Customer
  endpoint:
    path: /debit-customer
    method: POST
    data_selector: response
    params: {}
- name: update_loan_status
  endpoint:
    path: /sms
    method: POST
    data_selector: object
    params:
      providerCode: PTB
      msisdn: '2348123456789'
      message: A message has been sent to you
      loanId: '10000000044'
- name: do_refund
  endpoint:
    path: /lending-service/v1/payments/refund
    method: POST
    data_selector: response
    params: {}
- name: refund
  endpoint:
    path: /payments/refund
    method: POST
    data_selector: object
- name: customer_information
  endpoint:
    path: /get-customer-information
    method: GET
    data_selector: object
- name: get_token_with_wallet
  endpoint:
    path: /lending-service/api/v1/payments/wallet/token
    method: POST
- name: do_payment
  endpoint:
    path: /payments/wallet/token
    method: POST
    data_selector: result
    params: {}
- name: requery_payment
  endpoint:
    path: /requery-payment
    method: GET
    data_selector: result
    params: {}
- name: customer_info
  endpoint:
    path: /customer-info
    method: GET
    params:
      msisdn: '2348035459308'
- name: customer_info
  endpoint:
    path: /customer-info
    method: GET
    params:
      msisdn: '2348035459308'
- name: customer_history
  endpoint:
    path: /get-customer-history
    method: GET
    params: {}
- name: customer_history
  endpoint:
    path: /api/v1/payment/history
    method: GET
    data_selector: json
- name: requery_payment
  endpoint:
    path: /lending-service/api/v1/payments/query
    method: GET
    params:
      transactionId: '101202303404505'
      providerCode: PTB
- name: payment_history
  endpoint:
    path: /api/v1/payment/history
    method: GET
- name: query_transaction
  endpoint:
    path: /payments/query
    method: GET
- name: providers
  endpoint:
    path: /lending-service/api/v1/offers/providers
    method: GET
- name: provider_offers
  endpoint:
    path: /offers/providers
    method: GET
    params:
      channelCode: QTUSSD
- name: update_loan_status
  endpoint:
    path: /lending-service/api/v1/loans/{loanId}/update
    method: PUT
    data_selector: json
    params:
      loanId: 09091
      status: CLOSED
      providerCode: ABCREDIT
- name: get_provider_offers
  endpoint:
    path: /get-provider-offers
    method: GET
- name: get_multiple_provider_offers
  endpoint:
    path: /get-multiple-provider-offers
    method: GET
- name: update_loan_status
  endpoint:
    path: /loans/09091/update
    method: PUT
- name: provider_offers
  endpoint:
    path: /lending-service/api/v1/offers
    method: GET
    params:
      customerId: '2348123456789'
      channelCode: '0002'
      providerCode: ABCREDIT
      fullname: John Doe
      amount: '5000000'
      serviceType: LOAN
- name: send_sms
  endpoint:
    path: /sms
    method: POST
    data_selector: json
    params:
      providerCode: PTB
      customerId: '2348123456789'
      msisdn: '2348123456789'
      message: A message has been sent to you
      loanId: '10000000044'
- name: offers
  endpoint:
    path: /offers
    method: GET
    params: {}
- name: get_multiple_provider_offers
  endpoint:
    path: /get-multiple-provider-offers
    method: GET
- name: update_loan_status
  endpoint:
    path: /update-loan-status
    method: POST
    data_selector: object
- name: do_refund
  endpoint:
    path: /do-refund
    method: POST
    data_selector: object
- name: refund
  endpoint:
    path: /lending-service/v1/payments/refund
    method: POST
    data_selector: object
    params: {}
- name: refund
  endpoint:
    path: /payments/refund
    method: POST
- name: customer_information
  endpoint:
    path: /get-customer-information
    method: GET
- name: get_multiple_provider_offers
  endpoint:
    path: /lending-service/api/v2/offers
    method: GET
    params:
      customerId: '2348123456789'
      channelCode: '0002'
      amount: '500000'
      serviceType: LOAN
- name: Get Provider Offers
  endpoint:
    path: /offers
    method: GET
    params:
      customerId: '2348123456789'
      channelCode: '0002'
      fullname: John Doe
      amount: amount
      serviceType: serviceType
- name: Get Customer Status
  endpoint:
    path: /customer-status
    method: GET
    params: {}
- name: get_customer_status
  endpoint:
    path: /get-customer-status
    method: GET
- name: customer_info
  endpoint:
    path: /customer-info
    method: GET
    data_selector: json
- name: customer_info
  endpoint:
    path: /customer-info
    method: GET
    data_selector: object
    params:
      msisdn: '2348035459308'
- name: get_customer_status
  endpoint:
    path: /lending-service/api/v1/users/{customerId}/status
    method: GET
    params:
      customerId: '2348123456789'
      channelCode: QTUSSD
      strict: ''
- name: get_customer_history
  endpoint:
    path: /api/v1/payment/history
    method: GET
    data_selector: json
    params:
      providerCode: ''
      mobile: ''
      startDate: ''
      endDate: ''
- name: user_status
  endpoint:
    path: /users/2348123456789/status
    method: GET
    params:
      channelCode: QTUSSD
- name: payment_history
  endpoint:
    path: /api/v1/payment/history
    method: GET
- name: Get Loan History
  endpoint:
    path: /get-loan-history
    method: GET
    data_selector: data
    params:
      customerId: '2348123456789'
      startDate: '2019-02-02'
      endDate: '2019-02-28'
      channelCode: QTUSSD
      pageNumber: 1
      pageSize: 100
- name: providers
  endpoint:
    path: /lending-service/api/v1/offers/providers
    method: GET
    data_selector: records
    params:
      channelCode: QTUSSD
- name: get_customer_status
  endpoint:
    path: /loans/{loan_id}
    method: GET
    params:
      startDate: '2019-02-02'
      endDate: '2019-02-28'
      channelCode: QTUSSD
      pageNumber: 1
      pageSize: 100
- name: provider_offers
  endpoint:
    path: /offers/providers
    method: GET
    params:
      channelCode: QTUSSD
- name: get_offers
  endpoint:
    path: /get-offers
    method: GET
- name: Get Provider Offers
  endpoint:
    path: /get-provider-offers
    method: GET
- name: get_provider_offers
  endpoint:
    path: /lending-service/api/v1/offers
    method: GET
    params:
      customerId: '2348123456789'
      channelCode: '0002'
      providerCode: ABCREDIT
      fullname: John Doe
      amount: '5000000'
      serviceType: LOAN
- name: get_offers
  endpoint:
    path: /offers
    method: GET
    data_selector: response
    params:
      customerId: '2348123456789'
      channelCode: QTUSSD
      amount: '5000000'
      serviceType: MONEY
      dateOfBirth: '1998-08-08'
      providerCode: MKT
- name: Get Providers
  endpoint:
    path: /offers
    method: GET
    params:
      customerId: '{customerId}'
      channelCode: '{channelCode}'
      providerCode: '{providerCode}'
      amount: '{amount}'
      serviceType: '{serviceType}'
- name: Get Multiple Provider Offers
  endpoint:
    path: /get-multiple-provider-offers
    method: GET
    params: {}
- name: get_loan_history
  endpoint:
    path: /offers
    method: GET
    params:
      customerId: '2348123456789'
      channelCode: QTUSSD
      amount: 5000000
      serviceType: MONEY
      dateOfBirth: '1998-08-08'
      providerCode: MKT
- name: get_multiple_provider_offers
  endpoint:
    path: /get-multiple-provider-offers
    method: GET
- name: accept_offer
  endpoint:
    path: /lending-service/api/v1/offers/{offerId}/accept
    method: POST
    data_selector: response
    params: {}
- name: get_multiple_provider_offers
  endpoint:
    path: /lending-service/api/v2/offers
    method: GET
    params:
      customerId: '2348123456789'
      channelCode: '0002'
      amount: '500000'
      serviceType: LOAN
- name: accept_offer
  endpoint:
    path: /offers/offerId/accept
    method: POST
    data_selector: response
    params: {}
- name: validate_customer
  endpoint:
    path: /validate-customer
    method: POST
    data_selector: response
    params: {}
- name: provider_offers
  endpoint:
    path: /offers
    method: GET
    params:
      customerId: '2348123456789'
      channelCode: '0002'
      fullname: John Doe
      amount: amount
      serviceType: serviceType
- name: customer_status
  endpoint:
    path: /customer-status
    method: GET
    params: {}
- name: Get Customer Status
  endpoint:
    path: /get-customer-status
    method: GET
- name: customer_status
  endpoint:
    path: /lending-service/api/v1/users/{customerId}/status
    method: GET
    params:
      customerId: '2348123456789'
      channelCode: QTUSSD
- name: user_status
  endpoint:
    path: /users/2348123456789/status
    method: GET
    params:
      channelCode: QTUSSD
- name: validate_customer
  endpoint:
    path: /lending-service/v1/loans/{loanId}/validate
    method: POST
    data_selector: response
    params:
      loanId: '3456'
      amount: 10000
- name: validate_loan
  endpoint:
    path: /loans/{loanId}/validate
    method: POST
- name: payment_notification
  endpoint:
    path: /endpoint
    method: POST
    data_selector: json
    params: {}
- name: Get Payment Methods
  endpoint:
    path: /reference/get-payment-methods
    method: GET
- name: loan_history
  endpoint:
    path: /get-loan-history
    method: GET
    data_selector: data
    params:
      customerId: '2348123456789'
      startDate: '2019-02-02'
      endDate: '2019-02-28'
      channelCode: QTUSSD
      pageNumber: 1
      pageSize: 100
- name: loans
  endpoint:
    path: /loans/2348123456789
    method: GET
    params:
      startDate: '2019-02-02'
      endDate: '2019-02-28'
      channelCode: QTUSSD
      pageNumber: 1
      pageSize: 100
- name: Get Offers
  endpoint:
    path: /get-offers
    method: GET
- name: payment_methods
  endpoint:
    path: /lending-service/api/v1/users/{customerId}/payment-methods
    method: GET
    params:
      customerId: '2348161286594'
      channelCode: QTUSSD
- name: payment_methods
  endpoint:
    path: /users/2348161286594/payment-methods
    method: GET
    params:
      channelCode: QTUSSD
- name: loan_status
  endpoint:
    path: /api/v1/interswitchlending/webhook/get-loan-status/{loanId}
    method: GET
    params:
      customerId: '2348123456789'
      loanId: '10000000058'
      providerCode: PTB
      channelCode: QTUSSD
- name: payment_methods
  endpoint:
    path: /endpoint/10000000058
    method: GET
    params:
      customerId: '2348123456789'
      providerCode: PTB
      channelCode: QTUSSD
- name: offers
  endpoint:
    path: /offers
    method: GET
    data_selector: ''
    params:
      customerId: '2348123456789'
      channelCode: QTUSSD
      amount: '5000000'
      serviceType: MONEY
      dateOfBirth: '1998-08-08'
      providerCode: MKT
- name: offers
  endpoint:
    path: /offers
    method: GET
    params:
      customerId: '2348123456789'
      channelCode: QTUSSD
      amount: '5000000'
      serviceType: MONEY
      dateOfBirth: '1998-08-08'
      providerCode: MKT
- name: accept_offers
  endpoint:
    path: /lending-service/api/v1/offers/{offerId}/accept
    method: POST
    data_selector: response
    params: {}
- name: get_token_with_token_validation
  endpoint:
    path: /token
    method: POST
    data_selector: body
    params:
      customerId: '2349095801772'
      authData: RTojFURS9D1MDZ7gb6y7ych4ReHzoLr9AdIsqpZO4fj/huSyi+wDTig1ORaguhKkxm4NJLInJaFKKImKSSK0dG3cLqIiHnKL8RJdKCyvB74ku1P1l4MmQm+PrheYzjR8D6iBgGi9LMnTWxQajcnvnKMwl3FjjXHWDVB7lkWhk6KjATg4iEd7pZ1Y5frHYMsdMWGOQlzkIVRbVXcAKaHPqGlGIBNFPDbJxpME8KUp1f/QoqoJ/ryipa5oBVX3o2Z/p1YMAuWETxv3FFk39omKYZmh21uC+i2pgvBeg3T8bjqc5jFpA0Qxejj1uBWTwkUtzqvCUQxSSRIlfN2UEUOF8Q==
      transactionRef: '15345574890'
      providerCode: MKT
- name: accept_offer
  endpoint:
    path: /offers/offerId/accept
    method: POST
- name: validate_customer
  endpoint:
    path: /validate-customer
    method: POST
- name: get_loan_status
  endpoint:
    path: /get-loan-status
    method: GET
- name: complete_get_token_with_otp
  endpoint:
    path: /complete-get-token-with-otp
    method: POST
- name: Complete Get Token With OTP
  endpoint:
    path: /lending-service/api/v2/payments/token/validate
    method: POST
    data_selector: response
    params: {}
- name: token_validation
  endpoint:
    path: /token/validate
    method: POST
- name: validate_customer
  endpoint:
    path: /lending-service/v1/loans/{loanId}/validate
    method: POST
    data_selector: json
- name: channel_collections
  endpoint:
    path: /endpint
    method: GET
    data_selector: responseMap
    params:
      customerId: ''
- name: validate_loan
  endpoint:
    path: /loans/{loanId}/validate
    method: POST
- name: account_debit
  endpoint:
    path: /api/v1/accountdebit/transactions
    method: POST
    data_selector: response
    params: {}
- name: Payment Methods
  endpoint:
    path: /get-payment-methods
    method: GET
- name: transaction_requery
  endpoint:
    path: /api/v1/accountdebit/transactions
    method: POST
- name: transaction_requery
  endpoint:
    path: /api/v1/accountdebit/transactions
    method: GET
    data_selector: object
    params:
      transactionId: string
- name: transactions
  endpoint:
    path: /api/v1/accountdebit/transactions
    method: GET
    data_selector: results
    params: {}
- name: balance_enquiry
  endpoint:
    path: /api/v1/accountdebit/balance
    method: GET
    params:
      account_number: string
- name: payment_methods
  endpoint:
    path: /lending-service/api/v1/users/{customerId}/payment-methods
    method: GET
    params:
      customerId: '2348161286594'
      channelCode: QTUSSD
- name: send_offers
  endpoint:
    path: /lending-service/api/v1/offers/{offerRequestReference}/send-offers
    method: POST
- name: payment_methods
  endpoint:
    path: /users/2348161286594/payment-methods
    method: GET
- name: loan_status
  endpoint:
    path: /api/v1/interswitchlending/webhook/get-loan-status/{loanId}
    method: GET
    params:
      customerId: '2348123456789'
      providerCode: PTB
      channelCode: QTUSSD
- name: payment_methods
  endpoint:
    path: /endpoint/10000000058
    method: GET
    params:
      customerId: '2348123456789'
      providerCode: PTB
      channelCode: QTUSSD
- name: send_offers
  endpoint:
    path: /offers/offerRequestReference/send-offers
    method: POST
- name: get_customer_transaction_records
  endpoint:
    path: /get-customer-transaction-records
    method: GET
- name: get_token_with_token_validation
  endpoint:
    path: /token
    method: POST
- name: customer_transaction_records
  endpoint:
    path: /customer-details/transactions/{offerRequestReference}
    method: GET
    params:
      offerRequestReference: MIG1234567
- name: customer_details_transactions
  endpoint:
    path: /customer-details/transactions/MIG1234567
    method: GET
    params:
      offerRequestReference: MIG1234567
- name: get_loan_status
  endpoint:
    path: /get-loan-status
    method: GET
- name: complete_get_token_with_otp
  endpoint:
    path: /complete-get-token-with-otp
    method: POST
- name: value_financing_transaction_notification
  endpoint:
    path: /value-financing-transaction-notification-1
    method: POST
    data_selector: response
    params:
      requestCode: '00'
      requestMessage: Successful
      loanId: ILS08492
      customerId: '23408053012121'
      loanStatus: OPEN
      amount: null
      transactionId: '739374884937283937'
      transactionReference: FBN|WEB|ILS|20170503121143|8903
      paymentDate: '2017-06-12T11:46:15Z'
- name: Complete Get Token With OTP
  endpoint:
    path: /lending-service/api/v2/payments/token/validate
    method: POST
    data_selector: json
    params:
      customerId: '2349095801772'
      authData: RTojFURS9D1MDZ7gb6y7ych4ReHzoLr9AdIsqpZO4fj/huSyi+wDTig1ORaguhKkxm4NJLInJaFKKImKSSK0dG3cLqIiHnKL8RJdKCyvB74ku1P1l4MmQm+PrheYzjR8D6iBgGi9LMnTWxQajcnvnKMwl3FjjXHWDVB7lkWhk6KjATg4iEd7pZ1Y5frHYMsdMWGOQlzkIVRbVXcAKaHPqGlGIBNFPDbJxpME8KUp1f/QoqoJ/ryipa5oBVX3o2Z/p1YMAuWETxv3FFk39omKYZmh21uC+i2pgvBeg3T8bjqc5jFpA0Qxejj1uBWTwkUtzqvCUQxSSRIlfN2UEUOF8Q==
      otp: '770391'
      transactionRef: '15345574890'
      providerCode: MKT
- name: customer_transaction_records
  endpoint:
    path: /get-customer-transaction-records
    method: GET
- name: provider_balance
  endpoint:
    path: /get-provider-balance
    method: GET
- name: token_validation
  endpoint:
    path: /payments/token/validate
    method: POST
    data_selector: object
- name: channel_collections
  endpoint:
    path: /endpint
    method: GET
    data_selector: responseMap
    params:
      customerId: required
- name: account_debit
  endpoint:
    path: /api/v1/accountdebit/transactions
    method: POST
    data_selector: response
    params: {}
- name: get_provider_balance
  endpoint:
    path: /lending-service/api/v1/payments/provider/balance
    method: GET
    params:
      providerCode: '{providerCode}'
      terminalId: '{terminalId}'
- name: account_debit
  endpoint:
    path: /api/v1/accountdebit/transactions
    method: POST
    data_selector: object
- name: transaction_requery
  endpoint:
    path: /api/v1/transaction-requery
    method: GET
    data_selector: object
- name: provider_balance
  endpoint:
    path: /payments/provider/balance
    method: GET
    params:
      providerCode: providerCode
      terminalId: terminalId
- name: Get Offer - ILS Call to Providers
  endpoint:
    path: /get-offer-ils-call-to-providers
    method: POST
- name: transaction_requery
  endpoint:
    path: /api/v1/accountdebit/transactions
    method: GET
    params:
      transactionId: '{transaction_id}'
- name: get_offer_ils_call_to_providers
  endpoint:
    path: /get-offer-ils-call-to-providers
    method: POST
- name: transactions
  endpoint:
    path: /api/v1/accountdebit/transactions
    method: GET
- name: Get Provider Balance
  endpoint:
    path: /get-provider-balance
    method: GET
- name: Generate Token
  endpoint:
    path: /generate-token
    method: POST
- name: balance_enquiry
  endpoint:
    path: /api/v1/accountdebit/balance
    method: GET
    params:
      account_number: string
- name: account_debit_balance
  endpoint:
    path: /api/v1/accountdebit/balance
    method: GET
- name: generate_token_single
  endpoint:
    path: /cardless-service/api/v1/cardless-services/tokens
    method: POST
- name: send_offers
  endpoint:
    path: /lending-service/api/v1/offers/{offerRequestReference}/send-offers
    method: POST
- name: get_offer
  endpoint:
    path: /cardless-service/api/v1/cardless-services/tokens
    method: POST
    data_selector: object
- name: send_offers
  endpoint:
    path: /offers/offerRequestReference/send-offers
    method: POST
- name: get_customer_transaction_records
  endpoint:
    path: /get-customer-transaction-records
    method: GET
- name: cancel_token
  endpoint:
    path: /cardless-service/api/v1/cardless-services/cancel-token
    method: POST
    params:
      referenceId: '12345673489012'
      frontEndPartner: '455'
- name: generate_token
  endpoint:
    path: /generate-token
    method: POST
- name: cancel_token
  endpoint:
    path: /cancel-token
    method: POST
- name: get_token_status
  endpoint:
    path: /get-token-status-single
    method: GET
- name: customer_transaction_records
  endpoint:
    path: /customer-details/transactions/{offerRequestReference}
    method: GET
    data_selector: json
    params:
      offerRequestReference: MIG1234567
- name: customer_details_transactions
  endpoint:
    path: /api/v1/customer-details/transactions/MIG1234567
    method: GET
    data_selector: data
    params:
      offerRequestReference: MIG1234567
- name: get_token_status
  endpoint:
    path: /cardless-service/api/v1/cardless-services/batch-status/comprehensive
    method: GET
    data_selector: object
    params:
      referenceId: '54321'
      frontEndPartner: '455'
- name: batch_status
  endpoint:
    path: /cardless-service/api/v1/cardless-services/batch-status/comprehensive
    method: GET
    params:
      referenceId: '54321'
      frontEndPartner: '455'
- name: generate_token_bulk
  endpoint:
    path: /cardless-service/api/v1/cardless-services/batch-token
    method: POST
- name: get_token_status_single
  endpoint:
    path: /cardless-services/batch-token
    method: POST
    data_selector: none
    params: {}
- name: bulk_paycode_batch_status
  endpoint:
    path: /bulk-paycode-batch-status
    method: GET
    data_selector: none
    params: {}
- name: Value Financing Transaction Notification
  endpoint:
    path: /value-financing-transaction-notification-1
    method: POST
    params:
      requestCode: '00'
      requestMessage: Successful
      loanId: ILS08492
      customerId: '23408053012121'
      loanStatus: OPEN
      amount: null
      transactionId: '739374884937283937'
      transactionReference: FBN|WEB|ILS|20170503121143|8903
      paymentDate: '2017-06-12T11:46:15Z'
- name: bulk_paycode_batch_status
  endpoint:
    path: /bulk/tokens/comprehensive/status
    method: GET
    data_selector: json
    params:
      referenceId: required
      frontEndPartner: required
- name: bulk_token_status
  endpoint:
    path: /bulk/tokens/comprehensive/status
    method: GET
    params:
      referenceId: referenceId
      frontEndPartner: frontEndPartner
- name: customer_transaction_records
  endpoint:
    path: /reference/get-customer-transaction-records
    method: GET
- name: provider_balance
  endpoint:
    path: /reference/get-provider-balance
    method: GET
- name: bulk_token_batch_cancel
  endpoint:
    path: /cardless-service/api/v1/cardless-services/cancel-batch
    method: POST
    data_selector: json
    params:
      referenceId: '54321010678827'
      frontEndPartner: '455'
- name: bulk_paycode_batch_status
  endpoint:
    path: /bulk-paycode-batch-status
    method: GET
- name: get_active_suppliers
  endpoint:
    path: /get-active-suppliers
    method: GET
- name: provider_balance
  endpoint:
    path: /lending-service/api/v1/payments/provider/balance
    method: GET
    params:
      providerCode: string
      terminalId: string
- name: active_suppliers
  endpoint:
    path: /suppliers/active
    method: GET
    params:
      pageNumber: string
      pageSize: string
      supperlierName: string
- name: Get Provider Balance
  endpoint:
    path: /payments/provider/balance
    method: GET
    params:
      providerCode: providerCode
      terminalId: terminalId
- name: active_suppliers
  endpoint:
    path: /suppliers/active
    method: GET
- name: active_suppliers_product_list
  endpoint:
    path: /suppliers/products/active
    method: GET
- name: Get Offer - ILS Call to Providers
  endpoint:
    path: /get-offer-ils-call-to-providers
    method: POST
- name: active_suppliers_product_list
  endpoint:
    path: /suppliers/active/products
    method: GET
    data_selector: data
    params:
      productName: string
      sortBy: string
- name: offers
  endpoint:
    path: /get-offer-ils-call-to-providers
    method: POST
    data_selector: offers
- name: active_suppliers
  endpoint:
    path: /suppliers/active/products
    method: GET
- name: all_supplier_stores
  endpoint:
    path: /suppliers/all/stores
    method: GET
- name: Get Provider Balance
  endpoint:
    path: /reference/get-provider-balance
    method: GET
- name: Generate Token [single]
  endpoint:
    path: /reference/generate-token
    method: POST
- name: supplier_stores
  endpoint:
    path: /suppliers/{supplierId}/stores
    method: GET
    data_selector: data
- name: generate_token
  endpoint:
    path: /cardless-service/api/v1/cardless-services/tokens
    method: POST
    data_selector: response
- name: Get Supplier Closest Store
  endpoint:
    path: /suppliers/1/stores
    method: GET
- name: generate_token_single
  endpoint:
    path: /cardless-services/tokens
    method: POST
- name: cancel_token_single
  endpoint:
    path: /cancel-token
    method: POST
- name: supplier_closest_store
  endpoint:
    path: /suppliers/stores/get-closest-stores
    method: POST
    data_selector: data
    params:
      filterId: 4
      filterType: CATEGORY
      maxNoOfStores: 4
- name: get_closest_stores
  endpoint:
    path: /suppliers/stores/get-closest-stores
    method: POST
    data_selector: response
    params: {}
- name: cancel_token
  endpoint:
    path: /cardless-service/api/v1/cardless-services/cancel-token
    method: POST
    data_selector: object
    params:
      referenceId: '12345673489012'
      frontEndPartner: '455'
- name: distributor_products
  endpoint:
    path: /distributors/products
    method: GET
    data_selector: data.list
    params:
      pageNumber: string
      pageSize: string
      supplierMarketplaceUrl: string
- name: cancel_token
  endpoint:
    path: /cardless-services/cancel-token
    method: POST
    data_selector: object
- name: get_token_status
  endpoint:
    path: /get-token-status-single
    method: GET
    data_selector: object
- name: generate_token
  endpoint:
    path: /generate-token
    method: POST
    data_selector: object
- name: get_token_status
  endpoint:
    path: /cardless-service/api/v1/cardless-services/batch-status/comprehensive
    method: GET
    params:
      referenceId: '54321'
      frontEndPartner: '455'
- name: distributors_products
  endpoint:
    path: /distributors/products
    method: GET
- name: supplier
  endpoint:
    path: /retail-ecosystem/api/v1/products
    method: GET
    params:
      supplierId: string
- name: bulk_token_batch_cancel
  endpoint:
    path: /cardless-service/api/v1/cardless-services/batch-status/comprehensive
    method: GET
    params:
      referenceId: '54321'
      frontEndPartner: '455'
- name: generate_token_bulk
  endpoint:
    path: /cardless-service/api/v1/cardless-services/batch-token
    method: POST
- name: distributor_products
  endpoint:
    path: /products
    method: GET
    params:
      pageSize: Page size(pagination)
- name: product_by_id
  endpoint:
    path: /product/by/id
    method: GET
- name: product
  endpoint:
    path: /products/products/{productId}
    method: GET
    data_selector: data
    params:
      productId: int32
- name: get_token_status_single
  endpoint:
    path: /cardless-services/batch-token
    method: POST
    data_selector: Result
- name: bulk_paycode_batch_status
  endpoint:
    path: /bulk-paycode-batch-status
    method: GET
    data_selector: Result
- name: products
  endpoint:
    path: /products/products/110
    method: GET
- name: bulk_paycode_batch_status
  endpoint:
    path: /api/v1/pwm/bulk/tokens/comprehensive/status
    method: GET
    params:
      referenceId: required
      frontEndPartner: required
- name: product_categories
  endpoint:
    path: /retail-ecosystem/api/v1/product-categories
    method: GET
    data_selector: data
- name: bulk_token_status
  endpoint:
    path: /bulk/tokens/comprehensive/status
    method: GET
    params:
      referenceId: referenceId
      frontEndPartner: frontEndPartner
- name: product_categories
  endpoint:
    path: /product-categories
    method: GET
- name: add_item_to_cart
  endpoint:
    path: /cart-items
    method: POST
    data_selector: object
    params: {}
- name: customer_cart
  endpoint:
    path: /retail-ecosystem/api/v1/cart-items/customer-identifier/{customerIdentifier}
    method: GET
    data_selector: data
- name: Bulk Token Batch Cancel
  endpoint:
    path: /cardless-service/api/v1/cardless-services/cancel-batch
    method: POST
    params:
      referenceId: '54321010678827'
      frontEndPartner: '455'
- name: cart_items
  endpoint:
    path: /cart-items/customer-identifier
    method: GET
- name: bulk_paycode_batch_status
  endpoint:
    path: /bulk-paycode-batch-status
    method: GET
- name: get_active_suppliers
  endpoint:
    path: /get-active-suppliers
    method: GET
- name: update_cart_quantity
  endpoint:
    path: /retail-ecosystem/api/v1/cart-items/quantity
    method: PUT
- name: update_cart_quantity
  endpoint:
    path: /cart-items/quantity
    method: PUT
- name: delete_cart_item
  endpoint:
    path: /cart-items
    method: DELETE
- name: active_suppliers
  endpoint:
    path: /suppliers/active
    method: GET
    data_selector: data.list
    params:
      pageNumber: string
      pageSize: string
      supperlierName: string
- name: active_suppliers
  endpoint:
    path: /suppliers/active
    method: GET
- name: delete_cart_item
  endpoint:
    path: /retail-ecosystem/api/v1/cart-items/{cartId}
    method: DELETE
- name: cart_item
  endpoint:
    path: /cart-items/cartId
    method: DELETE
- name: active_suppliers_product_list
  endpoint:
    path: /retail-ecosystem/api/v1/suppliers/active/products
    method: GET
    data_selector: data
    params:
      productName: string
      sortBy: string
- name: clear_customer_cart
  endpoint:
    path: /cart-items/clear/{customerIdentifier}
    method: DELETE
- name: active_suppliers
  endpoint:
    path: /suppliers/active/products
    method: GET
- name: all_supplier_stores
  endpoint:
    path: /supplier/stores
    method: GET
- name: delete_cart_item
  endpoint:
    path: /cart-items/clear/customerIdentifier
    method: DELETE
- name: get_customer_address
  endpoint:
    path: /get-customer-address
    method: GET
- name: supplier_stores
  endpoint:
    path: /suppliers/{supplierId}/stores
    method: GET
    data_selector: data
- name: customer_address
  endpoint:
    path: /customer-addresses
    method: GET
    data_selector: data
    params:
      customerIdentifier: string
- name: Get Supplier Closest Store
  endpoint:
    path: /suppliers/1/stores
    method: GET
- name: customer_addresses
  endpoint:
    path: /customer-addresses
    method: GET
- name: countries
  endpoint:
    path: /countries
    method: GET
- name: countries
  endpoint:
    path: /customer-addresses/countries
    method: GET
    data_selector: data
- name: supplier_stores
  endpoint:
    path: /suppliers/stores/get-closest-stores
    method: POST
- name: customer_address
  endpoint:
    path: /customer-addresses/countries
    method: GET
- name: customer_address
  endpoint:
    path: /customer-addresses
    method: POST
- name: distributor_products
  endpoint:
    path: /distributors/products
    method: GET
    data_selector: data.list
    params:
      pageNumber: string
      pageSize: string
      supplierMarketplaceUrl: string
- name: customer_address
  endpoint:
    path: /customer-addresses
    method: POST
- name: countries
  endpoint:
    path: /countries
    method: GET
- name: distributors_products
  endpoint:
    path: /distributors/products
    method: GET
- name: delete_customer_address
  endpoint:
    path: /retail-ecosystem/api/v1/customer-addresses/{customerIdentifier}
    method: DELETE
- name: Get Supplier By Supplier Id
  endpoint:
    path: /retail-ecosystem/api/v1/products
    method: GET
    params:
      supplierId: string
- name: customer_address
  endpoint:
    path: /customer-addresses/1
    method: DELETE
- name: distributor_products
  endpoint:
    path: /products
    method: GET
    data_selector: object
- name: product_by_id
  endpoint:
    path: /product/{id}
    method: GET
    data_selector: object
- name: customer_address
  endpoint:
    path: /retail-ecosystem/api/v1/customer-addresses
    method: PUT
- name: product
  endpoint:
    path: /products/products/{productId}
    method: GET
    data_selector: data
    params:
      productId: int32
- name: customer_address
  endpoint:
    path: /customer-addresses
    method: PUT
- name: products
  endpoint:
    path: /products/products/110
    method: GET
- name: order_checkout
  endpoint:
    path: /orders/checkout
    method: POST
    data_selector: data.orderItems
    params: {}
- name: order_checkout
  endpoint:
    path: /orders/checkout
    method: POST
- name: initiate_order
  endpoint:
    path: /initiate-order
    method: POST
- name: product_categories
  endpoint:
    path: /product-categories
    method: GET
    data_selector: data
- name: product_categories
  endpoint:
    path: /product-categories
    method: GET
- name: initiate_order
  endpoint:
    path: /retail-ecosystem/api/v1/orders/initiate
    method: POST
    data_selector: object
    params:
      checkoutId: string
      customerIdentifier: string
      customerName: string
      customerPhoneNumber: string
      country: string
      paymentMethod: string
- name: add_item_to_cart
  endpoint:
    path: /cart-items
    method: POST
- name: order_checkout
  endpoint:
    path: /orders/initiate
    method: POST
- name: get_initiated_order_by_checkout_id
  endpoint:
    path: /get-initiated-order-by-checkout-id
    method: GET
- name: cart_items
  endpoint:
    path: /cart-items
    method: POST
- name: customer_cart
  endpoint:
    path: /customer-cart
    method: GET
- name: initiated_order
  endpoint:
    path: /retail-ecosystem/api/v1/orders/checkout/{checkoutId}
    method: GET
    data_selector: data
    params:
      checkoutId: string
- name: customer_cart
  endpoint:
    path: /retail-ecosystem/api/v1/cart-items/customer-identifier/{customerIdentifier}
    method: GET
- name: order_summary
  endpoint:
    path: /orders/checkout/checkoutId
    method: GET
- name: cart_items
  endpoint:
    path: /cart-items/customer-identifier
    method: GET
- name: order_summary
  endpoint:
    path: /retail-ecosystem/api/v1/orders/checkout/{checkoutId}/summary
    method: GET
    data_selector: data
- name: update_cart_quantity
  endpoint:
    path: /retail-ecosystem/api/v1/cart-items/quantity
    method: PUT
- name: get_initiated_order_by_checkout_id
  endpoint:
    path: /orders/checkout/checkoutId/summary
    method: GET
- name: get_orders
  endpoint:
    path: /orders
    method: GET
- name: cart_items
  endpoint:
    path: /cart-items/quantity
    method: PUT
- name: customer_cart
  endpoint:
    path: /customer-cart
    method: GET
- name: delete_cart_item
  endpoint:
    path: /delete-cart-item
    method: DELETE
- name: delete_cart_item
  endpoint:
    path: /retail-ecosystem/api/v1/cart-items/{cartId}
    method: DELETE
    data_selector: object
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: data.list
    params:
      customerIdentifier: string
      distributorId: string
      supplierId: string
      checkoutId: string
      storeOrderId: string
      productUniqueIdentifier: string
      storeId: string
      productName: string
      customerName: string
      customerEmail: string
      customerPhoneNumber: string
      city: string
      state: string
      country: string
      orderStatus: string
      distributorOrderStatus: string
      orderStatusIsNot: string
      paymentStatus: string
      startDate: string
      endDate: string
- name: cart_item
  endpoint:
    path: /cart-items/cartId
    method: DELETE
- name: order_summary
  endpoint:
    path: /orders
    method: GET
    params:
      distributorId: The ID of the distributor
- name: clear_customer_cart
  endpoint:
    path: /retail-ecosystem/api/v1/cart-items/clear/{customerIdentifier}
    method: DELETE
- name: access_token
  endpoint:
    path: /passport/oauth/token
    method: POST
    data_selector: access_token
    params:
      grant_type: client_credentials
- name: delete_cart_item
  endpoint:
    path: /cart-items/clear/customerIdentifier
    method: DELETE
- name: get_customer_address
  endpoint:
    path: /get-customer-address
    method: GET
- name: customer_address
  endpoint:
    path: /customer-addresses
    method: GET
    data_selector: data
    params:
      customerIdentifier: string
- name: credit_inquiry_request
  endpoint:
    path: /transfers/inquiries/credit
    method: POST
    data_selector: response
    params: {}
- name: customer_addresses
  endpoint:
    path: /customer-addresses
    method: GET
- name: countries
  endpoint:
    path: /countries
    method: GET
- name: credit_inquiry
  endpoint:
    path: /inquiries/credit
    method: POST
    data_selector: object
    params: {}
- name: countries
  endpoint:
    path: /customer-addresses/countries
    method: GET
    data_selector: data
- name: account_credit_request
  endpoint:
    path: /transfers/accounts/credits/completion
    method: POST
    data_selector: response
    params: {}
- name: credit_inquiry_request
  endpoint:
    path: /accounts/credits/completion
    method: POST
    data_selector: object
- name: requery_transfer_request
  endpoint:
    path: /requery-transfer-request
    method: POST
    data_selector: object
- name: customer_addresses
  endpoint:
    path: /customer-addresses/countries
    method: GET
- name: get_customer_address
  endpoint:
    path: /get-customer-address
    method: GET
- name: create_customer_address
  endpoint:
    path: /create-customer-address
    method: POST
- name: delete_customer_address
  endpoint:
    path: /delete-customer-address
    method: DELETE
- name: update_customer_address
  endpoint:
    path: /update-customer-address
    method: PUT
- name: customer_address
  endpoint:
    path: /customer-addresses
    method: POST
- name: requery_transfer_request
  endpoint:
    path: /transfers/accounts/credits/requery
    method: POST
    data_selector: response
    params: {}
- name: account_credit_request
  endpoint:
    path: /transfers/accounts/credits/requery
    method: POST
    data_selector: object
- name: customer_addresses
  endpoint:
    path: /customer-addresses
    method: POST
- name: countries
  endpoint:
    path: /countries
    method: GET
- name: customer_address
  endpoint:
    path: /customer-address
    method: GET
- name: customer_address
  endpoint:
    path: /retail-ecosystem/api/v1/customer-addresses/{customerIdentifier}
    method: DELETE
- name: list_of_receiving_institutions
  endpoint:
    path: /transfers/institutions
    method: GET
    data_selector: institutions
- name: customer_address
  endpoint:
    path: /customer-addresses/1
    method: DELETE
- name: requery_transfer_request
  endpoint:
    path: /transfers/institutions
    method: GET
- name: customer_address
  endpoint:
    path: /retail-ecosystem/api/v1/customer-addresses
    method: PUT
- name: refund
  endpoint:
    path: /dispute/refund
    method: POST
- name: customer_address
  endpoint:
    path: /customer-addresses
    method: PUT
- name: dispute_refund
  endpoint:
    path: /dispute/refund
    method: POST
    data_selector: default
    params: {}
- name: customerReferenceLookup
  endpoint:
    path: /v1/payment/customerReferenceLookup
    method: POST
- name: order_checkout
  endpoint:
    path: /orders/checkout
    method: POST
    data_selector: object
    params: {}
- name: customerReferenceLookup
  endpoint:
    path: /payment/customerReferenceLookup
    method: POST
- name: requery_payment
  endpoint:
    path: /v1/payment/requery
    method: GET
- name: order_checkout
  endpoint:
    path: /orders/checkout
    method: POST
- name: initiate_order
  endpoint:
    path: /initiate-order
    method: POST
- name: payment_requery
  endpoint:
    path: /v1/payment/requery
    method: POST
    data_selector: default
    params: {}
- name: payment_notification
  endpoint:
    path: /v1/payment/paymentNotification
    method: POST
- name: initiate_order
  endpoint:
    path: /orders/initiate
    method: POST
    data_selector: object
    params:
      checkoutId: string
      customerIdentifier: string
      customerName: string
      customerPhoneNumber: string
      country: string
      paymentMethod: string
- name: order_checkout
  endpoint:
    path: /orders/initiate
    method: POST
- name: get_initiated_order_by_checkout_id
  endpoint:
    path: /get-initiated-order-by-checkout-id
    method: GET
- name: payment_info
  endpoint:
    path: /v1/payment/paymentInfo
    method: GET
- name: initiated_order_by_checkout_id
  endpoint:
    path: /retail-ecosystem/api/v1/orders/checkout/{checkoutId}
    method: GET
    data_selector: data
- name: paymentInfo
  endpoint:
    path: /v1/payment/paymentInfo
    method: POST
- name: get_order_summary_by_checkout_id
  endpoint:
    path: /orders/checkout/checkoutId
    method: GET
- name: userStatus
  endpoint:
    path: /v1/payment/userStatus
    method: post
- name: userStatus
  endpoint:
    path: /v1/payment/userStatus
    method: POST
    data_selector: default
    params: {}
- name: deepLinks
  endpoint:
    path: /v1/payment/deepLinks
    method: GET
- name: get_initiated_order_by_checkout_id
  endpoint:
    path: /orders/checkout/checkoutId/summary
    method: GET
- name: get_orders
  endpoint:
    path: /orders
    method: GET
- name: deepLinks
  endpoint:
    path: /payment/deepLinks
    method: GET
- name: userStatus
  endpoint:
    path: /payment/userStatus
    method: POST
- name: activation
  endpoint:
    path: /payment/activation
    method: POST
- name: orders
  endpoint:
    path: /orders
    method: GET
    params:
      customerIdentifier: string
      distributorId: string
      supplierId: string
      checkoutId: string
      storeOrderId: string
      productUniqueIdentifier: string
      storeId: string
      productName: string
      customerName: string
      customerEmail: string
      customerPhoneNumber: string
      city: string
      state: string
      country: string
      orderStatus: string
      distributorOrderStatus: string
      orderStatusIsNot: string
      paymentStatus: string
      startDate: string
      endDate: string
- name: payment_activation
  endpoint:
    path: /v1/payment/activation
    method: POST
- name: payment_activation
  endpoint:
    path: /v1/payment/activation
    method: POST
- name: order_summary
  endpoint:
    path: /orders
    method: GET
    params:
      distributorId: The ID of the distributor
- name: Get Refund
  endpoint:
    path: /reference/get-refund
    method: GET
- name: Get Refund Info
  endpoint:
    path: /reference/get-refund-info
    method: GET
- name: Create Refund Transaction
  endpoint:
    path: /reference/create-refund-transaction
    method: POST
- name: Authentication API
  endpoint:
    path: /passport/oauth/token
    method: POST
- name: refund
  endpoint:
    path: /refund
    method: POST
- name: Get Access Token
  endpoint:
    path: /reference/generate-access-token
    method: POST
- name: Get Transactions
  endpoint:
    path: /reference/get-transactions
    method: GET
- name: credit_inquiry
  endpoint:
    path: /transfers/inquiries/credit
    method: POST
- name: access_token
  endpoint:
    path: /post_passport-oauth-token
    method: POST
- name: credit_inquiry
  endpoint:
    path: /inquiries/credit
    method: POST
    data_selector: response
    params: {}
- name: transaction_groups
  endpoint:
    path: /api/v1/transactions/groups
    method: GET
    params:
      pageNum: 1
      pageSize: 100
- name: account_credit_request
  endpoint:
    path: /transfers/accounts/credits/completion
    method: POST
    data_selector: response
    params: {}
- name: transactions_groups
  endpoint:
    path: /transactions/groups
    method: GET
- name: credit_inquiry_request
  endpoint:
    path: /accounts/credits/completion
    method: POST
- name: requery_transfer_request
  endpoint:
    path: /requery-transfer-request
    method: POST
- name: transaction_types
  endpoint:
    path: /arbiter/api/v1/transaction-types
    method: GET
    data_selector: content
    params:
      pageNum: 1
      pageSize: 100
- name: requery_transfer_request
  endpoint:
    path: /transfers/accounts/credits/requery
    method: POST
    data_selector: object
- name: transaction_types
  endpoint:
    path: /transaction-types
    method: GET
    data_selector: object
    params:
      pageNum: 0
      pageSize: 100
- name: account_credit_request
  endpoint:
    path: /transfers/accounts/credits/requery
    method: POST
    data_selector: object
- name: transactions
  endpoint:
    path: /api/v1/transactions/groups/{transaction_group}/channels/{channel}
    method: GET
    params:
      startDate: string
      endDate: string
- name: transactions
  endpoint:
    path: /transactions/groups/transaction_group/channels/channel
    method: GET
- name: list_of_receiving_institutions
  endpoint:
    path: /transfers/institutions
    method: GET
    data_selector: institutions
    params: {}
- name: requery_transfer_request
  endpoint:
    path: /transfers/institutions
    method: GET
- name: get_transaction
  endpoint:
    path: /arbiter/api/v1/transactions/types/{transaction_type}/references/{reference}
    method: GET
    params: {}
- name: refund
  endpoint:
    path: /dispute/refund
    method: POST
- name: dispute_refund
  endpoint:
    path: /dispute/refund
    method: POST
    data_selector: default
    params: {}
- name: transaction_types
  endpoint:
    path: /transactions/types/transaction_type/references/reference
    method: GET
- name: customer_reference_lookup
  endpoint:
    path: /v1/payment/customerReferenceLookup
    method: POST
- name: dispute_categories
  endpoint:
    path: /arbiter/api/v1/disputes/categories
    method: GET
    data_selector: ''
- name: customerReferenceLookup
  endpoint:
    path: /customerReferenceLookup
    method: POST
    data_selector: default
    params: {}
- name: dispute_categories
  endpoint:
    path: /disputes/categories
    method: GET
- name: requery_payment
  endpoint:
    path: /v1/payment/requery
    method: POST
- name: payment_requery
  endpoint:
    path: /payment/requery
    method: POST
    data_selector: default
    params: {}
- name: payment_notification
  endpoint:
    path: /v1/payment/paymentNotification
    method: POST
- name: payment_notification
  endpoint:
    path: /payment/paymentNotification
    method: POST
- name: payment_info
  endpoint:
    path: /v1/payment/paymentInfo
    method: GET
- name: paymentInfo
  endpoint:
    path: /v1/payment/paymentInfo
    method: POST
- name: paymentNotification
  endpoint:
    path: /v1/payment/paymentNotification
    method: POST
- name: userStatus
  endpoint:
    path: /v1/payment/userStatus
    method: POST
- name: user_status
  endpoint:
    path: /v1/payment/userStatus
    method: POST
- name: userStatus
  endpoint:
    path: /payment/userStatus
    method: POST
    data_selector: default
- name: deepLinks
  endpoint:
    path: /v1/payment/deepLinks
    method: GET
- name: deepLinks
  endpoint:
    path: /v1/payment/deepLinks
    method: GET
- name: payment_activation
  endpoint:
    path: /v1/payment/activation
    method: POST
- name: payment_activation
  endpoint:
    path: /payment/activation
    method: POST
    data_selector: default
- name: Get Refund
  endpoint:
    path: /reference/get-refund
    method: GET
- name: Get Transactions
  endpoint:
    path: /reference/get-transactions
    method: GET
- name: Get Transaction Status
  endpoint:
    path: /reference/get-transaction-status
    method: GET
- name: Get Invoice Details
  endpoint:
    path: /reference/get-invoice-details
    method: GET
- name: Get Active Suppliers
  endpoint:
    path: /reference/get-active-suppliers
    method: GET
- name: refund
  endpoint:
    path: /v1/payment/refund
    method: POST
- name: Get Active Suppliers
  endpoint:
    path: /reference/get-active-suppliers
    method: GET
- name: Get Transactions
  endpoint:
    path: /reference/get-transactions
    method: GET
- name: payment_activation
  endpoint:
    path: /v1/payment/activation
    method: POST
- name: transaction_groups
  endpoint:
    path: /arbiter/api/v1/transactions/groups
    method: GET
    data_selector: records
    params:
      pageNum: '1'
      pageSize: '100'
- name: transactions_groups
  endpoint:
    path: /transactions/groups
    method: GET
- name: transaction_types
  endpoint:
    path: /arbiter/api/v1/transaction-types
    method: GET
    data_selector: content
    params:
      pageNum: '1'
      pageSize: '100'
- name: transaction_types
  endpoint:
    path: /transaction-types
    method: GET
    data_selector: records
    params:
      pageNum: 0
      pageSize: 100
- name: transactions
  endpoint:
    path: /arbiter/api/v1/transactions/groups/{transaction_group}/channels/{channel}
    method: GET
    params:
      startDate: yyyy-MM-dd HH:mm:ss
      endDate: yyyy-MM-dd HH:mm:ss
- name: transaction_group
  endpoint:
    path: /arbiter/api/v1/transactions/groups/transaction_group/channels/channel
    method: GET
- name: get_transaction
  endpoint:
    path: /arbiter/api/v1/transactions/types/{transaction_type}/references/{reference}
    method: GET
- name: transaction_references
  endpoint:
    path: /transactions/types/transaction_type/references/reference
    method: GET
- name: dispute_categories
  endpoint:
    path: /arbiter/api/v1/disputes/categories
    method: GET
    data_selector: categories
    params: {}
- name: dispute_categories
  endpoint:
    path: /disputes/categories
    method: GET
notes:
- Please note that this instruction is only applicable to endpoints that use Oauth
  as their authentication method.
- Create a free business account where you can test your APIs.
- You will see some keys, below we explain what each of those keys represent and how
  to use them effectively.
- Nonce must be a uniquely generated value for each request and must not be repeated.
- CLIENT_ID and SECRET_KEY can be obtained from your dashboard.
- For a newly created account, or an account that has completed the KYC process, the
  Quickteller Business dashboard opens on the Get Started page, in Test mode, where
  the business owner is prompted to complete their onboarding in order to activate
  their account and move to Live mode.
- The Request to go Live button triggers an approval process by Interswitch for you
  to begin processing transactions using the API service requested.
- You can begin using default test credentials designed for simulation in a safe environment.
- You'll need to generate integration credentials for live, production-level payment
  processing.
- Integration credentials are sensitive information. Keep them secure, and do not
  share them with anyone.
- To go live, change src value to 'https://newwebpay.interswitchng.com/inline-checkout.js'
- To go live for web redirect, change post URL to 'https://newwebpay.interswitchng.com/collections/w/pay'
- To go live, change the src value for inline checkout script to 'https://newwebpay.interswitchng.com/inline-checkout.js'
- To go live, change post URL for web redirect to 'https://newwebpay.interswitchng.com/collections/w/pay'
- To go live, change src value to 'https://wmu.interswitchng.com/inline-checkout.js'
- To go live, change post URL to 'https://wmu.interswitchng.com/collections/w/pay'
- You must have a PCI DSS compliance certificate to use the Card Payments API.
- Ensure the names of your dependencies are correctly spelt, else you would get an
  error when building.
- If you get clashes between newer android library versions and support versions,
  add in 'android.enableJetifier=true' to your 'gradle.properties' file, and rebuild.
- Be sure to catch the NotConfiguredException which will occur when the terminal has
  not been configured
- Be sure to confirm the status of the transaction from the responseCode string. Any
  code other than '00' is a failure.
- Be sure to catch the NotConfiguredException which will occur when the terminal has
  not been configured.
- Be sure to end your string data with a new line escape character, else the string
  data from the next print object will simply start from where the previous one ended.
- Be sure to add these rules, else the app crashes at runtime because the needed classes
  may have been removed during code shrinking.
- You must have a Google Pay account set up on your Android device in order to use
  Google Pay on Interswitch Payment Gateway.
- This endpoint is used to check status of transaction after completion of payment
  on Opay website.
- It is compulsory to collect device information from the user's browser and include
  it in the payment request.
- You can redirect the customer to your own URL after authentication by specifying
  your callbackUrl in the original purchase call.
- Use production URL for actual transactions.
- Hosted Fields render a secure iframe on your checkout page that handles all sensitive
  payment information.
- Payment options can be used for both dynamic and static transactions.
- Webhook integration is available for instant notifications on transaction status.
- Requires setup of connected app for authentication.
- Requires valid authorization token for each request
- To request a POS device, you must be a registered Quickteller Business user.
- The devices allow businesses to accept a wider range of payment methods, which can
  lead to increased sales.
- The devices make it easy and convenient for customers to pay for their purchases,
  which can lead to improved customer service.
- The devices are easy to use and require minimal training.
- We offer 24/7 customer support to help you with any questions or problems with your
  POS device.
- Must confirm the amount returned by the server matches the original transaction
  amount before giving value.
- Webhook messages are hashed with the HmacSHA512 algorithm.
- Webhook messages are hashed with HmacSHA512 for security.
- Return a 200 HTTP response to every message received.
- These cards are for test purposes only, and will be used to test accept payments
  check-out, hosted fields etc.
- To start accepting TSA payments, register an account on Quickteller Business.
- Contact merchantservices@interswitchgroup.com to get your unique alias for your
  TSA transactions.
- Uses OAuth2
- The settlement module displays an overview of the merchant’s due settlement.
- Reports can also be filtered to drill down to a specific account or a particular
  date/date range.
- Integration with Interswitch is free for businesses of all sizes.
- Webhook URLs aren’t supported in the test environment.
- You can make a bill payment using the following easy steps
- Supports various billers for utility payments
- Uses Payment Items — allows inquiries and retries
- 'UsesPaymentItems: true'
- 'PerformInquiry: true'
- 'AllowRetry: true'
- Uses OAuth2 with refresh token — requires setup of connected app in api
- All products have a surcharge associated with them.
- Contact support@interswitchng.com for any inquiries.
- Uses PaymentItems for transactions
- Allows retry for failed transactions
- Uses Payment Items
- Allows Retry
- Use the amount and amountType fields returned in the validate customer response
  to determine the expected amount to be paid by the customer.
- ResponseCode '90000' indicates a successful operation.
- The category for airtime recharge should have the category ID as 3.
- customer_id field should be the phone number to be recharged.
- Requires passing the required path parameter - billerId
- If the transaction is successful, a virtual card tied to your account is debited
- Pay attention to the amount and amount Type fields returned in the validate customer
  response.
- Requires setup of terminal ID for requests
- These features are only available for businesses in Nigeria
- This API implements the SOAP style.
- This service enables withdrawals from POS agents.
- This is a wallet to wallet transfer service
- This should be done every 24 hours.
- DUKPT generates a new key per transaction.
- Please ensure that the KSN value you’re passing into the transaction payload is
  the Hexadecimal value of the KSN counter used to generate the Pinblock.
- Uses DUKPT for key generation
- API requires setup of connected app.
- Some features may require additional configurations.
- Requires Bearer token for authorization
- Requires setup of connected app in api
- Uses OAuth2 with Bearer token for authorization
- This product enables third-party lending providers with the capability to digitize
  salary loan processing for their customers.
- Gains insights to customer attributes such as average account balance, total count
  and amount of credit and debit transactions on a month on month basis
- This provides financial history, in addition to average values over the period.
- This endpoint gives you valuable insights to the spending behaviour and patterns
  of an individual.
- We recommend that the `ttid` and `transactionRef` have the same value.
- Bulk Paycode integration is also achievable through APIs.
- We recommend that the ttid and transactionRef have the same value.
- The request mac is generated by concatenating specific attributes and generating
  an HMAC using the shared private key.
- The response mac is generated by concatenating specific attributes and generating
  an HMAC using the shared private key.
- Ensure to include all required attributes in the request
- 'Make sure to read the following information since you''ll probably encounter it
  in this section: Auth and MAC Generation, Response Code, Understanding Dual Messaging,
  Terminal Type, Additional Fields.'
- Ensure to read the information about Auth and MAC Generation, Response Code, Additional
  Fields, and Terminal Type.
- 'Make sure to read the following information since you''ll probably encounter it
  in this section: Auth and MAC Generation, Response Code, Additional Fields, Terminal
  Type.'
- Make sure to read the following information since you'll probably encounter it in
  this section.
- The request mac is generated by concatenating the attributes in a specific order
  and generating an HMAC.
- Make sure to read the following information since you'll probably encounter it in
  this section
- Disputes can also be raised and managed for TS transactions on ISW's Arbiter 2.0
  platform.
- The endpoint paths to be created must precisely match the path specified in the
  API specification section.
- The Access token expires in the time returned by the expires_in value in the response.
  This value is in seconds.
- The API allows for custom queries, enabling you to search for transactions based
  on a variety of parameters.
- We are working towards 100% Coverage for all Processing that happens on the Interswitch
  Network.
- It is important to note that we have not reached 100% coverage YET for all Transactions.
- First Call leave cursor blank
- Your CLIENT_ID and SECRET_KEY can be gotten from your Interswitch Developer console
  profile.
- Page Size cannot be greater than 20
- This can be done by providing the public key and the card data.
- An anonymous card can be created and then later assigned to a customer.
- A client needs to be configured on Passport and have their client ID and secret
  generated.
- A bearer token can be obtained from Interswitch's Passport API by calling the token
  URL.
- An anonymous card can be created and then later assigned to a customer. To create
  an anonymous card the isAnonymous parameter must be set to true.
- Fetch Prepared Cards API requires authentication
- Initiate Card Data Prep
- This API initiates a card data preparation request for multiple cards.
- Uses OAuth2 for authentication
- This API handles retries for bulk card production and data prep requests, with the
  same parameters and request body that was sent originally.
- Ensure to follow the authentication process as outlined in the documentation.
- Before this API is integrated, the customer (bank) will need to generate an RSA
  key pair for PIN encryption.
- API Documentation available at Interswitch Developer Documentation
- This API only changes the online PIN of the card.
- If Pregenerated PAN is provided for a card request, the service will attempt to
  create the card using the provided PAN. However, If PAN is not provided, Postcard
  CMS will automatically generate a Card PAN to create the card.
- Authorization requires Bearer Token
- Request is routed through Postilion Service or Postcard CMS based on isActiveActive
  parameter.
- Authorization = Bearer Token
- Authorization requires a Bearer token.
- Requires setup of connected app in Interswitch
- This API handles requests to unblock both Debit and Prepaid Cards either through
  Active Active (Postilion) or Non Active Active(Postcard CMS).
- Returns 'YES' if the Account Balance is sufficient.
- Request is routed through Postilion Service if isActiveActive is true.
- Returns 'YES' if the Card Balance of the Prepaid Card is sufficient.
- Requires Issuer Number, PAN, Card Sequence Number, and Expiry Date.
- This endpoint is protected and only accessible to clients with the authority to
  view balance.
- This API only validates an active card
- Client must be onboarded on Passport to obtain a username and password for authentication.
- Additional permissions are required to access APIs for checking card balances.
- The encryption and decryption of the PIN is done using an RSA key pair, where the
  public key encrypts the PIN and the private key performs the decryption.
- 'Implementation Prerequisites: JDK 8+; Import org.bouncycastle jar or Maven dependency
  compatible with your JDK.'
- This API handles requests to fetch single card by PAN, Issuer Number, Sequence Number
  and Expiry Date.
- In addition to the card details returned by the /fetchCardByAccount endpoint, the
  card details returned in this endpoint include the expiry date and sequence number.
- You can make an API call to get the list of institutions that exist on a particular
  payout channel.
- Response received from terminal must be a fully valid xml, as partial response or
  broken xml will not be accepted. Terminal might send the response in pieces sometimes.
  A proper logic should be done to concatenate these responses together as a second
  response is a continuation from the first.
- To access the APIs in this service, the client must first be onboarded on Passport
  during which a username and password will be obtained for authentication.
- The transaction would be completed on the POS as the customer would be prompted
  to key in his / her Paycode and transaction would be sent upstream for approval
  and a response is returned.
- The encryption and decryption of the PIN is done using an RSA key pair.
- Requires setup of connected app in Interswitch API
- Heartbeat Feature
- This documentation offers a comprehensive guide on connection setup, transaction
  commands, additional features, POS integration & device pairing, and installation
  guidelines.
- The heartbeat helps detect any disconnection or downtime in real time.
- 'Serial Port Configuration: COM9, BAUDE RATE: 112500, DATA BIT: 8, PARITY: NONE,
  HANDSHAKE: OFF, MODE: FREE'
- This would only work when the transaction is not being processed yet or when pin
  entry is not active.
- Response received from terminal must be a fully valid xml, as partial response or
  broken xml will not be accepted.
- Terminal might send the response in pieces sometimes. A proper logic should be done
  to concatenate these responses together as a second response is a continuation from
  the first.
- Till must receive valid xml response from terminal (with proper opening and closing
  tags)
- Till should display transaction message whether approved or declined.
- Till must receive response for each transaction.
- Proper end to end test must be done Internally with Interswitch before Go-Live.
- Paycode Transaction Command is used for processing payments.
- 'Single Terminal per Till: Only one terminal (POS) can be connected per till when
  using Bluetooth.'
- 'Browser Dependency: Completely closing your browser will disconnect the communication
  between your device and the POS terminal.'
- 'Re-establishing Connections: If the Bluetooth connection is lost—due to turning
  off Bluetooth or restarting a device—the WebSocket connection must be re-established
  to resume communication.'
- Transaction will be completed on the POS as the customer would be prompted to key
  in his / her card.
- Transaction would be completed on the POS as the customer would be prompted to use
  in his / her mobile banking application to scan the QR code printed on the POS receipt.
- The mobile SDK allows you to integrate directly into your mobile app, our payments
  collection functionality.
- Uses IswSdkConfig for configuration
- Environment defaults to TEST
- The Modulus and Public Exponent will be supplied by Interswitch. please ask for
  one
- This section provides step-by-step instructions for installing the necessary software
  packages, including the Kimono and USBDriver APKs.
- We allow your customers enjoy the same payment options and experiences that they
  do on our web channel.
- Create virtual cards for your merchants and consumers to fund and make purchases
- Requires setup of connected app in API
- 'Authorization token format: Bearer <token>'
- Use Bearer token for authorization
- The URL for this request expired after 30 days.
- Defaults to kjsd313sjdsyegdie9322ssaud0004 for refundReference
- Defaults to 3207368 for parentPaymentId
- Defaults to PARTIAL for refundType
- Defaults to 10 for refundAmount
- Uses OAuth2 for authorization
- The 'Authorization' header requires a base64 encoded value of clientId and clientSecret.
- Defaults to bughunting005@gmail.com for username
- Defaults to password for password
- Authorization requires Bearer token
- Uses OAuth2 with bearer token.
- URL for this request expired after 30 days.
- Authorization header is required
- Uses OAuth2 Bearer token for authentication.
- This endpoint enables pin selection for an existing wallet
- This endpoint enables delete pin from the wallet generated
- This enables the user block cards on the wallet
- Only CLOSED loans are eligible for refunds (i.e. the customer’s loan has been fully
  repaid).
- This endpoint uses the Interswitch Auth
- Bearer token required for authorization
- Uses OAuth2 with Bearer token.
- Requires OAuth2 for authentication.
- Authorization token is required for requests
- API requires setup of connected app in api
- The transactionAmount to be credited is included in the request.
- If clientRef is absent in inquiry, transaction reference must be present in request.
errors:
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Recheck your authentication details'
- '404 Not Found: Check the endpoint path'
- 'S0: Indicates successful transaction initiation'
- 'NO_RESPONSE_RECEIVED: Authentication not yet completed'
- 'T0: Successful response'
- 'T1: NO_RESPONSE_RECEIVED'
- '00: Transaction successful'
- 'Pending: Transaction is still being processed'
- 'Failed: Transaction has failed'
- 'Invalid currencyCode: Ensure the currency code is correct'
- 'Transaction not found: Verify the transactionReference provided'
- 'Unauthorized: Check the authorization token'
- '200: Successful transaction'
- '400: Bad Request - Invalid parameters'
- '401: Unauthorized - Invalid credentials'
- '404: Not Found - Endpoint does not exist'
- '10500: This means an unexpected server error occured.'
- '10400: There was an issue creating the refund.'
- Return any HTTP response code other than 200 will cause Interswitch to retry up
  to 5 times.
- '60002: Refund amount greater than transaction amount'
- '10400: Error creating refund: This refund reference has already been used.'
- '10500: Error processing request, please try again.'
- '404: Transaction not found for merchant'
- '400: Error creating refund: refund amount greater than transaction amount'
- '500: Could not validate refund.'
- '10500: This means an unexpected server error occurred. You should always call the
  Get Refund Info endpoint to confirm the refund status before marking it as failed
  or successful'
- '10400: There was an issue creating the refund and the description would contain
  the exact reason why it failed.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check your request parameters for validity.'
- '404 Not Found: Ensure the endpoint is correct.'
- '500 Internal Server Error: Try again later.'
- 'ResponseCode: 90000 indicates a successful request'
- '90000: Success'
- Other error codes may be included in the API response.
- 'ResponseCode: 90000 indicates success'
- 'VS001: VOUCHER_NOT_FOUND'
- 'VS002: REDEMPTION_QUANTITY_EXCEEDED'
- 'VS003: VOUCHER_IS_USED'
- 'VS004: REDEMPTION_AMOUNT_EXCEEDED'
- 'VS006: UNRECOGNISED_VOUCHER'
- 'VS018: ACCESS_DENIED'
- 'VS020: VOUCHER_NOT_STARTED'
- 'VS021: NOT_AUTHORIZE_TO_REDEEM_VOUCHER'
- Other response codes not specified in documentation
- '90010: Approved by Financial Institution, Partial. Kindly reach out to Interswitch'
- '90011: Approved by Financial Institution, VIP. Kindly reach out to Interswitch'
- '90016: Approved by Financial Institution, Update Track 3. Kindly reach out to Interswitch'
- '90000: Successful. Transaction Successful'
- '10002: Invalid Request. Check your request xml to verify you are sending valid
  request xml.'
- '10003: Unauthorized. Please provide valid details and try again later. Please contact
  Interswitch.'
- '10010: Partner not setup/Incorrect entity code. The Institution/Biller/Entity Code
  in your request message has not been configured on Quick Teller.'
- '10011: Service Method not found. It simply means the api service endpoint name
  with Id returned has not been setup in DB via quickteller-paydirect console.'
- '10020: Partner not properly configured. Partner/Biller has not been properly configured
  on Quick Teller. Please contact Interswitch.'
- '10030: Partner deactivated. Partner/Biller has been deactivated on Quick Teller.
  Please contact Interswitch.'
- '20010: Xml Node Missing. Something is missing in your request message. Please check
  the response xml.'
- '20020: Xml Node Value Empty. You have sent an empty xml node. Please check the
  response xml.'
- '20021: TerminalId/ClientId is required'
- '20030: Xml Node Value not valid. Please check the response xml for the invalid
  value in your request message.'
- '20040: Invalid data type, date expected. You have sent an invalid date format,
  please check the request xml.'
- '20041: Invalid data type, numeric expected. You have sent an invalid data, please
  check the response xml.'
- '30010: Transaction not found. The Transaction does not exist in Quick Teller. Please
  contact Interswitch.'
- '40010: ATM cash out payments must be in multiples of 1000. Please change the amount
  to multiples of 1000 and resend the transaction.'
- '40020: ATM cash out payment has exceeded the maximum allowed value. Please try
  cash out the next day.'
- '60001: User not found. The user does not exist in Quick Teller. Please contact
  Interswitch.'
- '60002: Username and/or password incorrect. Please provide correct username/ password
  and try again.'
- '60003: Security token invalid or expired. Please use a valid or active security
  token.'
- '60010: Password does not meet complexity requirements. Please use a complex password
  and try again.'
- '70007: Bank not enabled for transfer. This means the bank has not been enabled
  as a transfer destination bank.'
- '70010: Biller not found. Please provide correct biller code in your request xml
  and try again.'
- '90001: Refer to Issuer. Declined by your card bank'
- '90002: Refer to Financial Institution, Special Condition. Please try again later.'
- '90012: Invalid Transaction. If this is your first time, you may have to change
  your PIN.'
- '90013: Invalid Amount. Please supply valid amount and try again.'
- '90014: Invalid Card Number. Please supply valid card number and try again.'
- '90015: No Such Financial Institution. Please supply an existing/valid financial
  institution and try again.'
- '10002: Invalid Request: Check your request xml to verify you are sending valid
  request xml.'
- '10003: Unauthorized: Please provide valid details and try again later. Please contact
  Interswitch.'
- '10010: Partner not setup/Incorrect entity code: The Institution/Biller/Entity Code
  in your request message has not been configured on Quick Teller.'
- '10011: Service Method not found: It simply means the api service endpoint name
  with Id returned has not been setup in DB via quickteller-paydirect console.'
- '10020: Partner not properly configured: Partner/Biller has not been properly configured
  on Quick Teller. Please contact Interswitch.'
- '10030: Partner deactivated: Partner/Biller has been deactivated on Quick Teller.
  Please contact Interswitch.'
- '20010: Xml Node Missing: Something is missing in your request message. Please check
  the response xml.'
- '20020: Xml Node Value Empty: You have sent an empty xml node. Please check the
  response xml.'
- '20021: TerminalId/ClientId: TerminalId/ClientId is required.'
- '30010: Transaction not found: The Transaction does not exist in Quick Teller. Please
  contact Interswitch.'
- '40010: ATM cash out payments must be in multiples of 1000: Please change the amount
  to multiples of 1000 and resend the transaction.'
- '40020: ATM cash out payment has exceeded the maximum allowed value: Please try
  cash out the next day.'
- '60001: User not found: The user does not exist in Quick Teller. Please contact
  Interswitch.'
- '60002: Username and/or password incorrect: Please provide correct username/ password
  and try again.'
- '70007: Bank not enabled for transfer: This means the bank has not been enabled
  as a transfer destination bank.'
- '70011: Unrecognized card: Your card has not been configured on Interswitch Pay
  Direct. Please contact Interswitch.'
- '90001: Refer to Issuer: Declined by your card bank.'
- '90012: Invalid Transaction: If this is your first time, you may have to change
  your PIN.'
- '90013: Invalid Amount: Please supply valid amount and try again.'
- '90014: Invalid Card Number: Please supply valid card number and try again.'
- '90015: No Such Financial Institution: Please supply an existing/valid financial
  institution and try again.'
- 80032 | Schedule Verification_Failed Schedule Exists
- 80033 | Schedule Verification_UnKnown Error
- 90041 | Lost Card, Pick-Up | Please contact your bank.
- 90042 | No Universal Account | Please try again with a valid account or contact
  your bank.
- 90043 | Stolen Card, Pick-Up | Please contact your bank
- 90044 | No Investment Account | Please try again with a valid account or contact
  your bank.
- 90051 | Insufficient Funds | Please contact your bank.
- 90052 | No Check Account | Please try again with a valid account or contact your
  bank.
- 90053 | No Savings Account | Please try again with a valid account or contact your
  bank.
- 90054 | Expired Card | Please contact your bank.
- 90055 | Incorrect PIN | lease try again with correct PIN.
- 90056 | No Card Record | Please try again with a valid card or contact your bank.
- 90057 | Transaction not Permitted to Cardholder | Please contact your bank
- 90058 | Transaction not Permitted on Terminal | Please contact Interswitch.
- 90059 | Suspected Fraud | Please contact your bank.
- 90060 | Contact Acquirer | Your transaction has been declined by your bank. Please
  contact your bank.
- 90061 | Exceeds Withdrawal Limit | Please contact your bank.
- 90062 | Restricted Card | Please contact your bank.
- 90063 | Security Violation | Please contact your bank.
- 90064 | Original Amount Incorrect | Please enter correct original amount and try
  again.
- 90065 | Exceeds withdrawal frequency | Please try again later or contact your bank.
- 90066 | Call Acquirer Security | Please contact the Acquirer or Interswitch.
- 90067 | Hard Capture | Please contact Interswitch.
- 90068 | Response Received Too Late | Please try again later or contact your bank.
- 90075 | PIN tries exceeded | Please contact your bank.
- 90076 | Reserved for Future Postilion Use | Please contact Interswitch.
- 90077 | Intervene, Bank Approval Required | Please contact the bank.
- 90078 | Intervene, Bank Approval Required for Partial Amount | Please contact the
  bank
- 90083 | FAILED | Please try again, if the problem persist contact Interswitch.
- 90090 | Cut-off in Progress | The financial Institution is not available, please
  try again later.
- 90091/91 | Issuer or Switch Inoperative | Please contact the bank, Telco or Interswitch.
- 90092 | Routing Error | Please contact Interswitch.
- 90093 | Violation of law | Please contact Interswitch.
- 90094 | Duplicate Transaction | You have sent this transaction before, please send
  a new transaction.
- 90095 | Reconcile Error | Please contact Interswitch.
- 90096 | System Malfunction | Please try again, if the problem persist contact Interswitch.
- 90097 | FAILED | Please try again, if the problem persist contact Interswitch.
- 90098 | Exceeds Cash Limit | Please contact your bank.
- 90099 | Transaction failed | Please try again later.
- 900A5 | Contract phone number recharge is not allowed | Please try again with a
  non-contract phone number or contact the Telco.
- 900A6 | The phone number you have supplied is inactive. | Please try again with
  an active phone number or contact the Telco.
- 900A7 | The phone number you have supplied has been barred. | Please try again with
  an unbarred phone number or contact the Telco.
- 900A8 | There is no voucher of the requested denomination. | Please try again with
  a valid voucher denomination.
- 900A9 | The phone number or smart card number you have supplied is invalid. | Please
  try again with a valid phone number or smart card number.
- E16/90E16 | The service you have specified is not available | Please contact Interswitch
- E19/90E19 | Unable to process request at this time. | Please contact Interswitch
- E26/90E26 | System Malfunction | Please contact Interswitch
- G3 | Account is dormant | Please contact Interswitch
- F5 | Invalid Credit Account/Scheme type is not valid | Please contact Interswitch
- J3 | Transfer currency mismatch | Please contact Interswitch
- G2 | Cr Foracid has Credit OR Total Freeze | Please contact Interswitch
- 'VS005: TYPE_CANNOT_BE_EMPTY'
- 'VS007: UNRECOGNISED_TYPE'
- 'VS008: VOUCHER_TYPE_NOT ALLOWED'
- 'VS009: INVALID_START_DATE'
- 'VS010: BAD_START_DATE_FORMAT'
- 'VS011: BAD_EXPIRY_DATE_FORMAT'
- 'VS012: GIFT_OBJECT_NOT_SPECIFIED'
- 'VS013: DISCOUNT_OBJECT_NOT_SPECIFIED'
- 'VS014: INVALID_GIFT_BALANCE'
- 'VS015: INVALID_LENGTH'
- 'VS016: INVALID_EXPIRY_DATE'
- 'VS017: INVALID_REDEEM_QUANTITY'
- 'VS019: INVALID_CODE_CONFIG_LENGTH'
- 'VS021: NOT_AUTHORISED_TO_REDEEM_VOUCHER'
- 'ResponseCode: 90000 - SUCCESSFUL'
- '03: Invalid Kimono Terminal id'
- '96: System malfunction'
- '00: Transaction Approved'
- '51: Insufficient Funds'
- '55: Incorrect PIN'
- '91: Issuer or switch inoperative'
- '30: Format Error'
- '06: Error'
- '57: Transaction not permitted to cardholder'
- '58: Transaction not permitted to terminal'
- '59: Suspected Fraud'
- '92: Routing Error'
- '96: System Malfunction'
- '63: Security Violation'
- '70120: Beneficiary bank service Unavailability'
- '401 Unauthorized: Recheck OAuth token'
- 'S00: Salary loan successfully disbursed'
- 'S201: Salary loan payment notification Successful.'
- '00: Successfully queued to be cancelled'
- Invalid phone number provided
- '500111: Invalid macData'
- '10400: macData required'
- '10400: subscriberId required'
- '10400: Currency code must be a 3 digit number'
- '500109: The provided reference id already exists for this front end partner'
- '10400: referenceId required'
- '10801: Front end partner not found'
- '500104: Batch amount specified differs from the sum of individual entries.'
- '10400: amount may nut be null'
- '400508: Invalid channel selected'
- '10500: Error processing request, please try again'
- '10500: Unable to validate authentication details'
- '500102: Number of entries provided exceed specified batch size.'
- '500103: Batch size is greater than the number of entries'
- '12: Invalid mac'
- '51: Insufficient funds'
- '05: Original transaction not found'
- '25: Wallet not found'
- Page Size cannot be greater than 20
- '400: Page Size cannot be greater than 20'
- '400: Input Validation error'
- '401: Unauthorized'
- '404: No Record found for this Search'
- '10409: Account already exists.'
- '500: Server-side error'
- '400: A client error has occurred, please check the error(s) below.'
- '400: Please provide either requestId or correlationId as request parameters'
- '400: Multiple Requests Found with provided parameters'
- '10400: issuerCode is required.'
- '400: <FIELD> is required or invalid'
- '400: BatchId for Batch Process does not exist'
- '10404: No result found'
- '400: Unable to encrypt pin for response'
- '404: Client Config with Client ID: xxx not found'
- '400: Unsuccessful - File Update error - Card Lookup Failed'
- '400: [required, length must be 2]'
- 'unauthorized: Full authentication is required to access this resource'
- '400: Unsuccessful'
- '400: [not a valid card number]'
- '10500: Error Processing Request'
- '403: Access Denied'
- '400: Unsuccessful - Card Lookup Failed'
- '10404: Card not found'
- '200: Successful'
- '400: Bad Request'
- '404: Not Found'
- '409: Conflict'
- '500: Internal Server Error'
- '400: Some parameters specified are required or invalid'
- '10404: Validation failed: No card found'
- Unable to encrypt data
- Unable to decrypt data
- '10404: No customer and no card records found'
- 'RespCode 51: Insufficient Funds'
- 'InvalidCredentials: Check your API key and secret.'
- 'RequestTimeout: The request took too long to process.'
- '403: Forbidden'
- '400: A validation error occurred, the request was not completed.'
- '401: This can be triggered by passing an invalid secret key in the authorization
  header.'
- '404: Your request could not be fulfilled as the resource/institution requested
  does not exist.'
- '500: This request could not be completed due to an error at Interswitch''s end.'
- 'URL Expired: The URL for this request expired after 30 days.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400: A validation error occurred, the request was not completed. This means a parameter
  to complete this request is unavailable or invalid in the request payload. Kindly
  check and try again.'
- '401: This can be triggered by passing an invalid secret key in the authorization
  header or in a scenario where there is none. The request will not be authorized
  as your request does not fulfill the basic requirement for a successful API call.'
- '404: In essence, your request could not be fulfilled as the resource/institution
  requested does not exist. Please validate the resource requested in this case as
  this should not happen.'
- '500, 501,502,503,504: This request could not be completed due to an error at Interswitch''s
  end. Ordinarily, this should not happen however please, report if you encounter
  any instance of this kind.'
- '401 Unauthorized: Check your credentials or token expiration'
- 400 - Bad Request
- '200: Successful response'
- '200: Successful request'
- URL Expired
- '400 Bad Request: Check required parameters and data format'
- '200: Success'
- '401 Unauthorized: Invalid credentials provided'
- '404 Not Found: Endpoint does not exist'
- '400 Bad Request: Invalid request parameters'
- 'statusCode: string'
- 'responseCode: string'
- 'responseMessage: string'
- 'errors: string'
- 'Unauthorized: Recheck OAuth scopes or token expiration'
- 400 - Result
- '200: Successful refund'
- '400: Bad request'
- '404: Not found'
- '401 Unauthorized: Invalid or missing token'
- '00: success'
- '3001: No Offer'
- '4001: Declined offer'
- '4002: Offer Expired'
- '4004: Unknown Offer'
- '4005: Loan failed'
- '5000: System Error'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Invalid token or credentials'
- '400 Bad Request: Check your request payload and parameters'
- '401 Unauthorized: Recheck Authorization header'
- 401 - Result
- '200: Success response'
- '200: Successful Response'
- '400: Invalid request'
- 'responseCode: Check appendix for response code details'
- 'status: Use status mappings to determine if the transaction succeeded or not.'
auth_info:
  mentioned_objects:
  - OauthToken
  - Interswitch Passport Endpoint
  - Bearer Token
  - Passport API
  - Authorization
  - Access Token
client:
  base_url: https://sandbox.interswitchng.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
  headers:
    accept: application/json
source_metadata: null
