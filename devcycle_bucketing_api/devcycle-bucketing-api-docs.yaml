resources:
- name: evaluate_flags
  endpoint:
    path: /ofrep/v1/evaluate/flags
    method: POST
    data_selector: flags
- name: evaluate_flags
  endpoint:
    path: /ofrep/v1/evaluate/flags
    method: POST
    data_selector: flags
- name: fetch_opt_in_config
  endpoint:
    path: /ofrep/v1/evaluate/flags
    method: GET
    data_selector: ''
- name: update_opt_in_preferences
  endpoint:
    path: /ofrep/v1/evaluate/flags
    method: PUT
    data_selector: ''
- name: flags_evaluation
  endpoint:
    path: /ofrep/v1/evaluate/flags
    method: POST
    data_selector: flags
- name: flags_evaluation
  endpoint:
    path: /ofrep/v1/evaluate/flags
    method: POST
    data_selector: flags
- name: create_project
  endpoint:
    path: /v2/projects
    method: post
    data_selector: '200'
- name: list_projects
  endpoint:
    path: /v2/projects
    method: get
    data_selector: '200'
- name: get_project
  endpoint:
    path: /v2/projects/{project}
    method: get
    data_selector: '200'
- name: update_project
  endpoint:
    path: /v2/projects/{project}
    method: patch
    data_selector: '200'
- name: delete_project
  endpoint:
    path: /v2/projects/{project}
    method: del
    data_selector: '200'
- name: update_protected_settings
  endpoint:
    path: /v2/projects/{project}/protected-settings
    method: patch
    data_selector: '200'
- name: projects
  endpoint:
    path: /v2/projects
    method: GET
    data_selector: projects
    params:
      page: 1
      perPage: 100
      sortBy: createdAt
      sortOrder: desc
- name: Feature
  endpoint:
    path: /projects/{project}/features/{feature}
    method: GET
    data_selector: features
- name: Environment
  endpoint:
    path: /projects/{project}/environments/{environment}
    method: GET
    data_selector: environments
- name: Features
  endpoint:
    path: /projects/{project}/features
    method: GET
    data_selector: features
    params:
      page: 1
      perPage: 100
      sortBy: createdAt
      sortOrder: desc
- name: Get a Feature
  endpoint:
    path: /projects/{project}/features/{feature}
    method: GET
    data_selector: feature
    params: {}
- name: features_static_configuration
  endpoint:
    path: /projects/{project}/features/{feature}/static-configuration
    method: PATCH
    data_selector: features
    params: {}
- name: create_feature
  endpoint:
    path: /projects/{project}/features
    method: POST
    data_selector: feature
    params: {}
- name: list_features
  endpoint:
    path: /projects/{project}/features
    method: GET
    data_selector: features
    params:
      page: 1
      perPage: 100
      sortBy: createdAt
      sortOrder: desc
- name: get_feature_static_configuration
  endpoint:
    path: /projects/{project}/features/{feature}/static-configuration
    method: GET
    data_selector: staticConfiguration
    params: {}
- name: update_feature_static_configuration
  endpoint:
    path: /projects/{project}/features/{feature}/static-configuration
    method: PATCH
    data_selector: updatedConfiguration
    params: {}
- name: getVariableByKey
  endpoint:
    path: /v1/variables/{key}
    method: POST
    data_selector: Variable
- name: getVariables
  endpoint:
    path: /v1/variables
    method: POST
    data_selector: Variables
- name: getFeatures
  endpoint:
    path: /v1/features
    method: POST
    data_selector: Feature
- name: postEvents
  endpoint:
    path: /v1/track
    method: POST
    data_selector: Feature
- name: updateEdgeDB
  endpoint:
    path: /v1/edgedb/{id}
    method: PATCH
- name: fetchOptInConfig
  endpoint:
    path: /v1/optInConfig
    method: GET
- name: updateOptInPreferences
  endpoint:
    path: /v1/optIns/:user_id
    method: PUT
- name: evaluateFlag
  endpoint:
    path: /ofrep/v1/evaluate/flags/{key}
    method: POST
- name: bulkEvaluateFlags
  endpoint:
    path: /ofrep/v1/evaluate/flags
    method: POST
- name: variables_by_key
  endpoint:
    path: /v1/variables/{key}
    method: POST
    data_selector: application/json
    params: {}
- name: all_variables
  endpoint:
    path: /v1/variables
    method: POST
    data_selector: application/json
    params: {}
- name: features
  endpoint:
    path: /v1/features
    method: POST
    data_selector: application/json
    params: {}
- name: track_events
  endpoint:
    path: /v1/track
    method: POST
    data_selector: application/json
    params: {}
- name: update_edgedb
  endpoint:
    path: /v1/edgedb/{id}
    method: PATCH
    data_selector: application/json
    params: {}
- name: opt_in_config
  endpoint:
    path: /v1/optInConfig
    method: GET
    data_selector: application/json
    params: {}
- name: update_opt_in
  endpoint:
    path: /v1/optIns/:user_id
    method: PUT
    data_selector: application/json
    params: {}
- name: ofrep_single_flag_evaluation
  endpoint:
    path: /ofrep/v1/evaluate/flags/{key}
    method: POST
    data_selector: application/json
    params: {}
- name: ofrep_bulk_evaluation
  endpoint:
    path: /ofrep/v1/evaluate/flags
    method: POST
    data_selector: application/json
    params: {}
notes:
- Authorization token can be obtained via OAuth request.
- Using the API requires permissions controlled via an external IdP for Enterprise
  customers.
- One of the Authorization header or 'sdkKey' query parameter is required to be set.
errors:
- '401 Unauthorized: You need credentials to access the API'
- '403 Forbidden: You are not authorized to access the API'
- 429 Rate limit reached on the Flag Management System
- 500 Internal server error
- '400: Bad evaluation request'
- '401: Unauthorized - You need credentials to access the API'
- '403: Forbidden - You are not authorized to access the API'
- '429: Rate limit reached on the Flag Management System'
- '500: Internal server error'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: Verify the project key or ID.'
- '401 Unauthorized: Check client credentials'
- '404 Not Found: Verify the project key or ID'
- '412 Precondition Failed: Check the request body for required fields'
- 401 Unauthorized
- 404 Not Found
- 412 Precondition Failed
- '401 Unauthorized: Check API key or permissions'
- '404 Not Found: Verify endpoint and parameters'
- '412 Precondition Failed: Review request conditions'
- 'UnauthorizedError: Missing ''sdkKey'' query parameter or ''Authorization'' header'
- 'NotFound: Not Found'
- 'InternalServerError: Internal Server Error'
auth_info:
  mentioned_objects:
  - bearerAuth
client:
  base_url: https://bucketing-api.devcycle.com
  auth:
    type: bearerAuth
source_metadata: null
