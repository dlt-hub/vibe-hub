resources:
- name: user
  endpoint:
    path: /api/v1/user/create
    method: POST
- name: user
  endpoint:
    path: /api/v1/user/create
    method: POST
- name: import_data_csv
  endpoint:
    path: /import/data/csv
    method: POST
- name: upload_via_sftp
  endpoint:
    path: /upload/via/sftp
    method: POST
- name: upload_via_s3
  endpoint:
    path: /upload/via/s3
    method: POST
- name: import_data
  endpoint:
    path: /docs/upload-users-events
    method: POST
    data_selector: data
    params: {}
- name: upload_users
  endpoint:
    path: /upload-users
    method: POST
- name: events
  endpoint:
    path: /upload/events
    method: POST
    data_selector: events
- name: upload_events
  endpoint:
    path: /upload/events
    method: POST
- name: upload_user_data
  endpoint:
    path: /upload-users-events
    method: POST
    data_selector: data
- name: upload_event_data
  endpoint:
    path: /upload-users-events
    method: POST
    data_selector: data
- name: upload_push_notification
  endpoint:
    path: /upload-users-events
    method: POST
    data_selector: data
- name: users
  endpoint:
    path: /export/users
    method: GET
    data_selector: user_data
- name: events
  endpoint:
    path: /export/events
    method: GET
    data_selector: event_data
- name: segments
  endpoint:
    path: /export/segments
    method: GET
    data_selector: segment_data
- name: push_subscribers
  endpoint:
    path: /export/push_subscribers
    method: GET
    data_selector: push_subscriber_data
- name: configuration
  endpoint:
    path: /settings/partner/integration
    method: POST
    data_selector: data
    params: {}
- name: SFTP Key
  endpoint:
    path: /integration/sftp
    method: POST
    data_selector: data
    params: {}
- name: AWS_S3_Configuration
  endpoint:
    path: /s3/configuration
    method: POST
    data_selector: data
    params:
      configuration_type: export
      bucket_name: your_bucket_name
      aws_region: your_aws_region
- name: UserEvent
  endpoint:
    path: /docs/tracking-web-users
    method: GET
    data_selector: userevent
    params: {}
- name: Tracking Events
  endpoint:
    path: /docs/tracking-web-events
    method: GET
    data_selector: events
    params: {}
- name: UserEvent
  endpoint:
    path: /userevent
    method: POST
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: POST
    data_selector: user_data
- name: user
  endpoint:
    path: /api/user
    method: POST
    data_selector: user_data
- name: Web Push Notifications
  endpoint:
    path: /docs/web-push-notifications-integration-flow
    method: GET
- name: user_attributes
  endpoint:
    path: /user/attributes
    method: POST
    data_selector: attributes
    params: {}
- name: Web Push Notifications
  endpoint:
    path: /docs/web-push-notifications-integration-flow
    method: GET
    data_selector: null
    params: {}
- name: permission_prompt
  endpoint:
    path: /configure/permission_prompt
    method: POST
    data_selector: configuration
    params: {}
- name: targeting_rules
  endpoint:
    path: /set/targeting_rules
    method: POST
    data_selector: rules
    params: {}
- name: subscription_groups
  endpoint:
    path: /create/subscription_groups
    method: POST
    data_selector: groups
    params: {}
- name: notification_center
  endpoint:
    path: /configure/notification_center
    method: POST
    data_selector: notification_center
    params: {}
- name: assets
  endpoint:
    path: /include/assets
    method: POST
    data_selector: assets
    params: {}
- name: Safari Certificate
  endpoint:
    path: /settings/web-push
    method: POST
- name: Safari Private Key
  endpoint:
    path: /settings/web-push
    method: POST
- name: Permission Prompt
  endpoint:
    path: /permission-prompt/config
    method: POST
    data_selector: configuration
    params: {}
- name: Targeting Rules
  endpoint:
    path: /targeting-rules/set
    method: POST
    data_selector: rules
    params: {}
- name: Subscription Groups
  endpoint:
    path: /subscription-groups/create
    method: POST
    data_selector: groups
    params: {}
- name: Notification Center
  endpoint:
    path: /notification-center/config
    method: POST
    data_selector: notification_center
    params: {}
- name: Assets
  endpoint:
    path: /assets/config
    method: POST
    data_selector: assets
    params: {}
- name: Web Push Certificate
  endpoint:
    path: /docs/guide-to-create-safari-web-push-certificate
    method: GET
    data_selector: certificate
    params: {}
- name: notifyvisitors_push
  endpoint:
    path: /brand/webapp/manifest
    method: GET
- name: service_worker
  endpoint:
    path: /service-worker.js
    method: GET
- name: NotifyVisitors Module
  endpoint:
    path: /install/notifyvisitors
    method: POST
    data_selector: response
    params: {}
- name: NotifyVisitors
  endpoint:
    path: /path/to/notifyvisitors/endpoint
    method: POST
    data_selector: data
    params:
      Brand_Key: your_brand_key
      Secret_Key: your_secret_key
      Encrypted_Key: your_encrypted_key
- name: cookie_usage
  endpoint:
    path: /docs/cookies-used-in-notifyvisitors
    method: GET
    data_selector: cookies_info
    params: {}
- name: common_cookies
  endpoint:
    path: /cookies/common
    method: GET
    data_selector: cookies
    params: {}
- name: push_specific_cookies
  endpoint:
    path: /cookies/push_specific
    method: GET
    data_selector: cookies
    params: {}
- name: popups_specific_cookies
  endpoint:
    path: /cookies/popups_specific
    method: GET
    data_selector: cookies
    params: {}
- name: forms_specific_cookies
  endpoint:
    path: /cookies/forms_specific
    method: GET
    data_selector: cookies
    params: {}
- name: common_cookies
  endpoint:
    path: /cookies/common
    method: GET
    data_selector: cookies
    params: {}
- name: push_specific_cookies
  endpoint:
    path: /cookies/push_specific
    method: GET
    data_selector: cookies
    params: {}
- name: popups_specific_cookies
  endpoint:
    path: /cookies/popups_specific
    method: GET
    data_selector: cookies
    params: {}
- name: forms_specific_cookies
  endpoint:
    path: /cookies/forms_specific
    method: GET
    data_selector: cookies
    params: {}
- name: amp-web-push
  endpoint:
    path: /notifyvisitors_push/amp/push-helper-frame.html
    method: GET
- name: permission-dialog
  endpoint:
    path: /notifyvisitors_push/amp/push-permission-dialog.html
    method: GET
- name: service-worker
  endpoint:
    path: /service-worker.js
    method: GET
- name: manifest_package
  endpoint:
    path: /notifyvisitors_push/chrome/manifest.json
    method: GET
- name: service_worker
  endpoint:
    path: /service-worker.js
    method: GET
- name: amp-web-push
  endpoint:
    path: /notifyvisitors_push/amp/push-helper-frame.html
    method: GET
    data_selector: records
    params: {}
- name: amp-lightbox
  endpoint:
    path: /notifyvisitors_push/amp/push-permission-dialog.html
    method: GET
    data_selector: records
    params: {}
- name: service-worker
  endpoint:
    path: /service-worker.js
    method: GET
    data_selector: records
    params: {}
- name: user_data
  endpoint:
    path: /api/userdata
    method: POST
    data_selector: data
- name: events
  endpoint:
    path: /event
    method: POST
    data_selector: event_data
- name: events
  endpoint:
    path: /api/events
    method: POST
    data_selector: data
    params: {}
- name: event_response
  endpoint:
    path: /event/response
    method: GET
    data_selector: status
    params: {}
- name: user_attributes
  endpoint:
    path: /user_attributes
    method: POST
    data_selector: data
    params: {}
- name: user_attributes
  endpoint:
    path: /user/attributes
    method: POST
    data_selector: attributes
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: GET
    data_selector: data
    params: {}
- name: notifications
  endpoint:
    path: /api/notifications
    method: GET
    data_selector: notifications
    params: {}
- name: push_notifications
  endpoint:
    path: /api/push_notifications
    method: POST
    data_selector: notifications
    params: {}
- name: notification_channel
  endpoint:
    path: /android/notification/channels
    method: POST
    data_selector: channel
    params: {}
- name: notification_channel_group
  endpoint:
    path: /android/notification/channel/group
    method: POST
    data_selector: channelGroup
    params: {}
- name: notification_channel
  endpoint:
    path: /createNotificationChannel
    method: POST
    data_selector: channel
    params: {}
- name: notification_channel_group
  endpoint:
    path: /deleteNotificationChannelGroup
    method: DELETE
    data_selector: group
    params: {}
- name: PermissionPrompt
  endpoint:
    path: /permission/prompt
    method: POST
    data_selector: result
- name: user_data
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: event_data
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: data
    params: {}
- name: register_fcm_keys
  endpoint:
    path: /register-fcm-keys
    method: POST
    data_selector: result
    params: {}
- name: notification_center_count
  endpoint:
    path: /getNotificationCenterCount
    method: GET
    data_selector: counts
- name: notification_data
  endpoint:
    path: /getNotificationDataListener
    method: GET
    data_selector: notificationListResponse
- name: notification_center_data
  endpoint:
    path: /getNotificationCenterData
    method: GET
    data_selector: response
- name: notification_channel
  endpoint:
    path: /create-notification-channel
    method: POST
    data_selector: channels
- name: notification_channel_group
  endpoint:
    path: /create-notification-channel-group
    method: POST
    data_selector: groups
- name: notification_channel
  endpoint:
    path: /createNotificationChannel
    method: POST
    data_selector: channels
    params:
      channelID: channel_id_1
      channelName: channel_name_1
      importance: 4
      channelDescription: channel_description_1
      enableLights: true
      lightColor: Color.GREEN
      soundFileName: unconvinced
      shouldVibrate: true
      groupID: group56
      vibrationPattern:
      - 1000
      - 1000
      - 1000
      - 1000
      - 1000
- name: delete_notification_channel
  endpoint:
    path: /deleteNotificationChannel
    method: DELETE
    data_selector: response
    params:
      channelID: channel_id_1
- name: delete_notification_channel_group
  endpoint:
    path: /deleteNotificationChannelGroup
    method: DELETE
    data_selector: response
    params:
      groupId: group56
- name: permission_prompt
  endpoint:
    path: /permission/prompt
    method: POST
    data_selector: result
- name: Notification Center
  endpoint:
    path: /configure-notification-center
    method: GET
    data_selector: notifications
    params: {}
- name: notification_center_count
  endpoint:
    path: /getNotificationCenterCount
    method: GET
    data_selector: counts
- name: notification_data
  endpoint:
    path: /getNotificationCenterData
    method: GET
    data_selector: response
- name: data_types
  endpoint:
    path: /docs/google-play-data-safety-requirements
    method: GET
    data_selector: Data types
    params: {}
- name: uninstalls
  endpoint:
    path: /track/uninstalls
    method: POST
    data_selector: data
- name: data_types
  endpoint:
    path: /docs/google-play-data-safety-requirements
    method: GET
    data_selector: data types
    params: {}
- name: uninstall_tracking
  endpoint:
    path: /docs/uninstall-tracking
    method: GET
    data_selector: records
- name: SDK Integration
  endpoint:
    path: /docs/integration
    method: GET
- name: SDK
  endpoint:
    path: /ios/Native/notifyvisitors_ios_sdk-7.3.3.zip
    method: GET
    data_selector: sdk
    params: {}
- name: events
  endpoint:
    path: /track/events
    method: POST
    data_selector: events
    params: {}
- name: user_attributes
  endpoint:
    path: /user/attributes
    method: POST
    data_selector: user_attributes
    params: {}
- name: user_attributes
  endpoint:
    path: /user/attributes
    method: POST
    data_selector: response
    params: {}
- name: in_app_notifications
  endpoint:
    path: /in-app-notifications
    method: POST
    data_selector: notifications
    params: {}
- name: dynamic_tokens
  endpoint:
    path: /dynamic_tokens
    method: POST
    data_selector: tokens
    params: {}
- name: custom_rule
  endpoint:
    path: /custom_rule
    method: POST
    data_selector: customRule
    params: {}
- name: event_callback
  endpoint:
    path: /event_callback
    method: POST
    data_selector: callback
    params: {}
- name: push_notifications
  endpoint:
    path: /docs/apns-auth-keys
    method: GET
- name: apns_certificate
  endpoint:
    path: /docs/apns-certificate
    method: GET
- name: Push Notifications
  endpoint:
    path: /docs/apns-auth-keys
    method: POST
- name: APNS Auth Key
  endpoint:
    path: /apns/auth/key
    method: POST
    data_selector: key_id
    params: {}
- name: APNS Auth Keys
  endpoint:
    path: /apns-auth-keys
    method: GET
- name: APNS Certificate Creation
  endpoint:
    path: /docs/apns-certificate
    method: GET
    data_selector: steps
    params: {}
- name: APNS Auth Key
  endpoint:
    path: /apns/auth/key
    method: POST
- name: Notification Service Extension
  endpoint:
    path: /notification/service/extension
    method: GET
    data_selector: records
- name: Notification Service Extension
  endpoint:
    path: /services/notification/extension
    method: POST
    data_selector: notifications
    params: {}
- name: NotificationCenter
  endpoint:
    path: /configure-notification-center
    method: GET
    data_selector: notifications
    params: {}
- name: unread_notifications
  endpoint:
    path: /getUnreadPushNotification
    method: GET
    data_selector: unreadCounts
- name: notification_center_data
  endpoint:
    path: /getNotificationCentreData
    method: GET
    data_selector: nvNotificationsList
- name: Notification Center
  endpoint:
    path: /configure-notification-center
    method: GET
    data_selector: notifications
    params: {}
- name: unread_notifications
  endpoint:
    path: /getUnreadPushNotification
    method: GET
    data_selector: unreadCounts
- name: notification_center_data
  endpoint:
    path: /getNotificationCentreData
    method: GET
    data_selector: nvCenterData
- name: user
  endpoint:
    path: /user/create
    method: POST
    data_selector: response.data
    params: {}
- name: android_integration
  endpoint:
    path: /docs/android-integration
    method: GET
    data_selector: records
- name: user_create
  endpoint:
    path: /user/create
    method: POST
    data_selector: response.data
    params: {}
- name: info.plist
  endpoint:
    path: /ios/info.plist
    method: GET
    data_selector: records
    params: {}
- name: APNS Auth Key
  endpoint:
    path: /docs/apns-auth-keys
    method: GET
- name: APNS Push Certificate
  endpoint:
    path: /docs/apns-certificate
    method: GET
- name: Notification Service Extension
  endpoint:
    path: /notification-service-extension
    method: GET
    data_selector: extension
    params: {}
- name: push_notifications
  endpoint:
    path: /api/push_notifications
    method: POST
    data_selector: response
    params: {}
- name: NotificationService
  endpoint:
    path: /NotificationService
    method: POST
    data_selector: notification
    params: {}
- name: user_attributes
  endpoint:
    path: /user/attributes
    method: POST
    data_selector: data
- name: user_tracking
  endpoint:
    path: /track/users
    method: POST
    data_selector: data
    params: {}
- name: Push Permission Prompt
  endpoint:
    path: /docs/flutter-notification-runtime-permission-android
    method: GET
    data_selector: PushPromptInfo
    params: {}
- name: user_attributes
  endpoint:
    path: /user/attributes
    method: POST
    data_selector: user_attributes
    params: {}
- name: create_notification_channel
  endpoint:
    path: /createNotificationChannel
    method: POST
    data_selector: 'null'
    params: {}
- name: create_notification_channel_group
  endpoint:
    path: /createNotificationChannelGroup
    method: POST
    data_selector: 'null'
    params: {}
- name: delete_notification_channel
  endpoint:
    path: /deleteNotificationChannel
    method: DELETE
    data_selector: 'null'
    params: {}
- name: delete_notification_channel_group
  endpoint:
    path: /deleteNotificationChannelGroup
    method: DELETE
    data_selector: 'null'
    params: {}
- name: listener_function
  endpoint:
    path: /flutter-page-redirection-on-push-notification
    method: GET
    data_selector: response
- name: in_app_notification
  endpoint:
    path: /notifications/in-app
    method: GET
    data_selector: notifications
    params: {}
- name: push_notifications
  endpoint:
    path: /customizations/push_notifications
    method: GET
    data_selector: customizations
    params: {}
- name: notification_center
  endpoint:
    path: /customizations/notification_center
    method: GET
    data_selector: customizations
    params: {}
- name: notification_center
  endpoint:
    path: /notification-center
    method: GET
    data_selector: notifications
- name: create_notification_channel
  endpoint:
    path: /create_notification_channel
    method: POST
    data_selector: result
    params: {}
- name: create_notification_channel_group
  endpoint:
    path: /create_notification_channel_group
    method: POST
    data_selector: result
    params: {}
- name: delete_notification_channel
  endpoint:
    path: /delete_notification_channel
    method: DELETE
    data_selector: result
    params: {}
- name: delete_notification_channel_group
  endpoint:
    path: /delete_notification_channel_group
    method: DELETE
    data_selector: result
    params: {}
- name: push_notifications
  endpoint:
    path: /flutter-page-redirection-on-push-notification
    method: GET
    data_selector: response
- name: commands
  endpoint:
    path: /useful-commands
    method: GET
    data_selector: commands
- name: APNS Auth Key
  endpoint:
    path: /docs/apns-auth-keys
    method: GET
- name: APNS Push Certificate
  endpoint:
    path: /docs/apns-certificate
    method: GET
- name: Notification Service Extension
  endpoint:
    path: /cordova/notification-service-extension
    method: POST
    data_selector: data
    params: {}
- name: push_notification
  endpoint:
    path: /path/to/push/notification/endpoint
    method: POST
    data_selector: notification
    params: {}
- name: event_tracking
  endpoint:
    path: /event_tracking
    method: POST
    data_selector: response
    params: {}
- name: Notification Service Extension
  endpoint:
    path: /docs/cordova-notification-service-extension
    method: GET
    data_selector: content
    params: {}
- name: user_attributes
  endpoint:
    path: /api/user_attributes
    method: POST
    data_selector: attributes
- name: user_attributes
  endpoint:
    path: /user/attributes
    method: POST
    data_selector: attributes
    params: {}
- name: user_attributes
  endpoint:
    path: /users/attributes
    method: POST
    data_selector: data
- name: in_app_notification
  endpoint:
    path: /in-app-notification
    method: POST
    data_selector: notifications
    params: {}
- name: open_app_inbox
  endpoint:
    path: /open_app_inbox
    method: GET
    data_selector: appInboxInfo
- name: notification_count
  endpoint:
    path: /notification_count
    method: GET
    data_selector: tabCountInfo
- name: notification_center_data
  endpoint:
    path: /notification_center_data
    method: GET
    data_selector: callback
- name: stop_notification
  endpoint:
    path: /stop_notification
    method: POST
    data_selector: null
- name: in_app_notification
  endpoint:
    path: /api/in_app_notification
    method: POST
    data_selector: notifications
    params: {}
- name: notification_center
  endpoint:
    path: /api/notification-center
    method: GET
    data_selector: notifications
- name: permission_popup
  endpoint:
    path: /cordova/notification/runtime/permission
    method: POST
    data_selector: status
    params: {}
- name: create_notification_channel
  endpoint:
    path: /createNotificationChannel
    method: POST
    data_selector: result
    params: {}
- name: create_notification_channel_group
  endpoint:
    path: /createNotificationChannelGroup
    method: POST
    data_selector: result
    params: {}
- name: delete_notification_channel
  endpoint:
    path: /deleteNotificationChannel
    method: DELETE
    data_selector: result
    params: {}
- name: delete_notification_channel_group
  endpoint:
    path: /deleteNotificationChannelGroup
    method: DELETE
    data_selector: result
    params: {}
- name: create_notification_channel
  endpoint:
    path: /createNotificationChannel
    method: POST
    data_selector: response
    params: {}
- name: create_notification_channel_group
  endpoint:
    path: /createNotificationChannelGroup
    method: POST
    data_selector: response
    params: {}
- name: delete_notification_channel
  endpoint:
    path: /deleteNotificationChannel
    method: DELETE
    data_selector: response
    params: {}
- name: delete_notification_channel_group
  endpoint:
    path: /deleteNotificationChannelGroup
    method: DELETE
    data_selector: response
    params: {}
- name: get_fcm_apns_token
  endpoint:
    path: /get_fcm_apns_token
    method: GET
- name: subscribe_push_category
  endpoint:
    path: /subscribe_push_category
    method: POST
- name: get_nv_uid
  endpoint:
    path: /get_nv_uid
    method: GET
- name: send_push_payload
  endpoint:
    path: /send_push_payload
    method: POST
- name: push_notifications
  endpoint:
    path: /push_notifications/customizations
    method: GET
    data_selector: customizations
    params: {}
- name: notification_center
  endpoint:
    path: /notification_center/customizations
    method: GET
    data_selector: customizations
    params: {}
- name: push_notifications
  endpoint:
    path: /push-notifications
    method: POST
    data_selector: notifications
    params: {}
- name: push_notifications
  endpoint:
    path: /api/push_notifications
    method: POST
- name: push_notifications
  endpoint:
    path: /docs/capacitor-push-notifications
    method: GET
    data_selector: records
- name: push_notifications
  endpoint:
    path: /docs/push-notifications
    method: GET
- name: Notification Service Extension
  endpoint:
    path: /notification/service/extension
    method: POST
    data_selector: extension_data
    params: {}
- name: event_tracking
  endpoint:
    path: /event
    method: POST
    data_selector: callback
    params: {}
- name: event
  endpoint:
    path: /event
    method: POST
    data_selector: status
- name: user_attributes
  endpoint:
    path: /api/user_attributes
    method: POST
    data_selector: data
    params: {}
- name: user_attributes
  endpoint:
    path: /api/user/attributes
    method: POST
    data_selector: attributes
    params: {}
- name: user_attributes
  endpoint:
    path: /user/attributes
    method: POST
    data_selector: userData
    params: {}
- name: user_attributes
  endpoint:
    path: /user/attributes
    method: POST
    data_selector: userIdentifier
    params: {}
- name: in_app_notification
  endpoint:
    path: /api/in_app_notification
    method: POST
    data_selector: data
    params: {}
- name: in_app_notification
  endpoint:
    path: /notifications
    method: GET
    data_selector: notifications
    params: {}
- name: app_inbox
  endpoint:
    path: /api/inbox
    method: GET
    data_selector: notifications
    params: {}
- name: notification_count
  endpoint:
    path: /api/notification/count
    method: GET
    data_selector: unreadCount
    params: {}
- name: notification_data
  endpoint:
    path: /api/notification/data
    method: GET
    data_selector: notificationData
    params: {}
- name: in_app_notification
  endpoint:
    path: /in-app-notification
    method: POST
    data_selector: notifications
    params: {}
- name: push_permission_prompt
  endpoint:
    path: /notification/runtime/permission
    method: POST
    data_selector: status
    params: {}
- name: notification_center
  endpoint:
    path: /notification-center
    method: GET
    data_selector: notifications
    params: {}
- name: push_permission_prompt
  endpoint:
    path: /notification/runtime/permission
    method: POST
    data_selector: status
    params: {}
- name: notification_channel
  endpoint:
    path: /createNotificationChannel
    method: POST
    data_selector: channelData
- name: notification_channel_group
  endpoint:
    path: /createNotificationChannelGroup
    method: POST
    data_selector: finalData
- name: delete_notification_channel
  endpoint:
    path: /deleteNotificationChannel
    method: POST
    data_selector: finalData
- name: delete_notification_channel_group
  endpoint:
    path: /deleteNotificationChannelGroup
    method: POST
    data_selector: finalData
- name: notification
  endpoint:
    path: /notifications
    method: POST
    data_selector: parameters
    params: {}
- name: createNotificationChannel
  endpoint:
    path: /createNotificationChannel
    method: POST
    data_selector: channelData
    params: {}
- name: createNotificationChannelGroup
  endpoint:
    path: /createNotificationChannelGroup
    method: POST
    data_selector: finalData
    params: {}
- name: deleteNotificationChannel
  endpoint:
    path: /deleteNotificationChannel
    method: POST
    data_selector: finalData
    params: {}
- name: deleteNotificationChannelGroup
  endpoint:
    path: /deleteNotificationChannelGroup
    method: POST
    data_selector: finalData
    params: {}
- name: notification
  endpoint:
    path: /notification
    method: GET
    data_selector: parameters
    params: {}
- name: push_notifications
  endpoint:
    path: /api/push_notifications
    method: POST
    data_selector: notifications
    params: {}
- name: notification_center
  endpoint:
    path: /api/notification_center
    method: GET
    data_selector: notifications
    params: {}
- name: push_notifications
  endpoint:
    path: /customizations/push_notifications
    method: GET
    data_selector: notifications
    params: {}
- name: notification_center
  endpoint:
    path: /customizations/notification_center
    method: GET
    data_selector: notification_center
    params: {}
- name: android_integration
  endpoint:
    path: /docs/android-integration
    method: GET
    data_selector: records
- name: info.plist
  endpoint:
    path: /configure/info.plist
    method: POST
    data_selector: configuration
    params: {}
- name: APNS Auth Key
  endpoint:
    path: /docs/apns-auth-keys
    method: GET
- name: APNS Push Certificate
  endpoint:
    path: /docs/apns-certificate
    method: GET
- name: info.plist
  endpoint:
    path: /info.plist
    method: GET
    data_selector: records
- name: Notification Service Extension
  endpoint:
    path: /notification/service/extension
    method: GET
    data_selector: response_data
- name: APNS Auth Key
  endpoint:
    path: /docs/apns-auth-keys
    method: GET
- name: APNS Push Certificate
  endpoint:
    path: /docs/apns-certificate
    method: GET
- name: Notification Service Extension
  endpoint:
    path: /ios/NotificationServiceExtension
    method: POST
    data_selector: data
    params: {}
- name: event_tracking
  endpoint:
    path: /event/track
    method: POST
    data_selector: callback
    params: {}
- name: event_tracking
  endpoint:
    path: /api/event
    method: POST
    data_selector: callback
    params: {}
- name: user_tracking
  endpoint:
    path: /track/users
    method: POST
    data_selector: user
    params: {}
- name: user_identifier
  endpoint:
    path: /userIdentifier
    method: POST
    data_selector: status
    params: {}
- name: in_app_notification
  endpoint:
    path: /api/v1/in_app_notification
    method: POST
    data_selector: notifications
    params: {}
- name: in_app_notification
  endpoint:
    path: /api/in-app-notification
    method: POST
    data_selector: notifications
    params: {}
- name: app_inbox
  endpoint:
    path: /app/inbox
    method: GET
    data_selector: notifications
- name: notification_count
  endpoint:
    path: /notification/count
    method: GET
    data_selector: count
- name: notification_data
  endpoint:
    path: /notification/data
    method: GET
    data_selector: data
- name: push_permission_prompt
  endpoint:
    path: /notification/runtime/permission
    method: POST
    data_selector: response
    params: {}
- name: Notification Center
  endpoint:
    path: /api/notification-center
    method: GET
    data_selector: notifications
    params: {}
- name: create_notification_channel
  endpoint:
    path: /createNotificationChannel
    method: POST
    data_selector: result
    params: {}
- name: create_notification_channel_group
  endpoint:
    path: /createNotificationChannelGroup
    method: POST
    data_selector: result
    params: {}
- name: delete_notification_channel
  endpoint:
    path: /deleteNotificationChannel
    method: DELETE
    data_selector: result
    params: {}
- name: delete_notification_channel_group
  endpoint:
    path: /deleteNotificationChannelGroup
    method: DELETE
    data_selector: result
    params: {}
- name: create_notification_channel
  endpoint:
    path: /createNotificationChannel
    method: POST
    data_selector: response
    params: {}
- name: create_notification_channel_group
  endpoint:
    path: /createNotificationChannelGroup
    method: POST
    data_selector: response
    params: {}
- name: delete_notification_channel
  endpoint:
    path: /deleteNotificationChannel
    method: POST
    data_selector: response
    params: {}
- name: delete_notification_channel_group
  endpoint:
    path: /deleteNotificationChannelGroup
    method: POST
    data_selector: response
    params: {}
- name: listener_function
  endpoint:
    path: /react-native-page-redirection-on-push-notification
    method: GET
    data_selector: data
    params: {}
- name: FCM_APNS_Token
  endpoint:
    path: /getRegistrationToken
    method: GET
    data_selector: response
- name: Subscribe_Push_Category
  endpoint:
    path: /subscribePushCategory
    method: POST
    data_selector: response
- name: NotifyVisitors_UID
  endpoint:
    path: /getNvUID
    method: GET
    data_selector: response
- name: FCM_APNS_Token
  endpoint:
    path: /getRegistrationToken
    method: GET
    data_selector: callback
    params: {}
- name: subscribe_Push_Category
  endpoint:
    path: /subscribePushCategory
    method: POST
    data_selector: callback
    params: {}
- name: NotifyVisitors_UID
  endpoint:
    path: /getNvUID
    method: GET
    data_selector: callback
    params: {}
- name: push_notifications
  endpoint:
    path: /api/push_notifications
    method: POST
    data_selector: notifications
    params: {}
- name: notification_center
  endpoint:
    path: /api/notification_center
    method: GET
    data_selector: centers
    params: {}
- name: Referral Program
  endpoint:
    path: /docs/getting-started-9
    method: GET
    data_selector: content
    params: {}
- name: Referral Tracking Pixel
  endpoint:
    path: /docs/referral-tracking-pixel
    method: GET
    data_selector: content
    params: {}
- name: Android SDK
  endpoint:
    path: /docs/native-sdk
    method: GET
    data_selector: content
    params: {}
- name: iOS SDK
  endpoint:
    path: /docs/objective-c
    method: GET
    data_selector: content
    params: {}
- name: App Universal Link
  endpoint:
    path: /docs/app-universal-link
    method: GET
    data_selector: content
    params: {}
- name: static_javascript_widget
  endpoint:
    path: /docs/javascript-code
    method: GET
- name: javascript_widget_advanced_parameters
  endpoint:
    path: /docs/javascript-code
    method: GET
- name: Referral Conversion
  endpoint:
    path: /track/referral/conversion
    method: POST
    data_selector: conversion_data
- name: App Universal Link Settings for Android
  endpoint:
    path: /docs/app-universal-link-settings/android
    method: POST
    data_selector: settings
    params: {}
- name: App Universal Link Settings for iOS
  endpoint:
    path: /docs/app-universal-link-settings/ios
    method: POST
    data_selector: settings
    params: {}
- name: plugins
  endpoint:
    path: /docs/plugins
    method: GET
- name: referral_conversion
  endpoint:
    path: /track/referral/conversion
    method: POST
    data_selector: conversion_data
- name: website_referral_campaign
  endpoint:
    path: /docs/javascript-code
    method: GET
    data_selector: tracking_pixel
- name: referral_tracking_pixel
  endpoint:
    path: /campaign/documentation/imagePixel
    method: GET
    data_selector: conversion_tracking
- name: referral_tracking_pixel
  endpoint:
    path: /referral/tracking/pixel
    method: GET
- name: campaigns
  endpoint:
    path: /campaigns
    method: POST
    data_selector: campaigns
    params: {}
- name: customer_events
  endpoint:
    path: /customer/events
    method: GET
    data_selector: events
    params: {}
- name: website_referral_campaign_integration
  endpoint:
    path: /docs/javascript-code
    method: GET
- name: referral_tracking_pixel_integration
  endpoint:
    path: /campaign/documentation/imagePixel
    method: GET
- name: campaigns
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: campaigns
  endpoint:
    path: /api/campaigns
    method: POST
    data_selector: data
    params: {}
- name: iframe_widget
  endpoint:
    path: /campaign_user/p
    method: GET
    data_selector: campaigns
    params:
      brandid: 52XX
      campaignid: XXXX
      bid_e: XXXXXXXX3465A51XXXXX
      t: '420'
- name: iframe_integration
  endpoint:
    path: /campaign_user/p
    method: GET
    data_selector: iframe_code
    params:
      brandid: 52XX
      campaignid: XXXX
      bid_e: XXXXXXXX3465A51XXXXX
      t: 420
      email: ''
      fname: ''
- name: campaign_member
  endpoint:
    path: /api/campaigns/members
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: records
- name: campaign
  endpoint:
    path: /campaign
    method: GET
- name: conversion
  endpoint:
    path: /conversion/add
    method: POST
    data_selector: response.data
    params: {}
- name: conversion
  endpoint:
    path: /conversion/add
    method: POST
    data_selector: response.data
    params: {}
- name: confirm_conversion
  endpoint:
    path: /campaign/t1/confirmConversion
    method: GET
    data_selector: result
    params:
      secretKey: 3B8DXXXXXXXXXXXXXXXXXXXXXXX
      bid: '29108'
      campaignID: 10XX
      orderID: ABXHXXXXX
      status: '1'
      event: sale
- name: confirm_conversion
  endpoint:
    path: /campaign/t1/confirmConversion
    method: GET
    data_selector: result
    params:
      secretKey: 3B8DXXXXXXXXXXXXXXXXXXXXXXX
      bid: '29108'
      campaignID: 10XX
      orderID: ABXHXXXXX
      status: '1'
      event: sale
- name: successful_converts_ticker
  endpoint:
    path: /campaign_user/notification/winners
    method: GET
- name: most_invites_leaderboard_ticker
  endpoint:
    path: /campaign_user/notification/mostInvites
    method: GET
- name: most_referral_conversions_leaderboard_ticker
  endpoint:
    path: /campaign_user/notification/mostConversions
    method: GET
- name: successful_converts_ticker
  endpoint:
    path: /campaign_user/notification/winners
    method: GET
- name: most_invites_leaderboard_ticker
  endpoint:
    path: /campaign_user/notification/mostInvites
    method: GET
- name: most_referral_conversions_leaderboard_ticker
  endpoint:
    path: /campaign_user/notification/mostConversions
    method: GET
- name: hosted_link_cloaking
  endpoint:
    path: /docs/hosted-link-cloaking
    method: GET
- name: link_cloaking_campaign
  endpoint:
    path: /web/ie/campaign
    method: GET
    data_selector: campaigns
    params:
      brandid: 52X
      campaignID: XX
- name: conversion_response
  endpoint:
    path: /docs/javascript-callback
    method: GET
    data_selector: response
- name: conversion_response
  endpoint:
    data_selector: response
- name: campaign_setup
  endpoint:
    path: /docs/campaign-screen
    method: GET
- name: tracking_conversions
  endpoint:
    path: /docs/event-tracking
    method: GET
- name: campaign
  endpoint:
    path: /docs/campaign-screen
    method: GET
    data_selector: campaign_data
- name: event_tracking
  endpoint:
    path: /docs/event-tracking
    method: GET
    data_selector: event_data
- name: deep_link_configuration
  endpoint:
    path: /docs/deep-link-and-app-universal-link-settings
    method: GET
    data_selector: content
- name: app_universal_link_configuration
  endpoint:
    path: /docs/app-universal-link
    method: GET
    data_selector: content
- name: set_language
  endpoint:
    path: /docs/set-language
    method: GET
    data_selector: content
- name: deep_link_configuration
  endpoint:
    path: /docs/deep-link-and-app-universal-link-settings
    method: GET
    data_selector: settings
    params: {}
- name: app_universal_link_configuration
  endpoint:
    path: /docs/app-universal-link
    method: GET
    data_selector: settings
    params: {}
- name: campaign_screen
  endpoint:
    path: /campaign
    method: POST
    data_selector: campaignCallback
    params:
      campaignID: '0'
      templateID: '0'
- name: login_screen
  endpoint:
    path: /login
    method: POST
    data_selector: campaignCallback
    params:
      campaignID: '0'
      templateID: '0'
- name: campaign
  endpoint:
    path: /campaign
    method: POST
    data_selector: campaignCallback
    params: {}
- name: campaign
  endpoint:
    path: /campaign
    method: POST
    data_selector: campaignCallback
- name: lead_capture
  endpoint:
    path: /lead/capture
    method: POST
    data_selector: leadResponse
- name: campaign
  endpoint:
    path: /campaign
    method: POST
    data_selector: campaignCallback
    params: {}
- name: campaignPopup
  endpoint:
    path: /campaignPopup
    method: POST
    data_selector: campaignPopupResponse
    params: {}
- name: event_tracking
  endpoint:
    path: /event/tracking
    method: POST
    data_selector: response
    params: {}
- name: event_tracking
  endpoint:
    path: /tracking/event
    method: POST
    data_selector: response
    params: {}
- name: welcome_message
  endpoint:
    path: /showWelcomeMessage
    method: POST
    data_selector: response
- name: referrer_code
  endpoint:
    path: /getReferrerCode
    method: GET
    data_selector: irReferrerCode
- name: referring_params
  endpoint:
    path: /getReferringParams
    method: GET
    data_selector: irReferringParams
- name: welcome_message
  endpoint:
    path: /welcome-message
    method: GET
    data_selector: response
- name: get_referrer_code
  endpoint:
    path: /get-referrer-code
    method: GET
    data_selector: response
- name: get_referring_params
  endpoint:
    path: /get-referring-params
    method: GET
    data_selector: response
- name: Deep Link Configuration
  endpoint:
    path: /docs/deep-link-configuration
    method: GET
    data_selector: settings
    params: {}
- name: One Link Configuration
  endpoint:
    path: /docs/one-link-configuration
    method: GET
    data_selector: settings
    params: {}
- name: campaign_screen
  endpoint:
    path: /ir-campaign-screen-launch
    method: GET
    data_selector: campaign_screen_data
    params: {}
- name: IR Campaign Screen
  endpoint:
    path: /ir/campaign
    method: POST
    data_selector: response
    params: {}
- name: campaign
  endpoint:
    path: /campaign
    method: POST
    data_selector: response
    params: {}
- name: campaignPopup
  endpoint:
    path: /campaignPopup
    method: POST
    data_selector: response
    params: {}
- name: campaign
  endpoint:
    path: /campaign
    method: POST
    data_selector: response
    params: {}
- name: campaignPopup
  endpoint:
    path: /campaignPopup
    method: POST
    data_selector: response
    params: {}
- name: sharing_details
  endpoint:
    path: /getSharingDetails
    method: GET
    data_selector: sharingDetails
    params: {}
- name: track_invite
  endpoint:
    path: /trackInvite
    method: POST
    data_selector: trackInviteResponse
    params: {}
- name: campaign
  endpoint:
    path: /getSharingDetails
    method: POST
    data_selector: sharingDetails
- name: track_invite
  endpoint:
    path: /trackInvite
    method: POST
    data_selector: trackingResponse
    params: {}
- name: event_tracking
  endpoint:
    path: /tracking/events
    method: POST
    data_selector: eventData
- name: event_tracking
  endpoint:
    path: /docs/event-tracking
    method: GET
    data_selector: events
    params: {}
- name: event_tracking
  endpoint:
    path: /tracking/events
    method: POST
    data_selector: response
    params: {}
- name: event_tracking
  endpoint:
    path: /tracking/events
    method: POST
    data_selector: response
    params: {}
- name: show_welcome_message
  endpoint:
    path: /showWelcomeMessage
    method: GET
- name: get_referrer_code
  endpoint:
    path: /getReferrerCode
    method: GET
- name: get_referring_params
  endpoint:
    path: /getReferringParams
    method: GET
- name: show_welcome_message
  endpoint:
    path: /showWelcomeMessage
    method: POST
    data_selector: response
- name: get_referrer_code
  endpoint:
    path: /getReferrerCode
    method: POST
    data_selector: refCode
- name: get_referring_params
  endpoint:
    path: /getReferringParams
    method: GET
    data_selector: utm_data
- name: campaign_screen
  endpoint:
    path: /docs/campaign-screen-ui-customizations-and-other-configurations
    method: GET
    data_selector: records
    params: {}
- name: campaign_screen_customizations
  endpoint:
    path: /customizations/campaign_screen
    method: GET
    data_selector: customizations
    params: {}
- name: referral_link_view
  endpoint:
    path: /referral_link_view
    method: GET
    data_selector: records
    params: {}
- name: sharing_view
  endpoint:
    path: /sharing_view
    method: GET
    data_selector: records
    params: {}
- name: lead_capture_form
  endpoint:
    path: /lead_capture_form
    method: GET
    data_selector: records
    params: {}
- name: bottom_layout
  endpoint:
    path: /bottom_layout
    method: GET
    data_selector: records
    params: {}
- name: referral_statistics
  endpoint:
    path: /referral_statistics
    method: GET
    data_selector: records
    params: {}
- name: terms_conditions
  endpoint:
    path: /terms_conditions
    method: GET
    data_selector: records
    params: {}
- name: how_it_works
  endpoint:
    path: /how_it_works
    method: GET
    data_selector: records
    params: {}
- name: slash_between_tnc_n_hiw
  endpoint:
    path: /slash_between_tnc_n_hiw
    method: GET
    data_selector: records
    params: {}
- name: referral_link_view
  endpoint:
    path: /services/data/vXX.X/sobjects/ReferralLinkView
    method: GET
    data_selector: records
    params: {}
- name: sharing_view
  endpoint:
    path: /services/data/vXX.X/sobjects/SharingView
    method: GET
    data_selector: records
    params: {}
- name: lead_capture_form
  endpoint:
    path: /services/data/vXX.X/sobjects/LeadCaptureForm
    method: GET
    data_selector: records
    params: {}
- name: bottom_layout
  endpoint:
    path: /services/data/vXX.X/sobjects/BottomLayout
    method: GET
    data_selector: records
    params: {}
- name: referral_statistics
  endpoint:
    path: /services/data/vXX.X/sobjects/ReferralStatistics
    method: GET
    data_selector: records
    params: {}
- name: terms_conditions
  endpoint:
    path: /services/data/vXX.X/sobjects/TermsConditions
    method: GET
    data_selector: records
    params: {}
- name: how_it_works
  endpoint:
    path: /services/data/vXX.X/sobjects/HowItWorks
    method: GET
    data_selector: records
    params: {}
- name: symbol_between_tnc_n_hiw
  endpoint:
    path: /services/data/vXX.X/sobjects/SymbolBetweenTncNHiw
    method: GET
    data_selector: records
    params: {}
- name: user_data
  endpoint:
    path: /docs/getting-started
    method: GET
- name: campaign_screen
  endpoint:
    path: /docs/ir-campaign-screen-launch
    method: GET
- name: event_tracking
  endpoint:
    path: /docs/event-tracking-5
    method: GET
- name: data_types
  endpoint:
    path: /docs/google-play-data-safety-requirements
    method: GET
    data_selector: data_types
    params: {}
- name: event_tracking
  endpoint:
    path: /troubleshoot/event_tracking
    method: GET
    data_selector: response
    params: {}
- name: data_types
  endpoint:
    path: /data/types
    method: GET
    data_selector: dataTypes
- name: campaign
  endpoint:
    path: /docs/getting-started-9
    method: GET
    data_selector: campaigns
    params: {}
- name: event_tracking
  endpoint:
    path: /docs/event-tracking
    method: GET
    data_selector: events
    params: {}
- name: event_tracking
  endpoint:
    path: /api/event/tracking
    method: POST
    data_selector: response
    params:
      incremental: orderID
- name: campaign
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: data
    params: {}
- name: Flutter SDK
  endpoint:
    path: /docs/flutter-3
    method: GET
    data_selector: resources
    params: {}
- name: campaign
  endpoint:
    path: /campaign
    method: POST
    data_selector: null
    params: {}
- name: get_sharing_details
  endpoint:
    path: /getSharingDetails
    method: GET
    data_selector: shareText
    params: {}
- name: campaign
  endpoint:
    path: /rest-apis/confirm-conversion-api
    method: POST
    data_selector: Authentication
- name: sharing_details
  endpoint:
    path: /getSharingDetails
    method: GET
    data_selector: ''
    params: {}
- name: tracking_events
  endpoint:
    path: /docs/event-tracking
    method: POST
    data_selector: response
    params: {}
- name: welcome_message
  endpoint:
    path: /welcome-message
    method: GET
    data_selector: response
- name: referrer_code
  endpoint:
    path: /referrer-code
    method: GET
    data_selector: response
- name: referring_params
  endpoint:
    path: /referring-params
    method: GET
    data_selector: response
- name: show_popup
  endpoint:
    path: /show-popup
    method: GET
    data_selector: response
- name: event_tracking
  endpoint:
    path: /api/event-tracking
    method: POST
    data_selector: response
    params: {}
- name: campaign
  endpoint:
    path: /docs/getting-started-9
    method: GET
    data_selector: campaign_data
- name: event_tracking
  endpoint:
    path: /docs/event-tracking
    method: GET
    data_selector: event_data
- name: welcome_message
  endpoint:
    path: /welcome-message
    method: GET
    data_selector: response
- name: referrer_code
  endpoint:
    path: /get-referrer-code
    method: GET
    data_selector: response
- name: referring_params
  endpoint:
    path: /get-referring-params
    method: GET
    data_selector: response
- name: popup
  endpoint:
    path: /show-popup
    method: GET
    data_selector: response
- name: user_data
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: campaign
  endpoint:
    path: /docs/campaign
    method: GET
    data_selector: records
    params: {}
- name: event_tracking
  endpoint:
    path: /docs/event-tracking
    method: GET
    data_selector: records
    params: {}
- name: campaign
  endpoint:
    path: /campaign
    method: POST
    data_selector: data
    params: {}
- name: campaignPopup
  endpoint:
    path: /campaignPopup
    method: POST
    data_selector: data
    params: {}
- name: campaign
  endpoint:
    path: /api/campaign
    method: POST
    data_selector: response
    params: {}
- name: campaign_popup
  endpoint:
    path: /api/campaignPopup
    method: POST
    data_selector: response
    params: {}
- name: sharing_details
  endpoint:
    path: /getSharingDetails
    method: POST
    data_selector: data
    params: {}
- name: sharing_details
  endpoint:
    path: /getSharingDetails
    method: GET
    data_selector: data
    params: {}
- name: tracking_events
  endpoint:
    path: /track/event
    method: POST
    data_selector: response
    params: {}
- name: tracking_events
  endpoint:
    path: /docs/tracking-events
    method: POST
    data_selector: response
    params: {}
- name: welcome_message
  endpoint:
    path: /welcome-message
    method: GET
    data_selector: response
- name: referrer_code
  endpoint:
    path: /get-referrer-code
    method: GET
    data_selector: response
- name: referring_params
  endpoint:
    path: /get-referring-params
    method: GET
    data_selector: response
- name: popup
  endpoint:
    path: /show-popup
    method: GET
    data_selector: response
- name: show_welcome_message
  endpoint:
    path: /showWelcomeMessage
    method: GET
    data_selector: response
    params: {}
- name: get_referrer_code
  endpoint:
    path: /getReferrerCode
    method: GET
    data_selector: response
    params: {}
- name: get_referring_params
  endpoint:
    path: /getReferringParams
    method: GET
    data_selector: response
    params: {}
- name: show_pop_up
  endpoint:
    path: /showPopUp
    method: GET
    data_selector: response
    params: {}
- name: invitereferrals
  endpoint:
    path: /rest/InviteReferrals
    method: POST
    data_selector: records
- name: AndroidManifest
  endpoint:
    path: /path/to/android/manifest
    method: GET
    data_selector: records
    params: {}
- name: info.plist
  endpoint:
    path: /path/to/ios/info.plist
    method: GET
    data_selector: records
    params: {}
- name: campaign_invite
  endpoint:
    path: /campaign
    method: POST
    data_selector: callback response
    params: {}
- name: campaign
  endpoint:
    path: /api/campaign
    method: POST
    data_selector: response
    params: {}
- name: campaign
  endpoint:
    path: /getSharingDetails
    method: POST
    data_selector: data
    params: {}
- name: campaign
  endpoint:
    path: /getSharingDetails
    method: GET
    data_selector: data
    params: {}
- name: event_tracking
  endpoint:
    path: /docs/event-tracking
    method: POST
    data_selector: response
    params: {}
- name: tracking_events
  endpoint:
    path: /track/events
    method: POST
    data_selector: response
    params: {}
- name: welcome_message
  endpoint:
    path: /docs/welcome-message
    method: GET
    data_selector: response
    params: {}
- name: referrer_code
  endpoint:
    path: /docs/referrer-code
    method: GET
    data_selector: response
    params: {}
- name: referring_params
  endpoint:
    path: /docs/referring-params
    method: GET
    data_selector: response
    params: {}
- name: popup
  endpoint:
    path: /docs/pop-up
    method: GET
    data_selector: response
    params: {}
- name: welcome_message
  endpoint:
    path: /showWelcomeMessage
    method: GET
    data_selector: response
    params: {}
- name: referrer_code
  endpoint:
    path: /getReferrerCode
    method: GET
    data_selector: response
    params: {}
- name: referring_params
  endpoint:
    path: /getReferringParams
    method: GET
    data_selector: response
    params: {}
- name: pop_up
  endpoint:
    path: /showPopUp
    method: GET
    data_selector: response
    params: {}
- name: referral_tracking_pixel
  endpoint:
    path: /docs/referral-tracking-pixel
    method: GET
- name: campaign_setup_guide
  endpoint:
    path: /docs/campaign-setup-guide
    method: GET
- name: campaign_promotion_guide
  endpoint:
    path: /docs/campaign-promotion-guide
    method: GET
- name: Confirm Conversion API
  endpoint:
    path: /edit/confirm-conversion-api
    method: GET
- name: conversion
  endpoint:
    path: /conversion/add
    method: POST
    data_selector: data
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: data
    params: {}
- name: referral
  endpoint:
    path: /js/invite-referrals-1.0.js
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/events
    method: GET
    data_selector: data
    params: {}
- name: conversion
  endpoint:
    path: /conversion/add
    method: POST
    data_selector: data
- name: user_create
  endpoint:
    path: /user/create
    method: POST
    data_selector: nv
    params: {}
- name: Confirm Conversion API
  endpoint:
    path: /edit/confirm-conversion-api
    method: GET
- name: user_create
  endpoint:
    path: /user/create
    method: POST
    data_selector: userIDs
- name: user_delete
  endpoint:
    path: /user/delete
    method: POST
    data_selector: status_code
- name: user_data
  endpoint:
    path: /user/userData
    method: POST
    data_selector: userIDs
- name: user_event
  endpoint:
    path: /user_event/create
    method: POST
    data_selector: status_code
- name: upload_user_profile
  endpoint:
    path: /user/create
    method: POST
    data_selector: userIDs
    params: {}
- name: delete_user_profile
  endpoint:
    path: /user/delete
    method: POST
    data_selector: status_code
    params: {}
- name: individual_user_profile_data
  endpoint:
    path: /user/userData
    method: POST
    data_selector: status_code
    params: {}
- name: create_update_user_profile_and_log_event
  endpoint:
    path: /user_event/create
    method: POST
    data_selector: status_code
    params: {}
- name: user_profile
  endpoint:
    path: /user/create
    method: POST
- name: user_profile
  endpoint:
    path: /user/userData
    method: POST
    data_selector: userProfileData
- name: delete_user_profile
  endpoint:
    path: /api/v1/user/delete
    method: POST
- name: upload_events
  endpoint:
    path: /api/v1/event/create
    method: POST
- name: user_event
  endpoint:
    path: /user_event/create
    method: POST
- name: send_notification_to_individual
  endpoint:
    path: /web/send
    method: POST
- name: send_notification_to_all
  endpoint:
    path: /Web/broadcast/all
    method: POST
- name: send_notification_to_segment
  endpoint:
    path: /web/broadcast/segment
    method: POST
- name: send_to_individual_user
  endpoint:
    path: /web/send
    method: POST
    data_selector: notification
    params: {}
- name: send_to_all_subscribers
  endpoint:
    path: /Web/broadcast/all
    method: POST
    data_selector: notification
    params: {}
- name: send_to_specific_segment
  endpoint:
    path: /web/broadcast/segment
    method: POST
    data_selector: notification
    params: {}
- name: send_to_specific_segment
  endpoint:
    path: /web/broadcast/segment
    method: POST
- name: send_to_individual_user
  endpoint:
    path: /send
    method: POST
    data_selector: ''
    params: {}
- name: send_to_all_subscribers
  endpoint:
    path: /broadcast/all
    method: POST
    data_selector: ''
    params: {}
- name: send_to_particular_segment
  endpoint:
    path: /broadcast/segment
    method: POST
    data_selector: ''
    params: {}
- name: send_to_individual_subscriber
  endpoint:
    path: /android/send
    method: POST
- name: send_to_individual_user
  endpoint:
    path: /send
    method: POST
- name: send_to_all_subscribers
  endpoint:
    path: /broadcast/all
    method: POST
- name: send_to_particular_segment
  endpoint:
    path: /broadcast/segment
    method: POST
- name: send_to_particular_segment
  endpoint:
    path: /android/broadcast/segment
    method: POST
- name: send_notification_individual
  endpoint:
    path: /ios/send
    method: POST
- name: send_notification_all
  endpoint:
    path: /ios/broadcast/all
    method: POST
- name: send_notification_segment
  endpoint:
    path: /ios/broadcast/segment
    method: POST
- name: send_to_all_subscribers
  endpoint:
    path: /api/v1/android/broadcast/all
    method: POST
- name: send_notification_to_individual_user
  endpoint:
    path: /send
    method: POST
    data_selector: response
    params: {}
- name: broadcast_to_all_subscribers
  endpoint:
    path: /broadcast/all
    method: POST
    data_selector: response
    params: {}
- name: broadcast_to_segment
  endpoint:
    path: /broadcast/segment
    method: POST
    data_selector: response
    params: {}
- name: send_to_all_subscribers
  endpoint:
    path: /api/v1/ios/broadcast/all
    method: POST
- name: send_to_individual_subscriber
  endpoint:
    path: /ios/send
    method: POST
- name: send_to_particular_segment
  endpoint:
    path: /ios/broadcast/segment
    method: POST
- name: send_message
  endpoint:
    path: /sendMessage
    method: POST
    data_selector: response
    params: {}
- name: broadcast_all
  endpoint:
    path: /email/broadcast/all
    method: POST
    data_selector: response
    params: {}
- name: broadcast_segment
  endpoint:
    path: /email/broadcast/segment
    method: POST
    data_selector: response
    params: {}
- name: send_message
  endpoint:
    path: /sendMessage
    method: POST
    data_selector: response
    params: {}
- name: broadcast_all
  endpoint:
    path: /email/broadcast/all
    method: POST
    data_selector: response
    params: {}
- name: broadcast_segment
  endpoint:
    path: /email/broadcast/segment
    method: POST
    data_selector: response
    params: {}
- name: send_to_specific_segment
  endpoint:
    path: /email/broadcast/segment
    method: POST
- name: send_message
  endpoint:
    path: /sendMessage
    method: POST
    data_selector: response
    params: {}
- name: broadcast_all
  endpoint:
    path: /sms/broadcast/all
    method: POST
    data_selector: response
    params: {}
- name: broadcast_segment
  endpoint:
    path: /sms/broadcast/segment
    method: POST
    data_selector: response
    params: {}
- name: send_to_all_users
  endpoint:
    path: /api/v1/sms/broadcast/all
    method: POST
- name: send_message
  endpoint:
    path: /sendMessage
    method: POST
    data_selector: data
    params: {}
- name: broadcast_all
  endpoint:
    path: /sms/broadcast/all
    method: POST
    data_selector: data
    params: {}
- name: broadcast_segment
  endpoint:
    path: /sms/broadcast/segment
    method: POST
    data_selector: data
    params: {}
- name: campaigns_stats
  endpoint:
    path: /getCampaignsStats
    method: POST
- name: campaign_analytics
  endpoint:
    path: /api/v1/getChannelStats
    method: POST
- name: channel_timeseries
  endpoint:
    path: /api/v1/getChannelTimeseries
    method: POST
- name: campaign_stats
  endpoint:
    path: /api/v1/getCampaignsStats
    method: POST
- name: nps_responses
  endpoint:
    path: /getUserResponses
    method: GET
    data_selector: Data
    params:
      userID: mandatory
      npsID: mandatory
      tokens: optional
      start_date: optional
      end_date: optional
- name: channel_timeseries
  endpoint:
    path: /api/v1/getChannelTimeseries
    method: POST
- name: conversion_confirm
  endpoint:
    path: /conversion/confirm
    method: POST
- name: NPS Responses
  endpoint:
    path: /getUserResponses
    method: GET
    data_selector: Data
    params:
      npsID: mandatory
      userID: mandatory
      tokens: optional
      start_date: optional
      end_date: optional
- name: confirm_unique_code
  endpoint:
    path: /conversion/confirm_unique_code
    method: POST
- name: user_responses
  endpoint:
    path: /getUserResponses
    method: POST
- name: confirm_referrer_code
  endpoint:
    path: /conversion/confirm_referrer_code
    method: POST
- name: add_conversion
  endpoint:
    path: /conversion/add
    method: POST
    data_selector: response
    params: {}
- name: conversion_confirm
  endpoint:
    path: /conversion/confirm
    method: POST
- name: order_remark
  endpoint:
    path: /conversion/order_remark
    method: POST
- name: confirm_unique_code
  endpoint:
    path: /conversion/confirm_unique_code
    method: POST
- name: user_enrollment
  endpoint:
    path: /user/enrollment
    method: POST
- name: confirm_referrer_code
  endpoint:
    path: /conversion/confirm_referrer_code
    method: POST
- name: referral_stats
  endpoint:
    path: /user/referral_stats
    method: POST
- name: user_enrollment
  endpoint:
    path: /user/enrollment
    method: POST
- name: Points Create/Update
  endpoint:
    path: /earn/{activity id}
    method: POST
- name: most_invites
  endpoint:
    path: /winnerTicker/most_invites
    method: POST
- name: loyalty_activity
  endpoint:
    path: /transaction
    method: POST
- name: points_create_update
  endpoint:
    path: /earn/{activity id}
    method: POST
- name: update_points
  endpoint:
    path: /updatePoints/{activity id}
    method: POST
- name: Update Loyalty User
  endpoint:
    path: /userDetails
    method: POST
- name: loyalty_activity
  endpoint:
    path: /transaction
    method: POST
- name: event_metrics
  endpoint:
    path: /get_event
    method: POST
    data_selector: response.data
    params:
      fromDate: YYYY-MM-DD
      toDate: YYYY-MM-DD
      trend_metric: string
      event_name: string
- name: update_loyalty_user
  endpoint:
    path: /userDetails
    method: POST
- name: date_wise_events_counts
  endpoint:
    path: /api/v1/get_event
    method: POST
- name: event
  endpoint:
    path: /get_event
    method: POST
    data_selector: response.data
    params:
      fromDate: '2024-08-01'
      toDate: '2024-08-31'
      timeseries: daily
      trend_metric: unique_users
      event_name: vaar
- name: event_property_breakdown
  endpoint:
    path: /api/v1/get_event/property
    method: POST
- name: date_wise_events_counts
  endpoint:
    path: /get_event
    method: POST
    data_selector: metrics
notes:
- Customer Engagement has now become hassle-free at your shopify store.
- Provide your customers with a unique and personalized shoppable experience with
  magento.
- SDKs support in driving the On-site / In-App Notifications, Surveys, Push engagements.
- Replace YOUR_API_KEY with NotifyVisitors' API key.
- Replace YOUR_BRAND_ID with NotifyVisitors' Brand id.
- The size of the file should never exceed 50 MB.
- Your file must have a unique user id for every user.
- 'The attribute values shall be of the following data types: Boolean, integer, string
  or array.'
- You can only upload custom events and attributes in your CSV file.
- The event_time attribute (yyyy-mm-dd H:i:s or the epoch time format) is mandatory
  for the CSV file.
- You must have an SFTP client to be able to import data to NotifyVisitors’ SFTP server.
- You need to upload your file in CSV format.
- The data file has not been uploaded. Upload it and create a new manifest file.
- The file is not uploaded in the required format. Upload the file again with the
  right format, i.e., CSV for data files and manifest file for mapping
- The event name is not mentioned
- There could be certain instances where you can have some errors while uploading
  the file.
- You need to create an AWS S3 bucket and API key for importing data.
- A manifest file is required after uploading the CSV file to check the uploaded data.
- You are required to create an AWS S3 bucket.
- You need to create an AWS API Key to import data to the S3 bucket.
- Default export format is CSV, but JSON format is also available for import.
- Can only add one SFTP key for import, but for exporting multiple keys can be added.
- Export data can be scheduled hourly, daily, weekly, or monthly.
- Data can be exported in CSV or JSON format.
- You can only add one SFTP key for import, but for exporting multiple keys can be
  added.
- 'Note: Replace NOTIFYVISITORS_BRAND_ID and NOTIFYVISITORS_ENCRYPTION_KEY with your
  NotifyVisitors original brand id and encryption key.'
- To ensure NotifyVisitors functions smoothly on your site while maintaining your
  CSP’s security, you need to update your policy to allow NotifyVisitors’ resources.
- Replace NOTIFYVISITORS_BRAND_ID and NOTIFYVISITORS_ENCRYPTION_KEY with your NotifyVisitors
  original brand id and encryption key.
- Events and users can be tracked simultaneously using the UserEvent function.
- Once user ID is assigned to the user, it cannot be changed further.
- Maximum limit for the unique user ID should have a limit of maximum 100 characters.
- The maximum limits for the unique user ID should have a limit of maximum 100 character.
- Safari web browser does not allow Web Push Notifications to run within it by default.
  Additional certificates are required to be uploaded.
- 'Values of an attribute can have only one of the following data types: Boolean,
  Number, String, Date, Map, and Array.'
- There are maximum 25 custom attributes per datatype.
- The maximum length of a String data type for an attribute is 1000 characters.
- The maximum length of an attribute Key is 50 characters.
- Attribute Names should contain only alpha-numeric, white spaces or ''; No other
  special characters are allowed.
- Safari web browser does not allow Web Push Notifications to run within it by default.
  Additional certificates are required to be uploaded and certain configurations are
  meant to be set.
- Using the ‘CHOOSE BROWSER’ section under the Integration tab, you can select the
  specific browsers in which you intend to deploy your Web Push Notifications.
- Certain web browsers like Safari and Mozilla Firefox have discontinued showing permission
  prompts in their ‘Native’ format upon page load.
- Some browsers have discontinued showing permission prompts in their ‘Native’ format
  upon page load.
- You have to insert the hosted image link here.
- Connecting your shopify store with NotifyVisitors is effortless.
- If you have closed the popup or wish to enable the extension later, you can access
  it from the settings menu.
- Integrate NotifyVisitors to your website using plugins.
- Connecting your Shopify store with NotifyVisitors is effortless.
- You will need to enable an extension from the popup that appears on your screen.
- Get Brand ID and Secret Key from the NotifyVisitors dashboard, Settings > Store
  Integration.
- Integration with NotifyVisitors app available in the Wix app store.
- Default tracking events are pre-enabled.
- You can quickly establish the connection by means of a few simple steps.
- Find the credentials for brand id and secret key by navigating to NV dashboard>Integration.
- You need to add credentials like Brand Key, Secret Key, Encrypted key for integration.
- Find the credentials for brand id and secret key by navigating to NV dashboard>Integration
- Integrating NotifyVisitors code on a website has never been easier.
- With GTM, you can integrate NotifyVisitors code in the most efficient manner.
- NotifyVisitors drops first-party cookies for user identification and tracking.
- NotifyVisitors does not save any user's Personally Identifiable Information (PII)
  data in cookies.
- We do not set 'HttpOnly' attribute on cookies because all our cookies are set on
  browser using javascript.
- NotifyVisitors stores first-party cookies only.
- All cookies are stored with the prefix _nv.
- Replace `yoursite.com` with your main domain.
- Requires setup of connected app in NotifyVisitors
- Your AMP page must pass in validation.
- Your site must be on https.
- Change background color of .amp_notification class and fill color in svg tag to
  change the notification icon color.
- The default notification icon is positioned on bottom-left, you can change the position
  of notification icon to the bottom-right by pacing the push-icon-left class with
  push-icon-right.
- Requires setup of NotifyVisitors account.
- Ensure correct permissions are set in AndroidManifest.xml.
- After performing the aforementioned configurations, the NotifyVisitors SDK will
  start working.
- Events API records all the actions that the users perform.
- Replace the below with your own NOTIFYVISITORS_BRAND_ID & NOTIFYVISITORS_BRAND_ENCRYPTION_KEY
- Uses OAuth2 for authentication.
- Names and Custom Event Attribute names must be under 50 characters in length.
- Keep the String attribute values under 1000 characters in length.
- Event Attributes for a Custom Event cannot exceed 25 times per data type.
- You cannot create segments for an Event Attribute value that is a List or a Map.
- Names and Custom Event Attribute names will be case sensitive and must be under
  50 characters in length.
- 'Custom Event Attributes are of data types like: String, Boolean, all subclasses
  of Number, Date, Map, List.'
- You cannot create segments for an Event Attribute value that is a List or a Map.
  However, you can use it in personalized campaigns.
- The first data point declared gets synced with NotifyVisitors. It will define the
  data type for the event attribute.
- The data type must be consistent with the value that you store against the attribute.
  Do not change the data type at a later stage because it will no longer flow to your
  NotifyVisitors dashboard.
- System User Attributes cannot be used for segmenting the users.
- 'Values of an attribute can have only one of the following data types: Boolean,
  Number, String, Date, Map and Array.'
- Requires OAuth2 authentication with a refresh token.
- Ensure the client ID and secret are correctly configured.
- Devices below Lollipop show only one icon in the push notifications.
- Devices supporting Lollipop & above show two notification icons i.e., small push
  icon & large push icon.
- Dynamic tokens are used to show personalized content in Notification messages in
  real time.
- Custom rules can be configured for targeting notifications.
- Android 5.0+ enforces your small icon to only be white and transparent.
- We highly recommend following the alpha rule as the icons may not look consistent
  on all devices.
- If you do not set a large icon, the app icon will be used instead.
- The recommended size of the large icon is 200x200 pixels.
- In case users deny the notification permission, then they don’t see intimations
  regarding foreground services within the notification drawer.
- Notifications may not appear due to network issues or app settings.
- Devices below Lollipop show only one icon in the push notifications, which you can
  configure from the notifyvisitors panel.
- Requires setup of Firebase project for FCM integration
- Android 5.0+ enforces your small icon to only be white and transparent, however,
  it still allows tinting on the notification, known as the "accent color".
- After you create a notification channel, you cannot change the notification behaviors.
- If you target Android 8.0 (API level 26) and post a notification without specifying
  a notification channel, the notification does not appear.
- You can delete a notification channel that doesn’t exist without an error.
- Delete all channels associated with a group prior to deleting the group.
- You can request permission from the user a maximum of two times.
- Requires proper OAuth2 setup for authentication
- App Link supported from SDK v5.4.11
- Notifications may show as 'Delivered' but not visible on devices due to network
  issues, background restrictions, or app permissions.
- If you have broadcast Push in the panel, NV-SDK offers two ways to use our Notification
  Center UI.
- The label name passed in the app should be the same as configured in the panel.
- If you have passed only one tab configuration in the function then SDK will show
  you the default UI.
- Upload your downloaded private key JSON file in the 'Upload Auth File' section.
- Add 'Sender ID' from your 'Cloud Messaging' section.
- Add 'App ID' (project ID) from your downloaded private key JSON file.
- If you want only the total count of unread notifications then you can pass the config
  parameter as null.
- When you call the function, you will get the output in specific JSON formats based
  on the context.
- In some android devices, push notification is restricted by default.
- A Pop-up Dialogue will show after calling this method.
- Users can rate your app on a scale of 1 to 5.
- Avoid asking the users for reviews on the first launch of your app.
- Do not send repetitive ratings prompts to the users, it can negatively influence
  your users’ opinions.
- 'This feature will be available from the SDK Version: 5.3.10'
- Maximum of two permission requests allowed.
- If denied both times, user must be guided to notification settings.
- From SDK v5.4.11 onwards, data will be received in both raw and JSON format.
- Customization(s) would be done at Module-level / app → src → main → res → values
  folder.
- 'Values can be #e0e0e0 OR ''name of drawable image'' OR url of image(.png, .jpg,
  .jpeg) OR rgba(255,0,0,0.7)'
- We as developers wouldn't be able to publish new packages on Bintray after 31st
  March 2021 and existing packages wouldn't be accessible for use after 1st February
  2022.
- We hardly recommend you for migrating to the below shared versions or above published
  on maven central by the 1st July 2021 or at the earliest to avoid any issues.
- Up to 15 action parameters can be added to push notifications.
- 'To change the COLOR of a time: <color name="nvCenterTimeColor">#94989F</color>'
- 'To change BORDER-COLOR of cardview: <color name="nv_center_cardview_borderColor">#a1a5ab</color>'
- 'To change COLOR of cardview content background color: <color name="nv_center_contentBgColor">#ffffff</color>'
- 'To change COLOR of coupon code: <color name="nv_center_coupon_codeColor">#000000</color>'
- 'To change divider COLOR between CTA buttons: <color name="nv_center_cta_BtnDividerColor">#d3d3d3</color>'
- 'To change the TEXT-COLOR of CTA button 1: <color name="nv_center_cta_first">#848484</color>'
- 'To change BACKGROUND-COLOR of CTA button 1: <color name="nv_center_cta_firstBgColor">#ffffff</color>'
- 'To change TEXT-COLOR of CTA button 2: <color name="nv_center_cta_second">#848484</color>'
- 'To change BACKGROUND-COLOR of CTA button 2: <color name="nv_center_cta_secondBgColor">#ffffff</color>'
- 'To change BACKGROUND-COLOR of icon: <color name="nv_center_iconBgColor">#EBEBEB</color>'
- 'To change the COLOR of a line above CTA buttons: <color name="nv_center_lineAboveCTAColor">#d3d3d3</color>'
- 'To change the TEXT-COLOR of summary: <color name="nv_center_pushSummaryColor">#94989F</color>'
- 'To change the TEXT-COLOR of message: <color name="nv_center_push_messageColor">#848484</color>'
- 'To change the TEXT-COLOR of title: <color name="nv_center_push_titleColor">#000000</color>'
- 'To change BACKGROUND-COLOR of remove icon: <color name="nv_center_removeIconBg">#00ffffff</color>'
- 'To apply COLOR-FILTER on empty image: <color name="nv_emptyImageTintColor">#9C9C9C</color>'
- 'To change BACKGROUND-COLOR of header: <color name="nv_headerBgColor">#D7F0F5</color>'
- 'To change BORDER-COLOR of header: <color name="nv_headerBorderColor">#86D0D7</color>'
- 'To change TEXT-COLOR of header title: <color name="nv_headerTextColor">#696E79</color>'
- 'To change COLOR of no_notification_message: <color name="nv_noNotificatioMsgColor">#9C9C9C</color>'
- 'To change the COLOR of status bar: <color name="nv_statusBarColor">#000000</color>'
- 'To change BACKGROUND color of header: <color name="nv_headerBgColor">#D7F0F5</color>'
- 'To change the FONT-SIZE of coupon code: <integer name="nvCenterCouponCodeFontSize">14</integer>'
- 'To change the FONT-SIZE of summary: <integer name="nvCenterSummaryFontSize">12</integer>'
- 'To change the FONT-SIZE of time: <integer name="nvCenterTimeFontSize">10</integer>'
- 'To change the FONT-SIZE of title: <integer name="nvCenterTitleFontSize">14</integer>'
- 'To change the FONT-SIZE of message: <integer name="nvCenter_push_Message_fontSize">14</integer>'
- 'To change border WIDTH of cardview: <integer name="nv_center_cardview_borderWidth">1</integer>'
- 'To change icon SIZE of CTA buttons: <integer name="nv_center_cta_BtnIconSize">25</integer>'
- 'To change FONT-SIZE of CTA text: <integer name="nv_center_cta_TextFontSize">13</integer>'
- 'To set HEIGHT of remove icon: <integer name="nv_center_removeIcon_height">30</integer>'
- 'To set WIDTH of remove icon: <integer name="nv_center_removeIcon_width">30</integer>'
- 'To change FONT-SIZE of header title: <integer name="nv_headerTextFontSize">20</integer>'
- 'To change the FONT-SIZE of no_notification_message: <integer name="nv_noNotificationMsgFontSize">20</integer>'
- 'To ON/OFF header: <integer name="nv_show_NC_header">1</integer>'
- 'To change TEXT of coupon code label: <string name="coupon_code">Coupon Code : </string>'
- 'To change TEXT of toast message of coupon code: <string name="coupon_code_copied">Coupon
  Code has been copied</string>'
- 'To change TEXT of no_notifications label: <string name="no_notifications">No New
  Notifications!</string>'
- 'To change TEXT of header: <string name="notifications_offers">Your latest updates
  and offers</string>'
- 'To change BACKGROUND of notification center: <string name="nv_NC_ActivityBg">nv_default_bg</string>'
- 'To change TEXT-STYLE of title: <string name="nv_center_TitleTextStyle">bold</string>'
- 'To change TEXT-STYLE of date: <string name="nv_center_push_DateStyle">normal</string>'
- 'To change TEXT-STYLE of message: <string name="nv_center_push_MsgStyle">normal</string>'
- 'To change TEXT-STYLE of summary: <string name="nv_center_push_SummaryStyle">normal</string>'
- 'To change TEXT-STYLE of CTA buttons: <string name="nv_center_push_ctaStyle">bold</string>'
- 'To change remove_icon IMAGE: <string name="nv_center_removeIconName"/>'
- 'To change IMAGE of default app_icon: <string name="nv_default_appicon">nvdefaulticon</string>'
- 'To change IMAGE of no_notification: <string name="nv_emptyImage">empty</string>'
- 'To provide custom FONT-ASSET: <string name="nv_fontAsset"/>'
- 'To change TEXT-STYLE of header: <string name="nv_headerTextStyle">normal</string>'
- 'To change TEXT-STYLE of no_notifications: <string name="nv_noNotificationTextStyle">normal</string>'
- NotifyVisitors collects App interactions, Location, DeviceID, and Purchase history
  (if your app has in-app purchases).
- JFrog formerly announced that they will make important changes that will influence
  users of Bintray, JCenter. We as developers wouldn't be able to publish new packages
  on Bintray after 31st March 2021 and existing packages wouldn't be accessible for
  use after 1st February 2022.
- We were publishing our Android SDK/artifacts to Jcenter for the recent couple of
  years and now we have moved to publish our artifacts to Maven Central.
- Change in app uninstall tracking for android devices may impact tracking accuracy.
- Firebase Blaze Plan Account Required for certain functionality.
- Replace <NV_BRAND_ID> and <NV_API_KEY> with your NotifyVisitors Brand ID and API
  Key in the index.js file. You can find these values in your dashboard.
- 'Configure APNS Key or Certificate in Notifyvisitors Panel: You need to upload either
  ''APNS Auth Key (recommended)'' or ''APNS Push Certificate'' and some details from
  your Apple Developer Account into your NotifyVisitors account under Settings section.'
- May 15, 2024 onwards, FCM is implementing changes regarding stale tokens for devices
  not connected to FCM in over 270 days.
- Make sure to always open the workspace from now on.
- Replace <NV_BRAND_ID> and <NV_API_KEY> with your NotifyVisitors Brand ID and API
  Key in the index.js file.
- NotifyVisitors immediately begins tracking once you integrate the SDK.
- Custom Event Attributes are of data types like NSString, NSNumber, NSDate, NSArray.
- You cannot create segments for an Event Attribute value that is NSArray or NSDictionary.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Once a user ID is assigned to the user, it cannot be changed further.
- Maximum number of characters allowed in making your userID have to be under a 100
  characters.
- Custom Event Attributes are of data types like NSString, NSNumber, NSDate, NSArray
- You cannot create segments for an Event Attribute value that is NSArray or NSDictionary.
  However, you can use it in personalized campaigns.
- System user attributes cannot be used for segmenting the users.
- Record details using User attributes as they do not change and their details are
  the same throughout one session.
- By default the WhatsApp opt-in setting is false. When the users decide to opt-in
  to channel you would have to set it to true.
- Integrate the provided code only once per ViewController to display in-app notifications.
- Dynamic tokens personalize content in real-time.
- APNS Auth Key is recommended over APNS Push Certificate as it does not expire annually.
- Use APNS Auth Key instead of APNS Push Certificate because it expires every year.
- Ensure details provided from Apple Developer Account are correct and case sensitive.
- Till the above steps are completed you will be able to receive only text content
  (i.e. title and message text) in push notifications and also delivery count can
  not be tracked in NotifyVistors panel.
- You need to configure Notification Service Extension along with AppGroup properly
  to complete Push integration and it will enable your push notification to receive
  rich media (image, audio or video) and also NotifyVisitors used it to enable you
  to add Action buttons, badge counts and to track delivery counts in your NotifyVisitors
  panel.
- Ensure that the Notification Service Extension is added and configured as described
  in our documentation.
- Use direct URLs for media attachments (image, audio, or video). Do not use URLs
  that point to HTML pages.
- Make sure to save a backup of your downloaded auth key (i.e. the .p8 file) in a
  secured place because you can't download the auth key file more than once.
- As of now, up to two .p8 keys you can have in your Apple Developer Account.
- Both App Groups and the Notification Service Extension must be correctly implemented
  for delivery tracking to function.
- APNS Certificate should only be generated for your App's Main Target not for the
  notification service extension target.
- Make sure you keep all three files in a safe place.
- You need to use the command-line OpenSSL tools for this.
- If you see the above response, then your Mac can reach APNS.
- Press Ctrl+C to close the connection.
- You can use the created auth key for all the apps, it will prevent you from creating
  and keeping many push certificates.
- Make sure notifyvisitorsNotificationService.didReceive() method of our SDK is called
  in the end of the didReceiveNotificationRequest()
- APNS Certificate should only be generated for your App's Main Target not for the
  notification service extension target otherwise it may not work to send push on
  your device.
- It's a good idea to test whether the certificate works.
- Configure info.plist to enable Action buttons, badge counts, and delivery counts.
- Ensure it is case sensitive and is exactly the same in both the info.plist files.
- Make sure notifyvisitorsNotificationService.didReceive() method is called in the
  end of the didReceiveNotificationRequest()
- Ensure case sensitivity for AppGroupID in both info.plist files.
- There are a maximum of 3 tabs allowed in our SDK for this type of Notification Center.
- If any one is nil or empty string then that tab will be skipped in the UI.
- There are a maximum of 3 tabs allowed in the SDK for this type of Notification Center.
- Tag labels passed at the app side must match (also case sensitive) with the tag
  labels set in your NotifyVisitors dashboard push notifications to apply filters
  in the Notification Center screen.
- By default Notification Title Font Name is Helvetica-Bold.
- By default Notification Title Font Size is 14.
- 'By default Notification Title Color is #696E79.'
- By default Notification Message Font Name is Helvetica.
- By default Notification Message Font Size is 12.
- 'By default Notification Message Color is #848484.'
- By default Notification Time Font Name is Helvetica.
- By default Notification Time Font Size is 10.
- 'By default Notification Time Color is #94989F.'
- By default Transparent Background of CTA Buttons is NO.
- 'By default Call To Action (CTA) Button Background Color is #ffffff.'
- 'By default Call To Action (CTA) Button Border Color is #696E79.'
- By default Call To Action (CTA) Button Border Width is 1.0.
- By default Call To Action (CTA) Button Text Font Name is Helvetica-Bold.
- By default Call To Action (CTA) Button Text Font Size is 14.
- 'By default First Call To Action (CTA) Button Text Color is #696E79.'
- 'By default Second Call To Action (CTA) Button Text Color is #696E79.'
- Customization(s) can be performed from the nvResourceValues.plist file which is
  included within your iOS SDK zip file.
- You can show or hide a title text in a header view to set its visibility goto nvBooleans
  and set the value of key nvShowHeaderView (set its value as YES / NO if nvShowHeaderView
  value is YES then header title view will be visible if its value is NO then header
  title view will be hidden).
- The above given details are only according to be used into NotifyVisitors iOS SDK
  and final answers to your App’s AppStore privacy Policy questions must be cross
  checked by data collected by your App or any other third party library used into
  your app.
- Default font name for notification title is Helvetica-Bold
- Default font size for notification title is 14
- 'Default color for notification title is #696E79'
- Default font name for notification message is Helvetica
- Default font size for notification message is 12
- 'Default color for notification message is #848484'
- Default font name for notification time is Helvetica
- Default font size for notification time is 10
- 'Default color for notification time is #94989F'
- Default value for TransparentCtaButtonBackground is NO
- 'Default background color for cta buttons is #ffffff'
- 'Default border color for cta buttons is #696E79'
- Default border width for cta buttons is 1.0
- Default font name for cta button text is Helvetica-Bold
- Default font size for cta button text is 14
- 'Default color for first cta button text is #696E79'
- 'Default color for second cta button text is #696E79'
- Kindly login to your NotifyVisitors account to see your credentials.
- API rate limit is 500 requests per minute.
- If the limit exceeds, an HTTP response code of 429 will be sent.
- Dummy Brand ID and Secret Key has been mentioned. Kindly login to your account to
  see your credentials.
- Hybrid Platforms (Flutter, Ionic Cordova/Capacitor, React-Native) plugins enable
  you to run SMS campaigns, push notifications, pop-ups and much more.
- Refer to the Push Notifications integration guide for details.
- 'For Android: FCM integration is required'
- 'For iOS: Apple Push Notifications Service Auth Key (APNs Auth Key) is required'
- It is recommended to use APNS Auth Key instead of APNS Push Certificate because
  it expires every year.
- Add Action buttons, badge counts, and track delivery counts in your NotifyVisitors
  panel.
- Requires integration with FCM for push notifications.
- Ensure that the same AppGroupID is checked (Turned On) in both the Main App Target
  and Notification Service Extension Target.
- In the example provided above, dummy Brand ID and Secret Key has been mentioned.
  Kindly login to your account to see your credentials.
- Use only Alpha Numerics for event names.
- Attribute Name should contain only alpha-numerics, no spaces, and only underscore.
- NotifyVisitors events data should be sent in batches to maintain minimal network
  usage.
- Names and Custom Event Attribute names are case-sensitive and must be under 50 characters
  in length.
- String attribute values must be under 1000 characters in length.
- Custom Event Attributes can be of data types like String, Boolean, Number, Date,
  Map, List.
- Segments cannot be created for Event Attribute values that are Lists or Maps.
- Requires creation of Notification Service Extension in Xcode
- Ensure proper configuration of info.plist for Notification Service Extension
- NotifyVisitors starts to detect users right after you integrate your app platform
  through our SDKs.
- Make sure notifyvisitorsNotificationService.didReceive() method of our SDK is called
  in the end of the didReceiveNotificationRequest() if you modify payload after calling
  this method then SDK may not work properly
- Make sure it is case sensitive and is exactly the same in both the info.plist files.
- There are a maximum of 25 custom attributes per datatype.
- Attribute names should contain only alpha-numerics and underscores.
- NotifyVisitors from time to time, send events data in batches to maintain minimal
  network usage and preserve battery life of user mobiles.
- Names and Custom Event Attribute names will be case-sensitive and must be under
  50 characters in length.
- Custom Event Attributes are of data types like String, Boolean, All subclasses of
  Number, Date, Map, List.
- You cannot create segments for an Event Attribute value that is a List or a Map,
  but you can use it in personalized campaigns.
- The first data point declared gets synced with NotifyVisitors and defines the data
  type for the event attribute.
- The data type must be consistent with the value that you store against the attribute;
  changing it later will prevent it from flowing to the NotifyVisitors dashboard.
- Some objects like Contact may return nulls in deeply nested fields
- Use system user attributes to segment users effectively.
- User registration may fail if required parameters are missing.
- For now in the above function, the callback will only be triggered whenever the
  close button is clicked otherwise it won't.
- Android 13 (API level 33) and higher supports runtime permission for sending non-exempt
  notifications.
- Attribute Names should contain only alpha-numeric, white spaces or underscores.
- If you target Android 8.0 (API level 26) and post a notification without specifying
  a notification channel, the notification does not appear and the system logs an
  error.
- Requires setup of connected app in api
- Uses OAuth2 with refresh token — requires setup of connected app in NotifyVisitors
- Some others important methods.
- In-app messaging includes both banners and surveys.
- Dynamic tokens are used to show personalized content in Notification messages in
  real-time.
- Android 13 (API level 33) and higher supports runtime permission for sending non-exempt
  (including Foreground Services (FGS)) notifications from an app.
- To change the COLOR of a time
- To change BORDER-COLOR of cardview
- To change COLOR of cardview content background color
- To change COLOR of coupon code
- To change divider COLOR between CTA buttons
- To change the TEXT-COLOR of CTA button 1
- To change BACKGROUND-COLOR of CTA button 1
- To change TEXT-COLOR of CTA button 2
- To change BACKGROUND-COLOR of CTA button 2
- To change BACKGROUND-COLOR of icon
- To change the COLOR of a line above CTA buttons
- To change the TEXT-COLOR of summary
- To change the TEXT-COLOR of message
- To change the TEXT-COLOR of title
- To change BACKGROUND-COLOR of remove icon
- To apply COLOR-FILTER on empty image
- To change BACKGROUND-COLOR of header
- To change BORDER-COLOR of header
- To change TEXT-COLOR of header title
- To change COLOR of no_notification_message
- To change the COLOR of status bar
- To change the FONT-SIZE of coupon code
- To change the FONT-SIZE of summary
- To change the FONT-SIZE of time
- To change the FONT-SIZE of title
- To change the FONT-SIZE of message
- To change border WIDTH of cardview
- To change icon SIZE of CTA buttons
- To change FONT-SIZE of CTA text
- To set HEIGHT of remove icon
- To set WIDTH of remove icon
- To change FONT-SIZE of header title
- To change the FONT-SIZE of no_notification_message
- To ON/OFF header
- To change TEXT of coupon code label
- To change TEXT of toast message of coupon code
- To change TEXT of no_notifications label
- To change TEXT of header
- To change BACKGROUND of notification center
- To change TEXT-STYLE of title
- To change TEXT-STYLE of date
- To change TEXT-STYLE of message
- To change TEXT-STYLE of summary
- To change TEXT-STYLE of CTA buttons
- To change remove_icon IMAGE
- To change IMAGE of default app_icon
- To change IMAGE of no_notification
- To provide custom FONT-ASSET
- To change TEXT-STYLE of header
- To change TEXT-STYLE of no_notifications
- 'For Android : FCM integration'
- 'For iOS: Apple Push Notifications Service Auth Key (APNs Auth Key)'
- In the above example, dummy Brand ID and Encryption keys are shown. Kindly login
  to your Notifyvisitors account to see your credentials.
- Use APNS Auth Key instead of APNS Push Certificate because it expires every year
  and you need to renew and reupload it each year.
- Notification Service Extension has been introduced in iOS 10 by Apple which allows
  you to add images, audio or video content to your push notification.
- Make sure that the path of your bridge-header.h file is included in build settings
  under Swift compiler-code generation as Objective-C bridging header.
- To apply COLOR-FILTER on empty image (it will be shown when center doesn’t have
  any notifications)
- To change BACKGROUND color of header
- To change TEXT of toast message of coupon code (shown at the time of clicking it)
- To provide custom FONT-ASSET, follow the below code
- NotifyVisitors from time to time, send events data in batches. This is done to maintain
  minimal network usage and preserve the battery life of our user mobiles.
- Custom Event Names and Attribute names will be case-sensitive and must be under
  50 characters in length.
- APNS Auth Key is recommended over APNS Push Certificate due to expiration issues.
- Custom Event Attribute names will be case-sensitive and must be under 50 characters
  in length.
- Notification Service Extension allows adding images, audio or video content to push
  notifications.
- Requires proper configuration as described in the documentation.
- Once the above steps are completed, your app will be able to receive rich push.
  Action Buttons and badge counts can be displayed but till now delivery count is
  not enabled so you will see 0 as delivery count.
- From plugin v4.0.2 onwards below implementation is highly recommended.
- NotifyVisitors from time to time, send events data in batches.
- Custom Event Names and Custom Event Attribute names will be case-sensitive and must
  be under 50 characters in length.
- Attribute Names should contain only alpha-numeric, white spaces or '_' ; No other
  special characters are allowed.
- You cannot create segments.
- 'Custom Event Attributes are of data types like: String, Boolean, All subclasses
  of Number, Date, Map, List.'
- Recommended to set unique User ID for tracking across devices.
- If you have multiple fragment tabs in your activity, you can use the show method
  for each fragment and pass the fragment name as the third argument.
- Android 13 (API level 33) and higher supports runtime permission for sending non-exempt
  notifications from an app.
- If 1 then header will be visible
- If 0 then header will be invisible
- 'Now build your project if you will get an AAPT error from App Config.xml. Import
  following line under widget section: xmlns:android="http://schemas.android.com/apk/res/android".'
- In the example provided above, dummy Brand ID and Encryption keys are mentioned.
  Kindly login to your NotifyVisitors account to see your credentials.
- In the example provided, dummy Brand ID and Secret Key has been mentioned. Kindly
  login to your account to see your credentials.
- Login to your NotifyVisitors Account to see your credentials.
- Make sure the given details must be correct and case sensitive.
- Use APNS Auth Key (recommended) instead of APNS Push Certificate because it expires
  every year.
- Ensure AppGroupID is case sensitive and exactly the same in both info.plist files.
- NotifyVisitors sends events data in batches to maintain minimal network usage and
  preserve battery life.
- The data type must be consistent with the value stored against the attribute.
- NotifyVisitors sends events data in batches to maintain minimal network usage and
  preserve battery life of user mobiles.
- Segments cannot be created for an Event Attribute value that is a List or a Map.
- Attribute Names should contain only alpha-numeric, white spaces or '_'.
- Businesses do not like to share their users’ contact details with a third party
  platform like Notifyvisitors.
- Custom rules can be used in configuring targeting rules for the Notifications.
- From plugin v2.0.5 onwards, a new implementation is recommended.
- From plugin v2.0.5 onwards, the updated method for displaying in-app messages is
  recommended.
- 'For Android : FCM integration required'
- No authentication required for API access.
- Now build your project if you will get an AAPT error from App Config.xml. Import
  following line under widget section.
- Dummy Brand ID and Secret Key mentioned in the example — log in to your account
  to see your credentials.
- React-Native plugin enables sending push notifications from the dashboard.
- Notification Service Extension allows you to add images, audio or video content
  to your push notification.
- Make sure to configure the info.plist properly.
- Requires setup of Notification Service Extension in Xcode
- Ensure proper configuration of Push Notifications in Signing & Capabilities
- Event Names and Custom Event Attribute names will be case-sensitive and must be
  under 50 characters in length.
- The userIdentifier method is deprecated from Plugin v^4.4.2 onwards.
- Uses dynamic tokens for personalized content in notifications.
- The show() method should be used only once per activity.
- Targets Android 13 (API level 33) and higher for runtime permission.
- Supports custom notification center UI.
- Callback feature available for handling close button actions.
- In hybrid Applications (Flutter/ React-Native/ Ionic/ Cordova), only one activity/view-controller
  can exist in the application.
- Customization(s) would be done at Module-level / *app → src → main → res → values*
  folder.
- Customization can be done at Module-level / app → src → main → res → values folder.
- 'Values can be #e0e0e0 OR "name of drawable image" OR url of image(.png, .jpg, .jpeg)
  OR rgba(255,0,0,0.7)'
- Follow the steps to integrate to Android/IOS sdk in your application
- You have to pass the same User Identifier(i.e email or phone number) as configured
  in InviteReferrals profile settings.
- You can find your secret key in IR panel under Integration.
- Uses OAuth2 for authentication
- You can add more fields for the android signing keys.
- Now Copy the value of iOS App Associated Domain for InviteReferrals Onelink.
- For Asynchronous Javascript SDK, set invite_referrals.async to true
- To use this method, you need to integrate InviteReferrals updated integration code
  on your landing page.
- Authentication Keys for Plugins
- You will have to login to your InviteReferrals account and replace the ‘dummy values’
  with ‘genuine ones’.
- Integration requires installation of the InviteReferrals plugin on WordPress.
- In the following 'code', 'dummy values' are mentioned for both the 'Brand ID' as
  well as the 'Encryption Key' i.e., the values of the two keys namely 'bid' and 'bid_e'
  aren't genuine.
- You need to go to OpenCart Marketplace to download the InviteReferrals app.
- After installing the app, you have to upload the desired extension for integration.
- Requires brand ID and Encryption key for integration
- Integration completed through the IR dashboard
- Navigate to the IR dashboard>integration to get the credentials for brand id and
  encrypted key
- You have to add credentials like Brand Key, Secret Key, Encrypted key for integration.
- We recommend you to duplicate your live store on a staging/test site and try installation
  on it in advance
- Use the provided JavaScript code to get javascript callback of referral conversion.
- Use JavaScript callback to get referral conversion response.
- Configure your info.plist
- Import InviteReferrals SDK into your Project
- Import Header File
- Initialize the SDK
- Configure App Universal Link (DeepLink)
- In the above example Dummy Brand ID and Encryption keys are shown. Kindly login
  your IR_Account to see your credentials.
- Configure the above setting in the IR Dashboard at Your Campaign → Referral Link
  → Settings → For Mobile → Mobile App
- If user-B has already installed the App, then instead of opening the web browser
  the referral link will directly open the App.
- By default Template-1 UI will load so the value of template id will be set as 0.
- Different types of layouts or template variants are available for the campaign screen
  and each layout has its own distinct design or output.
- Some parts of the UI are customizable like the size of the icons, colour of the
  text etc. Here all customizations are done from IR_UserResources.plist file.
- If you don't pass user data then this callback will provide you with only the campaign-related
  data.
- If you pass user data then it will provide all data i.e. campaign data along with
  the user data.
- If you don't pass user data then this callback will provide you with only the campaign-related
  data. However, if you pass user data then it will provide all data i.e. campaign
  data along with the user data.
- Consider doing test event tracking for better understanding.
- Ensure to set up the webhook for event tracking.
- The welcome message gets displayed within a tiny popup.
- Referral codes track and link every step of the conversion process.
- Welcome message displayed to new customers upon first app launch after referral
  link installation.
- All previous SDK public methods can be accessed in the new SDK by using sharedInstance()
  of the class.
- Some methods have been removed/merged and new methods have been introduced.
- For detailed information of integration steps, refer to the latest SDK documentation.
- Uses sharedInstance() to access methods in the latest SDK.
- Methods have been renamed or merged in the latest SDK.
- Once you have integrated the IR Android SDK with your organization’s app, you simply
  need to create an invitation campaign using the InviteReferrals software.
- The best way to get started with InviteReferrals is to follow a few basic steps
  which delineate how to integrate the IR Android SDK ,build a campaign, and achieve
  a report within a couple of minutes.
- In the above example, dummy Brand ID and Encryption Keys are shown. Kindly login
  to your IR_Account to see your credentials.
- 'NOTE: Replace the below with your own INVITEREFERRALS_BRAND_ID & INVITEREFERRALS_BRAND_ENCRYPTION_KEY'
- When a referral link is shared, it redirects to the default browser before navigating
  to the app or play store.
- If the app is installed, the referral link opens the app directly; if not, it redirects
  to the play store.
- Rule Name & corresponding campaignID is required.
- If user data is not passed in the function then the widget will redirect to the
  IR login screen.
- If campaign data is not passed in the function then the widget will not work.
- Currently we have 2 templates for the campaign screen in IR SDK.
- By default, the value will be 0.
- By default, the value for templateID will be 0.
- If user data is not passed, the callback provides only campaign-related data.
- In order to troubleshoot sharing icons visibility, check if the app is installed
  on your device and if the required option is activated in the IR dashboard.
- For conversion tracking failures, check if the referrer and referee are the same,
  and review the IR Dashboard under the Conversion section for reasons.
- Its content or UI cannot be customized from the IR-SDK side.
- The popup will be displayed every time you call this function either until the user
  does not click on the close button or until the referrer has expired.
- The popup will be displayed every time you call the showWelcomeMessage function
  until the user clicks the close button or the referrer has expired.
- Values can be either image_url, hex color code, rgba color or drawable image.
- Values for background can be image_url, hex color code, rgba color or drawable image.
- Some values can also be text or drawable image.
- Uses XML configurations for UI customization
- The changes required to migrate to v1.1.1 are minimal. Certain structural changes
  involve removing or updating a few lines of code.
- InviteReferrals collects App interactions, DeviceID, and Purchase history (if your
  app has in-app purchases).
- For Android apps, InviteReferrals collects information pertaining only to 'Purchases'
  (in-app) and 'App interactions' (clicks and session duration).
- Users, events, campaigns, and reports are key to InviteReferrals.
- Once integrated, you can create an invitation campaign using the InviteReferrals
  software.
- Integration requires setup of campaigns in the InviteReferrals Dashboard.
- Dummy Brand ID and Encryption keys shown in the documentation. Kindly login your
  IR_account to see your credentials.
- Dummy Brand ID and Encryption keys shown. Kindly login your IR_account to see your
  credentials.
- 'Make sure that the path of bridge-header.h file is included in build settings under
  ''Swift compiler-code generation'' as: Objective C bridging header: YOUR_FLUTTER_IOS_PROJECT_NAME/YOUR_FLUTTER_IOS_PROJECT_NAME-Bridging-Header.h'
- In the above example, Dummy Brand ID and Encryption keys shown. Kindly login your
  IR_account to see your credentials.
- Some objects may return nulls in deeply nested fields
- Passing 0 in campaign id will launch your default campaign in your panel.
- Sample response includes various share text formats for different platforms.
- In case of Event name is null or empty, in callback response 'eventName' key will
  not appear.
- You can set up a webhook if you have your own API and you want data for different
  events to be sent on your server.
- Tracking Callback will provide responses to either failure or success.
- You need a React Native setup installed on your system to add the InviteReferrals
  React Native SDK to your React Native app for iOS and Android.
- In the above example, Dummy Brand ID and Encryption keys are shown. Kindly login
  to your IR_account to see your credentials.
- Make sure that the path of bridge-header.h file is included in build settings under
  'Swift compiler-code generation'
- Uses OAuth2 with refresh token
- Uses API key for authentication.
- Ensure to handle OAuth token refresh appropriately.
- Each NotifyVisitors account is automatically assigned a unique REST API key, which
  remains valid for the account's entire lifetime.
- 'Date format for the data will be in the format: yyyy-MM-ddTHH:mm:ss'
- You can create single or multiple users by this API. Upload a maximum of 100 users
  at an API call.
- If user profile merging is enabled, you can pass any one of userID, user_params.email
  or user_params.mobile. If merging is disabled, userID is mandatory.
- API rate limit is up to 500 requests per minute.
- You can send the push notifications on all these platforms to an individual, to
  a particular segment, or to all the subscribers
- The API rate limit is the number of time the API can be requested per minute. You
  can make up to 500 API requests per minute on an API.
- You can send notifications to an individual, to a particular segment, or to all
  the subscribers.
- The API rate limit is 500 requests per minute.
- Max 1000 messages allowed in one request
- You can make up to 500 API requests per minute on an API.
errors:
- 'Error: userId can not be empty.'
- '400: Invalid resource'
- '401: Invalid auth'
- '404: Invalid URL'
- 'No data file found: The data file has not been uploaded. Upload it and create a
  new manifest file.'
- 'File could not be read: The file is not uploaded in the required format. Upload
  the file again with the right format, i.e., CSV for data files and manifest file
  for mapping'
- 'Event name is mandatory: The event name is not mentioned'
- 'File could not be read: The file is not uploaded in the required format. Upload
  the file again with the right format, i.e., CSV for data files and manifest file
  for mapping.'
- 'Event name is mandatory: The event name is not mentioned.'
- 'The data file has not been found: The data file has not been uploaded.'
- 'The file is unreadable: The file is not uploaded in the correct format.'
- 'Event name is mandatory: Event name is unknown or not given.'
- 'The data file has not been found: The data file has not been uploaded. Upload it
  and create a new manifest file.'
- 'Unauthorized access: Check your API keys.'
- '400 Bad Request: Check your input data.'
- '401 Unauthorized: Verify API key.'
- '404 Not Found: Endpoint does not exist.'
- 'Fail: Please check for Event Name, it shouldn''t be NULL or EMPTY.'
- Context not found.
- Invalid SCOPE value found.
- Wrong credentials found. Recheck the NotifyVisitors BrandID and Encryption Key in
  your app's manifest file.
- No internet found.
- '1: Please check for Event Name, it shouldn''t be NULL or EMPTY.'
- '2.0, 2.1, 2.2: Context not found.'
- '3.0, 3.1, 3.2: Invalid SCOPE value found.'
- '4.0, 4.1: <event_name> event can be tracked once in <scope> days.  It will get
  tracked after <remaining_days> days.'
- '5: <event_name> event can be tracked once in <scope> days.  It will get tracked
  from tomorrow or later.'
- '6.0, 6.1, 6.2: Analytics / Event Status is inactive in the NV Panel.'
- '7: Wrong credentials found.  Recheck the NotifyVisitors BrandID and Encryption
  Key in your app''s manifest file.'
- '8: Something went wrong while processing via the API.'
- '9.0, 9.1: No response available corresponding to this event.'
- '10: LIFE-CYCLE Events INACTIVE or Your account is not upgraded. Kindly activate
  LIFE-CYCLE Event within your NotifyVisitors account or upgrade your account if required.'
- '11.0, 11.1: Conversion failed.'
- '12.0, 12.1: Authentication error.'
- '13: Something went wrong while processing the response.'
- '16.0, 16.1: No internet found.'
- '17.0: Attribution tracking is disabled in the NV Panel.'
- Required parameter(s) missing (userID or email or mobile)
- Something went wrong
- Analytics/Events Status is InActive
- SDK not initialized properly. Check for credentials in your application class
- No response available from request
- Authentication failed.
- 'fail: Required parameter(s) missing (userID or email or mobile)'
- '401 Unauthorized: Check your access token.'
- '403 Forbidden: You do not have permission to access this resource.'
- No internet found
- No data found regarding any banner/survey
- Notifications delayed due to poor network connection.
- Image not loading if URL is not a direct link.
- Pop-up launched. User denied SDK's custom popup permission.
- Pop-up launched. User denied permission.
- '401 Unauthorized: Check your credentials'
- '404 Not Found: Check the endpoint URL'
- '500 Internal Server Error: Please try again later'
- 'CHANNEL_ID_NOT_FOUND: Ensure the channel ID is unique and exists.'
- 'INVALID_IMPORTANCE: Importance level must be between 0 and 5.'
- Something went wrong with error --- <error>
- '404: unregistered - Indicates invalid token due to inactivity.'
- '404 error (unregistered): Returned from inactive apps that exceed 270 days of inactivity.'
- '13.1: Required parameter(s) missing (userID or email or mobile)'
- '13.4: SDK not initialized properly. Check for credentials in your application class'
- '13.8: Authentication failed.'
- 400 Invalid resource
- 401 Invalid auth
- 404 Invalid URL
- '429'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Ensure your API key is valid.'
- '500 Internal Server Error: Retry the request.'
- Authentication error.
- Please check for Event Name, it shouldn't be NULL or EMPTY.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '2: Context not found.'
- '3: Invalid SCOPE value found.'
- '12: Authentication error.'
- 'Failed with error :: <error>'
- 'Something went wrong while launching popup with error :: <error>'
- No error thrown when trying to delete a notification channel that doesn’t exist.
- '12.0: Authentication error.'
- '16.0: No internet found.'
- 'Success: Popup launched. User granted permission.'
- 'Success: Push permission is already active on this device.'
- 'Fail: According to the resumeInDays set by the user, next popup will be shown after
  <day> day(s).'
- 'Fail: Session count for popup set by the user has been exceeded. Next popup will
  resume after resumeInDays condition falls false.'
- 'Fail: Popup launched. User denied SDK''s custom popup permission.'
- 'Fail: Popup launched. User denied permission.'
- 'Error: Failed with error :: <error>'
- 'Error: Something went wrong while launching popup with error :: <error>'
- Notification channel does not appear if not specified for Android 8.0 and above.
- '2.0: Context not found.'
- '3.0: Invalid SCOPE value found.'
- '4.0: <event_name> event can be tracked once in <scope> days.'
- '5: It will get tracked from tomorrow or later.'
- '6.0: Analytics / Event Status is inactive in the NV Panel.'
- '9.0: No response available corresponding to this event.'
- '11.0: Conversion failed.'
- '5: It will get tracked after <remaining_days> days.'
- '4.0, 4.1: <event_name> event can be tracked once in <scope> days.'
- '7: Wrong credentials found. Recheck the NotifyVisitors BrandID and Encryption Key
  in your app''s manifest file.'
- '13.4: SDK not initialized properly. Check for credentials in your application class.'
- '400: Invalid Source'
- 'fail: conversion does not exist'
- 'fail: Access Denied'
- 'fail: Account Inactive'
- 'fail: Parameters missing'
- 'failed: Data not found'
- 'failed: No internet connection'
- 'Data not found: In case when data not found'
- 'Invalid authentication: if something went wrong and the API authentication failed
  or network error'
- 'Invalid account: In case of wrong account credential passed in AndroidManifest
  file (ie. BrandID and EncryptionKey)'
- 'Conversion not eligible: In case a referrer is not found, that means the referral
  link was not clicked if the referrer shared the referral link.'
- 'Parameter missing: Parameter missing, orderID or eventName cannot be empty or null'
- 'Install already tracked or not eligible: In case of Install or register event if
  that event already tracked or the tracking conditions are not eligible'
- 'Invalid account: In case of wrong account credential passed in configuration'
- 'Conversion not eligible: In case a referrer is not found or the referral link was
  not clicked'
- 'Install already tracked or not eligible: In case of Install or register event if
  that event already tracked'
- Invalid authentication
- Data not found
- Campaign data not found
- Something went wrong with the following error
- No Campaign Data passed from the function.
- Incorrect EmailID or Mobile Number
- 'Invalid Authentication: if something went wrong and the API authentication failed
  or network error'
- 'Invalid Account: In case of wrong account credential passed in AndroidManifest
  file (ie. BrandID and EncryptionKey)'
- 'Conversion not eligible: In case a referrer is not found, that means the referral
  link was not clicked if the referrer shared the referral link. OR In case of referrerCode
  /uniqueCode the value for referrerCode / unique code is either nil or invalid'
- 'install already tracked or not eligible: In case of Install or register event,
  if that event already tracked or the tracking conditions are not eligible'
- 'No REFERRER found: When no referrer is available.'
- Invalid account
- Conversion not eligible
- Parameter missing
- install already tracked or not eligible
- 'Invalid authentication: If something went wrong and the API authentication failed
  or network error'
- 'install already tracked or not eligible: In case of Install or register event if
  that event already tracked or the tracking conditions are not eligible'
- '401 Unauthorized: Recheck API key or permissions'
- 'Invalid authentication: 4'
- 'Data not found: 2'
- 'Campaign data not found: 3'
- 'No internet connection: 7'
- 'No internet connection: 8'
- 'Invalid authentication: Invalid authentication'
- 'Campaign data not found: In case campaign is InActive or no campaign found'
- 'No internet connection: Parameter missing, email id or mobile no as per IR account
  setting cannot be empty or null'
- 'No internet connection: No internet connection'
- Invalid Authentication
- Invalid Account
- 'install already tracked or not eligible: In case of Event name is null or empty,
  in callback response ''eventName'' key will not appear.'
- Parameter missing, email id or mobile no as per IR account setting cannot be empty
  or null
- No internet connection
- 'Campaign data not found: In case campaign is inactive or no campaign found'
- 'No internet connection: Parameter missing, email id or mobile no cannot be empty
  or null'
- 'Conversion not eligible: In case a referrer is not found, that means the referral
  link was not clicked if the referrer shared the referral link. OR In case of referrerCode/uniqueCode
  the value for referrerCode/unique code is either nil or invalid'
- 'install already tracked or not eligible: In case of Event name is null or empty'
- 'Authentication: fail'
- 'Error: Invalid authentication'
- 'ErrorType: 4'
- 'Error Message: Data not found'
- 'Error Type: 2'
- 'Error Message: Campaign data not found'
- 'Error Type: 3'
- 'Error Message: No internet connection'
- 'Error Type: 7'
- 'Error Type: 8'
- '401 Unauthorized: Check credentials'
- '404 Not Found: Verify endpoint'
- '401 Unauthorized: Recheck API key or access permissions.'
- '401 Unauthorized: Check your credentials and token validity.'
- '403: All records must contain userID'
- 'Rate limit exceeded: The API will throw an error if the limit exceeds.'
- 'Rate limit exceeded: The app will throw an error in response if the limit is exceeded.'
- 'Rate limit exceeded: The app will throw an error if the limit exceeds.'
- 'Rate limit exceeded: The app will throw an error if the limit is exceeded.'
- 'Rate limit exceeded: Exceeding the allowed number of API requests per minute.'
- 'Rate limit exceeded: API requests are subject to rate limits.'
- '401: API key was invalid'
- '403: API feature is not available on your current plan'
- '406: Format of the request was not correct'
- '422: Request was invalid'
- '429: Request was rate limited'
- '500: Trouble on our end'
- '503: Currently down for maintenance'
- '401: Indicates the API key was invalid.'
- '403: Indicates the API feature is not available on your current plan.'
- '406: Indicates that the format of the request was not correct.'
- '422: Indicates the request was invalid.'
- '429: Indicates the request was rate limited.'
- '500: Indicates that we are having trouble on our end.'
- '503: Indicates that we are currently down for maintenance.'
- '429 Too Many Requests: Rate limit exceeded'
auth_info:
  mentioned_objects:
  - OAuth2
  - ClientCredentials
  - AccessToken
  - APNS Auth Keys
  - APNS Certificate
  - Notification Service Extension
  - OauthToken
  - AuthProvider
  - NamedCredential
  - NotifyVisitorsApplication
  - brandID
  - Secret Key
  - Encrypted Key
  - InviteReferrals
  - IRCampaignInfo
  - IRUserInfo
client:
  base_url: https://www.notifyvisitors.com/
  auth:
    type: oauth2
source_metadata: null
