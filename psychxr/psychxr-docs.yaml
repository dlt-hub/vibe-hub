resources:
- name: LibOVRPose
  endpoint:
    path: /psychxr/drivers/libovr/LibOVRPose
    method: GET
    data_selector: records
    params: {}
- name: getEyeViewMatrix
  endpoint:
    path: /psychxr/drivers/libovr/getEyeViewMatrix
    method: GET
    data_selector: records
    params: {}
- name: getPredictedDisplayTime
  endpoint:
    path: /psychxr/drivers/libovr/getPredictedDisplayTime
    method: GET
    data_selector: records
    params: {}
- name: timeInSeconds
  endpoint:
    path: /psychxr/drivers/libovr/timeInSeconds
    method: GET
    data_selector: records
    params: {}
- name: getTrackingOriginType
  endpoint:
    path: /psychxr/drivers/libovr/getTrackingOriginType
    method: GET
    data_selector: records
    params: {}
- name: setTrackingOriginType
  endpoint:
    path: /psychxr/drivers/libovr/setTrackingOriginType
    method: POST
    data_selector: records
    params: {}
- name: recenterTrackingOrigin
  endpoint:
    path: /psychxr/drivers/libovr/recenterTrackingOrigin
    method: POST
    data_selector: records
    params: {}
- name: getTrackerCount
  endpoint:
    path: /psychxr/drivers/libovr/getTrackerCount
    method: GET
    data_selector: records
    params: {}
- name: getSessionStatus
  endpoint:
    path: /psychxr/drivers/libovr/getSessionStatus
    method: GET
    data_selector: records
    params: {}
- name: getAngleTo
  endpoint:
    path: /getAngleTo
    method: GET
- name: getAt
  endpoint:
    path: /getAt
    method: GET
- name: getAzimuthElevation
  endpoint:
    path: /getAzimuthElevation
    method: GET
- name: getModelMatrix
  endpoint:
    path: /getModelMatrix
    method: GET
- name: getEyeViewMatrix
  endpoint:
    path: /getEyeViewMatrix
    method: GET
- name: getPredictedDisplayTime
  endpoint:
    path: /getPredictedDisplayTime
    method: GET
- name: timeInSeconds
  endpoint:
    path: /timeInSeconds
    method: GET
- name: waitToBeginFrame
  endpoint:
    path: /waitToBeginFrame
    method: GET
- name: beginFrame
  endpoint:
    path: /beginFrame
    method: GET
- name: commitTextureSwapChain
  endpoint:
    path: /commitTextureSwapChain
    method: GET
- name: endFrame
  endpoint:
    path: /endFrame
    method: GET
- name: getTrackingOriginType
  endpoint:
    path: /getTrackingOriginType
    method: GET
- name: setTrackingOriginType
  endpoint:
    path: /setTrackingOriginType
    method: GET
- name: recenterTrackingOrigin
  endpoint:
    path: /recenterTrackingOrigin
    method: GET
- name: specifyTrackingOrigin
  endpoint:
    path: /specifyTrackingOrigin
    method: GET
- name: clearShouldRecenterFlag
  endpoint:
    path: /clearShouldRecenterFlag
    method: GET
- name: getTrackerCount
  endpoint:
    path: /getTrackerCount
    method: GET
- name: getTrackerInfo
  endpoint:
    path: /getTrackerInfo
    method: GET
- name: getSessionStatus
  endpoint:
    path: /getSessionStatus
    method: GET
- name: getSwingTwist
  endpoint:
    path: getSwingTwist
    method: GET
    data_selector: swing and twist quaternions
    params: {}
- name: getUp
  endpoint:
    path: getUp
    method: GET
    data_selector: up vector
    params: {}
- name: getViewMatrix
  endpoint:
    path: getViewMatrix
    method: GET
    data_selector: 4x4 view matrix
    params: {}
- name: getYawPitchRoll
  endpoint:
    path: getYawPitchRoll
    method: GET
    data_selector: yaw, pitch, and roll
    params: {}
- name: interp
  endpoint:
    path: interp
    method: GET
    data_selector: interpolated pose
    params: {}
- name: inverseRotate
  endpoint:
    path: inverseRotate
    method: GET
    data_selector: inverse rotated vector
    params: {}
- name: inverseTransform
  endpoint:
    path: inverseTransform
    method: GET
    data_selector: inverse transformed vector
    params: {}
- name: inverseTransformNormal
  endpoint:
    path: inverseTransformNormal
    method: GET
    data_selector: inverse transformed normal vector
    params: {}
- name: isEqual
  endpoint:
    path: isEqual
    method: GET
    data_selector: equality check
    params: {}
- name: isVisible
  endpoint:
    path: isVisible
    method: GET
    data_selector: visibility check
    params: {}
- name: LibOVRPose
  endpoint:
    path: /pose
    method: GET
    data_selector: pose
- name: LibOVRHmdInfo
  endpoint:
    path: /hmd/info
    method: GET
    data_selector: hmdInfo
- name: LibOVRTrackerInfo
  endpoint:
    path: /tracker/info
    method: GET
    data_selector: trackerInfo
- name: LibOVRSessionStatus
  endpoint:
    path: /session/status
    method: GET
    data_selector: sessionStatus
- name: LibOVRBoundaryTestResult
  endpoint:
    path: /boundary/test
    method: POST
    data_selector: boundaryTestResult
- name: LibOVRPerfStatsPerCompositorFrame
  endpoint:
    path: /perf/stats
    method: GET
    data_selector: perfStats
- name: getPos
  endpoint:
    path: /getPos
    method: GET
    data_selector: position
    params: {}
- name: getSwingTwist
  endpoint:
    path: /getSwingTwist
    method: GET
    data_selector: quaternions
    params: {}
- name: getUp
  endpoint:
    path: /getUp
    method: GET
    data_selector: up_vector
    params: {}
- name: getViewMatrix
  endpoint:
    path: /getViewMatrix
    method: GET
    data_selector: view_matrix
    params: {}
- name: getYawPitchRoll
  endpoint:
    path: /getYawPitchRoll
    method: GET
    data_selector: angles
    params: {}
- name: interp
  endpoint:
    path: /interp
    method: GET
    data_selector: interpolated_pose
    params: {}
- name: inverseModelMatrix
  endpoint:
    path: /inverseModelMatrix
    method: GET
    data_selector: inverse_transformation
    params: {}
- name: inverseRotate
  endpoint:
    path: /inverseRotate
    method: GET
    data_selector: rotated_vector
    params: {}
- name: inverseTransform
  endpoint:
    path: /inverseTransform
    method: GET
    data_selector: transformed_vector
    params: {}
- name: inverseTransformNormal
  endpoint:
    path: /inverseTransformNormal
    method: GET
    data_selector: transformed_normal
    params: {}
- name: inverseViewMatrix
  endpoint:
    path: /inverseViewMatrix
    method: GET
    data_selector: view_matrix_inverse
    params: {}
- name: invert
  endpoint:
    path: /invert
    method: GET
    data_selector: inverted_pose
    params: {}
- name: isEqual
  endpoint:
    path: /isEqual
    method: GET
    data_selector: equality_check
    params: {}
- name: isVisible
  endpoint:
    path: /isVisible
    method: GET
    data_selector: visibility_check
    params: {}
- name: modelMatrix
  endpoint:
    path: /modelMatrix
    method: GET
    data_selector: transformation_matrix
    params: {}
- name: normalMatrix
  endpoint:
    path: /normalMatrix
    method: GET
    data_selector: normal_matrix
    params: {}
- name: normalize
  endpoint:
    path: /normalize
    method: GET
    data_selector: normalized_pose
    params: {}
- name: ori
  endpoint:
    path: /ori
    method: GET
    data_selector: orientation_quaternion
    params: {}
- name: pos
  endpoint:
    path: /pos
    method: GET
    data_selector: position_vector
    params: {}
- name: posOri
  endpoint:
    path: /posOri
    method: GET
    data_selector: position_orientation
    params: {}
- name: raycastPose
  endpoint:
    path: /raycastPose
    method: GET
    data_selector: raycast_result
    params: {}
- name: raycastSphere
  endpoint:
    path: /raycastSphere
    method: GET
    data_selector: sphere_cast_result
    params: {}
- name: frame_stats
  endpoint:
    path: /getPerfStats
    method: GET
    data_selector: frameStats
    params: {}
- name: LibOVRHapticsInfo
  endpoint:
    path: /psychxr/drivers/libovr/LibOVRHapticsInfo
    method: GET
    data_selector: queueMinSizeToAvoidStarvation, sampleRateHz, sampleTime, submitMaxSamples,
      submitMinSamples, submitOptimalSamples
    params: {}
- name: LibOVRHapticsBuffer
  endpoint:
    path: /psychxr/drivers/libovr/LibOVRHapticsBuffer
    method: GET
    data_selector: samples
    params: {}
- name: LibOVRPose
  endpoint:
    path: /libovr/LibOVRPose
    method: GET
    data_selector: poseData
    params: {}
- name: LibOVRPoseState
  endpoint:
    path: /libovr/LibOVRPoseState
    method: GET
    data_selector: poseStateData
    params: {}
- name: LibOVRTrackingState
  endpoint:
    path: /libovr/LibOVRTrackingState
    method: GET
    data_selector: trackingStateData
    params: {}
- name: LibOVRBounds
  endpoint:
    path: /libovr/LibOVRBounds
    method: GET
    data_selector: boundsData
    params: {}
- name: frame_stats
  endpoint:
    path: /perfStats
    method: GET
    data_selector: frameStats
    params: {}
- name: alignTo
  endpoint:
    path: alignTo
    method: GET
    data_selector: parameters
    params: {}
- name: apply
  endpoint:
    path: apply
    method: GET
    data_selector: parameters
    params: {}
- name: distanceTo
  endpoint:
    path: distanceTo
    method: GET
    data_selector: parameters
    params: {}
- name: getPos
  endpoint:
    path: getPos
    method: GET
    data_selector: parameters
    params: {}
- name: getOri
  endpoint:
    path: getOri
    method: GET
    data_selector: parameters
    params: {}
- name: LibOVRPose
  endpoint:
    path: /LibOVRPose
    method: GET
- name: LibOVRPoseState
  endpoint:
    path: /LibOVRPoseState
    method: GET
- name: LibOVRTrackingState
  endpoint:
    path: /LibOVRTrackingState
    method: GET
- name: LibOVRBounds
  endpoint:
    path: /LibOVRBounds
    method: GET
- name: LibOVRHmdInfo
  endpoint:
    path: /LibOVRHmdInfo
    method: GET
- name: LibOVRPerfStats
  endpoint:
    path: /psychxr/drivers/libovr/LibOVRPerfStats
    method: GET
    data_selector: performance_stats
- name: LibOVRHapticsInfo
  endpoint:
    path: /psychxr/drivers/libovr/LibOVRHapticsInfo
    method: GET
    data_selector: haptics_info
- name: LibOVRHapticsBuffer
  endpoint:
    path: /psychxr/drivers/libovr/LibOVRHapticsBuffer
    method: POST
    data_selector: haptics_buffer
- name: LibOVRHmdInfo
  endpoint:
    path: /libovr/hmdinfo
    method: GET
    data_selector: returns
    params: {}
- name: LibOVRHmdColorSpace
  endpoint:
    path: /libovr/hmdcolorspace
    method: GET
    data_selector: returns
    params: {}
- name: LibOVRTrackerInfo
  endpoint:
    path: /libovr/trackerinfo
    method: GET
    data_selector: returns
    params: {}
- name: LibOVRSessionStatus
  endpoint:
    path: /libovr/sessionstatus
    method: GET
    data_selector: returns
    params: {}
- name: LibOVRBoundaryTestResult
  endpoint:
    path: /libovr/boundarytestresult
    method: GET
    data_selector: returns
    params: {}
- name: LibOVRPerfStatsPerCompositorFrame
  endpoint:
    path: /libovr/perfstats
    method: GET
    data_selector: returns
    params: {}
- name: LibOVRPerfStats
  endpoint:
    path: /perf_stats
    method: GET
    data_selector: performanceStats
    params: {}
- name: LibOVRHapticsInfo
  endpoint:
    path: /haptics_info
    method: GET
    data_selector: hapticsInfo
    params: {}
- name: LibOVRHapticsBuffer
  endpoint:
    path: /haptics_buffer
    method: POST
    data_selector: hapticsBuffer
    params: {}
- name: create
  endpoint:
    path: /create
    method: POST
    data_selector: result
- name: checkSessionStarted
  endpoint:
    path: /checkSessionStarted
    method: GET
    data_selector: result
- name: destroyTextureSwapChain
  endpoint:
    path: /destroyTextureSwapChain
    method: POST
    data_selector: result
- name: destroyMirrorTexture
  endpoint:
    path: /destroyMirrorTexture
    method: POST
    data_selector: result
- name: destroy
  endpoint:
    path: /destroy
    method: POST
    data_selector: result
- name: shutdown
  endpoint:
    path: /shutdown
    method: POST
    data_selector: result
- name: getGraphicsLUID
  endpoint:
    path: /getGraphicsLUID
    method: GET
    data_selector: result
- name: setHighQuality
  endpoint:
    path: /setHighQuality
    method: POST
    data_selector: result
- name: setHeadLocked
  endpoint:
    path: /setHeadLocked
    method: POST
    data_selector: result
- name: getPixelsPerTanAngleAtCenter
  endpoint:
    path: /getPixelsPerTanAngleAtCenter
    method: GET
    data_selector: result
- name: getTanAngleToRenderTargetNDC
  endpoint:
    path: /getTanAngleToRenderTargetNDC
    method: GET
    data_selector: result
- name: getPixelsPerDegree
  endpoint:
    path: /getPixelsPerDegree
    method: GET
    data_selector: result
- name: getDistortedViewport
  endpoint:
    path: /getDistortedViewport
    method: GET
    data_selector: result
- name: getEyeRenderFov
  endpoint:
    path: /getEyeRenderFov
    method: GET
    data_selector: result
- name: setEyeRenderFov
  endpoint:
    path: /setEyeRenderFov
    method: POST
    data_selector: result
- name: getEyeAspectRatio
  endpoint:
    path: /getEyeAspectRatio
    method: GET
    data_selector: result
- name: getEyeHorizontalFovRadians
  endpoint:
    path: /getEyeHorizontalFovRadians
    method: GET
    data_selector: result
- name: getEyeVerticalFovRadians
  endpoint:
    path: /getEyeVerticalFovRadians
    method: GET
    data_selector: result
- name: getEyeFocalLength
  endpoint:
    path: /getEyeFocalLength
    method: GET
    data_selector: result
- name: calcEyeBufferSize
  endpoint:
    path: /calcEyeBufferSize
    method: GET
    data_selector: result
- name: getDevicePoses
  endpoint:
    path: /getDevicePoses
    method: GET
    data_selector: device poses
    params: {}
- name: calcEyePoses
  endpoint:
    path: /calcEyePoses
    method: GET
    data_selector: eye poses
    params: {}
- name: getHmdToEyePose
  endpoint:
    path: /getHmdToEyePose
    method: GET
    data_selector: HMD to eye pose
    params: {}
- name: setHmdToEyePose
  endpoint:
    path: /setHmdToEyePose
    method: POST
    data_selector: set HMD to eye pose
    params: {}
- name: getEyeRenderPose
  endpoint:
    path: /getEyeRenderPose
    method: GET
    data_selector: eye render poses
    params: {}
- name: setEyeRenderPose
  endpoint:
    path: /setEyeRenderPose
    method: POST
    data_selector: set eye render pose
    params: {}
- name: getEyeProjectionMatrix
  endpoint:
    path: /getEyeProjectionMatrix
    method: GET
    data_selector: projection matrix
    params: {}
- name: getEyeRenderViewport
  endpoint:
    path: /getEyeRenderViewport
    method: GET
    data_selector: eye render viewport
    params: {}
- name: setEyeRenderViewport
  endpoint:
    path: /setEyeRenderViewport
    method: POST
    data_selector: set eye render viewport
    params: {}
- name: getDevicePoses
  endpoint:
    path: /getDevicePoses
    method: GET
    data_selector: poses
- name: calcEyePoses
  endpoint:
    path: /calcEyePoses
    method: GET
    data_selector: eyePoses
- name: getHmdToEyePose
  endpoint:
    path: /getHmdToEyePose
    method: GET
    data_selector: hmdToEyePose
- name: setHmdToEyePose
  endpoint:
    path: /setHmdToEyePose
    method: POST
    data_selector: setHmdToEyePoseResult
- name: getEyeRenderPose
  endpoint:
    path: /getEyeRenderPose
    method: GET
    data_selector: eyeRenderPose
- name: setEyeRenderPose
  endpoint:
    path: /setEyeRenderPose
    method: POST
    data_selector: setEyeRenderPoseResult
- name: getEyeRenderViewport
  endpoint:
    path: /getEyeRenderViewport
    method: GET
    data_selector: eyeRenderViewport
- name: setEyeRenderViewport
  endpoint:
    path: /setEyeRenderViewport
    method: POST
    data_selector: setEyeRenderViewportResult
- name: getEyeProjectionMatrix
  endpoint:
    path: /getEyeProjectionMatrix
    method: GET
    data_selector: eyeProjectionMatrix
- name: getEyeViewMatrix
  endpoint:
    path: /getEyeViewMatrix
    method: GET
- name: getPredictedDisplayTime
  endpoint:
    path: /getPredictedDisplayTime
    method: GET
- name: timeInSeconds
  endpoint:
    path: /timeInSeconds
    method: GET
- name: waitToBeginFrame
  endpoint:
    path: /waitToBeginFrame
    method: GET
- name: beginFrame
  endpoint:
    path: /beginFrame
    method: GET
- name: commitTextureSwapChain
  endpoint:
    path: /commitTextureSwapChain
    method: GET
- name: endFrame
  endpoint:
    path: /endFrame
    method: GET
- name: getTrackingOriginType
  endpoint:
    path: /getTrackingOriginType
    method: GET
- name: setTrackingOriginType
  endpoint:
    path: /setTrackingOriginType
    method: GET
- name: recenterTrackingOrigin
  endpoint:
    path: /recenterTrackingOrigin
    method: GET
- name: specifyTrackingOrigin
  endpoint:
    path: /specifyTrackingOrigin
    method: GET
- name: clearShouldRecenterFlag
  endpoint:
    path: /clearShouldRecenterFlag
    method: GET
- name: getTrackerCount
  endpoint:
    path: /getTrackerCount
    method: GET
- name: getTrackerInfo
  endpoint:
    path: /getTrackerInfo
    method: GET
- name: getSessionStatus
  endpoint:
    path: /getSessionStatus
    method: GET
- name: getEyeViewMatrix
  endpoint:
    path: /getEyeViewMatrix
    method: GET
- name: getPredictedDisplayTime
  endpoint:
    path: /getPredictedDisplayTime
    method: GET
- name: timeInSeconds
  endpoint:
    path: /timeInSeconds
    method: GET
- name: waitToBeginFrame
  endpoint:
    path: /waitToBeginFrame
    method: GET
- name: beginFrame
  endpoint:
    path: /beginFrame
    method: GET
- name: commitTextureSwapChain
  endpoint:
    path: /commitTextureSwapChain
    method: GET
- name: endFrame
  endpoint:
    path: /endFrame
    method: GET
- name: getTrackingOriginType
  endpoint:
    path: /getTrackingOriginType
    method: GET
- name: setTrackingOriginType
  endpoint:
    path: /setTrackingOriginType
    method: GET
- name: recenterTrackingOrigin
  endpoint:
    path: /recenterTrackingOrigin
    method: GET
- name: specifyTrackingOrigin
  endpoint:
    path: /specifyTrackingOrigin
    method: GET
- name: clearShouldRecenterFlag
  endpoint:
    path: /clearShouldRecenterFlag
    method: GET
- name: getTrackerCount
  endpoint:
    path: /getTrackerCount
    method: GET
- name: getTrackerInfo
  endpoint:
    path: /getTrackerInfo
    method: GET
- name: getSessionStatus
  endpoint:
    path: /getSessionStatus
    method: GET
- name: getPerfStats
  endpoint:
    path: /getPerfStats
    method: GET
    data_selector: Frame statistics
- name: resetPerfStats
  endpoint:
    path: /resetPerfStats
    method: POST
    data_selector: Error code
- name: getLastErrorInfo
  endpoint:
    path: /getLastErrorInfo
    method: GET
    data_selector: Last error code and information
- name: setBoundaryColor
  endpoint:
    path: /setBoundaryColor
    method: POST
    data_selector: Result of the API call
- name: resetBoundaryColor
  endpoint:
    path: /resetBoundaryColor
    method: POST
    data_selector: Result of the API call
- name: getBoundaryVisible
  endpoint:
    path: /getBoundaryVisible
    method: GET
    data_selector: Boundary state
- name: showBoundary
  endpoint:
    path: /showBoundary
    method: POST
    data_selector: Result of the API call
- name: hideBoundary
  endpoint:
    path: /hideBoundary
    method: POST
    data_selector: Result of the API call
- name: getBoundaryDimensions
  endpoint:
    path: /getBoundaryDimensions
    method: GET
    data_selector: Boundary dimensions
- name: testBoundary
  endpoint:
    path: /testBoundary
    method: POST
    data_selector: Collision test results
- name: getConnectedControllerTypes
  endpoint:
    path: /getConnectedControllerTypes
    method: GET
    data_selector: IDs of connected controller types
- name: updateInputState
  endpoint:
    path: /updateInputState
    method: POST
    data_selector: Polling time
- name: getButton
  endpoint:
    path: /getButton
    method: GET
    data_selector: Button state
- name: getTouch
  endpoint:
    path: /getTouch
    method: GET
    data_selector: Touch state
- name: getPerfStats
  endpoint:
    path: /getPerfStats
    method: GET
    data_selector: Frame statistics
- name: resetPerfStats
  endpoint:
    path: /resetPerfStats
    method: GET
    data_selector: Error code
- name: getLastErrorInfo
  endpoint:
    path: /getLastErrorInfo
    method: GET
    data_selector: Tuple of the API call result and error string
- name: setBoundaryColor
  endpoint:
    path: /setBoundaryColor
    method: POST
    data_selector: Result of the LibOVR API call
- name: resetBoundaryColor
  endpoint:
    path: /resetBoundaryColor
    method: POST
    data_selector: Result of the LibOVR API call
- name: getBoundaryVisible
  endpoint:
    path: /getBoundaryVisible
    method: GET
    data_selector: Result of the LibOVR API call and the boundary state
- name: showBoundary
  endpoint:
    path: /showBoundary
    method: POST
    data_selector: Result of LibOVR API call
- name: hideBoundary
  endpoint:
    path: /hideBoundary
    method: POST
    data_selector: Result of LibOVR API call
- name: getBoundaryDimensions
  endpoint:
    path: /getBoundaryDimensions
    method: GET
    data_selector: Result of the LibOVR API call and the dimensions of the boundary
- name: testBoundary
  endpoint:
    path: /testBoundary
    method: POST
    data_selector: Result of the LibOVR API call and collision test results
- name: getConnectedControllerTypes
  endpoint:
    path: /getConnectedControllerTypes
    method: GET
    data_selector: IDs of connected controller types
- name: updateInputState
  endpoint:
    path: /updateInputState
    method: POST
    data_selector: Result of the LibOVR API call and polling time in seconds
- name: getButton
  endpoint:
    path: /getButton
    method: GET
    data_selector: Result of the button press and the time in seconds it was polled
- name: getTouch
  endpoint:
    path: /getTouch
    method: GET
    data_selector: Get a touch state
- name: getTouch
  endpoint:
    path: /getTouch
    method: GET
- name: getThumbstickValues
  endpoint:
    path: /getThumbstickValues
    method: GET
- name: getIndexTriggerValues
  endpoint:
    path: /getIndexTriggerValues
    method: GET
- name: getTouch
  endpoint:
    path: /getTouch
    method: GET
    data_selector: result
    params: {}
- name: getThumbstickValues
  endpoint:
    path: /getThumbstickValues
    method: GET
    data_selector: result
    params: {}
- name: getIndexTriggerValues
  endpoint:
    path: /getIndexTriggerValues
    method: GET
    data_selector: result
    params: {}
- name: getHandTriggerValues
  endpoint:
    path: /getHandTriggerValues
    method: GET
    data_selector: returns
    params: {}
- name: setControllerVibration
  endpoint:
    path: /setControllerVibration
    method: POST
    data_selector: returns
    params: {}
- name: submitControllerVibration
  endpoint:
    path: /submitControllerVibration
    method: POST
    data_selector: returns
    params: {}
- name: cullPose
  endpoint:
    path: /cullPose
    method: GET
    data_selector: returns
    params: {}
- name: getHandTriggerValues
  endpoint:
    path: psychxr.drivers.libovr.getHandTriggerValues
    method: GET
    data_selector: returns
    params:
      controller: CONTROLLER_TYPE_TOUCH
      deadzone: true
- name: setControllerVibration
  endpoint:
    path: psychxr.drivers.libovr.setControllerVibration
    method: POST
    data_selector: returns
    params:
      controller: CONTROLLER_TYPE_TOUCH
      frequency: high
      amplitude: 1.0
- name: submitControllerVibration
  endpoint:
    path: psychxr.drivers.libovr.submitControllerVibration
    method: POST
    data_selector: returns
    params:
      controller: CONTROLLER_TYPE_TOUCH
      buffer: LibOVRHapticsBuffer
- name: cullPose
  endpoint:
    path: psychxr.drivers.libovr.cullPose
    method: GET
    data_selector: returns
    params:
      eye: EYE_LEFT
      pose: LibOVRPose
- name: OHMDDeviceInfo
  endpoint:
    path: /psychxr/drivers/openhmd/OHMDDeviceInfo
    method: GET
    data_selector: devices
    params: {}
- name: openDevice
  endpoint:
    path: /openDevice
    method: GET
    data_selector: device
    params: {}
- name: closeDevice
  endpoint:
    path: /closeDevice
    method: GET
    data_selector: device
    params: {}
- name: getDevicePose
  endpoint:
    path: /getDevicePose
    method: GET
    data_selector: device
    params: {}
- name: lastUpdateTimeElapsed
  endpoint:
    path: /lastUpdateTimeElapsed
    method: GET
    data_selector: ''
    params: {}
- name: update
  endpoint:
    path: /update
    method: GET
    data_selector: ''
    params: {}
- name: getDeviceParamf
  endpoint:
    path: /getDeviceParamf
    method: GET
    data_selector: device
    params: {}
- name: setDeviceParamf
  endpoint:
    path: /setDeviceParamf
    method: GET
    data_selector: device
    params: {}
- name: getDeviceParami
  endpoint:
    path: /getDeviceParami
    method: GET
    data_selector: device
    params: {}
- name: getString
  endpoint:
    path: /getString
    method: GET
    data_selector: ''
    params: {}
- name: getListString
  endpoint:
    path: /getListString
    method: GET
    data_selector: ''
    params: {}
- name: getListInt
  endpoint:
    path: /getListInt
    method: GET
    data_selector: ''
    params: {}
- name: openDevice
  endpoint:
    path: psychxr.drivers.openhmd.openDevice
    method: GET
    data_selector: device
- name: closeDevice
  endpoint:
    path: psychxr.drivers.openhmd.closeDevice
    method: GET
    data_selector: device
- name: getDevicePose
  endpoint:
    path: psychxr.drivers.openhmd.getDevicePose
    method: GET
    data_selector: device
- name: lastUpdateTimeElapsed
  endpoint:
    path: psychxr.drivers.openhmd.lastUpdateTimeElapsed
    method: GET
    data_selector: ''
- name: update
  endpoint:
    path: psychxr.drivers.openhmd.update
    method: GET
    data_selector: ''
- name: getDeviceParamf
  endpoint:
    path: psychxr.drivers.openhmd.getDeviceParamf
    method: GET
    data_selector: device
- name: setDeviceParamf
  endpoint:
    path: psychxr.drivers.openhmd.setDeviceParamf
    method: GET
    data_selector: device
- name: getDeviceParami
  endpoint:
    path: psychxr.drivers.openhmd.getDeviceParami
    method: GET
    data_selector: device
- name: getString
  endpoint:
    path: psychxr.drivers.openhmd.getString
    method: GET
    data_selector: ''
- name: getListString
  endpoint:
    path: psychxr.drivers.openhmd.getListString
    method: GET
    data_selector: ''
- name: getListInt
  endpoint:
    path: psychxr.drivers.openhmd.getListInt
    method: GET
    data_selector: ''
- name: RigidBodyPose
  endpoint:
    path: /psychxr/tools/vrmath/RigidBodyPose
    method: GET
    data_selector: records
    params: {}
- name: BoundingBox
  endpoint:
    path: /psychxr/tools/vrmath/BoundingBox
    method: GET
    data_selector: records
    params: {}
- name: calcEyePoses
  endpoint:
    path: /psychxr/tools/vrmath/calcEyePoses
    method: GET
    data_selector: records
    params: {}
- name: BoundingBox
  endpoint:
    path: /psychxr/tools/vrmath/BoundingBox
    method: GET
- name: RigidBodyPose
  endpoint:
    path: /psychxr/tools/vrmath/RigidBodyPose
    method: GET
    data_selector: records
- name: BoundingBox
  endpoint:
    path: /psychxr/tools/vrmath/BoundingBox
    method: GET
    data_selector: records
- name: calcEyePoses
  endpoint:
    path: /psychxr/tools/vrmath/calcEyePoses
    method: GET
    data_selector: records
- name: BoundingBox
  endpoint:
    path: /BoundingBox
    method: GET
    data_selector: extents
    params: {}
- name: RigidBodyPose
  endpoint:
    path: /psychxr/tools/vrmath/RigidBodyPose
    method: GET
    data_selector: class
    params: {}
- name: BoundingBox
  endpoint:
    path: /psychxr/tools/vrmath/BoundingBox
    method: GET
    data_selector: class
    params: {}
- name: calcEyePoses
  endpoint:
    path: /psychxr/tools/vrmath/calcEyePoses
    method: GET
    data_selector: function
    params: {}
- name: RigidBodyPose
  endpoint:
    path: /psychxr/tools/vrmath/RigidBodyPose
    method: GET
    data_selector: records
- name: BoundingBox
  endpoint:
    path: /psychxr/tools/vrmath/BoundingBox
    method: GET
    data_selector: records
- name: RigidBodyPose
  endpoint:
    path: /psychxr/tools/vrmath/RigidBodyPose
    method: GET
    data_selector: records
- name: BoundingBox
  endpoint:
    path: /psychxr/tools/vrmath/BoundingBox
    method: GET
    data_selector: records
- name: calcEyePoses
  endpoint:
    path: /psychxr/tools/vrmath/calcEyePoses
    method: GET
    data_selector: records
- name: RigidBodyPose
  endpoint:
    path: /RigidBodyPose
    method: GET
    data_selector: records
    params: {}
- name: BoundingBox
  endpoint:
    path: /BoundingBox
    method: GET
    data_selector: records
    params: {}
notes:
- PsychXR requires Python 3.6 and above
- Pre-compiled binaries are built on Windows 10 64-bit
- PsychXR requires Python 3.6 and above.
- PsychXR requires Windows 7, 8.1 or 10.
- If you build PsychXR using a version of the Oculus PC SDK other than 23.0 (1.55),
  a warning will be raised upon importing the module.
- The Oculus Rift S uses inside-out tracking, therefore does not have external trackers.
  For compatibility, LibOVR will return a tracker count of 3.
- The Oculus Rift S uses inside-out tracking, therefore does not have external trackers.
- Instances of this class store a buffer of vibration amplitude values which can be
  passed to the haptics engine for playback using the submitControllerVibration()
  function.
- Samples are stored as a 1D array of 32-bit floating-point values ranging between
  0.0 and 1.0, with a maximum length of HAPTICS_BUFFER_SAMPLES_MAX - 1.
- Uses OVR::Quatf.GetYawPitchRoll which is part of the Oculus PC SDK.
- Uses OVR::Posef.Lerp and OVR::Posef.FastLerp which is part of the Oculus PC SDK.
- Uses OVR::Vector3f.InverseRotate which is part of the Oculus PC SDK.
- Uses OVR::Vector3f.InverseTransform which is part of the Oculus PC SDK.
- Uses OVR::Vector3f.InverseTransformNormal which is part of the Oculus PC SDK.
- Uses OVR::Posef.Inverted which is part of the Oculus PC SDK.
- Uses OVR::Posef.Normalize which is part of the Oculus PC SDK.
- Uses OVR::Posef.Rotate which is part of the Oculus PC SDK.
- Uses OVR::Vector3f.Transform which is part of the Oculus PC SDK.
- Uses OVR::Vector3f.TransformNormal which is part of the Oculus PC SDK.
- Uses OVR::Vector3f.Translate which is part of the Oculus PC SDK.
- Uses `OVR::Quatf.GetYawPitchRoll` which is part of the Oculus PC SDK.
- Uses `OVR::Posef.Lerp` and `OVR::Posef.FastLerp` which is part of the Oculus PC
  SDK.
- Uses `OVR::Vector3f.InverseRotate` which is part of the Oculus PC SDK.
- Uses `OVR::Vector3f.InverseTransform` which is part of the Oculus PC SDK.
- Uses `OVR::Vector3f.InverseTransformNormal` which is part of the Oculus PC SDK.
- Uses `OVR::Posef.Inverted` which is part of the Oculus PC SDK.
- Uses `OVR::Posef.Normalize` which is part of the Oculus PC SDK.
- Uses `OVR::Posef.Rotate` which is part of the Oculus PC SDK.
- Uses `OVR::Vector3f.Transform` which is part of the Oculus PC SDK.
- Uses `OVR::Vector3f.TransformNormal` which is part of the Oculus PC SDK.
- Uses `OVR::Vector3f.Translate` which is part of the Oculus PC SDK.
- This function returns the recommended texture resolution for a specified eye. If
  you are using a single buffer for both eyes, that buffer should be as wide as the
  combined width of both eye’s values.
- LAYER_FLAG_HIGH_QUALITY and LAYER_FLAG_TEXTURE_ORIGIN_AT_BOTTOM_LEFT are recommended
  settings and are enabled by default.
- Special ‘touches’ TOUCH_RINDEXPOINTING, TOUCH_RTHUMBUP, TOUCH_RTHUMBREST, TOUCH_LINDEXPOINTING,
  TOUCH_LINDEXPOINTING, and TOUCH_LINDEXPOINTING can be used to recognise hand pose/gestures.
- This library is only available if PsychXR was built with the environment variable
  PSYCHXR_BUILD_OPENHMD=1 being previously set.
- Be aware that this module is currently in the alpha phase of development and may
  be incomplete and buggy.
- This library is only available if PsychXR was built with the environment variable
  PSYCHXR_BUILD_OPENHMD=1
- Be aware that this module is currently in an early phase of development and may
  be incomplete and buggy.
- This module is currently in an early phase of development and may be incomplete
  and buggy.
- Compute the poses of the viewer’s eyes given the tracked head position.
errors:
- 'ERROR_INITIALIZE: Initialization error.'
- 'ERROR_LIB_LOAD: Failed to load LibOVRRT.'
- 'ERROR_LIB_VERSION: LibOVRRT version incompatible.'
- 'ERROR_SERVICE_CONNECTION: Cannot connect to OVR service.'
- 'ERROR_SERVICE_VERSION: OVR service version is incompatible.'
- 'ERROR_INCOMPATIBLE_OS: Operating system version is incompatible.'
- 'ERROR_DISPLAY_INIT: Unable to initialize the HMD.'
- 'ERROR_SERVER_START: Cannot start a server.'
- 'ERROR_REINITIALIZATION: Reinitialized with a different version.'
- 'OHMD_S_OK: Context created successfully'
- 'OHMD_S_USER_RESERVED: Context creation failed'
auth_info:
  mentioned_objects: []
client:
  base_url: https://github.com/mdcutone/psychxr/releases
source_metadata: null
