resources:
- name: cloud_metrics_export
  endpoint:
    path: /v1/cloud/metrics/export
    method: GET
- name: kafka_metrics_export
  endpoint:
    path: /v1/cloud/metrics/kafka/export
    method: GET
- name: source_connector_metrics_export
  endpoint:
    path: /v1/cloud/metrics/source/export
    method: GET
- name: sink_connector_metrics_export
  endpoint:
    path: /v1/cloud/metrics/sink/export
    method: GET
- name: function_metrics_export
  endpoint:
    path: /v1/cloud/metrics/function/export
    method: GET
- name: kafka_connect_metrics_export
  endpoint:
    path: /v1/cloud/metrics/kafkaconnect/export
    method: GET
- name: health_metrics_export
  endpoint:
    path: /v1/cloud/metrics/health/export
    method: GET
- name: metrics
  endpoint:
    path: /v1/cloud/metrics/export
    method: GET
    data_selector: metrics
    params: {}
- name: endpoint_resource
  endpoint:
    path: /services/data/vXX.X/sobjects/EndpointResource
    method: GET
    data_selector: records
- name: Organization
  endpoint: {}
- name: CloudConnection
  endpoint: {}
- name: CloudEnvironment
  endpoint: {}
- name: PulsarGateway
  endpoint: {}
- name: Pool
  endpoint: {}
- name: PoolMember
  endpoint: {}
- name: PulsarInstance
  endpoint: {}
- name: PulsarCluster
  endpoint: {}
- name: ServiceAccount
  endpoint: {}
- name: Role
  endpoint: {}
- name: RoleBinding
  endpoint: {}
- name: User
  endpoint: {}
- name: APIKey
  endpoint: {}
- name: Cluster
  endpoint: {}
- name: Broker
  endpoint: {}
- name: Tenant
  endpoint: {}
- name: Namespace
  endpoint: {}
- name: Topic
  endpoint: {}
- name: Subscription
  endpoint: {}
- name: Schema
  endpoint: {}
- name: Source
  endpoint: {}
- name: Sink
  endpoint: {}
- name: Function
  endpoint: {}
- name: Packages
  endpoint: {}
- name: Topics
  endpoint: {}
- name: Partitions
  endpoint: {}
- name: Groups
  endpoint: {}
- name: Schema Registry
  endpoint: {}
- name: Kafka Connect
  endpoint: {}
- name: serviceaccount
  endpoint:
    path: /apis/cloud.streamnative.io/v1alpha1/namespaces/<your-organization-name>/serviceaccounts
    method: GET
- name: pulsarinstance
  endpoint:
    path: /apis/cloud.streamnative.io/v1alpha1/namespaces/<your-organization-name>/pulsarinstances
    method: GET
- name: pulsar_instance
  endpoint:
    path: /apis/cloud.streamnative.io/v1alpha1/namespaces/<your-organization-name>/pulsarinstances
    method: POST
    data_selector: kind
    params: {}
- name: user
  endpoint:
    path: /apis/cloud.streamnative.io/v1alpha1/namespaces/<your-organization-name>/users
    method: POST
    data_selector: kind
    params: {}
- name: pulsar_cluster
  endpoint:
    path: /apis/cloud.streamnative.io/v1alpha1/namespaces/<your-organization-name>/pulsarclusters
    method: POST
    data_selector: kind
    params: {}
- name: apikey
  endpoint:
    path: /apis/cloud.streamnative.io/v1alpha1/namespaces/<your-organization-name>/apikeys
    method: POST
    data_selector: kind
    params: {}
- name: cluster_metrics
  endpoint:
    path: /cloud/log-and-monitor/cloud-metrics-api
    method: GET
    data_selector: metrics
- name: audit_log
  endpoint:
    path: /cloud/security/monitor-activity/cloud-audit-log
    method: GET
    data_selector: audit_events
- name: new_connectors
  endpoint:
    path: /connect/connectors
    method: GET
    data_selector: connectors
- name: service_accounts
  endpoint:
    path: /apis/cloud.streamnative.io/v1alpha1/namespaces/<your-organization-name>/serviceaccounts
    method: GET
    data_selector: items
- name: pulsar_instances
  endpoint:
    path: /apis/cloud.streamnative.io/v1alpha1/namespaces/<your-organization-name>/pulsarinstances
    method: GET
    data_selector: items
- name: pulsar_instance
  endpoint:
    path: /apis/cloud.streamnative.io/v1alpha1/namespaces/<your-organization-name>/pulsarinstances
    method: POST
    data_selector: kind
    params: {}
- name: user
  endpoint:
    path: /apis/cloud.streamnative.io/v1alpha1/namespaces/<your-organization-name>/users
    method: POST
    data_selector: kind
    params: {}
- name: pulsar_cluster
  endpoint:
    path: /apis/cloud.streamnative.io/v1alpha1/namespaces/<your-organization-name>/pulsarclusters
    method: POST
    data_selector: kind
    params: {}
- name: apikey
  endpoint:
    path: /apis/cloud.streamnative.io/v1alpha1/namespaces/<your-organization-name>/apikeys
    method: POST
    data_selector: kind
    params: {}
- name: cloud_connection
  endpoint:
    path: /resources/cloud_connection
    method: GET
- name: cloud_environment
  endpoint:
    path: /resources/cloud_environment
    method: GET
- name: pulsar_gateway
  endpoint:
    path: /resources/pulsar_gateway
    method: GET
- name: pulsar_instance
  endpoint:
    path: /resources/pulsar_instance
    method: GET
- name: pulsar_cluster
  endpoint:
    path: /resources/pulsar_cluster
    method: GET
- name: service_account
  endpoint:
    path: /resources/service_account
    method: GET
- name: service_account_binding
  endpoint:
    path: /resources/service_account_binding
    method: GET
- name: apikey
  endpoint:
    path: /resources/apikey
    method: GET
- name: organizations
  endpoint:
    path: /organizations
    method: GET
- name: instances
  endpoint:
    path: /instances
    method: GET
- name: clusters
  endpoint:
    path: /clusters
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: service_accounts
  endpoint:
    path: /service-accounts
    method: GET
- name: secrets
  endpoint:
    path: /secrets
    method: GET
- name: cloud_connection
  endpoint:
    path: /cloud/connections
    method: POST
    data_selector: connections
    params:
      name: my-aws-connection
      provider: AWS
- name: cloud_environment
  endpoint:
    path: /cloud/environments
    method: POST
    data_selector: environments
    params:
      region: us-west-2
      tag: poc
- name: pulsar_instance
  endpoint:
    path: /pulsar/instances
    method: POST
    data_selector: instances
    params:
      instance_name: my-pulsar-instance
      cloud_connection: my-aws-connection
      engine: Classic Engine
- name: tenant
  endpoint:
    path: /cloud/tenants
    method: POST
    data_selector: tenant
    params: {}
- name: namespace
  endpoint:
    path: /cloud/namespaces
    method: POST
    data_selector: namespace
    params: {}
- name: service_account
  endpoint:
    path: /cloud/service_accounts
    method: POST
    data_selector: service_account
    params: {}
- name: clusters
  endpoint:
    path: /cloud/clusters
    method: GET
    data_selector: clusters
    params: {}
- name: instances
  endpoint:
    path: /cloud/instances
    method: GET
    data_selector: instances
    params: {}
- name: infrastructure_pools
  endpoint:
    path: /cloud/infrastructure_pools
    method: GET
    data_selector: pools
    params: {}
- name: BYOC Clusters
  endpoint:
    path: /cloud/clusters/byoc
    method: GET
    data_selector: clusters
    params: {}
- name: BYOC Pro Clusters
  endpoint:
    path: /cloud/clusters/byoc-pro
    method: GET
    data_selector: pro_clusters
    params: {}
- name: tenants
  endpoint:
    path: /cloud/manage-data-streams/tenant
    method: GET
- name: namespaces
  endpoint:
    path: /cloud/manage-data-streams/namespace
    method: GET
- name: topics
  endpoint:
    path: /cloud/manage-data-streams/topic
    method: GET
- name: tenants
  endpoint:
    path: /api/v1/tenants
    method: POST
    data_selector: tenant
    params: {}
- name: namespace
  endpoint:
    path: /api/namespaces
    method: POST
    data_selector: namespace
    params: {}
- name: topics
  endpoint:
    path: /api/v1/topics
    method: GET
    data_selector: topics
    params: {}
- name: lakehouse_storage
  endpoint:
    path: /lakehouse/storage/features
    method: GET
    data_selector: features
    params: {}
- name: export_pulsar_resource_metrics
  endpoint:
    path: /v1/cloud/metrics/export
    method: GET
- name: export_kafka_resource_metrics
  endpoint:
    path: /v1/cloud/metrics/kafka/export
    method: GET
- name: export_source_connector_metrics
  endpoint:
    path: /v1/cloud/metrics/source/export
    method: GET
- name: export_sink_connector_metrics
  endpoint:
    path: /v1/cloud/metrics/sink/export
    method: GET
- name: export_function_metrics
  endpoint:
    path: /v1/cloud/metrics/function/export
    method: GET
- name: export_kafka_connect_metrics
  endpoint:
    path: /v1/cloud/metrics/kafkaconnect/export
    method: GET
- name: export_cluster_health_metrics
  endpoint:
    path: /v1/cloud/metrics/health/export
    method: GET
- name: metrics
  endpoint:
    path: /v1/cloud/metrics/export
    method: GET
    data_selector: metrics
    params: {}
- name: notifications
  endpoint:
    path: /log-and-monitor/manage-notifications
    method: GET
    data_selector: rules
    params: {}
- name: logs
  endpoint:
    path: /logs
    method: GET
    data_selector: logs
    params: {}
- name: universal_linking_job
  endpoint:
    path: /cloud/universal-linking/manage
    method: GET
    data_selector: jobs
    params: {}
- name: invoices
  endpoint:
    path: /cloud/billing/invoice
    method: GET
    data_selector: invoice_history
    params: {}
- name: payment_method
  endpoint:
    path: /cloud/billing/payment-method
    method: POST
    data_selector: payment_method_details
    params: {}
- name: billing_email
  endpoint:
    path: /cloud/billing/email
    method: PUT
    data_selector: updated_email
    params: {}
- name: organization_usage
  endpoint:
    path: /organization/usage
    method: GET
    data_selector: usage_data
- name: invoices
  endpoint:
    path: /cloud/billing/invoices
    method: GET
    data_selector: invoice_history
    params: {}
- name: payment_method
  endpoint:
    path: /cloud/billing/payment-method
    method: POST
    data_selector: payment_method_update
    params: {}
- name: billing_email
  endpoint:
    path: /cloud/billing/email
    method: PUT
    data_selector: billing_email_update
    params: {}
- name: Organization Usage
  endpoint:
    path: /cloud/billing/view-usage-console
    method: GET
    data_selector: usage_data
- name: PulsarCluster
  endpoint:
    path: /api/v1alpha1/pulsarclusters
    method: POST
    data_selector: spec
    params: {}
- name: pulsar_cluster
  endpoint:
    path: /api/v1alpha1/pulsarclusters
    method: POST
    data_selector: metadata
    params: {}
notes:
- The bearer tokens have a limited life cycle, therefore it is recommended to use
  the OAuth2 authentication method.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects may return nulls in deeply nested fields
- Requires setup of service account with admin permission
- API key is used for authentication.
- Self-service BYOC improvements allow users to create clusters more efficiently and
  independently.
- Uses OAuth2 with refresh token — requires setup of connected app in StreamNative
  Cloud
- New connectors are available on StreamNative Cloud.
- Audit Log allows you to monitor user accounts and applications accessing data.
- Secure clusters based on OAuth 2.0 and TLS.
- Requires setup of connected app in StreamNative Cloud
- Service accounts do not have Super Admin enabled by default
- StreamNative cloud supports OAuth2 authentication to manage resources.
- Ensure to use valid organization name and access token
- RBAC is now available for Public Preview with predefined roles.
- Kafka Connect is now supported on Ursa Engine clusters.
- The updated Datadog agent allows users to pull metrics from StreamNative Cloud Metrics
  API with oauth2 authentication.
- New customers can no longer sign up for free clusters.
- Classic Engine is the default engine for StreamNative Cloud.
- Ursa Engine is available as a General Availability feature on AWS and Public Preview
  on Azure and GCP.
- Cloud environment provisioning may take about 40 minutes.
- API key generated for service account is not retrievable after creation.
- Requires AWS account for provisioning the BYOC infrastructure.
- API keys are unique to each instance.
- Uses API Key as the authentication type
- Serverless clusters are currently in Public Preview.
- During the Public Preview period, the serverless cluster capacity limit is not enforced.
- Advanced private networking options like VPC/VNet Peering and Transit Gateway.
- Geo-replication via private networking is supported in BYOC Pro Clusters.
- LTS releases prioritize stability and long-term API consistency.
- Rapid releases offer access to the latest features and improvements at a faster
  pace.
- API Key is not supported for the cross-cluster authentication if the existing TS
  channel Pulsar cluster exists under the Instance. Users should use the oauth2 as
  the cross-cluster authentication.
- Only users enrolled in the Enterprise or Production support plan tier could configure
  the maintenance window.
- Namespaces can be created, managed, and deleted using the StreamNative Console or
  REST API.
- By default, a persistent topic is created if you do not specify a topic type.
- Currently, only Avro and JSON schema are supported.
- All connections to StreamNative Cloud are encrypted with TLS 1.2 and require authentication
  using OAuth2 or API keys, regardless of network configuration.
- Brokers hosted on StreamNative Cloud do not respond to ping requests.
- For clusters in private network environments, run tests from within your VPC or
  VNet.
- The Local Metrics Endpoint is only available for BYOC Pro clusters.
- Requires setup of a service account with Super Admin permission
- StreamNative Cloud Notifications help you proactively monitor the health and status
  of your critical resources.
- The logs console enables developers to view, filter, search, and sort logs from
  Kafka Connectors, Pulsar Connectors, and Functions.
- Universal Linking is currently available at no cost. Subject to changes in the future.
- Public Preview on AWS and Google Cloud Platform
- Billing accrues hourly, with a monthly-in-arrears invoicing cycle.
- Data for BYOC clusters is billed directly by cloud provider.
- 'StreamNative Cloud charges for data transfer in two directions: Ingress and Egress.'
- Billing for ingress and egress is based on the total volume of data transferred,
  measured in gigabytes (GB).
- For BYOC clusters, StreamNative Cloud does not charge for data transfers.
- This subscription uses a Pay-As-You-Go billing model, so your bills will vary depending
  on usage.
- To use this service, you must have an Azure Portal account with payment / billing
  account setup.
- You cannot link your AWS entitlement to an existing organization on StreamNative
  Console.
- Billing for usage is by hour and any charges for usage before you deleted your Pulsar
  cluster and instance will still appear on your next bill.
- Billing metrics are typically updated hourly.
- No additional costs for using the StreamNative Cloud Console.
- You must complete payment / billing account setup to purchase any service in Azure
  marketplace.
- Currently, you cannot link your AWS entitlement to an existing organization on StreamNative
  Console.
- Before deleting a cluster, ensure you have proper backup and disaster recovery procedures
  in place to minimize the risk of data loss or service disruption.
- Most often, you provide the information to snctl in a .yaml file.
- The precise format of the spec field is different for every StreamNative Cloud object.
- StreamNative Cloud is a fully-managed, cloud-native messaging and event streaming
  platform powered by Apache Pulsar.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth credentials'
- 'Unauthorized: Check access token'
- 'Not Found: Verify endpoint paths'
- 'SSL handshake failed: Disconnected: connecting to a PLAINTEXT broker listener?'
auth_info:
  mentioned_objects:
  - Super Admin service account
  - metrics-viewer role
  - OauthToken
  - AuthProvider
  - NamedCredential
  - ServiceAccount
  - OAuthToken
  - Authorization
  - service account
  - urn:sn:pulsar:pulsar-instance-namespace:pulsar-instance-name
  - OAuth2
client:
  base_url: https://console.streamnative.cloud
  auth:
    type: apikey
source_metadata: null
