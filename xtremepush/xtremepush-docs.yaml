resources:
- name: create_user_list
  endpoint:
    path: /api/external/create/list
    method: POST
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: campaign
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: campaign
  endpoint:
    path: /reference/api-campaign
    method: GET
- name: Channel settings
  endpoint:
    path: /docs/channel-settings
    method: GET
- name: Campaign Analytics
  endpoint:
    path: /docs/analytics-campaign-comparison
    method: GET
- name: Website integration
  endpoint:
    path: /docs/website-integration
    method: GET
- name: iOS integration
  endpoint:
    path: /docs/ios-integration
    method: GET
- name: Android integration
  endpoint:
    path: /docs/android-integration
    method: GET
- name: user_accounts
  endpoint:
    path: /api/v1/user_accounts
    method: POST
    data_selector: user_accounts
    params: {}
- name: on_site_messages
  endpoint:
    path: /api/on-site-messages
    method: GET
    data_selector: records
    params: {}
- name: test_email
  endpoint:
    path: /docs/set-up-test-user-profiles
    method: GET
    data_selector: users
    params: {}
- name: email_preferences
  endpoint:
    path: /docs/manage-consent-preferences-with-email-builder
    method: GET
    data_selector: preferences
    params: {}
- name: user_data
  endpoint:
    path: /api/v1/user
    method: GET
    data_selector: data
    params: {}
- name: campaigns
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: send_to_messenger_plugin
  endpoint:
    path: /v2.10/me/messages
    method: POST
    data_selector: message
- name: fb_messenger
  endpoint:
    path: /api/external/hit/tag
    method: POST
    data_selector: response
    params: {}
- name: facebook_user
  endpoint:
    path: /graph.facebook.com/v2.6/
    method: GET
    data_selector: body
    params: {}
- name: otp_generate
  endpoint:
    path: /otp/generate
    method: POST
- name: otp_execute
  endpoint:
    path: /otp/execute
    method: POST
- name: otp_verify
  endpoint:
    path: /otp/verify
    method: POST
- name: otp_generate
  endpoint:
    path: /otp/generate
    method: POST
- name: otp_execute
  endpoint:
    path: /otp/execute
    method: POST
- name: otp_verify
  endpoint:
    path: /otp/verify
    method: POST
- name: core_application
  endpoint:
    path: /services/data/vXX.X/sobjects/CoreApplication
    method: GET
    data_selector: records
    params: {}
- name: optional_features
  endpoint:
    path: /services/data/vXX.X/sobjects/OptionalFeatures
    method: GET
    data_selector: records
    params: {}
- name: channel_opt_ins
  endpoint:
    path: /api/v1/channel_opt_ins
    method: GET
- name: user_data
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: email_campaign_performance
  endpoint:
    path: /analytics/campaigns/email/messages
    method: GET
    data_selector: data
    params: {}
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
- name: analytics
  endpoint:
    path: /campaigns/analytics
    method: GET
    data_selector: stats
    params: {}
- name: geo_and_ibeacons
  endpoint:
    path: /analytics/locations/geo_and_ibeacons
    method: GET
- name: countries
  endpoint:
    path: /analytics/locations/countries
    method: GET
- name: languages
  endpoint:
    path: /analytics/locations/languages
    method: GET
- name: funnel
  endpoint:
    path: /Analytics/Behaviour/FunnelAnalytics
    method: GET
    data_selector: funnels
    params: {}
- name: campaigns
  endpoint:
    path: /api/campaigns
    method: POST
    data_selector: data
    params: {}
- name: push_notifications
  endpoint:
    path: /docs/ios-push-notifications
    method: GET
    data_selector: notifications
- name: push_categories
  endpoint:
    path: /docs/push-categories
    method: GET
    data_selector: categories
- name: multi_language_campaigns
  endpoint:
    path: /docs/campaign-setup#multi-language-support
    method: GET
    data_selector: multi_language
- name: push_notifications
  endpoint:
    path: /docs/android-push-notifications
    method: GET
    data_selector: records
- name: web_push_notification
  endpoint:
    path: /docs/web-push-notifications
    method: GET
    data_selector: notifications
    params: {}
- name: sms_campaign
  endpoint:
    path: /docs/campaign-sms
    method: GET
    data_selector: messages
    params: {}
- name: multi_language_campaign
  endpoint:
    path: /docs/campaign-setup#multi-language-support
    method: GET
    data_selector: campaigns
- name: split_test_campaign
  endpoint:
    path: /docs/campaign-split-test
    method: GET
    data_selector: tests
- name: notification_trigger
  endpoint:
    path: /docs/notification-trigger
    method: GET
    data_selector: notifications
    params: {}
- name: add_locations
  endpoint:
    path: /docs/add-locations
    method: GET
    data_selector: locations
    params: {}
- name: trigger_limits
  endpoint:
    path: /docs/trigger-limits
    method: GET
    data_selector: trigger_limits
    params: {}
- name: campaign_segment
  endpoint:
    path: /docs/campaign-segment
    method: GET
    data_selector: records
    params: {}
- name: schedule
  endpoint:
    path: /schedule
    method: GET
    data_selector: campaign_schedule
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: file_import_triggers
  endpoint:
    path: /file/import/triggers
    method: GET
- name: Workflow campaign status
  endpoint:
    path: /docs/workflow-campaign-status
    method: GET
    data_selector: campaigns
    params: {}
- name: Live to past
  endpoint:
    path: /docs/live-to-past
    method: GET
    data_selector: campaigns
    params: {}
- name: Disabled workflows
  endpoint:
    path: /docs/disabled-workflows
    method: GET
    data_selector: workflows
    params: {}
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: campaigns
- name: events_node
  endpoint:
    path: /docs/journey-builder-20-event-action
    method: GET
    data_selector: events
    params: {}
- name: In-app Campaigns
  endpoint:
    path: /docs/campaign-in-app
    method: GET
- name: Multi-language Campaigns
  endpoint:
    path: /docs/campaign-setup#multi-language-support
    method: GET
- name: campaigns
  endpoint:
    path: /docs/campaigns
    method: GET
    data_selector: campaign_data
    params: {}
- name: photo_search
  endpoint:
    path: /search/photos
    method: GET
    data_selector: photos
- name: general_properties
  endpoint:
    path: /docs/general-properties
    method: GET
    data_selector: properties
    params: {}
- name: image_action_and_block_options
  endpoint:
    path: /docs/image-action-and-block-options
    method: GET
    data_selector: options
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: display_conditions
  endpoint:
    path: /api/display_conditions
    method: POST
    data_selector: conditions
    params: {}
- name: preferences
  endpoint:
    path: /api/preferences
    method: POST
    data_selector: data
- name: json_content_source
  endpoint:
    path: /wp-json/wp/v2/posts
    method: GET
    data_selector: body
    params:
      per_page: '5'
      page: '1'
      _envelope: ''
      _fields: title,link,excerpt,featured_media
- name: rss_content_source
  endpoint:
    path: /feeds/rss/
    method: GET
    data_selector: rss.channel.item
    params:
      index: /news/
      limit: '5'
      first: '0'
      img-width: '600'
- name: campaign_template
  endpoint:
    path: /Campaigns/CampaignTemplates
    method: GET
    data_selector: templates
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: existing_campaigns
  endpoint:
    path: /docs/existing-campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: templates
  endpoint:
    path: /docs/templates
    method: GET
    data_selector: templates
    params: {}
- name: expire_inbox
  endpoint:
    path: /reference/campaign-expire
    method: POST
    data_selector: response
    params: {}
- name: remove_inbox
  endpoint:
    path: /reference/campaign-remove
    method: POST
    data_selector: response
    params: {}
- name: engagement_category
  endpoint:
    path: /Campaigns/EngagementCategories
    method: POST
    data_selector: null
    params: {}
- name: ad_campaigns
  endpoint:
    path: /ad/campaigns
    method: GET
    data_selector: records
    params: {}
- name: user_data
  endpoint:
    path: /api/user_data
    method: GET
    data_selector: records
    params: {}
- name: user_data
  endpoint:
    path: /api/v1/user_data
    method: GET
    data_selector: data
    params: {}
- name: campaigns
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: Create Site
  endpoint:
    path: /docs/create-site
    method: POST
    data_selector: site
    params: {}
- name: Add Page
  endpoint:
    path: /docs/add-page
    method: POST
    data_selector: page
    params: {}
- name: Add Form
  endpoint:
    path: /docs/add-form
    method: POST
    data_selector: form
    params: {}
- name: Save Site
  endpoint:
    path: /docs/save-site
    method: PUT
    data_selector: site
    params: {}
- name: Publish Site
  endpoint:
    path: /docs/publish-site
    method: POST
    data_selector: site
    params: {}
- name: Unpublish Site
  endpoint:
    path: /docs/unpublish-site
    method: POST
    data_selector: site
    params: {}
- name: user_data
  endpoint:
    path: /api/v1/user/data
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /data/users/profiles
    method: GET
    data_selector: profiles
- name: Device Profile
  endpoint:
    path: /docs/device-profile
    method: GET
- name: user_profile_import
  endpoint:
    path: /reference/user-profile-import
    method: GET
    data_selector: user_profiles
    params: {}
- name: user_profile
  endpoint:
    path: /docs/user-profile
    method: GET
    data_selector: user_data
- name: device_profile
  endpoint:
    path: /docs/device-profile
    method: GET
    data_selector: device_data
- name: user_profile_attributes
  endpoint:
    path: /reference/user-profile-list
    method: GET
- name: user_data
  endpoint:
    path: /users
    method: GET
    data_selector: records
    params: {}
- name: behavioural_data
  endpoint:
    path: /behavioural
    method: GET
    data_selector: records
    params: {}
- name: segmentation
  endpoint:
    path: /segmentation
    method: GET
    data_selector: records
    params: {}
- name: user_profile
  endpoint:
    path: /user-profile
    method: DELETE
    data_selector: actions
    params: {}
- name: suppression_lists
  endpoint:
    path: /reference/suppression-list-import
    method: POST
    data_selector: records
    params:
      mode: delete
- name: locations
  endpoint:
    path: /Data/DataManager/Locations
    method: GET
    data_selector: locations
    params: {}
- name: iBeacon UUIDs
  endpoint:
    path: /Data/DataManager/iBeaconUUIDs
    method: POST
    data_selector: uuid
    params: {}
- name: segments
  endpoint:
    path: /data/audiences/segments
    method: GET
    data_selector: segments
- name: user_attributes
  endpoint:
    path: /docs/attributes-tags
    method: GET
    data_selector: attributes
    params: {}
- name: date_attributes
  endpoint:
    path: /docs/date-attributes
    method: GET
    data_selector: date_attributes
    params: {}
- name: language_info
  endpoint:
    path: /docs/language
    method: GET
    data_selector: language
    params: {}
- name: create_date_info
  endpoint:
    path: /docs/create-date
    method: GET
    data_selector: create_date
    params: {}
- name: email_open_date_info
  endpoint:
    path: /docs/email-last-open-date
    method: GET
    data_selector: email_last_open_date
    params: {}
- name: campaign_message
  endpoint:
    path: /docs/campaign-message
    method: GET
- name: campaign_label
  endpoint:
    path: /docs/campaign-labels
    method: GET
- name: channel_message
  endpoint:
    path: /docs/channel-message
    method: GET
- name: email_subscription
  endpoint:
    path: /docs/email-subscription
    method: GET
- name: sms_subscription
  endpoint:
    path: /docs/sms-subscription
    method: GET
- name: push_accessible
  endpoint:
    path: /docs/push-accessible
    method: GET
- name: email_accessible
  endpoint:
    path: /docs/email-accessible
    method: GET
- name: sms_accessible
  endpoint:
    path: /docs/sms-accessible
    method: GET
- name: subscription_preferences
  endpoint:
    path: /docs/subscription-preferences
    method: GET
- name: tag
  endpoint:
    path: /docs/behavioural-data#tagging
    method: GET
    data_selector: tag_hits
    params: {}
- name: event
  endpoint:
    path: /docs/real-time-events
    method: GET
    data_selector: event_hits
    params: {}
- name: metric
  endpoint:
    path: /docs/metrics
    method: GET
    data_selector: metric_values
    params: {}
- name: app_opens
  endpoint:
    path: /docs/app-opens
    method: GET
    data_selector: app_open_counts
    params: {}
- name: app_downloaded
  endpoint:
    path: /docs/app-downloaded
    method: GET
    data_selector: app_download_records
    params: {}
- name: app_last_opened
  endpoint:
    path: /docs/app-last-opened
    method: GET
    data_selector: last_opened_records
    params: {}
- name: webpush_opt_in
  endpoint:
    path: /docs/webpush-opt-in
    method: GET
    data_selector: webpush_opt_in_records
    params: {}
- name: user_id
  endpoint:
    path: /docs/set-user-id
    method: GET
    data_selector: identifiers
    params: {}
- name: email
  endpoint:
    path: /docs/email
    method: GET
    data_selector: identifiers
    params: {}
- name: mobile_number
  endpoint:
    path: /docs/user-profile-create
    method: GET
    data_selector: identifiers
    params: {}
- name: whatsapp_number
  endpoint:
    path: /docs/whatsapp-number
    method: GET
    data_selector: identifiers
    params: {}
- name: device_id
  endpoint:
    path: /docs/device-profile
    method: GET
    data_selector: identifiers
    params: {}
- name: android_id
  endpoint:
    path: /docs/android-id
    method: GET
    data_selector: identifiers
    params: {}
- name: android_advertising_identifier
  endpoint:
    path: /docs/android-advertising-identifier
    method: GET
    data_selector: identifiers
    params: {}
- name: idfv
  endpoint:
    path: /docs/idfv
    method: GET
    data_selector: identifiers
    params: {}
- name: idfa
  endpoint:
    path: /docs/idfa
    method: GET
    data_selector: identifiers
    params: {}
- name: segments
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: segmentation
  endpoint:
    path: /segmentation
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: task_history
  endpoint:
    path: /data/task-history
    method: GET
    data_selector: records
    params: {}
- name: campaign_audit_log
  endpoint:
    path: /audit/log
    method: GET
    data_selector: logs
- name: project_deletion
  endpoint:
    path: /docs/project-settings
    method: GET
    data_selector: project_deletion_info
    params: {}
- name: standard_utm_parameters
  endpoint:
    path: /docs/standard-utm-parameters
    method: GET
    data_selector: utm_parameters
    params: {}
- name: custom_tracking
  endpoint:
    path: /docs/custom-tracking
    method: GET
    data_selector: custom_tracking_parameters
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: inbox_settings
  endpoint:
    path: /docs/inbox-settings
    method: GET
    data_selector: settings
    params: {}
- name: simple_message
  endpoint:
    path: /services/data/v2.6/me/messages
    method: POST
    data_selector: recipient
    params: {}
- name: rich_message
  endpoint:
    path: /services/data/v2.6/me/messages
    method: POST
    data_selector: recipient
    params: {}
- name: seed_list
  endpoint:
    path: /api/seed-list
    method: GET
    data_selector: users
- name: single_stage_campaigns
  endpoint:
    path: /docs/single-stage-campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: multi_stage_campaigns
  endpoint:
    path: /docs/multi-stage-campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: groups
  endpoint:
    path: /api/groups
    method: GET
- name: GiG profile attributes
  endpoint:
    path: /docs/attributes
    method: GET
    data_selector: attributes
- name: GiG subscription status
  endpoint:
    path: /docs/subscription-status
    method: GET
    data_selector: subscription_status
- name: Bet Placement
  endpoint:
    path: /events/bet_placement
    method: POST
    data_selector: properties
    params: {}
- name: Bonus
  endpoint:
    path: /events/bonus
    method: POST
    data_selector: properties
    params: {}
- name: Customer Balance
  endpoint:
    path: /events/customer_balance
    method: POST
    data_selector: properties
    params: {}
- name: Customer Blocks
  endpoint:
    path: /events/customer_blocks
    method: POST
    data_selector: properties
    params: {}
- name: Customer Consent
  endpoint:
    path: /events/customer_consent
    method: POST
    data_selector: properties
    params: {}
- name: Customer Created
  endpoint:
    path: /events/customer_created
    method: POST
    data_selector: properties
    params: {}
- name: Customer FPP
  endpoint:
    path: /events/customer_fpp
    method: POST
    data_selector: properties
    params: {}
- name: Customer Tag
  endpoint:
    path: /events/customer_tag
    method: POST
    data_selector: properties
    params: {}
- name: Customer Verified
  endpoint:
    path: /events/customer_verified
    method: POST
    data_selector: properties
    params: {}
- name: Game Activity
  endpoint:
    path: /events/game_activity
    method: POST
    data_selector: properties
    params: {}
- name: Payment - Deposit
  endpoint:
    path: /events/payment_deposit
    method: POST
    data_selector: properties
    params: {}
- name: Payment - Withdrawal
  endpoint:
    path: /events/payment_withdrawal
    method: POST
    data_selector: properties
    params: {}
- name: Requested Password Reset
  endpoint:
    path: /events/requested_password_reset
    method: POST
    data_selector: properties
    params: {}
- name: Sport Activity
  endpoint:
    path: /events/sport_activity
    method: POST
    data_selector: properties
    params: {}
- name: promotions
  endpoint:
    path: /promotions
    method: GET
- name: promotions
  endpoint:
    path: /sync/promotions
    method: POST
    data_selector: promotions
    params: {}
- name: integration
  endpoint:
    path: /System/Integrations
    method: POST
    data_selector: integration_details
- name: Cohorts
  endpoint:
    path: /api/2.0/cohorts
    method: GET
    data_selector: data
- name: Events
  endpoint:
    path: /api/2.0/events
    method: GET
    data_selector: data
- name: Follow API
  endpoint:
    path: /reference/realtime-sports-follow
    method: POST
    data_selector: user
    params: {}
- name: Unfollow API
  endpoint:
    path: /reference/realtime-sports-unfollow
    method: POST
    data_selector: user
    params: {}
- name: nhl_dynamic_values
  endpoint:
    path: /nhl/dynamic/values
    method: GET
    data_selector: payload
    params: {}
- name: nfl_dynamic_values
  endpoint:
    path: /nfl/dynamic/values
    method: GET
    data_selector: payload
    params: {}
- name: SFTP
  endpoint:
    path: /sftp/file/storage
    method: GET
- name: SFTP connection
  endpoint:
    path: /settings/integrations/marketplace
    method: POST
    data_selector: connection
    params: {}
- name: customers
  endpoint:
    path: /admin/api/customers.json
    method: GET
    data_selector: customers
- name: orders
  endpoint:
    path: /admin/api/orders.json
    method: GET
    data_selector: orders
- name: draft_orders
  endpoint:
    path: /admin/api/draft_orders.json
    method: GET
    data_selector: draft_orders
- name: products
  endpoint:
    path: /admin/api/products.json
    method: GET
    data_selector: products
- name: customer
  endpoint:
    path: /admin/api/customers.json
    method: GET
    data_selector: customers
- name: last_order
  endpoint:
    path: /admin/api/2021-04/orders.json
    method: GET
    data_selector: orders
    params: {}
- name: Xtremepush
  endpoint:
    path: /settings/integrations/connect_new_page
    method: GET
- name: XP Message Events
  endpoint:
    path: /services/data/vXX.X/sobjects/XPMessageEvents
    method: GET
    data_selector: records
- name: XP Subscription Statuses
  endpoint:
    path: /services/data/vXX.X/sobjects/XPSsubscriptionStatuses
    method: GET
    data_selector: records
- name: groups
  endpoint:
    path: /marketplace/tecnalis/groups
    method: GET
- name: otp_activity_history
  endpoint:
    path: /otp/history
    method: GET
    data_selector: activities
- name: user_data
  endpoint:
    path: /api/v1/userdata
    method: GET
    data_selector: data
    params: {}
- name: campaigns
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: email_from_addresses
  endpoint:
    path: /docs/email-from-addresses
    method: GET
    data_selector: emails
    params: {}
- name: user_profile_import
  endpoint:
    path: /api/external/import/profile
    method: POST
    data_selector: rows
- name: User Subscribed Categories
  endpoint:
    path: /consent-management/user-subscribed-categories
    method: GET
- name: audit_log
  endpoint:
    path: /consent-management/audit-log
    method: GET
    data_selector: logs
    params: {}
- name: user_preferences
  endpoint:
    path: /api/user/preferences
    method: GET
    data_selector: preferences
    params: {}
- name: campaigns
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: campaigns
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: location_services
  endpoint:
    path: /docs/android-sdk-location
    method: GET
    data_selector: content
    params: {}
- name: inbox
  endpoint:
    path: /inbox
    method: GET
    data_selector: records
- name: push_notifications
  endpoint:
    path: /push/notifications
    method: POST
    data_selector: response
    params: {}
- name: push_notifications
  endpoint:
    path: /services/push/notifications
    method: POST
    data_selector: notifications
    params: {}
- name: geo_location
  endpoint:
    path: /services/geo/location
    method: GET
    data_selector: location
    params: {}
- name: iOS SDK
  endpoint:
    path: /docs/ios-sdk-integration
    method: GET
- name: iOS SDK integration
  endpoint:
    path: /docs/ios-sdk-integration
    method: GET
- name: campaign
  endpoint:
    path: /api/external/create/campaign
    method: POST
    data_selector: null
    params: {}
- name: delivery_receipts
  endpoint:
    path: /docs/ios-enterprise-push
    method: POST
    data_selector: enabled
    params: {}
- name: encrypted_messages
  endpoint:
    path: /docs/ios-enterprise-push
    method: POST
    data_selector: enabled
    params: {}
- name: events
  endpoint:
    path: /api/events
    method: POST
    data_selector: event_data
- name: inbox
  endpoint:
    path: /docs/campaign-inbox
    method: GET
    data_selector: messages
    params: {}
- name: website_integration
  endpoint:
    path: /docs/website-integration
    method: GET
    data_selector: website_details
    params: {}
- name: web_sdk
  endpoint:
    path: /docs/web-sdk-import
    method: GET
    data_selector: records
    params: {}
- name: pwa_integration
  endpoint:
    path: /docs/progressive-web-app-integration
    method: GET
    data_selector: records
    params: {}
- name: push_notification
  endpoint:
    path: /docs/web-push-notifications
    method: GET
    data_selector: notifications
    params: {}
- name: web_push
  endpoint:
    path: /helper-frame.html
    method: GET
    data_selector: push_notifications
    params: {}
- name: mouseout_event
  endpoint:
    path: /web/events/mouseout
    method: POST
    data_selector: event_data
- name: scroll_event
  endpoint:
    path: /web/events/scroll
    method: POST
    data_selector: event_data
- name: message_list
  endpoint:
    path: inbox/message.list
    method: GET
    data_selector: items
    params:
      limit: integer
      offset: integer
      opened: 0/1
      clicked: 0/1
      expired: 0/1
      min_time: integer
      max_time: integer
- name: message_count
  endpoint:
    path: inbox/message.count
    method: GET
    data_selector: count
    params:
      limit: integer
      offset: integer
      opened: 0/1
      clicked: 0/1
      expired: 0/1
      min_time: integer
      max_time: integer
- name: message_action
  endpoint:
    path: inbox/message.action
    method: POST
    data_selector: badge
    params:
      id: integer
      open: 0/1
      click: 0/1
      button: string
- name: message_actions
  endpoint:
    path: inbox/message.actions
    method: POST
    data_selector: badge
    params:
      actions: array
- name: badge
  endpoint:
    path: inbox/badge
    method: GET
    data_selector: badge
    params: {}
- name: tag_interaction
  endpoint:
    path: /tag
    method: POST
    data_selector: interaction
    params: {}
- name: page_impression
  endpoint:
    path: /impression
    method: POST
    data_selector: impression
    params: {}
- name: device_attribute
  endpoint:
    path: /device_attribute
    method: POST
    data_selector: attribute
    params: {}
- name: web_sdk_data_privacy
  endpoint:
    path: /docs/web-sdk-cookies
    method: GET
- name: data_storage_details
  endpoint:
    path: /docs/data-storage-details
    method: GET
- name: web_sdk
  endpoint:
    path: /docs/web-sdk-import
    method: GET
    data_selector: version
    params: {}
- name: hitEvent
  endpoint:
    path: /hitEvent
    method: POST
    data_selector: result
    params: {}
- name: hitTag
  endpoint:
    path: /hitTag
    method: POST
    data_selector: result
    params: {}
- name: setUser
  endpoint:
    path: /setUser
    method: POST
    data_selector: result
    params: {}
- name: openInbox
  endpoint:
    path: /openInbox
    method: POST
    data_selector: result
    params: {}
- name: registerXtremePush
  endpoint:
    path: /register
    method: POST
    data_selector: response
    params: {}
- name: manual_method_configuration
  endpoint:
    path: /docs/phonegap-multiple-push-providers-ios
    method: GET
    data_selector: content
    params: {}
- name: notification
  endpoint:
    path: /register.json
    method: POST
    data_selector: notifications
    params: {}
- name: latest_release
  endpoint:
    path: /docs/titanium-sdk-releases
    method: GET
    data_selector: release_notes
    params: {}
- name: previous_versions
  endpoint:
    path: /docs/titanium-sdk-releases
    method: GET
    data_selector: previous_versions
    params: {}
notes:
- Requires setup of connected app in Xtremepush
- Prizes are awarded to eligible players by linking rewards to specific user segments.
- You can also configure a default segment for any users who do not match a pre-defined
  segment.
- You must add separate apps for each individual app you plan to integrate with this
  project.
- Do not share keys between different apps.
- Carefully consider the timezone of your project before saving as it cannot be changed
  later.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects may return nulls in deeply nested fields
- It is still possible to access a legacy dashboard by clicking on Dashboard > Switch
  to old dashboard.
- There is no limit on the number of user accounts you can create for your company.
- Ensure DKIM is configured for the from address domain.
- Maintain a list of engaged and active subscribers to avoid spam traps.
- OAuth2.0 authentication is used
- Senders will need to set up SPF and DKIM authentication for their emails, using
  the correct DMARC alignment.
- Senders must provide a one-click unsubscribe option in their email headers.
- Senders should aim for a low spam complaint rate, ideally less than 0.3%.
- The toggle in the email Content tab when creating your campaigns Show unsubscribe
  header is currently set to OFF by default.
- Campaigns which previously had the Show unsubscribe header option enabled will be
  set as Marketing type campaigns and will include the unsubscribe header automatically.
- Web push notifications require that you configure your web application in your Xtremepush
  project and that you complete the integration of the Xtremepush SDK in your website.
- Inbox messages are targeted to user profiles, not to devices.
- Messages can expire at a preconfigured time.
- On-site messages require that you configure your web application in your Xtremepush
  project
- Testing is encouraged before start sending on-site campaigns to your customers
- Android 13 will give users the ability to choose directly in the app if they want
  to enable push notifications or not.
- For Android 13, in v9.1.0+ of the Xtremepush SDK, the opt-in prompt is off by default.
- Running tests is encouraged before start sending in-app campaigns to your customers.
- It is recommended to add a link at the top of the email content to allow the recipient
  to view the email online.
- It's a requirement to include a link in any marketing message to allow a recipient
  to unsubscribe.
- Some API calls may return rate limit errors
- Running tests is encouraged before starting sending SMS campaigns.
- Webhooks quick start guide
- Webhooks rely on Xtremepush's servers making requests to an external endpoint, and
  syntax and other errors may arise.
- Test your webhook campaign for syntax errors and make sure that personalised variables
  have a fallback value.
- Requires setup of Facebook SDK for user opt-in.
- Uses XP_ACCESS_TOKEN for authentication in the .env file.
- Locations is an additional feature. If you wish to use this feature and to discuss
  pricing please get in touch with your account manager.
- Running tests is encouraged before deploying locations to real customers.
- The default expiration time for OTPs can be configured during setup. Typically,
  it ranges from 5 to 15 minutes, depending on your security requirements.
- OTP messages can be customised in the platform when creating an OTP Integration.
- When enabled SIM Swap Protection ensures OTPs are sent only to trusted numbers.
- The number of allowed OTP verification attempts is defined by the Verification Tries
  setting in the OTP integration.
- Xtremepush prioritises customer trust. We know that customer data is important to
  our customers' values and operations.
- Uses OAuth2 with refresh token — requires setup of connected app in Xtremepush
- Some integrations may require additional configuration
- Data collected and passed to Xtremepush should be obtained in a compliant manner.
- Collection of Personal Data and use of same should be covered in your privacy notice.
- User guide provides detailed instructions for integration.
- Users can unsubscribe from web push notifications through browser settings.
- For SMS, users can opt-out via an unsubscribe link in messages.
- Hard opt-ins dictated at the OS level that cannot be overridden by a brand.
- Users can manage settings related to these IDs on their device.
- It is good practice to provide users with information on how to manage advertising
  identifiers as part of supporting docs to go with your privacy notice.
- Retention settings can only be applied by our support team. This is to ensure that
  no data is deleted without conversation and understanding. Also, when enabling on
  existing projects, this operation will need to be done gradually.
- Uses OAuth2 with refresh token
- Uses OAuth2.0 authentication
- Drop-off recovery is one of the most common campaign use cases for many comms channels
  such as push notifications, email, SMS etc.
- Users must interact with the site to trigger the push notification prompt.
- Browsers like Safari require a user gesture to show the permission prompt.
- Recommended approach is not copying tokens for most types of apps.
- This guide describes some common ways of targeting users.
- OAuth2.0 authentication
- Refine the data by platform type and by timeframe.
- 'URLs need to include the protocol at the beginning (ie: https://)'
- The system only tracks clicks on opt-out links and shortened URLs.
- Uninstall metrics will be accurate over time, but there will be some push notifications
  which appear to be sent successfully even though the device is no longer reachable.
- Xtremepush is moving all projects to using the new HTTP/2-based Apple Push Notification
  service (APNs) provider API.
- Permanent failures mark the recipients as email unaddressable, so recipients that
  received a permanent failure will be excluded from any future email campaigns.
- A temporary (or transient) failure won't mark the recipient as unaddressable, and
  you will be able to include these recipients for future campaigns.
- You can find push notification analytics in Analytics > Campaigns > Push Messages
  (opt - ins / outs)
- Active user data for web apps is available from the December 2024 release onwards.
- Access this section from Analytics > Behaviour.
- Location services is required.
- Uses OAuth2 with refresh token — requires setup of connected app in xtremepush
- This feature is not supported by apps using an XtremePush Mobile SDK released before
  Nov 3 2014.
- Metrics are measures of quantitative assessment, commonly used to track performance.
- Campaigns can be created based on different triggers.
- JWT authentication requires setup details.
- Rich media messages in iOS require a service extension to send notifications with
  images, GIFs, and video.
- The email channel can only be enabled once all necessary authentications are in
  place.
- From names must be alphanumeric and contain between 3 and 11 characters long.
- The reply to opt-out solution is only available for users of the Vonage gateway.
- RCS availability depends on location and carrier compatibility.
- Only users subscribed to SMS messages can receive RCS messages.
- Users can design messages for website users when an event is triggered.
- Xtremepush only allows URLs that communicate over standard ports 80 (HTTP) and 443
  (HTTPS). However, to ensure data is passed securely we strongly recommend using
  HTTPS to use encryption.
- Locations is an additional feature. If you wish to use this feature and discuss
  pricing please get in touch with your Account Manager.
- This section was previously available at the top of the iOS content tab and the
  web push content tab respectively.
- Whenever launching a campaign it is a best practice to use the Calculate recipients
  feature to count recipients and make sure that your targeted audience for this campaign
  is what you are expecting.
- Requires setup of connected app in api
- If you choose Month(s) as the desired frequency, the system allows you to select
  either Monthly on the first or Monthly on the last.
- Campaign throttling may apply
- Throttling is available on Single-Stage Time-based campaigns (both when scheduled
  to Send now or Send later).
- The feature also works for split tests but only applies to the winning variant.
- Some objects like Contact may return nulls in deeply nested fields
- For any SMS campaigns or if you have enabled 'Require Audience Count on Campaign
  Approval' from Settings > Channels > Engagement rules & categories, you'll need
  to calculate recipients before launching the campaign.
- File import triggers are available.
- Journey Builder 2.0 is now available in Beta.
- Multi-stage journeys are an optional feature and not enabled by default.
- Ignore subscription should be used with extreme caution and in compliance with consumer
  data protection laws like GDPR.
- Users are evaluated for delay at the point of reaching the delay action. Any users
  already in the are not affected by changes applied to the delay after the entry.
- Date attributes are in the UTC timezone, so if your project is in a different timezone,
  you can offset the timezone in the attribute value.
- If a user profile arrives at a delay and the date/time has already passed, then
  they will not be delayed and will pass straight through.
- When a workflow is restarted, if the date/time that the user profile should have
  moved on has passed, then they will be automatically moved on immediately.
- 'At this time the only attributes sent to the audience are as follows: Meta: Email,
  mobile number; Google: Email'
- There is no need to save changes as multi stage workflows save changes automatically.
- Closed or stopped workflows cannot be edited.
- Journey Builder 2.0 is available as a Beta option for multi-stage campaigns.
- The Events action is currently being released behind a feature toggle in this beta
  version.
- Using Event Actions will elevate the overall number of Events counted against your
  Project.
- Test your webhooks thoroughly before deploying in production journeys
- Monitor webhook performance regularly through the analytics dashboards
- Set up fallback paths for cases where webhooks fail to send or receive expected
  responses
- Keep response parsing simple when possible to ensure reliable journey execution
- Consider rate limits of external APIs when designing high-volume journeys
- The migration feature is not enabled by default.
- Once a campaign is migrated to JB 2.0, it cannot be reverted back.
- The migration feature is available only to users with the Company Admin, Project
  Admin, Campaign Manager, or Campaign & Data Manager.
- In-App campaign messages are delivered when an event is triggered by users on your
  application.
- On-site campaign messages are delivered when an event is triggered by users on your
  website.
- This feature is currently in closed beta and not available for general use.
- Using your own code may affect how the message is shown in different devices, preventing
  it from adjusting to the screen size.
- Modal campaigns allow marketers to engage users with rich content.
- To use server events, additional configuration is required which includes being
  on the latest web SDK version and having polling configured for your web app.
- 'To enable automatic polling of server-triggered messages, update the Xtremepush
  SDK to iOS: 5.10.0, Android: 9.4.0, and Web: 2.2025.2.'
- 'Variant limit: It''s not recommended to set up more than 7 variants.'
- Triggered campaigns do not allow setting a percentage.
- The maximum allowed file size is 12MB.
- Allowed file types are images, PDF, MS Excel, MS Word, and other common text documents.
- Images wider than 1920px will be automatically downsized.
- The drag and drop builder uses advanced email design techniques to ensure that background
  images are rendered on most email clients.
- 'According to our most recent tests, the only email clients for which background
  images were not shown, were: Outlook (background images appear to work on Outlook
  2016 on OS X, not in other versions), Lotus Notes 7, Xfinity / Comcast email client.'
- Uses OAuth2 — requires setup of connected app in Xtremepush
- When loading an image from an external URL, make sure to include the HTTPS protocol
  in the link.
- This feature does not embed the actual video in the email designed with the drag
  and drop editor, but rather links to it in a smart way. This is because embedding
  video is not supported on email.
- The editor can't access password-protected videos to get the cover image.
- Saving content rows for future use
- Users can unsubscribe from preferences.
- Encrypted mobile push is part of the Xtremepush Enterprise Push package, which is
  a paid feature.
- If a particular campaign requires the message to be encrypted, then it can be enforced
  via the Segment tab for a single-stage campaign by selecting the option Enforce
  encryption.
- All files uploaded to the platform must be smaller than 2MB.
- To enable image functionality in iOS push messages, clients must create a Service
  Extension in their app.
- Mobile push notifications creative guidelines
- 'Suggested dimensions for default icon: 256x256 px (must be squared)'
- 'Valid image formats for default icon: PNG, JPG, GIF, ICO'
- 'Suggested dimensions for picture: 800x450 px. Keep a ratio close to 16:9, taller
  images will be cropped by the system'
- 'Valid image formats for picture: PNG, JPG (JPEG)'
- iOS supports JPG, GIF and PNG formats up to 2 MB in size.
- Maximum image size is 2000x2000 px. The image height setting (auto by default) will
  resize the displayed image proportionately.
- 'Suggested dimensions for icon: 256x256 px (must be squared)'
- 'Valid image formats for icon: PNG, JPG (JPEG), GIF (only animated on Firefox in
  Windows)'
- 'Dimensions for picture: 512x256 px (the image can have other sizes but the ratio
  must be 2:1)'
- The safe zone for your content is the blue area.
- Xtremepush uses Twig 3.8.0
- Projects created before the 20th of July of 2020 may not have the dynamic content
  feature enabled.
- When preparing a dynamically generated email, it is important to try multiple test
  sends to make sure that data is populating correctly.
- If there are any issues you can navigate to Campaigns > Notification Log > Options
  menu > Details to drill into this campaign and review any error messages.
- In our example below, the array was incorrectly referenced as JSON instead of body
  in the for loop.
- Voucher codes are only available on scheduled campaigns (not on triggered campaigns).
- This feature is not available on the Webhooks channel.
- Campaign templates are not enabled by default.
- For best results, if you do many daily sends it's recommended to access the Notifications
  log for specific campaigns.
- If the number of targeted messages is 0, then there was some issue with the segmentation
  of the campaign. If this is greater than 0, but the number of sent messages is 0,
  then go into the Details page to review errors for that send.
- Common notifications log errors
- Common notifications log errors may occur for various reasons.
- Optimove attributes need to be enabled beforehand.
- In order to attribute App Installs your app must collect the advertising identifiers;
  IDFA on iOS and Android Ad ID.
- Attributions requires an active Kochava integration.
- Enable a peer-review system for your campaigns in Xtremepush
- Requires OAuth2 authentication setup
- Refer to API reference for data structure
- Micro sites is an optional feature, not enabled by default.
- User data is stored within Xtremepush as User Profiles and Device Profiles, with
  custom values stored using Attributes.
- To search by Profile ID or User ID, the whole value must be entered.
- Attributes may be used for segmentation or personalisation of messaging campaigns.
- Tags may be used to record user behaviour over time and can be used in segmentation
  for messaging campaigns.
- Maximum recommended size is 10MB.
- File name cannot be left blank but a matching pattern using a regular expression
  can be used to pick up files of a known type or with a filename which follows a
  specific pattern.
- At the set scheduled time, Xtremepush will check the given directory for any files
  matching the details given and import them.
- Automated exports are available.
- Automations allows users to set up hourly, daily, weekly or monthly export schedules
  via SFTP or email.
- Download user profile data
- Platform users with permission to access user data can download all data associated
  to a single User Profile.
- Ensure GDPR compliance when handling user data.
- Allows deletion of personally identifiable information to comply with GDPR Right
  to Erasure.
- Create user profiles for testing non-device channels
- Data about the user's country is only collected on the mobile SDKs.
- This information is only available if you have integrated location services, whenever
  your users enter geofences or iBeacon-fenced regions.
- Data about the user's last known location is only collected on the mobile SDKs,
  provided that location services have been integrated.
- Files uploaded to Xtremepush must always be saved using UTF-8 encoding.
- Rolling segments can be set up at any time and will be calculated hourly so they
  are kept as up-to-date as possible and ready to be used in a campaign at a moment's
  notice.
- A segment calculation times out if it runs longer than five minutes. When this happens,
  the sync for that specific hourly cycle fails and an error message is generated.
  The segment stops syncing and must be manually re-enabled by clicking Enable Sync.
- While this feature is in beta, there is an initial maximum of 3 Rolling Segments
  per project.
- Sample counts is an optional feature and not enabled by default. Contact your Account
  Manager if you want to use this feature.
- Events match by name. If you do any change on XP platform, you need to be sure that
  change is also made on SDKs or APIs.
- Shows a record of all the asynchronous tasks performed in the project.
- Access details by navigating to Data > Task History.
- The Audit log is not enabled by default on all projects.
- Deleting a project is possible for company admins from the General project settings
  page.
- You must add separate details for each individual website or app you plan to integrate
  with this project.
- Automatically add analytics tracking variables to links in your campaigns
- Spaces should be avoided as they will be rejected by some networks.
- Opting out via link is the default option.
- This opt-out solution is only available for users of the Vonage gateway.
- It is recommended that you set a highlight colour to make this link more prominent.
- It is not recommended if you have a login and customer records are syncing mobile
  numbers to the platform from your system of record.
- Once this functionality is enabled, the links on SMS content will be automatically
  shortened on preview and the character count will reflect the URL format.
- To do so, please contact us.
- Each of the integrated Android apps, iOS apps and websites have their own inbox
  settings.
- You can also choose to show a push notification toggle in the inbox header.
- If you change the Sender ID of an existing integration you will lose your current
  subscribers.
- Request body type is always Raw Text.
- Parameters for messages are supplied in JSON format.
- Prevents bot clicks from inflating engagement metrics.
- Seed lists will supersede all subscriptions, segmentation, suppression lists and
  global include conditions.
- Bonus integrations allow connecting your bonus engine to your Xtremepush project.
- Bonuses can be assigned to users when sending campaigns.
- Ad retargeting is an optional feature, not enabled by default.
- Ensure your Google or Meta access tokens remain valid.
- Syncing your Active Directory Users and Groups will allow you to send email campaigns
  using your Exchange Distribution List.
- Standard Active Directory user attributes synced to Xtremepush that do not have
  corresponding Xtremepush profile attributes defined will be ignored.
- The Gaming Innovation Group integration isn't enabled by default.
- Once the integration is created, it cannot be edited.
- It is possible to have additional GIG Bonus Engine connections by repeating the
  integration steps.
- You should only have one active connection at any given time to avoid any potential
  clashes with sync processes.
- The GIG Core Promotions Engine integration doesn't automatically sync promotions
  from the promotion engine.
- It is possible to have additional GAN Bonus Engine connections but only one active
  connection at a time.
- The integration to get attribution data is an additional feature and also requires
  a subscription with the third party.
- Requires IT Support with SSH access to the server where Magento 2 hosted.
- Email subscription data requires mapping Magento's `is_subscribed` attribute to
  Xtremepush's `email_subscription` attribute.
- Users without a unique ID coming from the Mixpanel platform will be ignored by Xtremepush.
- Effective February 1st 2024, Optimove will move from the username and password method
  to API key (token-based) authentication.
- The NHL feed does not support translations.
- The NFL feed does not support translations.
- SB Tech will not accept a user_id or customer_id which is higher than 2147483647.
- The Segment integration allows you to use Xtremepush as your multichannel messaging
  hub.
- Working Directory field cannot be left blank.
- Requires read and write access for Customers, read access for Draft orders, read
  access for Orders and read access for Products.
- Automatically collects attributes through the Shopify Integration.
- If you change your data extension after configuring your campaign, you must open
  and reconfigure each Xtremepush activity within that campaign.
- More than one connection to TG Lab is possible, but only one active connection should
  be maintained to avoid sync clashes.
- The webhook endpoint has to respond within five seconds.
- An integration will appear as active when a successful connection has been made
- You should only have one active connection at any given time to avoid any potential
  clashes with sync processes
- 'OTP Length: Minimum length: 4 characters. Maximum length: 10 characters.'
- 'Lifetime: The OTP validity duration must be configured in seconds, minutes, hours,
  or days.'
- 'Verification Tries: The maximum retry attempts must be set within a reasonable
  limit.'
- You can add alarms to detect sudden drops in send volumes for any message type from
  any of your projects.
- The web fonts feature will only be visible when the email channel is active and
  it's only available for the email builder. Only admin roles can add, edit and delete
  custom fonts.
- Most customers will be configured to use Xtremepush's email delivery platform, so
  must contact us to add their email addresses, so we can ensure best deliverability
  results.
- Verification is important because email inherently allows the ability to choose
  any from address.
- More than one custom send domain can be configured per project.
- Email IP allocation and warm-up
- This guide only applies to projects using Xtremepush's email delivery platform.
- This is not applicable if your project is using Amazon SES.
- When you create a new account for one of your colleagues, consider generating a
  strong password using a password generation service.
- Enable Single Sign On to authenticate users logging in to the Xtremepush platform
- Once Single Sign On is enabled, there will be a separate login page your users will
  see when accessing the platform.
- BIMI stands for Brand Indicators for Message Identification, and it is a new specification
  that allows brands to have their logo displayed next to their message in an email
  inbox.
- BIMI improves the engagement rate as recipients know who an email is coming from,
  but it will not impact deliverability if it's not set.
- Consent Management is an optional feature and not enabled by default.
- Single preference across multiple channels
- It is only possible to set preferences in this way for profile-based channels (email,
  SMS or profile-based custom channels).
- Deletion is Irreversible
- Deleting a preference or a channel is a permanent action that cannot be undone.
  This action can break active campaigns, segments, and data imports that rely on
  that preference.
- We strongly recommend testing this in a separate project before applying the change
  to your live environment.
- Audit log is useful for maintaining compliance and troubleshooting any issues related
  to consent preferences.
- Requires authentication to access user preferences and campaigns.
- Link Preferences to Campaigns
- Consent preferences cannot be edited after the campaign has been launched.
- Each campaign is linked to one consent preference to ensure clarity and compliance.
- Segment Users by Subscription Preferences
- In-App messages not supported for consent preference changes.
- Consent management is enabled in your project and consent preference is configured
  in the campaign
- Consent management is enabled in your project but consent preference is not configured
  in the campaign
- Consent management is disabled
- 'Consent Preferences Enabled: Clicking the unsubscribe link directs users to the
  Preference Center, where they can manage their SMS preferences.'
- 'Consent Preferences Disabled: Same as above'
- 'SMS unsubscribe requires two actions: Users select preferences to unsubscribe from
  in the Preference Center. They confirm by clicking ''Save.'''
- Push notifications typically do not include a direct unsubscribe link.
- Generate any number of secure API tokens using the OAuth2.0 protocol.
- If you are using version 8.0 or later of the Xtremepush SDK, please include the
  latest version of AndroidX.
- Make sure you set the user ID
- Debug logs can slow down your app and should be turned off before releasing the
  app.
- Firebase has migrated to a new HTTP v1 API. Effective June 2024, Firebase will stop
  supporting the legacy FCM APIs for HTTP and XMPP.
- In v9.1.0+ of the Xtremepush SDK, the opt-in prompt is off by default.
- Delivery receipts will allow you to confirm when a push notification has been delivered
  to a device.
- This feature is only available in Xtremepush Android SDK versions starting from
  v7.9.0.
- Encrypted mobile push feature is part of the Xtremepush Enterprise Push package,
  which is a paid feature.
- Location services will allow you to add geofence or iBeacon regions related to your
  app on the Xtremepush platform.
- Make sure you have setup the inbox on the platform before you start, this is a prerequisite.
- Default behaviour for tags is that they are sent immediately.
- Batching for tags and impressions can be toggled during runtime.
- Set a custom icon for push notifications
- Improved persistance flow
- Bugfix around webview handling
- Feature added to allow rich push message notifications
- Feature added to allow low-powered geo location monitoring
- You must add separate apps for each individual app you plan to integrate with this
  project. Do not share keys between different apps.
- If you’re migrating from v3 of our iOS SDK follow the steps outlined in the upgrade
  documentation.
- NSBluetoothPeripheralUsageDescription is required to be set if your app includes
  CoreBluetooth
- Failure to include this description key will result in an automated rejection when
  uploading your app to the App Store
- Xtremepush does not require you to set Delegate of UNUserNotificationCenter as it
  will conflict with our library.
- It is recommended to delay the opt-in prompt until the user has logged in or reached
  an appropriate section in the app.
- Delivery receipts require the use of a service extension.
- This feature is part of the Xtremepush Enterprise Push package, which is a paid
  feature.
- The delivery receipts feature is only available in Xtremepush iOS SDK versions starting
  from v4.1.8.
- Location services will allow you to add geofence or iBeacon regions related to your
  app.
- Without usage description keys your app will not request location permission.
- From iOS 13, apps requesting the Always permission will show an Allow Once option.
- In-app messages can be triggered on Session Start
- Make sure you have set up the inbox on the platform before you start, this is a
  prerequisite.
- Uses OAuth2 with refresh token — requires setup of connected app in XtremePush
- SDK release notes and asset downloads are available on our SDK's GitHub page.
- Icons are required for the proper functioning of web-related campaigns.
- Do not share keys between different sites.
- Ensure devices can be associated and targeted in campaigns by setting user IDs.
- HTTPS-enabled domain is required for PWAs.
- HTTPS required for Chrome/Opera notifications.
- Older web applications may still require Firebase credentials.
- 'User gesture required: With the release of Safari 12.1, the browser web push opt-in
  prompt cannot be served to users without a user gesture.'
- Chrome requires notifications to be sent via HTTPS but there are possible workarounds
- Beginning in July 2018 with the release of Chrome 68, Chrome marks all HTTP sites
  as 'not secure'.
- The examples shown above are using our default Chrome HTTP solution.
- The script for the service worker file will only be shown in Push Settings if you
  have selected the Use Self-hosted Domain option, but the service worker is required
  for AMP integration.
- Both mouseout and scroll events should be called below the initialization of the
  web SDK on your page or when the page has loaded.
- Triggered events can be added to your site very simply using the event method of
  the Xtremepush web SDK.
- Uses custom CSS to customise the inbox icon
- The opened inbox displays in a default style
- The message.count method shouldn't be used on page load in order to display the
  inbox badge. You should use the badge method instead.
- The information collected is used for internal market research and optimization
  of the website.
- The SDK is provided automatically by Xtremepush when following the guide to implement
  the SDK import code on your website.
- Xtremepush will always provide the latest version available at the time of the implementation,
  and it is not possible to import an older version.
- OAuth2.0 authentication is required.
- You will need to add NSBluetoothPeripheralUsageDescription to your config.xml file
  under the iOS section.
- If you are using locations you will need to add the following to your config.xml
  file under the iOS section.
- 'inboxEnabled: true can be added to enable the inbox feature'
- attributionsEnabled parameter must be set with a value of true to enable collection
  functionality
- By default, the Xtremepush iOS Phonegap plugin uses method swizzling to inject the
  required AppDelegate methods for push handling.
- If you have multiple push providers in your Cordova-based application this can interfere
  with your existing setup.
- It is recommended that at this stage you use our SDK method to set user IDs by following
  our dedicated guide to ensure devices can be associated and targeted in your campaigns
  by your own unique identifier.
- For android apps, due to Xtremepush's dependency on play-services, you will also
  need to add the ti.playservices module.
- If you are also enabling push notifications, you will need to set up your Apple
  push certificates and add the notifications handling methods described in the iOS
  push notifications guide.
- Android encourages you to set an icon that is in-keeping with their design guidelines.
- Android allows for further permission control
- iOS includes permission manifest
errors:
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Verify your API key and secret'
- Bounces categorized by permanent or temporary reasons.
- Ensure unsubscribe links are included in emails.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Debug logs allow you to review requests which are being made from your website to
  the Xtremepush project and detect issues
- Debug logs can be enabled to review issues.
- '403 Forbidden: Check API key or user permissions'
- '500 Internal Server Error: Retry the request later'
- Expired API keys
- Rate limits
- Unexpected server errors
- '200: Successfully registered recipient with xtremepush'
- 'Error: Unable to register.'
- 'OTP_EXPIRED: The OTP has exceeded its validity period and is no longer valid for
  verification.'
- 'OTP_INVALID: The user entered an incorrect OTP.'
- 'RETRY_LIMIT_EXCEEDED: The maximum allowed retry attempts for OTP verification have
  been exceeded.'
- 'DELIVERY_FAILED: The OTP SMS could not be delivered to the recipient due to network
  issues or invalid numbers.'
- '401 Unauthorized: Check your credentials and permissions.'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Verify your authentication credentials.'
- 'SESSION_STORAGE_EXCEEDED: Limit on session storage items exceeded.'
- 'PERMISSION_DENIED: User denied permission for push notifications.'
- Application is uninstalled
- 'BadMailbox: The mailbox does not exist at the recipient domain.'
- 'Suppressed: The email provider has suppressed sending to this address because it
  has a recent history of bouncing as an invalid address.'
- 'MailboxFull or QuotaIssues: The recipient''s mailbox is full and the service provider
  cannot accept any further incoming messages.'
- 'TemporarilyDeferred: The recipient''s email server has rejected the email due to
  a large number of received emails from the sender in a short period of time.'
- 'ContentRejected: The email has been rejected due to a filter against the message
  content.'
- 'PolicyReject or PolicyRelated: The email has been rejected due to a policy filter
  against the sender.'
- 'SpamRelated: The email has been rejected by the receiving mail server as spam.'
- 'MailboxInactive: The mailbox has been listed as inactive.'
- 'NetworkErrors: An error has occurred on the receiving mail server, for example
  due to bad configuration.'
- 'BadDomain: The email domain does not have a receiving mail server; this typically
  happens when the address is incorrect, for example @htmail.com or @otlook.com.'
- 'NoAnswerFromHost: The receiving mail server cannot be reached.'
- 'MessageExpired: The message has been attempted to be delivered to the end user,
  but the gateway was unable to do so after multiple attempts.'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Check your client credentials or token.'
- '403 Forbidden: Ensure you have the right permissions.'
- it's possible to set the Maximum number of triggers and Maximum triggers per location
  to Unlimited by deleting the defaults and not replacing them.
- If you do not calculate the recipients, the Launch campaign button will be greyed
  out and you won't be able to send your campaign.
- Ensure uniformity across all devices, avoid display problems and to obtain the best
  results on iOS and Android push campaigns.
- 'not personalised: Message not sent due to missing attributes.'
- 'Failed: The message couldn''t be delivered to this recipient.'
- 'Sent: If delivery receipts are not available and there have been no failures, the
  message will show as sent by default.'
- 'Bounced: applicable only for email campaigns.'
- Common notifications log errors
- 'Not personalised: Personalisation issue (wrong syntax, missing attribute or missing
  fallback value, twig not enabled for project)'
- 'Device_unregistered: The app has been uninstalled or it cannot longer be reached
  from the gateway'
- 'Sender_ID_mismatch: The sender ID uploaded to the XtremePush platform doesn''t
  match the sender ID used to generate the push token'
- 'Post "https://api.push.apple.com...": Expired iOS certificate. Replace it following
  instructions'
- 'Unable to connect to ''ssl://gateway.push.apple.com...'': Expired iOS certificate.
  Replace it following instructions'
- 'BadDeviceToken: Token mismatch (possibly using sandbox token for production app
  or viceversa)'
- 'Invalid from param: From name is not correct. Must follow format outlined'
- 'Gone: The subscription for the device is no longer active or the service worker
  on that particular device has been removed'
- 'DeviceTokenNotForTopic: The app push certificate and bundle ID are mismatched.
  Verify that the bundle ID saved in Xtremepush matches exactly the bundle ID in the
  application source code'
- '404: Requested entity was not found: The app has been uninstalled or the token
  hasn''t been refreshed in 270 days. Marks the device as unaddressable'
- '429: Quota exceeded for quota metric...: Firebase applies a sending limit that
  has been exceeded. Contact Firebase to get this limit increased'
- '403: Firebase Cloud Messaging API has not been used in project XXX before: FCM
  v1 API is disabled in your Firebase project. Review your configuration'
- '401 Unauthorized: Check credentials or token expiry'
- '404 Not Found: Verify endpoint path'
- '500 Internal Server Error: Retry after some time'
- '404 Not Found: Check if the user profile exists'
- '400 Bad Request: Ensure all required fields are filled'
- '401 Unauthorized: Check OAuth token validity'
- 'Failed due to duplicated rows: rows that did not import due to a row with the same
  data already existing in the imported file.'
- Cannot find some of these fields
- 'Invalid event name: Ensure that the event name is consistent across the platform
  and SDKs.'
- 'iOS: In-app messages cause error'
- 'iOS: invalid certificates error for push notifications'
- 'iOS: Invalid token error for push notifications'
- 'iOS: APNS connection closed error for push notifications'
- 'iOS: App store requires more info on location scanning'
- 'Web: push messages not arriving'
- '20x: Successful response'
- '400: Bad request - Check the request format and parameters'
- Reauthentication error message is displayed on your project dashboard.
- 'Invalid Project Token: Ensure you have entered the correct Project Token from Mixpanel.'
- Failure to comply with the API key (token-based) authentication by February 1st
  2024 will cause API integrations to break as a result of login failures.
- 'Domain email server blocking: The business email server responsible for the chosen
  from address domain will typically block emails using its from address that arrive
  externally from other senders.'
- '401 Unauthorized: Check your apptoken.'
- Failure to comply with the API key (token-based) authentication by June 21st 2024
  will cause push messages to stop working as a result of login failures.
- Invalid token error for push notifications
- 'Unable to find specification for pod ''Xtremepush-iOS-SDK'': Update local CocoaPods
  specification with ''pod repo update''.'
- APNS connection closed error for push notifications
- '401 Unauthorized: Recheck OAuth token'
- 'deviceInfo: Issue with integration if device ID not retrieved'
auth_info:
  mentioned_objects:
  - OauthToken
  - OAuth2.0 authentication
  - AuthProvider
  - NamedCredential
  - user account
  - authenticator app
  - NSLocationAlwaysUsageDescription
  - NSLocationAlwaysAndWhenInUseUsageDescription
  - NSLocationWhenInUseUsageDescription
  - NSBluetoothAlwaysUsageDescription
  - XPush
client:
  base_url: https://xtremepush.com
  auth:
    type: oauth2
source_metadata: null
