resources:
- name: emit_event
  endpoint:
    path: socketio.on('my event')
    method: POST
    data_selector: data
- name: send_message
  endpoint:
    path: flask_socketio.send(*message*, **kwargs)
    method: POST
    data_selector: message
- name: join_room
  endpoint:
    path: flask_socketio.join_room(*room*, *sid=None*, *namespace=None*)
    method: POST
    data_selector: room
- name: leave_room
  endpoint:
    path: flask_socketio.leave_room(*room*, *sid=None*, *namespace=None*)
    method: POST
    data_selector: room
- name: close_room
  endpoint:
    path: flask_socketio.close_room(*room*, *namespace=None*)
    method: POST
    data_selector: room
- name: rooms
  endpoint:
    path: flask_socketio.rooms(*sid=None*, *namespace=None*)
    method: GET
    data_selector: rooms
- name: disconnect
  endpoint:
    path: flask_socketio.disconnect(*sid=None*, *namespace=None*, *silent=False*)
    method: POST
    data_selector: sid
notes:
- Uses Flask-SocketIO for handling real-time WebSocket connections.
- The Flask development server is intended only for development use.
- If using multiple processes, a message queue service must be configured.
- Uses SocketIO for real-time communication
- The application must serve a page to the client that loads the Socket.IO library
- The traditional authentication process should be performed before establishing the
  SocketIO connection.
- Recent revisions of the Socket.IO protocol allow passing authentication information
  during the connection.
- For security reasons, this server enforces a same-origin policy by default.
errors: []
auth_info:
  mentioned_objects: []
client:
  base_url: http://127.0.0.1
  headers:
    Accept: application/json
source_metadata: null
