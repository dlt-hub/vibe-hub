resources:
- name: contacts
  endpoint:
    path: /contact
    method: GET
- name: companies
  endpoint:
    path: /company
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: venues
  endpoint:
    path: /venues
    method: GET
- name: event
  endpoint:
    path: /api/1.0/event
    method: POST
    data_selector: records
    params:
      action: getEventList
- name: contact
  endpoint:
    path: /contact
    method: GET
- name: event
  endpoint:
    path: /events
    method: GET
- name: venue
  endpoint:
    path: /venues
    method: GET
- name: test_ping
  endpoint:
    path: /test?action=ping
    method: GET
    data_selector: ack
- name: contact
  endpoint:
    path: /contact/get-contact-list
    method: GET
    data_selector: results
- name: event
  endpoint:
    path: /events/get-event-list
    method: GET
    data_selector: results
- name: venue
  endpoint:
    path: /venues/get-venue-list
    method: GET
    data_selector: results
- name: batch
  endpoint:
    path: /batch
    method: POST
    data_selector: results
- name: batch_run
  endpoint:
    path: /api/1.0/batch?action=run
    method: POST
    data_selector: asyncId
    params: {}
- name: progress
  endpoint:
    path: /api/1.0/batch
    method: POST
    data_selector: progress
    params:
      action: progress
- name: results
  endpoint:
    path: /api/1.0/batch?action=results
    method: POST
    data_selector: results
    params: {}
- name: repost
  endpoint:
    path: /api/1.0/batch?action=repost
    method: POST
    data_selector: reposted
    params:
      async: string
- name: contact
  endpoint:
    path: /contact/get-contact-list
    method: GET
- name: event_registration
  endpoint:
    path: /events/get-registration-list
    method: GET
- name: event_list
  endpoint:
    path: /events/get-event-list
    method: GET
    data_selector: events
- name: invited_contact_list
  endpoint:
    path: /events/get-invited-contact-list
    method: GET
    data_selector: invited_contacts
- name: attendee_list
  endpoint:
    path: /events/get-attendee-list
    method: GET
    data_selector: attendees
- name: company_list
  endpoint:
    path: /contact/get-company-list
    method: GET
    data_selector: companies
- name: company
  endpoint:
    path: /contact/get-company
    method: GET
    data_selector: company
- name: add_or_update_company
  endpoint:
    path: /contact/add-or-update-company
    method: POST
    data_selector: result
- name: booking_list_for_account
  endpoint:
    path: /venues/getoraddbookingdata/get-booking-list-for-account
    method: GET
    data_selector: bookings
- name: booking_list
  endpoint:
    path: /venues/getoraddbookingdata/get-booking-list
    method: GET
    data_selector: bookings
- name: booking
  endpoint:
    path: /venues/getoraddbookingdata/get-booking
    method: GET
    data_selector: booking
- name: invoice
  endpoint:
    path: /invoice/get-invoice
    method: GET
- name: invoice_list
  endpoint:
    path: /invoice/get-invoice-list
    method: GET
- name: add_payment
  endpoint:
    path: /invoice/add-payment
    method: POST
- name: contact
  endpoint:
    path: /contact/get-contact
    method: GET
- name: contact_list
  endpoint:
    path: /contact/get-contact-list
    method: GET
- name: company
  endpoint:
    path: /contact/get-company
    method: GET
- name: company_list
  endpoint:
    path: /contact/get-company-list
    method: GET
- name: options
  endpoint:
    path: /invoice/get-options
    method: GET
- name: Get Booking List
  endpoint:
    path: /venues/getoraddbookingdata/get-booking-list
    method: GET
- name: Add Items To Booking
  endpoint:
    path: /venues/getoraddbookingdata/add-items-to-booking
    method: POST
- name: Get Cost Centre List
  endpoint:
    path: /account/get-cost-center-list
    method: GET
- name: Add Payment to Booking
  endpoint:
    path: /venues/getoraddbookingdata/add-payment-to-booking
    method: POST
- name: Group Accommodation Blocks
  endpoint:
    path: /venues/venuedata/get-venue-list
    method: GET
- name: Room Reservations
  endpoint:
    path: /venues/accommodation/get-booking-accommodation-list
    method: GET
- name: ARI
  endpoint:
    path: /venues/accommodation/add-or-update-room-dynamic-rates
    method: POST
- name: contact
  endpoint:
    path: /contact/get-contact-list
    method: GET
    data_selector: records
    params: {}
- name: company
  endpoint:
    path: /contact/get-company-list
    method: GET
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /api/1.0/contact
    method: POST
    data_selector: contacts
    params:
      action: getContactList
- name: contact
  endpoint:
    path: /api/1.0/contact
    method: POST
    data_selector: response
    params:
      action: getContact
- name: contact
  endpoint:
    path: /contact/get-contact
    method: GET
    data_selector: collection
- name: contact_note
  endpoint:
    path: /contact?action=getContactNoteList
    method: POST
    data_selector: results
    params:
      incremental: contactId
- name: contact_note
  endpoint:
    path: /contact/note/list
    method: GET
    data_selector: notes
    params:
      contactId: 4
      perPage: 50
- name: contact
  endpoint:
    path: /api/1.0/contact
    method: POST
    data_selector: id
    params:
      action: addOrUpdateContact
- name: contact
  endpoint:
    path: /contact/add-or-update
    method: POST
    data_selector: success
    params: {}
- name: Get Custom Field Definition
  endpoint:
    path: /contact?action=getCustomFieldDefinition
    method: POST
    data_selector: array
- name: get_company_custom_field_definition
  endpoint:
    path: /api/1.0/contact?action=getCompanyCustomFieldDefinition
    method: POST
    data_selector: '[]'
- name: subscription_group
  endpoint:
    path: /api/1.0/contact
    method: POST
    data_selector: subscriptionGroups
    params:
      action: getSubscriptionGroupList
- name: add_contacts_to_subscription_group
  endpoint:
    path: /api/1.0/contact
    method: POST
    data_selector: contacts
    params:
      action: addContactsToSubscriptionGroup
- name: remove_contacts_from_subscription_group
  endpoint:
    path: /contact
    method: POST
    data_selector: results
    params:
      action: removeContactsFromSubscriptionGroup
- name: company_list
  endpoint:
    path: /contact?action=getCompanyList
    method: POST
    data_selector: companies
    params:
      incremental: modifiedDate
- name: get_company
  endpoint:
    path: /contact?action=getCompany
    method: POST
    data_selector: ''
    params:
      id: integer
- name: company
  endpoint:
    path: /contact/get-company
    method: GET
    data_selector: company
    params: {}
- name: company_note
  endpoint:
    path: /contact?action=getCompanyNoteList
    method: POST
    data_selector: results
    params:
      companyId: integer
      perPage: integer
      start: integer
- name: company_note
  endpoint:
    path: /contact/get-company-note-list
    method: GET
    data_selector: notes
    params:
      companyId: 4
      perPage: 50
- name: add_or_update_company
  endpoint:
    path: /api/1.0/contact
    method: POST
    data_selector: success
- name: company
  endpoint:
    path: /contact?action=addOrUpdateCompany
    method: POST
    data_selector: success
    params: {}
- name: add_or_update_lead
  endpoint:
    path: /api/1.0/contact?action=addOrUpdateLead
    method: POST
    data_selector: lead
    params: {}
- name: add_or_update_contact_note
  endpoint:
    path: /api/1.0/contact
    method: POST
    data_selector: success
    params:
      action: addOrUpdateContactNote
- name: company_note
  endpoint:
    path: /api/1.0/contact
    method: POST
    data_selector: success
    params:
      action: addOrUpdateCompanyNote
- name: event
  endpoint:
    path: /events
    method: GET
- name: event
  endpoint:
    path: /event?action=addOrUpdateEvent
    method: POST
    data_selector: success
    params: {}
- name: event_list
  endpoint:
    path: /event?action=getEventList
    method: GET
    data_selector: results
    params:
      perPage: 10
      start: 0
      includeVenueDetails: true
      includeTicketDetails: true
      includeInformationDetails: true
      includeHomepageContent: true
- name: event
  endpoint:
    path: /event
    method: POST
    data_selector: id
    params:
      action: getEvent
- name: get_registration
  endpoint:
    path: /api/1.0/event?action=getRegistration
    method: POST
    data_selector: id
    params: {}
- name: registration
  endpoint:
    path: /api/1.0/event?action=getRegistrationList
    method: POST
    data_selector: results
    params:
      perPage: 100
      start: 0
      eventId: null
- name: attendee
  endpoint:
    path: /event?action=getAttendee
    method: POST
    data_selector: attendee
    params: {}
- name: attendee_list
  endpoint:
    path: /api/1.0/event?action=getAttendeeList
    method: POST
    data_selector: collection
    params: {}
- name: invited_contact
  endpoint:
    path: /event?action=getInvitedContactList
    method: POST
    data_selector: results
    params:
      eventId: integer
      start: integer
      perPage: integer
- name: invited_contact
  endpoint:
    path: /event?action=getInvitedContactList
    method: POST
    data_selector: results
    params:
      eventId: integer
      start: integer
      perPage: 200
- name: invite_contacts
  endpoint:
    path: /api/1.0/event?action=inviteContacts
    method: POST
    data_selector: results
    params: {}
- name: sponsorship_list
  endpoint:
    path: /api/1.0/event?action=getSponsorshipList
    method: POST
    data_selector: results
    params:
      event: 15593
- name: get_speaker_list
  endpoint:
    path: /api/1.0/event?action=getSpeakerList
    method: POST
    data_selector: results
    params:
      event: '15593'
- name: session
  endpoint:
    path: /event?action=getSessionList
    method: POST
    data_selector: results
    params:
      eventId: '1'
- name: session
  endpoint:
    path: /events/get-session-list
    method: GET
    data_selector: results
- name: create_login_token
  endpoint:
    path: /api/1.0/event?action=createLoginToken
    method: POST
    data_selector: ''
    params: {}
- name: venue_setup_data
  endpoint:
    path: /venues/venuedata
    method: GET
- name: booking_data
  endpoint:
    path: /venues/getoraddbookingdata
    method: GET
- name: booking_accommodation_data
  endpoint:
    path: /venues/accommodation
    method: GET
- name: venue_setup_data
  endpoint:
    path: /venues/venuedata
    method: GET
- name: get_venue
  endpoint:
    path: /venues/venuedata/get-venue
    method: GET
- name: get_venue_list
  endpoint:
    path: /venues/venuedata/get-venue-list
    method: GET
- name: get_venue_room_list
  endpoint:
    path: /venues/venuedata/get-venue-room-list
    method: GET
- name: get_venue_room_rates
  endpoint:
    path: /venues/venuedata/get-room-rates
    method: GET
- name: get_venue_rate_plan_booking_rules
  endpoint:
    path: /venues/venuedata/get-rate-plan-booking-rules
    method: GET
- name: get_venue_room_inventory
  endpoint:
    path: /venues/venuedata/get-room-inventory
    method: GET
- name: get_resource_list
  endpoint:
    path: /venues/venuedata/get-resource-list
    method: GET
- name: get_menu_list
  endpoint:
    path: /venues/venuedata/get-menu-list
    method: GET
- name: get_function_space_list
  endpoint:
    path: /venues/venuedata/get-function-space-list
    method: GET
- name: add_or_update_function_space
  endpoint:
    path: /venues/venuedata/add-or-update-function-space
    method: POST
- name: venue
  endpoint:
    path: /venues/venuedata/get-venue
    method: GET
- name: venue_list
  endpoint:
    path: /venues/venuedata/get-venue-list
    method: GET
- name: venue_room_list
  endpoint:
    path: /venues/venuedata/get-venue-room-list
    method: GET
- name: venue
  endpoint:
    path: /venue?action=getVenue
    method: POST
    data_selector: venue
    params:
      id: integer
- name: venue
  endpoint:
    path: /venues/venuedata/get-venue
    method: GET
    data_selector: venue
- name: venue_list
  endpoint:
    path: /venues/venuedata/get-venue-list
    method: GET
- name: venue
  endpoint:
    path: /venue?action=getVenueList
    method: POST
    data_selector: results
- name: venue_room
  endpoint:
    path: /venue?action=getVenueRoomList
    method: POST
    data_selector: results
    params:
      venueId: integer
- name: venue_room_rates
  endpoint:
    path: /venue?action=getRoomRates
    method: POST
    data_selector: results
    params:
      venueId: integer
      barId: integer
      startDate: date
      endDate: date
      roomIds: array
- name: rate_plan_booking_rules
  endpoint:
    path: /api/1.0/venue
    method: POST
    data_selector: results
    params:
      action: getRatePlanBookingRules
- name: venue_room_inventory
  endpoint:
    path: /venue?action=getRoomInventory
    method: POST
    data_selector: results
    params:
      venueId: integer
      startDate: date
      endDate: date
      roomIds: array
- name: venue_room_option
  endpoint:
    path: /venue?action=getVenueRoomOptionList
    method: POST
    data_selector: results
    params:
      venueId: integer
      start: integer
      perPage: 200
- name: venue_rate_plan
  endpoint:
    path: /api/1.0/venue?action=getVenueRatePlanList
    method: POST
    data_selector: results
    params:
      venueId: integer
- name: venue_rate_plan_rate_list
  endpoint:
    path: /venue?action=getRatePlanRateList
    method: POST
    data_selector: results
    params:
      venueId: integer
      barId: integer
      perPage: integer
- name: rate_plan_room_rate
  endpoint:
    path: /venue?action=getRoomRateList
    method: POST
    data_selector: results
    params: {}
- name: venue_resources
  endpoint:
    path: /venue?action=getResourceList
    method: POST
    data_selector: results
- name: resource_availability
  endpoint:
    path: /api/1.0/venue?action=getResourceAvailability
    method: POST
    data_selector: results
    params: {}
- name: resource_availability
  endpoint:
    path: /venues/venuedata/get-resource-availability
    method: GET
    data_selector: results
    params: {}
- name: menu_list
  endpoint:
    path: /venue?action=getMenuList
    method: POST
    data_selector: results
    params:
      venueId: integer
      perPage: integer
- name: menu
  endpoint:
    path: /venues/venuedata/get-menu-list
    method: GET
    data_selector: menus
    params: {}
- name: beverage_package
  endpoint:
    path: /venue?action=getBeveragePackageList
    method: POST
    data_selector: results
    params:
      venueId: integer
      perPage: integer
- name: beverage_package
  endpoint:
    path: /venues/venuedata/get-beverage-package-list
    method: GET
    data_selector: beveragePackages
    params: {}
- name: function_space
  endpoint:
    path: /venue?action=getFunctionSpaceList
    method: POST
    data_selector: results
    params:
      venueId: 1
- name: space_blockout
  endpoint:
    path: /venue?action=getSpaceBlockoutList
    method: POST
    data_selector: results
    params:
      venueId: 1
- name: function_space_category
  endpoint:
    path: /venue?action=getFunctionSpaceCategoryList
    method: POST
    data_selector: results
    params:
      venueId: '1'
      perPage: '10'
- name: function_space_availability
  endpoint:
    path: /venue?action=getFunctionSpaceAvailability
    method: POST
    data_selector: availability
    params:
      venueId: integer
      startDate: date
      endDate: date
      spaceIds: array
- name: available_function_spaces
  endpoint:
    path: /api/1.0/venue?action=getAvailableFunctionSpaces
    method: POST
    data_selector: results
    params:
      venueId: 1
      startDatetime: '2025-11-26 09:00:00'
      endDatetime: '2025-11-26 10:00:00'
      eventType: 1
      pax: 10
      layoutType: 1
      spaceIds:
      - 1
- name: space_hire_plan_rate_list
  endpoint:
    path: /venue?action=getSpaceHirePlanRateList
    method: POST
    data_selector: results
    params:
      venueId: 1
      tariffId: 8
      perPage: 100
- name: space_hire_plan_rate
  endpoint:
    path: /venue?action=getSpaceHirePlanRate
    method: POST
    data_selector: spaceRates
    params:
      venueId: 1
      tariffId: 8
      tariffRateId: 9
- name: cost_center
  endpoint:
    path: /venue?action=getCostCenterList
    method: POST
    data_selector: results
    params:
      venueId: integer
- name: session_type
  endpoint:
    path: /venue?action=getSessionTypeList
    method: POST
    data_selector: results
- name: venue_revenue_template
  endpoint:
    path: /venue?action=getRevenueTemplateList
    method: POST
    data_selector: results
    params:
      perPage: 100
      start: 0
- name: function_space
  endpoint:
    path: /venue?action=addOrUpdateFunctionSpace
    method: POST
    data_selector: success
    params: {}
- name: function_space
  endpoint:
    path: /venue?action=addOrUpdateFunctionSpace
    method: POST
    data_selector: success
- name: event_type_list
  endpoint:
    path: /venue?action=getEventTypeList
    method: POST
    data_selector: results
    params:
      perPage: 10
      start: 0
- name: function_space_category
  endpoint:
    path: /venue?action=addOrUpdateFunctionSpaceCategory
    method: POST
    data_selector: success
    params:
      venueId: integer
      name: string
- name: guest_room
  endpoint:
    path: /venue?action=addOrUpdateGuestRoom
    method: POST
    data_selector: success
    params: {}
- name: booking_custom_field
  endpoint:
    path: /venue?action=getBookingCustomFieldList
    method: POST
    data_selector: results
    params:
      perPage: 200
- name: space_hire_plan
  endpoint:
    path: /venue?action=getSpaceHirePlanList
    method: POST
    data_selector: results
    params:
      venueId: '1'
      perPage: '50'
- name: venue_package_list
  endpoint:
    path: /venues/venuedata/get-venue-package-list
    method: GET
- name: venue_package
  endpoint:
    path: /venue?action=getVenuePackageListundefined
    method: POST
    data_selector: results
    params:
      venueId: 1
      perPage: 2
- name: venue_package
  endpoint:
    path: /venues/venuedata/get-venue-package
    method: GET
- name: venue_package
  endpoint:
    path: /venue?action=getVenuePackageundefined
    method: POST
    data_selector: packageDetails
    params: {}
- name: Booking Data
  endpoint:
    path: /venues/getoraddbookingdata
    method: GET
- name: convert_lead_to_opportunity
  endpoint:
    path: /api/1.0/venue?action=convertLeadToOpportunity
    method: POST
    data_selector: success
    params: {}
- name: Add or Update Opportunity
  endpoint:
    path: /api/1.0/venue
    method: POST
    data_selector: success
    params:
      action: addOrUpdateOpportunity
- name: opportunity
  endpoint:
    path: /venues/getoraddbookingdata/add-or-update-opportunity
    method: POST
    data_selector: success
    params: {}
- name: Booking
  endpoint:
    path: /venues/getoraddbookingdata/get-booking
    method: GET
- name: Booking List
  endpoint:
    path: /venues/getoraddbookingdata/get-booking-list
    method: GET
- name: Booking Notes
  endpoint:
    path: /venues/getoraddbookingdata/get-booking-note-list
    method: GET
- name: booking
  endpoint:
    path: /venue
    method: POST
- name: packages
  endpoint:
    path: /packages
    method: GET
    data_selector: packages
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
- name: menus
  endpoint:
    path: /menus
    method: GET
    data_selector: menus
- name: beveragePackages
  endpoint:
    path: /beveragePackages
    method: GET
    data_selector: beveragePackages
- name: resources
  endpoint:
    path: /resources
    method: GET
    data_selector: resources
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
- name: additionalItems
  endpoint:
    path: /additionalItems
    method: GET
    data_selector: additionalItems
- name: serviceFees
  endpoint:
    path: /serviceFees
    method: GET
    data_selector: serviceFees
- name: booking
  endpoint:
    path: /venue?action=getBooking
    method: POST
    data_selector: details
    params:
      id: integer
- name: packages
  endpoint:
    path: /packages
    method: GET
    data_selector: packages
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
- name: menus
  endpoint:
    path: /menus
    method: GET
    data_selector: menus
- name: beveragePackages
  endpoint:
    path: /beveragePackages
    method: GET
    data_selector: beveragePackages
- name: resources
  endpoint:
    path: /resources
    method: GET
    data_selector: resources
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
- name: additionalItems
  endpoint:
    path: /additionalItems
    method: GET
    data_selector: additionalItems
- name: serviceFees
  endpoint:
    path: /serviceFees
    method: GET
    data_selector: serviceFees
- name: booking
  endpoint:
    path: /venues/getoraddbookingdata/get-booking
    method: GET
    data_selector: booking
    params: {}
- name: additional_item
  endpoint:
    path: /getBooking/additionalItem
    method: GET
    data_selector: additionalItems
    params: {}
- name: service_fee
  endpoint:
    path: /getBooking/serviceFee
    method: GET
    data_selector: serviceFees
    params: {}
- name: tax_detail
  endpoint:
    path: /getBooking/taxDetail
    method: GET
    data_selector: taxDetails
    params: {}
- name: day_tax_detail
  endpoint:
    path: /getBooking/dayTaxDetail
    method: GET
    data_selector: dayTaxDetails
    params: {}
- name: commission_by_cost_centres
  endpoint:
    path: /getBooking/commissionByCostCentres
    method: GET
    data_selector: commissionByCostCentres
    params: {}
- name: sales_person
  endpoint:
    path: /getBooking/salesPerson
    method: GET
    data_selector: salesPersons
    params: {}
- name: booked_by
  endpoint:
    path: /getBooking/bookedBy
    method: GET
    data_selector: bookedBy
    params: {}
- name: agent
  endpoint:
    path: /getBooking/agent
    method: GET
    data_selector: agents
    params: {}
- name: costcenter
  endpoint:
    path: /getBooking/costcenter
    method: GET
    data_selector: costcenters
    params: {}
- name: booking_list
  endpoint:
    path: /venue?action=getBookingList
    method: POST
    data_selector: results
    params:
      venueId: integer
      perPage: integer
- name: booking_list
  endpoint:
    path: /venue?action=getBookingList
    method: POST
    data_selector: results
    params:
      venueId: '1'
      perPage: 1
- name: Get Booking List For Account
  endpoint:
    path: /venue?action=getBookingListForAccount
    method: POST
    data_selector: results
    params:
      perPage: 200
- name: booking_notes
  endpoint:
    path: /venue?action=getBookingNoteList
    method: POST
    data_selector: results
    params:
      venueId: '1'
      bookingId: '7192'
      perPage: '50'
- name: filter_properties
  endpoint:
    path: /getting-started/interpreting-the-response/filtering
    method: GET
    data_selector: properties
    params: {}
- name: booking_session
  endpoint:
    path: /venue?action=getBookingSessionList
    method: POST
    data_selector: results
- name: booking_session
  endpoint:
    path: /venue?action=getBookingSessionList
    method: POST
    data_selector: results
    params:
      venueId: '1'
      perPage: 1
- name: booking_session_menu
  endpoint:
    path: /venue?action=getBookingSessionList
    method: POST
    data_selector: results
    params:
      start: 0
      perPage: 200
- name: booking_session_menu
  endpoint:
    path: /venue
    method: POST
    data_selector: results
    params:
      perPage: 100
- name: booking_changelog
  endpoint:
    path: /venue?action=getBookingChangelogList
    method: POST
    data_selector: results
    params:
      venueId: integer
      bookingId: integer
      perPage: integer
- name: booking_changelog
  endpoint:
    path: /venues/getoraddbookingdata/get-booking-changelog-list
    method: GET
    data_selector: bookingChangelog
- name: booking_attendee
  endpoint:
    path: /venue?action=getBookingAttendeeByHash
    method: POST
    data_selector: id
    params:
      venueId: '1'
      bookingId: '4407'
      hash: a58cac7da5865295bec0a0136c618874
- name: booking_attendee
  endpoint:
    path: /venue?action=getBookingAttendeeList
    method: POST
    data_selector: results
    params:
      venueId: 1
      bookingId: 4407
      perPage: 100
      orderBy: name
- name: booking_release_schedule
  endpoint:
    path: /venue?action=getBookingReleaseSchedule
    method: POST
    data_selector: results
    params:
      incremental: venueId
- name: Add or Update Booking
  endpoint:
    path: /api/1.0/venue?action=addOrUpdateBooking
    method: POST
    data_selector: success
    params: {}
- name: Add or Update Booking
  endpoint:
    path: /venues/getoraddbookingdata/add-or-update-booking
    method: POST
    data_selector: booking
    params: {}
- name: change_booking_status
  endpoint:
    path: /venues/getoraddbookingdata/change-booking-status
    method: POST
    data_selector: success
    params:
      id: required
      venueId: required
      currentStatus: required
      changedByUserId: optional
      cancelStageId: optional
      cancelReasonId: optional
      cancelLostToCompetition: optional
      cancelClosedDate: optional
      convertedStageId: optional
      convertedStageReasonId: optional
      marketplaceStageReasonType: optional
      convertedClosedDate: optional
- name: add_items_to_booking
  endpoint:
    path: /venue?action=addItemsToBooking
    method: POST
    data_selector: success
    params: {}
- name: add_payment_to_booking
  endpoint:
    path: /api/1.0/venue
    method: POST
    data_selector: Success
    params:
      action: addPaymentToBooking
- name: add_refund_to_booking
  endpoint:
    path: /venue?action=addRefundToBooking
    method: POST
    data_selector: refundDetails
    params: {}
- name: booking_attendee
  endpoint:
    path: /venue?action=addOrUpdateBookingAttendee
    method: POST
    data_selector: success
    params: {}
- name: add_or_update_booking_note
  endpoint:
    path: /api/1.0/venue?action=addOrUpdateBookingNote
    method: POST
    data_selector: success
- name: add_or_update_booking_session
  endpoint:
    path: /venue?action=addOrUpdateBookingSession
    method: POST
    data_selector: success
- name: booking_session
  endpoint:
    path: /venues/add-or-update-booking-session
    method: POST
    data_selector: success
    params: {}
- name: booking_session_beverage
  endpoint:
    path: /api/1.0/venue?action=addOrUpdateBookingSessionBeverage
    method: POST
    data_selector: success
- name: booking_session_beverage
  endpoint:
    path: /venues/getoraddbookingdata/add-or-update-booking-session-beverage
    method: POST
    data_selector: records
- name: booking_session_menu
  endpoint:
    path: /venue?action=addOrUpdateBookingSessionMenu
    method: POST
    data_selector: success
    params: {}
- name: add_or_update_booking_session_resource
  endpoint:
    path: /api/1.0/venue?action=addOrUpdateBookingSessionResource
    method: POST
    data_selector: success
    params: {}
- name: booking_session_resource
  endpoint:
    path: /venue?action=addOrUpdateBookingSessionResource
    method: POST
    data_selector: success
    params: {}
- name: remove_booking_session
  endpoint:
    path: /venue?action=removeBookingSession
    method: POST
    data_selector: success
    params: {}
- name: remove_booking_session_beverage
  endpoint:
    path: /venues/getoraddbookingdata/remove-booking-session-beverage
    method: POST
    data_selector: success
- name: remove_booking_session_menu
  endpoint:
    path: /venue?action=removeBookingSessionMenu
    method: POST
    data_selector: success
- name: remove_booking_session_resource
  endpoint:
    path: /venue
    method: POST
    data_selector: success
    params: {}
- name: space_blockout
  endpoint:
    path: /venue?action=addOrUpdateSpaceBlockout
    method: POST
    data_selector: success
    params: {}
- name: remove_blockout_space
  endpoint:
    path: /venue?action=removeSpaceBlockout
    method: POST
    data_selector: success
    params: {}
- name: get_booking_tax_list
  endpoint:
    path: /venue?action=getBookingTaxList
    method: POST
    data_selector: results
    params:
      venueId: integer
      bookingId: integer
      perPage: integer
- name: add_or_update_opportunity_note
  endpoint:
    path: /api/1.0/venue?action=addOrUpdateOpportunityNote
    method: POST
    data_selector: success
    params: {}
- name: add_or_update_booking_package
  endpoint:
    path: /venue?action=addOrUpdateBookingPackage
    method: POST
    data_selector: success
- name: booking_document
  endpoint:
    path: /venue?action=getBookingDocumentList
    method: POST
    data_selector: results
    params: {}
- name: booking_document
  endpoint:
    path: /venue?action=getBookingDocumentList
    method: POST
    data_selector: results
    params: {}
- name: booking_document_version
  endpoint:
    path: /venue?action=getBookingDocumentVersionList
    method: POST
    data_selector: results
    params: {}
- name: booking_beo
  endpoint:
    path: /venues/getoraddbookingdata/get-booking-beo-list
    method: GET
    data_selector: records
    params: {}
- name: booking_beo_version_list
  endpoint:
    path: /venues/getoraddbookingdata/get-booking-beo-version-list
    method: GET
    data_selector: records
    params: {}
- name: upload_booking_document
  endpoint:
    path: /api/1.0/venue?action=uploadBookingDocument
    method: POST
- name: booking_accommodation
  endpoint:
    path: /venues/accommodation/get-booking-accommodation-list
    method: GET
- name: booking_room_reservation
  endpoint:
    path: /venues/accommodation/get-booking-room-reservation-list
    method: GET
- name: Get Booking Accommodation List
  endpoint:
    path: /venues/accommodation/get-booking-accommodation-list
    method: GET
- name: booking_accommodation
  endpoint:
    path: /venue?action=getBookingAccommodationList
    method: POST
    data_selector: results
    params: {}
- name: booking_accommodation
  endpoint:
    path: /api/1.0/venue
    method: POST
    data_selector: success
    params:
      action: addOrUpdateBookingAccommodation
- name: booking_accommodation
  endpoint:
    path: /venues/accommodation/add-or-update-booking-accommodation
    method: POST
    data_selector: data
    params: {}
- name: remove_booking_accommodation
  endpoint:
    path: /api/1.0/venue?action=removeBookingAccommodation
    method: POST
    data_selector: success
    params: {}
- name: booking_room_reservation
  endpoint:
    path: /venues/accommodation/get-booking-room-reservation-list
    method: GET
- name: booking_room_reservation
  endpoint:
    path: /venue?action=getBookingRoomReservationList
    method: POST
    data_selector: results
    params:
      venueId: integer
      bookingId: integer
      start: integer
      perPage: 200
- name: booking_room_reservation
  endpoint:
    path: /api/1.0/venue?action=addOrUpdateBookingRoomReservation
    method: POST
    data_selector: success
- name: booking_room_reservation
  endpoint:
    path: /venues/accommodation/add-or-update-booking-room-reservation
    method: POST
    data_selector: reservation
    params:
      venueId: integer
      bookingId: integer
- name: update_room_reservation_guest_contact
  endpoint:
    path: /venue?action=updateBookingRoomReservationGuestContact
    method: POST
    data_selector: success
    params: {}
- name: remove_booking_room_reservation
  endpoint:
    path: /venue?action=removeBookingRoomReservation
    method: POST
    data_selector: success
    params: {}
- name: confirm_booking_room_reservation
  endpoint:
    path: /venue?action=confirmBookingRoomReservation
    method: POST
    data_selector: success
    params: {}
- name: cancel_booking_room_reservation
  endpoint:
    path: /venues/accommodation/cancel-booking-room-reservation
    method: POST
    data_selector: success
    params: {}
- name: change_status_booking_room_reservation
  endpoint:
    path: /venues/accommodation/change-status-of-booking-room-reservation
    method: POST
    data_selector: success
    params: {}
- name: add_or_update_room_counts
  endpoint:
    path: /api/1.0/venue?action=addOrUpdateRoomCountsCollection
    method: POST
    data_selector: success
    params: {}
- name: add_or_update_room_dynamic_rates
  endpoint:
    path: /venue?action=addOrUpdateRoomDynamicRatesCollection
    method: POST
    data_selector: success
- name: remove_room_dynamic_rates
  endpoint:
    path: /api/1.0/venue?action=removeRoomDynamicRates
    method: POST
    data_selector: success
    params: {}
- name: Add or Update Rate Plan Booking Rules
  endpoint:
    path: /venue?action=addOrUpdateRatePlanBookingRulesCollection
    method: POST
    data_selector: success
    params: {}
- name: Get Venue List
  endpoint:
    path: /partner/get-venue-list
    method: GET
- name: Get Venue
  endpoint:
    path: /partner/get-venue
    method: GET
- name: venue_list
  endpoint:
    path: /venues/venuedata/get-venue-list
    method: GET
- name: getVenueList
  endpoint:
    path: /partner?action=getVenueList
    method: POST
    data_selector: results
    params:
      availabilityStartDate: date
      availabilityEndDate: date
      allowsLiveBook: boolean
- name: Get Venue
  endpoint:
    path: /venues/venuedata/get-venue
    method: GET
- name: Get Venue List
  endpoint:
    path: /venues/venuedata/get-venue-list
    method: GET
- name: Get Venue Room List
  endpoint:
    path: /venues/venuedata/get-venue-room-list
    method: GET
- name: Get Venue Room Rates
  endpoint:
    path: /venues/venuedata/get-room-rates
    method: GET
- name: Get Venue Room Inventory
  endpoint:
    path: /venues/venuedata/get-room-inventory
    method: GET
- name: venue
  endpoint:
    path: /api/1.0/partner?action=getVenue
    method: POST
    data_selector: public details
    params: {}
- name: venue
  endpoint:
    path: /api/1.0/partner?action=getVenue
    method: POST
    data_selector: venue
    params: {}
- name: invoice
  endpoint:
    path: /invoice/get-invoice
    method: GET
- name: invoice_list
  endpoint:
    path: /invoice/get-invoice-list
    method: GET
- name: options
  endpoint:
    path: /invoice/get-options
    method: GET
- name: add_payment
  endpoint:
    path: /invoice/add-payment
    method: POST
- name: credit_note_list
  endpoint:
    path: /invoice/get-credit-note-list
    method: GET
- name: credit_note
  endpoint:
    path: /invoice/get-credit-note
    method: GET
- name: invoice
  endpoint:
    path: /invoice/get-invoice-list
    method: GET
    data_selector: invoices
    params: {}
- name: invoice
  endpoint:
    path: /api/1.0/invoice?action=getInvoiceList
    method: POST
    data_selector: results
    params:
      perPage: 200
      start: 0
- name: Get Invoice List
  endpoint:
    path: /invoice/get-invoice-list
    method: GET
- name: Get Invoice
  endpoint:
    path: /invoice/get-invoice
    method: GET
- name: Get Options
  endpoint:
    path: /invoice/get-options
    method: GET
- name: Add Payment
  endpoint:
    path: /invoice/add-payment
    method: POST
- name: Get Credit Note List
  endpoint:
    path: /invoice/get-credit-note-list
    method: GET
- name: Get Credit Note
  endpoint:
    path: /invoice/get-credit-note
    method: GET
- name: invoice
  endpoint:
    path: /api/1.0/invoice?action=getInvoice
    method: POST
    data_selector: results
    params:
      id: integer
- name: Get Options
  endpoint:
    path: /api/1.0/invoice?action=getOptions
    method: POST
    data_selector: ''
    params: {}
- name: add_payment
  endpoint:
    path: /api/1.0/invoice?action=addPayment
    method: POST
    data_selector: Success
    params: {}
- name: credit_note
  endpoint:
    path: /invoice?action=getCreditNoteList
    method: POST
    data_selector: results
    params:
      start: 0
      perPage: 10
- name: credit_note
  endpoint:
    path: /invoice/get-credit-note
    method: GET
- name: credit_note_list
  endpoint:
    path: /invoice/get-credit-note-list
    method: GET
- name: credit_note
  endpoint:
    path: /api/1.0/invoice?action=getCreditNote
    method: POST
    data_selector: results
    params:
      id: integer
- name: account
  endpoint:
    path: /account
    method: GET
- name: contact
  endpoint:
    path: /contact
    method: GET
- name: event
  endpoint:
    path: /events
    method: GET
- name: venue
  endpoint:
    path: /venues
    method: GET
- name: cost_center
  endpoint:
    path: /api/1.0/account?action=addOrUpdateCostCenter
    method: POST
    data_selector: Success
    params: {}
- name: cost_center
  endpoint:
    path: /account?action=getCostCenterList
    method: POST
    data_selector: results
    params: {}
- name: email_log
  endpoint:
    path: /account?action=getEmailLogList
    method: POST
    data_selector: results
    params: {}
- name: industry_list
  endpoint:
    path: /account/get-industry-list
    method: GET
- name: industry
  endpoint:
    path: /api/1.0account?action=getIndustryList
    method: POST
    data_selector: results
    params:
      perPage: 100
      start: 0
- name: add_error_report
  endpoint:
    path: /account?action=addErrorReport
    method: POST
    data_selector: success
    params: {}
- name: account_user
  endpoint:
    path: /account?action=getUserList
    method: POST
    data_selector: users
    params:
      perPage: 200
- name: Lead
  endpoint:
    path: /crm/get-lead-list
    method: GET
- name: Opportunity
  endpoint:
    path: /crm/get-opportunity-list
    method: GET
- name: Task
  endpoint:
    path: /crm/get-task-list
    method: GET
- name: Activity
  endpoint:
    path: /crm/get-activity-list
    method: GET
- name: lead
  endpoint:
    path: /crm?action=getLeadList
    method: POST
    data_selector: results
    params: {}
- name: lead_list
  endpoint:
    path: /crm
    method: POST
    data_selector: results
    params:
      action: getLeadList
- name: opportunity
  endpoint:
    path: /crm
    method: POST
    data_selector: results
    params:
      action: getOpportunityList
- name: opportunity
  endpoint:
    path: /crm?action=getOpportunityList
    method: POST
    data_selector: results
    params: {}
- name: opportunity_note
  endpoint:
    path: /crm?action=getOpportunityNoteList
    method: POST
    data_selector: results
    params: {}
- name: opportunity_note
  endpoint:
    path: /crm/get-opportunity-note-list
    method: GET
    data_selector: notes
    params:
      perPage: 50
- name: task
  endpoint:
    path: /crm?action=getTaskList
    method: POST
    data_selector: results
    params:
      venueId: integer
- name: activity
  endpoint:
    path: /crm?action=getActivityList
    method: POST
    data_selector: results
    params:
      venueId: '1'
- name: lead_stage
  endpoint:
    path: /api/1.0/crm
    method: POST
    data_selector: results
    params:
      action: getLeadStageList
- name: lead_type
  endpoint:
    path: /api/1.0/crm?action=getLeadTypeList
    method: POST
    data_selector: results
- name: lead_quality
  endpoint:
    path: /api/1.0/crm?action=getLeadQualityList
    method: POST
    data_selector: results
    params: {}
- name: lead_source
  endpoint:
    path: /api/1.0/crm?action=getLeadSourceList
    method: POST
    data_selector: results
    params:
      perPage: 100
- name: lead_channel
  endpoint:
    path: /api/1.0/crm?action=getLeadChannelList
    method: POST
    data_selector: results
    params: {}
- name: lead_note
  endpoint:
    path: /api/1.0/crm?action=getLeadNoteList
    method: POST
    data_selector: results
    params:
      leadId: integer
      perPage: integer
      start: integer
- name: add_or_update_activity_purpose
  endpoint:
    path: /crm?action=addOrUpdateActivityPurpose
    method: POST
    data_selector: success
    params: {}
- name: add_or_update_activity
  endpoint:
    path: /crm?action=addOrUpdateActivity
    method: POST
    data_selector: success
    params: {}
- name: add_or_update_task
  endpoint:
    path: /crm?action=addOrUpdateTask
    method: POST
    data_selector: success
- name: add_or_update_lead_quality
  endpoint:
    path: /api/1.0/crm?action=addOrUpdateLeadQuality
    method: POST
    data_selector: success
    params: {}
- name: add_or_update_lead_stage
  endpoint:
    path: /api/1.0/crm?action=addOrUpdateLeadStage
    method: POST
    data_selector: success
    params: {}
- name: lead_channel
  endpoint:
    path: /api/1.0/crm?action=addOrUpdateLeadChannel
    method: POST
    data_selector: success
    params: {}
- name: lead_type
  endpoint:
    path: /api/1.0/crm
    method: POST
    data_selector: success
    params:
      action: addOrUpdateLeadType
- name: lead_source
  endpoint:
    path: /api/1.0/crm?action=addOrUpdateLeadSource
    method: POST
    data_selector: success
    params: {}
- name: lead_note
  endpoint:
    path: /api/1.0/crm
    method: POST
    data_selector: success
    params:
      action: addOrUpdateLeadNote
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notifications
- name: subscribe
  endpoint:
    path: /api/1.0/account?action=subscribeToNotifications
    method: POST
- name: unsubscribe
  endpoint:
    path: /api/1.0/account?action=unsubscribeFromNotifications
    method: POST
- name: Company
  endpoint:
    path: /notifications/companies-endpoint
    method: GET
    data_selector: companyId
    params: {}
- name: Contact
  endpoint:
    path: /contact
    method: GET
- name: lead_note
  endpoint:
    path: /notifications/crm-endpoint
    method: GET
    data_selector: noteId
    params: {}
- name: Lead Note
  endpoint:
    path: /notifications/lead-note
    method: POST
    data_selector: noteId
    params: {}
- name: invoice
  endpoint:
    path: /invoice/get-invoice
    method: GET
    data_selector: data
    params: {}
- name: invoice_list
  endpoint:
    path: /invoice/get-invoice-list
    method: GET
    data_selector: data
    params: {}
- name: credit_note
  endpoint:
    path: /invoice/get-credit-note
    method: GET
    data_selector: data
    params: {}
- name: credit_note_list
  endpoint:
    path: /invoice/get-credit-note-list
    method: GET
    data_selector: data
    params: {}
- name: options
  endpoint:
    path: /invoice/get-options
    method: GET
    data_selector: data
    params: {}
- name: add_payment
  endpoint:
    path: /invoice/add-payment
    method: POST
    data_selector: data
    params: {}
- name: booking
  endpoint:
    path: /venues/getoraddbookingdata
    method: POST
    data_selector: records
- name: booking_update
  endpoint:
    path: /venues/getoraddbookingdata
    method: PUT
    data_selector: records
- name: Booking
  endpoint:
    path: /notifications/bookings
    method: POST
    data_selector: body
- name: RatePlanBookingRulesUpdated
  endpoint:
    path: /venues/accommodation/add-or-update-rateplan-bookingrules
    method: POST
    data_selector: data
- name: contact
  endpoint:
    path: /contact
    method: GET
- name: company
  endpoint:
    path: /company
    method: GET
- name: event
  endpoint:
    path: /event
    method: GET
- name: venue
  endpoint:
    path: /venue
    method: GET
- name: Get Contact List
  endpoint:
    path: /contact/get-contact-list
    method: GET
- name: Get Company List
  endpoint:
    path: /contact/get-company-list
    method: GET
- name: Timezone
  endpoint:
    path: /timezone
    method: GET
    data_selector: Value
- name: Get Contact List
  endpoint:
    path: /contact/get-contact-list
    method: GET
- name: Get Company List
  endpoint:
    path: /contact/get-company-list
    method: GET
- name: Get Event List
  endpoint:
    path: /events/get-event-list
    method: GET
- name: Get Booking List
  endpoint:
    path: /venues/getoraddbookingdata/get-booking-list
    method: GET
- name: getBookingRoomReservationList
  endpoint:
    path: /venues/accommodation/get-booking-room-reservation-list
    method: GET
    data_selector: guest
- name: addOrUpdateBookingRoomReservation
  endpoint:
    path: /venues/accommodation/add-or-update-booking-room-reservation
    method: POST
    data_selector: guest
- name: getContactList
  endpoint:
    path: /contact/get-contact-list
    method: GET
    data_selector: contacts
- name: getContact
  endpoint:
    path: /contact/get-contact
    method: GET
    data_selector: contact
- name: addOrUpdateContact
  endpoint:
    path: /contact/add-or-update-contact
    method: POST
    data_selector: contact
- name: contact
  endpoint:
    path: /contact/get-contact-list
    method: GET
- name: company
  endpoint:
    path: /contact/get-company-list
    method: GET
- name: contact
  endpoint:
    path: /contact/get-contact
    method: GET
    data_selector: customFields
- name: contact_list
  endpoint:
    path: /contact/get-contact-list
    method: GET
    data_selector: customFields
- name: getBookingAccommodationList
  endpoint:
    path: /venues/accommodation/get-booking-accommodation-list
    method: GET
- name: addOrUpdateBookingAccommodation
  endpoint:
    path: /venues/accommodation/add-or-update-booking-accommodation
    method: POST
- name: Get Invoice List
  endpoint:
    path: /invoice/get-invoice-list
    method: GET
- name: Get Invoice
  endpoint:
    path: /invoice/get-invoice
    method: GET
- name: Get Options
  endpoint:
    path: /invoice/get-options
    method: GET
- name: Add Payment
  endpoint:
    path: /invoice/add-payment
    method: POST
- name: Get Credit Note List
  endpoint:
    path: /invoice/get-credit-note-list
    method: GET
- name: Get Credit Note
  endpoint:
    path: /invoice/get-credit-note
    method: GET
- name: invoice
  endpoint:
    path: /invoice/get-invoice
    method: GET
- name: credit_note
  endpoint:
    path: /invoice/get-credit-note
    method: GET
notes:
- All requests must be signed using the key/secret pair to prove the request was made
  by a valid key
- All requests have a time limit to avoid future replay attacks
- 'Currently supported versions are: 1.0'
- Request headers are defined by the header name, followed by a colon (:) followed
  by a space, followed by the value of the header.
- Every request must be signed with the accounts or users API key.
- Signing is achieved using the HMAC algorithm, using SHA1 encryption.
- The api exposes a RPC interface.
- The ‘action’ parameter is required.
- Some results return collections of objects.
- Responses from the iVvy API may contain dates in Universal Coordinated Time (UTC).
- Provides asynchronous access to iVvy’s API
- Allows running multiple API calls in a batch
- Note a success of true does not mean the callback will be hit immediately.
- Invoices may not always have a company ID or contact ID.
- This endpoint accepts pagination and filter properties.
- The API supports pagination and filtering properties.
- This call will return an array of custom fields available on the account.
- Removes a number of contacts from a subscription group.
- The starting result for pagination is zero-based.
- This call also accepts pagination and filter properties.
- 'Mandatory field: businessName when adding a new company.'
- This call takes values for a company, and either updates the values for that company
  or adds the company to the system if the id parameter is missing.
- The id parameter can be left empty to add a lead.
- Certain parameters are required based on the context of the lead.
- Leave id empty to add a new company note
- Some objects may return nulls in deeply nested fields
- This action call only supports 'Record Event Details' type events (i.e. eventType
  value of 12).
- The result from this call will be a collection of all the events the user has access
  to.
- The starting result of the page is zero based.
- The event identifier is required in the request body.
- The venueId is required.
- The maximum date range is 31 days. Past dates are not allowed.
- 'startDate and endDate: The maximum date range is 31 days. Past dates are not allowed.'
- The result from this call will be a collection of all the room rates the user has
  access to.
- It does not accept pagination or filter properties.
- The request body requires venueId, startDate, endDate, resourceIds, and quantity.
- The result from this call will be a collection of all the beverages the user has
  access to.
- Returns the venue function spaces list for the venue.
- The name, minPax, maxPax, maxNumBookings, isViewable, and hasSmallerSpaces fields
  are required when the ID parameter is missing.
- This call also accepts pagination and filtering properties.
- The result will be a collection of all the events the user has access to.
- The api will only return maximum of 100 items for each type session, menu, beverage
  product, etc.
- The call accepts pagination and filter properties
- The per page value is required.
- This call accepts pagination and filter properties.
- The call accepts pagination and filtering properties.
- Get the list of a booking changelogs to which the user has access.
- Get the details of a specific booking attendee to which the user has access.
- The result will be the list of booking attendees to which the user has access.
- Some parameters have no effect when updating a booking.
- The venue must have access to add or update booking attendee in order to call this
  api action.
- The venue must have access to add or update booking session in order to call this
  api action.
- While adding you can skip the items parameter, this will add all the non-optional
  menu items to the menu automatically. Passing items will only add those items to
  the menu including any required non-removable items.
- While updating you can skip the items parameter, this will not change any of the
  items. Passing items will replace the items with the given items. Required non-removable
  items can not be removed from the menu.
- 'Required fields include: quantity, startTime, endTime, includeInPackage, and others
  depending on the context.'
- The unique id of the booking session menu, venue, booking, and session must be provided
  in the request body.
- Remove a booking session resource from the booking session
- A new booking package will be created if 'id' is not present.
- The starting index for pagination (zero-based).
- The number of documents to retrieve per page.
- The API call retrieves documents associated with a specific booking.
- The request body requires venueId, bookingId, onlyGenerated, and documentNumber.
- This call returns all accommodation records for a specific venue booking - it does
  not accept pagination or filter properties.
- Currently this only supports changing the status to 'checked in' or 'checked out'.
- The dynamic data is only available to venues that integrate with a distribution
  channel.
- The unique id of the venue is required
- The invoice identifier must be provided as part of this call to fetch the specific
  invoice.
- Payments will only be accepted if that amount is outstanding on the invoice. Over
  pays will not be accepted.
- Some API endpoints may have rate limits.
- The result from this call will be a collection of all the leads the user has access
  to.
- The result from this call will be a collection of all the opportunities the user
  has access to.
- This call also accepts the pagination and filter properties.
- The result from this call will be a collection of all the tasks the user has access
  to.
- The result from this call will be a collection of all the activities the user has
  access to.
- The result from this call will be a collection of all the lead stages the user has
  access to.
- The result from this call will be a collection of all the lead types the user has
  access to.
- The result from this call will be a collection of lead note to which the user has
  access.
- This endpoint will trigger when booking, accommodation or reservations have been
  created / modified.
- Every date used in the API is in UTC.
- iVvy will remove guest details from the CRM database and replace them with a new
  database.
- Anonymised guests cannot be added to a reservation.
- Stop using the contact APIs for guests. Instead, use the above room reservation
  APIs to manage guest details.
- Stop subscribing to contact messages for guest details. Instead, subscribe to messages
  about room reservations for guest details.
- Stop using the contact property of the Guest object. Instead, use the guestContact
  property.
- Decide how an anonymised guest impacts your system(s). isAnonymised is a readonly
  property. Once the guest is anonymised in iVvy, the original personal identifiable
  information cannot be retrieved.
- Stop using guest ids to add guests to a reservation (including when adding a new
  reservation). Instead, always pass the contact details.
- Check the permissions assigned to your api key in case you intend to use the new
  updateBookingRoomReservationGuestContact api.
- Stop using contactId property from addOrUpdateBookingRoomReservation api response,
  instead use guestContactId.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- The key 'numOptionsPerRoom' will be replaced with 'numOptions'.
- The field items[n].quantity is always returned as 1, regardless of the actual quantity.
- The field items[n].unitCost is returned with the same value as items[n].totalCost.
errors:
- '401 Unauthorized: Ensure the API key is correct.'
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '405: Method Not Allowed'
- '406: Not Acceptable'
- '429: Too Many Requests'
- '460: Unknown'
- '461: Failed Request'
- '462: Session Expired'
- '463: Key Revoked'
- '500: Internal Server Error'
- '501: Not Implemented'
- '24092: Incorrect Job Format'
- '24093: Empty job parameter found'
- '24091: The information was not saved'
- '24448: The maximum number of jobs can be put on a single request is 200'
- '24105: Could not find batch'
- '24114: Batch job not completed'
- '24115: Could not find batch'
- '400 Bad Request: Check your parameters or request format.'
- '24096: Unable to find contact'
- 'INVALID_PARAMETER: Check the parameters sent in the request'
- 'NOT_FOUND: The requested resource was not found'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '24153: Unable to find company'
- '200: Success response for adding or updating a company.'
- '400 Bad Request: Check required parameters for the lead.'
- '200: Success response'
- '400 Bad Request: Check the request body for required fields.'
- '24097: Unable to find event'
- '24207: Unable to find event'
- '24208: Invalid Registration Id'
- '24209: Registration not found'
- '24206: Unable to find event'
- '24211: Unable to find event'
- '24212: Invalid Attendee Id'
- '24213: Attendee not found'
- '24210: Unable to find event'
- '24094: Event does not have sponsors'
- '24100: Unable to find event'
- '24124: Event does not have speakers'
- '24101: Unable to find event'
- '24456: Event does not exist'
- '24099: Unable to generate token'
- '24098: Unable to find event'
- '24150: Account does not exist'
- '24102: Venue does not exist'
- '24408: Feature not allowed'
- '24270: Account does not exist'
- '24271: Venue does not exist'
- '400 Bad Request: Required parameters are missing or invalid.'
- '24385: The function space does not exist'
- '24386: An unknown error has occurred'
- '24387: The request contains invalid data'
- '24388: The request contains invalid data'
- '24308: The venue space category does not exist'
- '24309: An error has occurred'
- '24310: The request contains invalid data'
- '24311: The request contains invalid data'
- '24312: The room does not exist'
- '24313: An error has occurred'
- '24314: The request contains invalid data'
- '24315: An unknown error has occurred'
- '24227: The request is empty'
- '24228: The lead does not exist'
- 'Specific Code: 24221: The request is empty'
- 'Specific Code: 24222: The opportunity does not exist'
- 'Specific Code: 24224: The opportunity details are invalid'
- '400: The request contains invalid data'
- '429: Race condition error'
- '500: An error has occurred'
- '24140: There must be at least one additional item'
- '24141: An additional item has invalid data'
- '24136: The payment details are invalid'
- '24149: The refund details are invalid'
- '24145: The booking does not have an amount that can be refunded'
- '24146: Cannot refund more than the total amount payable on a booking'
- '24147: The refund amount must be greater than zero'
- '24148: The full refund amount could not be applied to the booking'
- '24442: The booking note does not exist'
- '24443: An error has occurred'
- '24444: The request contains invalid data'
- '24445: The request contains invalid data'
- '24360: The booking does not exist'
- '24361: The session does not exist'
- '24362: An error has occurred'
- '24363: The request contains invalid data'
- '24364: The request contains invalid data'
- '200: Success response with the id of the created or updated booking session resource.'
- '24338: The booking session does not exist'
- '24339: The booking session resource does not exist'
- '24340: An unknown error has occurred'
- '24341: The request contains invalid data'
- '24342: The request contains invalid data'
- '24365: The booking does not exist'
- '24366: The session does not exist'
- '24270: The request is empty'
- '24271: The Space Blockout does not exist'
- '24272: The Space Blockout details are invalid'
- '24273: An unknown error has occurred'
- '24274: The blockout space could not be found'
- '24438: The venue does not exist'
- '24441: The lead/opportunity does not exist'
- '24434: The note does not exist'
- '24435: An error has occurred'
- '24436: The request contains invalid data'
- '24437: Invalid Data'
- '23026: The booking does not exist'
- '24458: The package does not exist'
- '24459: The booking package does not exist'
- '24460: An error has occurred'
- '24461: The request contains invalid data'
- '24462: The request contains invalid data'
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: The specified booking or venue does not exist.'
- '24464: The request contains bad data'
- '24465: The request contains invalid data'
- 'specificCode: 24248'
- '1: Unknown error'
- '2: The accommodation group has room reservations, and cannot be removed'
- '2: Only "not confirmed" room reservations can be deleted'
- '0: Unknown error'
- '1: The reservation is already confirmed (and cannot be confirmed again)'
- '2: The reservation is cancelled (and cannot be confirmed)'
- '3: The reservation has no rooms to confirm'
- '4: The accommodation group to which the room reservation applies cannot confirm
  availability of the room'
- '5: There are not enough rooms available in the accommodation group to which the
  room reservation applies'
- '6: Unknown channel error'
- '7: One or more individual rooms on the reservation cannot be confirmed'
- '8: Unknown channel error'
- '9: The canBeEdited flag of the room reservation is false, which prevents any changes'
- '10: Confirming one or more room failed when roomIds parameter were set.'
- '1: The reservation is already cancelled (and cannot be cancelled again)'
- '5: One or more individual rooms on the reservation cannot be cancelled'
- '6: The status of the reservation prevents it from being cancelled. Only ''not confirmed'',
  ''confirmed'', ''checked in'', and ''checked out'' reservations can be cancelled'
- '7: The canBeEdited flag of the room reservation is false, which prevents any changes'
- '1: The new status is the same as the current status'
- '2: The current status cannot transition to the new status'
- '3: The new status is not supported. Only ''checked in'' and ''checked out'' are
  supported'
- '4: The canBeEdited flag of the room reservation is false, which prevents any changes'
- '5: Changing status of one or more room failed when roomIds parameter were set.'
- '24137: Unable to find invoice'
- '200: Success'
- '24406: The credit note does not exist'
- '24150: The cost centers details are invalid'
- '24151: Account does not exist'
- 'Specific Code: 24262: The error report details are invalid.'
- '401 Unauthorized: Recheck API key or token expiration'
- '200: Successful response'
- 'Specific Code: 24300: The event activity purpose does not exist'
- 'Specific Code: 24301: An error has occurred'
- 'Specific Code: 24302: The request contains invalid data'
- 'Specific Code: 24303: The request contains invalid data'
- 'Specific Code: 24397: The lead/opportunity does not exist'
- 'Specific Code: 24398: The contact does not exist'
- 'Specific Code: 24399: The company does not exist'
- 'Specific Code: 24400: The activity does not exist'
- 'Specific Code: 24401: An error has occurred'
- 'Specific Code: 24402: The request contains invalid data. The data was validated
  but there was some other error. See additional messages'
- 'Specific Code: 24403: The request contains invalid data'
- 'Specific Code: 24404: The activity can only belong to either contact, company or
  opportunity/lead'
- 'Specific Code: 24389 - The lead/opportunity does not exist'
- 'Specific Code: 24390 - The contact does not exist'
- 'Specific Code: 24391 - The company does not exist'
- 'Specific Code: 24392 - The task does not exist'
- 'Specific Code: 24393 - An error has occurred'
- 'Specific Code: 24394 - The request contains invalid data. The data was validated
  but there was some other error. See additional messages'
- 'Specific Code: 24395 - The request contains invalid data'
- 'Specific Code: 24396 - The task can only belongs to either contact, company or
  opportunity/lead'
- 'Specific Code: 24304: The crm lead quality does not exist'
- 'Specific Code: 24305: An error has occurred'
- 'Specific Code: 24306: The request contains invalid data'
- 'Specific Code: 24307: The request contains invalid data'
- '24320: The crm lead stage does not exist'
- '24321: The crm lead stage is not editable'
- '24322: An error has occurred'
- '24323: The request contains invalid data'
- '24324: The request contains invalid data'
- '24376: The crm lead channel does not exist'
- '24377: The crm lead channel is not editable'
- '24378: An error has occurred'
- '24379: The request contains invalid data'
- '24380: The request contains invalid data'
- 'Specific Code: 24381: The crm lead type does not exist'
- 'Specific Code: 24382: An error has occurred'
- 'Specific Code: 24383: The request contains invalid data'
- 'Specific Code: 24384: The request contains invalid data'
- 'Specific Code: 24325: The crm lead source does not exist'
- 'Specific Code: 24326: The crm lead source is not editable'
- 'Specific Code: 24327: An error has occurred'
- 'Specific Code: 24328: The request contains invalid data'
- 'Specific Code: 24329: The request contains invalid data'
- '24436: The request contains invalid'
- '403 - Not Allowed: API Keys created with a user selected that is not a primary
  user'
- 'Invalid guest id: An error will occur if using an anonymised guest id.'
auth_info:
  mentioned_objects: []
client:
  base_url: '[PlatformAddress]/api/1.0'
source_metadata: null
