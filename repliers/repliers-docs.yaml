resources:
- name: listings
  endpoint:
    path: /listings
    method: POST
    data_selector: ''
    params: {}
- name: search_listings
  endpoint:
    path: /reference/getting-started-with-your-api
    method: POST
- name: get_single_listing
  endpoint:
    path: /reference/get-a-listing
    method: GET
- name: get_similar_listings
  endpoint:
    path: /reference/find-similar-listings
    method: GET
- name: get_address_history
  endpoint:
    path: /reference/lookup-address-history
    method: GET
- name: get_deleted_listings
  endpoint:
    path: /reference/get-deleted-listings
    method: GET
- name: lookup_values
  endpoint:
    path: /reference/locations
    method: GET
- name: filter_agents
  endpoint:
    path: /reference/find-agents
    method: GET
- name: filter_clients
  endpoint:
    path: /reference/search-clients
    method: GET
- name: filter_saved_searches
  endpoint:
    path: /reference/filter-searches
    method: GET
- name: get_estimates
  endpoint:
    path: /reference/get-estimates
    method: GET
- name: get_favorites
  endpoint:
    path: /reference/get-favorites
    method: GET
- name: list_subscriptions
  endpoint:
    path: /reference/list-subscriptions
    method: GET
- name: listings
  endpoint:
    path: /listings
    method: GET
- name: single_listing
  endpoint:
    path: /get-a-single-listing
    method: GET
- name: similar_listings
  endpoint:
    path: /find-similar-listings
    method: GET
- name: address_history
  endpoint:
    path: /lookup-address-history
    method: GET
- name: deleted_listings
  endpoint:
    path: /get-deleted-listings
    method: GET
- name: areas
  endpoint:
    path: /locations
    method: GET
- name: brokerages
  endpoint:
    path: /brokerages
    method: GET
- name: offices
  endpoint:
    path: /offices
    method: GET
- name: members
  endpoint:
    path: /members
    method: GET
- name: buildings
  endpoint:
    path: /buildings
    method: GET
- name: agents
  endpoint:
    path: /agents
    method: GET
- name: clients
  endpoint:
    path: /clients
    method: GET
- name: saved_searches
  endpoint:
    path: /saved-searches
    method: GET
- name: estimates
  endpoint:
    path: /get-estimates
    method: GET
- name: messages
  endpoint:
    path: /messages
    method: GET
- name: favorites
  endpoint:
    path: /favorites
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: listing
  endpoint:
    path: /listings/{mlsNumber}
    method: GET
    data_selector: response
- name: similar_listings
  endpoint:
    path: /listings/{mlsNumber}/similar
    method: GET
    params: {}
- name: address_history
  endpoint:
    path: /listings/history
    method: GET
    data_selector: object
    params:
      city: required
      streetName: required
      streetNumber: required
      unitNumber: ''
      streetSuffix: ''
      streetDirection: ''
      zip: required
- name: deleted_listings
  endpoint:
    path: /listings/deleted
    method: GET
    data_selector: object
    params: {}
- name: locations
  endpoint:
    path: /listings/locations
    method: GET
    data_selector: object
    params: {}
- name: brokerages
  endpoint:
    path: /brokerages
    method: GET
- name: members
  endpoint:
    path: /members
    method: GET
- name: buildings
  endpoint:
    path: /listings/buildings
    method: GET
    params:
      pageNum: 1
      resultsPerPage: 100
- name: places
  endpoint:
    path: /places
    method: GET
    params:
      lat: string
      long: string
- name: create_agent
  endpoint:
    path: /agents
    method: POST
    data_selector: object
    params: {}
- name: update_agent
  endpoint:
    path: /agents/{agentId}
    method: PATCH
- name: delete_agent
  endpoint:
    path: /agents/{agentId}
    method: DELETE
- name: agent
  endpoint:
    path: /agents/{agentId}
    method: GET
- name: agents
  endpoint:
    path: /agents
    method: GET
    data_selector: object
    params: {}
- name: transfer_agents
  endpoint:
    path: /agents/{agentId}/transfer
    method: POST
- name: client
  endpoint:
    path: /clients/{clientId}
    method: PATCH
- name: client
  endpoint:
    path: /clients/{clientId}
    method: GET
- name: clients
  endpoint:
    path: /clients
    method: GET
    params:
      condition: EXACT
      operator: OR
      pageNum: 1
      resultsPerPage: 100
      showSavedSearches: true
- name: tags
  endpoint:
    path: /clients/tags
    method: GET
    data_selector: object
- name: rename_tag
  endpoint:
    path: /clients/tags/{tag}
    method: PATCH
- name: saved_search
  endpoint:
    path: /searches
    method: POST
- name: update_saved_search
  endpoint:
    path: /searches/{searchId}
    method: PATCH
    data_selector: object
    params: {}
- name: saved_searches
  endpoint:
    path: /searches
    method: GET
    data_selector: object
    params: {}
- name: filter_matches
  endpoint:
    path: /searches/{searchId}/matches
    method: GET
    params:
      pageNum: 1
      resultsPerPage: 100
      sortBy: updatedOnDesc
- name: get_a_match
  endpoint:
    path: /searches/{searchId}/matches/{matchId}
    method: GET
- name: update_match
  endpoint:
    path: /searches/{searchId}/matches/{matchId}
    method: PATCH
- name: estimate
  endpoint:
    path: /estimates
    method: POST
    data_selector: object
    params: {}
- name: estimates
  endpoint:
    path: /estimates/{estimateId}
    method: PATCH
- name: estimates
  endpoint:
    path: /estimates
    method: GET
    data_selector: object
    params: {}
- name: delete_estimate
  endpoint:
    path: /estimates/{estimateId}
    method: DELETE
- name: get_estimates
  endpoint:
    path: /get-estimates
    method: GET
- name: messages
  endpoint:
    path: /messages
    method: POST
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: object
    params:
      pageNum: 1
      resultsPerPage: 100
- name: favorites
  endpoint:
    path: /favorites
    method: POST
- name: favorites
  endpoint:
    path: /favorites
    method: GET
    data_selector: object
    params: {}
- name: favorites
  endpoint:
    path: /favorites/{favoriteId}
    method: DELETE
- name: create_subscription
  endpoint:
    path: /webhooks
    method: POST
    data_selector: object
    params: {}
- name: list_subscriptions
  endpoint:
    path: /webhooks
    method: GET
- name: update_subscription
  endpoint:
    path: /webhooks/{webhookId}
    method: PATCH
- name: get_subscription
  endpoint:
    path: /webhooks/{webhookId}
    method: GET
- name: webhook_events
  endpoint:
    path: /webhooks/events
    method: GET
    data_selector: object
notes:
- Test Account limitations include results per page limited to 15, same 5 images used
  for each listing, listing information is scrambled, and certain API endpoints may
  be restricted.
errors:
- '401 Unauthorized: A 401 http response results when authentication fails. This is
  likely due to using an invalid api-key or account suspension.'
- '403 Forbidden: A 403 http response results when an authenticated user does not
  have adequate permissions to perform the requested operation or access the specified
  resource.'
- '400 Bad Request: A 400 http response results when a request is poorly formatted
  or does not meet validation for the specified operation.'
- '406 Not Accepted: A 406 http response results when a request is not satisfied due
  to rule or policy being broken.'
- '429 Too Many Requests: A 429 http response results when the rate limit for your
  account is exceeded.'
- '500 Internal Server Error: A 500 http response results when an unexpected problem
  occurs with a request. If after several retries the 500 error still persists, it
  should be escalated to the Repliers Support Team for troubleshooting.'
- '400'
- '400: Bad Request'
- '406 Not Acceptable: Ensure filters do not exceed 100 listings'
- '406 Not Acceptable: Ensure filters are specific enough to not exceed 100 listings'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.repliers.io
  headers: {}
  paginator: {}
source_metadata: null
