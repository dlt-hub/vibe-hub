resources:
- name: collections
  endpoint:
    path: /arvados/v1/collections
    method: GET
- name: api
  endpoint:
    path: /services/api
    method: GET
    data_selector: data
    params: {}
- name: collections
  endpoint:
    path: /arvados/v1/collections
    method: GET
- name: collections
  endpoint:
    path: /arvados/v1/collections
    method: GET
- name: config
  endpoint:
    path: /arvados/v1/config
    method: GET
- name: vocabulary
  endpoint:
    path: /arvados/v1/vocabulary
    method: GET
- name: collections
  endpoint:
    path: /arvados/v1/collections
    method: GET
- name: collections
  endpoint:
    path: /collections
    method: GET
- name: collections
  endpoint:
    path: /collections
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
- name: vocabulary
  endpoint:
    path: /vocabulary
    method: GET
- name: collections
  endpoint:
    path: /collections
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
- name: vocabulary
  endpoint:
    path: /vocabulary
    method: GET
- name: collections
  endpoint:
    path: /arvados/v1/collections
    method: GET
- name: collections
  endpoint:
    path: /arvados/v1/collections
    method: GET
- name: collections
  endpoint:
    path: /collections
    method: GET
- name: collections
  endpoint:
    path: /arvados/v1/collections
    method: GET
- name: collections
  endpoint:
    path: /collections
    method: GET
- name: collections
  endpoint:
    path: /arvados/v1/collections
    method: GET
- name: collections
  endpoint:
    path: /arvados/v1/collections
    method: GET
- name: config
  endpoint:
    path: /arvados/v1/config
    method: GET
- name: vocabulary
  endpoint:
    path: /arvados/v1/vocabulary
    method: GET
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: records
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: items
    params:
      filters: '[["created_at", ">", "2016-11-08T21:38:24.124834000Z"]]'
- name: resource_type
  endpoint:
    path: /arvados/v1/resource_type
    method: GET
- name: keep-web
  endpoint:
    path: /
    method: GET
    data_selector: directory_listing
- name: ListObjects
  endpoint:
    path: /ListObjects
    method: GET
    data_selector: objects
    params: {}
- name: GetObject
  endpoint:
    path: /GetObject
    method: GET
    data_selector: object
    params: {}
- name: PutObject
  endpoint:
    path: /PutObject
    method: PUT
    data_selector: result
    params: {}
- name: DeleteObject
  endpoint:
    path: /DeleteObject
    method: DELETE
    data_selector: result
    params: {}
- name: HeadBucket
  endpoint:
    path: /HeadBucket
    method: HEAD
    data_selector: bucket
    params: {}
- name: HeadObject
  endpoint:
    path: /HeadObject
    method: HEAD
    data_selector: object
    params: {}
- name: GetBucketVersioning
  endpoint:
    path: /GetBucketVersioning
    method: GET
    data_selector: versioning
    params: {}
- name: keep_web_url_patterns
  endpoint:
    path: /api/keep-web-urls
    method: GET
    data_selector: urls
    params: {}
- name: projects
  endpoint:
    path: /v2.7/api/projects.html
    method: GET
    data_selector: records
- name: filter_groups
  endpoint:
    path: /v2.7/api/groups.html
    method: GET
    data_selector: records
- name: collection
  endpoint:
    path: /methods/collections
    method: GET
    data_selector: records
- name: container_request
  endpoint:
    path: /methods/container_requests
    method: GET
    data_selector: records
- name: link
  endpoint:
    path: /methods/links
    method: GET
    data_selector: records
- name: group
  endpoint:
    path: /methods/groups
    method: GET
    data_selector: records
- name: containers
  endpoint:
    path: /dispatch/containers
    method: GET
    data_selector: items
- name: instances
  endpoint:
    path: /dispatch/instances
    method: GET
    data_selector: items
- name: vocabulary
  endpoint:
    path: /arvados/v1/vocabulary
    method: GET
    data_selector: vocabulary
- name: health
  endpoint:
    path: /_health/vocabulary
    method: GET
    data_selector: health
- name: api_client_authorizations
  endpoint:
    path: /arvados/v1/api_client_authorizations
    method: POST
- name: api_clients
  endpoint:
    path: /arvados/v1/api_clients
    method: GET
- name: users
  endpoint:
    path: /arvados/v1/users
    method: POST
- name: users
  endpoint:
    path: /arvados/v1/users/authenticate
    method: POST
    data_selector: api_client_authorization
- name: api_client_authorizations
  endpoint:
    path: /arvados/v1/api_client_authorizations
    method: POST
- name: api_clients
  endpoint:
    path: /arvados/v1/api_clients
    method: GET
- name: authorized_keys
  endpoint:
    path: /arvados/v1/authorized_keys
    method: GET
- name: groups
  endpoint:
    path: /arvados/v1/groups
    method: GET
- name: users
  endpoint:
    path: /arvados/v1/users
    method: GET
- name: user_agreements
  endpoint:
    path: /arvados/v1/user_agreements
    method: GET
- name: api_client_authorizations
  endpoint:
    path: /arvados/v1/api_client_authorizations
    method: POST
- name: api_clients
  endpoint:
    path: /arvados/v1/api_clients
    method: GET
- name: users
  endpoint:
    path: /arvados/v1/users
    method: POST
- name: collections
  endpoint:
    path: /arvados/v1/collections
    method: GET
    data_selector: records
- name: collections
  endpoint:
    path: /arvados/v1/collections
    method: GET
    data_selector: items
    params:
      filters: '[["created_at",">","2016-11-08T21:38:24.124834000Z"]]'
- name: specific_collection
  endpoint:
    path: /arvados/v1/collections/962eh-4zz18-xi32mpz2621o8km
    method: GET
    data_selector: records
    params: {}
- name: resource_type
  endpoint:
    path: /arvados/v1/resource_type
    method: GET
- name: resource
  endpoint:
    path: /api/resource
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /v3.0/api/projects
    method: GET
    data_selector: records
- name: filter_groups
  endpoint:
    path: /v3.0/api/groups
    method: GET
    data_selector: records
- name: collection
  endpoint:
    path: /methods/collections
    method: GET
    data_selector: records
    params: {}
- name: container_request
  endpoint:
    path: /methods/container_requests
    method: GET
    data_selector: records
    params: {}
- name: link
  endpoint:
    path: /methods/links
    method: GET
    data_selector: records
    params: {}
- name: group
  endpoint:
    path: /methods/groups
    method: GET
    data_selector: records
    params: {}
- name: list_containers
  endpoint:
    path: /dispatch/containers
    method: GET
    data_selector: items
- name: get_specified_container
  endpoint:
    path: /dispatch/container
    method: GET
    data_selector: container
- name: terminate_container
  endpoint:
    path: /dispatch/containers/kill
    method: POST
- name: list_instances
  endpoint:
    path: /dispatch/instances
    method: GET
    data_selector: items
- name: hold_instance
  endpoint:
    path: /dispatch/instances/hold
    method: POST
- name: drain_instance
  endpoint:
    path: /dispatch/instances/drain
    method: POST
- name: resume_instance
  endpoint:
    path: /dispatch/instances/run
    method: POST
- name: shut_down_instance
  endpoint:
    path: /dispatch/instances/kill
    method: POST
- name: RailsAPI
  endpoint:
    path: /api/rails
    method: GET
    data_selector: records
    params: {}
- name: Controller
  endpoint:
    path: /api/controller
    method: GET
    data_selector: records
    params: {}
- name: User
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: sample_resource
  endpoint:
    path: /services/data/vXX.X/sobjects/Sample
    method: GET
    data_selector: records
    params: {}
- name: user_agreements
  endpoint:
    path: /api/user_agreements
    method: GET
    data_selector: records
- name: api_client_authorization
  endpoint:
    path: /arvados/v1/api_client_authorizations
    method: POST
    data_selector: kind
    params: {}
- name: vocabulary
  endpoint:
    path: /arvados/v1/vocabulary
    method: GET
    data_selector: vocabulary
- name: vocabulary
  endpoint:
    path: /arvados/v1/vocabulary
    method: GET
    data_selector: kind
- name: health
  endpoint:
    path: /_health/vocabulary
    method: GET
    data_selector: health
- name: vocabulary
  endpoint:
    path: /arvados/v1/vocabulary
    method: GET
    data_selector: vocabulary
- name: health
  endpoint:
    path: /_health/vocabulary
    method: GET
    data_selector: health
- name: vocabulary
  endpoint:
    path: /arvados/v1/vocabulary
    method: GET
    data_selector: vocabulary
    params: {}
- name: health
  endpoint:
    path: /_health/vocabulary
    method: GET
    data_selector: health
    params: {}
- name: vocabulary
  endpoint:
    path: /arvados/v1/vocabulary
    method: GET
    data_selector: kind
    params: {}
- name: health_vocabulary
  endpoint:
    path: /_health/vocabulary
    method: GET
    data_selector: error
    params: {}
- name: vocabulary
  endpoint:
    path: /arvados/v1/vocabulary
    method: GET
    data_selector: vocabulary
    params: {}
- name: vocabulary
  endpoint:
    path: /arvados/v1/vocabulary
    method: GET
    data_selector: kind
- name: health
  endpoint:
    path: /_health/vocabulary
    method: GET
    data_selector: health
- name: user_management
  endpoint:
    path: /api/v1/users
    method: POST
    data_selector: user
    params:
      incremental: uuid
- name: api_client_authorization
  endpoint:
    path: /api/v1/api_client_authorization
    method: POST
    data_selector: apiClientAuthorization
    params: {}
- name: group
  endpoint:
    path: /group
    method: POST
    data_selector: group
    params: {}
- name: link
  endpoint:
    path: /link
    method: POST
    data_selector: link
    params: {}
- name: user
  endpoint:
    path: /user
    method: POST
    data_selector: data
    params:
      incremental: uuid
- name: group
  endpoint:
    path: /group
    method: POST
    data_selector: data
    params: {}
- name: user_merge
  endpoint:
    path: /user/merge
    method: POST
    data_selector: response
    params: {}
- name: group_create
  endpoint:
    path: /group/create
    method: POST
    data_selector: response
    params: {}
- name: collection
  endpoint:
    path: /arv/collection
    method: GET
    data_selector: records
    params: {}
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: health_check_ping
  endpoint:
    path: /_health/ping
    method: GET
    data_selector: health
    params: {}
- name: health_check_all
  endpoint:
    path: /_health/all
    method: GET
    data_selector: health
    params: {}
- name: active_requests
  endpoint:
    path: /_inspect/requests
    method: GET
- name: user_activity_report
  endpoint:
    path: /arvados/user_activity
    method: GET
    data_selector: logs
- name: CollectionVersioning
  endpoint:
    path: /configurations/collections
    method: GET
    data_selector: collections
    params: {}
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
    params: {}
- name: KeepproxyPermissions
  endpoint:
    path: /collections/keepproxy/permissions
    method: GET
    data_selector: KeepproxyPermission
- name: WebDAVPermissions
  endpoint:
    path: /collections/webdav/permissions
    method: GET
    data_selector: WebDAVPermission
- name: WebDAVLogEvents
  endpoint:
    path: /collections/webdav/logs
    method: GET
    data_selector: WebDAVLogEvents
- name: logs
  endpoint:
    path: /logs
    method: GET
    data_selector: logs
    params: {}
- name: logs
  endpoint:
    path: /logs
    method: GET
    data_selector: records
    params: {}
- name: StorageClasses
  endpoint:
    path: /admin/storage-classes
    method: GET
    data_selector: StorageClasses
    params: {}
- name: Volumes
  endpoint:
    path: /admin/volumes
    method: GET
    data_selector: Volumes
    params: {}
- name: S3_garbage_collection
  endpoint:
    path: /admin/keep-faster-gc-s3
    method: GET
    data_selector: steps
    params: {}
- name: preemptible_instances_aws
  endpoint:
    path: /admin/spot-instances/aws
    method: GET
- name: preemptible_instances_azure
  endpoint:
    path: /admin/spot-instances/azure
    method: GET
- name: collections
  endpoint:
    path: /collections
    method: GET
- name: collections
  endpoint:
    path: /arvados/v1/collections
    method: GET
    data_selector: items
    params:
      filters: '[["created_at",">","2016-11-08T21:38:24.124834000Z"]]'
- name: specific_collection
  endpoint:
    path: /arvados/v1/collections/962eh-4zz18-xi32mpz2621o8km
    method: GET
    data_selector: kind
- name: update_collection
  endpoint:
    path: /arvados/v1/collections/962eh-4zz18-xi32mpz2621o8km
    method: PUT
    data_selector: kind
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: records
- name: collections
  endpoint:
    path: /arvados/v1/collections
    method: GET
    data_selector: items
    params:
      filters: '[["created_at", ">", "2016-11-08T21:38:24.124834000Z"]]'
- name: specific_collection
  endpoint:
    path: /arvados/v1/collections/{uuid}
    method: GET
    data_selector: records
    params: {}
- name: delete_collection
  endpoint:
    path: /arvados/v1/collections/{uuid}
    method: DELETE
    data_selector: records
    params: {}
- name: update_collection
  endpoint:
    path: /arvados/v1/collections/{uuid}
    method: PUT
    data_selector: records
    params: {}
- name: collections
  endpoint:
    path: /collections
    method: GET
- name: collections
  endpoint:
    path: /arvados/v1/collections
    method: GET
    data_selector: items
    params:
      filters: '[["created_at",">","2016-11-08T21:38:24.124834000Z"]]'
- name: collection
  endpoint:
    path: /arvados/v1/collections/{uuid}
    method: PUT
    data_selector: href
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: href
- name: collections
  endpoint:
    path: /arvados/v1/collections
    method: GET
    data_selector: items
- name: collection
  endpoint:
    path: /arvados/v1/collections/{uuid}
    method: GET
    data_selector: href
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: records
- name: collections
  endpoint:
    path: /arvados/v1/collections
    method: GET
    data_selector: items
    params:
      filters: '[["created_at",">","2016-11-08T21:38:24.124834000Z"]]'
- name: specific_collection
  endpoint:
    path: /arvados/v1/collections/{uuid}
    method: GET
    data_selector: href
    params: {}
- name: update_collection
  endpoint:
    path: /arvados/v1/collections/{uuid}
    method: PUT
    data_selector: href
    params:
      collection: '{"name":"rna.SRR948778.bam"}'
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: records
- name: collection
  endpoint:
    path: /arvados/v1/collections
    method: GET
    data_selector: items
    params:
      filters: '[["created_at", ">", "2016-11-08T21:38:24.124834000Z"]]'
- name: collections
  endpoint:
    path: /v1/collections
    method: GET
    data_selector: items
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: records
- name: collections
  endpoint:
    path: /arvados/v1/collections
    method: GET
    data_selector: items
    params:
      filters: '[["created_at",">","2016-11-08T21:38:24.124834000Z"]]'
- name: collection
  endpoint:
    path: /arvados/v1/collections/{uuid}
    method: PUT
    data_selector: href
    params:
      collection: '{"name":"rna.SRR948778.bam"}'
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: records
- name: collection
  endpoint:
    path: /arvados/v1/collections
    method: GET
    data_selector: items
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: records
- name: collection
  endpoint:
    path: /v1/collections
    method: GET
    data_selector: items
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: records
- name: collections
  endpoint:
    path: /arvados/v1/collections
    method: GET
    data_selector: items
    params:
      filters: '[["created_at",">","2016-11-08T21:38:24.124834000Z"]]'
- name: collection_details
  endpoint:
    path: /arvados/v1/collections/{uuid}
    method: GET
    data_selector: href
    params: {}
- name: update_collection
  endpoint:
    path: /arvados/v1/collections/{uuid}
    method: PUT
    data_selector: href
    params:
      collection: '{name}'
- name: collections
  endpoint:
    path: /arvados/v1/collections
    method: GET
    data_selector: records
- name: collection
  endpoint:
    path: /v1/collections
    method: GET
    data_selector: items
- name: resource_type
  endpoint:
    path: /arvados/v1/resource_type
    method: GET
- name: resource
  endpoint:
    path: /api/v2.6/resources
    method: GET
    data_selector: records
- name: Keep
  endpoint:
    path: /
    method: GET
    data_selector: directory listing
- name: ListObjects
  endpoint:
    path: /
    method: GET
    data_selector: objects
    params:
      delimiter: ''
      marker: ''
      max-keys: ''
      prefix: ''
- name: GetObject
  endpoint:
    path: /{bucket}/{object}
    method: GET
    data_selector: object
    params:
      Range: ''
- name: PutObject
  endpoint:
    path: /{bucket}/{object}
    method: PUT
    data_selector: result
- name: DeleteObject
  endpoint:
    path: /{bucket}/{object}
    method: DELETE
    data_selector: result
- name: HeadBucket
  endpoint:
    path: /{bucket}
    method: HEAD
    data_selector: result
- name: HeadObject
  endpoint:
    path: /{bucket}/{object}
    method: HEAD
    data_selector: result
- name: GetBucketVersioning
  endpoint:
    path: /{bucket}?versioning
    method: GET
    data_selector: result
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: filter_groups
  endpoint:
    path: /filter_groups
    method: GET
    data_selector: records
- name: collections
  endpoint:
    path: /v2.6/api/methods/collections
    method: GET
    data_selector: records
    params: {}
- name: container_requests
  endpoint:
    path: /v2.6/api/methods/container_requests
    method: GET
    data_selector: records
    params: {}
- name: links
  endpoint:
    path: /v2.6/api/methods/links
    method: GET
    data_selector: records
    params: {}
- name: groups
  endpoint:
    path: /v2.6/api/methods/groups
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /v2.6/api/methods/users
    method: GET
    data_selector: records
    params: {}
- name: containers
  endpoint:
    path: /dispatch/containers
    method: GET
    data_selector: items
- name: instances
  endpoint:
    path: /dispatch/instances
    method: GET
    data_selector: items
- name: InstanceTypes
  endpoint:
    path: /instance_types
    method: GET
    data_selector: records
- name: StorageClasses
  endpoint:
    path: /storage_classes
    method: GET
    data_selector: records
- name: Volumes
  endpoint:
    path: /volumes
    method: GET
    data_selector: records
- name: Mail
  endpoint:
    path: /mail
    method: GET
    data_selector: records
- name: RemoteClusters
  endpoint:
    path: /remote_clusters
    method: GET
    data_selector: records
- name: Workbench
  endpoint:
    path: /workbench
    method: GET
    data_selector: records
- name: resource_type
  endpoint:
    path: /arvados/v1/resource_type
    method: GET
- name: create
  endpoint:
    path: /arvados/v1/resource_type
    method: POST
- name: delete
  endpoint:
    path: /arvados/v1/resource_type/uuid
    method: DELETE
- name: get
  endpoint:
    path: /arvados/v1/resource_type/uuid
    method: GET
- name: list
  endpoint:
    path: /arvados/v1/resource_type
    method: GET
- name: update
  endpoint:
    path: /arvados/v1/resource_type/uuid
    method: PUT
- name: resource_type
  endpoint:
    path: /arvados/v1/resource_type
    method: GET
- name: resource_type
  endpoint:
    path: /arvados/v1/resource_type
    method: POST
- name: create
  endpoint:
    path: /arvados/v1/resource_type
    method: POST
- name: delete
  endpoint:
    path: /arvados/v1/resource_type/uuid
    method: DELETE
- name: get
  endpoint:
    path: /arvados/v1/resource_type/uuid
    method: GET
- name: list
  endpoint:
    path: /arvados/v1/resource_type
    method: GET
- name: update
  endpoint:
    path: /arvados/v1/resource_type/uuid
    method: PUT
- name: resource_type
  endpoint:
    path: /arvados/v1/resource_type
    method: GET
- name: resource_type
  endpoint:
    path: /arvados/v1/resource_type
    method: GET
- name: resource_type
  endpoint:
    path: /arvados/v1/resource_type
    method: GET
- name: resource_type
  endpoint:
    path: /arvados/v1/resource_type
    method: GET
    data_selector: items
- name: resource_type
  endpoint:
    path: /arvados/v1/resource_type
    method: GET
- name: resource_type
  endpoint:
    path: /arvados/v1/resource_type
    method: GET
    data_selector: items
- name: WebDAV
  endpoint:
    path: /keep-webdav
    method: GET
    data_selector: records
- name: ListObjects
  endpoint:
    path: /
    method: GET
    data_selector: objects
    params:
      delimiter: ''
      marker: ''
      max-keys: ''
      prefix: ''
- name: GetObject
  endpoint:
    path: /{bucket}/{object}
    method: GET
    data_selector: object
    params: {}
- name: PutObject
  endpoint:
    path: /{bucket}/{object}
    method: PUT
    data_selector: object
    params: {}
- name: DeleteObject
  endpoint:
    path: /{bucket}/{object}
    method: DELETE
    data_selector: object
    params: {}
- name: HeadBucket
  endpoint:
    path: /{bucket}
    method: HEAD
    data_selector: ''
    params: {}
- name: HeadObject
  endpoint:
    path: /{bucket}/{object}
    method: HEAD
    data_selector: ''
    params: {}
- name: containers
  endpoint:
    path: /arvados/v1/dispatch/containers
    method: GET
    data_selector: items
- name: container
  endpoint:
    path: /arvados/v1/dispatch/container
    method: GET
    data_selector: container
- name: instances
  endpoint:
    path: /arvados/v1/dispatch/instances
    method: GET
    data_selector: items
- name: audit_logs
  endpoint:
    path: /audit_logs
    method: GET
    data_selector: logs
- name: system_logs
  endpoint:
    path: /system_logs
    method: GET
    data_selector: logs
- name: AutoSetupNewUsers
  endpoint:
    path: /api/v1/AutoSetupNewUsers
    method: GET
    data_selector: data
    params: {}
- name: UserProfileNotificationAddress
  endpoint:
    path: /api/v1/UserProfileNotificationAddress
    method: GET
    data_selector: data
    params: {}
- name: volumes
  endpoint:
    path: /volumes
    method: GET
- name: jobs
  endpoint:
    path: /jobs
    method: GET
- name: AuditLogs
  endpoint:
    path: /audit_logs
    method: GET
    data_selector: logs
    params: {}
- name: SystemLogs
  endpoint:
    path: /system_logs
    method: GET
    data_selector: logs
    params: {}
- name: Collections
  endpoint:
    path: /collections
    method: GET
    data_selector: collections
    params: {}
- name: Volumes
  endpoint:
    path: /volumes
    method: GET
    data_selector: records
- name: RemoteClusters
  endpoint:
    path: /remote_clusters
    method: GET
    data_selector: records
- name: RailsAPI
  endpoint:
    path: /services/api/v1/rails
    method: GET
    data_selector: records
- name: Controller
  endpoint:
    path: /services/api/v1/controller
    method: GET
    data_selector: records
- name: SystemLogs
  endpoint:
    path: /system/logs
    method: GET
    data_selector: logs
- name: Collections
  endpoint:
    path: /collections
    method: GET
    data_selector: collections
- name: MaxRetryAttempts
  endpoint:
    path: /MaxRetryAttempts
    method: GET
    data_selector: MaxRetryAttempts
- name: MaxComputeVMs
  endpoint:
    path: /MaxComputeVMs
    method: GET
    data_selector: MaxComputeVMs
- name: AlwaysUsePreemptibleInstances
  endpoint:
    path: /AlwaysUsePreemptibleInstances
    method: GET
    data_selector: AlwaysUsePreemptibleInstances
- name: PreemptiblePriceFactor
  endpoint:
    path: /PreemptiblePriceFactor
    method: GET
    data_selector: PreemptiblePriceFactor
- name: DispatchPrivateKey
  endpoint:
    path: /DispatchPrivateKey
    method: GET
    data_selector: DispatchPrivateKey
- name: StaleLockTimeout
  endpoint:
    path: /StaleLockTimeout
    method: GET
    data_selector: StaleLockTimeout
- name: CrunchRunCommand
  endpoint:
    path: /CrunchRunCommand
    method: GET
    data_selector: CrunchRunCommand
- name: ReserveExtraRAM
  endpoint:
    path: /ReserveExtraRAM
    method: GET
    data_selector: ReserveExtraRAM
- name: MinRetryPeriod
  endpoint:
    path: /MinRetryPeriod
    method: GET
    data_selector: MinRetryPeriod
- name: RuntimeEngine
  endpoint:
    path: /RuntimeEngine
    method: GET
    data_selector: RuntimeEngine
- name: Admin
  endpoint:
    path: /Admin
    method: GET
    data_selector: Admin
- name: LocalKeepLogsToContainerLog
  endpoint:
    path: /LocalKeepLogsToContainerLog
    method: GET
    data_selector: LocalKeepLogsToContainerLog
- name: MaxAge
  endpoint:
    path: /MaxAge
    method: GET
    data_selector: MaxAge
- name: LogBytesPerEvent
  endpoint:
    path: /LogBytesPerEvent
    method: GET
    data_selector: LogBytesPerEvent
- name: LogSecondsBetweenEvents
  endpoint:
    path: /LogSecondsBetweenEvents
    method: GET
    data_selector: LogSecondsBetweenEvents
- name: LogThrottlePeriod
  endpoint:
    path: /LogThrottlePeriod
    method: GET
    data_selector: LogThrottlePeriod
- name: LogThrottleLines
  endpoint:
    path: /LogThrottleLines
    method: GET
    data_selector: LogThrottleLines
- name: LimitLogBytesPerJob
  endpoint:
    path: /LimitLogBytesPerJob
    method: GET
    data_selector: LimitLogBytesPerJob
- name: LogUpdatePeriod
  endpoint:
    path: /LogUpdatePeriod
    method: GET
    data_selector: LogUpdatePeriod
- name: LogUpdateSize
  endpoint:
    path: /LogUpdateSize
    method: GET
    data_selector: LogUpdateSize
- name: Admin
  endpoint:
    path: /Admin
    method: GET
    data_selector: Admin
- name: User
  endpoint:
    path: /User
    method: GET
    data_selector: User
- name: PrioritySpread
  endpoint:
    path: /PrioritySpread
    method: GET
    data_selector: PrioritySpread
- name: Enable
  endpoint:
    path: /Enable
    method: GET
    data_selector: Enable
- name: GitInternalDir
  endpoint:
    path: /GitInternalDir
    method: GET
    data_selector: GitInternalDir
- name: Enable
  endpoint:
    path: /Enable
    method: GET
    data_selector: Enable
- name: SSHPort
  endpoint:
    path: /SSHPort
    method: GET
    data_selector: SSHPort
- name: PollInterval
  endpoint:
    path: /PollInterval
    method: GET
    data_selector: PollInterval
- name: BootProbeCommand
  endpoint:
    path: /BootProbeCommand
    method: GET
    data_selector: BootProbeCommand
- name: ProbeInterval
  endpoint:
    path: /ProbeInterval
    method: GET
    data_selector: ProbeInterval
- name: MaxProbesPerSecond
  endpoint:
    path: /MaxProbesPerSecond
    method: GET
    data_selector: MaxProbesPerSecond
- name: TimeoutSignal
  endpoint:
    path: /TimeoutSignal
    method: GET
    data_selector: TimeoutSignal
- name: TimeoutStaleRunLock
  endpoint:
    path: /TimeoutStaleRunLock
    method: GET
    data_selector: TimeoutStaleRunLock
- name: TimeoutTERM
  endpoint:
    path: /TimeoutTERM
    method: GET
    data_selector: TimeoutTERM
- name: MaxConcurrentInstanceCreateOps
  endpoint:
    path: /MaxConcurrentInstanceCreateOps
    method: GET
    data_selector: MaxConcurrentInstanceCreateOps
- name: SyncInterval
  endpoint:
    path: /SyncInterval
    method: GET
    data_selector: SyncInterval
- name: TimeoutIdle
  endpoint:
    path: /TimeoutIdle
    method: GET
    data_selector: TimeoutIdle
- name: TimeoutBooting
  endpoint:
    path: /TimeoutBooting
    method: GET
    data_selector: TimeoutBooting
- name: TimeoutProbe
  endpoint:
    path: /TimeoutProbe
    method: GET
    data_selector: TimeoutProbe
- name: TimeoutShutdown
  endpoint:
    path: /TimeoutShutdown
    method: GET
    data_selector: TimeoutShutdown
- name: ImageID
  endpoint:
    path: /ImageID
    method: GET
    data_selector: ImageID
- name: DeployRunnerBinary
  endpoint:
    path: /DeployRunnerBinary
    method: GET
    data_selector: DeployRunnerBinary
- name: ResourceTags
  endpoint:
    path: /ResourceTags
    method: GET
    data_selector: ResourceTags
- name: TagKeyPrefix
  endpoint:
    path: /TagKeyPrefix
    method: GET
    data_selector: TagKeyPrefix
- name: Driver
  endpoint:
    path: /Driver
    method: GET
    data_selector: Driver
- name: EBSVolumeType
  endpoint:
    path: /EBSVolumeType
    method: GET
    data_selector: EBSVolumeType
- name: AdminUsername
  endpoint:
    path: /AdminUsername
    method: GET
    data_selector: AdminUsername
- name: Mail
  endpoint:
    path: /Mail
    method: GET
    data_selector: records
- name: RemoteClusters
  endpoint:
    path: /RemoteClusters
    method: GET
    data_selector: records
- name: Workbench
  endpoint:
    path: /Workbench
    method: GET
    data_selector: records
- name: BlobTrash
  endpoint:
    path: /BlobTrash
    method: POST
    data_selector: records
    params: {}
- name: BlobTrashLifetime
  endpoint:
    path: /BlobTrashLifetime
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: RailsAPI
  endpoint:
    path: /api/rails
    method: GET
    data_selector: records
- name: WebDAVDownload
  endpoint:
    path: /api/webdav
    method: GET
    data_selector: records
- name: RailsAPI
  endpoint:
    path: /api/v2.0/rails
    method: GET
    data_selector: records
- name: Controller
  endpoint:
    path: /api/v2.0/controller
    method: GET
    data_selector: records
- name: BlobTrashConcurrency
  endpoint:
    params:
      value: 4
- name: BlobDeleteConcurrency
  endpoint:
    params:
      value: 4
- name: BlobReplicateConcurrency
  endpoint:
    params:
      value: 4
- name: DefaultReplication
  endpoint:
    params:
      value: 2
- name: BlobSigningTTL
  endpoint:
    params:
      value: 336h
- name: BalancePeriod
  endpoint:
    params:
      value: 10m
- name: BalanceCollectionBuffers
  endpoint:
    params:
      value: 1000
- name: DefaultTrashLifetime
  endpoint:
    params:
      value: 336h
- name: TrashSweepInterval
  endpoint:
    params:
      value: 60s
- name: CollectionVersioning
  endpoint:
    params:
      value: false
- name: PreserveVersionIfIdle
  endpoint:
    params:
      value: -1s
- name: TrustAllContent
  endpoint:
    params:
      value: false
- name: WebDAVCache
  endpoint:
    params:
      TTL: 300s
      UUIDTTL: 5s
      MaxBlockEntries: 4
      MaxCollectionEntries: 1000
      MaxCollectionBytes: 100000000
      MaxPermissionEntries: 1000
      MaxUUIDEntries: 1000
- name: RemoteTokenRefresh
  endpoint:
    params:
      value: 5m
- name: MaxComputeVMs
  endpoint:
    params:
      value: 64
- name: UsePreemptibleInstances
  endpoint:
    params:
      value: false
- name: MaxDispatchAttempts
  endpoint:
    params:
      value: 5
- name: MaxRetryAttempts
  endpoint:
    params:
      value: 3
- name: LogReuseDecisions
  endpoint:
    params:
      value: false
- name: DefaultKeepCacheRAM
  endpoint:
    params:
      value: 268435456
- name: crunch_job
  endpoint:
    params:
      ReuseJobIfOutputsDiffer: false
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: items
    params: {}
- name: collections
  endpoint:
    path: /api/v1/collections
    method: GET
    data_selector: items
    params: {}
- name: AuditLogs
  endpoint:
    path: /audit_logs
    method: GET
    data_selector: logs
- name: SystemLogs
  endpoint:
    path: /system_logs
    method: GET
    data_selector: logs
- name: Collections
  endpoint:
    path: /collections
    method: GET
    data_selector: collections
- name: Login
  endpoint:
    path: /login
    method: GET
    data_selector: login
- name: Keep
  endpoint:
    path: /keep
    method: GET
- name: Controller
  endpoint:
    path: /controller
    method: GET
- name: controller
  endpoint:
    path: /controller
    method: GET
    data_selector: records
- name: keep
  endpoint:
    path: /keep
    method: GET
    data_selector: records
- name: workbench
  endpoint:
    path: /workbench
    method: GET
    data_selector: records
- name: controller
  endpoint:
    path: /services/data/v3.1/controller
    method: GET
    data_selector: records
    params: {}
- name: workbench
  endpoint:
    path: /services/data/v3.1/workbench
    method: GET
    data_selector: records
    params: {}
- name: compute_nodes
  endpoint:
    path: /api/v1/compute_nodes
    method: GET
    data_selector: records
    params: {}
- name: arvados_package_repositories
  endpoint:
    path: /v3.1/install/packages
    method: GET
- name: Keepbalance
  endpoint:
    path: /keep-balance
    method: GET
    data_selector: metrics
    params: {}
- name: Keepstore
  endpoint:
    path: /keepstore
    method: GET
    data_selector: metrics
    params: {}
- name: Keepproxy
  endpoint:
    path: /keepproxy
    method: GET
    data_selector: proxy_metrics
    params: {}
- name: Keepbalance
  endpoint:
    path: /Keepbalance
    method: GET
    data_selector: InternalURLs
    params: {}
- name: Keepstore
  endpoint:
    path: /Keepstore
    method: GET
    data_selector: InternalURLs
    params: {}
- name: Keepproxy
  endpoint:
    path: /Keepproxy
    method: GET
    data_selector: ExternalURL
    params: {}
- name: railsapi
  endpoint:
    path: /services/data/railsapi
    method: GET
    data_selector: records
    params: {}
- name: controller
  endpoint:
    path: /services/data/controller
    method: GET
    data_selector: records
    params: {}
- name: arvados-dispatch-cloud
  endpoint:
    path: /services/data/arvados-dispatch-cloud
    method: GET
    data_selector: records
    params: {}
- name: arvados-dispatch-lsf
  endpoint:
    path: /services/data/arvados-dispatch-lsf
    method: GET
    data_selector: records
    params: {}
- name: git-ssh
  endpoint:
    path: /services/data/git-ssh
    method: GET
    data_selector: records
    params: {}
- name: keepproxy
  endpoint:
    path: /services/data/keepproxy
    method: GET
    data_selector: records
    params: {}
- name: keepstore
  endpoint:
    path: /services/data/keepstore
    method: GET
    data_selector: records
    params: {}
- name: keep-balance
  endpoint:
    path: /services/data/keep-balance
    method: GET
    data_selector: records
    params: {}
- name: keep-web
  endpoint:
    path: /services/data/keep-web
    method: GET
    data_selector: records
    params: {}
- name: websocket
  endpoint:
    path: /services/data/websocket
    method: GET
    data_selector: records
    params: {}
- name: workbench2
  endpoint:
    path: /services/data/workbench2
    method: GET
    data_selector: records
    params: {}
- name: arvados_controller
  endpoint:
    path: /arvados-controller
    method: GET
- name: arvados_api
  endpoint:
    path: /arvados-api
    method: GET
- name: arvados_api
  endpoint:
    path: /api/v1
    method: GET
    data_selector: records
- name: config
  endpoint:
    path: /arvados/v1/config
    method: GET
- name: discovery
  endpoint:
    path: /discovery/v1/apis/arvados/v1/rest
    method: GET
- name: current_user
  endpoint:
    path: /arvados/v1/users/current
    method: GET
- name: Keepstore
  endpoint:
    path: /services/Keepstore
    method: GET
    data_selector: records
    params: {}
- name: filesystem_storage
  endpoint:
    path: /install/configure-fs-storage
    method: GET
    data_selector: Volumes
- name: Volumes
  endpoint:
    path: /configure-s3-object-storage
    method: POST
    data_selector: Volumes
    params: {}
- name: Volumes
  endpoint:
    path: /Volumes
    method: POST
    data_selector: Volumes
    params: {}
- name: Keepproxy
  endpoint:
    path: /services/keep
    method: GET
    data_selector: records
- name: WebDAV
  endpoint:
    path: /
    method: GET
    data_selector: collections
    params: {}
- name: keep-web
  endpoint:
    path: /c={collection_uuid}/t={token}/_/hello.txt
    method: GET
    data_selector: data
    params: {}
- name: keepbalance
  endpoint:
    path: /keepbalance
    method: POST
    data_selector: metrics
    params: {}
- name: websocket
  endpoint:
    path: /websocket
    method: GET
    data_selector: events
- name: config.json
  endpoint:
    path: /config.json
    method: GET
    data_selector: API_HOST
    params: {}
- name: Workbench.SiteName
  endpoint:
    path: /Workbench.SiteName
    method: GET
- name: Workbench.WelcomePageHTML
  endpoint:
    path: /Workbench.WelcomePageHTML
    method: GET
- name: Workbench.InactivePageHTML
  endpoint:
    path: /Workbench.InactivePageHTML
    method: GET
- name: Workbench.BannerUUID
  endpoint:
    path: /Workbench.BannerUUID
    method: GET
- name: virtual_machine
  endpoint:
    path: /virtual_machine
    method: POST
    data_selector: uuid
    params: {}
- name: webshell
  endpoint:
    path: /shell.ClusterID
    method: GET
- name: Containers
  endpoint:
    path: /containers
    method: GET
    data_selector: ShellAccess
    params: {}
notes:
- Many services have been incorporated into arvados-server.
- If you are using a different Arvados instance replace https://playground.arvados.org
  with your private instance in all of the examples in this guide.
- Supports WebDAV HTTP methods GET, PUT, DELETE, PROPFIND, COPY, and MOVE.
- Does not support LOCK or UNLOCK.
- Path-style and virtual host-style requests are supported.
- Bucket versioning is presently not supported.
- When serving files that will render directly in the browser, configure the keep-web
  service to mitigate XSS attacks.
- Separate domains for each collection can be used to avoid security risks.
- Projects can contain collections, container requests, workflows, etc.
- Filter groups must currently be defined via the API, SDK or cli, there is no Workbench
  support yet.
- These APIs are not normally exposed to external clients.
- 'The vocabulary definition is exported on a particular endpoint: /arvados/v1/vocabulary.'
- Health endpoint for vocabulary is available at /_health/vocabulary.
- API tokens can be issued by going though the login flow, or created via the API.
- Browser based applications can perform login from email/password.
- Command line applications and services must use an API token provided via the ARVADOS_API_TOKEN
  environment variable or configuration file.
- API tokens can be issued by going through the login flow or created via the API.
- Only browser based applications can perform login from email/password.
- Command line applications and services must use an API token.
- All requests to the API server must have an API token.
- Browser based applications can perform log in via the login flow.
- Certain method calls on certain object types support federation.
- Keep-web provides read/write HTTP (WebDAV) access to files stored in Keep.
- The 'bucket name' is an Arvados collection uuid, portable data hash, or project
  uuid.
- When serving files that will render directly in the browser, it is important to
  properly configure the keep-web service to mitigate cross-site-scripting (XSS) attacks.
- A regular Workbench 'download' link is accepted, but credentials passed via cookie,
  header, etc. are ignored. Only public data can be served this way.
- Arvados allows you to attach arbitrary properties to collection, container_request,
  link and group records that have a properties field.
- All requests must include the cluster’s management token.
- 'Server expects request header of the format ''Authorization: Bearer xxx'''
- Token used internally by Arvados components to authenticate to one another
- Uses OAuth2 with refresh token — requires setup of connected app in api
- User agreements must be signed before activation.
- Service accounts can be created for automation.
- Token scopes act as a whitelist, and the API server checks the HTTP method and the
  API path of every request against the scopes of the request token.
- The vocabulary definition is automatically loaded and validated by the controller
  service.
- The vocabulary definition is exported on an unauthenticated endpoint.
- Health checks for vocabulary integrity are performed at the health endpoint.
- The vocabulary definition is prone to syntax or logical errors.
- Validation checks are performed only on the node that hosts the vocabulary file.
- The endpoint for querying the vocabulary does not require authentication.
- The service will not start if the vocabulary file is incorrect.
- Requires setup of API host and token as environment variables.
- 'User groups are entries in the ''groups'' table with ''group_class'': ''role''.'
- This is currently a command line based, admin-only feature.
- Authorization credentials (API tokens, ssh keys) are not transferred to the new
  user.
- self-serve account linking is currently not supported on LoginCluster federations
  and needs to be performed manually by the site admin.
- The Proxy variable should always be set to true.
- Users should select their home cluster when logging into Arvados Workbench.
- The default value for Workbench.IdleTimeout is zero, which disables auto-logout.
- The default value of Login.TokenLifetime is zero, meaning login tokens do not expire.
- The default value MaxTokenLifetime is zero, which means there is no maximum token
  lifetime.
- Most Arvados services write JSON-format structured logs to stderr.
- The API Server logs every request in JSON format on the production.log.
- When accessing a metrics endpoint, prefix the management token with 'Bearer ' and
  supply it in the Authorization request header.
- Health check endpoints return a JSON object with the field health.
- Services must be configured with a management token to access the endpoint.
- Uses API key for authentication — requires setup of API tokens.
- Services must have ManagementToken configured. This is used to authorize access
  monitoring endpoints.
- If ManagementToken is not configured, monitoring endpoints will return the error
  `404 disabled`.
- In a login cluster federation, the token needs to be issued by the login cluster.
- If CollectionVersioning is set to false after being enabled, old versions will still
  be accessible, but further changes will not be versioned.
- The managed properties feature applies only to newly created collections.
- The default policy allows anyone to upload or download.
- Denying download permission does not deny access to XML file listings.
- Keep-balance creates new copies of under-replicated blocks, deletes excess copies
  of over-replicated and unreferenced blocks, and moves blocks to better positions.
- This table grows indefinitely, even on sites where policy does not require an audit
  log.
- This table grows indefinitely, even on sites where policy does not require an audit
  log; making backups, migrations, and upgrades unnecessarily slow and painful.
- Every storage class must be defined in the StorageClasses section.
- 'The StorageClasses section must use Default: true to indicate at least one default
  storage class.'
- Assign a higher Priority to faster storage classes.
- When a collection is deleted, it is moved to the trash.
- Possibility of recovery depends on many factors, including whether the collection
  manifest is still available.
- The usual environment variables (ARVADOS_API_HOST and ARVADOS_API_TOKEN) need to
  be set for the deduplication report to be generated.
- To get cluster-wide results, an admin token will need to be supplied.
- Setting BlobTrashLifetime to zero can result in data loss.
- 'Using PrefixLength: 3 results in a higher rate limit for I/O and garbage collection
  operations.'
- Preemptible instances typically offer lower cost computation with a tradeoff of
  lower service guarantees.
- AWS provides a data feed subscription to get hourly logs for spot instance pricing.
- Configured cloud credentials don’t work
- Configured image types don’t work
- Configured driver is not compatible with your cloud API/region
- Newly created instances are not usable due to a network problem or misconfiguration
- Newly created instances do not accept the configured SSH private key
- Selected machine image does not boot properly
- Selected machine image is incompatible with some instance types
- Driver has bugs
- Every request must include an API token.
- Uses OAuth2 with bearer token
- Uses OAuth2 with Bearer token for authorization.
- Uses OAuth2 with Bearer token for authorization
- Requires setup of connected app in api
- 'Every request must include an API token using the Authorization header in the format:
  Bearer xxxxapitokenxxxx.'
- Some objects may return nulls in deeply nested fields
- Every request must include an API token. This identifies the user making the request
  for the purposes of access control.
- Some objects like Collection may return nulls in deeply nested fields
- Some objects like collection may return nulls in deeply nested fields
- 'Access-Control-Allow-Headers: Authorization'
- Some resources may limit who can perform certain operations.
- All Arvados timestamps follow ISO 8601 datetime format with fractional seconds (microsecond
  precision). All timestamps are UTC.
- Some objects like Contact may return nulls in deeply nested fields
- The term 'instance' refers to a virtual machine provided by a cloud computing service.
- A task’s context is provided in environment variables.
- The crunch script typically uses the Python SDK (or another suitable client library
  / SDK) to connect to the Arvados service and retrieve the rest of the details about
  the current job and task.
- Token used internally by Arvados components to authenticate to one another. Use
  a string of at least 50 random alphanumerics.
- If RoleGroupsVisibleToAll is true, all role groups are visible to all active users.
- If CanCreateRoleGroups is true, regular (non-admin) users can create new role groups.
- 'Logging threshold: panic, fatal, error, warn, info, debug, or trace'
- 'Logging format: json or text'
- Intended only for test/development use. Not appropriate for production use.
- Only the listed attributes (and standard metadata) are set when creating an object.
- Methods which implicitly include a cluster id will be directed to the appropriate
  cluster.
- Consult documentation for individual resource types for details.
- Files served by keep-web can be rendered directly in the browser, or keep-web can
  instruct the browser to only download the file.
- It is important to properly configure the keep-web service to mitigate cross-site-scripting
  (XSS) attacks.
- APIs are not normally exposed to external clients.
- This feature is under development. Support for federation is limited to certain
  types of requests. The behaviors described here should not be interpreted as a stable
  API.
- The Arvados configuration is stored at /etc/arvados/config.yml
- Connecting to Arvados shell VMs tends to be site-specific.
- AutoSetupNewUsers is false and AutoAdminFirstUser is false.
- Arvados expects a default SMTP server on localhost:25.
- Enable the legacy 'jobs' API.
- Use split-horizon DNS for ExternalURL host names
- WebDAVDownload links must have a valid configuration to avoid errors
- Ensure proper configuration of authentication methods.
- How long to wait before deleting VHD and NIC objects that are no longer being used.
- When users present tokens issued by this remote cluster, and their accounts are
  active on the remote cluster, activate them on this cluster too.
- Requires proper configuration of connected app for OAuth2.
- This should not be set lower than 300 (5 minutes).
- Token to be included in all healthcheck requests. Disabled by default.
- When anonymous_user_token is configured, show public projects page
- Modifying BlobSigningKey will invalidate all existing signatures.
- To avoid errors, rotate keys only when no such processes are running.
- Workbench2 configs
- When true, read and write operations (for whole 64MiB blocks) on an individual volume
  will queued and issued serially. When false, read and write operations will be issued
  concurrently. May possibly improve throughput if you have physical spinning disks
  and experience contention when there are multiple requests to the same volume. Otherwise,
  when using SSDs, RAID, or a shared network filesystem, you should leave this alone.
- 'The server expects request header of the format ''Authorization: Bearer xxx'''
- Requires OAuth2 setup for authentication.
- Ensure proper permissions are set for API access.
- Ensure proper configuration of the email settings for notifications.
- Check user permissions for API access.
- Site configurations vary. Contact your local cluster administrator if you have difficulty
  accessing an Arvados shell node.
- Arvbox is a Docker-based self-contained development, demonstration and testing environment
  for Arvados.
- The public arvbox configuration is NOT SECURE and must not be placed on a public
  IP address or used for production work.
- The single host installation is not recommended for production use.
- Arvados requires an SSL certificate to work correctly.
- The installer records log files for each deployment.
- The logs for Rails API server can be found in `/var/www/arvados-api/current/log/production.log`.
- Installer can be used as a template for deployment on other cloud provider or HPC
  systems
- Requires setup of connected app in Arvados.
- The certificates will be requested from Let’s Encrypt when you run the installer.
- AWS specific setup recommended for Arvados
- Ensure passwordless SSH access is configured for compute nodes
- Installer records log files for each deployment.
- Most service logs go to /var/log/syslog.
- Logs for Rails API server can be found in /var/www/arvados-api/current/log/production.log
  on the appropriate instance(s).
- Uses OAuth2 for authentication
- Additional configuration for features including federation, collection versioning,
  managed properties, and storage classes are described in the Admin guide.
- You’ll need to add the Arvados package repository on any host where you install
  Arvados software.
- Available for several popular distributions.
- The configuration file must be kept in sync across every service node in the cluster.
- InternalURLs must be reachable from other cluster nodes for certain services.
- Clients need to be able to upload blocks of data up to 64MiB in size.
- All URLs in Services.WebDAV.InternalURLs must be reachable by all Controller services.
- All clients connect to InternalURLs for Keepstore.
- Arvados 3.1.1 fixes a handful of bugs in installation tools, particularly for deployments
  on Ubuntu.
- The Arvados Rails API server now runs from a standalone Passenger server to simplify
  deployment.
- Generalized configuration for GPU compute nodes.
- Some versions introduce changes that require special attention when upgrading.
- System services now log a warning at startup if any of the system tokens (ManagementToken,
  SystemRootToken, and Collections.BlobSigningKey) are less than 32 characters, or
  contain characters other than a-z, A-Z, and 0-9.
- The API.RailsSessionSecretToken configuration key has been removed. Delete this
  entry from your configuration file after upgrading.
- Arvados is migrating to a centralized configuration file for all components.
- This bug has been fixed in Arvados release v1.2.0.
- 'Making a configuration change to Arvados typically involves three steps: modification
  of the config.yml file, distribution of the modified file to the machines in the
  cluster, restarting of the services affected by the change.'
- It is very important to keep the config.yml file in sync between all the Arvados
  system nodes, to avoid issues with services running on different versions of the
  configuration.
- Uses PostgreSQL as the backend database
- Requires configuration of Nginx for reverse proxy
- 'The API server consists of four services: PostgreSQL, Arvados Rails API, Arvados
  Controller, and Nginx.'
- Ensure to use full certificate chain in nginx configuration.
- Use -internal-client for private network, -external-client for outside access
- Keepstore provides access to underlying storage for reading and writing content-addressed
  blocks, with enforcement of Arvados permissions.
- Keepstore supports a variety of cloud object storage and POSIX filesystems for its
  backing store.
- Keepstore can store data in local and network-attached POSIX filesystems.
- Volumes are configured in the Volumes section of the cluster configuration file.
- Keepstore can store data in one or more Azure Storage containers.
- Standard D v3 family is a balanced choice, making Standard_D2_v3 the 2-core option.
- A balanced option is to have General-purpose Standard Storage account and use Blob
  storage, hot access tiers.
- Keepproxy checks API token validity before processing requests.
- Keep-web provides read/write access to files stored in Keep using WebDAV and S3
  protocols.
- Keep-web typically installed behind a web proxy that provides TLS support.
- Keep-web serves public data to unauthenticated clients and private data to clients
  that supply Arvados API tokens.
- A cluster should have only one instance of keep-balance running at a time.
- If you are installing keep-balance on an existing system with valuable data, you
  can run keep-balance in 'dry run' mode first and review its logs as a precaution.
- Users must not be able to edit their own email addresses in the directory.
- The arvados-ws server provides event notifications to websocket clients.
- It can be installed anywhere with access to Postgres database and the Arvados API
  server, typically behind a web proxy that provides SSL support.
- Workbench2 is the replacement for Arvados Workbench. Workbench2 is suitable for
  day-to-day use, but does not yet implement every feature of the traditional Workbench.
- The banner text is loaded from the file `banner.html`.
- Tooltips are loaded from the file `tooltips.json`.
- Arvados support for shell nodes allows you to use Arvados permissions to grant Linux
  shell accounts to users.
- Because Arvados config.yml contains secrets it should not be present on shell nodes.
- Cron job has to run for user login
- User must upload an SSH public key to log in via SSH
- Webshell allows ssh access to shell nodes via the browser.
- Requires setup of SSL for transport encryption.
- Webshell is provided by the shellinabox package which runs on each shell node for
  which webshell is enabled.
- SSL is disabled in shellinabox because it is terminated in Nginx.
- This feature can be enabled for admin users, or for all users. By default, it is
  entirely disabled.
- A firewall change may also be required.
- Arvados requires at least version 9.4 of PostgreSQL. We recommend using version
  10 or newer.
- Aurora Serverless is not recommended.
- Ruby 2.7 or newer is required.
- apt --no-install-recommends install nginx
- The content of this documentation is licensed under the Creative Commons Attribution-Share
  Alike 3.0 United States licence.
- Code samples in this documentation are licensed under the Apache License, Version
  2.0.
- Currently Arvados is not compatible with the new cgroups accounting, also known
  as cgroups v2.
- A possible configuration error is having Docker installed as a snap package rather
  than a deb package.
errors:
- '404: Not Found - resource exists but client does not have read access'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Ensure proper token is provided.'
- '401 Unauthorized: Token may be ignored in same-site requests.'
- '404 Not Found: If the provided container_uuid is not scheduled/running on an instance.'
- '401 Unauthorized: Recheck API token or user credentials.'
- Requests with different methods will be rejected.
- '404 Not Found: Resource does not exist or access is denied'
- '401 Unauthorized: An unauthenticated request will return a 401 Unauthorized response.'
- GetBucketTagging and GetObjectTagging APIs are not supported.
- Bucket versioning is presently not supported.
- '401 Unauthorized: The browser will ignore the cookie if it’s not coming from a
  same-site request.'
- 'Error loading vocabulary file: duplicate JSON key'
- tag key is configured as strict but doesn't provide values
- '401 Unauthorized: Check API token or permissions.'
- '401 Unauthorized: Recheck API token or permissions'
- '422: Whoops, something bad happened'
- '404 disabled: ManagementToken not configured'
- '403 Forbidden: Attempted to upload or download without permission'
- 'BaseHTTPError: AuthFailure.ServiceLinkedRoleCreationNotPermitted: The provided
  credentials do not have permission to create the service-linked role for EC2 Spot
  Instances.'
- '404: Not Found'
- 4xx or 5xx HTTP status code
- '4xx: Client error'
- '5xx: Server error'
- '401 Unauthorized: Recheck OAuth token.'
- '401 Unauthorized: Recheck OAuth token'
- '4xx or 5xx: Error codes returned for request failures'
- '401 Unauthorized: Invalid or expired token'
- '404: Resource not found'
- '404 Not Found: Resource does not exist or access denied.'
- '404 Not Found: Resource does not exist or is not accessible'
- '4xx or 5xx: Request cannot be fulfilled'
- '401 Unauthorized: Client must supply a valid token.'
- 'Authorization header not present: Treat as WebDAV request.'
- Cannot create a collection or project with PutObject.
- '401 Unauthorized: Request requires Authentication.'
- 'Unauthorized: Recheck AWS Signature or token.'
- '403 Forbidden: Check user permissions.'
- '401 Unauthorized: Check user credentials.'
- '403 Forbidden: Insufficient permissions.'
- '401 Unauthorized: Check your API token or credentials.'
- '403 Forbidden: You do not have permission to access this resource.'
- '404 Not Found: The requested resource does not exist.'
- '400 Bad Request: Check the request format and parameters.'
- '404 Not Found: Verify the endpoint and resource existence.'
- '500 Internal Server Error: Contact support for assistance.'
- 'PG::UndefinedTable: ERROR: relation "api_clients" does not exist'
- '401 Unauthorized: Check your access tokens'
- '500 Internal Server Error: Check server logs for details'
- 'TLS errors: Check ssl_certificate directive in nginx configuration.'
- no errors
- '401 Unauthorized: Recheck Storage Account name and key.'
- CORS headers are generated by keepproxy and should not be set in nginx.
- '401 Unauthorized: Recheck API tokens or permissions'
- '404 Not Found: A request for non-public data may return this error even if normally
  valid credentials were provided.'
- 'ValidationException: Not found: ''/var/lib/cwl/workflow.json#main'''
auth_info:
  mentioned_objects:
  - Job
  - JobTask
  - api_client_authorization
  - api_client_authorizations
  - SystemRootToken
  - ManagementToken
  - Login
  - OAuth
  - LDAP
  - OAuth2
  - AccessToken
  - RefreshToken
  - Collections.BlobSigningKey
  - ARVADOS_API_HOST
  - ARVADOS_API_TOKEN
  - Login.Google
  - Login.OpenIDConnect
  - Login.LDAP
  - Login.PAM
client:
  base_url: https://pirca.arvadosapi.com/arvados/v1
  paginator:
    type: cursor
source_metadata: null
