resources:
- name: face_verify
  endpoint:
    path: /faceverify
    method: GET
    data_selector: reply
    params: {}
- name: id_scan
  endpoint:
    path: /id-scan
    method: GET
    data_selector: reply
    params: {}
- name: docscan
  endpoint:
    path: /id-scan-api/docscan
    method: GET
- name: pdfgen
  endpoint:
    path: /endpoints/pdfgen
    method: GET
- name: pdftoimg
  endpoint:
    path: /endpoints/pdftoimg
    method: GET
- name: status
  endpoint:
    path: /endpoints/status
    method: GET
- name: about
  endpoint:
    path: /endpoints/about
    method: GET
- name: extension
  endpoint:
    path: /endpoints/extension
    method: GET
- name: tinyDream
  endpoint:
    path: /tinyDream
    method: POST
    data_selector: outputImagePath
    params: {}
- name: tinyDream
  endpoint:
    path: /tinyDream
    method: GET
    data_selector: methods
- name: grayscale
  endpoint:
    path: /grayscale
    method: GET
    data_selector: reply
    params: {}
- name: nsfw
  endpoint:
    path: /nsfw
    method: GET
    data_selector: reply
    params: {}
- name: drawtext
  endpoint:
    path: /drawtext
    method: GET
    data_selector: reply
    params: {}
- name: convert
  endpoint:
    path: /convert
    method: GET
    data_selector: reply
    params: {}
- name: smartresize
  endpoint:
    path: /smartresize
    method: GET
    data_selector: reply
    params: {}
- name: grayscale
  endpoint:
    path: /grayscale
    method: GET
    data_selector: link
    params: {}
- name: grayscale
  endpoint:
    path: /grayscale
    method: GET
    data_selector: link
    params:
      img: https://example.com/sample.jpg
      key: YOUR_PIXLAB_API_KEY
- name: convert
  endpoint:
    path: /convert
    method: GET
    data_selector: link
    params:
      img: https://www.allaboutbirds.org/guide/PHOTO/LARGE/blue_jay_8.jpg
      export: png
      background: tr
      key: Pix_Key
- name: nsfw
  endpoint:
    path: /nsfw
    method: GET
    data_selector: score
    params:
      img: https://i.redd.it/oetdn9wc13by.jpg
      key: PIXLAB_API_KEY
- name: pdftoimg
  endpoint:
    path: /pdftoimg
    method: GET
    data_selector: link
    params:
      src: https://www.getharvest.com/downloads/Invoice_Template.pdf
      export: jpeg
      key: YOUR_PIXLAB_API_KEY
- name: ID Scan
  endpoint:
    path: /docscan
    method: POST
    data_selector: data
    params: {}
- name: llm-parse
  endpoint:
    path: /endpoints/llm-parse.html
    method: GET
- name: txt-embed
  endpoint:
    path: /endpoints/text-embed.html
    method: GET
- name: img-embed
  endpoint:
    path: /endpoints/img-embed.html
    method: GET
- name: docscan
  endpoint:
    path: /id-scan-api/docscan
    method: GET
- name: status
  endpoint:
    path: /endpoints/status
    method: GET
- name: about
  endpoint:
    path: /endpoints/about
    method: GET
- name: extension
  endpoint:
    path: /endpoints/extension
    method: GET
- name: query
  endpoint:
    path: /endpoints/query
    method: GET
- name: describe
  endpoint:
    path: /endpoints/describe
    method: GET
- name: tagimg
  endpoint:
    path: /endpoints/tagimg
    method: GET
- name: nsfw
  endpoint:
    path: /endpoints/nsfw
    method: GET
- name: vOCR
  endpoint:
    path: /endpoints/ocr
    method: GET
- name: detect
  endpoint:
    path: /endpoints/detect.html
    method: GET
- name: tools
  endpoint:
    path: /endpoints/llm-tools.html
    method: GET
- name: tool-call
  endpoint:
    path: /endpoints/llm-tool-call.html
    method: GET
- name: pdfgen
  endpoint:
    path: /endpoints/pdfgen
    method: GET
- name: pdfToImg
  endpoint:
    path: /endpoints/pdftoimg
    method: GET
- name: chat
  endpoint:
    path: /endpoints/chat.html
    method: GET
- name: summarize
  endpoint:
    path: /endpoints/summarize
    method: GET
- name: answer
  endpoint:
    path: /endpoints/answer
    method: GET
- name: altext
  endpoint:
    path: /endpoints/altext.html
    method: GET
- name: seotag
  endpoint:
    path: /endpoints/seotag.html
    method: GET
- name: coder
  endpoint:
    path: /endpoints/coder.html
    method: GET
- name: authenticate
  endpoint:
    path: /faceio/integration-guide#authenticate
    method: GET
- name: enroll
  endpoint:
    path: /faceio/integration-guide#enroll
    method: GET
- name: face-verify
  endpoint:
    path: /faceio/rest-api#faceverify
    method: GET
- name: age-check
  endpoint:
    path: /faceio/rest-api#age-check
    method: GET
- name: facedetect
  endpoint:
    path: /endpoints/facedetect
    method: GET
- name: facelandmarks
  endpoint:
    path: /endpoints/facelandmarks
    method: GET
- name: facemotion
  endpoint:
    path: /endpoints/facemotion
    method: GET
- name: pdfgen
  endpoint:
    path: /pdfgen
    method: POST
    data_selector: url
- name: query
  endpoint:
    path: /query
    method: POST
- name: llm-parse
  endpoint:
    path: /llm-parse
    method: POST
- name: pdfgen
  endpoint:
    path: /pdfgen
    method: POST
- name: bg-remove
  endpoint:
    path: /bg-remove
    method: POST
- name: Document Analysis
  endpoint:
    path: /document-analysis
    method: GET
    data_selector: records
- name: Image Processing
  endpoint:
    path: /image-processing
    method: GET
    data_selector: records
- name: image_annotation
  endpoint:
    path: /annotate
    method: POST
    data_selector: annotations
    params: {}
- name: AI Video Editor
  endpoint:
    path: /api/v1/video/editor
    method: POST
    data_selector: data
    params: {}
- name: Clip Generator
  endpoint:
    path: /api/v1/video/generate-clips
    method: POST
    data_selector: data
    params: {}
- name: image_editing
  endpoint:
    path: /api/v1/image/edit
    method: POST
    data_selector: data
- name: background_removal
  endpoint:
    path: /api/v1/image/background/remove
    method: POST
    data_selector: data
- name: bg-remove
  endpoint:
    path: /bgremove
    method: GET
    data_selector: link
    params:
      img: https://example.com/sample-image.jpg
      key: YOUR_PIXLAB_API_KEY
- name: tilemap_editor
  endpoint:
    path: /
    method: GET
    data_selector: tiles
- name: supported_document_types
  endpoint:
    path: /supported_document_types
    method: GET
    data_selector: records
    params: {}
- name: supported_document_types_somalia
  endpoint:
    path: /somalia/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_south_africa
  endpoint:
    path: /south_africa/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_south_korea
  endpoint:
    path: /south_korea/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_spain
  endpoint:
    path: /spain/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_sri_lanka
  endpoint:
    path: /sri_lanka/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_sudan
  endpoint:
    path: /sudan/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_suriname
  endpoint:
    path: /suriname/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_swaziland
  endpoint:
    path: /swaziland/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_sweden
  endpoint:
    path: /sweden/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_switzerland
  endpoint:
    path: /switzerland/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_syria
  endpoint:
    path: /syria/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_taiwan
  endpoint:
    path: /taiwan/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_tajikistan
  endpoint:
    path: /tajikistan/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_tanzania
  endpoint:
    path: /tanzania/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_thailand
  endpoint:
    path: /thailand/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_togo
  endpoint:
    path: /togo/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_tonga
  endpoint:
    path: /tonga/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_trinidad_and_tobago
  endpoint:
    path: /trinidad_and_tobago/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_tunisia
  endpoint:
    path: /tunisia/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_turkey
  endpoint:
    path: /turkey/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_turkmenistan
  endpoint:
    path: /turkmenistan/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_turks_and_caicos_islands
  endpoint:
    path: /turks_and_caicos_islands/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_tuvalu
  endpoint:
    path: /tuvalu/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_uganda
  endpoint:
    path: /uganda/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_ukraine
  endpoint:
    path: /ukraine/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_united_arab_emirates
  endpoint:
    path: /united_arab_emirates/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types_united_kingdom
  endpoint:
    path: /united_kingdom/document_types
    method: GET
    data_selector: documents
    params: {}
- name: supported_document_types
  endpoint:
    path: /supported_document_types
    method: GET
    data_selector: records
    params: {}
- name: document_scan
  endpoint:
    path: /scan
    method: POST
    data_selector: fields
    params:
      img: image_url
      key: api_key
      type: document_type
      country: country_origin
- name: document_scan
  endpoint:
    path: /docscan
    method: POST
    data_selector: fields
- name: background_remove
  endpoint:
    path: /bgremove
    method: POST
    data_selector: imgData
    params: {}
- name: convert_pdf_to_image
  endpoint:
    path: /pdftoimg
    method: GET
    data_selector: ''
    params: {}
- name: pdf_generation
  endpoint:
    path: /pdfgen
    method: POST
    data_selector: link
    params: {}
- name: drawtext
  endpoint:
    path: /drawtext
    method: GET
    data_selector: ssl_link
    params: {}
- name: drawtext
  endpoint:
    path: /drawtext
    method: GET
    data_selector: reply
    params: {}
- name: drawtext
  endpoint:
    path: /drawtext
    method: GET
    data_selector: reply
    params: {}
- name: drawtext
  endpoint:
    path: /drawtext
    method: GET
    data_selector: reply
    params:
      key: PIXLAB_API_KEY
- name: drawtext
  endpoint:
    path: /drawtext
    method: GET
    data_selector: ssl_link
    params: {}
- name: drawtext
  endpoint:
    path: /drawtext
    method: GET
    data_selector: ssl_link
    params: {}
- name: drawtext
  endpoint:
    path: /drawtext
    method: GET
    data_selector: ssl_link
    params: {}
- name: convert_image
  endpoint:
    path: /convert
    method: GET
    data_selector: link
    params:
      img: input_image_url
      export: output_format
      key: your_pixlab_api_key
- name: tagimg
  endpoint:
    path: /tagimg
    method: GET
    data_selector: tags
    params: {}
- name: header
  endpoint:
    path: /header
    method: GET
    data_selector: status
    params: {}
- name: encrypt
  endpoint:
    path: /encrypt
    method: GET
    data_selector: link
    params: {}
- name: llm_parse
  endpoint:
    path: /llmparse
    method: POST
    data_selector: output
    params:
      doc: URL
      key: String
      output: String
- name: query
  endpoint:
    path: /query
    method: GET
    data_selector: response
    params:
      img: URL
      query: String
      key: String
- name: nsfw_detection
  endpoint:
    path: /nsfw
    method: GET
    data_selector: status
    params:
      img: URL
      key: String
- name: blur
  endpoint:
    path: /blur
    method: GET
    data_selector: status
    params:
      img: URL
      key: String
      rad: Integer
      sig: Integer
- name: blur
  endpoint:
    path: /blur
    method: GET
    data_selector: JSON Object
    params: {}
- name: mogrify
  endpoint:
    path: /mogrify
    method: POST
    data_selector: JSON Object
    params: {}
- name: upload_media
  endpoint:
    path: /store
    method: POST
    data_selector: status
    params: {}
- name: SFW
  endpoint:
    path: /sfw
    method: GET
    data_selector: status
    params:
      img: image_url
      key: API_KEY
- name: ocr
  endpoint:
    path: /ocr
    method: GET
    data_selector: output
    params:
      img: URL
      key: String
- name: facedetect
  endpoint:
    path: /facedetect
    method: GET
    data_selector: faces
    params:
      img: URL
      key: String
- name: crop
  endpoint:
    path: /crop
    method: GET
    data_selector: link
    params:
      img: URL
      key: String
      width: Integer
      height: Integer
      x: Integer
      y: Integer
- name: screencapture
  endpoint:
    path: /screencapture
    method: GET
    data_selector: link
    params:
      url: website_url
      key: your_api_key
- name: annotate
  endpoint:
    path: /annotate
    method: GET
- name: crop
  endpoint:
    path: /crop
    method: GET
    data_selector: ''
    params: {}
- name: newimage
  endpoint:
    path: /newimage
    method: GET
    data_selector: link
    params: {}
- name: drawtext
  endpoint:
    path: /drawtext
    method: GET
    data_selector: link
    params: {}
- name: scale_image
  endpoint:
    path: /scale
    method: GET
    data_selector: link
    params:
      img: url
      scale: integer
      key: string
- name: minify
  endpoint:
    path: /minify
    method: POST
    data_selector: status
    params: {}
- name: magnify
  endpoint:
    path: /magnify
    method: POST
    data_selector: output
    params: {}
- name: adaptiveresize
  endpoint:
    path: /ar
    method: GET
- name: crop
  endpoint:
    path: /crop
    method: GET
    data_selector: link
    params:
      img: image_url
      key: your_api_key
      x: x_coordinate
      y: y_coordinate
      width: desired_width
      height: desired_height
- name: resize
  endpoint:
    path: /resize
    method: GET
    data_selector: ''
    params: {}
- name: smartresize
  endpoint:
    path: /smartresize
    method: GET
    data_selector: link
    params:
      img: URL
      width: Integer
      height: Integer
      key: String
- name: remap
  endpoint:
    path: /remap
    method: POST
    data_selector: link
    params: {}
- name: setresolution
  endpoint:
    path: /setresolution
    method: POST
    data_selector: status
    params:
      img: URL
      xr: Integer
      yr: Integer
      key: String
- name: resample
  endpoint:
    path: /resample
    method: GET
    data_selector: response
    params: {}
- name: thumbnail
  endpoint:
    path: /thumbnail
    method: GET
    data_selector: link
    params:
      img: URL
      width: Integer
      height: Integer
      key: String
- name: merge_images
  endpoint:
    path: /merge
    method: POST
    data_selector: link
    params: {}
- name: avatar
  endpoint:
    path: /avatar
    method: GET
    data_selector: link
    params:
      img: image_url
      key: api_key
- name: thumbnail
  endpoint:
    path: /webfit
    method: GET
    data_selector: link
    params:
      img: media_url
      key: api_key
- name: grayscale
  endpoint:
    path: /grayscale
    method: GET
    data_selector: status
    params: {}
- name: motionblur
  endpoint:
    path: /motionblur
    method: GET
    data_selector: ''
    params: {}
- name: gaussianblur
  endpoint:
    path: /gaussianblur
    method: GET
    data_selector: link
    params:
      img: URL
      radius: Float
      sigma: Float
      key: String
- name: colorspace_rgb
  endpoint:
    path: /colorspace_rgb
    method: GET
    data_selector: JSON Object
- name: colorspace_srgb
  endpoint:
    path: /colorspace_srgb
    method: GET
    data_selector: link
    params: {}
- name: colorspace_cmyk
  endpoint:
    path: /colorspace_cmyk
    method: GET
    data_selector: link
    params: {}
- name: image_colorspace
  endpoint:
    path: /image_colorspace
    method: GET
    data_selector: ''
    params: {}
- name: grayscale
  endpoint:
    path: /grayscale
    method: GET
    data_selector: link
    params: {}
- name: facedetect
  endpoint:
    path: /facedetect
    method: GET
    data_selector: faces
    params: {}
- name: crop
  endpoint:
    path: /crop
    method: GET
    data_selector: link
    params: {}
- name: facedetect
  endpoint:
    path: /facedetect
    method: GET
    data_selector: faces
    params:
      key: PIXLAB_API_KEY
- name: mogrify
  endpoint:
    path: /mogrify
    method: POST
    data_selector: link
    params:
      key: PIXLAB_API_KEY
- name: drawtext
  endpoint:
    path: /drawtext
    method: GET
    data_selector: ssl_link
    params:
      key: PIXLAB_API_KEY
- name: newimage
  endpoint:
    path: /newimage
    method: GET
    data_selector: link
    params:
      key: PIXLAB_API_KEY
- name: docscan
  endpoint:
    path: /docscan
    method: GET
    data_selector: fields
- name: nsfw
  endpoint:
    path: /nsfw
    method: GET
    data_selector: score
- name: blur
  endpoint:
    path: /blur
    method: GET
    data_selector: link
- name: drawrectangle
  endpoint:
    path: /drawrectangle
    method: POST
    data_selector: link
    params: {}
- name: drawrectangles
  endpoint:
    path: /drawrectangles
    method: POST
    data_selector: reply
    params: {}
- name: drawlines
  endpoint:
    path: /drawlines
    method: POST
    data_selector: link
    params: {}
- name: drawtext
  endpoint:
    path: /drawtext
    method: GET
    data_selector: response
    params: {}
- name: drawpoints
  endpoint:
    path: /drawpoints
    method: POST
    data_selector: null
    params: {}
- name: drawtextat
  endpoint:
    path: /drawtextat
    method: GET
    data_selector: link
    params: {}
- name: face_verify
  endpoint:
    path: /faceverify
    method: GET
    data_selector: ''
    params: {}
- name: id_scan
  endpoint:
    path: /id-scan-api/docscan
    method: GET
    data_selector: ''
    params: {}
- name: drawtext
  endpoint:
    path: /drawtext
    method: GET
    data_selector: ssl_link
    params: {}
- name: drawtext
  endpoint:
    path: /drawtext
    method: GET
    data_selector: ssl_link
    params:
      img: https://pixlab.io/images/jdr.jpg
      top: someone bumps the table
      bottom: right before you win
      cap: true
      strokecolor: black
      key: PIXLAB_API_KEY
- name: drawtext
  endpoint:
    path: /drawtext
    method: GET
    data_selector: ssl_link
    params: {}
- name: drawtext
  endpoint:
    path: /drawtext
    method: GET
    data_selector: ssl_link
    params:
      key: PIXLAB_API_KEY
- name: drawtext
  endpoint:
    path: /drawtext
    method: GET
    data_selector: ssl_link
    params: {}
- name: drawtext
  endpoint:
    path: /drawtext
    method: GET
    data_selector: ssl_link
- name: drawtext
  endpoint:
    path: /drawtext
    method: GET
    data_selector: ssl_link
    params: {}
- name: ID Scan & Extract API
  endpoint:
    path: /id-scan-api/docscan
    method: GET
    data_selector: structured JSON
- name: Background Removal API
  endpoint:
    path: /endpoints/background-remove-api
    method: GET
    data_selector: processed images
- name: Rich PDF Generation APIs
  endpoint:
    path: /endpoints/pdfgen
    method: GET
    data_selector: generated PDFs
- name: describe
  endpoint:
    path: /describe
    method: GET
    data_selector: description
    params:
      img: URL
      key: PIXLAB_API_KEY
- name: image_embedding
  endpoint:
    path: /imgembed
    method: POST
    data_selector: embedding
    params: {}
- name: chat
  endpoint:
    path: /chat
    method: POST
    data_selector: output
    params: {}
- name: query
  endpoint:
    path: /
    method: POST
    data_selector: output
    params: {}
- name: text_embedding
  endpoint:
    path: /embedding
    method: POST
    data_selector: embedding
- name: llm_tool_call
  endpoint:
    path: /toolcall
    method: POST
- name: code_generation
  endpoint:
    path: /coder
    method: POST
    data_selector: output
    params: {}
notes:
- 'API requests follow the structure: https://api.pixlab.io/endpoint?param=val&param2=val2'
- Always safeguard your API keys. Ensure they are used only by authorized scripts
  and avoid exposing them in public repositories.
- Get your API Key at https://pixlab.io/dashboard
- PixLab API requires an API Key for access.
- Access 150+ production-ready REST API endpoints for Vision, Automation, VLMs, Media
  Analysis & Processing.
- To get started, create your API Key in the PixLab Console.
- SOD is suitable for deep learning on limited computational resource, embedded systems
  and IoT devices.
- SOD includes a comprehensive set of both classic and state-of-the-art deep-neural
  networks.
- Pre-trained models path must be accessible to the executable
- Assets comprise over 2GB of pre-trained models
- You can download the pre-trained assets from the Download section above. Once downloaded,
  extract the assets ZIP archive in a directory of your choice (usually the directory
  where your executable is located), and set the path via the Tiny Dream constructor
  or from the tinyDream::setAssetsPath() method.
- Encrypted API calls with mandatory credentials.
- All processing is performed entirely in-memory (RAM). No persistent storage is used.
- Supports both structured and unstructured documents, including non-MRZ IDs.
- Automate ID scanning and data extraction with PixLab’s ID Scan Platform.
- Enhance authentication and access control with FACEIO.
- Automate PDF creation with minimal effort
- Supports images, tables, charts, and custom fonts within your PDFs
- Provides a comprehensive suite of REST APIs for developers to integrate advanced
  language model functionalities into their applications.
- Effortlessly create beautiful images, testimonials, code snippets, QR codes, and
  more.
- No signup required! Just launch the app and start mapping instantly.
- The API supports features like background removal, image generation, and more.
- Convert files instantly with Convert Box, supports 239+ formats.
- Keep your files 100% secure with local conversion - no need to upload anything to
  the cloud.
- Supports batch processing for up to 1500 images per upload with a maximum individual
  file size of 100MB.
- Outputs include PNG with transparency or JPEG with customizable backgrounds.
- No persistent storage is used, and no logs are retained.
- All data scanning and extraction is performed entirely in-memory (RAM).
- If face cropping is required, connect your own AWS S3 bucket via the PixLab Console.
- All document images are processed entirely in-memory (RAM) and permanently deleted
  immediately after processing.
- DOCSCAN automatically corrects image orientation, rotation, and basic visual enhancements.
- All file conversions happen locally in your browser. Your files never leave your
  device, ensuring the highest level of privacy and security.
- SOD is designed for computational efficiency and with a strong focus on real-time
  applications.
- PixLab processes your data only with your consent in accordance with strict policies.
- You have the right to request the deletion of your personal information from our
  databases at any time.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Returns JSON object with link to generated PDF if blob parameter is not set.
- Get your API Key from https://pixlab.io/dashboard
- Get your API key from https://pixlab.io/dashboard
- DRAWTEXT is the sole endpoint needed to generate such image.
- Returns image binary contents when blob parameter is true.
- If you want to upload your image directly from your app, then submit a multipart/form-data
  POST request.
- Use https://api.pixlab.io/decrypt with your passphrase to decrypt
- Default export to LLM-friendly formats including Markdown and JSON for easy analysis.
- To facilitate direct image uploads, utilize multipart/form-data for POST requests.
- Responses include a score field indicating NSFW probability.
- Adds blur filter to image. This API endpoint is useful if mixed with some media
  analysis endpoints such as <nsfw> to censure (i.e. filter) offensive contents.
- By default, this API endpoint returns a JSON Object holding the link to the image
  output.
- Upload a local media file whether video or image to the pixlab.xyz storage cluster
  or to your own S3 Bucket if already connected from your dashboard.
- Only JPEG & PNG formats supported. Convert other formats using the <convert> endpoint.
- Only JPEG, PNG & BMP file format are supported.
- Only JPEG, PNG & BMP format are allowed.
- 'Return binary response when blob parameter is true (default: false)'
- Returns a JSON Object after each call only if the optional blob parameter is not
  set.
- The API returns application/json if the optional blob parameter is not set.
- The endpoint returns application/json unless the blob parameter is specified.
- Deprecated API endpoint. Use <crop> instead.
- Scales an image to the desired dimensions. Consider using <smartresize> for proportional
  & intelligent scaling of your images.
- By default, this API endpoint return a JSON Object holding the link to the image
  output.
- Returns image binary contents when true if blob parameter is set.
- Only JSON data is accepted for POST requests.
- Returns JSON with output image link by default. Set blob to true to receive binary
  media content instead.
- This API endpoint is a just wrapper around <thumbnail> with width & height set respectively
  to 320 and 240.
- Available in Prod Plan and higher.
- 'You can also embed your key in the WWW-Authenticate: HTTP header and omit this
  parameter if you want to.'
- Status code 200 indicates success. Any other code indicates failure with an appropriate
  error message.
- PixLab recommends that you connect your AWS S3 bucket via the dashboard so that
  any extracted face or MRZ crop is automatically stored on your S3 bucket rather
  than the PixLab one.
- This API endpoint is depreciated in favor of <drawrectangles>.
- Only JSON data is allowed for POST requests.
- Only JSON data is allowed for the request body.
- Returns JSON Object after each call only if the optional blob parameter is not set.
- Only JSON data is allowed.
- The optional blob parameter affects response format.
- The API returns a JSON Object after each call only if the optional blob parameter
  is omitted.
- Access 150+ production-ready API endpoints for vision, media analysis, and automation
- The drawtext endpoint expects the text to be displayed on TOP, CENTER, or BOTTOM
  of the target image.
- API requests return responses formatted as application/json.
- Access 150+ production-ready REST API endpoints.
- Supports 11,000+ document types from 197+ countries.
- Supports multiple languages and varying image sizes.
- Use multipart/form-data to directly upload your image from your app.
- BASE 64 encoded string representing the image contents is required to generate an
  image embedding vector.
- Output embedding vector dimension can be set to either 512 or 1024, defaulting to
  512.
- The text generation prompt can range from simple keywords and one-sentence summaries
  to more complex instructions and contextual information.
- The ANSWER LLM API endpoint provides a way to generate answers to short queries
  or questions using large language models.
- 'The input accepts various data types: a string, a list of strings. Text Input Constraints:
  Maximum 8192 tokens.'
- The API endpoint requires an API key for access.
errors:
- '400: Bad Request - Missing or invalid parameters.'
- '401: Unauthorized - Invalid or missing API Key.'
- '404: No Such Endpoint - Resource does not exist.'
- '405: Method Not Allowed - HTTP method not supported by the target API Endpoint.'
- '415: Unsupported Media Type - File format not supported.'
- '429: Too Many Requests - Rate limit exceeded.'
- '500: Internal Server Error - Temporary server-side issue.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API key or permissions'
- 'Error: Invalid API Key'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key or permissions.'
- '404 Not Found: Check the endpoint URL.'
- '429 Too Many Requests: Rate limit exceeded.'
- 'status: 200 - Success'
- 'status: 400 - Bad request'
- 'status: 401 - Unauthorized'
- 'status: 500 - Internal server error'
- '401 Unauthorized: Recheck API key or access permissions'
- '200: Success'
- Other codes indicate an error.
- '400 Bad Request: Check the image URL or file format.'
- '401 Unauthorized: Ensure the API key is correct.'
- '500 Internal Server Error: Retry the request.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'status not 200: Check the API key or parameters passed'
- 'Invalid API key: Check your API key and try again.'
- '400 Bad Request: Check input parameters'
- '401 Unauthorized: Check API key'
- '401 Unauthorized: Check your API key.'
- '400 Bad Request: Check your parameters'
- '401 Unauthorized: Invalid API Key'
- '500 Internal Server Error: Try again later'
- 'status: 200 indicates success, any other code indicates failure.'
- HTTP 200 indicates success. Any other code indicates failure.
- '401 Unauthorized: Recheck API key'
- 'ERROR: Status code not 200 indicates failure.'
- 'Error: Description when status ≠ 200'
- status code 200 indicates success, any other code indicates failure
- Any other code indicates failure.
- Other codes indicate failure.
- 'status: 200 indicates success, any other code indicates failure'
- '200: Indicates success, any other code indicates failure.'
- '200: Indicates success'
- Any other code indicates failure
- status code 200 indicates success, any other code indicates failure.
- '401 Unauthorized: Check your API key and ensure it is valid.'
- '401 Unauthorized: Check your API Key'
- '200: indicates success, any other code indicates failure.'
- '200: Successful request'
- '401: Unauthorized access'
- '400: Bad request'
- '200: Successful response'
- '401: Unauthorized access, check API key'
- '400: Bad request, check parameters'
- 'status: 200 indicates success. Any other code indicates failure.'
- '200: HTTP indicates success.'
- '400 Bad Request: Check the request format and parameters.'
- '401 Unauthorized: Ensure the API key is valid.'
- '500 Internal Server Error: Try again later.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.pixlab.io/
  auth:
    type: apikey
    location: header
    header_name: WWW-Authenticate
source_metadata: null
