resources:
- name: database
  endpoint:
    path: /services/data/vXX.X/sobjects/Database
    method: GET
    data_selector: records
    params: {}
- name: SAP ASE environment
  endpoint:
    path: /docs/latest/sap-ase-environment-and-data-sources
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
- name: jobs
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: db_partitions
  endpoint:
    path: /api/v1/db_partitions
    method: GET
    data_selector: partitions
- name: sql_server
  endpoint:
    path: /api/v1/sql_server
    method: GET
    data_selector: servers
- name: virtualization
  endpoint:
    path: /api/virtualization
    method: GET
    data_selector: records
    params: {}
- name: fixes_immediate_upgrade
  endpoint:
    path: /api/fixes/immediate
    method: GET
    data_selector: fixes
    params: {}
- name: security_fixes
  endpoint:
    path: /api/security/fixes
    method: GET
    data_selector: security_fixes
    params: {}
- name: fixes_after_upgrade
  endpoint:
    path: /api/fixes/after
    method: GET
    data_selector: fixes
    params: {}
- name: fixes_immediate
  endpoint:
    path: /fixed_issues/immediate
    method: GET
    data_selector: fixed_issues
    params: {}
- name: fixes_after_reboot
  endpoint:
    path: /fixed_issues/after_reboot
    method: GET
    data_selector: fixed_issues
    params: {}
- name: bug_fixes
  endpoint:
    path: /api/bug_fixes
    method: GET
    data_selector: fixes
- name: cipherconfig
  endpoint:
    path: /service/cipherconfig/connector
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: toolkit
  endpoint:
    path: /toolkit/operations
    method: GET
- name: system
  endpoint:
    path: /system/version
    method: GET
- name: user
  endpoint:
    path: /user
    method: GET
- name: source
  endpoint:
    path: /source/{ref}/disable
    method: POST
- name: MSSqlSnapshot
  endpoint:
    path: NA
    method: GET
- name: MSSqlDatabaseContainer
  endpoint:
    path: NA
    method: GET
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: alerts
  endpoint:
    path: /v1/alerts
    method: GET
    data_selector: records
    params: {}
- name: jobs
  endpoint:
    path: /v1/jobs
    method: GET
    data_selector: records
    params: {}
- name: Source
  endpoint:
    path: /source
    method: GET
- name: vdb
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: toolkit
  endpoint:
    path: /toolkit/operations
    method: GET
- name: system
  endpoint:
    path: /system/version
    method: GET
- name: user
  endpoint:
    path: /user
    method: GET
- name: source
  endpoint:
    path: /source/{ref}/disable
    method: POST
- name: MSSqlSnapshot
  endpoint:
    path: NA
    method: GET
- name: MSSqlDatabaseContainer
  endpoint:
    path: NA
    method: GET
- name: Source
  endpoint:
    path: /source
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: virtualDatabase
  endpoint:
    path: /services/data/vXX.X/sobjects/virtualDatabase
    method: GET
    data_selector: records
    params: {}
- name: environment
  endpoint:
    path: /api/v1/environments
    method: GET
    data_selector: environments
- name: ConnectorCiphers
  endpoint:
    path: /service/cipherconfig/connector
    method: API Type
- name: SourceEnvironment
  endpoint:
    path: /environment
    method: Operation
- name: Namespace
  endpoint:
    path: /namespace
    method: GET
- name: SerializationPoint
  endpoint:
    path: /replication/serializationpoint
    method: GET
- name: OciObjectStoreRepavePreviewParameters
  endpoint:
    path: /repave/preview
    method: GET
- name: GcpObjectStoreRepavePreviewParameters
  endpoint:
    path: /repave/preview
    method: GET
- name: BlobObjectStoreRepavePreviewParameters
  endpoint:
    path: /repave/preview
    method: GET
- name: S3ObjectStoreRepavePreviewParameters
  endpoint:
    path: /repave/preview
    method: GET
- name: OciObjectStoreRepaveApplyParameters
  endpoint:
    path: /repave/apply
    method: GET
- name: GcpObjectStoreRepaveApplyParameters
  endpoint:
    path: /repave/apply
    method: GET
- name: BlobObjectStoreRepaveApplyParameters
  endpoint:
    path: /repave/apply
    method: GET
- name: S3ObjectStoreRepaveApplyParameters
  endpoint:
    path: /repave/apply
    method: GET
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /docs/latest/datasets
    method: GET
    data_selector: records
    params: {}
- name: dSource management
  endpoint:
    path: /docs/latest/dsource-management
    method: GET
    data_selector: records
    params: {}
- name: virtual database management
  endpoint:
    path: /docs/latest/virtual-database-management
    method: GET
    data_selector: records
    params: {}
- name: environment
  endpoint:
    path: /services/data/vXX.X/sobjects/Environment
    method: GET
    data_selector: records
- name: EnvEncryptionConfig
  endpoint:
    path: /service/security/env_encryption
    method: GET
- name: ConnectorCiphers
  endpoint:
    path: /service/cipherconfig/connector
    method: GET
- name: SourceEnvironment
  endpoint:
    path: /environment
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: alert_profiles
  endpoint:
    path: /api/alert_profiles
    method: GET
    data_selector: profiles
- name: jobs
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: jobs
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
- name: Dataset
  endpoint:
    path: /services/data/vXX.X/datasets
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
- name: EnvEncryptionConfig
  endpoint:
    path: /service/security/env_encryption
    method: GET
- name: VDBs
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: EventFilter
  endpoint:
    path: /resources/json/delphix
    method: NA
    data_selector: eventTypes
- name: FluentdConfig
  endpoint:
    path: /resources/json/delphix/service/fluentd/configuration
    method: API Type
    data_selector: FluentdConfig
- name: oracle_data_source
  endpoint:
    path: /api/oracle/data_source
    method: GET
    data_selector: data
    params: {}
- name: sap_ase_data_source
  endpoint:
    path: /api/sap/ase/data_source
    method: GET
    data_selector: data
    params: {}
- name: NfsEncryptionConfig
  endpoint:
    path: /resources/json/delphix/service/nfs/encryption
    method: API Type
    data_selector: cipherSuite
    params: {}
- name: SourceEnvironment
  endpoint:
    path: /resources/json/delphix/environment
    method: Property
    data_selector: enableAllSources
    params: {}
- name: SourceEnvironment
  endpoint:
    path: /resources/json/delphix/environment
    method: Property
    data_selector: disableAllSources
    params: {}
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: records
- name: alert
  endpoint:
    path: /api/alerts
    method: GET
    data_selector: data
    params: {}
- name: job
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
- name: NfsEncryptionConfig
  endpoint:
    path: /resources/json/delphix/service/nfs/encryption
    method: GET
- name: SourceEnvironment
  endpoint:
    path: /resources/json/delphix/environment
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: TimeflowSnapshot
  endpoint:
    path: /snapshot
- name: Container
  endpoint:
    path: /database
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
    params: {}
- name: PublicSystemInfo
  endpoint:
    path: /about
    method: GET
- name: CloudStatus
  endpoint:
    path: /service/cloud
    method: GET
- name: FluentdPlugin
  endpoint:
    path: /service/fluentd/plugins
    method: GET
- name: OracleVirtualSource
  endpoint:
    path: NA
    method: GET
- name: OracleExportDBTimeflowPointTransferStrategy
  endpoint:
    path: NA
    method: GET
- name: OracleExportPDBTimeflowPointTransferStrategy
  endpoint:
    path: NA
    method: GET
- name: Host
  endpoint:
    path: /host
    method: GET
- name: SourceEnvironment
  endpoint:
    path: /environment
    method: GET
- name: AzureAuthentication
  endpoint:
    path: /resources/json/delphix/AzureAuthentication
    method: GET
- name: CpuUtilDatapoint
  endpoint:
    path: /resources/json/delphix/CpuUtilDatapoint
    method: GET
- name: AzureSecretsAuthentication
  endpoint:
    path: /resources/json/delphix/AzureSecretsAuthentication
    method: GET
- name: CipherSuite
  endpoint:
    path: /service/tls/cipherSuite
    method: GET
- name: Container
  endpoint:
    path: /database
    method: GET
- name: DeleteParameters
  endpoint:
    path: /resources/json/delphix/DeleteParameters
    method: GET
- name: DeletionDependency
  endpoint:
    path: /resources/json/delphix/DeletionDependency
    method: GET
- name: KeyPairCredential
  endpoint:
    path: /resources/json/delphix/KeyPairCredential
    method: GET
- name: NamedKeyPairCredential
  endpoint:
    path: /resources/json/delphix/NamedKeyPairCredential
    method: GET
- name: OracleExportTimeflowFilesystemLayout
  endpoint:
    path: /resources/json/delphix/OracleExportTimeflowFilesystemLayout
    method: GET
- name: RefreshParameters
  endpoint:
    path: /resources/json/delphix/RefreshParameters
    method: GET
- name: RollbackParameters
  endpoint:
    path: /resources/json/delphix/RollbackParameters
    method: GET
- name: SourceConfig
  endpoint:
    path: /sourceconfig
    method: GET
- name: SourceDisableParameters
  endpoint:
    path: /resources/json/delphix/SourceDisableParameters
    method: GET
- name: SourceEnableParameters
  endpoint:
    path: /resources/json/delphix/SourceEnableParameters
    method: GET
- name: SourceIngestionData
  endpoint:
    path: /resources/json/delphix/SourceIngestionData
    method: GET
- name: SourceStartParameters
  endpoint:
    path: /resources/json/delphix/SourceStartParameters
    method: GET
- name: SourceStopParameters
  endpoint:
    path: /resources/json/delphix/SourceStopParameters
    method: GET
- name: SourceTypeAggregateIngestedSize
  endpoint:
    path: /resources/json/delphix/SourceTypeAggregateIngestedSize
    method: GET
- name: Source
  endpoint:
    path: /source
    method: GET
- name: User
  endpoint:
    path: /user
    method: GET
- name: containerStorageInfo
  endpoint:
    path: /database
    method: GET
- name: snapshot
  endpoint:
    path: /snapshot
    method: GET
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: VDBs
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: PasswordVault
  endpoint:
    path: /service/passwordVault
    method: GET
    data_selector: records
- name: TimeZone
  endpoint:
    path: /timezone
    method: GET
    data_selector: records
- name: AzureAuthentication
  endpoint:
    path: NA
    method: NA
    data_selector: NA
    params: {}
- name: CpuUtilDatapoint
  endpoint:
    path: NA
    method: NA
    data_selector: NA
    params: {}
- name: AzureSecretsAuthentication
  endpoint:
    path: NA
    method: NA
    data_selector: NA
    params: {}
- name: CipherSuite
  endpoint:
    path: /service/tls/cipherSuite
    method: NA
    data_selector: NA
    params: {}
- name: Container
  endpoint:
    path: /database
    method: NA
    data_selector: NA
    params: {}
- name: DeleteParameters
  endpoint:
    path: NA
    method: NA
    data_selector: NA
    params: {}
- name: DeletionDependency
  endpoint:
    path: NA
    method: NA
    data_selector: NA
    params: {}
- name: KeyPairCredential
  endpoint:
    path: NA
    method: NA
    data_selector: NA
    params: {}
- name: NamedKeyPairCredential
  endpoint:
    path: NA
    method: NA
    data_selector: NA
    params: {}
- name: OracleExportTimeflowFilesystemLayout
  endpoint:
    path: NA
    method: NA
    data_selector: NA
    params: {}
- name: RefreshParameters
  endpoint:
    path: NA
    method: NA
    data_selector: NA
    params: {}
- name: RollbackParameters
  endpoint:
    path: NA
    method: NA
    data_selector: NA
    params: {}
- name: SourceConfig
  endpoint:
    path: /sourceconfig
    method: NA
    data_selector: NA
    params: {}
- name: SourceDisableParameters
  endpoint:
    path: NA
    method: NA
    data_selector: NA
    params: {}
- name: SourceEnableParameters
  endpoint:
    path: NA
    method: NA
    data_selector: NA
    params: {}
- name: SourceIngestionData
  endpoint:
    path: NA
    method: NA
    data_selector: NA
    params: {}
- name: SourceStartParameters
  endpoint:
    path: NA
    method: NA
    data_selector: NA
    params: {}
- name: SourceStopParameters
  endpoint:
    path: NA
    method: NA
    data_selector: NA
    params: {}
- name: SourceTypeAggregateIngestedSize
  endpoint:
    path: NA
    method: NA
    data_selector: NA
    params: {}
- name: Source
  endpoint:
    path: /source
    method: NA
    data_selector: NA
    params: {}
- name: User
  endpoint:
    path: /user
    method: NA
    data_selector: NA
    params: {}
- name: NfsConfig
  endpoint:
    path: /service/nfs
    method: GET
    data_selector: records
- name: SystemInfo
  endpoint:
    path: /System
    method: GET
    data_selector: records
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
    params: {}
- name: NetworkRoute
  endpoint:
    path: /network/route
    method: GET
- name: SourceEnvironment
  endpoint:
    path: /environment
    method: GET
- name: PasswordVault
  endpoint:
    path: /service/passwordVault
    method: GET
- name: TimeZone
  endpoint:
    path: /timezone
    method: GET
- name: alert
  endpoint:
    path: /services/data/vXX.X/alerts
    method: GET
    data_selector: records
- name: job
  endpoint:
    path: /services/data/vXX.X/jobs
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /api/dSource
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: VDB
  endpoint:
    path: /api/VDB
    method: GET
    data_selector: records
    params: {}
- name: ObjectStore
  endpoint:
    path: /storage/objectStorage
    method: ''
    data_selector: ''
    params: {}
- name: CloudEndpoint
  endpoint:
    path: /resources/json/delphix/CloudEndpoint
    method: GET
- name: FailbackCapability
  endpoint:
    path: /resources/json/delphix/FailbackCapability
    method: GET
- name: OracleLinkedSourceOperations
  endpoint:
    path: /resources/json/delphix/OracleLinkedSourceOperations
    method: GET
- name: SystemInfo
  endpoint:
    path: /resources/json/delphix/SystemInfo
    method: GET
- name: OracleBaseLinkData
  endpoint:
    path: /resources/json/delphix/OracleBaseLinkData
    method: GET
- name: OracleLinkedSource
  endpoint:
    path: /resources/json/delphix/OracleLinkedSource
    method: GET
- name: dSource management
  endpoint:
    path: /dsource-management
    method: GET
    data_selector: records
- name: Virtual database (VDB) management
  endpoint:
    path: /vdb-management
    method: GET
    data_selector: records
- name: Masking sensitive data
  endpoint:
    path: /masking-sensitive-data
    method: GET
    data_selector: records
- name: vdb
  endpoint:
    path: /vdb
    method: GET
    data_selector: records
- name: Container
  endpoint:
    path: /database
    method: GET
- name: EventsConfig
  endpoint:
    path: /service/events
    method: GET
- name: JobRetentionConfig
  endpoint:
    path: /job/retention
    method: GET
- name: SystemInfo
  endpoint:
    path: /system
    method: GET
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: virtual_database
  endpoint:
    path: /services/data/vXX.X/sobjects/VirtualDatabase
    method: GET
    data_selector: records
- name: NetworkRoute
  endpoint:
    path: /network/route
    method: GET
- name: SourceEnvironment
  endpoint:
    path: /environment
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: AdvancedSettingsInfo
  endpoint:
    path: /system/advancedSettings
    method: GET
- name: AppDataCompatibilityCriteria
  endpoint:
    path: /N/A
    method: GET
- name: OsAdminStatus
  endpoint:
    path: /osadmin/engineStatus
    method: GET
- name: ObjectStore
  endpoint:
    path: /storage/objectStorage
    method: GET
- name: ObjectStoreCacheHitsReport
  endpoint:
    path: /storage/objectStorage
    method: GET
- name: ObjectStoreTestResult
  endpoint:
    path: /storage/objectStorage
    method: GET
- name: ObjectStoreTest
  endpoint:
    path: /storage/objectStorage
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ObjectStore
  endpoint:
    path: /storage/objectStorage
    method: GET
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: AbstractToolkit
  endpoint:
    path: /toolkit
    method: GET
- name: CipherSuite
  endpoint:
    path: /service/tls/cipherSuite
    method: GET
- name: HttpConnectorConfig
  endpoint:
    path: /service/httpConnector
    method: GET
- name: OAuth2Config
  endpoint:
    path: /service/oauth2
    method: GET
- name: OracleLinkedSource
  endpoint:
    path: /N/A
    method: GET
- name: OracleSource
  endpoint:
    path: /N/A
    method: GET
- name: StorageDevice
  endpoint:
    path: /storage/device
    method: GET
- name: UnixHost
  endpoint:
    path: /N/A
    method: GET
- name: User
  endpoint:
    path: /user
    method: GET
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: BlobObjectStoreAccess
  endpoint:
    path: /storage/objectStorage
    method: N/A
    data_selector: N/A
    params: {}
- name: BlobObjectStoreAccessKey
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: BlobObjectStoreAccessManagedIdentities
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: ObjectStoreCacheHitsReport
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: ObjectStoreTestResult
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: ObjectStoreTest
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: ObjectStore
  endpoint:
    path: /storage/objectStorage
    method: Standard operations
    data_selector: N/A
    params: {}
- name: ObjectStore
  endpoint:
    path: /storage/objectStorage
    method: Root operations
    data_selector: N/A
    params: {}
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: environment
  endpoint:
    path: /services/data/vXX.X/sobjects/Environment
    method: GET
    data_selector: records
- name: VDBs
  endpoint:
    path: /v1/vdbs
    method: GET
    data_selector: records
    params: {}
- name: dSources
  endpoint:
    path: /v1/dsources
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: vdb
  endpoint:
    path: /services/data/vXX.X/sobjects/vdb
    method: GET
    data_selector: records
- name: PgSQLDBClusterConfigConnectivity
  endpoint:
    path: /sourceconfig
    method: GET
    data_selector: records
- name: OracleBaseDBConfig
  endpoint:
    path: /sourceconfig
    method: GET
    data_selector: records
- name: OracleLinkFromExternal
  endpoint:
    path: /sourceconfig
    method: GET
    data_selector: records
- name: ReplicationSecureList
  endpoint:
    path: /sourceconfig
    method: GET
    data_selector: records
- name: SNMPV3Manager
  endpoint:
    path: /service/snmp/v3/manager
    method: GET
    data_selector: records
- name: Source
  endpoint:
    path: /source
    method: GET
    data_selector: records
- name: AbstractToolkit
  endpoint:
    path: /toolkit
    method: GET
    data_selector: records
- name: environment
  endpoint:
    path: /api/v1/environments
    method: GET
    data_selector: data
    params: {}
- name: vdb
  endpoint:
    path: /api/v1/vdbs
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /api/alerts
    method: GET
    data_selector: alerts
- name: job
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: jobs
- name: X509Certificate
  endpoint:
    path: /service/certificate
    method: GET
- name: Oracle
  endpoint:
    path: /services/data/vXX.X/sobjects/Oracle
    method: GET
- name: SQL Server
  endpoint:
    path: /services/data/vXX.X/sobjects/SQLServer
    method: GET
- name: SAP ASE
  endpoint:
    path: /services/data/vXX.X/sobjects/SAPASE
    method: GET
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
    params: {}
- name: VDBs
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: alert
  endpoint:
    path: /api/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: job
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: jobs
    params: {}
- name: vdb
  endpoint:
    path: /services/api/v1/vdb
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: self_service_bookmark
  endpoint:
    path: /self-service/bookmarks
    method: GET
    data_selector: bookmarks
- name: self_service_container
  endpoint:
    path: /self-service/containers
    method: GET
    data_selector: containers
- name: self_service_database_template
  endpoint:
    path: /self-service/database-templates
    method: GET
    data_selector: databaseTemplates
- name: self_service_user
  endpoint:
    path: /self-service/users
    method: GET
    data_selector: users
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /dsource
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: VDB
  endpoint:
    path: /vdbs
    method: GET
    data_selector: vdbs
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: vDB
  endpoint:
    path: /services/data/vXX.X/sobjects/vDB
    method: GET
    data_selector: records
    params: {}
- name: InstallWorkbook_Azure
  endpoint:
    path: /InstallWorkbook_Azure
    method: GET
    data_selector: workbooks
- name: InstallWorkbook_VMware
  endpoint:
    path: /InstallWorkbook_VMware
    method: GET
    data_selector: workbooks
- name: InstallWorkbook_AWS
  endpoint:
    path: /InstallWorkbook_AWS
    method: GET
    data_selector: workbooks
- name: dSource
  endpoint:
    path: /resources/dsource
    method: GET
    data_selector: records
- name: virtualDatabase
  endpoint:
    path: /resources/virtualDatabase
    method: GET
    data_selector: records
- name: source_databases
  endpoint:
    path: /api/v1/source_databases
    method: GET
    data_selector: records
- name: vdbs
  endpoint:
    path: /api/v1/vdbs
    method: GET
    data_selector: records
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/vDB
    method: GET
    data_selector: records
    params: {}
- name: InstallWorkbooks
  endpoint:
    path: /installworkbooks
    method: GET
    data_selector: workbooks
    params: {}
- name: network_setup
  endpoint:
    path: /delphix/network/setup
    method: POST
    data_selector: settings
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: virtualDatabase
  endpoint:
    path: /services/data/vXX.X/sobjects/VirtualDatabase
    method: GET
    data_selector: records
    params: {}
- name: network_settings
  endpoint:
    path: /delphix/network/setup
    method: POST
    data_selector: settings
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: vdb_status
  endpoint:
    path: /vdbs/status
    method: GET
    data_selector: vdbStatus
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: Continuous Data Engine
  endpoint:
    path: /setup
    method: GET
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
- name: alert
  endpoint:
    path: /api/v1/alerts
    method: GET
    data_selector: alerts
- name: job
  endpoint:
    path: /api/v1/jobs
    method: GET
    data_selector: jobs
- name: Continuous Data Engine
  endpoint:
    path: /setup
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: virtual_database
  endpoint:
    path: /services/data/vXX.X/sobjects/VirtualDatabase
    method: GET
    data_selector: records
    params: {}
- name: bucket
  endpoint:
    path: /storage/v1/b
    method: GET
    data_selector: bucket
    params: {}
- name: dSource
  endpoint:
    path: /api/dSource
    method: GET
    data_selector: data
- name: VDB
  endpoint:
    path: /api/vdb
    method: GET
    data_selector: data
- name: dSource
  endpoint:
    path: /services/data/vXX.X/dsources
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: virtualDatabase
  endpoint:
    path: /services/data/vXX.X/virtualDatabases
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
    params: {}
- name: object_storage_permissions
  endpoint:
    path: /permissions/object_storage
    method: POST
    data_selector: permissions
    params:
      permissions:
      - s3:PutObject
      - s3:GetObject
      - s3:ListBucket
      - s3:ListObjects
      - s3:DeleteObject
      - s3:GetLifecycleConfiguration
- name: VDB
  endpoint:
    path: /vdbs
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
- name: dataset
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: datasets
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: on_premise_object_storage
  endpoint:
    params:
      AccessID: required
      AccessKey: required
      Region: optional
      Endpoint: required
      Bucket: required
- name: on_premise_object_storage
  endpoint:
    params:
      Access ID: ''
      Access Key: ''
      Region: ''
      Endpoint: ''
      Bucket: ''
- name: object_storage
  endpoint:
    path: /storage/objectStorage
    method: GET
- name: dataset
  endpoint:
    path: /services/data/vXX.X/sobjects/Dataset
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: dataset
  endpoint:
    path: /services/data/vXX.X/sobjects/Dataset
    method: GET
    data_selector: records
    params: {}
- name: VDBs
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: environment
  endpoint:
    path: /services/data/vXX.X/sobjects/Environment
    method: GET
    data_selector: records
    params: {}
- name: blob_object_store
  endpoint:
    path: /storage/objectStorage
    method: GET
    data_selector: accessCredentials
- name: VDBs
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /resources/dsource
    method: GET
    data_selector: records
- name: virtualDatabase
  endpoint:
    path: /resources/virtualDatabase
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /sap-ase/datasources
    method: GET
    data_selector: dataSources
- name: VDB
  endpoint:
    path: /sap-ase/vdbs
    method: GET
    data_selector: vdbs
- name: dSource
  endpoint:
    path: /api/dSource
    method: GET
    data_selector: data
    params: {}
- name: VMware Configuration
  endpoint:
    path: /vmware/configuration
    method: GET
    data_selector: configurations
    params: {}
- name: VMware Storage
  endpoint:
    path: /vmware/storage
    method: GET
    data_selector: storage
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: virtualDatabase
  endpoint:
    path: /services/data/vXX.X/sobjects/VirtualDatabase
    method: GET
    data_selector: records
- name: Delphix Engine
  endpoint:
    path: /delphix/engine
    method: GET
    data_selector: engine_info
    params: {}
- name: VDB
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /services/data/v1/dsources
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /services/data/v1/vdbs
    method: GET
    data_selector: records
- name: VDBs
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: virtual_database
  endpoint:
    path: /services/data/vXX.X/sobjects/VirtualDatabase
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /api/dsource
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /api/vdb
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: vdb
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
    params: {}
- name: SAP ASE environment
  endpoint:
    path: /sap-ase/environments
    method: GET
    data_selector: environments
- name: Linking data sources
  endpoint:
    path: /sap-ase/linking-data-sources
    method: POST
    data_selector: linking
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: virtual_database
  endpoint:
    path: /services/data/vXX.X/sobjects/VirtualDatabase
    method: GET
    data_selector: records
    params: {}
- name: SAP ASE environment
  endpoint:
    path: /sap-ase/environment
    method: GET
    data_selector: environment
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: records
- name: Delphix Engine Deployment
  endpoint:
    path: /deploy/delphix
    method: POST
    data_selector: deployment_info
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: VDB
  endpoint:
    path: /vdb
    method: GET
    data_selector: records
- name: CampaignMember
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: Contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: virtualDatabase
  endpoint:
    path: /services/data/vXX.X/sobjects/VirtualDatabase
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
- name: virtual_database
  endpoint:
    path: /v1/virtualDatabases
    method: GET
    data_selector: data
    params: {}
- name: vdb
  endpoint:
    path: /services/data/vXX.X/vdb
    method: GET
    data_selector: records
- name: alert
  endpoint:
    path: /services/data/vXX.X/alerts
    method: GET
    data_selector: records
- name: job
  endpoint:
    path: /services/data/vXX.X/jobs
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
    params: {}
- name: example_resource
  endpoint:
    path: /services/data/vXX.X/sobjects/ExampleResource
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: virtual_database
  endpoint:
    path: /services/data/vXX.X/sobjects/VirtualDatabase
    method: GET
    data_selector: records
- name: block_storage_volumes
  endpoint:
    path: /vpc-ext/storage/storageVolumes
    method: GET
    data_selector: volumes
    params: {}
- name: virtual_server_instances
  endpoint:
    path: /vpc-ext/compute/vs
    method: GET
    data_selector: instances
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
    params: {}
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: Delphix_Engine_Deployment
  endpoint:
    path: /vpc-ext/compute/images
    method: GET
- name: Block_Storage_Volumes
  endpoint:
    path: /vpc-ext/storage/storageVolumes
    method: GET
- name: dSource
  endpoint:
    path: /resources/dSource
    method: GET
    data_selector: resources
    params: {}
- name: vDB
  endpoint:
    path: /resources/vDB
    method: GET
    data_selector: resources
    params: {}
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: datasets
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /api/v1/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: job
  endpoint:
    path: /api/v1/jobs
    method: GET
    data_selector: jobs
    params: {}
- name: sysadmin
  endpoint:
    path: /user/sysadmin
    method: GET
    data_selector: Properties
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /api/alerts
    method: GET
    data_selector: alerts
- name: job
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: jobs
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: environment
  endpoint:
    path: /services/data/vXX.X/sobjects/Environment
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: VDB
  endpoint:
    path: /vdb
    method: GET
    data_selector: records
    params: {}
- name: user_management
  endpoint:
    path: /manage/users
    method: GET
    data_selector: users
    params: {}
- name: environment
  endpoint:
    path: /api/v1/environments
    method: GET
    data_selector: environments
    params: {}
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/DSource
    method: GET
    data_selector: records
- name: vDatabase
  endpoint:
    path: /services/data/vXX.X/sobjects/VDatabase
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /v2/dsource
    method: GET
    data_selector: data
    params: {}
- name: VDB
  endpoint:
    path: /v2/vdb
    method: GET
    data_selector: data
    params: {}
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: data_source
  endpoint:
    path: /services/data/vXX.X/sobjects/DataSource
    method: GET
    data_selector: records
    params: {}
- name: vdb_status
  endpoint:
    path: /vdbs/status
    method: GET
    data_selector: records
- name: environment
  endpoint:
    path: /services/data/vXX.X/sobjects/Environment
    method: GET
    data_selector: records
- name: dataset
  endpoint:
    path: /services/data/v1/datasets
    method: GET
    data_selector: datasets
- name: SAP ASE environment
  endpoint:
    path: /sap-ase-environment
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: records
- name: self_service_bookmark
  endpoint:
    path: /self-service/bookmarks
    method: GET
- name: self_service_container
  endpoint:
    path: /self-service/containers
    method: GET
- name: self_service_template
  endpoint:
    path: /self-service/templates
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: self_service_bookmark
  endpoint:
    path: /self-service/bookmarks
    method: GET
- name: self_service_container
  endpoint:
    path: /self-service/containers
    method: GET
- name: self_service_database_template
  endpoint:
    path: /self-service/database-templates
    method: GET
- name: self_service_user
  endpoint:
    path: /self-service/users
    method: GET
- name: latency_test
  endpoint:
    path: /network/test/latency/create
    method: POST
    data_selector: Properties
    params:
      requestCount: 20
      requestSize: 8B
- name: throughput_test
  endpoint:
    path: /network/test/throughput/create
    method: POST
    data_selector: Properties
    params: {}
- name: delphix_session_protocol_test
  endpoint:
    path: /network/test/delphix/session/protocol/create
    method: POST
    data_selector: Properties
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /resources/dSource
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /resources/VDB
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: latency_test
  endpoint:
    path: /network/test/latency
    method: POST
    data_selector: properties
    params:
      requestCount: 20
      requestSize: 8B
- name: throughput_test
  endpoint:
    path: /network/test/throughput
    method: POST
    data_selector: properties
    params: {}
- name: delphix_session_protocol_test
  endpoint:
    path: /network/test/delphix
    method: POST
    data_selector: properties
    params: {}
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: dataset
  endpoint:
    path: /services/data/vXX.X/sobjects/Dataset
    method: GET
    data_selector: records
    params: {}
- name: VDBs
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: dsp_test
  endpoint:
    path: /dsp/test
    method: POST
    data_selector: results
    params:
      duration: 30
      block_size: null
      number_of_connections: null
      queue_depth: null
      direction: null
      traffic_options: null
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: environment
  endpoint:
    path: /sap-ase/environments
    method: GET
    data_selector: environments
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /api/v1/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: job
  endpoint:
    path: /api/v1/jobs
    method: GET
    data_selector: jobs
    params: {}
- name: SAP ASE environment
  endpoint:
    path: /sap-ase/environments
    method: GET
- name: SQL Server environment
  endpoint:
    path: /sql-server/environments
    method: GET
- name: alert
  endpoint:
    path: /v2/alerts
    method: GET
    data_selector: alerts
- name: job
  endpoint:
    path: /v2/jobs
    method: GET
    data_selector: jobs
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: network_interface
  endpoint:
    path: /network/interface
    method: GET
    data_selector: addresses
    params: {}
- name: dSource
  endpoint:
    path: /services/data/v1.0/dsources
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: capacity_system_historical
  endpoint:
    path: /capacity/system/historical
    method: GET
    data_selector: TIMESTAMP
    params:
      startDate: '2016-09-01T00:00:00.000Z'
      endDate: '2016-09-01T08:00:00.000Z'
- name: database
  endpoint:
    path: /api/v1/databases
    method: GET
    data_selector: databases
    params: {}
- name: table
  endpoint:
    path: /api/v1/tables
    method: GET
    data_selector: tables
    params: {}
- name: alert
  endpoint:
    path: /api/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: job
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: jobs
    params: {}
- name: environment_attributes
  endpoint:
    path: /services/data/vXX.X/sobjects/EnvironmentAttributes
    method: GET
    data_selector: records
    params: {}
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /api/storage_capacity/datasets
    method: GET
    data_selector: datasets
    params: {}
- name: snapshots
  endpoint:
    path: /api/storage_capacity/snapshots
    method: GET
    data_selector: snapshots
    params: {}
- name: held_space
  endpoint:
    path: /api/storage_capacity/held_space
    method: GET
    data_selector: held_space
    params: {}
- name: received_replicas
  endpoint:
    path: /api/storage_capacity/received_replicas
    method: GET
    data_selector: received_replicas
    params: {}
- name: datasets
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: datasets
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: migration
  endpoint:
    path: /storage/migrate
    method: POST
    data_selector: Properties
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: capacity_system_historical
  endpoint:
    path: /capacity/system/historical
    method: GET
    data_selector: TIMESTAMP SOURCE.ACTUALSPACE VIRTUAL.ACTUALSPACE
    params:
      startDate: <time>
      endDate: <time>
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: vdbs
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
- name: SNMP Configuration
  endpoint:
    path: /snmp/config
    method: POST
    data_selector: result
    params: {}
- name: datasets
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: storage_migration
  endpoint:
    path: /storage/migrate
    method: POST
    data_selector: Properties
    params: {}
- name: system_events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
    params: {}
- name: audit_log
  endpoint:
    path: /services/data/vXX.X/sobjects/AuditLog
    method: GET
    data_selector: records
    params: {}
- name: environment
  endpoint:
    path: /api/v1/environments
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: datasets
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: datasets
    params: {}
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: syslog_configuration
  endpoint:
    path: /api/syslog/configuration
    method: POST
    data_selector: response
    params: {}
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: records
- name: VDBs
  endpoint:
    path: /api/v1/vdbs
    method: GET
    data_selector: vdbs
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: SAP ASE environment
  endpoint:
    path: /sap-ase-environment
    method: GET
    data_selector: data
    params: {}
- name: jobs
  endpoint:
    path: /jobs
    method: GET
- name: alert_profile
  endpoint:
    path: /alert/profiles
    method: POST
    data_selector: profiles
    params: {}
- name: faults
  endpoint:
    path: /api/faults
    method: GET
    data_selector: faults
    params: {}
- name: vdb
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: dSource
  endpoint:
    path: /dsources
    method: GET
    data_selector: records
    params: {}
- name: plugins
  endpoint:
    path: /resources/json/delphix/service/insight/plugins
    method: GET
- name: requestUploadToken
  endpoint:
    path: /resources/json/delphix/service/insight/plugins/requestUploadToken
    method: POST
- name: uploadPlugin
  endpoint:
    path: /resources/json/delphix/data/upload
    method: POST
- name: downloadFluentdLog
  endpoint:
    path: /service/fluentd/plugins/downloadFluentdLog
    method: GET
- name: audit_log
  endpoint:
    path: /api/audit/logs
    method: GET
    data_selector: auditRecords
- name: events
  endpoint:
    path: /services/collector/event
    method: POST
    data_selector: ''
    params:
      index: delphix_events
- name: metrics
  endpoint:
    path: /services/collector/metric
    method: POST
    data_selector: ''
    params:
      index: delphix_metrics
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /services/data/vXX.X/events
    method: GET
    data_selector: records
    params: {}
- name: metrics
  endpoint:
    path: /services/data/vXX.X/metrics
    method: GET
    data_selector: records
    params: {}
- name: system.cpu.util.pct
  endpoint:
    path: /metrics/system.cpu.util.pct
    method: GET
    data_selector: metric
    params: {}
- name: system.disk.ops.count
  endpoint:
    path: /metrics/system.disk.ops.count
    method: GET
    data_selector: metric
    params: {}
- name: system.net.total.bytes
  endpoint:
    path: /metrics/system.net.total.bytes
    method: GET
    data_selector: metric
    params: {}
- name: system.nfs.ops.count
  endpoint:
    path: /metrics/system.nfs.ops.count
    method: GET
    data_selector: metric
    params: {}
- name: system.iscsi.ops.count
  endpoint:
    path: /metrics/system.iscsi.ops.count
    method: GET
    data_selector: metric
    params: {}
- name: system.tcp.total.bytes
  endpoint:
    path: /metrics/system.tcp.total.bytes
    method: GET
    data_selector: metric
    params: {}
- name: system.dataset.total.bytes
  endpoint:
    path: /metrics/system.dataset.total.bytes
    method: GET
    data_selector: metric
    params: {}
- name: system.capacity.source.size
  endpoint:
    path: /metrics/system.capacity.source.size
    method: GET
    data_selector: metric
    params: {}
- name: system.capacity.consumer.size
  endpoint:
    path: /metrics/system.capacity.consumer.size
    method: GET
    data_selector: metric
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
    params: {}
- name: data_source
  endpoint:
    path: /services/data/vXX.X/sobjects/DataSource
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: SMTP Gateway Configuration
  endpoint:
    path: /outbound/connectivity
    method: POST
    data_selector: settings
    params: {}
- name: Alert Profiles
  endpoint:
    path: /alert/profiles
    method: POST
    data_selector: profiles
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: requestUploadToken
  endpoint:
    path: /resources/json/delphix/service/insight/plugins/requestUploadToken
    method: POST
    data_selector: result
    params: {}
- name: downloadFluentdLog
  endpoint:
    path: /service/fluentd/plugins/downloadFluentdLog
    method: GET
    data_selector: log
    params: {}
- name: dataset
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: records
- name: VDBs
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
    params: {}
- name: dSources
  endpoint:
    path: /dsources
    method: GET
    data_selector: records
    params: {}
- name: data_source
  endpoint:
    path: /services/data/vXX.X/sobjects/DataSource
    method: GET
    data_selector: records
    params: {}
- name: environment
  endpoint:
    path: /services/data/vXX.X/sobjects/Environment
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /services/collector/event
    method: POST
    data_selector: event
    params:
      index: delphix_events
- name: metrics
  endpoint:
    path: /services/collector/event
    method: POST
    data_selector: metric
    params:
      index: delphix_metrics
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /api/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: jobs
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: jobs
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
- name: action_event
  endpoint:
    path: /delphix/events/action
    method: GET
    data_selector: event
    params: {}
- name: job_event
  endpoint:
    path: /delphix/events/job
    method: GET
    data_selector: event
    params: {}
- name: fault_event
  endpoint:
    path: /delphix/events/fault
    method: GET
    data_selector: event
    params: {}
- name: alert_event
  endpoint:
    path: /delphix/events/alert
    method: GET
    data_selector: event
    params: {}
- name: alert
  endpoint:
    path: /api/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: job
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: jobs
    params: {}
- name: system.cpu.util.pct
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: system.disk.ops.count
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: system.net.total.bytes
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: system.nfs.ops.count
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: system.iscsi.ops.count
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: system.tcp.total.bytes
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: system.dataset.total.bytes
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: system.capacity.source.size
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: system.capacity.consumer.size
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: NFS_OPS
  endpoint:
    path: /analytics
    method: POST
    data_selector: datapointStreams
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: NFS_OPS
  endpoint:
    path: /analytics
    method: POST
    data_selector: datapoints
    params:
      statisticType: NFS_OPS
      collectionInterval: 1
- name: DISK_OPS
  endpoint:
    path: /analytics
    method: POST
    data_selector: datapoints
    params:
      statisticType: DISK_OPS
      collectionInterval: 1
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: dataset
  endpoint:
    path: /services/data/vXX.X/sobjects/Dataset
    method: GET
    data_selector: records
- name: storage_test
  endpoint:
    path: /storage/test
    method: POST
    data_selector: STORAGE_TEST-1
    params: {}
- name: storage_test_results
  endpoint:
    path: /storage/test/result
    method: GET
    data_selector: Test Results
    params:
      test_id: STORAGE_TEST-1
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
    params: {}
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: nfs_ops_latency
  endpoint:
    path: /analytics
    method: POST
    data_selector: datapointStreams
    params:
      statisticType: NFS_OPS
      collectionInterval: 10
      collectionAxes: latency
- name: nfs_ops_read_write
  endpoint:
    path: /analytics
    method: POST
    data_selector: datapointStreams
    params:
      statisticType: NFS_OPS
      collectionInterval: 10
      collectionAxes: op,latency
      axisConstraints:
        latency:
          type: IntegerGreaterThanConstraint
          greaterThan: 100000000
- name: nfs_ops_write_clients
  endpoint:
    path: /analytics
    method: POST
    data_selector: datapointStreams
    params:
      statisticType: NFS_OPS
      collectionInterval: 10
      collectionAxes: size,client
      axisConstraints:
      - latency:
          type: IntegerGreaterThanConstraint
          greaterThan: 100000000
      - op:
          type: StringEqualConstraint
          equals: write
- name: SAP ASE Environment
  endpoint:
    path: /sap_ase/environment
    method: GET
    data_selector: data
    params: {}
- name: SAP ASE VDB
  endpoint:
    path: /sap_ase/vdb
    method: GET
    data_selector: data
    params: {}
- name: nfs_ops_slice
  endpoint:
    path: /analytics
    method: POST
    data_selector: datapointStreams
    params:
      statisticType: NFS_OPS
      collectionInterval: 1
      collectionAxes: latency
- name: disk_ops_slice
  endpoint:
    path: /analytics
    method: POST
    data_selector: datapointStreams
    params:
      statisticType: DISK_OPS
      collectionInterval: 1
      collectionAxes: latency
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
    params: {}
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
    params: {}
- name: cache_hits_report
  endpoint:
    path: /storage/objectStorage/cacheHitsReport
    method: GET
    data_selector: json
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: storage_test
  endpoint:
    path: /storage/test
    method: POST
    data_selector: results
    params: {}
- name: vdb
  endpoint:
    path: /vdbs
    method: GET
    data_selector: data
    params: {}
- name: dsource
  endpoint:
    path: /dsources
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /services/alerts
    method: GET
    data_selector: records
- name: job
  endpoint:
    path: /services/jobs
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /services/dsources
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /services/vdbs
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: SAP ASE environment
  endpoint:
    path: /sap-ase/environments
    method: GET
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: cache_hits_report
  endpoint:
    path: /storage/objectStorage/cacheHitsReport
    method: GET
    data_selector: json
- name: environment
  endpoint:
    path: /services/data/vXX.X/sobjects/Environment
    method: GET
    data_selector: records
    params: {}
- name: environment
  endpoint:
    path: /services/data/vXX.X/sobjects/Environment
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: environment
  endpoint:
    path: /api/environment
    method: GET
    data_selector: data
    params: {}
- name: database
  endpoint:
    path: /api/database
    method: GET
    data_selector: data
    params: {}
- name: dSource
  endpoint:
    path: /resources/dsource
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /resources/vdb
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /api/dsource
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /api/vdb
    method: GET
    data_selector: records
- name: dSource management
  endpoint:
    path: /docs/latest/dsource-management
    method: GET
- name: VDB management
  endpoint:
    path: /docs/latest/virtual-database-vdb-management
    method: GET
- name: hook operations
  endpoint:
    path: /docs/latest/hook-operations
    method: GET
- name: audit logs
  endpoint:
    path: /docs/latest/audit-logs
    method: GET
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: alert
  endpoint:
    path: /api/alerts
    method: GET
    data_selector: records
- name: job
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: dataset
  endpoint:
    path: /api/v1/dataset
    method: GET
    data_selector: datasets
    params: {}
- name: vdb_status
  endpoint:
    path: /vdb/status
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: vdbs
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: vdb
  endpoint:
    path: /services/data/vXX.X/sobjects/vdb
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: general_outbound_ports
  endpoint:
    path: /network/security/general/outbound
    method: GET
    data_selector: ports
    params: {}
- name: general_inbound_ports
  endpoint:
    path: /network/security/general/inbound
    method: GET
    data_selector: ports
    params: {}
- name: datasets
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: password_vault
  endpoint:
    path: /resources/json/delphix/service/passwordVault
    method: POST
    data_selector: vaults
    params: {}
- name: host_user
  endpoint:
    path: /api/host_users
    method: POST
    data_selector: host_users
    params:
      vault: CYBERARK_PASSWORD_VAULT-1
      vaultCredentialId: safe=test;folder=root;object=UnixSSH-sybase
- name: database_user
  endpoint:
    path: /api/database_users
    method: POST
    data_selector: database_users
    params:
      vault: CYBERARK_PASSWORD_VAULT-2
      vaultCredentialId: safe=test;folder=root;object=Database-MSSql-addtully
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: VDBs
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: dataset
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: records
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
- name: alerts
  endpoint:
    path: /api/v1/alerts
    method: GET
    data_selector: alerts
- name: jobs
  endpoint:
    path: /api/v1/jobs
    method: GET
    data_selector: jobs
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
- name: vdb
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: virtual_database
  endpoint:
    path: /services/data/vXX.X/vdb
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: password_vault
  endpoint:
    path: /resources/json/delphix/service/passwordVault
    method: POST
    data_selector: properties
- name: primaryUser
  endpoint:
    path: /host-env
    method: POST
    data_selector: primaryUser
    params: {}
- name: linkParameters
  endpoint:
    path: /link-parameters
    method: POST
    data_selector: linkData
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: vdb
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: snapshot
  endpoint:
    path: /snapshots
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params: {}
- name: dataset
  endpoint:
    path: /services/data/vXX.X/sobjects/Dataset
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: environment
  endpoint:
    path: /services/data/vXX.X/sobjects/Environment
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
- name: VDBs
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
    params: {}
- name: dsource
  endpoint:
    path: /services/data/vXX.X/sobjects/dsource
    method: GET
    data_selector: records
- name: vdb
  endpoint:
    path: /services/data/vXX.X/sobjects/vdb
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /api/alerts
    method: GET
    data_selector: alerts
- name: job
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: jobs
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: repave_prepare
  endpoint:
    path: /repave/prepare
    method: POST
    data_selector: jobId
    params:
      ignoreDisableSourcesFailures: false
      enableSourcesOnFailure: false
- name: repave_apply
  endpoint:
    path: /repave/apply
    method: POST
    data_selector: jobId
    params: {}
- name: repave_status
  endpoint:
    path: /repave
    method: GET
    data_selector: state
    params: {}
- name: repave_preview
  endpoint:
    path: /repave/preview
    method: POST
    data_selector: summary
    params: {}
- name: session
  endpoint:
    path: /session
    method: POST
    data_selector: sessionId
    params: {}
- name: login
  endpoint:
    path: /login
    method: POST
    data_selector: sessionId
    params:
      username: '{{sysadmin_user}}'
      password: '{{sysadmin_pwd}}'
- name: vdb
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /dsources
    method: GET
    data_selector: records
- name: repave_prepare
  endpoint:
    path: /resources/json/delphix/repave/prepare
    method: POST
    data_selector: jobId
    params:
      ignoreDisableSourcesFailures: false
      enableSourcesOnFailure: false
- name: repave_apply
  endpoint:
    path: /resources/json/delphix/repave/apply
    method: POST
    data_selector: jobId
    params:
      type: S3ObjectStoreRepaveApplyParameters
- name: repave_preview
  endpoint:
    path: /resources/json/delphix/repave/preview
    method: POST
    data_selector: state
    params: {}
- name: repave_status
  endpoint:
    path: /resources/json/delphix/repave
    method: GET
    data_selector: state
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
- name: password_policy
  endpoint:
    path: /api/password_policy
    method: GET
    data_selector: policies
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: environment
  endpoint:
    path: /api/v1/environments
    method: GET
    data_selector: data
    params: {}
- name: VDBs
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /dsources
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: snapshot
  endpoint:
    path: /snapshots
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /api/dsource
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /api/vdb
    method: GET
    data_selector: records
- name: repave_prepare
  endpoint:
    path: /repave/prepare
    method: POST
    data_selector: jobId
    params:
      ignoreDisableSourcesFailures: false
      enableSourcesOnFailure: false
- name: repave_apply
  endpoint:
    path: /repave/apply
    method: POST
    data_selector: jobId
    params: {}
- name: repave_status
  endpoint:
    path: /repave
    method: GET
    data_selector: state
    params: {}
- name: repave_preview
  endpoint:
    path: /repave/preview
    method: POST
    data_selector: summary
    params: {}
- name: establish_session
  endpoint:
    path: /session
    method: POST
    data_selector: sessionId
    params:
      type: APISession
      version:
        type: APIVersion
        major: '{{api_version_major}}'
        minor: '{{api_version_minor}}'
        micro: '{{api_version_micro}}'
- name: login
  endpoint:
    path: /login
    method: POST
    data_selector: loginStatus
    params:
      type: LoginRequest
      username: '{{sysadmin_user}}'
      password: '{{sysadmin_pwd}}'
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /resources/dsource
    method: GET
    data_selector: data
    params: {}
- name: VDB
  endpoint:
    path: /resources/vdb
    method: GET
    data_selector: data
    params: {}
- name: repave_prepare
  endpoint:
    path: /repave/prepare
    method: POST
    data_selector: jobId
    params:
      ignoreDisableSourcesFailures: false
      enableSourcesOnFailure: false
- name: repave_apply
  endpoint:
    path: /repave/apply
    method: POST
    data_selector: jobId
    params:
      domain0PoolGUID: '{{domain0PoolGUID}}'
- name: repave_status
  endpoint:
    path: /repave
    method: GET
    data_selector: state
- name: repave_preview
  endpoint:
    path: /repave/preview
    method: POST
    data_selector: state
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
    params: {}
- name: environment_users
  endpoint:
    path: /manage/environments/users
    method: POST
    data_selector: users
    params: {}
- name: privilege_elevation_profiles
  endpoint:
    path: /manage/privilege_profiles
    method: GET
    data_selector: profiles
    params: {}
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: records
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /dsources
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: snapshot
  endpoint:
    path: /snapshots
    method: GET
    data_selector: records
- name: dataset
  endpoint:
    path: /services/data/vXX.X/sobjects/Dataset
    method: GET
    data_selector: records
- name: environment
  endpoint:
    path: /services/data/vXX.X/sobjects/Environment
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
    params: {}
- name: enable_all_datasets
  endpoint:
    path: /environment/<environment>/enableAllSources
    method: POST
- name: disable_all_datasets
  endpoint:
    path: /environment/<environment>/disableAllSources
    method: POST
- name: env_encryption_ciphersuite
  endpoint:
    path: /service/security/env_encryption
    method: GET
- name: env_encryption_ciphersuite_post
  endpoint:
    path: /service/security/env_encryption
    method: POST
- name: datasets
  endpoint:
    path: /docs/latest/datasets
    method: GET
    data_selector: records
    params: {}
- name: oracle_data_sources
  endpoint:
    path: /docs/latest/oracle-data-sources
    method: GET
    data_selector: records
    params: {}
- name: sap_ase_data_sources
  endpoint:
    path: /docs/latest/sap-ase-data-sources
    method: GET
    data_selector: records
    params: {}
- name: dataset
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: records
    params: {}
- name: dataset
  endpoint:
    path: /services/data/vXX.X/datasets
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: vdb
  endpoint:
    path: /api/vdbs
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: environment
  endpoint:
    path: /api/v1/environments
    method: GET
    data_selector: environments
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /api/v1/datasources
    method: GET
    data_selector: data
    params: {}
- name: VDB
  endpoint:
    path: /api/v1/vdbs
    method: GET
    data_selector: data
    params: {}
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
- name: environment_users
  endpoint:
    path: /manage/environments/users
    method: POST
    data_selector: users
    params: {}
- name: privilege_elevation_profiles
  endpoint:
    path: /manage/privilege_elevation_profiles
    method: POST
    data_selector: profiles
    params: {}
- name: data_source
  endpoint:
    path: /services/data/vXX.X/sobjects/DataSource
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: environment
  endpoint:
    path: /docs/latest/sap-ase-environment-and-data-sources
    method: GET
- name: Enable all datasets for an environment
  endpoint:
    path: /environment/<environment>/enableAllSources
    method: POST
    params: {}
- name: Disable all datasets for an environment
  endpoint:
    path: /environment/<environment>/disableAllSources
    method: POST
    params: {}
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: user_management
  endpoint:
    path: /user_management
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: VDBs
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: DB2
  endpoint:
    path: /hostchecker/db2
    method: POST
- name: Oracle EBS
  endpoint:
    path: /hostchecker/oracle-ebs
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: snapshot
  endpoint:
    path: /v1/snapshots
    method: GET
    data_selector: records
    params: {}
- name: VDB Operations
  endpoint:
    path: /vdb/operations
    method: POST
    data_selector: operations
    params: {}
- name: Provision VDB
  endpoint:
    path: /vdb/provision
    method: POST
    data_selector: provision
    params: {}
- name: Disable VDB
  endpoint:
    path: /vdb/disable
    method: POST
    data_selector: disable
    params: {}
- name: Enable VDB
  endpoint:
    path: /vdb/enable
    method: POST
    data_selector: enable
    params: {}
- name: Refresh VDB
  endpoint:
    path: /vdb/refresh
    method: POST
    data_selector: refresh
    params: {}
- name: Rewind VDB
  endpoint:
    path: /vdb/rewind
    method: POST
    data_selector: rewind
    params: {}
- name: Migrate VDB
  endpoint:
    path: /vdb/migrate
    method: POST
    data_selector: migrate
    params: {}
- name: Upgrade VDB
  endpoint:
    path: /vdb/upgrade
    method: POST
    data_selector: upgrade
    params: {}
- name: Delete VDB
  endpoint:
    path: /vdb/delete
    method: DELETE
    data_selector: delete
    params: {}
- name: Force Delete VDB
  endpoint:
    path: /vdb/force-delete
    method: DELETE
    data_selector: force-delete
    params: {}
- name: Export VDB (V2P)
  endpoint:
    path: /vdb/export
    method: POST
    data_selector: export
    params: {}
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: VDBs
  endpoint:
    path: /vdbs
    method: GET
    data_selector: vdbs
- name: network_setup
  endpoint:
    path: /delphix/network/setup
    method: POST
    data_selector: networkSettings
    params:
      defaultRoute: 192.168.1.1
      dhcp: false
      dnsDomain: example.com
      dnsServers: 192.168.1.1
      hostname: Delphix
      primaryAddress: 192.168.1.100/24
- name: vdb
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: hostchecker
  endpoint:
    path: /hostchecker
    method: GET
    data_selector: checks
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: data_source
  endpoint:
    path: /api/v1/data_source
    method: GET
    data_selector: dataSources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: VDBs
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: RunExpect
  endpoint:
    path: /RunExpect
    method: POST
    data_selector: output
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /resources/dsource
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /resources/vdb
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /api/dSource
    method: GET
    data_selector: records
    params: {}
- name: VDB
  endpoint:
    path: /api/vdb
    method: GET
    data_selector: records
    params: {}
- name: environment
  endpoint:
    path: /services/data/vXX.X/sobjects/Environment
    method: GET
    data_selector: records
    params: {}
- name: dataset
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: datasets
    params: {}
- name: VDBs
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: environment_attributes
  endpoint:
    path: /manage/environments/attributes
    method: GET
    data_selector: attributes
    params: {}
- name: oracle_environment_attributes
  endpoint:
    path: /manage/oracle/environments/attributes
    method: GET
    data_selector: attributes
    params: {}
- name: Apache Cassandra
  endpoint:
    path: https://help.delphix.com/eh/current/content/apache_cassandra_data_sources.htm
    method: GET
- name: CockroachDB
  endpoint:
    path: https://help.delphix.com/eh/current/content/cockroachdb_data_sources.htm
    method: GET
- name: Couchbase Server
  endpoint:
    path: https://help.delphix.com/eh/current/content/couchbase_data_sources.htm
    method: GET
- name: IBM Db2 (for Linux and Unix)
  endpoint:
    path: https://help.delphix.com/eh/current/content/ibm_db2_data_sources.htm
    method: GET
- name: IBM Db2 (for z/OS)
  endpoint:
    path: https://www.popup-mainframe.com/delphix/
    method: GET
- name: Microsoft SQL Server
  endpoint:
    path: ../../docs/latest/sql-server-data-sources
    method: GET
- name: Microsoft SQL Server on Linux
  endpoint:
    path: https://help.delphix.com/eh/current/content/microsoft_sql_server_on_linux_data_sources.htm
    method: GET
- name: Microsoft SQL Server Backup Ingestion
  endpoint:
    path: https://delphix.github.io/mssql_plugin_doc/
    method: GET
- name: MongoDB
  endpoint:
    path: https://help.delphix.com/eh/current/content/mongodb_data_sources.htm
    method: GET
- name: MySQL
  endpoint:
    path: https://help.delphix.com/eh/current/content/mysql_data_sources.htm
    method: GET
- name: Oracle
  endpoint:
    path: ../../docs/latest/oracle-data-sources
    method: GET
- name: Oracle Backup Ingestion (OBI)
  endpoint:
    path: https://delphix.github.io/obi-plugin/
    method: GET
- name: Oracle E-Business Suite (EBS)
  endpoint:
    path: https://help.delphix.com/eh/current/content/oracle_e_business_suite__ebs__data_sources.htm
    method: GET
- name: PostgreSQL
  endpoint:
    path: https://help.delphix.com/eh/current/content/postgresql_data_sources.htm
    method: GET
- name: SAP Adaptive Server Enterprise (ASE)
  endpoint:
    path: ../../docs/latest/sap-ase-data-sources
    method: GET
- name: SAP HANA
  endpoint:
    path: https://help.delphix.com/eh/current/content/sap_hana_data_sources.htm
    method: GET
- name: SAP IQ
  endpoint:
    path: https://delphix.github.io/SAPIQ/
    method: GET
- name: Unstructured Files (vFiles)
  endpoint:
    path: ../../docs/latest/unstructured-files-and-app-data
    method: GET
- name: YugabyteDB
  endpoint:
    path: https://help.delphix.com/eh/current/content/yugabytedb_data_sources.htm
    method: GET
- name: dSource
  endpoint:
    path: /services/data/vXX.X/dsources
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /services/data/vXX.X/vdbs
    method: GET
    data_selector: records
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
    params: {}
- name: jobs
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: network_setup
  endpoint:
    path: /delphix/network/setup
    method: POST
    data_selector: network
    params: {}
- name: vdb
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /services/data/vXX.X/datasets
    method: GET
    data_selector: records
- name: alert
  endpoint:
    path: /api/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: job
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: jobs
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: SAP ASE environment
  endpoint:
    path: /sap-ase-environment
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: Oracle database editions
  endpoint:
    path: /oracle/database/editions
    method: GET
    data_selector: editions
- name: Oracle support matrix
  endpoint:
    path: /oracle/support/matrix
    method: GET
    data_selector: support_matrix
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
    params: {}
- name: vdb
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params: {}
- name: datasets
  endpoint:
    path: /docs/latest/datasets
    method: GET
    data_selector: records
- name: vdbs
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: environment_attributes
  endpoint:
    path: /manage/environments/attributes
    method: GET
    data_selector: attributes
    params: {}
- name: oracle_environment_attributes
  endpoint:
    path: /manage/oracle/environments/attributes
    method: GET
    data_selector: attributes
    params: {}
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: VDB
  endpoint:
    path: /vdbs
    method: GET
    data_selector: records
- name: dSource
  endpoint:
    path: /services/data/vXX.X/sobjects/dSource
    method: GET
    data_selector: records
    params: {}
- name: VDB
  endpoint:
    path: /services/data/vXX.X/sobjects/VDB
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /api/dsource
    method: GET
    data_selector: dSources
    params: {}
- name: virtualDatabase
  endpoint:
    path: /api/virtualDatabase
    method: GET
    data_selector: virtualDatabases
    params: {}
- name: dataset
  endpoint:
    path: /services/data/vXX.X/sobjects/Dataset
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: dSource
  endpoint:
    path: /resources/dSource
    method: GET
    data_selector: records
- name: VDB
  endpoint:
    path: /resources/VDB
    method: GET
    data_selector: records
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
    params: {}
- name: dSource
  endpoint:
    path: /manage/datasets
    method: POST
- name: dSource
  endpoint:
    path: /manage/datasets
    method: POST
    data_selector: dSourceConfiguration
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in Delphix
- Some objects may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Must be logged in before /API pages can be accessed.
- API requires setup of connected app in Delphix.
- Some objects like Contact may return nulls in deeply nested fields
- Supports Windows authentication for SQL Server.
- NFSv4 support for data sources running on RedHat 7.0 or later.
- OAuth2 API support — improves security offerings
- Supports CyberArk and Hashicorp vault for virtualization
- NFSv4 support for data sources running on RedHat 7.0 or later
- Multiple Device Removal on engines version 6.0.12.0 to 6.0.17.2 necessitates a reboot
  to activate the new module.
- In versions 7.0.0.0 and above, Multiple Device Removal operates as intended regardless
  of the upgrade method used.
- For kernel versions below 15.0.0.0, in-place block-to-object storage migration is
  not possible.
- Fixed kernel deadlock issue that may occur during block-to-object storage migration.
- For S3 object store, the 'Base URL' input is renamed to 'endpoint'. The 'region'
  input is now a dropdown for the user to select from a list of standard regions.
  The endpoint corresponding to that region will now be auto-populated.
- The API to list all snapshots consumes a significant amount of memory when there
  are more than 100,000 snapshots on the engine.
- Updated the Self-Service refresh warning message.
- Issues fixed in the Delphix Engine version 6.0.11.0
- Initial setup now fails if the system was not provisioned with enough storage.
- The analytics GUI network graph shows newly added NIC information without requiring
  a management service restart.
- If you add a hook script via the CLI, newlines are removed erroneously.
- Correctly set the default type for the parameters to all operations in the CLI according
  to the container type.
- Exclude sybsecurity from the list of auto-discovered databases.
- Java 6 packages are no longer included in the product image.
- When a user is set with the Provisioner role the 'provision' button does not appear,
  meaning anyone set with this role only is unable to provision VDBs.
- The Delphix Engine does not provide instructions to browsers to avoid caching HTTP
  responses (pages).
- 'Ensure Windows mount points are always unmounted as part VDB refreshes to prevent
  future VDB refreshes from failing due to ''ERROR_ASSIGN_MOUNTPATH: failed to assign
  mount path for disk  at='''', error='''''
- In environments where the vPDB has been provisioned using a Delphix provisioned
  virtual CDB, shutting down the virtual PDB causes it to get into an incorrect 'Cannot
  monitor' state, this has now been fixed to show the correct 'Stopped' state.
- Fixed an issue where vPDB refresh/rollback triggers spurious vCDB restart jobs,
  after vPDB+vCDB auto-restart.
- Validated Sync can fail when monitoring ASE backup servers started by using the
  $DSLISTEN environment variable instead of the '-S' argument. This can be worked
  around by accessing $DSLISTEN in the RUN_xxxxx script and pass it down as -S.
- VDBs with no snapshots failed to re-enable after a Delphix Engine upgrade, this
  has now been fixed.
- Display underlying ssh error when environment host connections fail.
- Enable Oracle LiveSource when LiveSource is in RESYNC_NEEDED state currently re-start
  Oracle Redo Apply. Oracle Redo Apply should not be restarted in this state.
- Fixed a TCP port leak in the network throughput test feature.
- Provisioning vFiles to the same host using different OS Environment Users no longer
  fails.
- Fixed an issue where Oracle remote listener registration fails if set to empty string.
- Network settings dialog now displays actual MTU value rather than a checkbox.
- Fixed an issue where the Environment Monitor on Redhat 6.9 and 6.10 might throw
  unidentified version errors.
- When user configures connection strings manually, these connect strings can end
  up connecting to incorrect PDBs/CDBs causing invalid snapshots. Verify that each
  connection to a PDB/CDB connects to the expected PDB/CDB.
- Delphix backups create controlfile records; in rare circumstances, these records
  can cause invalid snapshots. To avoid this problem, remove Delphix backups control
  file records when using SCN-based SnapSyncs once a SnapSync completes successfully.
- Allow certificates to expire after issuer certificate expiration.
- Reduce SSH connections by temporarily preserving and reusing existing Delphix<->host
  connections where possible.
- Spurious job event 'DISCOVERED_TO_MANUAL_ORACLE_CLUSTER_NODES' no longer shows up
  for non-Oracle RAC environment refreshes.
- In Oracle versions 18c and 19c, an Oracle bug can prevent the datafile headers from
  being updated for a standby database when managed recovery is running, resulting
  in failed SnapSync operations. Alert the user that an Oracle patch might be needed.
- Removed unneeded EMPTY_RENEGOTIATION cipher.
- Fixed an issue where stale file mounts may be leftover when vPDB provision fails.
- Fixed an issue where the last snapshot of a vPDB Timeflow can be deleted after the
  vPDB has been disabled, thus leaving the vPDB in a state with no provisionable snapshots.
- Allow provisioning to complete when source CDB includes PDBs in a broken state.
- Provision should remove files present in datafile filesystem that are not part of
  the database when provisioning a VDB from a VDB.
- ASE environment discovery will not fail if there is a mismatch of 'dataserver name
  argument' and value of '@@servername'.
- 'Ensure Windows mount points are always unmounted as part VDB refreshes to prevent
  future VDB refreshes from failing due to "ERROR_ASSIGN_MOUNTPATH: failed to assign
  mount path for disk at=">>, error=">'
- In Oracle versions 18c and 19c, an Oracle bug can prevent the datafile headers from
  being updated for a standby database when managed recovery is running, resulting
  in failed SnapSync operations.
- Changing a Custom Policy while it is running on an object can cause the Policy execution
  to fail.
- During an upgrade, when the engine tries to run the ASE UNMOUNT command while also
  trying to quiesce VDBs, the UNMOUNT command gets stuck (this command does not run
  under a timeout). Due to this, the upgrade job is stalled.
- A sysadmin user cannot view actions initiated by a different sysadmin user.
- Improved handling of missing networking devices after instance type migration.
- Provision, refresh, rewind, or start operations on a virtual database on a Solaris
  host with NFSv4 enabled may become stuck indefinitely due to mount process getting
  stuck on the Solaris NFS client.
- When relocating multiple terabytes of data either via block-to-object storage migration
  or device removal, management of the engine can become unresponsive for a lengthy
  period of time (i.e. 30+ mins), dependent on the dataset size and workload.
- An ‘Apply Now’ upgrade from 18.0.0.x to 19.0.0.x will logout the user due to the
  delphix-mgmt service restarting. The upgrade may still be in progress (e.g. quiesce
  jobs). To view the upgrade progress, login into Setup as sysadmin to view the Running
  Actions.
- /var/crash cleanup should include hprof files in this directory.
- Software keystore TDE-enabled provisioning fails after upgrading to 19.0.0.0
- Delphix keeps you updated on the latest developments and keeps releasing hotfixes,
  procedures, and workarounds for such critical vulnerabilities.
- Contact Delphix Support for corrective actions.
- CLI parameters must be used exactly as described in documentation, including spelling
  and capitalization, or they are ignored.
- Set the initiator name to a valid name, e.g. iqn.1991-05.com.microsoft:10-43-47-42.qa-ad.delphix.com.
  The “Default” button can also be selected in Windows iSCSI configuration to reset
  to the default (valid) name.
- After engine upgrade or after disable and enable of vPDB, NFS version in GUI/API
  may be incorrect; for a vPDB in a vCDB, it was mounted with NFSv3 and now the host
  supports NFSv4 mounts. This condition corrects itself on the next refresh operation.
- 'Ensure Windows mount points are always unmounted as part VDB refreshes to prevent
  future VDB refreshes from failing due to ''ERROR_ASSIGN_MOUNTPATH: failed to assign
  mount path for disk  at=''.'
- Fixes take effect immediately after upgrading
- Fixes that take effect after upgrading and rebooting are optional
- Some bugs are fixed in the release 6.0.8.0 and 6.0.7.0.
- In Solaris 5.11 environments where the Delphix OS user shell is set to csh, host
  parameters may be improperly parsed, leading to environment refresh and other job
  failures.
- Certain usernames are not available for use, as they are reserved system words (e.g.
  "root", "postgres", "delphix").
- LDAP server test fails if authentication is set to DIGEST-MD5, but setup still works
  correctly.
- The Job dashboard does not display the user that invoked each Job.
- Support bundle generation can be time consuming if the engine has a large number
  of core files to process.
- Changing the masking engine used by a VDB's masking job can lead to an internal
  error.
- A completed Cleanup Job, after upgrade, still shows as "running".
- It is not possible to set a password policy that prevents an Administrator from
  re-using a previous password, though this can be set for other users.
- Restarting a Delphix Engine during a network throughput test is not recommended,
  as it may lead to a system hang.
- For SSO/SAML, ADFS requires explicit rule to transform emailAddress attribute into
  nameid.
- An excessive number of connections to SQL Server Instances causes infrastructure
  issues and leads LSASS.exe to crash, and host to reboot.
- On a sybase host with multiple Sybase instances, If access to the first instance
  picked up for discovery fails due to invalid credentials, the discovery job will
  exit immediately preventing discovery of the remaining instances.
- During the upgrade, when Delphix was trying to run the ASE "UNMOUNT" command while
  trying to quiesce VDBs, the UNMOUNT command gets hung (as this command doesn't run
  under a timeout and due to this, the upgrade job stalled).
- Provide a proper error message in case provisioning fails due to database being
  in read-only mode.
- A failed Delphix Engine upgrade can cause plugin operations to fail with "grpc_status
  14".
- Windows environment Add/Refresh operations may fail if the iSCSI Initiator Name
  is not a valid IQN.
- If a transaction log is taken using the standby_access option for a SAP ASE database,
  the validated sync worker will not be able to restore that log, and will fail with
  Delphix fatal exception (as Delphix currently does not support this option).
- After upgrading an Oracle VDB from 12c to 19c, VDB refresh fails with "Failed to
  mount database instance", due to ORA-01130 or ORA-00201 errors.
- After an engine upgrade or after the disable/enable of a vPDB, the NFS version in
  the GUI/API may be incorrect if it's a vPDB in a vCDB or it was mounted with NFSv3
  (and now the host supports NFSv4 mounts). This condition corrects itself on the
  next refresh operation.
- SQL Server VDB Refresh operations may fail if the PowerShell command [IO.Path]::GetTempFileName()
  returns no value.
- Users should be able to delete the Delphix-generated CA certificate, if no dependencies
  exist.
- Sysadmin users cannot view actions initiated by different sysadmin users.
- JSON file masking does not support the use of a multi-column algorithm on (a) Fields
  in two or more different arrays (b) Fields at different levels in a single multi-dimensional
  array.
- 'If an Oracle VDB/vPDB is already enabled, a self-service container start operation
  or the VDB/vPDB enable operation may fail with: exception.oracle.vdb.database.exists.enable.not.allowed/
  exception.oracle.vdb.pdb.exists.enable.not.allowed.'
- A failed Delphix Engine upgrade can cause plugin operation to fail with grpc_status
  14.
- If there is any detached or unlinked Oracle dSource, upgrade failure may occur during
  `verify upgrade` job while upgrading to 12.0.0.0.
- Refresh operation fails for the self service containers having ordered sources.
- Manually recovering a database after V2P from a snapshot of dSource fails with an
  error.
- Updating Oracle credentials with an empty string throws an error when Simplified
  Connection Management is enabled.
- Network configuration is lost when changing EC2 instance type.
- The JDBC connection string for an Oracle vPDB does not get updated after a listener
  port change.
- When source discontinuity on the dSource is followed by resync on the livesource,
  one or more livesource workers may fail to start. This prevents livesource status
  from getting updated and the first snapshot from being taken after a resync.
- Excessive number of connections to SQL Server Instance observed by Delphix Environment
  User. This causes infra issues and leads to LSASS.exe to crash and host to reboot.
- Oracle vPDB snapshot job fails after doing reset logs on a linked CDB.
- Oracle vPDB source enable jobs for Oracle 21c are taking more than 15 minutes to
  complete. This issue is only seen during the first Oracle vPDB enable operation
  on Oracle 21c.
- 'Ensure Windows mount points are always unmounted as part VDB refreshes to prevent
  future VDB refreshes from failing due to ''ERROR_ASSIGN_MOUNTPATH: failed to assign
  mount path for disk''.'
- An ‘Apply Now’ upgrade from 18.0.0.x to 19.0.0.x will logout the user due to the
  delphix-mgmt service restarting.
- An excessive number of connections to the SQL Server instance can cause infrastructure
  issues, leading the LSASS.exe to crash and the host to reboot.
- Windows Environment Add/Refresh operations may fail if the iSCSI Initiator Name
  is not a valid IQN.
- Certain usernames are not available for use, as they are reserved system words (e.g.
  'root', 'postgres', 'delphix').
- A completed Cleanup Job, after upgrade, still shows as 'running'.
- During the upgrade, when Delphix was trying to run the ASE 'UNMOUNT' command while
  trying to quiesce VDBs, the UNMOUNT command gets hung.
- A failed Delphix Engine upgrade can cause plugin operations to fail with 'grpc_status
  14'.
- If a transaction log is taken using the standby_access option for a SAP ASE database,
  the validated sync worker will not be able to restore that log.
- After upgrading an Oracle VDB from 12c to 19c, VDB refresh fails with 'Failed to
  mount database instance', due to ORA-01130 or ORA-00201 errors.
- After an engine upgrade or after the disable/enable of a vPDB, the NFS version in
  the GUI/API may be incorrect.
- JSON file masking does not support the use of a multi-column algorithm on fields
  in two or more different arrays.
- If an Oracle VDB/vPDB is already enabled, a self-service container start operation
  or the VDB/vPDB enable operation may fail.
- Provision, refresh, rewind, or start operations on a virtual database on a Solaris
  host with NFSv4 enabled may become stuck indefinitely.
- If there is any detached or unlinked Oracle dSource, upgrade failure may occur during
  `verify upgrade` job.
- To know more about the Delphix Continuous Data Engine and JRE version for the respective
  Windows connector versions, refer to the Windows connector matrix on the SQL Server
  matrix page.
- For Windows connector versions that are not listed below, there are no bug fixes.
  These versions include internal improvements.
- The Delphix Windows connector now supports cipher exclusion for its connections
  through a new API/CLI endpoint; `service > cipherconfig > connector` accessible
  under system user login.
- The Delphix SQL Server user base is rapidly expanding. As a result, our largest
  customers have encountered an increase in login entries to their Domain Controllers
  from Windows target hosts and from environment monitoring to targets and sources.
- Ensure proper configuration of network handlers for SAP ASE.
- Uses OAuth2 with refresh token — requires setup of connected app in delphix
- Known quirks, limitations, or behaviors of the API that may affect integration or
  data quality.
- Some objects like jobs may return nulls in deeply nested fields
- Some endpoints may have rate limits.
- Requires configuration of OAuth2 settings in Delphix.
- API calls may be subject to rate limits.
- Delphix requires specific key pair configuration for secure access.
- SAP ASE environments may require specific network and connectivity configurations.
- Linking SAP ASE data sources requires specific configurations.
- Some datasets may have specific access requirements
- Requires setup of connected app in Delphix
- Ensure proper configuration of the SAP ASE environment before making API calls.
- Some operations may require specific permissions.
- CockroachDB Ingestion from Azure, GCP, and Disk is not supported.
- CockroachDB Point-in-time restore is not supported.
- Delphix V2P is not supported.
- Delphix Password Vault is not supported.
- VDB Downtime is caused by a reboot of the Delphix Engine when DelphixOS is modified
  by an upgrade.
- VDB Downtime may be optional for an upgrade when a release contains DelphixOS changes
  that are also optional.
- Delphix Support Policies specifically list Major and Minor release coverage. If
  a minor release is listed as covered, then all patch releases under that minor release
  are certified.
- Tested at the customer with 600-800GB ingestion size.
- No limitation on frequency of refreshes.
- Customers will manage backup located on the staging host required to create dSource.
- Does not support Point-in-Time Provisioning.
- This plugin ingests backups at any time, so the time flow may not go in linear order.
- API requires setup of OAuth with proper permissions.
- Rate limits apply to API calls.
- Delphix software is delivered and maintained as a virtual software appliance.
- Administration of Continuous Data or Continuous Compliance engines happens through
  product interfaces only.
- Delphix offers a set of RESTful web service APIs with which a user can administer
  the Delphix Continuous Data Engine.
- This article describes the information required for the initial installation and
  configuration of the Delphix Engine.
- This API is designed for managing Delphix data environments.
- API version and endpoint details are subject to change.
- For best performance, there should be no firewalls between the Delphix Engine and
  the virtual database (VDB) target environments.
- If the Delphix Engine is separated from a source environment by a firewall, the
  firewall must be configured to permit network connections between the Delphix Engine
  and the source environments.
- Highly recommended to enable Phone Home
- Highly recommended to use NTP Servers
- The static IP address must be specified in CIDR notation.
- Firewalls can add milliseconds to the latency between servers.
- Intrusion detection systems (IDSs) should also be made permissive to the Delphix
  Engine deployment.
- Uses OAuth2 with refresh token — requires setup of connected app in Delphix.
- Static IP address must be specified in CIDR notation.
- Delphix API requires OAuth2 authentication.
- Ensure that the client ID and secret match the connected app settings.
- Some API calls may require specific privileges
- 'Each Continuous Data engine has two default accounts: sysadmin with a user-defined
  password and admin with a user-defined password.'
- A login failure issue could occur if the Delphix Engine clock is not in sync with
  the IdP clock.
- Delphix recommends anti-virus scanning exclude folders where Delphix files are maintained.
- Managed Identities are recommended to minimize security risks and maintenance related
  to access keys.
- Delphix is compatible solely with the Online access tier of Standard GPv2 for Azure-Blob.
- Specific considerations for SAP ASE environments.
- Azure imposes ingress and egress limitations per storage account.
- Ensure the system-assigned Managed Identity is enabled when creating your virtual
  machine.
- Role-based access is recommended to minimize security risks and maintenance related
  to access keys.
- AWS S3's pricing is based on the actual storage used.
- Adjusting the storage capacity post-setup is straightforward via the sysadmin login
  or Setup UI, but it cannot be reduced below the current usage by the Delphix engine.
- The cache should be sized to match the frequently accessed data plus an additional
  10% for bookkeeping.
- For specific block storage requirements, refer to the EBS configuration section
  in the Deployment for AWS EC2 page.
- Delphix is compatible solely with the Online access tier for Azure-Blob.
- Some operations may require additional permissions
- If present, the connectivity test to the bucket will fail or will have an adverse
  effect on the engine’s data storage stability.
- Requires setup of connected app in Delphix.
- Ensure proper permissions for API access.
- SAP ASE support and requirements must be met
- GCP charges are based on the actual storage used.
- Adjusting storage capacity is manageable through the sysadmin login or Setup UI,
  but cannot be decreased below current utilization.
- Any protection policy or added Lifecycle rules are not supported.
- Instance principals provide a secure method for service access, similar to AWS IAM
  Roles.
- Dynamic groups require rules to identify which instances belong to them.
- Some objects like Dataset may return nulls in deeply nested fields
- Requires setup of connected app in Delphix API
- Updating access credentials can only be done via the CLI.
- The Delphix Continuous Data Engine supports a maximum of 750 objects. However, managing
  a higher number of objects may require increased memory and CPU resources.
- Delphix supports a maximum of 750 objects.
- Managing a higher number of objects may require increased memory and CPU resources.
- Ensure SAP ASE environment is properly configured before linking.
- Check for specific network requirements when linking to SAP ASE.
- A support login is needed from the Delphix representative or welcome letter.
- For optimal I/O performance, each VMDK must be equal in size and be configured Thick
  Provisioned - Eager Zeroed.
- Do not run the HostChecker as root; this will cause misleading or incorrect results
  from many of the checks.
- Resolve the issues that the HostChecker describes.
- Repeat steps 3 - 7 until all the checks return no errors or warnings.
- Independent - Persistent storage is required for installation.
- DHCP or Cloud-init can be used for networking configuration.
- Requires setup of connected app in api
- Delphix generally supports running on KVM, but does not explicitly qualify each
  vendor’s KVM hypervisor solution.
- Delphix is based on Ubuntu 20.04 and supports running on any KVM hypervisor whose
  vendor supports Ubuntu 20.04 guest operating system.
- Delphix disk storage capabilities are based on the backend storage provided.
- The Delphix Engine VM is distributed as an OVA for VMware.
- Running Delphix inside of vSphere is supported.
- Using vMotion on a Delphix VM is supported.
- Device passthrough is not supported.
- Delphix currently does not support the migration/copy of a VM between hypervisor
  platforms.
- Delphix Engine is resource intensive from a compute, network, and storage perspective.
- It is crucial that your KVM host is not over-subscribed.
- Using Hyper-V Dynamic Memory can result in your OS running outside minimum Delphix
  requirements.
- Using storage other than EBS is not supported.
- Limits on the number of volumes are dictated by the EBS instance type, and is generally
  advised that over 40 can be expected to cause issue on Linux VMs.
- Cold HDD (sc1) volumes (not supported due to poor performance)
- Use of EBS volumes encrypted at creation is supported (during initial deployment
  from AMI, as well as storage devices added post-deployment), but can have negative
  performance consequences.
- Launch can take up to 15 minutes for the first launch of Delphix
- Requires appropriate permissions for API access
- Delphix Engine should be successfully deployed in AWS.
- The initial sysadmin password is the AWS Instance ID.
- Delphix recommends using storage disks that in sum, have enough storage and IOPS/throughput
  for your data and performance requirements.
- Planning ahead for the use of multiple storage disks for the Delphix File System
  (DxFS) is recommended as it will facilitate growing and shrinking DxFS more easily
  in the future should your storage needs change.
- Ensure that the SAP ASE environment is properly configured before linking data sources.
- Refer to the environment attributes for specific host settings.
- Delphix disk storage capabilities remain seamlessly operable.
- There are no additional limitations to your storage, unless otherwise imposed by
  the respective Hypervisor or Cloud environment.
- Uses managed disks.
- Extensions and High Availability sets are not currently supported.
- VM must be a supported size for Accelerated Networking
- VM must be a supported Azure Gallery image (and kernel version for Linux)
- All individual VMs or VMs in an availability set must be stopped/deallocated before
  enabling Accelerated Networking on any NIC
- The Delphix Engine most closely resembles a storage appliance and performs best
  when provisioned using a storage-optimized instance type.
- Larger instance types provide more CPU, which can prevent resource shortfalls under
  high I/O throughput conditions.
- Larger instances also provide more memory, which the Delphix Engine uses to cache
  database blocks.
- Some objects like VirtualDatabase may return nulls in deeply nested fields
- Creating the image could take some time
- Minimum of four data disks recommended with SSD Persistent Disks
- Delphix Engine most closely resembles a storage appliance and performs best when
  provisioned using a storage-optimized instance type.
- Must use Block Volume for data storage.
- When running low on storage space, Delphix recommends adding additional equivalently
  sized block storage volumes, or devices, instead of resizing existing volumes.
- Provisioning a VDB requires a compute instance running the same database engine
  as the source.
- Delphix only supports using Block Volume devices for data storage.
- Ensure proper endpoint access rights are configured.
- Authentication uses OAuth2 with refresh token.
- Ensure proper setup of connected apps in Delphix.
- Each Availability Domain has its own quota, it is ok to use AD-1, AD-2, or AD-3
  - but, be sure to make note of which Availability Domain is being used.
- Compute Instances and attached Storage will need to be in the same Availability
  Domain.
- If using multiple storage disks for DxFS, Delphix recommends using equally sized
  storage disks.
- Allocate initial storage equal to the size of the physical source database storage.
- For high redo rates and/or high DB change rates, allocate an additional 10-20%.
- Add storage when storage capacity approaches 30% free.
- Block Volumes must be attached using Paravirtualized mode.
- When adding additional disks to the block storage pool, storage device initialization
  will not occur since it is not required on this cloud.
- The Delphix Engine most closely resembles a storage appliance and performs best
  when provisioned using a storage-optimized profile.
- Larger profiles provide more CPU, which can prevent resource shortfalls under high
  I/O throughput conditions.
- Larger profiles also provide more memory, which the Delphix Engine uses to cache
  database blocks. More memory will provide better read performance.
- Allocate initial storage equal to the size of the physical source database storage.
  For high redo rates and/or high DB change rates, allocate an additional 10-20%.
- Provisioning a VDB requires a compute instance running the same database engine
  as the source. Please note, however, that the target instance only needs storage
  to accommodate the OS, database platform binaries, etc., because Delphix delivers
  all of the data files.
- Delphix only supports using Block Volume devices for data storage. These block devices
  must be attached to the Delphix Engine using the Paravirtualized attach mode (iSCSI
  is not currently supported). Block Volumes must be provisioned in the same Availability
  Domain as the Delphix Engine, otherwise, they will not be discoverable. Block Volumes
  should be configured to use the "Higher performance" performance option. All Block
  Volumes attached to a single Delphix Engine should be of the same size. A minimum
  of four (4) Block Volumes should be attached to a Delphix Engine.
- Delphix product is a closed appliance and manages users independently.
- Delphix recommends using a minimum total of four disks to run the Delphix Engine.
- Some datasets may return nulls in deeply nested fields
- Expandable volume is a beta feature that is available for evaluation and testing
  purposes.
- If there are any hotfixes installed for the Delphix Engine, the list can be accessed
  via the system administrator CLI.
- Requires setup of connected app in IBM Cloud
- Creating block storage volumes can be done at a later time
- Some datasets may have specific configurations
- Delphix recommends that you regenerate the registration code every six months to
  rotate the secret key in order to maximize the Support Security of the Delphix Engine.
- Some operations may have rate limits
- Configuring OAuth2 authentication for API access
- Only these two users require password-based authentication.
- 'Delphix Self-Service has two types of users: the admin user and the data user.'
- At least one group must always exist on the Delphix Engine in order to link a dSource.
- A group cannot be deleted if it contains VDBs or dSources.
- Delphix supports various authentication mechanisms including OAuth2 and API tokens.
- The sysadmin user is a required user for the Delphix Engine. This user cannot be
  deleted but can be suspended.
- Non-admin users can reset their passwords without needing administrator assistance.
- Self-service password reset should record source network addresses for complete
  audit records.
- API calls are subject to rate limits.
- A group cannot be deleted if it contains VDBs or dSources. All databases within
  a group must be deleted prior to deleting the group.
- The sysadmin user is a required user for the Delphix Engine and cannot be deleted
  but can be suspended.
- Users are required to validate their email identity for password resets.
- Users can set up auto-authentication for the Delphix CLI using RSA key pairs.
- Only use simple auth.
- If using SSL/TLS typically use port 636 and import a certificate.
- If not using SSL/TLS, use port 389 and you will not need a certificate.
- Test Connect will issue an anonymous login request to the LDAP server.
- Single Log-out (SLO) is not supported.
- The SP initiated flow must be enabled in the IDP.
- Any Delphix Engine intending to leverage Kerberos credentials should be running
  version 6.0.7.0 or later.
- Versions 6.0.0.0-6.0.6.1 may encounter issues in authentication ticket renewal,
  causing Environment and Dataset job failures.
- Users may find entering a password cumbersome, or manual password entry may not
  be possible.
- Delphix supports a list of KDCs for the Kerberos realm to which it has been joined.
- It is possible to use kinit with a keytab file instead of password-based authentication
  to acquire tickets.
- Delphix connects to SAP ASE, Oracle, and DB2 instances using isql process or jConnect
  JDBC driver
- When connecting via isql, Delphix uses the '-V' parameter for Kerberos principal
- Delphix expects KRB5CCNAME to be set appropriately or in the default location
- If the LDAP server has disabled anonymous access and the user is trying to use SSL/TLS,
  the user will be unable to import the certificate.
- Some operations may require specific permissions
- Version 6.0.7.0 or later recommended for Kerberos
- Delphix Engine 5.3.2.0 is the first generally available customer release to support
  Kerberos on a subset of supported OS' with SAP ASE, Oracle, and DB2 databases.
- Requires configuration of the Delphix Engine to use the API.
- API responses may vary based on user permissions.
- Delphix Engine must be running version 6.0.7.0 or later for Kerberos.
- Some environment attributes may return nulls in deeply nested fields
- Delphix connects to SAP ASE, Oracle, and DB2 instances using isql process or jConnect
  JDBC driver.
- The instance SPN can be manually set on a per-repository basis.
- Uses OAuth2 with JWTs for authentication
- Ensure proper configuration of the OAuth2 authentication.
- If the Delphix Engine is separated from a source environment by a firewall, the
  firewall must be configured to permit network connections between the Delphix Engine
  and the source environments for the application protocols (ports) listed above.
- Requires configuration of authentication for API access
- Round-trip latency between the Delphix Engine and the target environment should
  be kept under 1 millisecond, and preferably in the range of 300 microseconds.
- If network latency exceeds 500 microseconds, the VDBs will not perform as well as
  a database connected to physical storage.
- Best practices to reduce network latency include keeping the Delphix Engine on the
  same subnet as the target environment and reducing the number of hops between them.
- Uses OAuth2 with JWT — requires setup of authorization server.
- Delphix APIs require setup of connected app.
- Supports strong authentication and data encryption.
- Uses the Simple Authentication and Security Layer (SASL) framework for authentication.
- Uses OAuth2 with refresh token — requires setup of connected app in API
- Firewalls must be configured to permit network connections between the Delphix Engine
  and the source environments for the application protocols (ports) listed.
- Duration in seconds (30 default)
- Traffic Options by selecting either Use compression or Use encryption
- For optimal performance of VDBs, round-trip latency between the Delphix Engine and
  the target environment should be kept under 1 millisecond, and preferably in the
  range of 300 microseconds.
- Low network throughput can impact the Delphix Engine in a number of ways.
- Network throughput will always represent the least performant component.
- We have seen Delphix installations often benefit 10-20% from Jumbo frames, but certain
  platforms (such as AIX) can benefit much more dramatically.
- Test Jumbo Frames via with “Do Not Fragment” flag from the remote host to the Delphix
  Engine.
- Delphix Server ID uniquely identifies each Delphix Engine.
- Hostname typically matches the IP (DNS) name assigned to the Delphix Engine.
- Supports strong authentication and data encryption
- Uses Simple Authentication and Security Layer (SASL) for authentication
- If .local DNS domains are in use, then you must add these explicitly to the list
  of DNS domains configured in order for name resolution to be successful.
- Multicast DNS is not currently supported by the Delphix Engine.
- Use the command-line interface or Delphix Setup application to change the IP address.
- Currently, it is only possible to change the hostname via the Command Line Interface
  (CLI).
- If DHCP is being used, the Delphix Engine will expect the Hostname to be provided
  by the DHCP server.
- When DHCP is enabled, the DNS server cannot be changed in the GUI.
- If DHCP is disabled and the address is static, the DNS server can be updated via
  the GUI.
- Select the checkbox before Enabled to enable the network.
- Corporate networks commonly leverage 10Gbps 'line speeds' between servers.
- When Jumbo Frames are implemented correctly, they provide a substantial improvement.
- Delphix installations often benefit 10-20% from Jumbo frames.
- Ensure network configuration is compatible with SAP ASE.
- SAP ASE environments may require specific setup for optimal performance.
- Some responses may vary based on user permissions
- NFSv4 is enabled by default.
- If NFSv4 is not supported on the mount, then the Delphix Engine will fail to mount
  the VDBs and return a user exception with the reason 'NFSv4 is not supported'.
- If dNFS is enabled, the Delphix Engine will attempt to use NFSv4 in Oracle versions
  19.12-19.15 and 21.1-21.6 despite Oracle bug 33596056.
- SAP ASE environments require specific configuration settings.
- API requires authentication via OAuth2.
- Multiple .local subdomains can be added as desired (for example, dev.company.local),
  or 'local' can simply be added to the DNS domain configuration to enable all .local
  domains to be successfully looked up in DNS.
- Requires authentication setup for API access.
- Changing the IP address can be done via CLI or Delphix Setup application.
- Ensure to stop all running VDBs and disable all dSources before changing the IP
  address.
- Currently, this only includes dataset space. It does not include space of the engine
  metadata.
- When DHCP is enabled on the Delphix Engine, the DNS server cannot be changed in
  the GUI.
- 'Select one of the following: DHCP or Static and enter the IP address and Subnet
  Mask address in the respective fields.'
- Enter a value for the MTU field. This is the maximum size in bytes of a packet that
  can be transmitted on this interface.
- Be very careful setting quotas. As a group or virtual database (VDB) approaches
  the quota level, snapshots may fail and logs may not be captured, causing LogSync
  to fail.
- Requires specific configuration for SAP ASE environments.
- Requires setup of connected app in Delphix API.
- NFSv4 is enabled by default, but the target/staging hosts require additional configuration
  changes before it can be used.
- If these target host configurations are not set, the engine will choose NFSv3.
- Refer to the documentation for specific configuration steps.
- Some objects may return nulls in deeply nested fields.
- A minimum of 10GB of object storage is required, thus, a device or devices must
  be enabled to accommodate for at least 10GB.
- This feature is only compatible with Delphix Engine Releases 5.0.4 and later.
- This feature is not supported on Delphix Elastic Data Engines (engines backed by
  blob/object storage).
- Delphix API requires a connected app for OAuth2 setup.
- In-place migration is an irreversible operation.
- During the migration process, sysadmins are not able to add or remove block devices
  for data storage.
- Some responses may include null values in the data
- Engines created before 5.3.1 and upgraded to 5.3.1 or later will retain their old
  username 'delphix_admin'.
- Delphix recommends creating users with an admin role and then disabling delphix_admin.
- Deleting objects to increase capacity
- Some responses may contain deeply nested fields
- Regularly deleting unused or outdated objects is a standard practice in Delphix
  Continuous Data Engine administration.
- This practice is especially important to prevent low space errors, which can cause
  the Delphix Continuous Data Engine to stop.
- USM replaces the community string as in SNMP version 2 with user records.
- The Delphix Engine includes an SNMPv3 agent that is only capable of responding to
  read-only operations.
- Multiple Device Removal in the Delphix Engine 6.0.12.0 and higher version introduces
  a breaking kernel module change that requires a reboot to load the new module.
- If you are a Delphix Admin or a System Admin, you will be able to see all the actions
  of your respective application. If you are not an admin user, you will only see
  actions you have permission to see.
- Delphix storage migration is currently available exclusively via the CLI.
- Do not remove a configured storage device.
- The Jobs panel retains records of the most recent 10,000 jobs that have been initiated
  by the Data Engine.
- Delphix administrators may use the job/retention CLI to retain a larger number of
  jobs.
- Ensure to configure SAP ASE environments properly.
- By default, when a critical or warning fault occurs, the Delphix Engine immediately
  sends an email to the Engine Administrator (admin).
- Make sure you have configured an SMTP server and defined an appropriate email address
  for Engine Administrator (admin).
- Managed Source Data refers to the size of the source data that is ingested and managed
  by the Delphix Engine.
- The total usage is displayed in gigabytes.
- A fallback value is used when sources are unavailable at the time when the usage
  query is made.
- Sources that are not included in the sum are source types for which Delphix does
  not currently collect data.
- 'Text matching is limited to the following columns: Action, Description, Severity,
  Status.'
- Actions displayed in the Actions panel or on the Audit page are kept forever.
- Held Space is not indicative of an issue but rather a representation of an underlying
  storage dependency.
- Can occur when a dSource is deleted from the Replication Source and held space is
  needed by the replica provisioned VDB.
- Snapshot space will be held until branches and/or bookmarks leveraging that snapshot
  are removed.
- Redacted data shows up as held space during Selective Data Distribution.
- Held space can be caused by a failed or interrupted Replication job.
- Support bundles can be transferred directly to Delphix Support or downloaded.
- Customer-specific data is redacted or obfuscated where possible.
- Support access control enables Delphix Support to access your instance of the Delphix
  Engine for a defined period of time using an access token.
- When SNMP v2 is configured and enabled, SNMP v1 is also configured and enabled.
- Syslog messages are always sent in the clear and may be lost during transmission
  and delivered out of order due to the limitations of UDP.
- The default port number for Syslog is 514.
- Ensure to have the appropriate permissions set up for accessing the API.
- API version may change.
- Every Syslog message is attached to a severity level.
- Delphix defines the severity of Syslog messages in accordance with RFC 3164.
- Alert Profiles do not override permission settings. If you do not have Read permission
  on an object then your alert profile will never get triggered for that object's
  alerts, regardless of your filter settings.
- Faults serve as a record of all issues impacting the Delphix Engine and can never
  be deleted.
- Ignoring a fault will also ignore future faults of that exact type against the same
  object.
- 'Text matching is limited to columns: Action, Description, Severity, Status.'
- The current implementation is limited to one data consumer at a time.
- Only one plugin, in addition to the default SplunkHec plugin, can be uploaded.
- Customer-specific data is redacted or obfuscated where possible in the support bundle
  information.
- Enable Indexer Acknowledgement is unchecked for the token.
- If using Splunk 7.0+, create a special 'Metrics' type index for metrics data.
- Delphix uses Splunk for event logging and metrics tracking.
- Audit records are Informational Syslog messages. If you would like to forward Audit
  records, choose Severity Level Informational.
- When setting up the Syslog settings for your Delphix Engine, you have the ability
  to choose what alerts to report.
- Fluentd defaults to using JSON formatting for its output plugins
- Only one additional plugin can be uploaded to a given Delphix engine at a time
- SSL Verification does not currently support custom certificates
- API calls may be subject to rate limits
- Delphix services require OAuth2 authentication.
- SMTP gateway settings must be configured for email alerts to function properly.
- Default domain user is now 'admin' instead of 'delphix_admin'.
- API version may change; check documentation for updates.
- Enable Indexer Acknowledgement should be unchecked for the token.
- If using Splunk 7.0+, create a second index as a special 'Metrics' type index.
- Ensure to configure OAuth2 properly for API access
- Ensure proper OAuth configuration in Delphix for API access.
- Only one additional plugin can be uploaded to a given Delphix engine at a time.
- SSL Verification does not currently support custom certificates.
- The statistic can be collected a maximum of once every second.
- Cached NFS operations should not be compared to disk latencies.
- Best practices for hypervisor host and VM guest
- Best practices for network configuration
- Best practices for Delphix Engine data protection
- Best practices for Source environments and databases
- Best practices for Target environments and databases
- Best practices for Staging environments and databases
- Best practices for storage
- Best practices for Validated Sync
- Initial storage is equal to the size of the physical source databases.
- For high redo rates and/or high DB change rates, allocate an additional 10-20% storage.
- Use physical LUNS allocated from storage pools or RAID groups that are configured
  for availability.
- Never share physical LUNs between the Delphix Engine and other storage clients.
- Keep all physical LUNs the same size.
- Provision storage using VMDKs or RDMs operating in virtual compatibility mode.
- VMDKs should be Thick Provisioned, Lazy Zeroed. The underlying physical LUNs can
  be thin provisioned.
- Physical LUNs used for RDMs should be thick provisioned.
- Measure or estimate the required IOPS and manage the storage disks to provide this
  capacity.
- Physical LUNs carved from RAID 1+0 groups or pools with dedicated spindles provide
  higher IOPS performance than other configurations.
- Maximize Delphix Engine vRAM for a larger system cache to service reads.
- The job will be submitted and visible in the Delphix Management application.
- Storage performance expectations and troubleshooting
- Backup server best practices
- Support for dump history file
- ESXi 6.x or 7.0 is recommended. ESXi 5.5 or earlier is no longer supported.
- Disable HT in BIOS, on the ESXi Host, and disable HT Sharing on the Delphix VM for
  consistency.
- Memory Overhead - 10% of available RAM must not be allocated to guest VMs.
- CPU Overhead - At least 2 cores (ideally 4) must not be allocated to guest VMs.
- BIOS Power Management should be set to High Performance where ESXi controls power
  management.
- VMware HA can be enabled; VMware DRS is generally disabled.
- For Intel®-based servers with E5-2600 v2 processors.
- 'Minimum VM specifications: 8 vCPU x 64 GB, Small: 8 vCPU x 128GB, Medium: 16 vCPU
  x 256 GB, Large: 24 vCPU x 512 GB.'
- Assign single-core sockets for vCPUs in all cases.
- Requires setup of SAP ASE environment
- On Solaris, by default the maximum I/O size used for NFS read or write requests
  is 32K.
- It is critical that the command to adjust nfs3_bsize be executed exactly as shown,
  with quotations and space.
- Packages should install their configuration files in /usr/lib/(distribution packages)
  or /usr/local/lib/(local installs).
- Data is collected at a high frequency of once per second.
- An NFS Domain must be configured.
- The nfsrgyd service must be running.
- The NFS server IP address from the Delphix Engine must be mappable to an FQDN.
- Delphix API requires OAuth2 for authentication.
- The Delphix Engine requires 30% free space in its storage for the best performance.
- Initial storage is equal to the size of the physical source databases. For high
  redo rates and/or high DB change rates, allocate an additional 10-20% storage.
- VMDKs must be Thick Provisioned, Lazy Zeroed.
- Some API calls may have rate limits.
- Cache data collection start time is displayed in the user’s time zone.
- Cache data collection end time is displayed in the user’s time zone.
- Storage device initialization complete.
- Storage benchmarking complete.
- Requires OAuth2 authentication setup.
- Ensure proper permissions are granted for API access.
- Use Factory Reset only when a complete reset and reconfiguration of the Delphix
  Engine is necessary, as all Delphix Engine objects will be de-allocated.
- The only difference between the Restart and Reboot is that the Restart functions
  without shutting down the VDBs and disabling the dSources.
- Writing and troubleshooting scripts, such as those required for Privilege Elevation
  Profiles, is out of scope and not covered by Delphix Support.
- Privilege Elevation Profiles need to be tailor-made to work with non-standard environments
  that may use third-party or proprietary privilege elevation mechanisms other than
  sudo.
- VM migration to a new host can create mismatched HT settings.
- Ensure that all BIOS-managed C-States other than C0 are disabled if power management
  is hardware controlled.
- Ensure that all ACPI sleep states above S0 are disabled in the BIOS.
- 'VMWare Guest Specifications: Minimum: 8 vCPU x 64 GB, Small: 8 vCPU x 128GB, Medium:
  16 vCPU x 256 GB, Large: 24 vCPU x 512 GB.'
- It is critical that the command to change the maximum NFS block size is executed
  exactly as shown to avoid system panic.
- On systems using Oracle Solaris Zones, TCP parameters can only be tuned from the
  global zone or in exclusive-IP non-global zones.
- Beginning with RHEL 6.3, the number of RPC slots is dynamically managed by the system
  and does not need to be tuned.
- SAP ASE environments require specific configurations.
- Tuning network parameters may improve performance.
- Use OAuth2 with refresh token — requires setup of connected app in Delphix
- Customers running version 5.3.9 and earlier that are requesting an upgrade to 6.0.0.0
  and above, please contact Delphix Support to help coordinate this upgrade.
- Upgrading from 6.0.x to 6.0.x includes pre-checks packaged in the upgrade image,
  contacting Delphix Support for this upgrade is not required.
- If the OS will not be updated as part of the upgrade, then the upgrade process will
  have no impact on the availability of VDBs, and you do not need to schedule any
  downtime for your VDB applications.
- If the OS will be updated as part of the upgrade, then you should schedule appropriate
  downtime for your VDB applications. The Delphix Engine will automatically disable
  VDBs and dSources during the upgrade.
- Long-running jobs including replication and SnapSync will fail during any upgrade.
- Delphix Upgrade images are approximately 5GB in size; it is recommended to have
  both a fast internet connection to the Delphix download site as well as to the Delphix
  Engine.
- Requires setup of connected app in API
- Customers bear full responsibility for supporting and troubleshooting their own
  profile scripts.
- It is strongly recommended that you perform this verification a day or two in advance,
  before your upgrade downtime begins.
- Some records may return nulls in optional fields
- All Warnings must either be Mark resolved or Mark ignored
- You also can use Ignore all warnings option to disregard all warning messages at
  once
- If an Apply now upgrade fails, the appliance will automatically roll back to the
  version running prior to the upgrade.
- This may result in datasets remaining unavailable after the upgrade is complete
  and the Delphix Engine restarts.
- Delphix Engines can only perform replication to engines on the same or higher version.
- Post-upgrade cleanup job is run automatically after the upgrade.
- Delphix product security
- Software updates
- Network security
- Ensure proper OAuth configuration in the Delphix engine
- It is recommended that customers read the release notes for any version they are
  upgrading to and look for new Delphix Engine requirements.
- It is strongly recommended that you perform this verification a day or two in advance,
  before your upgrade downtime begins, in order to give yourself time to address any
  problems flagged by the verification.
- Critical checks must be resolved before proceeding with the upgrade.
- Warnings can be either resolved or ignored.
- Open only required ports.
- Uses various authentication methods such as username/password, username/ssh key,
  and Kerberos credentials.
- Vault integration is currently supported for SAP ASE database users, Oracle database
  users, and MSSQL domain users using 6.0.4 and later.
- A post-upgrade cleanup job is run automatically after the upgrade is done. This
  job refreshes environments and re-enables sources to bring objects back into a working
  state.
- Any configuration change requires a stack restart to take effect.
- Submitting the Network Security Settings in the GUI will automatically trigger a
  stack restart. All jobs will be stopped, but VDBs will continue to run.
- Altering the authentication settings will require DSP keystore and truststore parameters
  to be configured for all existing environments, if not the refreshing of existing
  host environments will fail.
- To enable Client Authentication, enable Server Authentication (refer to above steps)
- 'Once the configurations have been set as desired, you will be presented with a
  summary page. Clicking Submit will trigger a stack restart as that is necessary
  for the configuration changes to take effect. Note: all jobs will be stopped, but
  VDBs will continue to run.'
- Delphix Engine generates alerts when certificates in the Keystore or truststore
  are expired or about to expire
- A warning level alert is generated if certificates are expiring in 60 days
- Critical level alerts are generated if certificates expire in 14 days or have already
  expired
- The Continuous Data Engine is configured to HTTP and HTTPS by default.
- Certificate setup should be completed before setting up HSTS headers for effective
  use.
- Uses OAuth2 with refresh token — requires setup of connected app in Oracle
- Recommended KeyStore password is changeit.
- If all options under Custom Authorizations are Disabled, this means that the DSP
  certificate is not being used.
- HTTPS certificate replacement is only necessary if HTTPS connections are used for
  web browser access.
- 'PowerShell set environment variable with: $ENV:PASSWORD_ENV=''changeit'''
- On Windows, change ./keytool to .\keytool.exe if located in the jre\bin subdirectory.
- Vault integration is supported for SAP ASE database users, Oracle database users,
  and MSSQL domain users using 6.0.4 and later.
- If correcting the Delphix Engine's or host environment's time configuration may
  cause issues, then you can workaround this issue by creating and using a certificate
  with a 'Valid From (or Not Before)' date which is before your slowest Engine or
  host.
- If creating a CSR for the DSP application, note that when the DSP Server or Client
  authenticates each incoming DSP connection (if enabled), it will validate that each
  certificate of the incoming connection's identity chain has a 'Valid From (or Not
  Before)' date that is after its own time.
- If correcting the Delphix Engine's or host environment's time configuration may
  cause issues, then you can workaround this issue by signing the CSR with a 'Valid
  From (or Not Before)' date which is before your slowest Engine or host.
- Once the configurations have been set as desired, you will be presented with a summary
  page. Clicking Submit will trigger a stack restart, which is necessary for the configuration
  changes to take effect.
- If correcting the Delphix Engine's or host environment's time configuration may
  cause issues, then you can workaround this issue by creating and using certificates
  with a 'Valid From (or Not Before)' date which is before your slowest Engine or
  host.
- Perform Server (target engine) authorization for Replication for both Target and
  Source engines.
- Perform Client (source engine) authorization for Replication for both Target and
  Source engines.
- Clicking Submit will trigger a stack restart as that is necessary for the configuration
  changes to take effect.
- Certificate management for throughput tests
- Some API calls may have rate limits
- 'Delphix Engine generates alerts when certificates in the Keystore or truststore
  are expired or about to expire: A warning level alert is generated if certificates
  are expiring in 60 days. Critical level alerts are generated if certificates expire
  in 14 days or have already expired.'
- Configuring HTTP settings for the Delphix Engine
- Deleting any certificate that breaks an existing chain of trust is not allowed
- The default Delphix CA cannot be deleted
- Any changes to the TrustStore will not require a stack restart
- Secure user management is best achieved by integration with your centralized authentication
  service.
- Disable the out-of-the-box generic ADMIN and SYSADMIN accounts.
- Do not create generic functional accounts such as 'QA,' 'DEV,' or 'TEST.' Such accounts
  will not leave a proper audit trail and violate the separation of duties principle.
- Restrict the admin and sysadmin roles to 1-2 trusted named users each.
- When engines created before 5.3.1 are upgraded to 5.3.1 or later they will retain
  their old username 'delphix_admin'.
- Choose minimum privileges for Delphix DB user
- Protect the Delphix DB user password
- Use database encryption functionality to encrypt sensitive data at rest
- Choose encrypt and compress when linking
- Delphix support for Oracle on UNIX requires an OS account (delphix_os) on source
  database servers and on target servers that will host virtual databases or files.
- Use SSH Key exchange to allow the Delphix engine to communicate with targets.
- Put delphix_os on password rotation in accordance with your enterprise security
  policy for application software accounts.
- 'Delphix support for SQL Server requires two OS accounts for Windows: delphix_src
  (used on the source database server) and delphix_trgt (used on the servers which
  host Virtual Databases).'
- Put delphix_src and delphix_trgt on password rotation.
- Use minimum privileges on your SMB share.
- If the Delphix Engine or host environments are running off of an incorrect (slow)
  time configuration, DSP connections will not work until the time advances past all
  incoming certificate's 'Valid From (or Not Before)' time.
- A workaround is to create and use a certificate with a 'Valid From (or Not Before)'
  date which is before your slowest Engine or host.
- Phone Home service will send critical information about the Delphix Engine to Delphix
  Support using HTTPS, on a periodic basis.
- Enabling LDAP authentication allows your Delphix Engine to leverage the password
  control features of these products, such as expiration, lockout, and complexity.
- Reduce inactive session timeout to 15 minutes
- Do not use IP Addresses to access the Delphix Engine
- Disabling HTTP or configuring HTTP to redirect connections to HTTPS is recommended
  to protect in-flight user credentials and connections with the engine
- Ensure the connected app is properly configured.
- API calls may be throttled
- This will need to be done for all existing environments after DSP server/client
  authentication is enabled otherwise many host communication features will not work.
- Requires configuration of connected app in Delphix
- All running sources on the engine will be disabled by repave.
- Use GET /repave to check repave progress.
- The truststore is used for a variety of connections from the engine to external
  hosts, such as secure SMTP, and HTTPS proxy connections.
- Deleting any certificate that breaks an existing chain of trust is not allowed.
  The default Delphix CA cannot be deleted.
- Requires configuration of connected app in Delphix.
- Rate limiting applies for API calls.
- A sysadmin must initiate repave/prepare on the source engine before starting the
  apply process.
- The management service restarts during the repave apply operation.
- Encryption does not protect data that is accessed through applications and database
  clients, the most likely attack vector.
- Masking sensitive data before it gets to non-production systems is a critical tool
  in the security arsenal.
- Do not create generic functional accounts such as 'QA,' 'DEV,' or 'TEST.'
- Delphix strongly recommends leaving Support Access enabled at all times.
- If you wish to disable access, generate a unique token once a month and place it
  in a secure location separate from the Delphix Engine.
- Choose minimum privileges for Delphix DB user (delphix_db) on your source databases.
- Protect the Delphix DB user password as it has access to sensitive data dictionary
  information.
- Use database encryption functionality to encrypt sensitive data at rest.
- Choose encrypt and compress when linking to reduce CPU utilization and improve throughput.
- Password policy applies to non-LDAP Delphix Engine users.
- Restrict su - delphix_os to named Delphix admins and system administrators
- Use SSH Key exchange to allow the Delphix engine to communicate with targets
- Put delphix_os on password rotation
- Restrict elevated privilege commands to the lowest level needed
- Restrict privileged commands to the lowest level needed
- Put delphix_src and delphix_trgt on password rotation
- Use minimum privileges on your SMB share
- Use windows authentication for SQL server
- Establish at least one, but preferably three, corporate NTP servers and sync your
  Delphix Engine to them.
- Phone Home service will send critical information about the Delphix Engine to Delphix
  Support using HTTPS.
- Disabling HTTP or configuring HTTP to redirect connections to HTTPS is recommended
  to protect in-flight user credentials and connections with the engine.
- Delphix APIs are RESTful and require OAuth2 for authentication.
- Always use GET /repave to check repave progress.
- When the Delphix management service is restarting, GET /repave might not respond,
  wait for a few minutes and try again.
- Some responses may contain nulls in nested fields
- Environments must be created before any configuration is performed within Delphix
  Continuous Data.
- 'Unix/Linux: Configuration requires specification of the Secure Shell Protocol (SSH)
  port. By default, Delphix Continuous Data Engine will use port 22.'
- OAuth2 with refresh token requires setup of connected app in Delphix
- Ensure proper permissions are configured for API access
- All Delphix datasets are disabled during the repave process.
- The Delphix management service will be shut down during repave preparation.
- Ensure all ports are open and available before adding an environment to the engine.
- Delphix Continuous Data Engine shares its storage space with the staging and target
  environments using NFS mounts.
- Environment users must be created for each environment to perform actions on each
  environment.
- Privilege Elevation Profiles exist to provide a mechanism for running privileged
  commands securely.
- 'When requested, provide the token through a secure means: in your support ticket,
  via email or SMS to a trusted entity, etc.'
- All Delphix environment users on that environment require read and execute permissions
  on the provided JDK, its subfolders, and files.
- Delphix only supports using custom JDKs for Oracle, Adoptium Temurin, AIX, and HPUX.
  All other JDKs are not supported.
- This policy applies to non-LDAP Delphix Engine users. This includes the default
  users, delphix_admin and sysadmin. The password policy does not apply to LDAP users.
- By default, the Delphix Engine enforces the password policy named NONE, which enforces
  the least possible constraint.
- NFS encryption is not compatible with Oracle dNFS.
- NFS encryption is not compatible with NFSv3.
- Windows clusters are not yet supported.
- Windows standalone sources are not supported, as they use a connector environment
  (target environment) for iSCSI transactions and storage.
- The string set in the banner is in plain text only.
- You can also generate banners with multiple lines, however, this can only be done
  using the "securityConfig" API.
- Encryption can be applied to secure data transfer between the Delphix Continuous
  Data Engine and the target VDB or staging source environment via NFS/iSCSI.
- Before activating encryption, it's essential to confirm that all datasets linked
  to the environment are disabled.
- Once environment encryption is enabled, you must enable all the relevant datasets.
- For specific API details and changes, refer to API Changes in Delphix 17.0.0.0.
- As Windows cluster is not supported, the encryption enabling feature is not available
  for cluster environments.
- Attempting to enable encryption on any cluster node environment that is part of
  a cluster will result in an error.
- Requires setup of connected app in SAP ASE
- The toolkit directory must have 0770 permissions and at least 345MB of free space.
- Do not run the HostChecker as root. This will cause misleading or incorrect results
  from many of the checks.
- Some objects may have specific access requirements
- Disabling is a prerequisite for operations such as Database migration, dSource metadata
  upgrading post-data source upgrade, Restoring the source database from backup.
- Configuration requires specification of the Secure Shell Protocol (SSH) port. By
  default, Delphix Continuous Data Engine will use port 22.
- Configuration requires the installation of the Delphix Connector on the target environment.
- Consult the connector’s specific documentation on environment creation to identify
  other network requirements.
- Ensure to set up the OAuth2 credentials in the Delphix Engine.
- Environment users must be created for each environment to perform actions.
- Privilege elevation profiles exist to provide a mechanism for running privileged
  commands.
- Caution should be exercised when creating hook operations as they can inadvertently
  alter the state of a production database.
- Using HostChecker to validate SAP ASE source and target environments
- Windows standalone sources are not supported, as they use a connector environment
  for iSCSI transactions and storage.
- Success criteria for commands is an exit code of 0.
- For Linux environments, the encryption status of datasets can also be viewed in
  the status tab.
- In cases where a host is connected to more than one Delphix Continuous Data Engine
  with encryption enabled, it is possible to observe multiple Stunnel working directories
  and stunnel process on the host.
- When you refresh the environment with encryption enabled, a new stunnel-client certificate
  is generated and uploaded to the host stunnel toolkit directory.
- Oracle data sources require specific configurations based on environment.
- Pass credentials securely to hook operations to perform tasks like API calls or
  service management.
- Credentials are passed via environment variables in a hook operation's list property.
- Some endpoints may return additional metadata
- 'Disabling is a prerequisite for operations such as: Database migration, dSource
  metadata upgrading post-data source upgrade, Restoring the source database from
  backup'
- A detached dSource can still provision a Virtual Database (VDB)
- 'Re-linking capability: You can re-link the original source database as a new dSource'
- VDB operations require management application access.
- Force Delete should not be used as an alternative to Delete in normal circumstances.
- Delphix provides various configurations for different data sources.
- Connectivity issues between environments and engines may require SSH connectivity
  tests and DSP throughput tests.
- Ingestion problems particularly with connectors like Oracle, MS SQL Server, etc.,
  require a review of connector-specific logs.
- Delphix Continuous Data Engine and supported connectors should not be considered
  a replacement for the backup and recovery of your source instances and databases.
- Delphix requires gtar installed on Solaris hosts to handle long file names.
- The delphix_os user must be a member of the SYSDBA OS group.
- OAuth2 authentication is required for all requests.
- Backup server best practices are recommended for SAP ASE environments.
- Operations executing user-provided scripts have access to OS environment variables.
- Enabling linking and provisioning for SAP ASE environments
- Adding Oracle Virtual Databases and Virtual PDBs to Oracle Clusterware is not supported.
  This may result in provisioning and operational failures.
- VDB’s NFS mount directory must be a local directory with the same name on each node
  of the cluster and not the NFS mounted directory.
- The sqlnet.ora configuration file must be configured to allow bequeath database
  connections.
- Delphix issues sudo -l so we need to allow it via listpw. Never set it to always
  when using public key authentication
- The HP-UX OS does not allow the delphix_os user to determine the TNS_ADMIN environment
  variable setting for the oracle user.
- Starting with Oracle Database 23ai, the parameter ENCRYPTION_WALLET_LOCATION is
  no longer supported.
- Delphix supports both configurations for the appropriate releases.
- Ensure that you have the correct OAuth scopes.
- The Delphix user must be a member of the oracle group.
- The parent keystore must have group read privileges.
- The keystores root directory must have group write privileges.
- If TDE is configured using sqlnet.ora for a database version of Oracle 18c or higher,
  the Delphix Continuous Data Engine user must have access to create a directory under
  WALLET_ROOT.
- Selecting 'forever' ensures the snapshot is not purged by the retention policy.
- Connectivity issues between environments and engines may require SSH connectivity
  tests or DSP throughput tests.
- Ingestion problems with connectors like Oracle, MS SQL Server, etc., require a review
  of connector-specific logs.
- Some datasets may have access restrictions based on permissions
- Delphix Engine only allows NFS requests from IP Addresses specified for the host.
- At least 1.6 GB of storage is needed at the time of setting up the environment and
  at least 500MB of free space is required to allow refreshes and maintenance of the
  toolkit, especially during upgrades.
- The Delphix Engine must be able to make an SSH connection to the source host (typically
  port 22).
- For a Quick Start, simply set the time and your timezone. You can change this later.
- There must be a directory (e.g. "/mnt/provision/" or"/mnt/staging/") that will be
  used as a container for the NFS mount points that are created when provisioning
  a VDB.
- 'Permission to run: mount, umount, mkdir, rmdir as super-user.'
- An Oracle listener process running on the target host for provisioning a VDB.
- Kerberos authentication requires fully qualified domain name (FQDN) for host address.
- Only one principal must be defined in the Kerberos configuration.
- API supports multiple workflows for data extraction.
- If the environment user has oinstall permissions, Delphix will be able to discover
  the Version, Oracle Base, and Bits.
- Ensure correct network configuration for SAP ASE environments
- Support for RHEL 8.x requires installing the libncurses.5 library onto the host.
- Support for SLES 15 requires installing the libncurses.5 library onto the host.
- Privileges must be the same as the Oracle user (e.g. oracle) on the host.
- The Delphix software owner account (e.g. delphix_os) must have the same primary
  OS group as the Oracle software owner account (e.g. oracle).
- The delphix_os user must have either the OSBACKUPDBA group (typically backupdba)
  or the OSDBA group (typically dba) as a primary or secondary OS group.
- 'There must be a directory on the source host where the Delphix Engine Toolkit can
  be installed, for example: /var/opt/delphix/toolkit.'
- Read access to $ORACLE_HOME and all underlying files and directories.
- Bash shell must be installed and available for Linux based host.
- Ensure proper OAuth scopes are configured for the application.
- Both source and target Unix environments are required to have sshd running and configured
  such that the Delphix Engine can connect over ssh.
- The Delphix platform expects to maintain long-running, highly performant ssh connections
  with remote Unix environments.
- It is required to specify the NOPASSWD qualifier within the 'sudo' configuration
  file.
- Delphix issues 'sudo -l' in some scripts to detect if the operating system user
  has the correct sudo privileges.
- Restricting the execution of 'sudo -l' by setting 'listpw=always' when the Delphix
  operating system user is configured to use public key authentication will cause
  the Delphix operating system user to be prompted for a password which will fail
  certain Delphix actions.
- Delphix requires that the 'requiretty' setting be disabled for all Delphix users
  with 'sudo' privileges.
- Requires OAuth2 setup for authentication.
- If no errors are encountered and the username/password dialogs simply go away, then
  a successful connection was made to the database.
- If errors are encountered, you must investigate them on a case-by-case basis, just
  as you would do with any connection errors to an Oracle database.
- The privilege requirements are satisfied by ensuring that the parent keystore has
  group read privileges, and the keystores root directory (owned by the Delphix user)
  has group write privileges.
- Verify that a listener is running on the source or target environment.
- Some API methods may require specific permissions.
- Initial load takes place upon completion of the dSource linking wizard.
- Compression is enabled by default.
- Encrypted Linking is disabled by default.
- Logical Block Checking is disabled by default.
- Level Backups are disabled by default.
- Oracle validated sync is disabled by default.
- Some responses may include deeply nested fields
- API supports both REST and Bulk 2.0 types.
- 'For standalone Oracle environments: Enter the Environment name Enter Host IP address'
- 'For cluster Oracle RAC environments: Enter the Environment name, Enter Cluster
  home, and Enter Node address'
- NFS address given at the time of environment creation is applied to all the discovered
  RAC nodes.
- You will need to create a JKS or PKCS#12 keystore on the remote host with the full
  CA chain of the DSP key in the keystore.
- You will need to create another JKS or PKCS#12 keystore on the remote host with
  the desired key pair.
- The toolkit directory will have a separate subdirectory for each database instance
  and must have 0770 permissions.
- At least 1.6 GB of storage is needed at the time of setting up the environment and
  at least 500MB of free space is required to allow refreshes and maintenance of the
  toolkit.
- Make sure the Delphix Engine has already discovered the multitenant container database
  and its pluggable databases.
- You must have Block Change Tracking (BCT) enabled for the container database.
- The container database must be in ARCHIVELOG mode and the NOLOGGING option must
  be disabled.
- BCT is available from Oracle release 11.1.0.6 onward for physical standby databases
  only if they are licensed for the Active Data Guard option.
- BCT on a primary database has been stable since Oracle version 10.2.0.5.
- These scripts must be modified for local use, particularly regarding whether the
  physical standby database operates in MOUNTED or OPEN mode.
- Kerberos principal must be defined and used for all Kerberized host environments.
- Fully qualified domain name (FQDN) is required for host address.
- If any of these fields are found to be different than those provided by the user,
  a fault will be raised on the repository.
- Requires configuration of the Delphix engine.
- APIs are subject to rate limits.
- Verify that a listener is running on the source or target environment you are investigating.
- If a listener is not listed, it may be due to insufficient privileges.
- Initial load takes place upon completion of the dSource linking wizard or according
  to a SnapSync policy.
- Validated sync is disabled by default.
- Block Change Tracking (BCT) must be enabled for the container database.
- The container database must be in ARCHIVELOG mode and NOLOGGING option must be disabled.
- Enabling BCT on a physical standby database without these patches is not recommended
  because of serious performance and stability issues.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'DLPX-88884: Fixed kernel deadlock issue that may occur during block-to-object storage
  migration.'
- 'DLPX-85176: Fixed a bug that can bring down VDBs using NFSv3.'
- Error codes related to fixes and upgrades
- Changing a Custom Policy while it is running on an object can cause the Policy execution
  to fail.
- During an upgrade, when the engine tries to run the ASE UNMOUNT command while also
  trying to quiesce VDBs, the UNMOUNT command gets stuck (this command does not run
  under a timeout). Due to this, the upgrade job is stalled.
- A sysadmin user cannot view actions initiated by a different sysadmin user.
- Improved handling of missing networking devices after instance type migration.
- Provision, refresh, rewind, or start operations on a virtual database on a Solaris
  host with NFSv4 enabled may become stuck indefinitely due to mount process getting
  stuck on the Solaris NFS client.
- When relocating multiple terabytes of data either via block-to-object storage migration
  or device removal, management of the engine can become unresponsive for a lengthy
  period of time (i.e. 30+ mins), dependent on the dataset size and workload.
- An ‘Apply Now’ upgrade from 18.0.0.x to 19.0.0.x will logout the user due to the
  delphix-mgmt service restarting. The upgrade may still be in progress (e.g. quiesce
  jobs). To view the upgrade progress, login into Setup as sysadmin to view the Running
  Actions.
- /var/crash cleanup should include hprof files in this directory.
- Software keystore TDE-enabled provisioning fails after upgrading to 19.0.0.0
- 'exception.oracle.vdb.no.virtual.datafiles.found: Disable the VDB and re-attempt
  the failed operation.'
- 'DLPX-56944: Contact Delphix Support for corrective actions.'
- 'DLPX-56978: None'
- 'DLPX-56979: None'
- 'DLPX-57142: None'
- 'DLPX-57412: None'
- 'DLPX-57673: None'
- 'DLPX-57823: None'
- 'DLPX-58185: None'
- 'DLPX-58226: None'
- 'DLPX-59473: None'
- 'DLPX-66155: None'
- 'DLPX-66860: Create an explicit rule in ADFS that transforms the emailAddress attribute
  into a nameid. The rule type must be "Transform an incoming claim". The incoming
  claim type must be "Email address" and the outgoing claim type must be "Name ID".
  The nameid format must be "Email address".'
- 'DLPX-77849: Rather than using a Windows domain user for authentication, switch
  the dSource to use a database user.'
- 'DLPX-77986: Fix any credential failures.'
- 'DLPX-78589: When the ASE UNMOUNT command is hung, the ASE instance must be restarted.'
- 'DLPX-80193: Change source database to read-write, create a backup and sync to the
  dSource, and provision VDB.'
- 'DLPX-80920: Verify the upgrade and then apply the upgrade. If the issue occurs
  after a failed upgrade, restarting the management stack will resolve the issue.'
- 'DLPX-81300: Set initiator name to a valid name, eg: iqn.1991-05.com.microsoft:10-43-47-42.qa-ad.delphix.com.'
- 'DLPX-81478: Change the backup script creating transaction logs to ingest FULL backups.'
- 'DLPX-81559: Update the VDB parameters (either directly or via a VDB Config Template).'
- 'DLPX-83643: Perform a vPDB refresh operation to update the NFS protocol version
  to 4.'
- 'DLPX-84075: Go to the below mentioned temp directory, and delete all the files
  from it: C:\Window\ServiceProfiles\NetworkService\appdata\local\temp.'
- 'DLPX-84253: Users may mark the fault Ignored, but will need to be aware the CA
  certificate will still appear in Truststore.'
- 'DLPX-84598: None'
- 'DLPX-84710: None'
- 'DLPX-85469: None'
- 'DLPX-85770: Retry the failed VDB/vPDB start or self-service container start operation,
  it should succeed without any error.'
- 'DLPX-86109: To get disabled Oracle VDBs back to an enabled state, manually disable
  sources via the Delphix CLI and enable them back via the Delphix CLI/UI.'
- 'DLPX-86181: Switch the NFS protocol to v3 using the Delphix engine CLI, manually
  terminate the stuck mount processes on the Solaris host and re-attempt the failed
  Delphix operation.'
- 'DLPX-86344: Verify the upgrade and then apply the upgrade. If the issue is hit
  after a failed upgrade, Restarting the management stack will resolve the issue.'
- 'DLPX-86842: Re-link or delete the dSources before trying to upgrade to 12.0.0.0,
  OR upgrade to version 11.0.0.0 or 13.0.0.0.'
- 'DLPX-87006: None. Contact Delphix support for corrective actions.'
- 'DLPX-58185: Changing a Custom Policy while it is running on an object can cause
  the Policy execution to fail.'
- 'DLPX-78589: During an upgrade, when the engine tries to run the ASE UNMOUNT command
  while also trying to quiesce VDBs, the UNMOUNT command gets stuck (this command
  does not run under a timeout). Due to this, the upgrade job is stalled.'
- 'DLPX-84598: A sysadmin user cannot view actions initiated by a different sysadmin
  user.'
- 'DLPX-84710: Improved handling of missing networking devices after instance type
  migration.'
- 'DLPX-86181: Provision, refresh, rewind, or start operations on a virtual database
  on a Solaris host with NFSv4 enabled may become stuck indefinitely due to mount
  process getting stuck on the Solaris NFS client.'
- 'DLPX-87213: When relocating multiple terabytes of data either via block-to-object
  storage migration or device removal, management of the engine can become unresponsive
  for a lengthy period of time (i.e. 30+ mins), dependent on the dataset size and
  workload.'
- 'DLPX-88930: An ‘Apply Now’ upgrade from 18.0.0.x to 19.0.0.x will logout the user
  due to the delphix-mgmt service restarting.'
- 'DLPX-89128: /var/crash cleanup should include hprof files in this directory.'
- 'DLPX-89817: Software keystore TDE-enabled provisioning fails after upgrading to
  19.0.0.0'
- Vague error message appears in a case where provisioning fails due to a database
  being in read-only mode.
- Refresh operation fails for the self service containers having ordered sources.
- 'ENVIRONMENT_NOT_FOUND: Check if the environment exists.'
- 'AUTHORIZATION_FAILED: Verify your credentials.'
- '403 Forbidden: Check your permissions.'
- '404 Not Found: Verify the endpoint path.'
- '500 Internal Server Error: Retry the request.'
- '401 Unauthorized: Check your OAuth token and permissions.'
- '404 Not Found: Verify the endpoint path and parameters.'
- '401 Unauthorized: Check your API token and permissions.'
- '404 Not Found: The requested resource may not exist.'
- '400 Bad Request: Check request parameters and data format.'
- '401 Unauthorized: Verify your authentication details.'
- '403 Forbidden: Check user permissions'
- '404 Not Found: Verify the endpoint path'
- '400 Bad Request: Check request parameters.'
- '403 Forbidden: Insufficient permissions.'
- '404 Not Found: Resource does not exist.'
- '401 Unauthorized: Check your authentication credentials.'
- '404 Not Found: Verify the endpoint URL.'
- '401 Unauthorized: Check your API credentials.'
- '500 Internal Server Error: The server encountered an unexpected condition.'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Ensure that your authentication is correct.'
- Unable to access Delphix Engine through a Web browser.
- '401 Unauthorized: Check client ID and secret.'
- '404 Not Found: Check the endpoint path'
- '500 Internal Server Error: Retry the request'
- 'LOW_STORAGE_LIMIT: Ensure the storage is provisioned beyond current usage.'
- '401 Unauthorized: Check your credentials and permissions.'
- '404 Not Found: Verify the endpoint and resource.'
- Ensure all required permissions are granted for the object storage bucket.
- 'INVALID_CREDENTIALS: Verify the username and password.'
- 'DATABASE_NOT_FOUND: Check the database name provided.'
- 'CONNECTION_TIMEOUT: Ensure network connectivity to the SAP ASE server.'
- If you see a message that starts with `Internal Error`, forward it to Delphix Support
  immediately.
- 'OVF_ERROR: Check the OVA file integrity.'
- 'NETWORK_ERROR: Verify network settings and connectivity.'
- '401 Unauthorized: Check your credentials'
- '403 Forbidden: You do not have permission to access this resource'
- 'INVALID_ENVIRONMENT: The specified environment does not exist.'
- 'LINKING_FAILED: Ensure that all required fields are correctly filled.'
- '403 Forbidden: Check user permissions for the requested endpoint.'
- '401 Unauthorized: Check OAuth credentials or token expiration'
- '403 Forbidden: Ensure proper permissions are set'
- '429 Too Many Requests: Rate limit exceeded'
- '404 Not Found: Check the endpoint path.'
- sessionTimeout must be configured via CLI for System Setup users.
- '403 Forbidden: Check user permissions.'
- '404 Not Found: Ensure the endpoint exists.'
- '500 Internal Server Error: Retry request after some time.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'Transient connection loss: Automatically recovers without application involvement'
- 'Random data corruption: Automatically recovers'
- '404 Not Found: The specified resource does not exist.'
- '404 Not Found: Verify endpoint URL'
- 'INVALID_CREDENTIALS: Verify client ID and secret.'
- 'RESOURCE_NOT_FOUND: Check endpoint URL.'
- NFSv4 is not supported for HP-UX clients.
- If NFSv4 is not supported on the mount, then the Delphix Engine will fail to mount
  the VDBs and return a user exception with the reason 'NFSv4 is not supported'.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- Do not remove a configured storage device
- Removing or reducing a configured storage device will cause a fault with the Delphix
  Engine
- '401 Unauthorized: Check client credentials and OAuth scopes.'
- '400 Bad Request: Check the request parameters'
- '404 Not Found: The requested resource does not exist'
- When an error condition occurs during the execution of an action, the background
  color of the action box becomes red, and the action remains in the top section until
  you dismiss it.
- Do not remove a configured storage device or reduce its capacity.
- '404 Not Found: Ensure the endpoint is correct.'
- '500 Internal Server Error: Retry the request after some time.'
- 'Emergency: system is unusable'
- 'Alert: action must be taken immediately'
- 'Critical: critical conditions'
- 'Error: error conditions'
- 'Warning: warning conditions'
- 'Notice: normal but significant condition'
- 'Informational: informational messages'
- 'Debug: debug-level messages'
- 'Critical Fault: Issue that breaks certain functionality.'
- 'Warning Fault: System can continue despite the fault but may not perform optimally.'
- '401 Unauthorized: Recheck HEC Token or index permissions'
- '401 Unauthorized: Recheck OAuth credentials or token expiration.'
- Syntax errors in the plugin’s config file
- Network configuration problems on the data consumer server
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Check your OAuth2 credentials'
- '401 Unauthorized: Check your OAuth token.'
- '500 Internal Server Error: Contact support for assistance.'
- '401 Unauthorized: Check API key or token'
- '401 Unauthorized: Check your access token and permissions.'
- STORAGE_TEST_EXECUTE job completed successfully.
- '401 Unauthorized: Check client credentials or token expiration.'
- '404 Not Found: Ensure the endpoint path is correct.'
- '401 Unauthorized: Check your token or permissions'
- '404 Not Found: Verify endpoint path or resource availability'
- 'CRITICAL: The Delphix Engine cannot be upgraded while CRITICAL checks are present'
- 'WARNING: Problems that are local to some objects on the Delphix Engine'
- '401 Unauthorized: Check credentials and token'
- 'CRITICAL: Potential problem post-upgrade; engine cannot be upgraded.'
- 'WARNING: Problems local to objects; engine can continue running.'
- '401 Unauthorized: Recheck authentication details.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls.'
- '401 Unauthorized: Check OAuth token expiration.'
- Invalid response returned from server. The management service may be unavailable,
  please wait and try again.
- '401 Unauthorized: Check client credentials and permissions'
- '404 Not Found: Verify endpoint and parameters'
- Invalid response returned from server. The management service may be unavailable.
- 'state: APPLY_SUCCESSFUL: Indicates that the repave apply operation was successful.'
- If encryption is enabled on an environment, adding that environment to a cluster
  as a node will fail.
- '401 Unauthorized: Check OAuth scopes or token expiration'
- '403 Forbidden: Insufficient permissions for the requested operation'
- '404 Not Found: Verify the endpoint path and resource existence'
- '404 Not Found: Check if the endpoint is correct or if the resource exists.'
- '401 Unauthorized: Verify authentication details.'
- Attempting to enable encryption on any cluster node environment that is part of
  a cluster will result in an error.
- '401 Unauthorized: Check user credentials.'
- '404 Not Found: Verify endpoint paths.'
- '400 Bad Request: Check the request payload'
- '401 Unauthorized: Verify OAuth token'
- '404 Not Found: Resource may not exist'
- '401 Unauthorized: Check credentials and permissions.'
- '404 Not Found: Verify the endpoint and resource availability.'
- '403 Forbidden: Ensure proper permissions are granted'
- '500 Internal Server Error: Retry the request after some time'
- '401 Unauthorized: Check OAuth credentials'
- '404 Not Found: Verify endpoint path'
- '401 Unauthorized: Check OAuth token'
- '403 Forbidden: Insufficient permissions'
- 'INVALID_AUTH: Check your authentication credentials.'
- 'RESOURCE_NOT_FOUND: Verify the endpoint path.'
- '401 Unauthorized: Check your authentication credentials'
- Disallowed sshd configuration entries include ClientAliveInterval and ClientAliveCountMax.
- Delphix can still function without these privileges, although auto-discovery may
  not work.
- '401 Unauthorized: Verify client ID and secret.'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: The requested resource could not be found.'
- '500 Internal Server Error: An error occurred on the server.'
- Failure to meet all of these requirements will cause external RMAN backups to be
  incomplete or result in corrupt SnapSync snapshots.
- 'INVALID_CREDENTIALS: Check your client ID and secret.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - CyberArk
  - Hashicorp
  - OAuth2
  - BearerToken
  - OAuthToken
  - APISession
  - LoginRequest
  - CyberArkVaultCredential
  - HashiCorpVaultCredential
  - PasswordCredential
  - KeyPairCredential
client:
  base_url: https://cd.delphix.com
  auth:
    type: oauth2
source_metadata: null
