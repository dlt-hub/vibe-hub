resources:
- name: figure
  endpoint:
    path: /api/proplot.ui.figure
    method: GET
    data_selector: data
    params: {}
- name: subplots
  endpoint:
    path: /api/proplot.ui.subplots
    method: GET
    data_selector: data
    params: {}
- name: subplots
  endpoint:
    path: /subplots
    method: GET
    data_selector: records
- name: tick_locations
  endpoint:
    path: /api/proplot/tick_locations
    method: GET
    data_selector: tick_locations
    params: {}
- name: tick_formatting
  endpoint:
    path: /api/proplot/tick_formatting
    method: GET
    data_selector: tick_formatting
    params: {}
- name: datetime_axes
  endpoint:
    path: /api/proplot/datetime_axes
    method: GET
    data_selector: datetime_axes
    params: {}
- name: axis_positions
  endpoint:
    path: /api/proplot/axis_positions
    method: GET
    data_selector: axis_positions
    params: {}
- name: axis_scales
  endpoint:
    path: /proplot/axis_scales
    method: GET
    data_selector: scales
- name: alternate_axes
  endpoint:
    path: /proplot/alternate_axes
    method: GET
    data_selector: axes
- name: dual_unit_axes
  endpoint:
    path: /proplot/dual_unit_axes
    method: GET
    data_selector: units
- name: geographic_axes
  endpoint:
    path: /api/proplot.figure.Figure.add_subplot
    method: GET
- name: cartopy_and_basemap
  endpoint:
    path: /api/proplot.constructor.Proj
    method: GET
- name: geo_axes_format
  endpoint:
    path: /api/proplot.axes.GeoAxes.format
    method: GET
- name: AutoFormatter
  endpoint:
    path: api/proplot.ticker.AutoFormatter.html#proplot.ticker.AutoFormatter
    method: GET
- name: FracFormatter
  endpoint:
    path: api/proplot.ticker.FracFormatter.html#proplot.ticker.FracFormatter
    method: GET
- name: SciFormatter
  endpoint:
    path: api/proplot.ticker.SciFormatter.html#proplot.ticker.SciFormatter
    method: GET
- name: SigFigFormatter
  endpoint:
    path: api/proplot.ticker.SigFigFormatter.html#proplot.ticker.SigFigFormatter
    method: GET
- name: SimpleFormatter
  endpoint:
    path: api/proplot.ticker.SimpleFormatter.html#proplot.ticker.SimpleFormatter
    method: GET
- name: DegreeFormatter
  endpoint:
    path: api/proplot.ticker.DegreeFormatter.html#proplot.ticker.DegreeFormatter
    method: GET
- name: LongitudeFormatter
  endpoint:
    path: api/proplot.ticker.LongitudeFormatter.html#proplot.ticker.LongitudeFormatter
    method: GET
- name: LatitudeFormatter
  endpoint:
    path: api/proplot.ticker.LatitudeFormatter.html#proplot.ticker.LatitudeFormatter
    method: GET
- name: CutoffScale
  endpoint:
    path: api/proplot.scale.CutoffScale.html#proplot.scale.CutoffScale
    method: GET
- name: ExpScale
  endpoint:
    path: api/proplot.scale.ExpScale.html#proplot.scale.ExpScale
    method: GET
- name: FuncScale
  endpoint:
    path: api/proplot.scale.FuncScale.html#proplot.scale.FuncScale
    method: GET
- name: InverseScale
  endpoint:
    path: api/proplot.scale.InverseScale.html#proplot.scale.InverseScale
    method: GET
- name: LinearScale
  endpoint:
    path: api/proplot.scale.LinearScale.html#proplot.scale.LinearScale
    method: GET
- name: LogitScale
  endpoint:
    path: api/proplot.scale.LogitScale.html#proplot.scale.LogitScale
    method: GET
- name: LogScale
  endpoint:
    path: api/proplot.scale.LogScale.html#proplot.scale.LogScale
    method: GET
- name: MercatorLatitudeScale
  endpoint:
    path: api/proplot.scale.MercatorLatitudeScale.html#proplot.scale.MercatorLatitudeScale
    method: GET
- name: PowerScale
  endpoint:
    path: api/proplot.scale.PowerScale.html#proplot.scale.PowerScale
    method: GET
- name: SineLatitudeScale
  endpoint:
    path: api/proplot.scale.SineLatitudeScale.html#proplot.scale.SineLatitudeScale
    method: GET
- name: SymmetricalLogScale
  endpoint:
    path: api/proplot.scale.SymmetricalLogScale.html#proplot.scale.SymmetricalLogScale
    method: GET
- name: DiscreteColormap
  endpoint:
    path: api/proplot.colors.DiscreteColormap.html#proplot.colors.DiscreteColormap
    method: GET
- name: ContinuousColormap
  endpoint:
    path: api/proplot.colors.ContinuousColormap.html#proplot.colors.ContinuousColormap
    method: GET
- name: PerceptualColormap
  endpoint:
    path: api/proplot.colors.PerceptualColormap.html#proplot.colors.PerceptualColormap
    method: GET
- name: DiscreteNorm
  endpoint:
    path: api/proplot.colors.DiscreteNorm.html#proplot.colors.DiscreteNorm
    method: GET
- name: DivergingNorm
  endpoint:
    path: api/proplot.colors.DivergingNorm.html#proplot.colors.DivergingNorm
    method: GET
- name: SegmentedNorm
  endpoint:
    path: api/proplot.colors.SegmentedNorm.html#proplot.colors.SegmentedNorm
    method: GET
- name: ColorDatabase
  endpoint:
    path: api/proplot.colors.ColorDatabase.html#proplot.colors.ColorDatabase
    method: GET
- name: ColormapDatabase
  endpoint:
    path: api/proplot.colors.ColormapDatabase.html#proplot.colors.ColormapDatabase
    method: GET
- name: Aitoff
  endpoint:
    path: api/proplot.crs.Aitoff.html#proplot.crs.Aitoff
    method: GET
- name: Hammer
  endpoint:
    path: api/proplot.crs.Hammer.html#proplot.crs.Hammer
    method: GET
- name: KavrayskiyVII
  endpoint:
    path: api/proplot.crs.KavrayskiyVII.html#proplot.crs.KavrayskiyVII
    method: GET
- name: WinkelTripel
  endpoint:
    path: api/proplot.crs.WinkelTripel.html#proplot.crs.WinkelTripel
    method: GET
- name: NorthPolarAzimuthalEquidistant
  endpoint:
    path: api/proplot.crs.NorthPolarAzimuthalEquidistant.html#proplot.crs.NorthPolarAzimuthalEquidistant
    method: GET
- name: SouthPolarAzimuthalEquidistant
  endpoint:
    path: api/proplot.crs.SouthPolarAzimuthalEquidistant.html#proplot.crs.SouthPolarAzimuthalEquidistant
    method: GET
- name: NorthPolarGnomonic
  endpoint:
    path: api/proplot.crs.NorthPolarGnomonic.html#proplot.crs.NorthPolarGnomonic
    method: GET
- name: SouthPolarGnomonic
  endpoint:
    path: api/proplot.crs.SouthPolarGnomonic.html#proplot.crs.SouthPolarGnomonic
    method: GET
- name: NorthPolarLambertAzimuthalEqualArea
  endpoint:
    path: api/proplot.crs.NorthPolarLambertAzimuthalEqualArea.html#proplot.crs.NorthPolarLambertAzimuthalEqualArea
    method: GET
- name: SouthPolarLambertAzimuthalEqualArea
  endpoint:
    path: api/proplot.crs.SouthPolarLambertAzimuthalEqualArea.html#proplot.crs.SouthPolarLambertAzimuthalEqualArea
    method: GET
- name: GeoAxes
  endpoint:
    path: /api/proplot.axes.GeoAxes.format
    method: GET
    data_selector: records
- name: CartesianAxes
  endpoint:
    path: /api/proplot.axes.CartesianAxes.format
    method: GET
    data_selector: records
- name: subplot_grid
  endpoint:
    path: /api/proplot/gridspec/SubplotGrid
    method: GET
    data_selector: grid
- name: figure
  endpoint:
    path: /api/proplot/figure/Figure
    method: GET
    data_selector: fig
- name: subplots
  endpoint:
    path: /subplots
    method: GET
    data_selector: records
- name: Tick locations
  endpoint:
    path: /api/proplot.axes.CartesianAxes.format
    method: GET
    data_selector: tick locations
- name: Tick formatting
  endpoint:
    path: /api/proplot.axes.CartesianAxes.format
    method: GET
    data_selector: tick formatting
- name: Datetime axes
  endpoint:
    path: /api/proplot.axes.CartesianAxes.format
    method: GET
    data_selector: datetime axes
- name: Axis positions
  endpoint:
    path: /api/proplot.axes.CartesianAxes.format
    method: GET
    data_selector: axis positions
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: axis_scales
  endpoint:
    path: /proplot/axis_scales
    method: GET
    data_selector: scales
    params: {}
- name: basemap_projections
  endpoint:
    path: /basemap/projections
    method: GET
    data_selector: projs
    params: {}
- name: polar_axes
  endpoint:
    path: /polar/axes
    method: GET
    data_selector: polar
    params: {}
- name: 1D plotting
  endpoint:
    path: /1dplotting
    method: GET
    data_selector: records
    params: {}
- name: 2D plotting
  endpoint:
    path: /api/2dplotting
    method: GET
    data_selector: records
    params: {}
- name: ContinuousColormap
  endpoint:
    path: /api/proplot/colors/ContinuousColormap
    method: GET
    data_selector: records
- name: PerceptualColormap
  endpoint:
    path: /api/proplot/colors/PerceptualColormap
    method: GET
    data_selector: records
- name: Colormap
  endpoint:
    path: /api/proplot/constructor/Colormap
    method: GET
    data_selector: records
- name: colormaps
  endpoint:
    path: /api/proplot/colormaps
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: basemap_projections
  endpoint:
    path: /basemap/projections
    method: GET
    data_selector: projs
    params: {}
- name: polar_axes
  endpoint:
    path: /polar/axes
    method: GET
    data_selector: polar_axes
    params: {}
- name: color_cycles
  endpoint:
    path: /api/proplot/colors/DiscreteColormap
    method: GET
    data_selector: registered_cycles
    params: {}
- name: register_cycles
  endpoint:
    path: /api/proplot/config/register_cycles
    method: POST
    data_selector: response
    params: {}
- name: fonts
  endpoint:
    path: /api/proplot/fonts
    method: GET
    data_selector: available_fonts
- name: panel_axes
  endpoint:
    path: /api/proplot.axes.Axes.panel_axes
    method: GET
    data_selector: records
- name: inset_axes
  endpoint:
    path: /api/proplot.axes.Axes.inset_axes
    method: GET
    data_selector: records
- name: suptitle
  endpoint:
    path: /suptitle
    method: GET
    data_selector: records
- name: tick
  endpoint:
    path: /tick
    method: GET
    data_selector: records
- name: title
  endpoint:
    path: /title
    method: GET
    data_selector: records
- name: toplabel
  endpoint:
    path: /toplabel
    method: GET
    data_selector: records
- name: unitformat
  endpoint:
    path: /unitformat
    method: GET
    data_selector: records
- name: proplotrc
  endpoint:
    path: /~/.proplot/proplotrc
    method: GET
    data_selector: settings
    params: {}
- name: colormaps
  endpoint:
    path: /api/colormaps
    method: GET
    data_selector: colormaps
    params: {}
- name: ThreeAxes
  endpoint:
    path: /api/proplot/axes/ThreeAxes
    method: GET
    data_selector: records
    params: {}
- name: CartesianAxes
  endpoint:
    path: /api/proplot/axes/CartesianAxes
    method: GET
    data_selector: records
    params: {}
- name: GeoAxes
  endpoint:
    path: /api/proplot/axes/GeoAxes
    method: GET
    data_selector: records
    params: {}
- name: PlotAxes
  endpoint:
    path: /api/proplot/axes/PlotAxes
    method: GET
    data_selector: records
    params: {}
- name: colorbar
  endpoint:
    path: /api/proplot/axes/Axes.colorbar
    method: GET
notes:
- By default, proplot fixes the physical dimensions of a reference subplot rather
  than the figure.
- Proplot makes it easier to work with multiple subplots and create clear, concise
  figures.
- Uses custom figure and axes settings with the format command.
- Supports stylesheets for different axes.
- Proplot does not officially support nested matplotlib structures
- Some features associated with nested matplotlib structures can be reproduced with
  proplot
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Note that all x and y axis limits and ticks are identical
- 'Optional: installation of cartopy and basemap are not required to use proplot'
- By default, proplot gives circular boundaries to polar cartopy projections like
  NorthPolarStereo.
- By default, proplot uses set_global to give non-polar cartopy projections global
  extent and bounds polar cartopy projections at the equator.
- Basemap is no longer maintained and will not work with matplotlib versions more
  recent than 3.2.2.
- Uses geographic-specific axes modifications.
- Inline labels and label rotation can be configured.
- Proplot is an object-oriented matplotlib wrapper.
- Uses settings and styles for customization
- Supports various axes types including Cartesian and Polar
- Proplot does not officially support nested matplotlib structures.
- 'ShapelyDeprecationWarning: __len__ for multi-part geometries is deprecated and
  will be removed in Shapely 2.0. Check the length of the `geoms` property instead
  to get the number of parts of a multi-part geometry.'
- 'ShapelyDeprecationWarning: Iteration over multi-part geometries is deprecated and
  will be removed in Shapely 2.0. Use the `geoms` property to access the constituent
  parts of a multi-part geometry.'
- Uses tight layout algorithm that can be overridden with spacing arguments
- Proplot makes several changes to the axis scale API
- Proplot includes a few new axis scales like 'cutoff', 'sine', 'mercator', and 'inverse'
- Polar axes are represented with the PolarAxes subclass.
- Polar-specific modifications can be made using the format command.
- Geographic features are powered by the cartopy and basemap packages. Note that these
  features are optional – installation of cartopy and basemap are not required to
  use proplot.
- By default, proplot gives circular boundaries to polar cartopy projections.
- Uses default settings for geographic-specific axes modifications.
- Uses various plotting commands with customizable parameters
- Uses the cartopy API for projections and mapping.
- Matplotlib colormaps with erratic color transitions like 'jet' are still registered,
  but their usage is discouraged.
- Save colormap data files to the cmaps subfolder inside user_folder
- Call register_cmaps to register downloaded colormaps
- Proplot adds several features to help you use color cycles effectively in your figures.
- Proplot includes improvements to the matplotlib API for colorbars and legends.
- Try to avoid .ttf files with Thin in the file name.
- Panels do not interfere with the tight layout algorithm
- Panels do not affect the subplot aspect ratios
- To update this file after a version change, simply remove it and restart your python
  session.
- To explicitly load a proplotrc file, use load.
- Permit partial specification of `legend` labels, e.g. `[h1, h2]` paired with `['label',
  None]` overrides the artist label for `h1` but uses the artist label for `h2`.
- Interpret all native matplotlib `legend` spacing arguments (e.g., `borderpad` and
  `columnspacing`) with [`units`](api/proplot.utils.units.html#proplot.utils.units).
- Control edge width for legend frames with `ew` or `edgewidth` rather than `lw` and
  `linewidth` to avoid conflict with feature that permits modifying legend handle
  properties.
- Make [`proplot.axes.Axes.colorbar`](api/proplot.axes.Axes.colorbar.html#proplot.axes.Axes.colorbar)
  capture matplotlib-native [`format`](https://docs.python.org/3/library/functions.html#format)
  keyword as alias for `formatter` and `ticklabels`.
- Support list-of-string parametric coordinates and format on-the-fly colorbar ticks
  with those string labels.
- Add `ignore` keyword to omit specific `show_cmaps`, `show_cycles`, and `show_colors`
  categories from the tables.
- Allow case-insensitive specification of `show_cmaps`, `show_cycles`, and `show_colors`
  categories and never ignore input colormaps even if they match an ignored name like
  'jet'.
- Support restricting cartopy bounds in cartopy 0.19 by leveraging the `ylim` [`Gridliner`](https://scitools.org.uk/cartopy/docs/latest/reference/generated/cartopy.mpl.gridliner.Gridliner.html#cartopy.mpl.gridliner.Gridliner)
  property.
- Add `xlabelpad`, `ylabelpad`, `xticklabelpad`, `yticklabelpad` keywords to [`format`](api/proplot.axes.CartesianAxes.format.html#proplot.axes.CartesianAxes.format)
  and read and apply changed `rc['axes.labelpad']`.
- Add support for 'minor' radial and azimuthal gridlines in [`proplot.axes.PolarAxes.format`](api/proplot.axes.PolarAxes.format.html#proplot.axes.PolarAxes.format),
  controlled with keywords like `rminorlocator`, and `thetaminorlocator`.
- Add `thetagrid`, `rgrid`, `thetagridminor`, and `rgridminor` keys to [`proplot.axes.PolarAxes.format`](api/proplot.axes.PolarAxes.format.html#proplot.axes.PolarAxes.format)
  to toggle gridlines, and read and apply changed toggles from rc settings.
- Add `title_kw`, `suptitle_kw`, `leftlabels_kw`, `rightlabels_kw`, `toplabels_kw`,
  and `bottomlabels_kw` to [`proplot.axes.Axes.format`](api/proplot.axes.Axes.format.html#proplot.axes.Axes.format)
  for arbitrarily modifying label text objects.
- Major clean up of notebook examples
- Major clean up wrappers documentation
- Contributions of any size are greatly appreciated!
- Bugs should be reported using the Github issues page.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/110m_physical/ne_110m_coastline.zip'
- 'Invalid cycle name: Ensure the cycle name is registered.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://pypi.org/project/proplot/
source_metadata: null
