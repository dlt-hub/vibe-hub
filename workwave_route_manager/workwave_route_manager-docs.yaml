resources:
- name: list_simulations
  endpoint:
    path: /api/v1/territories/:territoryId/simulations
    method: GET
    data_selector: territories
    params: {}
- name: delete_region
  endpoint:
    path: /api/v1/territories/:territoryId/regions
    method: DELETE
    data_selector: requestId
- name: list_drivers
  endpoint:
    path: /api/v1/territories/:territoryId/drivers
    method: GET
    data_selector: drivers
- name: add_driver
  endpoint:
    path: /api/v1/territories/:territoryId/drivers
    method: POST
    data_selector: requestId
- name: replace_driver
  endpoint:
    path: /api/v1/territories/:territoryId/drivers/:driverId
    method: PUT
    data_selector: requestId
- name: update_multiple_drivers
  endpoint:
    path: /api/v1/territories/:territoryId/drivers
    method: PUT
    data_selector: requestId
- name: delete_driver
  endpoint:
    path: /api/v1/territories/:territoryId/drivers/:driverId
    method: DELETE
    data_selector: requestId
- name: unassign_orders
  endpoint:
    path: /api/v2/territories/:territoryId/scheduling/unassign
    method: POST
    data_selector: requestId
- name: delete_vehicle
  endpoint:
    path: /api/v1/territories/:territoryId/vehicles/:vehicleId
    method: DELETE
    data_selector: requestId
- name: depots
  endpoint:
    path: /api/v1/territories/:territoryId/depots
    method: GET
    data_selector: depots
- name: regions
  endpoint:
    path: /api/v1/territories/:territoryId/regions
    method: GET
    data_selector: regions
- name: replace_driver_assignments
  endpoint:
    path: /api/v1/territories/:territoryId/vehicledriverassignments/:date
    method: POST
- name: unassign_orders
  endpoint:
    path: /api/v2/territories/:territoryId/scheduling/unassign
    method: POST
- name: get_orders
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/orders
    method: GET
- name: add_single_order
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/orders
    method: POST
    data_selector: requestId
- name: replace_order
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/orders/:orderId
    method: POST
    data_selector: requestId
- name: replace_orders
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/orders
    method: PUT
- name: update_orders
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/orders
    method: PATCH
- name: unassign_orders
  endpoint:
    path: /api/v2/territories/:territoryId/simulation/:simulationId/scheduling/unassign
    method: POST
    data_selector: requestId
    params:
      orderIds: <comma_separated_list>
- name: callback_url
  endpoint:
    path: /api/v1/callback
    method: GET
    data_selector: url
    params: {}
- name: delete_vehicle
  endpoint:
    path: /api/v1/territories/:territoryId/vehicles
    method: DELETE
    data_selector: requestId
    params: {}
- name: get_vehicle_settings
  endpoint:
    path: /api/v1/territories/:territoryId/vehicles/:vehicleId/:date
    method: GET
    data_selector: settings
    params: {}
- name: replace_vehicle_settings
  endpoint:
    path: /api/v1/territories/:territoryId/vehicles/:vehicleId/:date
    method: POST
    data_selector: requestId
    params: {}
- name: list_vehicle_settings
  endpoint:
    path: /api/v1/territories/:territoryId/vehicles/:date
    method: GET
    data_selector: settings
    params: {}
- name: add_single_order
  endpoint:
    path: /api/v1/territories/{territoryId}/simulation/{simulationId}/orders
    method: POST
    data_selector: requestId
- name: add_multiple_orders
  endpoint:
    path: /api/v1/territories/{territoryId}/simulation/{simulationId}/orders
    method: POST
    data_selector: requestId
- name: replace_order
  endpoint:
    path: /api/v1/territories/{territoryId}/simulation/{simulationId}/orders/{orderId}
    method: POST
    data_selector: requestId
- name: bulk_replace_vehicle_settings
  endpoint:
    path: /api/v1/territories/:territoryId/vehicles/:date
    method: POST
    data_selector: requestId
- name: update_vehicle_details
  endpoint:
    path: /api/v1/territories/:territoryId/vehicles/details
    method: PUT
    data_selector: requestId
- name: unassign_orders
  endpoint:
    path: /api/v2/territories/:territoryId/simulation/:simulationId/scheduling/unassign
    method: POST
    data_selector: requestId
- name: get_driver_assignments
  endpoint:
    path: /api/v1/territories/:territoryId/vehicledriverassignments/:date
    method: GET
    data_selector: assignments
- name: orders
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/orders
    method: PATCH
    data_selector: orders
    params:
      acceptBadGeocodes: true
      strict: false
- name: replace_order
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/orders
    method: PUT
    data_selector: orders
- name: update_order
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/orders/:orderId
    method: PATCH
    data_selector: orders
- name: replace_order_step
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/orders/:orderId/:orderStepType
    method: POST
    data_selector: orderStep
- name: delete_order
  endpoint:
    path: /v1/territories/:territoryId/simulation/:simulationId/orders/:orderId
    method: DELETE
- name: delete_orders
  endpoint:
    path: /v1/territories/:territoryId/simulation/:simulationId/orders
    method: DELETE
- name: delete_order_step
  endpoint:
    path: /v1/territories/:territoryId/simulation/:simulationId/orders/:orderId/:orderStepType
    method: DELETE
- name: unassign_orders
  endpoint:
    path: /v2/territories/:territoryId/scheduling/unassign
    method: POST
- name: approved_routes
  endpoint:
    path: /territories/:territoryId/approved/routes
    method: GET
    data_selector: routes
    params:
      date: today
      dates: ''
- name: Delete an Order
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/orders/:orderId
    method: DELETE
    data_selector: requestId
- name: Delete Orders
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/orders
    method: DELETE
    data_selector: requestId
- name: Unassign Orders v2
  endpoint:
    path: /api/v2/territories/:territoryId/simulation/:simulationId/scheduling/unassign
    method: POST
    data_selector: requestId
- name: Get Orders
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/orders
    method: GET
    data_selector: orders
- name: current_route
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/toa/routes/:routeId
    method: GET
    data_selector: routes
    params: {}
- name: list_proposals
  endpoint:
    path: /api/v1/territories/:territoryId/experimental/proposals
    method: GET
    data_selector: proposals
    params: {}
- name: delete_proposals_set
  endpoint:
    path: /api/v1/territories/:territoryId/experimental/proposals/:proposalsSetId
    method: DELETE
    data_selector: success
    params: {}
- name: apply_proposal
  endpoint:
    path: /api/v1/territories/:territoryId/experimental/proposals/:proposalsSetId
    method: PUT
    data_selector: requestId
    params: {}
- name: list_gps_devices
  endpoint:
    path: /api/v1/gps/devices
    method: GET
    data_selector: devices
    params: {}
- name: approved_route
  endpoint:
    path: /territories/:territoryId/approved/routes/:routeId
    method: GET
- name: approve_routes
  endpoint:
    path: /territories/:territoryId/approved/:date
    method: POST
- name: revoke_routes
  endpoint:
    path: /territories/:territoryId/approved/:date
    method: DELETE
- name: approved_routes
  endpoint:
    path: /territories/:territoryId/approved/routes
    method: GET
    data_selector: approvedRoutes
- name: approved_route
  endpoint:
    path: /territories/:territoryId/approved/routes/:routeId
    method: GET
    data_selector: route
- name: current_gps_info
  endpoint:
    path: /api/v1/gps/devices/current
    method: GET
    data_selector: currentInfos
- name: webhook_subscriptions
  endpoint:
    path: /api/v1/webhooksubscriptions
    method: GET
    data_selector: subscriptions
- name: Get Current Route
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/toa/routes/:routeId
    method: GET
    data_selector: routes
    params: {}
- name: Download a Proof of Delivery item
  endpoint:
    path: /api/v1/pod/:token
    method: GET
    data_selector: binary data
    params: {}
- name: Unassign Orders
  endpoint:
    path: /api/v2/territories/:territoryId/simulation/:simulationId/scheduling/unassign
    method: POST
    data_selector: requestId
    params: {}
- name: approve_routes
  endpoint:
    path: /api/v1/territories/:territoryId/approved
    method: POST
    data_selector: requestId
- name: revoke_routes
  endpoint:
    path: /api/v1/territories/:territoryId/approved
    method: DELETE
    data_selector: requestId
- name: unassign_orders
  endpoint:
    path: /api/v2/territories/:territoryId/scheduling/unassign
    method: POST
    data_selector: requestId
- name: fit_in_unassigned_orders
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/scheduling/fitin
    method: POST
    data_selector: requestId
- name: assign_order_step
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/scheduling/assign/:orderId/:orderStepType/to/:routeId/after/:sec
    method: POST
    data_selector: requestId
- name: assign_multiple_order_steps
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/scheduling/assign/to/:routeId/after/:sec
    method: POST
    data_selector: requestId
- name: apply_sequences
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/scheduling/applysequences
    method: POST
    data_selector: requestId
- name: swap_routes
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/scheduling/swaproutes
    method: POST
    data_selector: requestId
- name: get_progress
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/scheduling/progress
    method: GET
    data_selector: progress
- name: unassign_orders
  endpoint:
    path: /territories/:territoryId/scheduling/unassign
    method: POST
    data_selector: data
    params: {}
- name: assign_multiple_order_steps
  endpoint:
    path: /territories/:territoryId/simulation/:simulationId/scheduling/assign/to/:routeId/after/:sec
    method: POST
    data_selector: data
    params: {}
- name: apply_sequences
  endpoint:
    path: /territories/:territoryId/simulation/:simulationId/scheduling/applysequences
    method: POST
    data_selector: data
    params: {}
- name: swap_routes
  endpoint:
    path: /territories/:territoryId/simulation/:simulationId/scheduling/swaproutes
    method: POST
    data_selector: data
    params: {}
- name: get_progress
  endpoint:
    path: /territories/:territoryId/simulation/:simulationId/scheduling/progress
    method: GET
    data_selector: progress
    params: {}
- name: sequential_fit
  endpoint:
    path: /territories/:territoryId/simulation/:simulationId/scheduling/experimental/sequentialfit
    method: POST
    data_selector: data
    params: {}
- name: OrderStepAssignmentNotification
  endpoint:
    path: /order/step/assignment/notification
    method: POST
    data_selector: assignments
- name: OrderStepStatusChangeNotification
  endpoint:
    path: /order/step/status/change/notification
    method: POST
    data_selector: assignments
- name: OrderStepUnassignNotification
  endpoint:
    path: /order/step/unassign/notification
    method: POST
    data_selector: orderStepIds
- name: sequential_fit
  endpoint:
    path: /api/v1/territories/:territoryId/scheduling/experimental/sequentialfit
    method: POST
    data_selector: requestId
    params: {}
- name: unassign_orders
  endpoint:
    path: /api/v2/territories/:territoryId/simulation/:simulationId/scheduling/unassign
    method: POST
    data_selector: requestId
    params: {}
- name: fit_unassigned_orders
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/scheduling/fitin
    method: POST
    data_selector: requestId
    params: {}
- name: assign_order_step
  endpoint:
    path: /api/v1/territories/:territoryId/simulation/:simulationId/scheduling/assign/:orderId/:orderStepType/to/:routeId/after/:sec
    method: POST
    data_selector: requestId
    params: {}
- name: unassign_orders
  endpoint:
    path: /territories/:territoryId/simulation/:simulationId/scheduling/unassign
    method: POST
    data_selector: requestId
    params: {}
- name: list_order_step_notifications
  endpoint:
    path: /territories/:territoryId/notifications/orders/:orderId/:orderStepType
    method: GET
    data_selector: notifications
    params: {}
- name: list_orders_notifications
  endpoint:
    path: /territories/:territoryId/notifications/orders
    method: GET
    data_selector: notifications
    params: {}
- name: compute_proposals_set
  endpoint:
    path: /territories/:territoryId/experimental/proposals
    method: POST
    data_selector: requestId
    params: {}
- name: proposals
  endpoint:
    path: /api/v1/territories/:territoryId/experimental/proposals/:proposalsSetId
    method: GET
    data_selector: proposals
- name: executionEventsProcessed
  endpoint:
    path: /executionEventsProcessed
    method: POST
- name: approvedRoutesChanged
  endpoint:
    path: /approvedRoutesChanged
    method: POST
- name: schedulingCompleted
  endpoint:
    path: /schedulingCompleted
    method: POST
- name: proposalsSetProcessed
  endpoint:
    path: /proposalsSetProcessed
    method: POST
- name: proposalApplied
  endpoint:
    path: /proposalApplied
    method: POST
- name: regionsChanged
  endpoint:
    path: /regionsChanged
    method: POST
- name: depotsChanged
  endpoint:
    path: /depotsChanged
    method: POST
- name: orders
  endpoint:
    path: /orders
    method: POST
- name: OrderStepTrackingData
  endpoint:
    path: /orderStepTrackingData
    method: POST
    data_selector: assignments
    params: {}
- name: Depots
  endpoint:
    path: /depots
    method: POST
    data_selector: depots
    params: {}
- name: Drivers
  endpoint:
    path: /drivers
    method: POST
    data_selector: drivers
    params: {}
- name: Regions
  endpoint:
    path: /regions
    method: POST
    data_selector: regions
    params: {}
- name: OrderStepNotification
  endpoint:
    path: /orderStepNotification
    method: GET
    data_selector: records
- name: ProposalsSet
  endpoint:
    path: /proposalsSet
    method: GET
    data_selector: records
- name: routes
  endpoint:
    path: /routes
    method: GET
    data_selector: data.routes
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: data.orders
    params: {}
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: data.vehicles
    params: {}
- name: depots
  endpoint:
    path: /depots
    method: GET
    data_selector: data.depots
    params: {}
- name: drivers
  endpoint:
    path: /drivers
    method: GET
    data_selector: data.drivers
    params: {}
- name: route
  endpoint:
    path: /routes
    method: GET
    data_selector: routes
- name: RouteData
  endpoint:
    path: /routes
    method: GET
    data_selector: routes
    params: {}
- name: GpsDevice
  endpoint:
    path: /gps/devices
    method: GET
    data_selector: gpsDevices
    params: {}
- name: GpsSample
  endpoint:
    path: /gps/samples
    method: GET
    data_selector: gpsSamples
    params: {}
- name: WebHookSubscription
  endpoint:
    path: /webhooks/subscriptions
    method: POST
    data_selector: subscriptions
    params: {}
- name: created
  endpoint:
    path: /orders/changed/created
    method: GET
    data_selector: created
    params: {}
- name: updated
  endpoint:
    path: /orders/changed/updated
    method: GET
    data_selector: updated
    params: {}
- name: deleted
  endpoint:
    path: /orders/changed/deleted
    method: GET
    data_selector: deleted
    params: {}
- name: region
  endpoint:
    path: /regions
    method: GET
    data_selector: regions
- name: vehicle
  endpoint:
    path: /vehicles
    method: GET
    data_selector: vehicles
- name: driver
  endpoint:
    path: /drivers
    method: GET
    data_selector: drivers
- name: company
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
- name: company_input
  endpoint:
    path: /company-input
    method: POST
    data_selector: data
    params: {}
- name: order
  endpoint:
    path: /order
    method: POST
    data_selector: data
    params: {}
- name: order_step
  endpoint:
    path: /order-step
    method: POST
    data_selector: data
    params: {}
- name: route
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: vehicle
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: driver
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: orders
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: depots
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
notes:
- 'Leaky bucket throttling: size:10, refill: 1 per 10 minutes'
- 'Leaky bucket (size:10, refill: 1 per 10 seconds)'
- Rate-limit (1 call every 20 seconds) for unassign orders.
- 'Leaky bucket (size:10, refill: 1 per minute) for getting orders.'
- 'Leaky bucket throttling: size 60, refill 1 per second for adding orders.'
- 'Leaky bucket throttling: size 60, refill 20 per minute for overwriting orders.'
- 'Leaky bucket (size:10, refill: 10 per minute)'
- Rate-limit (1 call every 20 seconds)
- Throttling and rate-limiting schemes are applied on a per-territory and per-request-type
  basis.
- Rate-limit (1 call every 60 seconds)
- 'Leaky bucket (size:20, refill: 3 per second) for Get Vehicle Settings'
- 'Leaky bucket (size:5, refill: 1 per second) for List Vehicle Settings'
- 'Leaky bucket throttling (size:60, refill: 1 per second for adding orders; size:60,
  refill: 20 per minute for replacing orders)'
- Rate-limit (1 call every 5 seconds) for bulk replace.
- 'Leaky bucket throttling (size: 10, refill: 1 per second) for updates and assignments.'
- 'Leaky bucket throttling: size 10, refill 10 per minute for Orders API, size 60,
  refill 20 per minute for OrderStep API'
- 'Leaky bucket (size:20, refill: 20 per minute)'
- Rate-limit (1 call every minute)
- Approved Routes define the plan as it was, 'frozen' right before being approved
  for execution, therefore they only contain ETAs.
- 'Leaky bucket throttling for DELETE requests (size:20, refill: 20 per minute)'
- 'Leaky bucket throttling for GET requests (size:10, refill: 1 per minute)'
- Rate-limit for unassign orders (1 call every 20 seconds)
- 'Leaky bucket (size:10, refill: 6 per minute)'
- 'Leaky bucket for throttling: size:10, refill: 1 per second'
- 'Rate-limit for GPS API: 1 call every 10 secs'
- 'Leaky bucket throttling: size:10, refill: 6 per minute for Get Approved Route.'
- 'Leaky bucket throttling: size:3, refill: 1 per minute for Approve and Revoke Routes.'
- Rate-limit (1 call every 10 secs)
- 'Leaky bucket (size:1, refill: 1 per seconds) for webhook subscriptions'
- Geocoding cannot be guaranteed to always be 100% exact. For example, addresses for
  newly built roads that have not yet been added to our maps may fail to be geocoded
  or return 'best-effort' coordinates. Wrongly formatted or partial addresses will
  also unlikely translate to precise coordinates.
- 'Leaky bucket throttling for Get Current Route: size:10, refill: 6 per minute'
- 'Leaky bucket throttling for Download a Proof of Delivery item: size:5, refill:
  1 per second'
- 'Rate-limit for Unassign Orders: 1 call every 20 seconds'
- Rate-limit of 1 call every 20 seconds for certain endpoints.
- Throttle limits apply, with a leaky bucket size of 3 and refill of 1 per minute.
- Rate-limit (1 call every 60 seconds) for applying sequences.
- Rate-limit (1 call every 20 seconds) for swapping routes.
- Unassign Orders from their current routes, clearing their tracking data (asynchronous).
- Notifies that some OrderSteps assignment data has changed.
- This can be the result of an asynchronous API request or of a manual operation performed
  via the Web Application.
- 'Leaky bucket (size:20, refill: 1 per second)'
- Rate-limit (1 call every 20 seconds) for unassign orders
- Rate-limit (2 calls every second) for list order step notifications
- Rate-limit (1 call every 10 minutes) for list orders notifications
- Concurrency-limit (max 3 concurrent computations) for compute proposals set
- 'THROTTLING: Leaky bucket (size:20, refill: 1 per second)'
- WebHook notifications are POSTed to the WebHook URL set in the WebHook Subscription
  when the event the subscription refers to happens in the Plan, if the subscription
  is enabled.
- Changes to an order step tracking data triggers a notification.
- This can be the result of an execution Event sent from mobile or via API request,
  or a manual operation performed via the Web Application.
- The eligible date for pickup and delivery slots must not be a past date.
- Cannot contain more than 4 TimeWindows.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: The request cannot be accepted.'
- '401 Unauthorized: Authentication credentials are missing or incorrect.'
- '404 Not Found: The URI requested is invalid or the resource requested does not
  exist.'
- '429 Too Many Requests: Rate limit exceeded. Wait before retrying.'
- '500 Server Error: Something bad and unexpected happened.'
- '502 Bad Gateway: WorkWave Route Manager service is temporarily down or being upgraded.'
- '503 Service Unavailable: The WorkWave Route Manager servers are up, but overloaded
  with requests.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Recheck API key.'
- '100: order[name] cannot be null'
- '429 Too Many Requests: Exceeded rate limit. Wait for a minute before retrying.'
- '401 Unauthorized: Check API key'
- '404 Not Found: Verify endpoint URL'
- '429 Too Many Requests: Rate limit exceeded'
- '100: ids list cannot be empty'
- 'Rate limit exceeded: Wait before making another request.'
- 'Invalid territoryId: Check the provided territory ID.'
- '404 Not Found: No running optimizations for the given territory.'
- 'NOT_FOUND: No proposals found for the given request.'
- 'COMPLETED: Request has been successfully processed.'
auth_info:
  mentioned_objects: []
client:
  base_url: ''
  headers:
    Accept: application/json
    Content-Type: application/json
    X-WorkWave-Key: YOUR API KEY
  paginator:
    type: none
    page_size_param: pageSize
    default_page_size: 3
  auth:
    type: apikey
    location: header
    header_name: X-WorkWave-Key
source_metadata: null
