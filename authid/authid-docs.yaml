resources:
- name: document_upload
  endpoint:
    path: /ForeignCapture/Submit
    method: POST
    data_selector: null
    params: {}
- name: CreateAccount
  endpoint:
    path: /IDCompleteBackendEngine/Default/AdministrationServiceRest/swagger/index.html#/Administration/CreateAccount
    method: POST
    data_selector: Account
    params: {}
- name: create_proof_transaction
  endpoint:
    path: /IDCompleteBackendEngine/Default/AuthorizationServiceRest/swagger/index.html
    method: POST
- name: list_document_types
  endpoint:
    path: /IDCompleteBackendEngine/Default/AdministrationServiceRest/swagger/index.html
    method: GET
- name: Operation Status
  endpoint:
    path: /IDCompleteBackendEngine/Default/AuthorizationServiceRest/swagger/index.html?urls.primaryName=V2#/Transaction/GetOperationStatus
    method: GET
    data_selector: results
- name: Operation Result
  endpoint:
    path: /IDCompleteBackendEngine/Default/AuthorizationServiceRest/swagger/index.html?urls.primaryName=V2#/Transaction/GetOperationResult
    method: GET
    data_selector: results
- name: Get Proof Transaction TempId
  endpoint:
    path: /swagger/index.html#/Administration/EndGetForeignIDDocument
    method: GET
- name: Create Proofed Account Biometric Credential
  endpoint:
    path: /swagger/index.html#/Administration/CreateAccountProofedBiometricCredential
    method: POST
- name: enroll_passkey
  endpoint:
    path: /IDCompleteBackendEngine/Default/AuthorizationServiceRest/swagger/index.html?urls.primaryName=V2#/Transaction/InitOperation
    method: POST
    data_selector: OperationId
    params: {}
- name: operation_status
  endpoint:
    path: /IDCompleteBackendEngine/Default/AuthorizationServiceRest/swagger/index.html?urls.primaryName=V2#/Transaction/GetOperationStatus
    method: GET
    data_selector: status
    params: {}
- name: enroll_fido2_passkey
  endpoint:
    path: /Transaction/InitOperation
    method: POST
    data_selector: OperationId
    params:
      AccountNumber: AccountV2
      Codeword: ''
      Name: EnrollFido2Credential
      Timeout: 3600
      TransportType: 0
      Tag: ''
- name: operation_status
  endpoint:
    path: /Transaction/GetOperationStatus
    method: GET
    data_selector: status
- name: authentication_transaction
  endpoint:
    path: /IDCompleteBackendEngine/Default/AuthorizationServiceRest/swagger/index.html
    method: POST
    data_selector: TransactionId
    params:
      AccountNumber: AccountV2
      Timeout: 3600
      ConfirmationPolicy:
        TransportType: 0
        CredentialType: 1
        BioPolicy:
          CheckLiveness: true
      Name: Verify_Identity
- name: confirm_transaction
  endpoint:
    path: /v2/transactions/{transactionId}/confirm
    method: POST
- name: Create Authentication Transaction
  endpoint:
    path: /IDCompleteBackendEngine/Default/AuthorizationServiceRest/swagger/index.html?urls.primaryName=V2#/Transaction/InitTransaction
    method: POST
    data_selector: TransactionId
    params: {}
- name: Transaction Status
  endpoint:
    path: /IDCompleteBackendEngine/Default/AuthorizationServiceRest/swagger/index.html?urls.primaryName=V2#/Transaction/GetTransactionStatus
    method: GET
    data_selector: status
    params: {}
- name: confirm_transaction
  endpoint:
    path: /v2/transactions/{transactionId}/confirm
    method: POST
- name: biometric_experience
  endpoint:
    path: /verified-confirmation-policy/biometric
    method: POST
    data_selector: ConfirmationPolicy
- name: passkey_experience
  endpoint:
    path: /verified-confirmation-policy/passkey
    method: POST
    data_selector: ConfirmationPolicy
- name: otp_experience
  endpoint:
    path: /verified-confirmation-policy/otp
    method: POST
    data_selector: ConfirmationPolicy
- name: basic_experience
  endpoint:
    path: /verified-confirmation-policy/basic
    method: POST
    data_selector: ConfirmationPolicy
- name: New Transactions
  endpoint:
    path: /Transaction/InitTransaction
    method: POST
    data_selector: TransactionId
    params: {}
- name: Transaction Status
  endpoint:
    path: /Transaction/GetTransactionStatus
    method: GET
    data_selector: status
    params: {}
- name: identify
  endpoint:
    path: /search/identify
    method: POST
    data_selector: records
    params:
      threshold: 84
- name: Get Selfie Transaction TempId
  endpoint:
    path: /Default/AdministrationServiceRest/swagger/index.html#/Administration/EndGetForeignBiometry
    method: GET
- name: Create Proofed Account Biometric Credential
  endpoint:
    path: /Default/AdministrationServiceRest/swagger/index.html#/Administration/CreateAccountProofedBiometricCredential
    method: POST
- name: Identify
  endpoint:
    path: /identify-api
    method: POST
- name: documents
  endpoint:
    path: /IDCompleteBackendEngine/Default/AdministrationServiceRest/foreignOperations/documents
    method: POST
    data_selector: DocumentTypes
    params: {}
- name: identify
  endpoint:
    path: /search/identify
    method: POST
    data_selector: ''
    params:
      threshold: '84'
- name: theme
  endpoint:
    path: /api/theme/customization
    method: POST
    data_selector: theme
    params: {}
- name: documents
  endpoint:
    path: /IDCompleteBackendEngine/Default/AdministrationServiceRest/foreignOperations/documents
    method: POST
    data_selector: DocumentTypes
- name: header
  endpoint:
    path: /ui/customization/header
    method: GET
    data_selector: header
- name: footer
  endpoint:
    path: /ui/customization/footer
    method: GET
    data_selector: footer
- name: progress
  endpoint:
    path: /ui/customization/progress
    method: GET
    data_selector: progress
- name: theme
  endpoint:
    path: /theme/customization
    method: POST
    data_selector: theme
- name: transaction_status
  endpoint:
    path: /transaction/statuses
    method: GET
    data_selector: statuses
- name: available_messages
  endpoint:
    path: /available_messages
    method: GET
    data_selector: messages
- name: errors
  endpoint:
    path: /errors
    method: GET
    data_selector: error_messages
- name: Verify ID Document Owner
  endpoint:
    path: /IDCompleteBackendEngine/Default/AdministrationServiceRest/swagger/index.html#/Administration/VerifyIDDocument
    method: POST
    data_selector: Payload.Data
    params: {}
- name: DocumentFailed
  endpoint:
    path: /guidance-for-failures-during-identity-verification-transaction
    method: GET
    data_selector: params
    params: {}
- name: transactions
  endpoint:
    path: /api/workflows/transactions
    method: GET
    data_selector: transactions
- name: Terms and Conditions
  endpoint:
    path: /user-terms-privacy/
    method: GET
- name: events_log
  endpoint:
    path: /events/log
    method: GET
    data_selector: events
    params:
      start_date: date
      end_date: date
      level: string
      message_type: string
- name: transaction_status
  endpoint:
    path: /docs/transaction-statuses
    method: GET
    data_selector: statuses
    params: {}
- name: Verify ID Document Owner
  endpoint:
    path: /IDCompleteBackendEngine/Default/AdministrationServiceRest/swagger/index.html#/Administration/VerifyIDDocument
    method: POST
    data_selector: Payload.Data
    params: {}
- name: transaction
  endpoint:
    path: /initiating-transaction
    method: POST
    data_selector: results
    params: {}
- name: workflow
  endpoint:
    path: /workflows
    method: GET
    data_selector: transactions
    params: {}
- name: authID_integration
  endpoint:
    path: /id/authid/integration
    method: POST
- name: Enroll Biometry
  endpoint:
    path: /enroll/biometry
    method: POST
- name: transaction
  endpoint:
    path: /verify-and-enroll
    method: POST
    data_selector: transaction_details
    params:
      skipHandoffOptions: 'true'
- name: identity_provider
  endpoint:
    path: /identity-provider
    method: POST
    data_selector: result
- name: documents
  endpoint:
    path: /api/documents
    method: GET
    data_selector: records
    params: {}
- name: Residence_permit
  endpoint:
    path: /Residence_permit
    method: GET
    data_selector: records
    params: {}
- name: Visa
  endpoint:
    path: /Visa
    method: GET
    data_selector: records
    params: {}
- name: Driving_License
  endpoint:
    path: /Driving_License
    method: GET
    data_selector: records
    params: {}
- name: ePassport
  endpoint:
    path: /ePassport
    method: GET
    data_selector: records
    params: {}
- name: Id_Card
  endpoint:
    path: /Id_Card
    method: GET
    data_selector: records
    params: {}
- name: Passport
  endpoint:
    path: /Passport
    method: GET
    data_selector: records
    params: {}
- name: Voter_Card
  endpoint:
    path: /Voter_Card
    method: GET
    data_selector: records
    params: {}
- name: Residence_permits
  endpoint:
    path: /residence_permits
    method: GET
    data_selector: records
    params: {}
- name: Visas
  endpoint:
    path: /visas
    method: GET
    data_selector: records
    params: {}
- name: Identity_documents
  endpoint:
    path: /identity_documents
    method: GET
    data_selector: records
    params: {}
- name: diplomatic_id_card
  endpoint:
    path: /diplomatic_id_card
    method: GET
    data_selector: records
- name: driving_license
  endpoint:
    path: /driving_license
    method: GET
    data_selector: records
- name: epassport
  endpoint:
    path: /epassport
    method: GET
    data_selector: records
- name: id_card
  endpoint:
    path: /id_card
    method: GET
    data_selector: records
- name: passport
  endpoint:
    path: /passport
    method: GET
    data_selector: records
- name: registration_card
  endpoint:
    path: /registration_card
    method: GET
    data_selector: records
- name: registration_certificate
  endpoint:
    path: /registration_certificate
    method: GET
    data_selector: records
- name: visa
  endpoint:
    path: /visa
    method: GET
    data_selector: records
- name: passport
  endpoint:
    path: /api/passport
    method: GET
    data_selector: records
    params: {}
- name: resident_card
  endpoint:
    path: /api/resident_card
    method: GET
    data_selector: records
    params: {}
- name: visa
  endpoint:
    path: /api/visa
    method: GET
    data_selector: records
    params: {}
- name: voter_card
  endpoint:
    path: /api/voter_card
    method: GET
    data_selector: records
    params: {}
- name: driving_license
  endpoint:
    path: /api/driving_license
    method: GET
    data_selector: records
    params: {}
- name: id_card
  endpoint:
    path: /api/id_card
    method: GET
    data_selector: records
    params: {}
- name: uritania_passport
  endpoint:
    path: /passport/uritania
    method: GET
    data_selector: records
- name: mauritania_resident_card
  endpoint:
    path: /resident_card/mauritania
    method: GET
    data_selector: records
- name: niger_driving_license
  endpoint:
    path: /driving_license/niger
    method: GET
    data_selector: records
- name: nigeria_passport
  endpoint:
    path: /passport/nigeria
    method: GET
    data_selector: records
- name: senegal_driving_license
  endpoint:
    path: /driving_license/senegal
    method: GET
    data_selector: records
- name: sierra_leone_passport
  endpoint:
    path: /passport/sierra_leone
    method: GET
    data_selector: records
- name: togo_driving_license
  endpoint:
    path: /driving_license/togo
    method: GET
    data_selector: records
- name: documents
  endpoint:
    path: /documents
    method: GET
    data_selector: records
- name: documents
  endpoint:
    path: /documents
    method: GET
    data_selector: records
    params: {}
- name: Driving License
  endpoint:
    path: /driving-license
    method: GET
    data_selector: records
- name: Passport
  endpoint:
    path: /passport
    method: GET
    data_selector: records
- name: Id Card
  endpoint:
    path: /id-card
    method: GET
    data_selector: records
- name: ePassport
  endpoint:
    path: /epassport
    method: GET
    data_selector: records
- name: Work Permit
  endpoint:
    path: /work-permit
    method: GET
    data_selector: records
- name: Voter Card
  endpoint:
    path: /voter-card
    method: GET
    data_selector: records
- name: Certificate of Identity
  endpoint:
    path: /certificate-of-identity
    method: GET
    data_selector: records
- name: Tax Card
  endpoint:
    path: /tax-card
    method: GET
    data_selector: records
- name: Residence permit (2019)
  endpoint:
    path: /Residence/permit/2019
    method: GET
    data_selector: records
    params: {}
- name: 'Visa #1'
  endpoint:
    path: /Visa/1
    method: GET
    data_selector: records
    params: {}
- name: 'Driving License #1'
  endpoint:
    path: /Driving/License/1
    method: GET
    data_selector: records
    params: {}
- name: 'Passport #1'
  endpoint:
    path: /Passport/1
    method: GET
    data_selector: records
    params: {}
- name: document
  endpoint:
    path: /api/documents
    method: GET
    data_selector: records
    params: {}
- name: residence_permit
  endpoint:
    path: /residence_permit
    method: GET
    data_selector: records
- name: driving_license
  endpoint:
    path: /driving_license
    method: GET
    data_selector: records
- name: epassport
  endpoint:
    path: /epassport
    method: GET
    data_selector: records
- name: id_card
  endpoint:
    path: /id_card
    method: GET
    data_selector: records
- name: passport
  endpoint:
    path: /passport
    method: GET
    data_selector: records
- name: visa
  endpoint:
    path: /visa
    method: GET
    data_selector: records
- name: diplomatic_id_card_1
  endpoint:
    path: /diplomatic_id_card_1
    method: GET
    data_selector: records
- name: driving_license_1
  endpoint:
    path: /driving_license_1
    method: GET
    data_selector: records
- name: foreigners_id_card_3
  endpoint:
    path: /foreigners/id_card_3
    method: GET
    data_selector: records
- name: foreigners_id_card_2017
  endpoint:
    path: /foreigners/id_card_2017
    method: GET
    data_selector: records
- name: foreigners_id_card_2017_2021_side_b
  endpoint:
    path: /foreigners/id_card_2017_2021_side_b
    method: GET
    data_selector: records
- name: foreigners_id_card_2021
  endpoint:
    path: /foreigners/id_card_2021
    method: GET
    data_selector: records
- name: goias_digital_driving_license_2017
  endpoint:
    path: /goias/digital_driving_license_2017
    method: GET
    data_selector: records
- name: titles
  endpoint:
    path: /titles
    method: GET
    data_selector: records
- name: passport_page_3
  endpoint:
    path: /path/to/passport_page_3
    method: GET
    data_selector: records
    params: {}
- name: resident_card_1
  endpoint:
    path: /path/to/resident_card_1
    method: GET
    data_selector: records
    params: {}
- name: visa_1
  endpoint:
    path: /path/to/visa_1
    method: GET
    data_selector: records
    params: {}
- name: voter_card_1
  endpoint:
    path: /path/to/voter_card_1
    method: GET
    data_selector: records
    params: {}
- name: country_documents
  endpoint:
    path: /country-documents
    method: GET
    data_selector: documents
    params: {}
- name: passport
  endpoint:
    path: /passport
    method: GET
    data_selector: records
- name: resident_card
  endpoint:
    path: /resident_card
    method: GET
    data_selector: records
- name: visa
  endpoint:
    path: /visa
    method: GET
    data_selector: records
- name: driving_license
  endpoint:
    path: /driving_license
    method: GET
    data_selector: records
- name: id_card
  endpoint:
    path: /id_card
    method: GET
    data_selector: records
- name: registration_certificate
  endpoint:
    path: /registration_certificate
    method: GET
    data_selector: records
- name: residence_permit
  endpoint:
    path: /residence_permit
    method: GET
    data_selector: records
- name: voter_card
  endpoint:
    path: /voter_card
    method: GET
    data_selector: records
- name: Id Card
  endpoint:
    path: /south-central-asia/india/id-card
    method: GET
    data_selector: records
- name: id_card
  endpoint:
    path: /api/id_card
    method: GET
    data_selector: records
- name: documents
  endpoint:
    path: /api/documents
    method: GET
    data_selector: records
    params: {}
- name: voter_card
  endpoint:
    path: /voter_card
    method: GET
    data_selector: records
- name: Id Card
  endpoint:
    path: /id_card
    method: GET
    data_selector: records
- name: documents
  endpoint:
    path: /api/documents
    method: GET
    data_selector: documents
    params: {}
- name: Driving License
  endpoint:
    path: /api/driving_license
    method: GET
    data_selector: records
- name: Passport
  endpoint:
    path: /api/passport
    method: GET
    data_selector: records
- name: Id Card
  endpoint:
    path: /api/id_card
    method: GET
    data_selector: records
- name: ePassport
  endpoint:
    path: /api/epassport
    method: GET
    data_selector: records
- name: Voter Card
  endpoint:
    path: /api/voter_card
    method: GET
    data_selector: records
- name: Certificate of Identity
  endpoint:
    path: /api/certificate_of_identity
    method: GET
    data_selector: records
- name: Work Permit
  endpoint:
    path: /api/work_permit
    method: GET
    data_selector: records
- name: passport
  endpoint:
    path: /services/data/vXX.X/sobjects/Passport
    method: GET
    data_selector: records
    params: {}
- name: documents
  endpoint:
    path: /documents
    method: GET
    data_selector: documents
    params: {}
- name: foreigners_id_card
  endpoint:
    path: /api/foreigners/id/card
    method: GET
    data_selector: records
- name: driving_license
  endpoint:
    path: /api/driving/license
    method: GET
    data_selector: records
- name: id_card
  endpoint:
    path: /api/id/card
    method: GET
    data_selector: records
- name: passport
  endpoint:
    path: /api/passport
    method: GET
    data_selector: records
- name: ePassport_Guinea
  endpoint:
    path: /ePassport/Guinea
    method: GET
- name: ePassport_Guinea-Bissau
  endpoint:
    path: /ePassport/Guinea-Bissau
    method: GET
- name: ePassport_Liberia
  endpoint:
    path: /ePassport/Liberia
    method: GET
- name: ePassport_Mali
  endpoint:
    path: /ePassport/Mali
    method: GET
- name: ePassport_Mauritania
  endpoint:
    path: /ePassport/Mauritania
    method: GET
- name: ePassport_Niger
  endpoint:
    path: /ePassport/Niger
    method: GET
- name: ePassport_Nigeria
  endpoint:
    path: /ePassport/Nigeria
    method: GET
- name: ePassport_Senegal
  endpoint:
    path: /ePassport/Senegal
    method: GET
- name: ePassport_Sierra_Leone
  endpoint:
    path: /ePassport/Sierra_Leone
    method: GET
- name: ePassport_Togo
  endpoint:
    path: /ePassport/Togo
    method: GET
- name: documents
  endpoint:
    path: /documents
    method: GET
    data_selector: records
    params: {}
- name: documents
  endpoint:
    path: /documents
    method: GET
    data_selector: records
- name: documents
  endpoint:
    path: /api/documents
    method: GET
    data_selector: documents
- name: Id Card
  endpoint:
    path: /api/id-cards
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: documents
  endpoint:
    path: /documents
    method: GET
    data_selector: records
    params: {}
- name: driving_license
  endpoint:
    path: /api/driving_licenses
    method: GET
    data_selector: licenses
    params: {}
- name: voter_card
  endpoint:
    path: /api/voter_card
    method: GET
    data_selector: records
    params: {}
- name: Id Card
  endpoint:
    path: /idcard
    method: GET
    data_selector: records
- name: documents
  endpoint:
    path: /documents
    method: GET
    data_selector: records
    params: {}
- name: Argentina
  endpoint:
    path: /south-america/argentina
    method: GET
    data_selector: documents
    params: {}
- name: Bolivia
  endpoint:
    path: /south-america/bolivia
    method: GET
    data_selector: documents
    params: {}
- name: Brazil
  endpoint:
    path: /south-america/brazil
    method: GET
    data_selector: documents
    params: {}
- name: Chile
  endpoint:
    path: /south-america/chile
    method: GET
    data_selector: documents
    params: {}
- name: Colombia
  endpoint:
    path: /south-america/colombia
    method: GET
    data_selector: documents
    params: {}
- name: Ecuador
  endpoint:
    path: /south-america/ecuador
    method: GET
    data_selector: documents
    params: {}
- name: Guyana
  endpoint:
    path: /south-america/guyana
    method: GET
    data_selector: documents
    params: {}
- name: Paraguay
  endpoint:
    path: /south-america/paraguay
    method: GET
    data_selector: documents
    params: {}
- name: Peru
  endpoint:
    path: /south-america/peru
    method: GET
    data_selector: documents
    params: {}
- name: Suriname
  endpoint:
    path: /south-america/suriname
    method: GET
    data_selector: documents
    params: {}
- name: Uruguay
  endpoint:
    path: /south-america/uruguay
    method: GET
    data_selector: documents
    params: {}
- name: Venezuela
  endpoint:
    path: /south-america/venezuela
    method: GET
    data_selector: documents
    params: {}
- name: certificate_of_competency
  endpoint:
    path: /api/certificate_of_competency
    method: GET
    data_selector: records
- name: certificate_of_identity
  endpoint:
    path: /api/certificate_of_identity
    method: GET
    data_selector: records
- name: certificate_of_proficiency
  endpoint:
    path: /api/certificate_of_proficiency
    method: GET
    data_selector: records
- name: crew_member_certificate
  endpoint:
    path: /api/crew_member_certificate
    method: GET
    data_selector: records
- name: dcs_card
  endpoint:
    path: /api/dcs_card
    method: GET
    data_selector: records
- name: driving_license
  endpoint:
    path: /api/driving_license
    method: GET
    data_selector: records
- name: gpw_card
  endpoint:
    path: /api/gpw_card
    method: GET
    data_selector: records
- name: id_book
  endpoint:
    path: /api/id_book
    method: GET
    data_selector: records
- name: passport
  endpoint:
    path: /api/passport
    method: GET
    data_selector: records
- name: residence_permit
  endpoint:
    path: /api/residence_permit
    method: GET
    data_selector: records
- name: visa
  endpoint:
    path: /api/visa
    method: GET
    data_selector: records
- name: passport
  endpoint:
    path: /services/data/vXX.X/sobjects/Passport
    method: GET
    data_selector: records
- name: id_card
  endpoint:
    path: /services/data/vXX.X/sobjects/IdCard
    method: GET
    data_selector: records
- name: voter_card
  endpoint:
    path: /services/data/vXX.X/sobjects/VoterCard
    method: GET
    data_selector: records
- name: documents
  endpoint:
    path: /api/documents
    method: GET
    data_selector: records
    params: {}
- name: Proof of Age Card
  endpoint:
    path: /proof_of_age_card
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: country_documents
  endpoint:
    path: /country_documents
    method: GET
    data_selector: records
    params: {}
- name: driving_license
  endpoint:
    path: /driving/licenses
    method: GET
    data_selector: licenses
    params: {}
- name: documents
  endpoint:
    path: /south-america/documents
    method: GET
    data_selector: documents
notes:
- Transaction Data Provider role is required to invoke this API.
- Size restriction of 10MB for the overall payload.
- authID platform supports turn-key integrations into other SaaS platforms via standards
  such as OIDC and REST API.
- Access to the authID platform is provided through a welcome email from the authID
  support team.
- The Identity Portal uses passwordless access protected by biometric MFA and the
  authID Passkey.
- Production vs. UAT environment - modify the domain in the base URL accordingly.
- Refresh tokens are 'one-time-use' and are invalidated almost immediately after use.
- This security measure, called refresh token reuse detection, prevents token interception
  and helps detect compromised channels.
- Roles are recorded within the Access token.
- A Request to the GetAdministrativeUserActions API endpoint returns the list of actions
  the applications can perform with the current Access token.
- By default, authID retains user-provided documents and other PII for 72 hours.
- Proof results contained in TempId expire within 72 hours.
- authID offers a service for longer term storage of Proof Results Data, please contact
  support@authid.ai for details.
- The AccountNumber must match the value specified during Account Creation.
- EnrollFido2Credential can be used more than once per account.
- A transport type of 0 returns an OperationId and OneTimeSecret.
- User can have more than one Passkey.
- Uses OAuth2 for authentication
- TransactionId and OneTimeSecret must be stored after the transaction is initiated
- Every Customer Sandbox/Tenant comes with at least one named template 'Verify_Identity'
- No biometric data is stored — authentication relies on ephemeral private keys.
- Ideal for integrations with enterprise SSO systems (Okta, Ping, Microsoft).
- Each account supports enrolling up to two active Privacy Keys.
- Basic Approval and Embedded User Interface while possible, does not offer any protection.
- The application has several ways to detect when the status changes.
- You can only have two Privacy Keys per account, even if the enrollment method is
  different.
- Either operationId or image must be provided.
- Data contained in TempId expire within 72 hours.
- Trying to enroll Account Biometrics using TempId that has PII data removed results
  in error.
- The Biometric Search API enables real-time 1:N search of users, utilizing their
  facial biometrics.
- Avoid using iframe for a more consistent user experience across devices.
- Take note that the OneTimeSecret is not returned by the API.
- authID recommends a threshold setting of 84, which equates to a False Accept Rate
  (FAR) of 1:10M
- Contact support@authid.ai for color customization requests.
- The authID user interface (UI) offers flexibility in its delivery, presenting users
  with multiple options to access its features.
- Customers can request changes to the standard UI.
- When integrating with Essential UI, it is crucial to adhere to the authID best practices
  when implementing user error notifications.
- Transport type in the request body determines whether transactions are sent via
  SMS or Email.
- If a user does not have a phone number or email associated with their account, an
  error is generated.
- Customers implementing the authID Essential UI must demonstrate adherence to transaction
  rational guidance in order to attain certification for go-live.
- Logo can be customized in the header.
- Customers must obtain appropriate informed consent from the end user before collecting
  biometric data and documents.
- The authID Complete UI enables you to customize page colors for better alignment
  with your brand.
- Session workflows offer flexibility through the use of URL parameters, which can
  be tailored for each session.
- Each status represents a particular step or result in a transaction.
- User guidance must aim to facilitate successful transaction completion, avoiding
  assumptions of malicious intent or error messages that suggest it.
- This feature is not available by default. Please contact authID support to request
  access.
- The dashboard provides a centralized interface for administrators to manage and
  monitor identity verification and authentication activities.
- Option to display all transactions executed under a Cloud or OIDC Connection.
- Customers can input secure (HTTPS) URLs for their Terms and Conditions and Privacy
  Policy.
- If custom links are not provided, the system will display default links to authID's
  hosted Privacy Policy and Terms and Conditions.
- Status values include Pending (0), Accepted (1), Rejected (2), Expired (3), Error
  (4), and Canceled (5).
- Rejected messages may include reasons such as 'Not authorized. Biometry verification
  failed.'
- If a user is unable to complete an identity verification transaction, consult the
  table provided below for further guidance.
- These values today are ignored by most devices and despite what the server says,
  get overridden to required. The only time these apply is for custom CTAP clients.
- This domain must match the location where the transaction is being hosted.
- Initial Proof Transaction requires a primary document.
- Secondary Proof Transaction requires inclusion of '&nv' URL option.
- Administrators can create accounts, enroll user credentials, delete biometric credentials
  and delete pass keys.
- The dashboard provides an all-encompassing perspective of system performance, security
  events, and user interactions.
- Do not include a leading zero in the mobile number.
- Supported documents may vary depending on your setup.
- The following settings apply to FIDO2 enrollment transactions.
- Uses Auth0 for OIDC connections
- Biometric authentication platform integration
- 'Setting: By default, the Virtual Passkey radio button is set to OFF; set it to
  ON.'
- Users must ensure that at least one value from the Login redirect Urls parameter
  for user authID integration matches the Redirect URI.
- Installation must be performed under administrator account
- User must ensure using HTTPS for all URIs, since authID requires HTTPS connectivity.
- Ensure that at least one value from the Login redirect Urls parameter for your authID
  integration matches the Redirect URI.
- Ensure only your document ID is present in the picture. Nothing else.
- Use sufficient, natural lighting instead of a flash. It is best if the photo is
  taken during the daytime.
- Ensure the lens is not greasy.
- Take the photo directly above the ID as soon as possible.
- Ensure all four edges of your ID are visible within the image.
- Ensure all information on the ID is clear & legible.
- Avoid taking photos of documents close to the cellphone.
- If the document is worn, aged, or physically damaged, the ability to process it
  is significantly hindered.
- Only current documents that are in date can be accepted for verification.
- 'Good lighting: If the image is too dark or bright, the document might not be processed
  successfully.'
- 'Avoid reflections: We recommend avoiding using Flash on your mobile device when
  capturing document images.'
- 'Focus and sharpness: Ensure the image is in focus and there are no blurred areas.'
- 'Angle: The tilt angle of the document should not exceed 10 degrees in any direction
  (horizontal or vertical).'
- 'Margins (too small): Ensure minimal space around the document. It is recommended
  that the document takes up 70-80% of the image.'
- 'Margins (too big): Ensure the space around the document does not take up more than
  20-30% of the image.'
- 'Contrast: The document must contrast to the background.'
- 'Resolution of the image: To achieve a good quality recognition of identification
  documents, we recommend providing captured images by a camera with a resolution
  of at least Full HD (1920×1080) and autofocus.'
- 'Extraneous objects: Ensure your hands or other objects do not cover document data.'
- Authentication policies are used to control when and where user-configured authenticators
  are applied.
- Every policy has a catch-all Rule if no other rules apply.
- The user must see the IdP authenticator user configured earlier in the box below.
- User must see the apps listed on the page.
- Ensure that at least one value from the Login redirect Urls parameter for user authID
  integration matches the Redirect URI.
- The authID OIDC service supports both Basic and POST for token authentication.
- Support tickets can be submitted through email provided by the company support@authid.ai.
- Ensure the lens is not greasy. Ensure your cellphone camera lens is clean and free
  of smudges or debris, it can contribute to glare.
- Take the photo directly above the ID as soon as possible. Ensure your shadow does
  not cover your ID.
- Avoid taking photos of documents close to the cellphone. Also, do not change the
  distance from the document, move around, or shake the phone. These make it hard
  for the cellphone camera to focus properly.
- 'Margins (too big): Ensure the space around the document does not take up more than
  20-30% of the image. It is recommended that the document takes up 70-80% of the
  image.'
- 'Contrast: The document must contrast to the background. A light-colored document
  on a light background and a dark-colored document on a dark background might not
  be recognized.'
- Data includes various types of identification documents.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Any OS or browser not mentioned in the list is considered unsupported.
- Statuspage is a tool designed to assist organizations in keeping their users informed
  about the status of their systems and services.
errors:
- '403 Forbidden: Transaction Data Provider role is absent from the access token.'
- '401 Unauthorized: Reauthenticate with your credentials to obtain a new access/refresh
  token pair.'
- HTTP 403 Unauthorized response code is returned/displayed if the application tries
  to call an API that is not a part of the token roles.
- Trying to enroll Account Biometrics using TempId that has PII data removed results
  in error.
- '0 - Pending: Status during Enrollment.'
- '1 - Accepted: Status after Enrollment completion.'
- '0 - Pending: User has not completed authentication'
- '1 - Accepted: Authentication success'
- Other statuses indicate authentication failure
- '0 - Pending: Authentication in progress'
- Enrollment attempt would cause this limit to be exceeded.
- Attempt to enroll a third Privacy Key causes an error.
- Error generated when trying to use Transport Type if user does not have a phone
  number or email associated with their account.
- '''Failed'': Generic failure page. Map detailed codes via params.props.type value.'
- '''CameraUnavailable'': Problem acquiring camera feed. Check if the camera is available
  on the device. Tip: The user to confirm the camera access request and allow retry.'
- '''DocumentFailed'': Document scanning failed. Additional information is included
  in notification properties.'
- OneTimeSecret is not returned by the API.
- INVALID
- NOT_FOUND
- INVALID_IMAGE_QA
- WRONG_SIDE
- WRONG_COUNTRY
- EXPIRED
- WRONG_DOCUMENT
- BAD_FRONT
- VerifyMatchFail
- VerifyFinalFail
- Not authorized. Biometry verification failed.
- Not authorized. Liveness detection failed.
- Not authorized. Biometry verification and liveness detection failed.
- 'Failed: Generic failure page. Map detailed codes via params.props.type value.'
- 'CameraUnavailable: Problem acquiring camera feed. Check if the camera is available
  on the device.'
- 'DocumentFailed: Document scanning failed. Additional information is included in
  notification properties.'
- 'timeout: 72000'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Ensure correct configuration to avoid authentication issues.
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Identity Provider
  - Authority URI
  - Client ID
  - Redirect URI
client:
  base_url: https://id.authid.ai
  auth:
    type: oauth2
    location: header
    header_name: Authorization
  headers:
    Accept: '*/*'
    Content-Type: multipart/form-data
source_metadata: null
