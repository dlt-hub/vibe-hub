resources:
- name: cve
  endpoint:
    path: /cve
    method: GET
    data_selector: results
    params: {}
- name: cve
  endpoint:
    path: /api/cve
    method: GET
- name: organizations
  endpoint:
    path: /api/organizations
    method: GET
- name: products
  endpoint:
    path: /api/products
    method: GET
- name: vendors
  endpoint:
    path: /api/vendors
    method: GET
- name: weaknesses
  endpoint:
    path: /api/weaknesses
    method: GET
- name: organizations
  endpoint:
    path: /organizations
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
- name: notifications
  endpoint:
    path: /notifications
    method: GET
- name: reports
  endpoint:
    path: /reports
    method: GET
- name: cve
  endpoint:
    path: /api/cve
    method: GET
    data_selector: data
    params: {}
- name: organizations
  endpoint:
    path: /api/organizations
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /api/products
    method: GET
    data_selector: data
    params: {}
- name: vendors
  endpoint:
    path: /api/vendors
    method: GET
    data_selector: data
    params: {}
- name: weaknesses
  endpoint:
    path: /api/weaknesses
    method: GET
    data_selector: data
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notification
    params: {}
- name: cve
  endpoint:
    path: /api/cve
    method: GET
- name: organizations
  endpoint:
    path: /api/organizations
    method: GET
- name: products
  endpoint:
    path: /api/products
    method: GET
- name: vendors
  endpoint:
    path: /api/vendors
    method: GET
- name: weaknesses
  endpoint:
    path: /api/weaknesses
    method: GET
- name: summarize_reports
  endpoint:
    path: /v1/chat/completions
    method: POST
- name: webserver
  endpoint:
    path: /web/opencve/conf/settings.py
    method: GET
    data_selector: settings
    params: {}
- name: scheduler
  endpoint:
    path: /scheduler/airflow.cfg
    method: GET
    data_selector: settings
    params: {}
- name: cve
  endpoint:
    path: /api/cve
    method: GET
    data_selector: results
    params: {}
- name: cve_details
  endpoint:
    path: /api/cve/<id>
    method: GET
    data_selector: results
    params: {}
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: results
    params: {}
- name: organization_details
  endpoint:
    path: /organizations/<name>
    method: GET
    data_selector: results
    params: {}
- name: organization_projects
  endpoint:
    path: /organizations/<name>/projects
    method: GET
    data_selector: results
    params: {}
- name: project_details
  endpoint:
    path: /organizations/<name>/projects/<name>
    method: GET
    data_selector: results
    params: {}
- name: project_cves
  endpoint:
    path: /organizations/<name>/projects/<name>/cve
    method: GET
    data_selector: results
    params: {}
- name: vendor_products
  endpoint:
    path: /api/vendors/<name>/products
    method: GET
    data_selector: results
    params:
      page: 1
- name: specific_product
  endpoint:
    path: /api/vendors/<name>/products/<name>
    method: GET
    data_selector: ''
    params: {}
- name: product_cve
  endpoint:
    path: /api/vendors/<name>/products/<name>/cve
    method: GET
    data_selector: results
    params:
      page: 1
- name: vendors
  endpoint:
    path: /api/vendors
    method: GET
    data_selector: results
    params:
      page: '1'
- name: vendor_details
  endpoint:
    path: /api/vendors/<name>
    method: GET
    data_selector: ''
    params: {}
- name: vendor_cve
  endpoint:
    path: /api/vendors/<name>/cve
    method: GET
    data_selector: results
    params:
      page: '1'
- name: weaknesses
  endpoint:
    path: /api/weaknesses
    method: GET
    data_selector: results
    params:
      page: '1'
- name: weakness_detail
  endpoint:
    path: /api/weaknesses/<id>
    method: GET
    data_selector: results
    params: {}
- name: cve_associated_with_weakness
  endpoint:
    path: /api/weaknesses/<id>/cve
    method: GET
    data_selector: results
    params:
      page: '1'
- name: cve
  endpoint:
    path: /api/cve
    method: GET
- name: organizations
  endpoint:
    path: /api/organizations
    method: GET
- name: products
  endpoint:
    path: /api/products
    method: GET
- name: vendors
  endpoint:
    path: /api/vendors
    method: GET
- name: weaknesses
  endpoint:
    path: /api/weaknesses
    method: GET
- name: users
  endpoint:
    path: /api/account
    method: GET
- name: cves
  endpoint:
    path: /api/cve
    method: GET
- name: events
  endpoint:
    path: /api/events
    method: GET
- name: vendors
  endpoint:
    path: /api/vendors
    method: GET
- name: products
  endpoint:
    path: /api/products
    method: GET
- name: cve
  endpoint:
    path: /cve
    method: GET
- name: organizations
  endpoint:
    path: /organizations
    method: GET
- name: products
  endpoint:
    path: /products
    method: GET
- name: vendors
  endpoint:
    path: /vendors
    method: GET
- name: weaknesses
  endpoint:
    path: /weaknesses
    method: GET
- name: user_data
  endpoint:
    path: /cve
    method: GET
- name: user_tags
  endpoint:
    path: /organizations
    method: GET
- name: user_subscriptions
  endpoint:
    path: /products
    method: GET
- name: webserver_smtp
  endpoint:
    path: web/opencve/conf/settings.py
    method: POST
    data_selector: settings
    params:
      EMAIL_BACKEND: django.core.mail.backends.smtp.EmailBackend
      EMAIL_HOST: smtp.example.com
      EMAIL_HOST_USER: user
      EMAIL_HOST_PASSWORD: password
      EMAIL_PORT: 587
      EMAIL_USE_TLS: true
- name: scheduler_smtp
  endpoint:
    path: scheduler/airflow.cfg
    method: POST
    data_selector: settings
    params:
      notification_smtp_host: smtp.example.com
      notification_smtp_user: user
      notification_smtp_password: password
      notification_smtp_mail_from: john@example.com
      notification_smtp_port: 587
      notification_smtp_use_tls: true
      notification_smtp_start_tls: false
      notification_smtp_validate_certs: true
      notification_smtp_timeout: 30
- name: cve
  endpoint:
    path: /api/cve
    method: GET
- name: organizations
  endpoint:
    path: /api/organizations
    method: GET
- name: products
  endpoint:
    path: /api/products
    method: GET
- name: vendors
  endpoint:
    path: /api/vendors
    method: GET
- name: weaknesses
  endpoint:
    path: /api/weaknesses
    method: GET
notes:
- The OpenCVE API is still in Beta, some changes may appear until the stable version.
- This feature is currently in Beta, and its syntax may change in future releases
  until it becomes fully stable.
- To ensure optimal performance, advanced search queries are currently limited to
  a maximum of 5 fields. If a query exceeds this limit, it will be rejected with an
  error message.
- The icon file names are based on the provider_id keys in SOCIALACCOUNT_PROVIDERS.
- Data migration from v1 to v2 does not include old reports due to significant changes
  in report structure.
- The SMTP configuration of the webserver is specified in web/opencve/conf/settings.py
- The SMTP configuration of the scheduler is specified in scheduler/airflow.cfg
- If your network requires internet access through a proxy, you can configure OpenCVE
  to work seamlessly by setting the appropriate environment variables.
- This issue is related to your host machine or Docker network configuration, not
  to OpenCVE itself.
- OpenCVE requires a PostgreSQL instance to store the data (CVE, Users, Vendors, Products,
  Subscriptions, ...)
- The pg_trgm module of PostgreSQL is required to let you search in the CVEs list.
- The CLI is only mandatory for the first admin, then you will be able to manage the
  users with the admin pages.
- OpenCVE only supports PostgreSQL.
- OpenCVE has to parse the CPE dictionnary to insert vendors and products in its PostgreSQL
  database, as well as the CVE and CWE list.
- The import-data command requires 5 GB RAM at least.
errors:
- '404 Not Found: No result found when the page parameter is too high.'
- '404 Not Found: This means that the requested resource could not be found.'
- 'Connection timed out: This means the container could not access the internet to
  fetch packages.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '404: When no result is found (the page parameter is too high).'
auth_info:
  mentioned_objects: []
client:
  base_url: https://app.opencve.io
  headers:
    Accept: application/json
  paginator:
    type: page
    page_size_param: page
    default_page_size: 1
source_metadata: null
