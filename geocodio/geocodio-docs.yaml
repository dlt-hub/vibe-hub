resources:
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params: {}
- name: batch_reverse_geocoding
  endpoint:
    path: /reverse
    method: POST
    data_selector: results
- name: batch_geocoding
  endpoint:
    path: /geocode
    method: POST
    data_selector: results
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params: {}
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: results
    params: {}
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params:
      country: USA
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
- name: batch_geocode
  endpoint:
    path: /geocode
    method: POST
    data_selector: results
- name: create_list
  endpoint:
    path: /lists
    method: POST
    data_selector: result
    params: {}
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params: {}
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: results
    params: {}
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params:
      api_key: YOUR_API_KEY
      country: USA
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params: {}
- name: reverse
  endpoint:
    path: /reverse
    method: GET
    data_selector: fields
    params: {}
- name: geocode
  endpoint:
    path: /geocode
    method: POST
    data_selector: results
    params: {}
- name: reverse
  endpoint:
    path: /reverse
    method: GET
    data_selector: results
    params: {}
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: results
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params: {}
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: fields
    params: {}
- name: batch_reverse_geocoding
  endpoint:
    path: /reverse
    method: POST
    data_selector: results
- name: geocode
  endpoint:
    path: /geocode
    method: POST
    data_selector: results
    params: {}
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: results
    params: {}
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params: {}
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: POST
    data_selector: results
    params:
      api_key: YOUR_API_KEY
- name: create_list
  endpoint:
    path: /lists
    method: POST
    data_selector: result
    params:
      api_key: YOUR_API_KEY
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params: {}
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: fields
    params: {}
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: school
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: fields
    params:
      fields: school
- name: census
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: census2010,census
- name: list
  endpoint:
    path: /lists
    method: GET
    data_selector: lists
    params: {}
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params:
      api_key: YOUR_API_KEY
- name: geocode
  endpoint:
    path: /geocode
    method: POST
    data_selector: results
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: results
- name: lists_status
  endpoint:
    path: /lists
    method: GET
    data_selector: null
    params: {}
- name: reverse_geocoding
  endpoint:
    path: /reverse
    method: POST
    data_selector: results
- name: create_list
  endpoint:
    path: /lists
    method: POST
    data_selector: id
- name: get_list_status
  endpoint:
    path: /lists/{list_id}
    method: GET
    data_selector: status
- name: get_all_lists
  endpoint:
    path: /lists
    method: GET
    data_selector: data
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params:
      api_key: YOUR_API_KEY
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: results
    params:
      api_key: YOUR_API_KEY
- name: download_list
  endpoint:
    path: /lists/LIST_ID/download
    method: GET
    data_selector: results
    params:
      api_key: YOUR_API_KEY
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      api_key: YOUR_API_KEY
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: fields
    params:
      api_key: YOUR_API_KEY
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: cd,stateleg
- name: reverse
  endpoint:
    path: /reverse
    method: GET
    data_selector: fields
    params:
      fields: cd,stateleg
- name: congressional_districts
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.congressional_districts
    params:
      fields: cd
- name: school
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
- name: census
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
- name: state_legislative_districts
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params: {}
- name: reverse
  endpoint:
    path: /reverse
    method: GET
    data_selector: fields
    params: {}
- name: acs-demographics-county
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: acs-demographics-county
- name: acs-demographics-tract
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: acs-demographics-tract
- name: acs-demographics
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: acs-demographics
- name: acs-demographics-county
  endpoint:
    path: /acs-demographics-county
    method: GET
- name: acs-demographics-block_group
  endpoint:
    path: /acs-demographics-block_group
    method: GET
- name: acs-demographics-tract
  endpoint:
    path: /acs-demographics-tract
    method: GET
- name: acs-demographics-place
  endpoint:
    path: /acs-demographics-place
    method: GET
- name: acs-demographics-county_subdivision
  endpoint:
    path: /acs-demographics-county_subdivision
    method: GET
- name: acs-demographics-msa
  endpoint:
    path: /acs-demographics-msa
    method: GET
- name: acs-demographics-state
  endpoint:
    path: /acs-demographics-state
    method: GET
- name: acs-families
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: acs-families
- name: acs-economics
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: acs-economics
- name: reverse-acs-economics
  endpoint:
    path: /reverse
    method: GET
    data_selector: fields
    params:
      fields: acs-economics
- name: acs-housing
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.acs-housing
    params: {}
- name: acs-social
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: acs-social
- name: reverse-geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: fields
    params:
      fields: acs-social
- name: zip4
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.zip4
    params: {}
- name: ffiec
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.ffiec
    params: {}
- name: riding
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.riding
    params: {}
- name: provriding
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.provincial_riding
    params: {}
- name: provriding-next
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.provincial_riding
    params: {}
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params: {}
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.statcan
    params:
      fields: statcan
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: fields.statcan
    params:
      fields: statcan
- name: timezone
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.timezone
    params:
      fields: timezone
- name: geocode
  endpoint:
    path: /geocode
    method: POST
- name: reverse
  endpoint:
    path: /reverse
    method: GET
- name: reverse_geocoding
  endpoint:
    path: /reverse
    method: POST
    data_selector: results
    params: {}
- name: create_list
  endpoint:
    path: /lists
    method: POST
    data_selector: id
    params: {}
- name: list_status
  endpoint:
    path: /lists/{list_id}
    method: GET
    data_selector: status
    params: {}
- name: download_list
  endpoint:
    path: /lists/{list_id}/download
    method: GET
    data_selector: download_url
    params: {}
- name: show_all_lists
  endpoint:
    path: /lists
    method: GET
    data_selector: data
    params: {}
- name: download_list
  endpoint:
    path: /lists/LIST_ID/download
    method: GET
    data_selector: response
    params:
      api_key: YOUR_API_KEY
- name: delete_list
  endpoint:
    path: /lists/LIST_ID
    method: DELETE
    data_selector: response
    params:
      api_key: YOUR_API_KEY
- name: geocode_address
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      api_key: YOUR_API_KEY
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: fields
    params:
      api_key: YOUR_API_KEY
- name: congressional_districts
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.congressional_districts
    params:
      fields: cd
- name: state_legislative_districts
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.state_legislative_districts
    params:
      fields: stateleg
- name: geocode
  endpoint:
    path: /v1.9/geocode
    method: GET
    data_selector: location
    params:
      fields: acs-demographics-county
- name: reverse
  endpoint:
    path: /v1.9/reverse
    method: GET
    data_selector: location
    params:
      fields: acs-demographics-county
- name: acs-demographics
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params: {}
- name: state_legislative_districts
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.state_legislative_districts
    params: {}
- name: school_districts
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.school_districts
    params: {}
- name: census
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.census
    params: {}
- name: acs-families
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params: {}
- name: acs-economics
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields=acs-economics
    params: {}
- name: acs-housing
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: acs-housing
- name: acs-social
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: acs-social
- name: zip4
  endpoint:
    path: /geocode
    method: GET
    data_selector: zip4
- name: timezone
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.timezone
    params: {}
- name: zip4
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params: {}
- name: ffiec
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params: {}
- name: riding
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params: {}
- name: provriding
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params: {}
- name: statcan
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params: {}
- name: geocode
  endpoint:
    path: /v1.9/geocode
    method: GET
    data_selector: results
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params: {}
- name: batch_geocode
  endpoint:
    path: /batch
    method: POST
    data_selector: results
    params: {}
- name: geocoding
  endpoint:
    path: /api
    method: GET
    data_selector: data
    params: {}
- name: congressional_districts
  endpoint:
    path: /api/congressional-districts
    method: GET
    data_selector: districts
- name: state_legislative_districts
  endpoint:
    path: /api/state-legislative-districts
    method: GET
    data_selector: districts
- name: canadian_ridings
  endpoint:
    path: /api/canadian-ridings
    method: GET
    data_selector: ridings
- name: geocode
  endpoint:
    path: /geocode
    method: POST
    data_selector: results
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: POST
    data_selector: results
- name: single_address_geocoding
  endpoint:
    path: /geocode-an-address/
    method: GET
- name: spreadsheet_geocoding
  endpoint:
    path: /upload/
    method: POST
- name: address_normalization
  endpoint:
    path: /geocode-an-address
    method: POST
    data_selector: address_components
- name: Census Data
  endpoint:
    path: /census
    method: GET
    data_selector: '2024'
    params: {}
- name: School Districts
  endpoint:
    path: /school_districts
    method: GET
    data_selector: unified
    params: {}
- name: State Legislative Districts
  endpoint:
    path: /state_legislative_districts
    method: GET
    data_selector: house
    params: {}
- name: Congressional Districts
  endpoint:
    path: /congressional_districts
    method: GET
    data_selector: districts
    params: {}
- name: Congressional Legislator Data
  endpoint:
    path: /congressional_legislators
    method: GET
    data_selector: legislators
    params: {}
- name: lists
  endpoint:
    path: /lists
    method: POST
- name: geocode
  endpoint:
    path: /geocode
    method: POST
    data_selector: results
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: POST
    data_selector: results
- name: batch_geocode
  endpoint:
    path: /batch
    method: POST
    data_selector: results
- name: Census Block/Tract/FIPS/GeoID
  endpoint:
    path: /guides/census/
    method: GET
    data_selector: records
    params: {}
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params:
      limit: '2500'
- name: reverse_geocode
  endpoint:
    path: /api/geocode/reverse
    method: GET
    data_selector: results
- name: ZIP+4
  endpoint:
    path: /add-zip-4
    method: POST
- name: congressional_districts
  endpoint:
    path: /api/congressional-districts
    method: GET
    data_selector: results
- name: state_legislative_districts
  endpoint:
    path: /api/state-legislative-districts
    method: POST
    data_selector: data
    params: {}
- name: timezones
  endpoint:
    path: /docs/#timezone
    method: GET
    data_selector: results
- name: ffiec_data
  endpoint:
    path: /geocode
    method: POST
    data_selector: data
    params:
      fields: ffiec
- name: counties
  endpoint:
    path: /geoids
    method: GET
    data_selector: records
    params: {}
- name: Census GeoIDs
  endpoint:
    path: /geoids
    method: GET
    data_selector: records
- name: Address to GeoIDs
  endpoint:
    path: /docs/#census-block-tract-fips-codes-amp-msa-csa-codes
    method: GET
    data_selector: records
- name: Census Demographics
  endpoint:
    path: /guides/demographics-census/
    method: GET
    data_selector: records
- name: US Census Areas
  endpoint:
    path: /guides/census/
    method: GET
- name: Congressional Districts & Legislator Contact Info
  endpoint:
    path: /guides/congressional-data/
    method: GET
- name: State Legislative Districts & Legislator Contact Info
  endpoint:
    path: /guides/state-legislative-districts/
    method: GET
- name: School Districts
  endpoint:
    path: /guides/school-districts/
    method: GET
- name: USPS ZIP+4 (Full ZIP9)
  endpoint:
    path: /guides/zip4/
    method: GET
- name: Demographics (Census)
  endpoint:
    path: /guides/demographics-census/
    method: GET
- name: 'Social: Education & Veteran Status (Census)'
  endpoint:
    path: /guides/education-veteran-status-census/
    method: GET
- name: Families (Census)
  endpoint:
    path: /guides/families-census/
    method: GET
- name: Housing (Census)
  endpoint:
    path: /guides/housing-census/
    method: GET
- name: 'Economics: Income Data (Census)'
  endpoint:
    path: /guides/income-data-census/
    method: GET
- name: Timezones
  endpoint:
    path: /guides/timezones/
    method: GET
- name: FFIEC Data
  endpoint:
    path: /guides/ffiec-data/
    method: GET
- name: Canada Ridings
  endpoint:
    path: /guides/ridings/
    method: GET
- name: Canada Provincial/Territorial Ridings
  endpoint:
    path: /guides/provincial-territorial-ridings/
    method: GET
- name: Canada StatCan Areas
  endpoint:
    path: /guides/statcan/
    method: GET
- name: spelling_correction
  endpoint:
    path: /spelling-correction
    method: POST
    data_selector: results
- name: address_completion
  endpoint:
    path: /geocode
    method: POST
    data_selector: results
    params: {}
- name: Lists
  endpoint:
    path: /lists
    method: POST
- name: reverse_geocoding
  endpoint:
    path: /reverse
    method: GET
    data_selector: results
- name: ZIP+4
  endpoint:
    path: /usps-zip-4
    method: GET
    data_selector: results
    params: {}
- name: congressional_districts
  endpoint:
    path: /address-or-coordinates-to-congressional-districts
    method: GET
    data_selector: data
    params: {}
- name: state_legislative_districts
  endpoint:
    path: /find-state-legislative-districts-for-addresses
    method: GET
    data_selector: results
- name: Census Demographics
  endpoint:
    path: /api/census-demographics
    method: GET
    data_selector: data
    params: {}
- name: Census Education/Veteran Data
  endpoint:
    path: /api/census/education-veteran-status
    method: GET
    data_selector: data
    params: {}
- name: census_families
  endpoint:
    path: /api/v1/census-families
    method: GET
    data_selector: data
    params: {}
- name: housing_data
  endpoint:
    path: /census/housing
    method: GET
    data_selector: data
- name: census_income_data
  endpoint:
    path: /acs/economics
    method: GET
    data_selector: data
    params: {}
- name: Congressional Districts
  endpoint:
    path: /v1.9/ocd-ids/cd
    method: GET
- name: State Legislative Districts
  endpoint:
    path: /v1.9/ocd-ids/stateleg
    method: GET
- name: Upcoming State Legislative Districts
  endpoint:
    path: /v1.9/ocd-ids/stateleg-next
    method: GET
- name: Federal Ridings
  endpoint:
    path: /v1.9/ocd-ids/riding
    method: GET
- name: Upcoming Federal Ridings
  endpoint:
    path: /v1.9/ocd-ids/riding-next
    method: GET
- name: Provincial Ridings
  endpoint:
    path: /v1.9/ocd-ids/provriding
    method: GET
- name: Upcoming Provincial Ridings
  endpoint:
    path: /v1.9/ocd-ids/provriding-next
    method: GET
- name: school_districts
  endpoint:
    path: /find-school-districts-for-addresses/
    method: GET
    data_selector: school_districts
- name: provincial_territorial_ridings
  endpoint:
    path: /api/ridings
    method: GET
    data_selector: results
- name: riding_info
  endpoint:
    path: /riding
    method: GET
    data_selector: data
    params: {}
- name: Canadian Census Geographies
  endpoint:
    path: /canadian/census/geographies
    method: GET
    data_selector: results
- name: timezones
  endpoint:
    path: /timezones
    method: GET
    data_selector: timezone_data
    params: {}
- name: geocoded_results
  endpoint:
    path: /geocoded/results
    method: GET
    data_selector: geocoded_data
- name: US and Canadian addresses
  endpoint:
    path: /geocode
    method: GET
    data_selector: records
- name: latitude/longitude pairs
  endpoint:
    path: /reverse_geocode
    method: GET
    data_selector: records
- name: Mexico reverse geocoding
  endpoint:
    path: /reverse_geocode_mexico
    method: GET
    data_selector: records
- name: Census Block Group
  endpoint:
    path: /geocode
    method: POST
    data_selector: results
    params: {}
- name: Congressional Districts
  endpoint:
    path: /address-or-coordinates-to-congressional-districts
    method: GET
    data_selector: results
- name: batch_geocoding
  endpoint:
    path: /v1.9/geocode
    method: POST
    data_selector: results
    params:
      api_key: YOUR_API_KEY
      fields: zip4
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
- name: batch_reverse_geocoding
  endpoint:
    path: /reverse
    method: POST
    data_selector: results
    params: {}
- name: batch_geocoding
  endpoint:
    path: /geocode
    method: POST
    data_selector: results
    params: {}
- name: school
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.school
    params: {}
- name: census
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.census
    params: {}
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params:
      country: USA
- name: create_list
  endpoint:
    path: /lists
    method: POST
    data_selector: response
    params: {}
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params: {}
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: results
    params: {}
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
- name: batch_geocode
  endpoint:
    path: /geocode
    method: POST
    data_selector: results
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: census2010,census
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: addresses
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params:
      api_key: YOUR_API_KEY
- name: geocode
  endpoint:
    path: /geocode
    method: POST
    data_selector: results
    params: {}
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: results
    params: {}
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: results
    params:
      q: latitude,longitude
      api_key: YOUR_API_KEY
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params: {}
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: fields
    params: {}
- name: batch_reverse_geocode
  endpoint:
    path: /reverse
    method: POST
    data_selector: fields
    params: {}
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params:
      country: USA
- name: reverse_geocoding
  endpoint:
    path: /reverse
    method: POST
    data_selector: results
- name: geocode
  endpoint:
    path: /geocode
    method: POST
    data_selector: results
    params:
      api_key: YOUR_API_KEY
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: results
    params:
      api_key: YOUR_API_KEY
- name: lists
  endpoint:
    path: /lists
    method: POST
    data_selector: results
    params:
      api_key: YOUR_API_KEY
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params:
      fields: school
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: results
    params:
      fields: school
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      api_key: YOUR_API_KEY
      fields: census2010,census
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: fields
    params:
      api_key: YOUR_API_KEY
      fields: census2010,census
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params:
      incremental: q
- name: geocode
  endpoint:
    path: /geocode
    method: POST
    data_selector: results
    params:
      api_key: YOUR_API_KEY
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: results
    params:
      api_key: YOUR_API_KEY
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params:
      fields: school
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: results
    params:
      fields: school
- name: census
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params:
      fields: census2010,census
- name: lists
  endpoint:
    path: /lists
    method: GET
    data_selector: results
    params: {}
- name: lists_status
  endpoint:
    path: /lists
    method: GET
    data_selector: results
    params: {}
- name: download_list
  endpoint:
    path: /lists/LIST_ID/download
    method: GET
    data_selector: fields
    params: {}
- name: reverse_geocoding
  endpoint:
    path: /reverse
    method: POST
    data_selector: results
- name: create_list
  endpoint:
    path: /lists
    method: POST
    data_selector: id
- name: list_status
  endpoint:
    path: /lists/{list_id}
    method: GET
    data_selector: status
- name: all_lists
  endpoint:
    path: /lists
    method: GET
    data_selector: data
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params: {}
- name: reverse
  endpoint:
    path: /reverse
    method: GET
    data_selector: fields
    params: {}
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.congressional_districts
    params: {}
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: fields.congressional_districts
    params: {}
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: school
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: fields
    params:
      fields: school
- name: census
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: census2010,census
- name: reverse_census
  endpoint:
    path: /reverse
    method: GET
    data_selector: fields
    params:
      fields: census2010,census
- name: school
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.school
- name: census
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.census
- name: state_legislative_districts
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.state_legislative_districts
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params: {}
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: results
    params: {}
- name: Census Designated Place
  endpoint:
    path: /census-designated-place
    method: GET
    data_selector: place
    params: {}
- name: Metropolitan Statistical Area
  endpoint:
    path: /metropolitan-statistical-area
    method: GET
    data_selector: msa
    params: {}
- name: Metropolitan Division
  endpoint:
    path: /metropolitan-division
    method: GET
    data_selector: metdiv
    params: {}
- name: County Subdivision
  endpoint:
    path: /county-subdivision
    method: GET
    data_selector: county_subdivision
    params: {}
- name: acs-demographics-county
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: acs-demographics-county
- name: acs-demographics-tract
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: acs-demographics-tract
- name: acs-demographics
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: acs-demographics
- name: acs-demographics-county
  endpoint:
    path: /acs-demographics-county
    method: GET
- name: acs-demographics-tract
  endpoint:
    path: /acs-demographics-tract
    method: GET
- name: acs-demographics-block_group
  endpoint:
    path: /acs-demographics-block_group
    method: GET
- name: acs-demographics-place
  endpoint:
    path: /acs-demographics-place
    method: GET
- name: acs-demographics-county_subdivision
  endpoint:
    path: /acs-demographics-county_subdivision
    method: GET
- name: acs-demographics-msa
  endpoint:
    path: /acs-demographics-msa
    method: GET
- name: acs-demographics-state
  endpoint:
    path: /acs-demographics-state
    method: GET
- name: acs-economics
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.acs-economics
- name: acs-families
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.acs-families
    params:
      fields: acs-families
- name: acs-housing
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.acs-housing
    params: {}
- name: reverse-acs-housing
  endpoint:
    path: /reverse
    method: GET
    data_selector: fields.acs-housing
    params: {}
- name: acs-social
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: acs-social
- name: reverse-acs-social
  endpoint:
    path: /reverse
    method: GET
    data_selector: fields
    params:
      fields: acs-social
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params: {}
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: statcan
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: fields
    params:
      fields: statcan
- name: timezone
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: timezone
- name: zip4
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.zip4
    params: {}
- name: ffiec
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.ffiec
    params: {}
- name: riding
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.riding
    params: {}
- name: provriding
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.provincial_riding
    params: {}
- name: provriding-next
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.provincial_riding
    params: {}
- name: geocode
  endpoint:
    path: /geocode
    method: POST
    data_selector: results
    params: {}
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: results
    params: {}
- name: download_list
  endpoint:
    path: /lists/LIST_ID/download
    method: GET
    data_selector: response
    params: {}
- name: delete_list
  endpoint:
    path: /lists/LIST_ID
    method: DELETE
    data_selector: response
    params: {}
- name: geocode
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params: {}
- name: reverse_geocode
  endpoint:
    path: /reverse
    method: GET
    data_selector: fields
    params: {}
- name: reverse_geocoding
  endpoint:
    path: /reverse
    method: POST
    data_selector: results
    params: {}
- name: create_list
  endpoint:
    path: /lists
    method: POST
    data_selector: id
    params: {}
- name: get_list_status
  endpoint:
    path: /lists/{list_id}
    method: GET
    data_selector: status
    params: {}
- name: download_list
  endpoint:
    path: /lists/{list_id}/download
    method: GET
    data_selector: download_url
    params: {}
- name: congressional_districts
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.congressional_districts
    params:
      fields: cd
- name: state_legislative_districts
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.state_legislative_districts
    params:
      fields: stateleg
- name: state_legislative_districts_next
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.state_legislative_districts
    params:
      fields: stateleg-next
- name: geocode
  endpoint:
    path: /v1.9/geocode
    method: GET
    data_selector: location
    params:
      fields: acs-demographics-county
- name: reverse
  endpoint:
    path: /v1.9/reverse
    method: GET
    data_selector: location
    params:
      fields: acs-demographics-county
- name: geocode_tract
  endpoint:
    path: /v1.9/geocode
    method: GET
    data_selector: location
    params:
      fields: acs-demographics-tract
- name: reverse_tract
  endpoint:
    path: /v1.9/reverse
    method: GET
    data_selector: location
    params:
      fields: acs-demographics-tract
- name: acs-demographics
  endpoint:
    path: /geocode
    method: GET
    data_selector: results
    params:
      fields: acs-demographics
- name: state_legislative_districts
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.state_legislative_districts
- name: school_districts
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.school_districts
- name: census
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields.census
- name: acs-economics
  endpoint:
    path: /geocode
    method: GET
    data_selector: response
    params: {}
- name: acs-families
  endpoint:
    path: /geocode
    method: GET
    data_selector: response
    params:
      fields: acs-families
- name: zip4
  endpoint:
    path: /geocode
    method: GET
    data_selector: response
    params: {}
- name: reverse_zip4
  endpoint:
    path: /reverse
    method: GET
    data_selector: response
    params: {}
- name: acs-housing
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: acs-housing
- name: acs-social
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: acs-social
- name: timezone
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params:
      fields: timezone
- name: zip4
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params: {}
- name: ffiec
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params: {}
- name: riding
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params: {}
- name: provriding
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params: {}
- name: statcan
  endpoint:
    path: /geocode
    method: GET
    data_selector: fields
    params: {}
- name: Number of housing units
  endpoint:
    path: /B25002
    method: GET
    data_selector: Total
    params: {}
- name: Occupancy status
  endpoint:
    path: /B25002
    method: GET
    data_selector: Occupied
    params: {}
- name: Ownership of occupied units
  endpoint:
    path: /B25003
    method: GET
    data_selector: Owner occupied
    params: {}
- name: Units in structure
  endpoint:
    path: /B25024
    method: GET
    data_selector: 1, detached unit
    params: {}
- name: Median value of owner-occupied housing units
  endpoint:
    path: /services/data/vXX.X/sobjects/B25077
    method: GET
    data_selector: records
- name: Value of owner-occupied housing units
  endpoint:
    path: /services/data/vXX.X/sobjects/B25075
    method: GET
    data_selector: records
- name: families
  endpoint:
    path: /services/data/vXX.X/sobjects/B11001
    method: GET
    data_selector: records
- name: Household type by population
  endpoint:
    path: /services/data/vXX.X/sobjects/B11002
    method: GET
    data_selector: records
- name: Marital status
  endpoint:
    path: /services/data/vXX.X/sobjects/B12001
    method: GET
    data_selector: records
- name: Number of households
  endpoint:
    path: /NumberOfHouseholds
    method: GET
    data_selector: Total
    params: {}
- name: Median household income
  endpoint:
    path: /MedianHouseholdIncome
    method: GET
    data_selector: Total
    params: {}
- name: Household income
  endpoint:
    path: /HouseholdIncome
    method: GET
    data_selector: Total
    params: {}
- name: demographics
  endpoint:
    path: /Demographics
    method: GET
    data_selector: Total
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Number of housing units
  endpoint:
    path: /housing/units
    method: GET
    data_selector: Total
    params: {}
- name: Occupancy status
  endpoint:
    path: /housing/occupancy
    method: GET
    data_selector: Occupied
    params: {}
- name: Ownership of occupied units
  endpoint:
    path: /housing/ownership
    method: GET
    data_selector: Owner occupied
    params: {}
- name: Units in structure
  endpoint:
    path: /housing/structure
    method: GET
    data_selector: 1, detached unit
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Household income
  endpoint:
    path: /household_income
    method: GET
    data_selector: Household income
- name: demographics
  endpoint:
    path: /demographics
    method: GET
    data_selector: demographics
- name: Sex
  endpoint:
    path: /sex
    method: GET
    data_selector: Sex
- name: Median value of owner-occupied housing units
  endpoint:
    path: /services/data/vXX.X/sobjects/MedianValueOwnerOccupiedHousingUnits
    method: GET
    data_selector: records
    params: {}
- name: Value of owner-occupied housing units
  endpoint:
    path: /services/data/vXX.X/sobjects/ValueOwnerOccupiedHousingUnits
    method: GET
    data_selector: records
    params: {}
- name: families
  endpoint:
    path: /services/data/vXX.X/sobjects/Families
    method: GET
    data_selector: records
    params: {}
- name: Household type by population
  endpoint:
    path: /services/data/vXX.X/sobjects/HouseholdTypeByPopulation
    method: GET
    data_selector: records
    params: {}
- name: Marital status
  endpoint:
    path: /services/data/vXX.X/sobjects/MaritalStatus
    method: GET
    data_selector: records
    params: {}
- name: Number of households
  endpoint:
    path: /services/data/vXX.X/sobjects/NumberOfHouseholds
    method: GET
    data_selector: records
    params: {}
- name: Median household income
  endpoint:
    path: /services/data/vXX.X/sobjects/MedianHouseholdIncome
    method: GET
    data_selector: records
    params: {}
- name: single_address_geocoding
  endpoint:
    path: /geocode-an-address/
    method: GET
notes:
- The API requires the `api_key` parameter in the request.
- Batch geocoding requests can process up to 10,000 lookups at a time.
- Geocodio can append various US Census-designated geographies to an address or coordinate
  pair, including Census Tract, Census Block, FIPS codes, MSAs/CSAs, and more.
- The coordinate pair should be comma-separated
- Optional parameter 'format' can change the JSON output structure, currently 'simple'
  is the only valid value.
- All requests require an API key.
- Accounts can have multiple API keys.
- Data for spreadsheets processed through the lists API is automatically deleted 72
  hours after processing completes.
- Maximum of 10M lookups per list batch recommended.
- Geocodio can append various US Census-designated geographies to an address or coordinate
  pair.
- Census geographies are available back to 2010 as well as 2000.
- Batch geocoding requests can be performed by making a POST request to the geocode
  endpoint.
- The Authorization header can be used for API authentication.
- Geocodio can return various US Census-designated geographies.
- Geocodio can return the Congressional district and Representative/Senator information
  for an address or coordinate pair via any one of the valid parameter names in the
  fields query parameter.
- The list of legislators is always ordered with the Representative first then Senators.
- Unified school district can be returned with full name, LEA code, and grades supported.
- When planning your project, each category counts as an additional lookup for billing
  purposes.
- The basic census field comes included with any acs- field lookups at no additional
  cost.
- Geocodio provides the data exactly as it is packaged by the Census Bureau.
- We provide the data exactly as it is packaged by the Census Bureau in the breakouts
  it gives.
- Can return both Congressional and State Legislative Districts based on address or
  coordinates.
- Geocodio always uses 5-year estimates, and always uses the most recent data that
  is available.
- Census geographies are available back to 2010.
- API can return various US Census-designated geographies.
- Uses OAuth2 with Authorization header for API authentication
- Geocoding is only one step of your process. Geocodio makes it fast and painless.
- The first 2,500 lookups per day are free
- Rate limited to 1,000 lookups per minute
- Access forward and reverse geocoding, as well as data enrichment, via our Spreadsheet
  Uploader or our API
- Geocodio's Enterprise cloud version is designed to meet the heightened security
  and data handling requirements of complex organizations.
- Geocodio can do forward geocoding (address to coordinates) as well as reverse geocoding
  (coordinates to address).
- Geocodio is completely restriction-free and has both API and spreadsheet upload
  options.
- Geocodio is built to handle large datasets.
- Non-profits are eligible for a 5% discount.
- First 2,500 lookups per day are free.
- Users can upload spreadsheets up to 1 GB, with no daily processing limit.
- Geocodio's Terms of Use are among the most flexible of any geocoder.
- We never share or sell your data. Ever.
- Upload CSV, TSV, or Excel spreadsheets up to 1 GB.
- First 2,500 lookups free per day, no credit card required.
- Data is transferred securely via HTTPS.
- Some API requests may be logged to disk in plain text.
- Requires an API key for access.
- Census boundaries are available for every year back to 2010 as well as 2000.
- We always return data for the most recent Census year. Currently, the most recent
  year is the 2024 Census year.
- Everyone gets their first 2,500 lookups per day for free. No credit card is required
  until the amount of lookups exceeds the allotted free amount.
- You only pay for usage above the daily free tier.
- Pay-as-You-Go is billed every month on the 1st, based on total usage from the previous
  month.
- You can set a usage limit for your account, for up to 50,000 lookups per day. Requests
  will fail above the limit you set.
- Volume discounts automatically apply to your monthly usage starting at 500,000 lookups
  per month.
- All commands require a valid API Key, which can be generated from the Geocodio Dashboard
- No credit card required for the free tier.
- Optimized for high-volume data analysis workflows.
- No usage limitations, no attribution required, allows geocoding results storage,
  clear data privacy policy with user control over data deletion.
- First 2,500 lookups per day are free
- Geocodio's Geocoding terms of use are non-restrictive and transparent. Full data
  freedom with no hassles.
- First 2,500 lookups per day are free, no credit card required
- You can run up to 2,500 lookups for free per day.
- Can return Congressional districts ranked by likelihood when only ZIP codes are
  provided.
- Geocodio supports batch processing for addresses or coordinates.
- First 2,500 lookups free per day. No credit card required.
- Unlimited geocoding and process up to 200,000 lookups per hour for a flat fixed
  rate.
- Requests are billed as geocode + ffiec info (i.e., two lookups).
- This data append is included with Self-Serve and Enterprise Unlimited plans.
- Geocodio can only accept five-digit ZIP codes as an input. If ZIP+4 is provided
  as an input, we will utilize the first five digits instead.
- If a city is given without a street or state/province, the city with the largest
  population will be assumed.
- If a country is not specified in the query, Geocodio will assume the country to
  be USA.
- At this time, Geocodio is not CASS certified by USPS.
- The maximum file size per upload is 1 GB, or 10 million lookups.
- We suggest removing any extraneous data from your spreadsheet uploads.
- Exact Match validates whether the secondary address, such as apartment/unit number,
  is valid.
- Requests are billed as geocode + Congress info (i.e., two lookups).
- Geocodio updated state legislative district data after 2020 Census redistricting.
- Requests are billed as geocode + state legislative info (i.e., two lookups).
- Data is provided at various geographic levels including Block Group, Tract, Place,
  County Subdivision, County, MSA, State.
- 'Data is available at several geographic levels: Block Group, Tract, Place, County
  Subdivision, County, MSA, State'
- Requests are billed as geocode + ACS Social info
- Data is available via API as well as spreadsheet upload.
- We do not provide data at the individual household level.
- Data is from the most recent five-year American Community Survey, currently the
  2023 survey results published in 2024.
- Requests are billed as geocode + Census Economics info (i.e., two lookups).
- Requests are billed as geocode + riding info (i.e., two lookups).
- Requests are billed as geocode + StatCan info (i.e., two lookups).
- We are only allowed to provide partial postal codes in Canada as the full postal
  codes are proprietary to Canada Post.
- Address parsing and standardization is automatically included with all forward geocoding
  (i.e. address-based) lookups.
- Geocodio returns coordinates projected in EPSG:4326 also known as WGS 84.
- If your completed file doesn't appear to have any latitude/longitude columns added,
  scroll all the way over to the right and see if they've been placed there.
- If you've exported your spreadsheet from another piece of software, like a CRM,
  occasionally these programs insert blank cells into the spreadsheet. Geocodio will
  add data to the right of these cells that appear blank but may have hidden characters
  in them.
- You can download Geocodio's W-9 here.
- API requests will return 403 Forbidden when the limit threshold is met. Please ensure
  that your API integration handles this error gracefully.
- No rate limiting, but be mindful of processing volumes.
- Geocodio Unlimited comes without any rate limits.
- You can use the 'Instances' section of the Geocodio Dashboard to monitor the load
  of your dedicated instances.
- Additional instances can be added month-to-month without commitment.
- Unlimited customers can add and remove instances via the Instances Dashboard.
- There is no additional cost for creating a Team Account.
- If you are on the pay-as-you-go plan, the free tier will split among all of the
  users on the account.
- Maps is included as part of your account and can be used on any spreadsheet you
  upload at no extra cost.
- We are only able to render maps on spreadsheets with less than 100,000 rows.
- Geocodio Enterprise customers are unable to create a map using this method.
- Once you've added a spreadsheet to your map, you can style certain elements to your
  liking and customize its appearance to better visualize the data you've provided.
- If you exceed the 2,500 free lookups per day, any billable lookups will be counted
  in your total monthly usage when you are billed.
- Batch geocoding supports CSV files of up to 10,000 lookups at a time.
- Geocodio does not ship with SSL support built-in. We recommend using a reverse proxy
  for SSL termination.
- The Geocodio Docker container needs to be able to access /var/geocodio with UID
  1001
- The Geocodio dashboard (including spreadsheet uploads and usage tracking) is not
  available for on-premises installations.
- The Lists API is also unavailable, but it does support batch geocoding CSV files
  of less than 10,000 rows each via the batch geocoding endpoint.
- Enabling low memory mode disables support for rooftop-accuracy reverse geocoding.
- Enterprise spreadsheet uploads are only retained for 72 hours before being automatically
  deleted.
- Maps remain private by default and sharing settings must be manually changed before
  they can be shared.
- This feature is only available for Enterprise Unlimited and On-Premises accounts,
  and is not available for Pay-as-You-Go or Self-Serve Unlimited accounts.
- All requests require an API key
- The API key must be included in all requests using the api_key query parameter
- Geocodio can return the school district for an address or a coordinate using school
  in the fields query parameter.
- Geographies for the 2000 Census are available as well using the census2000 field
  append.
- The API key must be included in all requests using the api_key query parameter.
- Batch geocoding can process up to 10,000 lookups at a time.
- You can process up to 10,000 lookups at a time with the batch endpoint.
- Batch geocoding requests can be performed by making a POST request to the geocode
  endpoint, supplying a JSON array.
- Up to 10,000 lookups can be processed at once.
- If no year is specified, the API will default to the most recent Census.
- Uses API key for authentication.
- Geocodio can return the school district for an address or coordinate using `school`
  in the `fields` query parameter.
- Currently, 2024 data is returned when appending the Census field.
- API supports geocoding of addresses and coordinates.
- Census data is available from 2000 to 2024.
- Data is packaged as provided by the Census Bureau with percentage calculations added.
- Data is provided exactly as it is packaged by the Census Bureau.
- The response may be a Redirect HTTP header, so configure your HTTP client to follow
  redirects.
- Batch reverse geocoding requests are performed by making a POST request to the reverse
  endpoint, supplying a JSON array in the body.
- You can batch reverse geocode up to 10,000 coordinates at a time.
- Requires API key for access and requests.
- Districts are sorted by the proportion in descending order.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- There is a newer API version available, please consider upgrading to v1.6.
errors:
- '403 Forbidden: This API key does not have permission to access this feature.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Check if the API key is valid.'
- '404 Not Found: Verify the endpoint path or parameters.'
- '400 Bad Request: Ensure query parameters are correct.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '403 Forbidden: API key does not have permission to access this feature.'
- '403 Forbidden: API key does not have permission to access this feature'
- '401 Unauthorized: Check your API key.'
- '400 Bad Request: Ensure required fields are included in the request.'
- '401 Unauthorized: Check API key.'
- '404 Not Found: Invalid endpoint.'
- '200 OK: Note that this status code will also be returned even though no geocoding
  results were available.'
- '403 Forbidden: Invalid API key, or other reason why access is forbidden.'
- '422 Unprocessable Entity: A client error prevented the request from executing successfully
  (e.g. invalid address provided). A JSON object will be returned with an error key
  containing a full error message.'
- '429 Too Many Requests: You''ve reached the Pay as You Go rate limit. Please inspect
  the following HTTP headers: `X-RateLimit-Remaining`, `X-RateLimit-Limit`, `X-RateLimit-Period`
  and stop making requests until the end of the `X-RateLimit-Period` value.'
- '500 Server Error: Hopefully you will never see this...it means that something went
  wrong in our end. Whoops.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Check API key'
- '400 Bad Request: Validate request parameters'
- Requests will fail above the usage limit you set.
- '-888888888: Estimate not applicable or not available'
- '-999999999: Insufficient sample cases in the geographic area'
- '-222222222: Margin of error couldn''t be computed due to insufficient sample'
- '-555555555: Controlled estimate (no sampling error)'
- '403 Forbidden: Limit threshold is met'
- '403 Forbidden: This API key does not have permission to access this feature'
- 'REQUEST_LIMIT_EXCEEDED: Exceeds the limit of lookups.'
- 'INVALID_API_KEY: Check your API key.'
- 'REQUEST_LIMIT_EXCEEDED: You have exceeded the maximum number of lookups.'
- 'INVALID_API_KEY: Check that your API key is valid.'
- '400 Bad Request: Check your request parameters and API key.'
- '401 Unauthorized: Recheck your API key.'
- '429 Too Many Requests: You have exceeded your request limit.'
- 'List is still processing: Handle by retrying after some time.'
- 'Unauthorized: Check your API key and its usage limits.'
- 'Invalid API Key: Check your API key and try again.'
- 'Too Many Requests: Reduce the frequency of requests.'
- '401 Unauthorized: Recheck API key validity'
- '200 OK: Hopefully you will see this most of the time. Note that this status code
  will also be returned even though no geocoding results were available.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.geocod.io/v1.9/
  auth:
    type: apikey
    location: query
    header_name: Authorization
source_metadata: null
