resources:
- name: ListFleets
  endpoint:
    path: /moia.fleet.state.v1beta5.FleetStateService/ListFleets
    method: POST
    data_selector: fleets
- name: ListVehicles
  endpoint:
    path: /moia.fleet.state.v1beta5.FleetStateService/ListVehicles
    method: POST
    data_selector: vehicles
- name: GetVehicle
  endpoint:
    path: /moia.fleet.state.v1beta5.FleetStateService/GetVehicle
    method: POST
    data_selector: vehicle
- name: SubscribeToVehicleTelemetryMovement
  endpoint:
    path: /moia.fleet.state.v1beta5.FleetStateService/SubscribeToVehicleTelemetryMovement
    method: POST
    data_selector: vehicleMovement
- name: ListStoppableLocations
  endpoint:
    path: /maps/stoppable-locations
    method: GET
- name: mission
  endpoint:
    path: /api/v1/mission
    method: GET
    data_selector: mission
    params: {}
- name: pickup
  endpoint:
    path: /pickup
    method: POST
    data_selector: pickup
    params: {}
- name: dropoff
  endpoint:
    path: /dropoff
    method: POST
    data_selector: dropoff
    params: {}
- name: rebalancing
  endpoint:
    path: /rebalancing
    method: POST
    data_selector: rebalancing
    params: {}
- name: service_break
  endpoint:
    path: /service_break
    method: POST
    data_selector: service_break
    params: {}
- name: mission_events
  endpoint:
    path: /stream/SubscribeToFleetMissionEvents
    method: GET
    data_selector: events
    params: {}
- name: polling_mission_events
  endpoint:
    path: /poll/PollFleetMissionEvents
    method: GET
    data_selector: events
    params: {}
- name: compute_route_request
  endpoint:
    path: /routing/computeRoute
    method: POST
    data_selector: route
    params:
      fleet_id: 646f570a-a3b2-44bb-86ee-9c07dd4d8a68
- name: compute_travel_time_matrix_request
  endpoint:
    path: /routing/computeTravelTimeMatrix
    method: POST
    data_selector: travelTimeMatrix
    params:
      fleet_id: 646f570a-a3b2-44bb-86ee-9c07dd4d8a68
- name: match_path_request
  endpoint:
    path: /routing/matchPath
    method: POST
    data_selector: matchedRoute
    params:
      fleet_id: 646f570a-a3b2-44bb-86ee-9c07dd4d8a68
- name: telemetry
  endpoint:
    path: /GetVehicle
    method: GET
    data_selector: movement
- name: SendBoardingPreparationSuccessful
  endpoint:
    path: /vehicle/commands/sendBoardingPreparationSuccessful
    method: POST
    data_selector: success
    params: {}
- name: ListVehicles
  endpoint:
    path: /moia.fleet.state.v1beta5.FleetStateService/ListVehicles
    method: POST
    data_selector: vehicles
    params:
      fleet_id: $FLEET_ID
- name: SubscribeToVehicleTelemetryMovement
  endpoint:
    path: /moia.fleet.state.v1beta5.FleetStateService/SubscribeToVehicleTelemetryMovement
    method: POST
    data_selector: telemetry
    params:
      vehicle_id: $VEHICLE_ID
      fleet_id: $FLEET_ID
- name: SubscribeToFleetMissionEvents
  endpoint:
    path: /moia.fleet.state.v1beta5.FleetStateService/SubscribeToFleetMissionEvents
    method: POST
    data_selector: mission_events
    params:
      fleet_id: $FLEET_ID
- name: GetVehicle
  endpoint:
    path: /moia.fleet.state.v1beta5.FleetStateService/GetVehicle
    method: POST
    data_selector: VehicleState
    params: {}
- name: ListStoppableLocations
  endpoint:
    path: /moia.fleet.maps.v1beta1.MapService/ListStoppableLocations
    method: POST
    data_selector: StoppableLocations
    params: {}
- name: ComputeRoute
  endpoint:
    path: /moia.fleet.routing.v1beta1.RoutingService/ComputeRoute
    method: POST
    data_selector: Route
    params: {}
- name: GetVehicle
  endpoint:
    path: /moia.fleet.state.v1beta5.FleetStateService/GetVehicle
    method: POST
    data_selector: vehicle_state
    params: {}
- name: UpdateVehicleMission
  endpoint:
    path: /moia.fleet.state.v1beta5.FleetStateService/UpdateVehicleMission
    method: POST
    data_selector: vehicle_mission
    params: {}
- name: SubscribeToFleetMissionEvents
  endpoint:
    path: /moia.fleet.state.v1beta5.FleetStateService/SubscribeToFleetMissionEvents
    method: POST
    data_selector: ''
    params: {}
- name: SendBoardingPreparationSuccessful
  endpoint:
    path: /moia.fleet.state.v1beta5.FleetStateService/SendBoardingPreparationSuccessful
    method: POST
    data_selector: ''
    params: {}
- name: SubscribeToVehicleTelemetryMovement
  endpoint:
    path: /moia.fleet.state.v1beta5.FleetStateService/SubscribeToVehicleTelemetryMovement
    method: POST
    data_selector: ''
    params: {}
- name: fleets
  endpoint:
    path: /fleets
    method: GET
    data_selector: fleets
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: vehicles
- name: vehicle_telemetry
  endpoint:
    path: /vehicles/telemetry
    method: POST
    data_selector: telemetry
- name: fleet_mission_events
  endpoint:
    path: /fleet/mission_events
    method: POST
    data_selector: missionEvents
- name: fleets
  endpoint:
    path: /listFleets
    method: GET
    data_selector: fleets
    params: {}
- name: vehicles
  endpoint:
    path: /listVehicles
    method: GET
    data_selector: vehicles
    params:
      pageSize: 2
- name: vehicle_telemetry
  endpoint:
    path: /subscribeToVehicleTelemetryMovement
    method: GET
    data_selector: telemetryMovement
    params: {}
- name: mission_events
  endpoint:
    path: /subscribeToFleetMissionEvents
    method: GET
    data_selector: missionEvent
    params: {}
- name: ListFleets
  endpoint:
    path: /ListFleets
    method: GET
    data_selector: fleets
    params: {}
- name: GetFleet
  endpoint:
    path: /GetFleet
    method: GET
    data_selector: fleet
    params: {}
- name: ListVehicles
  endpoint:
    path: /ListVehicles
    method: GET
    data_selector: vehicles
    params: {}
- name: GetVehicle
  endpoint:
    path: /GetVehicle
    method: GET
    data_selector: vehicle
    params: {}
- name: SubscribeToVehicleTelemetryMovement
  endpoint:
    path: /SubscribeToVehicleTelemetryMovement
    method: POST
    data_selector: vehicle_telemetry
    params: {}
- name: UpdateVehicleMission
  endpoint:
    path: /UpdateVehicleMission
    method: POST
    data_selector: mission_update
    params: {}
- name: SubscribeToFleetMissionEvents
  endpoint:
    path: /SubscribeToFleetMissionEvents
    method: POST
    data_selector: mission_events
    params: {}
- name: PollFleetMissionEvents
  endpoint:
    path: /PollFleetMissionEvents
    method: GET
    data_selector: mission_events
    params: {}
- name: SendBoardingPreparationSuccessful
  endpoint:
    path: /SendBoardingPreparationSuccessful
    method: POST
    data_selector: boarding_success
    params: {}
- name: GetCapacityDefinition
  endpoint:
    path: /GetCapacityDefinition
    method: GET
    data_selector: capacity_definition
    params: {}
- name: MissionEvent
  endpoint:
    path: /mission/events
    method: GET
    data_selector: events
- name: VehicleMission
  endpoint:
    path: /Vehicle/Mission
    method: GET
    data_selector: missions
    params: {}
- name: VehicleStatus
  endpoint:
    path: /Vehicle/Status
    method: GET
    data_selector: status
    params: {}
- name: VehicleTelemetry
  endpoint:
    path: /Vehicle/Telemetry
    method: GET
    data_selector: telemetry
    params: {}
- name: VehicleConfiguration
  endpoint:
    path: /Vehicle/Configuration
    method: GET
    data_selector: configuration
    params: {}
- name: ListStoppableLocations
  endpoint:
    path: /ListStoppableLocations
    method: POST
    data_selector: stoppable_locations
    params:
      page_size: 50
- name: ComputeRoute
  endpoint:
    path: /routing/ComputeRoute
    method: POST
    data_selector: content.route
- name: MatchPath
  endpoint:
    path: /routing/MatchPath
    method: POST
    data_selector: content.leg
- name: ComputeTravelTimeMatrix
  endpoint:
    path: /routing/ComputeTravelTimeMatrix
    method: POST
    data_selector: entries
- name: ViolationType
  endpoint:
    path: /violation/type
    method: GET
    data_selector: violations
    params: {}
- name: GetVehicle
  endpoint:
    path: /GetVehicle
    method: POST
- name: UpdateVehicleMission
  endpoint:
    path: /UpdateVehicleMission
    method: POST
- name: SendBoardingPreparationSuccessful
  endpoint:
    path: /SendBoardingPreparationSuccessful
    method: POST
- name: SubscribeToVehicleTelemetryMovement
  endpoint:
    path: /SubscribeToVehicleTelemetryMovement
    method: POST
notes:
- Ensure to query the latest Mission version before making updates.
- Service Break Actions are independent of rides (no ride id can be provided).
- viaPoints functionality is provided for testing purposes only. Do not use this functionality
  in regular mobility operations.
- Routes obtained through the API are purely informative.
- Getting a specific route does not guarantee the same route will be taken by a successive
  mission assignment.
- Mission Update is acknowledged when successful. It returns the new Vehicle Mission
  with a new Mission ID.
- Uses OAuth2 with client credentials â€” requires setup of client ID and secret.
- Uses OAuth2 with client credentials.
- Streams require handling of reconnection logic.
- v1beta5 uses a completely separate Service/data source from v1beta4.
- Be careful when migrating to ensure that you do not depend on v1beta4 data.
errors:
- '401: Authentication error'
- '464: Ensure HTTP/2 is used'
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: The specified Mission ID does not exist.'
- '409 Conflict: The Mission version is outdated.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'NO_ROUTE_FOUND: No route could be matched for the provided waypoints'
- '0: OK is returned on success.'
- '1: Canceled indicates the operation was canceled (typically by the caller).'
- '2: Unknown error.'
- '3: InvalidArgument indicates client specified an invalid argument. BadRequest detail
  for every invalid field'
- '4: DeadlineExceeded means operation expired before completion.'
- '5: NotFound means some requested entity (e.g., file or directory) was not found.
  ResourceInfo to provide details about resource which was not found, ErrorInfo if
  pagination token was not found.'
- '6: AlreadyExists means an attempt to create an entity failed because one already
  exists.'
- '7: PermissionDenied indicates the caller does not have permission to execute the
  specified operation.'
- '8: ResourceExhausted indicates some resource has been exhausted, perhaps a per-user
  quota, or perhaps the entire file system is out of space.'
- '9: FailedPrecondition indicates operation was rejected because the system is not
  in a state required for the operationâ€™s execution.'
- '10: Aborted indicates the operation was aborted, typically due to a concurrency
  issue.'
- '11: OutOfRange means operation was attempted past the valid range.'
- '12: Unimplemented indicates operation is not implemented or not supported/enabled
  in this service.'
- '13: Internal errors.'
- '14: Unavailable indicates the service is currently unavailable.'
- '15: DataLoss indicates unrecoverable data loss or corruption.'
- '16: Unauthenticated indicates the request does not have valid authentication credentials
  for the operation.'
- 'DEADLINE_EXCEEDED: Stream closed, reconnecting...'
- 'INVALID_ARGUMENT: if the incoming request failed to validate against the buf annotations'
- 'NOT_FOUND: if a page token was not found, provides ErrorInfo in error details'
- 'INTERNAL: internal error occurred'
- 'INVALID_ARGUMENT: if the incoming request has missing or invalid fields'
- 'PERMISSION_DENIED: if the client is not authorized to operate the given fleet'
- 'RESOURCE_EXHAUSTED: if the client currently exceeded its quota'
- 'PERMISSION_DENIED: Client is not authorized to request route for the given fleet.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://fleet-api.trip.int.moia-group.io
  auth:
    type: oauth2
    flow: client_credentials
    token_url: https://fleet-api.trip.int.moia-group.io/auth/oauth/token
    client_id: $CLIENT_ID
    client_secret: $CLIENT_SECRET
  headers:
    Content-Type: application/x-www-form-urlencoded
source_metadata: null
