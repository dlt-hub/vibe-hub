resources:
- name: Connectors
  endpoint:
    path: /en_US/connectors
    method: GET
- name: Installation & Technical information
  endpoint:
    path: /en_US/getting-started
    method: GET
- name: Device enrollment
  endpoint:
    path: /en_US/digicert-iot-trust-manager/device-enrollment-into-digicert-one-iot-trust-manager-for-certificate-management
    method: GET
- name: Siemens S7 - Instance & item setup
  endpoint:
    path: /en_US/siemens/siemens-s7-instance-and-item-setup
    method: GET
- name: Siemens S7 - Troubleshooting
  endpoint:
    path: /en_US/siemens/816563-siemens-s7-troubleshooting
    method: GET
- name: OPC-UA Server - Instance & item setup
  endpoint:
    path: /en_US/opc-ua-server/opc-ua-server-instance-item-setup
    method: GET
- name: OPC-UA Server - Troubleshooting
  endpoint:
    path: /en_US/opc-ua-server/opc-ua-server-troubleshooting
    method: GET
- name: SQL - Instance & item setup
  endpoint:
    path: /en_US/sql/sql-instance-item-setup
- name: Beckhoff TwinCAT - Instance & item setup
  endpoint:
    path: /en_US/beckhoff-twincat/beckhoff-twincat-instance-item-setup
    method: GET
- name: Beckhoff TwinCAT - Troubleshooting
  endpoint:
    path: /en_US/beckhoff-twincat/1020126-beckhoff-twincat-troubleshooting
    method: GET
- name: Setting up ADS Route in TwinCAT
  endpoint:
    path: /en_US/beckhoff-twincat/setting-up-ads-route-in-twincat
    method: GET
- name: SQL
  endpoint:
    path: /en_US/ms-sql
    method: GET
- name: File
  endpoint:
    path: /en_US/file
    method: GET
- name: Installation & Technical information
  endpoint:
    path: /en_US/getting-started
    method: GET
- name: Configuration in the Web UI
  endpoint:
    path: /en_US/using-sia
    method: GET
- name: Connectors
  endpoint:
    path: /en_US/connectors
    method: GET
- name: Scripting & Variables
  endpoint:
    path: /en_US/variables
    method: GET
- name: Developers
  endpoint:
    path: /en_US/developers
    method: GET
- name: Tutorials & Guides
  endpoint:
    path: /en_US/tutorials-guides
    method: GET
- name: General
  endpoint:
    path: /en_US/general
    method: GET
- name: Socket Client - Instance & Item setup
  endpoint:
    path: /en_US/socket-client/socket-client-instance-item-setup
- name: Installation & Technical information
  endpoint:
    path: /en_US/getting-started
    method: GET
- name: Introduction
  endpoint:
    path: /en_US/intro-to-sia
    method: GET
- name: SIA Connect Standalone
  endpoint:
    path: /en_US/141795-hardware-installation-technical-info
    method: GET
- name: SIA Connect ANY-Ware
  endpoint:
    path: /en_US/any-ware-software
    method: GET
- name: Cellular & WiFi connectivity
  endpoint:
    path: /en_US/cellular-wifi-connectivity
    method: GET
- name: Configuration in the Web UI
  endpoint:
    path: /en_US/using-sia
    method: GET
- name: Connectors
  endpoint:
    path: /en_US/connectors
    method: GET
- name: Developers
  endpoint:
    path: /en_US/developers
    method: GET
- name: Tutorials & Guides
  endpoint:
    path: /en_US/tutorials-guides
    method: GET
- name: General
  endpoint:
    path: /en_US/general
    method: GET
- name: Internal API
  endpoint:
    path: /tools-add-ons/360005508478-API-Reference
    method: GET
    data_selector: query
    params: {}
- name: Writing data from PLCs to InfluxDB
  endpoint:
    path: /en_US/influxdb/writing-data-from-plcs-to-influxdb
- name: REST API
  endpoint:
    path: /en_US/164491-rest-api
    method: GET
- name: Siemens S7
  endpoint:
    path: /en_US/siemens-s7/configuring-to-siemens-s7
    method: GET
    data_selector: records
- name: Sending SMS notifications from PLCs using Twilio
  endpoint:
    path: /en_US/notification-messaging/sending-sms-notifications-from-plcs-using-twilio
- name: REST API
  endpoint:
    path: /en_US/164491-rest-api
    method: GET
- name: Siemens S7
  endpoint:
    path: /en_US/siemens
    method: GET
- name: Azure IoT
  endpoint:
    path: /en_US/azure-iot
    method: GET
- name: Ethernet/IP
  endpoint:
    path: /en_US/ethernet-ip
    method: GET
- name: Mitsubishi MELSEC
  endpoint:
    path: /en_US/mitsubishi-melsec
    method: GET
- name: OPC-UA Server
  endpoint:
    path: /en_US/opc-ua-server
    method: GET
- name: SQL
  endpoint:
    path: /en_US/sql
    method: GET
- name: MQTT
  endpoint:
    path: /en_US/163697-mqtt
    method: GET
- name: Omron Host Link
  endpoint:
    path: /en_US/163907-hostlink
    method: GET
- name: REST API
  endpoint:
    path: /en_US/164491-rest-api
    method: GET
- name: Omron FINS
  endpoint:
    path: /en_US/164978-omron-fins
    method: GET
- name: Keyence
  endpoint:
    path: /en_US/keyence
    method: GET
- name: Beckhoff TwinCAT
  endpoint:
    path: /en_US/beckhoff-twincat
    method: GET
- name: BACnet
  endpoint:
    path: /en_US/bacnet
    method: GET
- name: Virtual
  endpoint:
    path: /en_US/virtual
    method: GET
- name: OPC-UA Client
  endpoint:
    path: /en_US/opc-ua-client
    method: GET
- name: MS SQL
  endpoint:
    path: /en_US/ms-sql
    method: GET
- name: File
  endpoint:
    path: /en_US/file
    method: GET
- name: M-Bus
  endpoint:
    path: /en_US/m-bus
    method: GET
- name: Modbus
  endpoint:
    path: /en_US/modbus
    method: GET
- name: MTConnect
  endpoint:
    path: /en_US/mtconnect
    method: GET
- name: Socket Client
  endpoint:
    path: /en_US/socket-client
    method: GET
- name: Socket Server
  endpoint:
    path: /en_US/socket-server
    method: GET
- name: MySQL
  endpoint:
    path: /en_US/mysql
    method: GET
- name: Microsoft SQL
  endpoint:
    path: /supported-databases/microsoft-sql
    method: GET
- name: Azure SQL
  endpoint:
    path: /supported-databases/azure-sql
    method: GET
- name: Oracle
  endpoint:
    path: /supported-databases/oracle
    method: GET
- name: MySQL
  endpoint:
    path: /supported-databases/mysql
    method: GET
- name: MariaDB
  endpoint:
    path: /supported-databases/mariadb
    method: GET
- name: InfluxDB
  endpoint:
    path: /supported-databases/influxdb
    method: GET
- name: Postgre SQL
  endpoint:
    path: /supported-databases/postgre-sql
    method: GET
- name: MongoDB
  endpoint:
    path: /supported-databases/mongodb
    method: GET
- name: IBM DB2
  endpoint:
    path: /supported-databases/ibm-db2
    method: GET
- name: SQLite
  endpoint:
    path: /supported-databases/sqlite
    method: GET
- name: technical_specifications
  endpoint:
    path: /141795-hardware-installation-technical-info/technical-specifications
    method: GET
    data_selector: records
    params: {}
- name: internal_rest_api_reference
  endpoint:
    path: /en_US/tools-add-ons/360005508478-API-Reference
    method: GET
- name: docker_container
  endpoint:
    path: /any-ware-software/docker-single-image
    method: GET
    data_selector: commands
    params: {}
- name: PLC Data
  endpoint:
    path: /azure-iot-hub-device-provisioning-service/connecting-plcs-to-azure-iot-hub
    method: POST
    data_selector: data
    params: {}
- name: Connection String
  endpoint:
    path: /azure-iot-hub-device-provisioning-service/getting-device-connection-string-from-azure-iot
    method: GET
    data_selector: Connection String
    params: {}
- name: instance
  endpoint:
    path: /api/plugins/instance
    method: GET
    data_selector: records
    params: {}
- name: item
  endpoint:
    path: /api/plugins/item
    method: GET
    data_selector: records
    params: {}
- name: updater
  endpoint:
    path: /system/update-sia
    method: POST
    data_selector: updater
    params: {}
- name: configuration_export_import
  endpoint:
    path: /system/export-and-import-configuration
    method: GET
    data_selector: settings
    params: {}
- name: updater
  endpoint:
    path: /system/update-sia
    method: POST
    data_selector: update_info
    params: {}
- name: DPS Enrollment
  endpoint:
    path: /manage/enrollments
    method: POST
- name: Device-to-cloud
  endpoint:
    path: /devices/{device_id}/messages/events
    method: POST
    data_selector: payload
- name: Cloud-to-device
  endpoint:
    path: /devices/{device_id}/messages/devicebound
    method: POST
    data_selector: payload
- name: IoT Hub
  endpoint:
    path: /en_US/azure-iot-hub-device-provisioning-service/creating-iot-hub-in-azure
    method: GET
- name: Device Connection String
  endpoint:
    path: /en_US/azure-iot-hub-device-provisioning-service/getting-device-connection-string-from-azure-iot
    method: GET
- name: Connecting PLCs
  endpoint:
    path: /en_US/azure-iot-hub-device-provisioning-service/connecting-plcs-to-azure-iot-hub
    method: GET
- name: Monitoring Events
  endpoint:
    path: /en_US/azure-iot-hub-device-provisioning-service/monitoring-iot-hub-events-messages-&-metrics
    method: GET
- name: Getting Started with Device Provisioning
  endpoint:
    path: /en_US/azure-iot-hub-device-provisioning-service/get-started-with-azure-device-provisioning-service-in-iiot
    method: GET
- name: Understanding Telemetry Message
  endpoint:
    path: /en_US/azure-iot-hub-device-provisioning-service/understanding-telemetry-message-and-properties-in-azure-iot
    method: GET
- name: Azure IoT
  endpoint:
    path: /azure-iot
    method: GET
- name: device
  endpoint:
    path: /devices
    method: GET
    data_selector: devices
    params: {}
- name: telemetry_message
  endpoint:
    path: /azure-iot-hub-device-provisioning-service/understanding-telemetry-message-and-properties-in-azure-iot
    method: POST
    data_selector: body
    params: {}
- name: Device-to-cloud item
  endpoint:
    path: /azure-iot/device-to-cloud
    method: POST
- name: Cloud-to-device item
  endpoint:
    path: /azure-iot/cloud-to-device
    method: GET
- name: instance
  endpoint:
    params: {}
- name: item_variables
  endpoint:
    path: /variables/item-variables
    method: GET
    data_selector: variables
    params: {}
- name: system_variables
  endpoint:
    path: /variables/system-variables
    method: GET
    data_selector: variables
    params: {}
- name: iot_hub_device
  endpoint:
    path: /azure-iot-hub-device-provisioning-service/creating-iot-hub-in-azure
    method: GET
    data_selector: records
- name: technical_specifications
  endpoint:
    path: /141795-hardware-installation-technical-info/technical-specifications
    method: GET
    data_selector: records
- name: status_leds
  endpoint:
    path: /api/status_leds
    method: GET
    data_selector: leds
    params: {}
- name: supported_devices
  endpoint:
    path: /intro-to-sia/supported-industrial-buildings-devices
    method: GET
    data_selector: devices
    params: {}
- name: standards
  endpoint:
    path: /intro-to-sia/standards
    method: GET
    data_selector: standards
    params: {}
- name: Microsoft SQL
  endpoint:
    path: /sql
    method: GET
- name: Azure SQL
  endpoint:
    path: /azure-sql
    method: GET
- name: Oracle
  endpoint:
    path: /oracle
    method: GET
- name: MySQL
  endpoint:
    path: /mysql
    method: GET
- name: MariaDB
  endpoint:
    path: /mariadb
    method: GET
- name: InfluxDB
  endpoint:
    path: /influxdb
    method: GET
- name: Postgre SQL
  endpoint:
    path: /postgresql
    method: GET
- name: MongoDB
  endpoint:
    path: /mongodb
    method: GET
- name: IBM DB2
  endpoint:
    path: /ibm-db2
    method: GET
- name: SQLite
  endpoint:
    path: /sqlite
    method: GET
- name: user
  endpoint:
    path: /portal-web-app-ui/add-a-user-to-the-platform
    method: POST
    data_selector: user
    params: {}
- name: Docker Commands
  endpoint:
    path: /any-ware-software/docker-single-image
    method: GET
    data_selector: commands
    params: {}
- name: SIA Connect Linux Installer
  endpoint:
    path: /linux-installer
    method: GET
- name: instance
  endpoint:
    path: /siemens/s7/instance
    method: GET
    data_selector: parameters
    params:
      Address: IP address of the S7 PLC
      Rack: '0'
      Slot: '0'
- name: item
  endpoint:
    path: /siemens/s7/item
    method: GET
    data_selector: parameters
    params:
      Address: Memory address of the tag in the S7 PLC
      Type: Data type used for determining the length of the tag in bytes and formatting
        it
- name: Siemens S7 PLC
  endpoint:
    path: /siemens/prepare-plc-in-tia-portal-for-external-communication
    method: GET
- name: Siemens S7 PLC
  endpoint:
    path: /siemens/prepare-plc-in-tia-portal-for-external-communication
    method: GET
    data_selector: articles
- name: Device-to-cloud
  endpoint:
    path: /device-to-cloud
    method: POST
    data_selector: telemetry
- name: Cloud-to-device
  endpoint:
    path: /cloud-to-device
    method: POST
    data_selector: messages
- name: item
  endpoint:
    path: /apis/upload/datasource
    method: POST
    data_selector: data
    params: {}
- name: Item
  endpoint:
    path: /apis/upload/datasource
    method: POST
    data_selector: data
    params: {}
- name: DPS Enrollments
  endpoint:
    path: /deviceProvisioningService/enrollments
    method: GET
    data_selector: enrollmentRecords
- name: DPS Certificates
  endpoint:
    path: /deviceProvisioningService/certificates
    method: GET
    data_selector: certificateList
- name: enrollment_group
  endpoint:
    path: /manage/enrollments
    method: POST
    data_selector: enrollment
    params: {}
- name: Device-to-cloud
  endpoint:
    path: /devices
    method: POST
    data_selector: records
- name: Cloud-to-device
  endpoint:
    path: /devices/messages
    method: POST
    data_selector: records
- name: Enrollment Profile
  endpoint:
    path: /enrollment/profiles
    method: GET
    data_selector: profiles
    params: {}
- name: enrollment_information
  endpoint:
    path: /enrollment
    method: GET
    data_selector: records
- name: License Management
  endpoint:
    path: /system/license-management
    method: POST
    data_selector: licenseDetails
    params: {}
- name: iot_edge_device
  endpoint:
    path: /iot/hubs/{IOT_HUB}/devices/{IOT_EDGE_NAME}
    method: POST
    data_selector: device
    params: {}
- name: Connectors
  endpoint:
    path: /146351/connectors
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /146351-connectors/manage-files-for-connectors
    method: GET
- name: Install Connectors
  endpoint:
    path: /146351-connectors/install-connectors
    method: GET
- name: Uninstall Connectors
  endpoint:
    path: /146351-connectors/uninstall-connectors
    method: GET
- name: Manage files for Connectors
  endpoint:
    path: /146351-connectors/manage-files-for-connectors
    method: GET
- name: data
  endpoint:
    path: /plugins/random_number/devices/random_device/data
    method: GET
    data_selector: records
- name: data
  endpoint:
    path: /plugins/random_number/devices/random_device/data
    method: GET
    data_selector: ''
    params: {}
- name: historical_data_view
  endpoint:
    path: /tools-add-ons/360005508478-API-Reference
    method: GET
- name: data_logging_mode
  endpoint:
    path: /142793-data/enabling-data-logging-mode
    method: GET
- name: Ethernet/IP
  endpoint:
    path: /api/plugins/ab_eip
    method: GET
- name: BACnet IP
  endpoint:
    path: /api/plugins/bacnet_ip
    method: GET
- name: BACnet MS/TP
  endpoint:
    path: /api/plugins/bacnet_mstp
    method: GET
- name: Beckhoff TwinCAT
  endpoint:
    path: /api/plugins/beckhoff_twincat
    method: GET
- name: CAMP NITP
  endpoint:
    path: /api/plugins/camp_nitp
    method: GET
- name: IFM VSE
  endpoint:
    path: /api/plugins/ifm_vse
    method: GET
- name: Keyence KV
  endpoint:
    path: /api/plugins/keyence_kv
    method: GET
- name: Mitsubishi MELSEC
  endpoint:
    path: /api/plugins/melsec
    method: GET
- name: Modbus TCP
  endpoint:
    path: /api/plugins/modbus_tcp
    method: GET
- name: Modbus RTU
  endpoint:
    path: /api/plugins/modbus_rtu
    method: GET
- name: Modbus RTU over TCP
  endpoint:
    path: /api/plugins/modbus_rtu_tcp
    method: GET
- name: MBus
  endpoint:
    path: /api/plugins/mbus
    method: GET
- name: W-MBus
  endpoint:
    path: /api/plugins/wmbus
    method: GET
- name: OPC-UA Client
  endpoint:
    path: /api/plugins/opc_ua_client
    method: GET
- name: OPC-UA Server
  endpoint:
    path: /api/plugins/opc_ua_server
    method: GET
- name: Siemens S7
  endpoint:
    path: /api/plugins/siemens_s7
    method: GET
- name: Siemens LOGO
  endpoint:
    path: /api/plugins/siemens_logo
    method: GET
- name: Omron FINS
  endpoint:
    path: /api/plugins/omron_fins
    method: GET
- name: Omron Host Link
  endpoint:
    path: /api/plugins/omronhostlink
    method: GET
- name: Virtual
  endpoint:
    path: /api/plugins/virtual
    method: GET
- name: Azure IoT
  endpoint:
    path: /api/plugins/azure_iot_hub
    method: GET
- name: FILE
  endpoint:
    path: /api/plugins/file
    method: GET
- name: MS SQL
  endpoint:
    path: /api/plugins/mssql
    method: GET
- name: MQTT
  endpoint:
    path: /api/plugins/mqtt
    method: GET
- name: MySQL
  endpoint:
    path: /api/plugins/mysql
    method: GET
- name: PostgreSQL
  endpoint:
    path: /api/plugins/psql
    method: GET
- name: Pulsar
  endpoint:
    path: /api/plugins/pulsar
    method: GET
- name: REST API
  endpoint:
    path: /api/plugins/rest_api
    method: GET
- name: Siemens Mindsphere
  endpoint:
    path: /api/plugins/siemens_mindsphere
    method: GET
- name: setup_uuid
  endpoint:
    path: /api/setup/uuid
    method: GET
- name: init
  endpoint:
    path: /api/init
    method: GET
- name: import
  endpoint:
    path: /api/import
    method: PUT
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: records
- name: edit_items
  endpoint:
    path: /items/edit
    method: POST
    data_selector: records
    params: {}
- name: Add Items
  endpoint:
    path: /items/add-items
    method: GET
    data_selector: items
    params: {}
- name: Item parameters
  endpoint:
    path: /items/item-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: Edit items
  endpoint:
    path: /items/edit-items
    method: GET
    data_selector: edit
    params: {}
- name: Import & export of items
  endpoint:
    path: /items/import-export-of-items
    method: GET
    data_selector: import_export
    params: {}
- name: item_parameters
  endpoint:
    path: /items/item-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: item_import_export
  endpoint:
    path: /items/import-export-of-items
    method: GET
    data_selector: items
    params: {}
- name: Add Items
  endpoint:
    path: /items/add-items
    method: POST
- name: Item parameters
  endpoint:
    path: /items/item-parameters
    method: GET
- name: Edit items
  endpoint:
    path: /items/edit-items
    method: PUT
- name: Import & export of items
  endpoint:
    path: /items/import-export-of-items
    method: GET
- name: instance
  endpoint:
    path: /ethernet-ip/instance
    method: GET
    data_selector: parameters
    params: {}
- name: item
  endpoint:
    path: /ethernet-ip/item
    method: GET
    data_selector: parameters
    params: {}
- name: instance
  endpoint:
    path: /ethernet-ip/instance
    method: GET
    data_selector: parameters
    params: {}
- name: item
  endpoint:
    path: /ethernet-ip/item
    method: GET
    data_selector: parameters
    params: {}
- name: historical_data_export
  endpoint:
    path: /export/historical_data
    method: POST
    data_selector: export_data
    params: {}
- name: historical_data_export
  endpoint:
    path: /142793-data/813702-export-historical-stored-data
    method: GET
    data_selector: data
    params: {}
- name: historical_data
  endpoint:
    path: /tools-add-ons/360005508478-API-Reference
    method: GET
- name: Device-to-cloud item
  endpoint:
    path: /azure-iot/device-to-cloud
    method: POST
    data_selector: message
    params: {}
- name: Cloud-to-device item
  endpoint:
    path: /azure-iot/cloud-to-device
    method: GET
    data_selector: message
    params: {}
- name: instance
  endpoint:
    path: /mitsubishi-melsec/mitsubishi-melsec-instance-item-setup
    method: GET
    data_selector: parameters
    params: {}
- name: item
  endpoint:
    path: /mitsubishi-melsec/mitsubishi-melsec-instance-item-setup
    method: GET
    data_selector: item_parameters
    params: {}
- name: instance
  endpoint:
    path: /mitsubishi-melsec/instance
    method: GET
    data_selector: parameters
    params:
      Name: Any combination of letters, numbers, and special characters.
      Address: Dependent on the PLS's network settings.
      Mode: Binary
      Model: Q series
      Device Id: 0 to 64, 255
      Network Id: 0 to 239
      Port: 1025 to 6553
- name: item
  endpoint:
    path: /mitsubishi-melsec/item
    method: GET
    data_selector: parameters
    params:
      Address: Memory address of the tag in the MELSEC PLC.
      Type: Data type used for determining the length of the tag in bytes.
- name: MELSEC - Instance & item setup
  endpoint:
    path: /mitsubishi-melsec/mitsubishi-melsec-instance-item-setup
    method: GET
- name: MELSEC - Troubleshooting
  endpoint:
    path: /mitsubishi-melsec/melsec-troubleshooting
    method: GET
- name: Enabling communication in Mitsubishi MELSEC controller
  endpoint:
    path: /mitsubishi-melsec/enabling-communication-in-mitsubishi-melsec-controller
    method: GET
- name: instance
  endpoint:
    path: /mitsubishi-melsec/instances
    method: POST
    data_selector: instances
    params: {}
- name: item
  endpoint:
    path: /mitsubishi-melsec/items
    method: POST
    data_selector: items
    params: {}
- name: instance
  endpoint:
    path: /mitsubishi-melsec/instance
    method: GET
    data_selector: records
- name: item
  endpoint:
    path: /mitsubishi-melsec/item
    method: GET
    data_selector: records
- name: instances
  endpoint:
    path: /instances
    method: GET
    data_selector: data
- name: instances
  endpoint:
    path: /142788-instances
    method: GET
    data_selector: instances
    params: {}
- name: connectors
  endpoint:
    path: /146351-connectors
    method: GET
    data_selector: connectors
    params: {}
- name: instances
  endpoint:
    path: /142788-instances
    method: GET
    data_selector: instances
    params: {}
- name: connectors
  endpoint:
    path: /146351-connectors
    method: GET
    data_selector: connectors
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: instance
  endpoint:
    path: /bacnet/instance
    method: GET
    data_selector: records
    params: {}
- name: item
  endpoint:
    path: /bacnet/item
    method: GET
    data_selector: records
    params: {}
- name: instance
  endpoint:
    path: /beckhoff-twincat/instance
    method: GET
    data_selector: parameters
    params:
      Address: IP address of the ADS device
      ADS Port: Identifier for the type of connection of the ADS Device
      Target AMS NetID: Network ID of the ADS device, typically the IP address with
        '.1.1' appended
      Local AMS NetID: Local network ID, not required
- name: item
  endpoint:
    path: /beckhoff-twincat/item
    method: GET
    data_selector: parameters
    params:
      Variable Name: Name used to get to the variable in the ADS device
      Type: Data type used for determining the size of the variables
- name: Instance
  endpoint:
    params:
      Address: The IP address of the ADS device
      ADS Port: Identifier for the type of connection of the ADS Device
      Target AMS NetID: The network ID of the ADS device, typically the IP address
        with ".1.1" appended
      Local AMS NetID: The local network ID, not required
- name: Items
  endpoint:
    params:
      Variable Name: The name used to get to the variable in the ADS device *e.g.
        "MAIN.device_speed"*
      Type: Data type used for determining the size of the variables
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: item_variables
  endpoint:
    path: /variables/item-variables
    method: GET
    data_selector: records
- name: system_variables
  endpoint:
    path: /variables/system-variables
    method: GET
    data_selector: records
- name: uuid
  endpoint:
    path: /api/setup/uuid
    method: GET
- name: configuration
  endpoint:
    path: /api/init
    method: GET
    headers:
      Authorization: Basic c2lhOmNvbm5lY3Q=
- name: import_configuration
  endpoint:
    path: /api/import
    method: PUT
- name: shadow_api
  endpoint:
    path: /api/plugins
    method: GET
    data_selector: results
- name: devices
  endpoint:
    path: /api/plugins/1/devices
    method: GET
- name: network_configuration
  endpoint:
    path: /network/change-network-configuration
    method: POST
    data_selector: parameters
    params: {}
- name: Export and Import configuration
  endpoint:
    path: /system/export-and-import-configuration
    method: GET
    data_selector: configuration
    params: {}
- name: instance_parameters
  endpoint:
    path: /instance
    method: GET
    data_selector: parameters
    params: {}
- name: item_parameters
  endpoint:
    path: /item
    method: GET
    data_selector: parameters
    params: {}
- name: data
  endpoint:
    path: /api/v2/write
    method: POST
    data_selector: records
- name: data_items
  endpoint:
    path: /data/items
    method: POST
    data_selector: items
- name: Query write
  endpoint:
    path: /path/to/sql/query
    method: POST
    data_selector: response
    params:
      query: SQL query to the database
- name: instance
  endpoint:
    params:
      Address: Valid IP v4 address
      Read / Write timeout: Min. 10
      Port: '8501'
- name: item
  endpoint:
    params:
      Memory address: Memory address of the tag in the MELSEC PLC
      Type: Data type used for determining the length of the tag in bytes and formatting
        it properly after a reading
- name: instance
  endpoint:
    params:
      Address: Valid IP v4 address
      Read / Write timeout: Min. 10
      Port: '8501'
- name: item
  endpoint:
    params:
      Memory address: Memory address of the tag in the MELSEC PLC.
      Type: Data type used for determining the length of the tag in bytes and formatting
        it properly after a reading.
- name: instance
  endpoint:
    path: /instance
    method: POST
    data_selector: data
    params: {}
- name: item
  endpoint:
    path: /item
    method: POST
    data_selector: data
    params: {}
- name: instance
  endpoint:
    params:
      Address: The IP address of the PLC
      Protocol: TCP
      Port: 9600
      Source Network Address: 0
      Destination Network Address: 0
      Destination Node: 0
      Destination Unit: 0
- name: item
  endpoint:
    params:
      Name: Name for the data item
      Address: Memory address of the tag in the Omron PLC
      Type: Data type used for determining the length of the tag in bytes and formatting
        it properly after a reading
- name: instance
  endpoint:
    path: /instance
    method: GET
    data_selector: records
- name: item
  endpoint:
    path: /item
    method: GET
    data_selector: records
- name: instance
  endpoint:
    path: /instance
    method: GET
    data_selector: parameters
    params:
      Address: 00 to 31
      Timeout: 500 to 5000
      Baud: 9600, 19200, 57600, 115200
      Parity: Even, Odd
      Data Bits: 5, 6, 7, 8
      Stop Bits: 1, 2
- name: item
  endpoint:
    path: /item
    method: GET
    data_selector: parameters
    params:
      Address: Memory address
      Type: Data type
- name: Ping tool
  endpoint:
    path: /tools-add-ons/1204160-ping-tool
    method: GET
    data_selector: response
    params: {}
- name: Internal REST API
  endpoint:
    path: /tools-add-ons/360005508478-API-Reference
    method: GET
    data_selector: response
    params: {}
- name: Ping tool
  endpoint:
    path: /tools-add-ons/ping-tool
    method: GET
- name: Internal REST API Reference
  endpoint:
    path: /tools-add-ons/360005508478-API-Reference
    method: GET
notes:
- Requires MQTT Broker configuration on the SIA Web interface
- ShadowAPI acts as an API proxy forwarder for remote access
- The portal is a Web App and only requires a browser.
- Compatible with many smart devices as long as they have a modern browser installed.
- The front panel of the SIA module contains a button that resets the IP configuration
  on the X1 ethernet port to a default address 10.20.30.40
- The system password must be set as the first thing, before running the Docker composer
  project.
- If you have not yet set the system password in .env remember to do this before starting
  SIA_Connect.exe
- SIA Connect can be installed natively on any Linux OS which supports .deb packages
  and can run natively on the system.
- SIA Connect can be virtualized and run as a Docker container from the provided image.
- The Docker images are available on Dockerhub where you will also find instructions
  and additional information.
- Accessing the Docker logs can be valuable for troubleshooting purposes.
- Connecting PLCs to Azure opens up a lot of opportunities and possibilities for utilizing
  their data in their enterprise cloud infrastructure.
- Requires setup of MQTT Broker to connect to SIA.
- Data logging mode makes it store data in its internal database which can be used
  viewing historical data in the portal or fetching it from its internal REST API
  backend.
- Settings of SIA can be managed in the portal and you can find information of your
  system.
- The clock will be synchronized in UTC time and the time zone will not be used in
  the synchronization process.
- The Export and Import of configuration does NOT contain the stored historical data
  for the items.
- Remember to install the Connectors before importing.
- Beta releases are released as a previous step before publicly releasing the system
  update to validate and test.
- If you are applying the Beta tag, please be keep in mind this is where new features
  and system improvements are tested.
- SIA can be connected to your computer via either wireless or ethernet. Wireless
  requires configuration while ethernet can be plugged in for immediate access.
- DPS allows devices to be automatically assigned to IoT Hubs which is very convenient
  in many scenarios.
- You can also use Symmetric keys as authentication.
- DPS allows devices to be automatically assigned to IoT Hubs.
- Enrollment groups use the same authentication certificate or symmetric key.
- The flow for the provisioning service involves connecting IIoT Edge devices to Azure
  DPS and receiving connection information for IoT Hubs.
- A Connection String is the key of getting access to read and write from your Azure
  IoT Hub's devices.
- Ensure the IoT Hub is created in Azure before configuring.
- Requires a generated connection string for the IoT Hub device.
- Message properties can be used for routing and processing.
- Web based portal integrated in SIA
- RESTful API with JSON which enables full access to SIA and its associated data and
  configurations
- The device requires proper wiring for power to operate.
- Wait at least 30 seconds to let the system reinitialize. When the status LED stops
  blinking, the network configuration on X1 has been reset and a connection can be
  made with SIA using IP address 10.20.30.40
- As the portal is a Web App and only requires a browser you will find that many smart
  devices are compatible as long as they have a modern browser installed.
- Set static IP on computer to access SIA's portal
- Keep in mind not to make conflicts on IP addresses on the network.
- All users have the same rights and is required to do the configuration of SIA using
  either the portal or the API.
- To create a user, access the PIN code which is located on the side of the SIA hardware.
- To access the SIA's portal a user is required. A user can be created by having access
  to the PIN code which is located on the side of the SIA hardware.
- Client PC needs to have its network IP address in the same subnet as SIA.
- 'Recommended initial network configuration for a direct LAN connection with SIA:
  IP: 10.20.30.100, Subnet: 255.255.255.0'
- To keep the license, data, configuration etc., it is important you mount the same
  volume as you used previously.
- SIA Connect can be installed natively on any Linux OS which supports .deb packages
- 'An example of using the parameters could look like: ./sia-connect-installer.sh
  -psecret_password -y -w80 -u -d1 -vlatest'
- Accessing the Docker logs can aid troubleshooting and monitoring of applications
  running in Docker environments.
- The Connector does only support absolute addressing with DB's and offsets.
- Use Rack = 0 & Slot = 0 if your PLC does not use rack and slots.
- Remember to unmark 'Optimized block access' in the data blocks you want to R/W from
  as SIA does not support optimized access.
- Automatic group enrollment creates devices in Azure IoT Central with specified Device
  ID.
- Writable properties allow for both sending and receiving data from your Azure IoT
  Central application to your SIA Connect device.
- AVEVA Insight does not allow reading from this endpoint
- AVEVA Insight does not allow reading from the endpoint.
- DPS allows devices to be automatically assigned to IoT Hubs
- Supports group and individual enrollments
- The CSR will by default be generated on SIA Connect and sent to DigiCert ONE IoT
  Trust.
- For highest security, select 'I will generate the keypairs and provide CSRs or public
  keys' under Manage Key generation.
- Uses telemetry messages consisting of body, system properties, and message properties.
- 'Effective Date: 11/2/2025'
- 'Governing Law: Denmark'
- First step is to download the installer.
- All PowerShell commands need to be run in Elevated mode.
- Only some Connectors support files. If you cannot see the option for uploading files
  then the Connector does not support this function.
- To validate it works go to Health check and enable Custom health check
- To fetch historical data from the REST API backend of SIA Connect, it needs to be
  used as a data logger
- Data format comes as a JSON array with items and their values.
- Uses Shadow API through Azure IoT Hub
- Automatic provisioning of the Shadow API through Azure IoT Hub Connector is currently
  only available using DPS and certificates
- The maximum message size in Azure IoT Hub is 256Kb.
- This might take some time if there are a lot of data records to delete
- The password is only going to be used for advanced debug purposes as it will give
  root access to database etc.
- Installing Azure IoT Edge is the first step to get started with SIA Connect IIoT
  Edge gateway as an IoT module.
- Micro800 controllers does not require a path
- Accessing controllers running PCCC requires a converter bridge/gateway
- 'Required by ControlLogix and CompactLogix. Default: 1,0'
- 'Required by Omron NJ/NX. Default: 18,IP-Address'
- Exporting too much data can make it stall. We recommend break it up into smaller
  chunks.
- An item will automatically be added called Device-to-cloud item.
- An item will automatically be added called Cloud-to-device item.
- If the SharedAccessKey in the Connection String is invalid this is not returning
  any error.
- Multiple identical messages are received.
- The network is not fast enough to handle the complete transmission and response
  of the package.
- Writing anything else than a integer value to a bit device (not a dot notated memory
  address.) is the same as writing the value 0
- Writing any integer value to a bit device is the same as writing the value 1
- Writing any value that is not in-between the boundaries of the valid values will
  not be written to the PLC.
- Creating a bit type item that points to a non-existing bit in the word (i.e. memory
  address  D100.567) will not be written to the PLC.
- This Connector supports only TCP/IP connections.
- Some Mitsubishi MELSEC PLCs only allows one peer to connect per port.
- A Thing is a digital representation of a physical device such as a sensor, PLC,
  BMS or similar.
- This specific Policy will allow any form of connection and communication.
- The endpoint can be regarded as the address of your AWS IoT Core.
- Instance parameters stores information and also the configuration about an instance
  such as name, address, what Connector to use for its connection.
- This step cannot be undone! All items and data records for the instance will also
  be deleted.
- Items can be exported and imported for each instance as comma separated CSV.
- The exported file is in CSV format, where the columns/fields are semicolon separated.
- It is only possible to connect to BACnet devices through Docker from a Linux OS.
- Docker for Windows does not yet have support for UDP broadcasting which is required
  in order to communicate with BACnet devices.
- In order to allow Docker to do UDP broadcasting the network must be set from bridged
  mode to host mode.
- To allow Docker to do UDP broadcasting the network must be set from bridged mode
  to host mode.
- The instance needs parameters to establish a connection to the PLC.
- The Virtual Connector is meant to be used primarily as a middleware connector and
  can be thought of as a data container.
- Only the Read Interval in the parameters inside the Virtual connectors is used.
  The rest of the parameters are ignored.
- The instance and item parameters are required as they are needed to establish connection
  and to identify which variables to interact with.
- Automatic provisioning of the Shadow API through Azure IoT Hub Connector is currently
  only available using DPS and certificates.
- For using SAS token / Connection string for authentication you will need to generate
  a SAS token your-self and add this as password in the Shadow API.
- Username and password fields for the MQTT broker are not required.
- The username and password fields for the MQTT broker are not required.
- The 'Authorization' parameter is required.
- Remember to save your configuration somewhere safe (cloud, shared folder, ..) so
  you do not lose it if your local computer breaks.
- The Connectors will not be imported. You will have to install the Connectors before
  running import.
- The MBus Connector requires a level converter to convert the MBus data bus to RS232.
  Most level converters for MBus to RS232 are supported.
- More detailed step-by-step guide and video will be available in the future
- Any JSON format is supported including arrays.
- Supports bulking multiple data items into a single JSON message.
- The connector allows for reading and writing data from various file types.
- Files can be stored locally or remotely on an FTP server.
- The connector is compatible with all devices that support FINS communication services.
- The Connector supports only connections via the RS232 port on SIA.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check authentication credentials.'
- '404 Not Found: Check endpoint path.'
- '401 Unauthorized: Check client ID and secret.'
- '404 Not Found: Ensure the device exists in the IoT Hub.'
- 'Unreachable peer: The IP address is not responding.'
- 'Connection timed out: The IP address is accessible but not receiving any response.'
- 'Address out of range: Reading from an offset that is outside of the memory in the
  PLC.'
- 'Function refused by CPU: The PUT & GET function was refused by the PLC.'
- 'Item not available: The items you are trying to read is not available in the PLC.'
- 'Invalid memory area: The memory area you are trying to read from cannot be accessed
  or identified.'
- 'Unreachable peer: The IP address is not responding. Check the IP address and that
  you can ping it. Ensure that SIA is in the same network as the PLC'
- 'Connection timed out: The IP address is accessible but not receiving any response.
  Check that the rack and slot are correct set.'
- 'Address out of range: Reading from an offset that is outside of the memory in the
  PLC. Check that the offset exists in the PLC.'
- 'Function refused by CPU: The PUT & GET function was refused by the PLC. Enabled
  PUT & GET in the PLC.'
- 'Item not available: The items you are trying to read is not available in the PLC.
  Either it is outside of range or you cannot access it.'
- 'INVALID_CERTIFICATE: Ensure the certificate is properly uploaded'
- 'ENROLLMENT_NOT_FOUND: Verify enrollment group or device ID'
- 'Timeout connecting: The IP address is not responding. Check the IP address and
  that you can ping it. Ensure that SIA is in the same network as the controller'
- 'Tag not found: The tag was not found in the controller. Check the naming or addressing
  in the controller and validate with the configuration in SIA'
- 'Error creating tag Error reading Error writing: Unknown error. Contact support'
- 'No network connection: No network connection or no route to the IoT Hub.'
- 'Failed to connect to IoT Hub. Check your connection string in the address field:
  The format of the Connection String is invalid.'
- 'Failed to get handle: Azure IoT instances on the same installation cannot have
  different authentication types.'
- The request cannot be executed to the CPU module. | * Correct the network number,
  PC number, request destination module I/O number, or request destination module
  station number. * Correct the read/write request data
- Not connected to Melsec PLC | * Correct port * Correct IP * Check cable connection
  * Check if the model selected is in the same series with the PLC * Check if ASCII
  mode is enabled on the PLC or select Binary
- Invalid port or IP | * Correct port * Correct IP
- Mode mismatch. Select binary | * Check if ASCII mode is enabled on the PLC or select
  binary
- Mode mismatch. Select ASCII | * Check if binary mode is enabled on the PLC or select
  ASCII
- Select A or FX or 1E model | * Select A, FX or 1E model
- ASCII code data that cannot be converted to binary code was received from an external
  device | * Select Binary in the "Mode" field * Enable ASCII mode communication on
  the PLC
- 'APDU timeout: The device cannot be found'
- 'Vendor Proprietary Value: other: The object type is not correct'
- 'Target port not found   ADS Server not started: The IP address is not responding.'
- 'Invalid ADS port: The ADS port is set incorrectly'
- 'Symbol not found: The symbol was not found in the device'
- 'Timeout elapsed: The item is correct, but reading it took too long time'
- 'Same error message on all items: This might actually be an error with the Instance'
- 'Postscript error: Error message Line: X'
- 'Invalid address: The IP address is in the wrong format. - Check the IP address
  format.'
- 'Invalid port: The TCP/IP port is in the wrong format. - Check the TCP/IP port format.'
- 'Not connected to PLC: The TCP/IP connection was not established. - Check the IP
  address and the port to be as in the PLC settings. - Ensure that SIA is in the same
  sub net as the PLC. - If the error persists contact your SIA supplier for further
  information.'
- 'Not sent: Data item parameters invalid: No message was sent to the PLC since there
  are errors in the item parameters. - Check *Memory Address* if it is a valid PLC
  memory area. - Check *Data Type* to be *BIT* if a dot notation is used. - Check
  the type, bit or word, of the memory area. - Insure that, in case of a *Bit* memory
  type, a dot notation is NOT used. - Check if the specified memory address is available
  for the PLC model by referring to the manufacturer''s documentation.'
- 'Data type not boolean: A data item value is set with the type BIT and the value
  is neither 1 or 0. - Correct item value. - Check if the bit number is in range of
  0 to 15.'
- 'Data type not valid: A data item value is set with the a type and the format for
  that type is wrong. - Correct item value.'
- 'Value out of range: A data item value is outside of the valid ranges for the data
  type. - Correct item value. - For valid ranges refer to Keyence Item and Instance
  Setup the Data Item section.'
- 'Bit number invalid: Accessing a bit from a word area using the dot notation, e.g.
  W45.61 and the bit number (the number after the dot) is out of range: 0 to 15. -
  Correct bit value.'
- 'No data provided: Writing a data item with no value. - Add a value to be written.'
- 'Invalid address: The IP address is in the wrong format'
- 'Invalid port: The TCP/IP port is in the wrong format'
- 'Not connected to PLC: The TCP/IP connection was not established.'
- 'Not sent: Data item parameters invalid: No message was sent to the PLC since there
  are errors in the item parameters.'
- 'Data type not boolean: A data item value is set with the type BIT and the value
  is neither 1 or 0.'
- 'Data type not valid: A data item value is set with the a type and the format for
  that type is wrong.'
- 'Value out of range: A data item value is outside of the valid ranges for the data
  type.'
- 'Bit number invalid: Accessing a bit from a word area using the dot notation, e.g.
  W45.61 and the bit number (the number after the dot) is out of range: 0 to 15.'
- 'No data provided: Writing a data item with no value.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://sia-connect.com
  headers:
    Accept: application/json
source_metadata: null
