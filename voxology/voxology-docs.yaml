resources:
- name: callback_request
  endpoint:
    path: /callback
    method: POST
    data_selector: request_payload
    params: {}
- name: inbound_sms
  endpoint:
    path: /v1/Messages
    method: POST
    data_selector: message
    params: {}
- name: inbound_mms
  endpoint:
    path: /v1/Messages
    method: POST
    data_selector: message
    params: {}
- name: outbound_status_webhook
  endpoint:
    path: /v1/Messages
    method: POST
    data_selector: message
    params: {}
- name: websocket_messages
  endpoint:
    path: /websocket/messages
    method: GET
    data_selector: messages
- name: stream_messages
  endpoint:
    path: /stream/messages
    method: GET
    data_selector: stream_messages
- name: track_messages
  endpoint:
    path: /track/messages
    method: GET
    data_selector: track_messages
- name: call_status
  endpoint:
    path: /call/status
    method: GET
    data_selector: call_status
- name: message_status
  endpoint:
    path: /message/status
    method: GET
    data_selector: message_status
- name: phone_number_status
  endpoint:
    path: /phone/number/status
    method: GET
    data_selector: phone_number_status
- name: stir_shaken_status
  endpoint:
    path: /stir/shaken/status
    method: GET
    data_selector: stir_shaken_status
- name: verify_status
  endpoint:
    path: /verify/status
    method: GET
    data_selector: verify_status
- name: collect
  endpoint:
    path: /actions/collect
    method: POST
    data_selector: actions
    params: {}
- name: conference
  endpoint:
    path: /actions/conference
    method: POST
    data_selector: actions
    params: {}
- name: detect
  endpoint:
    path: /actions/detect
    method: POST
    data_selector: actions
    params: {}
- name: dial
  endpoint:
    path: /actions/dial
    method: POST
    data_selector: actions
    params: {}
- name: FOREACH
  endpoint:
    path: /actions/foreach
    method: GET
    data_selector: actions
    params: {}
- name: GOTO
  endpoint:
    path: /actions/goto
    method: GET
    data_selector: actions
    params: {}
- name: HANGUP
  endpoint:
    path: /actions/hangup
    method: GET
    data_selector: actions
    params: {}
- name: IF
  endpoint:
    path: /actions/if
    method: GET
    data_selector: actions
    params: {}
- name: LABEL
  endpoint:
    path: /actions/label
    method: GET
    data_selector: actions
    params: {}
- name: PAUSE
  endpoint:
    path: /actions/pause
    method: GET
    data_selector: actions
    params: {}
- name: PLAY
  endpoint:
    path: /actions/play
    method: GET
    data_selector: actions
    params: {}
- name: QUEUE
  endpoint:
    path: /actions/queue
    method: GET
    data_selector: actions
    params: {}
- name: RECORD
  endpoint:
    path: /actions/record
    method: GET
    data_selector: actions
    params: {}
- name: RECORDMESSAGE
  endpoint:
    path: /actions/recordmessage
    method: GET
    data_selector: actions
    params: {}
- name: REDIRECT
  endpoint:
    path: /actions/redirect
    method: GET
    data_selector: actions
    params: {}
- name: REDIRECTEXTENSION
  endpoint:
    path: /actions/redirectextension
    method: GET
    data_selector: actions
    params: {}
- name: REJECT
  endpoint:
    path: /actions/reject
    method: GET
    data_selector: actions
    params: {}
- name: SAY
  endpoint:
    path: /say
    method: POST
    data_selector: actions
    params: {}
- name: SESSIONDATA
  endpoint:
    path: /sessiondata
    method: POST
    data_selector: actions
    params: {}
- name: SMS
  endpoint:
    path: /sms
    method: POST
    data_selector: actions
    params: {}
- name: STOP
  endpoint:
    path: /stop
    method: POST
    data_selector: actions
    params: {}
- name: STREAM
  endpoint:
    path: /stream
    method: POST
    data_selector: actions
    params: {}
- name: TRANSCRIBE
  endpoint:
    path: /transcribe
    method: POST
    data_selector: actions
    params: {}
- name: TRANSFER
  endpoint:
    path: /transfer
    method: POST
    data_selector: actions
    params: {}
- name: WEBHOOK
  endpoint:
    path: /webhook
    method: POST
    data_selector: actions
    params: {}
- name: account
  endpoint:
    path: /Account
    method: GET
    data_selector: id
- name: alerts
  endpoint:
    path: /Account/Alerts
    method: GET
    data_selector: alerts
- name: end_user_profiles
  endpoint:
    path: /Account/EndUserProfiles
    method: GET
    data_selector: end_user_profiles
- name: end_user_profile
  endpoint:
    path: /Account/EndUserProfiles/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: balance
  endpoint:
    path: /Account/Billings/Balance
    method: GET
    data_selector: ''
    params: {}
- name: payments
  endpoint:
    path: /Account/Payments
    method: POST
    data_selector: ''
    params: {}
- name: payment_methods
  endpoint:
    path: /Account/Payments/Methods
    method: GET
    data_selector: ''
    params: {}
- name: payment_history
  endpoint:
    path: /Account/Payments
    method: GET
    data_selector: ''
    params:
      begin_date: ''
      end_date: ''
- name: sub_accounts
  endpoint:
    path: /SubAccounts
    method: POST
    data_selector: ''
    params: {}
- name: sub_accounts
  endpoint:
    path: /SubAccounts
    method: GET
    data_selector: subaccounts
    params: {}
- name: sub_account_detail
  endpoint:
    path: /SubAccounts/{id}
    method: GET
    data_selector: id
    params: {}
- name: create_caller_id
  endpoint:
    path: /CallerIDs/{caller_id}
    method: POST
    data_selector: 'no'
    params: {}
- name: caller_ids
  endpoint:
    path: /CallerIDs
    method: GET
    data_selector: caller_ids
- name: view_caller_id
  endpoint:
    path: /CallerIDs/{caller_id}
    method: GET
    data_selector: 'no'
- name: update_caller_id
  endpoint:
    path: /CallerIDs/{caller_id}
    method: PUT
    data_selector: 'no'
- name: delete_caller_id
  endpoint:
    path: /CallerIDs/{caller_id}
    method: DELETE
- name: verify_caller_id
  endpoint:
    path: /CallerIDs/{caller_id}/Verify
    method: POST
    data_selector: id
- name: Phone Numbers Configurations
  endpoint:
    path: /CallFlows/Configurations/PhoneNumbers
    method: GET
    data_selector: callbacks
- name: Extensions Configurations
  endpoint:
    path: /CallFlows/Configurations/Extensions
    method: GET
    data_selector: callbacks
- name: Update Call Flow Configuration
  endpoint:
    path: /CallFlows/Configurations/PhoneNumbers/{phone_number}
    method: PUT
    data_selector: ''
    params:
      phone_number: string (path)
- name: default_configuration
  endpoint:
    path: /CallFlows/Configurations/Default
    method: GET
- name: phone_number_configuration
  endpoint:
    path: /CallFlows/Configurations/PhoneNumbers/{phone_number}
    method: GET
- name: extensions_default_configuration
  endpoint:
    path: /CallFlows/Configurations/Extensions/Default
    method: GET
- name: extension_configuration
  endpoint:
    path: /CallFlows/Configurations/Extensions/{extension}
    method: GET
- name: delete_default_configuration
  endpoint:
    path: /CallFlows/Configurations/Default
    method: DELETE
- name: delete_phone_number_configuration
  endpoint:
    path: /CallFlows/Configurations/PhoneNumbers/{phone_number}
    method: DELETE
- name: delete_extensions_default_configuration
  endpoint:
    path: /CallFlows/Configurations/Extensions/Default
    method: DELETE
- name: delete_extension_configuration
  endpoint:
    path: /CallFlows/Configurations/Extensions/{extension}
    method: DELETE
- name: make_call
  endpoint:
    path: /Dials/Connect
    method: POST
- name: list_live_calls
  endpoint:
    path: /LiveCalls
    method: GET
- name: view_live_call_detail
  endpoint:
    path: /LiveCalls/{call_id}
    method: GET
- name: call_logs
  endpoint:
    path: /History/Logs/Calls
    method: GET
    data_selector: logs
    params: {}
- name: view_call_log
  endpoint:
    path: /History/Logs/Calls/{call_id}
    method: GET
    data_selector: id
    params: {}
- name: end_call
  endpoint:
    path: /LiveCalls/{call_id}
    method: DELETE
    data_selector: null
    params: {}
- name: hang_up_call
  endpoint:
    path: /LiveCalls/{call_id}/Actions/HangUp
    method: POST
    data_selector: null
    params: {}
- name: collect_digits
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Collect
    method: POST
    data_selector: null
    params: {}
- name: stop_action
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Stop
    method: POST
    data_selector: null
    params: {}
- name: leave_voicemail
  endpoint:
    path: /LiveCalls/{call_id}/Actions/LeaveVoiceMail
    method: POST
    data_selector: null
    params: {}
- name: tell
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Tell
    method: POST
    data_selector: null
    params: {}
- name: call_transfer
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Transfer
    method: POST
    data_selector: null
    params: {}
- name: inject_actions_list
  endpoint:
    path: /LiveCalls/{call_id}/Actions
    method: POST
    data_selector: null
    params: {}
- name: modify_session_data
  endpoint:
    path: /LiveCalls/{call_id}/Actions/SessionData
    method: POST
    data_selector: null
    params: {}
- name: list_conferences
  endpoint:
    path: /LiveCalls/Conferences
    method: GET
    data_selector: conferences
    params: {}
- name: view_conference_detail
  endpoint:
    path: /LiveCalls/Conferences/{conf_id}
    method: GET
    data_selector: null
    params: {}
- name: view_participant_detail
  endpoint:
    path: /LiveCalls/Conferences/{conf_id}/Participants/{part_id}
    method: GET
    data_selector: null
    params: {}
- name: join_conference
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Conference/Join
    method: POST
    data_selector: null
    params: {}
- name: join_conference
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Conference/JoinToWhisper
    method: POST
    data_selector: ''
    params: {}
- name: leave_conference
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Conference/Leave
    method: POST
    data_selector: ''
    params: {}
- name: mute_participant
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Conference/Mute
    method: POST
    data_selector: ''
    params: {}
- name: unmute_participant
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Conference/Unmute
    method: POST
    data_selector: ''
    params: {}
- name: hold_participant
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Conference/Hold
    method: POST
    data_selector: ''
    params: {}
- name: resume_participant
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Conference/Resume
    method: POST
    data_selector: ''
    params: {}
- name: validate_emergency_address
  endpoint:
    path: /ValidateEmergencyAddress
    method: POST
    data_selector: ''
    params: {}
- name: update_emergency_address
  endpoint:
    path: /EmergencyAddresses/{phone_number}
    method: PUT
    data_selector: ''
    params: {}
- name: view_emergency_address
  endpoint:
    path: /EmergencyAddresses/{phone_number}
    method: GET
    data_selector: ''
    params: {}
- name: delete_emergency_address
  endpoint:
    path: /EmergencyAddresses/{phone_number}
    method: DELETE
    data_selector: ''
    params: {}
- name: list_extensions
  endpoint:
    path: /Extensions
    method: GET
    data_selector: ''
    params: {}
- name: extensions
  endpoint:
    path: /Extensions/{extension}
    method: GET
    data_selector: extension
    params: {}
- name: create_extension
  endpoint:
    path: /Extensions
    method: POST
    data_selector: extension
    params: {}
- name: update_extension
  endpoint:
    path: /Extensions/{extension}
    method: PUT
    data_selector: extension
    params: {}
- name: delete_extension
  endpoint:
    path: /Extensions/{extension}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_aws_s3_auth
  endpoint:
    path: /Integrations/RecordingStorage/AWS
    method: PUT
    data_selector: access_key
    params: {}
- name: view_aws_s3_auth
  endpoint:
    path: /Integrations/RecordingStorage/AWS
    method: GET
    data_selector: access_key
    params: {}
- name: delete_aws_s3_auth
  endpoint:
    path: /Integrations/RecordingStorage/AWS
    method: DELETE
    data_selector: ''
    params: {}
- name: update_watson_auth
  endpoint:
    path: /Integrations/TTS/Watson
    method: PUT
    data_selector: text_to_speech
    params: {}
- name: view_watson_auth
  endpoint:
    path: /Integrations/TTS/Watson
    method: GET
    data_selector: text_to_speech
    params: {}
- name: delete_watson_auth
  endpoint:
    path: /Integrations/TTS/Watson
    method: DELETE
    data_selector: ''
    params: {}
- name: send_message
  endpoint:
    path: /Messages
    method: POST
    data_selector: message_id
    params: {}
- name: send_messages_batch
  endpoint:
    path: /v1/Messages/Batch
    method: POST
    data_selector: messages
    params: {}
- name: list_messages
  endpoint:
    path: /v1/Messages
    method: GET
    data_selector: messages
    params: {}
- name: message
  endpoint:
    path: /Messages/{message_id}
    method: GET
    data_selector: message_id
    params: {}
- name: 10DLC_brands
  endpoint:
    path: /10DLCRegistration/Brands
    method: GET
    data_selector: brands
    params: {}
- name: 10DLC_brand_details
  endpoint:
    path: /10DLCRegistration/Brands/{brand_id}
    method: GET
    data_selector: brand_id
    params: {}
- name: brands
  endpoint:
    path: /10DLCRegistration/Brands
    method: POST
    data_selector: brand
    params: {}
- name: update_brand
  endpoint:
    path: /10DLCRegistration/Brands/{brand_id}
    method: PUT
    data_selector: brand
    params: {}
- name: delete_brand
  endpoint:
    path: /10DLCRegistration/Brands/{brand_id}
    method: DELETE
    data_selector: no_content
    params: {}
- name: order_external_vetting
  endpoint:
    path: /10DLCRegistration/Brands/OrderExternalVetting/{brand_id}
    method: POST
    data_selector: vetting_provider
    params: {}
- name: import_external_vetting
  endpoint:
    path: /10DLCRegistration/Brands/ImportExternalVetting/{brand_id}
    method: POST
    data_selector: vetting_provider
    params: {}
- name: list_campaigns
  endpoint:
    path: /10DLCRegistration/Campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: view_campaign_details
  endpoint:
    path: /10DLCRegistration/Campaigns/{campaign_id}
    method: GET
    data_selector: campaign_id
    params: {}
- name: campaign
  endpoint:
    path: /10DLCRegistration/Campaigns
    method: POST
    data_selector: campaign_id
- name: update_campaign
  endpoint:
    path: /10DLCRegistration/Campaigns/{campaign_id}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_campaign
  endpoint:
    path: /10DLCRegistration/Campaigns/{campaign_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: available_phone_numbers
  endpoint:
    path: /PhoneNumbers/Available
    method: GET
    data_selector: phone_numbers
    params:
      capabilities: voice,sms,mms,cnam,emergency
- name: phone_numbers
  endpoint:
    path: /PhoneNumbers/{assigned_to}
    method: GET
    data_selector: phone_numbers
    params: {}
- name: phone_number
  endpoint:
    path: /PhoneNumbers/{phone_number}
    method: GET
    data_selector: phone_number
- name: phone_numbers
  endpoint:
    path: /PhoneNumbers/{assigned_to}
    method: POST
    data_selector: phone_numbers
    params:
      assigned_to: CallFlows
      phone_numbers: []
- name: update_phone_numbers
  endpoint:
    path: /PhoneNumbers/{phone_number}
    method: PUT
    data_selector: response
    params: {}
- name: move_phone_numbers
  endpoint:
    path: /PhoneNumbers/Move/{assigned_to}
    method: PUT
    data_selector: response
    params: {}
- name: release_phone_numbers
  endpoint:
    path: /PhoneNumbers/{assigned_to}
    method: DELETE
    data_selector: response
    params: {}
- name: PhoneNumberInformation
  endpoint:
    path: /PhoneNumberInformation/{phone_number}
    method: GET
    data_selector: null
    params:
      include: cnam,carrier,location
- name: PortRequestsHostedSMS
  endpoint:
    path: /PortRequests/HostedSMS
    method: POST
    data_selector: null
    params: {}
- name: PortRequestsLocal
  endpoint:
    path: /PortRequests/Local
    method: POST
    data_selector: null
    params: {}
- name: LiveCallsQueues
  endpoint:
    path: /LiveCalls/Queues
    method: GET
    data_selector: null
    params: {}
- name: LiveCallsQueueDetails
  endpoint:
    path: /LiveCalls/Queues/{queue_name}
    method: GET
    data_selector: null
    params: {}
- name: list_queued_calls
  endpoint:
    path: /LiveCalls/Queues/{queue_name}/Calls
    method: GET
    data_selector: calls
    params:
      queue_name: name_of_queue
- name: view_queued_call_detail
  endpoint:
    path: /LiveCalls/Queues/{queue_name}/Calls/{call_id}
    method: GET
    data_selector: call
    params:
      queue_name: name_of_queue
      call_id: abc123
- name: peek_at_queue
  endpoint:
    path: /LiveCalls/Queues/{queue_name}/Peek
    method: GET
    data_selector: call
    params:
      queue_name: name_of_queue
- name: poll_queue
  endpoint:
    path: /LiveCalls/Queues/{queue_name}/Poll
    method: GET
    data_selector: call
    params:
      queue_name: name_of_queue
- name: remove_queued_call
  endpoint:
    path: /LiveCalls/Queues/{queue_name}/Calls/{call_id}
    method: DELETE
    data_selector: null
    params:
      queue_name: name_of_queue
      call_id: abc123
- name: delete_queue
  endpoint:
    path: /LiveCalls/Queues/{queue_name}
    method: DELETE
    data_selector: name
    params:
      queue_name: name_of_queue
- name: start_recording
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Recording/Start
    method: POST
    data_selector: null
    params:
      call_id: 123456@7890
- name: pause_recording
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Recording/Pause
    method: POST
    data_selector: null
    params:
      call_id: 123456@7890
- name: resume_recording
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Recording/Resume
    method: POST
    data_selector: null
    params:
      call_id: 123456@7890
- name: stop_recording
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Recording/Stop
    method: POST
    data_selector: null
    params:
      call_id: 123456@7890
- name: list_recordings
  endpoint:
    path: /History/Recordings
    method: GET
    data_selector: recordings
    params: {}
- name: recordings
  endpoint:
    path: /History/Recordings/{call_id}
    method: GET
    data_selector: recordings
    params: {}
- name: download_recording
  endpoint:
    path: /History/Recordings/{id}/{format}
    method: GET
    data_selector: audio file
    params: {}
- name: delete_recording
  endpoint:
    path: /History/Recordings/{id}
    method: DELETE
    data_selector: none
    params: {}
- name: sip_trunks
  endpoint:
    path: /Trunks
    method: GET
    data_selector: trunks
    params: {}
- name: sip_trunk
  endpoint:
    path: /Trunks/{trunk_id}
    method: GET
    data_selector: trunk
    params:
      trunk_id: string
- name: create_sip_trunk
  endpoint:
    path: /Trunks
    method: POST
    data_selector: none
    params: {}
- name: trunk
  endpoint:
    path: /Trunks/{trunk_id}
    method: PUT
- name: sip_users
  endpoint:
    path: /Users
    method: GET
- name: sip_user
  endpoint:
    path: /Users/{user_id}
    method: GET
    data_selector: SIP User object
    params: {}
- name: create_sip_user
  endpoint:
    path: /Users
    method: POST
    data_selector: created SIP User object
    params: {}
- name: update_sip_user
  endpoint:
    path: /Users/{user_id}
    method: PUT
    data_selector: updated SIP User object
    params: {}
- name: delete_sip_user
  endpoint:
    path: /Users/{user_id}
    method: DELETE
    data_selector: No response body
    params: {}
- name: start_transcription
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Transcription/Start
    method: POST
    data_selector: null
    params: {}
- name: stop_transcription
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Transcription/Stop
    method: POST
    data_selector: null
    params: {}
- name: initiate_verification
  endpoint:
    path: /Verifications
    method: POST
    data_selector: null
    params: {}
- name: assert_verification
  endpoint:
    path: /Verifications/:verification_id/Assert
    method: POST
    data_selector: null
    params: {}
- name: view_verification
  endpoint:
    path: /Verifications/{verification_id}
    method: GET
    data_selector: null
    params: {}
- name: list_verifications
  endpoint:
    path: /Verifications
    method: GET
    data_selector: null
    params: {}
- name: cancel_verification
  endpoint:
    path: /Verifications/{verification_id}
    method: DELETE
    data_selector: null
    params: {}
- name: programmable_voice
  endpoint:
    path: /products/programmable-voice
    method: GET
    data_selector: products
    params: {}
- name: programmable_messaging
  endpoint:
    path: /products/programmable-messaging
    method: GET
    data_selector: products
    params: {}
- name: verify_api
  endpoint:
    path: /products/verify-api
    method: GET
    data_selector: products
    params: {}
- name: customer_experience_testing
  endpoint:
    path: /products/customer-experience-testing
    method: GET
    data_selector: products
    params: {}
- name: phone_numbers
  endpoint:
    path: /products/phone-numbers
    method: GET
    data_selector: products
    params: {}
- name: emergency_calling
  endpoint:
    path: /products/emergency-calling
    method: GET
    data_selector: products
    params: {}
- name: messaging
  endpoint:
    path: /services/programmable-sms
    method: GET
    data_selector: records
- name: heartbeat
  endpoint:
    path: /products/customer-experience-testing/heartbeat
    method: GET
    data_selector: records
    params: {}
- name: phone_number_info_lookup
  endpoint:
    path: /services/phone-number-information-lookup
    method: GET
    data_selector: records
    params: {}
- name: call_recording
  endpoint:
    path: /services/call-recording
    method: GET
    data_selector: records
    params: {}
- name: voicemail_recording
  endpoint:
    path: /services/voicemail-recording
    method: GET
    data_selector: records
    params: {}
- name: media_stream
  endpoint:
    path: /services/media-stream
    method: GET
    data_selector: messages
    params: {}
- name: transcribe
  endpoint:
    path: /services/call-transcription
    method: POST
    data_selector: actions
    params: {}
- name: extensions
  endpoint:
    path: /v1/Extensions
    method: POST
    data_selector: extension
    params: {}
- name: default_callback_configuration
  endpoint:
    path: /v1/CallFlows/Configurations/Extensions/Default
    method: PUT
    data_selector: ''
    params: {}
- name: SIP Registration
  endpoint:
    path: /services/sip-registration
    method: GET
- name: Call Recording
  endpoint:
    path: /services/call-recording
    method: GET
- name: Media Stream
  endpoint:
    path: /services/media-stream
    method: GET
- name: Emergency Calling
  endpoint:
    path: /services/emergency-calling
    method: GET
- name: call_recording
  endpoint:
    path: /services/call-recording
    method: GET
    data_selector: records
    params: {}
- name: media_stream
  endpoint:
    path: /services/media-stream
    method: GET
    data_selector: records
    params: {}
- name: call_transcription
  endpoint:
    path: /services/call-transcription
    method: GET
    data_selector: records
    params: {}
- name: Programmable Voice
  endpoint:
    path: /services/programmable-voice/#getting-started
    method: GET
    data_selector: records
- name: Programmable SMS
  endpoint:
    path: /services/programmable-sms/#getting-started
    method: GET
    data_selector: records
- name: SIP Trunking
  endpoint:
    path: /services/sip-trunking/#getting-started
    method: GET
    data_selector: records
- name: Phone Number Information Lookup
  endpoint:
    path: /services/phone-number-information-lookup/#getting-started
    method: GET
    data_selector: records
- name: callback_request
  endpoint:
    path: /callback
    method: POST
    data_selector: call_data
- name: inbound_sms_callback
  endpoint:
    path: /v1/Messages
    method: POST
    data_selector: service
    params: {}
- name: inbound_mms_callback
  endpoint:
    path: /v1/Messages
    method: POST
    data_selector: service
    params: {}
- name: outbound_message_status_webhook
  endpoint:
    path: /v1/Messages
    method: POST
    data_selector: service
    params: {}
- name: stream_messages
  endpoint:
    path: /stream/messages
    method: POST
    data_selector: messages
- name: transcript_webhooks
  endpoint:
    path: /transcript/webhooks
    method: POST
    data_selector: transcripts
- name: collect
  endpoint:
    path: /collect
    method: POST
    data_selector: actions
    params: {}
- name: conference
  endpoint:
    path: /conference
    method: POST
    data_selector: actions
    params: {}
- name: detect
  endpoint:
    path: /detect
    method: POST
    data_selector: type
    params: {}
- name: dial
  endpoint:
    path: /dial
    method: POST
    data_selector: actions
    params: {}
- name: FOREACH
  endpoint:
    path: /FOREACH
    method: GET
    data_selector: actions
    params: {}
- name: GOTO
  endpoint:
    path: /GOTO
    method: GET
    data_selector: actions
    params: {}
- name: HANGUP
  endpoint:
    path: /HANGUP
    method: GET
    data_selector: actions
    params: {}
- name: IF
  endpoint:
    path: /IF
    method: GET
    data_selector: actions
    params: {}
- name: LABEL
  endpoint:
    path: /LABEL
    method: GET
    data_selector: actions
    params: {}
- name: PAUSE
  endpoint:
    path: /PAUSE
    method: GET
    data_selector: actions
    params: {}
- name: PLAY
  endpoint:
    path: /PLAY
    method: GET
    data_selector: actions
    params: {}
- name: QUEUE
  endpoint:
    path: /QUEUE
    method: GET
    data_selector: actions
    params: {}
- name: RECORD
  endpoint:
    path: /RECORD
    method: GET
    data_selector: actions
    params: {}
- name: RECORDMESSAGE
  endpoint:
    path: /RECORDMESSAGE
    method: GET
    data_selector: actions
    params: {}
- name: REDIRECT
  endpoint:
    path: /REDIRECT
    method: GET
    data_selector: actions
    params: {}
- name: REDIRECTEXTENSION
  endpoint:
    path: /REDIRECTEXTENSION
    method: GET
    data_selector: actions
    params: {}
- name: REJECT
  endpoint:
    path: /REJECT
    method: GET
    data_selector: actions
    params: {}
- name: SAY
  endpoint:
    path: /say
    method: POST
    data_selector: actions
- name: SESSIONDATA
  endpoint:
    path: /sessiondata
    method: POST
    data_selector: actions
- name: SMS
  endpoint:
    path: /sms
    method: POST
    data_selector: actions
- name: STOP
  endpoint:
    path: /stop
    method: POST
    data_selector: actions
- name: STREAM
  endpoint:
    path: /stream
    method: POST
    data_selector: actions
- name: TRANSCRIBE
  endpoint:
    path: /transcribe
    method: POST
    data_selector: actions
- name: TRANSFER
  endpoint:
    path: /transfer
    method: POST
    data_selector: actions
- name: WEBHOOK
  endpoint:
    path: /webhook
    method: POST
    data_selector: actions
- name: account
  endpoint:
    path: /Account
    method: GET
    data_selector: records
    params: {}
- name: alerts
  endpoint:
    path: /Account/Alerts
    method: GET
    data_selector: alerts
    params: {}
- name: end_user_profiles
  endpoint:
    path: /Account/EndUserProfiles
    method: GET
    data_selector: end_user_profiles
    params: {}
- name: end_user_profiles
  endpoint:
    path: /Account/EndUserProfiles/{id}
    method: PUT
    data_selector: end_user_profile_id
    params: {}
- name: balance
  endpoint:
    path: /Account/Billings/Balance
    method: GET
    data_selector: balance
    params: {}
- name: payments
  endpoint:
    path: /Account/Payments
    method: POST
    data_selector: id
    params: {}
- name: payment_methods
  endpoint:
    path: /Account/Payments/Methods
    method: GET
    data_selector: payment_methods
    params: {}
- name: sub_accounts
  endpoint:
    path: /SubAccounts
    method: POST
    data_selector: id
    params: {}
- name: sub_accounts
  endpoint:
    path: /SubAccounts
    method: GET
    data_selector: subaccounts
    params:
      page: '0'
      page_size: '25'
      status: active
- name: sub_account_detail
  endpoint:
    path: /SubAccounts/{id}
    method: GET
    data_selector: id
- name: update_sub_account
  endpoint:
    path: /SubAccounts/{id}
    method: PUT
- name: delete_sub_account
  endpoint:
    path: /SubAccounts/{id}
    method: DELETE
- name: create_caller_id
  endpoint:
    path: /CallerIDs/{caller_id}
    method: POST
- name: caller_ids
  endpoint:
    path: /CallerIDs
    method: GET
    data_selector: caller_ids
    params:
      page: 0
      page_size: 25
      sort_by: created_on
      sort_order: asc
- name: view_caller_id
  endpoint:
    path: /CallerIDs/{caller_id}
    method: GET
    data_selector: 'no'
- name: update_caller_id
  endpoint:
    path: /CallerIDs/{caller_id}
    method: PUT
    data_selector: 'no'
- name: delete_caller_id
  endpoint:
    path: /CallerIDs/{caller_id}
    method: DELETE
- name: verify_caller_id
  endpoint:
    path: /CallerIDs/{caller_id}/Verify
    method: POST
    data_selector: id
- name: call_flow_configurations_phone_numbers
  endpoint:
    path: /CallFlows/Configurations/PhoneNumbers
    method: GET
- name: call_flow_configurations_extensions
  endpoint:
    path: /CallFlows/Configurations/Extensions
    method: GET
- name: update_call_flow_configuration_phone_number
  endpoint:
    path: /CallFlows/Configurations/PhoneNumbers/{phone_number}
    method: PUT
- name: update_call_flow_configuration_extension
  endpoint:
    path: /CallFlows/Configurations/Extensions/{extension}
    method: PUT
- name: call_flow_default_configuration
  endpoint:
    path: /CallFlows/Configurations/Default
    method: GET
- name: call_flow_phone_number_configuration
  endpoint:
    path: /CallFlows/Configurations/PhoneNumbers/{phone_number}
    method: GET
- name: call_flow_extensions_default_configuration
  endpoint:
    path: /CallFlows/Configurations/Extensions/Default
    method: GET
- name: call_flow_extension_configuration
  endpoint:
    path: /CallFlows/Configurations/Extensions/{extension}
    method: GET
- name: delete_call_flow_default_configuration
  endpoint:
    path: /CallFlows/Configurations/Default
    method: DELETE
- name: delete_call_flow_phone_number_configuration
  endpoint:
    path: /CallFlows/Configurations/PhoneNumbers/{phone_number}
    method: DELETE
- name: delete_call_flow_extensions_default_configuration
  endpoint:
    path: /CallFlows/Configurations/Extensions/Default
    method: DELETE
- name: delete_call_flow_extension_configuration
  endpoint:
    path: /CallFlows/Configurations/Extensions/{extension}
    method: DELETE
- name: make_call
  endpoint:
    path: /Dials/Connect
    method: POST
- name: list_live_calls
  endpoint:
    path: /LiveCalls
    method: GET
- name: view_live_call_detail
  endpoint:
    path: /LiveCalls/{call_id}
    method: GET
- name: call_logs
  endpoint:
    path: /History/Logs/Calls
    method: GET
    data_selector: logs
    params: {}
- name: view_call_log
  endpoint:
    path: /History/Logs/Calls/{call_id}
    method: GET
    data_selector: ''
    params: {}
- name: end_call
  endpoint:
    path: /LiveCalls/{call_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: hang_up
  endpoint:
    path: /LiveCalls/{call_id}/Actions/HangUp
    method: POST
    data_selector: ''
    params: {}
- name: collect_digits
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Collect
    method: POST
    data_selector: ''
    params: {}
- name: stop_action
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Stop
    method: POST
    data_selector: null
    params: {}
- name: leave_voicemail
  endpoint:
    path: /LiveCalls/{call_id}/Actions/LeaveVoiceMail
    method: POST
    data_selector: null
    params: {}
- name: tell
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Tell
    method: POST
    data_selector: null
    params: {}
- name: call_transfer
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Transfer
    method: POST
    data_selector: null
    params: {}
- name: inject_actions_list
  endpoint:
    path: /LiveCalls/{call_id}/Actions
    method: POST
    data_selector: null
    params: {}
- name: modify_session_data
  endpoint:
    path: /LiveCalls/{call_id}/Actions/SessionData
    method: POST
    data_selector: null
    params: {}
- name: list_conferences
  endpoint:
    path: /LiveCalls/Conferences
    method: GET
    data_selector: conferences
    params: {}
- name: view_conference_detail
  endpoint:
    path: /LiveCalls/Conferences/{conf_id}
    method: GET
    data_selector: null
    params: {}
- name: view_participant_detail
  endpoint:
    path: /LiveCalls/Conferences/{conf_id}/Participants/{part_id}
    method: GET
    data_selector: null
    params: {}
- name: join_conference
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Conference/Join
    method: POST
    data_selector: null
    params: {}
- name: join_conference
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Conference/JoinToWhisper
    method: POST
    data_selector: none
    params: {}
- name: leave_conference
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Conference/Leave
    method: POST
    data_selector: none
    params: {}
- name: mute_participant
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Conference/Mute
    method: POST
    data_selector: none
    params: {}
- name: unmute_participant
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Conference/Unmute
    method: POST
    data_selector: none
    params: {}
- name: hold_participant
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Conference/Hold
    method: POST
    data_selector: none
    params: {}
- name: resume_participant
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Conference/Resume
    method: POST
    data_selector: none
    params: {}
- name: validate_emergency_address
  endpoint:
    path: /ValidateEmergencyAddress
    method: POST
    data_selector: none
    params: {}
- name: update_emergency_address
  endpoint:
    path: /EmergencyAddresses/{phone_number}
    method: PUT
    data_selector: none
    params: {}
- name: view_emergency_address
  endpoint:
    path: /EmergencyAddresses/{phone_number}
    method: GET
    data_selector: none
    params: {}
- name: delete_emergency_address
  endpoint:
    path: /EmergencyAddresses/{phone_number}
    method: DELETE
    data_selector: none
    params: {}
- name: list_extensions
  endpoint:
    path: /Extensions
    method: GET
    data_selector: none
    params: {}
- name: extensions
  endpoint:
    path: /Extensions/{extension}
    method: GET
- name: create_extension
  endpoint:
    path: /Extensions
    method: POST
- name: update_extension
  endpoint:
    path: /Extensions/{extension}
    method: PUT
- name: delete_extension
  endpoint:
    path: /Extensions/{extension}
    method: DELETE
- name: update_aws_s3_authentication
  endpoint:
    path: /Integrations/RecordingStorage/AWS
    method: PUT
- name: view_aws_s3_authentication
  endpoint:
    path: /Integrations/RecordingStorage/AWS
    method: GET
- name: delete_aws_s3_authentication
  endpoint:
    path: /Integrations/RecordingStorage/AWS
    method: DELETE
- name: update_watson_authentication
  endpoint:
    path: /Integrations/TTS/Watson
    method: PUT
- name: view_watson_authentication
  endpoint:
    path: /Integrations/TTS/Watson
    method: GET
- name: delete_watson_authentication
  endpoint:
    path: /Integrations/TTS/Watson
    method: DELETE
- name: send_message
  endpoint:
    path: /Messages
    method: POST
- name: messages_batch
  endpoint:
    path: /Messages/Batch
    method: POST
    data_selector: messages
    params: {}
- name: list_messages
  endpoint:
    path: /Messages
    method: GET
    data_selector: messages
    params: {}
- name: message
  endpoint:
    path: /Messages/{message_id}
    method: GET
    data_selector: null
    params:
      message_id: string (path)
- name: 10DLC_brands
  endpoint:
    path: /10DLCRegistration/Brands
    method: GET
    data_selector: brands
    params: {}
- name: 10DLC_brand_details
  endpoint:
    path: /10DLCRegistration/Brands/{brand_id}
    method: GET
    data_selector: null
    params:
      brand_id: string (path)
- name: brands
  endpoint:
    path: /10DLCRegistration/Brands
    method: POST
    data_selector: ''
    params: {}
- name: update_brand
  endpoint:
    path: /10DLCRegistration/Brands/{brand_id}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_brand
  endpoint:
    path: /10DLCRegistration/Brands/{brand_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: OrderExternalVetting
  endpoint:
    path: /10DLCRegistration/Brands/OrderExternalVetting/{brand_id}
    method: POST
    data_selector: vetting
    params:
      brand_id: string (path)
- name: ImportExternalVetting
  endpoint:
    path: /10DLCRegistration/Brands/ImportExternalVetting/{brand_id}
    method: POST
    data_selector: vetting
    params:
      brand_id: string (path)
- name: ListCampaigns
  endpoint:
    path: /10DLCRegistration/Campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: ViewCampaignDetails
  endpoint:
    path: /10DLCRegistration/Campaigns/{campaign_id}
    method: GET
    data_selector: campaign
    params:
      campaign_id: string (path)
- name: create_campaign
  endpoint:
    path: /10DLCRegistration/Campaigns
    method: POST
    data_selector: campaign_id
    params: {}
- name: update_campaign
  endpoint:
    path: /10DLCRegistration/Campaigns/{campaign_id}
    method: PUT
- name: delete_campaign
  endpoint:
    path: /10DLCRegistration/Campaigns/{campaign_id}
    method: DELETE
- name: available_phone_numbers
  endpoint:
    path: /PhoneNumbers/Available
    method: GET
    data_selector: phone_numbers
    params:
      capabilities: voice
      country: US
      type: all
      max_results: 10
      search_by: region
- name: phone_numbers
  endpoint:
    path: /PhoneNumbers/{assigned_to}
    method: GET
    data_selector: phone_numbers
    params: {}
- name: phone_number
  endpoint:
    path: /PhoneNumbers/{phone_number}
    method: GET
    data_selector: 'no'
    params: {}
- name: provision_phone_numbers
  endpoint:
    path: /PhoneNumbers/{assigned_to}
    method: POST
    data_selector: phone_numbers
    params:
      assigned_to: string
- name: available_phone_numbers
  endpoint:
    path: /PhoneNumbers/Available
    method: GET
    data_selector: phone_numbers
    params: {}
- name: update_phone_numbers
  endpoint:
    path: /PhoneNumbers/{phone_number}
    method: PUT
    data_selector: 'no'
    params: {}
- name: move_phone_numbers
  endpoint:
    path: /PhoneNumbers/Move/{assigned_to}
    method: PUT
    data_selector: phone_numbers
    params: {}
- name: release_phone_numbers
  endpoint:
    path: /PhoneNumbers/{assigned_to}
    method: DELETE
    data_selector: phone_numbers
    params: {}
- name: PhoneNumberInformation
  endpoint:
    path: /PhoneNumberInformation/{phone_number}
    method: GET
    data_selector: ''
- name: CreateHostedSMSPortRequest
  endpoint:
    path: /PortRequests/HostedSMS
    method: POST
    data_selector: ''
- name: CreateLocalPortRequest
  endpoint:
    path: /PortRequests/Local
    method: POST
    data_selector: ''
- name: ListQueues
  endpoint:
    path: /LiveCalls/Queues
    method: GET
    data_selector: ''
- name: ViewQueueDetails
  endpoint:
    path: /LiveCalls/Queues/{queue_name}
    method: GET
    data_selector: ''
- name: queued_calls
  endpoint:
    path: /LiveCalls/Queues/{queue_name}/Calls
    method: GET
    data_selector: calls
    params:
      queue_name: string (path)
- name: queued_call_detail
  endpoint:
    path: /LiveCalls/Queues/{queue_name}/Calls/{call_id}
    method: GET
    data_selector: call
    params:
      queue_name: string (path)
      call_id: string (path)
- name: peek_queue
  endpoint:
    path: /LiveCalls/Queues/{queue_name}/Peek
    method: GET
    data_selector: call
    params:
      queue_name: string (path)
- name: poll_queue
  endpoint:
    path: /LiveCalls/Queues/{queue_name}/Poll
    method: GET
    data_selector: call
    params:
      queue_name: string (path)
- name: remove_queued_call
  endpoint:
    path: /LiveCalls/Queues/{queue_name}/Calls/{call_id}
    method: DELETE
    data_selector: null
    params:
      queue_name: string (path)
      call_id: string (path)
- name: delete_queue
  endpoint:
    path: /LiveCalls/Queues/{queue_name}
    method: DELETE
    data_selector: name
    params:
      queue_name: string (path)
- name: start_recording
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Recording/Start
    method: POST
    data_selector: null
    params:
      call_id: string (path)
- name: pause_recording
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Recording/Pause
    method: POST
    data_selector: null
    params:
      call_id: string (path)
- name: resume_recording
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Recording/Resume
    method: POST
    data_selector: null
    params:
      call_id: string (path)
- name: stop_recording
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Recording/Stop
    method: POST
    data_selector: null
    params:
      call_id: string (path)
- name: list_recordings
  endpoint:
    path: /History/Recordings
    method: GET
    data_selector: recordings
    params: {}
- name: recordings
  endpoint:
    path: /History/Recordings/{call_id}
    method: GET
    data_selector: recordings
    params: {}
- name: download_recording
  endpoint:
    path: /History/Recordings/{id}/{format}
    method: GET
    data_selector: audio_file
    params: {}
- name: delete_recording
  endpoint:
    path: /History/Recordings/{id}
    method: DELETE
    data_selector: no_response
    params: {}
- name: sip_trunks
  endpoint:
    path: /Trunks
    method: GET
    data_selector: trunks
    params: {}
- name: sip_trunk
  endpoint:
    path: /Trunks/{trunk_id}
    method: GET
    data_selector: trunk
    params:
      trunk_id: trunk_id
- name: trunks
  endpoint:
    path: /Trunks
    method: POST
    data_selector: trunk_id
    params: {}
- name: Trunks
  endpoint:
    path: /Trunks/{trunk_id}
    method: PUT
    data_selector: trunk_id
    params: {}
- name: Users
  endpoint:
    path: /Users
    method: GET
    data_selector: users
    params: {}
- name: SIP User
  endpoint:
    path: /Users/{user_id}
    method: GET
    data_selector: ''
    params: {}
- name: Create SIP User
  endpoint:
    path: /Users
    method: POST
    data_selector: ''
    params: {}
- name: Update SIP User
  endpoint:
    path: /Users/{user_id}
    method: PUT
    data_selector: ''
    params: {}
- name: Delete SIP User
  endpoint:
    path: /Users/{user_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: start_transcription
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Transcription/Start
    method: POST
    data_selector: null
    params:
      call_id: string (path)
- name: stop_transcription
  endpoint:
    path: /LiveCalls/{call_id}/Actions/Transcription/Stop
    method: POST
    data_selector: null
    params:
      call_id: string (path)
- name: initiate_verification
  endpoint:
    path: /Verifications
    method: POST
    data_selector: null
    params:
      verify_no: string
      api_no: string
- name: assert_verification
  endpoint:
    path: /Verifications/:verification_id/Assert
    method: POST
    data_selector: null
    params:
      verification_id: string (path)
      code: string
- name: view_verification
  endpoint:
    path: /Verifications/{verification_id}
    method: GET
    data_selector: null
    params:
      verification_id: string (path)
- name: list_verifications
  endpoint:
    path: /Verifications
    method: GET
    data_selector: null
    params: {}
- name: cancel_verification
  endpoint:
    path: /Verifications/{verification_id}
    method: DELETE
    data_selector: null
    params:
      verification_id: string (path)
- name: programmable_voice
  endpoint:
    path: /products/programmable-voice
    method: GET
- name: programmable_messaging
  endpoint:
    path: /products/programmable-messaging
    method: GET
- name: verify_api
  endpoint:
    path: /products/verify-api
    method: GET
- name: customer_experience_testing
  endpoint:
    path: /products/customer-experience-testing
    method: GET
- name: heartbeat
  endpoint:
    path: /products/customer-experience-testing/heartbeat
    method: GET
- name: stresstest
  endpoint:
    path: /products/customer-experience-testing/stresstest
    method: GET
- name: phone_numbers
  endpoint:
    path: /products/phone-numbers
    method: GET
- name: microsoft_teams_calling
  endpoint:
    path: /solutions/microsoft-teams
    method: GET
- name: phone_number_info_lookup
  endpoint:
    path: /products/information-lookup
    method: GET
- name: emergency_calling
  endpoint:
    path: /products/emergency-calling
    method: GET
- name: call_recording
  endpoint:
    path: /services/call-recording
    method: GET
- name: media_stream
  endpoint:
    path: /services/media-stream
    method: GET
- name: call_transcription
  endpoint:
    path: /services/call-transcription
    method: GET
- name: extensions
  endpoint:
    path: /services/extensions
    method: GET
- name: sip_registration
  endpoint:
    path: /services/sip-registration
    method: GET
- name: event_conferencing
  endpoint:
    path: /products/event-conferencing
    method: GET
- name: sip_trunking
  endpoint:
    path: /products/sip-trunking
    method: GET
- name: Programmable Voice
  endpoint:
    path: /products/programmable-voice
    method: GET
- name: Programmable Messaging
  endpoint:
    path: /products/programmable-messaging
    method: GET
- name: Verify API
  endpoint:
    path: /products/verify-api
    method: GET
- name: Customer Experience Testing
  endpoint:
    path: /products/customer-experience-testing
    method: GET
- name: HeartBeat
  endpoint:
    path: /products/customer-experience-testing/heartbeat
    method: GET
- name: StressTest
  endpoint:
    path: /products/customer-experience-testing/stresstest
    method: GET
- name: Phone Numbers
  endpoint:
    path: /products/phone-numbers
    method: GET
- name: Microsoft Teams Calling
  endpoint:
    path: /solutions/microsoft-teams
    method: GET
- name: Phone Number Info Lookup
  endpoint:
    path: /products/information-lookup
    method: GET
- name: Emergency Calling
  endpoint:
    path: /products/emergency-calling
    method: GET
- name: Call Recording
  endpoint:
    path: /services/call-recording
    method: GET
- name: Media Stream
  endpoint:
    path: /services/media-stream
    method: GET
- name: Call Transcription
  endpoint:
    path: /services/call-transcription
    method: GET
- name: Extensions
  endpoint:
    path: /services/extensions
    method: GET
- name: SIP Registration
  endpoint:
    path: /services/sip-registration
    method: GET
- name: Event Conferencing
  endpoint:
    path: /products/event-conferencing
    method: GET
- name: SIP Trunking
  endpoint:
    path: /products/sip-trunking
    method: GET
- name: Inbound SIP Trunk
  endpoint:
    path: /services/sip-trunking#receive-calls
    method: GET
    data_selector: records
- name: Outbound SIP Trunk
  endpoint:
    path: /services/sip-trunking#make-calls
    method: GET
    data_selector: records
notes:
- Request payload to callback URL will be a JSON object by default.
- Uses Basic Authentication for account-level requests and API Key for application-level
  requests.
- Call Flow Configurations are cached for up to five minutes.
- Changes made to the configuration may take up to 5 minutes to go live.
- 'Phone number must be in E.164 format (example: +17145551212).'
- Methods are in development. Contact support for assistance.
- Default country is US.
- Default type is all.
- Default page size is 25.
- Default max results is 10.
- The maximum amount of numbers that can be provisioned at a time is 25.
- Customer consents to Company sending Customer text message notifications as part
  of consuming Company's service.
- Customer is responsible for any charges incurred in connection with receipt of text
  messages on Customer's mobile device(s).
- Company reserves the right to apply limits to the Service, such as the number of
  people who can participate in an event at one time, the length of a conference,
  the hours during which an event can be held, and any other limits Company chooses
  to implement.
- Customer certifies it has consent from recipients for any text message(s) it sends
  as part of consuming Company's service.
- Continuous monitoring of production environment.
- Proactive alerts for issues before they impact customers.
- Call recording laws exist in many places around the world. Consult your lawyer about
  any and all call recording use cases.
- Media Stream enables real-time audio streaming from phone calls to a user-defined
  endpoint.
- Webhooks are used to receive transcripts.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects may return nulls in deeply nested fields
- Voxology’s Programmable Voice and Messaging API enables you to architect and embed
  intelligent communications into your application.
- Request payload to the callback URL will be a JSON object by default.
- The API supports both Basic Authentication and API Key.
- The callback response must be in JSON or CCML.
- To collect speech from the caller you need to add your Google Speech-to-Text credentials.
- API Key is required for authentication.
- Requires setup of API Key at application level
- Uses API key for authentication.
- Customer is responsible for any charges incurred in connection with receipt of text
  messages on Customer's mobile device(s). Message and data rates may apply.
- Customer may opt out of text message notifications by replying to a message with
  the word `STOP`.
errors:
- '401 Unauthorized: The request must include the header named X-API-Key.'
- '404 Not Found: The requested resource could not be found.'
- '200: Success returns account details'
- '201: Success creates new alert'
- '204: No content on success.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API key or permissions'
- '200: Successful request.'
- '4xx & 5xx: General Error Codes'
- '4xx & 5xx: Call Flow Error Codes'
- '200: Returns a message object.'
- '200: Returns a Vetting Record object.'
- '200: An array phone number objects.'
- '4xx & 5xx: Phone Number Error Codes'
- '200: Returns a Trunk object'
- '201: SIP Trunk created'
- '400001: Validation Error'
- '400010: Parsing Error'
- '400999: It appears that the request was invalid. Check the ‘message’ property for
  more detail.'
- '401001: Failed Authentication'
- '401002: Failed Authentication'
- '402001: Insufficient Funds'
- '403001: Forbidden'
- '404001: Not Found'
- '404002: The requested resource path or method is not supported.'
- '405001: Method Not Found'
- '400429: Too Many Requests'
- '500990: It appears that our upstream server threw an internal error.'
- '500991: Server Error'
- '500999: Uncaught Error: [fault.name]; [fault.type]; [fault.category]'
- '500911: Fatal System Error'
- '404254: 1001: failed to insert caller-id: this caller-id already exists'
- '404254: Not Found'
- '404102: Not Found'
- '500101: Storage Error'
- '500102: Database Error'
- '404404: Not Found'
- '404701: Not Found'
- '404702: Not Found'
- '500501: Storage Error'
- '400999: The underlying audio file you are attempting to play on the call was not
  found.'
- '400378: Too many calls'
- '403293: Unable to make call. Caller ID verification required.'
- '3001: Destination is invalid or not SMS enabled'
- '3002: Subscriber is opted out or blocked'
- '3003: Message expired'
- '3004: Message rejected by SMS provider'
- '3005: Attachment exceeds maximum size'
- '3006: Too many recipients'
- '3007: Message contains invalid character'
- '3008: Message throttled by provider, reduce sending speed'
- '3009: Error accessing media URL'
- '3010: Exceeded sending limit'
- '3011: Message content refused'
- '3012: Message contains invalid URL'
- '3013: Message too big to send'
- '3014: Message filtered as Spam'
- '3015: Daily message quota exceeded'
- '3016: Short Code verification error'
- '3098: Message could not be delivered'
- '3099: SMS provider is unreachable'
- code: 400200
  message: Bad Request
  help: The numbers are already assigned to the API.
  user_message: The specified phone number(s) are already assigned to this API.
- code: 400201
  message: Bad Request
  help: None of the numbers are assigned to this API.
  user_message: No phone numbers could be released. No numbers are assigned to this
    API.
- code: 400202
  message: Bad Request
  help: The /PhoneNumbers/_ resource does not support phone number provisioning.
  user_message: A 3rd-party service could not understand your request. This could
    be due to submitting invalid data.
- code: 400203
  message: Bad Request
  help: '[Custom Message]'
  user_message: The search was invalid. This is likely due to an invalid combination
    of search criteria.
- code: 400404
  message: Phone number not found
  help: '[provided phone number] not found'
  user_message: A 3rd-party service could not understand your request. This could
    be due to submitting invalid data.
- code: 404214
  message: Phone number not found
  help: The Phone Numbers(s) do not exist in your application.
  user_message: The Phone Number(s) could not be found.
- code: 423001
  message: Concurrent Request Error
  help: Provisioning and releasing phone numbers does not support concurrent requests
    per API Key. On status 423, try again after a few seconds.
  user_message: Our service was busy modifying phone numbers. Please try again.
- code: 500200
  message: Server Error
  help: Updating the phone numbers list failed. This likely means that nothing has
    changed. Verify by pulling the list to check for changes.
  user_message: The specified phone number(s) were not assigned.
- code: 500201
  message: Database Error
  help: The numbers were updated, but DB syncing failed. This error will not affect
    your applications.
  user_message: The specified phone number(s) were updated with non-fatal errors.
- code: 404711
  message: Not Found
  help: The queue ID may be wrong or the queue could have been garbage collected.
  user_message: The requested queue was not found.
- code: 404712
  message: Not Found
  help: The call is not in the queue. It may have left the queue already.
  user_message: The requested queued call was not found.
- code: 404713
  message: Not Found
  help: The queue is empty. No call was found.
  user_message: The queue is empty. No call was found.
- code: 403803
  message: Forbidden
  help: You cannot delete due to usage on the Sub Account. If you want to deactivate
    this Sub Account you may update the “status” to “inactive” using the PUT method.
  user_message: This Sub Account cannot be deleted due to historical usage. You may,
    however, deactivate the Sub Account.
- code: 404801
  message: Not Found
  help: The Sub Account ID is incorrect. A Sub Account by that ID never existed under
    this application.
  user_message: A 3rd-party service could not find the requested resource.
- code: 404802
  message: Not Found
  help: The Sub Account ID references a Sub Account that no longer exists.
  user_message: A 3rd-party service reports that the requested resource is no longer
    available.
- '400 Bad Request: Invalid parameters provided.'
- '401 Unauthorized: Invalid API key.'
- '500 Internal Server Error: An error occurred on the server.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '404 Not Found: The requested resource does not exist.'
- '500 Internal Server Error: An error occurred on the Voxology platform.'
- 'DIAL action failed: Check number format or timeout.'
- '400 Bad Request: Check required parameters in the request'
- '401 Unauthorized: Ensure valid API key is provided'
- '404 Not Found: Verify endpoint URL'
- '4xx & 5xx: Queue Error Codes'
- '500: Trying to delete a SIP Trunk that has place or received calls will return
  a 500 error.'
- '400999: [Custom Message]'
- '404002: Not Found'
- '500990: [Custom Message]'
- code: '400200'
  message: Bad Request
  user_message: The specified phone number(s) are already assigned to this API.
- code: '400201'
  message: Bad Request
  user_message: No phone numbers could be released. No numbers are assigned to this
    API.
- code: '400202'
  message: Bad Request
  user_message: A 3rd-party service could not understand your request. This could
    be due to submitting invalid data.
- code: '400203'
  message: Bad Request
  user_message: The search was invalid. This is likely due to an invalid combination
    of search criteria.
- code: '400404'
  message: Phone number not found
  user_message: A 3rd-party service could not understand your request. This could
    be due to submitting invalid data.
- code: '404214'
  message: Phone number not found
  user_message: The Phone Number(s) could not be found.
- code: '423001'
  message: Concurrent Request Error
  user_message: Our service was busy modifying phone numbers. Please try again.
- code: '500200'
  message: Server Error
  user_message: The specified phone number(s) were not assigned.
- code: '500201'
  message: Database Error
  user_message: The specified phone number(s) were updated with non-fatal errors.
- code: '404711'
  message: Not Found
  user_message: The requested queue was not found.
- code: '404712'
  message: Not Found
  user_message: The requested queued call was not found.
- code: '404713'
  message: Not Found
  user_message: The queue is empty. No call was found.
- code: '403803'
  message: Forbidden
  user_message: This Sub Account cannot be deleted due to historical usage. You may,
    however, deactivate the Sub Account.
- code: '404801'
  message: Not Found
  user_message: A 3rd-party service could not find the requested resource.
- code: '404802'
  message: Not Found
  user_message: A 3rd-party service reports that the requested resource is no longer
    available.
- code: '1003'
  user_message: The Application or Sub Account belonging to this number has been deactivated
    - activate the Application or Sub Account.
- code: '2001'
  user_message: Your account balance is $0.00 - add money to your account.
- code: '4001'
  user_message: The request to your callback url timed out.
- code: '400900'
  user_message: We received a non-2XX status code back from your callback url(s) -
    see call logs for more details.
- code: '400901'
  user_message: We received a non-2XX status code back from your callback url(s)-
    see call logs for more details.
- code: '400902'
  user_message: Your callback response did not contain JSON actions.
- code: '400910'
  user_message: We received a non-2XX status code back from your callback url(s) -
    see call logs for more details.
- code: '400911'
  user_message: We received a non-2XX status code back from your callback url(s) -
    see call logs for more details.
- code: '400912'
  user_message: We received a non-2XX status code back from your callback url(s) -
    see call logs for more details.
- code: '400913'
  user_message: Your callback response did not contain JSON actions.
- code: '400931'
  user_message: 'Your callback response included a url that we were unable to fetch
    (for example: a `PLAY` audio file url that returned a 404) - see callback and
    call logs for more details.'
- code: '413900'
  user_message: Your callback response exceeded the hard JSON callback limit of 81
    KB.
- code: '413910'
  user_message: Your callback response exceeded the hard JSON callback limit of 81
    KB.
- code: '413901'
  user_message: Your callback response exceeded the compiled limit.
- code: '413911'
  user_message: Your callback response exceeded the compiled limit.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.voxolo.gy/v1
  auth:
    type: apikey
source_metadata: null
