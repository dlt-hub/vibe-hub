resources:
- name: api_version
  endpoint:
    path: /translation/apiVersion
    method: GET
    data_selector: version
- name: translate_text
  endpoint:
    path: /translation/text/translate
    method: POST
    data_selector: outputs
- name: translate_file
  endpoint:
    path: /translation/file/translate
    method: POST
    data_selector: requestId
    params: {}
- name: get_translation_status
  endpoint:
    path: /translation/file/status
    method: GET
    data_selector: status
    params: {}
- name: cancel_translation
  endpoint:
    path: /translation/file/cancel
    method: POST
    data_selector: {}
    params: {}
- name: get_translation_result
  endpoint:
    path: /translation/file/result
    method: GET
    data_selector: requestId
    params: {}
- name: create_batch
  endpoint:
    path: /translation/file/batch/create
    method: POST
    data_selector: batchId
    params: {}
- name: get_batch_status
  endpoint:
    path: /translation/file/batch/status
    method: GET
    data_selector: requests
    params: {}
- name: cancel_batch
  endpoint:
    path: /translation/file/batch/cancel
    method: POST
    data_selector: {}
    params: {}
- name: close_batch
  endpoint:
    path: /translation/file/batch/close
    method: POST
    data_selector: {}
    params: {}
- name: supported_languages
  endpoint:
    path: /translation/supportedLanguages
    method: GET
    data_selector: languagePairs
    params: {}
- name: supported_formats
  endpoint:
    path: /translation/supportedFormats
    method: GET
    data_selector: formats
    params: {}
- name: add_feedback
  endpoint:
    path: /translation/feedback/add
    method: POST
    data_selector: feedbackId
    params: {}
- name: list_profiles
  endpoint:
    path: /translation/profiles
    method: GET
    data_selector: profiles
    params: {}
- name: supported_features
  endpoint:
    path: /translation/supportedFeatures
    method: GET
    data_selector: {}
    params: {}
- name: supported_selectors
  endpoint:
    path: /translation/supportedSelectors
    method: GET
    data_selector: {}
    params: {}
- name: TranslationInfo
  endpoint:
    path: /translation/info
    method: GET
    data_selector: output
    params: {}
- name: TranslationOutput
  endpoint:
    path: /translation/output
    method: GET
    data_selector: output
    params: {}
- name: TranslationResponse
  endpoint:
    path: /translation/response
    method: GET
    data_selector: outputs
    params: {}
- name: TranslationFileResponse
  endpoint:
    path: /translation/file/response
    method: GET
    data_selector: output
    params: {}
- name: TranslationStatus
  endpoint:
    path: /translation/status
    method: GET
    data_selector: status
    params: {}
- name: BatchRequest
  endpoint:
    path: /batch/request
    method: POST
    data_selector: id
    params: {}
- name: BatchCreate
  endpoint:
    path: /batch/create
    method: POST
    data_selector: batchId
    params: {}
- name: BatchCancel
  endpoint:
    path: /batch/cancel
    method: POST
    data_selector: status
    params: {}
- name: BatchClose
  endpoint:
    path: /batch/close
    method: POST
    data_selector: status
    params: {}
- name: BatchStatus
  endpoint:
    path: /batch/status
    method: GET
    data_selector: requests
    params: {}
- name: SupportedLanguagesResponse
  endpoint:
    path: /languages/supported
    method: GET
    data_selector: languagePairs
    params: {}
- name: SupportedFormatsResponse
  endpoint:
    path: /formats/supported
    method: GET
    data_selector: formats
    params: {}
- name: ProfilesResponse
  endpoint:
    path: /profiles
    method: GET
    data_selector: profiles
    params: {}
- name: permissions
  endpoint:
    path: /profiles/{id}/permissions
    method: POST
    data_selector: permissions
    params: {}
- name: translationResources
  endpoint:
    path: /translationResources
    method: GET
    data_selector: translationResources
    params: {}
- name: profiles
  endpoint:
    path: /profiles
    method: GET
    data_selector: profiles
    params: {}
- name: get_api_version
  endpoint:
    path: /profiles/apiVersion
    method: GET
    data_selector: ''
    params: {}
- name: create_profile
  endpoint:
    path: /profiles/create
    method: POST
    data_selector: ''
    params: {}
- name: delete_profile
  endpoint:
    path: /profiles/delete
    method: POST
    data_selector: ''
    params: {}
- name: deactivate_profile
  endpoint:
    path: /profiles/deactivate
    method: POST
    data_selector: ''
    params: {}
- name: activate_profile
  endpoint:
    path: /profiles/activate
    method: POST
    data_selector: ''
    params: {}
- name: get_permissions
  endpoint:
    path: /profiles/{id}/permissions
    method: GET
    data_selector: ''
    params: {}
- name: api_version
  endpoint:
    path: /resources/dictionary/apiVersion
    method: GET
- name: supported_languages
  endpoint:
    path: /resources/dictionary/supportedLanguages
    method: GET
- name: lookup
  endpoint:
    path: /resources/dictionary/lookup
    method: GET
- name: lookup_supported_languages
  endpoint:
    path: /resources/dictionary/lookup/supportedLanguages
    method: GET
- name: lookup_result
  endpoint:
    path: /lookup/result
    method: GET
    data_selector: outputs
    params: {}
- name: add_dictionary
  endpoint:
    path: /resources/dictionary/add
    method: POST
    data_selector: dictionary
- name: delete_dictionary
  endpoint:
    path: /resources/dictionary/delete
    method: POST
    data_selector: dictionaryId
- name: export_dictionary
  endpoint:
    path: /resources/dictionary/export
    method: POST
    data_selector: dictionaryId
- name: update_dictionary
  endpoint:
    path: /resources/dictionary/update
    method: POST
    data_selector: dictionary
- name: list_dictionaries
  endpoint:
    path: /resources/dictionary/list
    method: POST
- name: add_entry
  endpoint:
    path: /resources/dictionary/entry/add
    method: POST
    data_selector: entry
- name: delete_entry
  endpoint:
    path: /resources/dictionary/entry/delete
    method: POST
    data_selector: entry
- name: update_entry
  endpoint:
    path: /resources/dictionary/entry/update
    method: POST
    data_selector: update
- name: import_entries
  endpoint:
    path: /resources/dictionary/entry/import
    method: POST
    data_selector: dictionaryId
- name: list_entries
  endpoint:
    path: /resources/dictionary/entry/list
    method: POST
- name: apply_dictionary_changes
  endpoint:
    path: /resources/dictionary/apply
    method: POST
    data_selector: dictId
- name: EntryAddResponse
  endpoint:
    path: /entry/add
    method: POST
    data_selector: entry
- name: EntryDeleteResponse
  endpoint:
    path: /entry/delete
    method: DELETE
    data_selector: status
- name: EntryUpdateResponse
  endpoint:
    path: /entry/update
    method: PUT
    data_selector: entry
- name: EntriesListResponse
  endpoint:
    path: /entries/list
    method: GET
    data_selector: entries
- name: delete_corpus
  endpoint:
    path: /resources/corpus/delete
    method: POST
    data_selector: files
    params: {}
- name: find_matches
  endpoint:
    path: /resources/corpus/match
    method: GET
    data_selector: matches
    params: {}
- name: list_corpus_segments
  endpoint:
    path: /resources/corpus/segment/list
    method: GET
    data_selector: segments
    params: {}
- name: add_corpus_segments
  endpoint:
    path: /resources/corpus/segment/add
    method: POST
    data_selector: segments
    params: {}
- name: delete_corpus_segments
  endpoint:
    path: /resources/corpus/segment/delete
    method: POST
    data_selector: files
    params: {}
- name: update_corpus_segment
  endpoint:
    path: /resources/corpus/segment/update
    method: POST
    data_selector: updated
    params: {}
- name: add_corpus_segment_targets
  endpoint:
    path: /resources/corpus/segment/target/add
    method: POST
    data_selector: added
    params: {}
- name: delete_corpus_segment_targets
  endpoint:
    path: /resources/corpus/segment/target/delete
    method: POST
    data_selector: deleted
    params: {}
- name: CorpusSegmentAddTargetResponse
  endpoint:
    data_selector: added
- name: CorpusSegmentDeleteTargetResponse
  endpoint:
    data_selector: deleted
- name: Profile
  endpoint:
    data_selector: id
- name: ApiVersionResponse
  endpoint:
    data_selector: version
- name: ErrorResponse
  endpoint:
    data_selector: message
- name: Get API version
  endpoint:
    path: /resources/corpus/apiVersion
    method: GET
- name: List corpora
  endpoint:
    path: /resources/corpus/list
    method: GET
- name: Add empty corpus
  endpoint:
    path: /resources/corpus/add
    method: POST
- name: Import corpus
  endpoint:
    path: /resources/corpus/import
    method: POST
- name: Check corpus existence
  endpoint:
    path: /resources/corpus/exists
    method: GET
- name: Get corpus details
  endpoint:
    path: /resources/corpus/details
    method: GET
- name: Update corpus properties
  endpoint:
    path: /resources/corpus/update
    method: POST
- name: Export corpus
  endpoint:
    path: /resources/corpus/export
    method: GET
- name: Get API version
  endpoint:
    path: /compatmode/google/apiVersion
    method: GET
    data_selector: version
    params: {}
- name: Translate v2
  endpoint:
    path: /compatmode/google/language/translate/v2
    method: POST
    data_selector: translations
    params: {}
- name: Detect v2
  endpoint:
    path: /compatmode/google/language/translate/v2/detect
    method: POST
    data_selector: detections
    params: {}
- name: Supported languages
  endpoint:
    path: /compatmode/google/language/translate/v2/languages
    method: GET
    data_selector: languages
    params: {}
notes:
- The API access is granted only for API and INFINITE subscriptions.
- The input text must be encoded in UTF-8.
- The output text will be encoded in UTF-8.
- Requires authentication to access translation services.
- In header the access token generated from the authorization-server using OAuth2
  Flow Client Credentials or PKCE.
- In header the API Key generated from the authorization-server.
- In header the access token generated from the authorization-server (ses-console)
  using OAuth2 Flow Client Credentials or PKCE.
- In header the API Key generated from the authorization-server (ses-console).
- In querystring the API Key as key parameter.
- In header the API Key generated from the authorization-server (ses-console)
- It is recommended to use ‘Compatmode’ API only in the case of legacy developments.
errors:
- '400 Bad Request: Invalid parameters'
- '500 Internal Server Error: Error'
- '500 Internal Error: Check the server for more details.'
- '400 Bad Request: One or more users are invalid or inaccessible'
- '500 Internal error: An internal error occurred'
- '400 Bad Request: Check the request parameters'
auth_info:
  mentioned_objects:
  - accessToken
  - apiKey
client:
  base_url: https://api-translate.systran.net
  auth:
    type: apikey
source_metadata: null
