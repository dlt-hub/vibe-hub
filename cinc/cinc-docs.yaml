resources:
- name: aged_balances
  endpoint:
    path: /api/management/{mgmtId}/AgedBalances
    method: GET
    data_selector: '[].txtAssocCode'
    params:
      mgmtId: string
- name: associations
  endpoint:
    path: /api/management/{mgmtId}/associations
    method: GET
    data_selector: records
    params:
      mgmtId: string (required)
      assocCode: string (optional)
- name: AgedBalances
  endpoint:
    path: /api/management/{mgmtId}/AgedBalances
    method: GET
    data_selector: response object
    params:
      mgmtId: string
- name: homeowner_info
  endpoint:
    path: /{mgmtId}/associations/homeownerinfo
    method: GET
    data_selector: ''
    params:
      mgmtId: string (required)
      assocCode: string (optional)
      createdDate: datetime (optional)
      updateDate: datetime (optional)
- name: account_correspondence
  endpoint:
    path: /api/management/{mgmtId}/homeowners/accountCorrespondence
    method: PUT
- name: call_log
  endpoint:
    path: /{mgmtId}/callLog
    method: GET
    data_selector: records
    params:
      mgmtId: string (required)
      HoaId: string (optional)
- name: homeowner_address
  endpoint:
    path: /management/{mgmtId}/homeowner/address
    method: GET
    data_selector: records
    params:
      mgmtId: string (required)
      assocCode: string (required)
      address: string (required)
- name: flagged_collections
  endpoint:
    path: /{mgmtId}/flaggedcollections
    method: GET
    data_selector: response
    params:
      mgmtId: string
- name: associations
  endpoint:
    path: /{mgmtId}/associations
    method: GET
    data_selector: numTypeID
    params:
      mgmtId: string
- name: charges
  endpoint:
    path: /api/management/{mgmtId}/charges
    method: POST
- name: correspondencetemplate
  endpoint:
    path: /api/management/{mgmtId}/homeowners/correspondencetemplate
    method: GET
    data_selector: records
    params:
      mgmtId: string (required)
- name: update_email_phone
  endpoint:
    path: /api/management/{mgmtId}/homeowner/updateEmailPhone
    method: PUT
    data_selector: '[]'
- name: ACCInfo
  endpoint:
    path: /api/management/{mgmtId}/associations/ACCInfo
    method: GET
    data_selector: AssociationIdLink
    params:
      mgmtId: string
      assocCode: string
- name: ACCType
  endpoint:
    path: /api/management/{mgmtId}/ACCType
    method: GET
    data_selector: numACCTypeID
    params:
      mgmtId: string
- name: CreateACC
  endpoint:
    path: /api/management/{mgmtId}/ACCInfo
    method: POST
    data_selector: PropertyHOAId
    params:
      mgmtId: string
- name: correspondencenotetype
  endpoint:
    path: /{mgmtId}/homeowners/correspondencenotetype
    method: GET
    data_selector: numNoteTypeID
    params:
      mgmtId: string
- name: get_document_ids
  endpoint:
    path: /{mgmtId}/documentIds
    method: GET
    data_selector: '[]'
    params:
      mgmtId: string
      startDate: datetime
      endDate: datetime
      type: string
- name: get_document_by_file_id
  endpoint:
    path: /{mgmtId}/documents/{fileId}
    method: GET
    data_selector: file object
    params:
      fileId: string
      mgmtId: string
- name: homeowner
  endpoint:
    path: /api/management/{mgmtId}/homeowners/homeownerlookup
    method: GET
    data_selector: records
    params:
      mgmtId: string (required)
      assocCode: string (optional)
      createdDate: datetime (optional)
      updateDate: datetime (optional)
- name: correspondencestatus
  endpoint:
    path: /{mgmtId}/homeowners/correspondencestatus
    method: GET
    data_selector: numStatusID
    params:
      mgmtId: string
- name: vendor
  endpoint:
    path: /api/management/{mgmtId}/vendors
    method: GET
    data_selector: '[]'
    params:
      mgmtId: string(required)
      vendorId: int(optional)
- name: homeowner_transaction
  endpoint:
    path: /api/management/{mgmtId}/associations/{assocCode}/homeowners/{hoaId}/homeownertransaction
    method: GET
    data_selector: user_no
    params:
      mgmtId: string
notes: []
errors:
- '200 - OK: Everything worked as expected.'
- '400 - Bad Request: The request was unacceptable, often due to missing a required
  parameter.'
- '401 - Unauthorized: No valid API key provided.'
- '402 - Request Failed: The parameters were valid but the request failed.'
- '403 - Forbidden: The API key does not have permission to perform the request.'
- '404 - Not Found: The requested resource does not exist.'
- '403 - Forbidden: The API key doesn''t have permission to perform the request.'
- '404 - Not Found: The requested resource doesn''t exist.'
- '403 - Forbidden: The API key doesn''t have permissions to perform the request.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://yourcustomerdatabase.cincsys.com
  headers:
    Accept: application/json
  paginator:
    type: none
  auth:
    type: apikey
    token_url: https://identity.cincsys.com/connect/token
    client_id: Client ID
    client_secret: Client Secret
    location: header
    header_name: Authorization
source_metadata: null
