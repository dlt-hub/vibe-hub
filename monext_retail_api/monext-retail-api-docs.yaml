resources:
- name: payment
  endpoint:
    path: /paymentcreate
    method: POST
- name: session
  endpoint:
    path: /sessioncreate
    method: POST
- name: paymentLink
  endpoint:
    path: /paymentlinkcreate
    method: POST
- name: mxwallet
  endpoint:
    path: /mxwalletcreate
    method: POST
- name: transaction
  endpoint:
    path: /transactioncapture
    method: POST
- name: 3DS authentication
  endpoint:
    path: /authenticationcreate
    method: POST
- name: payout transaction
  endpoint:
    path: /payouttransactionget
    method: GET
- name: point of sale
  endpoint:
    path: /getpointsofsale
    method: GET
- name: payment method
  endpoint:
    path: /getpaymentmethods
    method: GET
- name: session
  endpoint:
    path: /sessions
    method: post
- name: session_detail
  endpoint:
    path: /sessions
    method: get
- name: paymentType
  endpoint:
    path: /reference/paymenttype-attribute-values
    method: GET
    data_selector: values
    params: {}
- name: is it alive ?
  endpoint:
    path: /v1/checkout/alive
    method: GET
- name: is it alive ?
  endpoint:
    path: /v1/checkout/alive
    method: GET
- name: components
  endpoint:
    path: /checkout/components
    method: POST
- name: components
  endpoint:
    path: /v1/checkout/components
    method: POST
- name: create_payment
  endpoint:
    path: /v1/checkout/payments
    method: POST
- name: create_payment
  endpoint:
    path: /v1/checkout/payments
    method: POST
- name: result
  endpoint:
    path: /result
    method: POST
    data_selector: result
    params: {}
- name: prepare_payment
  endpoint:
    path: /v1/checkout/payments/prepare
    method: POST
- name: prepare_payment
  endpoint:
    path: /v1/checkout/payments/prepare
    method: POST
- name: session
  endpoint:
    path: /v1/checkout/payments/sessions
    method: POST
- name: session
  endpoint:
    path: /v1/checkout/payments/sessions
    method: POST
- name: session_detail
  endpoint:
    path: /v1/checkout/payments/sessions/{sessionId}
    method: GET
- name: payment_link
  endpoint:
    path: /checkout/paybylink/paymentlinks
    method: POST
- name: session
  endpoint:
    path: /checkout/payments/sessions/{sessionId}
    method: GET
- name: paymentLink
  endpoint:
    path: /v1/checkout/paybylink/paymentlinks/{paymentLinkId}
    method: GET
- name: paymentLink
  endpoint:
    path: /checkout/paybylink/paymentlinks
    method: POST
- name: paymentLink
  endpoint:
    path: /v1/checkout/paybylink/paymentlinks/{paymentLinkId}/status
    method: PUT
- name: paymentLink
  endpoint:
    path: /v1/checkout/paybylink/paymentlinks/{paymentLinkId}
    method: GET
- name: paymentLink
  endpoint:
    path: /checkout/paybylink/paymentlinks/{paymentLinkId}/status
    method: PUT
- name: MXWallet
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets
    method: POST
- name: MXWallet
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets
    method: POST
- name: MXWallet
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}
    method: PUT
- name: MXWallet
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}
    method: PUT
- name: mxwallet_detail
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}
    method: GET
- name: MXWallet
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}
    method: GET
- name: update_mxwallet_status
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}/status
    method: PUT
- name: Update MXWallet Status
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}/status
    method: PUT
- name: add_payment_instrument
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}/paymentinstruments
    method: POST
- name: payment_instrument
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}/paymentinstruments
    method: POST
- name: Update a payment instrument
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}/paymentinstruments/{paymentInstrumentRank}
    method: PUT
- name: payment_instrument
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}/paymentinstruments/{paymentInstrumentRank}
    method: PUT
- name: payment_instrument
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}/paymentinstruments/{paymentInstrumentRank}
    method: GET
- name: payment_instrument_detail
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}/paymentinstruments/{paymentInstrumentRank}
    method: GET
- name: update_payment_instrument_status
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}/paymentinstruments/{paymentInstrumentRank}/status
    method: PUT
- name: update_payment_instrument_status
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}/paymentinstruments/{paymentInstrumentRank}/status
    method: PUT
- name: set_payment_instrument_default
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}/paymentinstruments/{paymentInstrumentRank}/default
    method: PUT
- name: mxwallet_session
  endpoint:
    path: /v1/checkout/mxwallets/sessions
    method: POST
- name: Set a payment instrument as default
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}/paymentinstruments/{paymentInstrumentRank}/default
    method: PUT
- name: mxwallet_session
  endpoint:
    path: /v1/checkout/mxwallets/sessions/{mxWalletSessionId}
    method: GET
- name: mxwallet_session
  endpoint:
    path: /v1/checkout/mxwallets/sessions
    method: POST
- name: capture_transaction
  endpoint:
    path: /v1/checkout/transactions/{id}/captures
    method: POST
- name: mx_wallet_session
  endpoint:
    path: /v1/checkout/mxwallets/sessions/{mxWalletSessionId}
    method: GET
- name: refund_transaction
  endpoint:
    path: /v1/checkout/transactions/{id}/refunds
    method: POST
- name: capture_transaction
  endpoint:
    path: /v1/checkout/transactions/{id}/captures
    method: POST
- name: cancel_transaction
  endpoint:
    path: /v1/checkout/transactions/{id}/cancels
    method: POST
- name: refund_transaction
  endpoint:
    path: /v1/checkout/transactions/{id}/refunds
    method: POST
- name: transaction
  endpoint:
    path: /v1/checkout/transactions/{id}
    method: GET
- name: cancel_transaction
  endpoint:
    path: /v1/checkout/transactions/{id}/cancels
    method: POST
- name: 3DS Authentication
  endpoint:
    path: /v1/checkout/authentications
    method: POST
- name: transaction
  endpoint:
    path: /v1/checkout/transactions/{id}
    method: GET
- name: 3DS Authentication
  endpoint:
    path: /v1/checkout/authentications/{sessionId}
    method: PUT
- name: 3DS Authentication
  endpoint:
    path: /v1/checkout/authentications
    method: POST
- name: 3DS Authentication
  endpoint:
    path: /v1/checkout/authentications/{sessionId}/verify
    method: POST
- name: 3DS Authentication
  endpoint:
    path: /v1/checkout/authentications/{sessionId}
    method: PUT
- name: verify_3ds_authentication_session
  endpoint:
    path: /v1/checkout/authentications/{sessionId}/verify
    method: POST
- name: is_it_alive
  endpoint:
    path: /v1/checkout/alive
    method: GET
- name: components
  endpoint:
    path: /payout/components
    method: POST
- name: sepa_bank_transfer
  endpoint:
    path: /v1/payout/sepatransfers
    method: POST
- name: is_it_alive
  endpoint:
    path: /v1/checkout/alive
    method: GET
- name: payout_transaction
  endpoint:
    path: /v1/payout/transactions/{id}
    method: GET
- name: components
  endpoint:
    path: /v1/payout/components
    method: POST
- name: create_sepa_bank_transfer
  endpoint:
    path: /v1/payout/sepatransfers
    method: POST
- name: card
  endpoint:
    path: /v1/card
    method: GET
- name: payout_transaction
  endpoint:
    path: /v1/payout/transactions/{id}
    method: GET
- name: is it alive ?
  endpoint:
    path: /v1/alive
    method: GET
- name: is_it_alive
  endpoint:
    path: /v1/alive
    method: GET
- name: card
  endpoint:
    path: /v1/card
    method: POST
- name: transaction
  endpoint:
    path: /v1/transaction
    method: GET
- name: is_it_alive
  endpoint:
    path: /v1/checkout/alive
    method: GET
- name: components
  endpoint:
    path: /checkout/components
    method: POST
- name: is_it_alive
  endpoint:
    path: /v1/checkout/alive
    method: GET
- name: encryption_key
  endpoint:
    path: /v1/security/encryption/keys/{name}
    method: GET
    data_selector: response
    params: {}
- name: components
  endpoint:
    path: /v1/checkout/components
    method: POST
- name: card_number_token
  endpoint:
    path: /v1/security/token/cardTokens
    method: POST
- name: encryption_key
  endpoint:
    path: /v1/security/encryption/keys/{name}
    method: GET
    data_selector: RESPONSE
- name: card_number_token
  endpoint:
    path: /v1/security/token/cardTokens
    method: POST
- name: is it alive ?
  endpoint:
    path: /v1/checkout/alive
    method: GET
    data_selector: ''
- name: components
  endpoint:
    path: /checkout/components
    method: POST
- name: is_it_alive
  endpoint:
    path: /v1/checkout/alive
    method: GET
- name: point_of_sale
  endpoint:
    path: /v1/merchants/{merchantId}/pointsofsale
    method: GET
- name: components
  endpoint:
    path: /v1/checkout/components
    method: POST
- name: point_of_sale
  endpoint:
    path: /v1/merchants/{merchantId}/pointsofsale/{posReference}
    method: GET
- name: point_of_sale
  endpoint:
    path: /v1/merchants/{merchantId}/pointsofsale
    method: GET
- name: payment_methods
  endpoint:
    path: /v1/merchants/{merchantId}/pointsofsale/{posReference}/paymentMethods
    method: GET
- name: payment_method
  endpoint:
    path: /v1/merchants/{merchantId}/pointsofsale/{posReference}/paymentMethods/{paymentMethodId}
    method: GET
- name: point_of_sale
  endpoint:
    path: /v1/merchants/{merchantId}/pointsofsale/{posReference}
    method: GET
- name: payment_methods
  endpoint:
    path: /v1/merchants/{merchantId}/pointsofsale/{posReference}/paymentMethods
    method: GET
- name: alive
  endpoint:
    path: /v1/alive
    method: GET
    data_selector: string
    params: {}
- name: card_updater_search
  endpoint:
    path: /v1/card/updater/search
    method: POST
    data_selector: CardUpdaterResponse
    params: {}
- name: payment_method
  endpoint:
    path: /v1/merchants/{merchantId}/pointsofsale/{posReference}/paymentMethods/{paymentMethodId}
    method: GET
- name: alive
  endpoint:
    path: /v1/alive
    method: GET
- name: card_updater_search
  endpoint:
    path: /v1/card/updater/search
    method: POST
- name: alive
  endpoint:
    path: /v1/checkout/alive
    method: GET
    data_selector: string
    params: {}
- name: components
  endpoint:
    path: /v1/checkout/components
    method: POST
    data_selector: object
    params: {}
- name: payment session
  endpoint:
    path: /v1/checkout/payments/sessions
    method: POST
    data_selector: SessionResponse
    params: {}
- name: session detail
  endpoint:
    path: /v1/checkout/payments/sessions/{sessionId}
    method: GET
    data_selector: SessionDetailResponse
    params: {}
- name: create payment
  endpoint:
    path: /v1/checkout/payments
    method: POST
    data_selector: PaymentResponse
    params: {}
- name: alive
  endpoint:
    path: /v1/checkout/alive
    method: GET
    data_selector: string
    params: {}
- name: components
  endpoint:
    path: /v1/checkout/components
    method: POST
    data_selector: object
    params: {}
- name: sessionCreate
  endpoint:
    path: /v1/checkout/payments/sessions
    method: POST
    data_selector: SessionResponse
    params: {}
- name: sessionGet
  endpoint:
    path: /v1/checkout/payments/sessions/{sessionId}
    method: GET
    data_selector: SessionDetailResponse
    params:
    - name: sessionId
      in: path
      description: Web payment session unique identifier
      required: true
      schema:
        type: string
- name: paymentCreate
  endpoint:
    path: /v1/checkout/payments
    method: POST
    data_selector: PaymentResponse
    params: {}
- name: mxWallet
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets
    method: POST
- name: mxWalletUpdate
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}
    method: PUT
- name: mxWalletGet
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}
    method: GET
- name: mxWalletUpdateStatus
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}/status
    method: PUT
- name: mxWalletPaymentInstrumentAdd
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}/paymentinstruments
    method: POST
- name: mxWalletPaymentInstrumentUpdate
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}/paymentinstruments/{paymentInstrumentRank}
    method: PUT
- name: mxWalletPaymentInstrumentGet
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}/paymentinstruments/{paymentInstrumentRank}
    method: GET
- name: mxWalletPaymentInstrumentUpdateStatus
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}/paymentinstruments/{paymentInstrumentRank}/status
    method: PUT
- name: mxWallet
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets
    method: POST
- name: mxWalletUpdate
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}
    method: PUT
- name: mxWalletGet
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}
    method: GET
- name: mxWalletUpdateStatus
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}/status
    method: PUT
- name: mxWalletPaymentInstrumentAdd
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}/paymentinstruments
    method: POST
- name: mxWalletPaymentInstrumentUpdate
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}/paymentinstruments/{paymentInstrumentRank}
    method: PUT
- name: mxWalletPaymentInstrumentGet
  endpoint:
    path: /v1/checkout/merchants/{merchantId}/mxwallets/{mxWalletId}/paymentinstruments/{paymentInstrumentRank}
    method: GET
- name: mxWalletPaymentInstrumentDefault
  endpoint:
    path: /v1/checkout/mxwallets/paymentinstrument/default/{merchantId}/{mxWalletId}/{paymentInstrumentRank}
    method: GET
    data_selector: result
- name: mxWalletSessionCreate
  endpoint:
    path: /v1/checkout/mxwallets/sessions
    method: POST
    data_selector: session
- name: mxWalletSessionGet
  endpoint:
    path: /v1/checkout/mxwallets/sessions/{mxWalletSessionId}
    method: GET
    data_selector: sessionDetail
- name: paymentLinkCreate
  endpoint:
    path: /v1/checkout/paybylink/paymentlinks
    method: POST
    data_selector: paymentLink
- name: paymentLinkGet
  endpoint:
    path: /v1/checkout/paybylink/paymentlinks/{paymentLinkId}
    method: GET
    data_selector: paymentLinkStatus
- name: paymentLinkUpdateStatus
  endpoint:
    path: /v1/checkout/paybylink/paymentlinks/{paymentLinkId}/status
    method: PUT
    data_selector: updatedStatus
- name: transactionCapture
  endpoint:
    path: /v1/checkout/transactions/{id}/captures
    method: POST
    data_selector: captureResult
- name: transaction
  endpoint:
    path: /transactions/{id}
    method: GET
- name: transaction_refund
  endpoint:
    path: /transactions/{id}/refunds
    method: POST
- name: transaction_cancel
  endpoint:
    path: /transactions/{id}/cancels
    method: POST
- name: authentication_create
  endpoint:
    path: /authentications
    method: POST
- name: authentication_continue
  endpoint:
    path: /authentications/{sessionId}
    method: PUT
- name: authentication_verify
  endpoint:
    path: /authentications/{sessionId}/verify
    method: POST
- name: mxWalletPaymentInstrumentDefault
  endpoint:
    path: /v1/checkout/mxwallets/{merchantId}/{mxWalletId}/{paymentInstrumentRank}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: mxWalletSessionCreate
  endpoint:
    path: /v1/checkout/mxwallets/sessions
    method: POST
    data_selector: MXWalletSessionResponse
    params: {}
- name: mxWalletSessionGet
  endpoint:
    path: /v1/checkout/mxwallets/sessions/{mxWalletSessionId}
    method: GET
    data_selector: MXWalletSessionDetailResponse
    params: {}
- name: paymentLinkCreate
  endpoint:
    path: /v1/checkout/paybylink/paymentlinks
    method: POST
    data_selector: paymentLinkCreateResponse
    params: {}
- name: paymentLinkGet
  endpoint:
    path: /v1/checkout/paybylink/paymentlinks/{paymentLinkId}
    method: GET
    data_selector: paymentLinkResponse
    params: {}
- name: paymentLinkUpdateStatus
  endpoint:
    path: /v1/checkout/paybylink/paymentlinks/{paymentLinkId}/status
    method: PUT
    data_selector: PaymentLinkStatusUpdateResult
    params: {}
- name: transactionCapture
  endpoint:
    path: /v1/checkout/transactions/{id}/captures
    method: POST
    data_selector: TransactionActionRequest
    params: {}
- name: Payment
  endpoint:
    path: /payments
    method: POST
    data_selector: paymentDetails
- name: SessionDetailResponse
  endpoint:
    path: /session/detail
    method: GET
    data_selector: result
- name: paymentLinkCreateRequest
  endpoint:
    path: /payment/link/create
    method: POST
    data_selector: result
- name: paymentLinkResponse
  endpoint:
    path: /payment/link
    method: GET
    data_selector: paymentLink
- name: transaction
  endpoint:
    path: /v1/checkout/transactions/{id}
    method: GET
    data_selector: TransactionDetailResponse
    params: {}
- name: transaction_refund
  endpoint:
    path: /v1/checkout/transactions/{id}/refunds
    method: POST
    data_selector: TransactionActionResponse
    params: {}
- name: transaction_cancel
  endpoint:
    path: /v1/checkout/transactions/{id}/cancels
    method: POST
    data_selector: TransactionActionResponse
    params: {}
- name: 3ds_authentication
  endpoint:
    path: /v1/checkout/authentications
    method: POST
    data_selector: AuthenticationResponse
    params: {}
- name: 3ds_authentication_continue
  endpoint:
    path: /v1/checkout/authentications/{sessionId}
    method: PUT
    data_selector: AuthenticationResponse
    params: {}
- name: 3ds_authentication_verify
  endpoint:
    path: /v1/checkout/authentications/{sessionId}/verify
    method: POST
    data_selector: AuthenticationVerifyResponse
    params: {}
- name: Payment
  endpoint:
    path: /payment
    method: POST
    data_selector: paymentData
- name: Buyer
  endpoint:
    path: /buyer
    method: GET
    data_selector: buyerData
- name: transaction_action
  endpoint:
    path: /transactions/actions
    method: POST
    data_selector: result
    params: {}
- name: transaction_detail
  endpoint:
    path: /transactions/details
    method: GET
    data_selector: result
    params: {}
- name: Payload
  endpoint:
    path: /components/schemas/Payload
    method: POST
- name: ThreeDSMethod
  endpoint:
    path: /components/schemas/ThreeDSMethod
    method: POST
- name: Challenge
  endpoint:
    path: /components/schemas/Challenge
    method: POST
- name: session_detail
  endpoint:
    path: /v1/sessions/detail
    method: GET
    data_selector: result
- name: payment_link
  endpoint:
    path: /v1/payment/link
    method: POST
    data_selector: paymentLink
- name: payment_plan
  endpoint:
    path: /payments/plans
    method: GET
    data_selector: plans
- name: installment
  endpoint:
    path: /payments/installments
    method: GET
    data_selector: installments
- name: TransactionActionResponse
  endpoint:
    path: /transactions/action
    method: POST
    data_selector: result
    params: {}
- name: TransactionDetailResponse
  endpoint:
    path: /transactions/detail
    method: GET
    data_selector: result
    params: {}
- name: ThreeDSMethod
  endpoint:
    path: /threeDSMethod
    method: POST
- name: Challenge
  endpoint:
    path: /challenge
    method: POST
- name: payment_plan
  endpoint:
    path: /payments/plans
    method: POST
    data_selector: data
    params: {}
- name: installment
  endpoint:
    path: /payments/installments
    method: GET
    data_selector: installments
    params: {}
- name: alive
  endpoint:
    path: /v1/checkout/alive
    method: GET
    data_selector: '200'
    params: {}
- name: components
  endpoint:
    path: /v1/checkout/components
    method: POST
    data_selector: '200'
    params: {}
- name: getPointsOfSale
  endpoint:
    path: /v1/merchants/{merchantId}/pointsofsale
    method: GET
    data_selector: '200'
    params: {}
- name: getPointOfSale
  endpoint:
    path: /v1/merchants/{merchantId}/pointsofsale/{posReference}
    method: GET
    data_selector: '200'
    params: {}
- name: paymentMethodCreate
  endpoint:
    path: /v1/merchants/{merchantId}/pointsofsale/{posReference}/paymentMethods
    method: POST
    data_selector: '201'
    params: {}
- name: getPaymentMethods
  endpoint:
    path: /v1/merchants/{merchantId}/pointsofsale/{posReference}/paymentMethods
    method: GET
    data_selector: '200'
    params: {}
- name: getPaymentMethod
  endpoint:
    path: /v1/merchants/{merchantId}/pointsofsale/{posReference}/paymentMethods/{paymentMethodId}
    method: GET
    data_selector: '200'
    params: {}
- name: PaymentMethod
  endpoint:
    path: /payment-methods
    method: GET
    data_selector: paymentMethods
- name: PointOfSale
  endpoint:
    path: /points-of-sale
    method: GET
    data_selector: pointsOfSale
- name: alive
  endpoint:
    path: /v1/checkout/alive
    method: GET
    data_selector: string
    params: {}
- name: components
  endpoint:
    path: /v1/payout/components
    method: POST
    data_selector: OK
    params: {}
- name: sepaBankTransferCreate
  endpoint:
    path: /v1/payout/sepatransfers
    method: POST
    data_selector: BankTransferResponse
    params: {}
- name: payoutTransactionGet
  endpoint:
    path: /v1/payout/transactions/{id}
    method: GET
    data_selector: TransactionDetailResponse
    params:
      id: Payout transaction unique identifier
- name: is it alive ?
  endpoint:
    path: /v1/checkout/alive
    method: GET
    data_selector: content
    params: {}
- name: See all component
  endpoint:
    path: /v1/checkout/components
    method: POST
    data_selector: content
    params: {}
- name: Get the points of sale
  endpoint:
    path: /v1/merchants/{merchantId}/pointsofsale
    method: GET
    data_selector: content
    params: {}
- name: Get a point of sale
  endpoint:
    path: /v1/merchants/{merchantId}/pointsofsale/{posReference}
    method: GET
    data_selector: content
    params: {}
- name: Create a payment method
  endpoint:
    path: /v1/merchants/{merchantId}/pointsofsale/{posReference}/paymentMethods
    method: POST
    data_selector: content
    params: {}
- name: Get the payment methods
  endpoint:
    path: /v1/merchants/{merchantId}/pointsofsale/{posReference}/paymentMethods
    method: GET
    data_selector: content
    params: {}
- name: Get a payment method
  endpoint:
    path: /v1/merchants/{merchantId}/pointsofsale/{posReference}/paymentMethods/{paymentMethodId}
    method: GET
    data_selector: content
    params: {}
- name: BankTransferRequest
  endpoint:
    path: /bank/transfer
    method: POST
    data_selector: request
- name: BankTransferResponse
  endpoint:
    path: /bank/transfer/response
    method: GET
    data_selector: response
- name: paymentMethods
  endpoint:
    path: /paymentMethods
    method: POST
- name: pointOfSale
  endpoint:
    path: /pointOfSale
    method: POST
- name: is it alive ?
  endpoint:
    path: /v1/checkout/alive
    method: GET
    data_selector: string
    params: {}
- name: See all component
  endpoint:
    path: /v1/checkout/components
    method: POST
    data_selector: object
    params: {}
- name: Get Encryption Key
  endpoint:
    path: /v1/security/encryption/keys/{name}
    method: GET
    data_selector: EncryptionKeyResponse
    params: {}
- name: Create a card number token
  endpoint:
    path: /v1/security/token/cardTokens
    method: POST
    data_selector: CardTokenResponse
    params: {}
- name: checkout_alive
  endpoint:
    path: /v1/checkout/alive
    method: GET
    data_selector: string
    params: {}
- name: payout_components
  endpoint:
    path: /v1/payout/components
    method: POST
    data_selector: application/json
    params: {}
- name: sepa_bank_transfer
  endpoint:
    path: /v1/payout/sepatransfers
    method: POST
    data_selector: application/json
    params: {}
- name: payout_transaction_detail
  endpoint:
    path: /v1/payout/transactions/{id}
    method: GET
    data_selector: application/json
    params:
      id: string
- name: Issuer
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: PaymentInstrumentType
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: BankTransferRequest
  endpoint:
    path: /api/bank_transfer
    method: POST
    data_selector: result
    params: {}
- name: TransactionDetailResponse
  endpoint:
    path: /api/transaction_detail
    method: GET
    data_selector: result
    params: {}
- name: alive
  endpoint:
    path: /v1/checkout/alive
    method: GET
    data_selector: string
    params: {}
- name: components
  endpoint:
    path: /v1/checkout/components
    method: POST
    data_selector: object
    params: {}
- name: getEncryptionKey
  endpoint:
    path: /v1/security/encryption/keys/{name}
    method: GET
    data_selector: EncryptionKeyResponse
    params:
      name: your encryption key name
- name: cardNumberTokenCreate
  endpoint:
    path: /v1/security/token/cardTokens
    method: POST
    data_selector: CardTokenResponse
    params: {}
notes:
- Monext Retail API requires authentication for all requests.
- Ensure to use Basic Access Authentication with the merchantId and API Key.
- Never share your Merchant Access Key with a third party.
- Requires API key and merchant id.
- Communication with all Monext services requires TLS1.2.
- Monext maintains PCI-DSS compliance certifications.
- Result object in case of success or warning. ACCEPTED, REFUSED, CANCELLED, INPROGRESS,
  ONHOLD_PARTNER, PENDING_RISK.
- sessionId expire after 30 minutes per default
- Monext data centers deploy the latest in hardware and software security best practices.
- All communication is made by using standard features of HTTPs.
- Uses OAuth2 with refresh token — requires setup of connected app in Monext
- Some objects may return nulls in deeply nested fields
- Only for not widget integration.
- Some payment methods may require additional parameters.
- Ensure to handle 3DS authentication process correctly.
- Ensure to validate payment links before use.
- The amount is expressed in the smallest currency unit.
- Special characters (not A..Z and 1..9) may be restricted depending on the acquirer
  or payment method.
- Ensure that the merchant reference is included in the transaction request.
- Contains the necessary data for submitting a request during the 3D Secure authentication
  process.
- Requires OAuth2 authentication for all endpoints.
- Ensure to handle token refresh appropriately.
- Not supported by all acquirers.
- Point of Sale name must be between 1 and 50 characters.
- Payment Method name must be maximum 50 characters.
- Ensure that the SCT control in the payment method is disabled if you don't want
  the transfer to be associated with a payment transaction.
- Authentication requires basic auth setup.
- Ensure the payment method ID is unique and follows the specified pattern.
errors:
- 4xx - the request was rejected due to a problem with the information sent by the
  client.
- 5xx - something unexpected occurred while fulfilling the request.
- '400 Bad Request: Human-readable explanation specific to this occurrence of the
  problem.'
- '401 Unauthorized: Human-readable explanation specific to this occurrence of the
  problem.'
- '403 Forbidden: Human-readable explanation specific to this occurrence of the problem.'
- '409 Conflict: duplicated payment transaction: Human-readable explanation specific
  to this occurrence of the problem.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 422 Unprocessable Entity
- 429 Too Many Requests
- 500 Internal Server Error
- 501 Not Implemented
- 502 Bad Gateway ou Proxy Error
- 503 Service Unavailable
- 504 Gateway Time-out
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '409: Conflict'
- '412: Precondition Failed'
- '422: Unprocessable Entity'
- '429: Too Many Requests'
- '500: Internal Server Error'
- '501: Not Implemented'
- '502: Bad Gateway ou Proxy Error'
- '503: Service Unavailable'
- '504: Gateway Time-out'
- 400 Bad Request
- 401 Unauthorized
- 403 Forbidden
- 404 Not Found
- 409 Conflict
- '400 Bad Request: Invalid request format or missing required fields.'
- '401 Unauthorized: Check your authentication credentials.'
- '500 Internal Server Error: Try again later.'
- 'INVALID_REQUEST: Check your request parameters.'
- 'NOT_FOUND: The requested resource does not exist.'
- '401 Unauthorized: Check your client ID and secret.'
- '404 Not Found: Verify the endpoint path.'
- '500 Internal Server Error: Retry the request or check service status.'
- '400 Bad Request: Ensure all required fields are provided.'
- '400 Bad Request: Check the request parameters for validity.'
- '401 Unauthorized: Ensure correct authentication credentials.'
- '500 Internal Server Error: Try again later or contact support.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - PaymentInstrument
client:
  base_url: https://api-sandbox.retail.monext.com
  auth:
    type: Basic
    location: header
    header_name: Authorization
source_metadata: null
