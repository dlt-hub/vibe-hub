resources:
- name: payments
  endpoint:
    path: /resources/payments
    method: GET
- name: subscriptions
  endpoint:
    path: /resources/subscriptions
    method: GET
- name: payments
  endpoint:
    path: /resources/payments
    method: GET
- name: subscriptions
  endpoint:
    path: /resources/subscriptions
    method: GET
- name: payments
  endpoint:
    path: /integration/payments
    method: POST
    data_selector: data
- name: payments
  endpoint:
    path: /integration/payments
    method: POST
    data_selector: data
- name: payment
  endpoint:
    path: /checkout.smartypay.io
    method: GET
    data_selector: payment
    params: {}
- name: payment
  endpoint:
    path: /[payment-id]
    method: GET
- name: subscriptions
  endpoint:
    path: /api/subscriptions
    method: POST
- name: subscriptions
  endpoint:
    path: /api/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /integration/subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: create_customer_token
  endpoint:
    path: /integration/subscriptions/create-customer-token
    method: POST
    data_selector: ''
    params: {}
- name: subscription_plans
  endpoint:
    path: /integration/subscription-plans
    method: GET
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /integration/subscriptions
    method: POST
    data_selector: status
    params: {}
- name: create_customer_token
  endpoint:
    path: /integration/subscriptions/create-customer-token
    method: POST
    data_selector: sessionToken
    params: {}
- name: subscription_plans
  endpoint:
    path: /integration/subscription-plans
    method: GET
    data_selector: plans
    params: {}
- name: payments
  endpoint:
    path: /checkout
    method: POST
- name: balances
  endpoint:
    path: /balances
    method: GET
- name: merchant_wallet
  endpoint:
    path: /merchant_wallet
    method: POST
- name: settlement_history
  endpoint:
    path: /settlement_history
    method: GET
- name: make_payout
  endpoint:
    path: /make_payout
    method: POST
- name: create_customer_token
  endpoint:
    path: /integration/subscriptions/create-customer-token
    method: POST
- name: payments
  endpoint:
    path: /checkout
    method: POST
    data_selector: response
    params: {}
- name: payments
  endpoint:
    path: /resources/payments
    method: GET
- name: subscriptions
  endpoint:
    path: /resources/subscriptions
    method: GET
- name: create_customer_token
  endpoint:
    path: /subscriptions/create-customer-token
    method: POST
- name: payments
  endpoint:
    path: /integration/payments
    method: POST
    data_selector: payment
    params: {}
- name: subscriptions
  endpoint:
    path: /integration/subscriptions
    method: POST
    data_selector: contractAddress
    params: {}
- name: payments
  endpoint:
    path: /resources/payments
- name: subscriptions
  endpoint:
    path: /resources/subscriptions
- name: payments
  endpoint:
    path: /integration/payments
    method: POST
- name: subscriptions
  endpoint:
    path: /integration/subscriptions
    method: POST
- name: payments
  endpoint:
    path: /integration/payments
    method: POST
    data_selector: payment
    params: {}
- name: get_payment
  endpoint:
    path: /integration/payments/{paymentId}
    method: GET
    data_selector: payment
    params: {}
- name: webhook
  endpoint:
    path: /api/webhooks
    method: POST
- name: subscription_plans
  endpoint:
    path: /integration/subscription-plans
    method: GET
    data_selector: records
    params: {}
- name: create_customer_token
  endpoint:
    path: /integration/subscriptions/create-customer-token
    method: POST
    data_selector: token
    params: {}
- name: payment
  endpoint:
    path: /integration/payments
    method: POST
    data_selector: payment
    params: {}
- name: get_payment
  endpoint:
    path: /integration/payments/{paymentId}
    method: GET
    data_selector: payment
    params: {}
- name: subscription_plans
  endpoint:
    path: /integration/subscription-plans
    method: GET
    data_selector: records
    params: {}
- name: create_customer_token
  endpoint:
    path: /integration/subscriptions/create-customer-token
    method: POST
    data_selector: token
    params: {}
notes:
- Do not send your Secret into Client Browser!
- API keys for testing (TestNet) are different from the ones you'll use for real transactions
  (MainNet).
- Smarty Pay is a multi-chain crypto payments platform.
- Flexible branding options for donation and recharge widgets.
- Integration with various decentralized exchanges to offer the best exchange rates
  at payments.
- Managing cryptocurrency wallets can be tricky.
- Using Google Auth or email offers a simpler way to log in, but you won't have direct
  access to your private key.
- By default, you enter the merchant dashboard in the TestNet mode.
- You can create payments for crypto tokens in TestNet.
- Token 'Code' refers to the token specific to the particular network (via the prefix).
- For testing purposes, we recommend using a token USDT with btUSDTv2 code on the
  Binance Test Net.
- Being a multi-chain platform, Smarty Pay supports a wide range of blockchain networks
  and different tokens that customers can use to make a payment.
- Payment creation must be performed exclusively on the merchant's backend system.
- To test your integration you can create payments in the test network.
- This mode is enabled for the merchant by default.
- Requires API key configuration for authentication.
- Merchant API Key and Merchant API Secret are required.
- Smarty Pay API is rate limited to prevent inappropriate usage that could potentially
  lead to overall processing performance degradation.
- By default, every API Key is rate-limited at 25 requests per minute.
- Webhook is fired using HTTP POST.
- Payload/body is in JSON format.
- Payload is signed by Smarty Pay using API Secret.
- Webhook is considered successfully delivered when the remote endpoint returns HTTP
  200.
- Webhook is delivered with at least-once semantics.
- Smarty Pay retries webhook delivery several times with exponential backoff.
- It's important to ensure that the receiving system can handle events coming in out
  of order.
- Webhook payload is in JSON format and signed by Smarty Pay using API Secret.
- Webhook delivery is considered successful when the remote endpoint returns HTTP
  200.
- Subscription plans should be created upfront via Merchant Dashboard
- Plans should be activated to be used
- Safeguarding the private key is paramount for the merchant.
- While using Gmail or email to log in is convenient, it's not the most secure choice.
- KYB procedure is finished to use the MainNet
errors:
- '404 CompanyApiKeyNotFound: Incorrect key name was passed.'
- '403 Forbidden: Incorrect key secret was passed.'
- '401 Unauthorized: Check API Key or Secret'
- '401 Unauthorized: Recheck API key or secret'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'BadRequest: Problem with request data'
- 'Unauthorized: Invalid credentials'
- 'Forbidden: Access to a resource is forbidden'
- 'NotFound: Resource not found'
- 'TooManyRequests: Client is making too many requests'
- 'ServiceUnavailable: Some service on a backend is not available'
- 'PartnerApiKeyIsInvalid: Api Key is related to the wrong network type'
- 'FeatureNotSupported: Requested feature is not supported or disabled'
- 'UnsupportedNetwork: Provided Network code is not known or network is disabled by
  a merchant'
- 'AssetNotSupported: Provided token code is not known or the network is disabled
  by a merchant'
- 'InvalidDltAddress: Blockchain address provided has incorrect format'
- 'TransactionHashNotFound: The transaction hash provided is not found in the blockchain'
- 'BlockchainNotAvailable: The blockchain network is not available or a timeout on
  the RPC call occurred'
- 'BlockchainError: The blockchain interaction has failed for some reason, retry the
  call'
- 'InvalidDestination: Merchant wallet smart contract has an invalid address, contact
  support'
- 'InvalidDestination: Merhant wallet smart contract has an invalid address, contact
  support'
- 'PaymentExpiresAtInvalid: The Payment expire date is invalid'
- 'PaymentAmountInvalid: The payment amount cannot be parsed due to the value or token
  code error'
- 'PaymentDuplicateAmounts: Aux amounts has duplicates values'
- 'PaymentAmountNotSupported: Provided token code is not known or the network is disabled
  by a merchant'
- 'PaymentInconsistentAsset: Aux amounts attribute has token codes from the different
  networks'
- 'PaymentNotFound: Payment not found'
- 'PaymentMetadataSizeExceeded: Metadata attribute is too big'
- 'CompensationDisabled: The gas compensation feature is disabled by a merchant'
- 'PaymentExpiresAtInvalid: The payment expiresAt date has invalid format or refers
  to the point in the past'
- 'PaymentAmountInvalid: The payment amount cannot be parsed due to the value or currency
  type'
- 'MerchantNotFound: The merchant that provided in merchantId attribute is not found'
- 'PaymentMetadataSizeExceeded: Metadata JSON is too big, the maximum allowed size
  is 4Kb'
- 'PaymentDescriptionSizeExceeded: Description is too big, the maximum allowed size
  is 1Kb'
- '400 Bad Request: Check required attributes in the request'
- 'PaymentExpiresAtInvalid: The payment `expiresAt` date has invalid format or refers
  to the point in the past'
- 'MerchantNotFound: The merchant that provided in `merchantId` attribute is not found'
- '401 Unauthorized: Recheck API Key or Secret'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.smartypay.io
  auth:
    type: basic
    location: header
source_metadata: null
