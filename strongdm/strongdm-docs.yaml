resources:
- name: account_attachments
  endpoint:
    method: GET
- name: account_grants
  endpoint:
    method: GET
- name: account_permissions
  endpoint:
    method: GET
- name: accounts
  endpoint:
    method: GET
- name: nodes
  endpoint:
    method: GET
- name: peering_group_nodes
  endpoint:
    method: GET
- name: peering_group_peers
  endpoint:
    method: GET
- name: peering_group_resources
  endpoint:
    method: GET
- name: peering_groups
  endpoint:
    method: GET
- name: policies
  endpoint:
    method: GET
- name: identity_aliases
  endpoint:
    method: GET
- name: identity_sets
  endpoint:
    method: GET
- name: resources
  endpoint:
    method: GET
- name: roles
  endpoint:
    method: GET
- name: secret_stores
  endpoint:
    method: GET
- name: workflow_approvers
  endpoint:
    method: GET
- name: workflow_roles
  endpoint:
    method: GET
- name: workflows
  endpoint:
    method: GET
- name: access_request_events_history
  endpoint:
    method: GET
- name: access_requests
  endpoint:
    method: GET
- name: access_requests_history
  endpoint:
    method: GET
- name: account_attachments_history
  endpoint:
    method: GET
- name: account_grants_history
  endpoint:
    method: GET
- name: account_resources
  endpoint:
    method: GET
- name: account_resources_history
  endpoint:
    method: GET
- name: accounts_history
  endpoint:
    method: GET
- name: activities
  endpoint:
    method: GET
- name: control_panel
  endpoint:
    method: GET
- name: nodes_history
  endpoint:
    method: GET
- name: organization_history
  endpoint:
    method: GET
- name: policies_history
  endpoint:
    method: GET
- name: queries
  endpoint:
    method: GET
- name: identity_aliases_history
  endpoint:
    method: GET
- name: identity_sets_history
  endpoint:
    method: GET
- name: replays
  endpoint:
    method: GET
- name: resources_history
  endpoint:
    method: GET
- name: role_resources
  endpoint:
    method: GET
- name: role_resources_history
  endpoint:
    method: GET
- name: roles_history
  endpoint:
    method: GET
- name: secret_stores_history
  endpoint:
    method: GET
- name: workflow_approvers_history
  endpoint:
    method: GET
- name: workflow_assignments
  endpoint:
    method: GET
- name: workflow_assignments_history
  endpoint:
    method: GET
- name: workflow_roles_history
  endpoint:
    method: GET
- name: workflows_history
  endpoint:
    method: GET
- name: access_events
  endpoint:
    path: /api/access-events
    method: GET
- name: audit_logs
  endpoint:
    path: /api/audit-logs
    method: GET
- name: threat_detection
  endpoint:
    path: /api/threat-detection
    method: GET
- name: api
  endpoint:
    path: /docs/api/
    method: GET
- name: active_directory_federation_services
  endpoint:
    path: /loves/active-directory-federation-services
- name: azure_kubernetes_service
  endpoint:
    path: /loves/aks
- name: amazon_athena
  endpoint:
    path: /loves/amazon-athena
- name: amazon_documentdb
  endpoint:
    path: /loves/amazon-documentdb
- name: amazon_linux
  endpoint:
    path: /loves/amazon-linux
- name: amazon_mq
  endpoint:
    path: /loves/amazon-mq
- name: amazon_neptune
  endpoint:
    path: /loves/amazon-neptune
- name: amazon_opensearch
  endpoint:
    path: /loves/amazon-opensearch-service
- name: amazon_rds
  endpoint:
    path: /loves/amazon-rds
- name: amazon_redshift
  endpoint:
    path: /loves/amazon-redshift
- name: amazon_sagemaker
  endpoint:
    path: /loves/amazon-sagemaker
- name: ansible
  endpoint:
    path: /loves/ansible
- name: apache_superset
  endpoint:
    path: /loves/apache-superset
- name: aurora_mysql
  endpoint:
    path: /loves/aurora-mysql
- name: aurora_postgresql
  endpoint:
    path: /loves/aurora-postgresql
- name: auth0
  endpoint:
    path: /loves/auth0
- name: aws_cli
  endpoint:
    path: /loves/aws-cli
- name: aws_cloudformation
  endpoint:
    path: /loves/aws-cloudformation
- name: aws_govcloud
  endpoint:
    path: /loves/aws-govcloud
- name: aws
  endpoint:
    path: /loves/aws
- name: aws_management_console
  endpoint:
    path: /loves/aws-management-console
- name: aws_secrets_manager
  endpoint:
    path: /loves/aws-secrets-manager
- name: azure_arm
  endpoint:
    path: /loves/azure-arm
- name: azure_cache_redis
  endpoint:
    path: /loves/azure-cache-redis
- name: azure_cli
  endpoint:
    path: /loves/azure-cli
- name: azure
  endpoint:
    path: /loves/azure
- name: azure_key_vault
  endpoint:
    path: /loves/azure-key-vault
- name: azure_monitor_logs
  endpoint:
    path: /loves/azure-monitor-logs
- name: bigquery
  endpoint:
    path: /loves/bigquery
- name: cassandra
  endpoint:
    path: /loves/cassandra
- name: access_requests
  endpoint:
    path: /api/access-requests
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: credentials
  endpoint:
    path: /docs/get-started/security/credentials-secrets-management/
- name: strong_vault
  endpoint:
    path: /docs/admin/secret-stores/strong-vault/
- name: audit_logs
  endpoint:
    path: /docs/admin/logs/
    method: GET
- name: datasources
  endpoint:
    path: /docs/admin/resources/datasources/
    method: GET
- name: access_requests
  endpoint:
    path: /api/access-requests
    method: GET
- name: audit_logs
  endpoint:
    path: /api/audit-logs
    method: GET
- name: kubernetes_clusters
  endpoint:
    path: /app/login
    method: GET
- name: servers
  endpoint:
    path: /api/servers
    method: GET
- name: granular_access_controls
  endpoint:
    path: /api/access-controls
    method: GET
- name: vendor_access
  endpoint:
    path: /v1/vendor-access
    method: GET
- name: access_logs
  endpoint:
    path: /v1/access-logs
    method: GET
- name: databases
  endpoint:
    method: GET
- name: api
  endpoint:
    path: /docs/api/
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: resources
  endpoint:
    path: /api/resources
    method: GET
- name: access_requests
  endpoint:
    path: /api/access-requests
    method: GET
- name: audit_logs
  endpoint:
    path: /api/audit-logs
    method: GET
- name: api
  endpoint:
    path: /docs/api/
    method: GET
- name: access_management
  endpoint:
    path: /api/access-management
    method: GET
- name: activities
  endpoint:
    path: /admin/audit/logs/scenarios/export-activities
- name: queries
  endpoint:
    path: /admin/audit/logs/scenarios/export-queries
- name: ssh_replays
  endpoint:
    path: /admin/audit/logs/scenarios/export-ssh
- name: users
  endpoint:
    path: /v1/users
    method: GET
- name: roles
  endpoint:
    path: /v1/roles
    method: GET
- name: resources
  endpoint:
    path: /v1/resources
    method: GET
- name: nodes
  endpoint:
    path: /v1/nodes
    method: GET
- name: activities
  endpoint:
    path: /v1/activities
    method: GET
- name: audit_logs
  endpoint:
    path: /v1/audit/logs
    method: GET
- name: glossary_terms
  endpoint:
    path: /glossary
    method: GET
- name: what_is_articles
  endpoint:
    path: /what-is
    method: GET
- name: virtual_events
  endpoint:
    path: /events
    method: GET
- name: in_person_events
  endpoint:
    path: /events
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: access_requests
  endpoint:
    path: /api/access-requests
    method: GET
- name: audit_logs
  endpoint:
    path: /api/audit-logs
    method: GET
- name: nist_800_53_access_controls
  endpoint:
    path: /nist-800-53/solution-guide
    method: GET
- name: docs
  endpoint:
    path: /docs
    method: GET
- name: api
  endpoint:
    path: /docs/api
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: access_logs
  endpoint:
    path: /api/access-logs
    method: GET
- name: audit_trails
  endpoint:
    path: /api/audit-trails
    method: GET
- name: privileged_accounts
  endpoint:
    path: /api/privileged-accounts
    method: GET
    data_selector: accounts
- name: sessions
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: sessions
- name: access_policies
  endpoint:
    path: /api/access-policies
    method: GET
    data_selector: policies
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: roles
  endpoint:
    path: /api/roles
    method: GET
- name: policies
  endpoint:
    path: /api/policies
    method: GET
- name: sd_wan
  endpoint:
    method: GET
- name: ztna
  endpoint:
    method: GET
- name: casb
  endpoint:
    method: GET
- name: fwaas
  endpoint:
    method: GET
- name: swg
  endpoint:
    method: GET
- name: privileged_access
  endpoint:
    path: /api/v1/privileged_access
    method: GET
    data_selector: records
- name: just_in_time_access
  endpoint:
    path: /api/v1/just_in_time_access
    method: GET
    data_selector: records
- name: SOC 2 Compliance Support Guide
  endpoint:
    path: /discover/how-strongdm-supports-soc-2-compliance
    method: GET
    data_selector: resources
    params: {}
- name: Simplify Compliance Certification
  endpoint:
    path: /solution/security-compliance
    method: GET
    data_selector: resources
    params: {}
- name: SOC 2 Training Course
  endpoint:
    path: /soc2/course
    method: GET
    data_selector: resources
    params: {}
- name: Answering Auditors' Questions in a SOC 2 Review
  endpoint:
    path: /blog/soc-2-compliance-interview-questions
    method: GET
    data_selector: resources
    params: {}
- name: 2022 SOC 2 Compliance eBook
  endpoint:
    path: /soc2/soc-2-ebook
    method: GET
    data_selector: resources
    params: {}
- name: HIPAA Rules
  endpoint:
    path: /hipaa/rules
    method: GET
    data_selector: rules
- name: HIPAA Violations
  endpoint:
    path: /hipaa/violations
    method: GET
    data_selector: violations
- name: Filing a Complaint
  endpoint:
    path: /hipaa/complaint
    method: POST
    data_selector: complaint
- name: Privacy Rule
  endpoint:
    path: /hipaa/privacy-rule
    method: GET
    data_selector: rules
    params: {}
- name: Security Rule
  endpoint:
    path: /hipaa/security-rule
    method: GET
    data_selector: rules
    params: {}
- name: Breach Notification Rule
  endpoint:
    path: /hipaa/breach-notification-rule
    method: GET
    data_selector: rules
    params: {}
- name: access_requests
  endpoint:
    path: /api/v1/access_requests
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: open_positions
  endpoint:
    path: /api/open_positions
    method: GET
    data_selector: positions
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /v1/users
    method: GET
    data_selector: data
    params: {}
- name: access_requests
  endpoint:
    path: /v1/access_requests
    method: GET
    data_selector: data
    params: {}
- name: access
  endpoint:
    path: /access
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: access_requests
  endpoint:
    path: /v1/access_requests
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /v1/users
    method: GET
    data_selector: data
    params: {}
- name: user_access
  endpoint:
    path: /api/v1/user/access
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /api/v1/roles
    method: GET
    data_selector: data
    params: {}
- name: access_requests
  endpoint:
    path: /api/v1/access_requests
    method: GET
    data_selector: data
    params: {}
- name: access_requests
  endpoint:
    path: /api/v1/access_requests
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
- name: access_logs
  endpoint:
    path: /api/v1/access_logs
    method: GET
    data_selector: data
    params: {}
- name: access_requests
  endpoint:
    path: /api/v1/access_requests
    method: GET
    data_selector: data
    params: {}
- name: user_sessions
  endpoint:
    path: /api/v1/user_sessions
    method: GET
    data_selector: data
    params: {}
- name: access_requests
  endpoint:
    path: /api/v1/access_requests
    method: GET
    data_selector: data
    params: {}
- name: access_logs
  endpoint:
    path: /api/v1/access_logs
    method: GET
    data_selector: logs
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
    params: {}
- name: access_requests
  endpoint:
    path: /api/v1/access_requests
    method: GET
    data_selector: data
    params: {}
- name: sessions
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: access_request
  endpoint:
    path: /api/v1/access_requests
    method: GET
    data_selector: data
    params: {}
- name: access_requests
  endpoint:
    path: /api/v1/access_requests
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: access_requests
  endpoint:
    path: /api/v1/access_requests
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: access_logs
  endpoint:
    path: /api/v1/access_logs
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: access_logs
  endpoint:
    path: /api/v1/access_logs
    method: GET
    data_selector: logs
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
- name: access_requests
  endpoint:
    path: /api/v1/access_requests
    method: GET
    data_selector: data
- name: access_requests
  endpoint:
    path: /api/access_requests
    method: GET
    data_selector: data
    params: {}
- name: sessions
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: data
    params: {}
- name: access_requests
  endpoint:
    path: /api/v1/access_requests
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: access_management
  endpoint:
    path: /api/v1/access-management
    method: GET
    data_selector: data
    params: {}
- name: access_records
  endpoint:
    path: /api/v1/access_records
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: records
- name: sessions
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: records
    params: {}
- name: access_requests
  endpoint:
    path: /access_requests
    method: GET
    data_selector: data
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: data
- name: access_request
  endpoint:
    path: /api/v1/access_requests
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: access_request
  endpoint:
    path: /api/access_requests
    method: GET
    data_selector: data
    params: {}
- name: audit_logs
  endpoint:
    path: /api/audit_logs
    method: GET
    data_selector: data
    params: {}
- name: access_requests
  endpoint:
    path: /api/v1/access_requests
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: access_requests
  endpoint:
    path: /api/v1/access_requests
    method: GET
    data_selector: requests
    params: {}
notes:
- Uses Cedar-based policy engine for fine-grained access controls
- Focuses on Zero Trust privileged access management
- Provides access to servers, databases, Kubernetes, cloud platforms
- Designed for frustration-free user experience
- Supports dynamic policy-based authorization
- Does not sell or share Personal Information for cross-context behavioral advertising
  purposes
- Does not use or disclose Sensitive Personal Information for purposes other than
  limited purposes permitted by CCPA
- Does not knowingly sell or share Personal Information of consumers under 16 years
  of age
- Supports Global Privacy Control (GPC) opt-out preference signals
- Privacy policy document - not API documentation
- Uses cookies for tracking and analytics
- May use Google Analytics with data reporting features
- Transfers data internationally including to USA
- GDPR compliant for EU/UK users
- Uses gRPC and request signature model that requires the use of one of the StrongDM
  SDKs
- SDKs were designed with REST principles in mind
- API access depends on what was granted to the key by organization administrators
- 'Multiple regional endpoints available: app.strongdm.com (US), app.uk.strongdm.com
  (UK), app.eu.strongdm.com (EU)'
- Uses request signatures modeled on the AWS V4 signing process instead of bearer
  tokens
- SDKs handle the gRPC calls and signing process automatically
- API supports filtering language for narrowing results from Read operations
- Results are automatically paginated by the SDKs
- History domain objects show changes over time with 30-day default retention (13
  months with Enterprise plan)
- Snapshots allow viewing domain object state at specified times in the past
- Results may be truncated to 20 rows without Enterprise plan
- StrongDM is a proxy that manages and audits access to databases, servers, clusters,
  and web apps
- The local client tunnels requests through a single TLS 1.2-secured TCP connection
- Gateways decrypt credentials on behalf of end users and deconstruct requests for
  auditing
- Configuration is pushed down to the end user's local client and updated in real-time
- Supports Mac, Windows, and Linux workstations
- Provides real-time access analytics and threat detection
- Comprehensive audit trails for compliance reporting
- Behavioral analytics for anomaly detection
- This appears to be a website navigation page for StrongDM rather than API documentation
- No API configuration details, endpoints, or authentication methods are documented
  in this content
- Supports 100+ protocols
- Supports cloud vaults (AWS, GCP, Azure, HashiVault)
- Legacy vault support (CyberArk PAM, CyberArk, Conjur, Delinea)
- 13-month data retention for Enterprise plan
- 3rd party certificate authority support
- GovCloud plan runs in AWS GovCloud for regulated workloads
- Seamlessly integrates with popular identity and HR systems
- Automatically grant or revoke access as users join, change roles, or leave the organization
- Real-time updates trigger immediate adjustments to access permissions
- Maintains detailed, tamper-proof logs of all access changes
- Aligns with compliance frameworks such as SOC 2, NIST, and ISO 27001
- Automates credential rotation and vaulting
- Provides real-time access control for privileged credentials
- Supports NIST 800-53 and ISO 27001 compliance
- Can augment legacy PAM systems
- Zero Trust PAM solution that integrates policy-based access control
- Enforces granular, dynamic policies to manage access to infrastructure resources
- Designed for secure access across entire infrastructure stack
- Real-time monitoring and control of privileged sessions
- All privileged sessions are recorded and securely stored
- Supports compliance with SOC 2 and ISO 27001
- Captures every query and keystroke for database sessions
- Can pause or terminate sessions immediately
- Integrates with multiple clouds, databases, and applications
- Supports 40+ database protocols natively
- Centralizes all database access into one platform
- Uses RBAC, ABAC, and PBAC for access control
- Provides Just-In-Time access with automated or human approvals
- Desktop app provides unified access to all resources
- Provides real-time access monitoring and auditing capabilities
- Supports automated compliance reporting for SOC 2, ISO 27001, HIPAA
- Integrates with legacy PAM solutions
- StrongDM is a Zero Trust PAM platform that provides real-time permission management
- Offers automated permission workflows and centralized access control
- Built to scale with growing organizations and complex infrastructure
- Helps with SOC 2 compliance through automated access reviews and audit trails
- Can enhance or replace legacy PAM solutions
- Integrates with multiple cloud environments, databases, and applications
- Provides privileged access management for databases with centralized access control
- Offers comprehensive session monitoring and audit trails for compliance
- Implements action control for precise database governance beyond basic access control
- Supports compliance frameworks including ISO 27001 and SOC 2
- Can replace or augment legacy PAM systems
- Integrates with various technologies including Linux, PostgreSQL, and Okta
- Eliminates the need for legacy RADIUS and TACACS+ protocols
- Provides Just-in-Time (JIT) Access and session recording for network devices
- Integrates network devices into Zero Trust PAM platform
- Supports multi-cloud infrastructure access
- Designed to fit your environment with seamless integration
- Centralized access across all major cloud providers
- Dynamic scaling for cloud workloads with automatic adaptation of access controls
- Compliance support for frameworks like SOC 2 and ISO 27001
- Seamless integration with existing technology stacks
- Zero Trust PAM dynamically adjusts access in real-time to align with changing Kubernetes
  environments
- Provides namespace-level segmentation for isolated access control
- Applies secure access policies directly to Kubernetes API servers
- Seamlessly integrates with existing technology stacks and legacy PAM solutions
- Provides privileged access management for servers across cloud, on-premises, and
  hybrid environments
- Supports real-time monitoring and session management
- Includes automated credential management with secure storage and rotation
- Offers compliance framework alignment with ISO 27001
- Can replace or augment legacy PAM solutions
- Adaptive policies adjust permissions instantly based on changing roles, resources,
  or contextual factors like time and location
- Automates and enforces the principle of least privilege across entire infrastructure
- Provides detailed, tamper-proof logs and consistent policy enforcement for compliance
- Seamlessly integrates with existing technology stacks including multiple clouds,
  databases, and applications
- Context-aware policies automatically adjust access controls based on factors like
  user location, device, and role
- Provides real-time adaptive security with dynamic permissions
- Supports Zero Trust principles with continuous authorization
- Offers fine-grained policy-based action control for databases
- Provides policy-based permissions for granular access control
- Real-time action auditing and monitoring capabilities
- Supports compliance frameworks including SOC 2 and NIST CSF
- Provides just-in-time access management for third-party vendors
- Supports real-time access revocation
- Includes comprehensive audit logging for compliance
- Policy-based action control offers continuous zero trust authorization
- Supports fine-grained, real-time control over database actions
- Requires justification for actions to deepen audit trail
- Workflow-approved actions add additional layer of control
- MFA challenges can be required for specific actions
- Query limitation available to limit maximum number of rows
- Action-specific permissions can forbid or permit specific database actions
- Support for Postgres databases specifically mentioned
- Centralized policy management with distributed enforcement across all systems
- Fine-grained controls enable precise permissions for users
- Zero Trust compliance with real-time policy enforcement
- Context-based policies continuously monitor behavior and stop unsanctioned actions
  in real-time
- Supports every protocol
- Credential-less access
- Just-in-time all the time
- Granular audit logs
- Actionable Insights
- Centralize access management with one solution that connects to cloud, databases,
  servers, clusters, and web applications
- Users no longer need to input keys and credentials to connect to their resources
- Eliminate unnecessary standing access to your resources on-premises and in the cloud
- Enhance observability with a record of every activity and query
- Supports privileged access management across cloud, databases, servers, clusters,
  and web applications
- Provides just-in-time access and credential-less authentication
- Captures granular audit logs for compliance and security monitoring
- Documentation focuses on policy playbooks and access management features
- API documentation referenced but specific endpoints not detailed in provided content
- Multiple concurrent StrongDM sessions on a shared Windows workstation are not supported
- 'Standard connection limits: Linux-based: 1,024 resources, MacOS: 256 resources,
  Windows: 512 resources'
- Changes in access grants are shown in real time
- Resource Center shows up to 25 resources at a time and supports infinite scroll
- If SSO is enabled for your organization, you must log in via SSO unless you are
  a non-SSO user
- Secure Access Maturity Model (SAMM) provides step-by-step progression for infrastructure
  access maturity
- 'Four levels: Identity-Based Access, Privileged Access, Just-in-Time Access, and
  Dynamic Access'
- Supports Zero Trust and Dynamic Access Management approach
- Traditional PAM lacks support for cloud resources, Kubernetes clusters, containers,
  and certain databases
- StrongDM provides foundation to meet FedRAMP requirements for Access Control, Audit
  and Accountability, Identification and Authentication, Incident Response, Personnel
  Security, Risk Assessment, and System and Communications Protection
- This is a marketing website for StrongDM's privileged access management platform,
  not an API documentation
- Contains information about MITRE ATT&CK for Containers solution guide
- Uses cookies for site optimization and tracking
- StrongDM is SOC 2 Type 2-certified
- Helps organizations achieve SOC 2 certification
- Supports Logical & Physical Access Controls, System Operations, and Change Management
  requirements
- Compliance with HIPAA Security Standards including Access Control, Audit Controls,
  Integrity, and Transmission Security
- Helps protect electronic PHI (Protected Health Information)
- Provides Zero Trust Privileged Access Management (PAM)
- Focuses on NYDFS compliance with principle of least privilege
- Offers just-in-time access and comprehensive audit trails
- Includes real-time monitoring and incident response capabilities
- Provides Strong Customer Authentication (SCA) with Multi-Factor Authentication (MFA)
- Implements granular access policies for least-privilege access controls
- Offers comprehensive audit trails and automated compliance reporting
- Manages third-party access for vendor control
- Provides real-time monitoring and incident response capabilities
- Provides centralized access management and compliance reporting
- Supports real-time monitoring and incident response
- Offers comprehensive audit trails for compliance requirements
- StrongDM integrates out of the box with any identity provider via OpenID Connect
  (OIDC) protocols
- Creates a software-defined network (SDN) that proxies client traffic through a centralized
  gateway
- Strong Policy Engine powered by Cedar Policy Language supports sub-millisecond policy
  evaluations
- Device Trust integrates with security solutions like CrowdStrike and SentinelOne
- Uses OAuth2 with refresh token — requires setup of connected app
- Some objects like Contact may return nulls in deeply nested fields
- Active Directory is not a PAM tool on its own but can be integrated
- Manual PAM solutions are insufficient in modern environments
- PAM tools provide centralized, secure, and observable platform for sensitive access
- PAM encompasses policies, strategies, and technologies for controlling elevated
  access
- Enforces principle of least privilege to reduce attack surface
- Includes both human and service account management
- Traditional PAM deployments may have gaps requiring augmentation
- SAML is an XML-based authentication protocol for identity federation
- SAML 2.0 is the latest and final version, ratified in March 2005
- Most widely adopted federated identity standard for authentication
- Primarily used for enterprise and government applications
- Facilitates single sign-on (SSO) across multiple domains
- OAuth 2.0 protocol enables third-party clients outside your organization to access
  protected resources through an access token
- SAML simplifies web-based SSO for compliance and security with digital signatures
  instead of passwords
- SCIM shares user attributes across tools and automates access provisioning, particularly
  in cloud environments
- MFA uses biometrics or a code sent to a personal device to authenticate or confirm
  that user's identity
- SSO allows users to log in to multiple IT systems and applications with one set
  of login credentials
- Framework based on Authentication, Authorization, and Accounting (AAA) model
- Supports identity verification, access lifecycle management, and compliance auditing
- Includes user monitoring and activity logging capabilities
- SASE combines network and security-as-a-service functions into a single cloud-based
  service
- Architecture shifts from traffic-flow-centric to identity-centric security
- Provides unified cloud-native network and security services
- Enforces security where the traffic is—at user and application endpoints
- Users connect to nearest available Point of Presence (PoP) for services
- Ensure the use of multi-factor authentication for enhanced security.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Dynamic Access Management (DAM) is focused on managing access for all technical
  users.
- Access must be secure and auditable.
- Dynamic access management solutions reduce the time for audit responses, investigations,
  and resolution by enabling security and compliance teams to easily answer who did
  what, where, and when.
- PAM tools enhance security by managing privileged accounts.
- Just-in-Time access minimizes credential misuse risks.
- StrongDM supports a journey to Zero Trust access.
- ISO 27001 certification is optional but recommended for organizations managing sensitive
  data.
- StrongDM manages and audits access to infrastructure.
- HIPAA compliance is crucial for protecting patient privacy and securing protected
  health information.
- Compliance requires understanding both Privacy and Security Rules.
- A compliance officer should be designated to oversee adherence.
- Good data hygiene is essential to ensure ongoing PCI compliance
- Companies of all sizes benefit from maintaining smart data practices
- Observability is defined as a measure of how well the internal states of a system
  can be inferred from knowledge of its external outputs.
- Founded in 2015, we help organizations manage and audit access to their databases,
  servers, clusters, and web applications.
- Some endpoints may require additional permissions for access.
- Remote work company
- 100% employer paid insurance premiums
- Requires setup of connected app in StrongDM
- Some API responses may include pagination
- Ensure proper permissions are set for accessing the API
- StrongDM maintains a Responsible Disclosure Program to allow anyone to securely
  report discovered vulnerabilities in our platform.
- StrongDM was built from the ground up with security as the top priority.
- Integration requires OAuth2 setup.
- Ensure proper scopes are granted for data access.
- Requires OAuth 2.0 setup in StrongDM
- Data may be subject to rate limits
- Cloggy access management may lead to data loss
- Some parts of the site will not then work if strictly necessary cookies are blocked.
- No credit card needed.
- StrongDM seamlessly integrates with existing tools and the policies can be applied
  without requiring you to recode your apps or move your secrets.
- API supports various protocols including DBs, Amazon EC2, MongoDB, Redis, Kubernetes,
  and Docker.
- No install on servers
- Credentials / keys are never exposed to end users
- High availability
- Disaster recovery
- Your CSM connects you with technical resources, product specialists, and best practices
  to drive success.
- Proactive engagement ensures you identify and solve challenges before they become
  roadblocks.
- Uses OAuth2 with refresh token — requires setup of connected app in StrongDM
- StackAdapt implemented StrongDM for access management.
- StrongDM helps achieve SOC 2 Type II compliance.
- Zefr Slashes Administrative Overhead by 88%
- StrongDM is Simple to Deploy
- Speed up response times with centralized visibility into all infrastructure-access
  activities.
- Don’t let failed compliance audits hurt your business.
- Uses OAuth2 with refresh token — requires setup of connected app in Coveo
- Ensure to handle token expiration properly.
- Clearcover remains committed to the industry’s best security practices.
- Utilizes OAuth2 with refresh token — requires setup of a connected app in StrongDM.
- Ensure proper OAuth2 configuration for secure access
- API resource paths may change; refer to the latest documentation
- Requires proper setup of OAuth2 clients in StrongDM.
- Requires proper OAuth setup to access resources
- OAuth2 with refresh token is required for accessing the API.
- Requires an active StrongDM account to access the API.
- Some objects may return nulls in deeply nested fields
- Requires setup of OAuth2 credentials in StrongDM.
- Some API endpoints may have rate limits.
- Ensure proper permissions are set for the API key
- Rate limiting may apply based on usage
- Some API responses may contain empty fields
- Requires setup of OAuth2 client in StrongDM
- Requires proper setup of OAuth app in StrongDM.
- OAuth2 implementation requires client setup in StrongDM.
- Some user data may require special permissions to access.
- Some objects may have rate limits
- Requires setup of OAuth2 for access.
- Requires OAuth setup for authentication
- Documentation may not cover all endpoints available.
- Rate limits are in place and vary by endpoint.
- Requires setup of OAuth2 credentials in StrongDM
- Some endpoints may have rate limits
errors:
- 'INVALID_CREDENTIALS: Check your client ID and secret.'
- 'ACCESS_DENIED: Ensure your user has the necessary permissions.'
- Unauthorized access to PHI may result in civil and criminal penalties.
- '403 Forbidden: Check user permissions'
- '404 Not Found: Verify endpoint path'
- '429 Too Many Requests: Throttle API calls'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your OAuth token'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: Endpoint may be incorrect'
- '403 Forbidden: Check your API key and permissions'
- '404 Not Found: Verify the endpoint URL'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Check your OAuth token.'
- '403 Forbidden: Insufficient permissions for this resource.'
- '401 Unauthorized: Check your credentials'
- '429 Too Many Requests: Rate limit exceeded'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check your credentials.'
- '403 Forbidden: You do not have permission to access this resource.'
- '401 Unauthorized: Check your credentials and scopes.'
- '403 Forbidden: Ensure you have the necessary permissions.'
- '401 Unauthorized: Verify OAuth token and permissions.'
- '401 Unauthorized: Check credentials and permissions'
- '403 Forbidden: Verify access rights'
- '404 Not Found: Verify the endpoint path'
- '401 Unauthorized: Check client ID, secret, and token.'
- '429 Too Many Requests: Rate limit exceeded. Try again later.'
- '401 Unauthorized: Check your OAuth token and permissions'
- '429 Too Many Requests: Rate limit exceeded, slow down your requests'
- '401 Unauthorized: Check your OAuth token or client credentials.'
- '403 Forbidden: Ensure you have the right permissions.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '429 Too Many Requests: Reduce frequency of requests.'
- '401 Unauthorized: Verify API key or OAuth token.'
- '404 Not Found: Check endpoint path.'
- '403 Forbidden: Check API key permissions'
- '500 Internal Server Error: Try again later'
- '401 Unauthorized: Check your token'
- '404 Not Found: Ensure the endpoint is correct'
- '404 Not Found: Ensure the endpoint path is correct.'
- 'INVALID_CREDENTIALS: Ensure client_id and client_secret are correct.'
- 'ACCESS_DENIED: Check user permissions.'
- 'NOT_FOUND: Verify endpoint and resource existence.'
- '429 Too Many Requests: Throttle your requests'
- '401 Unauthorized: Check your API key or token'
- '404 Not Found: Verify the endpoint path.'
- '401 Unauthorized: Check your credentials and permissions'
- '403 Forbidden: Check permissions for the requested resource.'
- '500 Internal Server Error: Retry the request after a delay.'
- '429 Too Many Requests: Reduce the frequency of API calls'
- '401 Unauthorized: Verify OAuth2 scopes or token expiration'
auth_info:
  mentioned_objects:
  - Cedar-based policy engine
  - Zero Trust approach
  - OAuth
  - API key
  - Access Workflows
  - Open APIs
  - Authentication
  - Admin UI
  - Gateway
  - Local Client
  - Federated Identity
  - IdP
  - Strong Vault
  - AWS
  - GCP
  - Azure
  - HashiVault
  - CyberArk PAM
  - CyberArk
  - Conjur
  - Delinea
  - Zero Trust PAM
  - Authorization
  - StrongDM Platform
  - Policy Engine
  - Access Management
  - SSO
  - OauthToken
  - Service Account
  - MFA
  - AuthProvider
  - NamedCredential
  - OpenID Connect (OIDC)
  - Identity Provider
  - Cedar Policy Language
  - CrowdStrike
  - SentinelOne
  - Active Directory
  - RBAC
  - SSH keys
  - API keys
  - tokens
  - certificates
  - OAuth 2.0
  - SAML
  - SCIM
  - IDaaS
  - Identity as a Service
  - Multi-Factor Authentication
  - Single Sign-On
  - Zero Trust
  - ZTNA
  - Identity-centric security
  - User authentication
  - OAuthToken
  - OAuth2
  - API Key
  - AccessRequest
  - Session
  - AccessToken
  - OAuthClient
  - User
client:
  base_url: https://app.strongdm.com
source_metadata: null
