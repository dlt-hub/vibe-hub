resources:
- name: streams
  endpoint:
    path: /streams/video
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /streams/video
    method: GET
    data_selector: data.result
    params:
      offset: 0
      limit: 25
- name: organization
  endpoint:
    path: /organization
    method: GET
    data_selector: details
- name: team
  endpoint:
    path: /organization/team
    method: GET
    data_selector: members
- name: web_component
  endpoint:
    path: /streams/docs/embed-streams-web-component
    method: GET
    data_selector: streams
    params: {}
- name: BitmovinStream
  endpoint:
    path: /streams/docs/streams-on-android
    method: GET
    data_selector: streams
- name: stream_details
  endpoint:
    path: /streams/details
    method: GET
    data_selector: streams
    params: {}
- name: live_streams
  endpoint:
    path: /streams/live
    method: GET
    data_selector: liveStreams
    params: {}
- name: Streams public URL
  endpoint:
    path: /<StreamsID>/share
    method: GET
- name: poster_image
  endpoint:
    path: /<Stream_ID>/poster
    method: GET
- name: embed
  endpoint:
    path: /{STREAM_ID}/embed
    method: GET
- name: share
  endpoint:
    path: /share
    method: GET
- name: advertisement
  endpoint:
    path: /streams/ads
    method: POST
    data_selector: ads
- name: signing_keys
  endpoint:
    path: /signing-keys
    method: POST
    data_selector: ''
    params: {}
- name: signing_keys_get
  endpoint:
    path: /signing-keys
    method: GET
    data_selector: ''
    params: {}
- name: signing_keys_delete
  endpoint:
    path: /signing-keys/{keyId}
    method: DELETE
    data_selector: ''
    params: {}
- name: create_live_stream
  endpoint:
    path: /streams/live/create
    method: POST
    data_selector: response
    params: {}
- name: direct_file_upload
  endpoint:
    path: /v1/encoding/inputs/direct-file-upload
    method: POST
    data_selector: data.result
    params: {}
- name: create_stream
  endpoint:
    path: /v1/streams/video
    method: POST
    data_selector: data.result
    params: {}
- name: streams
  endpoint:
    path: /streams/reference/poststreamsvideo
    method: POST
- name: create_streams
  endpoint:
    path: /streams/reference/poststreamsvideo
    method: POST
- name: performance_metrics
  endpoint:
    path: /streams/docs/streams-performance
    method: GET
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
    params: {}
- name: streams
  endpoint:
    path: /v1/streams
    method: GET
    data_selector: streams
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: videos
    params: {}
- name: analytics
  endpoint:
    path: /v1/analytics
    method: GET
    data_selector: data
    params: {}
- name: LicenseRequest
  endpoint:
    path: /license/request
    method: POST
    data_selector: request
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
- name: playback
  endpoint:
    path: /playback
    method: GET
    data_selector: data
- name: analytics
  endpoint:
    path: /analytics/v1
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: results
    params: {}
- name: analytics
  endpoint:
    path: /v1/analytics
    method: GET
    data_selector: records
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: remote_control
  endpoint:
    path: /player/web/8/docs/interfaces/RemoteControl.GoogleCastRemoteControlConfig.html
    method: GET
    data_selector: remotecontrol
    params: {}
- name: Subtitles and Captions Support
  endpoint:
    path: /playback/docs/subtitles-captions
    method: GET
    data_selector: subtitles
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
    params: {}
- name: playback
  endpoint:
    path: /playback
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /path/to/analytics/data
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
    params: {}
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: data
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
- name: playback
  endpoint:
    path: /playback
    method: GET
    data_selector: data
- name: AnalyticsData
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
- name: analytics_data
  endpoint:
    path: /v1/analytics/data
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
    params: {}
- name: playback
  endpoint:
    path: /playback
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /v1/analytics/data
    method: GET
    data_selector: data
    params: {}
- name: analytics_errors
  endpoint:
    path: /v1/analytics/errors
    method: GET
    data_selector: errors
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: analytics_data
  endpoint:
    path: /api/v1/analytics
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: data
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
- name: playback
  endpoint:
    path: /playback
    method: GET
    data_selector: data
- name: Chromecast Support
  endpoint:
    path: /how-to-enable-chromecast-support
    method: GET
    data_selector: content
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
- name: analytics
  endpoint:
    path: /analytics
    method: POST
    data_selector: analyticsData
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: vr_example
  endpoint:
    path: /vr-player/playhouse-vr/mpds/105560.mpd
    method: GET
    data_selector: source
    params: {}
- name: analytics_data
  endpoint:
    path: /v1/analytics/data
    method: GET
    data_selector: records
    params: {}
- name: Widevine Security Levels
  endpoint:
    path: /playback/docs/widevine-security-levels-in-depth
    method: GET
    data_selector: levels
- name: Robustness Strings
  endpoint:
    path: /playback/docs/understanding-robustness-strings
    method: GET
    data_selector: robustness
- name: Security Level Configuration
  endpoint:
    path: /playback/docs/setting-the-security-level-with-videoRobustness
    method: GET
    data_selector: videoRobustness
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: streams
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: analytics
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
- name: analytics
  endpoint:
    path: /analytics/v1/events
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
    params: {}
- name: playback
  endpoint:
    path: /playback
    method: GET
    data_selector: data
    params: {}
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: stream
  endpoint:
    path: /streams
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: data
- name: subtitle_selection_menu
  endpoint:
    path: /playback/docs/subtitle_selection_menu
    method: GET
    data_selector: tracks
    params: {}
- name: player
  endpoint:
    path: /playback
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
- name: playback
  endpoint:
    path: /playback
    method: POST
    data_selector: data
- name: remote_control
  endpoint:
    path: /playback/docs/streamlab-api
    method: GET
    data_selector: remotecontrol
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: analytics
  endpoint:
    path: /services/data/vXX.X/analytics
    method: GET
    data_selector: records
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
- name: analytics_events
  endpoint:
    path: /analytics/events
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: bitmovin_player
  endpoint:
    path: /playback/docs/configuration-analytics
    method: GET
    data_selector: analytics
    params: {}
- name: bitmovin_analytics_collector
  endpoint:
    path: /playback/docs/setup-analytics
    method: GET
    data_selector: collector
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: AnalyticsConfig
  endpoint:
    path: /analytics/config
    method: POST
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: metrics
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: data
    params: {}
- name: analytics_config
  endpoint:
    path: /setup-analytics
    method: POST
    data_selector: config
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: data
    params:
      incremental: timestamp
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
- name: analytics_config
  endpoint:
    path: /analytics/config
    method: POST
    data_selector: config
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
    params: {}
- name: analytics_config
  endpoint:
    path: /analytics/config
    method: POST
    data_selector: config
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: analytics_config
  endpoint:
    path: /playback/docs/configuration-analytics
    method: GET
    data_selector: analyticsConfig
- name: analytics_data
  endpoint:
    path: /services/data/vXX.X/analytics
    method: GET
    data_selector: records
- name: analytics_config
  endpoint:
    path: /analytics/config
    method: POST
    data_selector: config
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
- name: playback
  endpoint:
    path: /playback
    method: GET
    data_selector: data
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: SSAI Tracking
  endpoint:
    path: /playback/docs/ssai-tracking
    method: POST
    data_selector: data
    params: {}
- name: Ad Quartile Tracking
  endpoint:
    path: /playback/docs/ad-quartile-tracking
    method: POST
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /v1/analytics/data
    method: GET
    data_selector: records
- name: cookie_configuration
  endpoint:
    path: /playback/docs/streamlab-api
    method: GET
    data_selector: config
    params: {}
- name: analytics_data
  endpoint:
    path: /v1/analytics/data
    method: GET
    data_selector: records
- name: streams
  endpoint:
    path: /analytics/streams
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: data
- name: analytics_data
  endpoint:
    path: /v1/analytics/data
    method: GET
    data_selector: records
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: analytics_export_task
  endpoint:
    path: /analytics/exports/
    method: POST
    data_selector: exportTask
    params: {}
- name: get_export_task
  endpoint:
    path: /analytics/exports/YOUR_ANALYTICS_EXPORT_TASK_ID
    method: GET
    data_selector: exportTask
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
- name: playback
  endpoint:
    path: /playback
    method: GET
    data_selector: data
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
- name: s3_role_based_output
  endpoint:
    path: /v1/analytics/outputs/s3-role-based
    method: POST
    data_selector: output
    params: {}
- name: get_s3_role_based_output
  endpoint:
    path: /v1/analytics/outputs/s3-role-based/{output_id}
    method: GET
    data_selector: output
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: analytics_output
  endpoint:
    path: /v1/analytics/outputs/gcs-service-account
    method: POST
    data_selector: id
    params: {}
- name: analytics_output
  endpoint:
    path: /v1/analytics/outputs/azure
    method: POST
    data_selector: id
    params: {}
- name: analytics_event
  endpoint:
    path: /analytics/events
    method: GET
    data_selector: events
    params: {}
- name: analytics
  endpoint:
    path: /playback/docs/analytics
    method: GET
    data_selector: records
- name: analytics
  endpoint:
    path: /api/v3/analytics
    method: GET
    data_selector: records
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
- name: playback
  endpoint:
    path: /playback
    method: GET
    data_selector: data
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: audience_metrics
  endpoint:
    path: /metrics/audience
    method: GET
    data_selector: metrics
    params: {}
- name: quality_of_experience_metrics
  endpoint:
    path: /metrics/quality
    method: GET
    data_selector: metrics
    params: {}
- name: server_side_advertising_metrics
  endpoint:
    path: /metrics/server-side-ads
    method: GET
    data_selector: metrics
    params: {}
- name: analytics_data
  endpoint:
    path: /v1/analytics/data
    method: GET
    data_selector: results
    params: {}
- name: analytics_export_tasks
  endpoint:
    path: /playback/reference/getanalyticsexporttasks
    method: GET
    data_selector: records
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: CampaignMember
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: Contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: analytics_data
  endpoint:
    path: /v1/analytics/data
    method: GET
    data_selector: records
    params: {}
- name: average_view_time
  endpoint:
    path: /v1/analytics/average-view-time
    method: GET
    data_selector: data
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: analytics_data
  endpoint:
    path: /v1/analytics/data
    method: GET
    data_selector: data
    params: {}
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /analytics/v1/events
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: sessions
  endpoint:
    path: /analytics/v1/sessions
    method: GET
    data_selector: records
    params: {}
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: data
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: analytics_data
  endpoint:
    path: /v1/analytics/data
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: analytics
  endpoint:
    path: /analytics/v1
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
    params: {}
- name: playback
  endpoint:
    path: /playback
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: stream
  endpoint:
    path: /streams
    method: GET
    data_selector: data
    params: {}
- name: encoding
  endpoint:
    path: /encodings
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: buffering_metrics
  endpoint:
    path: /analytics/buffering
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /v1/analytics/data
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: analytics_data
  endpoint:
    path: /v1/analytics/data
    method: GET
    data_selector: records
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: analytics_data
  endpoint:
    path: /v1/analytics/data
    method: GET
    data_selector: records
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
- name: player-config
  endpoint:
    path: /bitmovinplayer.js
    method: GET
    data_selector: config
    params: {}
- name: source-config
  endpoint:
    path: /source
    method: POST
    data_selector: source
    params: {}
- name: analytics_data
  endpoint:
    path: /path/to/analytics/data
    method: GET
    data_selector: records
- name: index.html
  endpoint:
    path: https://cdn.bitmovin.com/player/web/8/modules/bitmovinplayer-core.js
    method: GET
    data_selector: ''
    params: {}
- name: config.xml
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      privileges:
      - http://developer.samsung.com/privilege/drmplay
      - http://tizen.org/privilege/drmplay
      - http://tizen.org/privilege/content.write
      - http://tizen.org/privilege/content.read
      - http://tizen.org/privilege/tv.audio
      - http://tizen.org/privilege/tv.channel
      - http://tizen.org/privilege/tv.display
      - http://tizen.org/privilege/tv.inputdevice
      - http://tizen.org/privilege/tv.window
      allow_navigation:
      - demo.bitmovin.com
      - bitmovin-a.akamaihd.net
      - fonts.googleapis.com
      - cdn.bitmovin.com
- name: webos_player
  endpoint:
    path: /webos/player
    method: GET
    data_selector: resources
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: streams
- name: playback
  endpoint:
    path: /playback
    method: GET
    data_selector: playback
- name: PlayReady
  endpoint:
    path: /playready
    method: POST
    data_selector: source
    params: {}
- name: Widevine
  endpoint:
    path: /widevine
    method: POST
    data_selector: source
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
    params: {}
- name: playback
  endpoint:
    path: /playback
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /v1/analytics/data
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: DRM content
  endpoint:
    path: /docs/interfaces/core_config.sourceconfig.html
    method: GET
    data_selector: source
    params: {}
- name: analytics
  endpoint:
    path: /v1/analytics
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
- name: PlayerConfig
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: drm
  endpoint:
    path: /playback/docs/drm-content-protection
    method: GET
    data_selector: drm
- name: Widevine
  endpoint:
    path: https://widevine-proxy.appspot.com/proxy
    method: POST
    data_selector: license
    params: {}
- name: PlayReady
  endpoint:
    path: https://playready.directtaps.net/pr/svc/rightsmanager.asmx?PlayRight=1&ContentKey=EAtsIJQPd5pFiRUrV9Layw==
    method: POST
    data_selector: license
    params: {}
- name: analytics_data
  endpoint:
    path: /api/analytics/data
    method: GET
    data_selector: records
    params: {}
- name: manifest
  endpoint:
    path: /ETV_BIG_BUCK_BUNNY_1_FEATURE.ism/manifest(format=m3u8-aapl)
    method: GET
    data_selector: records
    params: {}
- name: widevine
  endpoint:
    path: /dashes
    method: GET
    data_selector: drm.widevine
    params: {}
- name: playready
  endpoint:
    path: /playreadys
    method: GET
    data_selector: drm.playready
    params: {}
- name: fairplay
  endpoint:
    path: /fairplays
    method: GET
    data_selector: drm.fairplay
    params: {}
- name: primetime
  endpoint:
    path: /primetimes
    method: GET
    data_selector: drm.primetime
    params: {}
- name: access
  endpoint:
    path: /accesses
    method: GET
    data_selector: drm.access
    params: {}
- name: tvkey
  endpoint:
    path: /tvkeys
    method: GET
    data_selector: drm.tvkey
    params: {}
- name: analytics_data
  endpoint:
    path: /services/data/vXX.X/sobjects/AnalyticsData
    method: GET
    data_selector: records
    params: {}
- name: widevine
  endpoint:
    path: /acquire-license/widevine
    method: POST
    data_selector: LA_URL
- name: playready
  endpoint:
    path: /acquire-license/playready
    method: POST
    data_selector: LA_URL
- name: fairplay
  endpoint:
    path: /certificate/fairplay
    method: GET
    data_selector: certificateURL
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
- name: widevine
  endpoint:
    path: /widevine
    method: POST
    data_selector: drm.widevine
    params: {}
- name: playready
  endpoint:
    path: /playready
    method: POST
    data_selector: drm.playready
    params: {}
- name: fairplay
  endpoint:
    path: /fairplay
    method: POST
    data_selector: drm.fairplay
    params: {}
- name: analytics_data
  endpoint:
    path: /v1/analytics/data
    method: GET
    data_selector: records
- name: widevine
  endpoint:
    path: /widevine
    method: POST
    data_selector: drm.widevine
    params: {}
- name: playready
  endpoint:
    path: /playready
    method: POST
    data_selector: drm.playready
    params: {}
- name: fairplay
  endpoint:
    path: /fairplay
    method: POST
    data_selector: drm.fairplay
    params: {}
- name: widevine
  endpoint:
    path: /widevine/license
    method: POST
    data_selector: license
    params: {}
- name: playready
  endpoint:
    path: /playready/license
    method: POST
    data_selector: license
    params: {}
- name: fairplay
  endpoint:
    path: /fairplay/license
    method: POST
    data_selector: license
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: widevine
  endpoint:
    path: /proxy?pX=EZDRM_ACCOUNT_ID
    method: GET
    data_selector: drm.widevine
    params: {}
- name: playready
  endpoint:
    path: /cency/preauth.aspx?pX=EZDRM_ACCOUNT_ID
    method: GET
    data_selector: drm.playready
    params: {}
- name: fairplay
  endpoint:
    path: /api/licenses/CONTENT_ID
    method: GET
    data_selector: drm.fairplay
    params: {}
- name: Widevine
  endpoint:
    path: DASH_MANIFEST_URL
    method: GET
    data_selector: drm.widevine
    params: {}
- name: PlayReady
  endpoint:
    path: DASH_MANIFEST_URL
    method: GET
    data_selector: drm.playready
    params: {}
- name: FairPlay
  endpoint:
    path: DASH_MANIFEST_URL
    method: GET
    data_selector: drm.fairplay
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: drm_widevine
  endpoint:
    path: /widevine
    method: POST
    data_selector: source
    params:
      dash: DASH_MANIFEST_URL
      hls: HLS_MANIFEST_URL
      drm:
        widevine:
          LA_URL: PALLYCON_LA_URL
          headers:
            pallycon-customdata-v2: PALLYCON_LICENSE_TOKEN
          mediaKeySystemConfig:
            persistentState: required
          serverCertificate: ''
- name: drm_playready
  endpoint:
    path: /playready
    method: POST
    data_selector: source
    params:
      dash: DASH_MANIFEST_URL
      hls: HLS_MANIFEST_URL
      drm:
        playready:
          LA_URL: PALLYCON_LA_URL
          headers:
            pallycon-customdata-v2: PALLYCON_LICENSE_TOKEN
- name: drm_fairplay
  endpoint:
    path: /fairplay
    method: POST
    data_selector: source
    params:
      dash: DASH_MANIFEST_URL
      hls: HLS_MANIFEST_URL
      drm:
        fairplay:
          LA_URL: PALLYCON_LA_URL
          headers:
            pallycon-customdata-v2: PALLYCON_LICENSE_TOKEN
          certificateURL: PALLYCON_FPS_CERT_URL
          prepareContentId: function (contentId) { return contentId.substring(contentId.indexOf('skd://')
            + 6); }
          prepareCertificate: function (rawResponse) { var responseText = String.fromCharCode.apply(null,
            new Uint8Array(rawResponse)); var raw = window.atob(responseText); var
            rawLength = raw.length; var certificate = new Uint8Array(new ArrayBuffer(rawLength));
            for (var i = 0; i < rawLength; i++) certificate[i] = raw.charCodeAt(i);
            return certificate; }
          useUint16InitData: true
- name: drm_protected_content
  endpoint:
    path: /drm/protected/content
    method: POST
    data_selector: license
    params: {}
- name: widevine_license
  endpoint:
    path: <NAGRA_WIDEVINE_LICENSE_SERVER_URL>
    method: POST
    data_selector: license
    params: {}
- name: renewal_license
  endpoint:
    path: <NAGRA_LICENSE_RENEWAL_SERVER_URL>
    method: POST
    data_selector: license
    params: {}
- name: content_token
  endpoint:
    path: <NAGRA_CONTENT_TOKEN_URL>
    method: POST
    data_selector: content_token
    params: {}
- name: ssm_setup
  endpoint:
    path: <NAGRA_SSM_SETUP_URL>
    method: POST
    data_selector: sessionToken
    params: {}
- name: ssm_teardown
  endpoint:
    path: <NAGRA_SSM_TEARDOWN_URL>
    method: POST
    data_selector: ''
    params: {}
- name: getPlaybackContext
  endpoint:
    path: /kaltura/api_v3/service/asset/action/getPlaybackContext
    method: GET
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: Widevine
  endpoint:
    path: /drm/widevine
    method: POST
    data_selector: license
    params: {}
- name: PlayReady
  endpoint:
    path: /drm/playready
    method: POST
    data_selector: license
    params: {}
- name: FairPlay
  endpoint:
    path: /drm/fairplay
    method: POST
    data_selector: license
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
    params: {}
- name: advertising
  endpoint:
    path: /player/advertising
    method: GET
    data_selector: adBreaks
- name: ad_tags
  endpoint:
    path: /playback/docs/setting-up-ads-with-the-web-player
    method: GET
    data_selector: ad_tags
    params: {}
- name: player_setup
  endpoint:
    path: /playback/docs/player-setup-and-ad-related-configuration-options
    method: GET
    data_selector: player_setup
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: data
    params: {}
- name: player
  endpoint:
    path: /player
    method: GET
    data_selector: playerConfig
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
- name: adsRenderingSettings
  endpoint:
    path: /ads/render/settings
    method: POST
    data_selector: settings
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: data
    params: {}
- name: PlayerConfig
  endpoint:
    path: /player/config
    method: POST
    data_selector: config
    params: {}
- name: player_config
  endpoint:
    path: /player/config
    method: GET
    data_selector: config
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
    params: {}
- name: player
  endpoint:
    path: /playback/docs/streamlab-api
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /services/data/vXX.X/analytics
    method: GET
    data_selector: records
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
    params: {}
- name: subtitles
  endpoint:
    path: /playback/docs/adding-external-subtitle-tracks
    method: POST
    data_selector: subtitles
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
    params: {}
- name: Analytics module
  endpoint:
    path: /analytics
    method: GET
    data_selector: records
    params: {}
- name: Config.ui
  endpoint:
    path: /config/ui
    method: GET
    data_selector: records
    params: {}
- name: ViewMode API
  endpoint:
    path: /viewmode
    method: GET
    data_selector: records
    params: {}
- name: SourceConfig.subtitleTracks
  endpoint:
    path: /sourceconfig/subtitleTracks
    method: GET
    data_selector: records
    params: {}
- name: PlayerAPI.getSource
  endpoint:
    path: /playerapi/getsource
    method: GET
    data_selector: records
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
- name: playback
  endpoint:
    path: /playback
    method: GET
    data_selector: data
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: analytics
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: data
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: companion_ads
  endpoint:
    path: /v1/companion-ads
    method: GET
    data_selector: ads
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: CompanionAdContainer
  endpoint:
    path: /companion/ad/container
    method: POST
    data_selector: containers
    params: {}
- name: AdvertisingConfig
  endpoint:
    path: /advertising/config
    method: POST
    data_selector: config
    params: {}
- name: analytics
  endpoint:
    path: /v1/analytics
    method: GET
    data_selector: records
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: streams
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
- name: MediaSessionPlaybackService
  endpoint:
    path: /playback/docs/streamlab-api
    method: GET
    data_selector: records
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: records
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: records
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: results
- name: playback
  endpoint:
    path: /playback
    method: GET
    data_selector: results
- name: Player
  endpoint:
    path: /player
    method: GET
    data_selector: data
    params: {}
- name: Analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
- name: Analytics Data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: records
- name: MediaWatchingActivity
  endpoint:
    path: /services/data/vXX.X/sobjects/MediaWatchingActivity
    method: POST
    data_selector: records
    params: {}
- name: GroupSession
  endpoint:
    path: /services/data/vXX.X/sobjects/GroupSession
    method: GET
    data_selector: records
    params: {}
- name: AdSource
  endpoint:
    path: /cdn/bitmovin/player/ios/3/docs/Classes/AdSource.html
    method: GET
    data_selector: adSources
- name: AdItem
  endpoint:
    path: /cdn/bitmovin/player/ios/3/docs/Classes/AdItem.html
    method: GET
    data_selector: adItems
- name: AdvertisingConfig
  endpoint:
    path: /cdn/bitmovin/player/ios/3/docs/Classes/AdvertisingConfig.html
    method: GET
    data_selector: advertisingConfig
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: data
    params: {}
- name: analytics_data
  endpoint:
    path: /analytics/data
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: NowPlayingConfig
  endpoint:
    path: /playback/docs/overview
    method: GET
    data_selector: default
    params: {}
- name: DASH_Widevine
  endpoint:
    path: /playback/docs/drm-protected-playback
    method: GET
    data_selector: sourceConfig
    params: {}
notes:
- Bitmovin offers advanced encoders designed to meet the diverse needs of video streaming.
- Upload supports file sizes up to 5GB only.
- Users can be added to multiple organizations
- Permissions can be customized for groups
- Every API Key has root level access to your Bitmovin Account and can manage all
  resources.
- All Bitmovin organizations support SSO. However, only organization admins can set
  up or modify SSO settings.
- SSO Domains can only be created at the Root-Organisation level but SSO provisioned
  users can be granted access to any of the Sub-Organisations.
- The component requires to be called from a composable function.
- To be used in Kotlin code as Jetpack Compose is not available for Java.
- We are continuously updating our dashboard and working hard to provide you with
  even more metrics to get more insights.
- Be careful that the link can be accessed by everyone and there are no possibilities
  to limit the access unless the Stream gets unpublished.
- If the stream doesn't have a poster URL associated with it, the link will return
  a 404 Not Found HTTP status code.
- Advertisement configuration supports VAST, VMAP, and VPAID advertisement tags.
- Streams domain restriction feature lets you control how your content is accessed.
- You can provide multiple domains separated by commas.
- Signed Streams is only currently supported via the Bitmovin CDN.
- Azure Media Services will be retired on June 30th, 2024.
- Bitmovin Streams will continue to serve your existing content library from Azure
  Blob Storage until June 30th, 2025.
- Bitmovin supports token-based URLs for both DASH and HLS manifests using the Network
  API.
- If we don't officially support your region please select a Bitmovin packager URL
  that is nearest to your region. (Keep in mind that there will be egress cost for
  your account)
- Make sure to turn off the Stream again by calling the STOP API or clicking stop
  inside the Streams Live detail page
- The returned uploadUrl is only valid for 5 minutes. Should it expire you need to
  request a new one.
- Currently, it can only be done through API
- DRM & Token Authentication functionality is currently being evaluated for Streams
  and is unavailable.
- The web component ensures that we automatically load the correct Player config,
  Analytics config and Manifest url for you.
- Users get a free 30-day trial to test the product
- Ensure the API key is set up correctly in the Bitmovin Dashboard
- Some objects may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Requires setup of OAuth2 credentials in Bitmovin Dashboard
- API requires setup of API keys for access
- API key is required for authentication
- Uses API Key for authentication.
- Requires setup of connected app in Bitmovin
- Some responses may contain nested fields
- To get started, first log in to your Bitmovin Dashboard.
- For the player to be used on a domain different from localhost, you will have to
  allow-list the domain/package name/bundle identifier of your website/app.
- Requires API key for authentication.
- It is important to consider your average and peak player usage when hosting your
  Third Party Licensing endpoint and plan your capacity/redundancy/availability of
  your hosting accordingly.
- Integrate Bitmovin Analytics using OAuth2 authentication.
- API keys must be managed through the Bitmovin Dashboard.
- By default, if no permissions are added to a group everything will be denied.
- You can create a maximum of 10 suborganizations.
- Ensure token is refreshed periodically to avoid authorization issues
- Uses OAuth2 with refresh token — requires setup of connected app in Bitmovin
- Requires API key for authentication
- Integration requires setup of API credentials in Bitmovin
- Ensure to handle rate limits as per API guidelines
- Uses OAuth2 with refresh token — requires setup of connected app in Bitmovin Analytics
- Streaming is hard, particularly supporting many different devices for a consistent
  experience for viewers.
- TVKey DRM requires Samsung Smart TVs (2019+ models) with HbbTV support and a hardware
  root of trust for TVKey or TVKey Cloud.
- Ensure to have valid API keys for access.
- Receiver app must be hosted on a server.
- The sender device must be a Chrome-based browser.
- Ensure API key is kept secure and not exposed in client-side code.
- Bitmovin Player supports low latency standards including LL-DASH, LL-HLS, and WebRTC.
- WebRTC enables sub-second latency streaming experiences.
- Subtitles styling and positioning depends on the type of UI used.
- Not supported for Live - Supported for VOD only
- Not supported for Safari browser
- Some endpoints may return null values in nested fields
- The Bitmovin Player seamlessly integrates with a wide range of user interfaces.
- Make sure to enable the API access in your Bitmovin dashboard.
- Some objects like Contact may return nulls in deeply nested fields
- Some analytics events may not be captured in real time.
- Requires an API key for authentication
- Setup required for analytics tracking.
- API Key required for authentication
- Requires setup of API key in Bitmovin Dashboard
- Ensure to handle token expiration properly.
- Requires setup of connected app in Bitmovin.
- Ensure to manage API keys in the Bitmovin Dashboard
- Check for any specific API key management guidelines in the documentation.
- Some endpoints may have rate limits
- Some analytics data may have latency
- Requires setup of connected app in API
- Bitmovin Player SDKs provide several approaches to allow applications to intercept,
  manipulate and format HTTP requests and responses for Manifest, Media segments and
  DRM licenses.
- On web browsers, it’s the default behavior to accept cookies from servers via the
  Set-Cookie HTTP header.
- In Android, set a default Cookie Manager at the application level to handle cookies.
- This troubleshooting tutorial is for applications using the Cast Application Framework
  (CAF) compatible receiver.
- Ensure proper API key management
- Chromecast support is disabled by default, but can be enabled in player configuration.
- Requires setup of API key in the Bitmovin Dashboard
- Some endpoints may have specific rate limits
- Minimum Player version v8.10.1 required to use this feature.
- Analytics Data for Trial subscriptions is stored back to 30 days.
- Requires API key for access
- Implementing a custom collector for your Metrics and Analytics System should be
  fairly simple with the Events API of the Bitmovin Player SDKs.
- Smart TVs configuration and best practices
- Smart TVs are typically resource-constrained devices with limited Memory and CPU
  capacity.
- APIs for streaming and DRM handling (MSE/EME) on these platforms are generally incompatible
  with latest standards of Desktop browsers.
- API key is required for authentication.
- Some API responses may vary based on user permissions
- Utilize the CDN fallback feature of the player.
- Widevine uses device-level tiers (L1 - L3) and robustness strings to enforce playback
  security.
- The player starts with the highest level and falls back as needed.
- Ensure to handle token expiration properly
- Requires setup of API keys in the Bitmovin Dashboard
- DRM support varies across platforms.
- No available integration with PlayStation 4 or 5.
- Information about upcoming Ads within one Adbreak are missing on an `AdBreakStarted`
  event. The `AdBreak.ads` property only contains ads that have already been started.
- Starting IMA Ads while the Application is in background, is currently not fully
  supported by the IMA SDK.
- Scheduled Ads are not played back on the receiver when casting to a Google Chromecast
  compatible device per default.
- Some endpoints may require specific API keys.
- Requires setup of connected app in Bitmovin API
- Some fields may return null depending on the data availability
- Requires setup of API Keys in the Bitmovin Dashboard
- Setup of connected app in api is required.
- By default, when the Bitmovin player is used with Safari (iOS / macOS), the stream
  is played through Safari Native Player.
- Safari Native Player doesn’t allow any manual quality selection.
- Requires API Key for authentication
- Some APIs may have rate limits
- Requires a valid API key for access
- To remove the additional selectable subtitle, set the CLOSED-CAPTIONS attribute
  to NONE in the HLS Master Playlist.
- Some objects may have specific requirements for setup.
- How can I remove or change the watermark of the Bitmovin Player UI?
- 'Hiding the logo is as easy as setting display: none on the CSS class bmpui-ui-watermark'
- For Bitmovin Player version 6 and below, this is simply done by the screenLogoImage
  attribute within the skin section of the player configuration
- OAuth2 with refresh token required for authentication
- Uses native HLS playback in Safari by default, limited Network API support.
- Enabling native_hls_parsing allows additional features but requests won't impact
  playback.
- Ensure CORS is enabled on your web server or cloud storage.
- Analytics already comes pre-packaged with the library
- You need to manually add the Bitmovin Analytics Collector to your website
- Some fields may return nulls in deeply nested structures
- Use a license key from your account for analytics.
- Analytics comes pre-integrated in the player.
- Requires setup of your analytics license.
- 'To fix the issue the following gradle setting needs to be applied in the gradle.properties
  file: android.useFullClasspathForDexingTransform = true'
- This issue arises due to a bug with desugaring and default Methods of Kotlin/Java.
- Ensure to set up an account on Bitmovin to access the API.
- Some data may return nulls in nested fields
- Analytics comes pre-integrated in the player starting from version 3.42.0.
- Events are recorded automatically.
- Requires setup of connected app in Bitmovin API.
- For Roku collector, the domain is your channel id and it must be postfixed with
  .roku.
- Ensure proper OAuth2 setup for API access
- Uses OAuth2 with refresh token — requires setup of connected app in Bitmovin API
- Domain for allow-list must be your channel id postfixed with .roku
- During local development the domain is defined as dev.roku
- For Roku collector when adding your domain to the allow-list in the Bitmovin dashboard,
  the domain is your channel id and it must be postfixed with .roku.
- During local development the domain is defined as dev.roku.
- Domain must be postfixed with .roku.
- You will also need to allow unsigned plugins. To do this set `allow_loading_unsigned_plugins
  = bitmovin-analytics-datasource` in the `grafana.ini` file.
- The only field required on the configuration is your license key.
- Ensure API key is set up correctly in the dashboard.
- Requires setup of OAuth application in Bitmovin
- Some API responses may include rate limits
- This API needs to be enabled through setting the collector config `ssaiEngagementTrackingEnabled`
  to `true`.
- Ad Quartiles have to be signalled using the `adQuartileFinished` collector API available
  on all collector platforms.
- Ensure to follow the setup instructions for OAuth2 authentication.
- Cookies in Bitmovin Analytics are used to store a unique identifier on the viewer’s
  device to re-identify a specific viewer as a unique user.
- Cookies by default are set without a domain but it is possible to specify the cookie
  domain.
- This is useful if you want to share cookies across subdomains of your main domain.
- Integrating Google Tag Manager with Bitmovin Analytics involves creating a Custom
  HTML Tag to pass GTM Tag Values.
- Ensure to handle rate limits when calling the API
- API keys are required for authentication.
- Requires valid API keys for access.
- The alerts feature is currently only available as a beta. This means that for each
  organisation, users can only create a maximum of 4 alerts.
- Some fields may be null in deeply nested responses
- Exports can take multiple hours to finish
- Exporting a whole day generates 24 files in storage
- API key required for authentication.
- Be sure to create a analytics output (under '/v1/analytics/outputs') and not an
  encoding output ('/v1/encoding/outputs')
- Make sure to correctly encode the credentials.json as whitespaces and newlines in
  the PEM Key are relevant.
- Create this resource in the appropriate Organization if you have been invited into
  a Multi-Tenant Organization.
- Make sure you are creating this resource in the appropriate Organization if you
  have been invited into a Multi-Tenant Organization.
- Requires setup of connected app in api
- Message payload is encoded using Protocol Buffers (Protobuf) format for efficient
  and structured encoding.
- Bitmovin Analytics uses Protocol buffers for the Pub/Sub message payload.
- API v2 has been deprecated in favor of v3.
- Requires setup of connected app in the Bitmovin API
- Analytics may require additional permissions
- API Key required for authentication.
- Refer to the Bitmovin Analytics documentation for detailed integration steps.
- API requires an API key for authentication.
- All data available in the Analytics Dashboard can be queried using the Bitmovin
  Analytics API.
- You can pass any 2-letter country code to the country filter.
- Region codes only make sense in the scope of a country.
- Always combine the region with a COUNTRY filter.
- Pass the English version of a city’s name and convert it to lowercase.
- Filtering by browser should use 'CONTAINS' instead of 'EQ' for general names.
- API requires an API Key for authentication
- High cardinality refers to fields with many unique values.
- Grouping by such fields without proper filtering can overwhelm the Analytics engine,
  triggering error 5003.
- Some data may return nulls in deeply nested fields
- API Key is required for authentication.
- Some responses may contain nulls in deeply nested fields
- API requires an API key for access.
- Some data fields may return nulls in certain conditions.
- All Custom Data fields (`customData1` to `customData30`) are limited to a maximum
  length of 160 characters.
- URLs like `mpdUrl` `m3u8Url` `progressiveUrl` are limited to a maximum of 300 bytes
  but to avoid simply truncating the URL if the URL overflows 300 bytes the query
  parameters and URL fragments (`?foo=bar` and `#anchor` parts) will be cut away to
  bring the URL below the limit.
- Error messages (the field `ERROR_MESSAGE`) will be truncated to a maximum length
  of 250 bytes.
- Detailed error data (the field `ERROR_DATA`) is being truncated to a maximum length
  of 500 bytes.
- To indicate that the error message was truncated an ellipsis will be appended (`...`)
- Network explorer stack trace data data is limited in length to a maximum of 50 lines
  of stack trace.
- Requires setup of API key through Bitmovin Dashboard
- Register the analytics module before instantiating the player to override the bundled
  Bitmovin Analytics collector.
- Ensure to use valid API keys for authentication
- Uses OAuth2 with refresh token
- 'Error data varies by platform: Android provides stack trace, iOS provides localized
  error message, and web can set any text or object as errorData.'
- Ensure to manage API keys properly for access.
- Bitmovin Analytics will honor the Do-Not-Track user preference and ignore requests
  with DNT header set to 1.
- Around 2.5-3% of sessions are affected by DNT across the global customer base.
- Developers may not see Analytics requests in the dashboard during testing if the
  Do-Not-Track header is enabled.
- API requires an API key for authentication
- Requires setup of API keys in the Bitmovin dashboard
- Starting from Analytics collector v3 for Android and iOS it is possible to setup
  custom data values in two different ways.
- API requires OAuth2 authentication setup
- Requires setup of connected app in Bitmovin Dashboard.
- Ensure that your OAuth2 client is set up correctly.
- Demo data is created for the Last three hours timeframe only
- The generated demo data will be available for 14 days in the dashboard – after that
  timeframe users can create new data again
- The demo data button is only available for active trial accounts
- Demo data is not available for advertising metrics
- Check for API limits on requests
- Ensure OAuth token is refreshed before making requests
- Industry Insights display the median value for specific metrics across the Bitmovin
  Analytics customer base as benchmark values for your organization’s goals.
- The Industry Insights feature is available for paying customers only.
- OAuth2 with refresh token is required for accessing the API.
- Ensure proper permissions are set for data access.
- Data is only stored for 14 days.
- A maximum of 500 samples are stored per playback session (impression).
- A maximum of 5000 samples are stored in total.
- When querying the API, the data is shown at the time when it was sent to the Bitmovin
  server.
- ErrorDetails like StackTrace or NetworkExplorer are currently not supported.
- When the config is disabled, already stored elements will still be sent out.
- Crashes when used with Android Version below 5.0 despite specified minimum Android
  Version of 4.1
- Crashes when used with Android Version below `5.0` despite specified minimum Android
  Version of `4.1`
- Invalid signature of distributed `xcframework` files due to revoked certificate.
- Xcode 14.2 or newer is required to integrate the collectors.
- Ad engagement is no longer tracked by default
- Development efforts can use localhost without a valid Bitmovin Player License key.
- Some older webOS platforms only support ES5 syntax.
- Uses API key for authentication
- The playstation5 module is only available on v8.88.0 and subsequent versions of
  the Player.
- Playback of audio-only streams is not supported.
- Client-side advertising with Google IMA is not supported.
- Requires an active Bitmovin account to access the API
- Rate limits apply to API calls
- Client-side advertising with Google IMA is not supported, but can be achieved through
  the Bitmovin Advertising module.
- Tweaking the playback rate during adaptive streaming playback via the player.setPlaybackSpeed
  API is disabled.
- Ensure to follow the setup guidelines for OAuth2 configuration.
- Ensure you have a valid API key for authentication.
- Some metrics may return nulls under certain conditions
- Default target latency for low-latency streaming is 5 seconds.
- Authentication requires an API key.
- DRM systems provide the ability to control how people can consume your content while
  securing it against piracy
- Multi-DRM content packaging output supports more DRM systems, so more devices can
  be covered
- API requires API key for authentication
- Uses FairPlay Streaming technology for DRM
- Requires configuration of license and certificate URLs
- 'Parameters required: DASH_MANIFEST_URL, BRAND_ID, USER_TOKEN, TENANT_CODENAME'
- Some objects may return nulls in deeply nested fields.
- Requires an API key to access endpoints.
- Requires Nagra backend for token retrieval and session management
- The license renewal interval is determined by Nagra.
- Consult Nagra documentation for best practices.
- Ensure proper API key management and security.
- Check for rate limits when accessing multiple endpoints.
- Bitmovin Player is capable of serving Ads out of the box.
- The `player.ads` APIs are only available after a source was loaded into the player.
- Check API limits and adjust usage accordingly.
- The solution uses VAST, VPAID and Google DoubleClick for Publishers
- The URL should be single-encoded.
- If you serve Google ads via the Bitmovin Player to a non-English speaking audience,
  it is possible to change the locale of the ads so the UI elements within the ad
  will be displayed to your viewers in their own language.
- Since version 8.14.0 of the Bitmovin web-player-sdk, you can directly access the
  IMA-SDK from Google via our player, which allows you to manipulate ads for this
  purpose.
- In version 8.14.0 of the Bitmovin web-player-sdk you can access the default Advertisings
  Module which is the IMA-SDK from Google.
- Ensure API key is kept secure.
- Support for the OMSDK together with the Bitmovin ad Module is provided through the
  module AdvertisingOmSdk.
- Not all settings are guaranteed to be supported by every ad tag or environment.
  Always test across your target browsers and devices.
- Ensure to handle rate limiting and authentication properly.
- OAuth2 authentication is required to access analytics data.
- For LL-DASH streams the player will automatically enable the chunked_cmaf_streaming
  tweak.
- Teleports requires a verified domain of your streaming to get an API Key.
- API requires authenticated requests using OAuth2.
- Requires a Streamroot account to obtain a STREAMROOT_KEY.
- Requires a Bitmovin Account to obtain a BITMOVIN_PLAYER_KEY.
- Ensure that your API key has sufficient permissions to access the endpoints.
- Some features may require specific configurations in the Bitmovin Dashboard.
- Some metrics may return nulls in deeply nested fields
- Subtitles can be added using the Subtitle API.
- Ensure to manage your API keys properly through the Bitmovin Dashboard.
- 'Recommended usage: Development: DEBUG or LOG, Production: WARN (default) or ERROR'
- No Player API call returns the player object anymore
- Automatically upload all modules to Akamai with every release
- HTTP header array structure to simple headers object
- No Event.Paused before Event.PlaybackFinished
- VR starting position (0°) to be in the center of the video frame instead of the
  left edge
- Event.DownloadFinished.timeToFirstByte event property
- Every advertising-related error now has only the AdError event associated with it
  and not a mix of Warning and AdError
- The ABR logic v3 (DOWNLOAD_PREDICTION_LOGIC) is now activated by default
- Rare chance of freezing on HLS SSAI live streams. Can be alleviated by setting tweak
  `hls_clear_buffers_on_discontinuity_switches` to `false`.
- Rare chance of freezing on HLS SSAI live streams. Can be alleviated by setting tweak
  `hls_clear_buffers_on_discontinuity_switches` to `false`
- Removed deprecated methods and configurations.
- The player will not create a figure element around the video anymore.
- Fixed PlayReady header parsing
- Player not being able to play back content in WebKit browsers without play-promise
- Player did not fire `ON_METADATA` from raw AAC audio segments
- DRM playback using WebKit-prefixed EME
- The `PlaybackFinished` event firing before post-roll ads are finished
- VR Events not being fired
- Playback not starting after initial play call on Safari
- Loading a new source after playing back a DRM protected source
- Handling of unexpected behavior of the `play` promise introduced in Edge 17
- VMAP manifest parsing in Edge
- Calling play+pause in `load().then` in Edge left the video playing
- Smooth manifest errors now will be thrown as a SOURCE_MANIFEST_INVALID error with
  an appropriate message.
- native-flash config moved from config.drm.access to config.nativeflash
- player.play() now returns a promise which resolves when playback actually starts
- player.setVolume() now no longer changes the muted state
- Remove player.setLastSegment()
- Remove preferred_audio_codec_order and preferred_video_codec_order tweaks (use PlaybackConfig.audioCodecPriority/videoCodecPriority)
- Move UserSettings into separate module
- PlayerAPI.getThumb() became PlayerAPI.getThumbnail(), Thumbnail property w became
  width and h became height, property i was dropped.
- player.isPlaying() only returns true once playback has actually started on the media
  element
- Moved module-local exports from core to the modules (DRM, VR)
- Converted Player to class (instantiate with new), setup method removed and logic
  moved into constructor
- Moved Event and LogLevel exports out of Player object to root namespace
- Stall events not triggered anymore on initial play and seek/timeShift
- Change SourceConfig.tracks[] to SourceConfig.thumbnailTrack
- Event.PlayerResize renamed to Event.PlayerResized
- Player resize event handling moved from style module to core
- 'PlayerAPI.unload(): Promise<void> return value'
- Take SEEK_TO_END_OFFSET into account when applying startOffset
- Renamed PlayerAPINotAvailableException to PlayerAPINotAvailableError
- Completely reworked the AdvertisingConfig and advertising-related player functions.
  The new Advertising API is available in the ads namespace on a player instance after
  a source has been loaded.
- documentation for the ErrorEvent
- Smooth manifest errors now will be thrown as a SOURCE_MANIFEST_INVALID error with
  an appropriate message. Unknown mime types in the manifest will only cause a warn
  log instead of an error.
- WarningMessages became WarningCode enum
- Rename getDroppedFrames to getDroppedVideoFrames
- ImaAdBreak.vastResponse now holds a Promise that resolves with the loaded ad manifest
- Rename bitmovin-player.zip and bitmovin-player-modules.zip to bitmovinplayer.zip
  and bitmovinplayer-modules.zip
- API key required for authentication
- At the moment it is not possible to enable or configure Analytics with this variant.
- By default, an application cannot use both the Bitmovin Player and ExoPlayer as
  they define identical symbols.
- Ensure that you have the necessary permissions to access the API.
- Ensure proper configuration of OAuth2 settings for API access.
- The licence renewal interval is determined by Nagra. Please consult Nagra documentation
  or your Nagra contact for more details on this.
- Ensure you have valid API keys and the correct permissions set.
- If the pre-delivery license expired or was never loaded, the player will fetch a
  new license in post-delivery fashion.
- Bitmovin Advertising is designed for seamless integration with the latest VAST 4.3
  standard while offering reliable backward compatibility down to VAST 2.0.
- Ensure API keys are kept secure and not exposed in client-side code.
- Ensure to handle rate limiting as per API documentation.
- Since IMA is a third-party SDK and not shipped as part of the Bitmovin Player, you
  must first add the necessary dependencies to the project's build.gradle.kts or build.gradle
  file.
- In order to use the IMA SDK, starting with version 3.37.0, you need to enable coreLibraryDesugaring.
- Ensure that the API key is valid and active.
- Ensure API key is included in requests
- Companion ads will now display in the specified CompanionAdContainer views during
  ad breaks.
- For Companion Ads to work properly, your ad tag must include companion ads.
- Allows you to override the default retry behavior for failed HTTP requests.
- Custom retry policy can use the provided RetryContext.
- The Bitmovin Android SDK minimizes offline content management and playback to a
  few API calls, and allows fast integration of offline capabilities.
- Make sure to replace $currentVersion with the officially supported Cast SDK version
  for the current Bitmovin Android Player SDK version.
- Make sure to manage your API keys in the Bitmovin Dashboard.
- PiP is available only on Android 8.0 (API level 26) and above.
- Integrating with the media session allows an app to advertise media playback externally,
  e.g. on the lock screen or in the notification area.
- Ensure you have a valid API key to access the API.
- Some responses may include nested data structures
- Uses API key for authentication.
- Bitmovin's modified Media3 (or previously ExoPlayer) modules are not intended to
  be used directly and doing so may result in unexpected behavior.
- Using custom versions is generally discouraged, as it may lead to compatibility
  issues or the exclusion of important updates and enhancements.
- Employing custom versions may also introduce a possibility of encountering runtime
  exceptions if the forced version of the collector and the Player dependency version
  are incompatible.
- Some features may be limited based on the subscription plan
- Some analytics data may have limitations on granularity.
- Check API rate limits to avoid service interruptions.
- Uses OAuth2 with refresh token — requires setup of connected app in Bitmovin.
- Strongly recommend customers to review & update their allow-list settings in the
  Bitmovin Dashboard > Player Licenses to ensure that all relevant Android package
  names are allow-listed for the Bitmovin Player license in use.
- Loading a source may fail with a SerializationException if SourceConfig.liveConfig
  is not null when using the Bitmovin Player Web UI.
- Player.preloadDrmLicense causes a PlayerEvent.Warning to be emitted on API level
  30 and lower and might not preload the license properly. Please use Player version
  3.118.0+.
- Decoder errors sometimes being wrongly reported.
- Consecutive scheduled ads sometimes playing without video when using the IMA ads
  module
- Player wrongly emitting an additional PlayerEvent.VideoSizeChanged event with height
  and width set to 0 when manually switching video quality, causing PlayerView to
  be resized
- Crash when trying to resume or delete a download initiated with player version <
  3.14.1
- Media tracks and qualities that are definitely not supported during a playback session
  are now filtered out by default, meaning that they will not be exposed via Player.availableAudio,
  Player.availableAudioQualities and Player.availableVideoQualities.
- Paddings and font sizes in the Web UI are slightly adjusted.
- The SDK now includes the source-code of the api package for a better developer experience
  without the need to consult the JavaDocs or external docs frequently
- Completely reworked documentation for a more productive and enjoyable learning experience.
- More intuitive and flexible way of handling event subscriptions with the new EventEmitter
- Requires setup of bundle identifiers in Dashboard for analytics.
- Requires the setup of a connected app in Bitmovin
- Logging is enabled by default with level .warning, printing entries to the console.
- Segment Requests are not supported!
- 'Supported Request Types: currently key HLS AES requests are not supported. Subtitle
  media requests are only supported in case the subtitles are side-loaded.'
- Ensure to manage your API keys properly.
- The preprocessHttpResponse property allows you to define a custom handler that can
  manipulate HTTP responses.
- Currently key HLS AES requests are not supported, and subtitle media requests are
  only supported in case the subtitles are side-loaded.
- The `retryHttpRequest` property gives you control over how failed requests are handled
  by allowing you to define custom retry logic.
- The default retry logic retries requests up to a maximum of 3 times with a delay
  calculated using an exponential backoff formula, capped at 5 seconds.
- Check the API key permissions for access.
- Nagra DRM is supported for playback
- Your application signs in to Nagra's backend. Upon successful sign-on, you obtain
  a login token.
- Your application requests a CONTENT_TOKEN from the Nagra backend.
- Your application initiates a secure session with the Nagra SSP backend by sending
  the CONTENT_TOKEN to NAGRA_SSM_SETUP_URL.
- Once playback finishes or you switch to another piece of content, your application
  terminates the secure session by calling NAGRA_SSM_TEARDOWN_URL.
- 'You can find your player license key on the Bitmovin player license dashboard:
  https://bitmovin.com/dashboard/player/licenses'
- 'You can find your analytics license key on the Bitmovin analytics license dashboard:
  https://bitmovin.com/dashboard/analytics/licenses'
- Refer to the API Reference for comprehensive details on endpoints and usage.
- For full snippet for embedding VideoPlayerView into a SwiftUI view, see here.
- For full snippet for embedding PlayerView into a UIViewController, see here.
- Ensure proper API key management to avoid unauthorized access
- Some data fields may be null depending on the response
- Trick play (slow/fast-forward and rewind) is not supported
- Synchronized ad playback and ad break management is not supported
- Casting is not supported
- Playlists are not supported
- System UI is not supported
- AirPlay and Picture in Picture (PiP) are not fully supported. Playback changes done
  with the AirPlay receiver or PiP mini player are not synchronized with the group.
  Playback changes done on the AirPlay sender device are working as expected.
- Enabling Now Playing information displays metadata such as the title and playback
  duration and enables remote commands like play/pause and skip forward/backward.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your API key and permissions.'
- '401 Unauthorized: Check your API key or token'
- '404 Not Found: Resource does not exist'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API key or permissions'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check your OAuth token'
- '403 Forbidden: Insufficient permissions for the request'
- '200: Allow License'
- '400: Deny License'
- '500: Allow/Deny based on configuration in your Bitmovin Dashboard'
- '401 Unauthorized: Check your authentication credentials.'
- '429 Too Many Requests: Throttle your requests to avoid hitting rate limits.'
- '401 Unauthorized: Check your API key.'
- '404 Not Found: Ensure the endpoint exists.'
- '401 Unauthorized: Recheck API key validity'
- '401 Unauthorized: Check your credentials and token expiration'
- '403 Forbidden: You do not have permission to access this resource'
- 'INVALID_API_KEY: Check your API key and permissions'
- 'RATE_LIMIT_EXCEEDED: Reduce request frequency'
- '401 Unauthorized: Verify OAuth token validity'
- '401 Unauthorized: Check your API key or token.'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Check your API key'
- '403 Forbidden: API key does not have access to this endpoint.'
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Check API key'
- '401 Unauthorized: Check API key and permissions.'
- '401 Unauthorized: Check your API Key'
- '404 Not Found: Ensure the endpoint is correct'
- '429 Too Many Requests: Rate limit exceeded'
- '401 Unauthorized: Check credentials and token validity'
- '404 Not Found: Verify endpoint path'
- '429 Too Many Requests: Implement exponential backoff'
- '403 Forbidden: Check API permissions'
- '401 Unauthorized: Check API key validity'
- '401 Unauthorized: Recheck API key'
- '401 Unauthorized: Check your API key and permissions'
- '404 Not Found: Verify the endpoint path'
- '429 Too Many Requests: Rate limit exceeded, slow down requests'
- '401 Unauthorized: Check API key or permissions'
- '403 Forbidden: Check your API key and permissions.'
- '404 Not Found: Verify the endpoint URL.'
- '401 Unauthorized: Check API key or permissions.'
- '401 Unauthorized: Check API key and permissions'
- '429 Too Many Requests: Reduce request frequency'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '401 Unauthorized: Invalid API key or token'
- '404 Not Found: Endpoint does not exist'
- 'INVALID_API_KEY: Check your API key'
- 'AUTHENTICATION_FAILED: Verify OAuth credentials'
- 'RESOURCE_NOT_FOUND: Ensure endpoint is correct'
- '401 Unauthorized: Check your credentials'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify OAuth credentials'
- 'Invalid license key: Check the provided license key for errors.'
- '404 Not Found: Verify the endpoint path.'
- '500 Internal Server Error: Retry the request after a few minutes.'
- '401 Unauthorized: Ensure valid OAuth credentials.'
- '404 Not Found: Check the endpoint path.'
- '429 Too Many Requests: Throttle API calls.'
- '401 Unauthorized: Check API key validity.'
- '404 Not Found: Ensure the endpoint is correct.'
- '429 Too Many Requests: Reduce API call frequency'
- '401 Unauthorized: Check API key or OAuth token validity'
- 'Invalid Ad Position: Ensure adPosition is preroll, midroll, or postroll.'
- 'Missing Ad Metadata: Ensure all required ad metadata is provided when calling adStart.'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Verify your OAuth credentials.'
- '429 Too Many Requests: Rate limit exceeded.'
- '404 Not Found: Verify the endpoint and resource you''re trying to access'
- '500 Internal Server Error: Try again later.'
- 'QUEUED: Export Task is waiting for processing'
- 'STARTED: Export Task is in progress'
- 'FINISHED: Export Task has finished successfully'
- 'ERROR: Unable to transfer the export to your storage'
- '403 Forbidden: Invalid API key provided.'
- '404 Not Found: The requested resource could not be found.'
- '400 Bad Request: Ensure that all required fields are populated correctly'
- '403 Forbidden: Check permissions for the IAM role'
- '404 Not Found: Verify the output ID for retrieval'
- '404 Not Found: Check the requested resource.'
- '401 Unauthorized: Check API Key.'
- '401 Unauthorized: Ensure your API credentials are correct.'
- '401 Unauthorized: Check API key.'
- '404 Not Found: Verify endpoint URL.'
- '401 Unauthorized: Verify OAuth token'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Verify your API Key'
- '5003: Error querying analytics! Attempting to groupBy a very high cardinality column
  that cannot be aggregated. Please filter the query result.'
- '401 Unauthorized: Invalid API Key'
- '401 Unauthorized: Check your OAuth token and permissions.'
- '400 Bad Request: Ensure all required parameters are provided.'
- '403 Forbidden: Check API key permissions'
- '404 Not Found: Ensure the endpoint path is correct'
- '500 Internal Server Error: Retry the request or check server status'
- '403 Forbidden: Ensure you have access to the requested resource'
- Error data varies across different platforms.
- 'ANALYTICS_VIDEOSTART_TIMEOUT_REACHED: The video start process took too long and
  has timed out.'
- 'ANALYTICS_BUFFERING_TIMEOUT_REACHED: Analyze stream settings for potential issues'
- '401 Unauthorized: Recheck API keys or token expiration'
- '404 Not Found: Check endpoint path for correctness'
- '401 Unauthorized: Check client credentials'
- 'ANALYTICS_QUALITY_CHANGE_THRESHOLD_EXCEEDED: Check analytics thresholds.'
- '10000: ANALYTICS_QUALITY_CHANGE_THRESHOLD_EXCEEDED'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: Verify endpoint and resource.'
- code: 10000
  message: ANALYTICS_QUALITY_CHANGE_THRESHOLD_EXCEEDED
- '404 Not Found: Verify the endpoint and resource IDs'
- '401 Unauthorized: Check your OAuth token.'
- '403 Forbidden: Verify permissions for the requested resource.'
- '429 Too Many Requests: Rate limit exceeded, reduce request frequency.'
- Bitmovin Collector`<= 2.14.0` is incompatible with Bitmovin Player `v3.35.0` and
  `v3.34.0` (crashes during startup), this issue is fixed with Bitmovin Collector
  `v2.15.0` or Bitmovin Player `v3.35.1`
- 'AVPlayer: Buffering Events and some seeking events are not tracked.'
- Collector permanently stops collecting data after an error event
- '404 Not Found: Verify the endpoint and resource'
- '500 Internal Server Error: Retry the request after some time'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Invalid authentication credentials'
- '404 Not Found: Verify the endpoint is correct.'
- '500 Internal Server Error: Try again later or contact support.'
- '401 Unauthorized: Ensure correct license and certificate URLs'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '403 Forbidden: Check API key validity.'
- '403 Forbidden: Check API key permissions.'
- '403 Forbidden: Check your API key permissions.'
- '404 Not Found: Verify the endpoint or resource ID.'
- '500 Internal Server Error: Retry the request.'
- '401 Unauthorized: Check your access token.'
- Error while creating Bitmovin Player instance
- '401 Unauthorized: Recheck OAuth configurations.'
- PlayReady header parsing
- Player not being able to play back content in WebKit browsers without play-promise
- Player did not fire ON_METADATA from raw AAC audio segments
- DRM playback using WebKit-prefixed EME
- The PlaybackFinished event firing before post-roll ads are finished
- VR Events not being fired
- Playback not starting after initial play call on Safari
- Loading a new source after playing back a DRM protected source
- Handling of unexpected behavior of the play promise introduced in Edge 17
- VMAP manifest parsing in Edge
- Calling play+pause in load().then in Edge left the video playing
- '401 Unauthorized: Invalid API key'
- '500 Internal Server Error: There was an error on the server.'
- '403 Forbidden: Check if your API key has the required permissions.'
- '401 Unauthorized: Check your API key or access token.'
- '429 Too Many Requests: Slow down your request rate.'
- '404 Not Found: Ensure the endpoint path is correct.'
- '429 Too Many Requests: Rate limit exceeded, try again later.'
- '401 Unauthorized: Check token validity.'
- '404 Not Found: Verify the endpoint'
- '404 Not Found: Resource does not exist.'
- '403 Forbidden: Ensure proper permissions for the API key'
- 'INVALID_API_KEY: Check your API key and try again.'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of your requests.'
- '404 Not Found: Verify the endpoint URL'
- '403 Forbidden: Insufficient permissions for the requested operation'
- 'SerializationException: Loading a source may fail if SourceConfig.liveConfig is
  not null.'
- 'PlayerEvent.Warning: Emitted on API level 30 and lower when preloading DRM license.'
- code: '-42803'
  message: Apple FairPlay Streaming offline key is invalid.
- code: '-42800'
  message: Apple FairPlay Streaming persistent key has expired. Request a new persistent
    key from the server.
- code: '-42799'
  message: Apple FairPlay Streaming persistent key format is no longer supported due
    to security update. Request a new persistent key from the server.
- code: '-42783'
  message: Apple FairPlay Streaming certificate is not valid and is possibly revoked.
- code: '-42681'
  message: Apple FairPlay Streaming version list is not valid.
- code: '-42679'
  message: Apple FairPlay Streaming certificate is not valid.
- code: '-42676'
  message: An error occurred during Apple FairPlay Streaming Server Playback Context
    creation.
- code: '-42675'
  message: Apple FairPlay Streaming assetID supplied is not valid.
- code: '-42674'
  message: Apple FairPlay Streaming version list is not supplied.
- code: '-42673'
  message: Apple FairPlay Streaming assetId is not supplied.
- code: '-42672'
  message: Apple FairPlay Streaming certificate is not supplied.
- code: '-42668'
  message: Apple FairPlay Streaming Content Key Context passed in for processing is
    not valid.
- code: '-42656'
  message: Apple FairPlay Streaming lease duration has expired.
- code: '-16850'
  message: 'Server error. HTTP status code 504: Gateway Timeout.'
- code: '-16849'
  message: 'Server error. HTTP status code 503: Service Unavailable.'
- code: '-16848'
  message: 'Server error. HTTP status code 502: Bad Gateway.'
- code: '-16847'
  message: 'Server error. HTTP status code 500: Internal Server Error.'
- code: '-16846'
  message: Server error. Received HTTP status code within 500-599.
- code: '-16845'
  message: Networking error. Received HTTP status code within 400-499.
- code: '-16840'
  message: 'Networking error. Received HTTP status code 401: Unauthorized.'
- code: '-16839'
  message: Manifest request timed out.
- code: '-15491'
  message: Allocation of internal data structure failed.
- code: '-15490'
  message: Invalid or NULL API parameter received.
- code: '-12971'
  message: Failed to parse segment as either an MPEG-2 TS or an ES.
- code: '-12939'
  message: Server misconfiguration or byte range length mismatch.
- code: '-12938'
  message: 'Networking Error. Received HTTP status code 404: File Not Found.'
- code: '-12937'
  message: Authentication Error.
- code: '-12913'
  message: Decoder temporarily unavailable.
- code: '-12911'
  message: Decoder malfunction.
- code: '-12903'
  message: CMSampleBufferRef decompression error.
- code: '-12889'
  message: Segment request timed out.
- code: '-12875'
  message: Request timed out.
- code: '-12848'
  message: '''moov'' atom could not be parsed.'
- code: '-12847'
  message: Unsupported media format found.
- code: '-12667'
  message: Networking Error. Received HTTP status code within 200-399.
- code: '-12666'
  message: Unrecognized HTTP response.
- code: '-12661'
  message: 'Server error. HTTP status code 503: Service Unavailable.'
- code: '-12660'
  message: 'Networking error. Received HTTP status code 403: Forbidden.'
- code: '-12645'
  message: Media request timed out.
- code: '-12642'
  message: Playlist file unchanged for 2 consecutive reads.
- code: '-12641'
  message: Invalid URL found in manifest.
- code: '-12640'
  message: Variant URLs changed between consecutive manifest downloads. Consider adding
    a `STABLE-VARIANT-ID` tag to the renditions.
- code: '-12318'
  message: Segment exceeds specified bandwidth for variant.
- code: '-12312'
  message: Mismatch between playlists.
- code: '-11885'
  message: The requested tone mapping failed.
- code: '-11884'
  message: The system denied issuing the sandbox extension.
- code: '-11883'
  message: The system couldn’t encode the media data.
- code: '-11882'
  message: An AirPlay receiver is temporarily unavailable.
- code: '-11881'
  message: The system can’t load the requested sample data.
- code: '-11880'
  message: An invalid sample cursor produced an error.
- code: '-11879'
  message: The app canceled a request to retrieve a content key.
- code: '-11878'
  message: The asset handled a request to cancel loading a property value asynchronously.
- code: '-11877'
  message: The system doesn’t have Rosetta installed and can’t perform the requested
    operation.
- code: '-11876'
  message: The operation attempted to write a new MPEG-4 segment that didn’t start
    with a sync sample.
- code: '-11875'
  message: The system is incorrectly configured for the requested operation.
- code: '-11873'
  message: The capture session doesn’t support the camera device’s active format.
- code: '-11872'
  message: The app requested too many camera hardware resources.
- code: '-11871'
  message: The app attempted to perform an unsupported operation for the current preset.
- code: '-11870'
  message: The current asset doesn’t support external playback.
- code: '-11869'
  message: The asset doesn’t contain a source track.
- code: '-11868'
  message: The system found no compatible external displays.
- code: '-11865'
  message: The depth data isn’t properly structured.
- code: '-11864'
  message: The current asset format isn’t supported.
- code: '-11863'
  message: The captured content is unavailable.
- code: '-11862'
  message: The requested operation isn’t allowed.
- code: '-11861'
  message: The app requested unsupported output settings.
- code: '-11860'
  message: The app couldn’t create a content key request.
- code: '-11859'
  message: The app attempted to start recording a movie file while an existing recording
    is underway.
- code: '-11858'
  message: The compositor couldn’t composite video frames.
- code: '-11857'
  message: The AirPlay receiver requires an internet connection to function.
- code: '-11856'
  message: The AirPlay controller requires an internet connection to function.
- code: '-11855'
  message: The system couldn’t decode the media data.
- code: '-11850'
  message: The configuration of the HTTP server that streams the media resource isn’t
    correct.
- code: '-11849'
  message: The system can’t load the requested media data.
- code: '-11848'
  message: The media can’t be displayed because the device isn’t capable of playing
    the content.
- code: '-11847'
  message: An interruption occurred while performing a reading or writing operation.
- code: '-11846'
  message: The specified torch level is valid but currently unavailable, possibly
    due to overheating.
- code: '-11845'
  message: Screen capture failed because the display was inactive.
- code: '-11844'
  message: An unexpected problem occurred that prevented screen capture.
- code: '-11843'
  message: The path extension of the output URL is invalid.
- code: '-11842'
  message: The current reference restrictions prevent the system from loading referenced
    media.
- code: '-11841'
  message: Failed attempt to present an unsupported video composition.
- code: '-11840'
  message: An appropriate encoder isn’t currently available.
- code: '-11839'
  message: A suitable decoder for the media is temporarily available.
- code: '-11838'
  message: The app attempted to perform an unsupported operation with the asset.
- code: '-11837'
  message: Failed attempt to start a capture session in the background, which isn’t
    allowed in iOS.
- code: '-11836'
  message: The app isn’t authorized to play media. Please ensure SourceConfig.drmConfig
    is set up correctly.
- code: '-11835'
  message: The user isn’t authorized to play the media. Please ensure SourceConfig.drmConfig
    is set up correctly.
- code: '-11834'
  message: The requested encoder isn’t found.
- code: '-11833'
  message: The system can’t find a suitable decoder for the media.
- code: '-11832'
  message: No image is available in the media at the indicated time.
- code: '-11831'
  message: The app isn’t authorized to open the media. Please ensure SourceConfig.drmConfig
    is set up correctly.
- code: '-11830'
  message: The app can’t take a photo because there are too many unfinished photo
    capture requests.
- code: '-11829'
  message: The file is corrupt or in an unrecognized format.
- code: '-11828'
  message: The system can’t open the file because it’s in an unrecognized format.
- code: '-11827'
  message: Unable to add the source media because it has no duration.
- code: '-11826'
  message: Unable to add the source media because its start time in the destination
    is invalid.
- code: '-11825'
  message: Unable to add the source media because its duration in the destination
    is invalid.
- code: '-11824'
  message: The composition can’t add the source media because it contains gaps.
- code: '-11823'
  message: A file with the same name exists at the location and can’t be overwritten.
- code: '-11822'
  message: The system couldn’t read the source media.
- code: '-11821'
  message: The system failed to decode the media.
- code: '-11820'
  message: The requested export operation failed.
- code: '-11819'
  message: The system couldn’t perform the operation because media services were unavailable.
- code: '-11818'
  message: The recording stopped because the system interrupted the audio session.
- code: '-11817'
  message: The app can’t change device settings because another process currently
    controls the device.
- code: '-11815'
  message: The app can’t access the device because another app is currently using
    it.
- code: '-11814'
  message: The app can’t access the device because it isn’t connected.
- code: '-11813'
  message: The recording stopped because it reached the file’s maximum number of samples.
- code: '-11812'
  message: Recording stopped because there was an interruption in the input media.
- code: '-11811'
  message: The recording stopped because it reached the file’s maximum size.
- code: '-11810'
  message: The recording stopped because it reached the file’s maximum duration.
- code: '-11809'
  message: Recording stopped because the format of the source media changed.
- code: '-11808'
  message: A previously connected device is no longer accessible.
- code: '-11807'
  message: Recording stopped because the disk is full.
- code: '-11806'
  message: Recording stopped because the configuration of media sources and destinations
    changed.
- code: '-11805'
  message: The recording failed because the system received no data.
- code: '-11804'
  message: The app can’t access the device because another session is currently using
    it.
- code: '-11803'
  message: The recording couldn’t start because the session isn’t running.
- code: '-11801'
  message: The operation couldn’t finish because there isn’t enough memory available
    to process the media.
- code: '-1202'
  message: The secure connection failed because the server’s certificate isn’t trusted.
- code: '-1102'
  message: 'Networking error. Received HTTP status code 403: Forbidden.'
- code: '-1100'
  message: 'Networking error. Received HTTP status code 404: File Not Found.'
- code: '-1013'
  message: 'Networking error. Received HTTP status code 401: Unauthorized.'
- code: '-1009'
  message: The connection failed because the device isn’t connected to the internet.
- code: '-1008'
  message: Networking error. The requested resource could not be loaded.
- code: '-1004'
  message: The connection failed because a connection can’t be made to the host.
- code: '-1003'
  message: The connection failed because the host couldn’t be found.
- code: '-1000'
  message: The connection failed due to a malformed URL.
- code: '-50'
  message: AVAudioSession property set to an illegal value.
- code: '560557684'
  message: Unable to make nonmixable audio session active while the app was in the
    background.
- code: '1718449215'
  message: The data format is not supported by the specified file type.
- code: '1852797029'
  message: An illegal audio codec operation was attempted.
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify your API key.'
- '429 Too Many Requests: Reduce the request rate.'
- Unsupported request types won't be processed through the retry handler.
- If a request isn’t successfully retried within approximately 20 seconds, it will
  fail.
- '410 (gone): Abort retrying when threshold is reached'
- '401 Unauthorized: Check API key or token expiration'
- '403 Forbidden: Insufficient permissions for this endpoint'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthToken
  - ApiKey
  - OAuth
  - AnalyticsConfig
  - DefaultMetadata
  - SourceMetadata
  - Nagra backend
  - SSM session
client:
  base_url: https://api.bitmovin.com/v1
  headers:
    Accept: application/json
    Content-Type: application/json
source_metadata: null
