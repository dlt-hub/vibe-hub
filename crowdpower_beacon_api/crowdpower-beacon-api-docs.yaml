resources:
- name: identify_customer
  endpoint:
    path: /identify
    method: POST
    data_selector: customer_record
- name: identify_customer
  endpoint:
    path: /identify
    method: POST
    data_selector: customer
    params: {}
- name: Create Customer Tag
  endpoint:
    path: /tag
    method: POST
    data_selector: tag
    params: {}
- name: page_view
  endpoint:
    path: /logs/page_view
    method: POST
    data_selector: logs
    params: {}
- name: create_customer_charge
  endpoint:
    path: /charge
    method: POST
- name: create_customer
  endpoint:
    path: /customers
    method: POST
- name: create_multiple_customers
  endpoint:
    path: /customers/bulk
    method: POST
- name: Prompt for Push
  endpoint:
    path: /push-notifications
    method: POST
    data_selector: response
    params: {}
- name: create_customer_event
  endpoint:
    path: /events
    method: POST
    data_selector: data
- name: create_multiple_customer_events
  endpoint:
    path: /events/bulk
    method: POST
    data_selector: data
- name: create_customer_charge
  endpoint:
    path: /charges
    method: POST
- name: create_multiple_customer_charges
  endpoint:
    path: /charges/bulk
    method: POST
- name: create_customer
  endpoint:
    path: /customers
    method: POST
    data_selector: data
- name: create_multiple_customers
  endpoint:
    path: /customers/bulk
    method: POST
    data_selector: data
- name: create_customer_tag
  endpoint:
    path: /tags
    method: POST
    data_selector: success
- name: create_multiple_customer_tags
  endpoint:
    path: /tags/bulk
    method: POST
    data_selector: success
- name: create_customer_event
  endpoint:
    path: /events
    method: POST
    data_selector: data
    params: {}
- name: create_multiple_customer_events
  endpoint:
    path: /events/bulk
    method: POST
    data_selector: data
    params: {}
- name: track
  endpoint:
    path: /track
    method: POST
    data_selector: data
- name: create_customer_charge
  endpoint:
    path: /charges
    method: POST
- name: create_multiple_customer_charges
  endpoint:
    path: /charges/bulk
    method: POST
- name: create_customer_tag
  endpoint:
    path: /tags
    method: POST
    data_selector: data
    params: {}
- name: create_multiple_customer_tags
  endpoint:
    path: /tags/bulk
    method: POST
    data_selector: data
    params: {}
- name: sending_domain
  endpoint:
    path: /settings/domain
    method: POST
- name: verifying_domain
  endpoint:
    path: /settings/domain/verify
    method: POST
- name: senders
  endpoint:
    path: /settings/senders
    method: GET
- name: SMTP Setup
  endpoint:
    path: /settings/domain/advanced
    method: GET
- name: track
  endpoint:
    path: /track
    method: POST
    data_selector: data
    params: {}
- name: sending_domain
  endpoint:
    path: /settings/domain
    method: GET
- name: senders
  endpoint:
    path: /settings/senders
    method: GET
- name: phone_numbers
  endpoint:
    path: /working-with-phone-numbers
    method: GET
- name: SMTP Setup
  endpoint:
    path: /settings/domain/advanced
    method: GET
- name: push_notifications
  endpoint:
    path: /service-worker.js
    method: GET
- name: sessions
  endpoint:
    path: /api/sessions
    method: POST
    data_selector: session_data
    params:
      update_session: 'false'
- name: unsubscribe_groups
  endpoint:
    path: /resources/unsubscribe-groups
    method: GET
    data_selector: unsubscribe_groups
    params: {}
- name: unsubscribe_groups
  endpoint:
    path: /resources/unsubscribe-groups
    method: GET
- name: campaign_action
  endpoint:
    path: /campaigns/actions
    method: POST
    data_selector: data
- name: segments
  endpoint:
    path: /segments
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: traits
  endpoint:
    path: /traits
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: segments
  endpoint:
    path: /segments
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: traits
  endpoint:
    path: /traits
    method: GET
- name: tags
  endpoint:
    path: /tags
    method: GET
- name: automations
  endpoint:
    path: /automations
    method: GET
- name: broadcasts
  endpoint:
    path: /broadcasts
    method: GET
- name: templates
  endpoint:
    path: /templates
    method: GET
- name: integrations
  endpoint:
    path: /integrations
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: segments
  endpoint:
    path: /segments
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: traits
  endpoint:
    path: /traits
    method: GET
- name: tags
  endpoint:
    path: /tags
    method: GET
- name: automations
  endpoint:
    path: /automations
    method: GET
- name: broadcasts
  endpoint:
    path: /broadcasts
    method: GET
- name: templates
  endpoint:
    path: /templates
    method: GET
- name: integrations
  endpoint:
    path: /integrations
    method: GET
notes:
- The CrowdPower JavaScript Tag is a web beacon that monitors and records user activity
  and sends it securely to your CrowdPower project.
- You must install the CrowdPower Service Worker in the root of your website; typically
  the /public directory.
- The CrowdPower tag automatically records page views for identified customers.
- Sessions are tracked automatically for each customer if sent to CrowdPower via the
  JavaScript tag or Beacon API.
- The update_session key cannot be used with the Segment integration.
- It is important that you DO NOT spam your customers.
- We have a zero tolerance policy on spam, and intentionally spamming customers will
  result in a permanent ban.
- All sessions are based on a 30-minute window by default.
- The connection uses OAuth, so it's as easy as clicking a button and authorizing
  the app for your team on Discord.
- The connection uses OAuth, so it's as easy as clicking a button and authorizing
  the app for your organization on Slack.
- The sync will not populate customer event feeds as that will happen going forward
  when new events are sent to CrowdPower from Stripe.
- Zapier polls for new data every 15 minutes
- Zapier polls for new data every 15 minutes.
errors: []
auth_info:
  mentioned_objects: []
client:
  base_url: https://beacon.crowdpower.io
  auth:
    type: oauth2
source_metadata: null
