resources:
- name: email_campaign_analysis
  endpoint:
    path: /api/v1/campaigns/analysis
    method: GET
    data_selector: results
- name: email_analysis
  endpoint:
    path: /api/v1/email_analysis
    method: GET
    data_selector: results
    params: {}
- name: convert_relative_links
  endpoint:
    path: /campaign-cleaner/convert-relative-links
    method: GET
    data_selector: links
    params: {}
- name: Campaign Analysis
  endpoint:
    path: /campaign-cleaner/campaign-analysis
    method: GET
- name: Clean Campaign
  endpoint:
    path: /campaign-cleaner/clean-campaign
    method: GET
- name: css_attributes
  endpoint:
    path: /features-settings/convert-attributes-to-styles
    method: GET
    data_selector: attributes
- name: Convert Relative Links
  endpoint:
    path: /features-settings/convert-relative-urls
    method: POST
    data_selector: links
- name: height_attribute_removal
  endpoint:
    path: /features-settings/height-attribute-removal
    method: GET
    data_selector: data
    params: {}
- name: Oversized Image Detection
  endpoint:
    path: /oversized-images/detection
    method: GET
    data_selector: images
    params: {}
- name: send_previews
  endpoint:
    path: /send_previews
    method: POST
    data_selector: result
    params: {}
- name: set_max_width_of_images
  endpoint:
    path: /features-settings/set-max-width-of-images
    method: GET
    data_selector: records
- name: Non-ASCII Character Replacement
  endpoint:
    path: /campaign-cleaner/clean-campaign
    method: GET
    data_selector: records
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: email
  endpoint:
    path: /api/v1/emails
    method: GET
    data_selector: data
    params: {}
- name: subprocessors
  endpoint:
    path: /subprocessors
    method: GET
    data_selector: subprocessors
    params: {}
- name: get_campaign_status
  endpoint:
    path: /v1/get_campaign_status
    method: POST
    data_selector: campaign_status
    params: {}
- name: get_campaign_list
  endpoint:
    path: /v1/get_campaign_list
    method: GET
    data_selector: campaign_list
    params: {}
- name: get_campaign
  endpoint:
    path: /v1/get_campaign
    method: POST
    data_selector: campaign
- name: campaign
  endpoint:
    path: /services/data/vXX.X/sobjects/Campaign
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Stripe
  endpoint:
    path: https://stripe.com
    method: GET
    data_selector: ''
    params: {}
- name: Cloudflare
  endpoint:
    path: https://cloudflare.com
    method: GET
    data_selector: ''
    params: {}
- name: QuadraNet
  endpoint:
    path: https://quadranet.com
    method: GET
    data_selector: ''
    params: {}
- name: Google
  endpoint:
    path: https://analytics.google.com
    method: GET
    data_selector: ''
    params: {}
- name: Freshdesk
  endpoint:
    path: https://freshworks.com
    method: GET
    data_selector: ''
    params: {}
- name: WebSpellChecker
  endpoint:
    path: https://www.webspellchecker.com
    method: GET
    data_selector: ''
    params: {}
- name: OpenAI
  endpoint:
    path: https://openai.com/
    method: GET
    data_selector: ''
    params: {}
- name: get_campaign_status
  endpoint:
    path: /v1/get_campaign_status
    method: POST
    data_selector: campaign_status
    params: {}
- name: get_campaign_list
  endpoint:
    path: /v1/get_campaign_list
    method: GET
    data_selector: campaign_list
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: get_campaign
  endpoint:
    path: /v1/get_campaign
    method: POST
    data_selector: campaign
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: campaign_data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: delete_campaign
  endpoint:
    path: /v1/delete_campaign
    method: POST
    data_selector: status
    params: {}
- name: get_campaign_list
  endpoint:
    path: /v1/get_campaign_list
    method: GET
    data_selector: campaign_list
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: get_campaign_status
  endpoint:
    path: /v1/get_campaign_status
    method: POST
    data_selector: campaign_status
    params: {}
- name: get_campaign
  endpoint:
    path: /v1/get_campaign
    method: POST
    data_selector: campaign
    params: {}
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: results
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign
  endpoint:
    path: /v1/get_campaign
    method: POST
    data_selector: campaign
- name: delete_campaign
  endpoint:
    path: /v1/delete_campaign
    method: POST
    data_selector: status
    params: {}
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: campaigns
- name: campaign_list
  endpoint:
    path: /v1/get_campaign_list
    method: GET
    data_selector: campaign_list
    params: {}
- name: get_campaign_pdf_analysis
  endpoint:
    path: /v1/get_campaign_pdf_analysis
    method: POST
    data_selector: PDF File Download
- name: get_campaign_status
  endpoint:
    path: /v1/get_campaign_status
    method: POST
    data_selector: campaign_status
- name: get_credits
  endpoint:
    path: /v1/get_credits
    method: GET
    data_selector: credits
    params: {}
- name: get_campaign
  endpoint:
    path: /v1/get_campaign
    method: POST
    data_selector: campaign
    params: {}
- name: campaign_details
  endpoint:
    path: /campaign/details
    method: GET
    data_selector: campaign
- name: send_campaign
  endpoint:
    path: /v1/send_campaign
    method: POST
    data_selector: campaign
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign
  endpoint:
    path: /v1/get_campaign
    method: POST
    data_selector: campaign
    params: {}
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: results
    params: {}
- name: campaign_status
  endpoint:
    path: /api-reference/endpoint/get-campaign-status
    method: GET
- name: campaign_pdf_analysis
  endpoint:
    path: /api-reference/endpoint/get-campaign-pdf-analysis
    method: GET
- name: get_campaign_pdf_analysis
  endpoint:
    path: /v1/get_campaign_pdf_analysis
    method: POST
    data_selector: PDF File Download
- name: get_credits
  endpoint:
    path: /v1/get_credits
    method: GET
    data_selector: credits
- name: send_campaign
  endpoint:
    path: /v1/send_campaign
    method: POST
    data_selector: campaign
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in Campaign Cleaner
- Uses AI to generate ALT Descriptions automatically
- Campaign Cleaner can point out missing ALT and TITLE attributes on images and links
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Campaign Cleaner will point out any missing ALT and TITLE attributes on images and
  links, in the Campaign Analysis tab and also on the Clean Campaign tab.
- Converting h tags to p tags with inline styles is crucial for consistent formatting
  across email clients.
- Removing height attributes from images improves responsive design and user experience.
- Relative references are not suitable for emails because the absolute path will be
  of the URL where the email is opened, not where image is stored.
- MSO Comments are not removed - MSO comments in emails are special conditional comments
  used to target Microsoft Outlook-specific versions, particularly older versions
  of Outlook that use the Word rendering engine for displaying HTML emails.
- Relative references are not suitable for emails because the absolute path will be
  of the URL where the email is opened, not where the image is stored.
- Campaign Cleaner was initially developed to optimize large fragments, but it does
  an excellent job optimizing the entire email.
- Diacritics characters replacement improves email deliverability and compatibility.
- HTML minifying can significantly improve email delivery by reducing the size of
  the HTML code.
- Converting h tags to p tags in email is crucial because many email clients, including
  Gmail and Yahoo, strip out the styles associated with h tags.
- This is an experimental feature of Campaign Cleaner, if you use this feature be
  sure to check your design and ensure it looks as you intended.
- Non-ASCII character replacement improves email deliverability.
- This feature is enabled by default for all paid accounts and grants you the ability
  to automatically resize and host the new image with us.
- Some objects like Contact may return nulls in deeply nested fields
- Default setting for automatic resizing and hosting images is off
- HTML sanitizing can improve email deliverability by removing potentially harmful
  elements.
- Inherited CSS can lead to larger email sizes and may negatively impact deliverability.
- Commonly used CSS styles for the surrounding div include font-size, text alignment,
  max-width, and horizontal centering to the parent element.
- This is an experimental feature and may change over time, we are mimicing the table
  structure as multiple divs with a little padding using css and changing the `display`
  to `flex.
- Some email clients don’t support advance functionality with divs, always check and
  make sure things are displaying correctly in all email clients.
- Non-ASCII character replacement can improve email deliverability and avoid spam
  filters.
- Spam filters often regard unsecured links with suspicion, potentially perceiving
  your email as a security risk.
- Using a tool like Campaign Cleaner can help identify and address potential issues
  impacting deliverability.
- The lack of support for certain image formats can significantly impact the presentation
  and delivery of emails.
- Images are stored on our Ultra-Fast Global CDN Edge powered by Cloudflare
- Setting the max-width of images can improve user experience and email deliverability.
- Every API key can be regenerated, replacing the old API Key with a new one.
- This is an experimental feature and may change over time
- Some email clients don’t support advance functionality with divs, always check and
  make sure things are displaying correctly in all email clients
- The lack of support for these formats can significantly impact the presentation
  and delivery of your emails.
- Emails with attachments are sometimes more likely to be flagged by spam filters,
  especially if the attachments are large.
- Effectively manage your users with Campaign Cleaner.
- Gain control over user permissions, roles, and settings, ensuring team collaboration
  and security.
- We replace unicode characters with their ASCII equivalent, if you’re using unicode
  characters in your file or image names, they can and most likely will appear to
  be broken.
- Most modern browsers will display the HTTPS version of images (if one exists), even
  if you specify the HTTP version.
- Ensure compliance with data privacy regulations for your security.
- You agrees to only use the software to process data that does not include personal
  identifiable information.
- Attaching images can increase the overall size of the email, which might affect
  loading times and bandwidth usage for recipients.
- Our software is designed for the sole purpose of processing and analyzing data related
  to email campaigns.
- We do not intentionally collect, process, or store personal information through
  our software.
- We replace unicode characters with their ASCII equivalent, If you’re using unicode
  characters in your file or image names, they can and most likely will appear to
  be broken.
- Stick to ASCII for Maximum Compatibility, if you want to ensure the broadest compatibility,
  especially across different systems and in network environments, sticking to ASCII
  characters in filenames is safest.
- Service is provided 'as is' and 'as available', without any warranties.
- Compliance with data privacy regulations for your security.
- Our software is designed for the sole purpose of processing and analyzing data related
  to email campaigns. These email campaigns should not contain any personal information
  as defined by the California Consumer Privacy Act (CCPA).
- In the event that we become aware that personal information has been processed through
  our software, we will take appropriate steps to remove this data in accordance with
  our data handling policies and applicable laws.
- When you see a 'completed' status, you can call the get_campaign API to retrieve
  the results.
- In the event of an error, you will get an 'error:' response, with a description
  of the reason.
- The campaign id will be used in other API calls.
- Failures can occur when the campaign_id doesn’t exist or was deleted.
- Some objects like Campaign may return nulls in deeply nested fields
- The response is of type object.
- If the status is completed, you will be able to retrieve the campaign via the get_campaign
  API
- Returns the file in the PDF format
- Campaign data includes various metrics and attributes.
- All submitted campaigns will be sanitized.
- Campaigns are normally processed in under 2 minutes.
- Some objects may return nulls in deeply nested fields
- Credits are consumed by calling the send_campaign API endpoint.
- Campaigns are normally processed in under 2 minutes, in most instances in a few
  seconds.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- Images may not appear for all recipients due to unsupported formats.
- 400 Bad Request
- 401 Unauthorized
- 403 Forbidden
- 404 Not Found
- 405 Method Not Allowed
- 406 Not Acceptable
- 407 Proxy Authentication Required
- 408 Request Timeout
- 409 Conflict
- 410 Gone
- 411 Length Required
- 412 Precondition Failed
- 413 Payload Too Large
- 414 URI Too Long
- 415 Unsupported Media Type
- 416 Range Not Satisfiable
- 417 Expectation Failed
- 418 I’m a teapot
- 421 Misdirected Request
- 422 Unprocessable Content
- 423 Locked
- 424 Failed Dependency
- 425 Too Early
- 426 Upgrade Required
- 428 Precondition Required
- 429 Too Many Requests
- 431 Request Header Fields Too Large
- 451 Unavailable For Legal Reasons
- 500 Internal Server Error
- 501 Not Implemented
- 502 Bad Gateway
- 503 Service Unavailable
- 504 Gateway Timeout
- 505 HTTP Version Not Supported
- 506 Variant Also Negotiates
- 507 Insufficient Storage
- 508 Loop Detected
- 510 Not Extended
- 511 Network Authentication Required
- 999 Rate Limited
- '400 Bad Request: Check request parameters'
- '400 Bad Request: The server cannot or will not process the request due to something
  that is perceived to be a client error.'
- '401 Unauthorized: Although the HTTP standard specifies ''unauthorized'', semantically
  this response means ''unauthenticated''.'
- '404 Not Found: The server cannot find the requested resource.'
- '429 Too Many Requests: The user has sent too many requests in a given amount of
  time.'
- '500 Internal Server Error: The server has encountered a situation it does not know
  how to handle.'
- '401 Unauthorized: Recheck API Key'
- '95: Replacement Code, Merge Tags Links'
- '96: Anchor Links starts with #'
- '97: Telephone Links start with tel:'
- '98: Email links, starts with mailto:'
- '99: Invalid URL - The provided website address is not valid.'
- 'error: campaign_id doesn’t exist or was deleted'
- 'error: description of the reason'
- 'error: Description of the reason for failure.'
- '404 Not Found: Check the campaign ID or endpoint path.'
- '200: OK'
- 'error: description of the reason.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - X-CC-API-Key
client:
  base_url: https://api.campaigncleaner.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.campaigncleaner.com/services/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
