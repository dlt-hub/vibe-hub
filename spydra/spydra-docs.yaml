resources:
- name: asset_tokenization
  endpoint:
    path: /services/data/vXX.X/sobjects/AssetTokenization
    method: GET
    data_selector: records
    params: {}
- name: organizations
  endpoint:
    path: /api/v1/organizations
    method: GET
    data_selector: data
    params: {}
- name: networks
  endpoint:
    path: /api/v1/networks
    method: GET
    data_selector: data
    params: {}
- name: organizations
  endpoint:
    path: /api/v1/organizations
    method: GET
    data_selector: data
    params: {}
- name: networks
  endpoint:
    path: /api/v1/networks
    method: GET
    data_selector: data
    params: {}
- name: asset_tokenization
  endpoint:
    path: /api/asset_tokenization
    method: GET
    data_selector: records
    params: {}
- name: listeners
  endpoint:
    path: /api/v1/listeners
    method: GET
    data_selector: data
    params: {}
- name: workflow
  endpoint:
    path: /services/data/vXX.X/sobjects/Workflow
    method: GET
    data_selector: records
    params: {}
- name: network_listener
  endpoint:
    path: /api/v1/network-listeners
    method: GET
    data_selector: data
    params: {}
- name: app_listener
  endpoint:
    path: /api/v1/app-listeners
    method: GET
    data_selector: data
    params: {}
- name: asset_tokenization
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
- name: custom_chaincode
  endpoint:
    path: /api/v1/custom_chaincode
    method: GET
    data_selector: data
- name: asset_tokenization
  endpoint:
    path: /api/v1/asset_tokenization
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /block-explorer/transactions
    method: GET
    data_selector: transactions
- name: blocks
  endpoint:
    path: /block-explorer/blocks
    method: GET
    data_selector: blocks
- name: Token Store
  endpoint:
    path: /api/token_store
    method: GET
    data_selector: records
    params: {}
- name: Token Sale
  endpoint:
    path: /api/token_sale
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: trade
  endpoint:
    path: /api/v1/trade
    method: GET
    data_selector: records
    params: {}
- name: payout
  endpoint:
    path: /api/v1/payout
    method: GET
    data_selector: records
    params: {}
- name: trades
  endpoint:
    path: /api/v1/trades
    method: GET
    data_selector: data
    params: {}
- name: payouts
  endpoint:
    path: /api/v1/payouts
    method: GET
    data_selector: data
    params: {}
- name: organizations
  endpoint:
    path: /api/v1/organizations
    method: GET
    data_selector: data
    params: {}
- name: networks
  endpoint:
    path: /api/v1/networks
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
- name: channel
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
    params: {}
- name: node
  endpoint:
    path: /services/data/v1/nodes
    method: GET
    data_selector: data
    params: {}
- name: organization
  endpoint:
    path: /services/data/v1/organizations
    method: GET
    data_selector: data
    params: {}
- name: asset_tokenization
  endpoint:
    path: /services/data/vXX.X/sobjects/AssetTokenization
    method: GET
    data_selector: records
    params: {}
- name: nodes
  endpoint:
    path: /api/v1/nodes
    method: GET
    data_selector: data
    params: {}
- name: channel
  endpoint:
    path: /channels
    method: GET
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: channels
    params: {}
- name: asset_tokenization
  endpoint:
    path: /api/asset_tokenization
    method: GET
    data_selector: records
    params: {}
- name: custom_chaincode
  endpoint:
    path: /api/custom_chaincode
    method: GET
    data_selector: records
    params: {}
- name: custom_chaincode
  endpoint:
    path: /custom/chaincode
    method: GET
    data_selector: records
    params: {}
- name: token_store
  endpoint:
    path: /api/token_store
    method: GET
    data_selector: data
    params: {}
- name: asset_tokenization
  endpoint:
    path: /api/v1/asset_tokenization
    method: GET
    data_selector: records
    params: {}
- name: Token Store
  endpoint:
    path: /api/token-store
    method: GET
    data_selector: records
- name: token
  endpoint:
    path: /api/v1/tokens
    method: GET
    data_selector: data
    params: {}
- name: token
  endpoint:
    path: /api/v1/token
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: data
    params: {}
- name: token_store
  endpoint:
    path: /token/store
    method: GET
    data_selector: records
- name: token_trade
  endpoint:
    path: /how-to/public-chain/manage-token-lifecycle/view-token-transactions
    method: GET
- name: investor_management
  endpoint:
    path: /how-to/public-chain/manage-token-lifecycle/view-token-investors
    method: GET
- name: token_sale
  endpoint:
    path: /how-to/public-chain/manage-token-lifecycle/view-create-a-token-sale
    method: GET
- name: payout_management
  endpoint:
    path: /how-to/public-chain/manage-token-lifecycle/returns-and-payouts
    method: GET
- name: document_management
  endpoint:
    path: /how-to/public-chain/manage-token-lifecycle/view-signed-documents
    method: GET
- name: token_store
  endpoint:
    path: /api/token_store
    method: GET
    data_selector: data
    params: {}
- name: asset
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: unpaid_invoices
  endpoint:
    path: /unpaid-invoices
    method: GET
    data_selector: invoices
- name: payment_method
  endpoint:
    path: /services/data/v1/paymentMethod
    method: GET
    data_selector: records
- name: asset_tokenization
  endpoint:
    path: /api/v1/asset_tokenization
    method: GET
    data_selector: data
    params: {}
- name: custom_chaincode
  endpoint:
    path: /api/v1/custom_chaincode
    method: GET
    data_selector: data
    params: {}
- name: unpaid_invoices
  endpoint:
    path: /unpaid-invoices
    method: GET
    data_selector: invoices
- name: add
  endpoint:
    path: /ipfs/add
    method: POST
- name: addByUrl
  endpoint:
    path: /ipfs/addByUrl
    method: POST
- name: ls
  endpoint:
    path: /ipfs/ls
    method: POST
- name: cat
  endpoint:
    path: /ipfs/cat
    method: POST
- name: pinAdd
  endpoint:
    path: /ipfs/pin/add
    method: POST
- name: pinRm
  endpoint:
    path: /ipfs/pin/rm
    method: POST
- name: pinLs
  endpoint:
    path: /ipfs/pin/ls
    method: POST
- name: add_file
  endpoint:
    path: /ipfs/add
    method: POST
- name: add_file_by_url
  endpoint:
    path: /ipfs/addByUrl
    method: POST
- name: list_directory
  endpoint:
    path: /ipfs/ls
    method: POST
- name: show_object_data
  endpoint:
    path: /ipfs/cat
    method: POST
- name: pin_add
  endpoint:
    path: /ipfs/pin/add
    method: POST
- name: pin_remove
  endpoint:
    path: /ipfs/pin/rm
    method: POST
- name: list_pinned
  endpoint:
    path: /ipfs/pin/ls
    method: POST
- name: asset
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: token
  endpoint:
    path: /api/v1/tokens
    method: GET
    data_selector: tokens
    params: {}
- name: add
  endpoint:
    path: /ipfs/add
    method: POST
    data_selector: result
- name: addByUrl
  endpoint:
    path: /ipfs/addByUrl
    method: POST
    data_selector: result
- name: ls
  endpoint:
    path: /ipfs/ls
    method: POST
    data_selector: result
- name: cat
  endpoint:
    path: /ipfs/cat
    method: POST
    data_selector: result
- name: pinAdd
  endpoint:
    path: /ipfs/pin/add
    method: POST
    data_selector: result
- name: pinRm
  endpoint:
    path: /ipfs/pin/rm
    method: POST
    data_selector: result
- name: pinLs
  endpoint:
    path: /ipfs/pin/ls
    method: POST
    data_selector: result
- name: add
  endpoint:
    path: /ipfs/add
    method: POST
- name: addByUrl
  endpoint:
    path: /ipfs/addByUrl
    method: POST
- name: ls
  endpoint:
    path: /ipfs/ls
    method: POST
- name: cat
  endpoint:
    path: /ipfs/cat
    method: POST
- name: pin_add
  endpoint:
    path: /ipfs/pin/add
    method: POST
- name: pin_rm
  endpoint:
    path: /ipfs/pin/rm
    method: POST
- name: pin_ls
  endpoint:
    path: /ipfs/pin/ls
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: asset
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: asset_tokenization
  endpoint:
    path: /api/v1/asset-tokenization
    method: GET
    data_selector: records
- name: custom_chaincode
  endpoint:
    path: /api/v1/custom-chaincode
    method: GET
    data_selector: records
- name: asset
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: data
    params: {}
notes:
- Tokenize Your Real-World Assets with Our Blockchain Platform.
- Embrace Transparency, Security, and Compliance
- Decentralization as a Service
- API Driven Infrastructure
- Uses OAuth2 with refresh token — requires setup of connected app in Spydra.
- Some objects may return nulls in deeply nested fields.
- Private Blockchains provide control over data access.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Requires OAuth2 authentication setup.
- This will guide you in setting up your Spydra account, Creating organizations, and
  deploying apps onto private blockchain networks.
- Take complete control of your tokenized assets through our comprehensive lifecycle
  management system.
- This powerful suite of tools enables you to oversee every aspect of your digital
  assets, including transaction monitoring, investor relationship management, sales
  tracking, automated payout distributions, and regulatory compliance documentation.
- The platform streamlines complex operations while maintaining transparency and security
  throughout the entire token lifecycle.
- Uses OAuth2 with refresh token — requires setup of connected app in Spydra
- Some objects may return nulls in deeply nested fields
- Requires setup of connected app in Spydra
- Credit applies only to the first three organizations for an account
- OAuth2 with refresh token is required for setup.
- Spydra follows ERC-1155 token standard on the Ethereum blockchain.
- Requires OAuth2 setup in the Spydra console
- Some responses may contain nulls in nested objects
- Block explorer provides insights into transactions, addresses, and overall state
  of the blockchain network.
- Some objects like Contact may return nulls in deeply nested fields
- Requires OAuth2 authentication with a connected app
- Spydra allows its users to create and manage Hyperledger fabric networks and deploy
  pre-configured chaincode applications on the network.
- Some endpoints may have rate limits
- Channel on Spydra is a private subnet of communication between two or more specific
  network members.
- Ensure to configure OAuth2 correctly for access.
- Ensure all nodes are set up correctly before querying.
- API usage may be subject to rate limits.
- Each channel is defined by member organizations, shared ledgers, chaincode applications,
  ordering services, and anchor peers.
- A Hyperledger Fabric Network is a prerequisite for deploying the applications.
- If you do not have a network already, you will be prompted to create a network and
  redirected to deploy the application.
- Custom Apps/Chaincodes are programmable code that define the business logic and
  rules governing the interactions and transactions within a blockchain network.
- Requires OAuth2 authentication.
- Ensure to manage API keys properly.
- Some API endpoints may have rate limits
- Uses OAuth2 with refresh token
- Issuers/asset owners need to define the tokenomics of their real-world asset.
- They must determine specific attributes of the token representing the real-world
  asset.
- Requires setup of connected app in api
- Ensure proper setup of OAuth2 credentials for access.
- Spydra offers pay-as-per-your-usage pricing without restricting users on features.
- Organizations will be billed monthly for the resources utilized across all the Networks.
- Spydra offers $400 free credits to the first two organizations created by the users.
- The opt-in option is only available to organizations which have a saved payment
  method.
- Network admins have the ability to modify the billing preferences of network members
  at any time.
- Requires setup of connected app in Spydra.
- Spydra's billing is based on each organization's resource usage (or consumption)
  on all the Networks.
- An organisation will have an option to pay for an other organisation for a network.
- Adding a card to your account is an essential step in availing certain features
  and benefits of Spydra and setting up auto-pay for billing.
- Payment methods are defined at Organization level.
- If there is only one card added, it becomes the Primary Payment method.
- Auto-pay is enabled once a Primary card is added.
- Invoices for the Organization are generated for each organization on the 1st of
  each month; the payment must be completed before the 15th of every month, failing
  which the organization's APIs will be disabled after a 7 more days grace period.
- Invoices will be auto-paid if you have available credits in your account.
- When an invoice is generated, you will have 15 days to clear the dues. Post that,
  you will be moved to the next bucket.
- Org admins will receive an email notification when an invoice is generated and will
  be notified on the Spydra Console.
- If the invoice is not paid within 15 days from the generated date, the countdown
  timer to disable API starts.
- If the invoice is not cleared in 22 days (15 days + 7-day grace period) since the
  invoice is generated, your organization's APIs will be disabled.
- If the APIs for your Organization are disabled, your Organization will not be able
  to send or received data from the Network.
- All your listeners/callbacks will not function.
- If the invoices are not paid after 7 more days grace period, the Organization will
  be removed from all the Networks.
- All your resources deployed on this Network (Nodes) will be deleted forever.
- You will not be able to access the Networks you were part of.
- You will have to join the Network with an invitation and set up all the configurations
  from scratch again.
- If you are the only Organization in the Network, you will be removed from the Network,
  and the Network will be removed.
- If you are the only Network Admin for the Network, you will be removed from the
  Network and access all the rights to the Network.
- If the only Network Admin of a Network is removed due to unpaid invoices, the Network
  members are requested to contact support@spydra.app.
- OAuth2 with refresh token required for access.
- Spydra offers $400 free credits for the first two organizations in an account to
  help them see the value of Spydra without any limitations.
- When an invoice is generated, you will have 15 days to clear the dues.
- Org admins will receive an email notification when an invoice is generated.
- If the invoice is not cleared in 22 days since the invoice is generated, your organization's
  APIs will be disabled.
- Custom chain codes are programmable code that define the business logic and rules
  governing the interactions and transactions within a blockchain network.
- Setup of connected app is required for OAuth2.
- Unfortunately, you won't be able to access your account if it is blocked or banned.
- Integration requires setting up API keys and OAuth.
- Rate limits apply for API requests.
- Payments related to your usage can be made through payment methods such as credit
  cards.
- You won't be able to access your account if it is blocked or banned.
- Ensure to handle rate limits as specified in the documentation.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'INVALID_REQUEST: Check the request parameters'
- 'UNAUTHORIZED: Ensure valid authentication'
- 'FORBIDDEN: Check permissions for the requested resource'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '403 Forbidden: Check your permissions'
- '404 Not Found: Verify the endpoint URL'
- '401 Unauthorized: Check token validity'
- '403 Forbidden: Check permissions'
- '401 Unauthorized: Check your OAuth token.'
- '404 Not Found: Verify the endpoint URL.'
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: Ensure the endpoint is correct.'
- '500 Internal Server Error: Retry the request later.'
- '401 Unauthorized: Check your API key or OAuth token.'
- '404 Not Found: Endpoint may be incorrect.'
- '429 Too Many Requests: Reduce the frequency of requests.'
- '401 Unauthorized: Check OAuth token validity.'
- '401 Unauthorized: Check your credentials.'
- 'INVALID_TOKEN: Check token validity.'
- 'ACCESS_DENIED: Verify permissions.'
- '401 Unauthorized: Check your credentials and scopes.'
- '404 Not Found: Verify the endpoint and path.'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify API keys and permissions.'
- '429 Too Many Requests: Rate limit exceeded.'
- 'RATELIMIT_EXCEEDED: Too many requests made in a short period.'
- 'INVALID_TOKEN: Check the validity of the OAuth token.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Oauth2
  - OAuthToken
client:
  base_url: https://spydra.app
source_metadata: null
