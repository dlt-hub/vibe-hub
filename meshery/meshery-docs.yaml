resources:
- name: application
  endpoint:
    path: /api/application
    method: GET
    data_selector: applications
    params: {}
- name: environments
  endpoint:
    path: /api/environments
    method: GET
    data_selector: environments
    params: {}
- name: application
  endpoint:
    path: /api/application
    method: GET
    data_selector: null
    params:
      updated_after: <timestamp>
      order: '{field}'
      search: <application name>
      page: '{page-number}'
      pagesize: '{pagesize}'
- name: environments
  endpoint:
    path: /api/environments
    method: GET
    data_selector: null
    params:
      order: '{field}'
      page: '{page-number}'
      pagesize: '{pagesize}'
      search: '{environments_name}'
      orgID: '{orgid}'
      filter: '{condition}'
- name: events
  endpoint:
    path: /api/events
    method: GET
    data_selector: null
    params: {}
- name: applications
  endpoint:
    path: /api/application
    method: GET
    data_selector: applications
    params:
      page: 0
      pagesize: 10
- name: environments
  endpoint:
    path: /api/environments
    method: GET
    data_selector: environments
    params:
      page: 0
      pagesize: 20
- name: events
  endpoint:
    path: /api/events
    method: GET
    data_selector: events
    params: {}
- name: filters
  endpoint:
    path: /api/filter
    method: GET
    data_selector: filters
    params:
      page: 0
      pagesize: 10
- name: users
  endpoint:
    path: /api/identity/users
    method: GET
    data_selector: users
    params:
      page: 0
      pagesize: 20
- name: connections
  endpoint:
    path: /api/integrations/connections/{connectionKind}
    method: GET
    params:
      page: 0
      pagesize: 10
- name: meshmodel_components_register
  endpoint:
    path: /api/meshmodel/components/register
    method: POST
- name: meshmodel_generate
  endpoint:
    path: /api/meshmodel/generate
    method: POST
- name: meshmodel_update_status
  endpoint:
    path: /api/meshmodel/update/status
    method: POST
- name: meshmodel_validate
  endpoint:
    path: /api/meshmodel/validate
    method: POST
- name: meshmodels_categories
  endpoint:
    path: /api/meshmodels/categories
    method: GET
    params:
      page: 1
      pagesize: 25
- name: meshmodels_categories_specific
  endpoint:
    path: /api/meshmodels/categories/{category}
    method: GET
    params:
      page: 1
      pagesize: 25
- name: meshmodels_categories_specific_components
  endpoint:
    path: /api/meshmodels/categories/{category}/components
    method: GET
    params:
      page: 1
      pagesize: 25
- name: meshmodels_categories_specific_components_name
  endpoint:
    path: /api/meshmodels/categories/{category}/components/{name}
    method: GET
    params:
      page: 1
      pagesize: 25
- name: meshmodels_models
  endpoint:
    path: /api/meshmodels/models
    method: GET
    params:
      page: 1
      pagesize: 25
- name: meshmodels_models_specific
  endpoint:
    path: /api/meshmodels/models/{model}
    method: GET
    params:
      page: 1
      pagesize: 25
- name: meshmodels_models_specific_components
  endpoint:
    path: /api/meshmodels/models/{model}/components
    method: GET
    params:
      page: 1
      pagesize: 25
- name: meshmodels_models_specific_components_name
  endpoint:
    path: /api/meshmodels/models/{model}/components/{name}
    method: GET
    params:
      page: 1
      pagesize: 25
- name: meshmodels_models_specific_policies
  endpoint:
    path: /api/meshmodels/models/{model}/policies
    method: GET
    params:
      page: 1
      pagesize: 25
- name: meshmodels_models_specific_relationships
  endpoint:
    path: /api/meshmodels/models/{model}/relationships
    method: GET
    params:
      page: 1
      pagesize: 25
- name: meshmodels_relationships
  endpoint:
    path: /api/meshmodels/relationships
    method: GET
    params:
      page: 1
      pagesize: 25
- name: meshmodels_relationships_evaluate
  endpoint:
    path: /api/meshmodels/relationships/evaluate
    method: POST
- name: patterns_catalog
  endpoint:
    path: /api/pattern/catalog
    method: GET
    params:
      page: 0
      pagesize: 10
- name: pattern_catalog_unpublish
  endpoint:
    path: /api/pattern/catalog/unpublish
    method: DELETE
    data_selector: null
    params: {}
- name: pattern_clone
  endpoint:
    path: /api/pattern/clone/{id}
    method: POST
    data_selector: null
    params: {}
- name: pattern_deploy
  endpoint:
    path: /api/pattern/deploy
    method: POST
    data_selector: null
    params: {}
- name: pattern_download
  endpoint:
    path: /api/pattern/download/{id}
    method: GET
    data_selector: null
    params: {}
- name: pattern_import
  endpoint:
    path: /api/pattern/import
    method: POST
    data_selector: null
    params: {}
- name: pattern_types
  endpoint:
    path: /api/pattern/types
    method: GET
    data_selector: null
    params: {}
- name: performance_profile
  endpoint:
    path: /api/perf/profile
    method: GET
    data_selector: null
    params: {}
- name: performance_profile_result
  endpoint:
    path: /api/perf/profile/result/{id}
    method: GET
    data_selector: null
    params: {}
- name: provider_capabilities
  endpoint:
    path: /api/provider/capabilities
    method: GET
    data_selector: null
    params: {}
- name: providers
  endpoint:
    path: /api/providers
    method: GET
    data_selector: null
    params: {}
- name: smi_results
  endpoint:
    path: /api/smi/results
    method: GET
    data_selector: null
    params: {}
- name: system_database
  endpoint:
    path: /api/system/database
    method: GET
    data_selector: null
    params: {}
- name: application
  endpoint:
    path: /api/application
    method: GET
    data_selector: ''
    params:
      page: 0
      pagesize: 10
- name: events
  endpoint:
    path: /api/events
    method: GET
    data_selector: ''
    params: {}
- name: environments
  endpoint:
    path: /api/environments
    method: GET
    data_selector: ''
    params:
      page: 0
      pagesize: 20
- name: filters
  endpoint:
    path: /api/filter
    method: GET
    data_selector: ''
    params:
      page: 0
      pagesize: 10
- name: categories
  endpoint:
    path: /api/meshmodels/categories
    method: GET
    params:
      page: 1
      pagesize: 25
- name: components
  endpoint:
    path: /api/meshmodels/components
    method: GET
    params:
      page: 1
      pagesize: 25
- name: models
  endpoint:
    path: /api/meshmodels/models
    method: GET
    params:
      page: 1
      pagesize: 25
- name: registrants
  endpoint:
    path: /api/meshmodels/registrants
    method: GET
    params:
      page: 1
      pagesize: 25
- name: relationships
  endpoint:
    path: /api/meshmodels/relationships
    method: GET
    params:
      page: 1
      pagesize: 25
- name: profile
  endpoint:
    path: /api/perf/profile
    method: GET
- name: profile_result
  endpoint:
    path: /api/perf/profile/result
    method: GET
    params:
      page: '0'
      pagesize: '10'
- name: provider
  endpoint:
    path: /api/provider
    method: GET
- name: provider_capabilities
  endpoint:
    path: /api/provider/capabilities
    method: GET
- name: providers
  endpoint:
    path: /api/providers
    method: GET
- name: smi_results
  endpoint:
    path: /api/smi/results
    method: GET
    params:
      page: '0'
      pagesize: '10'
- name: database
  endpoint:
    path: /api/system/database
    method: GET
    params:
      page: '1'
      pagesize: '10'
- name: adapters
  endpoint:
    path: /api/system/adapters
    method: GET
- name: available_adapters
  endpoint:
    path: /api/system/adapters/available
    method: GET
- name: kubernetes_contexts
  endpoint:
    path: /api/system/kubernetes/contexts
    method: GET
    params:
      page: '0'
      pagesize: '10'
- name: kubernetes_ping
  endpoint:
    path: /api/system/kubernetes/ping
    method: GET
- name: kubernetes_register
  endpoint:
    path: /api/system/kubernetes/register
    method: POST
- name: mesh_sync_grafana
  endpoint:
    path: /api/system/meshsync/grafana
    method: GET
- name: mesh_sync_prometheus
  endpoint:
    path: /api/system/meshsync/prometheus
    method: GET
- name: mesh_sync_resources
  endpoint:
    path: /api/system/meshsync/resources
    method: GET
- name: mesh_sync_resources_summary
  endpoint:
    path: /api/system/meshsync/resources/summary
    method: GET
- name: system_version
  endpoint:
    path: /api/system/version
    method: GET
- name: view_file
  endpoint:
    path: /api/system/viewFile
    method: GET
- name: user_login
  endpoint:
    path: /api/user/login
    method: GET
- name: user_logout
  endpoint:
    path: /api/user/logout
    method: GET
- name: performance_profiles
  endpoint:
    path: /api/user/performance/profiles
    method: GET
- name: application
  endpoint:
    path: /api/application
    method: GET
    data_selector: ''
    params:
      pagesize: 10
- name: events
  endpoint:
    path: /api/events
    method: GET
    data_selector: ''
    params: {}
- name: environments
  endpoint:
    path: /api/environments
    method: GET
    data_selector: ''
    params:
      pagesize: 20
- name: identity
  endpoint:
    path: /api/identity/users
    method: GET
    data_selector: ''
    params:
      pagesize: 20
- name: categories
  endpoint:
    path: /api/meshmodels/categories
    method: GET
    data_selector: records
    params:
      page: 1
      pagesize: 25
- name: components
  endpoint:
    path: /api/meshmodels/components
    method: GET
    data_selector: records
    params:
      page: 1
      pagesize: 25
- name: models
  endpoint:
    path: /api/meshmodels/models
    method: GET
    data_selector: records
    params:
      page: 1
      pagesize: 25
- name: user_profile
  endpoint:
    path: /api/user/profile/{id}
    method: GET
    data_selector: ''
    params: {}
- name: performance_profiles
  endpoint:
    path: /api/user/performance/profiles
    method: GET
    data_selector: ''
    params:
      order: '{field}'
      page: '0'
      pagesize: '10'
      search: '{}'
- name: performance_results
  endpoint:
    path: /api/user/performance/profiles/{id}/results
    method: GET
    data_selector: ''
    params:
      order: '{field}'
      page: '0'
      pagesize: '10'
      search: '{result_name|mesh|url}'
- name: load_test_preferences
  endpoint:
    path: /api/user/prefs/perf
    method: GET
    data_selector: ''
    params:
      uuid: String
- name: schedules
  endpoint:
    path: /api/user/schedules
    method: GET
    data_selector: ''
    params:
      order: '{field}'
      page: '0'
      pagesize: '10'
- name: events
  endpoint:
    path: /api/v2/events
    method: GET
- name: workspaces
  endpoint:
    path: /api/workspaces
    method: GET
    params:
      pagesize: 20
      page: 0
- name: schedules
  endpoint:
    path: /api/workspaces/{id}/environments
    method: GET
- name: schedules
  endpoint:
    path: /api/v1/schedules
    method: GET
- name: schedules
  endpoint:
    path: /services/data/vXX.X/sobjects/Schedule
    method: GET
    data_selector: records
- name: meshery_server
  endpoint:
    path: /meshery/server
    method: GET
    data_selector: data
    params: {}
- name: kubernetes_clusters
  endpoint:
    path: /meshery/kubernetes/clusters
    method: GET
    data_selector: clusters
    params: {}
- name: install_mesheryctl
  endpoint:
    path: /install
    method: GET
    data_selector: commands
    params: {}
- name: kubernetes_clusters
  endpoint:
    path: /api/kubernetes_clusters
    method: POST
    data_selector: data
    params: {}
- name: grafana_servers
  endpoint:
    path: /api/grafana_servers
    method: POST
    data_selector: data
    params: {}
- name: prometheus_servers
  endpoint:
    path: /api/prometheus_servers
    method: POST
    data_selector: data
    params: {}
- name: Administration
  endpoint:
    path: /administration/permissions
    method: GET
    data_selector: permissions
    params: {}
- name: Broker
  endpoint:
    path: /meshery.io/v1alpha1/brokers
    method: GET
    data_selector: metadata
    params: {}
- name: MeshSync
  endpoint:
    path: /api/v1alpha1/meshsync
    method: POST
    data_selector: spec
    params: {}
- name: MeshSync
  endpoint:
    path: /meshsyncs
    method: GET
    data_selector: items
    params: {}
- name: meshery-MeshSync
  endpoint:
    path: /api/v1alpha1/meshsync
    method: POST
    data_selector: data
    params: {}
- name: navigator
  endpoint:
    path: /capabilities
    method: GET
    data_selector: extensions.navigator
- name: account
  endpoint:
    path: /capabilities
    method: GET
    data_selector: extensions.account
- name: user_prefs
  endpoint:
    path: /capabilities
    method: GET
    data_selector: extensions.user_prefs
- name: collaborator
  endpoint:
    path: /capabilities
    method: GET
    data_selector: extensions.collaborator
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Broker Controller
  endpoint:
    path: /concepts/architecture/broker
    method: GET
- name: MeshSync Controller
  endpoint:
    path: /concepts/architecture/meshsync
    method: GET
- name: Meshery Adapter for Traefik Mesh
  endpoint:
    path: /extensibility/adapters/traefik-mesh
    method: GET
- name: Meshery Adapter for Network Service Mesh
  endpoint:
    path: /extensibility/adapters/nsm
    method: GET
- name: Meshery Adapter for NGINX Service Mesh
  endpoint:
    path: /extensibility/adapters/nginx-sm
    method: GET
- name: Meshery Adapter for Linkerd
  endpoint:
    path: /extensibility/adapters/linkerd
    method: GET
- name: Meshery Adapter for Kuma
  endpoint:
    path: /extensibility/adapters/kuma
    method: GET
- name: Meshery Adapter for Istio
  endpoint:
    path: /extensibility/adapters/istio
    method: GET
- name: Meshery Adapter for Consul
  endpoint:
    path: /extensibility/adapters/consul
    method: GET
- name: Meshery Adapter for Cilium Service Mesh
  endpoint:
    path: /extensibility/adapters/cilium
    method: GET
- name: Meshery Adapter for App Mesh
  endpoint:
    path: /extensibility/adapters/app-mesh
    method: GET
- name: Meshery Adapter for Tanzu Service Mesh
  endpoint:
    path: /extensibility/adapters/tanzu-sm
    method: GET
- name: Meshery Adapter for Nighthawk
  endpoint:
    path: /extensibility/adapters/nighthawk
    method: GET
- name: azure_storage_account
  endpoint:
    path: /guides/tutorials/deploy-azure-storage-account
    method: GET
    data_selector: resources
    params: {}
- name: ec2_controller
  endpoint:
    path: /catalog/deployment/ec2-controller-design-8f7e1431-3885-4ebf-9ef7-d2ec64bd4eb5
    method: GET
    data_selector: design
    params: {}
- name: vpc_workflow
  endpoint:
    path: /catalog/content/catalog/vpc-workflow-design-50cac19e-209c-4acf-b91c-4784281db033
    method: GET
    data_selector: design
    params: {}
- name: ec2_instances
  endpoint:
    path: /catalog/content/catalog/ec2-instances-design-a344f109-2d92-41da-8644-3bc285c3ca9e
    method: GET
    data_selector: design
    params: {}
- name: CronJob
  endpoint:
    path: /guides/tutorials/exploring-kubernetes-cronjobs
    method: GET
    data_selector: resources
    params: {}
- name: config_map
  endpoint:
    path: /kubernetes/config-map
    method: POST
    data_selector: data
    params: {}
- name: secret
  endpoint:
    path: /kubernetes/secret
    method: POST
    data_selector: data
    params: {}
- name: Deployment
  endpoint:
    path: /deployments
    method: POST
    data_selector: deployment
    params:
      replicas: 2
      matchLabel: tutorial:deployment
      image: meshery/meshery-milestone:latest
      name: meshery-milestone
- name: mysql-deployment
  endpoint:
    path: /examples/application/wordpress/mysql-deployment.yaml
    method: GET
    data_selector: records
    params: {}
- name: wordpress-deployment
  endpoint:
    path: /examples/application/wordpress/wordpress-deployment.yaml
    method: GET
    data_selector: records
    params: {}
- name: meshery-consul
  endpoint:
    path: /meshery-consul
    method: GET
- name: meshery-istio
  endpoint:
    path: /meshery-istio
    method: GET
- name: meshery-kuma
  endpoint:
    path: /meshery-kuma
    method: GET
- name: meshery-linkerd
  endpoint:
    path: /meshery-linkerd
    method: GET
- name: meshery-nginx-sm
  endpoint:
    path: /meshery-nginx-sm
    method: GET
- name: meshery-osm
  endpoint:
    path: /meshery-osm
    method: GET
- name: meshery-traefik-mesh
  endpoint:
    path: /meshery-traefik-mesh
    method: GET
- name: meshery-cilium
  endpoint:
    path: /meshery-cilium
    method: GET
- name: Consul
  endpoint:
    path: /adapters/consul
    method: GET
- name: meshery_component_versions
  endpoint:
    path: /meshery/component/versions
    method: GET
    data_selector: versions
    params: {}
- name: infrastructure_versions
  endpoint:
    path: /meshery/infrastructure/versions
    method: GET
    data_selector: versions
    params: {}
- name: consul-client
  endpoint:
    path: https://github.com/meshery/meshery-Consul
    method: GET
- name: consul-server
  endpoint:
    path: https://github.com/meshery/meshery-Consul
    method: GET
- name: consul-client
  endpoint:
    path: /service-meshes/adapters/Consul
    method: GET
- name: consul-server
  endpoint:
    path: /service-meshes/adapters/Consul
    method: GET
- name: istiod
  endpoint:
    path: /pod/istiod
    method: GET
    data_selector: ''
    params: {}
- name: istio-egressgateway
  endpoint:
    path: /pod/istio-egressgateway
    method: GET
    data_selector: ''
    params: {}
- name: istio-ingressgateway
  endpoint:
    path: /pod/istio-ingressgateway
    method: GET
    data_selector: ''
    params: {}
- name: grafana-addon
  endpoint:
    path: /pod/grafana-addon
    method: GET
    data_selector: ''
    params: {}
- name: prometheus-addon
  endpoint:
    path: /pod/prometheus-addon
    method: GET
    data_selector: ''
    params: {}
- name: details
  endpoint:
    path: /pod/details
    method: GET
    data_selector: ''
    params: {}
- name: productpage
  endpoint:
    path: /pod/productpage
    method: GET
    data_selector: ''
    params: {}
- name: ratings
  endpoint:
    path: /pod/ratings
    method: GET
    data_selector: ''
    params: {}
- name: reviews-v1
  endpoint:
    path: /pod/reviews-v1
    method: GET
    data_selector: ''
    params: {}
- name: reviews-v2
  endpoint:
    path: /pod/reviews-v2
    method: GET
    data_selector: ''
    params: {}
- name: reviews-v3
  endpoint:
    path: /pod/reviews-v3
    method: GET
    data_selector: ''
    params: {}
- name: pod/istiod
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
- name: pod/istio-egressgateway
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
- name: pod/istio-ingressgateway
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
- name: pod/grafana-addon
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
- name: pod/prometheus-addon
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
- name: pod
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
- name: istio
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
- name: pod_istiod
  endpoint:
    path: /pod/istiod
    method: GET
- name: pod_details
  endpoint:
    path: /pod/details
    method: GET
- name: pod_productpage
  endpoint:
    path: /pod/productpage
    method: GET
- name: pod_ratings
  endpoint:
    path: /pod/ratings
    method: GET
- name: pod_reviews_v1
  endpoint:
    path: /pod/reviews-v1
    method: GET
- name: pod_reviews_v2
  endpoint:
    path: /pod/reviews-v2
    method: GET
- name: pod_reviews_v3
  endpoint:
    path: /pod/reviews-v3
    method: GET
- name: istio
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
- name: pod_ratings
  endpoint:
    path: /pod/ratings
    method: GET
- name: pod_reviews_v1
  endpoint:
    path: /pod/reviews-v1
    method: GET
- name: pod_reviews_v2
  endpoint:
    path: /pod/reviews-v2
    method: GET
- name: pod_reviews_v3
  endpoint:
    path: /pod/reviews-v3
    method: GET
- name: pod_istiod
  endpoint:
    path: /pod/istiod
    method: GET
- name: pod_istio_egressgateway
  endpoint:
    path: /pod/istio-egressgateway
    method: GET
- name: pod_istio_ingressgateway
  endpoint:
    path: /pod/istio-ingressgateway
    method: GET
- name: pod_grafana_addon
  endpoint:
    path: /pod/grafana-addon
    method: GET
- name: pod_prometheus_addon
  endpoint:
    path: /pod/prometheus-addon
    method: GET
- name: pod_details
  endpoint:
    path: /pod/details
    method: GET
- name: pod_productpage
  endpoint:
    path: /pod/productpage
    method: GET
- name: pod
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: results
- name: pod_productpage
  endpoint:
    path: /pod/productpage
    method: GET
- name: pod_ratings
  endpoint:
    path: /pod/ratings
    method: GET
- name: pod_reviews_v1
  endpoint:
    path: /pod/reviews-v1
    method: GET
- name: pod_reviews_v2
  endpoint:
    path: /pod/reviews-v2
    method: GET
- name: pod_reviews_v3
  endpoint:
    path: /pod/reviews-v3
    method: GET
- name: istiod
  endpoint:
    path: /services/data/istiod
    method: GET
    data_selector: results
- name: istio-egressgateway
  endpoint:
    path: /services/data/istio-egressgateway
    method: GET
    data_selector: results
- name: istio-ingressgateway
  endpoint:
    path: /services/data/istio-ingressgateway
    method: GET
    data_selector: results
- name: grafana-addon
  endpoint:
    path: /services/data/grafana-addon
    method: GET
    data_selector: results
- name: prometheus-addon
  endpoint:
    path: /services/data/prometheus-addon
    method: GET
    data_selector: results
- name: pod_istiod
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: pod/istiod
- name: pod_istio_egressgateway
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: pod/istio-egressgateway
- name: pod_istio_ingressgateway
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: pod/istio-ingressgateway
- name: pod_details
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: pod/details
- name: pod_productpage
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: pod/productpage
- name: pod_ratings
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: pod/ratings
- name: pod_reviews_v1
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: pod/reviews-v1
- name: pod_reviews_v2
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: pod/reviews-v2
- name: pod_reviews_v3
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: pod/reviews-v3
- name: istio
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
- name: pod
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: results
    params: {}
- name: istio
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: test results
- name: pod
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: results
- name: istiod
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
- name: details
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
- name: productpage
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
- name: ratings
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
- name: reviews-v1
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
- name: reviews-v2
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
- name: reviews-v3
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
- name: istiod
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: details
    params: {}
- name: istio-egressgateway
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: details
    params: {}
- name: istio-ingressgateway
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: details
    params: {}
- name: grafana-addon
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: details
    params: {}
- name: prometheus-addon
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: details
    params: {}
- name: istiod
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: results
- name: istio-egressgateway
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: results
- name: istio-ingressgateway
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: results
- name: grafana-addon
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: results
- name: prometheus-addon
  endpoint:
    path: /service-meshes/adapters/istio
    method: GET
    data_selector: results
- name: kuma_infrastructure
  endpoint:
    path: /adapters/extensibility/adapters
    method: GET
    data_selector: sample_applications
- name: meshery-kuma
  endpoint:
    path: /meshery-kuma
    method: GET
- name: kuma
  endpoint:
    path: /service-meshes/adapters/Kuma
    method: GET
    data_selector: records
    params: {}
- name: kuma_control_plane
  endpoint:
    path: /service-meshes/adapters/Kuma
    method: GET
    data_selector: test_results
    params: {}
- name: kuma-control-plane
  endpoint:
    path: /service-meshes/adapters/Kuma
    method: GET
- name: meshery_component_version
  endpoint:
    path: /meshery/component/version
    method: GET
    data_selector: records
- name: linkerd
  endpoint:
    path: /service-meshes/adapters/Linkerd
    method: GET
    data_selector: test_results
- name: test_results
  endpoint:
    path: /test/results
    method: GET
    data_selector: results
    params: {}
- name: linkerd
  endpoint:
    path: /service-meshes/adapters/Linkerd
    method: GET
- name: test_results
  endpoint:
    path: /service-meshes/adapters/Linkerd
    method: GET
    data_selector: results
- name: linkerd
  endpoint:
    path: /service-meshes/adapters/Linkerd
    method: GET
    data_selector: results
    params: {}
- name: linkerd-destination
  endpoint:
    path: /linkerd-destination
    method: GET
- name: linkerd-identity
  endpoint:
    path: /linkerd-identity
    method: GET
- name: linkerd-proxy-injector
  endpoint:
    path: /linkerd-proxy-injector
    method: GET
- name: linkerd-destination
  endpoint:
    path: /service-meshes/adapters/Linkerd
    method: GET
- name: linkerd-identity
  endpoint:
    path: /service-meshes/adapters/Linkerd
    method: GET
- name: linkerd-proxy-injector
  endpoint:
    path: /service-meshes/adapters/Linkerd
    method: GET
- name: meshery_component
  endpoint:
    path: /meshery/component
    method: GET
    data_selector: components
    params: {}
- name: meshery_server
  endpoint:
    path: /meshery/server
    method: GET
    data_selector: servers
    params: {}
- name: infrastructure
  endpoint:
    path: /meshery/infrastructure
    method: GET
    data_selector: infrastructures
    params: {}
- name: nginx-mesh-api
  endpoint:
    path: /service-meshes/adapters/nginx-sm
    method: GET
- name: nginx-mesh-metrics
  endpoint:
    path: /service-meshes/adapters/nginx-sm
    method: GET
- name: grafana
  endpoint:
    path: /service-meshes/adapters/nginx-sm
    method: GET
- name: jaeger
  endpoint:
    path: /service-meshes/adapters/nginx-sm
    method: GET
- name: nginx-mesh-api
  endpoint:
    path: /service-meshes/adapters/nginx-sm
    method: GET
- name: nginx-mesh-metrics
  endpoint:
    path: /service-meshes/adapters/nginx-sm
    method: GET
- name: prometheus
  endpoint:
    path: /service-meshes/adapters/nginx-sm
    method: GET
- name: pod-osm-bootstrap
  endpoint:
    path: /pod/osm-bootstrap
    method: GET
- name: pod-osm-controller
  endpoint:
    path: /pod/osm-controller
    method: GET
- name: pod-osm-injector
  endpoint:
    path: /pod/osm-injector
    method: GET
- name: osm-bootstrap
  endpoint:
    path: /service-meshes/adapters/OSM
    method: GET
- name: osm-controller
  endpoint:
    path: /service-meshes/adapters/OSM
    method: GET
- name: osm-injector
  endpoint:
    path: /service-meshes/adapters/OSM
    method: GET
- name: meshery_component_version
  endpoint:
    path: /meshery/component/version
    method: GET
    data_selector: results
    params: {}
- name: meshery_server_version
  endpoint:
    path: /meshery/server/version
    method: GET
    data_selector: results
    params: {}
- name: infrastructure_version
  endpoint:
    path: /meshery/infrastructure/version
    method: GET
    data_selector: results
    params: {}
- name: traefik-mesh
  endpoint:
    path: /service-meshes/adapters/traefik-mesh
    method: GET
- name: traefik-mesh
  endpoint:
    path: /service-meshes/adapters/traefik-mesh
    method: GET
- name: traefik-mesh
  endpoint:
    path: /service-meshes/adapters/traefik-mesh
    method: GET
    data_selector: test results
    params: {}
- name: meshery-cilium
  endpoint:
    path: /meshery-cilium/integration-tests
    method: GET
- name: Components
  endpoint:
    path: /concepts/logical/components
    method: GET
    data_selector: components
- name: designs
  endpoint:
    path: /api/designs
    method: GET
    data_selector: designs
    params: {}
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: models
    params: {}
- name: environments
  endpoint:
    path: /concepts/logical/environments
    method: GET
    data_selector: resources
    params: {}
- name: connections
  endpoint:
    path: /concepts/logical/connections
    method: GET
    data_selector: resources
    params: {}
- name: credentials
  endpoint:
    path: /concepts/logical/credentials
    method: GET
    data_selector: resources
    params: {}
- name: relationships
  endpoint:
    path: /relationships
    method: GET
    data_selector: data
- name: system_check
  endpoint:
    path: /guides/mesheryctl/system-check
    method: GET
- name: system_start
  endpoint:
    path: /system/start
    method: POST
- name: system_stop
  endpoint:
    path: /system/stop
    method: POST
- name: system_update
  endpoint:
    path: /system/update
    method: POST
- name: system_reset
  endpoint:
    path: /system/reset
    method: POST
- name: system_restart
  endpoint:
    path: /system/restart
    method: POST
- name: system_status
  endpoint:
    path: /system/status
    method: GET
- name: system_dashboard
  endpoint:
    path: /system/dashboard
    method: GET
- name: system_login
  endpoint:
    path: /system/login
    method: POST
- name: system_check
  endpoint:
    path: /system/check
    method: POST
- name: system_channel
  endpoint:
    path: /system/channel
    method: POST
- name: system_context
  endpoint:
    path: /system/context
    method: POST
- name: system_provider
  endpoint:
    path: /system/provider
    method: POST
- name: BookInfo
  endpoint:
    path: /bookinfo
    method: GET
- name: Emojivoto
  endpoint:
    path: /emojivoto
    method: GET
- name: ImageHub
  endpoint:
    path: /imagehub
    method: GET
- name: HTTPBin
  endpoint:
    path: /httpbin
    method: GET
- name: Linkerd Books
  endpoint:
    path: /linkerd-books
    method: GET
- name: Online Boutique
  endpoint:
    path: /online-boutique
    method: GET
- name: performance_test
  endpoint:
    path: /performance/test
    method: POST
    data_selector: results
- name: MeshSync
  endpoint:
    path: /meshery/sync
    method: POST
    data_selector: data
    params: {}
- name: performance_tests
  endpoint:
    path: /performance/tests
    method: GET
    data_selector: results
    params: {}
- name: model_creation
  endpoint:
    path: /guides/configuration-management/create-models
    method: GET
    data_selector: models
    params: {}
- name: semantic_components
  endpoint:
    path: /components/semantic
    method: GET
- name: non_semantic_components
  endpoint:
    path: /components/non_semantic
    method: GET
- name: kubernetes_components
  endpoint:
    path: /components/kubernetes
    method: GET
- name: integrated_technologies
  endpoint:
    path: /components/integrated_technologies
    method: GET
- name: snapshot
  endpoint:
    path: /snapshot
    method: POST
    data_selector: snapshot
    params:
      file: chart-URI
      name: snapshot-name
      email: email
- name: import_design
  endpoint:
    path: /api/pattern/import
    method: POST
    data_selector: null
    params: {}
- name: export_design
  endpoint:
    path: /api/pattern/download/{id}
    method: GET
    data_selector: null
    params: {}
- name: Kanvas Snapshot With File-located in Fs
  endpoint:
    path: /extensions/kanvas-snapshot
    method: POST
    data_selector: jobs
    params: {}
- name: Kanvas Snapshot With URL-Upload
  endpoint:
    path: /extensions/kanvas-snapshot
    method: POST
    data_selector: jobs
    params: {}
- name: azure-assigned-identity
  endpoint:
    path: /integrations/aks-appgw-fe/components/azure-assigned-identity
    method: GET
- name: azure-identity
  endpoint:
    path: /integrations/aks-appgw-fe/components/azure-identity
    method: GET
- name: azure-identity-binding
  endpoint:
    path: /integrations/aks-appgw-fe/components/azure-identity-binding
    method: GET
- name: azure-pod-identity-exception
  endpoint:
    path: /integrations/aks-appgw-fe/components/azure-pod-identity-exception
    method: GET
- name: argo-cd-export
  endpoint:
    path: /argo-cd-export
    method: GET
- name: argo-cd
  endpoint:
    path: /argo-cd
    method: GET
- name: application
  endpoint:
    path: /application
    method: GET
- name: application-set
  endpoint:
    path: /application-set
    method: GET
- name: app-project
  endpoint:
    path: /app-project
    method: GET
- name: cache-parameter-group
- name: cache-subnet-group
- name: field-export
- name: adopted-resource
- name: snapshot
- name: user
- name: user-group
- name: replication-group
- name: cache-cluster
- name: serverless-cache
- name: terminator
  endpoint:
    path: /integrations/aws-node-termination-handler
    method: GET
- name: field-export
  endpoint: {}
- name: adopted-resource
  endpoint: {}
- name: bucket
  endpoint: {}
- name: target-group-binding
  endpoint:
    path: /integrations/aws-target-group-binding
    method: GET
- name: awx-backup
  endpoint:
    path: /integrations/awx-operator/components/awx-backup
    method: GET
- name: awx-restore
  endpoint:
    path: /integrations/awx-operator/components/awx-restore
    method: GET
- name: awx
  endpoint:
    path: /integrations/awx-operator/components/awx
    method: GET
- name: awx-mesh-ingress
  endpoint:
    path: /integrations/awx-operator/components/awx-mesh-ingress
    method: GET
- name: batch-account
  endpoint:
    path: /integrations/azure-batch/components/batch-account
    method: GET
- name: disk-access
- name: disk-encryption-set
- name: disk
- name: image
- name: snapshot
- name: virtual-machine
- name: virtual-machine-scale-set
- name: virtual-machine-scale-sets-extension
- name: virtual-machines-extension
- name: registry
  endpoint:
    path: /integrations/azure-container-registry/components/registry
    method: GET
- name: registry-replication
  endpoint:
    path: /integrations/azure-container-registry/components/registry-replication
    method: GET
- name: iot-hub
  endpoint:
    path: /path/to/iot-hub/endpoint
    method: GET
    data_selector: data
    params: {}
- name: action-group
  endpoint:
    path: /integrations/azure-insights/components/action-group
    method: GET
- name: autoscale-setting
  endpoint:
    path: /integrations/azure-insights/components/autoscale-setting
    method: GET
- name: component
  endpoint:
    path: /integrations/azure-insights/components/component
    method: GET
- name: diagnostic-setting
  endpoint:
    path: /integrations/azure-insights/components/diagnostic-setting
    method: GET
- name: metric-alert
  endpoint:
    path: /integrations/azure-insights/components/metric-alert
    method: GET
- name: scheduled-query-rule
  endpoint:
    path: /integrations/azure-insights/components/scheduled-query-rule
    method: GET
- name: webtest
  endpoint:
    path: /integrations/azure-insights/components/webtest
    method: GET
- name: open-shift-cluster
  endpoint:
    path: /api/meshery/azure-red-hat-openshift
    method: GET
    data_selector: components
- name: resource-group
  endpoint:
    path: /api/v1/resource-group
    method: GET
- name: server-farm
  endpoint:
    path: /integrations/azure-web/components/server-farm
    method: GET
- name: site
  endpoint:
    path: /integrations/azure-web/components/site
    method: GET
- name: sites-sourcecontrol
  endpoint:
    path: /integrations/azure-web/components/sites-sourcecontrol
    method: GET
- name: certificate-request
  endpoint:
    path: /integrations/cert-manager/components/certificate-request
    method: GET
- name: certificate
  endpoint:
    path: /integrations/cert-manager/components/certificate
    method: GET
- name: challenge
  endpoint:
    path: /integrations/cert-manager/components/challenge
    method: GET
- name: cluster-issuer
  endpoint:
    path: /integrations/cert-manager/components/cluster-issuer
    method: GET
- name: issuer
  endpoint:
    path: /integrations/cert-manager/components/issuer
    method: GET
- name: order
  endpoint:
    path: /integrations/cert-manager/components/order
    method: GET
- name: bucket
  endpoint:
    path: /integrations/crossplane-provider-exoscale/components/bucket
    method: GET
- name: iam-key
  endpoint:
    path: /integrations/crossplane-provider-exoscale/components/iam-key
    method: GET
- name: kafka
  endpoint:
    path: /integrations/crossplane-provider-exoscale/components/kafka
    method: GET
- name: my-sql
  endpoint:
    path: /integrations/crossplane-provider-exoscale/components/my-sql
    method: GET
- name: open-search
  endpoint:
    path: /integrations/crossplane-provider-exoscale/components/open-search
    method: GET
- name: postgre-sql
  endpoint:
    path: /integrations/crossplane-provider-exoscale/components/postgre-sql
    method: GET
- name: provider-config
  endpoint:
    path: /integrations/crossplane-provider-exoscale/components/provider-config
    method: GET
- name: provider-config-usage
  endpoint:
    path: /integrations/crossplane-provider-exoscale/components/provider-config-usage
    method: GET
- name: redis
  endpoint:
    path: /integrations/crossplane-provider-exoscale/components/redis
    method: GET
notes:
- Requests must include a valid JWT access token in the HTTP headers.
- Users can be filtered through query parameters.
- Requests to any of the API endpoints must be authenticated and include a valid JWT
  access token in the HTTP headers.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- For production deployments, it is important to preselect the choice of Remote Provider
  in order to control which identity providers authorized.
- Make sure current-context is set to minikube.
- It is advisable to install Meshery in your kubernetes clusters
- Customizing your Meshery Provider Callback URL is helpful when deploying Meshery
  behind multiple layers of networking infrastructure.
- It is advisable to install Meshery in your AKS clusters
- It is advisable to install Meshery in your EKS clusters
- Out-of-cluster EKS deployments not currently supported
- It is advisable to install Meshery in your GKE clusters
- Meshery Server supports customizing authentication flow callback URL
- Meshery Server supports customizing the callback URL for your remote provider
- Meshery deploys with LoadBalancer service type by default.
- 'The --port-forward flag is intended for use exclusively when Meshery is deployed
  in a Kubernetes cluster (platform: kubernetes).'
- It is advisable to install Meshery in your Minikube clusters
- If you encounter a connections refused error while uploading your kubeconfig, try
  changing your cluster server URL to the external API address of minikube.
- Manage your AKS clusters with Meshery. Deploy Meshery in AKS in-cluster or out-of-cluster.
- Build and contribute to Meshery using GitHub Codespaces
- Install Meshery on Elastic Kubernetes Service. Deploy Meshery in EKS in-cluster
  or outside of EKS out-of-cluster.
- Install Meshery on Google Kubernetes Engine. Deploy Meshery in GKE in-cluster or
  outside of GKE out-of-cluster.
- Install Meshery on Kubernetes using Helm. Deploy Meshery in Kubernetes in-cluster.
- Install Meshery on KinD. Deploy Meshery in KinD in-cluster or outside of KinD out-of-cluster.
- Install Meshery on Kubernetes. Deploy Meshery in Kubernetes in-cluster or outside
  of Kubernetes out-of-cluster.
- Install Meshery on KubeSphere
- Meshery server supports customizing authentication flow callback URL
- To install or upgrade `mesheryctl`, execute the provided curl commands.
- mesheryctl uses your current Kubernetes context
- 'Confirm if this Kubernetes cluster you want Meshery to interact with by running
  the command: kubectl config get-contexts'
- Adapters are optional components that enhance and extend Meshery’s core functionality.
- 'Recommended: Configure your meshconfig, using `mesheryctl system context` to customize
  which Meshery Adapters are used in which deployments.'
- The Playground is connected to live Kubernetes clusters, and while these clusters
  are refreshed on a daily basis, the clusters do need to be protected from nefarious
  actors.
- All work done in Kanvas Designer is persisted to your user account.
- Meshery is community-built and welcomes collaboration.
- All make commands should be run in a terminal from within the Meshery’s main folder.
- Must be v1alpha1 as its the only version supported at the moment
- Must be set to Broker
- Currently only one instance of MeshSync is supported.
- The Custom Resource is used to configure the Broker and Events to be tracked by
  MeshSync
- Some commands have optional flags for organization ID.
- Default output format is YAML unless specified.
- We keep the reporter updated as the status of the security issue is addressed.
- 'Meshery server supports customizing authentication flow callback URL, which can
  be configured in the following way: $ MESHERY_SERVER_CALLBACK_URL=https://custom-host
  mesheryctl system start'
- For production deployments, it is important to preselect the choice of Remote Provider
  in order to control which identity providers are authorized.
- Remote Providers require user authentication.
- Local Provider does not require authentication.
- Some objects like Contact may return nulls in deeply nested fields
- MeshSync operates in operator mode (default) or embedded mode.
- Meshery now supports managing Azure resources declaratively through Kubernetes by
  integrating with Azure Service Operator (ASO).
- Requires setup of Azure Service Operator in Kubernetes.
- Ensure Azure CLI is installed and authenticated.
- This guide shows how to manage AWS resources visually through Meshery’s Kanvas interface.
- Basic understanding of Kubernetes concepts required.
- Meshery Playground access is needed.
- ConfigMaps are used to manage configuration data.
- Secrets are used for sensitive information such as passwords.
- As of this writing, Meshery Playground supports only NodePort at the moment.
- This tutorial is completely visual and beginner-friendly. No YAML or CLI is required.
- Using hostPath for Persistent Volumes is generally not recommended for production
  environments.
- Meshery UI and Meshery Broker are configured for LoadBalancer service networking
  by default.
- The --port-forward flag is intended for use exclusively when Meshery is deployed
  in a Kubernetes cluster.
- Some objects may return nulls in deeply nested fields
- Test results for various platforms include minikube versions.
- 'Platform: minikube v1.25.3'
- Test results available for multiple platforms including minikube.
- Test results may vary based on platform version.
- 'Platform: minikube v1.20.1'
- Linkerd’s control plane will be deployed to the linkerd namespace.
- Linkerd does not support deployments of its control plane into namespaces under
  a different name.
- 'Platform: minikube v1.31.4'
- Test results are available for various platform versions
- Test results may vary based on platform and version.
- The Meshery Adapter for NGINX Service Mesh is currently under construction (stable
  state).
- This API provides compatibility information for meshery components and their versions.
- Ensure to check the specific version links for detailed release notes.
- The Meshery Adapter for Cilium Service Mesh is currently under construction (stable
  state), which means that the adapter is not functional and cannot be interacted
  with through the Meshery UI at the moment.
- Designs are versioned. Each time a Design is saved, a new version is created.
- Designs can be validated. Validation involves checking the syntax of the Design.
- Environments allow you to logically group related connections and their associated
  credentials.
- Resources that belong to other environments will continue to belong to those other
  environments.
- If the user creates a Hierarchical Inventory relationship between Pod, Job, and
  any other high-level Kubernetes resources like Deployment, StatefulSet, or CronJobs,
  after the relationship has been established unfortunately, there’s no system to
  remove the extra pod configuration automatically.
- 'If the design is not configured with labels selectors and replicas appropriately,
  there’s a possibility of additional resources getting provisioned when deployed.
  eg: The relationship between a Pod and deployment can result in 2 Pods (1 pod coming
  as part of deployment resource) and 1 Deployment.'
- Use either Meshery UI or CLI to interact with the Registry.
- Meshery CLI offers commands to register, list, retrieve, update, and delete models,
  components, and relationships directly from the command line.
- Meshery can function without Meshery Operator, but some functions of Meshery will
  be disable / unusable.
- Catalog functions as a cloud marketplace for cloud native infrastructure configurations.
- Meshconfig refers to a configuration file found at ~/.meshery/config.yaml.
- By default, mesheryctl will look to this location for your meshconfig.
- You might need to restart your shell for this setup to take effect.
- Pre-deployment checks verify the environment readiness to deploy Meshery.
- Post-deployment checks ensure that the running deployment of Meshery and Meshery
  adapters are working as expected.
- Notifications can be filtered based on severity, status, action, category, and author.
- Meshery dashboard provides an easy-to-use interface for performance management
- Users can run tests with various configurations
- User needs to set the Prometheus URL and API key to create and query boards.
- User needs to set the Grafana URL and API key to create and query boards.
- Meshery provides a highly configurable set of load profiles with various, tuneable
  facets.
- A Model can be only imported if it contains at least a valid Component or Relationship.
- Importing Models with Connection definitions is not yet supported.
- Model can be exported in 2 format and OCI or Compress file.
- By default it is exported as yaml.
- Patterns will be importable and exportable as OCI images in v0.8.0.
- Patterns are essentially atomic designs with one or more components made in composed
  into an atomic, reusable design.
- Meshery uses a set of default visual styles to provide at-a-glance information about
  the type of connection an edge represents.
- Understanding the defaults is key to interpreting component relationships.
- Without source access, these dependency issues are practically unresolvable.
- The filesystem-approach asks for your relative file-path and automatically merges
  all the yaml files together to bundle up into one.
- Meshery Registry is a vital component within Meshery, serving as a centralized repository
  for managing a diverse range of cloud and cloud native resources.
- Collaborative and visual infrastructure as design for AppsCode Application
- Collaborative and visual infrastructure as design for AWS CloudWatch Logs
- Collaborative and visual infrastructure as design for Capsule Proxy
- The Meshery Registry is a vital component within Meshery
- The Meshery Registry is a vital component within Meshery, serving as a centralized
  repository for managing a diverse range of cloud and cloud native resources.
- Collaborative and visual infrastructure as design for OpenStack (Crossplane)
errors:
- '403 Forbidden: Invalid token or insufficient permissions.'
- '404 Not Found: Endpoint does not exist or resource not found.'
- '403: Forbidden - Check your authentication token.'
- '404: Not Found - The requested resource does not exist.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'ErrInstallCiliumCode-1000: Error with Cilium operation'
- 'ErrTarXZFCode-1001: Error while extracting file'
- 'ErrMeshConfigCode-1002: Error configuration mesh'
- 'ErrRunCiliumCmdCode-1003: Error running cilium command'
- 'ErrDownloadBinaryCode-1004: Error downloading Cilium binary'
- 'ErrInstallBinaryCode-1005: Error installing Cilium binary'
- 'ErrSampleAppCode-1006: Error with sample app operation'
- 'ErrCustomOperationCode-1007: Error with custom operation'
- 'ErrCreatingNSCode-1008: Error creating namespace'
- 'ErrRunExecutableCode-1009: Error running executable'
- 'ErrSidecarInjectionCode-1010: '
- 'ErrOpInvalidCode-1011: Invalid operation'
- 'ErrApplyHelmChartCode-1012: Error occurred while applying Helm Chart'
- 'ErrNilClientCode-1013: kubernetes client not initialized'
- 'ErrInvalidOAMComponentTypeCode-1014: invalid OAM component name: '
- 'ErrCiliumCoreComponentFailCode-1015: error in Cilium core component'
- 'ErrProcessOAMCode-1016: error performing OAM operations'
- 'ErrParseCiliumCoreComponentCode-1017: Cilium core component manifest parsing failing'
- 'ErrParseOAMComponentCode-1018: error parsing the component'
- 'ErrParseOAMConfigCode-1019: error parsing the configuration'
- 'ErrGetLatestReleaseCode-1020: Could not get latest version'
- 'ErrEmptyConfigCode-1021: Config is empty'
- 'ErrGetLatestReleasesCode-1022: Unable to fetch release info'
- 'ErrGetLatestReleaseNamesCode-1023: Failed to extract release names'
- 'ErrGetManifestNamesCode-1024: Unable to fetch manifest names from github'
- 'ErrMakingBinExecutableCode-1025: Error while making cilium cli an executable'
- 'ErrLoadNamespaceCode-1026: Error occurred while applying namespace'
- 'ErrUnpackingTarCode-1027: Error occurred while unpacking tar'
- 'ErrUnzipFileCode-1028: Error while unzipping'
- 'ErrDownloadingTarCode-1029: Error occurred while downloading Cilium tar'
- 'ErrGettingReleaseCode-1030: Could not get latest version'
- 'ErrFetchCiliumVersionsCode-1031: could not get any cilium versions'
- 'ErrEmptyConfigCode-1000: Config is empty'
- 'ErrGetLatestReleasesCode-1001: unable to fetch release info'
- 'ErrGetLatestReleaseNamesCode-1002: failed to extract release names'
- 'ErrInstallUsingIstioctlCode-1003: Error with istio operation'
- 'ErrUnzipFileCode-1004: Error while unzipping'
- 'ErrTarXZFCode-1005: Error while extracting file'
- 'ErrMeshConfigCode-1006: Error configuration mesh'
- 'ErrRunIstioCtlCmdCode-1007: Error running istioctl command'
- 'ErrSampleAppCode-1008: Error with sample app operation'
- 'ErrEnvoyFilterCode-1009: Error with envoy filter operation'
- 'ErrApplyPolicyCode-1010: Error with apply policy operation'
- 'ErrCustomOperationCode-1011: Error with custom operation'
- 'ErrAddonFromTemplateCode-1012: Error with addon install operation'
- 'ErrInvalidInstallationProfileCode-1013: Error while installing istio due to wrong
  profile'
- 'ErrCreatingIstioClientCode-1014: Unable to create a new istio client'
- 'ErrIstioVetSyncCode-1015: Failed to sync'
- 'ErrIstioVetCode-1016: error while running Istio vet command'
- 'ErrParseOAMComponentCode-1017: error parsing the component'
- 'ErrParseOAMConfigCode-1018: error parsing the configuration'
- 'ErrNilClientCode-1019: kubernetes client not initialized'
- 'ErrParseIstioCoreComponentCode-1020: istio core component manifest parsing failing'
- 'ErrInvalidOAMComponentTypeCode-1021: invalid OAM component name:'
- 'ErrOpInvalidCode-1022: Invalid operation'
- 'ErrIstioCoreComponentFailCode-1023: error in istio core component'
- 'ErrProcessOAMCode-1024: error performing OAM operations'
- 'ErrApplyHelmChartCode-1025: Error occurred while applying Helm Chart'
- 'ErrGettingIstioReleaseCode-1026: Error occurred while fetching Istio release artifacts'
- 'ErrUnsupportedPlatformCode-1027: requested platform is not supported by Istio'
- 'ErrIstioctlNotFoundCode-1028: Unable to find Istioctl'
- 'ErrDownloadingTarCode-1029: Error occurred while downloading Istio tar'
- 'ErrUnpackingTarCode-1030: Error occurred while unpacking tar'
- 'ErrMakingBinExecutableCode-1031: Error while making istioctl an executable'
- 'ErrLoadNamespaceCode-1032: Error while labeling namespace:'
- 'ErrFetchIstioVersionsCode-1033: could not get any istio versions'
- 'ErrInstallLinkerdCode-1003: Error with Linkerd operation:'
- 'ErrMeshConfigCode-1004: Error configuration mesh:'
- 'ErrFetchManifestCode-1005: Error fetching mesh manifest: %s'
- 'ErrDownloadBinaryCode-1006: Error downloading Linkerd binary:'
- 'ErrInstallBinaryCode-1007: Error installing Linkerd binary:'
- 'ErrClientConfigCode-1008: Error setting client config:'
- 'ErrClientSetCode-1009: Error setting clientset:'
- 'ErrSampleAppCode-1011: Error with sample app operation'
- 'ErrCustomOperationCode-1012: Error with custom operation'
- 'ErrOpInvalidCode-1013: Invalid operation'
- 'ErrInvalidOAMComponentTypeCode-1014: invalid OAM component name:'
- 'ErrLinkerdCoreComponentFailCode-1015: error in linkerd core component'
- 'ErrParseLinkerdCoreComponentCode-1017: linkerd core component manifest parsing
  failing'
- 'ErrApplyHelmChartCode-1020: error applying helm chart'
- 'ErrNilClientCode-1021: Kubernetes client not initialized'
- 'ErrAddonFromHelmCode-1022: Error with addon install operation by helm chart'
- 'ErrInvalidVersionForMeshInstallationCode-1023: Invalid version passed for helm
  based installation'
- 'ErrAnnotatingNamespaceCode-1024: Error with annotating namespace'
- 'ErrFetchLinkerdVersionsCode-1033: could not get any linkerd versions'
- 'ErrCertEncodeCode-1101: Failed to encode:'
- 'ErrEncodeCertificatesPEMCode-1102: Failed to encode certificate PEM:'
- 'ErrEncodePrivateKeyPEMCode-1103: Failed to encode private key PEM:'
- 'ErrCreateRootCACode-1104: Failed to create Root CA:'
- 'ErrGeneratePKCode-1105: Failed to create Private Key:'
- 'ErrGenerateDefaultRootCACode-1106: Failed to create default Root CA:'
- 'ErrGetFileNamesCode-1107: failed to get filenames for dynamic component generation'
- 'ErrCreatingUUIDInstanceCode-1001: Unable to create UUID instance'
- 'ErrRegisteringMesheryOAMTraitsCode-1002: Error registering local OAM traits'
- 'ErrRegisteringMesheryOAMWorkloadsCode-1003: Error registering local OAM workloads'
- 'ErrRetrievingUserHomeDirectoryCode-1004: Unable to retrieve the user''s home directory'
- 'ErrCreatingUserDataDirectoryCode-1005: Unable to create the directory for storing
  user data at:'
- 'ErrCreatingMapPreferencePersisterInstanceCode-1006: Unable to create a new MapPreferencePersister
  instance'
- 'ErrDatabaseAutoMigrationCode-1007: Unable to auto migrate to database'
- 'ErrInvalidURLSkippingProviderCode-1008: is invalid url skipping provider'
- 'ErrListenAndServeCode-1009: ListenAndServe Error'
- 'ErrCleaningUpLocalProviderCode-1010: Error cleaning up local provider'
- 'ErrClosingDatabaseInstanceCode-1011: Error closing database instance'
- 'ErrInitializingRegistryManagerCode-1012: could not initialize registry manager'
- 'ErrInitializingKeysRegistrationCode-1013: could not initialize keys registry manager'
- 'ErrInvalidK8SConfigNilCode-1014: No valid Kubernetes config found. Make sure to
  pass contextIDs in query parameters.'
- 'ErrNilClientCode-1015: Kubernetes client not initialized'
- 'ErrRecordPreferencesCode-1016: unable to save user config data'
- 'ErrGrafanaConfigCode-1017: Grafana endpoint not configured'
- 'ErrPrometheusConfigCode-1018: Prometheus endpoint not configured'
- 'ErrGrafanaQueryCode-1019: Unable to query Grafana'
- 'ErrPrometheusQueryCode-1020: Unable to query prometheus'
- 'ErrPrometheusBoardsCode-1021: unable to get Prometheus boards'
- 'ErrStaticBoardsCode-1022: unable to get static board'
- 'ErrRequestBodyCode-1023: unable to read the request body'
- 'ErrParseBoolCode-1024: unable to parse :'
- 'ErrStreamEventsCode-1025: There was an error connecting to the backend to get events'
- 'ErrStreamClientCode-1026: Event streaming ended'
- 'ErrPublishSmiResultsCode-1027: Error publishing SMI results'
- 'ErrPluginOpenCode-1028: Error opening the plugin'
- 'ErrPluginLookupCode-1029: Error performing a plugin lookup'
- 'ErrPluginRunCode-1030: Error running Meshery plugin'
- 'ErrParseFormCode-1031: unable to parse form'
- 'ErrQueryGetCode-1032: unable to get:'
- 'ErrGetResultCode-1033: unable to get result'
- 'ErrConvertToSpecCode-1034: unable to convert to spec'
- 'ErrFetchSMIResultsCode-1035: unable to fetch SMI results'
- 'ErrFormFileCode-1036: error getting kubeconfig file'
- 'ErrReadConfigCode-1037: error reading config.'
- 'ErrLoadConfigCode-1038: unable to load Kubernetes config'
- 'ErrOpenFileCode-1039: Unable to open file:'
- 'ErrKubeVersionCode-1040: Unable to get Kubernetes version.'
- 'ErrAddAdapterCode-1041: meshLocationURL is empty'
- 'ErrRetrieveDataCode-1042: Unable to retrieve the requested data'
- 'ErrValidAdapterCode-1043: Unable to find valid Adapter URL'
- 'ErrOperationIDCode-1044: Error generating the operation Id'
- 'ErrMeshClientCode-1045: Error creating a mesh client Error pinging the mesh adapter'
- 'ErrApplyChangeCode-1046: Error applying the change'
- 'ErrRetrieveMeshDataCode-1047: Error getting operations for the adapter. Error getting
  component name.'
- 'ErrApplicationFailureCode-1048: failed to the application'
- 'ErrDecodingCode-1049: Error decoding the :'
- 'ErrRetrieveUserTokenCode-1050: Failed to get the user token'
- 'ErrFailToSaveCode-1051: Failed to Save:'
- 'ErrFailToDeleteCode-1052: Failed to Delete:'
- 'ErrWriteResponseCode-1053: Error writing response'
- 'ErrTestConfigsCode-1054: Error fetching test configs'
- 'ErrInvalidGenValueCode-1055: Invalid value for gen'
- 'ErrFailToLoadExtensionsCode-1056: Failed to Load Extensions from Package.'
- 'ErrConversionCode-1057: unable to convert YAML to JSON'
- 'ErrParseDurationCode-1058: error parsing test duration'
- 'ErrLoadTestCode-1059: Load test error:'
- 'ErrFetchKubernetesCode-1060: Unable to ping Kubernetes. Unable to run a discovery
  scan for Kubernetes cluster.'
- 'ErrBlankNameCode-1062: Error: name field is blank.'
- 'ErrInvalidLTURLCode-1063: invalid load test url:'
- 'ErrVersionCompareCode-1064: failed to compare latest and current version of Meshery.'
- 'ErrSaveSessionCode-1065: unable to save session.'
- 'ErrKubeClientCode-1066: Failed to Create Kube Client'
- 'ErrWorkloadDefinitionCode-1067: Failed to load Workload Definition'
- 'ErrTraitDefinitionCode-1068: Failed to Encode Trait Definition'
- 'ErrScopeDefinitionCode-1069: Failed to Encode Scope Definition'
- 'ErrPatternFileCode-1070: Failed to Parse design File'
- 'ErrExecutionPlanCode-1071: Failed to Create Execution Plan'
- 'ErrInvalidPatternCode-1072: Invalid design, execution is infeasible'
- 'ErrPatternDeployCode-1073: Unable to deploy the selected design "%s'
- 'ErrCreateDirCode-1074: Error creating directory'
- 'ErrInvalidRequestObjectCode-1075: Error invalid request object:'
- 'ErrChangeK8sContextCode-1076: Error changing context'
- 'ErrSavingUserPreferenceCode-1077: Error saving user preference.'
- 'ErrGetFilterCode-1078: Error failed to get filter'
- 'ErrSaveFilterCode-1079: Error failed to save filter'
- 'ErrDecodeFilterCode-1080: Error failed to decode filters data into go slice'
- 'ErrEncodeFilterCode-1081: Error failed to encode filter'
- 'ErrImportFilterCode-1082: Error failed to import filter'
- 'ErrFetchFilterCode-1083: Error failed to fetch filter.'
- 'ErrDeleteFilterCode-1084: Error failed to delete filter.'
- 'ErrSavePatternCode-1085: Error failed to save design.'
- 'ErrSaveApplicationCode-1086: Error failed to save application.'
- 'ErrGetPatternCode-1087: Error failed to get design'
- 'ErrDeletePatternCode-1088: Error failed to delete design'
- 'ErrFetchPatternCode-1089: Error failed to fetch design'
- 'ErrImportPatternCode-1090: Error failed to import design'
- 'ErrEncodePatternCode-1091: Error failed to encode design'
- 'ErrDecodePatternCode-1092: Error failed to decode design data into go slice'
- 'ErrParsePatternCode-1093: Error failed to parse pattern file'
- 'ErrConvertPatternCode-1094: Error failed to convert design file to Cytoscape object'
- 'ErrInvalidKubeConfigCode-1095: Invalid Kube Config'
- 'ErrInvalidKubeHandlerCode-1096: Kubernetes cluster is unavailable for'
- 'ErrInvalidKubeContextCode-1097: Invalid Kube Context'
- 'ErrValidateCode-1098: failed to validate the given value against the schema'
- 'ErrApplicationContentCode-1099: failed to the application content'
- 'ErrRemoteApplicationURLCode-1100: Error failed to persist remote application'
- 'ErrClonePatternCode-1101: Error failed to clone design'
- 'ErrCloneFilterCode-1102: Error failed to clone filter'
- 'ErrGenerateComponentsCode-1103: failed to generate components for the given payload'
- 'ErrPublishCatalogPatternCode-1104: Error failed to publish catalog design'
- 'ErrPublishCatalogFilterCode-1105: Error failed to publish catalog filter'
- 'ErrGetMeshModelsCode-1106: could not get meshmodel entitities'
- 'ErrGetUserDetailsCode-1107: could not get user details'
- 'ErrResolvingRelationshipCode-1108: could not resolve rego relationship'
- 'ErrGetLatestVersionCode-1109: failed to get latest version of Meshery.'
- 'ErrCreateFileCode-1110: Could not create file'
- 'ErrLoadCertificateCode-1111: Could not load certificates associated with performance
  profile'
- 'ErrCleanupCertificateCode-1112: Could not delete certificates from'
- 'ErrDownlaodWASMFileCode-1113: failed to the WASM file'
- 'ErrFetchProfileCode-1114: Error failed to fetch profile'
- 'ErrPerformanceTestCode-1115: Load test error'
- 'ErrFetchApplicationCode-1116: Error failed to fetch applications'
- 'ErrDeleteApplicationCode-1117: Error failed to delete application'
- 'ErrGetEventsCode-1118: Could not retrieve events'
- 'ErrUpdateEventCode-1119: '
- 'ErrDeleteEventCode-1120: '
- ErrUnsupportedEventStatusCode-1121
- ErrBulkUpdateEventCode-1122
- ErrBulkDeleteEventCode-1123
- ErrFetchMeshSyncResourcesCode-1124
- ErrDesignSourceContentCode-1125
- ErrGetConnectionsCode-1126
- ErrWritingIntoFileCode-1127
- ErrBuildOCIImgCode-1128
- ErrSaveOCIArtifactCode-1129
- ErrIOReaderCode-1130
- ErrUnCompressOCIArtifactCode-1131
- ErrWaklingLocalDirectoryCode-1132
- ErrConvertingK8sManifestToDesignCode-1133
- ErrConvertingDockerComposeToDesignCode-1134
- ErrMarshallingDesignIntoYAMLCode-1135
- ErrConvertingHelmChartToDesignCode-1136
- ErrInvalidUUIDCode-1137
- ErrErrNewDynamicClientGeneratorCode-1138
- ErrInvalidK8SConfigCode-1139
- ErrClientConfigCode-1140
- ErrFetchKubernetesNodesCode-1141
- ErrFetchNodesCode-1142
- ErrFetchKubernetesVersionCode-1143
- ErrScanKubernetesCode-1144
- ErrRetrievePodListCode-1145
- ErrDetectServiceForDeploymentImageCode-1146
- ErrRetrieveNamespacesListCode-1147
- ErrGetNamespaceDeploymentsCode-1148
- ErrDetectServiceWithNameCode-1149
- ErrGeneratingLoadTestCode-1150
- ErrRunningTestCode-1151
- ErrConvertingResultToMapCode-1152
- ErrGrpcSupportCode-1153
- ErrStartingNighthawkServerCode-1154
- ErrTransformingDataCode-1155
- ErrRunningNighthawkServerCode-1156
- ErrAddAndValidateExtraHeaderCode-1157
- ErrInClusterConfigCode-1158
- ErrNewKubeClientGeneratorCode-1159
- ErrRestConfigFromKubeConfigCode-1160
- ErrNewKubeClientCode-1161
- ErrAdapterInsufficientInformationCode-1162
- ErrDeployingAdapterInK8sEnvCode-1163
- ErrUnDeployingAdapterInK8sEnvCode-1164
- ErrDeployingAdapterInDockerEnvCode-1165
- ErrUnDeployingAdapterInDockerEnvCode-1166
- ErrDeployingAdapterCode-1167
- ErrUnDeployingAdapterCode-1168
- ErrClientSetCode-1169
- ErrNilClientCode-1170
- ErrCreateDataCode-1171
- ErrQueryCode-1172
- ErrMeshsyncSubscriptionCode-1173
- ErrMesheryClientCode-1174
- 'ErrSubscribeChannelCode-1175: Unable to subscribe to channel'
- 'ErrPublishBrokerCode-1176: Unable to publish to broker'
- 'ErrEmptyHandlerCode-1177: Database handler not initialized'
- 'ErrApplyHelmChartCode-1178: Error occurred while applying Helm Chart'
- 'ErrMesheryControllersStatusSubscriptionCode-1179: Could not create meshery controllers
  status subscription'
- 'ErrMeshSyncEventsSubscriptionCode-1180: Could not create MeshSync events subscription'
- 'ErrMesheryClientNilCode-1181: Meshery kubernetes client not initialized'
- 'ErrUpdateDataCode-1182: Error while updating meshsync data'
- 'ErrDeleteDataCode-1183: Error while deleting meshsync data'
- 'ErrResolverInvalidRequestCode-1184: Invalid query, please check syntax'
- 'ErrResolverNilClientCode-1185: Kubernetes client not initialized'
- 'ErrResolverMeshsyncSubscriptionCode-1186: MeshSync Subscription failed'
- 'ErrResolverOperatorSubscriptionCode-1187: Operator Subscription failed'
- 'ErrAddonSubscriptionCode-1188: Addons Subscription failed'
- 'ErrResolverControlPlaneSubscriptionCode-1189: Control Plane Subscription failed'
- 'ErrMesheryClientCode-1190: Meshery kubernetes client not initialized'
- 'ErrResolverPublishBrokerCode-1191: Unable to publish to broker'
- 'ErrNoMeshSyncCode-1192: MeshSync disabled'
- 'ErrDataPlaneSubscriptionCode-1193: Data Plane Subscription failed'
- 'ErrBrokerNotConnectedCode-1194: Broker not connected'
- 'ErrGettingNamespaceCode-1195: Cannot get available namespaces'
- 'ErrFetchingPatternsCode-1196: Cannot fetch designs'
- 'ErrInvalidOAMTypeCode-1197: invalid oam type is requested'
- 'ErrKubectlDescribeCode-1198: failed to find the resource invalid resource type
  resource doesn''t exists'
- 'ErrEmptyCurrentK8sContextCode-1199: Current kubernetes context is empty'
- 'ErrConfigurationPatternsCode-1200: Configuration Subscription failed'
- 'ErrConfigurationApplicationsCode-1201: Configuration Subscription failed'
- 'ErrConfigurationFiltersCode-1202: Configuration Subscription failed'
- 'ErrK8sContextCode-1203: Failed to get k8s context from remote provider'
- 'ErrClusterResourcesSubscriptionCode-1204: ClusterResources Subscription failed'
- 'ErrGettingClusterResourcesCode-1205: Unable to retrieve cluster resources'
- 'ErrMeshModelSummarySubscriptionCode-1206: MeshModelSummary Subscription failed'
- 'ErrGettingMeshModelSummaryCode-1207: Unable to retrieve MeshModel Summary'
- 'ErrGettingRegistryManagerCode-1208: Unable to retrieve Registry Manager'
- 'ErrGettingTelemetryComponentsCode-1209: unable to retrieve telemetry components'
- 'ErrAdapterInsufficientInformationCode-1210: Unable to process adapter request,
  incomplete request'
- 'ErrPerformanceProfilesSubscriptionCode-1211: PerformanceProfiles Subscription failed'
- 'ErrPerformanceResultSubscriptionCode-1212: PerformanceResult Subscription failed'
- 'ErrGormDatabaseCode-1213: Database operation failed'
- 'ErrInvalidTransitionCode-1214: '
- 'ErrInvalidTransitionEventCode-1215: '
- 'ErrInititalizeK8sMachineCode-1216: Provided connection id is invalid'
- 'ErrAssetMachineCtxCode-1217: type assertion of context to *kubernetes.MachineCtx
  failed'
- 'ErrInvalidTypeCode-1218: Provided connection id is invalid'
- ErrAutoRegisterCode-1219
- ErrGrafanaClientCode-1220
- ErrPageSizeCode-1221
- ErrPageNumberCode-1222
- ErrResultIDCode-1223
- ErrPerfIDCode-1224
- ErrMarshalCode-1225
- ErrUnmarshalCode-1226
- ErrGenerateUUIDCode-1227
- ErrLocalProviderSupportCode-1228
- ErrGrafanaOrgCode-1229
- ErrGrafanaBoardsCode-1230
- ErrGrafanaDashboardCode-1231
- ErrGrafanaDataSourceCode-1232
- ErrNilQueryCode-1233
- ErrGrafanaDataCode-1234
- ErrApplicationFileNameCode-1235
- ErrFilterFileNameCode-1236
- ErrPatternFileNameCode-1237
- ErrMakeDirCode-1238
- ErrFolderStatCode-1239
- ErrUserIDCode-1240
- ErrDBConnectionCode-1241
- ErrNilConfigDataCode-1242
- ErrDBOpenCode-1243
- ErrDBRLockCode-1244
- ErrDBLockCode-1245
- ErrDBReadCode-1246
- ErrDBDeleteCode-1247
- ErrCopyCode-1248
- ErrDBPutCode-1249
- ErrPrometheusGetNodesCode-1250
- ErrPrometheusLabelSeriesCode-1251
- ErrPrometheusQueryRangeCode-1252
- ErrPrometheusStaticBoardCode-1253
- ErrTokenRefreshCode-1254
- ErrGetTokenCode-1255
- ErrDataReadCode-1256
- ErrTokenDecodeCode-1257
- ErrNilJWKsCode-1258
- ErrNilKeysCode-1259
- ErrTokenExpiredCode-1260
- ErrTokenClaimsCode-1261
- ErrTokenClientCheckCode-1262
- ErrTokenPraseCode-1263
- ErrJWKsKeysCode-1264
- ErrDecodeBase64Code-1265
- ErrMarshalPKIXCode-1266
- ErrEncodingPEMCode-1267
- ErrPraseUnverifiedCode-1268
- ErrEncodingCode-1269
- ErrFetchCode-1270
- ErrPostCode-1271
- ErrDeleteCode-1272
- ErrInvalidCapabilityCode-1273
- ErrResultDataCode-1274
- ErrUnableToPersistsResultCode-1275
- ErrValidURLCode-1276
- ErrTestEndpointCode-1277
- ErrLoadgeneratorCode-1278
- ErrProtocolCode-1279
- ErrTestClientCode-1280
- ErrParsingTestCode-1281
- ErrFieldCode-1282
- ErrFetchDataCode-1283
- ErrIndexOutOfRangeCode-1284
- ErrSessionCopyCode-1285
- ErrSavingSeededComponentsCode-1286
- ErrGettingSeededComponentsCode-1287
- 'ErrDownloadingSeededComponentsCode-1288: The content is not present at the specified
  url endpoint'
- 'ErrContextIDCode-1289: Context ID is empty'
- 'ErrMesheryInstanceIDCode-1290: Meshery Instance ID is empty or is invalid'
- 'ErrMesheryNotInClusterCode-1291: Meshery is not running inside a cluster'
- 'ErrBrokerNotFoundCode-1292: Meshery broker not found'
- 'ErrCreateOperatorDeploymentConfigCode-1293: Operator deployment configuration could
  not be created.'
- 'ErrRequestMeshsyncStoreCode-1294: Meshsync store request could not be issued'
- 'ErrBrokerSubscriptionCode-1295: Could not subscribe to the broker subject'
- 'ErrContextAlreadyPersistedCode-1296: kubernetes context already persisted with
  provider'
- 'ErrGetPackageCode-1297: Could not get the package'
- 'ErrTokenRevokeCode-1298: Error occurred while revoking the token'
- 'ErrTokenIntrospectCode-1299: token introspection failed'
- 'ErrShareDesignCode-1300: cannot make design public'
- 'ErrUnreachableRemoteProviderCode-1301: Could not reach remote provider'
- 'ErrShareFilterCode-1302: Cannot make filter public'
- 'ErrPersistEventCode-1303: Could not persist event'
- 'ErrUnreachableKubeAPICode-1304: The Kubernetes API server is not reachable.'
- 'ErrFlushMeshSyncDataCode-1305: Unable to flush MeshSync data for context %s at
  %s'
- 'ErrUpdateConnectionStatusCode-1306: Unable to update connection status'
- 'ErrResultNotFoundCode-1307: The record in the database does not exist.'
- 'ErrPersistCredentialCode-1308: unable to persist credential details'
- 'ErrPersistConnectionCode-1309: unable to persist connection details'
- 'ErrPrometheusScanCode-1310: Unable to connect to prometheus'
- 'ErrGrafanaScanCode-1311: Unable to connect to grafana'
- 'ErrDBCreateCode-1312: Unable to create record'
- 'ErrCreatingKubernetesComponentsCode-1313: component generation was canceled due
  to deletion or reload of K8s context'
- 'ErrGetK8sComponentsCode-1314: Could not get K8s components for registration'
- 'ErrParseK8sManifestCode-1315: Failed to parse manifest into JSON'
- 'ErrCreatePatternServiceCode-1316: Failed to create design service from Manifest'
- 'ErrPatternFromCytoscapeCode-1317: Could not create design file from given cytoscape'
- 'ErrDryRunCode-1318: error performing a dry run on the design'
- 'ErrRegisterEntityCode-1319: '
- 'ErrPersistEventToRemoteProviderCode-1320: failed to persist event to remote provider'
- 'ErrDoRequestCode-1321: Requested resource is not reachable.'
- 'ErrMarshalYAMLCode-1322: unable to marshal yaml "%s'
- 'ErrEventStreamingNotSupportedCode-1324: Live events stream not supported.'
- 'ErrGenerateClusterContextCode-1325: Failed to generate in cluster context.'
- 'ErrNilClusterContextCode-1326: Nil context generated from in cluster config'
- 'ErrFailToSaveContextCode-1327: Failed to save the context'
- 'ErrParsingCallBackUrlCode-1328: Failed to parse the callback URL'
- 'ErrReadSessionPersistorCode-1329: Unable to read session from the session persister,
  starting with a new one'
- 'ErrFailToGetK8SContextCode-1330: Failed to get Kubernetes context'
- 'ErrFailToLoadK8sContextCode-1331: Failed to load Kubernetes context'
- 'ErrSessionNotReadIntactCode-1332: The session data might be corrupted or not properly
  saved.'
- 'ErrSessionNotFoundCode-1333: The session might not exist or could have been deleted.'
- 'ErrTokenRetryCode-1334: Error occurred, retrying after refresh to fetch token'
- 'ErrUrlParseCode-1335: Error parsing the URL'
- 'ErrCloseIoReaderCode-1336: Error closing response body reader.'
- 'ErrDownloadPackageCode-1337: '
- 'ErrOperationNotAvaibaleCode-1338: Operation not available'
- 'ErrTokenVerifyCode-1339: Validation of refreshed token failed.'
- 'ErrLogoutCode-1340: Unable to perform logout'
- 'ErrGetSessionCookieCode-1341: Error occurred while getting session cookie'
- 'ErrCloneCode-1342: '
- 'ErrPublishCode-1343: '
- 'ErrUnPublishCode-1344: '
- 'ErrSaveConnectionCode-1345: Unable to save Meshery connection'
- 'ErrGenerateK8sHandlerCode-1346: Possible causes include invalid Kubernetes context,
  missing configuration, or network issues.'
- 'ErrRetrieveK8sClusterIDCode-1347: Possible causes include invalid Kubernetes context,
  missing or incorrect configuration, or network issues.'
- 'ErrCreateResourceEntryCode-1348: Failed to create resource entry'
- 'ErrInitializeDBHandlerCode-1349: Unable to initialize database handler'
- 'ErrDeleteK8sResourceCode-1350: Probable Cause: Possible causes include invalid
  resource name or namespace, insufficient permissions, or network issues. Suggested
  Remediation: Verify the resource name and namespace are correct. Ensure you have
  the necessary permissions to delete the resource. Check network connectivity to
  the Kubernetes cluster.'
- 'ErrCreateK8sResourceCode-1351: Probable Cause: Possible causes include invalid
  resource name or namespace, insufficient permissions, or network issues. Suggested
  Remediation: Verify the resource name and namespace are correct. Ensure you have
  the necessary permissions to create the resource. Check network connectivity to
  the Kubernetes cluster.'
- 'ErrGetResourceCode-1352: Probable Cause: Possible causes include invalid resource
  name or namespace, insufficient permissions, or resource not found. Suggested Remediation:
  Verify the resource name and namespace are correct. Ensure you have the necessary
  permissions to access the resource.'
- 'ErrDeleteResourceCode-1353: Probable Cause: Possible causes include invalid resource
  name or namespace, insufficient permissions, or network issues. Suggested Remediation:
  Verify the resource name and namespace are correct. Ensure you have the necessary
  permissions to delete the resource. Check network connectivity to the Kubernetes
  cluster.'
- 'ErrRecreateResourceCode-1354: Probable Cause: Possible causes include invalid resource
  configuration, insufficient permissions, or network issues. Suggested Remediation:
  Verify the resource configuration and ensure it is correct. Ensure you have the
  necessary permissions to recreate the resource. Check network connectivity to the
  Kubernetes cluster.'
- 'ErrUpdateResourceCode-1355: Probable Cause: Possible causes include invalid resource
  configuration, insufficient permissions, or network issues. Suggested Remediation:
  Verify the resource configuration and ensure it is correct. Ensure you have the
  necessary permissions to update the resource. Check network connectivity to the
  Kubernetes cluster.'
- 'ErrEmptySessionCode-1356: No session found in the request: Unable to find "token"
  cookie in the request. Probable Cause: User is not authenticated with the selected
  Provider. Browser might be restricting use of cookies. Suggested Remediation: Choose
  a Provider and login to establish an active session (receive a new token and cookie).
  Optionally, try using a private/incognito browser window. Verify that your browser
  settings allow cookies.'
- 'ErrInvalidEventDataCode-1357: The event provided is not valid: ActedUpon, Action,
  Category and Severity are required fields of an event.'
- 'ErrSeedingComponentsCode-1358: Probable Cause: Given models may not be in accordance
  with Meshery''s schema. Suggested Remediation: Make sure the models being seeded
  are valid in accordance with Meshery''s schema. If it is an internal error, please
  try again after some time.'
- 'ErrImportFailureCode-1359: Probable Cause: Entity definition might not be in accordance
  with schema. Entity version might not be supported by Meshery.'
- 'ErrEmptyOCIImageCode-1360: '
- 'ErrResolveReferenceCode-1361: '
- 'ErrGetComponentDefinitionCode-1362: Probable Cause: Component might not have been
  registered. The component might not be supported by default, in the version of Meshery
  you are currently using. Suggested Remediation: Ensure component definition is valid
  JSON/YAML. Import the model and try again.'
- 'ErrGetCapabilitiesCode-1363: Probable Cause: Remote provider server may be down
  or not accepting requests. Suggested Remediation: Make sure remote provider server
  is healthy and accepting requests.'
- 'ErrExportPatternInFormatCode-1364: '
- 'ErrNoTarInsideOCiCode-1365: No tar file found inside OCI image: Unable to locate
  the compressed file(.tar.gz) inside the OCI image. Probable Cause: The OCI image
  does not contain a ziped file. Suggested Remediation: Verify that the OCI image
  contains a ziped file.'
- 'ErrFileTypeCode-1366: Probable Cause: The provided file type is wrong. Suggested
  Remediation: Verify the file type.'
- 'ErrCreatingOPAInstanceCode-1367: Probable Cause: Unable to create OPA instance,
  policies will not be evaluated. Suggested Remediation: Ensure relationships are
  registered.'
- 'ErrStatusCodeCode-1368: Probable Cause: The server might be down or temporarily
  unavailable. There could be network connectivity issues between the client and the
  server. The API endpoint might be misconfigured, or the server is experiencing high
  load. Suggested Remediation: Check if the server is online and operational. Verify
  network connectivity and ensure there are no firewalls or DNS issues blocking the
  request. Confirm the API endpoint is correct and functional.'
- 'ErrResyncClusterCode-1369: '
- 'ErrMeshsyncDataHandlerCode-1370: Probable Cause: not deployed operator issue with
  connection to broker. Suggested Remediation: check that operator is deployed check
  that server can establish connection to broker.'
- 'ErrResyncResourcesCode-1371: Probable Cause: Fail to resync resources for the machine.
  Suggested Remediation: Check if machine supports resource resync.'
- 'ErrResyncK8SResourcesCode-1372: Probable Cause: Fail to resync resources for the
  kubernetes machine. Suggested Remediation: Check if machine context is assign to
  machine. Check if machine context contains a reference to MesheryControllersHelper.'
- 'ErrConnectActionCode-1373: Probable Cause: Fail to perform connect action for the
  kubernetes machine. Suggested Remediation: Check if token is passed machine from
  golang context correctly. Check if there is connection data stored in database for
  this kubernetes machine.'
- 'ErrInvalidConfigFileCode-2001: Invalid mesheryctl config file'
- 'ErrMesheryServerConnectionCode-2002: Connection to Meshery Server failed'
- 'ErrInvalidCommandCode-2003: Invalid mesheryctl command'
- 'ErrDockerNotRunningCode-2004: Docker not running'
- 'ErrKubernetesConfigCode-2005: Kubernetes config not found'
- 'ErrSystemStartCode-2006: System start failed'
- 'ErrSystemStopCode-2007: System stop failed'
- 'ErrPerformanceTestCode-2008: Performance test failed'
- 'ErrPatternImportCode-2009: Pattern import failed'
- 'ErrMeshDeployCode-2010: Mesh deployment failed'
- ErrControllerCode-11071
- 'ErrConnectCode-11118: Connection to broker failed'
- 'ErrEncodedConnCode-11119: Encoding connection failed with broker'
- 'ErrPublishCode-11120: Publish failed'
- 'ErrPublishRequestCode-11121: Publish request failed'
- 'ErrQueueSubscribeCode-11122: Subscription failed'
- 'ErrEmptyConfigCode-11123: Config not initialized'
- 'ErrViperCode-11124: Viper configuration initialization failed'
- 'ErrInMemCode-11125: InMem configuration initialization failed'
- 'ErrNoneDatabaseCode-11126: No Database selected'
- 'ErrDatabaseOpenCode-11127: Unable to open database'
- 'ErrSQLMapUnmarshalJSONCode-11128: failed to unmarshal json'
- 'ErrSQLMapUnmarshalTextCode-11129: failed to unmarshal text'
- 'ErrSQLMapMarshalValueCode-11130: failed to marshal value'
- 'ErrSQLMapUnmarshalScannedCode-11131: failed to unmarshal scanned data'
- 'ErrSQLMapInvalidScanCode-11132: invalid data type: expected []byte'
- 'ErrClosingDatabaseConnectionCode-11133: failed to close database connection'
- 'ErrGetChartUrlCode-11134: Could not get the chart url for this ArtifactHub package'
- 'ErrGetAhPackageCode-11135: Could not get the ArtifactHub package with the given
  name'
- 'ErrComponentGenerateCode-11136: failed to generate components for the package'
- 'ErrGetAllHelmPackagesCode-11137: Could not get HELM packages from Artifacthub'
- 'ErrUnsupportedRegistrantCode-11138: unsupported registrant'
- ErrGenerateGitHubPackageCode-11139
- ErrInvalidGitHubSourceURLCode-11140
- 'ErrGetControllerStatusCode-11141: Error getting the status of the meshery controller'
- 'ErrDeployControllerCode-11142: Error deploying Meshery Operator'
- 'ErrGetControllerPublicEndpointCode-11143: Could not get the public endpoint of
  the controller'
- 'ErrPrepareForEvalCode-11144: error preparing for evaluation'
- 'ErrEvalCode-11145: error evaluating policy for the given input'
- 'ErrAppendingLayerCode-11147: appending content to artifact failed'
- 'ErrReadingFileCode-11148: reading file failed'
- 'ErrUnSupportedLayerTypeCode-11149: unsupported layer type'
- 'ErrGettingLayerCode-11150: getting layer failed'
- 'ErrCompressingLayerCode-11151: compressing layer failed'
- 'ErrUnTaringLayerCode-11152: untaring layer failed'
- 'ErrGettingImageCode-11153: getting image failed'
- 'ErrValidatingImageCode-11154: validating image failed'
- 'ErrCrdGenerateCode-11155: Could not generate component with the given CRD'
- 'ErrDefinitionCode-11156: Could not get definition for the given CRD'
- ErrGetSchemaCode-11157
- 'ErrUpdateSchemaCode-11158: Failed to update schema properties for'
- ErrUnmarshalCode-11159
- ErrUnmarshalInvalidCode-11160
- ErrUnmarshalSyntaxCode-11161
- ErrUnmarshalTypeCode-11162
- ErrUnmarshalUnsupportedTypeCode-11163
- ErrUnmarshalUnsupportedValueCode-11164
- 'ErrMarshalCode-11165: Marshal error, Description: %s'
- 'ErrGetBoolCode-11166: Error while getting Boolean value for key: %s, error: %s'
- 'ErrInvalidProtocolCode-11167: invalid protocol: only http, https and file are valid
  protocols'
- 'ErrRemoteFileNotFoundCode-11168: remote file not found at'
- 'ErrReadingRemoteFileCode-11169: error reading remote file'
- 'ErrReadingLocalFileCode-11170: error reading local file'
- 'ErrReadFileCode-11171: error reading file'
- 'ErrWriteFileCode-11172: error writing file'
- 'ErrGettingLatestReleaseTagCode-11173: Could not fetch latest stable release from
  github'
- 'ErrMissingFieldCode-11174: Missing field or property with name:'
- 'ErrExpectedTypeMismatchCode-11175: Expected the type to be:'
- 'ErrJsonToCueCode-11176: Could not convert given json object into a CUE Value'
- 'ErrYamlToCueCode-11177: Could not convert given yaml object into a CUE Value'
- 'ErrJsonSchemaToCueCode-11178: Could not convert given JsonSchema into a CUE Value'
- 'ErrCueLookupCode-11179: Could not lookup the given path in the CUE value'
- 'ErrTypeCastCode-11180: invaid type assertion requested'
- 'ErrCreateFileCode-11181: invalid path provided insufficient permissions'
- 'ErrCreateDirCode-11182: invalid path provided insufficient permissions'
- 'ErrExtractTarXZCode-11184: The gzip might be corrupt'
- 'ErrExtractZipCode-11185: The zip might be corrupt'
- 'ErrReadDirCode-11186: error reading directory'
- 'ErrLoadHelmChartCode-11188: chart might have been deleted insufficient permissions
  to read the chart'
- 'ErrEndpointNotFoundCode-11197: Unable to discover an endpoint'
- 'ErrInvalidAPIServerCode-11198: Invalid API Server URL'
- 'ErrCvrtKomposeCode-11229: Error converting the docker compose file into kubernetes
  manifests'
- 'ErrValidateDockerComposeFileCode-11230: Invalid docker compose file'
- 'ErrIncompatibleVersionCode-11231: This version of docker compose file is not compatible.'
- 'ErrNoVersionCode-11232: version not found in the docker compose file'
- 'ErrGetCrdNamesCode-11233: Error getting crd names'
- 'ErrGetSchemasCode-11234: Error getting schemas'
- 'ErrGetAPIVersionCode-11235: Error getting api version'
- 'ErrGetAPIGroupCode-11236: Error getting api group'
- 'ErrPopulatingYamlCode-11237: Error populating yaml'
- 'ErrAbsentFilterCode-11238: Error with passed filters'
- 'ErrCreatingDirectoryCode-11239: could not create directory'
- 'ErrGetResourceIdentifierCode-11240: Error extracting the resource identifier name'
- 'ErrInvalidSizeFileCode-11241: Could not read the file while walking the repo'
- 'ErrCloningRepoCode-11242: could not clone the repo'
- 'ErrFileNotFoundCode-11244: File not found'
- 'ErrUnmarshalUnsupportedTypeCode-11250: Unsupported type'
- 'ErrUnmarshalUnsupportedValueCode-11251: Unsupported value'
- 'ErrChartUrlEmptyCode-11252: Chart URL is empty'
- 'ErrNoPackageFoundCode-11253: No package found'
- 'ErrUnknownKindCode-11254: unsupported connection kind detected'
- 'ErrUnknownHostCode-11255: Unknown host'
- 'ErrEmptySchemaCode-11256: Empty schema for the component'
- 'ErrMarshalingRegisteryAttemptsCode-11257: Error marshaling RegisterAttempts to
  JSON'
- 'ErrWritingRegisteryAttemptsCode-11258: Error writing RegisteryAttempts JSON data
  to file'
- 'ErrRegisteringEntityCode-11259: Entity might be missing a required schema or have
  invalid json / yaml.'
- 'ErrUnknownHostInMapCode-11260: Unknown host in map'
- 'ErrCreatingUserDataDirectoryCode-11261: Unable to create the directory for storing
  user data'
- 'ErrGetByIdCode-11262: Error getting by ID'
- 'ErrSeekFailedCode-11263: Unable to reset the position within the OCI data.'
- 'ErrCreateLayerCode-11264: Failed to create layer'
- 'ErrSavingImageCode-11265: Failed to save image'
- 'ErrInvalidVersionCode-11266: invalid/incompatible semver version'
- 'ErrDirPkgUnitParseFailCode-11267: Directory package unit parse failed'
- 'ErrGetEntityCode-11268: Could not parse the given data into any Meshery entity'
- 'ErrRegisterEntityCode-11269: Error registering entity'
- 'ErrImportFailureCode-11270: Import failure'
- 'ErrMissingRegistrantCode-11271: Missing registrant'
- 'ErrSeedingComponentsCode-11272: Failed to register the given models'
- 'ErrInvalidSchemaVersionCode-11273: Invalid schema version'
- 'ErrFileWalkDirCode-11274: Error while walking through directory'
- 'ErrRelPathCode-11275: Error determining relative path'
- 'ErrCopyFileCode-11276: Error copying file'
- 'ErrCloseFileCode-11277: Error closing file'
- 'ErrOpenFileCode-11278: unable to open file'
- 'ErrGoogleJwtInvalidCode-11279: Invalid JWT credentials'
- 'ErrGoogleSheetSRVCode-11280: Error while creating Google Sheets Service'
- 'ErrWritingIntoFileCode-11281: Writing into file error'
- 'ErrUnsupportedExtensionCode-11282: Unsupported extension'
- 'ErrUnsupportedExtensionForOperationCode-11283: Unsupported extension for operation'
- 'ErrFailedToIdentifyFileCode-11284: Failed to identify file'
- 'ErrSanitizingFileCode-11285: Error sanitizing file'
- 'ErrInvalidYamlCode-11286: Invalid YAML'
- 'ErrInvalidJsonCode-11287: Invalid JSON'
- 'ErrFailedToExtractTarCode-11288: Failed to extract tar'
- 'ErrUnsupportedFileTypeCode-11289: Unsupported file type'
- 'ErrInvalidKubernetesManifestCode-11290: Invalid Kubernetes manifest'
- 'ErrInvalidMesheryDesignCode-11291: Invalid Meshery design'
- 'ErrInvalidHelmChartCode-11292: Invalid Helm chart'
- 'ErrInvalidDockerComposeCode-11293: Invalid Docker compose'
- 'ErrInvalidKustomizationCode-11294: Invalid kustomization'
- 'ErrNoTarInsideOCICode-11295: No tar file found inside OCI image'
- 'ErrEmptyOCIImageCode-11296: Empty OCI image'
- 'ErrUnCompressOCIArtifactCode-11297: Failed to uncompress OCI artifact'
- 'ErrWaklingLocalDirectoryCode-11298: Failed to walk local directory'
- 'ErrDecodePatternCode-11299: Error failed to decode design data into go slice'
- 'ErrFileTypeNotSupportedForDesignConversionCode-11300: File type not supported for
  design conversion'
- 'ErrFileReadCode-11304: File read error'
- 'ErrGeneratesModelCode-11305: Generates model error'
- 'ErrReadCSVRowCode-11306: error reading csv'
- 'ErrCSVFileNotFoundCode-11307: error reading csv file'
- 'ErrUpdateComponentsCode-11308: Component does not exist Component definition is
  corrupted'
- 'ErrGeneratesComponentCode-11309: error generating comp %s of model %s'
- 'ErrUpdateRelationshipFileCode-11310: error while comparing files'
- 'ErrLoadPatternCode-11315: Failed to load pattern file'
- 'ErrConvertK8sCode-11316: Failed to convert to Kubernetes manifest'
- 'ErrCreateChartCode-11317: Failed to create Helm chart'
- 'ErrHelmPackageCode-11318: Helm packaging failed'
- 'ErrGetControllerEndpointForPortCode-11319: Could not get endpoint for port of the
  controller'
- 'ErrInstallBinaryCode-1001: Failed to change permission of the binary'
- 'ErrGetLatestReleasesCode-1002: Unable to fetch release info'
- 'ErrGetLatestReleaseNamesCode-1003: Failed to extract release names'
- 'ErrStatusCheckCode-1004: Error Bad Status'
- 'ErrUnmarshalCode-1005: Unable to unmarshal the :'
- 'ErrCustomOperationCode-1006: Error with applying custom operation'
- 'ErrInstallNginxCode-1007: Error with Nginx installation'
- 'ErrMeshConfigCode-1008: Error configuration mesh'
- 'ErrClientConfigCode-1009: Error setting client config'
- 'ErrStreamEventCode-1010: Error streaming events'
- 'ErrOpInvalidCode-1012: Invalid operation'
- 'ErrApplyHelmChartCode-1014: Error occurred while applying Helm Chart'
- 'ErrParseOAMComponentCode-1015: error parsing the component'
- 'ErrParseOAMConfigCode-1016: error parsing the configuration'
- 'ErrProcessOAMCode-1017: error performing OAM operations'
- 'ErrNginxCoreComponentFailCode-1018: error in NGINX Service Mesh core component'
- 'ErrParseNginxCoreComponentCode-1019: Failure to parse core component manifest for
  NGINX Service Mesh'
- 'ErrLoadNamespaceCode-1020: Error occurred while applying namespace'
- 'ErrInstallNSMCode-1003: Error with nsm operation'
- 'ErrCreatingHelmIndexCode-1004: Error with nsm operation'
- 'ErrEntryWithAppVersionNotExistsCode-1005: Entry: with app version : does not exists'
- 'ErrHelmRepositoryNotFoundCode-1006: Either the repo : does not exists or is corrupt:'
- 'ErrDecodeYamlCode-1007: Error decoding yaml:'
- 'ErrMeshConfigCode-1008: Error configuration mesh:'
- 'ErrApplyHelmChartCode-1009: Error applying helm chart:'
- 'ErrConvertingAppVersionToChartVersionCode-1010: Error converting app version to
  chart version:'
- 'ErrCreatingNSMMeshClientCode-1011: Unable to create a new nsm client:'
- 'ErrSampleAppCode-1012: Error with sample app operation:'
- 'ErrCustomOperationCode-1013: Error with custom operation:'
- 'ErrOpInvalidCode-1014: Invalid operation'
- 'ErrLoadNamespaceCode-1015: Error while labeling namespace:'
- 'ErrInstallOSMCode-1000: Error with osm operation'
- 'ErrRunOsmCtlCmdCode-1003: Error running istioctl command'
- 'ErrDownloadBinaryCode-1004: Error downloading osm binary'
- 'ErrInstallBinaryCode-1005: Error installing osm binary'
- 'ErrSidecarInjectionCode-1010: Error occurred while injection sidecar'
- 'ErrOSMCoreComponentFailCode-1015: error in osm core component'
- 'ErrParseOSMCoreComponentCode-1017: osm core component manifest parsing failing'
- 'ErrLoadNamespaceCode-1021: Error occurred while applying namespace'
- 'ErrEmptyConfigCode-1022: Config is empty'
- 'ErrGetLatestReleasesCode-1023: Unable to fetch release info'
- 'ErrGetLatestReleaseNamesCode-1024: Failed to extract release names'
- 'ErrGetManifestNamesCode-1025: Unable to fetch manifest names from github'
- name: ErrApplyHelmChartCode-1012
  description: Error occurred while applying Helm Chart
- name: ErrNilClientCode-1013
  description: kubernetes client not initialized
- name: ErrInvalidOAMComponentTypeCode-1014
  description: 'invalid OAM component name:'
- name: ErrTraefikCoreComponentFailCode-1015
  description: error in Traefik core component
- name: ErrProcessOAMCode-1016
  description: error performing OAM operations
- name: ErrParseTraefikCoreComponentCode-1017
  description: Traefik core component manifest parsing failing
- name: ErrParseOAMComponentCode-1018
  description: error parsing the component
- name: ErrParseOAMConfigCode-1019
  description: error parsing the configuration
- name: ErrGetLatestReleaseCode-1020
  description: Could not get latest version
- name: ErrEmptyConfigCode-1029
  description: Config is empty
- name: ErrGetLatestReleasesCode-1030
  description: Unable to fetch release info
- name: ErrGetLatestReleaseNamesCode-1031
  description: Failed to extract release names
- name: ErrInstallTraefikCode-1032
  description: Error with traefik operation
- name: ErrCreatingHelmIndexCode-1033
  description: Error while creating Helm Index
- name: ErrEntryWithAppVersionNotExistsCode-1034
  description: Entry for the app version does not exist
- name: ErrHelmRepositoryNotFoundCode-1035
  description: Helm repo not found
- name: ErrDecodeYamlCode-1036
  description: Error occurred while decoding YAML
- name: ErrMeshConfigCode-1037
  description: Error configuration mesh
- name: ErrConvertingAppVersionToChartVersionCode-1038
  description: Error occurred while converting app version to chart version
- name: ErrCreatingTraefikMeshClientCode-1039
  description: Unable to create a new NSM client
- name: ErrSampleAppCode-1040
  description: Error with sample app operation
- name: ErrCustomOperationCode-1041
  description: Error with custom operation
- name: ErrOpInvalidCode-1042
  description: Invalid operation
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'Failed to get capabilities: dial tcp 3.140.89.205:443: i/o timeout'
- '401 Unauthorized: Recheck user permissions.'
- '404 Not Found: Ensure the endpoint exists.'
- 'Auth token not found: You can log in to Meshery using `mesheryctl system login`
  which would generate an OAuth token.'
- rendered manifests contain a resource that already exists
- constraints not implemented on sqlite, consider using DisableForeignKeyConstraintWhenMigrating
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://meshery.io
  headers:
    Accept: application/json
source_metadata: null
