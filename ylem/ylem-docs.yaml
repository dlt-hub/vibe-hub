resources:
- name: run_pipeline
  endpoint:
    path: /v1/pipelines/%%PIPELINE_UUID%%/runs/
    method: POST
    data_selector: output
- name: pipeline_logs
  endpoint:
    path: /v1/stats/pipelines/%%UUID%%/logs/%%DATE_TIME_FROM%%/%%DATE_TIME_TO%%
    method: GET
- name: task_stats
  endpoint:
    path: /v1/stats/tasks/%%UUID%%/stats/%%DATE_TIME_FROM%%/%%DATE_TIME_TO%%
    method: GET
- name: pipeline_stats
  endpoint:
    path: /v1/stats/pipelines/%%UUID%%/stats/%%DATE_TIME_FROM%%/%%DATE_TIME_TO%%
    method: GET
- name: task_aggregated_stats
  endpoint:
    path: /v1/stats/tasks/%%UUID%%/aggregated-stats/%%DATE_FROM%%/%%PERIOD%%/%%NUMBER_OF_PERIODS%%
    method: GET
- name: pipeline_aggregated_stats
  endpoint:
    path: /v1/stats/pipelines/%%UUID%%/aggregated-stats/%%DATE_FROM%%/%%PERIOD%%/%%NUMBER_OF_PERIODS%%
    method: GET
- name: last_run_task_stats
  endpoint:
    path: /v1/stats/tasks/%%UUID%%/last-run/stats
    method: GET
- name: last_run_pipeline_stats
  endpoint:
    path: /v1/stats/pipelines/%%UUID%%/last-run/stats
    method: GET
- name: task_runs
  endpoint:
    path: /task_runs
    method: POST
    data_selector: task_runs
- name: task_runs_load_balanced
  endpoint:
    path: /task_runs_load_balanced
    method: POST
    data_selector: task_runs_load_balanced
- name: task_run_results
  endpoint:
    path: /task_run_results
    method: GET
    data_selector: task_run_results
- name: query_task_run_results
  endpoint:
    path: /query_task_run_results
    method: GET
    data_selector: query_task_run_results
- name: notification_task_run_results
  endpoint:
    path: /notification_task_run_results
    method: GET
    data_selector: notification_task_run_results
- name: scheduled_runs
  endpoint:
    path: /pipelines/scheduled_runs
    method: GET
- name: task_runs
  endpoint:
    path: /task_runs
    method: POST
- name: task_runs_load_balanced
  endpoint:
    path: /task_runs_load_balanced
    method: POST
- name: task_run_results
  endpoint:
    path: /task_run_results
    method: GET
- name: query_task_run_results
  endpoint:
    path: /query_task_run_results
    method: GET
- name: notification_task_run_results
  endpoint:
    path: /notification_task_run_results
    method: GET
- name: Jira
  endpoint:
    params:
      INTEGRATIONS_JIRA_OAUTH_CLIENT_ID: '%%REPLACE_IT_WITH_THE_CLIENT_ID_OF_YOUR_APP%%'
      INTEGRATIONS_JIRA_OAUTH_CLIENT_SECRET: '%%REPLACE_IT_WITH_THE_CLIENT_SECRET_OF_YOUR_APP%%'
      INTEGRATIONS_JIRA_AFTER_AUTHORIZATION_REDIRECT_URL: https://%%REPLACE_IT_WITH_THE_DOMAIN_NAME_OF_YOUR_YLEM_INSTANCE%%/jira-authorizations/{uuid}/?justConnected
- name: Hubspot
  endpoint:
    params:
      INTEGRATIONS_HUBSPOT_OAUTH_CLIENT_ID: '%%REPLACE_IT_WITH_THE_CLIENT_ID_OF_YOUR_APP%%'
      INTEGRATIONS_HUBSPOT_OAUTH_CLIENT_SECRET: '%%REPLACE_IT_WITH_THE_CLIENT_SECRET_OF_YOUR_APP%%'
      INTEGRATIONS_HUBSPOT_AFTER_AUTHORIZATION_REDIRECT_URL: https://%%REPLACE_IT_WITH_THE_DOMAIN_NAME_OF_YOUR_YLEM_INSTANCE%%/hubspot-authorizations/{uuid}/?justConnected
- name: Salesforce
  endpoint:
    params:
      INTEGRATIONS_SALESFORCE_OAUTH_CLIENT_ID: '%%REPLACE_IT_WITH_THE_CLIENT_ID_OF_YOUR_APP%%'
      INTEGRATIONS_SALESFORCE_OAUTH_CLIENT_SECRET: '%%REPLACE_IT_WITH_THE_CLIENT_SECRET_OF_YOUR_APP%%'
      INTEGRATIONS_SALESFORCE_AFTER_AUTHORIZATION_REDIRECT_URL: https://%%REPLACE_IT_WITH_THE_DOMAIN_NAME_OF_YOUR_YLEM_INSTANCE%%/salesforce-authorizations/{uuid}/?justConnected
- name: Slack
  endpoint:
    params:
      INTEGRATIONS_SLACK_OAUTH_CLIENT_ID: '%%REPLACE_IT_WITH_THE_CLIENT_ID_OF_YOUR_APP%%'
      INTEGRATIONS_SLACK_OAUTH_CLIENT_SECRET: '%%REPLACE_IT_WITH_THE_CLIENT_SECRET_OF_YOUR_APP%%'
      INTEGRATIONS_SLACK_AFTER_AUTHORIZATION_REDIRECT_URL: https://%%REPLACE_IT_WITH_THE_DOMAIN_NAME_OF_YOUR_YLEM_INSTANCE%%/salesforce-authorizations/{uuid}/?justConnected
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: run_pipeline
  endpoint:
    path: /api/api-endpoints#run-pipeline
    method: POST
- name: integration
  endpoint:
    path: /sheets/v4/spreadsheets
    method: POST
    data_selector: spreadsheetId
    params: {}
- name: send_sms
  endpoint:
    path: /2010-04-01/Accounts/{AccountSid}/Messages.json
    method: POST
    data_selector: sms
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: external_trigger
  endpoint:
    path: /api/api-endpoints#run-pipeline
    method: POST
    data_selector: input
    params: {}
- name: notification
  endpoint:
    path: /pipelines/tasks-ip/notification
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: statistics
  endpoint:
    path: /api/statistics
    method: GET
    data_selector: runs
    params: {}
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: records
- name: run_pipeline
  endpoint:
    path: /api/api-endpoints#run-pipeline
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: kpi_data
  endpoint:
    path: /services/data/vXX.X/sobjects/KPIDataset
    method: GET
    data_selector: records
- name: user_signups
  endpoint:
    path: /api/user_signups
    method: GET
- name: user_logins
  endpoint:
    path: /api/user_logins
    method: GET
- name: onboarding_status
  endpoint:
    path: /api/onboarding_status
    method: GET
- name: kyc_process
  endpoint:
    path: /api/kyc_process
    method: GET
- name: customer_engagement_report
  endpoint:
    path: /api/customer_engagement_report
    method: GET
- name: monitoring_high_risk_score
  endpoint:
    path: /monitoring/high-risk-score
    method: GET
    data_selector: records
- name: failed_kyc_reporting
  endpoint:
    path: /kyc/failed
    method: GET
    data_selector: records
- name: users_created_from_same_ip
  endpoint:
    path: /users/created-from-ip
    method: GET
    data_selector: records
- name: xss_detection
  endpoint:
    path: /security/xss-attempts
    method: GET
    data_selector: records
- name: aml_transaction_monitoring
  endpoint:
    path: /aml/transactions
    method: GET
    data_selector: records
notes:
- DATE_TIME_FROM and DATE_TIME_TO must be in the format 'Y-m-d H:i:s'.
- The 'Output' field in the response in Base64 is encrypted and needs to be decrypted
  on the API client side.
- Remove Apache Kafka container from docker-compose.yml
- Add your Apache Kafka host to the .env parameters
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Integration with Atlassian Jira allows you to create tickets there in real time
  based on the streaming events you define in Ylem pipelines.
- AWS RDS supports both direct and SSH connection types.
- For security reasons, we recommend always using SSH tunnels with restricted access
  from Ylem's IP.
- AWS Lambda allows you to listen to new file arrivals on AWS S3 buckets of your choice.
- You can write a basic AWS Lambda function on your own and stream data from AWS S3
  to Ylem in real time.
- ClickHouse supports both direct and SSH connection types.
- E-mail integration allows you to send files, reports, and data in other formats
  via Email.
- To send E-mails to someone's address you need to have access to these e-mails to
  verify it.
- Requires creation of service account with JSON credentials
- Share Google Sheet with the service account
- If you run the pipeline now, the new content should appear in the spreadsheet
- Integration with Incident.io allows you to report incidents and send messages to
  Slack channels in real time.
- Using SSH to connect to MySQL database requires placing private RSA SSH key called
  `id_rsa` in specific folders.
- 'Integration type: Write'
- With Opsgenie integration you can stream data and create Atlassian Opsgenie tickets
  in real-time.
- Integration with PostgreSQL allows you to read and write data from and to PostgreSQL
  instances in a streaming mode.
- RabbitMQ allows you to listen to various events in your infrastructure.
- Ylem can become one of the consumers of RabbitMQ messages.
- A Salesforce user must be assigned to the system permissions "API Enabled", and
  "Apex REST Services".
- You need admin permissions for your Slack organization to authorize Ylem to send
  messages to it.
- To publish messages in private groups on Slack, you need to add Ylem (app) into
  the group first.
- Integration type is Write for sending SMS alerts.
- 'If you use on-premise or open-source editions of Ylem, to be able to use this task,
  you need to create your own Twilio account and configure the following parameters:
  YLEM_INTEGRATIONS_TWILIO_ACCOUNT_SID, YLEM_INTEGRATIONS_TWILIO_AUTH_TOKEN, YLEM_INTEGRATIONS_TWILIO_NUMBER_FROM.'
- You need to create your own Twilio account first.
- You need to create your own Twilio account and configure the parameters in the .env
  file
- Our Python processor is based on RestrictedPython, therefore the "Code" task supports
  many standard Python libraries but not all of them.
- Condition is a one-of-a-kind task having two outputs instead of one.
- Can use mathematical functions like SUM(), AVG() and other aggregating functions.
- For Each is a simple task that doesn't need any additional configuration.
- Manual trigger is typically used for testing and debugging new pipelines or pipelines
  that stopped working as expected
- Scheduling is the most common way of triggering pipelines that need to do a periodical
  job
- Ylem collects detailed statistics of runs for each pipeline and task.
- The Message Filter is a pattern used to eliminate undesired messages from a channel
  based on a set of criteria.
- This task doesn't require any additional configuration but allows a pipeline to
  be triggered through the API endpoint.
- Uses OAuth2 with refresh token â€” requires setup of connected app in Ylem
- To control it you can write expectations of how much time can pass between the creation
  of items in a certain table of your data storage.
- If this threshold is passed Ylem will notify your data engineers.
- Ylem is good at providing real-time information in the e-commerce sector.
- Automates monitoring of organizations with high-risk scores
- Automatically detects and takes action for customers who failed KYC
- Monitors potential fraud from users created from the same IP
- Detects automatic XSS attempts
- Automates monitoring of AML transactions
- Do not forget to copy and save its client secret. You won't be able to see it again
  in the UI.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.datamin.io
  auth:
    type: oauth2
    token_url: https://api.datamin.io/v1/oauth/token
    client_id: '%%CLIENT_ID%%'
    client_secret: '%%CLIENT_SECRET%%'
source_metadata: null
