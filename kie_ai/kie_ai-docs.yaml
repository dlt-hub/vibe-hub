resources:
- name: generate_music
  endpoint:
    path: /api/v1/generate
    method: POST
    data_selector: data
    params: {}
- name: get_music_details
  endpoint:
    path: /api/v1/generate/record-info
    method: GET
    data_selector: data
    params: {}
- name: extend_music
  endpoint:
    path: /api/v1/generate/extend
    method: POST
    data_selector: data
    params: {}
- name: generate_lyrics
  endpoint:
    path: /api/v1/lyrics
    method: POST
    data_selector: data
    params: {}
- name: convert_to_wav
  endpoint:
    path: /api/v1/wav/generate
    method: POST
    data_selector: data
    params: {}
- name: generate_image
  endpoint:
    path: /api/v1/gpt4o-image/generate
    method: POST
    data_selector: data
    params: {}
- name: get_task_status
  endpoint:
    path: /api/v1/gpt4o-image/record-info
    method: GET
    data_selector: data
    params: {}
- name: get_download_url
  endpoint:
    path: /api/v1/gpt4o-image/download-url
    method: POST
    data_selector: data
    params: {}
- name: generate_image
  endpoint:
    path: /generate
    method: POST
    data_selector: data
    params: {}
- name: check_generation_status
  endpoint:
    path: /record-info
    method: GET
    data_selector: data
    params:
      taskId: taskId
- name: generate_image
  endpoint:
    path: /api/v1/mj/generate
    method: POST
    data_selector: data
    params: {}
- name: get_task_status
  endpoint:
    path: /api/v1/mj/record-info
    method: GET
    data_selector: data
    params:
      taskId: YOUR_TASK_ID
- name: generate_ai_video
  endpoint:
    path: /api/v1/runway/generate
    method: POST
    data_selector: data
    params: {}
- name: get_ai_video_details
  endpoint:
    path: /api/v1/runway/record-detail
    method: GET
    data_selector: data
    params:
      taskId: YOUR_TASK_ID
- name: extend_ai_video
  endpoint:
    path: /api/v1/runway/extend
    method: POST
    data_selector: data
    params: {}
- name: modify_video
  endpoint:
    path: /generate
    method: POST
    data_selector: data
    params: {}
- name: check_generation_status
  endpoint:
    path: /record-info
    method: GET
    data_selector: data
    params:
      taskId: taskId
- name: file_url_upload
  endpoint:
    path: /api/file-url-upload
    method: POST
    data_selector: data
    params: {}
- name: file_stream_upload
  endpoint:
    path: /api/file-stream-upload
    method: POST
    data_selector: data
    params: {}
- name: file_base64_upload
  endpoint:
    path: /api/file-base64-upload
    method: POST
    data_selector: data
    params: {}
- name: remaining_credits
  endpoint:
    path: /api/v1/chat/credit
    method: GET
    data_selector: data
- name: generate_4o_image
  endpoint:
    path: /api/v1/gpt4o-image/generate
    method: POST
    data_selector: data
    params: {}
- name: callback
  endpoint:
    path: /4o-image-api/generate-4-o-image
    method: POST
- name: get_image_details
  endpoint:
    path: /4o-image-api/get-4-o-image-details
    method: GET
- name: get_4o_image_details
  endpoint:
    path: /gpt4o-image/record-info
    method: GET
    data_selector: data
    params:
      taskId: string
- name: direct_download_url
  endpoint:
    path: /api/v1/gpt4o-image/download-url
    method: POST
    data_selector: data
- name: generate_music
  endpoint:
    path: /generate
    method: POST
    data_selector: data
    params: {}
- name: Music Generation Callbacks
  endpoint:
    path: /suno-api/generate-music-callbacks
    method: POST
- name: extend_music
  endpoint:
    path: /generate/extend
    method: POST
    data_selector: data
    params: {}
- name: music_extension_callbacks
  endpoint:
    path: /suno-api/extend-music-callbacks
    method: POST
- name: get_music_task_details
  endpoint:
    path: /suno-api/get-music-details
    method: GET
- name: Upload And Cover Audio
  endpoint:
    path: /generate/upload-cover
    method: POST
    data_selector: data
    params: {}
- name: audio_upload_and_cover
  endpoint:
    path: /suno-api/upload-and-cover-audio
    method: POST
- name: audio_upload_and_cover_callbacks
  endpoint:
    path: /suno-api/upload-and-cover-audio-callbacks
    method: POST
- name: upload_and_extend_audio
  endpoint:
    path: /generate/upload-extend
    method: POST
    data_selector: data
    params: {}
- name: audio_upload_and_extension_callbacks
  endpoint:
    path: /suno-api/upload-and-extend-audio-callbacks
    method: POST
- name: add_instrumental
  endpoint:
    path: /api/v1/generate/add-instrumental
    method: POST
    data_selector: data
    params: {}
- name: add_instrumental
  endpoint:
    path: /api/v1/generate/add-instrumental
    method: POST
- name: add_vocals
  endpoint:
    path: /api/v1/generate/add-vocals
    method: POST
    data_selector: data
    params: {}
- name: get_music_details
  endpoint:
    path: /suno-api/get-music-details
    method: GET
    data_selector: data
    params: {}
- name: add_vocals
  endpoint:
    path: /api/v1/generate/add-vocals
    method: POST
- name: get_music_details
  endpoint:
    path: /suno-api/get-music-details
    method: GET
- name: music_task_details
  endpoint:
    path: /generate/record-info
    method: GET
    data_selector: data
    params:
      taskId: string
- name: get_timestamped_lyrics
  endpoint:
    path: /api/v1/generate/get-timestamped-lyrics
    method: POST
- name: boost_music_style
  endpoint:
    path: /api/v1/style/generate
    method: POST
    data_selector: data
    params: {}
- name: generate_music_cover
  endpoint:
    path: /suno/cover/generate
    method: POST
    data_selector: data
    params: {}
- name: music_cover_generation_callbacks
  endpoint:
    path: /suno-api/cover-suno-callbacks
    method: POST
- name: get_music_cover_details
  endpoint:
    path: /suno-api/get-cover-suno-details
    method: GET
- name: cover_generation_details
  endpoint:
    path: /suno/cover/record-info
    method: GET
- name: generate_lyrics
  endpoint:
    path: /api/v1/lyrics
    method: POST
    data_selector: data
    params: {}
- name: lyrics_generation_callbacks
  endpoint:
    path: /suno-api/generate-lyrics-callbacks
    method: POST
- name: get_lyrics_task_details
  endpoint:
    path: /suno-api/get-lyrics-details
    method: GET
- name: get_lyrics_task_details
  endpoint:
    path: /lyrics/record-info
    method: GET
    data_selector: data
    params:
      taskId: string
- name: wav_conversion
  endpoint:
    path: /wav/generate
    method: POST
    data_selector: data
    params: {}
- name: convert_to_wav
  endpoint:
    path: /suno-api/convert-to-wav
    method: POST
- name: get_wav_details
  endpoint:
    path: /suno-api/get-wav-details
    method: GET
- name: wav_conversion_details
  endpoint:
    path: /wav/record-info
    method: GET
- name: vocal_removal
  endpoint:
    path: /api/v1/vocal-removal/generate
    method: POST
    data_selector: data
    params: {}
- name: vocal_separation
  endpoint:
    path: /suno-api/separate-vocals
    method: POST
- name: get_vocal_separation_details
  endpoint:
    path: /suno-api/get-vocal-separation-details
    method: GET
- name: vocal_separation
  endpoint:
    path: /api/v1/vocal-removal/record-info
    method: GET
    data_selector: data
- name: create_music_video
  endpoint:
    path: /mp4/generate
    method: POST
    data_selector: data
    params: {}
- name: get_music_video_details
  endpoint:
    path: /get-music-video-details
    method: GET
    data_selector: data
    params: {}
- name: music_video_generation
  endpoint:
    path: /suno-api/create-music-video
    method: POST
- name: get_music_video_details
  endpoint:
    path: /suno-api/get-music-video-details
    method: GET
- name: music_video_details
  endpoint:
    path: /api/v1/mp4/record-info
    method: GET
    data_selector: data
    params:
      taskId: ''
- name: generate_video
  endpoint:
    path: /api/v1/veo/generate
    method: POST
    data_selector: data
    params: {}
- name: check_task_status
  endpoint:
    path: /api/v1/veo/record-info
    method: GET
    data_selector: data
    params:
      taskId: taskId
- name: get_1080p_video
  endpoint:
    path: /api/v1/veo/get-1080p-video
    method: GET
    data_selector: data
    params:
      taskId: taskId
- name: generate_video
  endpoint:
    path: /generate
    method: POST
    data_selector: data
    params: {}
- name: video_details
  endpoint:
    path: /get-veo-3-video-details
    method: GET
    data_selector: data
    params: {}
- name: video_1080p
  endpoint:
    path: /get-veo-3-1080-p-video
    method: GET
    data_selector: data
    params: {}
- name: callback
  endpoint:
    path: /veo3-api/generate-veo-3-video-callbacks
    method: POST
- name: video_details
  endpoint:
    path: /veo3-api/get-veo-3-video-details
    method: GET
- name: video_details
  endpoint:
    path: /record-info
    method: GET
    data_selector: data
    params:
      taskId: string
- name: get_1080p_video
  endpoint:
    path: /get-1080p-video
    method: GET
    data_selector: data.resultUrl
    params:
      taskId: string
      index: integer
- name: generate_aleph_video
  endpoint:
    path: /generate
    method: POST
    data_selector: data
    params: {}
- name: get_aleph_video_details
  endpoint:
    path: /get-ai-video-details
    method: GET
    data_selector: data
    params: {}
- name: generate_ai_video
  endpoint:
    path: /runway/generate
    method: POST
    data_selector: data
    params: {}
- name: get_ai_video_details
  endpoint:
    path: /get-ai-video-details
    method: GET
    data_selector: data
    params: {}
- name: AI Video Generation Callbacks
  endpoint:
    path: /runway-api/generate-ai-video-callbacks
    method: POST
- name: Get AI Video Details
  endpoint:
    path: /runway-api/get-ai-video-details
    method: GET
- name: get_ai_video_details
  endpoint:
    path: /runway/record-detail
    method: GET
    data_selector: data
    params:
      taskId: string
- name: extend_ai_video
  endpoint:
    path: /api/v1/runway/extend
    method: POST
    data_selector: data
    params: {}
- name: AI Video Extension Callbacks
  endpoint:
    path: /runway-api/extend-ai-video-callbacks
    method: POST
- name: aleph_video_generation_callback
  endpoint:
    path: /runway-api/generate-aleph-video-callbacks
    method: POST
    data_selector: data
    params: {}
- name: get_aleph_video_details
  endpoint:
    path: /runway-api/get-ai-video-details
    method: GET
    data_selector: data
    params: {}
- name: aleph_video_generation_callbacks
  endpoint:
    path: /runway-api/generate-aleph-video-callbacks
    method: POST
    data_selector: data
    params: {}
- name: get_aleph_video_details
  endpoint:
    path: /runway-api/get-ai-video-details
    method: GET
    data_selector: data
    params: {}
- name: aleph_video_details
  endpoint:
    path: /aleph/record-info
    method: GET
    data_selector: data
    params:
      taskId: string
notes:
- All API requests require authentication using a Bearer token.
- Keep your API key secure and never share it publicly. If compromised, reset it immediately.
- Generated images are stored for 14 days and automatically expire after that period.
- Keep your API key secure and never share it publicly.
- All API requests require authentication via Bearer Token.
- Uploaded files are temporary and will be automatically deleted after 3 days.
- Keep your API key secure
- Never share your API key
- Reset immediately if compromised
- All APIs require authentication via Bearer Token.
- Callback URL must be a publicly accessible address
- Server must respond within 15 seconds, otherwise it will be considered a timeout
- If 3 consecutive retries fail, the system will stop sending callbacks
- Maximum query rate is 3 times per second per task
- Generated files will be deleted after 15 days
- Ensure all required parameters are provided based on customMode and instrumental
  settings to avoid errors
- Pay attention to character limits for prompt, style, and title to ensure successful
  processing
- You may receive multiple callbacks for the same task (text → first → complete)
- Generated files will be retained for 14 days
- 'Maximum query rate: 3 requests per second per task.'
- Cover image file URLs will be retained for 14 days
- If a Cover has already been generated for this music task, a 400 status code and
  existing taskId will be returned
- It’s recommended to call this interface after music generation is complete
- Usually generates 2 different style images for selection
- Server must respond within 15 seconds, otherwise it will be considered timeout
- Cover image URLs may have validity periods, recommend downloading and saving promptly
- Cover image URLs are only available upon successful completion
- Error codes and messages are provided for failed tasks
- After successful processing, cover images are retained for 14 days
- Usually generates 2 different style cover images
- Generated lyrics are retained for 14 days.
- Callback occurs once with all generated variations when complete.
- Keep your API Key secure and do not share it with others.
- Generated WAV files are retained for 14 days
- WAV files are typically 5-10 times larger than MP3 equivalents
- Processing time may vary depending on the length of the original audio
- WAV files are retained for 14 days after successful conversion.
- Every request is charged. Re-submitting the same track triggers a new credit deduction
  (no server-side caching).
- Callback URL must be publicly accessible
- Server must respond within 15 seconds, otherwise will be considered timeout
- Generated video files are retained for 14 days.
- Videos are optimized for social media sharing.
- Video URL is valid for 14 days, please download and save to local storage promptly
- The video URL is only available in the response when status is `SUCCESS`
- Videos are retained for 14 days after successful generation
- All API requests need to include your API Key in the request headers.
- Only English prompts are supported
- Outputs are capped at 5 seconds; if your input video exceeds 5 seconds, only the
  first 5 seconds will be processed.
- Video URLs expire after 14 days - download immediately upon receiving callback
- Video links are valid for 14 days, after which expireFlag will be set to 1.
- Video URLs are valid for only 14 days, please download and save to your storage
  system promptly
- Test your callback URL with tools like curl or Postman
- Ensure your server responds with HTTP 200 status
- Check server logs for incoming requests
- Verify SSL certificate is valid
- Implement idempotency to handle potential duplicates
- Use polling as a backup for critical tasks
- Monitor callback receipt and alert on missing notifications
- Always validate the callback payload structure
- Handle missing or unexpected fields gracefully
- Log payload contents for debugging
- Callbacks are the recommended approach for production applications as they reduce
  API calls, improve response times, and provide immediate notification of task completion.
- Callbacks provide instant notifications of task completion
errors:
- Content Policy Violations (Code 400)
- Insufficient Credits (Code 402)
- Rate Limiting (Code 429)
- 'PENDING: Task is waiting to be processed or currently generating'
- 'TEXT_SUCCESS: Lyrics/text generation completed successfully'
- 'FIRST_SUCCESS: First track generation completed'
- 'SUCCESS: All tracks generated successfully'
- 'CREATE_TASK_FAILED: Failed to create task'
- 'GENERATE_AUDIO_FAILED: Failed to generate audio'
- 'SENSITIVE_WORD_ERROR: Content filtered due to sensitive words'
- 'Generation failed: please try again or contact support'
- 'Status check failed: Unknown error'
- 'Get download URL failed: Unknown error'
- '400: Content Policy Violations - Please modify your prompt to comply with content
  policies'
- '500: Safety Tolerance Out of Range - Safety tolerance should be 0-6 for generation,
  0-2 for editing'
- '429: Rate Limiting - Exponential backoff for retries'
- '400: Bad Request - Invalid request parameters or malformed JSON'
- '401: Unauthorized - Missing or invalid API key'
- '429: Rate Limited - Too many requests - implement backoff strategy'
- '500: Server Error - Internal server error - contact support if persistent'
- '400: Bad Request - Invalid request parameters or malformed JSON.'
- '401: Unauthorized - Missing or invalid API key.'
- '422: Validation Error - Request parameters failed validation checks.'
- '429: Rate Limited - Too many requests - implement backoff strategy.'
- 'Invalid Video URL (Code 422): Please provide a valid, accessible video URL.'
- 'Generation Failed (Code 501): Try adjusting your prompt or video input.'
- 'Rate Limiting (Code 429): Implement retry logic with exponential backoff.'
- '401 Unauthorized: Authentication credentials are missing or invalid'
- '400 Bad Request: Request parameters are incorrect or missing required parameters'
- '500 Server Error: An unexpected error occurred while processing the request'
- '402 Insufficient Credits: Account does not have enough credits to perform the operation'
- '404 Not Found: The requested resource or endpoint does not exist'
- '422 Validation Error: The request parameters failed validation checks'
- '429 Rate Limited: Request limit has been exceeded for this resource'
- '455 Service Unavailable: System is currently undergoing maintenance'
- '505 Feature Disabled: The requested feature is currently disabled'
- '400: Bad Request - Image content in filesUrl violates content policy'
- '451: Download Failed - Unable to download image from the provided filesUrl'
- '500: Server Error - Please try again later'
- '200: Request successful'
- '500: Internal server error'
- '408: Rate Limited - Timeout'
- '500: Server Error - An unexpected error occurred while processing the request'
- '501: Audio generation failed'
- '500: Internal Server Error'
- '400: Validation Error - Lyrics contained copyrighted material'
- '413: Conflict - Uploaded audio matches existing work of art'
- '531: Server Error - Sorry, the generation failed due to an issue. Your credits
  have been refunded. Please try again'
- '531: Server Error - Sorry, the generation failed due to an issue.'
- '200: Success - Request has been processed successfully'
- '400: Duplicate requests will return the existing taskId'
- '400: Validation error - Request parameters invalid'
- '408: Rate limited - Timeout'
- '500: Server error - Unexpected error occurred while processing request'
- '501: Cover generation failed'
- '531: Server error - Sorry, generation failed due to an issue. Your credits have
  been refunded. Please try again'
- '200: success'
- '500: potential server error'
- '500: Server error'
- '400: Please try rephrasing with more specific details or using a different approach'
- '500: Internal Error - Please try again later'
- 500 Internal Error - Please try again later
- '200: Success'
- 'CREATE_TASK_FAILED: Failed to create the video generation task'
- 'GENERATE_MP4_FAILED: Failed during video file creation'
- '400 Bad Request: Check the request syntax or parameters.'
- '401 Unauthorized: Check your API Key and its permissions.'
- '404 Not Found: Ensure the endpoint is correct.'
- '500 Internal Server Error: The server encountered an unexpected condition.'
- 'public_error_minor_upload: Encountered during upload.'
- 'Content-policy violation: Triggered by content filters.'
- 'public_error_prominent_people_upload: Encountered during upload.'
- '400: Client error - Prompt violates content policies or other input errors'
- '422: Fallback failed - When fallback is not enabled and specific errors occur'
- '500: Internal error - Please try again later'
- '501: Failed - Video generation task failed'
- '400: Invalid request parameters'
- '401: Unauthorized - Invalid API key'
- '422: Validation Error - Parameter validation failed'
- '400: Client Error - Inappropriate content, format error, quota limit, or other
  client-side issues'
- '500: Server Error - Internal server error during video generation'
- '400: Client Error - Request parameters are incorrect or content is inappropriate'
- '400: Generation failed due to content policy or technical issues'
- '404: Task not found'
- '422: Invalid task ID format'
auth_info:
  mentioned_objects:
  - Bearer Token
client:
  base_url: https://api.kie.ai/api/v1/flux/kontext
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
source_metadata: null
