resources:
- name: text_search_trial
  endpoint:
    path: /api/v1/search/trial
    method: GET
    data_selector: responses
    params: {}
- name: text_search_trial
  endpoint:
    path: /search/trial
    method: GET
    data_selector: Products
    params: {}
- name: refresh-token
  endpoint:
    path: /refresh-token
    method: POST
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: Products
    params: {}
- name: url_search
  endpoint:
    path: /search/url
    method: GET
    data_selector: slug
    params:
      url: string
- name: image_search
  endpoint:
    path: /search
    method: GET
    data_selector: Products
    params:
      imageId: string
- name: vectorize_image
  endpoint:
    path: /vectorize-image
    method: POST
    data_selector: slug
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: Products
    params:
      imageId: string
- name: detect_objects
  endpoint:
    path: /detect-objects
    method: POST
    data_selector: detectedObjects
- name: store_location
  endpoint:
    path: /store-location
    method: POST
    data_selector: data
- name: store_search
  endpoint:
    path: /search/stores
    method: POST
    data_selector: stores
- name: brand_search
  endpoint:
    path: /search/brands
    method: POST
    data_selector: brands
- name: product_detail
  endpoint:
    path: /product-detail
    method: GET
    data_selector: product
    params:
      slug: string
- name: products_by_store
  endpoint:
    path: /store
    method: POST
    data_selector: results
    params: {}
- name: products_by_brand
  endpoint:
    path: /brand
    method: POST
    data_selector: results
    params: {}
- name: create_cart
  endpoint:
    path: /cart
    method: POST
    data_selector: status
    params: {}
- name: cart
  endpoint:
    path: /cart
    method: GET
    data_selector: items
    params: {}
- name: order
  endpoint:
    path: /order
    method: POST
    data_selector: success
    params: {}
- name: order_tracking
  endpoint:
    path: /order-tracking/:id
    method: GET
    data_selector: order
    params: {}
- name: product_availability
  endpoint:
    path: /product-availability
    method: POST
    data_selector: data
notes:
- We require an API token to be sent on every request.
- When completing a cart payment via API, we provide in transit encryption.
- Rate limiting of 100 concurrent requests per second.
- Limit of 100,000 requests per month.
- Requires setup of connected app in api
- Authorization requires a Bearer token
- The unique identifier for all cart requests is the user's Object Id.
- This endpoint lets you to add products to an existing cart.
errors:
- 400 (invalid refresh token)
- 400 (no refresh token)
- 500 Internal Server Error
- '400: Bad Request'
- '200: Success'
- Server Error
- 'REQUEST_LIMIT_EXCEEDED: Please provide a valid state or city'
- '400: No store found'
- '400: No brand found'
- '200: Cart Created'
- '400: Server Error'
- '500: Unable to charge payment id'
auth_info:
  mentioned_objects: []
client:
  base_url: https://searchagora.com
  auth:
    type: oauth2
source_metadata: null
