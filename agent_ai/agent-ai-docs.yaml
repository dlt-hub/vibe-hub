resources:
- name: instagram_followers
  endpoint:
    path: /v1/action/get_instagram_followers
    method: POST
- name: get_instagram_followers
  endpoint:
    path: /action/get_instagram_followers
    method: POST
    data_selector: response
    params:
      username: string
      limit: '20'
- name: web_page_content
  endpoint:
    path: /action/grab_web_text
    method: POST
    data_selector: metadata
    params: {}
- name: Web Page Content
  endpoint:
    path: /actions/web_page_content
    method: GET
- name: Web Page Screenshot
  endpoint:
    path: /actions/web_page_screenshot
    method: GET
- name: YouTube Channel Data
  endpoint:
    path: /actions/youtube_channel_data
    method: GET
- name: Get Twitter Users
  endpoint:
    path: /actions/get_twitter_users
    method: GET
- name: Google News Data
  endpoint:
    path: /actions/google_news_data
    method: GET
- name: Recent Tweets
  endpoint:
    path: /actions/get_recent_tweets
    method: GET
- name: LinkedIn Profile
  endpoint:
    path: /actions/get_linkedin_profile
    method: GET
- name: Bluesky Posts
  endpoint:
    path: /actions/get_bluesky_posts
    method: GET
- name: Instagram Profile
  endpoint:
    path: /actions/get_instagram_profile
    method: GET
- name: Web Page Content
  endpoint:
    path: /api-reference/get-data/web-page-content
    method: GET
- name: Web Page Screenshot
  endpoint:
    path: /api-reference/get-data/web-page-screenshot
    method: GET
- name: YouTube Transcript
  endpoint:
    path: /api-reference/get-data/youtube-transcript
    method: GET
- name: YouTube Channel Data
  endpoint:
    path: /api-reference/get-data/youtube-channel-data
    method: GET
- name: Get Twitter Users
  endpoint:
    path: /api-reference/get-data/get-twitter-users
    method: GET
- name: Google News Data
  endpoint:
    path: /api-reference/get-data/google-news-data
    method: GET
- name: YouTube Search Results
  endpoint:
    path: /api-reference/get-data/youtube-search-results
    method: GET
- name: Search Results
  endpoint:
    path: /api-reference/get-data/search-results
    method: GET
- name: LinkedIn Profile
  endpoint:
    path: /api-reference/get-data/linkedin-profile
    method: GET
- name: Get LinkedIn Activity
  endpoint:
    path: /api-reference/get-data/linkedin-activity
    method: GET
- name: Invoke Web API
  endpoint:
    path: /api-reference/advanced/invoke-web-api
    method: GET
- name: Invoke Other Agent
  endpoint:
    path: /api-reference/advanced/invoke-other-agent
    method: GET
- name: Get Instagram Profile
  endpoint:
    path: /api-reference/get-data/get-instagram-profile
    method: GET
- name: Get Instagram Followers
  endpoint:
    path: /api-reference/get-data/get-instagram-followers
    method: GET
- name: Search Objects
  endpoint:
    path: /actions/hubspot-v2-search-objects
    method: GET
- name: Lookup Object
  endpoint:
    path: /actions/hubspot-v2-lookup-object
    method: GET
- name: Create Object
  endpoint:
    path: /actions/hubspot-v2-create-object
    method: POST
- name: Update Object
  endpoint:
    path: /actions/hubspot-v2-update-object
    method: PUT
- name: Get Timeline Events
  endpoint:
    path: /actions/hubspot-v2-get-timeline-events
    method: GET
- name: Create Timeline Event
  endpoint:
    path: /actions/hubspot-v2-create-timeline-event
    method: POST
- name: Get Engagements
  endpoint:
    path: /actions/hubspot-v2-get-engagements
    method: GET
- name: Create Engagement
  endpoint:
    path: /actions/hubspot-v2-create-engagement
    method: POST
- name: Get User Input
  endpoint:
    path: /actions/get_user_input
    method: POST
    data_selector: input
- name: Search Objects
  endpoint:
    path: /actions/hubspot-v2-search-objects
    method: GET
- name: Lookup Object
  endpoint:
    path: /actions/hubspot-v2-lookup-object
    method: GET
- name: Create Object
  endpoint:
    path: /actions/hubspot-v2-create-object
    method: POST
- name: Update Object
  endpoint:
    path: /actions/hubspot-v2-update-object
    method: PUT
- name: Get Timeline Events
  endpoint:
    path: /actions/hubspot-v2-get-timeline-events
    method: GET
- name: Create Timeline Event
  endpoint:
    path: /actions/hubspot-v2-create-timeline-event
    method: POST
- name: Get Engagements
  endpoint:
    path: /actions/hubspot-v2-get-engagements
    method: GET
- name: Create Engagement
  endpoint:
    path: /actions/hubspot-v2-create-engagement
    method: POST
- name: user_file
  endpoint:
    path: /actions/get_user_file
    method: POST
    data_selector: file
    params: {}
- name: Get User Input
  endpoint:
    path: /actions/get_user_input
    method: POST
    data_selector: input_data
    params: {}
- name: knowledge_base
  endpoint:
    path: /actions/get_user_knowledge_base_and_files
    method: GET
    data_selector: knowledge_base_info
    params: {}
- name: user_file
  endpoint:
    path: /actions/get_user_file
    method: POST
    data_selector: uploaded_files
    params: {}
- name: bluesky_posts
  endpoint:
    path: /actions/get_bluesky_posts
    method: GET
    data_selector: posts
    params:
      user_handle: jay.bsky.social
      number_of_posts: 10
- name: user_kbs_and_files
  endpoint:
    path: /actions/get_user_knowledge_base_and_files
    method: GET
    data_selector: data
    params: {}
- name: company_data
  endpoint:
    path: /enrich/company
    method: POST
    data_selector: data
    params:
      domain: hubspot.com
- name: bluesky_posts
  endpoint:
    path: /actions/get_bluesky_posts
    method: GET
    data_selector: posts
- name: knowledge_base
  endpoint:
    path: /actions/get_data_from_builders_knowledgebase
    method: POST
    data_selector: results
    params: {}
- name: company_data
  endpoint:
    path: /enrich/company
    method: GET
    data_selector: data
    params:
      domain: required
- name: user_uploaded_files
  endpoint:
    path: /actions/get_data_from_users_uploaded_files
    method: POST
    data_selector: results
    params:
      query: search_query
      files: uploaded_files
      max_chunks: max_chunks
      score_cutoff: score_cutoff
      output_variable: output_variable
- name: search_query
  endpoint:
    path: /actions/get_data_from_builders_knowledgebase
    method: POST
    data_selector: results
    params:
      query: search_query
      knowledge_base: knowledge_base_name
      max_chunks: max_chunks
      score_cutoff: score_cutoff
      output_variable: output_variable_name
- name: user_uploaded_files
  endpoint:
    path: /actions/get_data_from_users_uploaded_files
    method: POST
    data_selector: results
    params:
      query: required
      user_uploaded_files: required
      max_number_of_document_chunks: required
      qualitative_vector_score_cutoff: required
      output_variable_name: required
- name: instagram_followers
  endpoint:
    path: /actions/get_instagram_followers
    method: GET
- name: instagram_profile
  endpoint:
    path: /actions/get_instagram_profile
    method: GET
    data_selector: profile_data
- name: linkedin_activity
  endpoint:
    path: /actions/get_linkedin_activity
    method: GET
    data_selector: posts
    params: {}
- name: linkedin_profile
  endpoint:
    path: /get_linkedin_profile
    method: GET
- name: followers
  endpoint:
    path: /actions/get_instagram_followers
    method: GET
    data_selector: followers_data
    params:
      username: instagram_username
      top_followers: number_of_top_followers
      output_variable: output_variable_name
- name: Twitter Users
  endpoint:
    path: /actions/get_twitter_users
    method: GET
    data_selector: profiles
- name: instagram_profile
  endpoint:
    path: /actions/get_instagram_profile
    method: GET
- name: tweets
  endpoint:
    path: /actions/get_recent_tweets
    method: GET
    params:
      twitter_handle: elonmusk
      number_of_tweets: 10
      output_variable_name: recent_tweets
- name: linkedin_activity
  endpoint:
    path: /actions/get_linkedin_activity
    method: GET
    data_selector: posts
    params:
      number_of_posts: 5
- name: news_articles
  endpoint:
    path: /api/v1/news
    method: GET
    data_selector: articles
    params:
      query: search_terms
      since: timeframe
- name: linkedin_profile
  endpoint:
    path: /linkedin/profile
    method: GET
- name: bluesky_posts
  endpoint:
    path: /actions/search_bluesky_posts
    method: GET
    data_selector: posts
    params: {}
- name: search_results
  endpoint:
    path: /search/results
    method: GET
    data_selector: results
    params: {}
- name: twitter_users
  endpoint:
    path: /actions/get_twitter_users
    method: GET
    data_selector: profiles
    params:
      keywords: AI experts or marketing influencers
      number_of_users: 1, 5, 10, 25, 50, 100
- name: web_page_content
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: recent_tweets
  endpoint:
    path: /actions/get_recent_tweets
    method: GET
- name: youtube_channel
  endpoint:
    path: /youtube/channel
    method: GET
- name: news_articles
  endpoint:
    path: /actions/google_news_data
    method: GET
    data_selector: articles
    params:
      query: AI advancements
      since: last 7 days
- name: search_bluesky_posts
  endpoint:
    path: /actions/search_bluesky_posts
    method: GET
    data_selector: posts
    params:
      search_query: required
      number_of_posts: required
      output_variable_name: required
- name: search_results
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params: {}
- name: contacts
  endpoint:
    path: /contacts/v1/contact
    method: GET
    data_selector: results
    params: {}
- name: deals
  endpoint:
    path: /deals/v1/deal
    method: GET
    data_selector: results
    params: {}
- name: companies
  endpoint:
    path: /companies/v2/companies
    method: GET
    data_selector: results
    params: {}
- name: tickets
  endpoint:
    path: /tickets/v1/ticket
    method: GET
    data_selector: results
    params: {}
- name: youtube_channel
  endpoint:
    path: /youtube/channel
    method: GET
- name: search_objects
  endpoint:
    path: /hubspot/v2/search_objects
    method: GET
    data_selector: results
- name: contact
  endpoint:
    path: /actions/hubspot-v2-lookup-object
    method: GET
    data_selector: properties
- name: company
  endpoint:
    path: /actions/hubspot-v2-lookup-object
    method: GET
    data_selector: properties
- name: deal
  endpoint:
    path: /actions/hubspot-v2-lookup-object
    method: GET
    data_selector: properties
- name: contacts
  endpoint:
    path: /contacts/v1/contact
    method: GET
    data_selector: properties
    params: {}
- name: companies
  endpoint:
    path: /companies/v2/companies
    method: GET
    data_selector: properties
    params: {}
- name: deals
  endpoint:
    path: /deals/v1/deal
    method: GET
    data_selector: properties
    params: {}
- name: hubspot_object
  endpoint:
    path: /actions/hubspot-v2-lookup-object
    method: POST
    data_selector: properties
- name: companies
  endpoint:
    path: /v2/companies
    method: GET
    data_selector: results
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: results
- name: deals
  endpoint:
    path: /v2/deals
    method: GET
    data_selector: results
- name: create_hubspot_object
  endpoint:
    path: /actions/hubspot-v2-create-object
    method: POST
    data_selector: created_object
- name: create_hubspot_object
  endpoint:
    path: /actions/hubspot-v2-create-object
    method: POST
    data_selector: created_object
- name: update_hubspot_object
  endpoint:
    path: /hubspot/v2/update_object
    method: POST
    data_selector: response
    params: {}
- name: contacts
  endpoint:
    path: /contacts/v1/contact/
    method: POST
    data_selector: properties
    params: {}
- name: deals
  endpoint:
    path: /deals/v1/deal/
    method: POST
    data_selector: properties
    params: {}
- name: companies
  endpoint:
    path: /companies/v2/companies/
    method: POST
    data_selector: properties
    params: {}
- name: tickets
  endpoint:
    path: /crm-objects/v1/objects/tickets/
    method: POST
    data_selector: properties
    params: {}
- name: timeline_events
  endpoint:
    path: /v2/timeline/events
    method: GET
    data_selector: events
    params:
      limit: 100
- name: timeline_events
  endpoint:
    path: /timeline/events
    method: GET
    data_selector: events
    params:
      incremental: timestamp
- name: create_timeline_event
  endpoint:
    path: /actions/hubspot-v2-create-timeline-event
    method: POST
    data_selector: event
    params: {}
- name: timeline_event
  endpoint:
    path: /actions/hubspot-v2-create-timeline-event
    method: POST
    data_selector: event_id
- name: engagements
  endpoint:
    path: /actions/hubspot-v2-get-engagements
    method: GET
    data_selector: records
    params:
      limit: 100
- name: create_engagement
  endpoint:
    path: /v2/engagements
    method: POST
    data_selector: engagement
    params: {}
- name: engagements
  endpoint:
    path: /engagements/v1/engagements/associated/{objectType}/{objectId}/paged
    method: GET
    data_selector: results
    params:
      limit: '100'
- name: get_engagements
  endpoint:
    path: /actions/hubspot-v2-get-engagements
    method: GET
- name: create_engagement
  endpoint:
    path: /actions/hubspot-v2-create-engagement
    method: POST
- name: update_hubspot_object
  endpoint:
    path: /actions/hubspot-v2-update-object
    method: PUT
- name: engagement
  endpoint:
    path: /actions/hubspot-v2-create-engagement
    method: POST
- name: set_variable
  endpoint:
    path: /actions/set-variable
    method: POST
    data_selector: result
- name: set_variable
  endpoint:
    path: /actions/set-variable
    method: POST
    data_selector: variables
- name: if_condition
  endpoint:
    path: /actions/if_else
    method: GET
- name: if_condition
  endpoint:
    path: /actions/if_else
    method: GET
    data_selector: actions
    params: {}
- name: For Loop
  endpoint:
    path: /api-reference/get-data/web-page-content
    method: GET
    data_selector: records
    params: {}
- name: end_condition
  endpoint:
    path: /actions/end_statement
    method: GET
    data_selector: ''
    params: {}
- name: End If/Else/For Statement
  endpoint:
    path: /actions/end_statement
    method: POST
    data_selector: ''
    params: {}
- name: Show User Output
  endpoint:
    path: /actions/show_user_output
    method: POST
- name: Show User Output
  endpoint:
    path: /actions/show_user_output
    method: GET
    data_selector: results
    params: {}
- name: Google Doc
  endpoint:
    path: /actions/save_to_google_doc
    method: POST
- name: title
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: body
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: post
  endpoint:
    path: /post
    method: POST
    data_selector: result
    params: {}
- name: post_content
  endpoint:
    path: /post
    method: POST
- name: serverless_function
  endpoint:
    path: /actions/serverless_function
    method: POST
    data_selector: result
- name: serverless_function
  endpoint:
    path: /actions/serverless_function
    method: POST
- name: agent
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: agent_id
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: parameters
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: output_variable_name
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: get_variable
  endpoint:
    path: /api/v1/get_variable
    method: POST
    data_selector: data
    params:
      variable: user_input
      retrieval_depth: Most Recent Value
      historical_data_interval: Last 7 Days
      number_of_items: 10
      output_variable_name: tracked_values
- name: Get Variable
  endpoint:
    path: /actions/get_variable_from_database
    method: POST
    data_selector: variables
    params: {}
- name: web_page_screenshot
  endpoint:
    path: /action/grab_web_screenshot
    method: POST
    data_selector: response
    params:
      url: https://agent.ai
      ttl_for_screenshot: 86400
- name: web_page_screenshot
  endpoint:
    path: /action/grab_web_screenshot
    method: POST
    data_selector: response
    params:
      url: https://agent.ai
      ttl_for_screenshot: 86400
- name: youtube_video_transcript
  endpoint:
    path: /get_youtube_transcript
    method: POST
    data_selector: metadata
    params: {}
- name: youtube_video_transcript
  endpoint:
    path: /get_youtube_transcript
    method: POST
    data_selector: response
- name: youtube_channel
  endpoint:
    path: /get_youtube_channel
    method: POST
    data_selector: response
    params:
      url: https://youtube.com/watch?v=example
- name: youtube_channel
  endpoint:
    path: /action/get_youtube_channel
    method: POST
    data_selector: response
    params: {}
- name: twitter_users
  endpoint:
    path: /action/get_twitter_users
    method: POST
    data_selector: response
- name: twitter_users
  endpoint:
    path: /action/get_twitter_users
    method: POST
    data_selector: response
    params:
      keywords: AI experts
      num_users: 1
- name: company_financial_info
  endpoint:
    path: /action/company_financial_info
    method: POST
    data_selector: response
    params: {}
- name: company_financial_info
  endpoint:
    path: /action/company_financial_info
    method: POST
    data_selector: response
    params: {}
- name: company_financial_profile
  endpoint:
    path: /action/company_financial_profile
    method: POST
    data_selector: response
    params: {}
- name: company_financial_profile
  endpoint:
    path: /action/company_financial_profile
    method: POST
    data_selector: response
    params: {}
- name: domain_info
  endpoint:
    path: /action/domain_info
    method: POST
    data_selector: response
    params:
      domain: agent.ai
- name: domain_info
  endpoint:
    path: /action/domain_info
    method: POST
    data_selector: response
    params:
      domain: agent.ai
- name: google_news
  endpoint:
    path: /v1/action/get_google_news
    method: POST
    data_selector: data
    params: {}
- name: google_news
  endpoint:
    path: /v1/action/get_google_news
    method: POST
    data_selector: null
    params: {}
- name: google_news
  endpoint:
    path: /action/get_google_news
    method: POST
    data_selector: query
    params: {}
- name: get_google_news
  endpoint:
    path: /action/get_google_news
    method: POST
    data_selector: records
- name: news_articles
  endpoint:
    method: GET
- name: youtube_search
  endpoint:
    path: /v1/action/run_youtube_search
    method: POST
    data_selector: response
    params: {}
- name: youtube_search
  endpoint:
    path: /action/run_youtube_search
    method: POST
    data_selector: response
    params: {}
- name: search_results
  endpoint:
    path: /action/get_search_results
    method: POST
    data_selector: response.organic_results
    params:
      search_engine: google
      query: best AI tools
      num_posts: 1
- name: get_recent_tweets
  endpoint:
    path: /action/get_recent_tweets
    method: POST
    data_selector: response
    params:
      profile_handle: dharmesh
      recent_tweets_count: '10'
- name: search_results
  endpoint:
    path: /get_search_results
    method: POST
    data_selector: response.organic_results
    params:
      search_engine: google
      query: best AI tools
      num_posts: 1
- name: find_linkedin_profile
  endpoint:
    path: /action/find_linkedin_profile
    method: POST
    data_selector: response
- name: recent_tweets
  endpoint:
    path: /action/get_recent_tweets
    method: POST
    data_selector: response
    params:
      profile_handle: dharmesh
      recent_tweets_count: '10'
- name: get_linkedin_profile
  endpoint:
    path: /v1/action/get_linkedin_profile
    method: POST
    data_selector: response
- name: find_linkedin_profile
  endpoint:
    path: /v1/action/find_linkedin_profile
    method: POST
    data_selector: response
- name: linkedin_profile
  endpoint:
    path: /action/get_linkedin_profile
    method: POST
    data_selector: response
    params:
      profile_handle: dharmesh
- name: linkedin_profile
  endpoint:
    path: /v1/action/get_linkedin_profile
    method: POST
    data_selector: response
- name: linkedin_activity
  endpoint:
    path: /v1/action/get_linkedin_activity
    method: POST
    data_selector: response
    params: {}
- name: get_linkedin_profile
  endpoint:
    path: /action/get_linkedin_profile
    method: POST
    data_selector: response
    params:
      profile_handle: dharmesh
- name: get_linkedin_activity
  endpoint:
    path: /action/get_linkedin_activity
    method: POST
    data_selector: response
    params:
      profile_urls: https://linkedin.com/in/dharmesh
      num_posts: 3
- name: enrich_company_data
  endpoint:
    path: /v1/action/get_company_object
    method: POST
    data_selector: response
    params: {}
- name: linkedin_activity
  endpoint:
    path: /action/get_linkedin_activity
    method: POST
    data_selector: response
    params: {}
- name: get_company_object
  endpoint:
    path: /action/get_company_object
    method: POST
    data_selector: response
    params:
      domain: hubspot.com
- name: bluesky_posts
  endpoint:
    path: /get_bluesky_posts
    method: POST
    data_selector: response
    params:
      handle: mcuban.bsky.social
      num_posts: 5
- name: linkedin_activity
  endpoint:
    path: /action/get_linkedin_activity
    method: POST
    data_selector: response
    params:
      profile_urls: https://linkedin.com/in/dharmesh
      num_posts: 3
- name: search_bluesky_posts
  endpoint:
    path: /action/search_bluesky_posts
    method: POST
    data_selector: response
    params:
      query: artificial intelligence
      num_posts: 1
- name: get_company_object
  endpoint:
    path: /v1/action/get_company_object
    method: POST
    data_selector: response
    params: {}
- name: get_instagram_profile
  endpoint:
    path: /v1/action/get_instagram_profile
    method: POST
    data_selector: response
    params: {}
- name: company_data
  endpoint:
    path: /action/get_company_object
    method: POST
    data_selector: response
    params: {}
- name: user_profile
  endpoint:
    path: /me
    method: GET
    data_selector: data
    params: {}
- name: bluesky_posts
  endpoint:
    path: /get_bluesky_posts
    method: POST
    data_selector: response
    params:
      handle: mcuban.bsky.social
      num_posts: 5
- name: get_instagram_profile
  endpoint:
    path: /action/get_instagram_profile
    method: POST
    data_selector: profile_data
    params: {}
- name: search_bluesky_posts
  endpoint:
    path: /action/search_bluesky_posts
    method: POST
    data_selector: response
    params:
      query: artificial intelligence
      num_posts: 1
- name: instagram_profile
  endpoint:
    path: /v1/action/get_instagram_profile
    method: POST
    data_selector: response
    params: {}
- name: user_profile
  endpoint:
    path: /me
    method: GET
    data_selector: data
    params: {}
- name: get_instagram_followers
  endpoint:
    method: GET
- name: convert_text_to_speech
  endpoint:
    path: /v1/action/output_audio
    method: POST
    data_selector: response
    params: {}
- name: user_profile
  endpoint:
    path: /v1/users/self
    method: GET
    data_selector: data
    params: {}
- name: get_instagram_profile
  endpoint:
    path: /action/get_instagram_profile
    method: POST
    data_selector: null
    params: {}
- name: invoke_llm
  endpoint:
    path: /action/invoke_llm
    method: POST
    data_selector: response
- name: generate_image
  endpoint:
    path: /action/generate_image
    method: POST
    data_selector: metadata.images
    params: {}
- name: user_profile
  endpoint:
    path: /me
    method: GET
    data_selector: data
    params: {}
- name: invoke_agent
  endpoint:
    path: /v1/action/invoke_agent
    method: POST
    data_selector: response
- name: convert_text_to_speech
  endpoint:
    path: /action/output_audio
    method: POST
    data_selector: response
- name: rest_call
  endpoint:
    path: /rest_call
    method: POST
- name: invoke_llm
  endpoint:
    path: /v1/action/invoke_llm
    method: POST
    data_selector: response
- name: convert_file
  endpoint:
    path: /action/convert_file
    method: POST
- name: generate_image
  endpoint:
    path: /action/generate_image
    method: POST
    data_selector: metadata.images
    params: {}
- name: convert_file_options
  endpoint:
    path: /action/convert_file_options
    method: POST
    data_selector: response
- name: store_variable
  endpoint:
    path: /v1/action/store_variable_to_database
    method: POST
    data_selector: response
    params: {}
- name: invoke_agent
  endpoint:
    path: /v1/action/invoke_agent
    method: POST
    data_selector: response
    params: {}
- name: retrieve_variable
  endpoint:
    path: /action/get_variable_from_database
    method: POST
    data_selector: response
    params: {}
- name: save_to_file
  endpoint:
    path: /action/create_file
    method: POST
    data_selector: response
    params: {}
- name: convert_file
  endpoint:
    path: /action/convert_file
    method: POST
    data_selector: response
    params: {}
- name: search
  endpoint:
    path: /v1/action/search
    method: POST
- name: convert_file_options
  endpoint:
    path: /convert_file_options
    method: POST
    data_selector: response
- name: store_variable
  endpoint:
    path: /action/store_variable_to_database
    method: POST
    data_selector: response
    params: {}
- name: Social Media Post Generator
  endpoint:
    path: /invoke_agent_6bf8p9clio50t5cy
    method: POST
    data_selector: function
    params: {}
- name: Video Script Generator
  endpoint:
    path: /invoke_agent_lt8gzzc4s59qym06
    method: POST
    data_selector: function
    params: {}
- name: Trending Content Idea Generator
  endpoint:
    path: /invoke_agent_zy06i5o3s2ygay29
    method: POST
    data_selector: function
    params: {}
- name: Fit to purpose image generator
  endpoint:
    path: /invoke_agent_0frbzoamzb733wh2
    method: POST
    data_selector: function
    params: {}
- name: Video to blog generator
  endpoint:
    path: /invoke_agent_0lbxuj5hbhz5iy0e
    method: POST
    data_selector: function
    params: {}
- name: Website Generator
  endpoint:
    path: /invoke_agent_nviyovw4ww4i7bsj
    method: POST
    data_selector: function
    params: {}
- name: Loading Message Generator
  endpoint:
    path: /invoke_agent_nhwrqdx5nvqt899a
    method: POST
    data_selector: function
    params: {}
- name: Viral LinkedIn Post Writer
  endpoint:
    path: /invoke_agent_6keobi838j5pkod1
    method: POST
    data_selector: function
    params: {}
- name: retrieve_variable
  endpoint:
    path: /action/get_variable_from_database
    method: POST
    data_selector: response
    params:
      variable_retrieval_depth: most_recent_value
      agent_db_historical_values: last hour
- name: invoke_agent_qfwjaebz3s069pmw
  endpoint:
    path: /invoke_agent/qfwjaebz3s069pmw
    method: POST
    data_selector: response
    params: {}
- name: invoke_agent_tx3oam6fo51b7pw7
  endpoint:
    path: /invoke_agent/tx3oam6fo51b7pw7
    method: POST
    data_selector: response
    params: {}
- name: Save To File
  endpoint:
    path: /action/create_file
    method: POST
    data_selector: response
    params: {}
- name: search
  endpoint:
    path: /action/search
    method: POST
    data_selector: response
    params:
      limit: 20
- name: search
  endpoint:
    path: /action/search
    method: POST
    data_selector: results
- name: Social Media Post Generator
  endpoint:
    path: /invoke_agent/social_media_post_generator
    method: POST
    data_selector: function
    params: {}
- name: Video Script Generator
  endpoint:
    path: /invoke_agent/video_script_generator
    method: POST
    data_selector: function
    params: {}
- name: Trending Content Idea Generator
  endpoint:
    path: /invoke_agent/trending_content_idea_generator
    method: POST
    data_selector: function
    params: {}
- name: Fit to purpose image generator
  endpoint:
    path: /invoke_agent/fit_to_purpose_image_generator
    method: POST
    data_selector: function
    params: {}
- name: Video to blog generator
  endpoint:
    path: /invoke_agent/video_to_blog_generator
    method: POST
    data_selector: function
    params: {}
- name: Website Generator
  endpoint:
    path: /invoke_agent/website_generator
    method: POST
    data_selector: function
    params: {}
- name: Loading Message Generator
  endpoint:
    path: /invoke_agent/loading_message_generator
    method: POST
    data_selector: function
    params: {}
- name: Viral LinkedIn Post Writer
  endpoint:
    path: /invoke_agent/viral_linkedin_post_writer
    method: POST
    data_selector: function
    params: {}
- name: invoke_agent_qfwjaebz3s069pmw
  endpoint:
    path: /invoke_agent/qfwjaebz3s069pmw
    method: POST
    data_selector: response
    params: {}
- name: invoke_agent_tx3oam6fo51b7pw7
  endpoint:
    path: /invoke_agent/tx3oam6fo51b7pw7
    method: POST
    data_selector: response
    params: {}
- name: agents
  endpoint:
    params:
      status: public
      limit: 10
- name: Social Media Post Generator
  endpoint:
    path: /agent/invoke_agent_6bf8p9clio50t5cy
    method: POST
    data_selector: response
    params: {}
- name: Video Script Generator
  endpoint:
    path: /agent/invoke_agent_lt8gzzc4s59qym06
    method: POST
    data_selector: response
    params: {}
- name: Trending Content Idea Generator
  endpoint:
    path: /agent/invoke_agent_zy06i5o3s2ygay29
    method: POST
    data_selector: response
    params: {}
- name: Fit to purpose image generator
  endpoint:
    path: /agent/invoke_agent_0frbzoamzb733wh2
    method: POST
    data_selector: response
    params: {}
- name: Video to blog generator
  endpoint:
    path: /agent/invoke_agent_0lbxuj5hbhz5iy0e
    method: POST
    data_selector: response
    params: {}
- name: Website Generator
  endpoint:
    path: /agent/invoke_agent_nviyovw4ww4i7bsj
    method: POST
    data_selector: response
    params: {}
- name: Loading Message Generator
  endpoint:
    path: /agent/invoke_agent_nhwrqdx5nvqt899a
    method: POST
    data_selector: response
    params: {}
- name: Viral LinkedIn Post Writer
  endpoint:
    path: /agent/invoke_agent_6keobi838j5pkod1
    method: POST
    data_selector: response
    params: {}
- name: hubspot_company
  endpoint:
    path: /v1/action/get_hubspot_company_object
    method: POST
    data_selector: response
    params:
      query: Acme Corporation
- name: invoke_agent_qfwjaebz3s069pmw
  endpoint:
    path: /invoke/agent/qfwjaebz3s069pmw
    method: POST
    data_selector: result
    params: {}
- name: invoke_agent_tx3oam6fo51b7pw7
  endpoint:
    path: /invoke/agent/tx3oam6fo51b7pw7
    method: POST
    data_selector: result
    params: {}
- name: hubspot_contact
  endpoint:
    path: /action/get_hubspot_contact_object
    method: POST
    data_selector: response
    params:
      query: john.doe@example.com
- name: search
  endpoint:
    path: /action/search
    method: POST
    data_selector: data
    params:
      limit: 20
- name: hubspot_object
  endpoint:
    path: /action/get_hubspot_object
    method: POST
    data_selector: response
    params: {}
- name: hubspot_owners
  endpoint:
    path: /action/get_hubspot_owners
    method: POST
    data_selector: response
    params:
      hubspot_portal: '12345678'
- name: invoke_agent_6bf8p9clio50t5cy
  endpoint:
    path: /invoke/agent/6bf8p9clio50t5cy
    method: POST
    data_selector: response
    params: {}
- name: invoke_agent_lt8gzzc4s59qym06
  endpoint:
    path: /invoke/agent/lt8gzzc4s59qym06
    method: POST
    data_selector: response
    params: {}
- name: invoke_agent_zy06i5o3s2ygay29
  endpoint:
    path: /invoke/agent/zy06i5o3s2ygay29
    method: POST
    data_selector: response
    params: {}
- name: invoke_agent_0frbzoamzb733wh2
  endpoint:
    path: /invoke/agent/0frbzoamzb733wh2
    method: POST
    data_selector: response
    params: {}
- name: invoke_agent_0lbxuj5hbhz5iy0e
  endpoint:
    path: /invoke/agent/0lbxuj5hbhz5iy0e
    method: POST
    data_selector: response
    params: {}
- name: invoke_agent_nviyovw4ww4i7bsj
  endpoint:
    path: /invoke/agent/nviyovw4ww4i7bsj
    method: POST
    data_selector: response
    params: {}
- name: invoke_agent_nhwrqdx5nvqt899a
  endpoint:
    path: /invoke/agent/nhwrqdx5nvqt899a
    method: POST
    data_selector: response
    params: {}
- name: invoke_agent_6keobi838j5pkod1
  endpoint:
    path: /invoke/agent/6keobi838j5pkod1
    method: POST
    data_selector: response
    params: {}
- name: hubspot_company
  endpoint:
    path: /action/get_hubspot_company_object
    method: POST
    data_selector: response
    params:
      query: Acme Corporation
- name: hubspot_contact
  endpoint:
    path: /action/get_hubspot_contact_object
    method: POST
    data_selector: response
    params:
      query: john.doe@example.com
- name: hubspot_object
  endpoint:
    path: /action/get_hubspot_object
    method: POST
    data_selector: response
    params: {}
- name: hubspot_owners
  endpoint:
    path: /action/get_hubspot_owners
    method: POST
    data_selector: response
    params:
      hubspot_portal: '12345678'
notes:
- Bearer token from your account required for authorization
- Rate limits are set to 20 requests per minute and 1000 requests per day.
- Keep your API key private. It grants access to your Agent.ai account and credit
  usage—treat it like a password.
- Snippets are not encrypted and should not be used to store API keys, passwords,
  or other sensitive information.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Claude will always request your permission before running any MCP tool
- Your API token is kept secure and is only used to authenticate with agent.ai services
- No custom prompt or consent form required — it’s built-in.
- No manual contact creation step — Agent.ai handles that for you.
- You can still enrich, associate, or update properties later in your workflow if
  you want.
- Connect your portal and verify permissions so Agent.ai can read/write CRM data.
- Agent.ai can read, analyze, and update your contacts, companies, deals, and custom
  objects in real time.
- Most common file types—including .pdf, .txt, and .csv—are supported.
- Improved CSV handling for Claude Sonnet was introduced in July 2025 to increase
  reliability with structured data inputs.
- Captures dynamic responses from users, such as text, numbers, URLs, and dropdown
  selections.
- Fetch recent posts from a specified Bluesky user handle.
- Required fields include Instagram username, number of top followers, and output
  variable name.
- Enter one or more LinkedIn profile URLs, each on a new line.
- Specify how many recent posts to fetch from each profile.
- Search and retrieve Twitter user profiles based on specific keywords for targeted
  social media analysis.
- Enter the Instagram username (without @) to fetch profile details.
- Assign a variable name to store the profile data.
- Twitter Handle is required.
- Number of Tweets to Retrieve is required.
- Output Variable Name is required.
- Fetch search results from Google or YouTube for specific queries.
- Use the property picker to avoid typos in property names
- Values are case-sensitive for exact matches
- Always include `hs_object_id` in your properties if you’ll update or reference records
  later
- Use descriptive output variable names
- 'Common properties for contacts: firstname, lastname, email, phone'
- 'Common properties for deals: dealname, dealstage, amount, closedate, hs_object_id'
- Use Object ID when looking up deals, tickets, calls, emails, meetings, notes, and
  tasks.
- Test your filters in HubSpot’s UI first to verify they return the right records
- Filters make searches faster—use them!
- Ensure to handle not found cases for lookups
- Use clean domain format for company lookups
- HubSpot requires WRITE access to create objects
- Always include required properties for object types
- HubSpot requires email for creating contacts.
- Use property picker to avoid typos in property names.
- Ensure WRITE access is granted for the object types being updated
- Always use `hs_object_id` when you have it (fastest, most reliable)
- Test with a single record before running in a loop on hundreds of records
- Updating by Object ID is fastest (no extra lookup required)
- Only update properties that actually changed (don’t update everything)
- Retrieve timeline events for HubSpot records.
- Ensure proper OAuth setup and scopes are granted for accessing timeline events
- Rate limits may apply based on the number of requests made
- Logs structured events that show up on contact, deal, or company timelines in HubSpot.
- Use consistent event types across workflows (helps with reporting)
- Include meaningful descriptions that provide context
- Set custom properties for data you’ll want to filter/report on later
- Use descriptive event titles that make sense at a glance
- Test with a single record before running on multiple records
- Use past timestamps to backfill historical events
- This action creates a custom event that appears on the timeline of a HubSpot record.
- 'Events created but don’t appear in HubSpot: Verify you’re looking at the correct
  contact/company/deal in HubSpot.'
- In HubSpot timeline, click 'Filter' and make sure custom events are enabled.
- Check the timestamp - events in the far future or distant past might not show by
  default.
- Creating timeline events is fast (under 1 second typically).
- You can create many events in a loop without issues.
- 'Engagements are object-specific: Contact engagements logged directly on the contact,
  Company engagements logged directly on the company, Deal engagements logged directly
  on the deal.'
- Engagement records can be created programmatically.
- Returns a list of engagement records associated with a HubSpot record.
- Associations are required
- Content/body must be meaningful
- Set Variable action creates or updates a variable during workflow execution.
- Always add End Condition at the end to close the if/else block.
- Loop through search results and update each record
- Process each contact in a list
- Some objects like Contact may return nulls in deeply nested fields
- End Condition tells the workflow 'this is where the conditional block ends.'
- Every For Loop, If Condition, or If/Else must have a matching End Condition.
- End Condition action is required to close every For Loop, If Condition, or If/Else
  block.
- Display data summaries or workflow outputs to users.
- Displays information to users in a visually organized way.
- Bluesky Username and Password are required for authentication.
- Serverless Functions allow execution of custom code without managing infrastructure
- Serverless Functions allow execution of custom code in the cloud without managing
  infrastructure.
- Bearer token from your account is required.
- Authorization header is required with the Bearer token.
- Authorization header requires Bearer token from your account
- Authorization token is required from your account.
- Authorization requires Bearer token from your account
- 'Authorization: Bearer token from your account'
- Authorization requires a Bearer token
- Bearer token from your account (<https://agent.ai/user/integrations#api>)
- Bearer token from your account
- Bearer token from your account is required for authorization
- Authorization requires a Bearer token from your account
- Authorization requires a Bearer token.
- Authorization requires a Bearer token from your account.
- Requires authorization token to access the LinkedIn profile data.
- Requires Bearer token for authorization
- 'Authorization required: Bearer token from your account'
- Bearer token from your account is required for authorization.
- Uses OAuth2
- Bearer token from your account required for authorization.
- Authorization required with Bearer token from your account
- Uses OAuth2 with Bearer token for authentication
- Requires setup of an Instagram app for API access.
- Requires setup of Instagram Graph API and permissions
- Requires setup of connected app in Instagram
- Some fields may return nulls in deeply nested structures
- Uses OAuth2 with refresh token — requires setup of connected app in Instagram
- Authorization required in header as a Bearer token
- Generates an image based on the provided text.
- Authorization string required in the header as Bearer token.
- File type options include pdf, docx, html, md, odt, tex, azw3, epub, png.
- Bearer token from your account is required
- Generates persuasive ad copy for different advertising platforms (e.g., Google Ads,
  Facebook Ads) to improve click-through rates and conversions.
- This Ai will generate fun writing prompts for you to write essays or stories to
  so you can share it with others.
- Bearer token from your account required
- Search query to find specific company. Defaults to '_most_recent_company' if not
  provided or too short.
- Search query to find specific contact. Defaults to '_most_recent_contact' if not
  provided or too short.
- Required object_type and query in body.
- Authorization is required, use Bearer token
errors:
- '400 Bad Request: Check parameters and body format'
- '500 Internal Server Error: Try again later'
- 'ratelimit-limit: 1000'
- 'ratelimit-remaining: 999'
- 'ratelimit-reset: The timestamp when the rate limit resets.'
- 'ratelimit-reset-date: The ISO UTC date when the rate limit resets.'
- 'retry-after: The number of seconds to wait before retrying the request.'
- 'Connection refused: Make sure you’re using the correct URL format for your environment'
- 'No tools available: Check your Tool Selection Settings on the integrations page'
- 'Authentication failed: Verify your API token is correct and hasn’t expired'
- Contact not created? Verify OAuth scopes and that Lead Magnet is enabled
- Unexpected duplicates? Contact creation is automatic; if you add manual creates,
  ensure you check first
- Not showing in lists? Confirm internal property names and values
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'MISSING_OAUTH_SCOPE: Ensure the right OAuth scopes are granted.'
- 'OBJECT_NOT_FOUND: The specified object ID does not exist.'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of API calls.'
- 'OBJECT_NOT_FOUND: Check if the ID/email/domain exists'
- 'MISSING_OAUTH_SCOPE: Verify OAuth permissions for the requested object type'
- 'OBJECT_NOT_FOUND: The record doesn’t exist with that identifier'
- 'MISSING_OAUTH_SCOPE: Don’t have permission to access that object type'
- 'Missing Required Property: Ensure all required properties are filled'
- 'Property Does Not Exist: Verify property names and existence'
- 'Missing OAuth Scope: Ensure proper permissions are granted'
- 'Missing Required Property: Ensure all required properties are set.'
- 'Property Does Not Exist: Check if property exists in HubSpot.'
- 'Missing OAuth Scope: Ensure you have WRITE access for object types.'
- Object not found
- Missing OAuth Scope
- At least one property is required to update an object
- 'OBJECT_NOT_FOUND: Check if the identifier exists'
- 'MISSING_OAUTH_SCOPE: Ensure correct permissions for the object type'
- 'INVALID_PROPERTY: Verify that property names and values are correct'
- '400 Bad Request: Check input parameters for validity.'
- '401 Unauthorized: Verify authentication credentials.'
- '404 Not Found: Ensure the HubSpot ID exists.'
- 'INVALID_OBJECT_ID: Check if the provided HubSpot ID is valid'
- 'LIMIT_EXCEEDED: Reduce the number of requested events'
- 'TARGET_OBJECT_NOT_FOUND: Check the execution log for the used ID and verify the
  object exists in HubSpot.'
- 'INVALID_EVENT_TYPE: Ensure the event type is formatted correctly with lowercase
  and underscores only.'
- 'REQUEST_LIMIT_EXCEEDED: Check HubSpot - does this record have logged calls/emails/meetings?'
- 'QUERY_TIMEOUT: Increase limit to 500 or remove date filters'
- '401 Unauthorized: Verify object ID is correct'
- 'Associations are required: Ensure at least one association is provided.'
- '404 Not Found: Check if the object ID is valid.'
- '400 Bad Request: Ensure correct parameters are sent.'
- 'Associations are required: Add at least one association'
- 'STATUS_INVALID: Use standard values for status'
- 'Variable Not Updating: Value stays the same despite Set Variable'
- 'Math Not Working: Calculation returns wrong value'
- 'Variable Not Available Later: Can’t select variable in later action'
- Condition evaluated to FALSE
- Missing End Condition
- Else actions don’t execute when condition is false
- 'Missing End Condition: After all actions inside your conditional block, add an
  End Condition action.'
- 'Missing End Condition: Ensure every conditional block has a matching End Condition.'
- '200: Success'
- '500: Internal Server Error'
- '400: Bad Request'
- '400 Bad Request: Check input parameters'
- '403: Forbidden - Check if your token is valid.'
- '200: Successful response'
- 200 - Successful retrieval of company financial profile
- '401 Unauthorized: Recheck Bearer token'
- '401 Unauthorized: Recheck OAuth token'
- '400: Bad request, check your query parameters'
- '401 Unauthorized: Recheck Bearer token or user permissions'
- '401 Unauthorized: Recheck the authorization token.'
- '200: HTTP status code of the action response'
- '200: Successful request'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Check your OAuth token.'
- '403 Forbidden: Ensure you have permissions for this action.'
- '200: Retrieved Bluesky posts'
- '400 Bad Request: Check the parameters and ensure they are valid'
- '401 Unauthorized: Verify token and permissions'
- '403 Forbidden: Insufficient permissions for the requested operation'
- '401 Unauthorized: Bearer token is required.'
- '400: Bad Request - Check the request body for errors.'
- '200: File saved successfully.'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Bearer token from your account required'
- '400 Bad Request: Check your query syntax'
- '400 Bad Request: Check request format and parameters'
- '200: Retrieved HubSpot company data'
- '401 Unauthorized: Recheck Bearer token from your account'
- '401 Unauthorized: Recheck the Bearer token'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthToken
  - Bearer token
  - Bearer token from your account
client:
  base_url: https://api-lr.agent.ai/v1
  auth:
    type: Bearer
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
source_metadata: null
