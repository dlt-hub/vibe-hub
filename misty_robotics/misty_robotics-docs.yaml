resources:
- name: notification_settings
  endpoint:
    path: /api/notification/settings
    method: POST
- name: camera_service
  endpoint:
    path: /api/camera/enable
    method: POST
- name: av_streaming_service
  endpoint:
    path: /api/avstreaming/enable
    method: POST
- name: display_image
  endpoint:
    path: /api/display/image
    method: POST
- name: display_text
  endpoint:
    path: /api/display/text
    method: POST
- name: display_video
  endpoint:
    path: /api/display/video
    method: POST
- name: display_webview
  endpoint:
    path: /api/display/webview
    method: POST
- name: serial_message
  endpoint:
    path: /SerialMessage
    method: GET
    data_selector: AdditionalResults[0].Message
- name: device_info
  endpoint:
    path: /api/device
    method: GET
- name: device_information
  endpoint:
    path: /api/device/information
    method: GET
- name: device
  endpoint:
    path: /api/device
    method: GET
- name: system_update_allow
  endpoint:
    path: /api/system/update/allow
    method: POST
- name: system_update
  endpoint:
    path: /api/system/update
    method: POST
- name: change_led
  endpoint:
    path: /api/led/change
    method: POST
- name: play_audio
  endpoint:
    path: /api/audio/play
    method: POST
- name: change_display_image
  endpoint:
    path: /api/images/change
    method: POST
- name: slam_status
  endpoint:
    path: /api/slam/status
    method: GET
- name: self_state
  endpoint:
    path: /api/selfstate
    method: GET
- name: python_start
  endpoint:
    path: /api/python/start
    method: POST
- name: python_stop
  endpoint:
    path: /api/python/stop
    method: POST
- name: python_is_running
  endpoint:
    path: /api/python/running
    method: GET
- name: python_get_output
  endpoint:
    path: /api/python/output
    method: GET
- name: blink_settings
  endpoint:
    path: /api/blink/settings
    method: GET
- name: pause_audio
  endpoint:
    path: /api/audio/pause
    method: POST
- name: play_audio
  endpoint:
    path: /api/audio/play
    method: POST
- name: remove_blink_mappings
  endpoint:
    path: /api/blink/images
    method: DELETE
- name: set_blinking
  endpoint:
    path: /api/blink
    method: POST
- name: set_blink_settings
  endpoint:
    path: /api/blink/settings
    method: POST
- name: set_display_settings
  endpoint:
    path: /api/display/settings
    method: POST
- name: set_flashlight
  endpoint:
    path: /api/flashlight
    method: POST
- name: set_image_display_settings
  endpoint:
    path: /api/images/settings
    method: POST
- name: slam_visible_exposure_gain
  endpoint:
    path: /api/slam/settings/visible
    method: GET
    data_selector: result
- name: depth_picture
  endpoint:
    path: /api/cameras/depth
    method: GET
    data_selector: result
- name: fisheye_picture
  endpoint:
    path: /api/cameras/fisheye
    method: GET
    data_selector: result
    params:
      Base64: 'false'
- name: audio_files
  endpoint:
    path: /api/audio/list
    method: GET
- name: audio_file
  endpoint:
    path: /api/audio
    method: GET
    params:
      FileName: string
      Base64: boolean
- name: delete_audio
  endpoint:
    path: /api/audio
    method: DELETE
- name: image_list
  endpoint:
    path: /api/images/list
    method: GET
- name: image
  endpoint:
    path: /api/images
    method: GET
    params:
      FileName: string
      Base64: boolean
- name: delete_image
  endpoint:
    path: /api/images
    method: DELETE
- name: video_list
  endpoint:
    path: /api/videos/list
    method: GET
- name: video
  endpoint:
    path: /api/videos
    method: GET
    params:
      FileName: string
      Base64: boolean
- name: delete_video
  endpoint:
    path: /api/videos
    method: DELETE
- name: set_log_level
  endpoint:
    path: /api/logs/level
    method: POST
- name: set_network_connection
  endpoint:
    path: /api/networks/create
    method: POST
- name: set_notification_settings
  endpoint:
    path: /api/notification/settings
    method: POST
- name: set_websocket_version
  endpoint:
    path: /api/websocket/version
    method: POST
- name: start_wifi_hotspot
  endpoint:
    path: /api/networks/hotspot/start
    method: POST
- name: stop_wifi_hotspot
  endpoint:
    path: /api/networks/hotspot/stop
    method: POST
- name: start_artag_detector
  endpoint:
    path: /api/artags/detection/start
    method: POST
    data_selector: Result
    params:
      Dictionary: 7
      TagSizeMm: 144
- name: start_av_streaming
  endpoint:
    path: /api/avstreaming/start
    method: POST
    data_selector: Result
    params:
      URL: rtspd:1936
      Width: 640
      Height: 480
- name: start_face_detection
  endpoint:
    path: /api/faces/detection/start
    method: POST
    data_selector: Result
    params: {}
- name: start_face_training
  endpoint:
    path: /api/faces/training/start
    method: POST
    data_selector: Result
    params:
      FaceId: Joe_Smith
- name: start_face_recognition
  endpoint:
    path: /api/faces/recognition/start
    method: POST
    data_selector: Result
    params: {}
- name: start_keyphrase_recognition
  endpoint:
    path: /api/audio/keyphrase/start
    method: POST
    data_selector: Result
    params: {}
- name: start_keyphrase_recognition_azure
  endpoint:
    path: /api/audio/keyphrase/startazure
    method: POST
    data_selector: Result
    params: {}
- name: device_information
  endpoint:
    path: /api/device
    method: GET
    data_selector: result
- name: help
  endpoint:
    path: /api/help
    method: GET
    data_selector: result
- name: saved_wifi_networks
  endpoint:
    path: /api/networks
    method: GET
    data_selector: result
- name: log_file
  endpoint:
    path: /api/logs
    method: GET
    data_selector: result
- name: log_level
  endpoint:
    path: /api/logs/level
    method: GET
    data_selector: result
- name: robot_update_settings
  endpoint:
    path: /api/system/update/settings
    method: GET
    data_selector: result
- name: slam_service_enabled
  endpoint:
    path: /api/services/slam
    method: GET
    data_selector: result
- name: store_update_available
  endpoint:
    path: /api/system/updates
    method: GET
    data_selector: result
- name: websocket_names
  endpoint:
    path: /api/websockets
    method: GET
    data_selector: result
- name: websocket_version
  endpoint:
    path: /api/websocket/version
    method: GET
    data_selector: version
- name: set_text_display_settings
  endpoint:
    path: /api/text/settings
    method: POST
- name: set_video_display_settings
  endpoint:
    path: /api/videos/settings
    method: POST
- name: set_webview_display_settings
  endpoint:
    path: /api/webviews/settings
    method: POST
- name: speak
  endpoint:
    path: /api/tts/speak
    method: POST
- name: stop_audio
  endpoint:
    path: /api/audio/stop
    method: POST
- name: stop_speaking
  endpoint:
    path: /api/tts/stop
    method: POST
- name: slam_map
  endpoint:
    path: /api/slam/map
    method: GET
    data_selector: result
- name: current_slam_map
  endpoint:
    path: /api/slam/map/current
    method: GET
    data_selector: result
- name: slam_maps
  endpoint:
    path: /api/slam/map/ids
    method: GET
    data_selector: result
- name: slam_ir_exposure_gain
  endpoint:
    path: /api/slam/settings/ir
    method: GET
    data_selector: result
- name: slam_navigation_diagnostics
  endpoint:
    path: /api/slam/diagnostics
    method: GET
    data_selector: result
- name: slam_path
  endpoint:
    path: /api/slam/path
    method: GET
    data_selector: Result
    params:
      X: integer
      Y: integer
- name: slam_status
  endpoint:
    path: /api/slam/status
    method: GET
- name: hazard_settings
  endpoint:
    path: /api/hazards/settings
    method: GET
    data_selector: result
- name: hazard_settings
  endpoint:
    path: /api/hazard/updatebasesettings
    method: POST
- name: face_training
  endpoint:
    path: /api/faces/training/cancel
    method: POST
- name: speech_capture
  endpoint:
    path: /api/audio/speech/capture
    method: POST
- name: speech_capture_azure
  endpoint:
    path: /api/audio/speech/captureazure
    method: POST
- name: speech_capture_vosk
  endpoint:
    path: /api/audio/speech/capturevosk
    method: POST
- name: video_recordings
  endpoint:
    path: /api/videos/recordings
    method: DELETE
- name: faces
  endpoint:
    path: /api/faces
    method: DELETE
- name: known_faces
  endpoint:
    path: /api/faces
    method: GET
- name: video_recording
  endpoint:
    path: /api/videos/recordings
    method: GET
- name: video_recordings_list
  endpoint:
    path: /api/videos/recordings/list
    method: GET
- name: video_recording_rename
  endpoint:
    path: /api/videos/recordings/rename
    method: POST
- name: led_transition
  endpoint:
    path: /api/led/transition
    method: POST
- name: external_request
  endpoint:
    path: /api/request
    method: POST
- name: drive
  endpoint:
    path: /api/drive
    method: POST
- name: drive_arc
  endpoint:
    path: /api/drive/arc
    method: POST
- name: drive_heading
  endpoint:
    path: /api/drive/hdt
    method: POST
- name: drive_time
  endpoint:
    path: /api/drive/time
    method: POST
- name: drive_track
  endpoint:
    path: /api/drive/track
    method: POST
- name: halt
  endpoint:
    path: /api/halt
    method: POST
- name: move_arm
  endpoint:
    path: /api/arms
    method: POST
- name: move_arms
  endpoint:
    path: /api/arms/set
    method: POST
- name: move_head
  endpoint:
    path: /api/head
    method: POST
- name: stop
  endpoint:
    path: /api/drive/stop
    method: POST
- name: save_audio
  endpoint:
    path: /api/audio
    method: POST
    data_selector: Result
- name: save_image
  endpoint:
    path: /api/images
    method: POST
    data_selector: Result
- name: save_video
  endpoint:
    path: /api/videos
    method: POST
    data_selector: result
- name: serial_sensor_values
  endpoint:
    path: /api/serial
    method: GET
    data_selector: Result
- name: write_serial
  endpoint:
    path: /api/serial
    method: POST
    data_selector: Result
- name: trigger_skill_event
  endpoint:
    path: /api/skills/event
    method: POST
    data_selector: Result
- name: change_led
  endpoint:
    path: /api/led
    method: POST
    data_selector: Result
- name: display_image
  endpoint:
    path: /api/images/display
    method: POST
    data_selector: Result
- name: display_text
  endpoint:
    path: /api/text/display
    method: POST
    data_selector: Result
- name: display_video
  endpoint:
    path: /api/videos/display
    method: POST
    data_selector: Result
- name: display_webview
  endpoint:
    path: /api/webviews/display
    method: POST
    data_selector: Result
- name: start_keyphrase_recognition_vosk
  endpoint:
    path: /audio/keyphrase/startvosk
    method: POST
    params:
      CaptureSpeech: true
      MaxSpeechLength: 7500
      OverwriteExisting: true
      SilenceTimeout: 5000
- name: start_object_detector
  endpoint:
    path: /objects/detection/start
    method: POST
    params:
      MinimumConfidence: 0.6
      ModelId: 0
      MaximumTrackerHistory: 5
- name: start_recording_audio
  endpoint:
    path: /audio/record/start
    method: POST
    params:
      FileName: recording.wav
- name: start_recording_video
  endpoint:
    path: /videos/recordings/start
    method: POST
    params:
      FileName: misty_video
      Mute: false
      Duration: 30
      Width: 1920
      Height: 1080
- name: start_video_streaming
  endpoint:
    path: /videostreaming/start
    method: POST
    params:
      Port: 5678
      Rotation: 0
      Width: 0
      Height: 0
      Quality: 100
      Overlay: false
- name: stop_artag_detector
  endpoint:
    path: /artags/detection/stop
    method: POST
- name: stop_av_streaming
  endpoint:
    path: /avstreaming/stop
    method: POST
- name: stop_face_detection
  endpoint:
    path: /faces/detection/stop
    method: POST
- name: stop_face_recognition
  endpoint:
    path: /faces/recognition/stop
    method: POST
- name: stop_keyphrase_recognition
  endpoint:
    path: /audio/keyphrase/stop
    method: POST
- name: stop_object_detector
  endpoint:
    path: /objects/detection/stop
    method: POST
- name: stop_recording_audio
  endpoint:
    path: /audio/record/stop
    method: POST
- name: stop_recording_video
  endpoint:
    path: /videos/recordings/stop
    method: POST
- name: stop_video_streaming
  endpoint:
    path: /videostreaming/stop
    method: POST
- name: take_picture
  endpoint:
    path: /cameras/rgb
    method: GET
    params:
      Base64: false
      Width: 4160
      Height: 3120
      DisplayOnScreen: false
      OverwriteExisting: false
- name: cancel_skill
  endpoint:
    path: /api/skills/cancel
    method: POST
- name: delete_skill
  endpoint:
    path: /api/skills
    method: DELETE
- name: get_running_skills
  endpoint:
    path: /api/skills/running
    method: GET
    data_selector: result
- name: get_skills
  endpoint:
    path: /api/skills
    method: GET
    data_selector: Result
- name: load_skill
  endpoint:
    path: /api/skills/load
    method: POST
- name: reload_skills
  endpoint:
    path: /api/skills/reload
    method: POST
- name: run_skill
  endpoint:
    path: /api/skills/start
    method: POST
- name: save_skill_to_robot
  endpoint:
    path: /api/skills
    method: POST
    data_selector: Result
- name: allow_robot_updates
  endpoint:
    path: /api/system/update/allow
    method: POST
- name: clear_error_text
  endpoint:
    path: /api/text/error/clear
    method: POST
- name: connect_to_saved_wifi
  endpoint:
    path: /api/networks
    method: POST
- name: disable_audio_service
  endpoint:
    path: /api/services/audio/disable
    method: POST
- name: disable_av_streaming_service
  endpoint:
    path: /api/services/avstreaming/disable
    method: POST
- name: disable_camera_service
  endpoint:
    path: /api/services/camera/disable
    method: POST
- name: disable_slam_service
  endpoint:
    path: /api/services/slam/disable
    method: POST
- name: enable_audio_service
  endpoint:
    path: /api/services/audio/enable
    method: POST
- name: enable_av_streaming_service
  endpoint:
    path: /api/services/avstreaming/enable
    method: POST
- name: enable_camera_service
  endpoint:
    path: /api/services/camera/enable
    method: POST
- name: enable_slam_service
  endpoint:
    path: /api/services/slam/enable
    method: POST
- name: forget_wifi
  endpoint:
    path: /api/networks
    method: DELETE
- name: get_available_wifi_networks
  endpoint:
    path: /api/networks/scan
    method: GET
    data_selector: Result
- name: audio_service_enabled
  endpoint:
    path: /api/services/audio
    method: GET
    data_selector: Result
- name: av_streaming_service_enabled
  endpoint:
    path: /api/services/avstreaming
    method: GET
    data_selector: Result
- name: get_battery_level
  endpoint:
    path: /api/battery
    method: GET
    data_selector: result
- name: camera_service_enabled
  endpoint:
    path: /api/services/camera
    method: GET
    data_selector: Result
- name: get_camera_data
  endpoint:
    path: /api/camera
    method: GET
    data_selector: Result
- name: images
  endpoint:
    path: /images/list
    method: GET
- name: led
  endpoint:
    path: /led
    method: POST
- name: touch_sensor
  endpoint:
    data_selector: message
- name: voice_record
  endpoint:
    data_selector: message
- name: source_track_data_message
  endpoint:
    data_selector: message
- name: source_focus_config_message
  endpoint:
    data_selector: message
- name: text_to_speech_complete
  endpoint:
    data_selector: message
- name: time_of_flight
  endpoint:
    data_selector: message
- name: imu
  endpoint:
    data_selector: message
- name: key_phrase_recognized
  endpoint:
    data_selector: message
- name: locomotion_command
  endpoint:
    data_selector: Message
- name: object_detection
  endpoint:
    data_selector: message
- name: pru_message
  endpoint:
    data_selector: message
- name: charger_pose_message
  endpoint:
    path: ChargerPoseMessage
    method: WebSocket
    data_selector: message
- name: critical_status_message
  endpoint:
    path: CriticalStatusMessage
    method: WebSocket
    data_selector: message
- name: drive_encoders
  endpoint:
    path: DriveEncoders
    method: WebSocket
    data_selector: message
- name: face_recognition
  endpoint:
    path: FaceRecognition
    method: WebSocket
    data_selector: Message
- name: face_training
  endpoint:
    path: FaceTraining
    method: WebSocket
    data_selector: message
- name: halt_command
  endpoint:
    path: HaltCommand
    method: WebSocket
- name: hazard_notification
  endpoint:
    path: HazardNotification
    method: WebSocket
    data_selector: message
- name: actuator_position
  endpoint:
    data_selector: message
- name: ar_tag_detection
  endpoint:
    data_selector: message
- name: audio_play_complete
  endpoint:
    data_selector: message
- name: battery_charge
  endpoint:
    data_selector: message
- name: bump_sensor
  endpoint:
    data_selector: message
- name: self_state
  endpoint:
    path: /pubsub
    method: WebSocket
    data_selector: message
    params:
      Operation: subscribe
      Type: SelfState
      EventName: SelfState
- name: serial_message
  endpoint:
    path: /pubsub
    method: WebSocket
    data_selector: message
    params:
      Operation: subscribe
      Type: SerialMessage
      EventName: SerialMessage
- name: skill_data
  endpoint:
    path: /pubsub
    method: WebSocket
    data_selector: message
    params:
      Operation: subscribe
      Type: SkillData
      EventName: SkillData
- name: skill_system_state_change
  endpoint:
    path: /pubsub
    method: WebSocket
    data_selector: message
    params:
      Operation: subscribe
      Type: SkillSystemStateChange
      EventName: SkillSystemStateChange
- name: slam_status
  endpoint:
    path: /pubsub
    method: WebSocket
    data_selector: message
    params:
      Operation: subscribe
      Type: SlamStatus
      EventName: SlamStatus
- name: start_face_detection
  endpoint:
    path: /api/faces/recognition/start
    method: POST
- name: take_picture
  endpoint:
    path: /api/cameras/rgb
    method: GET
    params:
      Base64: null
      FileName: string
      Width: 1200
      Height: 1600
      DisplayOnScreen: false
      OverwriteExisting: true
- name: start_face_detection
  endpoint:
    path: /api/faces/recognition/start
    method: POST
- name: take_picture
  endpoint:
    path: /api/cameras/rgb
    method: GET
    params:
      Base64: null
      FileName: fileName
      Width: 1200
      Height: 1600
      DisplayOnScreen: false
      OverwriteExisting: true
- name: face_recognition_start
  endpoint:
    path: /api/faces/recognition/start
    method: POST
- name: take_picture
  endpoint:
    path: /api/cameras/rgb
    method: GET
    params:
      Base64: null
      FileName: fileName
      Width: 1200
      Height: 1600
      DisplayOnScreen: false
      OverwriteExisting: true
- name: start_face_detection
  endpoint:
    path: /api/faces/recognition/start
    method: POST
- name: take_picture
  endpoint:
    path: /api/cameras/rgb
    method: GET
    params:
      Base64: null
      FileName: fileName
      Width: 1200
      Height: 1600
      DisplayOnScreen: false
      OverwriteExisting: true
- name: skills_reload
  endpoint:
    path: /api/skills/reload
    method: POST
- name: run_skill
  endpoint:
    path: /api/skills/start
    method: POST
    params:
      Skill: <Skill GUID>
- name: cancel_skill
  endpoint:
    path: /api/skills/cancel
    method: POST
    params:
      Skill: <Skill GUID>
- name: save_skill_to_robot
  endpoint:
    path: /api/skills/save
    method: POST
- name: cancel_skill
  endpoint:
    path: /api/skills/cancel
    method: POST
- name: train_nlp_engine
  endpoint:
    path: /api/dialogs/train
    method: POST
- name: actions
  endpoint:
    path: /api/actions
    method: GET
- name: create_action
  endpoint:
    path: /api/actions
    method: POST
- name: start_action
  endpoint:
    path: /api/actions/start
    method: POST
- name: create_state
  endpoint:
    path: /api/states
    method: POST
- name: skills_reload
  endpoint:
    path: /api/skills/reload
    method: POST
notes:
- Skills run directly on the robot using .NET SDK, while applications run on external
  devices using HTTP API
- HTTP API introduces latency between request and execution due to network communication
- Code runs on Windows IoT Core for .NET skills
- External libraries can be used with .NET SDK for advanced local processing
- Not generally recommended for multiple users to each use a separate instance of
  the Misty companion app to connect and send commands to a single Misty robot
- Make sure your phone and Misty are on the same Wi-Fi network when using the app
- Can only connect Misty to Wi-Fi networks that have password protection - cannot
  connect to open networks
- Supports both 2.4 GHz and 5 GHz Wi-Fi networks
- Bluetooth and Wi-Fi broadcasts are considered location data - must enable location
  services on device
- Robot uses right-handed coordinate frame for orientation and movement
- IMU orients heading to 0/360 degrees each time robot boots up
- Arms cannot move higher than -29 degrees or lower than 90 degrees
- Scruff reflex causes robot to ignore all commands when CapTouch_Scruff sensor is
  touched
- Built-in hazards system prevents driving off surfaces or into obstacles
- 'Default hazard thresholds: 0.06m drop distance, 0.215m obstacle detection'
- Max speed limited to ~450 mm/s for hazard detection system
- Camera service and AV streaming service cannot be enabled simultaneously
- 'Default camera resolution: 1920x1080 for video, 4160x3120 for pictures'
- Recording at 3840x2160 changes max picture resolution to 3840x2160
- Camera session resets when resolution changes
- DefaultImageLayer does not automatically draw on top of other layers
- ErrorDisplayLayer is reserved for system messages and cannot be modified
- Default blinking behavior only works on DefaultImageLayer
- Uses 3.3v logic board (not 5v)
- Uses baud rate of 9600/8-N-1 for serial data transmission
- Must remove board from Misty before uploading new sketch when using hardware serial
  (pins D0 and D1)
- Can upload new sketch without disconnecting when using software serial pins (D8
  and D9)
- TX/RX switch can toggle between D0/D1 (hardware serial) and D8/D9 (software serial)
- Uses fixed DNS address of 8.8.8.8
- Update package is around 600MB
- Versions less than 2.0 don't serve Misty Studio
- Robot won't update if battery is below 50% or internet connectivity is absent
- SelfState message is slated for decomposition and deprecation
- Map generation is handled entirely in memory with finite size limit of around 90
  square meters
- Mapping is extremely processor intensive
- Good consistent lighting is key for sensor performance
- Glass walls, shiny floors, and very open or constrained areas can cause issues
- Python scripts must be a single file
- Only one script can be run at a time
- Python Language Server takes two minutes to be ready after boot
- PLS only supports ONE client connection at a time
- API client is generated by interrogating Misty's API via GetHelp command
- Commands marked as Beta may behave unpredictably
- For streaming audio with RTSP, Misty supports a subset of Android's supported audio
  formats
- For best RTSP results, use AAC format with MPEG-4/MOV or MPEG-TS container
- Custom blink settings are saved to local database and persist across reboots
- Misty stops blinking when error messages appear on screen
- Not functional with Misty II Basic Edition
- SLAM system must be streaming to return valid exposure and gain values
- 4K camera may not work while depth sensor data stream is open
- Images are not saved in Misty's memory unless explicitly saved
- Some commands are in Alpha development stage
- Base URL uses robot IP address - standard hotspot IP is 192.168.43.1
- Some commands like SetNotificationSettings are in Beta and may behave unpredictably
- Debug messages are not logged remotely regardless of log level setting
- WiFi hotspot functionality requires GetDeviceInformation command to retrieve credentials
- Misty's AV stream is NOT encrypted
- AV streaming service automatically disables Misty's camera service
- Misty cannot use microphones for wake word detection while streaming audio and video
- Video stream is rotated 90 degrees counterclockwise
- StartKeyPhraseRecognition and StartKeyPhraseRecognitionAzure commands are in Beta
- When Misty recognizes key phrase, she automatically stops listening for key phrase
  events
- Base URL requires robot IP address placeholder
- No authentication required for API access
- Log files are only stored for the most recent 14 day period
- SLAM service commands not functional with Misty II Basic Edition
- Some commands are currently in Beta and may behave unpredictably
- SetTextDisplaySettings command is currently in Beta and may behave unpredictably
- SetVideoDisplaySettings command is currently in Beta and may behave unpredictably
- SetWebViewDisplaySettings command is currently in Beta and may behave unpredictably
- Speak command is currently in Alpha and may behave unpredictably
- StopAudio command is currently in Beta and may behave unpredictably
- StopSpeaking command is currently in Alpha and may behave unpredictably
- Text-to-speech engine supports limited subset of SSML Version 1.0
- Speak commands can be enqueued without interrupting current speech
- StopAudio does not stop text-to-speech utterances - use StopSpeaking instead
- SLAM commands are not functional with the Misty II Basic Edition
- Commands like DriveToLocation, FollowPath, and GetSlamPath are currently in Alpha
- StartTracking must be used before DriveToLocation and FollowPath commands
- StopTracking should be used after navigation commands complete
- GetSlamIrExposureAndGain does not return valid values when SLAM system is not streaming
- Hazard system settings reset to default values each time the robot boots up
- Robot cannot safely drive over ledges greater than 0.06 meters
- Cannot use microphones for wake word detection or recording speech while actively
  streaming audio and video
- Video recordings have maximum resolution of 3840 x 2160 pixels and can be up to
  3 minutes long
- Single video file can be up to 225 MB and can take several minutes to download
- Speech recordings saved under default filenames or timestamped unique filenames
- Should occasionally delete unused recordings to prevent filling memory on 820 processor
- LED transitions continue until robot is powered off or receives another LED command
- SendExternalRequest command is currently in Alpha and may behave unpredictably
- SendExternalRequest does not support multipart/form-data uploads
- DriveArc and DriveHeading commands are currently in Alpha
- For best DriveHeading results, current heading should be within two degrees of desired
  heading
- DriveTime will not drive if TimeMs value is less than 100
- Stop command with Hold=true can strain drive motors and is generally not recommended
- SLAM capabilities are an alpha feature and unreliable at this time
- Maximum audio file size is 3 MB. Accepts .wav, .mp3, .wma, and .aac formats
- Maximum image file size is 3 MB. Valid formats are .jpg, .jpeg, .gif, .png
- Maximum video file size is 6 MB. Accepted formats are .mp4 and .wmv
- Images can be reduced in size but not enlarged
- DisplayVideo command cannot play video recordings created with StartRecordingVideo
- Misty does not play audio for videos displayed on screen
- DisplayWebView can consume significant computational resources
- StartKeyPhraseRecognitionVosk command is currently in Beta
- StartRecordingVideo and StopRecordingVideo commands are currently in Beta
- StartVideoStreaming and StopVideoStreaming commands are currently in Alpha
- Misty cannot record audio and listen for key phrase at the same time
- Misty cannot use microphones while actively streaming audio and video
- Recording videos at 3840 x 2160 changes max resolution for taking pictures to 3840
  x 2160
- Pictures taken with RGB camera are rotated 90 degrees counterclockwise
- If StopRecordingAudio is not called, Misty continues recording until audio file
  is 1 GB
- LoadSkill command is currently in Alpha and may behave unpredictably
- ReloadSkills command is currently in Alpha and may behave unpredictably
- AllowRobotUpdates command is currently in Beta and may behave unpredictably
- DisableAvStreamingService command is currently in Beta and may behave unpredictably
- EnableAvStreamingService command is currently in Beta and may behave unpredictably
- AvStreamingServiceEnabled command is currently in Beta and may behave unpredictably
- Camera service and AV streaming service cannot be enabled at the same time
- By default, AV streaming service is disabled when Misty boots up
- Effects of disable/enable service commands do not persist across reboot
- SLAM service commands are not functional with Misty II Basic Edition
- ReloadSkills may have significant delay before all skills are fully loaded
- SaveSkillToRobot requires content-type header set to multipart/form-data
- Uses WebSocket connection for real-time data streaming
- Any given WebSocket connection can be used for multiple data subscriptions
- Recommended to place lightSocket.js helper tool in tools or assets folder
- Misty's HTTP API does not use keys or credentials to authorize requests
- Any device that can discover Misty's IP address and send HTTP requests can send
  Misty commands
- WebSocket server available at ws://<robot-ip-address>/pubsub for live data streaming
- Some event types do not provide constant stream - they send messages when particular
  events occur
- Leaving unused WebSocket subscriptions open can lead to performance issues
- The WorldState event type is currently in Alpha and can't be used for much at this
  time. Many of the properties Misty sends in WorldState event messages are reserved
  for future use, and may have null or invalid values.
- WorldState WebSocket messages are sent even if the data has not changed, as the
  data is sent via timed updates, instead of being triggered by events. The WorldState
  WebSocket can send data as frequently as every 100ms, though it is set by default
  to 250ms.
- Misty cannot use her microphones for recording speech while actively streaming audio
  and video
- VoiceRecord event type is currently in Beta, and related hardware, firmware, or
  software is still under development
- Misty only sends audio localization event messages when she is actively recording
  audio
- Audio localization events are currently in Beta and may behave unpredictably
- SourceFocusConfigMessage is only sent once when Misty starts recording audio
- TextToSpeechComplete events require setting an UtteranceId value when calling the
  Speak command
- TimeOfFlight subscription frequency can be adjusted using the debounceMS parameter
- Misty's IMU orients its heading to 0/360 degrees each time Misty boots up or resets
  her real-time controller
- For Misty, a yaw value of 0/360 degrees does not represent true north unless Misty
  is facing true north when the IMU orients its heading
- IMU readings only change when Misty's body moves, not relative to head position
- By default, Misty sends IMU data to listeners once every five seconds
- Misty cannot use microphones for wake word detection while actively streaming audio
  and video
- KeyPhraseRecognized event type is currently in Beta
- Misty does not create or save audio recordings while listening for the key phrase
- When Misty recognizes the key phrase, she automatically stops listening for key
  phrase events
- LocomotionCommand WebSocket data is sent every time the linear or angular velocity
  changes, not at timed intervals
- To receive ObjectDetection events, you must both issue a StartObjectDetector command
  and register a listener
- ObjectDetection data is sent at timed intervals you define when registering for
  messages
- ChargerPoseMessage event type is currently in Alpha
- To get docking station pose, Misty must be between 0.5 and 2 meters away from the
  docking station
- For best results, do not attempt to locate the docking station while Misty is actively
  creating a map
- HazardNotification event type is currently in Alpha
- PersonName property will be removed from FaceRecognition events in a future system
  update
- Event data comes from sensors, external hardware, internal processes, software,
  and custom applications
- Must create event listeners to receive event messages
- Can filter data by specifying properties and applying event conditions
- Can set debounce values for event frequency control
- Some event types stream from groups of related sensors
- Property tests recommended for event types with multiple sensors
- WebSocket event messages may not include SensorName or Type pairs depending on version
- SelfState event type is currently in Alpha and may behave unpredictably
- SelfState WebSocket can send data as frequently as every 100ms, default is 250ms
- Location, occupancyGridCellMeters, occupancyGridCell, and slamStatus attributes
  are not functional with Misty II Basic Edition
- SlamStatus event type is not functional with Misty II Basic Edition
- Cannot set up subscription when there is an open subscription with the same EventName
- Uses local network connection - robot must be connected to Wi-Fi
- WebSocket connections available for FaceRecognition, TimeOfFlight, and LocomotionCommand
  events
- Helper tool lightSocket.js available from GitHub repository for WebSocket management
- First WebSocket message is registration message without relevant data
- Face detection can remain active even when not subscribed to FaceRecognition events
- Uses WebSocket for FaceRecognition events with LightSocket helper tool
- Program unsubscribes and re-subscribes to prevent taking multiple pictures of same
  person
- 8 second delay between face detection cycles
- Photos saved with timestamp in filename format
- Face detection remains active even when not subscribed to events
- Uses WebSocket connection for FaceRecognition events with LightSocket helper
- Photos are saved to robot's local storage with timestamp-based filenames
- 8-second pause between face detection cycles to prevent duplicate photos
- Uses WebSocket connections for FaceRecognition events with lightSocket.js helper
  tool
- Requires robot IP address to establish connection
- Face detection remains active even when not subscribed to FaceRecognition events
- Skills are deployed as IoT background applications that run on Windows IoT Core
- First deployment may fail to attach for debugging - redeploy if needed
- Skills must be reloaded after deployment using the ReloadSkills API endpoint
- For debugging without 2020.01.07 Android patch, must use USB-to-Ethernet adapter
  IP address
- Uses local network connection to robot IP address
- Skills identified by GUID from NativeRobotSkill constructor
- Can cancel all skills by sending empty payload to cancel endpoint
- Log files stored in c$/Data/Misty/SDK/Logs directory
- Files in Windows known folders must be accessed using Windows.Storage interface
- Requires Misty robot to be powered on and connected to same local Wi-Fi network
- IP address must be obtained from Misty companion app
- Extension compresses entire directory into .zip file for skill upload
- Connects to WebSocket server for streaming debug messages and SkillData events
- Uses Apache OpenNLP framework as embedded intent classifier
- Spaces inside entity START and END tags are significant
- 'If data cannot be parsed correctly, train call will contain result: false'
- In version 2.0.0, Contexts attribute requires JSON string array passed as string
- Actions prefixed with octothorpe are cleanup commands executed at end of animation
- System is stateful unlike most of Misty's commands
- Skills assemble into IoT background applications that run on Windows IoT Core
- Must use ARM platform configuration for deployment
- Requires Visual Studio with Remote Machine debugging to Misty's IP address
- Each unique background application can only contain a single .NET skill
- Must reload skills after deployment or changes using ReloadSkills API
- If no Android patch applied, must use USB-to-Ethernet adapter IP for remote debugging
errors:
- 'null reference exception: Browser caching issue - clear browsing data'
- '500 internal server error: Restart robot or clear browser cache'
- '404: Older platform version less than 2.0 - needs update'
- 'Connection timeout: Network may block device-to-device communication'
- '200 Ok: The request is valid'
- '400 BadArgument: The request has an invalid payload or query parameter'
- '404 NotFound: A command was not found at this endpoint'
- '500 Exception: Misty threw an exception and failed to handle the request'
- '503 ServiceUnavailable: The operation cannot be performed because Misty''s software
  or firmware is updating'
auth_info:
  mentioned_objects:
  - ATmega328P
  - Arduino Pro
  - Arduino Pro Mini
client:
  base_url: http://<robot-ip-address>
  headers:
    Accept: application/json
source_metadata: null
