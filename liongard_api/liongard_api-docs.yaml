resources:
- name: timeline
  endpoint:
    path: /api/v1/timeline
    method: GET
    data_selector: timeline
    params: {}
- name: view
  endpoint:
    path: /api/v1/systems/systemID/view
    method: POST
    data_selector: view
    params: {}
- name: agents
  endpoint:
    path: /reference/agents
    method: GET
- name: environments
  endpoint:
    path: /reference/environments
    method: GET
- name: metrics
  endpoint:
    path: /reference/metrics
    method: GET
- name: users
  endpoint:
    path: /reference/users
    method: GET
- name: groups
  endpoint:
    path: /reference/groups
    method: GET
- name: agents
  endpoint:
    path: /agents
    method: GET
- name: environment
  endpoint:
    path: /environments
    method: GET
- name: detections
  endpoint:
    path: /detections
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: environments
  endpoint:
    path: /reference/getenvironments
    method: GET
- name: agents
  endpoint:
    path: /reference/getagents
    method: GET
- name: detections
  endpoint:
    path: /reference/detections-1
    method: GET
- name: environment_count
  endpoint:
    path: /api/v1/environments/count/
    method: GET
    data_selector: ''
- name: Metrics
  endpoint:
    path: /reference/get_metrics
    method: GET
    data_selector: metrics
- name: Systems
  endpoint:
    path: /reference/systems
    method: GET
    data_selector: systems
- name: metrics
  endpoint:
    path: /reference/metrics
    method: GET
    data_selector: Metric
    params: {}
- name: Agents
  endpoint:
    path: /reference/getagents
    method: GET
- name: Environments
  endpoint:
    path: /reference/getenvironments
    method: GET
- name: Metrics
  endpoint:
    path: /reference/get_metrics
    method: GET
- name: environments
  endpoint:
    path: /api/v1/environments
    method: GET
    data_selector: ''
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: ''
    params: {}
- name: timeline
  endpoint:
    path: /api/v1/timeline
    method: GET
    data_selector: ''
    params: {}
- name: timeline
  endpoint:
    path: /api/v1/timeline
    method: GET
    data_selector: timeline entries
- name: environments
  endpoint:
    path: /environments
    params:
      pageSize: 50
- name: metrics
  endpoint:
    path: /metrics/evaluate
    method: POST
    data_selector: Pagination
    params:
      Page: 1
      PageSize: 25
- name: webhooks_auth
  endpoint:
    path: /v2/webhooks/auth
    method: POST
    data_selector: Data
- name: bulk_delete_agents
  endpoint:
    path: /api/v2/agents
    method: DELETE
    data_selector: default
    params: {}
- name: generate_dynamic_installer
  endpoint:
    path: /api/v2/agent/installer
    method: POST
- name: agents
  endpoint:
    path: /api/v2/view/agents
    method: POST
- name: dataprints
  endpoint:
    path: /dataprints/evaluate/{systemDetailId}
    method: POST
- name: detections
  endpoint:
    path: /api/v2/detections
    method: POST
- name: environment_count
  endpoint:
    path: /environments/count
    method: GET
    data_selector: Data
- name: environments
  endpoint:
    path: /api/v2/environments
    method: GET
    data_selector: Data
    params: {}
- name: environment
  endpoint:
    path: /api/v2/environments
    method: POST
- name: environments
  endpoint:
    path: /api/v2/environments
    method: PUT
- name: environments_bulk
  endpoint:
    path: /api/v2/environments/bulk
    method: POST
- name: environment
  endpoint:
    path: /api/v2/environments/{environmentId}
    method: PUT
- name: environment
  endpoint:
    path: /api/v2/environments/{environmentId}
    method: GET
    data_selector: Data
- name: delete_environment
  endpoint:
    path: /api/v2/environments/{environmentId}
    method: DELETE
- name: related_entities
  endpoint:
    path: /environments/{environmentId}/relatedEntities
    method: GET
    data_selector: object
    params: {}
- name: Get Dashboard queries per Environment
  endpoint:
    path: /api/v2/environments/{environmentId}/query
    method: POST
- name: environment_groups
  endpoint:
    path: /environment-groups
    method: GET
- name: environment_group
  endpoint:
    path: /api/v2/environment-groups
    method: POST
- name: Environment Group
  endpoint:
    path: /environment-groups
    method: DELETE
- name: update_single_environment_group
  endpoint:
    path: /api/v2/environment-groups/{environmentGroupID}
    method: PUT
- name: identities
  endpoint:
    path: /inventory/identities/query
    method: POST
- name: identity
  endpoint:
    path: /{inventoryIdentityID}
    method: GET
- name: identity
  endpoint:
    path: /api/v2/inventory/identities/{inventoryIdentityID}
    method: PUT
    data_selector: default
    params: {}
- name: update_multiple_inventory_identities
  endpoint:
    path: /api/v2/inventory/identities/bulk
    method: POST
    data_selector: default
- name: devices
  endpoint:
    path: /inventory/device-profiles/query
    method: POST
- name: device
  endpoint:
    path: /{inventoryDeviceProfileID}
    method: GET
- name: Update a single Device's properties
  endpoint:
    path: /api/v2/inventory/device-profiles/{inventoryDeviceProfileID}
    method: PUT
- name: update_multiple_device_properties
  endpoint:
    path: /api/v2/inventory/device-profiles/bulk
    method: POST
    data_selector: default
    params: {}
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: Data
    params:
      Page: integer
      PageSize: integer
      Filters[]: json
      Sorting[]: json
- name: related_environments
  endpoint:
    path: /metrics/{MetricID}/relatedEnvironments
    method: GET
    data_selector: Data
    params:
      MetricID: integer
- name: metrics
  endpoint:
    path: /metrics/evaluate
    method: POST
- name: Metrics Values for a System
  endpoint:
    path: /metrics/evaluate/systems
    method: POST
    data_selector: Data
    params: {}
- name: timelines
  endpoint:
    path: /timelines/query
    method: POST
- name: Generate Signing Key
  endpoint:
    path: /api/v2/webhooks/auth
    method: POST
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: Data
    params: {}
- name: webhook
  endpoint:
    path: /api/v2/webhooks
    method: POST
- name: webhook
  endpoint:
    path: /api/v2/webhooks/{WebhookID}
    method: GET
- name: webhook
  endpoint:
    path: /{WebhookID}
    method: PUT
- name: webhook
  endpoint:
    path: /webhooks/{WebhookID}
    method: DELETE
- name: environment_count
  endpoint:
    path: /environments/count
    method: GET
    data_selector: integer
- name: environment
  endpoint:
    path: /api/v1/environments/{EnvironmentID}
    method: GET
- name: Environments
  endpoint:
    path: /api/v1/environments/{EnvironmentID}
    method: PUT
- name: environments
  endpoint:
    path: /api/v1/environments
    method: GET
- name: environments
  endpoint:
    path: /environments
    method: GET
    data_selector: array of objects
- name: environments
  endpoint:
    path: /environments
    method: POST
    data_selector: object
    params: {}
- name: related_entities
  endpoint:
    path: /environments/{EnvironmentID}/relatedEntities
    method: GET
- name: environments_bulk
  endpoint:
    path: /environments/bulk
    method: POST
- name: agents_count
  endpoint:
    path: /agents/count
    method: GET
    data_selector: integer
- name: agents
  endpoint:
    path: /agents
    method: GET
- name: agent
  endpoint:
    path: /agents/{AgentID}
    method: GET
- name: agents
  endpoint:
    path: /agents/{AgentID}
    method: PUT
- name: agents
  endpoint:
    path: /agents/{AgentID}
    method: DELETE
- name: flush_job_queue
  endpoint:
    path: /api/v1/agents/{AgentID}/flush
    method: POST
- name: inspectors
  endpoint:
    path: /inspectors
    method: GET
- name: inspector_templates
  endpoint:
    path: /api/v1/inspector/{InspectorId}/templates
    method: GET
- name: inspector_versions
  endpoint:
    path: /api/v1/inspector/{InspectorId}/versions
    method: GET
    data_selector: array of objects
- name: launchpoints_count
  endpoint:
    path: /launchpoints/count
    method: GET
    data_selector: integer
- name: launchpoints
  endpoint:
    path: /launchpoints
    method: GET
    data_selector: array of objects
- name: launchpoints
  endpoint:
    path: /launchpoints
    method: POST
- name: launchpoints
  endpoint:
    path: /launchpoints
    method: GET
- name: Bulk Edit Launchpoints
  endpoint:
    path: /launchpoints
    method: PUT
- name: launchpoints
  endpoint:
    path: /launchpoints
    method: DELETE
- name: launchpoints
  endpoint:
    path: /launchpoints/{LaunchpointID}
    method: GET
    data_selector: array of objects
- name: launchpoints
  endpoint:
    path: /launchpoints
    method: GET
- name: launchpoint
  endpoint:
    path: /launchpoints/{LaunchpointID}
    method: PUT
- name: launchpoints
  endpoint:
    path: /launchpoints
    method: GET
    data_selector: records
    params: {}
- name: launchpoint
  endpoint:
    path: /launchpoints/{LaunchpointID}
    method: DELETE
    data_selector: response
    params: {}
- name: LaunchpointLog
  endpoint:
    path: /api/v1/logs
    method: GET
    data_selector: LaunchpointLog
    params:
      launchpoint: integer
      timeline: integer
- name: launchpoint_run
  endpoint:
    path: /launchpoints/{LaunchpointID}/run
    method: GET
- name: Bulk Run
  endpoint:
    path: /launchpoints/run
    method: POST
- name: system_count
  endpoint:
    path: /systems/count
    method: GET
    data_selector: integer
- name: systems
  endpoint:
    path: /api/v1/systems
    method: GET
    data_selector: array of objects
    params: {}
- name: system_detail_view
  endpoint:
    path: /api/v1/systems/{SystemID}/view
    method: POST
- name: timeline_count
  endpoint:
    path: /timeline/count
    method: GET
    data_selector: integer
- name: timeline
  endpoint:
    path: /timeline
    method: GET
- name: timeline
  endpoint:
    path: /api/v1/timeline/{TimelineID}
    method: GET
    data_selector: array of objects
    params: {}
- name: timeline_detail
  endpoint:
    path: /api/v1/timeline/{TimelineID}/detail
    method: GET
    data_selector: array of objects
- name: detections_count
  endpoint:
    path: /detections/count
    method: GET
- name: detections
  endpoint:
    path: /detections
    method: GET
    data_selector: array of objects
- name: detections_by_id
  endpoint:
    path: /detections/{DetectionID}
    method: GET
- name: environment_count
  endpoint:
    path: /tasks/count
    method: GET
- name: alerts
  endpoint:
    path: /api/v1/tasks
    method: GET
    data_selector: array of objects
- name: alert
  endpoint:
    path: /api/v1/tasks/{TaskID}
    method: GET
    data_selector: array of objects
    params:
      fields[]: array of strings
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: object
- name: metrics
  endpoint:
    path: /metrics
    method: POST
- name: metrics
  endpoint:
    path: /metrics/{MetricID}
    method: PUT
- name: metrics
  endpoint:
    path: /metrics/{MetricID}
    method: DELETE
    data_selector: response
    params: {}
- name: metrics
  endpoint:
    path: /metrics/bulk
    method: GET
    data_selector: results
    params:
      systems: array of integers
      metrics: array of integers
      uuids: array of strings
      includeNonVisible: boolean
- name: metrics
  endpoint:
    path: /metrics/bulk
    method: POST
    data_selector: object
    params: {}
- name: user_count
  endpoint:
    path: /users/count
    method: GET
    data_selector: integer
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: array of objects
    params: {}
- name: create_user
  endpoint:
    path: /api/v1/users
    method: POST
- name: user
  endpoint:
    path: /users/{UserID}
    method: GET
    data_selector: array of objects
- name: user
  endpoint:
    path: /api/v1/users/{UserID}
    method: PUT
- name: delete_user
  endpoint:
    path: /{UserID}
    method: DELETE
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: object
- name: verify_token
  endpoint:
    path: /authentication/verify-token
    method: POST
- name: Log In
  endpoint:
    path: /authentication/login
    method: POST
- name: access_key
  endpoint:
    path: /access-keys
    method: GET
    data_selector: array of objects
- name: access_keys_count
  endpoint:
    path: /access-keys/count
    method: GET
    data_selector: integer
- name: access_key
  endpoint:
    path: /access-keys/{AccessKeyID}
    method: DELETE
    params: {}
- name: bulk_delete_agents
  endpoint:
    path: /agents
    method: DELETE
    data_selector: default
    params: {}
- name: fetch_evaluated_jmespath_values
  endpoint:
    path: /dataprints/evaluate/{systemDetailId}
    method: POST
- name: detections
  endpoint:
    path: /api/v2/detections
    method: POST
- name: environment_count
  endpoint:
    path: /environments/count
    method: GET
    data_selector: object
- name: environment_groups
  endpoint:
    path: /environment-groups
    method: GET
- name: identities
  endpoint:
    path: /api/v2/inventory/identities/query
    method: POST
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: Data
    params:
      Page: 1
      PageSize: 200
- name: timelines
  endpoint:
    path: /timelines/query
    method: POST
    data_selector: Data
- name: Generate Signing Key
  endpoint:
    path: /webhooks/auth
    method: POST
- name: environments_count
  endpoint:
    path: /environments/count
    method: GET
    data_selector: integer
- name: agents_count
  endpoint:
    path: /agents/count
    method: GET
    data_selector: integer
- name: inspectors
  endpoint:
    path: /inspectors
    method: GET
- name: launchpoints
  endpoint:
    path: /launchpoints/count
    method: GET
    data_selector: integer
- name: system_count
  endpoint:
    path: /systems/count
    method: GET
    data_selector: integer
- name: timeline_count
  endpoint:
    path: /timeline/count
    method: GET
    data_selector: integer
- name: detections_count
  endpoint:
    path: /detections/count
    method: GET
    data_selector: integer
- name: Count
  endpoint:
    path: /tasks/count
    method: GET
    data_selector: integer
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: object
    params: {}
- name: user_count
  endpoint:
    path: /users/count
    method: GET
    data_selector: integer
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
- name: verify_token
  endpoint:
    path: /api/v1/authentication/verify-token
    method: POST
- name: access_key
  endpoint:
    path: /access-keys
    method: GET
    data_selector: array of objects
    params: {}
- name: Import and Integrate
  endpoint:
    path: /docs/onboard-customers-faster#section-step-1-import-and-integrate-your-new-customer
    method: GET
    data_selector: details
    params: {}
- name: Deploy Self-Managed Agents
  endpoint:
    path: /docs/agents-overview
    method: GET
    data_selector: details
    params: {}
- name: Activate Auto-Discovered Inspectors
  endpoint:
    path: /docs/auto-discovery
    method: GET
    data_selector: details
    params: {}
- name: Deploy Additional Inspectors
  endpoint:
    path: /docs/onboard-customers-faster#section-step-4-roll-out-any-additional-inspectors
    method: GET
    data_selector: details
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: reports
  endpoint:
    path: /api/v1/reports
    method: GET
    data_selector: data
    params: {}
- name: user_permission_roles
  endpoint:
    path: /api/v1/user_permission_roles
    method: GET
    data_selector: roles
- name: environment_group
  endpoint:
    path: /api/v1/environment_groups
    method: GET
    data_selector: groups
    params: {}
- name: campaign_member
  endpoint:
    path: /api/v1/campaign_member
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /api/v1/contact
    method: GET
    data_selector: records
- name: webinar_resources
  endpoint:
    path: /webinar/resources
    method: GET
    data_selector: resources
- name: asset
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /api/v1/campaign_member
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /api/v1/contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/v1.1/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/v1.1/sobjects/Contact
    method: GET
    data_selector: records
- name: environments
  endpoint:
    path: /api/v1/environments
    method: GET
    data_selector: data
    params: {}
- name: systems
  endpoint:
    path: /api/v1/systems
    method: GET
    data_selector: data
    params: {}
- name: configuration_changes
  endpoint:
    path: /api/v1/configuration_changes
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/v1.1/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/v1.1/sobjects/Contact
    method: GET
    data_selector: records
- name: cyber_assets
  endpoint:
    path: /api/v1/cyber_assets
    method: GET
    data_selector: data
    params: {}
- name: alerts
  endpoint:
    path: /api/v1/alerts
    method: GET
    data_selector: data
    params: {}
- name: Authentication & MFA
  endpoint:
    path: /authentication/mfa
    method: GET
    data_selector: users
    params: {}
- name: Email Security
  endpoint:
    path: /email/security
    method: GET
    data_selector: email_security_data
    params: {}
- name: Domain & Website Security
  endpoint:
    path: /domain/website/security
    method: GET
    data_selector: domain_security_data
    params: {}
- name: Endpoint Security - Workstations
  endpoint:
    path: /endpoint/security/workstations
    method: GET
    data_selector: workstation_security_data
    params: {}
- name: Endpoint Security - Servers
  endpoint:
    path: /endpoint/security/servers
    method: GET
    data_selector: server_security_data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/v1.1/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/v1.1/sobjects/Contact
    method: GET
    data_selector: records
- name: real_time_monitoring
  endpoint:
    path: /api/v1/real_time_monitoring
    method: GET
    data_selector: data
- name: ticket_statuses
  endpoint:
    path: /admin/integrations/autotask/ticketing/statuses
    method: GET
    data_selector: statuses
- name: ticket_priorities
  endpoint:
    path: /admin/integrations/autotask/ticketing/priorities
    method: GET
    data_selector: priorities
- name: ConnectWise
  endpoint:
    path: /connectwise
    method: GET
    data_selector: records
- name: API Member
  endpoint:
    path: /system/members/api
    method: POST
- name: companies
  endpoint:
    path: /api/v1/companies
    method: GET
    data_selector: records
- name: ConnectWise
  endpoint:
    path: /connectwise
    method: GET
    data_selector: records
- name: connectwise
  endpoint:
    path: /send-tickets-to-connectwise
    method: POST
- name: connectwise
  endpoint:
    path: /connectwise
    method: GET
- name: tickets
  endpoint:
    method: GET
    params:
      permissions:
      - read:tickets
      - edit:tickets
      - read:customers
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: data
    params: {}
- name: send_tickets
  endpoint:
    path: /halopsa/send-tickets
    method: POST
    data_selector: response
    params: {}
- name: ticket
  endpoint:
    path: /admin/integrations/halopsa/ticketing
    method: POST
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /api/accounts
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /import/map/accounts
    method: POST
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: data
- name: tickets
  endpoint:
    path: /services/data/vXX.X/tickets
    method: POST
    data_selector: records
    params: {}
- name: ticket_status
  endpoint:
    path: /admin/integrations/kaseya_bms/ticketing/status
    method: GET
    data_selector: statuses
    params: {}
- name: ticket_priority
  endpoint:
    path: /admin/integrations/kaseya_bms/ticketing/priority
    method: GET
    data_selector: priorities
    params: {}
- name: environments
  endpoint:
    path: /admin/environments
    method: GET
    data_selector: environments
- name: agents
  endpoint:
    path: /agents
    method: GET
- name: environments
  endpoint:
    path: /environments
    method: GET
- name: inspectors
  endpoint:
    path: /inspectors
    method: GET
- name: inspector_types
  endpoint:
    path: /inspector_types
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: Liongard Data
  endpoint:
    path: /api/data
    method: GET
    data_selector: data
- name: Microsoft 365 Users & Licenses Report
  endpoint:
    path: /powerbi/powerbi-templates/Microsoft+365+Users+%26+Licenses+Report.pbit
    method: GET
- name: Liongard Instance Health Dashboard
  endpoint:
    path: /powerbi/powerbi-templates/Liongard+Instance+Health+Dashboard.pbit
    method: GET
- name: Expirations Report
  endpoint:
    path: /powerbi/powerbi-templates/Expirations+Report.pbit
    method: GET
- name: Windows Workstation Status Report
  endpoint:
    path: /powerbi/powerbi-templates/Windows+Workstation+Status+Report.pbit
    method: GET
- name: Active Directory Password Policy Report
  endpoint:
    path: /powerbi/powerbi-templates/Active+Directory+Password+Policy+Report.pbit
    method: GET
- name: Access Control Report
  endpoint:
    path: /powerbi/powerbi-templates/Access+Control+Report.pbit
    method: GET
- name: incoming_webhook
  endpoint:
    path: /api/v1/webhook
    method: POST
    data_selector: url
    params: {}
- name: microsoft_teams_integration
  endpoint:
    path: /integrate/microsoft-teams
    method: GET
- name: Create a Liongard API Account in ServiceNow
  endpoint:
    path: /create-a-liongard-api-account-in-servicenow
    method: POST
- name: Integrate ServiceNow with Liongard
  endpoint:
    path: /integrate-servicenow-with-liongard
    method: POST
- name: Import & Map Companies from ServiceNow
  endpoint:
    path: /import-map-accounts-from-servicenow
    method: POST
- name: Send Tickets to ServiceNow
  endpoint:
    path: /send-tickets-to-servicenow
    method: POST
- name: ServiceNow
  endpoint:
    path: /api/servicenow
    method: GET
- name: companies
  endpoint:
    path: /import-map-accounts-from-servicenow
    method: POST
- name: tickets
  endpoint:
    path: /api/tickets
    method: POST
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: records
    params: {}
- name: customers
  endpoint:
    path: /api/customers
    method: GET
    data_selector: records
    params: {}
- name: contracts
  endpoint:
    path: /api/contracts
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /api/products
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
    params: {}
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: customers
- name: Windows Agent
  endpoint:
    path: /agent/proxy/windows
    method: POST
    data_selector: response
    params: {}
- name: Linux Agent
  endpoint:
    path: /agent/proxy/linux
    method: POST
    data_selector: response
    params: {}
- name: uninstall_agent_via_msi
  endpoint:
    path: /uninstall/via/msi
    method: POST
    data_selector: instructions
    params: {}
- name: uninstall_agent_via_windows_add_remove_programs
  endpoint:
    path: /uninstall/via/windows_add_remove_programs
    method: POST
    data_selector: instructions
    params: {}
- name: uninstall_agent_via_command_line
  endpoint:
    path: /uninstall/via/command_line
    method: POST
    data_selector: instructions
    params: {}
- name: uninstall_agent_via_powershell
  endpoint:
    path: /uninstall/via/powershell
    method: POST
    data_selector: instructions
    params: {}
- name: agent_installation
  endpoint:
    path: /agent/installation
    method: POST
    data_selector: response
    params: {}
- name: Agent Install Token
  endpoint:
    params:
      permissions:
      - Global Admin
      - Global Environment Manager
      - Global System Integrators
      - Environment Administrators
- name: install_script
  endpoint:
    path: /docs/macos-mass-deployment#download-the-liongard-install-script
    method: GET
    data_selector: scripts
    params: {}
- name: agent_install
  endpoint:
    path: /agent/install
    method: POST
    params:
      LIONGARDURL: yourinstance.app.liongard.com
      LIONGARDACCESSKEY: yourkey
      LIONGARDACCESSSECRET: yoursecret
- name: agents
  endpoint:
    path: /admin/agents
    method: GET
    data_selector: agents
    params: {}
- name: overview_data
  endpoint:
    path: /docs/tls-ssl-inspector
    method: GET
    data_selector: data
    params: {}
- name: tls_ssl_metrics
  endpoint:
    path: /docs/tls-ssl-inspector
    method: GET
    data_selector: metrics
    params: {}
- name: parent_overview
  endpoint:
    path: /docs/tls-ssl-inspector
    method: GET
    data_selector: Parent Overview Data Table
    params: {}
- name: child_overview
  endpoint:
    path: /docs/tls-ssl-inspector
    method: GET
    data_selector: Child Overview Data Table
    params: {}
- name: overview_data
  endpoint:
    path: /docs/tls-ssl-inspector
    method: GET
    data_selector: records
- name: tls_ssl_metrics
  endpoint:
    path: /docs/tls-ssl-inspector
    method: GET
    data_selector: metrics
    params: {}
- name: overview
  endpoint:
    path: /docs/tls-ssl-inspector
    method: GET
    data_selector: Overview Data Table
    params: {}
- name: overview
  endpoint:
    path: /docs/tls-ssl-inspector
    method: GET
    data_selector: data
    params: {}
- name: overview
  endpoint:
    path: /docs/tls-ssl-inspector
    method: GET
    data_selector: data
    params: {}
- name: overview
  endpoint:
    path: /docs/tls-ssl-inspector
    method: GET
    data_selector: data
    params: {}
- name: child_overview
  endpoint:
    path: /docs/tls-ssl-inspector
    method: GET
    data_selector: child_data
    params: {}
- name: overview_data
  endpoint:
    path: /docs/tls-ssl-inspector
    method: GET
    data_selector: Overview
    params: {}
- name: overview
  endpoint:
    path: /path/to/overview
    method: GET
    data_selector: records
- name: users_and_groups
  endpoint:
    path: /path/to/users_and_groups
    method: GET
    data_selector: records
- name: features
  endpoint:
    path: /path/to/features
    method: GET
    data_selector: records
- name: interfaces
  endpoint:
    path: /path/to/interfaces
    method: GET
    data_selector: records
- name: access_rules
  endpoint:
    path: /path/to/access_rules
    method: GET
    data_selector: records
- name: nat
  endpoint:
    path: /path/to/nat
    method: GET
    data_selector: records
- name: site_to_site_vpn
  endpoint:
    path: /path/to/site_to_site_vpn
    method: GET
    data_selector: records
- name: client_vpn
  endpoint:
    path: /path/to/client_vpn
    method: GET
    data_selector: records
- name: qos_policies
  endpoint:
    path: /path/to/qos_policies
    method: GET
    data_selector: records
- name: aliases
  endpoint:
    path: /path/to/aliases
    method: GET
    data_selector: records
- name: overview
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: overview_data
    params: {}
- name: users_groups
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: users_groups_data
    params: {}
- name: features
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: features_data
    params: {}
- name: interfaces
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: interfaces_data
    params: {}
- name: access_rules
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: access_rules_data
    params: {}
- name: nat
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: nat_data
    params: {}
- name: site_to_site_vpn
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: site_to_site_vpn_data
    params: {}
- name: client_vpn
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: client_vpn_data
    params: {}
- name: qos_policies
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: qos_policies_data
    params: {}
- name: aliases
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: aliases_data
    params: {}
- name: watchguard_metrics
  endpoint:
    path: /watchguard/metrics
    method: GET
    data_selector: metrics
    params: {}
- name: overview
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: data
    params: {}
- name: Network IP
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: Data Views Information
    params: {}
- name: Overview
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: records
    params: {}
- name: overview
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: Overview Data Table
- name: users_groups
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: Data Tab Headers
- name: overview
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: data
- name: Overview
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: Overview Data Table
    params: {}
- name: Users & Groups
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: Users & Groups
    params: {}
- name: Features
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: Features
    params: {}
- name: Interfaces
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: Interfaces
    params: {}
- name: Access Rules
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: Access Rules
    params: {}
- name: NAT
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: NAT
    params: {}
- name: Site-to-Site VPN
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: Site-to-Site VPN
    params: {}
- name: Client VPN
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: Client VPN
    params: {}
- name: QoS Policies
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: QoS Policies
    params: {}
- name: Aliases
  endpoint:
    path: /docs/watchguard-inspector
    method: GET
    data_selector: Aliases
    params: {}
- name: parent_overview
  endpoint:
    path: /api/parent_overview
    method: GET
    data_selector: data
    params: {}
- name: child_overview
  endpoint:
    path: /api/child_overview
    method: GET
    data_selector: data
    params: {}
- name: Protected Macs Count
  endpoint:
    path: /path/to/protected_macs_count
    method: GET
    data_selector: records
- name: Infected Endpoints Count
  endpoint:
    path: /path/to/infected_endpoints_count
    method: GET
    data_selector: records
- name: Active Endpoint Count
  endpoint:
    path: /path/to/active_endpoint_count
    method: GET
    data_selector: records
- name: SystemInfo
  endpoint:
    path: /path/to/system_info
    method: GET
    data_selector: records
- name: Endpoints Count
  endpoint:
    path: /path/to/endpoints_count
    method: GET
    data_selector: records
- name: Admin User Email List
  endpoint:
    path: /path/to/admin_user_email_list
    method: GET
    data_selector: records
- name: Policies List
  endpoint:
    path: /path/to/policies_list
    method: GET
    data_selector: records
- name: Activated Users Email List
  endpoint:
    path: /path/to/activated_users_email_list
    method: GET
    data_selector: records
- name: Infected Device List
  endpoint:
    path: /path/to/infected_device_list
    method: GET
    data_selector: records
- name: Infected Device Count
  endpoint:
    path: /path/to/infected_device_count
    method: GET
    data_selector: records
- name: Devices Not Checked in Within 30 Days List
  endpoint:
    path: /path/to/devices_not_checked_in_30_days_list
    method: GET
    data_selector: records
- name: Devices Not Checked in Within 30 Days Count
  endpoint:
    path: /path/to/devices_not_checked_in_30_days_count
    method: GET
    data_selector: records
- name: Devices Not Checked in Within 14 Days List
  endpoint:
    path: /path/to/devices_not_checked_in_14_days_list
    method: GET
    data_selector: records
- name: Devices Not Checked in Within 14 Days Count
  endpoint:
    path: /path/to/devices_not_checked_in_14_days_count
    method: GET
    data_selector: records
- name: protected_machines
  endpoint:
    path: /api/protected_machines
    method: GET
    data_selector: data
    params: {}
- name: infection_data
  endpoint:
    path: /api/infection_data
    method: GET
    data_selector: data
    params: {}
- name: policy_details
  endpoint:
    path: /api/policy_details
    method: GET
    data_selector: data
    params: {}
- name: overview
  endpoint:
    path: /docs/webroot-inspector
    method: GET
    data_selector: Overview Data Table
    params: {}
- name: overview_data
  endpoint:
    path: /docs/webroot-inspector
    method: GET
    data_selector: Overview Data Table
    params: {}
- name: actionable_alerts
  endpoint:
    path: /docs/webroot-inspector
    method: GET
    data_selector: Actionable Alerts
    params: {}
- name: webroot_metrics
  endpoint:
    path: /docs/webroot-inspector
    method: GET
    data_selector: metrics
    params: {}
- name: Webroot
  endpoint:
    path: /docs/webroot-inspector
    method: GET
    data_selector: data
    params: {}
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: data
- name: actionable_alerts
  endpoint:
    path: /actionable_alerts
    method: GET
    data_selector: alerts
- name: Webroot Metrics
  endpoint:
    path: /webroot/metrics
    method: GET
    data_selector: metrics
    params: {}
- name: 'Webroot: Protected Macs Count'
  endpoint:
    path: /protected-macs-count
    method: GET
    data_selector: records
- name: 'Webroot: Infected Endpoints Count'
  endpoint:
    path: /infected-endpoints-count
    method: GET
    data_selector: records
- name: 'Webroot: Active Endpoint Count'
  endpoint:
    path: /active-endpoint-count
    method: GET
    data_selector: records
- name: 'Webroot: SystemInfo'
  endpoint:
    path: /system-info
    method: GET
    data_selector: records
- name: 'Webroot: Endpoints Count'
  endpoint:
    path: /endpoints-count
    method: GET
    data_selector: records
- name: 'Webroot: Admin User Email List'
  endpoint:
    path: /admin-user-email-list
    method: GET
    data_selector: records
- name: 'Webroot: Policies List'
  endpoint:
    path: /policies-list
    method: GET
    data_selector: records
- name: 'Webroot: Activated Users Email List'
  endpoint:
    path: /activated-users-email-list
    method: GET
    data_selector: records
- name: 'Webroot: Infected Device List'
  endpoint:
    path: /infected-device-list
    method: GET
    data_selector: records
- name: 'Webroot: Infected Device Count'
  endpoint:
    path: /infected-device-count
    method: GET
    data_selector: records
- name: 'Webroot: Devices Not Checked in Within 30 Days List'
  endpoint:
    path: /devices-not-checked-30-days
    method: GET
    data_selector: records
- name: 'Webroot: Devices Not Checked in Within 30 Days Count'
  endpoint:
    path: /devices-not-checked-30-days-count
    method: GET
    data_selector: records
- name: 'Webroot: Devices Not Checked in Within 14 Days List'
  endpoint:
    path: /devices-not-checked-14-days
    method: GET
    data_selector: records
- name: 'Webroot: Devices Not Checked in Within 14 Days Count'
  endpoint:
    path: /devices-not-checked-14-days-count
    method: GET
    data_selector: records
- name: parent_overview
  endpoint:
    path: /parent/overview
    method: GET
    data_selector: data
    params: {}
- name: parent_data_tab
  endpoint:
    path: /parent/data
    method: GET
    data_selector: data
    params: {}
- name: child_overview
  endpoint:
    path: /child/overview
    method: GET
    data_selector: data
    params: {}
- name: child_data_tab
  endpoint:
    path: /child/data
    method: GET
    data_selector: data
    params: {}
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: data
- name: overview
  endpoint:
    path: /webroot/overview
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /webroot/users
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /webroot/groups
    method: GET
    data_selector: data
    params: {}
- name: computers
  endpoint:
    path: /webroot/computers
    method: GET
    data_selector: data
    params: {}
- name: expirations
  endpoint:
    path: /webroot/expirations
    method: GET
    data_selector: data
    params: {}
- name: data_views
  endpoint:
    path: /docs/webroot-inspector
    method: GET
    data_selector: data
    params: {}
- name: actionable_alerts
  endpoint:
    path: /api/actionable_alerts
    method: GET
    data_selector: alerts
- name: metrics
  endpoint:
    path: /api/metrics
    method: GET
    data_selector: metrics
- name: Protected Macs Count
  endpoint:
    path: /metrics/protected_macs_count
    method: GET
    data_selector: data
    params: {}
- name: Infected Endpoints Count
  endpoint:
    path: /metrics/infected_endpoints_count
    method: GET
    data_selector: data
    params: {}
- name: Active Endpoint Count
  endpoint:
    path: /metrics/active_endpoint_count
    method: GET
    data_selector: data
    params: {}
- name: SystemInfo
  endpoint:
    path: /metrics/system_info
    method: GET
    data_selector: data
    params: {}
- name: Endpoints Count
  endpoint:
    path: /metrics/endpoints_count
    method: GET
    data_selector: data
    params: {}
- name: Admin User Email List
  endpoint:
    path: /metrics/admin_user_email_list
    method: GET
    data_selector: data
    params: {}
- name: Policies List
  endpoint:
    path: /metrics/policies_list
    method: GET
    data_selector: data
    params: {}
- name: Activated Users Email List
  endpoint:
    path: /metrics/activated_users_email_list
    method: GET
    data_selector: data
    params: {}
- name: Infected Device List
  endpoint:
    path: /metrics/infected_device_list
    method: GET
    data_selector: data
    params: {}
- name: Infected Device Count
  endpoint:
    path: /metrics/infected_device_count
    method: GET
    data_selector: data
    params: {}
- name: Devices Not Checked in Within 30 Days List
  endpoint:
    path: /metrics/devices_not_checked_in_30_days_list
    method: GET
    data_selector: data
    params: {}
- name: Devices Not Checked in Within 30 Days Count
  endpoint:
    path: /metrics/devices_not_checked_in_30_days_count
    method: GET
    data_selector: data
    params: {}
- name: Devices Not Checked in Within 14 Days List
  endpoint:
    path: /metrics/devices_not_checked_in_14_days_list
    method: GET
    data_selector: data
    params: {}
- name: Devices Not Checked in Within 14 Days Count
  endpoint:
    path: /metrics/devices_not_checked_in_14_days_count
    method: GET
    data_selector: data
    params: {}
- name: overview_data
  endpoint:
    path: /docs/windows-workstation-inspector
    method: GET
    data_selector: overview
    params: {}
- name: overview
  endpoint:
    path: /windows/workstation/overview
    method: GET
    data_selector: data
    params: {}
- name: hardware
  endpoint:
    path: /windows/workstation/hardware
    method: GET
    data_selector: data
    params: {}
- name: software
  endpoint:
    path: /windows/workstation/software
    method: GET
    data_selector: data
    params: {}
- name: updates_patches
  endpoint:
    path: /windows/workstation/updates_patches
    method: GET
    data_selector: data
    params: {}
- name: network_diagnostics
  endpoint:
    path: /windows/workstation/network_diagnostics
    method: GET
    data_selector: data
    params: {}
- name: security
  endpoint:
    path: /windows/workstation/security
    method: GET
    data_selector: data
    params: {}
- name: warranty
  endpoint:
    path: /windows/workstation/warranty
    method: GET
    data_selector: data
    params: {}
- name: dynamic_inspector
  endpoint:
    path: /api/v1.1/dynamic_inspector
    method: GET
    data_selector: records
- name: 3cx-inspector
  endpoint:
    path: /api/3cx
    method: GET
    data_selector: data
    params: {}
- name: discovered_systems
  endpoint:
    path: /DiscoveredSystems
    method: GET
    data_selector: records
- name: Inspector
  endpoint:
    path: /admin/inspectors/aws-inspector
    method: POST
    data_selector: inspectors
    params: {}
- name: Azure Inspector
  endpoint:
    method: POST
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: inspector
  endpoint:
    path: /inspector
    method: POST
    data_selector: data
    params: {}
- name: cisco_umbrella_inspector
  endpoint:
    path: /inspector/cisco-umbrella
    method: POST
    data_selector: inspector
- name: dns
  endpoint:
    path: /dns
    method: GET
- name: domain
  endpoint:
    path: /domain
    method: GET
- name: user
  endpoint:
    path: /user
    method: GET
- name: account
  endpoint:
    path: /account
    method: GET
- name: zone
  endpoint:
    path: /zone
    method: GET
- name: Parent Inspector
  endpoint:
    path: /inspector/setup/parent
    method: POST
    data_selector: data
    params: {}
- name: Child Inspector
  endpoint:
    path: /inspector/setup/child
    method: POST
    data_selector: data
    params: {}
- name: Google Workspace
  endpoint:
    path: /admin/directory/v1/users
    method: GET
    data_selector: users
- name: Google Drive
  endpoint:
    path: /drive/v3/files
    method: GET
    data_selector: files
- name: internet_domain_dns
  endpoint:
    path: /api/internet_domain_dns
    method: GET
    data_selector: records
- name: Inspector
  endpoint:
    path: /api/v1/inspectors
    method: POST
    data_selector: inspectors
    params:
      API_KEY: your_generated_api_key
- name: onelogin-inspector
  endpoint:
    params:
      Config.CLIENT_KEY: '{{ dlt.secrets[''client_id''] }}'
      SecureConfig.CLIENT_SECRET: '{{ dlt.secrets[''client_secret''] }}'
      Config.LOCATION: EU or US
      FreqType: days
      FreqInterval: '1'
- name: parent_inspector
  endpoint:
    path: /api/parent_inspector
    method: POST
    data_selector: data
- name: child_inspector
  endpoint:
    path: /api/child_inspector
    method: POST
    data_selector: data
- name: sonicwall-capture-client
  endpoint:
    path: /sonicwall-capture-client
    method: GET
    data_selector: data
    params: {}
- name: slack-inspector
  endpoint:
    path: /api/slack
    method: GET
    data_selector: data
    params: {}
- name: network_inspector
  endpoint:
    path: /network/inspectors
    method: GET
    data_selector: records
- name: Auvik Parent Inspector
  endpoint:
    path: /api/v1/inspectors/parent
    method: POST
    data_selector: data
    params: {}
- name: cisco-asa-inspector
  endpoint:
    path: /admin/inspectors/cisco-asa
    method: POST
    data_selector: inspectors
    params: {}
- name: cisco-ios-inspector
  endpoint:
    path: /cisco-ios
    method: SSH
    data_selector: inspectors
- name: cisco-meraki-inspector
  endpoint:
    path: /api/v1/inspectors/cisco-meraki
    method: GET
    data_selector: data
    params: {}
- name: cisco-sbs-inspector
  endpoint:
    path: /inspector/cisco-sbs-inspector
    method: POST
    data_selector: Inspectors
- name: Parent Inspector
  endpoint:
    path: /Admin/Inspectors
    method: POST
    data_selector: Inspector
    params:
      API Key: Datto Networking API Public Key
      API Secret: Datto Networking API Secret Key
- name: parent_inspector
  endpoint:
    path: /api/parent_inspector
    method: POST
- name: child_inspector
  endpoint:
    path: /api/child_inspector
    method: POST
- name: fortinet-fortigate-inspector
  endpoint:
    path: /fortinet/fortigate/inspector
    method: POST
    data_selector: inspector
    params: {}
- name: HP ProCurve Inspector
  endpoint:
    path: /admin/inspectors/hp_procurve
    method: GET
- name: network_scan
  endpoint:
    path: /api/v1/network_scan
    method: POST
    data_selector: results
    params: {}
- name: pfsense-inspector
  endpoint:
    path: /pfSense
    method: POST
    data_selector: Inspector
    params: {}
- name: SonicWall Inspector
  endpoint:
    path: /sonicwall-inspector
    method: POST
    data_selector: details
- name: SonicWall Inspector
  endpoint:
    path: /admin/inspectors/sonicwall
    method: POST
    data_selector: inspector
    params: {}
- name: sophos-sg-inspector
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: synology_nas_inspector
  endpoint:
    path: /api/v1/inspector
    method: GET
    data_selector: data
    params: {}
- name: Parent Inspector
  endpoint:
    path: /inspector/parent
    method: POST
- name: Child Inspector
  endpoint:
    path: /inspector/child
    method: POST
notes:
- You need to replace 'myinstance' with the URL name you use to access Liongard.
- 'Each Timeline entry returned will have two fields: ''SystemID'' and ''SystemDetailID'',
  used to rewind the dataprint over time.'
- Liongard enables IT Service Providers to deliver profitable and comprehensive attack
  surface management through deep visibility into IT environments, automated asset
  discovery and documentation, misconfiguration detection, and defensible cyber insurance
  reporting.
- SSL is required on all calls when accessing the API.
- UUID is the Universally Unique Identifier key assigned to every Metric.
- ID is the integer value assigned to a Metric upon its creation.
- If you are a Vendor building an integration to Liongard, we recommend building your
  integration to reference the Metric UUID.
- You will need to modify the collection with information from your instance to get
  it working.
- In order to use the Liongard API, you must be able to automatically follow forwards
  (HTTP 301 Responses). All API requests return a 301 request initially as they are
  automatically forwarded to the API for security reasons.
- The current rate limit for the Liongard API is 2000 requests within 5 minutes.
- Paging requests are performed two ways depending on which API methods you are using.
- The maximum PageSize that can be returned is 2000.
- Request signing is optional and does not need to be configured to use Webhooks.
- Create a base64 HMAC using the sha256 algorithm with the signing key and the body
  of the request received
- The URL for this request expired after 30 days.
- Uses OAuth2 with refresh token — requires setup of connected app in Liongard
- URL for this request expired after 30 days.
- Returns all the Related Entities that are tied to a single Environment such as Agents,
  Launchpoints, and Integration mappings
- 'Rate Limit: Requests from a single user in excess of 100 requests per minute may
  be throttled.'
- URL expires after 30 days
- Fetch all environments in your Service Provider.
- Fetch all the related entities for a specific environment, including Launchpoints,
  Agents, and Child Environments.
- Returns a List of Inspector Versions, This ID is required for creating a metric
  and determining the latest version of the inspector to run against.
- The Latest version of the inspector can be determined by the Lastest ID in the List
  (Highest ID) or you can use the 'CreatedOn' field to determine the latest ID.
- You will need to reference the inspector templates for building out the config and
  secure config objects for this launchpoint.
- Kick off many inspections.
- Returns the Raw data from the latest inspection for a system.
- Deletes only Custom Created Metrics, Liongard Created Metrics can not be deleted
- When creating and using the Manager or Reader Roles it is required to use either
  the Environment/EnvironmentID or EnvironmentGroupID/EnvironmentGroup to select environments
  associated to each role. If selecting Admin, System Integrator or User admin keep
  these fields null.
- Returns a count of all the agents in your service provider.
- Some objects may return nulls in deeply nested fields
- Liongard supports Single Sign-On via SAML 2.0.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Liongard's product architecture has been built from the ground-up with security
  measures in mind.
- Customers can also be bulk imported following the documentation found here.
- Flexible Assets/Configurations will not land until the Inspector runs.
- Requires configuration of OAuth2 client.
- Requires setup of connected app in Liongard
- Environment Groups allow for custom access control into logical groups.
- Requires OAuth2 authentication with token refresh capabilities.
- Uses OAuth2 with refresh token — requires setup of connected app in liongard
- All data sent to generate the summary is encrypted during transit (using TLS 1.2+).
- The AI processing is done via AWS Bedrock, a secure platform that is HIPAA Eligible
  and FedRAMP High authorized.
- Your data is NOT stored by the AI model provider and is NOT used to train any AI
  models.
- This website uses cookies to collect information and enhance your browsing experience.
- Environment-level notes can be created and viewed on the Environment Notes tab.
- Requires OAuth2 authentication setup.
- Users have the ability to add human intelligence to Liongard's automation with our
  Notes feature. Notes are short text snippets that can be added to an Environment
  or a System in Liongard.
- System-level notes can be tagged to a timeline entry to add more context to an inspection.
- The API requires an authentication token to access resources.
- Requires Azure AD Premium P1 or P2 license to access sign-in reports.
- Liongard is already capturing changes to your firewall's configuration.
- Refer to Liongard's Inspector timelines to keep track of changes made that may need
  to be accounted for or reverted in the future.
- Real-Time Monitoring is in Beta.
- You MUST select at least one 'Type' in the Import Options Tab for Auto-Activation.
- Liongard maps internal statuses to Autotask statuses for ticket management.
- Tickets set to 'Closed - Complete' will trigger a validation.
- Enabling Metrics in Liongard will make them visible in Liongard AND in BrightGauge.
- The BrightGauge integration is based on Metric Names and will be displayed in BrightGauge
  as 'metric_name.'
- Some objects may have specific fields that are not returned consistently.
- Liongard's data gets pushed to ConnectWise each time an Inspector runs.
- Requires setup of API account in ConnectWise Manage
- Must select at least one Status or Type for Auto-Activation of Inspectors
- Liongard API Member must have access to the Service Boards mapped.
- Requires setup of OAuth2 in HaloPSA
- This API requires authentication with OAuth2.
- Liongard's 'Closed-Complete' status will trigger a revalidation and possible reopening
  of the ticket.
- The preview will conclude on September 15th
- If any existing config record(s) match an asset in Liongard, we will UPDATE/OVERWRITE
  the EXISTING record in IT Glue.
- To rename Liongard Flexible Assets, they first must appear in IT Glue. Liongard
  Flexible Assets must be renamed in Liongard. Asset names cannot be changed in IT
  Glue.
- In IT Glue, you can add icons next to your Flexible Assets to distinguish them from
  others.
- Liongard creates new Flexible Assets in IT Glue with rich HTML tables.
- The data in Liongard's Flexible Assets auto-updates upon each Inspectors' run.
- Has API Access for Special Features.
- This API is used to import and map accounts from Kaseya BMS.
- Some endpoints may have rate limits
- Liongard sets the Status field to the Kaseya BMS status mapped to the 'New' status
  in Liongard.
- Liongard will retrieve the latest status for each Liongard-created Kaseya BMS ticket
  prior to processing.
- The Power BI Data Connector will require you to have a Liongard Access Key and Secret
  upon setup.
- The service account used for the data connector must have full access to the file
  path in which the connector is installed.
- Liongard Support will help troubleshoot issues with the Liongard Power BI Connector
  and with Liongard prebuilt report templates.
- Liongard Support is unable to support new Power BI template creation, the customization
  of Liongard's existing templates, custom templates, and/or general Power BI education.
- Microsoft has announced the deprecation of Office 365 Connectors within Microsoft
  Teams, with new connector creation blocked starting August 15, 2024, and full deprecation
  effective December 2025.
- Integrate ServiceNow with Liongard
- If you do not see the client that you would like to map an Environment to, then
  check your Filters to be sure that they are included in your selected Statuses,
  and Company Types.
- This API requires OAuth2 authentication.
- API key is required for integration.
- Ensure to allowlist Liongard's Application IP address if API access restrictions
  are enabled.
- Liongard has an internal set of Status and Priority fields associated with Actionable
  Alerts in Liongard.
- This feature is enabled by default and can be disabled on the Admin > Integrations
  > PSA > Ticketing screen.
- This installer script is fully authenticated and contains credentials necessary
  for agent installation in the selected environment
- Proxy type https is not supported.
- Uninstalling does not require a reboot.
- Liongard agent versions 4.2.4 and greater are now incompatible with Windows Server
  2012 and lower.
- At the moment, the Agent name cannot accept =, <, >, (, ), {, }, [, ] characters.
- Access Tokens are used only to register an Agent.
- Users must be a member of the Global Admin, Global Environment Manager, or Global
  System Integrators groups to see the Agent Install Token option.
- Access Tokens are used only to register an Agent and should be secured as sensitive
  passwords.
- Global Admin, Global Environment Manager, Global System Integrators will be able
  to install, see and associate all Agents.
- Environment Administrators are able to install Agents and map those Agents they
  installed only to Environments they are assigned to.
- System Inspectors are set to run daily by default.
- Most Inspectors can be set to run every eight hours.
- Inspects a TLS / SSL security certificate, returning a wide variety of data including
  known security issues (e.g., due to weak ciphers,) issuer, expiration data, and
  more.
- Inspects a TLS / SSL security certificate, returning a wide variety of data including
  known security issues.
- Inspects a TLS / SSL security certificate, returning a wide variety of data including
  known security issues, issuer, expiration data, and more.
- 'Inspects a WatchGuard Firebox firewall, returning a wide variety of data including:
  Users, Groups, Licensing, Interfaces, Access Rules, NAT Rules, VPN Info, QoS Policies
  and Aliases.'
- 'Production Status: Production'
- Inspects a Webroot SecureAnywhere MSP API, returning a wide variety of data including
  machines protected, recent infection data, and policy details.
- Inspects a Windows Workstation, returning a wide variety of data including disk
  information, hardware, installed software and services, patch levels, and more.
- The Inspector is not assigned an Agent, OR the Inspector is in a 'Scheduled' state
  and is associated with an Agent that has NOT had a heartbeat in over 24 hours.
- The Inspector has landed a Data Print to the platform, and the Data Print was successfully
  processed by the platform.
- Dynamic Inspector Configuration available in version 1.1
- The Inspector will default to run once a day at the time the Inspector is set up.
- Often an AWS Inspector failure is due to the API Key no longer being valid. This
  usually means the API Key has been deleted.
- We do NOT recommend using the same Client ID and Secret values for both Azure and
  Microsoft 365 Inspectors.
- Microsoft recommends 6 months for client secret expiration, but Liongard suggests
  selecting 24 months.
- API Key and Key Secret are required for configuration.
- HTTP 429 errors may occur if too many launchpoints run concurrently.
- Cloudflare offers two types of API tokens—User Tokens and Account Tokens. Liongard’s
  Cloudflare Inspector is compatible only with User Tokens.
- Liongard’s Cloudflare Inspector is compatible only with User Tokens.
- Enabling MFA on the user account will not break authentication and is recommended.
- The ESET Licensing Inspector only supports the inspection of ESET's latest MSP Administration
  portal.
- Uses service accounts for authentication — requires setup in Google Cloud Platform
- The private key file is needed to authenticate with Google's APIs
- .AU and .NZ domains do not have expiration dates available as a part of the public
  source data.
- MFA is supported for API use and recommended to properly secure accounts.
- A Platinum-level, or higher, subscription with KnowBe4 is required for this Inspector.
- Due to current limitations of the KnowBe4 API, Liongard can not set this Inspector
  up using the Parent/Child Inspector model.
- An assigned Microsoft 365 Basic Business or Microsoft 365 Basic license is required
  to use Liongard's Microsoft 365 Inspector.
- Ensure you are prompted to satisfy an MFA claim during the login process.
- 'Addon SKU (not during preview/beta): Partners who want to use this outside of a
  preview/beta period will need to pay an additional cost.'
- 'M365 Inspector: Partners looking to leverage this feature will need to be utilizing
  M365 Inspectors.'
- 'Write Permissions: Partners using this feature will also need to configure or toggle
  additional permission requirements, such as write, to allow remediation automation.'
- 'The URL should be of the form: <LG_INSTANCE>.app.liongard.com'
- Leave trimmed inspector payload blank unless there are issues with payload size.
- Standalone instances will require the entire URL.
- To prevent any potential service interruptions, create an admin account that will
  only be used for Liongard inspections.
- Requires a single-workspace Slack app to be installed in the workspace that is to
  be inspected.
- OAuth Access Token is required for configuration.
- Auvik is a multi-tenant system, where a single portal is used to manage many Environments.
- We always recommend using HTTPS and creating a separate user with limited rights
  for inspections.
- Liongard currently only supports the Enable Password method with Username and Password
  for SSH authentication.
- HMAC-SHA1 must be enabled on the device for the Cisco IOS Inspector to function
  properly.
- Liongard currently only supports the Enable Password method with Username and Password.
- API key must be generated from the Meraki User Console.
- Inspector will default to run once a day.
- Inspector requires SSH access with privilege level 15.
- The Liongard Fortinet Fortigate Inspector does not currently support devices that
  are configured with VDOMs.
- If the IP address of the Fortinet Fortigate Inspector is not correctly allowlisted
  on the Fortinet device, then the server will return a 401 status denying access.
- Make sure that the SSH user account has Manager Access
- If a security error is generated when the Inspector runs, you may need to accept
  the RSA key on the device with which you are connecting
- The Network Discovery inspector can not scan a subnet larger than a /17 which totals
  32,768 hosts.
- Only 1 Discovered Inspector currently allowed for auto-discovery.
- SonicWall Inspector requires an Agent using version 3.2.1 or newer.
- 'Due to an issue with some Sophos Firewall firmware versions, the Sophos Firewall
  API will not support passwords with the following characters: #, $, or @. ! may
  also not be supported.'
- Admin Permissions are required for rich data access.
- MFA cannot be used for authentication.
- The UniFi Inspector requires a UniFi Controller login with at least Read-Only Permissions
  to all sites on the controller.
- The UniFi Inspector cannot inspect a device when 2FA is required for the given username/password.
errors:
- '200 Success: Request completed successfully.'
- '400 Bad Request: Message'
- '429 Too Many Requests: Retry-After, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset'
- '400 Bad Request: Check your request parameters'
- '400 Failure: Invalid request parameters'
- '404 Failure: Resource not found'
- '200: Success'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'URL Expired: The URL for this request expired after 30 days.'
- 200 Success
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify token validity.'
- '404 Not Found: Check endpoint URL.'
- '401 Unauthorized: Check client credentials or token validity.'
- '401 Unauthorized: Check your authentication credentials.'
- '401 Unauthorized: Check your API key or token.'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Recheck API Keys and connection settings'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Verify client credentials'
- '429 Too Many Requests: Limit API calls'
- Right now, we don't support all inspectors. Please see the inspector support table
  for more information.
- '401 Unauthorized: Check your credentials'
- '403 Forbidden: Insufficient permissions'
- 'RATE_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'INVALID_CREDENTIALS: Check your client ID and secret.'
- 'TOKEN_EXPIRED: Refresh your access token.'
- 'INVALID_ACCESS_TOKEN: Recheck the Access Token'
- 'AGENT_INSTALL_FAILED: Check permissions and token validity'
- TLS/SSL | Certificate Expiration
- TLS/SSL | Weak Protocol Supported
- TLS/SSL | Serious Exposure to SSL Forgery / Interception
- TLS/SSL | Web Traffic Exposure to Sniffing and Lack of Website Validation
- TLS/SSL | Auto-Renewing Certificate Expiration
- 'Inspector Failure: The Inspector failed to upload a Data Print to the platform
  due to an issue encountered during its execution.'
- 'Timeout: The Inspector failed to upload a Data Print to the platform within the
  time allotted.'
- 'HTTP 429: Too Many Requests'
- 'missing_scope: The inspector is not able to use all the resources of the API. Please
  verify that you have granted read access to all items from the Permissions tab.
  If you created the Token before granting permission, you must re-create the Token.'
- 'invalid_access_token: Access token is invalid. Please verify that you have provided
  the entire token.'
- 'expired_access_token: It appears your token has expired, you need to create a new
  one from the app settings.'
- '400 - This API function requires a Dropbox Business API app key: The token was
  created using the Dropbox API instead of the Dropbox Business API. Please provide
  a token created using the Dropbox Business API.'
- '401 - Your app is not permitted to access this endpoint because it does not have
  the required scope: The inspector is not able to use all the resources of the API.
  Please verify that you have granted read access to all items from the Permissions
  tab.'
- '401 Unauthorized: Check service account permissions or private key validity'
- '403 Forbidden: Verify API access and billing status'
- '401: An invalid credentials error occurred — Please verify that your service account
  credentials are valid / have not expired, and that you''re able to log into Google
  Workspace with your Google Workspace Admin Email.'
- '403: An unauthorized client error occurred — Please ensure that your service account
  is authorized in the Domain-wide delegation page of the Admin console. You also
  need to verify that you''re able to log into Google Workspace with your Google Workspace
  Admin Email.'
- Domain Inspectors most often fail due to WHOIS information not existing or reverse
  DNS lookup failing.
- '401 Unauthorized: Check the Trusted Hosts field and ensure the Liongard Agent''s
  IP address is included.'
- '429 Too Many Requests: The Fortinet user that owns the API key may be locked out
  due to non-allowlisted access.'
- '401 Unauthorized: Verify that the credentials are correct'
- '403 Forbidden: Confirm that the credentials have the right privileges'
- '503 Service unavailable: Verify that you have the REST API enabled'
- 'AUTHORIZATION_ERROR: Check credentials and ensure the account is not locked out.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Privileged Role Administrator
  - Cloud Application Administrator
  - Directory Writers
  - Global Reader
  - Security Reader
  - Teams Administrator
  - Reports Reader
  - AdminAgents
client:
  base_url: https://{instance}.app.liongard.com/api/v1
source_metadata: null
