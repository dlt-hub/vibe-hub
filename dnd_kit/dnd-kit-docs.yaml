resources:
- name: Draggable
  endpoint:
    path: /api-documentation/draggable
    method: GET
    data_selector: records
- name: DndContext
  endpoint:
    path: /api-documentation/context-provider
    method: GET
    data_selector: data
- name: Droppable
  endpoint:
    path: /api-documentation/droppable
    method: GET
    data_selector: data
- name: Draggable
  endpoint:
    path: /api-documentation/draggable
    method: GET
    data_selector: data
- name: Sensors
  endpoint:
    path: /api-documentation/sensors
    method: GET
    data_selector: data
- name: Modifiers
  endpoint:
    path: /api-documentation/modifiers
    method: GET
    data_selector: data
- name: Sortable
  endpoint:
    path: /presets/sortable
    method: GET
    data_selector: data
- name: Accessibility
  endpoint:
    path: /guides/accessibility
    method: GET
    data_selector: data
- name: core_library
  endpoint:
    path: /api-documentation/context-provider
    method: GET
- name: draggable
  endpoint:
    path: /api-documentation/draggable
    method: GET
- name: droppable
  endpoint:
    path: /api-documentation/droppable
    method: GET
- name: drag_overlay
  endpoint:
    path: /api-documentation/draggable/drag-overlay
    method: GET
- name: pointer_sensor
  endpoint:
    path: /api-documentation/sensors/pointer
    method: GET
- name: mouse_sensor
  endpoint:
    path: /api-documentation/sensors/mouse
    method: GET
- name: touch_sensor
  endpoint:
    path: /api-documentation/sensors/touch
    method: GET
- name: keyboard_sensor
  endpoint:
    path: /api-documentation/sensors/keyboard
    method: GET
- name: accessibility_features
  endpoint:
    path: /guides/accessibility
    method: GET
- name: DndContext
  endpoint:
    path: /api-documentation/context-provider
    method: GET
    data_selector: props
- name: sensors
  endpoint:
    path: /api-documentation/sensors
    method: GET
    data_selector: sensors
    params: {}
- name: sortable
  endpoint:
    path: /presets/sortable
    method: GET
    data_selector: records
    params: {}
- name: sortable_items
  endpoint:
    path: /api/v1/sortable-items
    method: GET
    data_selector: items
- name: core_library
  endpoint:
    path: /api-documentation/context-provider
    method: GET
    data_selector: records
- name: modifiers
  endpoint:
    path: /api-documentation/modifiers
    method: GET
    data_selector: records
- name: sortable
  endpoint:
    path: /presets/sortable
    method: GET
    data_selector: records
- name: DragOverlay
  endpoint:
    path: /api-documentation/draggable/drag-overlay
    method: GET
    data_selector: records
    params: {}
- name: activator
  endpoint:
    path: /api-documentation/sensors/mouse#activator
    method: GET
    data_selector: Mouse events
    params: {}
- name: activation_constraints
  endpoint:
    path: /api-documentation/sensors/mouse#activation-constraints
    method: GET
    data_selector: Distance and Delay constraints
    params: {}
- name: DistanceConstraint
  endpoint:
    path: /api-documentation/sensors/touch#distance-constraint
    method: GET
    data_selector: distance
    params: {}
- name: DelayConstraint
  endpoint:
    path: /api-documentation/sensors/touch#delay-constraint
    method: GET
    data_selector: delay
    params: {}
- name: Keyboard
  endpoint:
    path: /api-documentation/sensors/keyboard
    method: GET
    data_selector: defaultKeyboardCodes
    params: {}
- name: Draggable
  endpoint:
    path: /api-documentation/draggable
    method: GET
- name: DndContext
  endpoint:
    path: /api-documentation/context-provider
    method: GET
    data_selector: records
    params: {}
- name: Droppable
  endpoint:
    path: /api-documentation/droppable
    method: GET
    data_selector: records
    params: {}
- name: Draggable
  endpoint:
    path: /api-documentation/draggable
    method: GET
    data_selector: records
    params: {}
- name: Sensors
  endpoint:
    path: /api-documentation/sensors
    method: GET
    data_selector: records
    params: {}
- name: Modifiers
  endpoint:
    path: /api-documentation/modifiers
    method: GET
    data_selector: records
    params: {}
- name: useDroppable
  endpoint:
    path: /api-documentation/droppable/usedroppable
    method: GET
    data_selector: ''
    params: {}
- name: collision_detection_algorithms
  endpoint:
    path: /api-documentation/context-provider/collision-detection-algorithms
    method: GET
    data_selector: collision_detection_algorithms
    params: {}
- name: DndContext
  endpoint:
    path: /api-documentation/context-provider/usedndcontext
    method: GET
    data_selector: dndContext
- name: Droppable
  endpoint:
    path: /api-documentation/droppable
    method: GET
    data_selector: droppable
- name: Draggable
  endpoint:
    path: /api-documentation/draggable
    method: GET
    data_selector: draggable
- name: Sensors
  endpoint:
    path: /api-documentation/sensors
    method: GET
    data_selector: sensors
- name: Modifiers
  endpoint:
    path: /api-documentation/modifiers
    method: GET
    data_selector: modifiers
notes:
- Built for React â€” exposes hooks such as useDraggable and useDroppable.
- Performance focused, minimizing DOM mutations.
- Components that use `useDraggable`, `useDroppable` or `DragOverlay` will need to
  be nested within a `DndContext` provider.
- When nesting `DndContext` providers, keep in mind that the `useDroppable` and `useDraggable`
  hooks will only have access to the other draggable and droppable nodes within that
  context.
- Sensors detect different input methods to initiate drag operations.
- Modifiers let you dynamically modify the movement coordinates that are detected
  by sensors.
- The modifiers repository contains a number of useful modifiers that can be applied.
- The default transition is 250 milliseconds, with an easing function set to ease.
- Uses sensible defaults to help making drag and drop interfaces accessible.
- The <DragOverlay> component should remain mounted at all times so that it can perform
  the drop animation.
- If you conditionally render the <DragOverlay> component, drop animations will not
  work.
- The Pointer sensor responds to Pointer events.
- Highly recommend specifying the touch-action CSS property for all draggable elements.
- The Mouse sensor responds to Mouse events.
- The mouse activator is the onMouseDown event handler.
- The touch sensor responds to touch events.
- The keyboard activator is the onKeyDown event handler.
- By default, the keys that activate the Keyboard sensor are Space and Enter.
- The 'id' argument must be unique within a given DndContext provider.
- The 'data' argument can be used for advanced use-cases.
- When nesting `DndContext` providers, the `useDroppable` and `useDraggable` hooks
  will only have access to the other draggable and droppable nodes within that context.
errors:
- Limitations of the HTML5 Drag and drop API.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://docs.dndkit.com
  headers:
    Accept: application/json
source_metadata: null
