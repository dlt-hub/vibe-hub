resources:
- name: api_discovery
  endpoint:
    path: /api/discovery
    method: GET
    data_selector: records
- name: api_posture
  endpoint:
    path: /api/posture
    method: GET
    data_selector: records
- name: api_threat_detection
  endpoint:
    path: /api/threat_detection
    method: GET
    data_selector: records
- name: api_discovery
  endpoint:
    path: /api/discovery
    method: GET
    data_selector: records
    params: {}
- name: api_posture
  endpoint:
    path: /api/posture
    method: GET
    data_selector: records
    params: {}
- name: api_threat_detection
  endpoint:
    path: /api/threat-detection
    method: GET
    data_selector: records
    params: {}
- name: API Inventory
  endpoint:
    path: /api/inventory
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: API Inventory
  endpoint:
    path: /api/inventory
    method: GET
    data_selector: records
    params: {}
- name: security_events
  endpoint:
    path: /api/v1/security_events
    method: GET
    data_selector: events
    params:
      incremental: timestamp
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api_security
  endpoint:
    path: /api/security
    method: GET
    data_selector: records
- name: business_logic_attacks
  endpoint:
    path: /api/v1/business_logic
    method: GET
    data_selector: data
    params: {}
- name: api_activity
  endpoint:
    path: /api/v1/activity
    method: GET
    data_selector: records
- name: logic_exploits
  endpoint:
    path: /api/v1/exploits
    method: GET
    data_selector: records
- name: trust_layer
  endpoint:
    path: /api/v1/trust
    method: GET
    data_selector: records
- name: aviation_isac
  endpoint:
    path: /aviation-isac
    method: GET
- name: fs_isac
  endpoint:
    path: /fs-isac
    method: GET
- name: sector
  endpoint:
    path: /sector
    method: GET
- name: securing_agentic_ai
  endpoint:
    path: /securing-agentic-ai
    method: GET
- name: fal_con
  endpoint:
    path: /fal-con
    method: GET
- name: ciso_ai_dilemma
  endpoint:
    path: /ciso-ai-dilemma
    method: GET
- name: aviation_isac
  endpoint:
    path: /aviation-isac
    method: GET
- name: fs_isac
  endpoint:
    path: /fs-isac
    method: GET
- name: sector
  endpoint:
    path: /sector
    method: GET
- name: securing_agentic_ai
  endpoint:
    path: /securing-agentic-ai
    method: GET
- name: fal_con
  endpoint:
    path: /fal-con
    method: GET
- name: ciso_ai_dilemma
  endpoint:
    path: /ciso-ai-dilemma
    method: GET
- name: ciso_report
  endpoint:
    path: /global-state-ciso-report-2023
    method: GET
    data_selector: report_data
- name: CISO Report
  endpoint:
    path: /global-state-ciso-report-2023.html
    method: GET
- name: api_overview
  endpoint:
    path: /api/overview
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api_discovery
  endpoint:
    path: /api/discovery
    method: GET
    data_selector: data
- name: api_governance
  endpoint:
    path: /api/governance
    method: GET
    data_selector: data
- name: api_security
  endpoint:
    path: /api/security
    method: GET
    data_selector: data
- name: api_inventory
  endpoint:
    path: /api/inventory
    method: GET
    data_selector: data
    params: {}
- name: attacker_activity
  endpoint:
    path: /api/attacker_activity
    method: GET
    data_selector: activity_records
- name: threat_protection
  endpoint:
    path: /api/threat_protection
    method: POST
    data_selector: protection_results
- name: api_inventory
  endpoint:
    path: /api/inventory
    method: GET
    data_selector: data
    params: {}
- name: compliance_reports
  endpoint:
    path: /api/compliance/reports
    method: GET
    data_selector: reports
    params: {}
- name: customer_data
  endpoint:
    path: /api/v1/customer_data
    method: GET
    data_selector: records
- name: user_data
  endpoint:
    path: /api/v1/user_data
    method: GET
    data_selector: records
- name: customer_data
  endpoint:
    path: /data/customer
    method: GET
    data_selector: records
- name: user_data
  endpoint:
    path: /data/user
    method: GET
    data_selector: records
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses OAuth2 with refresh token — requires setup of connected app in salt security
- Some endpoints may return nulls in deeply nested fields
- Some endpoints may have restrictions based on user permissions
- Agentless, domain-based discovery
- Complete inventory of externally accessible APIs
- Automated detection of shadow and rogue APIs
- Some objects may return nulls in deeply nested fields
- Salt Collect analyzes real traffic to uncover vulnerabilities, misconfigurations,
  and data exposure.
- Salt Connect discovers and inventories APIs across your entire ecosystem.
- Deployed in minutes, it provides immediate visibility with zero impact to traffic.
- 'Zero friction deployment: Fully agentless, no code changes, deploy in minutes'
- 'Cloud-native coverage: Full AWS service visibility, not limited to API Gateway'
- Salt integrates natively with Azure environments to deliver full lifecycle API protection
- 'Frictionless operation: No impact to app performance or developer velocity'
- Fully agentless, no code changes, deploy in minutes
- Salt integrates natively with Google Cloud to deliver complete API security, from
  discovery to threat detection, without slowing down innovation.
- 'Fast, flexible deployment: Deploy via Terraform or Google Marketplace'
- Integrate seamlessly into HCL DevOps and CI/CD pipelines
- Build and enforce vertical-specific posture and compliance standards
- Integrates with Kong via plugin or sidecar collector — no agents, no code changes,
  no inline risk
- Deploy in minutes with a few simple config steps
- Salt integrates natively with Google Cloud to deliver complete API security
- Requires setup of connected app in Salt Security
- Data may include sensitive information, handle with care
- Works with leading channel partners who have deep security, application, cloud,
  and digital transformation expertise.
- AI agents are reasoning, remembering, and acting autonomously across your systems
  via APIs and introduces unpredictable risk and complexity.
- API Security Software protects your APIs across the entire lifecycle and helps you
  eliminate blind spots, assess risk, and protect all your APIs.
- Automatically uncover every internal, external, and third-party API across your
  environments.
- Salt continuously analyzes real-time traffic to detect every API, documented or
  not.
- API gateway logs, WAF data, traffic introspection, and platform integrations all
  feed Salt’s inventory.
- Some objects like Contact may return nulls in deeply nested fields
- 'Cross-source aggregation: API gateway logs, WAF data, traffic introspection, and
  platform integrations all feed Salt’s inventory.'
- 'Cloud native & hybrid ready: works across AWS, Azure, GCP, and multi-cloud environments.'
- Salt blocks what WAFs miss — real-world API abuse.
- Uses OAuth2 with refresh token — requires setup of connected app in Salt Security
- AI is vulnerable to prompt injections, data poisoning, and command manipulation,
  all via APIs.
- Explore our collection of e-books, white papers, case studies, reports, briefs and
  more
- Salt Labs dives deep into these potential threats, spotting vulnerabilities before
  the bad guys can.
- The rapid pace of today’s digital-first economy has increased security risks.
- 95% of CISOs say their organizations have made API security a priority over next
  two years.
- Concerns over personal litigation stemming from breaches (48%) and increased personal
  risk/liability (45%).
- Collaborative and transparent team culture
- Focus on exceeding customer expectations
- Seamless deployment, no agents, no code changes, no configuration
- Salt Security delivers complete visibility, enforces governance where others can’t,
  and protects against attacks they miss.
- APIs are prime targets for attackers because they expose sensitive data and core
  business logic.
- Salt Security uses AI and ML algorithms to analyze API traffic patterns and identify
  anomalies that may indicate an attack.
- Salt Security can block API attacks in real time by integrating with existing enforcement
  points like API gateways and WAFs.
- Salt Security correlates events and reduces false positives, providing security
  teams with high-fidelity alerts that focus on critical threats.
- WAFs primarily analyze HTTP traffic and look for patterns of known attacks.
- APIs often have complex business logic and data structures that WAFs may not fully
  understand.
- Many API attacks exploit vulnerabilities in the business logic of an application.
- There are specific attack vectors unique to APIs, such as broken object-level authorization
  (BOLA) or mass assignment vulnerabilities.
- Salt captures the full attack timeline, displaying it in our dashboard and sending
  the information to your SIEM for incident response teams to analyze.
- Salt analyzes API traffic in context, considering factors such as the user's identity,
  location, device, and past behavior.
- Salt continuously monitors API traffic to detect and prevent API attacks.
- Salt identifies various OAuth attack techniques such as authorization code theft,
  token leakage, and replay attacks.
- Salt can proactively discover vulnerabilities within the OAuth implementation before
  they are exploited.
- Salt automatically and continuously discovers all APIs, capturing granular details
  about them including where sensitive data resides.
- Agentless and cloud-scale, Salt deploys instantly across any environment without
  agents, proxies, or performance impact.
- The platform provides a complete view of all attacker activities.
- Integration with existing security tools is possible.
- Requires setup of connected app in Salt
- Sensitive data exposure risks are highlighted in the API inventory
- Salt Security's platform provides a complete view of attacker activities in a consolidated
  timeline.
- The platform integrates seamlessly with security information and event management
  (SIEM) systems.
- Salt's platform provides the broadest set of compliance solutions to ensure you
  are meeting the data protection, data privacy and other requirements.
- MCP Server enables AI agents to discover, understand, and analyze API behavior with
  contextual awareness.
- Only Salt details each instance of exposed sensitive data, across all your APIs,
  to reduce your risk.
- Salt Security automatically and continuously discovers all APIs, ensuring comprehensive
  visibility for improved data security and privacy compliance.
- Organizations are under pressure on multiple fronts.
- No one else makes it as easy as Salt to ensure your APIs are being governed effectively.
- Our Services are designated for businesses and are not intended for personal or
  household use.
- The Salt MCP Server is available now through the Salt Early Access Program.
- Use of our Site is currently free of charge.
- You may be charged for Internet, maintenance of network connection and data usage
  charges made through use of the Site.
- Salt Security integrates with existing tools and workflows, such as Splunk/SIEMs,
  Jira, and ServiceNow, to send alerts with full context and actionable insights.
- Salt's approach allows for proactive API security by enforcing policies from design
  to cloud.
- Uses OAuth2 with refresh token — requires setup of connected app in Salt Security.
- Some objects may return nulls in deeply nested fields.
- We retain personal data for as long as we deem it as reasonably necessary in order
  to maintain and expand our relationship and provide you with our Services and offerings.
- Our Services are not intended for use by children under the age of 18.
- Digital transformation initiatives have impacted the role of the CISO.
- Uses OAuth2 with refresh token — requires setup of connected app in Salt
- Cookies are necessary for the Services to function properly, and cannot be declined
  or disabled unless you delete and block them through your web browser settings.
- Salt provides a comprehensive set of best-practice security policies and configurations.
- Salt automatically generates up-to-date specs for APIs.
- Salt continuously assesses security posture compliance in your CI/CD pipelines.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'INVALID_TOKEN: Ensure the token is valid and not expired'
- 'RATE_LIMIT_EXCEEDED: Reduce the number of API calls per minute'
- '403 Forbidden: Check user permissions for accessing the resource'
- Unsecured debug endpoints on MCP server exposed to public internet
- Expired tokens reused across multiple MCP instances without validation
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Check OAuth token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://salt.security
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
