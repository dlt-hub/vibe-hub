resources:
- name: Ping
  endpoint:
    path: /
    method: GET
    data_selector: status
- name: Verify Notification
  endpoint:
    path: /notification/verify
    method: POST
    data_selector: response
- name: ping
  endpoint:
    path: /
    method: GET
    data_selector: status
- name: verify_notification
  endpoint:
    path: /notification/verify
    method: POST
- name: list_storefronts
  endpoint:
    path: /storefronts
    method: GET
    data_selector: records
    params: {}
- name: get_storefront
  endpoint:
    path: /storefronts/:id
    method: GET
    data_selector: records
    params: {}
- name: storefronts
  endpoint:
    path: /storefronts
    method: GET
    data_selector: records
- name: get_storefront
  endpoint:
    path: /storefronts/:id
    method: GET
    data_selector: attributes
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /products/:id
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
    params:
      storefront_id: all
- name: product
  endpoint:
    path: /products/:id
    method: GET
    data_selector: attributes
    params: {}
- name: purchases
  endpoint:
    path: /purchases
    method: GET
    data_selector: records
    params: {}
- name: get_purchase
  endpoint:
    path: /purchases/:id
    method: GET
    data_selector: records
    params: {}
- name: reactivate_purchase
  endpoint:
    path: /purchases/:id/reactivate
    method: POST
    data_selector: records
    params: {}
- name: purchases
  endpoint:
    path: /purchases
    method: GET
    data_selector: ''
    params: {}
- name: get_purchase
  endpoint:
    path: /purchases/:id
    method: GET
    data_selector: ''
    params: {}
- name: reactivate_purchase
  endpoint:
    path: /purchases/:id/reactivate
    method: POST
    data_selector: ''
    params: {}
- name: list_subscribers
  endpoint:
    path: /storefronts/:storefront_id/subscribers
    method: GET
    data_selector: '[].id'
    params:
      storefront_id: required
      username: optional
- name: get_subscriber
  endpoint:
    path: /storefronts/:storefront_id/subscribers/:id
    method: GET
    data_selector: id
    params:
      storefront_id: required
      id: required
- name: verify_subscriber
  endpoint:
    path: /storefronts/:storefront_id/subscribers/verify
    method: GET
    data_selector: subscription.status
    params:
      storefront_id: required
      username: optional
      id: optional
- name: list_customers
  endpoint:
    path: /customers
    method: GET
    data_selector: records
    params: {}
- name: get_customer
  endpoint:
    path: /customers/:id
    method: GET
    data_selector: records
    params: {}
- name: list_subscribers
  endpoint:
    path: /storefronts/:storefront_id/subscribers
    method: GET
    data_selector: records
    params:
      storefront_id: required
- name: get_subscriber
  endpoint:
    path: /storefronts/:storefront_id/subscribers/:id
    method: GET
    data_selector: records
    params:
      storefront_id: required
      id: required
- name: verify_subscriber
  endpoint:
    path: /storefronts/:storefront_id/subscribers/verify
    method: GET
    data_selector: records
    params:
      storefront_id: required
      username: optional
      id: optional
- name: list_customers
  endpoint:
    path: /customers
    method: GET
    data_selector: records
    params: {}
- name: get_customer
  endpoint:
    path: /customers/:id
    method: GET
    data_selector: records
    params: {}
notes:
- This API is supported on the hosted site (*.dpdcart.com) only.
- We highly recommend upgrading to the hosted site as soon as possible as the lightbox
  cart does not support all DPD features.
- All collection GET methods are limited to a result set of 100 records and support
  paging by means of the “page” querystring parameter. Omission of this parameter
  will attempt to return all results; this is not guaranteed to work.
- All datetime parameters are assumed to be in your account’s time zone.
errors:
- '401 Unauthorized: Your credentials are invalid'
- '403 Forbidden: You do not have access to the resource'
- '404 Not Found: The resource could not be found'
- '412 Precondition Failed: The request could not be completed because of a validation
  error'
- '500 Internal Server Error: The server encountered an unexpected condition which
  prevented it from fulfilling the request.'
- '503 Service Unavailable: The server is currently unable to handle the request due
  to a temporary overloading or maintenance of the server.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://d2beuh40lcdzfb.cloudfront.net
  headers:
    Accept: application/json
source_metadata: null
