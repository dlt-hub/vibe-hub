resources:
- name: current_brand
  endpoint:
    path: /brands/current
    method: POST
    data_selector: brandID
- name: added_product_to_cart
  endpoint:
    path: /v5/events
    method: POST
    data_selector: properties
- name: placed_order
  endpoint:
    path: /v5/events
    method: POST
    data_selector: properties
- name: started_checkout
  endpoint:
    path: (Not available via REST)
    method: POST
    data_selector: (Not specified)
    params: {}
- name: placed_order
  endpoint:
    path: /
    method: POST
    data_selector: (Not specified)
    params: {}
- name: order_confirmation
  endpoint:
    path: /events
    method: POST
    data_selector: properties
- name: viewed_product
  endpoint:
    method: POST
- name: placed_order
  endpoint:
    method: POST
- name: contacts
  endpoint:
    path: /contacts
    method: POST
    data_selector: contacts
- name: cart_events
  endpoint:
    path: /events/cart
    method: POST
    data_selector: events
- name: order_events
  endpoint:
    path: /events/order
    method: POST
    data_selector: events
- name: custom_events
  endpoint:
    path: /events
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: added_product_to_cart
  endpoint:
    path: /events
    method: POST
    data_selector: properties
- name: placed_order
  endpoint:
    path: /events
    method: POST
    data_selector: properties
- name: contact
  endpoint:
    path: /contacts
    method: POST
- name: contacts_batch
  endpoint:
    path: /batches
    method: POST
- name: contact
  endpoint:
    path: /v5/contacts/{contactId}
    method: PATCH
- name: events
  endpoint:
    path: /batches
    method: POST
    params:
      eventTime: actual order creation date
- name: product_create
  endpoint:
    path: /products
    method: POST
- name: product_update
  endpoint:
    path: /products/{productID}
    method: PUT
- name: product_batch
  endpoint:
    path: /batches
    method: POST
    data_selector: items
- name: product_category
  endpoint:
    path: /product-categories
    method: POST
- name: update_product_category
  endpoint:
    path: /product-categories/{categoryID}
    method: PATCH
- name: added_product_to_cart
  endpoint:
    path: /track
    method: POST
    data_selector: properties
    params: {}
- name: started_checkout
  endpoint:
    path: /track
    method: POST
    data_selector: properties
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: trigger_custom_event_v3
  endpoint:
    path: /v3/events
    method: POST
- name: trigger_custom_event_v5
  endpoint:
    path: /v5/events
    method: POST
- name: contact
  endpoint:
    path: /contacts
    method: POST
- name: contacts_batch
  endpoint:
    path: /batches
    method: POST
- name: contact
  endpoint:
    path: /contacts/{contactId}
    method: PATCH
- name: events
  endpoint:
    path: /v5/events
    method: POST
- name: track
  endpoint:
    path: /track
    method: POST
- name: events
  endpoint:
    path: /v5/events
    method: POST
    data_selector: ''
    params: {}
- name: cart
  endpoint:
    path: /cart
    method: GET
    data_selector: lineItems
- name: addedItem
  endpoint:
    path: /addedItem
    method: GET
    data_selector: addedItem
- name: contacts
  endpoint:
    path: /contacts
    method: GET
- name: undefined
  endpoint:
    path: undefined
    method: undefined
    data_selector: undefined
    params: {}
- name: delete_product_category
  endpoint:
    path: /product-categories/{categoryId}
    method: DELETE
- name: track_event
  endpoint:
    method: POST
    data_selector: properties
- name: recommended_events
  endpoint:
    path: /reference/events-overview
    method: GET
- name: custom_events
  endpoint:
    path: /reference/events-overview
    method: GET
- name: contacts
  endpoint:
    path: /contacts
    method: POST
    data_selector: identifiers
- name: batch_items
  endpoint:
    path: /batches/{batchId}/items
    method: GET
- name: batch_information
  endpoint:
    path: /batches/{batchId}
    method: GET
- name: batches
  endpoint:
    path: /batches
    method: GET
- name: brand_information
  endpoint:
    path: /brands/current
    method: GET
- name: contact
  endpoint:
    path: /contacts/{contactID}
    method: GET
- name: contacts
  endpoint:
    path: /contactsList
    method: GET
- name: product_category
  endpoint:
    path: /product-categories/{categoryId}
    method: GET
- name: product_categories
  endpoint:
    path: /product-categories
    method: GET
- name: product
  endpoint:
    path: /products/{productID}
    method: GET
- name: products
  endpoint:
    path: /products
    method: GET
- name: get_method
  endpoint:
    method: GET
- name: post_method
  endpoint:
    method: POST
- name: patch_method
  endpoint:
    method: PATCH
- name: put_method
  endpoint:
    method: PUT
- name: delete_method
  endpoint:
    method: DELETE
- name: events
  endpoint:
    path: /v5/events
    method: GET
- name: events
  endpoint:
    path: /v5/events
    method: POST
- name: events
  endpoint:
    path: /v5/events
    method: POST
    data_selector: eventName
- name: events
  endpoint:
    path: /v5/events
    method: GET
- name: events
  endpoint:
    path: /v5/events
    method: POST
- name: events
  endpoint:
    path: /v5/events
    method: POST
    data_selector: properties
- name: events
  endpoint:
    path: /v5/events
    method: POST
- name: update_contact_by_contactID
  endpoint:
    path: /contacts/{contactID}
    method: PATCH
- name: update_contact_by_email
  endpoint:
    path: /contacts
    method: PATCH
    params:
      email: '{email}'
- name: product_category
  endpoint:
    path: /product-categories/{categoryID}
    method: PATCH
- name: events
  endpoint:
    path: /v5/events
    method: POST
    data_selector: properties
- name: batch_create
  endpoint:
    path: /batches
    method: POST
- name: batch_update
  endpoint:
    path: /batches
    method: PUT
- name: current_brand
  endpoint:
    path: /brands/current
    method: POST
- name: contacts
  endpoint:
    path: /v5/contacts
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: product_categories
  endpoint:
    path: /product-categories
    method: POST
- name: product
  endpoint:
    path: /products
    method: POST
- name: product
  endpoint:
    path: /products
    method: POST
- name: product
  endpoint:
    path: /products/{productID}
    method: PUT
- name: batch_products
  endpoint:
    path: /batches
    method: POST
- name: product_categories_create
  endpoint:
    path: /product-categories
    method: POST
- name: product_categories_update
  endpoint:
    path: /product-categories/{categoryID}
    method: PATCH
- name: product
  endpoint:
    path: /products/{productID}
    method: PUT
- name: events
  endpoint:
    path: /v5/events
    method: GET
- name: track
  endpoint:
    path: /track
    method: GET
- name: events
  endpoint:
    path: /v5/events
    method: POST
- name: abandoned_checkout
  endpoint:
    data_selector: abandonedCheckoutURL
- name: cart
  endpoint:
    data_selector: cartID
- name: currency
  endpoint:
    data_selector: currency
- name: line_items
  endpoint:
    data_selector: lineItems[]
- name: product_categories
  endpoint:
    data_selector: lineItems[].productCategories
- name: product_category_id
  endpoint:
    data_selector: lineItems[].productCategories.id
- name: product_category_title
  endpoint:
    data_selector: lineItems[].productCategories.title
- name: product_description
  endpoint:
    data_selector: lineItems[].productDescription
- name: product_discount
  endpoint:
    data_selector: lineItems[].productDiscount
- name: product_id
  endpoint:
    data_selector: lineItems[].productID
- name: product_image_url
  endpoint:
    data_selector: lineItems[].productImageURL
- name: product_price
  endpoint:
    data_selector: lineItems[].productPrice
- name: product_quantity
  endpoint:
    data_selector: lineItems[].productQuantity
- name: product_sku
  endpoint:
    data_selector: lineItems[].productSKU
- name: product_strikethrough_price
  endpoint:
    data_selector: lineItems[].productStrikeThroughPrice
- name: product_title
  endpoint:
    data_selector: lineItems[].productTitle
- name: product_url
  endpoint:
    data_selector: lineItems[].productURL
- name: product_variant_id
  endpoint:
    data_selector: lineItems[].productVariantID
- name: product_variant_image_url
  endpoint:
    data_selector: lineItems[].productVariantImageURL
- name: total_value
  endpoint:
    data_selector: value
- name: viewed_product
  endpoint:
    path: /reference/viewed-product
    method: GET
- name: product
  endpoint:
    path: /products
    method: GET
    data_selector: product
- name: categories
  endpoint:
    path: /products/categories
    method: GET
    data_selector: product.categories
- name: contact
  endpoint:
    path: /contacts
    method: POST
- name: contacts_batch
  endpoint:
    path: /batches
    method: POST
- name: contact
  endpoint:
    path: /contacts/{contactId}
    method: PATCH
notes:
- Integration uses OAuth2 with Authorization Code flow.
- Merchant must contact Omnisend to enable their platform before integration.
- Events 'added product to cart' and 'started checkout' can be sent via JavaScript
  API or REST API, while order related events must be sent via REST API.
- Requires sending specific events via JavaScript API to enable product abandonment
  functionality.
- Requires an API key for backend requests.
- Supports tracking of various customer events for enhanced marketing automations.
- Payload size limited to a maximum of 1MB
- Make sure eventTime is set to the actual order creation date to avoid triggering
  unwanted automation workflows.
- Cart-related events include 'added product to cart' and 'started checkout' which
  are crucial for 'Cart Abandonment' automation.
- Endpoint URL changed from v3 to v5, requires migration steps as outlined.
- Contact information now needs to be structured within a 'contact' object.
- Custom fields should now be included under a 'properties' object.
- Supports deduplication through eventID and eventTime for historical events.
- Event captured only for identified contacts
- API key must be included in the header for authentication.
- Contact identifiers like email are case-sensitive.
- Two contacts cannot share the same identifier.
- Consent without subscription is possible but generally requires consent for legal
  compliance.
- Ensure the contact is identified before sending events
- Recommended events have specific versions that must be adhered to.
- Custom events do not require version information.
- Origin must be set correctly to ensure data consistency.
- Scope required: products.read
- 'Scopes required: contacts.write'
- Batch operations can include up to 1,000 actions.
- Batch operations are asynchronous.
- Requires scope: products.write
- The 'started checkout' event will be captured only for identified contacts.
- Event 'viewed product' is triggered automatically except in SPAs.
- Only captures events for identified contacts.
errors:
- 401 Unauthorized: Check API key validity or permissions.
- 401 Unauthorized: Ensure API key is correctly configured and active
- Duplicate messages: Before sending a batch of events, ensure no automations are
    configured in Omnisend that could send messages to customers based on the imported
    data to avoid duplicate messages.
- 429: rate limit exceeded
- 400: Bad parameter; currency not found.
auth_info:
  mentioned_objects:
  - OAuth credentials
  - Omnisend API Key
  - API key
  - JavaScript snippet
  - OAuth
  - Scopes
  - products.write
client:
  auth:
    type: oauth2
    flow: auth_code
    location: header
    header_name: X-API-KEY
    token_url: undefined
    client_id: undefined
    client_secret: undefined
    refresh_token: undefined
    scopes:
    - products.read
    - contacts.read
    - events.read
  base_url: https://api.omnisend.com/v5
  headers:
    Accept: application/json
    Content-Type: application/json
    compatibility: no-origin
    X-Rate-Limit-Limit: The number of allowed requests in the current period
    X-Rate-Limit-Remaining: The number of remaining requests in the current period
    X-Rate-Limit-Reset: The number of seconds left in the current period
    X-API-KEY: '{{ dlt.secrets[''omnisend_api_key''] }}'
  paginator:
    type: undefined
    cursor_path: undefined
    cursor_param: undefined
    page_size_param: undefined
    default_page_size: undefined
source_metadata: null
