resources:
- name: solver_output
  endpoint:
    path: /qics/Solver/solve
    method: GET
    data_selector: output_parameters
    params: {}
- name: output_parameters
  endpoint:
    path: /qics/Solver/solve
    method: GET
    data_selector: dictionary
    params: {}
- name: vectorize
  endpoint:
    path: /api/vectorize
    method: GET
    data_selector: records
- name: quantum
  endpoint:
    path: /api/quantum
    method: GET
    data_selector: records
- name: quantum_problem_model
  endpoint:
    path: /services/data/vXX.X/sobjects/QuantumProblemModel
    method: POST
    data_selector: results
    params: {}
- name: SDPA sparse
  endpoint:
    path: /api/io/read_sdpa
    method: GET
    data_selector: model
- name: Conic Benchmark Format
  endpoint:
    path: /api/io/read_cbf
    method: GET
    data_selector: model
- name: QuantKeyDist
  endpoint:
    path: /api/cones/QuantKeyDist
    method: GET
    data_selector: records
- name: qics.cones.QuantKeyDist
  endpoint:
    path: /api/cones/QuantKeyDist
    method: GET
    data_selector: records
    params: {}
- name: qics.cones.QuantEntr
  endpoint:
    path: /api/cones/QuantEntr
    method: GET
    data_selector: records
    params: {}
- name: qics.quantum.entropy
  endpoint:
    path: /api/quantum/entropy
    method: GET
    data_selector: records
    params: {}
- name: density_matrix
  endpoint:
    path: /density_matrix
    method: POST
    data_selector: result
- name: entropy
  endpoint:
    path: /entropy
    method: GET
    data_selector: result
- name: Renyi mutual information
  endpoint:
    path: /api/qics/renyi_mutual_information
    method: GET
    data_selector: data
    params: {}
- name: density_matrix
  endpoint:
    path: /density_matrix
    method: GET
    data_selector: records
- name: trace_function
  endpoint:
    path: /trace_function
    method: GET
    data_selector: records
- name: NonNegOrthant
  endpoint:
    path: /qics/cones/NonNegOrthant
    method: GET
    data_selector: parameters
    params:
      n: int
- name: Solver
  endpoint:
    path: /qics/solver
    method: GET
    data_selector: solve
    params:
      max_iter: 100
      max_time: 3600
      tol_gap: 1.0e-08
      tol_feas: 1.0e-08
      tol_infeas: 1.0e-12
      tol_ip: 1.0e-13
      tol_near: 1000.0
      verbose: 2
      ir: true
      toa: true
- name: PosSemidefinite
  endpoint:
    path: /qics/cones/PosSemidefinite
    method: GET
- name: SecondOrder
  endpoint:
    path: /qics/cones/SecondOrder
    method: GET
- name: ClassEntr
  endpoint:
    path: /qics/cones/ClassEntr
    method: GET
- name: ClassRelEntr
  endpoint:
    path: /qics/cones/ClassRelEntr
    method: GET
    data_selector: records
- name: QuantEntr
  endpoint:
    path: /qics/cones/QuantEntr
    method: GET
    data_selector: quant_entr_info
- name: QuantRelEntr
  endpoint:
    path: /qics/cones/QuantRelEntr
    method: GET
    data_selector: records
    params: {}
- name: NonNegOrthant
  endpoint:
    path: /cones/NonNegOrthant
    method: GET
- name: PosSemidefinite
  endpoint:
    path: /cones/PosSemidefinite
    method: GET
- name: SecondOrder
  endpoint:
    path: /cones/SecondOrder
    method: GET
- name: ClassEntr
  endpoint:
    path: /cones/ClassEntr
    method: GET
- name: ClassRelEntr
  endpoint:
    path: /cones/ClassRelEntr
    method: GET
- name: QuantEntr
  endpoint:
    path: /cones/QuantEntr
    method: GET
- name: QuantRelEntr
  endpoint:
    path: /cones/QuantRelEntr
    method: GET
- name: QuantCondEntr
  endpoint:
    path: /cones/QuantCondEntr
    method: GET
- name: QuantKeyDist
  endpoint:
    path: /cones/QuantKeyDist
    method: GET
- name: OpPerspecTr
  endpoint:
    path: /cones/OpPerspecTr
    method: GET
- name: OpPerspecEpi
  endpoint:
    path: /cones/OpPerspecEpi
    method: GET
- name: RenyiEntr
  endpoint:
    path: /cones/RenyiEntr
    method: GET
- name: SandRenyiEntr
  endpoint:
    path: /cones/SandRenyiEntr
    method: GET
- name: QuasiEntr
  endpoint:
    path: /cones/QuasiEntr
    method: GET
- name: SandQuasiEntr
  endpoint:
    path: /cones/SandQuasiEntr
    method: GET
- name: QuantCondEntr
  endpoint:
    path: /qics/cones/QuantCondEntr
    method: GET
    data_selector: records
- name: NonNegOrthant
  endpoint:
    path: /qics/cones/NonNegOrthant
    method: GET
    data_selector: parameters
    params:
      n: int
- name: QuantKeyDist
  endpoint:
    path: /qics/cones/QuantKeyDist
    method: GET
    data_selector: class
    params: {}
- name: PosSemidefinite
  endpoint:
    path: /qics/cones/PosSemidefinite
    method: GET
    data_selector: parameters
    params: {}
- name: OpPerspecTr
  endpoint:
    path: /qics/cones/OpPerspecTr
    method: GET
    data_selector: class
    params: {}
- name: SecondOrder
  endpoint:
    path: /qics/cones/SecondOrder
    method: GET
- name: OpPerspecEpi
  endpoint:
    path: /qics/cones/OpPerspecEpi
    method: GET
    data_selector: class
    params: {}
- name: ClassEntr
  endpoint:
    path: /qics/cones/ClassEntr
    method: GET
    data_selector: class_entr
- name: RenyiEntr
  endpoint:
    path: /qics/cones/RenyiEntr
    method: GET
    data_selector: data
    params: {}
- name: SandRenyiEntr
  endpoint:
    path: /qics/cones/SandRenyiEntr
    method: GET
    data_selector: parameters
    params: {}
- name: QuantRelEntr
  endpoint:
    path: /qics/cones/QuantRelEntr
    method: GET
    data_selector: records
- name: SandQuasiEntr
  endpoint:
    path: /qics/cones/SandQuasiEntr
    method: GET
- name: OpPerspecTr
  endpoint:
    path: /qics/cones/OpPerspecTr
    method: GET
    data_selector: class
    params: {}
- name: OpPerspecEpi
  endpoint:
    path: /qics/cones/OpPerspecEpi
    method: GET
    data_selector: class
    params: {}
- name: read_file
  endpoint:
    path: /qics.io.read_file
    method: GET
    data_selector: filename
    params: {}
- name: write_file
  endpoint:
    path: /qics.io.write_file
    method: POST
    data_selector: model, filename
    params: {}
- name: read_sdpa
  endpoint:
    path: /qics.io.read_sdpa
    method: GET
    data_selector: filename
    params: {}
- name: write_sdpa
  endpoint:
    path: /qics.io.write_sdpa
    method: POST
    data_selector: model, filename
    params: {}
- name: read_cbf
  endpoint:
    path: /qics.io.read_cbf
    method: GET
    data_selector: filename
    params: {}
- name: write_cbf
  endpoint:
    path: /qics.io.write_cbf
    method: POST
    data_selector: model, filename
    params: {}
- name: RenyiEntr
  endpoint:
    path: /qics/cones/RenyiEntr
    method: GET
    data_selector: parameters
    params: {}
- name: read_file
  endpoint:
    path: /read_file
    method: GET
    data_selector: Model
    params: {}
- name: write_file
  endpoint:
    path: /qics/io/write_file
    method: POST
    data_selector: model
    params: {}
- name: SandRenyiEntr
  endpoint:
    path: /qics/cones/SandRenyiEntr
    method: GET
    data_selector: parameters
    params: {}
- name: read_sdpa
  endpoint:
    path: /qics/io/read_sdpa
    method: GET
    data_selector: Model
    params:
      filename: string
- name: write_sdpa
  endpoint:
    path: /qics/io/write_sdpa
    method: GET
    data_selector: parameters
    params: {}
- name: SandQuasiEntr
  endpoint:
    path: /qics/cones/SandQuasiEntr
    method: GET
    data_selector: records
- name: read_cbf
  endpoint:
    path: /read_cbf
    method: GET
    data_selector: Model
    params:
      filename: string
- name: write_cbf
  endpoint:
    path: /qics/io/write_cbf
    method: POST
    data_selector: parameters
    params: {}
- name: read_file
  endpoint:
    path: /io/read_file
    method: GET
    data_selector: filename
    params: {}
- name: write_file
  endpoint:
    path: /io/write_file
    method: POST
    data_selector: model, filename
    params: {}
- name: read_sdpa
  endpoint:
    path: /io/read_sdpa
    method: GET
    data_selector: filename
    params: {}
- name: write_sdpa
  endpoint:
    path: /io/write_sdpa
    method: POST
    data_selector: model, filename
    params: {}
- name: read_cbf
  endpoint:
    path: /io/read_cbf
    method: GET
    data_selector: filename
    params: {}
- name: write_cbf
  endpoint:
    path: /io/write_cbf
    method: POST
    data_selector: model, filename
    params: {}
- name: Point
  endpoint:
    path: point/Point.html
    method: GET
- name: VecProduct
  endpoint:
    path: point/VecProduct.html
    method: GET
- name: read_file
  endpoint:
    path: /qics/io/read_file
    method: GET
    data_selector: Model
- name: write_file
  endpoint:
    path: /qics/io/write_file
    method: POST
    data_selector: model
    params: {}
- name: VecProduct
  endpoint:
    path: /qics/point/VecProduct
    method: GET
- name: read_sdpa
  endpoint:
    path: /read_sdpa
    method: GET
    data_selector: Model
    params:
      filename: string
- name: write_sdpa
  endpoint:
    path: /qics/io/write_sdpa
    method: POST
    data_selector: model
    params: {}
- name: read_cbf
  endpoint:
    path: /read_cbf
    method: GET
    data_selector: Model
    params:
      filename: string
- name: entropy
  endpoint:
    path: quantum/entropy
    method: GET
- name: i_kr
  endpoint:
    path: quantum/i_kr
    method: GET
- name: p_tr
  endpoint:
    path: quantum/p_tr
    method: GET
- name: partial_transpose
  endpoint:
    path: quantum/partial_transpose
    method: GET
- name: purify
  endpoint:
    path: quantum/purify
    method: GET
- name: swap
  endpoint:
    path: quantum/swap
    method: GET
- name: choi_operator
  endpoint:
    path: quantum/random/choi_operator
    method: GET
- name: degradable_channel
  endpoint:
    path: quantum/random/degradable_channel
    method: GET
- name: density_matrix
  endpoint:
    path: quantum/random/density_matrix
    method: GET
- name: pure_density_matrix
  endpoint:
    path: quantum/random/pure_density_matrix
    method: GET
- name: stinespring_operator
  endpoint:
    path: quantum/random/stinespring_operator
    method: GET
- name: unitary
  endpoint:
    path: quantum/random/unitary
    method: GET
- name: Point
  endpoint:
    path: /point
    method: GET
    data_selector: variables
- name: VecProduct
  endpoint:
    path: /vecproduct
    method: GET
    data_selector: cones
- name: entropy
  endpoint:
    path: /qics/quantum/entropy
    method: GET
    data_selector: returns
- name: VecProduct
  endpoint:
    path: /qics/point/VecProduct
    method: GET
    data_selector: cones
    params: {}
- name: p_tr
  endpoint:
    path: /qics/quantum/p_tr
    method: GET
    data_selector: results
- name: purify
  endpoint:
    path: /qics/quantum/purify
    method: GET
    data_selector: X
    params: {}
- name: i_kr
  endpoint:
    path: /qics/quantum/i_kr
    method: GET
    data_selector: results
    params: {}
- name: swap
  endpoint:
    path: /qics/quantum/swap
    method: POST
    data_selector: result
    params: {}
- name: partial_transpose
  endpoint:
    path: /qics/quantum/partial_transpose
    method: GET
    data_selector: results
    params: {}
- name: eye
  endpoint:
    path: vectorize/eye
    method: GET
- name: lin_to_mat
  endpoint:
    path: vectorize/lin_to_mat
    method: GET
- name: mat_dim
  endpoint:
    path: vectorize/mat_dim
    method: GET
- name: mat_to_vec
  endpoint:
    path: vectorize/mat_to_vec
    method: GET
- name: vec_dim
  endpoint:
    path: vectorize/vec_dim
    method: GET
- name: vec_to_mat
  endpoint:
    path: vectorize/vec_to_mat
    method: GET
- name: purify
  endpoint:
    path: /qics/quantum/purify
    method: GET
    data_selector: returns
    params: {}
- name: eye
  endpoint:
    path: /qics/vectorize/eye
    method: GET
    data_selector: parameters
    params: {}
- name: eye
  endpoint:
    path: vectorize/eye
    method: GET
- name: lin_to_mat
  endpoint:
    path: vectorize/lin_to_mat
    method: GET
- name: mat_dim
  endpoint:
    path: vectorize/mat_dim
    method: GET
- name: mat_to_vec
  endpoint:
    path: vectorize/mat_to_vec
    method: GET
- name: vec_dim
  endpoint:
    path: vectorize/vec_dim
    method: GET
- name: vec_to_mat
  endpoint:
    path: vectorize/vec_to_mat
    method: GET
- name: lin_to_mat
  endpoint:
    path: /qics/vectorize/lin_to_mat
    method: GET
    data_selector: matrix representation
    params: {}
- name: eye
  endpoint:
    path: /qics/vectorize/eye
    method: GET
- name: mat_dim
  endpoint:
    path: /qics/vectorize/mat_dim
    method: GET
    data_selector: dimension
    params: {}
- name: mat_to_vec
  endpoint:
    path: /qics/vectorize/mat_to_vec
    method: GET
    data_selector: records
    params: {}
- name: mat_dim
  endpoint:
    path: /qics/vectorize/mat_dim
    method: GET
- name: vec_dim
  endpoint:
    path: /qics.vectorize.vec_dim
    method: GET
    data_selector: dimension
    params: {}
- name: mat_to_vec
  endpoint:
    path: /qics/vectorize/mat_to_vec
    method: GET
    data_selector: records
    params: {}
- name: vec_to_mat
  endpoint:
    path: /qics/vectorize/vec_to_mat
    method: GET
    data_selector: ndarray
    params: {}
- name: vec_dim
  endpoint:
    path: /qics/vectorize/vec_dim
    method: GET
    data_selector: dimension
- name: vec_to_mat
  endpoint:
    path: /qics/vectorize/vec_to_mat
    method: GET
    data_selector: ndarray
    params: {}
notes:
- Many of these functions are not optimized, and can be slow for large matrices.
- The model solves almost 10 times slower due to the lack of dummy variable.
- The SDPA sparse format only supports standard form semidefinite programs.
- Support for the CBF format by QICS is currently quite limited.
- The support for the CBF format by **QICS** is currently quite limited, and it is
  recommended that reading and writing using file format is restricted to problems
  generated by **QICS**.
- Uses QICS for solving optimization problems using PICOS.
- Efficient quantum relative entropy programming
- Efficient semidefinite programming
- Complex-valued matrices
- As the semidefinite program is infeasible, then ρab must be entangled, which we
  know is true for this quantum state.
- We provide several ways to define the linear maps G and Z when initializing a qics.cones.QuantKeyDist.
- We provide several ways to define the linear maps G and Z when initializing a `qics.cones.QuantKeyDist`.
- No authentication required for this API.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- API has rate limits on calls to the density matrix endpoint.
- Ensure that the input matrix is properly formatted.
- QICS supports Ψ^α for a wider range of α.
- Uses QICS for optimization problems involving Renyi entropies
- Some optimization problems may not be straightforward due to convexity issues
- The advantage of optimizing the trace function is that Ψ^α is jointly concave for
  α∈[1/2,1], and jointly convex for α∈[1,2], whereas Dα is jointly convex for α∈[1/2,1),
  but is neither convex nor concave for α∈(1,2]. Therefore, QICS supports Ψ^α for
  a wider range of α. However, sometimes it is not straightforward to reformulate
  an optimization problem involving the sandwiched Renyi entropy into an equivalent
  convex problem involving the trace function.
- The quantum conditional entropy can also be modelled by the quantum relative entropy.
- The quantum key distribution cone can also be modelled by the quantum relative entropy.
- We do not support operator perspectives for p=0, p=1, and p=2 as these functions
  are more efficiently modelled using just the positive semidefinite cone.
- The epigraph of the classical entropy can be obtained by enforcing the linear constraint
  u=1.
- Parameters include n (int), alpha (float), iscomplex (bool).
- Parameters include n (dimension of matrices) and iscomplex (bool indicating matrix
  type).
- The sandwiched Renyi entropy is defined as the function D^α(X‖Y)=1α−1log⁡(Ψ^α(X,Y)).
- Ψ^α is jointly concave for α∈[1/2,1], and jointly convex for α∈[1,2].
- This function is quite limited in the types of *.cbf files that can be read. It
  is recommended to only use this function together with files written using write_cbf().
- Computes either the classical (Shannon) entropy for nonnegative vector x, or the
  quantum (von Neumann) entropy for positive semidefinite matrix X.
- This is the adjoint operator of the Kronecker product with the identity matrix.
- This is the adjoint operator of the partial trace.
- Default is iscomplex=False.
- Default is compact=(False, True).
errors:
- 'SOLUTION_NOT_FOUND: Check model parameters or constraints.'
- 'INVALID_MATRIX: Check matrix dimensions.'
- 'RATE_LIMIT_EXCEEDED: Reduce frequency of requests.'
auth_info:
  mentioned_objects:
  - Model
  - Solver
  - cones
  - vec
  - ndarray
client:
  base_url: /
  auth: {}
  headers: {}
  paginator: {}
source_metadata: null
