resources:
- name: Assortment Policy Input
  endpoint:
    path: /api/assortment-policy-input-api
    method: POST
- name: Assortment Policy Query
  endpoint:
    path: /gql/assortment-policy-query-api
    method: GET
- name: Business Partner Query
  endpoint:
    path: /gql/business-partner-query-api
    method: GET
- name: Changes Query
  endpoint:
    path: /gql/changes-query-api
    method: GET
- name: Complete Item Query
  endpoint:
    path: /gql/complete-item-query-api
    method: GET
- name: Content Declaration Input
  endpoint:
    path: /api/content-declaration-input-api
    method: POST
- name: Content Declaration Query
  endpoint:
    path: /gql/content-declaration-query-api
    method: GET
- name: Deposit And Fee Rule Input
  endpoint:
    path: /api/deposit-and-fee-rule-input-api
    method: POST
- name: Deposit And Fee Rule Query
  endpoint:
    path: /gql/deposit-and-fee-rule-query-api
    method: GET
- name: Item Input
  endpoint:
    path: /api/item-input-api
    method: POST
- name: Item Query
  endpoint:
    path: /gql/item-query-api
    method: GET
- name: Cashier Reports
  endpoint:
    path: /api/cashier-reports-api
    method: GET
- name: Transaction Repository Input
  endpoint:
    path: /api/txr-input-api
    method: GET
- name: Transaction Repository Search
  endpoint:
    path: /api/txr-search-api
    method: GET
- name: X&Z Reports
  endpoint:
    path: /api/xz-reports-api
    method: GET
- name: XZR Common Reports
  endpoint:
    path: /api/xz-common-reports-api
    method: GET
- name: group_types
  endpoint:
    path: /types-of-groups
    method: GET
    data_selector: types
    params: {}
- name: registered_group_types
  endpoint:
    path: /registered-group-types
    method: GET
    data_selector: services
    params: {}
- name: Scan&Go Frontend API v1
  endpoint:
    path: /api/scanngo-frontend-api
    method: GET
- name: Scan&Go Frontend API v2
  endpoint:
    path: /api/scanngo-frontend-api-v2
    method: GET
- name: Scan&Go Administration API
  endpoint:
    path: /api/scanngo-administration-api
    method: GET
- name: Scan&Go Admin Frontend API
  endpoint:
    path: /api/scanngo-admin-frontend-api
    method: GET
- name: Scan&Go Device API
  endpoint:
    path: /api/scanngo-device-management-api
    method: GET
- name: Basket Evaluation API
  endpoint:
    path: /api/lossprevention-basketauditdetermination-api
    method: GET
- name: Basket Audit API
  endpoint:
    path: /api/lossprevention-basketaudit-api
    method: GET
- name: Basket Audit Result Ingestor API
  endpoint:
    path: /api/lossprevention-basketauditresult-api
    method: GET
- name: Self Service Analytics API
  endpoint:
    path: /api/lossprevention-selfserviceanalytics-api
    method: GET
- name: Customer Profile API
  endpoint:
    path: /api/lossprevention-customerprofile-api
    method: GET
- name: Persisted Audits API
  endpoint:
    path: /api/lossprevention-persistedaudits-api
    method: GET
- name: Trustlevel API
  endpoint:
    path: /api/lossprevention-trustlevel-api
    method: GET
- name: Predictive Probability of Loss API
  endpoint:
    path: /api/sslp-predictive-probability-of-loss-api
    method: GET
- name: Cashier Reports API
  endpoint:
    path: /api/cashier-reports-api
    method: GET
- name: Task Scheduler API
  endpoint:
    path: /api/task-scheduler
    method: GET
- name: Transaction Repository Input API
  endpoint:
    path: /api/txr-input-api
    method: GET
- name: Transaction Repository Search API
  endpoint:
    path: /api/txr-search-api
    method: GET
- name: X&Z Reports API
  endpoint:
    path: /api/xz-reports-api
    method: GET
- name: XZR Common Reports API
  endpoint:
    path: /api/xz-common-reports-api
    method: GET
- name: assistance_requests
  endpoint:
    path: /api/v1/assistance-requests
    method: GET
    data_selector: records
    params:
      take: 100
      skip: 0
- name: baskets
  endpoint:
    path: /api/v1/baskets
    method: GET
    data_selector: records
    params:
      take: 100
      skip: 0
- name: workstations
  endpoint:
    path: /api/v1/workstations
    method: GET
    data_selector: records
    params:
      take: 100
      skip: 0
- name: delete_workstation
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/workstations/{workstationId}
    method: DELETE
    data_selector: statusCode
    params: {}
- name: get_workstation
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/workstations/{workstationId}
    method: GET
    data_selector: statusCode
    params:
      forceIncludeCurrentBasket: 'false'
- name: update_workstation
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/workstations/{workstationId}
    method: PUT
    data_selector: statusCode
    params: {}
- name: update_workstation_partially
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/workstations/{workstationId}
    method: PATCH
    data_selector: statusCode
    params: {}
- name: find_customer_information
  endpoint:
    path: /customers:find
    method: POST
    data_selector: customer
    params: {}
- name: business_units
  endpoint:
    path: /groups/{id}/business-units
    method: GET
    data_selector: records
    params: {}
- name: business_unit_group
  endpoint:
    path: /groups/{id}/business-units
    method: GET
    data_selector: records
    params: {}
- name: business_units
  endpoint:
    path: /groups/{id}/business-units
    method: GET
    data_selector: records
    params: {}
- name: group_types
  endpoint:
    path: /groups/{id}/business-units
    method: GET
    data_selector: records
    params: {}
- name: business_units
  endpoint:
    path: /groups/{id}/business-units
    method: GET
    data_selector: records
    params: {}
- name: create_session
  endpoint:
    path: /session
    method: POST
    data_selector: sessionId
- name: get_session_info
  endpoint:
    path: /session/{sessionId}
    method: GET
    data_selector: sessionInfo
- name: change_session_settings
  endpoint:
    path: /session/{sessionId}/settings
    method: PATCH
    data_selector: updatedSettings
- name: sign_out_session
  endpoint:
    path: /session/{sessionId}
    method: DELETE
    data_selector: signOutStatus
- name: create_transaction
  endpoint:
    path: /session/{sessionId}/transaction
    method: POST
    data_selector: transactionId
- name: get_transaction
  endpoint:
    path: /session/{sessionId}/transaction/{receiptId}
    method: GET
    data_selector: transactionDetails
- name: cancel_transaction
  endpoint:
    path: /session/{sessionId}/transaction/{receiptId}
    method: DELETE
    data_selector: cancelStatus
- name: suspend_transaction
  endpoint:
    path: /session/{sessionId}/transaction/{receiptId}/suspend
    method: POST
    data_selector: suspendStatus
- name: refresh_transaction
  endpoint:
    path: /session/{sessionId}/transaction/{receiptId}/refresh
    method: POST
    data_selector: refreshStatus
- name: rescan_transaction
  endpoint:
    path: /session/{sessionId}/transaction/{receiptId}/rescan
    method: POST
    data_selector: rescanStatus
- name: execute_command
  endpoint:
    path: /execute_command/{commandName}
    method: POST
    data_selector: choices
    params: {}
- name: execute_command_on_transaction
  endpoint:
    path: /execute_command_on_transaction/{commandName}/{receiptId}
    method: POST
    data_selector: choices
    params: {}
- name: pending_loyalty_vouchers
  endpoint:
    path: /api/v3/loyalty/vouchers
    method: GET
    data_selector: choices
    params:
      sessionId: string <uuid>
- name: get_input_information
  endpoint:
    path: /api/v3/input/information
    method: GET
    data_selector: choices
    params:
      sessionId: string <uuid>
      input: string
- name: available_tender_types
  endpoint:
    path: /get/available/tender/types
    method: GET
- name: default_menu_tree
  endpoint:
    path: /get/default/menu/tree
    method: GET
- name: named_menu_tree
  endpoint:
    path: /get/named/menu/tree
    method: GET
- name: price_lookup_tree
  endpoint:
    path: /get/price/lookup/tree
    method: GET
- name: add_receipt_layout
  endpoint:
    path: /v1/layouts
    method: POST
    data_selector: accepted
    params: {}
- name: add_plu_list
  endpoint:
    path: /v1/plulists
    method: POST
    data_selector: response
    params: {}
- name: delete_plu_list
  endpoint:
    path: /v1/plulists/{id}
    method: DELETE
    data_selector: response
    params:
      businessUnitGroupId: ''
- name: tender
  endpoint:
    path: /v1/tenders
    method: POST
    data_selector: tender
    params: {}
- name: delete_tender
  endpoint:
    path: /v1/tenders/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: delete_tender
  endpoint:
    path: /v1/tenders/{id}
    method: DELETE
    params:
      businessUnitGroupId: ''
      classCode: ''
- name: create_message
  endpoint:
    path: /v1/messages
    method: POST
    data_selector: message
    params: {}
- name: initial_state
  endpoint:
    path: /initialstate/{businessUnitGroupId}
    method: GET
    data_selector: records
    params:
      subset: currencies
      application: ERPOS
- name: temp_failed_messages
  endpoint:
    path: /v1/temp-failed-messages/{businessUnitGroupId}
    method: GET
    data_selector: records
    params: {}
- name: initialstate
  endpoint:
    path: /initialstate/{businessUnitId}
    method: GET
    data_selector: records
    params: {}
- name: status
  endpoint:
    path: /status/{correlationId}
    method: GET
    data_selector: records
    params: {}
- name: refresh-image-urls
  endpoint:
    path: /refresh-image-urls/{businessUnitId}
    method: POST
    data_selector: records
    params: {}
- name: purge-entities
  endpoint:
    path: /purge-entities
    method: POST
    data_selector: records
    params: {}
- name: health
  endpoint:
    path: /health
    method: GET
    data_selector: records
    params: {}
- name: refresh_plu_state
  endpoint:
    path: /api/v1/rulebased-plu
    method: POST
    data_selector: response
    params: {}
- name: query_plu_contents
  endpoint:
    path: /api/v1/rulebased-plu
    method: POST
    data_selector: response
    params: {}
- name: orders
  endpoint:
    path: /api/v1/orders/{orderId}
    method: GET
    data_selector: records
    params: {}
- name: import_orders
  endpoint:
    path: /api/v1/events/import-orders
    method: POST
    data_selector: records
    params: {}
- name: search_orders
  endpoint:
    path: /api/v1/orders/search
    method: POST
    data_selector: records
    params: {}
- name: search_orders_alternate
  endpoint:
    path: /api/v1/orders:search
    method: POST
    data_selector: records
    params: {}
- name: categories
  endpoint:
    path: /v1/categories
    method: GET
- name: zones
  endpoint:
    path: /v1/zones/{zoneId}
    method: GET
- name: item_substitutions
  endpoint:
    path: /api/v1/item-substitutions/{itemId}
    method: GET
    data_selector: records
    params:
      count: 5
- name: BusinessUnitGroupOrderingOptions
  endpoint:
    path: /api/v1/bu/ordering-options
    method: post
    data_selector: records
    params: {}
- name: BusinessUnitOrderingOptions
  endpoint:
    path: /api/v1/bu/ordering-options
    method: post
    data_selector: records
    params: {}
- name: ordering_option
  endpoint:
    path: /bu/ordering-options/{id}
    method: PATCH
    data_selector: operationType
    params: {}
- name: configuration_definitions
  endpoint:
    path: /api/v1/config/{kind}/values/business-units/{businessUnitId}/workstations
    method: GET
    data_selector: values
    params: {}
- name: configuration_value_history
  endpoint:
    path: /api/v1/config/{kind}/values/business-units/{businessUnitId}/workstations
    method: GET
    data_selector: values
    params: {}
- name: set_configuration_value_tenant_level
  endpoint:
    path: /api/v1/config/{kind}/values/business-units/{businessUnitId}/workstations
    method: PUT
    data_selector: values
    params: {}
- name: delete_configuration_value_tenant_level
  endpoint:
    path: /api/v1/config/{kind}/values/business-units/{businessUnitId}/workstations
    method: DELETE
    data_selector: values
    params: {}
- name: configuration_values
  endpoint:
    path: /config/{kind}/values/business-units/{businessUnitId}/workstations
    method: GET
    data_selector: values
    params: {}
- name: business_configs
  endpoint:
    path: /business-configs
    method: GET
    data_selector: adapter configurations
    params: {}
- name: adapter_configs
  endpoint:
    path: /adapter/configs/all/{scope}
    method: GET
    data_selector: adapter configurations
    params: {}
- name: adapter_configurations
  endpoint:
    path: /get/api/v1/business-configs/adapter/configs/all/{scope}
    method: GET
    data_selector: id
    params:
      providerId: TOMRA
- name: retrieve_member
  endpoint:
    path: /postRetrieve
    method: POST
    data_selector: member
    params: {}
- name: submit_transaction
  endpoint:
    path: /postSubmit
    method: POST
    data_selector: transaction
    params: {}
- name: deposit
  endpoint:
    path: /v1/deposit
    method: POST
    data_selector: response
    params: {}
- name: deposit
  endpoint:
    path: /api/v1/deposit
    method: POST
    data_selector: application/json
    params: {}
- name: voucher
  endpoint:
    path: /v2/voucher
    method: POST
    data_selector: records
- name: webhook
  endpoint:
    path: /api/v1/event-journal
    method: post
    data_selector: results
    params: {}
- name: event_source
  endpoint:
    path: /api/v1/event-source
    method: get
    data_selector: results
    params: {}
- name: event_journal
  endpoint:
    path: /api/v1/event-journal:replay
    method: post
    data_selector: results
    params: {}
- name: event_journal
  endpoint:
    path: /event-journal
    method: GET
    data_selector: results
    params:
      take: 1000
      skip: 0
- name: event_replay
  endpoint:
    path: /event-journal:replay
    method: POST
    data_selector: results
    params: {}
- name: event_acknowledge
  endpoint:
    path: /event-journal:ack
    method: POST
    data_selector: results
    params: {}
- name: markups
  endpoint:
    path: /markups
    method: GET
    data_selector: ''
    params: {}
- name: exchange_rates
  endpoint:
    path: /exchange-rates
    method: GET
    data_selector: ''
    params: {}
- name: initial_state
  endpoint:
    path: /initial-state
    method: POST
    data_selector: ''
    params: {}
- name: migrate_currencies
  endpoint:
    path: /currencies/migrate-currencies
    method: POST
    data_selector: statusCode
    params: {}
- name: get_currencies_for_tenant
  endpoint:
    path: /currencies
    method: GET
    data_selector: statusCode
    params: {}
- name: get_denominations
  endpoint:
    path: /currencies/denominations
    method: GET
    data_selector: statusCode
    params: {}
- name: enable_input_currency_for_tenant
  endpoint:
    path: /currencies
    method: PUT
    data_selector: statusCode
    params: {}
- name: enable_input_currency_for_business_unit
  endpoint:
    path: /currencies
    method: PUT
    data_selector: statusCode
    params: {}
- name: get_currencies_for_business_unit
  endpoint:
    path: /currencies
    method: GET
    data_selector: statusCode
    params: {}
- name: ReconciliationEndOfDay
  endpoint:
    path: /api/v1/reconciliations/end-to-end
    method: POST
    data_selector: status
    params: {}
- name: ReconciliationStatus
  endpoint:
    path: /api/v1/reconciliations/status
    method: GET
    data_selector: status
    params: {}
- name: overview
  endpoint:
    path: /get-overview
    method: GET
    data_selector: status
    params:
      businessUnitId: string
      from: string
      to: string
      doSkipOk: boolean
      doSkipWarning: boolean
      doSkipError: boolean
- name: available_tenders
  endpoint:
    path: /get-available-tenders
    method: GET
    data_selector: tenders
    params:
      businessUnitId: string
      reconciliationId: string
- name: latest_counted_values
  endpoint:
    path: /get-latest-counted-values
    method: GET
    data_selector: counts
    params:
      businessUnitId: string
      reconciliationId: string
- name: commit_cash_drawer_count
  endpoint:
    path: /commit-cash-drawer-count
    method: POST
    data_selector: result
    params:
      businessUnitId: string
      reconciliationId: string
- name: get_deviation
  endpoint:
    path: /get-deviation
    method: GET
    data_selector: deviation
    params:
      businessUnitId: string
      reconciliationId: string
- name: get_counts_history
  endpoint:
    path: /get-counts-history
    method: GET
    data_selector: history
    params:
      businessUnitId: string
      reconciliationId: string
      countType: string
- name: reconciliation_end_to_end
  endpoint:
    path: /api/v1/reconciliations/end-to-end
    method: POST
    data_selector: records
    params:
      businessUnitId: string
      reconciliationId: string
- name: currencies
  endpoint:
    path: /api/v1/currencies
    method: GET
    data_selector: data
- name: repositories
  endpoint:
    path: /api/v1/repositories
    method: GET
    data_selector: data
- name: initial_balance
  endpoint:
    path: /api/v1/initial-balance
    method: GET
    data_selector: data
- name: transfers
  endpoint:
    path: /api/v1/transfers
    method: GET
    data_selector: data
- name: audit_status
  endpoint:
    path: /api/v1/audit-status
    method: GET
    data_selector: data
- name: operational_status
  endpoint:
    path: /api/v1/operational-status
    method: GET
    data_selector: data
    params: {}
- name: operational_status
  endpoint:
    path: /api/v1/operational-status
    method: GET
    data_selector: data
    params: {}
- name: getDenominationsForTenant
  endpoint:
    path: /currencies
    method: GET
- name: getDenominationsForCurrency
  endpoint:
    path: /currencies/{currencyId}
    method: GET
- name: createDenominationsForCurrency
  endpoint:
    path: /currencies/{currencyId}
    method: POST
- name: upsertDenominationsForCurrency
  endpoint:
    path: /currencies/{currencyId}
    method: PUT
- name: deleteDenominationsForCurrency
  endpoint:
    path: /currencies/{currencyId}
    method: DELETE
- name: tax_rules
  endpoint:
    path: /tax-rules
    method: GET
    data_selector: taxRegions
    params:
      countryCode: PT
      isActive: true
      taxRegionId: PT-MA
- name: tax_regions
  endpoint:
    path: /tax-regions
    method: GET
    data_selector: taxRegions
    params: {}
- name: general_ledgers_aggregations
  endpoint:
    path: /api/v1/tenants/{tenantId}/business-units/{businessUnitId}/general-ledgers:aggregations
    method: GET
    data_selector: aggregatedAmounts
    params:
      businessDate: string
- name: response
  endpoint:
    path: /card/responses/{responseId}
    method: GET
    data_selector: response
    params: {}
- name: cleanup_database
  endpoint:
    path: /cleanup-database
    method: DELETE
    data_selector: ''
    params: {}
- name: create_webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: ''
    params: {}
- name: get_webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: ''
    params: {}
- name: delete_webhook
  endpoint:
    path: /webhooks/{webhookName}
    method: DELETE
    data_selector: ''
    params: {}
- name: response
  endpoint:
    path: /giftcard/responses/{responseId}
    method: GET
    data_selector: response
    params: {}
- name: add_terminal_configuration
  endpoint:
    path: /checkout/configurations
    method: POST
    data_selector: pspCredentials
- name: update_terminal_configuration
  endpoint:
    path: /checkout/configurations
    method: PUT
    data_selector: pspCredentials
- name: delete_terminal_configuration
  endpoint:
    path: /checkout/configurations
    method: DELETE
    data_selector: pspCredentials
- name: get_specific_checkout_configuration
  endpoint:
    path: /checkout/configurations/{tenantId}/{storeId}/{checkoutId}
    method: GET
    data_selector: checkoutConfiguration
- name: get_all_checkout_configurations_store
  endpoint:
    path: /checkout/configurations/store/{businessUnitId}
    method: GET
    data_selector: checkoutConfigurations
- name: get_all_checkout_configurations_country
  endpoint:
    path: /checkout/configurations/country/{countryCode}
    method: GET
    data_selector: checkoutConfigurations
- name: get_all_checkout_configurations_tenant
  endpoint:
    path: /checkout/configurations/tenant
    method: GET
    data_selector: checkoutConfigurations
- name: get_psp_credentials
  endpoint:
    path: /psp/credentials
    method: GET
    data_selector: pspCredentials
- name: update_psp_credentials
  endpoint:
    path: /psp/credentials/{pspCredentialsName}
    method: PUT
    data_selector: pspCredential
- name: add_psp_credentials
  endpoint:
    path: /psp/credentials
    method: POST
    data_selector: pspCredential
- name: delete_psp_credentials
  endpoint:
    path: /psp/credentials/{pspCredentialsName}
    method: DELETE
    data_selector: pspCredential
- name: webhook_responses
  endpoint:
    path: /webhook/{uuid}
    method: POST
    data_selector: webhookResponse
- name: psp_credentials
  endpoint:
    path: /psp-credentials
    method: GET
    data_selector: records
    params: {}
- name: checkout_configurations
  endpoint:
    path: /checkout-configurations
    method: GET
    data_selector: records
    params: {}
- name: psp_credentials
  endpoint:
    path: /psp-credentials/{pspCredentialsName}
    method: GET
    data_selector: name
    params: {}
- name: delete_psp_credentials
  endpoint:
    path: /psp-credentials/{pspCredentialsName}
    method: DELETE
    data_selector: No Content
    params: {}
- name: giftcard-range
  endpoint:
    path: /giftcard-range
    method: GET
    data_selector: ranges
- name: giftcard_range
  endpoint:
    path: /giftcard-range
    method: GET
    data_selector: available ranges
    params: {}
- name: business_unit_configuration
  endpoint:
    path: /business-unit-configuration
    method: GET
    data_selector: ranges
- name: giftcard_range
  endpoint:
    path: /giftcard-range
    method: GET
    data_selector: ranges
- name: giftcard_range
  endpoint:
    path: /giftcard-range
    method: GET
    data_selector: records
    params:
      countryCode: string[A-Z]{2}
      rangeUuid: string
- name: giftcard-range
  endpoint:
    path: /api/v1/giftcard-range
    method: GET
    data_selector: available ranges
- name: giftcard_range
  endpoint:
    path: /giftcard-range
    method: GET
    data_selector: '[]'
- name: checkout_configuration
  endpoint:
    path: /webhook-management/custom
    method: post
    data_selector: response
    params: {}
- name: socket_connect
  endpoint:
    path: /socket-connect
    method: POST
    data_selector: header
    params: {}
- name: payment_response
  endpoint:
    path: /api/v1/mobile/responses/{responseId}
    method: GET
    data_selector: paymentMobileResponse
    params:
      responseId: required
- name: webhook_refund
  endpoint:
    path: /webhook/swish/{tenantId}/{correlationId}/refund
    method: POST
    data_selector: object
    params: {}
- name: webhook
  endpoint:
    path: /webhook/vipps/{environment}
    method: POST
    data_selector: null
    params:
      environment: required
- name: register_transaction
  endpoint:
    path: /api/v1/register
    method: POST
    data_selector: response
    params: {}
- name: eco_tax_information
  endpoint:
    path: /api/v1/rates:query
    method: POST
    data_selector: response
    params: {}
- name: tax_information
  endpoint:
    path: /api/v1/rates:query
    method: POST
    data_selector: response
    params: {}
- name: sign_transaction
  endpoint:
    path: /api/v1/signatures:sign
    method: POST
    data_selector: fiscalSignature
    params: {}
- name: automatic_atcud_registration
  endpoint:
    path: /api/v1/signatures:unlock
    method: post
    data_selector: message
    params:
      tenant-id: string
      businessUnitId: string
      documentType: string
      operatingMode: string
      workstationId: string
- name: manual_atcud_registration
  endpoint:
    path: /api/v1/signatures:unlock
    method: post
    data_selector: message
    params:
      tenant-id: string
      atcudCode: string
      atcudSeries: string
      businessUnitId: string
      documentType: string
      operatingMode: string
      workstationId: string
- name: check_fiscal_number
  endpoint:
    path: /api/v1/signatures:unlock
    method: post
    data_selector: message
    params:
      tenant-id: string
      referencedFiscalNumber: string
- name: check_prerequisites
  endpoint:
    path: /api/v1/signatures:unlock
    method: post
    data_selector: message
    params:
      tenant-id: string
      businessUnitId: string
      operatingMode: string
      workstationId: string
- name: sign_transaction
  endpoint:
    path: /signatures:unlock
    method: DELETE
    data_selector: message
    params: {}
- name: transaction_metadata_event
  endpoint:
    path: /events/transaction
    method: post
    data_selector: ''
    params: {}
- name: generate_vat_invoice
  endpoint:
    path: /events/transaction
    method: post
    data_selector: ''
    params: {}
- name: get_invoice_status
  endpoint:
    path: /events/transaction
    method: post
    data_selector: ''
    params: {}
- name: download_invoice_file
  endpoint:
    path: /events/transaction
    method: post
    data_selector: ''
    params: {}
- name: download_preview_invoice_file
  endpoint:
    path: /events/transaction
    method: post
    data_selector: ''
    params: {}
- name: Get cached token
  endpoint:
    path: /api/v1/token
    method: POST
    data_selector: token
    params: {}
- name: Introspect token
  endpoint:
    path: /api/v1/introspect
    method: POST
    data_selector: token
    params: {}
- name: Get public key
  endpoint:
    path: /api/v1/.well-known/jwks.json
    method: GET
    data_selector: keys
    params: {}
- name: support_case
  endpoint:
    path: /api/v1/tenants/{tenantId}/support-cases
    method: GET
    data_selector: supportCases
    params:
      status: string
      tenantId: string
      userProfileId: string
      createdAfter: string
      take: 100
      skip: 0
- name: tenant
  endpoint:
    path: /api/v1/tenants
    method: GET
    data_selector: tenants
    params:
      alias: string
      skip: 0
      take: 1000
- name: user
  endpoint:
    path: /api/v1/tenants/{tenantId}/users
    method: GET
    data_selector: users
    params:
      tenantId: string
      userId: string
- name: create_user
  endpoint:
    path: /api/v1/tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params: {}
- name: list_users
  endpoint:
    path: /api/v1/tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params: {}
- name: get_user_by_id
  endpoint:
    path: /api/v1/tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params: {}
- name: find_user
  endpoint:
    path: /api/v1/tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params: {}
- name: create_group
  endpoint:
    path: /api/v1/tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params: {}
- name: list_groups
  endpoint:
    path: /api/v1/tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params: {}
- name: get_group_by_id
  endpoint:
    path: /api/v1/tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params: {}
- name: delete_group_by_id
  endpoint:
    path: /api/v1/tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params: {}
- name: create_role
  endpoint:
    path: /api/v1/tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params: {}
- name: list_roles
  endpoint:
    path: /api/v1/tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params: {}
- name: get_role_by_id
  endpoint:
    path: /api/v1/tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params: {}
- name: iam_token_custom
  endpoint:
    path: /api/v1/tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params: {}
- name: SAML Identity Providers
  endpoint:
    path: /tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params:
      tenantId: string
- name: User Profile
  endpoint:
    path: /tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params:
      tenantId: string
- name: Resources
  endpoint:
    path: /tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params:
      tenantId: string
- name: create_external_application
  endpoint:
    path: /api/v1/tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params: {}
- name: get_external_applications
  endpoint:
    path: /api/v1/tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params: {}
- name: get_external_application_by_id
  endpoint:
    path: /api/v1/tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params: {}
- name: update_external_application
  endpoint:
    path: /api/v1/tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params: {}
- name: delete_external_application
  endpoint:
    path: /api/v1/tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params: {}
- name: exchange_federated_id_token
  endpoint:
    path: /api/v1/tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params: {}
- name: exchange_email_password
  endpoint:
    path: /api/v1/tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params: {}
- name: exchange_refresh_token
  endpoint:
    path: /api/v1/tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params: {}
- name: exchange_iam_id_token
  endpoint:
    path: /api/v1/tenants/{tenantId}/iam-token/custom
    method: POST
    data_selector: iamToken
    params: {}
- name: GlobalRegistrationTemplates
  endpoint:
    path: /v1/tenants/{tenantId}/tags/{tagId}
    method: GET
    data_selector: records
    params: {}
- name: RegistrationTemplates
  endpoint:
    path: /v1/tenants/{tenantId}/tags/{tagId}
    method: GET
    data_selector: records
    params: {}
- name: Clients
  endpoint:
    path: /v1/tenants/{tenantId}/tags/{tagId}
    method: GET
    data_selector: records
    params: {}
- name: History
  endpoint:
    path: /v1/tenants/{tenantId}/tags/{tagId}
    method: GET
    data_selector: records
    params: {}
- name: tag
  endpoint:
    path: /v1/tenants/{tenantId}/tags/{tagId}
    method: GET
    data_selector: id
    params: {}
- name: list_tags
  endpoint:
    path: /v1/tenants/{tenantId}/tags
    method: GET
    data_selector: tags
    params:
      skip: 0
      take: 100
- name: upsert_tag
  endpoint:
    path: /v1/tenants/{tenantId}/tags/{tagId}
    method: POST
    data_selector: id
    params: {}
- name: segments
  endpoint:
    path: /segments
    method: GET
    data_selector: data
    params: {}
- name: gdprLogs
  endpoint:
    path: /gdpr-logs
    method: GET
    data_selector: data
    params: {}
- name: systems
  endpoint:
    path: /systems
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: update_user
  endpoint:
    path: /api/v1/operator-association/{operatorId}
    method: PUT
    data_selector: userData
    params: {}
- name: delete_user
  endpoint:
    path: /api/v1/operator-association/{operatorId}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_user_profile
  endpoint:
    path: /api/v1/operator-association/{operatorId}
    method: GET
    data_selector: ''
    params: {}
- name: bulk_search_users
  endpoint:
    path: /api/v1/operator-association
    method: POST
    data_selector: ''
    params: {}
- name: find_user
  endpoint:
    path: /api/v1/operator-association
    method: POST
    data_selector: ''
    params: {}
- name: find_multiple_users
  endpoint:
    path: /api/v1/operator-association
    method: POST
    data_selector: ''
    params: {}
- name: attendant_app_usage
  endpoint:
    path: /api/v1/attendant-app-usage
    method: GET
    data_selector: report
    params: {}
- name: transaction_repository_usage
  endpoint:
    path: /api/v1/attendant-app-usage
    method: GET
    data_selector: report
    params:
      year: ''
      month: ''
      quarter: ''
- name: scan_go_usage
  endpoint:
    path: /api/v1/attendant-app-usage
    method: GET
    data_selector: report
    params:
      year: ''
      month: ''
      quarter: ''
- name: my_scan_usage
  endpoint:
    path: /api/v1/attendant-app-usage
    method: GET
    data_selector: report
    params:
      year: ''
      month: ''
      quarter: ''
- name: order_responses
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/order-responses
    method: POST
    data_selector: lines
    params: {}
- name: synchronize_stock
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/order-responses
    method: POST
    data_selector: lines
    params:
      businessUnitId: required
- name: reservations_stock
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/order-responses
    method: POST
    data_selector: lines
    params:
      businessUnitId: required
- name: goods_received
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/order-responses
    method: POST
    data_selector: lines
    params:
      businessUnitId: required
- name: stock_transactions
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/order-responses
    method: POST
    data_selector: lines
    params:
      businessUnitId: required
- name: purchase_orders
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/order-responses
    method: POST
    data_selector: lines
    params:
      businessUnitId: required
- name: order_response
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/order-responses
    method: POST
    data_selector: lines
    params:
      businessUnitId: required
- name: suspicious_items_report
  endpoint:
    path: /api/v1/inventory-reports/business-units/{businessUnitId}/suspicious-items
    method: GET
    data_selector: items
    params:
      suspicionType: DURABILITY&suspicionType=NEGATIVE_STOCK&suspicionType=SLOWED_SALES
      timeframeInWeeks: 2
      slowedSalesFactorThreshold: 0.5
- name: customer_order
  endpoint:
    path: /api/v1/proxy-config
    method: get
    data_selector: response
    params: {}
- name: customer_order
  endpoint:
    path: /api/v1/sync/customer-order
    method: PUT
- name: import_delivery_note
  endpoint:
    path: /imports/deliveries/gs1
    method: post
    data_selector: string
    params: {}
- name: list_deliveries
  endpoint:
    path: /deliveries
    method: get
    data_selector: string
    params: {}
- name: create_delivery
  endpoint:
    path: /deliveries
    method: post
    data_selector: string
    params: {}
- name: get_delivery_by_id
  endpoint:
    path: /deliveries/{deliveryId}
    method: get
    data_selector: string
    params: {}
- name: update_delivery_details
  endpoint:
    path: /deliveries/{deliveryId}
    method: put
    data_selector: string
    params: {}
- name: Create a new stock count
  endpoint:
    path: /api/v1/stock-counts
    method: POST
    data_selector: items
    params: {}
- name: Retrieve all stock counts
  endpoint:
    path: /api/v1/stock-counts
    method: GET
    data_selector: items
    params: {}
- name: Get details of an item
  endpoint:
    path: /api/v1/stock-counts/details
    method: GET
    data_selector: items
    params: {}
- name: not_counted_items
  endpoint:
    path: /item-categories/not-counted-items
    method: GET
    data_selector: items
    params:
      businessUnitId: required
      stockCountId: required
      take: 10
      skip: 0
- name: level_2_categories
  endpoint:
    path: /item-categories/level-2
    method: GET
    data_selector: items
    params:
      businessUnitId: required
      stockCountId: required
      itemCategoryId: required
- name: submit_stock_count
  endpoint:
    path: /stock-counts/submit
    method: POST
    data_selector: items
    params:
      businessUnitId: required
      stockCountId: required
      type: required
- name: create_update_stock_count_line
  endpoint:
    path: /stock-count-lines
    method: POST
    data_selector: items
    params:
      businessUnitId: required
      stockCountId: required
- name: delete_stock_count_line
  endpoint:
    path: /stock-count-lines
    method: DELETE
    data_selector: items
    params:
      businessUnitId: required
      stockCountId: required
      lineId: required
- name: import_stock_count
  endpoint:
    path: /stock-counts/import
    method: POST
    data_selector: items
    params:
      businessUnitId: required
      stockCountId: required
- name: inventory_reports_category_count
  endpoint:
    path: /inventory-reports/category-count
    method: GET
    data_selector: items
    params:
      businessUnitId: required
      stockCountId: required
- name: inventory_reports_item_count
  endpoint:
    path: /inventory-reports/item-count
    method: GET
    data_selector: items
    params:
      businessUnitId: required
      stockCountId: required
- name: inventory_reports_item_deviations
  endpoint:
    path: /inventory-reports/item-deviations
    method: GET
    data_selector: items
    params:
      businessUnitId: required
      stockCountId: required
- name: initial_state_processing
  endpoint:
    path: /item-categories/initial-state
    method: POST
    data_selector: items
    params: {}
- name: stock_correction
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/stock-corrections/{itemId}
    method: POST
    data_selector: statusCode
    params: {}
- name: create_store_transfer
  endpoint:
    path: /business-units/{businessUnitId}/store-transfers
    method: POST
    data_selector: response
    params: {}
- name: retrieve_store_transfers
  endpoint:
    path: /business-units/{businessUnitId}/store-transfers
    method: GET
    data_selector: response
    params: {}
- name: send_store_transfer_request
  endpoint:
    path: /business-units/{businessUnitId}/store-transfers/{storeTransferId}/send-request
    method: POST
    data_selector: response
    params: {}
- name: submit_store_transfer_request
  endpoint:
    path: /business-units/{businessUnitId}/store-transfers/{storeTransferId}/submit
    method: POST
    data_selector: response
    params: {}
- name: update_store_transfer
  endpoint:
    path: /business-units/{businessUnitId}/store-transfers/{storeTransferId}
    method: PUT
    data_selector: response
    params: {}
- name: delete_store_transfer
  endpoint:
    path: /business-units/{businessUnitId}/store-transfers/{storeTransferId}
    method: DELETE
    data_selector: response
    params: {}
- name: get_store_transfer_details
  endpoint:
    path: /business-units/{businessUnitId}/store-transfers/{storeTransferId}
    method: GET
    data_selector: response
    params: {}
- name: delete_store_transfer_line
  endpoint:
    path: /business-units/{businessUnitId}/store-transfers/{storeTransferId}/lines/{lineId}
    method: DELETE
    data_selector: response
    params: {}
- name: delete_store_transfer_line_info
  endpoint:
    path: /business-units/{businessUnitId}/store-transfers/{storeTransferId}/lines/{lineId}/line-info/{lineInfoId}
    method: DELETE
    data_selector: response
    params: {}
- name: assortmentPolicies
  endpoint:
    path: /gql/assortment-policy-query-api/operations/queries/assortment-policies
    method: GET
- name: assortmentPolicy
  endpoint:
    path: /gql/assortment-policy-query-api/operations/queries/assortment-policy
    method: GET
- name: totalCount
  endpoint:
    path: /gql/assortment-policy-query-api/operations/queries/total-count
    method: GET
- name: businessPartner
  endpoint:
    path: /businessPartner
    method: GET
    data_selector: BusinessPartner
    params:
      id: required
- name: businessPartners
  endpoint:
    path: /businessPartners
    method: GET
    data_selector: BusinessPartners
    params: {}
- name: DepositAndFeeRules
  endpoint:
    path: /api/v1/deposit-and-fee-rules
    method: POST
    data_selector: null
    params: {}
- name: DeleteDepositAndFeeRule
  endpoint:
    path: /api/v1/deposit-and-fee-rules/{id}
    method: DELETE
    data_selector: null
    params:
      businessUnitGroupId: required
- name: depositAndFeeRule
  endpoint:
    path: /gql/deposit-and-fee-rule-query-api/operations/queries/deposit-and-fee-rule
    method: GET
- name: depositAndFeeRules
  endpoint:
    path: /gql/deposit-and-fee-rule-query-api/operations/queries/deposit-and-fee-rules
    method: GET
- name: totalCount
  endpoint:
    path: /gql/deposit-and-fee-rule-query-api/operations/queries/total-count
    method: GET
- name: BaseDynamicEntityTemplate
  endpoint:
    path: /api/v1/tenant-dynamic-entity-templates
    method: POST
    data_selector: string
    params: {}
- name: DynamicEntityTemplateGroup
  endpoint:
    path: /api/v1/tenant-dynamic-entity-template-groups
    method: POST
    data_selector: string
    params: {}
- name: tenant_dynamic_entity_templates
  endpoint:
    path: /api/v1/tenant-dynamic-entity-templates/{id}
    method: DELETE
    data_selector: response
    params:
      businessUnitGroupId: string
      permanent: false
- name: create_dynamic_entity_template
  endpoint:
    path: /api/v1/tenant-dynamic-entity-templates
    method: POST
    data_selector: response
    params: {}
- name: update_dynamic_entity_template
  endpoint:
    path: /api/v1/tenant-dynamic-entity-templates
    method: PUT
    data_selector: response
    params: {}
- name: baseDynamicEntityTemplates
  endpoint:
    path: /gql/dynamic-entity-template-query-api/operations/queries/base-dynamic-entity-templates
    method: GET
- name: dynamicEntityTemplate
  endpoint:
    path: /gql/dynamic-entity-template-query-api/operations/queries/dynamic-entity-template
    method: GET
- name: tenantDynamicEntityTemplates
  endpoint:
    path: /gql/dynamic-entity-template-query-api/operations/queries/tenant-dynamic-entity-templates
    method: GET
- name: entityApproval
  endpoint:
    path: /gql/entity-approval-query-api/operations/queries/entity-approval
    method: GET
- name: entityApprovals
  endpoint:
    path: /gql/entity-approval-query-api/operations/queries/entity-approvals
    method: GET
- name: BusinessUnitGroupItems
  endpoint:
    path: /api/v2/bu-items
    method: post
    data_selector: item
    params: {}
- name: BusinessUnitItems
  endpoint:
    path: /api/v2/bu-items/{id}/revision
    method: put
    data_selector: newRevision
    params: {}
- name: bu_items_revision
  endpoint:
    path: /api/v2/bu-items/{id}/revision
    method: PUT
    data_selector: newRevision
    params: {}
- name: bu_items_delete
  endpoint:
    path: /api/v2/bu-items/{id}/revision
    method: DELETE
    data_selector: ''
    params:
      businessUnitGroupId: string
      permanent: boolean
- name: bu_items_update
  endpoint:
    path: /api/v2/bu-items/{id}/revision
    method: PATCH
    data_selector: ''
    params:
      businessUnitGroupId: string
- name: bu_items_reset_revision
  endpoint:
    path: /api/v2/bu-items/{id}/revision
    method: PUT
    data_selector: newRevision
    params:
      businessUnitId: string
- name: bu-items
  endpoint:
    path: /api/v2/bu-items/{id}/revision
    method: PUT
    data_selector: newRevision
    params: {}
- name: BusinessUnitItem
  endpoint:
    path: /api/v2/bu-items/{id}/revision
    method: PUT
    data_selector: newRevision
    params:
      businessUnitId: string
- name: item
  endpoint:
    path: /gql/item-query-api/operations/queries/item
    method: GET
- name: itemsByItemIds
  endpoint:
    path: /gql/item-query-api/operations/queries/items-by-item-ids
    method: GET
- name: items
  endpoint:
    path: /gql/item-query-api/operations/queries/items
    method: GET
- name: totalCount
  endpoint:
    path: /gql/item-query-api/operations/queries/total-count
    method: GET
- name: BusinessUnitGroupItemLinks
  endpoint:
    path: /api/v2/bu-item-links/{id}/revision
    method: put
    data_selector: accepted
    params: {}
- name: BusinessUnitItemLinks
  endpoint:
    path: /api/v2/bu-item-links/{id}/revision
    method: put
    data_selector: accepted
    params: {}
- name: bu-item-links-revision
  endpoint:
    path: /api/v2/bu-item-links/{id}/revision
    method: PUT
    data_selector: newRevision
    params:
      businessUnitId: string
- name: itemLinkByLinkedItemId
  endpoint:
    path: /itemLinkByLinkedItemId
    method: POST
- name: itemLink
  endpoint:
    path: /itemLink
    method: POST
- name: itemLinksByItemId
  endpoint:
    path: /itemLinksByItemId
    method: POST
- name: itemLinks
  endpoint:
    path: /itemLinks
    method: POST
- name: totalCount
  endpoint:
    path: /totalCount
    method: POST
- name: item_categories
  endpoint:
    path: /api/v2/item-categories/{id}/revision
    method: put
    data_selector: ''
    params: {}
- name: itemCategories
- name: itemCategory
- name: totalCount
- name: orderingOption
  endpoint:
    path: /gql/ordering-option-query-api/operations/queries/ordering-option
    method: GET
- name: orderingOptions
  endpoint:
    path: /gql/ordering-option-query-api/operations/queries/ordering-options
    method: GET
- name: BusinessUnitGroupPriceSpecification
  endpoint:
    path: /api/v2/bu-price-specifications
    method: post
    data_selector: PriceSpecification
    params: {}
- name: BusinessUnitPriceSpecification
  endpoint:
    path: /api/v2/bu-price-specifications/{id}/revision
    method: put
    data_selector: PriceSpecification
    params: {}
- name: update_price_specification
  endpoint:
    path: /api/v2/bu-price-specifications/{id}/revision
    method: PUT
    data_selector: string
    params:
      businessUnitGroupId: string
      itemId: string
- name: purge_future_price_specifications
  endpoint:
    path: /api/v2/bu-price-specifications/{id}/revision
    method: PUT
    data_selector: string
    params:
      itemId: string
      businessUnitId: string
- name: reset_revision
  endpoint:
    path: /api/v2/bu-price-specifications/{id}/revision
    method: PUT
    data_selector: string
    params:
      businessUnitId: string
      itemId: string
- name: create_price_specification
  endpoint:
    path: /api/v2/bu-price-specifications/{id}/revision
    method: PUT
    data_selector: string
    params:
      businessUnitId: string
      itemId: string
- name: replace_price_specification
  endpoint:
    path: /api/v2/bu-price-specifications/{id}/revision
    method: PUT
    data_selector: string
    params:
      businessUnitId: string
      itemId: string
- name: bu-price-specifications
  endpoint:
    path: /api/v2/bu-price-specifications/{id}/revision
    method: PUT
    data_selector: accepted
    params:
      businessUnitId: string
      itemId: string
- name: BusinessUnitGroupPromotions
  endpoint:
    path: /api/v2/bu-promotions/{id}/revision
    method: put
    data_selector: null
    params: {}
- name: BusinessUnitPromotions
  endpoint:
    path: /api/v2/bu-promotions/{id}/revision
    method: put
    data_selector: null
    params: {}
- name: promotion_revision
  endpoint:
    path: /api/v2/bu-promotions/{id}/revision
    method: PUT
    data_selector: ''
    params:
      businessUnitId: required
- name: promotion
  endpoint:
    path: /gql/promotion-query-api/operations/queries/promotion
    method: GET
- name: promotionsByItem
  endpoint:
    path: /gql/promotion-query-api/operations/queries/promotions-by-item
    method: GET
- name: promotions
  endpoint:
    path: /gql/promotion-query-api/operations/queries/promotions
    method: GET
- name: totalCount
  endpoint:
    path: /gql/promotion-query-api/operations/queries/total-count
    method: GET
- name: printSchedules
  endpoint:
    path: /gql/print-schedule-query-api/operations/queries/print-schedules
    method: GET
- name: print_commands
  endpoint:
    path: /api/v1/print-commands
    method: POST
    data_selector: payload
    params: {}
- name: search_selection
  endpoint:
    path: /api/v1/search-selections
    method: POST
    data_selector: string
- name: tenant_config
  endpoint:
    path: /tenants/config
    method: GET
    data_selector: tenantId
- name: get_receipt
  endpoint:
    path: /getGetReceipt
    method: GET
- name: create_receipt_transaction
  endpoint:
    path: /postCreateReceiptTransaction
    method: POST
- name: edit_receipt_transaction
  endpoint:
    path: /putEditReceiptTransaction
    method: PUT
- name: delete_receipt
  endpoint:
    path: /delDeleteReceipt
    method: DELETE
- name: create_receipt
  endpoint:
    path: /postCreateReceipt
    method: POST
- name: checkout_receipt
  endpoint:
    path: /postCheckoutReceipt
    method: POST
- name: init_payment_receipt
  endpoint:
    path: /putInitPaymentReceipt
    method: PUT
- name: get_payment_status
  endpoint:
    path: /getGetPaymentStatus
    method: GET
- name: get_control_status
  endpoint:
    path: /getGetControlStatus
    method: GET
- name: get_all_control_status
  endpoint:
    path: /getGetAllControlStatus
    method: GET
- name: cancel_checkout
  endpoint:
    path: /putCancelCheckout
    method: PUT
- name: get_optional_discounts
  endpoint:
    path: /getGetAListOfOptionalDiscounts
    method: GET
- name: activate_optional_discount
  endpoint:
    path: /putActivateAOptionalDiscounts
    method: PUT
- name: deactivate_optional_discount
  endpoint:
    path: /putDeactivateAOptionalDiscounts
    method: PUT
- name: refresh_optional_discounts_list
  endpoint:
    path: /postRefreshOptionalDiscountsList
    method: POST
- name: change_store_on_receipt
  endpoint:
    path: /putChangeStoreOnAReceipt
    method: PUT
- name: get_recovery_info
  endpoint:
    path: /getGetRecoveryInfo
    method: GET
- name: get_stores
  endpoint:
    path: /getGetStores
    method: GET
- name: create_basket
  endpoint:
    path: /api/v1/basket
    method: POST
    data_selector: response
    params:
      storeId: required
      channelType: SCANNGO
- name: get_ongoing_baskets
  endpoint:
    path: /api/v1/basket/ongoing
    method: GET
    data_selector: response
- name: recreate_basket
  endpoint:
    path: /api/v1/basket/{basketId}/recreate
    method: POST
    data_selector: response
    params:
      storeId: required
      channelType: SCANNGO
- name: get_basket
  endpoint:
    path: /api/v1/basket/{basketId}
    method: GET
    data_selector: response
- name: add_item_to_basket
  endpoint:
    path: /api/v1/basket/{basketId}/item
    method: POST
    data_selector: response
- name: edit_basket_row_by_id
  endpoint:
    path: /api/v1/basket/{basketId}/item/{itemId}
    method: PUT
    data_selector: response
- name: delete_basket_row_by_id
  endpoint:
    path: /api/v1/basket/{basketId}/item/{itemId}
    method: DELETE
    data_selector: response
- name: checkout_basket
  endpoint:
    path: /api/v1/basket/{basketId}/checkout
    method: POST
    data_selector: response
- name: start_checkout_for_basket
  endpoint:
    path: /api/v1/basket/{basketId}/start-checkout
    method: POST
    data_selector: response
- name: init_payment_basket
  endpoint:
    path: /api/v1/basket/{basketId}/payment
    method: POST
    data_selector: response
- name: assistance_status
  endpoint:
    path: /api/v1/basket/assistance/{basketId}/assistance-status
    method: GET
- name: cancel_initiated_payment
  endpoint:
    path: /api/v1/basket/cancel/{transactionId}
    method: GET
- name: get_payment_status
  endpoint:
    path: /api/v1/basket/payment/{transactionId}
    method: GET
- name: controls_determination
  endpoint:
    path: /api/v1/basket/controls/determination/{transactionId}
    method: GET
- name: controls_calculation
  endpoint:
    path: /api/v1/basket/controls/calculation/{transactionId}
    method: GET
- name: cancel_checkout
  endpoint:
    path: /api/v1/basket/cancel_checkout/{transactionId}
    method: GET
- name: get_optional_discounts
  endpoint:
    path: /api/v1/basket/discounts/{basketId}
    method: GET
- name: activate_discount
  endpoint:
    path: /api/v1/basket/discounts/{basketId}/activate/{discountId}
    method: POST
- name: deactivate_discount
  endpoint:
    path: /api/v1/basket/discounts/{basketId}/deactivate/{discountId}
    method: POST
- name: request_assistance
  endpoint:
    path: /api/v1/basket/assistance/{basketId}
    method: POST
- name: revoke_assistance
  endpoint:
    path: /api/v1/basket/assistance/revoke/{basketId}
    method: POST
- name: request_assistance
  endpoint:
    path: /api/v2/baskets/{basketGuid}:handle-prompt
    method: post
    data_selector: TransactionStatus
    params: {}
- name: revoke_assistance
  endpoint:
    path: /api/v2/baskets/{basketGuid}:handle-prompt
    method: post
    data_selector: TransactionStatus
    params: {}
- name: assistance_request_status
  endpoint:
    path: /api/v2/baskets/{basketGuid}:handle-prompt
    method: post
    data_selector: TransactionStatus
    params: {}
- name: create_basket
  endpoint:
    path: /api/v2/baskets/{basketGuid}:handle-prompt
    method: post
    data_selector: TransactionStatus
    params: {}
- name: get_basket
  endpoint:
    path: /api/v2/baskets/{basketGuid}:handle-prompt
    method: post
    data_selector: TransactionStatus
    params: {}
- name: get_ongoing_baskets
  endpoint:
    path: /api/v2/baskets/{basketGuid}:handle-prompt
    method: post
    data_selector: TransactionStatus
    params: {}
- name: add_item
  endpoint:
    path: /api/v2/baskets/{basketGuid}:handle-prompt
    method: post
    data_selector: TransactionStatus
    params: {}
- name: update_item_quantity
  endpoint:
    path: /api/v2/baskets/{basketGuid}:handle-prompt
    method: post
    data_selector: TransactionStatus
    params: {}
- name: delete_item
  endpoint:
    path: /api/v2/baskets/{basketGuid}:handle-prompt
    method: post
    data_selector: TransactionStatus
    params: {}
- name: get_optional_discounts
  endpoint:
    path: /api/v2/baskets/{basketGuid}:handle-prompt
    method: post
    data_selector: TransactionStatus
    params: {}
- name: activate_discount
  endpoint:
    path: /api/v2/baskets/{basketGuid}:handle-prompt
    method: post
    data_selector: TransactionStatus
    params: {}
- name: cancel_trip
  endpoint:
    path: /selfscan/api/v2/baskets/{basketId}:cancel
    method: post
    data_selector: response
    params: {}
- name: mark_as_paid
  endpoint:
    path: /selfscan/api/v2/baskets/{basketGuid}:mark-as-paid
    method: post
    data_selector: response
    params: {}
- name: transfer_to_pos
  endpoint:
    path: /selfscan/api/v2/baskets/{basketGuid}:transfer-to-pos
    method: post
    data_selector: response
    params: {}
- name: mark_transaction_as_paid
  endpoint:
    path: /selfscan/api/v2/baskets/{basketGuid}:mark-as-paid
    method: POST
    data_selector: ''
    params: {}
- name: force_skip_rescan
  endpoint:
    path: /control/api/v1/processed-basket/{transactionId}/rescan-update
    method: POST
    data_selector: ''
    params: {}
- name: baskets
  endpoint:
    path: /api/v2/baskets
    method: GET
    data_selector: records
    params: {}
- name: customers
  endpoint:
    path: /api/v2/customers
    method: GET
    data_selector: records
    params: {}
- name: members
  endpoint:
    path: /api/v2/members
    method: POST
    data_selector: records
    params: {}
- name: stores
  endpoint:
    path: /stores
    method: GET
    data_selector: null
    params:
      searchText: string
- name: entrance_unit
  endpoint:
    path: /business-units/{businessUnitId}/entrance-units/{entranceUnitId}
    method: GET
    data_selector: EntranceUnitNotFound
    params: {}
- name: handheld_scanner
  endpoint:
    path: /business-units/{businessUnitId}/handheld-scanners/{handheldScannerId}
    method: GET
    data_selector: HandheldScannerNotFound
    params: {}
- name: create_cradle
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/entrance-units/{entranceUnitId}:send-command
    method: POST
    data_selector: cradleData
    params: {}
- name: get_cradle
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/entrance-units/{entranceUnitId}:send-command
    method: GET
    data_selector: cradleId
    params: {}
- name: update_handheld_scanner
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/entrance-units/{entranceUnitId}:send-command
    method: PUT
    data_selector: handheldScannerId
    params: {}
- name: delete_handheld_scanner
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/entrance-units/{entranceUnitId}:send-command
    method: DELETE
    data_selector: handheldScannerId
    params: {}
- name: reset_handheld_scanner_count
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/entrance-units/{entranceUnitId}:send-command
    method: POST
    data_selector: command
    params:
      businessUnitId: string
      memberId: string
- name: list_handheld_scanners
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/entrance-units/{entranceUnitId}:send-command
    method: GET
    data_selector: scanners
    params:
      businessUnitId: string
- name: map_cradle_to_entrance_unit
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/entrance-units/{entranceUnitId}:send-command
    method: POST
    data_selector: mapping
    params:
      businessUnitId: string
      entranceUnitId: string
- name: disconnect_cradles
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/entrance-units/{entranceUnitId}:send-command
    method: POST
    data_selector: disconnect
    params:
      businessUnitId: string
      entranceUnitId: string
- name: get_entrance_unit_by_id
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/entrance-units/{entranceUnitId}:send-command
    method: GET
    data_selector: entrance_unit
    params:
      businessUnitId: string
      entranceUnitId: string
- name: update_entrance_unit
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/entrance-units/{entranceUnitId}:send-command
    method: PUT
    data_selector: update
    params:
      businessUnitId: string
      entranceUnitId: string
- name: delete_entrance_unit
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/entrance-units/{entranceUnitId}:send-command
    method: DELETE
    data_selector: delete
    params:
      businessUnitId: string
      entranceUnitId: string
- name: list_entrance_units
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/entrance-units/{entranceUnitId}:send-command
    method: GET
    data_selector: entrance_units
    params:
      businessUnitId: string
- name: send_command_to_entrance_unit
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/entrance-units/{entranceUnitId}:send-command
    method: POST
    data_selector: send_command
    params:
      businessUnitId: string
      entranceUnitId: string
- name: check_audit
  endpoint:
    path: /api/v1/business-units/{businessUnitId}
    method: POST
    data_selector: auditRequestId
    params: {}
- name: mark_audit_basket
  endpoint:
    path: /api/v1/business-units/{businessUnitId}
    method: POST
    data_selector: auditRequestId
    params: {}
- name: mark_audit_store
  endpoint:
    path: /api/v1/business-units/{businessUnitId}
    method: POST
    data_selector: auditRequestId
    params: {}
- name: audit_results_complete
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/audit-results/{auditRequestId}:complete
    method: POST
- name: audit_results_stop
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/audit-results/{auditRequestId}:stop
    method: POST
- name: partial_audits_switch_to_full
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/partial-audits/{auditSessionId}:switch-to-full
    method: POST
- name: retrieve_active_audits
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/audits
    method: POST
- name: retrieve_available_audits
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/audits
    method: POST
- name: retrieve_audit_for_customer
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/audits/customer
    method: POST
- name: get_audit_details
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/audits/{auditRequestId}
    method: POST
- name: remove_all_items
  endpoint:
    path: /business-units/{businessUnitId}/partial-audits/{auditSessionId}
    method: POST
    data_selector: response
    params: {}
- name: retrieve_differences
  endpoint:
    path: /business-units/{businessUnitId}/partial-audits/{auditSessionId}
    method: POST
    data_selector: response
    params: {}
- name: finish_full_audit
  endpoint:
    path: /business-units/{businessUnitId}/partial-audits/{auditSessionId}
    method: POST
    data_selector: response
    params: {}
- name: cancel_partial_audit
  endpoint:
    path: /business-units/{businessUnitId}/partial-audits/{auditSessionId}
    method: POST
    data_selector: response
    params: {}
- name: add_item_to_audit_basket
  endpoint:
    path: /business-units/{businessUnitId}/partial-audits/{auditSessionId}
    method: POST
    data_selector: response
    params: {}
- name: add_item_to_audit_basket
  endpoint:
    path: /business-units/{businessUnitId}/partial-audits/{auditSessionId}
    method: POST
    data_selector: operatorBasket.items
    params: {}
- name: remove_item_from_audit_basket
  endpoint:
    path: /business-units/{businessUnitId}/partial-audits/{auditSessionId}
    method: DELETE
    data_selector: operatorBasket.items
    params: {}
- name: start_full_audit
  endpoint:
    path: /business-units/{businessUnitId}/partial-audits/{auditSessionId}:switch-to-full
    method: POST
    data_selector: auditRequestId
    params: {}
- name: update_item_quantity
  endpoint:
    path: /business-units/{businessUnitId}/partial-audits/{auditSessionId}
    method: PATCH
    data_selector: operatorBasket.items
    params: {}
- name: take_over_partial_audit
  endpoint:
    path: /business-units/{businessUnitId}/partial-audits/{auditSessionId}
    method: PUT
    data_selector: operatorBasket.items
    params: {}
- name: partial_audit
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/partial-audits/{auditSessionId}:switch-to-full
    method: POST
    data_selector: response
    params: {}
- name: audit_results_complete
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/audit-results/{auditRequestId}:complete
    method: POST
- name: audit_results_stop
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/audit-results/{auditRequestId}:stop
    method: POST
- name: retrieve_active_audits
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/audits
    method: POST
- name: retrieve_available_audits
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/audits
    method: POST
- name: retrieve_audit_for_customer
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/audits
    method: POST
- name: get_audit_details
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/audit-results/{auditRequestId}
    method: POST
- name: remove_all_items
  endpoint:
    path: /business-units/{businessUnitId}/partial-audits/{auditSessionId}:switch-to-full
    method: POST
- name: cancel_partial_audit
  endpoint:
    path: /business-units/{businessUnitId}/partial-audits/{auditSessionId}:switch-to-full
    method: POST
- name: finish_full_audit
  endpoint:
    path: /business-units/{businessUnitId}/partial-audits/{auditSessionId}:switch-to-full
    method: POST
- name: retrieve_differences
  endpoint:
    path: /business-units/{businessUnitId}/partial-audits/{auditSessionId}:switch-to-full
    method: POST
- name: add_item
  endpoint:
    path: /business-units/{businessUnitId}/partial-audits/{auditSessionId}
    method: POST
    data_selector: items
    params: {}
- name: remove_item
  endpoint:
    path: /business-units/{businessUnitId}/partial-audits/{auditSessionId}
    method: POST
    data_selector: itemId
    params: {}
- name: update_quantity
  endpoint:
    path: /business-units/{businessUnitId}/partial-audits/{auditSessionId}
    method: POST
    data_selector: quantity
    params: {}
- name: switch_to_full_audit
  endpoint:
    path: /business-units/{businessUnitId}/partial-audits/{auditSessionId}:switch-to-full
    method: POST
    data_selector: options
    params: {}
- name: partial_audit
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/partial-audits/{auditSessionId}:switch-to-full
    method: POST
    data_selector: tenantId
    params: {}
- name: switch_to_full_audit
  endpoint:
    path: /business-units/{businessUnitId}/partial-audits/{auditSessionId}:switch-to-full
    method: POST
    data_selector: options
    params: {}
- name: customer_trip
  endpoint:
    path: /api/v1/customer-trips
    method: POST
    data_selector: trip
    params: {}
- name: rescan_feedback
  endpoint:
    path: /api/v1/customer-trips
    method: POST
    data_selector: rescan
    params: {}
- name: pos_transaction
  endpoint:
    path: /api/v1/customer-trips
    method: POST
    data_selector: posTransaction
    params: {}
- name: customer_profile_read
  endpoint:
    path: /api/v1/customer/customer-types/{customerType}/id/{customerId}
    method: GET
    data_selector: records
    params: {}
- name: customer_profile_write
  endpoint:
    path: /api/v1/customer/customer-types/{customerType}/id/{customerId}/graylist-audit-count
    method: PUT
    data_selector: records
    params: {}
- name: PersistedAudit
  endpoint:
    path: /api/v1/reprocess
    method: POST
    data_selector: ''
    params: {}
- name: RetrievePersistedAudit
  endpoint:
    path: /api/v1/reprocess
    method: GET
    data_selector: ''
    params: {}
- name: business_unit_set
  endpoint:
    path: /business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: GET
    data_selector: businessUnitSetDetails
    params: {}
- name: business_unit_setting
  endpoint:
    path: /business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: GET
    data_selector: businessUnitSettingDetails
    params: {}
- name: get_risk_item_lists
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: GET
    data_selector: records
    params: {}
- name: update_business_unit_setting
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: PATCH
    data_selector: records
    params: {}
- name: delete_assignment
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: DELETE
    data_selector: records
    params: {}
- name: risk_item_list
  endpoint:
    path: /business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/risk-item-lists
    method: GET
    data_selector: riskItemList
    params: {}
- name: tenant
  endpoint:
    path: /tenants
    method: GET
    data_selector: tenant
    params: {}
- name: Update tenant
  endpoint:
    path: /business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: GET
    data_selector: businessUnitId
    params: {}
- name: Delete tenant
  endpoint:
    path: /business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: GET
    data_selector: businessUnitId
    params: {}
- name: Create tenant set
  endpoint:
    path: /business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: GET
    data_selector: businessUnitId
    params: {}
- name: Update tenant set
  endpoint:
    path: /business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: GET
    data_selector: businessUnitId
    params: {}
- name: List tenant sets
  endpoint:
    path: /business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: GET
    data_selector: businessUnitId
    params: {}
- name: Retrieve tenant settings
  endpoint:
    path: /business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: GET
    data_selector: businessUnitId
    params: {}
- name: Update tenant setting
  endpoint:
    path: /business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: GET
    data_selector: businessUnitId
    params: {}
- name: Delete tenant setting
  endpoint:
    path: /business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: GET
    data_selector: businessUnitId
    params: {}
- name: trust_level
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: GET
    data_selector: businessUnitId
- name: audit_result
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: GET
    data_selector: businessUnitId
- name: audit_trigger_types
  endpoint:
    path: /business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: GET
    data_selector: records
    params: {}
- name: create_audit_trigger
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: POST
    data_selector: auditTriggerDetails
    params: {}
- name: delete_audit_trigger
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: DELETE
    data_selector: auditTriggerDetails
    params: {}
- name: get_audit_trigger
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: GET
    data_selector: auditTriggerDetails
    params: {}
- name: update_audit_trigger
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: PUT
    data_selector: auditTriggerDetails
    params: {}
- name: create_trust_level_set
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: POST
    data_selector: trustLevelSetDetails
    params: {}
- name: delete_trust_level_set
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: DELETE
    data_selector: trustLevelSetDetails
    params: {}
- name: get_trust_level_set
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: GET
    data_selector: trustLevelSetDetails
    params: {}
- name: trust_level_set
  endpoint:
    path: /business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: GET
    data_selector: records
    params: {}
- name: Get Trust Level Configuration Schedule for BusinessUnit
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: GET
    data_selector: businessUnitId
    params: {}
- name: Delete Trust Level Configuration Schedule for Tenant
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: DELETE
    data_selector: businessUnitId
    params: {}
- name: Get All Schedules for Tenant
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: GET
    data_selector: businessUnitId
    params: {}
- name: Create Trust Level Configuration Schedule for BusinessUnit
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: POST
    data_selector: businessUnitId
    params: {}
- name: Update Trust Level Configuration Schedule for BusinessUnit
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: PUT
    data_selector: businessUnitId
    params: {}
- name: Get All Schedules for BusinessUnit
  endpoint:
    path: /api/v1/business-units/{businessUnitId}/channels/{channel}/customer-types/{customerType}/set-schedules/{scheduleName}
    method: GET
    data_selector: businessUnitId
    params: {}
- name: predict_fraud_trip
  endpoint:
    path: /predict-fraud-trip
    method: POST
    data_selector: metaData
    params: {}
- name: create_report
  endpoint:
    path: /api/v1/reports
    method: POST
    data_selector: ''
    params: {}
- name: tasks
  endpoint:
    path: /api/v1/tasks
    method: GET
    data_selector: tasks
    params: {}
- name: task_by_id
  endpoint:
    path: /api/v1/tasks/{taskId}
    method: GET
    data_selector: task
    params: {}
- name: cancel_task
  endpoint:
    path: /api/v1/tasks/{taskId}/cancel
    method: POST
    data_selector: cancel_response
    params:
      force: 'false'
- name: receipt_images
  endpoint:
    path: /api/v1/transactions/receipt-images
    method: POST
    data_selector: statusCode
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: POST
    data_selector: transaction
    params: {}
- name: transaction_exports
  endpoint:
    path: /transaction-exports
    method: GET
    data_selector: exports
    params: {}
- name: generate_report
  endpoint:
    path: /api/v1/reports
    method: POST
    data_selector: response
    params:
      businessUnitId: string
      workstationId: string
      type: x
- name: search_reports
  endpoint:
    path: /api/v1/reports
    method: GET
    data_selector: response
    params: {}
- name: get_report_by_id
  endpoint:
    path: /api/v1/reports/{id}
    method: GET
    data_selector: response
    params: {}
- name: eft_reports
  endpoint:
    path: /business-units/{businessUnitId}/eod-reports
    method: GET
    data_selector: reports
    params:
      skip: 0
      take: 100
- name: eod_reports
  endpoint:
    path: /business-units/{businessUnitId}/eod-reports
    method: POST
    data_selector: report
    params: {}
notes:
- 'Business units are never fully deleted: when you delete a business unit it is actually
  marked as deleted (soft-delete) and removed from list and get requests.'
- You cannot create a business unit with id of soft-deleted business unit. But you
  can restore deleted business unit.
- Data added to the top group will be inherited to all groups or business units below.
- Data added or overridden by sub group A will only be applicable for business units
  linked to sub group A.
- Uses access-token for authentication
- The JWT is required in all secured API calls.
- Some subset entities do not perform delete before adding due to deep dependency
  constraints.
- Failed to load API schema due to a server error
- Timeout for retrieving a member is currently set to 8 seconds.
- 'Proposed time-out in the third party service for processing a request from the
  EVA service: 3000 ms.'
- 'Time out in the EVA service for requests to the external party: 3500 ms.'
- 'Proposed time-out for a POS client to the Deposit API: 4000 ms.'
- 'Timeout for voucher requests from the EVA service to the external party: 11000
  ms'
- Uses access-token for authorization
- Some endpoints require specific path parameters.
- Responses can vary based on the input parameters.
- Deprecated as of 4 Sept 2023
- Use operational-status for overview of end of day status.
- All endpoints require authorization with access-token.
- Some endpoints have deprecated versions.
- Uses access token for authorization
- DEPRECATED. All endpoints are deprecated as of 13 May 2024.
- Production server (uses live data)
- Follows OAuth Resource Owner Password Credentials Flow
- Requires access token for authorization.
- Ensure proper permissions for actions.
- Deprecated as of 01 Oct 2025.
- 'Allowed operations: queries and mutations.'
- Requires IAM user authorization.
- Immutable properties include id, businessUnitId, revision, identifiers.
- New revision should be provided as an EPOCH numeric value with millisecond precision.
- Different permissions are needed to allow permanent delete.
- The BusinessUnitGroupId must be used to specify the Business Unit Group.
- Immutable properties include id, businessUnitGroupId, revision, itemId, validFrom,
  validTo.
- The id for PriceSpecification must be globally unique.
- 'Immutable properties: id, businessUnitId, revision, itemId, validFrom, validTo.'
- Strongly recommend providing the revision as an EPOCH numeric value with millisecond
  precision.
- There is a hard size limit of 1 MB to the Promotion input payload.
- Requires authorization with specific permissions.
- Correlation-Id is required in the header for all requests.
- Uses OAuth2 with access token
- Country code in ISO 3166-1 alpha-2 format is required for path parameters
- Requires setup of OCMS security schema to acquire tokens
- Uses Bearer token for authentication.
- The Device Management API is intended for use by the Entrance Unit application.
- Requires IAM authorization.
- Commands include Unlock, Identify, Restart.
- Requires setup of Bearer token for authorization
- Requires Tenant-Id header for authorization
- The operator must be authenticated with a Bearer token.
- Unique identifiers for businessUnitId and auditSessionId are required in path parameters.
- Requires Tenant-Id header for requests
- Requires Bearer token for authorization
- Tenant-Id is required in header parameters
- Bearer token is required for authorization
- Various channels and customer types are supported
- Uses Bearer token for authorization
- Endpoint requires Tenant-Id header to identify tenant
- Some endpoints require a Tenant-Id header for identification.
- Authorization required for all endpoints
- Path parameters must be provided in the requests
- Requires tenant-id and business-unit-id in headers for requests
- Only Portugal is supported.
- Link to download the export is only valid for a minute.
errors:
- '400: Invalid params'
- '403: Unauthorized'
- '404: Not found'
- '500: Internal server error'
- '404: Not Found'
- Cannot GET /api/UNLICENSED
- Cannot GET /schemas/v1/openapi.json
- '400: Bad request'
- '401: Unauthorized'
- '500: An error occurred'
- 400 Invalid params
- 403 Unauthorized
- 500 Internal server error
- '401 Unauthorized: You are not authorized to perform this action'
- '403 Forbidden: The user has no access'
- 400 Bad Request
- 404 Not Found
- 500 Internal Server Error
- 200 OK
- 304 Not Modified
- '202: Accepted'
- 400 Bad request
- '400 Bad Request: Application cannot be determined if omitted.'
- '500 Server error: General server error.'
- 401 Unauthorized
- 5XX Internal server error
- '500 Internal Server Error: Check server status or API availability'
- 404 Bad request. Check error message in body
- 500 Internal error. Check error message in body
- '400: Indicates that request body contains invalid data and must be fixed.'
- '503: Service Unavailable'
- 403 Forbidden
- 500 Server Error
- '401 Unauthorized: Invalid credentials'
- 400 BadRequest
- 503 Service Unavailable
- '400: Bad Request'
- '403: Forbidden'
- '500: Server Error'
- '404: No response was found'
- 400 Bad request due to invalid message format.
- 401 Not authorized.
- 403 Access denied.
- 4XX Bad request.
- 5XX Unexpected error.
- '400: Bad request due to invalid message format'
- '401: Not authorized'
- '403: Access denied'
- '4XX: Bad request'
- '5XX: Unexpected error'
- '400: Bad request due to invalid message format.'
- '401: Not authorized.'
- '403: Access denied.'
- '412: Precondition Failed.'
- '4XX: Bad request.'
- '5XX: Unexpected error.'
- '500: Internal Server Error'
- 422 The response body containing the outcome of a sign transaction.
- 422 Unprocessable Entity
- 500 An error represents an issue from within the service, and prevents the service
  from fulfilling the request.
- '409: Conflict'
- 409 Conflict
- '504: Gateway Timeout'
- 504 Gateway Timeout
- 202 Accepted
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Ensure proper authorization.'
- '403 Forbidden: Insufficient permissions.'
- '500 Internal Server Error: Try again later.'
- '503 Service Unavailable: Service is currently unavailable.'
- '504 Gateway Timeout: Request timed out.'
- '400: Bad request - AbandonedTrip - Basket is abandoned'
- '403: Forbidden - Access token is incorrect or expired'
- '404: Not found - BasketNotFound or AssistanceRequestNotFound'
- '410: Gone - BasketCanceled or BasketTransferredToPos'
- '500: InternalServerError - Technical errors'
- '400 Bad request: AbandonedTrip - Basket is abandoned'
- '403 Forbidden: Empty response - Access token is incorrect'
- '403 Forbidden: Empty response - Access token is expired'
- '403 Forbidden: AccessDenied - User is trying to get assistance status for a basket
  of another user'
- '404 Not found: BasketNotFound - Sends basket not found if basket ID is wrong or
  basket not registered in the system'
- '404 Not found: AssistanceRequestNotFound - Sends assistance request not found if
  there is no assistance request registered in the system'
- '410 Gone: BasketCanceled - Basket was canceled'
- '410 Gone: BasketTransferredToPos - Basket was canceled due to a transfer to POS'
- '500 InternalServerError: Sends different errors messages that also can be empty.'
- '406: Not acceptable'
- '410: Gone'
- '500: InternalServerError'
- '400 BadRequest: Validation error or invalid token claims'
- '403 Forbidden: Access token is incorrect or expired'
- '404 Not Found: Unable to find transaction'
- '406 Not Acceptable: Various basket state errors'
- '500 Internal Server Error: Technical errors'
- '403 Forbidden: Empty response - Access token is incorrect or expired'
- '404 Not Found: TransactionNotFound - Unable to find transaction'
- '406 Not Acceptable: Returns different errors based on current basket state'
- '500 Internal Server Error: Technical errors. Sends different errors messages that
  also can be empty.'
- 'BusinessUnitAccessDenied: Access to the specified resource is denied due to insufficient
  permissions.'
- 'EntranceUnitNotFound: The entrance unit with the specified ID could not be found
  for the given business unit.'
- Internal Server Error
- '400 Bad Request: Check request format and required fields.'
- '404 Not Found: Resource not found.'
- '500 Internal Server Error: Unexpected error occurred.'
- 422 Unprocessable Content
- '422: Unprocessable Content'
- 201 Created
- '400 Bad Request: Invalid input or parameters'
- '404 Not Found: Requested resource not found'
- '400 Bad Request: Check request parameters for correctness'
- '404 Not Found: Verify the existence of the resource'
- '400 Bad Request: Check request parameters'
- '404 Not Found: Verify the resource exists'
- '404 Not Found: Resource not found'
- '200 OK: Successful response'
- '400: Validation Error'
- Cannot GET /schemas/v6/poslog.xsd
- '403 Unauthorized: Check access-token validity'
- '404: Resource not found'
- '400: Invalid request'
auth_info:
  mentioned_objects:
  - ocmswihiiretail
  - Correlation-Id
  - Tenant-Id
  - Country-Code
  - Receipt-Language
  - User-Language
  - Business-Unit-Id
  - Workstation-Id
  - Client
  - access-token
  - iamocmswid
  - iam
  - ocms
  - wid
  - iamwidocms
  - OCMS
  - Bearer
client:
  base_url: https://developer.hiiretail.com/api
  auth:
    type: Bearer
    location: header
    header_name: Authorization
source_metadata: null
