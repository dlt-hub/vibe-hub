resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: G
  endpoint:
    path: /services/data/vXX.X/sobjects/G
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: shortest_paths_restricted
  endpoint:
    path: /shortest_paths_restricted
    method: GET
    data_selector: results
- name: planar_graph
  endpoint:
    path: /create_planar_graph
    method: POST
    data_selector: graph
- name: Node
  endpoint:
    data_selector: betweenness
- name: Edge
  endpoint:
    data_selector: betweenness_edge
- name: Node_len
  endpoint:
    data_selector: betweenness_len
- name: Edge_len
  endpoint:
    data_selector: betweenness_edge_len
- name: Node_lin
  endpoint:
    data_selector: betweenness_lin
- name: Edge_lin
  endpoint:
    data_selector: betweenness_edge_lin
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: betweenness_centrality
  endpoint:
    path: /metrics/betweenness_centrality
    method: POST
    data_selector: results
- name: calculate_path_distance_matrix
  endpoint:
    path: /metrics/calculate_path_distance_matrix
    method: POST
    data_selector: distance_matrix
- name: population_data
  endpoint:
    path: /GHS_POP_E2025_GLOBE_R2023A_54009_100/V1-0/tiles/
    method: GET
    data_selector: tiles
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: population_raster
  endpoint:
    path: /GHS_POP_GLOBE_R2023A/GHS_POP_E2025_GLOBE_R2023A_54009_100/V1-0/tiles/
    method: GET
    data_selector: raster_tiles
    params: {}
- name: betweenness_centrality
  endpoint:
    path: /metrics/measures/betweenness_centrality
    method: GET
    data_selector: results
- name: calculate_path_distance_matrix
  endpoint:
    path: /metrics/distances/calculate_path_distance_matrix
    method: GET
    data_selector: results
- name: population_data
  endpoint:
    path: /population_data
    method: GET
    data_selector: records
- name: population_data
  endpoint:
    path: /GHS_POP_GLOBE_R2023A
    method: GET
    data_selector: tiles
- name: population_raster
  endpoint:
    path: /GHS_POP_E2025_GLOBE_R2023A_54009_100/V1-0/tiles/GHS_POP_E2025_GLOBE_R2023A_54009_100_V1_0_R{row}_C{col}.zip
    method: GET
    data_selector: raster_data
    params: {}
- name: aggregate_edge_attr
  endpoint:
    path: /aggregate_edge_attr
    method: GET
    data_selector: records
    params: {}
- name: determine_minmax_val
  endpoint:
    path: /determine_minmax_val
    method: GET
    data_selector: records
    params: {}
- name: get_edge_subgraph_with_attribute_value
  endpoint:
    path: /get_edge_subgraph_with_attribute_value
    method: GET
    data_selector: records
    params: {}
- name: new_edge_attribute_by_function
  endpoint:
    path: /new_edge_attribute_by_function
    method: GET
    data_selector: records
    params: {}
- name: population_data
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: GHSL_DIR
  endpoint:
    path: /home/runner/work/superblockify/superblockify/data/ghsl
    method: GET
- name: GRAPH_DIR
  endpoint:
    path: /home/runner/work/superblockify/superblockify/data/graphs
    method: GET
- name: GHSL
  endpoint:
    path: /home/runner/work/superblockify/superblockify/data/ghsl
    method: GET
    data_selector: records
- name: Graphs
  endpoint:
    path: /home/runner/work/superblockify/superblockify/data/graphs
    method: GET
    data_selector: records
- name: PLACES_100_CITIES
  endpoint:
    path: /PLACES_100_CITIES
    method: GET
    data_selector: records
- name: places_germany
  endpoint:
    path: /places/germany
    method: GET
    data_selector: places
    params: {}
- name: Amsterdam
  endpoint:
    path: /places/Amsterdam
    method: GET
    data_selector: OSM relation
- name: Athens
  endpoint:
    path: /places/Athens
    method: GET
    data_selector: OSM relation
- name: Atlanta
  endpoint:
    path: /places/Atlanta
    method: GET
    data_selector: OSM relation
- name: Baghdad
  endpoint:
    path: /places/Baghdad
    method: GET
    data_selector: OSM relation
- name: Baltimore
  endpoint:
    path: /places/Baltimore
    method: GET
    data_selector: OSM relation
- name: Bangkok
  endpoint:
    path: /places/Bangkok
    method: GET
    data_selector: OSM relation
- name: Barcelona
  endpoint:
    path: /places/Barcelona
    method: GET
    data_selector: OSM relation
- name: Beijing
  endpoint:
    path: /places/Beijing
    method: GET
    data_selector: OSM relation
- name: Beirut
  endpoint:
    path: /places/Beirut
    method: GET
    data_selector: OSM relation
- name: Berlin
  endpoint:
    path: /places/Berlin
    method: GET
    data_selector: OSM relation
- name: Bogota
  endpoint:
    path: /places/Bogota
    method: GET
    data_selector: OSM relation
- name: Boston
  endpoint:
    path: /places/Boston
    method: GET
    data_selector: OSM relation
- name: Budapest
  endpoint:
    path: /places/Budapest
    method: GET
    data_selector: OSM relation
- name: Buenos Aires
  endpoint:
    path: /places/Buenos Aires
    method: GET
    data_selector: OSM relation
- name: Cairo
  endpoint:
    path: /places/Cairo
    method: GET
    data_selector: OSM relation
- name: Cape Town
  endpoint:
    path: /places/Cape Town
    method: GET
    data_selector: OSM relation
- name: Caracas
  endpoint:
    path: /places/Caracas
    method: GET
    data_selector: OSM relation
- name: Casablanca
  endpoint:
    path: /places/Casablanca
    method: GET
    data_selector: OSM relation
- name: Charlotte
  endpoint:
    path: /places/Charlotte
    method: GET
    data_selector: OSM relation
- name: Chicago
  endpoint:
    path: /places/Chicago
    method: GET
    data_selector: OSM relation
- name: Cleveland
  endpoint:
    path: /places/Cleveland
    method: GET
    data_selector: OSM relation
- name: Copenhagen
  endpoint:
    path: /places/Copenhagen
    method: GET
    data_selector: OSM relation
- name: Dallas
  endpoint:
    path: /places/Dallas
    method: GET
    data_selector: OSM relation
- name: city_data
  endpoint:
    path: /city/data
    method: GET
    data_selector: cities
    params: {}
- name: place_lists
  endpoint:
    path: /places
    method: GET
    data_selector: place_lists
- name: places_germany
  endpoint:
    path: /places_germany
    method: GET
    data_selector: places
- name: add_ltn_means
  endpoint:
    path: /superblockify/metrics/measures/add_ltn_means
    method: POST
    data_selector: results
- name: add_relative_changes
  endpoint:
    path: /superblockify/metrics/measures/add_relative_changes
    method: POST
    data_selector: results
- name: betweenness_centrality
  endpoint:
    path: /superblockify/metrics/measures/betweenness_centrality
    method: POST
    data_selector: results
- name: calculate_coverage
  endpoint:
    path: /superblockify/metrics/measures/calculate_coverage
    method: POST
    data_selector: results
- name: calculate_directness
  endpoint:
    path: /superblockify/metrics/measures/calculate_directness
    method: POST
    data_selector: results
- name: calculate_global_efficiency
  endpoint:
    path: /superblockify/metrics/measures/calculate_global_efficiency
    method: POST
    data_selector: results
- name: calculate_high_bc_clustering
  endpoint:
    path: /superblockify/metrics/measures/calculate_high_bc_clustering
    method: POST
    data_selector: results
- name: rel_increase
  endpoint:
    path: /superblockify/metrics/measures/rel_increase
    method: POST
    data_selector: results
- name: write_relative_increase_to_edges
  endpoint:
    path: /superblockify/metrics/measures/write_relative_increase_to_edges
    method: POST
    data_selector: results
- name: BasePartitioner
  endpoint:
    path: /superblockify/partitioning/base
    method: GET
    data_selector: metrics
    params: {}
- name: Osnabrück
  endpoint:
    path: /ui/search.html?q=Osnabrück,+Lower+Saxony,+Germany
    method: GET
    data_selector: records
    params: {}
- name: Paderborn
  endpoint:
    path: /ui/search.html?q=Paderborn,+North+Rhine-Westphalia,+Germany
    method: GET
    data_selector: records
    params: {}
- name: Pforzheim
  endpoint:
    path: /ui/search.html?q=Pforzheim,+Baden-Württemberg,+Germany
    method: GET
    data_selector: records
    params: {}
- name: Potsdam
  endpoint:
    path: /ui/search.html?q=Potsdam,+Brandenburg,+Germany
    method: GET
    data_selector: records
    params: {}
- name: Recklinghausen
  endpoint:
    path: /ui/search.html?q=Recklinghausen,+North+Rhine-Westphalia,+Germany
    method: GET
    data_selector: records
    params: {}
- name: Regensburg
  endpoint:
    path: /ui/search.html?q=Regensburg,+Bavaria,+Germany
    method: GET
    data_selector: records
    params: {}
- name: Remscheid
  endpoint:
    path: /ui/search.html?q=Remscheid,+North+Rhine-Westphalia,+Germany
    method: GET
    data_selector: records
    params: {}
- name: Reutlingen
  endpoint:
    path: /ui/search.html?q=Reutlingen,+Baden-Württemberg,+Germany
    method: GET
    data_selector: records
    params: {}
- name: Rostock
  endpoint:
    path: /ui/search.html?q=Rostock,+Mecklenburg-Vorpommern,+Germany
    method: GET
    data_selector: records
    params: {}
- name: Saarbrücken
  endpoint:
    path: /ui/search.html?q=Saarbrücken,+Saarland,+Germany
    method: GET
    data_selector: records
    params: {}
- name: Salzgitter
  endpoint:
    path: /ui/search.html?q=Salzgitter,+Lower+Saxony,+Germany
    method: GET
    data_selector: records
    params: {}
- name: Siegen
  endpoint:
    path: /ui/search.html?q=Siegen,+North+Rhine-Westphalia,+Germany
    method: GET
    data_selector: records
    params: {}
- name: Solingen
  endpoint:
    path: /ui/search.html?q=Solingen,+North+Rhine-Westphalia,+Germany
    method: GET
    data_selector: records
    params: {}
- name: Stuttgart
  endpoint:
    path: /ui/search.html?q=Stuttgart,+Baden-Württemberg,+Germany
    method: GET
    data_selector: records
    params: {}
- name: Trier
  endpoint:
    path: /ui/search.html?q=Trier,+Rhineland-Palatinate,+Germany
    method: GET
    data_selector: records
    params: {}
- name: Ulm
  endpoint:
    path: /ui/search.html?q=Ulm,+Baden-Württemberg,+Germany
    method: GET
    data_selector: records
    params: {}
- name: Wiesbaden
  endpoint:
    path: /ui/search.html?q=Wiesbaden,+Hesse,+Germany
    method: GET
    data_selector: records
    params: {}
- name: Wolfsburg
  endpoint:
    path: /ui/search.html?q=Wolfsburg,+Lower+Saxony,+Germany
    method: GET
    data_selector: records
    params: {}
- name: Wuppertal
  endpoint:
    path: /ui/search.html?q=Wuppertal,+North+Rhine-Westphalia,+Germany
    method: GET
    data_selector: records
    params: {}
- name: Würzburg
  endpoint:
    path: /ui/search.html?q=Würzburg,+Bavaria,+Germany
    method: GET
    data_selector: records
    params: {}
- name: place_lists
  endpoint:
    path: /places
    method: GET
    data_selector: place_lists
    params: {}
- name: components_are_connect_sparsified
  endpoint:
    path: /superblockify/partitioning/checks/components_are_connect_sparsified
    method: GET
- name: components_are_connected
  endpoint:
    path: /superblockify/partitioning/checks/components_are_connected
    method: GET
- name: is_valid_partitioning
  endpoint:
    path: /superblockify/partitioning/checks/is_valid_partitioning
    method: GET
- name: nodes_and_edges_are_contained_in_exactly_one_subgraph
  endpoint:
    path: /superblockify/partitioning/checks/nodes_and_edges_are_contained_in_exactly_one_subgraph
    method: GET
- name: representative_nodes_are_contained_in_subgraph
  endpoint:
    path: /superblockify/partitioning/checks/representative_nodes_are_contained_in_subgraph
    method: GET
- name: plot_component_graph
  endpoint:
    path: /superblockify/partitioning/plot/plot_component_graph
    method: GET
- name: plot_component_rank_size
  endpoint:
    path: /superblockify/partitioning/plot/plot_component_rank_size
    method: GET
- name: plot_partition_graph
  endpoint:
    path: /superblockify/partitioning/plot/plot_partition_graph
    method: GET
- name: plot_speed_un_restricted
  endpoint:
    path: /superblockify/partitioning/plot/plot_speed_un_restricted
    method: GET
- name: plot_subgraph_component_size
  endpoint:
    path: /superblockify/partitioning/plot/plot_subgraph_component_size
    method: GET
- name: find_representative_node_id
  endpoint:
    path: /superblockify/partitioning/representative/find_representative_node_id
    method: GET
- name: set_representative_nodes
  endpoint:
    path: /superblockify/partitioning/representative/set_representative_nodes
    method: GET
- name: add_edge_travel_times_restricted
  endpoint:
    path: /superblockify/partitioning/speed/add_edge_travel_times_restricted
    method: GET
- name: get_key_figures
  endpoint:
    path: /superblockify/partitioning/utils/get_key_figures
    method: GET
- name: get_new_node_id
  endpoint:
    path: /superblockify/partitioning/utils/get_new_node_id
    method: GET
- name: reduce_graph
  endpoint:
    path: /superblockify/partitioning/utils/reduce_graph
    method: GET
- name: remove_dead_ends_directed
  endpoint:
    path: /superblockify/partitioning/utils/remove_dead_ends_directed
    method: GET
- name: save_to_gpkg
  endpoint:
    path: /superblockify/partitioning/utils/save_to_gpkg
    method: GET
- name: show_graph_stats
  endpoint:
    path: /superblockify/partitioning/utils/show_graph_stats
    method: GET
- name: show_highway_stats
  endpoint:
    path: /superblockify/partitioning/utils/show_highway_stats
    method: GET
- name: split_up_isolated_edges_directed
  endpoint:
    path: /superblockify/partitioning/utils/split_up_isolated_edges_directed
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: add_edge_population
  endpoint:
    path: /population/approximation/add_edge_population
    method: GET
- name: get_edge_population
  endpoint:
    path: /population/approximation/get_edge_population
    method: GET
    params:
      batch_size: 10000
- name: get_population_area
  endpoint:
    path: /population/approximation/get_population_area
    method: GET
- name: load_ghsl_as_polygons
  endpoint:
    path: /population/approximation/load_ghsl_as_polygons
    method: GET
- name: population_fraction
  endpoint:
    path: /population/approximation/population_fraction
    method: GET
- name: download_ghsl
  endpoint:
    path: /population/ghsl/download_ghsl
    method: GET
    params:
      save_dir: /home/runner/work/superblockify/superblockify/data/ghsl
      timeout: 60
- name: get_ghsl
  endpoint:
    path: /population/ghsl/get_ghsl
    method: GET
- name: get_ghsl_urls
  endpoint:
    path: /population/ghsl/get_ghsl_urls
    method: GET
- name: resample_load_window
  endpoint:
    path: /population/ghsl/resample_load_window
    method: GET
- name: row_col
  endpoint:
    path: /population/ghsl/row_col
    method: GET
- name: add_edge_cells
  endpoint:
    path: /superblockify/population/tessellation/add_edge_cells
    method: POST
- name: edges_to_points
  endpoint:
    path: /superblockify/population/tessellation/edges_to_points
    method: POST
- name: get_edge_cells
  endpoint:
    path: /superblockify/population/tessellation/get_edge_cells
    method: POST
- name: get_edge_polygons
  endpoint:
    path: /superblockify/population/tessellation/get_edge_polygons
    method: POST
- name: reconstruct_edge_cells
  endpoint:
    path: /superblockify/population/tessellation/reconstruct_edge_cells
    method: POST
- name: components_are_connect_sparsified
  endpoint:
    path: /superblockify/partitioning/checks/components_are_connect_sparsified
    method: GET
- name: components_are_connected
  endpoint:
    path: /superblockify/partitioning/checks/components_are_connected
    method: GET
- name: is_valid_partitioning
  endpoint:
    path: /superblockify/partitioning/checks/is_valid_partitioning
    method: GET
- name: nodes_and_edges_are_contained_in_exactly_one_subgraph
  endpoint:
    path: /superblockify/partitioning/checks/nodes_and_edges_are_contained_in_exactly_one_subgraph
    method: GET
- name: representative_nodes_are_contained_in_subgraph
  endpoint:
    path: /superblockify/partitioning/checks/representative_nodes_are_contained_in_subgraph
    method: GET
- name: plot_component_graph
  endpoint:
    path: /superblockify/partitioning/plot/plot_component_graph
    method: GET
- name: plot_component_rank_size
  endpoint:
    path: /superblockify/partitioning/plot/plot_component_rank_size
    method: GET
- name: plot_partition_graph
  endpoint:
    path: /superblockify/partitioning/plot/plot_partition_graph
    method: GET
- name: plot_speed_un_restricted
  endpoint:
    path: /superblockify/partitioning/plot/plot_speed_un_restricted
    method: GET
- name: plot_subgraph_component_size
  endpoint:
    path: /superblockify/partitioning/plot/plot_subgraph_component_size
    method: GET
- name: find_representative_node_id
  endpoint:
    path: /superblockify/partitioning/representative/find_representative_node_id
    method: GET
- name: set_representative_nodes
  endpoint:
    path: /superblockify/partitioning/representative/set_representative_nodes
    method: GET
- name: add_edge_travel_times_restricted
  endpoint:
    path: /superblockify/partitioning/speed/add_edge_travel_times_restricted
    method: GET
- name: get_key_figures
  endpoint:
    path: /superblockify/partitioning/utils/get_key_figures
    method: GET
- name: get_new_node_id
  endpoint:
    path: /superblockify/partitioning/utils/get_new_node_id
    method: GET
- name: reduce_graph
  endpoint:
    path: /superblockify/partitioning/utils/reduce_graph
    method: GET
- name: remove_dead_ends_directed
  endpoint:
    path: /superblockify/partitioning/utils/remove_dead_ends_directed
    method: GET
- name: save_to_gpkg
  endpoint:
    path: /superblockify/partitioning/utils/save_to_gpkg
    method: GET
- name: show_graph_stats
  endpoint:
    path: /superblockify/partitioning/utils/show_graph_stats
    method: GET
- name: show_highway_stats
  endpoint:
    path: /superblockify/partitioning/utils/show_highway_stats
    method: GET
- name: split_up_isolated_edges_directed
  endpoint:
    path: /superblockify/partitioning/utils/split_up_isolated_edges_directed
    method: GET
- name: add_edge_cells
  endpoint:
    path: /superblockify/population/tessellation/add_edge_cells
    method: POST
    data_selector: edge attributes
- name: edges_to_points
  endpoint:
    path: /superblockify/population/tessellation/edges_to_points
    method: POST
    data_selector: points
- name: get_edge_cells
  endpoint:
    path: /superblockify/population/tessellation/get_edge_cells
    method: POST
    data_selector: tessellation cells
- name: get_edge_polygons
  endpoint:
    path: /superblockify/population/tessellation/get_edge_polygons
    method: POST
    data_selector: edges
- name: reconstruct_edge_cells
  endpoint:
    path: /superblockify/population/tessellation/reconstruct_edge_cells
    method: POST
    data_selector: Voronoi cells
notes:
- superblockify version 1.0.1
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Uses Dijkstra’s algorithm for shortest path calculations
- Graph representations can be converted to sparse format
- For usage with a Partitioner, see calculate_partitioning_distance_matrix.
- The distance between nodes may vary based on graph restrictions.
- Shortest paths can be reconstructed from the predecessor matrix.
- The passed partitions is a dictionary with the partition names as keys and the partition
  as value.
- The most obvious difference between the predecessor graphs is that the paths to
  node 17 go through the sparsified, black nodes.
- The second approach (unrestricted, using predecessor matrix) only shows one path,
  as such predecessor matrix is only able to store one path per node pair.
- The comparison between the node betweenness shows the same. The first approaches
  yield mostly the same results, but 2 and 0 as predecessors of 18 differ.
- The maximal difference is just 1.1%.
- When sorting after the linearly scaled edge betweenness for restricted paths, we
  see mostly sparsified nodes at the top.
- Uses 100m resolution, 2025 projection data
- Dataset available in 5-year intervals and multiple resolutions
- The dataset is available in 5-year intervals and in resolutions of 100m, 1km, 3
  arcsec, and 30 arcsec.
- The files are under /GHS_POP_E2025_GLOBE_R2023A_54009_100/V1-0/tiles/
- Results are based on governmental census data
- Predictions may vary in accuracy depending on data source
- In 100m resolution, the file is 4.9 GB (compressed).
- The whole dataset is in World Mollweide (ESRI:54009) projection for the 100m and
  1km resolution.
- The predictions are based on governmental census.
- The graph must be in a projected coordinate system.
- Logger configuration is done using the `logging.cfg` file.
- The logger for this module is named `superblockify`.
- This class is an abstract base class and should not be instantiated directly.
- Output CRS is World Mollweide.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'INVALID_GRAPH: Check that the graph structure is valid'
- 'UNREACHABLE_NODES: Ensure all nodes are connected in the graph'
- 'ValueError: If partitions don’t have unique names.'
- 'ValueError: If the partitions overlap node-wise.'
- 'ValueError: If the graph is not in a projected coordinate system.'
- 'ValueError: If the limit and the edge points are disjoint.'
- 'ValueError: If the graph already has population and area attributes and overwrite
  is False.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Config
client:
  base_url: https://jeodpp.jrc.ec.europa.eu/ftp/jrc-opendata/GHSL
  headers:
    Accept: application/json
source_metadata: null
