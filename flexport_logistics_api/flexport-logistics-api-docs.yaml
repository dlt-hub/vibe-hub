resources:
- name: Bundles
  endpoint:
    path: /tag/Bundles
    method: GET
- name: Inbounds
  endpoint:
    path: /tag/Inbounds
    method: GET
- name: Orders
  endpoint:
    path: /tag/Orders
    method: GET
- name: Parcels
  endpoint:
    path: /tag/Parcels
    method: GET
- name: Products
  endpoint:
    path: /tag/Products
    method: GET
- name: Reports
  endpoint:
    path: /tag/Reports
    method: GET
- name: Returns
  endpoint:
    path: /tag/Returns
    method: GET
- name: Webhooks
  endpoint:
    path: /tag/Webhooks
    method: GET
- name: bundles
  endpoint:
    path: /logistics/api/2025-03/bundles
    method: GET
    data_selector: bundles
    params:
      limit: 20
- name: bundle_inventory
  endpoint:
    path: /logistics/api/2025-03/bundles/{bundleId}/inventory
    method: GET
    data_selector: availableUnits
    params: {}
- name: create_bundle
  endpoint:
    path: /logistics/api/2025-03/bundles
    method: POST
    data_selector: bundleId
    params: {}
- name: get_bundle
  endpoint:
    path: /logistics/api/2025-03/bundles/{bundleId}
    method: GET
    data_selector: externalBundleId
    params: {}
- name: get_bundle
  endpoint:
    path: /logistics/api/2025-03/bundles/{bundleId}
    method: GET
- name: get_bundles
  endpoint:
    path: /logistics/api/2025-03/bundles
    method: GET
    params:
      limit: '20'
- name: create_bundle
  endpoint:
    path: /logistics/api/2025-03/bundles
    method: POST
- name: get_bundle_inventory
  endpoint:
    path: /logistics/api/2025-03/bundles/{bundleId}/inventory
    method: GET
- name: storage_warehouses
  endpoint:
    path: /inbounds/storage_warehouses
    method: GET
    data_selector: Array
    params: {}
- name: storage_warehouses
  endpoint:
    path: /logistics/api/2025-03/inbounds/storage_warehouses
    method: GET
    data_selector: array
    params: {}
- name: create_shipment
  endpoint:
    path: /logistics/api/2025-03/inbounds/shipments
    method: POST
    data_selector: id
- name: get_shipments
  endpoint:
    path: /logistics/api/2025-03/inbounds/shipments
    method: GET
    data_selector: '[]'
- name: create_shipment
  endpoint:
    path: /logistics/api/2025-03/inbounds/shipments
    method: POST
    data_selector: ''
    params: {}
- name: get_shipments
  endpoint:
    path: /logistics/api/2025-03/inbounds/shipments
    method: GET
    data_selector: ''
    params: {}
- name: inbound_shipment
  endpoint:
    path: /get/logistics/api/2025-03/inbounds/shipments/{shipmentId}
    method: GET
    data_selector: status
    params:
      shipmentId: required
- name: shipment_document
  endpoint:
    path: /get/logistics/api/2025-03/inbounds/shipments/{shipmentId}/document
    method: GET
    data_selector: ready
    params:
      shipmentId: required
      documentOption: required
      documentFormat: required
- name: shipment
  endpoint:
    path: /{shipmentId}
    method: GET
    data_selector: status
    params:
      shipmentId: required
- name: shipment_document
  endpoint:
    path: /{shipmentId}/document
    method: GET
    data_selector: ready
    params:
      shipmentId: required
      documentOption: required
      documentFormat: required
- name: update_shipment
  endpoint:
    path: /logistics/api/2025-03/inbounds/shipments/{shipmentId}/update
    method: PATCH
    data_selector: addresses
    params: {}
- name: get_quotes
  endpoint:
    path: /logistics/api/2025-03/inbounds/shipments/{shipmentId}/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: request_quotes
  endpoint:
    path: /logistics/api/2025-03/inbounds/shipments/{shipmentId}/quotes
    method: POST
    data_selector: quotes
    params: {}
- name: buy_quote
  endpoint:
    path: /logistics/api/2025-03/inbounds/shipments/{shipmentId}/quotes/buy
    method: POST
    data_selector: transactions
    params: {}
- name: update_shipment
  endpoint:
    path: /logistics/api/2025-03/inbounds/shipments/{shipmentId}/update
    method: PATCH
- name: get_quotes
  endpoint:
    path: /logistics/api/2025-03/inbounds/shipments/{shipmentId}/quotes
    method: GET
- name: begin_async_request_quotes
  endpoint:
    path: /logistics/api/2025-03/inbounds/shipments/{shipmentId}/quotes
    method: POST
- name: begin_async_request_buy_quote
  endpoint:
    path: /logistics/api/2025-03/inbounds/shipments/{shipmentId}/quotes/buy
    method: POST
- name: inbound_quotes
  endpoint:
    path: /logistics/api/2025-03/inbounds/shipments/{shipmentId}/quotes/buy
    method: GET
    params:
      shipmentId: required
      shippingOption: string
- name: inbound_warehouses
  endpoint:
    path: /logistics/api/2025-03/inbounds/warehouses
    method: GET
    params:
      fetchFulfillmentCentres: boolean
      fetchStorageWarehouses: boolean
- name: inbound_quotes
  endpoint:
    path: /logistics/api/2025-03/inbounds/shipments/{shipmentId}/quotes/buy
    method: GET
    params:
      shipmentId: required
      shippingOption: string (InboundShippingOption)
- name: inbound_warehouses
  endpoint:
    path: /logistics/api/2025-03/inbounds/warehouses
    method: GET
    params:
      fetchFulfillmentCentres: boolean
      fetchStorageWarehouses: boolean
- name: bundles
  endpoint:
    path: /bundles
    method: get
    data_selector: bundles
- name: inbounds
  endpoint:
    path: /inbounds
    method: get
    data_selector: inbounds
- name: orders
  endpoint:
    path: /orders
    method: get
    data_selector: orders
- name: Bundles
  endpoint:
    path: /2025-03/tag/Bundles
    method: GET
- name: Inbounds
  endpoint:
    path: /2025-03/tag/Inbounds
    method: GET
- name: Orders
  endpoint:
    path: /2025-03/tag/Orders
    method: POST
- name: Outbounds
  endpoint:
    path: /2025-03/tag/Outbounds
    method: POST
- name: Parcels
  endpoint:
    path: /2025-03/tag/Parcels
    method: POST
- name: Products
  endpoint:
    path: /2025-03/tag/Products
    method: POST
- name: Reports
  endpoint:
    path: /2025-03/tag/Reports
    method: POST
- name: Returns
  endpoint:
    path: /2025-03/tag/Returns
    method: POST
- name: CreateOrder
  endpoint:
    path: /logistics/api/2025-03/orders
    method: POST
    data_selector: OrderModel202407
- name: Bundles
  endpoint:
    path: /2025-03/tag/Bundles
    method: GET
- name: Inbounds
  endpoint:
    path: /2025-03/tag/Inbounds
    method: GET
- name: Orders
  endpoint:
    path: /2025-03/tag/Orders
    method: POST
- name: Outbounds
  endpoint:
    path: /2025-03/tag/Outbounds
    method: GET
- name: Parcels
  endpoint:
    path: /2025-03/tag/Parcels
    method: POST
- name: Products
  endpoint:
    path: /2025-03/tag/Products
    method: GET
- name: Reports
  endpoint:
    path: /2025-03/tag/Reports
    method: GET
- name: Returns
  endpoint:
    path: /2025-03/tag/Returns
    method: POST
- name: GetOrder
  endpoint:
    path: /orders/{orderId}
    method: GET
    data_selector: OrderModel202407
- name: CreateOrder
  endpoint:
    path: /logistics/api/2025-03/orders
    method: POST
    data_selector: OrderModel202407
- name: GetOrderByExternalId
  endpoint:
    path: /external_id/{externalOrderId}
    method: GET
    data_selector: OrderModel
    params:
      externalOrderId: required
- name: FulfillmentOrder
  endpoint:
    path: /orders/{orderId}
    method: GET
    data_selector: OrderModel202407
- name: RetryOrder
  endpoint:
    path: /orders/{orderId}/retry
    method: POST
- name: GetOrderByExternalId
  endpoint:
    path: /orders/external_id/{externalOrderId}
    method: GET
    data_selector: OrderModel
    params:
      externalOrderId: string
- name: CancelOrder
  endpoint:
    path: /{orderId}/cancel
    method: POST
- name: RetryOrder
  endpoint:
    path: /logistics/api/2025-03/orders/{orderId}/retry
    method: POST
    data_selector: OrderModel
- name: cancel_order
  endpoint:
    path: /orders/{orderId}/cancel
    method: POST
    data_selector: OrderModel
    params:
      orderId: string
- name: Bundles
  endpoint:
    path: /2025-03/tag/Bundles
    method: GET
- name: Inbounds
  endpoint:
    path: /2025-03/tag/Inbounds
    method: GET
- name: Orders
  endpoint:
    path: /2025-03/tag/Orders
    method: GET
- name: Outbounds
  endpoint:
    path: /2025-03/tag/Outbounds
    method: GET
- name: Parcels
  endpoint:
    path: /2025-03/tag/Parcels
    method: GET
- name: Products
  endpoint:
    path: /2025-03/tag/Products
    method: GET
- name: Reports
  endpoint:
    path: /2025-03/tag/Reports
    method: GET
- name: Returns
  endpoint:
    path: /2025-03/tag/Returns
    method: GET
- name: create_order
  endpoint:
    path: /logistics/api/2025-03/orders/rs
    method: POST
    data_selector: order
    params: {}
- name: create_order
  endpoint:
    path: /logistics/api/2025-03/orders/rs
    method: POST
    data_selector: orderId
- name: order
  endpoint:
    path: /{orderId}
    method: GET
    data_selector: order
    params:
      orderId: required
- name: order
  endpoint:
    path: /{orderId}
    method: GET
    data_selector: orderId
    params:
      orderId: required
- name: Get Order By External ID
  endpoint:
    path: /logistics/api/2025-03/orders/rs/external_id/{externalId}
    method: GET
    data_selector: order
    params:
      externalId: required
- name: Get Shipment Attachment Url
  endpoint:
    path: /logistics/api/2025-03/orders/rs/{shipmentId}/attachments
    method: POST
    data_selector: uploadUrl
    params:
      shipmentId: required
- name: CancelOrder
  endpoint:
    path: /logistics/api/2025-03/orders/rs/{orderId}/cancel
    method: POST
    data_selector: status
    params:
      orderId: required
- name: order_by_external_id
  endpoint:
    path: /logistics/api/2025-03/orders/rs/external_id/{externalId}
    method: GET
    data_selector: orderId
    params:
      externalId: required
- name: shipment_attachment_url
  endpoint:
    path: /logistics/api/2025-03/orders/rs/{shipmentId}/attachments
    method: POST
    data_selector: uploadUrl
    params:
      shipmentId: required
- name: cancel_order
  endpoint:
    path: /logistics/api/2025-03/orders/rs/{orderId}/cancel
    method: POST
    data_selector: status
    params:
      orderId: required
- name: Bundles
  endpoint:
    path: /2025-03/tag/Bundles
    method: GET
- name: Inbounds
  endpoint:
    path: /2025-03/tag/Inbounds
    method: GET
- name: Orders
  endpoint:
    path: /2025-03/tag/Orders
    method: GET
- name: Outbounds
  endpoint:
    path: /2025-03/tag/Outbounds
    method: GET
- name: Parcels
  endpoint:
    path: /2025-03/tag/Parcels
    method: GET
- name: Products
  endpoint:
    path: /2025-03/tag/Products
    method: GET
- name: Reports
  endpoint:
    path: /2025-03/tag/Reports
    method: GET
- name: Returns
  endpoint:
    path: /2025-03/tag/Returns
    method: GET
- name: Webhooks
  endpoint:
    path: /2025-03/tag/Webhooks
    method: GET
- name: Bundles
  endpoint:
    path: /2025-03/tag/Bundles
    method: GET
- name: Inbounds
  endpoint:
    path: /2025-03/tag/Inbounds
    method: GET
- name: OAuth
  endpoint:
    path: /2025-03/tag/OAuth
    method: GET
- name: Orders
  endpoint:
    path: /2025-03/tag/Orders
    method: POST
- name: Outbounds
  endpoint:
    path: /2025-03/tag/Outbounds
    method: POST
- name: Parcels
  endpoint:
    path: /2025-03/tag/Parcels
    method: POST
- name: Products
  endpoint:
    path: /2025-03/tag/Products
    method: GET
- name: Reports
  endpoint:
    path: /2025-03/tag/Reports
    method: POST
- name: Returns
  endpoint:
    path: /2025-03/tag/Returns
    method: GET
- name: Webhooks
  endpoint:
    path: /2025-03/tag/Webhooks
    method: POST
- name: create_parcel
  endpoint:
    path: /logistics/api/2025-03/parcels
    method: POST
    data_selector: customerParcelId
- name: cancel_parcel
  endpoint:
    path: /logistics/api/2025-03/parcels/cancel
    method: POST
    data_selector: parcelId
- name: get_parcel_by_id
  endpoint:
    path: /logistics/api/2025-03/parcels/{parcelId}
    method: GET
    data_selector: parcelId
- name: get_parcel_tracking_info
  endpoint:
    path: /logistics/api/2025-03/parcels/{parcelId}/tracking
    method: GET
    data_selector: parcelId
- name: tracking_information
  endpoint:
    path: /logistics/api/2025-03/parcels/tracking/{trackingCode}
    method: GET
    data_selector: application/json
- name: tracking_url
  endpoint:
    path: /logistics/api/2025-03/parcels/{parcelId}/tracking_url
    method: GET
    data_selector: application/json
- name: parcel_quote
  endpoint:
    path: /logistics/api/2025-03/parcels/quote
    method: POST
    data_selector: application/json
- name: bulk_parcel_job
  endpoint:
    path: /logistics/api/2025-03/parcels/jobs/{id}
    method: GET
    data_selector: application/json
- name: parcel_tracking
  endpoint:
    path: /logistics/api/2025-03/parcels/tracking/{trackingCode}
    method: GET
    data_selector: ParcelTrackingAPIGetResponse
    params: {}
- name: parcel_tracking_url
  endpoint:
    path: /logistics/api/2025-03/parcels/{parcelId}/tracking_url
    method: GET
    data_selector: string
    params: {}
- name: parcel_quote
  endpoint:
    path: /logistics/api/2025-03/parcels/quote
    method: POST
    data_selector: ParcelQuoteAPIResponse
    params: {}
- name: bulk_parcel_job
  endpoint:
    path: /logistics/api/2025-03/parcels/jobs/{id}
    method: GET
    data_selector: application/json
    params: {}
- name: bulk_parcel_job
  endpoint:
    path: /logistics/api/2025-03/parcels/jobs
    method: POST
    data_selector: parcels
    params:
      packslipRequired: true
- name: master_carton_label
  endpoint:
    path: /logistics/api/2025-03/parcels/master_carton
    method: POST
    data_selector: injectionLocation
    params:
      numBarcodes: 0
- name: link_master_carton_label
  endpoint:
    path: /logistics/api/2025-03/parcels/master_carton/link_parcel
    method: POST
    data_selector: masterCartonBarcode
- name: bulk_parcel_job
  endpoint:
    path: /logistics/api/2025-03/parcels/jobs
    method: POST
- name: master_carton_label
  endpoint:
    path: /logistics/api/2025-03/parcels/master_carton
    method: POST
- name: link_master_carton_label
  endpoint:
    path: /logistics/api/2025-03/parcels/master_carton/link_parcel
    method: POST
- name: products
  endpoint:
    path: /logistics/api/2025-03/products
    method: POST
    data_selector: products
- name: CreateProduct
  endpoint:
    path: /logistics/api/2025-03/products
    method: POST
    data_selector: response
    params: {}
- name: GetProducts
  endpoint:
    path: /products
    method: GET
    data_selector: Array
    params:
      limit: 20
      offset: 0
- name: GetProduct
  endpoint:
    path: /products/{logisticsSku}
    method: GET
    data_selector: Object
    params: {}
- name: GetProductAliases
  endpoint:
    path: /products/{logisticsSku}/aliases
    method: GET
    data_selector: Object
    params: {}
- name: GetInventory
  endpoint:
    path: /products/{logisticsSku}/inventory
    method: GET
    data_selector: Object
    params: {}
- name: GetAllInventory
  endpoint:
    path: /products/inventory/all
    method: GET
    data_selector: Array
    params:
      limit: 20
      offset: 0
- name: GetProducts
  endpoint:
    path: /products
    method: GET
    data_selector: Array
- name: GetProduct
  endpoint:
    path: /products/{logisticsSku}
    method: GET
    data_selector: '{}'
- name: GetProductAliases
  endpoint:
    path: /products/{logisticsSku}/aliases
    method: GET
    data_selector: '{}'
- name: GetInventory
  endpoint:
    path: /products/{logisticsSku}/inventory
    method: GET
    data_selector: '{}'
- name: GetAllInventory
  endpoint:
    path: /products/inventory/all
    method: GET
    data_selector: Array
- name: warehouse_details
  endpoint:
    path: /products/warehouse
    method: POST
    data_selector: logisticsSkus
    params: {}
- name: create_product_barcode
  endpoint:
    path: /products/{logisticsSku}/barcode
    method: POST
    data_selector: barcodeValue
    params: {}
- name: update_product
  endpoint:
    path: /products/update/{logisticsSku}
    method: PATCH
    data_selector: name
    params: {}
- name: warehouse_details
  endpoint:
    path: /products/warehouse
    method: POST
    data_selector: Array
    params: {}
- name: create_product_barcode
  endpoint:
    path: /products/{logisticsSku}/barcode
    method: POST
    data_selector: '{}'
    params: {}
- name: update_product
  endpoint:
    path: /products/update/{logisticsSku}
    method: PATCH
    data_selector: '{}'
    params: {}
- name: GetReportStatus
  endpoint:
    path: /2025-03/reports/{reportReference}
    method: GET
    data_selector: status
    params: {}
- name: GenerateReport
  endpoint:
    path: /2025-03/reports
    method: POST
    data_selector: reportReference
    params: {}
- name: GetReportStatus
  endpoint:
    path: /logistics/api/2025-03/reports/{reportReference}
    method: GET
    data_selector: status
    params:
      reportReference: required
- name: GenerateReport
  endpoint:
    path: /logistics/api/2025-03/reports
    method: POST
    data_selector: reportReference
    params:
      reportType: required
      startDate: optional
      endDate: optional
      isScheduled: optional
      jobId: optional
- name: ReturnsCreateOrder
  endpoint:
    path: /logistics/api/2025-03/returns
    method: post
    data_selector: return order details
- name: GetReturns
  endpoint:
    path: /logistics/api/2025-03/returns
    method: get
    data_selector: Paginated Return Orders
- name: ReturnsCancelOrder
  endpoint:
    path: /logistics/api/2025-03/returns/{returnId}/cancel
    method: post
- name: returns
  endpoint:
    path: /returns/{returnId}
    method: GET
    data_selector: returnDetails
    params:
      returnId: required
- name: ReturnsCreateOrder
  endpoint:
    path: /logistics/api/2025-03/returns
    method: post
    data_selector: Return order details
- name: GetReturns
  endpoint:
    path: /logistics/api/2025-03/returns
    method: get
    data_selector: Paginated Return Orders
- name: ReturnsCancelOrder
  endpoint:
    path: /logistics/api/2025-03/returns/{returnId}/cancel
    method: post
- name: returns
  endpoint:
    path: /returns/{returnId}
    method: GET
    data_selector: id
    params:
      returnId: required
- name: events
  endpoint:
    path: /2025-03/events
    method: GET
    data_selector: records
    params:
      limit: '100'
- name: events
  endpoint:
    path: /2025-03/events
    method: GET
    data_selector: array
    params:
      limit: 100
- name: CancelledWebhook
  endpoint:
    path: /shipment/cancelled
    method: POST
    data_selector: payload
- name: ShippedWebhook
  endpoint:
    path: /shipment/shipped
    method: POST
    data_selector: payload
- name: PartiallyShippedWebhook
  endpoint:
    path: /shipment/partiallyShipped
    method: POST
    data_selector: payload
- name: ReceivedWebhook
  endpoint:
    path: /inbound/received
    method: POST
    data_selector: payload
- name: ShipmentStatusChangedWebhook
  endpoint:
    path: /inbound/shipmentStatusChanged
    method: POST
    data_selector: payload
- name: TrackingUpdatedWebhook
  endpoint:
    path: /freight/trackingUpdated
    method: POST
    data_selector: payload
- name: OrderCancelledWebhook
  endpoint:
    path: /order/cancelled
    method: POST
    data_selector: payload
- name: OrderShippedWebhook
  endpoint:
    path: /order/shipped
    method: POST
    data_selector: payload
- name: OrderHeldWebhook
  endpoint:
    path: /order/held
    method: POST
    data_selector: payload
- name: CancelledWebhook
  endpoint:
    path: /Shipment.CancelledWebhook
    method: POST
    data_selector: logisticsAccountId
    params: {}
- name: ShippedWebhook
  endpoint:
    path: /Shipment.ShippedWebhook
    method: POST
    data_selector: logisticsAccountId
    params: {}
- name: PartiallyShippedWebhook
  endpoint:
    path: /Shipment.PartiallyShippedWebhook
    method: POST
    data_selector: logisticsAccountId
    params: {}
- name: ReceivedWebhook
  endpoint:
    path: /Inbound.ReceivedWebhook
    method: POST
    data_selector: logisticsAccountId
    params: {}
- name: ShipmentStatusChangedWebhook
  endpoint:
    path: /Inbound.ShipmentStatusChangedWebhook
    method: POST
    data_selector: logisticsAccountId
    params: {}
- name: TrackingUpdatedWebhook
  endpoint:
    path: /Freight.TrackingUpdatedWebhook
    method: POST
    data_selector: pickupDetails
    params: {}
- name: OrderCancelledWebhook
  endpoint:
    path: /Order.CancelledWebhook
    method: POST
    data_selector: logisticsAccountId
    params: {}
- name: OrderShippedWebhook
  endpoint:
    path: /Order.ShippedWebhook
    method: POST
    data_selector: logisticsAccountId
    params: {}
- name: OrderHeldWebhook
  endpoint:
    path: /Order.HeldWebhook
    method: POST
    data_selector: logisticsAccountId
    params: {}
- name: webhooks
  endpoint:
    path: /logistics/api/2025-03/webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: get_webhooks
  endpoint:
    path: /logistics/api/2025-03/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: get_webhook
  endpoint:
    path: /logistics/api/2025-03/webhooks/{webhookId}
    method: GET
    data_selector: webhook
    params: {}
- name: delete_webhook
  endpoint:
    path: /logistics/api/2025-03/webhooks/{webhookId}
    method: DELETE
    data_selector: status
    params: {}
- name: webhooks
  endpoint:
    path: /2025-03/webhooks
    method: POST
    data_selector: Webhook
    params: {}
- name: get_webhooks
  endpoint:
    path: /2025-03/webhooks
    method: GET
    data_selector: WebhookEntries
    params: {}
- name: get_webhook
  endpoint:
    path: /2025-03/webhooks/{webhookId}
    method: GET
    data_selector: WebhookDetails
    params: {}
- name: delete_webhook
  endpoint:
    path: /2025-03/webhooks/{webhookId}
    method: DELETE
    data_selector: WebhookDeletionStatus
    params: {}
notes:
- Access tokens do not expire unless revoked by the Administrator.
- Sandbox allows testing without moving physical goods.
- Uses OAuth2 with authorization code — requires user interaction for authorization
- The Orders API allows you to create orders, track order lifecycles and get current
  order status.
- The Orders API allows you to create orders, track order lifecycles and get current
  order status (including shipment information) for those orders.
- Parcel is currently only available to select merchants.
- The Events API allows you to retrieve historical events.
- All webhook events return a 200 status to indicate that the data was received successfully.
errors:
- '400 Bad Request: Bad Request.'
- '401 Unauthorized: The access token is invalid.'
- '403 Forbidden: Access token does not have permission to perform the requested operation.'
- '404 Not Found: The requested object cannot be found.'
- '409 Conflict: The object with the same identifier already exists.'
- '422 Unprocessable Content: The request is malformed.'
- '429 Too Many Requests: Too many requests in a given amount of time (rate limiting).'
- '423 Locked: Access to the Logistics API is locked and denied.'
- '5XX Internal Server Error: An internal error has occurred while processing the
  request.'
- '405001 Invalid redirect URI: The redirect URI specified as a callback for OAuth
  authorization is invalid.'
- '405002 Invalid client_id: Invalid client_id.'
- '405003 Missing scopes: Scopes were not provided.'
- '405004 Invalid scopes: Some of the scopes provided are invalid.'
- '405005 Invalid code: The one-time authorization code provided is invalid, expired,
  or has already been used.'
- '407001 Invalid order status: Operation cannot proceed, because order is in a state
  that does not allow it.'
- 401 Unauthorized
- 403 Forbidden
- 404 No bundle found with the bundleId provided
- 400 Bad Request
- 404 Shipment not found
- 404 Document not found
- 301 Redirect
- '400 Bad Request: Check required parameters are provided'
- '301 Redirect: Follow the redirect to the authorization endpoint'
- 404 Order not found
- 404 Not Found
- SELLER_NOT_FOUND - Seller is not registered or their registration process has not
  been completed.
- INVALID_INJECTION_LOCATION - Injection location is not valid or is not serviceable
  for the seller.
- EXCEEDS_MAX_DIMENSIONS - Dimensions of the parcel being processed exceed the maximum
  allowable limits set by the shipping carrier.
- INVALID_DESTINATION_ADDRESS - Destination address provided for the parcel is incorrect,
  incomplete or cannot be validated by the system.
- CUSTOMS_INFORMATION_REQUIRED - The essential customs details, which are required
  for international shipping, have not been provided or are incomplete.
- FAILED_TO_DETERMINE_ZONE - Unable to identify or determine the appropriate shipping
  zone for the parcel based on the provided destination address.
- SERVICE_LEVEL_UNSUPPORTED_FOR_DESTINATION - The level of service selected (e.g.
  Standard, Expedited, International) is not supported for the provided destination
  address.
- SERVICE_LEVEL_NOT_CONFIGURED - The service level selected is not configured for
  the seller.
- RETURNS_UNSUPPORTED - Returns are not supported for parcels associated with the
  seller.
- SELLER_NOT_FOUND
- INVALID_INJECTION_LOCATION
- EXCEEDS_MAX_DIMENSIONS
- INVALID_DESTINATION_ADDRESS
- CUSTOMS_INFORMATION_REQUIRED
- FAILED_TO_DETERMINE_ZONE
- SERVICE_LEVEL_UNSUPPORTED_FOR_DESTINATION
- SERVICE_LEVEL_NOT_CONFIGURED
- RETURNS_UNSUPPORTED
- PARCEL_NOT_FOUND
- LABEL_ALREADY_CANCELLED
- PARCEL_NOT_FOUND - The parcelId provided in the API request is incorrect.
- PARCEL_TRACKING_NOT_FOUND - Failed to find tracking details for parcel.
- INVALID_SELLER - The seller information appears to be incomplete or there are discrepancies
  with the seller's status.
- BULK_PARCEL_JOB_ID_NOT_FOUND - The bulk_parcel_job_ID provided in the API request
  is incorrect.
- 'INVALID_SELLER: The seller information appears to be incomplete or there are discrepancies
  with the seller''s status.'
- 'SELLER_NOT_FOUND: Seller is not registered or their registration process has not
  been completed.'
- 'MASTER_CARTON_NOT_FOUND: Master carton details with the provided barcode is unavailable.'
- INVALID_SELLER - The seller information appears to be incomplete or there are discrepancies
  with the seller's status
- SELLER_NOT_FOUND - Seller is not registered or their registration process has not
  been completed
- MASTER_CARTON_NOT_FOUND - Master carton details with the provided barcode is unavailable
- 422 Unprocessable Entity
- 404 A report with the given report reference was not found
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'Invalid request body: Ensure all required fields are included and correctly formatted.'
- 409 Conflict
auth_info:
  mentioned_objects:
  - identity
  - AuthorizationRedirect
  - TokenExchange
client:
  base_url: https://logistics-api.flexport.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
