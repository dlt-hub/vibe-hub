resources:
- name: media_upload_status
  endpoint:
    path: /media/upload/status
    method: GET
- name: create_media_metadata
  endpoint:
    path: /media/metadata/create
    method: POST
- name: simple_upload
  endpoint:
    path: /media/upload
    method: POST
- name: chunked_upload
  endpoint:
    path: /media/upload
    method: POST
- name: chunked_upload_append
  endpoint:
    path: /media/upload/append
    method: POST
- name: chunked_upload_finalize
  endpoint:
    path: /media/upload/finalize
    method: POST
- name: chunked_upload_init
  endpoint:
    path: /media/upload/init
    method: POST
- name: available_trends
  endpoint:
    path: /trends/available
    method: GET
- name: closest_trends
  endpoint:
    path: /trends/closest
    method: GET
- name: place_trends
  endpoint:
    path: /trends/place
    method: GET
- name: geo_id
  endpoint:
    path: /geo/id/:place_id
    method: GET
- name: reverse_geocode
  endpoint:
    path: /geo/reverse_geocode
    method: GET
- name: search_geo
  endpoint:
    path: /geo/search
    method: GET
- name: supported_languages
  endpoint:
    path: /help/languages
    method: GET
- name: rate_limit_status
  endpoint:
    path: /application/rate_limit_status
    method: GET
- name: home_timeline
  endpoint:
    path: /timeline/home
    method: GET
    data_selector: statuses
    params:
      count: '20'
- name: mentions_timeline
  endpoint:
    path: /statuses/mentions_timeline
    method: GET
    data_selector: statuses
    params:
      count: '20'
- name: user_timeline
  endpoint:
    path: /statuses/user_timeline
    method: GET
    data_selector: statuses
    params:
      count: '20'
- name: get_favorites
  endpoint:
    path: /1.1/favorites/list.json
    method: GET
    data_selector: statuses
- name: lookup_statuses
  endpoint:
    path: /1.1/statuses/lookup.json
    method: GET
    data_selector: statuses
- name: get_oembed
  endpoint:
    path: /1.1/statuses/oembed.json
    method: GET
    data_selector: html
- name: get_retweeter_ids
  endpoint:
    path: /1.1/statuses/retweeters/ids.json
    method: GET
    data_selector: ids
- name: get_retweets
  endpoint:
    path: /1.1/statuses/retweets/:id.json
    method: GET
    data_selector: retweets
- name: get_retweets_of_me
  endpoint:
    path: /1.1/statuses/retweets_of_me.json
    method: GET
    data_selector: statuses
- name: get_status
  endpoint:
    path: /1.1/statuses/show/:id.json
    method: GET
    data_selector: status
- name: create_favorite
  endpoint:
    path: /1.1/favorites/create.json
    method: POST
    data_selector: status
- name: destroy_favorite
  endpoint:
    path: /1.1/favorites/destroy.json
    method: POST
    data_selector: status
- name: destroy_status
  endpoint:
    path: /1.1/statuses/destroy/:id.json
    method: POST
    data_selector: status
- name: retweet
  endpoint:
    path: /1.1/statuses/retweet/:id.json
    method: POST
    data_selector: retweet
- name: unretweet
  endpoint:
    path: /1.1/statuses/unretweet/:id.json
    method: POST
    data_selector: status
- name: update_status
  endpoint:
    path: /1.1/statuses/update.json
    method: POST
    data_selector: status
- name: statuses_update
  endpoint:
    path: /statuses/update_with_media
    method: POST
    data_selector: Status
    params: {}
- name: search_tweets
  endpoint:
    path: /1.1/search/tweets.json
    method: GET
    data_selector: statuses
    params:
      q: ''
      count: ''
- name: home_timeline
  endpoint:
    path: /statuses/home_timeline
    method: GET
- name: mentions_timeline
  endpoint:
    path: /statuses/mentions_timeline
    method: GET
- name: user_timeline
  endpoint:
    path: /statuses/user_timeline
    method: GET
- name: favorites_list
  endpoint:
    path: /favorites/list
    method: GET
- name: statuses_lookup
  endpoint:
    path: /statuses/lookup
    method: GET
- name: statuses_oembed
  endpoint:
    path: /statuses/oembed
    method: GET
- name: statuses_retweeters_ids
  endpoint:
    path: /statuses/retweeters/ids
    method: GET
- name: statuses_retweets_id
  endpoint:
    path: /statuses/retweets/:id
    method: GET
- name: statuses_retweets_of_me
  endpoint:
    path: /statuses/retweets_of_me
    method: GET
- name: statuses_show_id
  endpoint:
    path: /statuses/show/:id
    method: GET
- name: favorites_create
  endpoint:
    path: /favorites/create
    method: POST
- name: favorites_destroy
  endpoint:
    path: /favorites/destroy
    method: POST
- name: statuses_destroy_id
  endpoint:
    path: /statuses/destroy/:id
    method: POST
- name: statuses_retweet_id
  endpoint:
    path: /statuses/retweet/:id
    method: POST
- name: statuses_unretweet_id
  endpoint:
    path: /statuses/unretweet/:id
    method: POST
- name: statuses_update
  endpoint:
    path: /statuses/update
    method: POST
- name: statuses_update_with_media
  endpoint:
    path: /statuses/update_with_media
    method: POST
- name: search_tweets
  endpoint:
    path: /search/tweets
    method: GET
- name: lists_list
  endpoint:
    path: /lists/list
    method: GET
- name: lists_members
  endpoint:
    path: /lists/members
    method: GET
- name: lists_members_show
  endpoint:
    path: /lists/members/show
    method: GET
- name: lists_memberships
  endpoint:
    path: /lists/memberships
    method: GET
- name: lists_ownerships
  endpoint:
    path: /lists/ownerships
    method: GET
- name: lists_show
  endpoint:
    path: /lists/show
    method: GET
- name: lists_statuses
  endpoint:
    path: /lists/statuses
    method: GET
- name: lists_subscribers
  endpoint:
    path: /lists/subscribers
    method: GET
- name: lists_subscribers_show
  endpoint:
    path: /lists/subscribers/show
    method: GET
- name: lists_subscriptions
  endpoint:
    path: /lists/subscriptions
    method: GET
- name: lists_create
  endpoint:
    path: /lists/create
    method: POST
- name: lists_destroy
  endpoint:
    path: /lists/destroy
    method: POST
- name: lists_members_create
  endpoint:
    path: /lists/members/create
    method: POST
- name: lists_members_create_all
  endpoint:
    path: /lists/members/create_all
    method: POST
- name: lists_members_destroy
  endpoint:
    path: /lists/members/destroy
    method: POST
- name: lists_members_destroy_all
  endpoint:
    path: /lists/members/destroy_all
    method: POST
- name: lists_subscribers_create
  endpoint:
    path: /lists/subscribers/create
    method: POST
- name: lists_subscribers_destroy
  endpoint:
    path: /lists/subscribers/destroy
    method: POST
- name: lists_update
  endpoint:
    path: /lists/update
    method: POST
- name: followers_ids
  endpoint:
    path: /followers/ids
    method: GET
- name: followers_list
  endpoint:
    path: /followers/list
    method: GET
- name: friends_ids
  endpoint:
    path: /friends/ids
    method: GET
- name: friends_list
  endpoint:
    path: /friends/list
    method: GET
- name: friendships_incoming
  endpoint:
    path: /friendships/incoming
    method: GET
- name: friendships_lookup
  endpoint:
    path: /friendships/lookup
    method: GET
- name: friendships_no_retweets_ids
  endpoint:
    path: /friendships/no_retweets/ids
    method: GET
- name: friendships_outgoing
  endpoint:
    path: /friendships/outgoing
    method: GET
- name: friendships_show
  endpoint:
    path: /friendships/show
    method: GET
- name: users_lookup
  endpoint:
    path: /users/lookup
    method: GET
- name: users_search
  endpoint:
    path: /users/search
    method: GET
- name: users_show
  endpoint:
    path: /users/show
    method: GET
- name: friendships_create
  endpoint:
    path: /friendships/create
    method: POST
- name: friendships_destroy
  endpoint:
    path: /friendships/destroy
    method: POST
- name: friendships_update
  endpoint:
    path: /friendships/update
    method: POST
- name: account_settings
  endpoint:
    path: /account/settings
    method: GET
- name: account_verify_credentials
  endpoint:
    path: /account/verify_credentials
    method: GET
- name: saved_searches_list
  endpoint:
    path: /saved_searches/list
    method: GET
- name: saved_searches_show_id
  endpoint:
    path: /saved_searches/show/:id
    method: GET
- name: users_profile_banner
  endpoint:
    path: /users/profile_banner
    method: GET
- name: account_remove_profile_banner
  endpoint:
    path: /account/remove_profile_banner
    method: POST
- name: account_settings_update
  endpoint:
    path: /account/settings
    method: POST
- name: account_update_profile
  endpoint:
    path: /account/update_profile
    method: POST
- name: account_update_profile_banner
  endpoint:
    path: /account/update_profile_banner
    method: POST
- name: account_update_profile_image
  endpoint:
    path: /account/update_profile_image
    method: POST
- name: saved_searches_create
  endpoint:
    path: /saved_searches/create
    method: POST
- name: saved_searches_destroy_id
  endpoint:
    path: /saved_searches/destroy/:id
    method: POST
- name: blocks_ids
  endpoint:
    path: /blocks/ids
    method: GET
- name: blocks_list
  endpoint:
    path: /blocks/list
    method: GET
- name: mutes_users_ids
  endpoint:
    path: /mutes/users/ids
    method: GET
- name: mutes_users_list
  endpoint:
    path: /mutes/users/list
    method: GET
- name: blocks_create
  endpoint:
    path: /blocks/create
    method: POST
- name: blocks_destroy
  endpoint:
    path: /blocks/destroy
    method: POST
- name: mutes_users_create
  endpoint:
    path: /mutes/users/create
    method: POST
- name: mutes_users_destroy
  endpoint:
    path: /mutes/users/destroy
    method: POST
- name: users_report_spam
  endpoint:
    path: /users/report_spam
    method: POST
- name: get_lists
  endpoint:
    path: /lists/list
    method: GET
    data_selector: lists
    params:
      user_id: user_id
      screen_name: screen_name
      reverse: boolean
- name: get_list_members
  endpoint:
    path: /lists/members
    method: GET
    data_selector: users
    params:
      list_id: list_id
      slug: slug
      owner_screen_name: owner_screen_name
      owner_id: owner_id
      count: count
      cursor: cursor
      include_entities: boolean
      skip_status: boolean
- name: get_list_memberships
  endpoint:
    path: /lists/memberships
    method: GET
    data_selector: lists
    params:
      user_id: user_id
      screen_name: screen_name
      count: count
      cursor: cursor
      filter_to_owned_lists: boolean
- name: get_list_ownerships
  endpoint:
    path: /lists/ownerships
    method: GET
    data_selector: lists
    params:
      user_id: user_id
      screen_name: screen_name
      count: count
      cursor: cursor
- name: create_list
  endpoint:
    path: /lists/create
    method: POST
    data_selector: list
    params:
      name: name
      mode: mode
      description: description
- name: remove_list_member
  endpoint:
    path: /lists/members/destroy
    method: POST
    data_selector: List
    params: {}
- name: remove_list_members
  endpoint:
    path: /lists/members/destroy_all
    method: POST
    data_selector: List
    params: {}
- name: subscribe_list
  endpoint:
    path: /lists/subscribers/create
    method: POST
    data_selector: List
    params: {}
- name: unsubscribe_list
  endpoint:
    path: /lists/subscribers/destroy
    method: POST
    data_selector: List
    params: {}
- name: update_list
  endpoint:
    path: /lists/update
    method: POST
    data_selector: List
    params: {}
- name: account_settings
  endpoint:
    path: /1.1/account/settings.json
    method: GET
    data_selector: settings
- name: verify_credentials
  endpoint:
    path: /1.1/account/verify_credentials.json
    method: GET
    data_selector: user
- name: saved_searches
  endpoint:
    path: /1.1/saved_searches/list.json
    method: GET
    data_selector: saved_searches
- name: blocks
  endpoint:
    path: /1.1/blocks/list.json
    method: GET
    data_selector: users
- name: get_follower_ids
  endpoint:
    path: /followers/ids
    method: GET
    data_selector: ids
    params: {}
- name: get_followers
  endpoint:
    path: /followers/list
    method: GET
    data_selector: users
    params: {}
- name: get_friend_ids
  endpoint:
    path: /friends/ids
    method: GET
    data_selector: ids
    params: {}
- name: get_friends
  endpoint:
    path: /friends/list
    method: GET
    data_selector: users
    params: {}
- name: incoming_friendships
  endpoint:
    path: /friendships/incoming
    method: GET
    data_selector: ids
    params: {}
- name: lookup_friendships
  endpoint:
    path: /friendships/lookup
    method: GET
    data_selector: relationships
    params: {}
- name: no_retweets_friendships
  endpoint:
    path: /friendships/no_retweets/ids
    method: GET
    data_selector: ids
    params: {}
- name: outgoing_friendships
  endpoint:
    path: /friendships/outgoing
    method: GET
    data_selector: ids
    params: {}
- name: get_friendship
  endpoint:
    path: /friendships/show
    method: GET
    data_selector: relationship
    params: {}
- name: lookup_users
  endpoint:
    path: /users/lookup
    method: GET
    data_selector: users
    params: {}
- name: search_users
  endpoint:
    path: /users/search
    method: GET
    data_selector: users
    params: {}
- name: get_user
  endpoint:
    path: /users/show
    method: GET
    data_selector: user
    params: {}
- name: create_friendship
  endpoint:
    path: /friendships/create
    method: POST
    data_selector: user
    params: {}
- name: destroy_friendship
  endpoint:
    path: /friendships/destroy
    method: POST
    data_selector: user
    params: {}
- name: update_friendship
  endpoint:
    path: /friendships/update
    method: POST
    data_selector: relationship
    params: {}
- name: delete_direct_message
  endpoint:
    path: /direct_messages/events/destroy
    method: DELETE
    data_selector: event
    params:
      id: required
- name: get_direct_messages
  endpoint:
    path: /direct_messages/events/list
    method: GET
    data_selector: events
    params:
      count: optional
      cursor: optional
- name: get_direct_message
  endpoint:
    path: /direct_messages/events/show
    method: GET
    data_selector: event
    params:
      id: required
- name: send_direct_message
  endpoint:
    path: /direct_messages/events/new
    method: POST
    data_selector: event
    params:
      recipient_id: required
      text: required
      quick_reply_options: optional
      attachment_type: optional
      attachment_media_id: optional
      ctas: optional
- name: indicate_direct_message_typing
  endpoint:
    path: /direct_messages/typing
    method: POST
    data_selector: 'null'
    params:
      recipient_id: required
- name: mark_direct_message_read
  endpoint:
    path: /direct_messages/mark_read
    method: POST
    data_selector: 'null'
    params:
      last_read_event_id: required
      recipient_id: required
- name: available_trends
  endpoint:
    path: /trends/available
    method: GET
    data_selector: locations
    params: {}
- name: closest_trends
  endpoint:
    path: /trends/closest
    method: GET
    data_selector: locations
    params:
      lat: required
      long: required
- name: get_place_trends
  endpoint:
    path: /trends/place
    method: GET
    data_selector: trends
    params:
      id: required
      exclude: optional
- name: geo_id
  endpoint:
    path: /geo/id
    method: GET
    data_selector: place
    params:
      place_id: required
- name: reverse_geocode
  endpoint:
    path: /geo/reverse_geocode
    method: GET
    data_selector: places
    params: {}
- name: search_geo
  endpoint:
    path: /geo/search
    method: GET
    data_selector: places
    params: {}
- name: supported_languages
  endpoint:
    path: /help/languages
    method: GET
    data_selector: languages
    params: {}
- name: rate_limit_status
  endpoint:
    path: /application/rate_limit_status
    method: GET
    data_selector: resources
    params: {}
- name: extended_tweets
  endpoint:
    path: /statuses/show/:id
    method: GET
    data_selector: statuses
    params:
      tweet_mode: extended
- name: bookmarks
  endpoint:
    path: /2/users/:id/bookmarks
    method: GET
- name: likes
  endpoint:
    path: /2/users/:id/likes
    method: POST
- name: tweets
  endpoint:
    path: /2/tweets
    method: GET
- name: users
  endpoint:
    path: /2/users
    method: GET
- name: bookmarks
  endpoint:
    path: /users/id/bookmarks
    method: GET
- name: remove_bookmark
  endpoint:
    path: /users/id/bookmarks/tweet_id
    method: DELETE
- name: hide_reply
  endpoint:
    path: /tweets/id/hidden
    method: PUT
- name: unhide_reply
  endpoint:
    path: /tweets/id/hidden
    method: PUT
- name: likes
  endpoint:
    path: /likes
    method: POST
- name: unlike
  endpoint:
    path: /likes
    method: DELETE
- name: liking_users
  endpoint:
    path: /liking_users
    method: GET
- name: liked_tweets
  endpoint:
    path: /liked_tweets
    method: GET
- name: delete_tweet
  endpoint:
    path: /tweets/:id
    method: DELETE
- name: create_tweet
  endpoint:
    path: /tweets
    method: POST
- name: get_quote_tweets
  endpoint:
    path: /tweets/:id/quote_tweets
    method: GET
- name: search_all_tweets
  endpoint:
    path: /tweets/search/all
    method: GET
    data_selector: tweets
- name: search_recent_tweets
  endpoint:
    path: /tweets/search/recent
    method: GET
    data_selector: tweets
- name: unretweet
  endpoint:
    path: /retweets/:source_tweet_id
    method: DELETE
    data_selector: response
- name: get_retweeters
  endpoint:
    path: /tweets/:id/retweeted_by
    method: GET
    data_selector: response
- name: retweet
  endpoint:
    path: /retweets/:tweet_id
    method: POST
    data_selector: response
- name: tweets
  endpoint:
    path: /2/users/:id/tweets
    method: GET
    params:
      max_results: 10
- name: users_mentions
  endpoint:
    path: /users/:id/mentions
    method: GET
- name: home_timeline
  endpoint:
    path: /users/home_timeline
    method: GET
- name: users_tweets
  endpoint:
    path: /users/:id/tweets
    method: GET
- name: all_tweets_count
  endpoint:
    path: /tweets/counts/all
    method: GET
    data_selector: data
    params: {}
- name: recent_tweets_count
  endpoint:
    path: /tweets/counts/recent
    method: GET
    data_selector: data
    params: {}
- name: tweet_lookup
  endpoint:
    path: /tweets
    method: GET
    data_selector: data
    params: {}
- name: get_blocked
  endpoint:
    path: /users/blocks
    method: GET
- name: block
  endpoint:
    path: /users/blocking
    method: POST
- name: unblock
  endpoint:
    path: /users/unblock
    method: DELETE
- name: users_followers
  endpoint:
    path: /2/users/:id/followers
    method: GET
    params: {}
- name: users_following
  endpoint:
    path: /2/users/:id/following
    method: GET
    params: {}
- name: follow_user
  endpoint:
    path: /2/users/:source_user_id/following/:target_user_id
    method: POST
    params: {}
- name: unfollow_user
  endpoint:
    path: /2/users/:source_user_id/following/:target_user_id
    method: DELETE
    params: {}
- name: direct_message_events
  endpoint:
    path: /direct_messages/events
    method: GET
    params: {}
- name: list_tweets
  endpoint:
    path: /lists/:id/tweets
    method: GET
    params: {}
- name: search_spaces
  endpoint:
    path: /2/spaces/search
    method: GET
    data_selector: data
    params: {}
- name: get_spaces
  endpoint:
    path: /2/spaces
    method: GET
    data_selector: data
    params: {}
- name: get_space
  endpoint:
    path: /2/spaces/:id
    method: GET
    data_selector: data
    params: {}
- name: get_space_buyers
  endpoint:
    path: /2/spaces/:id/buyers
    method: GET
    data_selector: data
    params: {}
- name: get_space_tweets
  endpoint:
    path: /2/spaces/:id/tweets
    method: GET
    data_selector: data
    params: {}
- name: unfollow_list
  endpoint:
    path: /lists/unfollow
    method: DELETE
- name: get_list_followers
  endpoint:
    path: /lists/:id/followers
    method: GET
- name: get_followed_lists
  endpoint:
    path: /users/:id/followed_lists
    method: GET
- name: follow_list
  endpoint:
    path: /lists/follow
    method: POST
- name: get_list
  endpoint:
    path: /lists/:id
    method: GET
- name: get_owned_lists
  endpoint:
    path: /users/:id/owned_lists
    method: GET
- name: remove_list_member
  endpoint:
    path: /lists/id/members/user_id
    method: DELETE
- name: get_list_members
  endpoint:
    path: /lists/id/members
    method: GET
- name: get_list_memberships
  endpoint:
    path: /users/id/list_memberships
    method: GET
- name: add_list_member
  endpoint:
    path: /lists/id/members
    method: POST
- name: delete_list
  endpoint:
    path: /lists/id
    method: DELETE
- name: update_list
  endpoint:
    path: /lists/id
    method: PUT
- name: create_list
  endpoint:
    path: /lists
    method: POST
- name: add_rules
  endpoint:
    path: /tweets/search/stream/rules
    method: POST
- name: delete_rules
  endpoint:
    path: /tweets/search/stream/rules
    method: DELETE
- name: filter
  endpoint:
    path: /tweets/search/stream
    method: GET
- name: get_rules
  endpoint:
    path: /tweets/search/stream/rules
    method: GET
- name: sample
  endpoint:
    path: /tweets/sample/stream
    method: GET
- name: bookmarks
  endpoint:
    path: /2/users/:id/bookmarks
    method: GET
- name: likes
  endpoint:
    path: /2/users/:id/likes
    method: GET
- name: tweets
  endpoint:
    path: /2/tweets
    method: GET
- name: users
  endpoint:
    path: /2/users
    method: GET
- name: bookmarks
  endpoint:
    path: /2/users/:id/bookmarks
    method: GET
    data_selector: data
- name: hide_reply
  endpoint:
    path: /2/tweets/:id/hidden
    method: PUT
    data_selector: data
- name: unhide_reply
  endpoint:
    path: /2/tweets/:id/hidden
    method: DELETE
    data_selector: data
- name: like_tweet
  endpoint:
    path: /tweets/{tweet_id}/likes
    method: POST
- name: unlike_tweet
  endpoint:
    path: /tweets/{tweet_id}/likes
    method: DELETE
- name: get_liking_users
  endpoint:
    path: /tweets/{id}/liking_users
    method: GET
- name: get_liked_tweets
  endpoint:
    path: /users/{id}/liked_tweets
    method: GET
- name: delete_tweet
  endpoint:
    path: /tweets/delete/{id}
    method: DELETE
- name: create_tweet
  endpoint:
    path: /tweets
    method: POST
- name: get_quote_tweets
  endpoint:
    path: /tweets/{id}/quote_tweets
    method: GET
- name: unretweet
  endpoint:
    path: /tweets/{source_tweet_id}/retweets
    method: DELETE
- name: get_retweeters
  endpoint:
    path: /tweets/{id}/retweeted_by
    method: GET
- name: retweet
  endpoint:
    path: /tweets/{tweet_id}/retweets
    method: POST
- name: search_all_tweets
  endpoint:
    path: /2/tweets/search/all
    method: GET
    data_selector: data
    params:
      max_results: 10
- name: search_recent_tweets
  endpoint:
    path: /2/tweets/search/recent
    method: GET
    data_selector: data
    params:
      max_results: 10
- name: tweets
  endpoint:
    path: /2/users/:id/tweets
    method: GET
    params: {}
- name: users_mentions
  endpoint:
    path: /users/{id}/mentions
    method: GET
    data_selector: data
- name: home_timeline
  endpoint:
    path: /users/me/tweets
    method: GET
    data_selector: data
- name: users_tweets
  endpoint:
    path: /users/{id}/tweets
    method: GET
    data_selector: data
- name: tweet_counts_all
  endpoint:
    path: /tweets/counts/all
    method: GET
    data_selector: data
- name: tweet_counts_recent
  endpoint:
    path: /tweets/counts/recent
    method: GET
    data_selector: data
- name: tweet_lookup
  endpoint:
    path: /tweets/:id
    method: GET
    data_selector: data
- name: tweets_lookup
  endpoint:
    path: /tweets
    method: GET
    data_selector: data
- name: get_blocked
  endpoint:
    path: /2/users/:id/blocked
    method: GET
- name: block
  endpoint:
    path: /2/users/:id/blocking
    method: POST
- name: unfollow_user
  endpoint:
    path: /2/users/:id/following
    method: DELETE
- name: get_users_followers
  endpoint:
    path: /2/users/:id/followers
    method: GET
- name: get_users_following
  endpoint:
    path: /2/users/:id/following
    method: GET
- name: follow_user
  endpoint:
    path: /2/users/:id/following
    method: POST
- name: mute_user
  endpoint:
    path: /users/:id/muting
    method: POST
- name: unmute_user
  endpoint:
    path: /users/:id/muting
    method: DELETE
- name: get_muted_users
  endpoint:
    path: /users/muting
    method: GET
- name: get_user
  endpoint:
    path: /users/:id
    method: GET
- name: get_users
  endpoint:
    path: /users
    method: GET
- name: get_me
  endpoint:
    path: /users/me
    method: GET
- name: search_spaces
  endpoint:
    path: /spaces/search
    method: GET
    data_selector: results
- name: get_spaces
  endpoint:
    path: /spaces
    method: GET
    data_selector: results
- name: get_space
  endpoint:
    path: /spaces/{id}
    method: GET
    data_selector: results
- name: get_space_buyers
  endpoint:
    path: /spaces/{id}/buyers
    method: GET
    data_selector: results
- name: get_space_tweets
  endpoint:
    path: /spaces/{id}/tweets
    method: GET
    data_selector: results
- name: direct_message_events
  endpoint:
    path: /direct_messages/events
    method: GET
    params: {}
- name: create_direct_message
  endpoint:
    path: /direct_messages/events/new
    method: POST
    params: {}
- name: create_direct_message_conversation
  endpoint:
    path: /direct_messages/events/conversation/new
    method: POST
    params: {}
- name: list_tweets
  endpoint:
    path: /lists/:id/tweets
    method: GET
    params: {}
- name: list_followers
  endpoint:
    path: /lists/:id/followers
    method: GET
    data_selector: data
- name: followed_lists
  endpoint:
    path: /users/:id/followed_lists
    method: GET
    data_selector: data
- name: owned_lists
  endpoint:
    path: /users/:id/owned_lists
    method: GET
    data_selector: data
- name: list_details
  endpoint:
    path: /lists/:id
    method: GET
    data_selector: data
- name: remove_list_member
  endpoint:
    path: /lists/:id/members/:user_id
    method: DELETE
- name: get_list_members
  endpoint:
    path: /lists/:id/members
    method: GET
- name: get_list_memberships
  endpoint:
    path: /users/:id/list_memberships
    method: GET
- name: add_list_member
  endpoint:
    path: /lists/:id/members
    method: POST
- name: delete_list
  endpoint:
    path: /lists/:id
    method: DELETE
- name: update_list
  endpoint:
    path: /lists/:id
    method: PUT
- name: create_list
  endpoint:
    path: /lists
    method: POST
- name: DirectMessageEvent
  endpoint:
    path: /direct_messages/events
    method: GET
    data_selector: data
    params: {}
- name: List
  endpoint:
    path: /lists
    method: GET
    data_selector: data
    params: {}
- name: Media
  endpoint:
    path: /media
    method: GET
    data_selector: data
    params: {}
- name: place
  endpoint:
    path: /2/tweets
    method: GET
    data_selector: data
    params:
      expansions: geo.place_id
      place.fields: ''
- name: poll
  endpoint:
    path: /2/tweets
    method: GET
    data_selector: data
    params:
      expansions: attachments.poll_ids
      poll.fields: ''
- name: space
  endpoint:
    path: /2/spaces
    method: GET
    data_selector: data
    params: {}
- name: tweet
  endpoint:
    path: /2/tweets
    method: GET
    data_selector: data
- name: user
  endpoint:
    path: /2/users
    method: GET
    data_selector: data
- name: streaming
  endpoint:
    path: /streaming
    method: GET
- name: direct_messages
  endpoint:
    path: /2/direct_messages/events
    method: GET
    data_selector: data
- name: tweet
  endpoint:
    path: /2/tweets
    method: GET
    data_selector: data
    params:
      incremental: created_at
- name: user
  endpoint:
    path: /2/users
    method: GET
    data_selector: data
    params: {}
- name: media_metadata
  endpoint:
    path: /media/metadata
    method: POST
    data_selector: data
- name: statuses
  endpoint:
    path: /statuses
    method: GET
    data_selector: statuses
- name: tweets
  endpoint:
    path: /2/tweets
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /2/users
    method: GET
    data_selector: data
notes:
- Twitter API v1.1 Interface
- Wait on rate limit to replenish
- Twitter’s standard search API only searches against a sampling of recent Tweets
  published in the past 7 days.
- In API v1.1, the response format of the Search API has been improved to return Tweet
  objects more similar to the objects you’ll find across the REST API.
- You can create up to 1000 lists per account.
- Lists are limited to 5,000 members.
- Streams utilize Streaming HTTP protocol to deliver data through an open, streaming
  API connection.
- Tweepy uses the logging standard library module.
- Uses OAuth 2.0 Authorization Code Flow with PKCE
- This endpoint is only available to those users who have been approved for the Academic
  Research product track.
- The full-archive search endpoint returns the complete history of public Tweets matching
  a search query; since the first Tweet was created March 26, 2006.
- By default, a request will return Tweets from up to 30 days ago if the `start_time`
  parameter is not provided.
- 'Changed in version 4.5: Added `user_auth` parameter'
- By default, the most recent ten Tweets are returned per request.
- Using pagination, up to the most recent 800 Tweets can be retrieved.
- The full-archive search endpoint returns the complete history of public Tweets matching
  a search query.
- The recent Tweet counts endpoint returns count of Tweets from the last seven days
  that match a search query.
- When using OAuth 2.0 Authorization Code Flow with PKCE with user_auth=False, a request
  is made beforehand to Twitter’s API to determine the authenticating user’s ID.
- When using OAuth 2.0 Authorization Code Flow with PKCE with user_auth=False, a request
  is made beforehand to Twitter’s API to determine the authenticating user’s ID. This
  is cached and only done once per Client instance for each access token used.
- Handles various response events including connection errors and exceptions
- The recent search endpoint returns Tweets from the last seven days that match a
  search query.
- When using OAuth 2.0 Authorization Code Flow with PKCE with `user_auth=False`, a
  request is made beforehand to Twitter’s API to determine the authenticating user’s
  ID.
- This is cached and only done once per AsyncClient instance for each access token
  used.
- Streams Tweets in real-time based on a specific set of filter rules.
- This feature will deliver duplicate Tweets, meaning that if you were disconnected
  for 90 seconds, and you requested two minutes of backfill, you will receive 30 seconds
  worth of duplicate Tweets.
- Uses Bearer Token for authentication.
- Remove support for streaming with Twitter API v1.1 status/filter endpoint
- Remove support for deprecated Premium v1.1 Search APIs
- Add support for Direct Messages with Twitter API v2
- Support Twitter API v2
- Rework media uploading
- Support asynchronous streaming
- Uses OAuth2 with authorization code flow — requires setup of app in Twitter Developer
  Portal
- Some endpoints may have rate limits
- This will be the last major and minor version to support Python 2.7 and Python 3.5.
- Uses OAuth2 with refresh token
- Check the App permissions section of the Settings tab of your app, under the Twitter
  Developer Portal Projects & Apps page.
- If you’re using a method that performs an action on behalf of the authenticating
  user, make sure your app has the write permission.
- If you have Essential access to the Twitter API, you won’t be able to access Twitter
  API v1.1.
errors:
- 'NotFound: The user is not a member of the list.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 400 Bad Request
- 401 Unauthorized
- 403 Forbidden
- 404 Not Found
- 429 Too Many Requests
- 5xx Twitter Server Error
- 'TypeError: If the access token isn’t set'
- Non-200 HTTP status code encountered
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'TooManyRequests: Throttle API calls or reduce frequency'
- 'Unauthorized: Recheck OAuth scopes or token expiration'
- 'Forbidden: Access to the resource is denied'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '404 Not Found: Check the endpoint URL and parameters'
- 'RateLimitExceeded: Throttle API calls or reduce frequency'
- '401 Unauthorized: Make sure your app has the write permission.'
- '403 Forbidden: You can use Twitter API v2 with Client or apply for Elevated access.'
auth_info:
  mentioned_objects:
  - OAuth1UserHandler
  - OAuth2BearerHandler
  - OAuth2AppHandler
  - OAuth2UserHandler
  - OAuthHandler
  - API
client:
  base_url: https://api.twitter.com
  headers:
    User-Agent: tweepy
  paginator:
    type: rate_limit
    wait_on_rate_limit: true
source_metadata: null
