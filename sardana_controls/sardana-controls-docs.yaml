resources:
- name: SEP0
  endpoint:
    path: http://www.sardana-controls.org/sep/?SEP0.md
    method: GET
- name: SEP1
  endpoint:
    path: http://www.sardana-controls.org/sep/?SEP1.md
    method: GET
- name: SEP2
  endpoint:
    path: http://www.sardana-controls.org/sep/?SEP2.md
    method: GET
- name: SEP3
  endpoint:
    path: http://www.sardana-controls.org/sep/?SEP3.md
    method: GET
- name: SEP4
  endpoint:
    path: http://www.sardana-controls.org/sep/?SEP4.md
    method: GET
- name: SEP5
  endpoint:
    path: http://www.sardana-controls.org/sep/?SEP5.md
    method: GET
- name: SEP6
  endpoint:
    path: http://www.sardana-controls.org/sep/?SEP6.md
    method: GET
- name: SEP7
  endpoint:
    path: http://www.sardana-controls.org/sep/?SEP7.md
    method: GET
- name: SEP8
  endpoint:
    path: http://www.sardana-controls.org/sep/?SEP8.md
    method: GET
- name: SEP9
  endpoint:
    path: http://www.sardana-controls.org/sep/?SEP9.md
    method: GET
- name: SEP10
  endpoint:
    path: http://www.sardana-controls.org/sep/?SEP10.md
    method: GET
- name: SEP11
  endpoint:
    path: http://www.sardana-controls.org/sep/?SEP11.md
    method: GET
- name: SEP12
  endpoint:
    path: http://www.sardana-controls.org/sep/?SEP12.md
    method: GET
- name: SEP13
  endpoint:
    path: http://www.sardana-controls.org/sep/?SEP13.md
    method: GET
- name: SEP14
  endpoint:
    path: http://www.sardana-controls.org/sep/?SEP14.md
    method: GET
- name: SEP15
  endpoint:
    path: http://www.sardana-controls.org/sep/?SEP15.md
    method: GET
- name: SEP16
  endpoint:
    path: http://www.sardana-controls.org/sep/?SEP16.md
    method: GET
- name: SEP17
  endpoint:
    path: https://github.com/reszelaz/sardana/blob/sep17/doc/source/sep/SEP17.md
    method: GET
- name: SEP18
  endpoint:
    path: http://www.sardana-controls.org/sep/?SEP18.md
    method: GET
- name: SEP19
  endpoint:
    path: https://github.com/reszelaz/sardana/blob/sep19/doc/source/sep/SEP19.md
    method: GET
- name: SEP20
  endpoint:
    path: http://www.sardana-controls.org/sep/?SEP20.md
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: macro
  endpoint:
    path: /macros
    method: GET
    data_selector: macros
    params: {}
- name: MacroExecutor
  endpoint: {}
- name: Sequencer
  endpoint: {}
- name: Experiment Configuration
  endpoint: {}
- name: Experiment Status
  endpoint: {}
- name: MacroButton
  endpoint: {}
- name: Sardana Editor
  endpoint: {}
- name: Showscan
  endpoint: {}
- name: PoolMotorTV
  endpoint: {}
- name: PoolChannelTV
  endpoint: {}
- name: QtSpock
  endpoint: {}
- name: step_scan
  endpoint:
    path: /devel/api/sardana/macroserver/macros/scan.html#sardana.macroserver.macros.scan.ascan
    method: GET
    data_selector: records
- name: continuous_scan
  endpoint:
    path: /devel/api/sardana/macroserver/macros/scan.html#sardana.macroserver.macros.scan.ascanc
    method: GET
    data_selector: records
- name: controller
  endpoint:
    path: /devel/api/sardana/macroserver/macros/expert/defctrl
    method: GET
    data_selector: controller
    params: {}
- name: controller_axes
  endpoint:
    path: /devel/api/sardana/macroserver/macros/expert/defelem
    method: GET
    data_selector: controller_axes
    params: {}
- name: motors
  endpoint:
    path: /devel/api/sardana/macroserver/macros/expert/defm
    method: GET
    data_selector: motors
    params: {}
- name: pseudomotors
  endpoint:
    path: /devel/api/sardana/macroserver/macros/expert/defctrl
    method: GET
    data_selector: pseudomotors
    params: {}
- name: measurement_groups
  endpoint:
    path: /devel/api/sardana/macroserver/macros/expert/defmeas
    method: GET
    data_selector: measurement_groups
    params: {}
- name: ActiveMntGrp
  endpoint:
    path: /activemntgrp
    method: GET
- name: PreserveMacroData
  endpoint:
    path: /preservemacrodata
    method: GET
- name: DefaultPool
  endpoint:
    path: /defaultpool
    method: GET
- name: DiffracDevice
  endpoint:
    path: /diffracdevice
    method: GET
- name: Psi
  endpoint:
    path: /psi
    method: GET
- name: Q
  endpoint:
    path: /q
    method: GET
- name: LogMacro
  endpoint:
    path: /logmacro
    method: GET
- name: LogMacroDir
  endpoint:
    path: /logmacrodir
    method: GET
- name: LogMacroMode
  endpoint:
    path: /logmacromode
    method: GET
- name: LogMacroFormat
  endpoint:
    path: /logmacroformat
    method: GET
- name: MotionDecoupled
  endpoint:
    path: /motiondecoupled
    method: GET
- name: ApplyExtrapolation
  endpoint:
    path: /applyextrapolation
    method: GET
- name: ApplyInterpolation
  endpoint:
    path: /applyinterpolation
    method: GET
- name: DataCompressionRank
  endpoint:
    path: /datacompressionrank
    method: GET
- name: DataRecorder
  endpoint:
    path: /datarecorder
    method: GET
- name: DirectoryMap
  endpoint:
    path: /directorymap
    method: GET
- name: GeneralCondition
  endpoint:
    path: /generalcondition
    method: GET
- name: JsonRecorder
  endpoint:
    path: /jsonrecorder
    method: GET
- name: MeshM2CorrectDrift
  endpoint:
    path: /meshm2correctdrift
    method: GET
- name: OutputCols
  endpoint:
    path: /outputcols
    method: GET
- name: PreScanSnapshot
  endpoint:
    path: /prescansnapshot
    method: GET
- name: SampleInfo
  endpoint:
    path: /sampleinfo
    method: GET
- name: ScanDir
  endpoint:
    path: /scandir
    method: GET
- name: ScanFile
  endpoint:
    path: /scanfile
    method: GET
- name: ScanID
  endpoint:
    path: /scanid
    method: GET
- name: ScanH5SWMR
  endpoint:
    path: /scanh5swmr
    method: GET
- name: ScanMntGrpFinishTimeout
  endpoint:
    path: /scanmntgrpfinishtimeout
    method: GET
- name: ScanOvershootCorrection
  endpoint:
    path: /scanovershootcorrection
    method: GET
- name: ScanRecorder
  endpoint:
    path: /scanrecorder
    method: GET
- name: ScanStats
  endpoint:
    path: /scanstats
    method: GET
- name: ScanUser
  endpoint:
    path: /scanuser
    method: GET
- name: SharedMemory
  endpoint:
    path: /sharedmemory
    method: GET
- name: macro_node_obj
  endpoint:
    path: /getMacroNodeObj
    method: GET
- name: macro_path_obj
  endpoint:
    path: /getMacroPathObj
    method: GET
- name: macros
  endpoint:
    path: /getMacros
    method: GET
- name: macro_server
  endpoint:
    path: /getMacroServer
    method: GET
- name: macro_status
  endpoint:
    path: /getMacroStatus
    method: GET
- name: macro_str_list
  endpoint:
    path: /getMacroStrList
    method: GET
- name: macro_thread
  endpoint:
    path: /getMacroThread
    method: GET
- name: macro_thread_id
  endpoint:
    path: /getMacroThreadID
    method: GET
- name: main_type
  endpoint:
    path: /getMainType
    method: GET
- name: manager
  endpoint:
    path: /getManager
    method: GET
- name: measurement_group
  endpoint:
    path: /getMeasurementGroup
    method: GET
- name: measurement_groups
  endpoint:
    path: /getMeasurementGroups
    method: GET
- name: h5_end_session
  endpoint:
    path: /h5_end_session
    method: GET
- name: h5_ls_session
  endpoint:
    path: /h5_ls_session
    method: GET
- name: h5_start_session
  endpoint:
    path: /h5_start_session
    method: GET
- name: h5_write_session
  endpoint:
    path: /h5_write_session
    method: POST
- name: SardanaObjectID
  endpoint:
    path: /sardana/sardanabase/SardanaObjectID
    method: GET
    data_selector: data
- name: IORegister
  endpoint:
    path: /sardana/tango/pool/IORegister
    method: GET
    data_selector: data
- name: PoolMotion
  endpoint:
    path: /sardana/pool/poolmotion
    method: GET
- name: PoolMotor
  endpoint:
    path: /sardana/pool/poolmotor
    method: GET
- name: PoolMotorGroup
  endpoint:
    path: /sardana/pool/poolmotorgroup
    method: GET
- name: PoolPseudoMotor
  endpoint:
    path: /sardana/pool/poolpseudomotor
    method: GET
- name: CounterTimerController
  endpoint:
    path: /sardana/pool/controller
    method: GET
- name: BaseDoor
  endpoint:
    path: /sardana/taurus/core/tango/sardana/macroserver
    method: GET
- name: controllers
  endpoint:
    path: /getControllers
    method: GET
- name: moveables
  endpoint:
    path: /getMoveables
    method: GET
- name: motors
  endpoint:
    path: /getMotors
    method: GET
- name: pseudo_motors
  endpoint:
    path: /getPseudoMotors
    method: GET
- name: io_registers
  endpoint:
    path: /getIORegisters
    method: GET
- name: measurement_groups
  endpoint:
    path: /getMeasurementGroups
    method: GET
- name: exp_channels
  endpoint:
    path: /getExpChannels
    method: GET
- name: counter_timers
  endpoint:
    path: /getCounterTimers
    method: GET
- name: 0d_exp_channels
  endpoint:
    path: /get0DExpChannels
    method: GET
- name: 1d_exp_channels
  endpoint:
    path: /get1DExpChannels
    method: GET
- name: 2d_exp_channels
  endpoint:
    path: /get2DExpChannels
    method: GET
- name: pseudo_counters
  endpoint:
    path: /getPseudoCounters
    method: GET
- name: instruments
  endpoint:
    path: /getInstruments
    method: GET
- name: env
  endpoint:
    path: /getEnv
    method: GET
- name: global_env
  endpoint:
    path: /getGlobalEnv
    method: GET
- name: all_env
  endpoint:
    path: /getAllEnv
    method: GET
- name: all_door_env
  endpoint:
    path: /getAllDoorEnv
    method: GET
- name: getControllers
  endpoint:
    path: /sardana/macroserver/macro/getControllers
    method: GET
- name: getMoveables
  endpoint:
    path: /sardana/macroserver/macro/getMoveables
    method: GET
- name: getMotors
  endpoint:
    path: /sardana/macroserver/macro/getMotors
    method: GET
- name: getPseudoMotors
  endpoint:
    path: /sardana/macroserver/macro/getPseudoMotors
    method: GET
- name: getIORegisters
  endpoint:
    path: /sardana/macroserver/macro/getIORegisters
    method: GET
- name: getMeasurementGroups
  endpoint:
    path: /sardana/macroserver/macro/getMeasurementGroups
    method: GET
- name: getExpChannels
  endpoint:
    path: /sardana/macroserver/macro/getExpChannels
    method: GET
- name: getCounterTimers
  endpoint:
    path: /sardana/macroserver/macro/getCounterTimers
    method: GET
- name: get0DExpChannels
  endpoint:
    path: /sardana/macroserver/macro/get0DExpChannels
    method: GET
- name: get1DExpChannels
  endpoint:
    path: /sardana/macroserver/macro/get1DExpChannels
    method: GET
- name: get2DExpChannels
  endpoint:
    path: /sardana/macroserver/macro/get2DExpChannels
    method: GET
- name: getPseudoCounters
  endpoint:
    path: /sardana/macroserver/macro/getPseudoCounters
    method: GET
- name: getInstruments
  endpoint:
    path: /sardana/macroserver/macro/getInstruments
    method: GET
- name: getElementWithInterface
  endpoint:
    path: /sardana/macroserver/macro/getElementWithInterface
    method: GET
- name: getController
  endpoint:
    path: /sardana/macroserver/macro/getController
    method: GET
- name: getMoveable
  endpoint:
    path: /sardana/macroserver/macro/getMoveable
    method: GET
- name: getMotor
  endpoint:
    path: /sardana/macroserver/macro/getMotor
    method: GET
- name: getPseudoMotor
  endpoint:
    path: /sardana/macroserver/macro/getPseudoMotor
    method: GET
- name: getIORegister
  endpoint:
    path: /sardana/macroserver/macro/getIORegister
    method: GET
- name: getMeasurementGroup
  endpoint:
    path: /sardana/macroserver/macro/getMeasurementGroup
    method: GET
- name: getExpChannel
  endpoint:
    path: /sardana/macroserver/macro/getExpChannel
    method: GET
- name: getCounterTimer
  endpoint:
    path: /sardana/macroserver/macro/getCounterTimer
    method: GET
- name: get0DExpChannel
  endpoint:
    path: /sardana/macroserver/macro/get0DExpChannel
    method: GET
- name: get1DExpChannel
  endpoint:
    path: /sardana/macroserver/macro/get1DExpChannel
    method: GET
- name: get2DExpChannel
  endpoint:
    path: /sardana/macroserver/macro/get2DExpChannel
    method: GET
- name: getPseudoCounter
  endpoint:
    path: /sardana/macroserver/macro/getPseudoCounter
    method: GET
- name: getInstrument
  endpoint:
    path: /sardana/macroserver/macro/getInstrument
    method: GET
- name: getEnv
  endpoint:
    path: /sardana/macroserver/macro/getEnv
    method: GET
- name: getGlobalEnv
  endpoint:
    path: /sardana/macroserver/macro/getGlobalEnv
    method: GET
- name: getAllEnv
  endpoint:
    path: /sardana/macroserver/macro/getAllEnv
    method: GET
- name: getAllDoorEnv
  endpoint:
    path: /sardana/macroserver/macro/getAllDoorEnv
    method: GET
- name: macro_execution
  endpoint:
    path: /macro/exec
    method: POST
    data_selector: result
- name: getControllers
  endpoint:
    path: /Macro/getControllers
    method: GET
- name: getMoveables
  endpoint:
    path: /Macro/getMoveables
    method: GET
- name: getMotors
  endpoint:
    path: /Macro/getMotors
    method: GET
- name: getPseudoMotors
  endpoint:
    path: /Macro/getPseudoMotors
    method: GET
- name: getIORegisters
  endpoint:
    path: /Macro/getIORegisters
    method: GET
- name: getMeasurementGroups
  endpoint:
    path: /Macro/getMeasurementGroups
    method: GET
- name: getExpChannels
  endpoint:
    path: /Macro/getExpChannels
    method: GET
- name: getCounterTimers
  endpoint:
    path: /Macro/getCounterTimers
    method: GET
- name: get0DExpChannels
  endpoint:
    path: /Macro/get0DExpChannels
    method: GET
- name: get1DExpChannels
  endpoint:
    path: /Macro/get1DExpChannels
    method: GET
- name: get2DExpChannels
  endpoint:
    path: /Macro/get2DExpChannels
    method: GET
- name: getPseudoCounters
  endpoint:
    path: /Macro/getPseudoCounters
    method: GET
- name: getInstruments
  endpoint:
    path: /Macro/getInstruments
    method: GET
- name: getElementWithInterface
  endpoint:
    path: /Macro/getElementWithInterface
    method: GET
- name: getController
  endpoint:
    path: /Macro/getController
    method: GET
- name: getMoveable
  endpoint:
    path: /Macro/getMoveable
    method: GET
- name: getMotor
  endpoint:
    path: /Macro/getMotor
    method: GET
- name: getPseudoMotor
  endpoint:
    path: /Macro/getPseudoMotor
    method: GET
- name: getIORegister
  endpoint:
    path: /Macro/getIORegister
    method: GET
- name: getMeasurementGroup
  endpoint:
    path: /Macro/getMeasurementGroup
    method: GET
- name: getExpChannel
  endpoint:
    path: /Macro/getExpChannel
    method: GET
- name: getCounterTimer
  endpoint:
    path: /Macro/getCounterTimer
    method: GET
- name: get0DExpChannel
  endpoint:
    path: /Macro/get0DExpChannel
    method: GET
- name: get1DExpChannel
  endpoint:
    path: /Macro/get1DExpChannel
    method: GET
- name: get2DExpChannel
  endpoint:
    path: /Macro/get2DExpChannel
    method: GET
- name: getPseudoCounter
  endpoint:
    path: /Macro/getPseudoCounter
    method: GET
- name: getInstrument
  endpoint:
    path: /Macro/getInstrument
    method: GET
- name: getEnv
  endpoint:
    path: /Macro/getEnv
    method: GET
- name: getGlobalEnv
  endpoint:
    path: /Macro/getGlobalEnv
    method: GET
- name: getAllEnv
  endpoint:
    path: /Macro/getAllEnv
    method: GET
- name: getAllDoorEnv
  endpoint:
    path: /Macro/getAllDoorEnv
    method: GET
- name: motor
  endpoint:
    path: /motor
    method: GET
    data_selector: motor_data
    params: {}
- name: pseudo_motor
  endpoint:
    path: /api/pseudo_motor
    method: GET
    data_selector: attributes
    params: {}
- name: Controller
  endpoint:
    path: /sardana/pool/controller
    method: GET
- name: MotorController
  endpoint:
    path: /sardana/pool/controller/MotorController
    method: GET
- name: CounterTimerController
  endpoint:
    path: /sardana/pool/controller/CounterTimerController
    method: GET
- name: ZeroDController
  endpoint:
    path: /sardana/pool/controller/ZeroDController
    method: GET
- name: PseudoMotorController
  endpoint:
    path: /sardana/pool/controller/PseudoMotorController
    method: GET
- name: PseudoCounterController
  endpoint:
    path: /sardana/pool/controller/PseudoCounterController
    method: GET
- name: TriggerGateController
  endpoint:
    path: /sardana/pool/controller/TriggerGateController
    method: GET
- name: IORegisterController
  endpoint:
    path: /sardana/pool/controller/IORegisterController
    method: GET
- name: measurement_group
  endpoint:
    path: /api/measurementgroup
    method: GET
    data_selector: measurements
    params: {}
- name: pseudo_motors
  endpoint:
    path: /api/pseudo_motors
    method: GET
    data_selector: pseudo_motors
    params: {}
- name: BaseMacroExecutor
  endpoint:
    path: /sardana/macroserver/macros/test/BaseMacroExecutor
    method: GET
    data_selector: records
- name: MacroExecutorFactory
  endpoint:
    path: /sardana/macroserver/macros/test/MacroExecutorFactory
    method: GET
    data_selector: records
- name: BaseMacroTestCase
  endpoint:
    path: /sardana/macroserver/macros/test/BaseMacroTestCase
    method: GET
    data_selector: records
- name: measurement_group
  endpoint:
    path: /measurement_group
    method: GET
    data_selector: records
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- This release, in comparison to the previous ones, brings significant user experience
  improvements when used on Windows.
- By default, the scan is not recorded into any file. To store your scans in a file,
  you must set the environment variables ScanDir and ScanFile.
- Sardana provides a Scan Framework for developing scan macros so that the scan macros
  behave in a consistent way.
- 'Mandatory environment variables: ActiveMntGrp, DefaultPool, DiffracDevice, ScanDir,
  ScanFile'
- 'Not mandatory environment variables: Psi, Q, LogMacro, LogMacroDir, LogMacroMode,
  LogMacroFormat, MotionDecoupled, ApplyExtrapolation, ApplyInterpolation, DataCompressionRank,
  DataRecorder, DirectoryMap, GeneralCondition, JsonRecorder, MeshM2CorrectDrift,
  OutputCols, PreScanSnapshot, SampleInfo, ScanH5SWMR, ScanMntGrpFinishTimeout, ScanOvershootCorrection,
  ScanRecorder, ScanUser, SharedMemory'
- At the time of writing, Sardana system can run only as Tango device server and most
  of the configurations are stored in the Tango database.
- It is important to know that the Sardana config tools work offline, acting directly
  upon the Tango DB without requiring a running Sardana instance.
- Custom recorders may be added to the Sardana system by placing the recorder library
  module in a directory which is specified by the MacroServer RecorderPath property.
- sardana-jupyter executes macros synchronously.
- Uses OAuth2 with refresh token — requires setup of connected app in Sardana
- 'you will need python >= 3.0. If you have python 2.x then you must include at the
  top of your file the statement: from __future__ import print_function'
- From Sardana 2.0 the repeat parameter values must be passed as lists of items.
- In case when a macro defines only one repeat parameter and it is the last parameter,
  for the backwards compatibility reasons, the plain list of items’ members is allowed.
- backwards compatibility - see note
- An item of a repeat parameter containing more than one member is a list.
- Drift correction is enabled by default.
- Measurement group API was extended in SEP18 but not documented in this chapter.
- Drift correction is enabled by default for all pseudomotors.
- Measurement group API was extended in SEP18 but this is still not documented in
  this chapter.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: http://www.sardana-controls.org
  headers:
    Accept: application/json
source_metadata: null
