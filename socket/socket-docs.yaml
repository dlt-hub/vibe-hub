resources:
- name: API Tokens
  endpoint:
    path: /reference/postapitoken
    method: POST
- name: Quota
  endpoint:
    path: /reference/getquota
    method: GET
- name: Repositories
  endpoint:
    path: /reference/getorgrepolist
    method: GET
- name: API Tokens
  endpoint:
    path: /reference/api-tokens
    method: GET
- name: List organizations
  endpoint:
    path: /reference/getorganizations
    method: GET
- name: List API Tokens
  endpoint:
    path: /reference/getapitokens
    method: GET
- name: Get quota
  endpoint:
    path: /reference/getquota
    method: GET
- name: API Tokens
  endpoint:
    path: /reference/postapitoken
    method: POST
- name: Quota
  endpoint:
    path: /reference/getquota
    method: GET
- name: List API Tokens
  endpoint:
    path: /reference/getapitokens
    method: GET
- name: List organizations
  endpoint:
    path: /reference/getorganizations
    method: GET
- name: API Tokens
  endpoint:
    path: /reference/postapitoken
    method: POST
    data_selector: tokens
- name: List API Tokens
  endpoint:
    path: /reference/getapitokens
    method: GET
    data_selector: tokens
- name: Get quota
  endpoint:
    path: /reference/getquota
    method: GET
    data_selector: quota
- name: List organizations
  endpoint:
    path: /reference/getorganizations
    method: GET
    data_selector: organizations
- name: API Tokens
  endpoint:
    path: /reference/api-tokens
    method: GET
- name: Quota
  endpoint:
    path: /reference/quota
    method: GET
- name: Get Packages by PURL
  endpoint:
    path: /reference/batchpackagefetch
    method: POST
- name: Search dependencies
  endpoint:
    path: /reference/searchdependencies
    method: POST
- name: Trend of historical dependencies
  endpoint:
    path: /reference/historicaldependenciestrend
    method: GET
- name: List historical alerts
  endpoint:
    path: /reference/historicalalertslist
    method: GET
- name: List full scans
  endpoint:
    path: /reference/getorgfullscanlist
    method: GET
- name: List repositories
  endpoint:
    path: /reference/getorgrepolist
    method: GET
- name: Get Threat Feed Items
  endpoint:
    path: /reference/getorgthreatfeeditems
    method: GET
- name: Get Organization Security Policy
  endpoint:
    path: /reference/getorgsecuritypolicy
    method: GET
- name: Get License Policy
  endpoint:
    path: /reference/viewlicensepolicy
    method: GET
- name: Get integration events
  endpoint:
    path: /reference/getintegrationevents
    method: GET
- name: Get Audit Log Events
  endpoint:
    path: /reference/getauditlogevents
    method: GET
- name: historical_alerts
  endpoint:
    path: /reference/historicalalertslist
    method: GET
- name: historical_alerts_trend
  endpoint:
    path: /reference/historicalalertstrend
    method: GET
- name: historical_snapshots
  endpoint:
    path: /reference/historicalsnapshotslist
    method: GET
- name: start_historical_snapshot_job
  endpoint:
    path: /reference/historicalsnapshotsstart
    method: POST
- name: get_packages_by_purl
  endpoint:
    path: /purl
    method: POST
    data_selector: SocketArtifact
- name: search_dependencies
  endpoint:
    path: /dependencies/search
    method: POST
- name: trend_of_historical_dependencies
  endpoint:
    path: /orgs/{org_slug}/historical/dependencies/trend
    method: GET
- name: historical_alerts
  endpoint:
    path: /orgs/{org_slug}/historical/alerts
    method: GET
    data_selector: alerts
- name: historical_alerts_trend
  endpoint:
    path: /orgs/{org_slug}/historical/alerts/trend
    method: GET
    data_selector: items
    params:
      date: CURRENT_DATE
      range: -7d
- name: full_scans
  endpoint:
    path: /orgs/{org_slug}/full-scans
    method: GET
    data_selector: full_scans
- name: full_scan
  endpoint:
    path: /orgs/{org_slug}/full-scans
    method: POST
- name: full_scan
  endpoint:
    path: /orgs/{org_slug}/full-scans/{full_scan_id}
    method: GET
- name: full_scan
  endpoint:
    path: /orgs/{org_slug}/full-scans
    method: POST
- name: delete_full_scan
  endpoint:
    path: /orgs/{org_slug}/full-scans/{full_scan_id}
    method: DELETE
- name: full_scan
  endpoint:
    path: /orgs/{org_slug}/full-scans/{full_scan_id}
    method: GET
- name: full_scan_metadata
  endpoint:
    path: /orgs/{org_slug}/full-scans/{full_scan_id}/metadata
    method: GET
- name: full_scan
  endpoint:
    path: /orgs/{org_slug}/full-scans/{full_scan_id}
    method: DELETE
    data_selector: null
    params:
      scopes: full-scans:delete
- name: Diff Full Scans
  endpoint:
    path: /orgs/{org_slug}/full-scans/diff
    method: GET
- name: full_scan_metadata
  endpoint:
    path: /orgs/{org_slug}/full-scans/{full_scan_id}/metadata
    method: GET
- name: supported_file_types
  endpoint:
    path: /orgs/{org_slug}/supported-files
    method: GET
- name: export_spdx
  endpoint:
    path: /orgs/{org_slug}/export/spdx/{id}
    method: GET
- name: diff_full_scans
  endpoint:
    path: /orgs/{org_slug}/full-scans/diff
    method: GET
- name: supported_file_types
  endpoint:
    path: /v0/orgs/{org_slug}/supported-files
    method: GET
- name: export_cyclonedx_sbom
  endpoint:
    path: /orgs/{org_slug}/export/cdx/{id}
    method: GET
- name: export_spdx
  endpoint:
    path: /orgs/{org_slug}/export/spdx/{id}
    method: GET
- name: diff_scans
  endpoint:
    path: /orgs/{org_slug}/diff-scans
    method: GET
    data_selector: response
    params: {}
- name: export_cyclonedx_sbom
  endpoint:
    path: /orgs/{org_slug}/export/cdx/{id}
    method: GET
- name: diff_scan
  endpoint:
    path: /orgs/{org_slug}/diff-scans/{diff_scan_id}
    method: GET
    data_selector: response
- name: create_diff_scan_from_ids
  endpoint:
    path: /orgs/{org_slug}/diff-scans/from-ids
    method: POST
- name: diff_scans
  endpoint:
    path: /orgs/{org_slug}/diff-scans
    method: GET
- name: org_alert_triage
  endpoint:
    path: /orgs/{org_slug}/triage/alerts
    method: GET
- name: diff_scan
  endpoint:
    path: /orgs/{org_slug}/diff-scans/{diff_scan_id}
    method: GET
- name: update_org_alert_triage
  endpoint:
    path: /orgs/{org_slug}/triage/alerts
    method: POST
- name: diff_scan
  endpoint:
    path: /orgs/{org_slug}/diff-scans/from-ids
    method: POST
- name: repositories
  endpoint:
    path: /orgs/{org_slug}/repos
    method: GET
    data_selector: repositories
- name: Org Alert Triage
  endpoint:
    path: /orgs/{org_slug}/triage/alerts
    method: GET
- name: repository_label
  endpoint:
    path: /orgs/{org_slug}/repos/labels/{label_id}
    method: GET
    data_selector: object
    params: {}
- name: Update Org Alert Triage
  endpoint:
    path: /orgs/{org_slug}/triage/alerts
    method: POST
- name: delete_repository_label_setting
  endpoint:
    path: /orgs/{org_slug}/repos/labels/{label_id}/label-setting
    method: DELETE
- name: repositories
  endpoint:
    path: /orgs/{org_slug}/repos
    method: GET
- name: update_repository_label
  endpoint:
    path: /orgs/{org_slug}/repos/labels/{label_id}
    method: PUT
- name: repository_label
  endpoint:
    path: /orgs/{org_slug}/repos/labels/{label_id}
    method: GET
    data_selector: object
    params: {}
- name: repository_label_setting
  endpoint:
    path: /orgs/{org_slug}/repos/labels/{label_id}/label-setting
    method: GET
- name: delete_repository_label_setting
  endpoint:
    path: /orgs/{org_slug}/repos/labels/{label_id}/label-setting
    method: DELETE
- name: update_repository_label_setting
  endpoint:
    path: /orgs/{org_slug}/repos/labels/{label_id}/label-setting
    method: PUT
- name: disassociate_repository_label
  endpoint:
    path: /orgs/{org_slug}/repos/labels/{label_id}/disassociate
    method: POST
- name: update_repository_label
  endpoint:
    path: /orgs/{org_slug}/repos/labels/{label_id}
    method: PUT
- name: threat_feed_items
  endpoint:
    path: /threat-feed
    method: GET
- name: repository_label_setting
  endpoint:
    path: /orgs/{org_slug}/repos/labels/{label_id}/label-setting
    method: GET
- name: threat_feed_items
  endpoint:
    path: /orgs/{org_slug}/threat-feed
    method: GET
- name: update_repository_label_setting
  endpoint:
    path: /orgs/{org_slug}/repos/labels/{label_id}/label-setting
    method: PUT
- name: organization_security_policy
  endpoint:
    path: /v0/orgs/{org_slug}/settings/security-policy
    method: GET
- name: disassociate_repository_label
  endpoint:
    path: /orgs/{org_slug}/repos/labels/{label_id}/disassociate
    method: POST
- name: security_policy
  endpoint:
    path: /orgs/{org_slug}/settings/security-policy
    method: POST
- name: threat_feed_items
  endpoint:
    path: /threat-feed
    method: GET
- name: license_policy
  endpoint:
    path: /orgs/{org_slug}/settings/license-policy/view
    method: GET
- name: threat_feed_items
  endpoint:
    path: /orgs/{org_slug}/threat-feed
    method: GET
    data_selector: threats
- name: organization_security_policy
  endpoint:
    path: /orgs/{org_slug}/settings/security-policy
    method: GET
- name: security_policy
  endpoint:
    path: /orgs/{org_slug}/settings/security-policy
    method: POST
- name: license_policy
  endpoint:
    path: /orgs/{org_slug}/settings/license-policy/view
    method: GET
- name: license_policy
  endpoint:
    path: /orgs/{org_slug}/settings/license-policy
    method: POST
- name: license_policy
  endpoint:
    path: /orgs/{org_slug}/settings/license-policy
    method: POST
- name: Socket Basics Configuration
  endpoint:
    path: /orgs/{org_slug}/settings/socket-basics
    method: GET
- name: socket_basics_config
  endpoint:
    path: /orgs/{org_slug}/settings/socket-basics
    method: GET
    data_selector: configuration
- name: integration_events
  endpoint:
    path: /v0/orgs/{org_slug}/settings/integrations/{integration_id}/events
    method: GET
    params:
      scope: integration:list
- name: integration_events
  endpoint:
    path: /orgs/{org_slug}/settings/integrations/{integration_id}/events
    method: GET
- name: audit_log_events
  endpoint:
    path: /orgs/{org_slug}/audit-log
    method: GET
    data_selector: events
- name: audit_log_events
  endpoint:
    path: /orgs/{org_slug}/audit-log
    method: GET
- name: API Tokens
  endpoint:
    path: /orgs/{org_slug}/api-tokens
    method: POST
- name: api_token
  endpoint:
    path: /orgs/{org_slug}/api-tokens
    method: POST
- name: quota
  endpoint:
    path: /quota
    method: GET
- name: quota
  endpoint:
    path: /quota
    method: GET
    data_selector: response
    params: {}
- name: api_tokens
  endpoint:
    path: /orgs/{org_slug}/api-tokens
    method: GET
- name: list_api_tokens
  endpoint:
    path: /orgs/{org_slug}/api-tokens
    method: GET
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: response
- name: update_api_token
  endpoint:
    path: /orgs/{org_slug}/api-tokens/update
    method: POST
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations
- name: rotate_api_token
  endpoint:
    path: /orgs/{org_slug}/api-tokens/rotate
    method: POST
- name: update_api_token
  endpoint:
    path: /orgs/{org_slug}/api-tokens/update
    method: POST
- name: Rotate API Token
  endpoint:
    path: /orgs/{org_slug}/api-tokens/rotate
    method: POST
- name: revoke_api_token
  endpoint:
    path: /orgs/{org_slug}/api-tokens/revoke
    method: POST
- name: OpenAPI Definition
  endpoint:
    path: /openapi
    method: GET
- name: revoke_api_token
  endpoint:
    path: /orgs/{org_slug}/api-tokens/revoke
    method: POST
- name: alert_types_metadata
  endpoint:
    path: /alert-types
    method: POST
- name: OpenAPI Definition
  endpoint:
    path: /openapi
    method: GET
- name: license_metadata
  endpoint:
    path: /license-metadata
    method: POST
    data_selector: Array<{}>
- name: alert_types_metadata
  endpoint:
    path: /alert-types
    method: POST
- name: saturate_license_policy
  endpoint:
    path: /saturate-license-policy
    method: POST
- name: license_policy
  endpoint:
    path: /v0/orgs/{org_slug}/settings/license-policy
    method: GET
- name: saturate_license_policy
  endpoint:
    path: /saturate-license-policy
    method: POST
- name: get_organization_license_policy
  endpoint:
    path: /getorglicensepolicy
    method: GET
- name: delete_report
  endpoint:
    path: /report/delete/{id}
    method: DELETE
    data_selector: status
    params: {}
- name: organization_license_policy
  endpoint:
    path: /v0/orgs/{org_slug}/settings/license-policy
    method: GET
- name: reports
  endpoint:
    path: /report/list
    method: GET
- name: delete_report
  endpoint:
    path: /v0/report/delete/{id}
    method: DELETE
    data_selector: object
    params: {}
- name: create_report
  endpoint:
    path: /report/upload
    method: PUT
    params: {}
- name: reports
  endpoint:
    path: /v0/report/list
    method: GET
- name: view_report
  endpoint:
    path: /report/view/{id}
    method: GET
    data_selector: response
- name: create_report
  endpoint:
    path: /report/upload
    method: PUT
- name: search_dependencies
  endpoint:
    path: /dependencies/search
    method: POST
    data_selector: rows
    params:
      limit: 50
      offset: 0
- name: view_report
  endpoint:
    path: /report/view/{id}
    method: GET
    data_selector: null
    params: {}
- name: historical_alerts
  endpoint:
    path: /orgs/{org_slug}/historical/alerts
    method: GET
- name: search_dependencies
  endpoint:
    path: /dependencies/search
    method: POST
    data_selector: rows
    params:
      limit: 50
      offset: 0
- name: full_scans
  endpoint:
    path: /orgs/{org_slug}/full-scans
    method: GET
    data_selector: full_scans
- name: historical_alerts
  endpoint:
    path: /orgs/{org_slug}/historical/alerts
    method: GET
- name: diff_scans
  endpoint:
    path: /orgs/{org_slug}/diff-scans
    method: GET
    data_selector: diff_scans
- name: full_scans
  endpoint:
    path: /orgs/{org_slug}/full-scans
    method: GET
- name: Org Alert Triage
  endpoint:
    path: /orgs/{org_slug}/triage/alerts
    method: GET
- name: diff_scans
  endpoint:
    path: /orgs/{org_slug}/diff-scans
    method: GET
- name: repositories
  endpoint:
    path: /orgs/{org_slug}/repos
    method: GET
- name: org_alert_triage
  endpoint:
    path: /orgs/{org_slug}/triage/alerts
    method: GET
- name: associate_repository_label
  endpoint:
    path: /orgs/{org_slug}/repos/labels/{label_id}/associate
    method: POST
- name: threat_feed_items
  endpoint:
    path: /threat-feed
    method: GET
- name: repositories
  endpoint:
    path: /orgs/{org_slug}/repos
    method: GET
- name: historical_snapshots
  endpoint:
    path: /orgs/{org_slug}/historical/snapshots
    method: GET
    data_selector: snapshots
- name: associate_repository_label
  endpoint:
    path: /orgs/{org_slug}/repos/labels/{label_id}/associate
    method: POST
- name: list_repository_labels
  endpoint:
    path: /getorgrepolabellist
    method: GET
- name: organization_security_policy
  endpoint:
    path: /orgs/{org_slug}/settings/security-policy
    method: GET
- name: threat_feed_items
  endpoint:
    path: /threat-feed
    method: GET
- name: license_policy
  endpoint:
    path: /v0/orgs/{org_slug}/settings/license-policy/view
    method: GET
- name: historical_snapshots
  endpoint:
    path: /orgs/{org_slug}/historical/snapshots
    method: GET
    data_selector: snapshots
- name: socket_basics_config
  endpoint:
    path: /orgs/{org_slug}/settings/socket-basics
    method: GET
- name: organization_security_policy
  endpoint:
    path: /orgs/{org_slug}/settings/security-policy
    method: GET
- name: audit_log_events
  endpoint:
    path: /orgs/{org_slug}/audit-log
    method: GET
- name: OpenAPI Definition
  endpoint:
    path: /openapi
    method: GET
- name: license_policy
  endpoint:
    path: /orgs/{org_slug}/settings/license-policy/view
    method: GET
- name: saturate_license_policy
  endpoint:
    path: /saturate-license-policy
    method: POST
- name: socket_basics_config
  endpoint:
    path: /orgs/{org_slug}/settings/socket-basics
    method: GET
- name: audit_log_events
  endpoint:
    path: /orgs/{org_slug}/audit-log
    method: GET
- name: OpenAPI definition
  endpoint:
    path: /openapi
    method: GET
- name: saturate_license_policy
  endpoint:
    path: /saturate-license-policy
    method: POST
- name: get_organization_license_policy
  endpoint:
    path: /getorglicensepolicy
    method: GET
- name: phantom_dependencies
  endpoint:
    path: /docs/phantom-dependencies
    method: GET
- name: yarn
  endpoint:
    path: /yarn
    method: GET
    data_selector: features
    params: {}
- name: pnpm
  endpoint:
    path: /pnpm
    method: GET
    data_selector: features
    params: {}
- name: python
  endpoint:
    path: /python
    method: GET
    data_selector: features
    params: {}
- name: go
  endpoint:
    path: /go
    method: GET
    data_selector: features
    params: {}
- name: java
  endpoint:
    path: /java
    method: GET
    data_selector: features
    params: {}
- name: ruby
  endpoint:
    path: /ruby
    method: GET
    data_selector: features
    params: {}
- name: .net
  endpoint:
    path: /dotnet
    method: GET
    data_selector: features
    params: {}
- name: scala
  endpoint:
    path: /scala
    method: GET
    data_selector: features
    params: {}
- name: kotlin
  endpoint:
    path: /kotlin
    method: GET
    data_selector: features
    params: {}
- name: rust
  endpoint:
    path: /rust
    method: GET
    data_selector: features
    params: {}
- name: c_cpp
  endpoint:
    path: /c_cpp
    method: GET
    data_selector: features
    params: {}
- name: github_actions
  endpoint:
    path: /github_actions
    method: GET
    data_selector: features
    params: {}
- name: reachable
  endpoint:
    path: /reachable
    method: GET
    data_selector: results
- name: maybe_reachable
  endpoint:
    path: /maybe_reachable
    method: GET
    data_selector: results
- name: unreachable
  endpoint:
    path: /unreachable
    method: GET
    data_selector: results
- name: pending
  endpoint:
    path: /pending
    method: GET
    data_selector: results
- name: missing_support
  endpoint:
    path: /missing_support
    method: GET
    data_selector: results
- name: direct_dependency
  endpoint:
    path: /direct_dependency
    method: GET
    data_selector: results
- name: undeterminable_reachability
  endpoint:
    path: /undeterminable_reachability
    method: GET
    data_selector: results
- name: unknown
  endpoint:
    path: /unknown
    method: GET
    data_selector: results
- name: error
  endpoint:
    path: /error
    method: GET
    data_selector: results
- name: alerts
  endpoint:
    path: /api/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: JavaScript and TypeScript
  endpoint:
    path: /docs/language-support#javascript-and-typescript
    method: GET
    data_selector: records
    params: {}
- name: Python
  endpoint:
    path: /docs/language-support#python
    method: GET
    data_selector: records
    params: {}
- name: Go
  endpoint:
    path: /docs/language-support#go
    method: GET
    data_selector: records
    params: {}
- name: Java
  endpoint:
    path: /docs/language-support#java
    method: GET
    data_selector: records
    params: {}
- name: Ruby
  endpoint:
    path: /docs/language-support#ruby
    method: GET
    data_selector: records
    params: {}
- name: .NET (C#, F#, Visual Basic)
  endpoint:
    path: /docs/language-support#net-c-f-visual-basic
    method: GET
    data_selector: records
    params: {}
- name: Scala
  endpoint:
    path: /docs/language-support#scala
    method: GET
    data_selector: records
    params: {}
- name: Kotlin
  endpoint:
    path: /docs/language-support#kotlin
    method: GET
    data_selector: records
    params: {}
- name: Rust
  endpoint:
    path: /docs/language-support#rust
    method: GET
    data_selector: records
    params: {}
- name: C/C++
  endpoint:
    path: /docs/language-support#cc
    method: GET
    data_selector: records
    params: {}
- name: GitHub Actions
  endpoint:
    path: /docs/language-support#github-actions
    method: GET
    data_selector: records
    params: {}
- name: PHP
  endpoint:
    path: /docs/language-support#php
    method: GET
    data_selector: records
    params: {}
- name: Swift
  endpoint:
    path: /docs/language-support#swift
    method: GET
    data_selector: records
    params: {}
- name: Objective-C
  endpoint:
    path: /docs/language-support#objective-c
    method: GET
    data_selector: records
    params: {}
- name: Elixir and Erlang
  endpoint:
    path: /docs/language-support#elixir-and-erlang
    method: GET
    data_selector: records
    params: {}
- name: alert_actions
  endpoint:
    path: /docs/alert-actions
    method: GET
    data_selector: alert actions
- name: Yarn
  endpoint:
    path: /yarn
    method: GET
    data_selector: features
- name: pnpm
  endpoint:
    path: /pnpm
    method: GET
    data_selector: features
- name: Python
  endpoint:
    path: /python
    method: GET
    data_selector: packages
- name: Go
  endpoint:
    path: /go
    method: GET
    data_selector: packages
- name: Java
  endpoint:
    path: /java
    method: GET
    data_selector: packages
- name: Ruby
  endpoint:
    path: /ruby
    method: GET
    data_selector: packages
- name: .NET
  endpoint:
    path: /dotnet
    method: GET
    data_selector: packages
- name: Scala
  endpoint:
    path: /scala
    method: GET
    data_selector: packages
- name: Kotlin
  endpoint:
    path: /kotlin
    method: GET
    data_selector: packages
- name: Rust
  endpoint:
    path: /rust
    method: GET
    data_selector: packages
- name: C/C++
  endpoint:
    path: /c_cpp
    method: GET
    data_selector: packages
- name: GitHub Actions
  endpoint:
    path: /github_actions
    method: GET
    data_selector: features
- name: security_policy
  endpoint:
    path: /docs/security-policy-default-enabled-alerts
    method: GET
    data_selector: alerts
    params: {}
- name: alerts
  endpoint:
    path: /docs/organization-alerts
    method: GET
    data_selector: alerts
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: repositories
  endpoint:
    path: /repositories
    method: GET
    data_selector: repositories
    params: {}
- name: scans
  endpoint:
    path: /scans
    method: GET
    data_selector: scans
    params: {}
- name: alert_actions
  endpoint:
    path: /alert_actions
    method: GET
    data_selector: alert_actions
    params: {}
- name: manifest_files
  endpoint:
    path: /docs/manifest-file-detection-in-socket
    method: GET
    data_selector: manifest_files
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: repositories
  endpoint:
    path: /docs/repositories-1
    method: GET
    data_selector: repositories
    params: {}
- name: dependency_snapshot
  endpoint:
    path: /dependency_snapshot
    method: GET
    data_selector: snapshot
- name: socket-security-workflow
  endpoint:
    path: /socket-security-workflow
    method: POST
    data_selector: workflow
    params: {}
- name: socket_security
  endpoint:
    path: /socket-security
    method: POST
    data_selector: results
    params: {}
- name: Socket Security Scan
  endpoint:
    path: /socket-security-scan
    method: POST
    data_selector: scan_results
- name: azure-pipelines
  endpoint:
    path: /azure-pipelines.yml
    method: POST
- name: variable_group
  endpoint:
    path: /api/variable_groups
    method: POST
    data_selector: variableGroup
    params:
      name: socket_security
      variables:
        api_key: SOCKET_SECURITY_API_KEY
- name: audit_log
  endpoint:
    path: /audit-log
    method: GET
    data_selector: logs
    params:
      filter: any
      page: 1
      perPage: 30
- name: branch_protection
  endpoint:
    path: /docs/enable-branch-protection
    method: GET
    data_selector: steps
    params: {}
- name: socket-security
  endpoint:
    path: /socket/security
    method: POST
    data_selector: results
- name: logout
  endpoint:
    path: /socket/logout
    method: POST
    data_selector: null
    params: {}
- name: generate_manifest
  endpoint:
    path: /socket/manifest
    method: GET
    data_selector: manifest
- name: scan_create
  endpoint:
    path: /socket/scan/create
    method: POST
    data_selector: scan
- name: socket_security
  endpoint:
    path: /socket-security
    method: POST
    data_selector: results
- name: cdxgen
  endpoint:
    path: /cdxgen
    method: GET
- name: bitbucket-pipelines
  endpoint:
    path: /bitbucket-pipelines.yml
    method: POST
- name: organization_list
  endpoint:
    path: /organization/list
    method: GET
    data_selector: organizations
- name: organization_dependencies
  endpoint:
    path: /organization/dependencies
    method: GET
    data_selector: dependencies
- name: organization_policy_security
  endpoint:
    path: /organization/policy/security
    method: GET
    data_selector: security_policy
- name: organization_policy_license
  endpoint:
    path: /organization/policy/license
    method: GET
    data_selector: license_policy
- name: Socket Security Scan
  endpoint:
    path: /v0/scans
    method: POST
    data_selector: scan_results
- name: package_score
  endpoint:
    path: /socket/package
    method: GET
    data_selector: score
- name: azure-pipelines
  endpoint:
    path: /azure-pipelines.yml
    method: POST
- name: repository
  endpoint:
    path: /repository
    method: GET
    data_selector: repositories
- name: variable_group
  endpoint:
    path: /create-variable-group
    method: POST
    data_selector: variableGroup
    params:
      name: socket_security
      variables:
        api_key: SOCKET_SECURITY_API_KEY
- name: scan
  endpoint:
    path: /scan
    method: POST
    data_selector: scan
    params: {}
- name: scan_report
  endpoint:
    path: /scan/report
    method: POST
    data_selector: alerts
    params:
      SCAN_ID: <SCAN_ID>
      OUTPUT_PATH: <OUTPUT_PATH>
- name: socket wrapper
  endpoint:
    path: /socket/wrapper
    method: POST
    data_selector: status
    params: {}
- name: audit_log
  endpoint:
    path: /audit-log
    method: GET
    data_selector: logs
    params:
      perPage: 30
- name: dependency_manifest
  endpoint:
    path: /socket/manifest
    method: POST
    data_selector: manifest_data
    params: {}
- name: cdxgen
  endpoint:
    path: /cdxgen
    method: GET
- name: depscore
  endpoint:
    path: /depscore
    method: POST
    data_selector: packages
    params: {}
- name: socket-mcp
  endpoint:
    path: /mcp
    method: http
- name: socket-mcp
  endpoint:
    path: /mcpServers/socket-mcp
    method: POST
    data_selector: command
    params: {}
- name: organization_list
  endpoint:
    path: /socket/organization/list
    method: GET
    data_selector: organizations
    params: {}
- name: organization_dependencies
  endpoint:
    path: /socket/organization/dependencies
    method: GET
    data_selector: dependencies
    params: {}
- name: organization_policy_security
  endpoint:
    path: /socket/organization/policy/security
    method: GET
    data_selector: policy
    params: {}
- name: organization_policy_license
  endpoint:
    path: /socket/organization/policy/license
    method: GET
    data_selector: policy
    params: {}
- name: socket optimize
  endpoint:
    path: /optimize
    method: GET
- name: package
  endpoint:
    path: /package
    method: GET
    data_selector: results
- name: raw-npm
  endpoint:
    path: /raw-npm
    method: GET
- name: getIssuesByNPMPackage
  endpoint:
    path: /getIssuesByNPMPackage
    method: GET
    data_selector: issues
    params: {}
- name: getScoreByNPMPackage
  endpoint:
    path: /getScoreByNPMPackage
    method: GET
    data_selector: score
    params: {}
- name: repositories
  endpoint:
    path: /socket/repository
    method: GET
    data_selector: repositories
    params: {}
- name: issues
  endpoint:
    path: /npm/issues
    method: GET
    data_selector: issues
- name: score
  endpoint:
    path: /npm/score
    method: GET
    data_selector: score
- name: dependencies
  endpoint:
    path: /dependencies
    method: GET
    data_selector: dependencies
- name: reports
  endpoint:
    path: /report
    method: GET
    data_selector: reports
- name: organization
  endpoint:
    path: /org
    method: GET
    data_selector: organization
- name: quota
  endpoint:
    path: /quota
    method: GET
    data_selector: quota
- name: repositories
  endpoint:
    path: /repositories
    method: GET
    data_selector: repositories
- name: settings
  endpoint:
    path: /settings
    method: GET
    data_selector: settings
- name: sbom
  endpoint:
    path: /sbom
    method: GET
    data_selector: sbom
- name: fullscans
  endpoint:
    path: /fullscans
    method: GET
    data_selector: fullscans
- name: scan
  endpoint:
    path: /scan
    method: POST
    data_selector: scan_results
    params:
      permissions: full-scans:create
- name: scan_diff
  endpoint:
    path: /scan/diff
    method: GET
    data_selector: scan_diff_results
    params:
      permissions: full-scans:list
- name: scan_report
  endpoint:
    path: /scan/report
    method: POST
    data_selector: alerts
    params:
      SCAN_ID: scanId
      OUTPUT_PATH: outputPath
- name: socket wrapper
  endpoint:
    path: /socket/wrapper
    method: POST
    data_selector: response
- name: projectIgnorePaths
  endpoint:
    path: /docs/incremental-rollout/projectIgnorePaths
    method: GET
    data_selector: projectIgnorePaths
    params: {}
- name: triggerPaths
  endpoint:
    path: /docs/incremental-rollout/triggerPaths
    method: GET
    data_selector: triggerPaths
    params: {}
- name: API Tokens
  endpoint:
    path: /postapitoken
    method: post
- name: Quota
  endpoint:
    path: /getquota
    method: get
- name: List API Tokens
  endpoint:
    path: /getapitokens
    method: get
- name: List organizations
  endpoint:
    path: /getorganizations
    method: get
- name: Update API Token
  endpoint:
    path: /postapitokenupdate
    method: post
- name: Rotate API Token
  endpoint:
    path: /postapitokensrotate
    method: post
- name: Revoke API Token
  endpoint:
    path: /postapitokensrevoke
    method: post
- name: Get OpenAPI definition
  endpoint:
    path: /getopenapi
    method: get
- name: Get License Policy
  endpoint:
    path: /viewlicensepolicy
    method: get
- name: Update License Policy
  endpoint:
    path: /updateorglicensepolicy
    method: post
- name: List repositories
  endpoint:
    path: /getorgrepolist
    method: get
- name: List full scans
  endpoint:
    path: /getorgfullscanlist
    method: get
- name: Create full scan
  endpoint:
    path: /createorgfullscan
    method: post
- name: Get Threat Feed Items
  endpoint:
    path: /getthreatfeeditems
    method: get
- name: Get organization security policy
  endpoint:
    path: /getorgsecuritypolicy
    method: get
- name: Update Security Policy
  endpoint:
    path: /updateorgsecuritypolicy
    method: post
- name: API Tokens
  endpoint:
    path: /reference/api-tokens
    method: GET
- name: List organizations
  endpoint:
    path: /reference/getorganizations
    method: GET
- name: Get quotaget
  endpoint:
    path: /reference/getquota
    method: GET
- name: API Tokens
  endpoint:
    path: /postapitoken
    method: POST
    data_selector: null
    params: {}
- name: Quota
  endpoint:
    path: /getquota
    method: GET
    data_selector: null
    params: {}
- name: List Organizations
  endpoint:
    path: /getorganizations
    method: GET
    data_selector: null
    params: {}
- name: Get OpenAPI Definition
  endpoint:
    path: /getopenapi
    method: GET
    data_selector: null
    params: {}
- name: API Tokens
  endpoint:
    path: /reference/api-tokens
    method: GET
- name: List organizations
  endpoint:
    path: /reference/getorganizations
    method: GET
- name: Get quotaget
  endpoint:
    path: /reference/getquota
    method: GET
- name: getIssuesByNPMPackage
  endpoint:
    path: /getIssuesByNPMPackage
    method: GET
- name: getScoreByNPMPackage
  endpoint:
    path: /getScoreByNPMPackage
    method: GET
- name: createReportFromFilePaths
  endpoint:
    path: /createReportFromFilePaths
    method: POST
- name: getReportList
  endpoint:
    path: /getReportList
    method: GET
- name: getReport
  endpoint:
    path: /getReport
    method: GET
- name: issues
  endpoint:
    path: /npm/issues
    method: GET
    data_selector: records
    params: {}
- name: score
  endpoint:
    path: /npm/score
    method: GET
    data_selector: records
    params: {}
- name: dependencies
  endpoint:
    path: /dependencies
    method: GET
    data_selector: records
    params: {}
- name: org_info
  endpoint:
    path: /org
    method: GET
    data_selector: records
    params: {}
- name: quota
  endpoint:
    path: /quota
    method: GET
    data_selector: records
    params: {}
- name: reports
  endpoint:
    path: /report
    method: GET
    data_selector: records
    params: {}
- name: repositories
  endpoint:
    path: /repositories
    method: GET
    data_selector: records
    params: {}
- name: settings
  endpoint:
    path: /settings
    method: GET
    data_selector: records
    params: {}
- name: sbom
  endpoint:
    path: /sbom
    method: GET
    data_selector: records
    params: {}
- name: full_scans
  endpoint:
    path: /fullscans
    method: GET
    data_selector: records
    params: {}
- name: API Tokens
  endpoint:
    path: /postapitoken
    method: POST
    data_selector: tokens
- name: Quota
  endpoint:
    path: /getquota
    method: GET
    data_selector: quota
- name: Repositories
  endpoint:
    path: /getorgrepolist
    method: GET
    data_selector: repositories
- name: Security Policy
  endpoint:
    path: /getorgsecuritypolicy
    method: GET
    data_selector: securityPolicy
- name: Audit Log
  endpoint:
    path: /getauditlogevents
    method: GET
    data_selector: auditLogEvents
- name: issues_by_npm_package
  endpoint:
    path: /getIssuesByNPMPackage
    method: GET
    data_selector: issues
    params: {}
- name: score_by_npm_package
  endpoint:
    path: /getScoreByNPMPackage
    method: GET
    data_selector: score
    params: {}
- name: report_list
  endpoint:
    path: /getReportList
    method: GET
    data_selector: reports
    params: {}
- name: report
  endpoint:
    path: /getReport
    method: GET
    data_selector: report
    params:
      id: report_id
- name: API Tokens
  endpoint:
    path: /postapitoken
    method: post
    data_selector: null
    params: {}
- name: Quota
  endpoint:
    path: /getquota
    method: get
    data_selector: null
    params: {}
- name: Organizations
  endpoint:
    path: /getorganizations
    method: get
    data_selector: null
    params: {}
- name: OpenAPI Definition
  endpoint:
    path: /getopenapi
    method: get
    data_selector: null
    params: {}
- name: API Tokens
  endpoint:
    path: /reference/api-tokens
    method: GET
- name: List organizations
  endpoint:
    path: /reference/getorganizations
    method: GET
- name: List API Tokens
  endpoint:
    path: /reference/getapitokens
    method: GET
- name: Get quota
  endpoint:
    path: /reference/getquota
    method: GET
notes:
- API tokens are required to use the Socket CLI or Socket REST API.
- Ensure your API tokens are stored securely and rotate them if you have concerns
  about their usage.
- Authenticate requests using Bearer token in Authorization header
- Socket's API limits the amount of requests to 600 per minute.
- This endpoint consumes 10 units of your quota.
- 'This endpoint requires the following org token scopes: historical:dependencies-trend'
- 'This endpoint requires the following org token scopes: historical:alerts-list'
- This endpoint consumes 1 unit of your quota.
- 'This endpoint requires the following org token scopes: full-scans:list'
- The maximum number of files you can upload at a time is 5000 and each file can be
  no bigger than 67 MB.
- 'This endpoint requires the following org token scopes: full-scans:delete'
- This endpoint is deprecated.
- 'This endpoint requires the following org token scopes: report:read'
- 'This endpoint requires the following org token scopes: diff-scans:create, full-scans:list'
- 'This endpoint requires the following org token scopes: diff-scans:list'
- 'This endpoint requires the following org token scopes: triage:alerts-list'
- The full scans must be in the same repository.
- 'This endpoint requires the following org token scopes: repo-label:update'
- 'This endpoint requires the following org token scopes: repo:list'
- 'This endpoint requires the following org token scopes: repo-label:list'
- Repository label settings currently only support issueRules and issueRulesPolicyDefault.
- This endpoint is deprecated. Use the successor version instead.
- This endpoint requires an Enterprise Plan with Threat Feed add-on.
- Repository label settings currently only support `issueRules` and `issueRulesPolicyDefault`.
- 'This endpoint requires the following org token scopes: security-policy:read'
- 'This endpoint requires the following org token scopes: security-policy:update'
- 'This endpoint requires the following org token scopes: license-policy:read'
- 'This endpoint requires the following org token scopes: license-policy:update'
- 'This endpoint requires the following org token scopes: socket-basics:read'
- 'This endpoint requires the following org token scopes: integration:list'
- 'This endpoint requires the following org token scopes: audit-log:list.'
- 'This endpoint requires the following org token scopes: api-tokens:create'
- This endpoint consumes 0 units of your quota.
- No Scopes Required, but authentication is required.
- The API Token created must use a subset of permissions the API token creating them.
- No Scopes Required, but authentication is required
- 'This endpoint requires the following org token scopes: api-tokens:rotate'
- 'This endpoint requires the following org token scopes: api-tokens:revoke'
- This endpoint requires the following org token scopes.
- This endpoint consumes 100 units of your quota.
- 'This endpoint requires the following org token scopes: packages:list'
- 'This endpoint requires the following org token scopes: report:list'
- 'This endpoint requires the following org token scopes: historical:snapshots-list'
- Paginated list of audit log events.
- 'This endpoint requires the following org token scopes: audit-log:list'
- Socket does not process PII (personally-identifiable information) or touch your
  customer’s private information in any way.
- Socket SCA with Reachability Analysis allows you to safely disregard unreachable
  vulnerabilities and easily patch the ones that matter.
- Dependency Reachability is already enabled by default for users on the free tier—no
  action needed.
- For paid plans, it’s currently opt-in via the Settings page.
- Precomputed reachability enhances dependency reachability by filtering out CVEs
  that affect functions never called within transitive dependencies.
- Precomputed reachability enables Socket to flag around 60% of vulnerabilities in
  transitive dependencies as irrelevant.
- It works solely from your manifest files (e.g., package.json, go.mod, etc.).
- It does not require access to your application’s source code.
- It’s available immediately to all Socket users with no additional configuration.
- Socket fights vulnerabilities and provides visibility, defense-in-depth, and proactive
  supply chain protection for your open source dependencies.
- Full application reachability requires a small amount of manual configuration per
  repository and can be compute-intensive.
- Reachability analysis is computationally more expensive than traditional vulnerability
  scanning, which may result in long-running scans for certain types of projects.
- Socket analyzes open source dependencies (i.e. code that is publicly available)
  and reports our findings to customers.
- Socket employs Reachability Analysis to eliminate more than 80% false positives.
- Good noise reduction – It offers better noise reduction than dependency reachability
  by analyzing usage at the function level.
- High performance – Results for most dependency chains are precomputed and cached
  by Socket, making the analysis extremely fast.
- Manifest-based – It works solely from your manifest files (e.g., package.json, go.mod,
  etc.).
- No source code access required – It does not require access to your application’s
  source code.
- Zero setup – It’s available immediately to all Socket users with no additional configuration.
- Excellent noise reduction – Up to 90% of all vulnerability alerts can be flagged
  as irrelevant.
- Powerful triaging support – Provides a precise list of function calls from your
  application source code that lead to reachable vulnerabilities, making it easier
  to assess impact and severity.
- On-premise analysis – While the analysis reads your application’s source code, it
  runs entirely on-premise (on your machine) and does not share any source code with
  Socket.
- Phantom dependency detection – phantom dependencies are automatically detected and
  considered in the reachability analysis.
- It requires a small amount of manual configuration per repository and can be compute-intensive,
  depending on the programming language(s) and the size of the application.
- Using phantom dependencies is generally considered an anti-pattern, as it can lead
  to bugs and unpredictable behavior.
- The following only applies to projects using `build.sbt`.
- Committing a gradle.lockfile to your source control is the easiest way to use Socket
  with Gradle.
- Socket scans artifacts published to PyPI, with Anaconda Cloud support planned on
  Socket’s roadmap.
- Socket enhances security by detecting malicious packages early, sometimes even before
  a CVE is issued.
- Package has a dependency with a floating version range. This can cause issues if
  the dependency publishes a new major version.
- This package is not very popular.
- Package has dependencies with an invalid semantic version. This could be a sign
  of beta, low quality, or unmaintained dependencies.
- This package contains minified code. This may be harmless in some cases where minified
  code is included in packaged libraries, however packages on npm should not minify
  code.
- The maintainer of the package marked it as deprecated. This could indicate that
  a single version should not be used, or that the package is no longer maintained
  and any new vulnerabilities will not be fixed.
- Package has not been updated in more than 5 years and may be unmaintained. Problems
  with the package may go unaddressed.
- Severity and Priority are not customizable.
- Action is useful for customization and policy tuning.
- Only applies to projects using build.sbt
- If your project uses gradle, you should look at socket cdxgen --help or socket manifest
  gradle --help
- If your project uses pom.xml files directly, you can skip generating the manifest
  file altogether because that's what pom.xml is.
- Organizational Alerts will only populate once a pull request (PR) has been merged
  into the default branch.
- Once a PR is merged, it can take 15 minutes to an hour for the Org Alerts to populate.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Default security policy alerts are designed to help organizations manage and mitigate
  supply chain risks.
- Members can only read API tokens with the visibility set to 'organization members'.
- You can configure a Slack Webhook URL in your organization dashboard which will
  receive any new or updated pull request notifications generated by the Socket Organization's
  associated GitHub app installation.
- Set alerts to 'Ignore' if you don't want to see these alerts at all.
- Choose 'Monitor' for alerts you're still evaluating.
- Switch to 'Warn' for alerts you trust and need to act on.
- '''Block'' is for the highest confidence and severity issues.'
- Vanta often revokes these tokens.
- Tokens may be invalidated due to no new scan results within a 24-hour window, high
  alert volume, or other undocumented reasons.
- SSO is available exclusively for customers on the Enterprise plan.
- Integrating SSO with Socket is straightforward if your company uses an identity
  provider that supports SAML or OIDC protocols.
- Effective alert triage and security policy configuration ensure that security issues
  are addressed promptly and appropriately.
- Socket watches for changes to package manifest files such as package.json, package-lock.json,
  and yarn.lock.
- Socket alerts developers when packages change in security-relevant ways.
- Package scores are influenced by project attributes like popularity, size, and maintenance
  activity.
- Very minimal permissions
- Does not use write permissions
- Never uploads your source code
- Bot commands must be the very first thing written in a comment, must be made by
  a contributor on the repo and can only be written in comments to the main pull request
  thread.
- Reports check the state of the pull request discussion whenever they are run, so
  re-running older check runs will take into account all the bot commands currently
  present in the pull request thread.
- Scans for all repositories do not occur immediately and require a commit or PR containing
  supported manifest files.
- Maintaining the default set of enabled alerts ensures your codebase is protected
  against common and critical security risks.
- Ensure that Socket is properly integrated with your GitHub repository. If you haven't
  already, install the Socket GitHub app from the GitHub Marketplace and configure
  it to monitor your repository.
- GitHub requires the 'Act on Your Behalf' permission for third-party apps, like Socket,
  that use GitHub as an Identity Provider (IdP) to verify user identities.
- License Enforcement helps prevent non-compliant code from entering your codebase.
- The Action Workflow currently uses the auto generated Github Actions token based
  on the permissions that are requested in the Workflow.
- Create a Socket API Key for integration.
- Use the generated project access token for GITLAB_TOKEN.
- Integrates Socket into Gitlab Pipeline to provide security against Supply Chain
  Attacks.
- The Audit Log provides organization owners and administrators on Socket with a means
  to monitor and audit team member activities as they pertain to their organization.
- Create a Socket API Key — Directions available in documentation
- Add SOCKET_SECURITY_API_KEY as a secured repository variable
- This pipeline runs Socket Security scans on every commit to any branch
- Tokens may be invalidated due to no new scan results within a 24-hour window, high
  alert volume, and other undocumented reasons.
- The Socket CLI will analyze dependencies based on commit and branch metadata.
- Make sure the agent has permissions and environment to run Python and shell scripts.
- Supports over 20 identity providers.
- The pipeline runs on every commit to any branch.
- Blocking is enabled for PRs.
- Blocking is disabled for main/master using --disable-blocking.
- Socket watches for changes to 'package manifest' files such as package.json, package-lock.json,
  and yarn.lock.
- You can either create your API token yourself if you have permissions in your socket.dev
  account or you can have your Admin create it for you with the Reports scope.
- If you were using the Socket CLI before v1.0.0 you may need to go through this guide
  to see if something changed.
- The mandatory org name (slug) argument has been dropped from all commands that had
  it in favor of a stored default org.
- Socket is designed to work without the need to analyze, upload, or share your source
  code.
- This feature requires an Enterprise Plan.
- Ensure that Socket is properly integrated with your GitHub repository.
- Regularly review and triage alerts generated by Socket to maintain the security
  of your codebase.
- This command is intended to use in CI runs to allow automated systems to accept
  or reject a current build.
- Granting 'Act on Your Behalf' permission is optional.
- Requires setup of Socket API Key and Gitlab Token in CI/CD variables
- All suggested cdxgen commands imply that you put 'socket' before them, like `socket
  cdxgen -t java`.
- These integrations do not perform authentication against organizations
- Windows support is limited to WSL for now
- In order to run the Socket CLI you will need Python3, pip, git, and python3.11-venv
  installed in your Jenkins Runners/Agents.
- The deep score for a package should give you a good indication of whether it's safe
  to run a package. But mind you, we can only report the things that we actually know
  out about!
- Temporarily disable the Socket npm wrapper
- 'API Token Requirements: Quota: 1 unit, Permissions: full-scans:create'
- 'API Token Requirements: Quota: 2 units, Permissions: full-scans:list security-policy:read'
- Access to this feature requires a special Thread Feed license.
- 'API Token Requirements: Quota: 1 unit, Permissions: report:write'
- Enable or disable the Socket npm/npx wrapper
- Changes in command aliases only take effect after (re)starting a terminal or by
  sourcing your RC file
- 'Quota: 101 units'
- 'Permissions: full-scans:create and packages:list'
- Access to this feature requires an Enterprise Plan.
- If the Scan is not 'healthy', ie. it has alerts that violate your security or license
  policy, then the exit code will be non-zero.
- The CLI itself runs locally, but certain commands need to communicate with our public
  API.
- Logs out of the Socket API and clears all Socket credentials from disk
- Generate an SBOM of target directory using CycloneDX
- This calls CycloneDX which will generate an SBOM of a directory of your choosing
- During this beta, these integrations do not perform authentication against organizations,
  do not use socket.yml, and are limited to default issue sets.
- Windows support is limited to WSL for now.
- You need a Socket API key to use Socket MCP.
- Requires an internet connection for reports on package manifest files. This is to
  access the Socket API for analysis.
- The deep score for a package should give you a good indication of whether it's safe
  to run a package.
- 'This does the opposite of `socket npm`: it will execute the real `npm` command
  without Socket.'
- 'This does the opposite of `socket npx`: it will execute the real `npx` command
  without Socket.'
- Use at your own risk.
- Replace 'YOUR_API_KEY' with your actual API token
- Repo names must contain only a-z, A-Z, 0-9, ., _, and - and can be up to 100 characters
  long.
- Branch names must be 1–255 characters long and cannot contain certain special characters.
- Currently, the extension does not support manual scanning of webpages or viewing
  reports on potential vulnerabilities directly from the extension interface.
- By default only the warn and error policy level alerts are reported.
- The extension requires permission to read and modify data on websites you visit.
- If no package is detected, there is absolutely no request to Socket's servers being
  made.
- Requires setup of connected app in Google Workspace
- While enabled, the wrapper makes it so that when you call npm/npx on your machine,
  it will automatically actually run `socket npm` / `socket npx` instead.
- Changes in command aliases only take effect after (re)starting a terminal or by
  'sourcing' your RC file.
- Sample test packages are safe to install.
- When using directives like `!` and `*` in your project ignore paths, be sure that
  you wrap your selector rules in `"` (double quotes).
- The only data we collect from your repository are manifest and associated lock files.
- The socket.json file is a local configuration file to be consumed by the CLI.
- Public server requires no API keys or registration
- Specifying a custom user agent is good practice when shipping a piece of code that
  others can use to make requests.
- The only required permission scope is `packages:list`, which allows the MCP server
  to query package metadata for dependency scores.
- Requires an internet connection for reports on package manifest files.
- The extension only works on local files and does not integrate any organization-level
  settings like the GitHub App does.
- The extension only works on the current files on disk and not historical data.
- The extension provides real-time security metrics and alerts while browsing package
  pages.
- For organizations that are interested in deploying the Socket Web Extension for
  Chrome via Google Workspace
- The Socket API is designed to bolster application security for developers and security
  teams.
errors:
- '429: Maximum quota exceeded'
- '429: Too Many Requests'
- 400 Bad request
- 401 Unauthorized
- 403 Insufficient max_quota for API method
- 404 Resource not found
- 429 Insufficient quota for API route
- '400 Bad request: Check request parameters'
- '401 Unauthorized: Check token or permissions'
- '403 Insufficient max_quota for API method: Review quota limits'
- 'full-scans:list: Requires the following org token scopes'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '400 Bad request: Check the request parameters'
- '401 Unauthorized: Recheck token or permissions'
- '403 Insufficient max_quota for API method: Review your API usage'
- '404 Resource not found: Verify the resource ID'
- '429 Insufficient quota for API route: Consider reducing the request rate'
- '400 Bad request: Has additional fields'
- '401 Unauthorized: Has additional fields'
- '403 Insufficient max_quota for API method: Has additional fields'
- '404 Resource not found: Has additional fields'
- '429 Insufficient quota for API route: Has additional fields'
- 'threat-feed:list: Requires the following org token scopes'
- 'Quota units consumed: 1'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: This endpoint consumes 100 units of your quota.'
- '400 Bad request: message, details required'
- '401 Unauthorized: message, details required'
- '403 Insufficient max_quota for API method: message, details required'
- '404 Resource not found: message, details required'
- '429 Insufficient quota for API route: message, details required'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'Wildcard dependency: Package has a dependency with a floating version range. This
  can cause issues if the dependency publishes a new major version.'
- 'Unpopular package: This package is not very popular.'
- 'Bad dependency semver: Package has dependencies with an invalid semantic version.
  This could be a sign of beta, low quality, or unmaintained dependencies.'
- 'Minified code: This package contains minified code. This may be harmless in some
  cases where minified code is included in packaged libraries, however packages on
  npm should not minify code.'
- '403 Forbidden: Requires audit-log:list permission'
- 'Non-Zero Exit Code: The generated report returns ''healthy'': false'
- 'Invalid API Key: Ensure the API key is correctly set in the secrets.'
- 'Permission Denied: Check GitHub permissions for the token.'
- 'Quota: 1 unit'
- 'Permissions: threat-feed:list'
- This feature requires a Threat Feed license.
- '401 Unauthorized: Recheck API Token permissions'
- 'Non-Zero Exit Code: The CLI will return a non-zero exit code in the following scenarios:
  The generated report returns ''healthy'': false or An unexpected error occurs during
  execution.'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Ensure API token has the correct permissions.'
- '404 Not Found: The specified scan ID does not exist.'
- 'Quota: 2 units'
- 'Permissions: full-scans:list security-policy:read'
- The extension will still function without an API token, providing one enables additional
  functionality.
auth_info:
  mentioned_objects:
  - org token scopes
  - triage:alerts-update
  - license-policy:read
  - security-policy:read
  - audit-log:list
  - API token
client:
  base_url: https://api.socket.dev/v0
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    accept: application/json
source_metadata: null
