resources:
- name: users
  endpoint:
    path: /reference/users-list
    method: GET
- name: clients
  endpoint:
    path: /reference/clients-list
    method: GET
- name: devices
  endpoint:
    path: /reference/devices-list
    method: GET
- name: webhooks
  endpoint:
    path: /reference/webhooks-list
    method: GET
- name: ecosystems
  endpoint:
    path: /reference/ecosystems-list
    method: GET
- name: environments
  endpoint:
    path: /reference/environments-list
    method: GET
- name: zones
  endpoint:
    path: /reference/zones-list
    method: GET
- name: users
  endpoint:
    path: /reference/users-list
    method: GET
- name: clients
  endpoint:
    path: /reference/clients-list
    method: GET
- name: devices
  endpoint:
    path: /reference/devices-list
    method: GET
- name: webhooks
  endpoint:
    path: /reference/webhooks-list
    method: GET
- name: clients
  endpoint:
    path: /reference/clients-list
    method: GET
- name: environments
  endpoint:
    path: /reference/environments-list
    method: GET
- name: zones
  endpoint:
    path: /reference/zones-list
    method: GET
- name: devices
  endpoint:
    path: /reference/devices-list
    method: GET
- name: service_classes
  endpoint:
    path: /reference/service-classes-list
    method: GET
- name: MediaControl
  endpoint:
    path: /MediaControl
    method: GET
- name: MediaInfo
  endpoint:
    path: /MediaInfo
    method: GET
- name: AudioOutput
  endpoint:
    path: /AudioOutput
    method: GET
- name: devices
  endpoint:
    path: /reference/devices
    method: GET
    data_selector: devices
- name: ecosystems
  endpoint:
    path: /reference/ecosystems
    method: GET
    data_selector: ecosystems
- name: environments
  endpoint:
    path: /reference/environments
    method: GET
    data_selector: environments
- name: users
  endpoint:
    path: /reference/users
    method: GET
    data_selector: users
- name: webhooks
  endpoint:
    path: /reference/webhooks
    method: GET
    data_selector: webhooks
- name: zones
  endpoint:
    path: /reference/zones
    method: GET
    data_selector: zones
- name: identifiers
  endpoint:
    path: /reference/identifiers
    method: GET
    data_selector: records
- name: ids
  endpoint:
    path: /reference/ids
    method: GET
    data_selector: records
- name: aliases
  endpoint:
    path: /reference/aliases
    method: GET
    data_selector: records
- name: domains
  endpoint:
    path: /reference/domains
    method: GET
    data_selector: records
- name: Domain
  endpoint:
    path: /reference/domains
    method: GET
- name: list_devices
  endpoint:
    path: /reference/devices-list
    method: GET
- name: create_device
  endpoint:
    path: /reference/devices-create
    method: POST
- name: get_device
  endpoint:
    path: /reference/devices-info
    method: GET
- name: update_device
  endpoint:
    path: /reference/devices-update
    method: PUT
- name: delete_device
  endpoint:
    path: /reference/devices-delete
    method: DELETE
- name: view_device_history
  endpoint:
    path: /reference/devices-history
    method: GET
- name: list_devices
  endpoint:
    path: /reference/devices-list
    method: GET
- name: create_device
  endpoint:
    path: /reference/devices-create
    method: POST
- name: get_device
  endpoint:
    path: /reference/devices-info
    method: GET
- name: update_device
  endpoint:
    path: /reference/devices-update
    method: PUT
- name: delete_device
  endpoint:
    path: /reference/devices-delete
    method: DEL
- name: device_history
  endpoint:
    path: /reference/devices-history
    method: GET
- name: list_service_properties
  endpoint:
    path: /reference/devices-services-list
    method: GET
- name: get_service_property
  endpoint:
    path: /reference/devices-services-info
    method: GET
- name: update_service_property
  endpoint:
    path: /reference/devices-services-update
    method: PUT
- name: update_multiple_service_properties
  endpoint:
    path: /reference/devices-services-alter
    method: PUT
- name: delete_service_property
  endpoint:
    path: /reference/devices-services-delete
    method: DEL
- name: call_service_method
  endpoint:
    path: /reference/devices-services-call-method
    method: POST
- name: ecosystems
  endpoint:
    path: /reference/ecosystems-list
    method: GET
    data_selector: ecosystems
    params: {}
- name: clients
  endpoint:
    path: /reference/clients-list
    method: GET
    data_selector: clients
    params: {}
- name: devices
  endpoint:
    path: /reference/devices-list
    method: GET
    data_selector: devices
    params: {}
- name: webhooks
  endpoint:
    path: /reference/webhooks-list
    method: GET
    data_selector: webhooks
    params: {}
- name: users
  endpoint:
    path: /reference/users-list
    method: GET
    data_selector: users
    params: {}
- name: environments
  endpoint:
    path: /reference/environments-list
    method: GET
- name: create_environment
  endpoint:
    path: /reference/environments-create
    method: POST
- name: get_environment
  endpoint:
    path: /reference/environments-info
    method: GET
- name: update_environment
  endpoint:
    path: /reference/environments-update
    method: PUT
- name: delete_environment
  endpoint:
    path: /reference/environments-delete
    method: DELETE
- name: environments_history
  endpoint:
    path: /reference/environments-history
    method: GET
- name: environments_services_list_all
  endpoint:
    path: /reference/environments-services-list-all
    method: GET
- name: environments_services_list
  endpoint:
    path: /reference/environments-services-list
    method: GET
- name: environments_services_update
  endpoint:
    path: /reference/environments-services-update
    method: PUT
- name: environments_services_alter
  endpoint:
    path: /reference/environments-services-alter
    method: PUT
- name: environments_services_call_method
  endpoint:
    path: /reference/environments-services-call-method
    method: POST
- name: claim_environment
  endpoint:
    path: /reference/environments-claim
    method: POST
- name: list_behaviors
  endpoint:
    path: /reference/list-behaviors
    method: GET
- name: get_behavior
  endpoint:
    path: /reference/get-a-behavior-1
    method: GET
- name: create_behavior
  endpoint:
    path: /reference/create-a-behavior
    method: POST
- name: update_behavior
  endpoint:
    path: /reference/update-a-behavior-1
    method: PUT
- name: delete_behavior
  endpoint:
    path: /reference/delete-a-behavior
    method: DELETE
- name: start_behavior
  endpoint:
    path: /reference/start-a-behavior
    method: POST
- name: enable_behavior
  endpoint:
    path: /reference/enable-a-behavior-1
    method: POST
- name: disable_behavior
  endpoint:
    path: /reference/disable-a-behavior-1
    method: POST
- name: list_behavior_actions
  endpoint:
    path: /reference/list-behavior-actions
    method: GET
- name: get_action
  endpoint:
    path: /reference/get-an-action
    method: GET
- name: start_action
  endpoint:
    path: /reference/start-an-action
    method: POST
- name: stop_action
  endpoint:
    path: /reference/stop-an-action
    method: POST
- name: list_user_permissions
  endpoint:
    path: /reference/list-user-permissions
    method: GET
- name: get_permissions
  endpoint:
    path: /reference/get-permissions-2
    method: GET
- name: update_permissions
  endpoint:
    path: /reference/update-user-permissions
    method: PUT
- name: remove_permissions
  endpoint:
    path: /reference/remove-permissions-1
    method: DELETE
- name: list_environments
  endpoint:
    path: /reference/environments-list
    method: GET
- name: create_environment
  endpoint:
    path: /reference/environments-create
    method: POST
- name: get_environment
  endpoint:
    path: /reference/environments-info
    method: GET
- name: update_environment
  endpoint:
    path: /reference/environments-update
    method: PUT
- name: delete_environment
  endpoint:
    path: /reference/environments-delete
    method: DELETE
- name: environments_history
  endpoint:
    path: /reference/environments-history
    method: GET
- name: environments_services_list_all
  endpoint:
    path: /reference/environments-services-list-all
    method: GET
- name: environments_services_list
  endpoint:
    path: /reference/environments-services-list
    method: GET
- name: environments_services_update
  endpoint:
    path: /reference/environments-services-update
    method: PUT
- name: environments_services_alter
  endpoint:
    path: /reference/environments-services-alter
    method: PUT
- name: environments_services_call_method
  endpoint:
    path: /reference/environments-services-call-method
    method: POST
- name: claim_environment
  endpoint:
    path: /reference/environments-claim
    method: POST
- name: list_behaviors
  endpoint:
    path: /reference/list-behaviors
    method: GET
- name: get_behavior
  endpoint:
    path: /reference/get-a-behavior-1
    method: GET
- name: create_behavior
  endpoint:
    path: /reference/create-a-behavior
    method: POST
- name: update_behavior
  endpoint:
    path: /reference/update-a-behavior-1
    method: PUT
- name: delete_behavior
  endpoint:
    path: /reference/delete-a-behavior
    method: DELETE
- name: start_behavior
  endpoint:
    path: /reference/start-a-behavior
    method: POST
- name: enable_behavior
  endpoint:
    path: /reference/enable-a-behavior-1
    method: POST
- name: disable_behavior
  endpoint:
    path: /reference/disable-a-behavior-1
    method: POST
- name: list_behavior_actions
  endpoint:
    path: /reference/list-behavior-actions
    method: GET
- name: get_action
  endpoint:
    path: /reference/get-an-action
    method: GET
- name: start_action
  endpoint:
    path: /reference/start-an-action
    method: POST
- name: stop_action
  endpoint:
    path: /reference/stop-an-action
    method: POST
- name: list_user_permissions
  endpoint:
    path: /reference/list-user-permissions
    method: GET
- name: get_permissions
  endpoint:
    path: /reference/get-permissions-2
    method: GET
- name: update_permissions
  endpoint:
    path: /reference/update-user-permissions
    method: PUT
- name: remove_permissions
  endpoint:
    path: /reference/remove-permissions-1
    method: DELETE
- name: list_zones
  endpoint:
    path: /reference/zones-list
    method: GET
- name: create_zone
  endpoint:
    path: /reference/zones-create
    method: POST
- name: get_zone
  endpoint:
    path: /reference/zones-info
    method: GET
- name: update_zone
  endpoint:
    path: /reference/zones-update
    method: PUT
- name: delete_zone
  endpoint:
    path: /reference/zones-delete
    method: DELETE
- name: list_devices_in_zone
  endpoint:
    path: /reference/zones-devices-list
    method: GET
- name: list_items_in_zone
  endpoint:
    path: /reference/zones-items-list
    method: GET
- name: alter_items_in_zone
  endpoint:
    path: /reference/zones-items-alter
    method: PUT
- name: create_zone_item
  endpoint:
    path: /reference/zones-items-create
    method: POST
- name: delete_zone_item
  endpoint:
    path: /reference/zones-items-delete
    method: DELETE
- name: list_service_properties_in_zone
  endpoint:
    path: /reference/zones-services
    method: GET
- name: zones
  endpoint:
    path: /reference/zones-list
    method: GET
- name: create_zone
  endpoint:
    path: /reference/zones-create
    method: POST
- name: get_zone
  endpoint:
    path: /reference/zones-info
    method: GET
- name: update_zone
  endpoint:
    path: /reference/zones-update
    method: PUT
- name: delete_zone
  endpoint:
    path: /reference/zones-delete
    method: DEL
- name: list_devices_in_zone
  endpoint:
    path: /reference/zones-devices-list
    method: GET
- name: list_items_in_zone
  endpoint:
    path: /reference/zones-items-list
    method: GET
- name: alter_items_in_zone
  endpoint:
    path: /reference/zones-items-alter
    method: PUT
- name: create_zone_item
  endpoint:
    path: /reference/zones-items-create
    method: POST
- name: delete_zone_item
  endpoint:
    path: /reference/zones-items-delete
    method: DEL
- name: list_services_in_zone
  endpoint:
    path: /reference/zones-services
    method: GET
- name: list_service_selector_property
  endpoint:
    path: /reference/zones-services-info-list
    method: GET
- name: update_service_property
  endpoint:
    path: /reference/zones-services-alter
    method: PUT
- name: update_multiple_service_properties
  endpoint:
    path: /reference/update-multiple-service-properties
    method: PUT
- name: call_service_method
  endpoint:
    path: /reference/zones-services-call-method
    method: POST
- name: list_factor_values
  endpoint:
    path: /reference/list-factor-values
    method: GET
- name: get_factor_value
  endpoint:
    path: /reference/get-a-factor-value
    method: GET
- name: update_factor_value
  endpoint:
    path: /reference/update-a-factor-value
    method: PUT
- name: get_presence_mode
  endpoint:
    path: /reference/get-presence-mode
    method: GET
- name: set_presence_mode
  endpoint:
    path: /reference/set-presence-mode
    method: PUT
- name: get_presence
  endpoint:
    path: /reference/get-presence
    method: GET
- name: list_behaviors
  endpoint:
    path: /reference/list-behaviors-1
    method: GET
- name: get_behavior
  endpoint:
    path: /reference/get-a-behavior
    method: GET
- name: create_behavior
  endpoint:
    path: /reference/create-a-behavior-1
    method: POST
- name: update_behavior
  endpoint:
    path: /reference/update-a-behavior
    method: PUT
- name: delete_behavior
  endpoint:
    path: /reference/delete-a-behavior-1
    method: DEL
- name: start_behavior
  endpoint:
    path: /reference/start-a-behavior-1
    method: POST
- name: enable_behavior
  endpoint:
    path: /reference/enable-a-behavior
    method: POST
- name: disable_behavior
  endpoint:
    path: /reference/disable-a-behavior
    method: POST
- name: list_actions
  endpoint:
    path: /reference/list-behavior-actions-1
    method: GET
- name: get_action
  endpoint:
    path: /reference/start-behavior-action
    method: GET
- name: start_action
  endpoint:
    path: /reference/start-a-behavior-action
    method: POST
- name: stop_action
  endpoint:
    path: /reference/stop-a-behavior-action
    method: POST
- name: devices
  endpoint:
    path: /devices/{id}/services/BinarySwitch.switch
    method: PUT
    data_selector: value
    params: {}
- name: users
  endpoint:
    path: /reference/users
    method: GET
    data_selector: users
    params: {}
- name: users
  endpoint:
    path: /reference/users-list
    method: GET
- name: webhooks
  endpoint:
    path: /reference/webhooks-list
    method: GET
- name: create_webhook
  endpoint:
    path: /reference/webhooks-create
    method: POST
- name: get_webhook
  endpoint:
    path: /reference/webhooks-info
    method: GET
- name: update_webhook
  endpoint:
    path: /reference/webhooks-update
    method: POST
- name: delete_webhook
  endpoint:
    path: /reference/webhooks-delete
    method: DEL
- name: invoke_webhook
  endpoint:
    path: /reference/webhooks-invoke
    method: POST
- name: create_webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: ''
    params: {}
- name: create_device
  endpoint:
    path: /devices/
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices/
    method: POST
    data_selector: id
    params: {}
- name: webhooks
  endpoint:
    path: /reference/webhooks
    method: GET
- name: webhooks v2
  endpoint:
    path: /reference/webhooks-v2
    method: GET
- name: localsettings
  endpoint:
    path: /projects/droplit-edge/localsettings.json
    method: GET
    data_selector: settings
- name: clients
  endpoint:
    path: /reference/clients-list
    method: GET
- name: devices
  endpoint:
    path: /reference/devices-list
    method: GET
- name: ecosystems
  endpoint:
    path: /reference/ecosystems-list
    method: GET
- name: environments
  endpoint:
    path: /reference/environments-list
    method: GET
- name: users
  endpoint:
    path: /reference/users-list
    method: GET
- name: webhooks
  endpoint:
    path: /reference/webhooks-list
    method: GET
- name: zones
  endpoint:
    path: /reference/zones-list
    method: GET
- name: clients
  endpoint:
    path: /reference/clients-list
    method: GET
- name: devices
  endpoint:
    path: /reference/devices-list
    method: GET
- name: ecosystems
  endpoint:
    path: /reference/ecosystems-list
    method: GET
- name: environments
  endpoint:
    path: /reference/environments-list
    method: GET
- name: DeviceInfo
  endpoint:
    path: /DeviceInfo
    method: GET
    data_selector: deviceInfo
    params: {}
- name: DeviceServiceMember
  endpoint:
    path: /DeviceServiceMember
    method: GET
    data_selector: deviceInfo
- name: BinarySwitch
  endpoint:
    path: /services/BinarySwitch
    method: GET
- name: ColorTemperature
  endpoint:
    path: /services/ColorTemperature
    method: GET
- name: DimmableSwitch
  endpoint:
    path: /services/DimmableSwitch
    method: GET
- name: LightColor
  endpoint:
    path: /services/LightColor
    method: GET
- name: thermostat
  endpoint:
    path: /thermostat
    method: GET
- name: devices
  endpoint:
    path: /reference/devices-list
    method: GET
- name: coffee_maker
  endpoint:
    path: /services/coffee_maker
    method: GET
- name: motion_sensor
  endpoint:
    path: /services/motion_sensor
    method: GET
- name: binary_switch
  endpoint:
    path: /services/binary_switch
    method: POST
- name: provision_info
  endpoint:
    path: /provision/info
    method: GET
    data_selector: EdgeId
    params: {}
- name: wifi_networks
  endpoint:
    path: /provision/list
    method: GET
    data_selector: networks
- name: wifi_provisioning
  endpoint:
    path: /provision/wifi
    method: POST
- name: edge_id
  endpoint:
    path: /droplit-edge
    method: GET
    data_selector: edgeId
- name: wifi_config
  endpoint:
    path: /config/wifi
    method: GET
    data_selector: items
- name: connect_to_network
  endpoint:
    path: /config/wifi
    method: PUT
- name: account
  endpoint:
    path: /api/account
    method: GET
- name: clients
  endpoint:
    path: /api/clients
    method: GET
- name: devices
  endpoint:
    path: /api/devices
    method: GET
- name: ecosystems
  endpoint:
    path: /api/ecosystems
    method: GET
- name: environments
  endpoint:
    path: /api/environments
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: webhooks
  endpoint:
    path: /api/webhooks
    method: GET
- name: zone
  endpoint:
    path: /api/zones
    method: GET
- name: zone_id
  endpoint:
    path: /api/zones/:id
    method: GET
- name: zone_devices
  endpoint:
    path: /api/zones/:id/devices
    method: GET
- name: zone_items
  endpoint:
    path: /api/zones/:id/items
    method: GET
- name: zone_item
  endpoint:
    path: /api/zones/:id/items/:itemId
    method: GET
- name: zone_item_services
  endpoint:
    path: /api/zones/:id/items/services
    method: GET
- name: zone_item_service_selector
  endpoint:
    path: /api/zones/:id/items/services/:selector
    method: GET
- name: ecosystems
  endpoint:
    path: /api/ecosystems
    method: OPTIONS
    data_selector: get
    params: {}
- name: ecosystem_details
  endpoint:
    path: /api/ecosystems/C57146c78149e6c3039e708b6
    method: OPTIONS
    data_selector: get
    params:
      id:
        in: path
        type: string
        match: ^[A-Z]{1}[a-z0-9]{24}$
        required: true
- name: environments
  endpoint:
    path: /environments
    method: GET
    data_selector: items
    params: {}
- name: users
  endpoint:
    path: /reference/users-list
    method: GET
- name: clients
  endpoint:
    path: /reference/clients-list
    method: GET
- name: clients
  endpoint:
    path: /reference/clients-list
    method: GET
- name: devices
  endpoint:
    path: /reference/devices-list
    method: GET
- name: ecosystems
  endpoint:
    path: /reference/ecosystems-list
    method: GET
- name: devices
  endpoint:
    path: /reference/devices-list
    method: GET
- name: ecosystems
  endpoint:
    path: /reference/ecosystems-list
    method: GET
- name: environments
  endpoint:
    path: /reference/environments-list
    method: GET
- name: environment
  endpoint:
    path: /environments/
    method: GET
    params:
      ecosystemId: C9ba0b90d2bcc7b87272bb3c2
      edgeId: b6:2e:e2:59:0c:21
- name: devices
  endpoint:
    path: /devices/
    method: GET
    params:
      environmentId: E59e347bc2a0c6199651d6da1
      filter: eq(edgeId, "b6:2e:e2:59:0c:21")
- name: clients
  endpoint:
    path: /reference/clients-list
    method: GET
- name: devices
  endpoint:
    path: /reference/devices-list
    method: GET
- name: environments
  endpoint:
    path: /reference/environments-list
    method: GET
- name: users
  endpoint:
    path: /reference/users-list
    method: GET
- name: webhooks
  endpoint:
    path: /reference/webhooks-list
    method: GET
- name: zones
  endpoint:
    path: /reference/zones-list
    method: GET
- name: activate_conduit_ecosystems
  endpoint:
    path: /ecosystems/{ecosystem_id}/conduits/{conduit_id}/activate
    method: GET
- name: activate_conduit_conduits
  endpoint:
    path: /conduits/{conduit_id}/conduit-activations
    method: POST
- name: local_devices
  endpoint:
    path: /conduits/:conduitId/conduit-activations/:activationId/local-devices
    method: GET
    data_selector: localDevices
- name: create_device
  endpoint:
    path: /devices-create
    method: POST
    data_selector: device
    params: {}
- name: get_assets
  endpoint:
    path: /reference/get-assets
    method: GET
    data_selector: assets
    params: {}
- name: get_an_asset
  endpoint:
    path: /reference/get-an-asset
    method: GET
    data_selector: asset
    params: {}
- name: create_update_asset
  endpoint:
    path: /reference/createupdate-asset
    method: PUT
    data_selector: asset
    params: {}
- name: delete_asset
  endpoint:
    path: /reference/delete-asset
    method: DELETE
    data_selector: result
    params: {}
- name: behaviors
  endpoint:
    path: /reference/list-behaviors
    method: GET
- name: actions
  endpoint:
    path: /reference/list-actions
    method: GET
- name: schedules
  endpoint:
    path: /reference/list-behaviors
    method: GET
- name: users
  endpoint:
    path: /reference/users-list
    method: GET
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: records
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: items
    params:
      environmentId: E573bb9ffd717111220812c3a
      pageSize: 1
- name: factors
  endpoint:
    path: /reference/list-presence-factors
    method: GET
- name: values
  endpoint:
    path: /reference/get-presence
    method: GET
- name: zones
  endpoint:
    path: /reference/zones-list
    method: GET
- name: devices
  endpoint:
    path: /reference/devices-list
    method: GET
- name: users
  endpoint:
    path: /reference/users-list
    method: GET
- name: devices
  endpoint:
    path: /api/devices
    method: GET
    data_selector: items
    params: {}
- name: environments
  endpoint:
    path: /api/environments
    method: GET
    data_selector: items
    params: {}
- name: zones
  endpoint:
    path: /api/zones
    method: GET
    data_selector: items
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: items
    params: {}
- name: devices
  endpoint:
    path: /api/devices
    method: GET
- name: conduit_activation_credentials
  endpoint:
    path: /conduits/:id/conduit-activations/credentials
    method: POST
- name: LG
  endpoint:
    path: /automated-user-logins/lg
    method: POST
    data_selector: data
    params:
      email: string
      password: string
      environment: string
- name: Honeywell
  endpoint:
    path: /automated-user-logins/honeywell
    method: POST
    data_selector: data
    params:
      email: string
      password: string
      environment: string
- name: user_authentication_status
  endpoint:
    path: /account/
    method: GET
- name: account
  endpoint:
    path: /account/
    method: GET
    data_selector: records
    params: {}
- name: logoff_user
  endpoint:
    path: /account/logoff
    method: POST
- name: account_logoff
  endpoint:
    path: /account/logoff
    method: POST
- name: account_info
  endpoint:
    path: /account/info
    method: GET
- name: account_update
  endpoint:
    path: /account/update
    method: PUT
- name: update_user_account
  endpoint:
    path: /account/
    method: PUT
    data_selector: json
- name: assets
  endpoint:
    path: /ecosystems/{id}/assets
    method: GET
    data_selector: array of objects
    params:
      type: string
      source: string
- name: assets
  endpoint:
    path: /assets
    method: GET
- name: asset
  endpoint:
    path: /ecosystems/{id}/assets/{name}
    method: GET
    data_selector: object
    params:
      source: string
- name: assets
  endpoint:
    path: /ecosystems/id/assets/name
    method: GET
- name: create_update_asset
  endpoint:
    path: /ecosystems/{id}/assets/{name}
    method: PUT
    data_selector: asset
- name: assets
  endpoint:
    path: /ecosystems/id/assets/name
    method: PUT
- name: delete_asset
  endpoint:
    path: /v0/api/ecosystems/{id}/assets/{name}
    method: DELETE
- name: assets
  endpoint:
    path: /ecosystems/id/assets/name
    method: DELETE
    data_selector: result
    params: {}
- name: create_shortcode
  endpoint:
    path: /api/auth/shortcode/create
    method: POST
    data_selector: response
    params: {}
- name: Create Shortcode
  endpoint:
    path: /auth/shortcode/create
    method: POST
- name: Consume Shortcode
  endpoint:
    path: /consume-shortcode-1
    method: POST
- name: consume_shortcode
  endpoint:
    path: /v0/api/auth/shortcode/consume
    method: POST
    data_selector: object
    params:
      ecosystemId: string
      shortCode: string
- name: clients
  endpoint:
    path: /reference/clients-list
    method: GET
- name: clients
  endpoint:
    path: /clients
    method: GET
    data_selector: items
    params:
      ecosystemId: ECOSYSTEM-ID
- name: clients
  endpoint:
    path: /clients/
    method: GET
    data_selector: results
- name: create_client
  endpoint:
    path: /api/clients
    method: POST
    data_selector: createdAt
    params: {}
- name: client
  endpoint:
    path: /clients/{id}
    method: GET
- name: client
  endpoint:
    path: /clients/id
    method: GET
    data_selector: object
- name: client
  endpoint:
    path: /clients/{id}
    method: PUT
    data_selector: null
    params: {}
- name: clients
  endpoint:
    path: /clients
    method: GET
- name: client
  endpoint:
    path: /clients/id
    method: PUT
- name: client
  endpoint:
    path: /clients/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: clients
  endpoint:
    path: /clients
    method: GET
- name: client_tokens
  endpoint:
    path: /clients/{id}/tokens
    method: GET
    data_selector: items
- name: clients
  endpoint:
    path: /clients
    method: GET
    data_selector: records
- name: client_token
  endpoint:
    path: /clients/{id}/tokens
    method: POST
- name: client_token
  endpoint:
    path: /clients/{id}/tokens/{tokenId}
    method: GET
- name: clients
  endpoint:
    path: /clients
    method: GET
- name: client_tokens
  endpoint:
    path: /clients/tokens
    method: GET
- name: client_token
  endpoint:
    path: /clients/{id}/tokens/{tokenId}
    method: PUT
    data_selector: null
    params: {}
- name: delete_client_token
  endpoint:
    path: /clients/{id}/tokens/{tokenId}
    method: DELETE
    params:
      id: required
      tokenId: required
- name: regenerate_client_token
  endpoint:
    path: /clients/{id}/tokens/{tokenId}/regenerate
    method: POST
- name: client_tokens
  endpoint:
    path: /clients/id/tokens/tokenId/regenerate
    method: POST
- name: list_conduits
  endpoint:
    path: /list-conduits
    method: GET
- name: conduits
  endpoint:
    path: /conduits
    method: GET
    params:
      ecosystemId: string
      expand: string
- name: conduits
  endpoint:
    path: /conduits/
    method: GET
- name: conduits
  endpoint:
    path: /reference/install-a-conduit
    method: POST
- name: conduit
  endpoint:
    path: /conduits/{id}
    method: GET
    data_selector: object
    params: {}
- name: conduits
  endpoint:
    path: /conduits/id
    method: GET
    data_selector: result
- name: update_conduit
  endpoint:
    path: /conduits/{id}
    method: PUT
- name: conduit
  endpoint:
    path: /conduits
    method: GET
- name: conduit
  endpoint:
    path: /conduits/{id}
    method: DELETE
- name: conduit
  endpoint:
    path: /conduits/id
    method: DELETE
- name: activate_conduit
  endpoint:
    path: /conduits/{id}/conduit-activations
    method: POST
- name: conduit_activation
  endpoint:
    path: /conduits/id/conduit-activations
    method: POST
- name: list_conduits
  endpoint:
    path: /list-conduits
    method: GET
- name: conduit_activation
  endpoint:
    path: /v0/api/conduits/{id}/conduit-activations
    method: GET
    data_selector: array
    params: {}
- name: conduit_activation
  endpoint:
    path: /conduits/id/conduit-activations
    method: GET
    data_selector: results
- name: conduit_activation
  endpoint:
    path: /conduits/{id}/conduit-activations/{activationId}
    method: GET
    data_selector: object
    params: {}
- name: conduit_activations
  endpoint:
    path: /conduits/id/conduit-activations/activationId
    method: GET
    data_selector: results
- name: remove_conduit_activation
  endpoint:
    path: /conduits/{id}/conduit-activations/{activationId}
    method: DELETE
- name: conduit_activation
  endpoint:
    path: /conduits/id/conduit-activations/activationId
    method: DELETE
- name: reactivate_conduit
  endpoint:
    path: /v0/api/conduits/{id}/conduit-activations/{activationId}/reactivate
    method: POST
- name: conduit_activation
  endpoint:
    path: /conduits/id/conduit-activations/activationId/reactivate
    method: POST
- name: local_devices
  endpoint:
    path: /local-devices
    method: GET
- name: local_devices
  endpoint:
    path: /conduits/{id}/conduit-activations/{activationId}/local-devices
    method: GET
    params:
      pageSize: 1000
- name: local_device
  endpoint:
    path: /conduits/id/conduit-activations/activationId/local-devices
    method: GET
    data_selector: local_devices
    params: {}
- name: local_device
  endpoint:
    path: /api/conduits/{id}/conduit-activations/{activationId}/local-devices/{localId}
    method: GET
    data_selector: localData
    params: {}
- name: list_local_devices
  endpoint:
    path: /conduits/id/conduit-activations/activationId/local-devices/localId
    method: GET
- name: create_token
  endpoint:
    path: /create-token
    method: POST
- name: create_token
  endpoint:
    path: /api/conduits/{id}/tokens
    method: POST
- name: tokens
  endpoint:
    path: /conduits/id/tokens
    method: POST
- name: local_device
  endpoint:
    path: /local_device
    method: GET
- name: conduit_tokens
  endpoint:
    path: /conduits/{id}/tokens
    method: GET
    data_selector: items
- name: get_token
  endpoint:
    path: /v0/api/conduits/{id}/tokens/{tokenId}
    method: GET
- name: tokens
  endpoint:
    path: /conduits/id/tokens/tokenId
    method: GET
- name: delete_token
  endpoint:
    path: /conduits/{id}/tokens/{tokenId}
    method: DELETE
- name: list_all_delete_sessions
  endpoint:
    path: /api/deleted
    method: GET
    data_selector: items
- name: deleted_records
  endpoint:
    path: /deleted
    method: GET
- name: session_info
  endpoint:
    path: /get-info-for-session
    method: GET
- name: get_info_for_session
  endpoint:
    path: /api/deleted/{sessionId}
    method: GET
    data_selector: object
    params: {}
- name: deleted_sessions
  endpoint:
    path: /deleted/sessionId
    method: GET
- name: permanently_delete_records
  endpoint:
    path: /deleted/{sessionId}
    method: DELETE
- name: get_all_deleted_records
  endpoint:
    path: /v0/api/deleted/{sessionId}/records
    method: GET
- name: deleted_records
  endpoint:
    path: /deleted/sessionId/records
    method: GET
- name: undelete_record
  endpoint:
    path: /deleted/{sessionId}/undelete
    method: POST
- name: devices
  endpoint:
    path: /devices/
    method: GET
    data_selector: devices
    params:
      environmentId: string
      expand: ServiceProperties
      filter: string
- name: devices
  endpoint:
    path: /devices/
    method: GET
    data_selector: records
- name: create_device
  endpoint:
    path: /devices/
    method: POST
    data_selector: id
    params:
      environmentId: required
      alias: optional
      services: optional
      localId: optional
      conduitActivationId: optional
- name: devices
  endpoint:
    path: /devices/
    method: POST
- name: device_info
  endpoint:
    path: /devices/info
    method: GET
- name: device
  endpoint:
    path: /devices/{id}
    method: GET
    data_selector: response body
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: records
- name: device
  endpoint:
    path: /devices/{id}
    method: PUT
    data_selector: response
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
- name: delete_device
  endpoint:
    path: /devices/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: records
- name: device_history
  endpoint:
    path: /devices/{id}/history
    method: GET
    data_selector: records
    params:
      continuationCount: optional
      continuationToken: optional
      endDate: optional
      index: optional
      member: optional
      pageSize: optional
      service: optional
      startDate: optional
      type: optional
- name: devices_history
  endpoint:
    path: /devices/id/history
    method: GET
- name: devices_services_list
  endpoint:
    path: /devices/services-list
    method: GET
- name: device_service_properties
  endpoint:
    path: /devices/{id}/services
    method: GET
    data_selector: items
    params:
      id: required
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: records
- name: device_services
  endpoint:
    path: /devices/id/services
    method: GET
    data_selector: records
- name: device_history
  endpoint:
    path: /devices/history
    method: GET
    data_selector: records
- name: device_service_property
  endpoint:
    path: /devices/{id}/services/{selector}
    method: GET
    data_selector: items
- name: list_devices
  endpoint:
    path: /devices
    method: GET
    data_selector: result
- name: create_device
  endpoint:
    path: /devices
    method: POST
    data_selector: result
- name: get_device
  endpoint:
    path: /devices/{id}
    method: GET
    data_selector: result
- name: update_device
  endpoint:
    path: /devices/{id}
    method: PUT
    data_selector: result
- name: delete_device
  endpoint:
    path: /devices/{id}
    method: DELETE
    data_selector: result
- name: list_service_properties
  endpoint:
    path: /devices/{id}/services
    method: GET
    data_selector: result
- name: update_service_property
  endpoint:
    path: /devices/{id}/services/{selector}
    method: PUT
    data_selector: null
    params:
      verify: 'false'
- name: device_service_property
  endpoint:
    path: /devices/id/services/selector
    method: PUT
    data_selector: json
- name: update_multiple_service_properties
  endpoint:
    path: /devices/{id}/services
    method: PUT
    params:
      verify: 'false'
- name: devices
  endpoint:
    path: /devices
    method: GET
- name: update_service_property
  endpoint:
    path: /devices/id/services
    method: PUT
- name: delete_device_service_property
  endpoint:
    path: /devices/services/delete
    method: DELETE
- name: delete_device_service_property
  endpoint:
    path: /devices/{id}/services/{selector}
    method: DELETE
    data_selector: ''
- name: devices
  endpoint:
    path: /devices
    method: GET
- name: service_properties
  endpoint:
    path: /devices/id/services/selector
    method: DELETE
- name: call_service_method
  endpoint:
    path: /devices/{id}/services/{selector}
    method: POST
- name: devices
  endpoint:
    path: /devices
    method: GET
- name: ecosystems
  endpoint:
    path: /ecosystems
    method: GET
- name: ecosystems
  endpoint:
    path: /api/ecosystems
    method: GET
    data_selector: items
    params: {}
- name: ecosystem
  endpoint:
    path: /ecosystems/
    method: GET
- name: ecosystem
  endpoint:
    path: /api/ecosystems
    method: POST
- name: ecosystem
  endpoint:
    path: /ecosystems/{id}
    method: GET
    data_selector: ecosystem
    params: {}
- name: ecosystem
  endpoint:
    path: /ecosystems/id
    method: GET
    data_selector: json
- name: ecosystem
  endpoint:
    path: /ecosystems/{id}
    method: PUT
    data_selector: no content
    params: {}
- name: ecosystem
  endpoint:
    path: /ecosystems
    method: GET
    data_selector: results
- name: ecosystem
  endpoint:
    path: /ecosystems/{id}
    method: DELETE
    params:
      id: string
- name: ecosystem
  endpoint:
    path: /ecosystems
    method: DELETE
- name: ecosystem_claims
  endpoint:
    path: /ecosystems/{id}/claims
    method: GET
    data_selector: items
    params:
      id: ECOSYSTEM-ID
- name: ecosystems_claims
  endpoint:
    path: /ecosystems/id/claims
    method: GET
    data_selector: object
- name: create_server_ecosystem_claim
  endpoint:
    path: /ecosystems/{id}/claims
    method: POST
    data_selector: claimType
    params:
      edgeId: EDGE-ID
- name: ecosystem_claims
  endpoint:
    path: /ecosystems/id/claims
    method: POST
- name: edge_server_claim
  endpoint:
    path: /ecosystems/{id}/claims/{edgeId}
    method: GET
    data_selector: claimType
    params:
      id: required
      edgeId: required
- name: eco_system_claim
  endpoint:
    path: /ecosystems/id/claims/edgeId
    method: GET
    data_selector: results
- name: delete_edge_server_claim
  endpoint:
    path: /ecosystems/{id}/claims/{edgeId}
    method: DELETE
    data_selector: null
    params: {}
- name: edge_server_claim
  endpoint:
    path: /ecosystems/id/claims/edgeId
    method: DELETE
- name: conduit
  endpoint:
    path: /ecosystems/{id}/conduits/{conduitName}
    method: GET
    data_selector: object
- name: conduits
  endpoint:
    path: /ecosystems/id/conduits/conduitName
    method: GET
- name: activate_conduit
  endpoint:
    path: /ecosystems/{id}/conduits/{conduitName}/activate
    method: GET
- name: activate_conduit
  endpoint:
    path: /ecosystems/id/conduits/conduitName/activate
    method: GET
- name: presence
  endpoint:
    path: /api/ecosystems/{id}/presence/enabled
    method: PUT
    data_selector: ''
    params:
      enabled: boolean
- name: presence
  endpoint:
    path: /ecosystems/id/presence/enabled
    method: PUT
    data_selector: enabled
    params: {}
- name: presence_factors
  endpoint:
    path: /ecosystems/{id}/presence/factors
    method: GET
    data_selector: items
    params:
      id: string
- name: presence_factors
  endpoint:
    path: /ecosystems/id/presence/factors
    method: GET
    data_selector: Result
- name: presence_factor
  endpoint:
    path: /ecosystems/id:/presence/factors
    method: POST
    data_selector: object
    params: {}
- name: presence_factors
  endpoint:
    path: /ecosystems/id:/presence/factors
    method: POST
    data_selector: factors
- name: presence_factor
  endpoint:
    path: /ecosystems/id:/presence/factors/:id
    method: GET
    data_selector: factor
- name: presence_factor
  endpoint:
    path: /api/ecosystems/{id}/presence/factors/{factorName}
    method: GET
- name: presence_factors
  endpoint:
    path: /api/ecosystems/id/presence/factors/factorName
    method: GET
- name: presence_factor
  endpoint:
    path: /ecosystems/{id}/presence/factors/{factorName}
    method: PUT
- name: presence_factor
  endpoint:
    path: /ecosystems/{id}/presence/factors/{factorName}
    method: DELETE
- name: presence_factor
  endpoint:
    path: /ecosystems/id/presence/factors/factorName
    method: DELETE
- name: behaviors
  endpoint:
    path: /api/ecosystems/{id}/behaviors
    method: GET
    data_selector: items
    params: {}
- name: behaviors
  endpoint:
    path: /api/ecosystems/id/behaviors
    method: GET
    data_selector: records
- name: behavior
  endpoint:
    path: /ecosystems/{id}/behaviors/{behaviorId}
    method: GET
    data_selector: object
    params: {}
- name: behaviors
  endpoint:
    path: /ecosystems/id/behaviors/behaviorId
    method: GET
- name: create_behavior
  endpoint:
    path: /ecosystems/{id}/behaviors
    method: POST
    params:
      file: required
- name: behaviors
  endpoint:
    path: /ecosystems/id/behaviors
    method: POST
- name: update_behavior
  endpoint:
    path: /ecosystems/{id}/behaviors/{behaviorId}
    method: PUT
    data_selector: id
- name: delete_behavior
  endpoint:
    path: /ecosystems/{id}/behaviors/{behaviorId}
    method: DELETE
- name: behaviors
  endpoint:
    path: /ecosystems/id/behaviors/behaviorId
    method: DELETE
- name: start_behavior
  endpoint:
    path: /ecosystems/{id}/behaviors/{behaviorId}/start
    method: POST
- name: behaviors
  endpoint:
    path: /ecosystems/id/behaviors/behaviorId/start
    method: POST
- name: actions
  endpoint:
    path: /list-actions
    method: GET
- name: actions
  endpoint:
    path: /ecosystems/{id}/behaviors/{behaviorId}/actions
    method: GET
- name: actions
  endpoint:
    path: /api/ecosystems/id/behaviors/behaviorId/actions
    method: GET
    data_selector: result
- name: get_an_action
  endpoint:
    path: /api/ecosystems/{id}/behaviors/{behaviorId}/actions/{actionName}
    method: GET
- name: actions
  endpoint:
    path: /api/ecosystems/id/behaviors/behaviorId/actions/actionName
    method: GET
- name: permissions
  endpoint:
    path: /api/ecosystems/id/permissions
    method: GET
- name: permissions
  endpoint:
    path: /ecosystems/{id}/permissions
    method: GET
    data_selector: items
    params: {}
- name: permissions
  endpoint:
    path: /ecosystems/id/permissions
    method: GET
- name: permissions
  endpoint:
    path: /ecosystems/{id}/permissions/{userId}
    method: GET
    data_selector: object
    params: {}
- name: permissions
  endpoint:
    path: /ecosystems/id/permissions/userId
    method: GET
- name: update_permissions
  endpoint:
    path: /ecosystems/{id}/permissions/{userId}
    method: PUT
- name: permissions
  endpoint:
    path: /ecosystems/id/permissions/userId
    method: PUT
- name: remove_permissions
  endpoint:
    path: /ecosystems/{id}/permissions/{userId}
    method: DELETE
- name: list_all_collaborators
  endpoint:
    path: /ecosystems/{id}/accounts
    method: GET
    data_selector: items
    params: {}
- name: ecosystems
  endpoint:
    path: /ecystems
    method: GET
- name: add_collaborator
  endpoint:
    path: /ecosystems/{id}/accounts
    method: POST
    params: {}
- name: collaborator
  endpoint:
    path: /v0/api/ecosystems/{id}/accounts/{accountId}
    method: GET
- name: update_collaborator
  endpoint:
    path: /api/ecosystems/{id}/accounts/{accountId}
    method: PUT
- name: remove_collaborator
  endpoint:
    path: /api/ecosystems/{id}/accounts/{accountId}
    method: DELETE
- name: export_event_history
  endpoint:
    path: /ecosystems/{id}/history/export
    method: POST
    data_selector: response
    params:
      format: csv
      startDate: ''
      endDate: ''
      recipientEmail: ''
- name: test_email
  endpoint:
    path: /v0/api/ecosystems/{id}/logs/test-notification
    method: POST
- name: export_event_history
  endpoint:
    path: /export-event-history
    method: POST
- name: list_environments
  endpoint:
    path: /environments-list
    method: GET
- name: environments
  endpoint:
    path: /environments
    method: GET
    params:
      ecosystemId: string
      edgeId: string
      filter: string
- name: environments
  endpoint:
    path: /environments/
    method: GET
    data_selector: json
- name: create_environment
  endpoint:
    path: /api/environments
    method: POST
    data_selector: createdAt
    params:
      ecosystemId: ECOSYSTEM-ID
- name: environments
  endpoint:
    path: /environments
    method: GET
    data_selector: results
- name: environment
  endpoint:
    path: /environments/{id}
    method: GET
    data_selector: createdAt, ecosystemId, id, meta
    params:
      id: required
- name: environments
  endpoint:
    path: /environments
    method: GET
    data_selector: results
- name: environments
  endpoint:
    path: /environments/{id}
    method: PUT
    data_selector: null
    params: {}
- name: environments
  endpoint:
    path: /environments
    method: GET
- name: environment
  endpoint:
    path: /environments/{id}
    method: PUT
- name: delete_environment
  endpoint:
    path: /environments/{id}
    method: DELETE
    params:
      id: required
- name: environments
  endpoint:
    path: /environments
    method: GET
    data_selector: records
- name: environments_history
  endpoint:
    path: /environments/{id}/history
    method: GET
    data_selector: items
    params:
      pageSize: optional
- name: environments
  endpoint:
    path: /environments/id/history
    method: GET
- name: services
  endpoint:
    path: /environments/:id/services
    method: GET
    data_selector: items
    params:
      id: ENVIRONMENT-ID
- name: environments_services
  endpoint:
    path: /environments/:id/services
    method: GET
- name: specific_service_properties
  endpoint:
    path: /environments/{id}/services/{selector}
    method: GET
    data_selector: items
    params:
      refresh: 'false'
- name: list_service_properties
  endpoint:
    path: /environments/id/services/selector
    method: GET
    data_selector: results
- name: update_service_property
  endpoint:
    path: /environments/{id}/services/{selector}
    method: PUT
- name: environments_services_list
  endpoint:
    path: /environments/services/list
    method: GET
- name: environments_services_alter
  endpoint:
    path: /environments/services/alter
    method: PUT
- name: update_multiple_service_properties
  endpoint:
    path: /environments/{id}/services
    method: PUT
    params: {}
- name: update_service_property
  endpoint:
    path: /environments/id/services
    method: PUT
- name: call_service_method
  endpoint:
    path: /environments/services/call-method
    method: POST
- name: call_service_method
  endpoint:
    path: /environments/{id}/services/{selector}
    method: POST
- name: claim_environment
  endpoint:
    path: /environments/claim
    method: POST
    data_selector: null
    params: {}
- name: environments
  endpoint:
    path: /environments
    method: GET
- name: claim
  endpoint:
    path: /environments/claim
    method: POST
- name: behaviors
  endpoint:
    path: /environments/{id}/behaviors
    method: GET
    data_selector: items
    params: {}
- name: behaviors
  endpoint:
    path: /environments/id/behaviors
    method: GET
- name: behavior
  endpoint:
    path: /environments/{id}/behaviors/{behaviorId}
    method: GET
    data_selector: object
    params: {}
- name: behaviors
  endpoint:
    path: /environments/id/behaviors/behaviorId
    method: GET
- name: list_behaviors
  endpoint:
    path: /list-behaviors
    method: GET
- name: create_behavior
  endpoint:
    path: /environments/{id}/behaviors
    method: POST
    data_selector: object
    params: {}
- name: behaviors
  endpoint:
    path: /environments/id/behaviors
    method: POST
- name: update_behavior
  endpoint:
    path: /environments/{id}/behaviors/{behaviorId}
    method: PUT
    data_selector: object
    params: {}
- name: delete_behavior
  endpoint:
    path: /environments/{id}/behaviors/{behaviorId}
    method: DELETE
- name: start_behavior
  endpoint:
    path: /v0/api/environments/{id}/behaviors/{behaviorId}/start
    method: POST
- name: start_behavior
  endpoint:
    path: /environments/id/behaviors/behaviorId/start
    method: POST
- name: delete_behavior
  endpoint:
    path: /delete-a-behavior
    method: DELETE
- name: enable_behavior
  endpoint:
    path: /enable-a-behavior-1
    method: POST
- name: enable_behavior
  endpoint:
    path: /v0/api/environments/{id}/behaviors/{behaviorId}/enable
    method: POST
- name: enable_behavior
  endpoint:
    path: /environments/id/behaviors/behaviorId/enable
    method: POST
- name: disable_behavior
  endpoint:
    path: /environments/id/behaviors/behaviorId/disable
    method: POST
- name: disable_behavior
  endpoint:
    path: /environments/{id}/behaviors/{behaviorId}/disable
    method: POST
- name: disable_behavior
  endpoint:
    path: /environments/id/behaviors/behaviorId/disable
    method: POST
- name: actions
  endpoint:
    path: /environments/{id}/behaviors/{behaviorId}/actions
    method: GET
- name: actions
  endpoint:
    path: /api/environments/id/behaviors/behaviorId/actions
    method: GET
- name: get_action
  endpoint:
    path: /environments/{id}/behaviors/{behaviorId}/actions/{actionName}
    method: GET
- name: actions
  endpoint:
    path: /environments/id/behaviors/behaviorId/actions/actionName
    method: GET
    data_selector: actions
- name: start_action
  endpoint:
    path: /v0/api/environments/{id}/behaviors/{behaviorId}/actions/{actionName}/start
    method: POST
- name: stop_action
  endpoint:
    path: /api/environments/{id}/behaviors/{behaviorId}/actions/{actionName}/stop
    method: POST
- name: environments
  endpoint:
    path: /environments
    method: GET
    data_selector: records
- name: behaviors
  endpoint:
    path: /behaviors
    method: GET
    data_selector: records
- name: actions
  endpoint:
    path: /actions
    method: GET
    data_selector: records
- name: permissions
  endpoint:
    path: /environments/{id}/permissions
    method: GET
- name: permissions
  endpoint:
    path: /environments/id/permissions
    method: GET
    data_selector: records
- name: permissions
  endpoint:
    path: /environments/{id}/permissions/{userId}
    method: GET
    data_selector: object
    params: {}
- name: user_permissions
  endpoint:
    path: /environments/id/permissions/userId
    method: GET
- name: update_permissions
  endpoint:
    path: /environments/{id}/permissions/{userId}
    method: PUT
    data_selector: json
    params: {}
- name: remove_permissions
  endpoint:
    path: /api/environments/{id}/permissions/{userId}
    method: DELETE
- name: key_policies
  endpoint:
    path: /{ecosystemId}/policies
    method: GET
- name: policies
  endpoint:
    path: /meta/ecosystemId/policies
    method: GET
- name: key_policy
  endpoint:
    path: /{keyPolicyId}/policy
    method: POST
    data_selector: json
- name: key_policy
  endpoint:
    path: /v0/meta/{keyPolicyId}/policy
    method: GET
    data_selector: object
    params:
      keyPolicyId: string
- name: key_policy
  endpoint:
    path: /v0/meta/keyPolicyId/policy
    method: GET
    data_selector: result
- name: update_key_policy
  endpoint:
    path: /v0/meta/{keyPolicyId}/policy
    method: PUT
- name: delete_key_policy
  endpoint:
    path: /meta/{keyPolicyId}/policy
    method: DELETE
    params: {}
- name: key_policy
  endpoint:
    path: /meta/keyPolicyId/policy
    method: DELETE
- name: schemas
  endpoint:
    path: /schemas
    method: GET
    data_selector: items
    params: {}
- name: schema
  endpoint:
    path: /schemas/{schemaName}
    method: GET
    data_selector: schema
- name: schemas
  endpoint:
    path: /schemas/schemaName
    method: GET
- name: service_classes
  endpoint:
    path: /service-classes
    method: GET
- name: service_classes
  endpoint:
    path: /serviceclasses
    method: GET
    data_selector: items
    params:
      ecosystemId: required
- name: service_class
  endpoint:
    path: /api/serviceclasses
    method: POST
    data_selector: name
    params: {}
- name: service_classes
  endpoint:
    path: /serviceclasses
    method: GET
- name: service_class
  endpoint:
    path: /serviceclasses/:ecosystemId;:name
    method: GET
- name: service_classes
  endpoint:
    path: /serviceclasses/:ecosystemId;:name
    method: GET
- name: service_class
  endpoint:
    path: /serviceclasses/:ecosystemId;:name
    method: PUT
    data_selector: null
    params: {}
- name: service_class
  endpoint:
    path: /serviceclasses/:ecosystemId;:name
    method: PUT
- name: service_class
  endpoint:
    path: /serviceclasses/:ecosystemId;:name
    method: DELETE
    params:
      ecosystemId: required
      name: required
- name: service_classes
  endpoint:
    path: /serviceclasses/:ecosystemId;:name
    method: DELETE
- name: curated_service_classes
  endpoint:
    path: /serviceclasses/curated
    method: GET
    data_selector: items
    params: {}
- name: curated_service_class
  endpoint:
    path: /serviceclasses/curated
    method: GET
    data_selector: result
- name: curated_service_class
  endpoint:
    path: /serviceclasses/curated/{curatedName}
    method: GET
    data_selector: service
    params: {}
- name: curated_service_classes
  endpoint:
    path: /serviceclasses/curated/curatedName
    method: GET
- name: all_territories
  endpoint:
    path: /list-all-territories
    method: GET
- name: territories
  endpoint:
    path: /territories/
    method: GET
    params:
      ecosystemId: string
- name: territories
  endpoint:
    path: /territories/
    method: GET
- name: territory
  endpoint:
    path: /territories/
    method: POST
    data_selector: object
    params:
      ecosystemId: string
      itemType: string
      environments: array of strings
      users: array of strings
- name: list_all_territories
  endpoint:
    path: /reference/list-all-territories
    method: GET
- name: get_a_territory
  endpoint:
    path: /reference/get-a-territory
    method: GET
- name: create_a_territory
  endpoint:
    path: /reference/create-a-territory
    method: POST
- name: update_a_territory
  endpoint:
    path: /reference/update-a-territory
    method: PUT
- name: delete_a_territory
  endpoint:
    path: /reference/delete-a-territory
    method: DEL
- name: territory
  endpoint:
    path: /api/territories/{id}
    method: GET
    data_selector: object
    params:
      id: string
- name: territory
  endpoint:
    path: /territories/id
    method: GET
- name: territory
  endpoint:
    path: /territories/{id}
    method: PUT
    data_selector: json
- name: territory
  endpoint:
    path: /territories
    method: GET
    data_selector: territories
- name: sub_territory
  endpoint:
    path: /territories/{id}
    method: POST
    data_selector: object
- name: territories
  endpoint:
    path: /territories
    method: GET
- name: territory
  endpoint:
    path: /territories/{id}
    method: DELETE
    params: {}
- name: territories
  endpoint:
    path: /territories
    method: GET
- name: sub_territories
  endpoint:
    path: /territories/{id}/territories
    method: GET
- name: territories
  endpoint:
    path: /territories/id/territories
    method: GET
    data_selector: results
- name: move_territory
  endpoint:
    path: /territories/{id}/move
    method: POST
- name: territories
  endpoint:
    path: /territories
    method: GET
- name: environments
  endpoint:
    path: /environments
    method: GET
- name: environments
  endpoint:
    path: /territories/{id}/environments
    method: GET
- name: territories
  endpoint:
    path: /territories/id/environments
    method: GET
    data_selector: results
- name: replace_environments
  endpoint:
    path: /territories/{id}/environments
    method: PUT
- name: environments
  endpoint:
    path: /environments
    method: GET
    data_selector: environments
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /api/territories/{id}/users
    method: GET
    data_selector: items
    params: {}
- name: territories
  endpoint:
    path: /territories/id/users
    method: GET
- name: user
  endpoint:
    path: /api/territories/{id}/users/{userId}
    method: GET
    params:
      pageSize: int32
- name: users
  endpoint:
    path: /territories/id/users/userId
    method: GET
    data_selector: json
- name: add_user
  endpoint:
    path: /territories/{id}/users
    method: POST
- name: users
  endpoint:
    path: /api/territories/id/users
    method: POST
- name: remove_user
  endpoint:
    path: /territories/{id}/users/{userId}
    method: DELETE
- name: users
  endpoint:
    path: /territories/id/users/userId
    method: DELETE
- name: replace_users
  endpoint:
    path: /api/territories/{id}/users
    method: PUT
- name: users
  endpoint:
    path: /users
    method: GET
- name: permissions
  endpoint:
    path: /permissions
    method: GET
- name: permissions
  endpoint:
    path: /territories/{id}/permissions
    method: GET
    data_selector: json
    params: {}
- name: permissions
  endpoint:
    path: /api/territories/id/permissions
    method: GET
- name: permissions
  endpoint:
    path: /api/territories/{id}/permissions/{userId}
    method: GET
    data_selector: object
    params: {}
- name: permissions
  endpoint:
    path: /territories/id/permissions/userId
    method: GET
- name: update_permissions
  endpoint:
    path: /territories/{id}/permissions/{userId}
    method: PUT
- name: permissions
  endpoint:
    path: /territories/id/permissions/userId
    method: PUT
- name: remove_permissions
  endpoint:
    path: /api/territories/{id}/permissions/{userId}
    method: GET
    data_selector: ''
- name: permissions
  endpoint:
    path: /territories/id/permissions/userId
    method: GET
    data_selector: results
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: results
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: items
    params:
      ecosystemId: string
      filter: string
- name: users
  endpoint:
    path: /users/
    method: GET
    data_selector: results
- name: create_or_update_user
  endpoint:
    path: /users/:ecosystemId;:userId
    method: PUT
    params:
      generateToken: 'false'
      ttl: 3600
      expiryType: FixedTtl
- name: users
  endpoint:
    path: /users
    method: GET
- name: user
  endpoint:
    path: /users/:ecosystemId;:userId
    method: GET
    data_selector: ''
- name: users
  endpoint:
    path: /users/:ecosystemId;:userId
    method: GET
    data_selector: object
- name: delete_user
  endpoint:
    path: /users/:ecosystemId;:userId
    method: DELETE
    params:
      ecosystemId: required
      id: required
- name: users
  endpoint:
    path: /users
    method: GET
- name: generate_user_token
  endpoint:
    path: /users/:ecosystemId;:userId/tokens
    method: PUT
    params:
      ecosystemId: required
      id: required
      expiryType: optional
      ttl: optional
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: user_permissions
  endpoint:
    path: /api/users/{id}/permissions
    method: GET
    data_selector: items
    params: {}
- name: user_permissions
  endpoint:
    path: /users/id/permissions
    method: GET
- name: user_permissions
  endpoint:
    path: /api/users/{id}/permissions/{resourceId}
    method: GET
    data_selector: object
    params: {}
- name: user_permissions
  endpoint:
    path: /users/id/permissions/resourceId
    method: GET
- name: update_user_permissions
  endpoint:
    path: /users/{id}/permissions/{resourceId}
    method: PUT
    data_selector: json
- name: user_permissions
  endpoint:
    path: /users/id/permissions/resourceId
    method: PUT
- name: remove_user_permissions
  endpoint:
    path: /users/{id}/permissions/{resourceId}
    method: DELETE
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: items
    params:
      ecosystemId: required
- name: webhooks
  endpoint:
    path: /webhooks/
    method: GET
- name: create_webhook
  endpoint:
    path: /webhooks/create
    method: POST
- name: get_webhook
  endpoint:
    path: /webhooks/info
    method: GET
- name: update_webhook
  endpoint:
    path: /webhooks/update
    method: POST
- name: delete_webhook
  endpoint:
    path: /webhooks/delete
    method: DELETE
- name: invoke_webhook
  endpoint:
    path: /webhooks/invoke
    method: POST
- name: create_webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: id
    params:
      ecosystemId: ECOSYSTEM-ID
      url: CALLBACK-URL
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: GET
    data_selector: id
- name: webhook
  endpoint:
    path: /webhooks/id
    method: GET
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
    data_selector: null
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: DELETE
    data_selector: null
    params:
      id: required
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: POST
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: webhooks_v2
  endpoint:
    path: /webhooks/v2
    method: GET
    data_selector: webhooks
- name: webhook
  endpoint:
    path: /webhooks/
    method: GET
    data_selector: items
    params:
      ecosystemId: string
- name: webhook
  endpoint:
    path: /webhooks/
    method: GET
- name: create_webhook
  endpoint:
    path: /
    method: POST
    data_selector: object
    params:
      ecosystemId: required
      url: required
- name: webhook
  endpoint:
    path: /webhooks/
    method: POST
    data_selector: null
    params: {}
- name: webhook_v2
  endpoint:
    path: /webhooks-v2/
    method: POST
    data_selector: null
    params: {}
- name: get_webhook
  endpoint:
    path: /webhooks/{id}
    method: GET
    data_selector: object
- name: webhook
  endpoint:
    path: /webhooks/id
    method: GET
    data_selector: json
- name: webhook_v2
  endpoint:
    path: /webhooks-v2
    method: GET
    data_selector: json
- name: update_webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
- name: webhook
  endpoint:
    path: /webhooks/id
    method: PUT
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: DELETE
    data_selector: none
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
- name: webhook_v2
  endpoint:
    path: /webhooks-v2
    method: GET
- name: invoke_webhook
  endpoint:
    path: /webhooks/{id}
    method: POST
    data_selector: json
- name: webhook
  endpoint:
    path: /webhooks/id
    method: POST
    data_selector: result
    params: {}
- name: zones
  endpoint:
    path: /zones
    method: GET
    data_selector: result
    params: {}
- name: zones
  endpoint:
    path: /api/zones/
    method: GET
    data_selector: items
    params:
      environmentId: string
- name: zones
  endpoint:
    path: /zones/
    method: GET
    data_selector: result
- name: zone
  endpoint:
    path: /zones
    method: POST
    data_selector: response
    params:
      environmentId: ENVIRONMENT-ID
- name: zones
  endpoint:
    path: /zones/
    method: GET
    data_selector: results
- name: zone
  endpoint:
    path: /zones/{id}
    method: GET
    data_selector: response
    params: {}
- name: zone
  endpoint:
    path: /zones/id
    method: GET
- name: zone
  endpoint:
    path: /zones/{id}
    method: PUT
    data_selector: null
    params: {}
- name: zone
  endpoint:
    path: /zones
    method: GET
- name: zone
  endpoint:
    path: /zones/{id}
    method: DELETE
    params:
      id: required
- name: zones
  endpoint:
    path: /zones
    method: GET
    data_selector: results
- name: devices
  endpoint:
    path: /zones/devices
    method: GET
    data_selector: results
- name: devices_in_zone
  endpoint:
    path: /zones/{id}/devices
    method: GET
    params:
      id: string
- name: zones
  endpoint:
    path: /zones
    method: GET
    data_selector: records
- name: devices
  endpoint:
    path: /zones/id/devices
    method: GET
    data_selector: records
- name: items_in_zone
  endpoint:
    path: /zones/{id}/items
    method: GET
    data_selector: items
    params:
      id: required
- name: zones_devices
  endpoint:
    path: /zones/id/items
    method: GET
    data_selector: records
    params: {}
- name: zones_items_alter
  endpoint:
    path: /zones/{id}/items
    method: PUT
    data_selector: null
    params:
      id: required
- name: zones_items
  endpoint:
    path: /zones/id/items
    method: PUT
- name: zones_list
  endpoint:
    path: /zones
    method: GET
- name: zone_item
  endpoint:
    path: /zones/{id}/items/{itemId}
    method: POST
    data_selector: itemId
    params: {}
- name: zones
  endpoint:
    path: /zones
    method: GET
    data_selector: records
- name: zone_items
  endpoint:
    path: /zones/id/items/itemId
    method: POST
    data_selector: records
- name: delete_zone_item
  endpoint:
    path: /zones/{id}/items/{itemId}
    method: DELETE
    params:
      id: required
      itemId: required
- name: zones
  endpoint:
    path: /zones
    method: GET
- name: zone_items
  endpoint:
    path: /zones/id/items/itemId
    method: DELETE
- name: zone_services
  endpoint:
    path: /zones/{id}/services
    method: GET
    data_selector: items
    params:
      id: required
- name: zones_services
  endpoint:
    path: /zones/id/services
    method: GET
- name: services_info_list
  endpoint:
    path: /zones/{id}/services/{selector}
    method: GET
    data_selector: value
    params:
      refresh: 'false'
- name: service_properties
  endpoint:
    path: /zones/id/services/selector
    method: GET
- name: update_service_property
  endpoint:
    path: /zones/{id}/services/{selector}
    method: PUT
- name: service_selector
  endpoint:
    path: /zones/id/services/selector
    method: PUT
- name: service_properties
  endpoint:
    path: /zones/id/services
    method: GET
- name: update_multiple_service_properties
  endpoint:
    path: /zones/{id}/services
    method: PUT
    data_selector: transactionId
    params:
      properties: required
- name: zones
  endpoint:
    path: /zones
    method: GET
- name: services
  endpoint:
    path: /zones/id/services
    method: PUT
- name: call_service_method
  endpoint:
    path: /zones/{id}/services/{selector}
    method: POST
- name: zones
  endpoint:
    path: /zones
    method: GET
- name: services
  endpoint:
    path: /services
    method: POST
- name: factor_values
  endpoint:
    path: /api/zones/{id}/presence/values
    method: GET
- name: factor_value
  endpoint:
    path: /zones/id/presence/values
    method: GET
- name: presence
  endpoint:
    path: /zones/id/presence
    method: GET
- name: factor_value
  endpoint:
    path: /api/zones/{id}/presence/values/{factorValueName}
    method: GET
- name: factor_values
  endpoint:
    path: /zones/id/presence/values/factorValueName
    method: GET
    data_selector: json
- name: update_factor_value
  endpoint:
    path: /zones/{id}/presence/values/{factorValueName}
    method: PUT
    data_selector: _id
- name: factor_value
  endpoint:
    path: /zones/id/presence/values/factorValueName
    method: PUT
    data_selector: result
- name: presence_mode
  endpoint:
    path: /presence/mode
    method: GET
    data_selector: mode
- name: presence_mode
  endpoint:
    path: /zones/{id}/presence/mode
    method: GET
    data_selector: mode
    params:
      id: string
- name: presence_mode
  endpoint:
    path: /zones/id/presence/mode
    method: GET
    data_selector: result
- name: set_presence_mode
  endpoint:
    path: /zones/{id}/presence/mode
    method: PUT
- name: presence_mode
  endpoint:
    path: /zones/id/presence/mode
    method: PUT
- name: presence
  endpoint:
    path: /presence
    method: GET
- name: presence
  endpoint:
    path: /zones/{id}/presence/state
    method: GET
    data_selector: presence
    params:
      mode: string
- name: presence_state
  endpoint:
    path: /zones/id/presence/state
    method: GET
    data_selector: json
- name: behaviors
  endpoint:
    path: /zones/{id}/behaviors
    method: GET
    data_selector: items
- name: behaviors
  endpoint:
    path: /zones/id/behaviors
    method: GET
    data_selector: behaviors
    params:
      enabled: 'false'
- name: presence
  endpoint:
    path: /presence
    method: GET
    data_selector: presence
    params: {}
- name: behavior
  endpoint:
    path: /api/zones/{id}/behaviors/{behaviorId}
    method: GET
- name: behaviors
  endpoint:
    path: /zones/id/behaviors/behaviorId
    method: GET
- name: zones
  endpoint:
    path: /zones
    method: GET
- name: create_behavior
  endpoint:
    path: /zones/{id}/behaviors
    method: POST
    data_selector: object
- name: update_behavior
  endpoint:
    path: /api/zones/{id}/behaviors/{behaviorId}
    method: PUT
    data_selector: object
    params: {}
- name: behaviors
  endpoint:
    path: /zones/id/behaviors/behaviorId
    method: PUT
- name: delete_behavior
  endpoint:
    path: /zones/{id}/behaviors/{behaviorId}
    method: DELETE
- name: behaviors
  endpoint:
    path: /zones/id/behaviors/behaviorId
    method: DELETE
- name: start_behavior
  endpoint:
    path: /zones/{id}/behaviors/{behaviorId}/start
    method: POST
- name: behaviors
  endpoint:
    path: /zones/id/behaviors/behaviorId/start
    method: POST
- name: enable_behavior
  endpoint:
    path: /api/zones/{id}/behaviors/{behaviorId}/enable
    method: POST
- name: behaviors
  endpoint:
    path: /zones/id/behaviors/behaviorId/enable
    method: POST
- name: disable_behavior
  endpoint:
    path: /zones/{id}/behaviors/{behaviorId}/disable
    method: POST
- name: actions
  endpoint:
    path: /zones/{id}/behaviors/{behaviorId}/actions
    method: GET
- name: actions
  endpoint:
    path: /zones/id/behaviors/behaviorId/actions
    method: GET
- name: action
  endpoint:
    path: /zones/{id}/behaviors/{behaviorId}/actions/{actionName}
    method: GET
- name: actions
  endpoint:
    path: /zones/id/behaviors/behaviorId/actions/actionName
    method: GET
    data_selector: Result
- name: start_action
  endpoint:
    path: /api/zones/{id}/behaviors/{behaviorId}/actions/{actionName}/start
    method: POST
- name: stop_action
  endpoint:
    path: /zones/{id}/behaviors/{behaviorId}/actions/{actionName}/stop
    method: POST
- name: actions
  endpoint:
    path: /zones/id/behaviors/behaviorId/actions/actionName/stop
    method: POST
notes:
- 'If `node -v` reports something similar to `-bash: /usr/local/bin/node: cannot execute
  binary file: Exec format error` or does not respond, you may have installed a version
  of NodeJS not compatible with your operating system architecture.'
- You can use .bash_profile instead of .bashrc if you wish.
- In our testing, we found that the OpenWRT kernel required FPU emulation be enabled
  for NodeJS to run. Without FPU Emulation, we tested many different versions of NodeJS
  (0.10 - 6.0.0), and each would result in a floating point exception or not respond.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses OAuth2 with refresh token — requires setup of connected app in Droplit
- Some objects may return nulls in deeply nested fields
- The header “x-system-meta-prefix” defines the metadata prefix. This header is not
  global; that is, using it once will not guarantee that all future metadata is inserted
  with the desired prefix. Every time new metadata is specified, the prefix must be
  present in the header in order to be included.
- The prefix is prepended to a metadata key exactly how it is specified in the header,
  so care should be taken to ensure that the prefix is always consistent.
- Tokens obtained from the Droplit portal will expire after a certain amount of time
  has elapsed.
- Only one token should be used in an API call at a time.
- Aliases must meet the requirements of being between 1 and 24 characters, contain
  only a-z, A-Z, 0-9, and _ without spaces.
- The Users API does not provide user credential management and is not an identity
  provider.
- Webhook endpoints are open to the internet to be called from anywhere.
- Providing a secret key in the webhook configuration will add an SHA-256 HMAC hexdigest
  to webhook calls.
- Configures whether a heap dump is generated on a timed interval (every half hour)
  using a boolean value.
- The value is false by default.
- The Hue bridge will only work with devices that have registered with it.
- Call the BasicAuthBridge.register method within 30 seconds of pressing the Link
  button on the physical bridge.
- Provisioning services in the edge is only supported on OpenWRT
- The hub will attempt to auto-detect authentication mode when not specified.
- Do not use this SDK for servers. To get notifications from servers, use webhooks.
- It is possible that several events will be captured by the websocket simultaneously.
- Web socket must be properly authenticated for subscribe and unsubscribe methods
  to work.
- No scopes are necessary for this setup, so the 'Scopes' field may be left blank.
- Integrate a Honeywell device with the Droplit system.
- The Support URL is https://droplit.io
- The name of the behavior cannot be changed once it is made.
- Each applied filter is assumed to be required.
- Pagination is used to conveniently limit the number of objects returned at once
  by a query.
- Credentials passed in request are saved within the context of the activation that
  will be created.
- To delete credentials from Droplit, delete conduit activation.
- To generate a user token from the Droplit portal, navigate to the Security tab,
  then select Users.
- No Query String Allowed
- This feature is only accessible via the Droplit SDK.
- An account token, server token, or user token may be used to run this endpoint.
- 'Request URL includes query parameter: verify=false'
- Uses REST API for ecosystem operations
- 'A factor may be one of three detection types: manual, serviceEvent, serviceProperty.'
- The name of the new factor cannot be changed.
- The ecosystem MUST have the `meta.$notificationsEmail` parameter set.
- Requires setup of connected app in Droplit
- Key Policy Not Found error occurs if the specified key policy ID does not exist.
- Key Policy Invalid error occurs for malformed requests.
- Updated less than a minute ago
- Uses REST API.
- All optional parameters are not supported by the SDK during creation.
- An account token or server token may be used to run this endpoint.
- API responses include standard HTTP status codes.
- Some objects may return errors like Zone Not Found or Behavior Not Found
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 400 Bad request - no content
- '400: Bad Request: Request is malformed'
- '401: Unauthorized: Authentication has failed'
- '403: Forbidden: User is authenticated but not authorized'
- '404: Not Found: Resource does not exist'
- '405: Method Not Allowed: HTTP verb is not supported'
- '500: Internal Server Error: Something has gone wrong on the server side'
- '503 Service Unavailable: Contact Droplit if a service is down for more than 24
  hours'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: Invalid Type'
- '400: Invalid Source'
- 400 - Invalid Type
- 400 - Invalid Source
- 404 - Ecosystem Not Found
- 404 - Name Not Found
- '400 Bad Request: Check asset parameters'
- '400: No Query Strings Allowed'
- '400: Ecosystem Invalid'
- 404 - Asset Not Found
- 400 - No Query Strings Allowed
- 400 - Ecosystem Invalid
- '400: Invalid Body - either ''environmentId'' or ''userId'' must be present'
- '400: No Query String Allowed'
- '400: Invalid Environment ID'
- 400 - No Query String Allowed
- 404 - Ecosystem ID Not Found
- 404 - Shortcode Not Found
- 'Ecosystem Invalid: The standard error structure defines this error as invalid parameters,
  with an invalid ID linked to the parameter that designates the ecosystem ID.'
- 'Ecosystem Missing: The standard error structure defines this error as both an invalid
  parameter name and a missing parameter.'
- 'Query Field Not Allowed: The standard error structure defines this error as invalid
  parameters, with additional parameters in the query string.'
- 'Ecosystem Not Found: This error means that an ecosystem with the given ID was not
  found.'
- 'Body Parameters Missing: The standard error structure defines this error as invalid
  parameters, and contains all required body parameters.'
- 'Client Type Invalid: The standard error structure defines this error as invalid
  parameters, with a list of valid client type options.'
- 'Client Type Missing: The standard error structure defines this error as invalid
  parameters.'
- 'Client Invalid: The standard error structure defines this error as invalid parameters,
  with an invalid ID.'
- 'No Query String Allowed: The standard error structure defines this error as invalid
  parameters, with additional parameters in the query string.'
- 'Client Not Found: This error means that a client with the given ID was not found.'
- 'Client Invalid: invalid parameters, with an invalid ID'
- 'No Query String Allowed: invalid parameters, with additional parameters in the
  query string'
- 'Body Parameters Missing: invalid parameters, and contains all required body parameters'
- 'Client Not Found: a client with the given ID was not found'
- 'Client Token Invalid: This standard error structure defines this error as invalid
  parameters, with an invalid ID.'
- 'Client Token Not Found: This error means that a client token with the given ID
  was not found.'
- '400 Client Invalid: invalid parameters, with an invalid ID.'
- '400 Client Token Invalid: invalid parameters, with an invalid ID.'
- '400 No Query String Allowed: no query string is allowed at all when calling this
  endpoint.'
- '404 Client Not Found: client with the given ID was not found.'
- '404 Client Token Not Found: client token with the given ID was not found.'
- Ecosystem Missing
- Ecosystem Invalid
- '400: Bad Request'
- 400 - Conduit Invalid
- 404 - Conduit Not Found
- '400: Conduit Invalid'
- 400 - Invalid Body Parameter
- '400: Activation Invalid'
- 400 - Activation Invalid
- 404 - Activation Not Found
- '400: Query Parameter Invalid'
- '400: ''expand'' Value Invalid'
- 404 - Local Device Not Found
- 400 - Body Parameter Invalid
- 400 - Invalid Conduit
- 400 - Invalid Token
- 404 - Token Not Found
- '400: Token Invalid'
- 400 - Token Invalid
- 'URL Expired: The URL for this request expired after 30 days.'
- 404 - Session ID Not Found
- 400 - No Body Parameters Allowed
- 400 - Invalid Session ID
- '400: Environment Missing'
- '400: Expand Parameter Invalid'
- '400: Filter Invalid'
- '400: Environment Invalid'
- '400: Invalid Body Parameter'
- 400 - Missing Required Body Parameter
- 400 - Invalid Environment
- 404 - Environment Not Found
- '400: Device Invalid'
- 'Device Invalid: Invalid parameters, with an invalid ID'
- 'No Query String Allowed: Invalid parameters, with additional parameters in the
  query string'
- 'Alias Exists: An object with the same alias already exists'
- 'Alias Invalid: An alias given for an object is not valid'
- 'Metadata Format Invalid: Metadata should have been formatted as a valid JSON object'
- 'Device Not Found: A device with the given ID was not found'
- 'Device Invalid: invalid parameters, with an invalid ID'
- 'Device Not Found: a device with the given ID was not found'
- 'Device Invalid: The standard error structure defines this error as invalid parameters,
  with an invalid ID.'
- 'History Continuation Count Invalid: The standard error structure defines this error
  as invalid parameters. In this context, it means that the continuation count is
  invalid because it was supposed to be a positive number.'
- 'History End Date Invalid: The standard error structure defines this error as invalid
  parameters. In this context, it means that the end date for which to stop retrieving
  history records is incorrectly formatted, and needs to be in valid ISO 8601 datetime
  format.'
- 'History Event Type Invalid: The standard error structure defines this error as
  invalid parameters and an invalid value. In this context, it means that the value
  given to the “type” flag is not valid, and cannot be used to filter history events.'
- 'History Page Size Invalid: The standard error structure defines this error as invalid
  parameters. In this context, it means that the page size for viewing history records
  is invalid because it was supposed to be a positive number.'
- 'History Start Date Invalid: The standard error structure defines this error as
  invalid parameters. In this context, it means that the begin date for which to start
  retrieving history records is incorrectly formatted, and needs to be in valid ISO
  8601 datetime format.'
- 'History Service Index Invalid: The standard error structure defines this error
  as invalid parameters. In this context, it means that the service index is invalid
  because it was supposed to be a non-negative number.'
- 'Query Field Not Allowed: The standard error structure defines this error as invalid
  parameters, with additional parameters in the query string. In this context, it
  means that one or more query string fields are incorrect. They do not match the
  name(s) of the query string field(s) that are allowed for this endpoint.'
- 'Device Not Found: This error means that a device with the given ID was not found.
  This is distinct from an invalid device ID being specified; this means that the
  device ID once existed, but no longer does.'
- '404: Device Not Found'
- 'Service Property Invalid: invalid parameters, with an invalid selector'
- 'Service Not Found: a service by the given name and/or format was not found'
- Body Parameters Missing
- '400 Device Invalid: Invalid parameters, with an invalid ID.'
- '400 No Query String Allowed: Invalid parameters, with additional parameters in
  the query string.'
- '400 Service Property Invalid: Invalid parameters, with an invalid selector.'
- '404 Device Not Found: Device with the given ID was not found.'
- '404 Service Not Found: Service by the given name and/or format was not found.'
- 400 - Device Invalid
- 404 - Device Not Found
- 'Body Parameters Missing: The standard error structure defines this error as invalid
  parameters.'
- 'Metadata Format Invalid: The standard error structure defines this error as invalid
  parameters.'
- 'Domain Invalid: The standard error structure defines this error as invalid parameters,
  with an invalid domain.'
- '401: Unauthorized'
- 'Ecosystem Invalid: invalid parameters, invalid ID linked to the parameter that
  designates the ecosystem ID'
- 'No Query String Allowed: additional parameters in the query string'
- 'Ecosystem Not Found: an ecosystem with the given ID was not found'
- 'Ecosystem Invalid: Invalid parameters, with an invalid ID linked to the parameter
  that designates the ecosystem ID.'
- 'No Query String Allowed: Invalid parameters, with additional parameters in the
  query string.'
- 'Ecosystem Not Found: An ecosystem with the given ID was not found.'
- 'Ecosystem Invalid: The ID given for an ecosystem was not valid.'
- 'No Query String Allowed: No query string is allowed at all when calling this endpoint.'
- 'Body Parameters Missing: Required body parameters are missing or content-type header
  is incorrectly specified.'
- 'Edge ID Invalid: The Edge ID given is not valid.'
- 'Edge ID Invalid: The standard error structure defines this error as invalid parameters,
  with an invalid ID.'
- 'Edge ID Not Found: This error means that an Edge ID was not found.'
- 'Ecosystem Invalid: invalid parameters, invalid ecosystem ID'
- 'Ecosystem Not Found: ecosystem ID not found'
- 'Edge ID Invalid: invalid Edge ID'
- 'Edge ID Not Found: Edge ID not found'
- '400: errorType'
- 404 - Conduit Name Not Found
- 404 - User Not Found
- 400 - Invalid Body Parameters
- 404 - Factor Not Found
- 400 - Must Use Unique New Factor Name
- '400: Scopes Invalid'
- 400 - Scopes Invalid
- 404 - Behavior Not Found
- '400: Behavior File Invalid'
- '400: Behavior File Missing Required Parameter'
- 400 - Behavior File Invalid
- 400 - Behavior File Missing Required Parameter
- '400: Email Invalid'
- 400 - Email Invalid
- Account Invalid
- 400 - Account Invalid
- 404 - Account Not Found
- '400: Account Invalid'
- '403: Forbidden'
- 403 - Account Not Found
- '400: Body Invalid'
- '400: Body Parameter Invalid'
- 200 - Result
- 400 - Body Invalid
- '400: Invalid request'
- '404: Resource not found'
- 412 - Email Not Set
- 'Alias Exists: The standard error structure defines this error as an invalid body.'
- 'Alias Invalid: The standard error structure defines this error as invalid parameters.'
- '400 Environment Invalid: invalid parameters, with an invalid ID linked to the parameter
  that designates the environment ID'
- '404 Environment Not Found: an environment with the given ID was not found'
- 'Environment Invalid: invalid parameters, invalid ID linked to the parameter that
  designates the environment ID'
- 'Alias Exists: invalid body, an object with the same alias already exists'
- 'Alias Invalid: invalid parameters, an alias given for an object is not valid'
- 'Metadata Format Invalid: invalid parameters, metadata should have been formatted
  as a valid JSON object'
- 'Environment Not Found: an environment with the given ID was not found'
- '404: Environment Not Found'
- 'History Continuation Count Invalid: The continuation count is invalid because it
  was supposed to be a positive number.'
- 'History End Date Invalid: The end date is incorrectly formatted, and needs to be
  in valid ISO 8601 datetime format.'
- 'History Event Type Invalid: The value given to the type flag is not valid.'
- 'History Page Size Invalid: The page size is invalid because it was supposed to
  be a positive number.'
- 'History Start Date Invalid: The begin date is incorrectly formatted, and needs
  to be in valid ISO 8601 datetime format.'
- 'History Service Index Invalid: The service index is invalid because it was supposed
  to be a non-negative number.'
- 'Query Field Not Allowed: One or more query string fields are incorrect.'
- 'Environment Invalid: The ID given for an environment was not valid.'
- 'Environment Not Found: An environment with the given ID was not found.'
- 'No Query String Allowed: invalid parameters, additional parameters in the query
  string'
- 'Environment Not Found: environment with the given ID was not found'
- 'Service Property Invalid: The service property given does not exist in the specified
  service.'
- 'Service Not Found: A service by the given name and/or format was not found.'
- '400: Body Parameters Missing'
- 400 - Environment Invalid
- 400 - Body Parameters Missing
- 'Claim Type Invalid: This error means that the claim type given was not valid.'
- 'Claim Not Found: This error means that a claim with the given ID was not found.'
- '400: Behavior File Missing Required Parameters'
- 400 - Behavior File Missing Required Parameters
- 404 - Action Not Found
- '400: Invalid request parameters'
- '400: Invalid request, check parameters'
- '400: Roles Invalid'
- 400 - Roles Invalid
- 400 - Body Parameter Missing
- 400 - Scope Value Invalid
- 400 - Key Policy Invalid
- 404 - Key Policy Not Found
- '400: errorType, errors'
- 'Service Class Format Invalid: The standard error structure defines this error as
  invalid parameters.'
- 'Duplicate Service Class: The standard error structure defines this error as a conflict.'
- '404: Ecosystem Not Found'
- '404: Service Not Found'
- 400 - Territory Invalid
- 404 - Territory Not Found
- '400: Territory Invalid'
- '400: Item Type Invalid'
- 400 - Item Type Invalid
- '400: Item Type Incompatible'
- '404: Not Found'
- 404 - Destination Territory Not Found
- 500 - Destination Territory Invalid
- 400 - Item Type Incompatible
- '400: Environment Overlap'
- '400: User Invalid'
- 400 - User Invalid
- 400 Territory Invalid
- 400 User Invalid
- 400 Ecosystem Invalid
- 400 Filter Invalid
- '400: Invalid Query Parameter'
- '400: Token Duration Invalid'
- '400: Token Expiration Type Invalid'
- '400: Token Generation Invalid'
- '400: Metadata Format Invalid'
- '400: Environment Access Format Invalid'
- 400 - Invalid Query Parameter
- 400 - Token Duration Invalid
- 400 - Token Expiration Type Invalid
- 400 - Token Generation Invalid
- 400 - Metadata Format Invalid
- 'No Query String Allowed: invalid parameters with additional parameters in the query
  string'
- 'Ecosystem Invalid: invalid parameters with an invalid ID linked to the ecosystem
  ID'
- 'Ecosystem Not Found: ecosystem with the given ID was not found'
- 'User Not Found: user with the given ID was not found'
- '404: User Not Found'
- 'Query Field Not Allowed: invalid parameters'
- 'Token Duration Invalid: invalid parameters'
- 'Token Expiration Type Invalid: invalid parameters'
- 'User Invalid: invalid parameters'
- 'User Not Found: user ID not found'
- '400: Resource Invalid'
- 400 - Resource Invalid
- 404 - Resource Not Found
- Query Field Not Allowed
- Ecosystem Not Found
- 'Webhook Callback Invalid: This error means that the URI for the webhook callback
  was not formatted properly.'
- 'Webhook Callback Missing: The standard error structure defines this error as invalid
  parameters.'
- 'Webhook Invalid: The standard error structure defines this error as invalid parameters.'
- 'Webhook Not Found: This error means that a webhook with the given ID was not found.'
- 'No Query String Allowed: Invalid parameters, no query string is allowed.'
- 'Webhook Invalid: The ID given for a webhook was not valid.'
- 'Webhook Callback Invalid: The URI for the webhook callback was not formatted properly.'
- 'Webhook Callback Missing: The URL for a webhook callback is missing.'
- 'Webhook Not Found: A webhook with the given ID was not found.'
- '400: Webhook Invalid'
- '404: Webhook Not Found'
- '400: Query Field Not Allowed'
- '400: Ecosystem Missing'
- Webhook Callback Invalid
- 400 - Webhook Callback Invalid
- '400: Webhook Callback Invalid'
- 404 - Webhook Not Found
- 400 - Webhook Invalid
- Webhook Invalid
- 400 - Filter Invalid
- 'Environment Invalid: The standard error structure defines this error as invalid
  parameters, with an invalid ID linked to the parameter that designates the environment
  ID.'
- 'Environment Missing: The standard error structure defines this error as invalid
  parameters.'
- 'No Query String Allowed: The standard error structure defines this error as invalid
  parameters.'
- 'Environment Not Found: This error means that an environment with the given ID was
  not found.'
- 'Zone Invalid: The standard error structure defines this error as invalid parameters.'
- 'Zone Not Found: This error means that a zone with the given ID was not found.'
- Zone Invalid
- No Query String Allowed
- Metadata Format Invalid
- Alias Invalid
- Alias Exists
- Zone Not Found
- 'Zone Invalid: Invalid parameters provided'
- 'No Query String Allowed: Additional parameters in the query string'
- 'Zone Not Found: Zone with the given ID was not found'
- 400 - Zone Invalid
- 404 - Zone Not Found
- '400 Zone Invalid: The ID given for a zone was not valid.'
- '400 No Query String Allowed: No query string is allowed at all when calling this
  endpoint.'
- '404 Zone Not Found: A zone with the given ID was not found.'
- 'Zone Not Found: This error means that a zone with the given ID was not found, although
  it existed at some point.'
- 'Zone Invalid: The ID given for a zone was not valid.'
- 'Zone Not Found: A zone with the given ID was not found.'
- 'Service Property Invalid: The standard error structure defines this error as invalid
  parameters.'
- 'Service Not Found: This error means that a service by the given name and/or format
  was not found.'
- '400: Zone Invalid'
- 400 - Invalid Zone
- '400: Invalid request - Check the request parameters'
- 400 - Invalid Mode
- '400: Invalid Mode'
- '400: Invalid Zone'
- '400: scopeTypes Invalid'
- 400 - scopeTypes Invalid
- '400: Parameters Invalid'
- '400: Behavior Already Enabled'
- 400 - Parameters Invalid
- 400 - Behavior Already Enabled
- '400 Bad Request: Invalid parameters provided'
- '400: Bad request'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Droplit SDK
  - Common API Use Cases
  - user token
  - authorization
client:
  base_url: https://ioe.droplit.io/v0/api
  headers:
    authorization: AUTH_TOKEN
source_metadata: null
