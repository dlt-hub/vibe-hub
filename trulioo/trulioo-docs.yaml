resources:
- name: Identity Document Verification
  endpoint:
    path: /identity-document-verification
    method: POST
- name: Business Verification
  endpoint:
    path: /business-verification
    method: POST
- name: get_client_data
  endpoint:
    path: /v1/getclientdata
    method: GET
    data_selector: data
    params: {}
- name: verify_transaction
  endpoint:
    path: /v1/verify_transaction
    method: POST
    data_selector: result
    params: {}
- name: identity_verification
  endpoint:
    path: /v1/identity-verification
    method: POST
    data_selector: data
    params: {}
- name: document_verification
  endpoint:
    path: /v1/document-verification
    method: POST
    data_selector: data
    params: {}
- name: client_data
  endpoint:
    path: /v1/getclientdata
    method: GET
    data_selector: data
- name: profiles
  endpoint:
    path: /v1/retrieve-profiles
    method: GET
    data_selector: data
- name: Get current step or initialize a flow
  endpoint:
    path: /v2/flow
    method: GET
- name: Submit data for the current step of a flow
  endpoint:
    path: /v2/submit
    method: POST
- name: Submit file for the current step of a flow
  endpoint:
    path: /v2/submitfile
    method: POST
- name: Connect a clientId to a flow by generating a token
  endpoint:
    path: /v2/connector
    method: GET
- name: Connects a user with a flow with a token
  endpoint:
    path: /v2/flowconnect
    method: GET
- name: verifications
  endpoint:
    path: /v1/verifications
    method: POST
    data_selector: data
    params: {}
- name: document_verification
  endpoint:
    path: /v1/document-verification
    method: POST
    data_selector: data
    params: {}
- name: event_payload
  endpoint:
    path: /reference/sendevent
    method: GET
    data_selector: events
    params: {}
- name: Export API
  endpoint:
    path: /event-dispatcher
    method: POST
- name: business_verification
  endpoint:
    path: /v3/business/verify
    method: POST
    data_selector: data
    params: {}
- name: profiles
  endpoint:
    path: /v1/profiles
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: TransactionRecord
  endpoint:
    path: /getTransactionRecord
    method: GET
    data_selector: Record
    params: {}
- name: Transaction Record
  endpoint:
    path: /get_v3-verifications-transactionrecord-transactionrecordid
    method: GET
- name: Retrieve Profile
  endpoint:
    path: /path/to/retrieve/profile
    method: GET
    data_selector: flowData
- name: Get Transaction Record
  endpoint:
    path: /path/to/get/transaction/record
    method: GET
    data_selector: transactionInfo
- name: transaction_details
  endpoint:
    path: /api/customer/transactions
    method: GET
    data_selector: transactionDetails
    params: {}
- name: flow
  endpoint:
    path: /wfs/interpreter-v2/flow/652ffca22e470e32d625f709
    method: GET
    data_selector: id
- name: retrieve_profile
  endpoint:
    path: /wfs/export/v2/query/client/:x-hf-session
    method: GET
    data_selector: id
- name: get_authorization_token_for_transaction
  endpoint:
    path: /connect/token
    method: POST
    data_selector: accessToken
- name: document_images
  endpoint:
    path: /transaction/get_presigned_url
    method: GET
    data_selector: base64Image
    params:
      transactionId: ''
      imageId: ''
- name: document_verification
  endpoint:
    path: /api/v1/document_verification
    method: POST
    data_selector: data
    params: {}
- name: document_verification
  endpoint:
    path: /services/data/vXX.X/sobjects/DocumentVerification
    method: GET
    data_selector: records
    params: {}
- name: document_verification
  endpoint:
    path: /services/data/vXX.X/sobjects/DocumentVerification
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: Transaction
  endpoint:
    path: /reference/transaction-1
    method: GET
- name: Document Verification
  endpoint:
    path: /reference/document-verification
    method: GET
- name: Get current step or initialize a flow
  endpoint:
    path: /reference/flow
    method: GET
- name: Submit data for the current step of a flow
  endpoint:
    path: /reference/submit
    method: POST
- name: Submit file for the current step of a flow
  endpoint:
    path: /reference/submitfile
    method: POST
- name: Computes a backward step in the flow execution
  endpoint:
    path: /reference/xback
    method: GET
- name: Connect a clientId to a flow by generating a token
  endpoint:
    path: /reference/connector
    method: GET
- name: Connects a user with a flow with a token
  endpoint:
    path: /reference/flowconnect
    method: GET
- name: Receiving Events
  endpoint:
    path: /reference/sendevent
    method: POST
- name: Retrieve workflows from organization v2
  endpoint:
    path: /reference/getflows
    method: GET
- name: Retrieve profiles from your workspace v2
  endpoint:
    path: /reference/retrieve-profiles
    method: GET
- name: Retrieve profile data from a client v2
  endpoint:
    path: /reference/getclientdata
    method: GET
- name: Retrieve a file from a client v2
  endpoint:
    path: /reference/getclientfile
    method: GET
- name: Create a link between two end clients
  endpoint:
    path: /reference/createlinkedlead
    method: POST
- name: Delete a link between two end clients
  endpoint:
    path: /reference/deletelinkedlead
    method: DELETE
- name: Get init data for a flow
  endpoint:
    path: /reference/init_get
    method: GET
- name: Create a new user state ID or update an existing one with some initialization
    data
  endpoint:
    path: /reference/init
    method: POST
- name: Delete end clients in bulk
  endpoint:
    path: /reference/deleteendclientsmanually
    method: DELETE
- name: Update end clients status in bulk
  endpoint:
    path: /reference/updateendclientsstatusmanually
    method: PUT
- name: Identity Document Verification
  endpoint:
    path: /reference/identity-document-verification
    method: GET
- name: Person Verification
  endpoint:
    path: /reference/identity-verification
    method: GET
- name: identity_document_verification
  endpoint:
    path: /identity-document-verification
    method: POST
- name: authorize
  endpoint:
    path: /authorize
    method: POST
- name: transactions
  endpoint:
    path: /customer/transactions
    method: POST
    data_selector: transactionId
- name: handoff
  endpoint:
    path: /customer/handoff
    method: GET
    data_selector: shortCode
- name: transaction_data
  endpoint:
    path: /customer/transactions/{transactionId}
    method: GET
    data_selector: transactionData
- name: transaction_images
  endpoint:
    path: /customer/transactions/{transactionId}/images/{imageId}
    method: GET
    data_selector: imageBase64
- name: transactions
  endpoint:
    path: /customer/transactions
    method: POST
- name: transactions
  endpoint:
    path: /customer/transactions
    method: POST
    data_selector: result
    params: {}
- name: Webhook Events
  endpoint:
    path: /webhook/events
    method: POST
    data_selector: events
    params: {}
- name: transaction
  endpoint:
    path: /transaction
    method: GET
- name: user_data
  endpoint:
    path: /user_data
    method: GET
- name: transaction_images
  endpoint:
    path: /customer/transactions/{transactionId}/images/{imageId}
    method: GET
- name: workflow_interpreter
  endpoint:
    path: /interpreter-v2/flow/{flowId}
    method: GET
    data_selector: elements
- name: submit_fields
  endpoint:
    path: /interpreter-v2/submit/{flowId}
    method: POST
    data_selector: shortCode
- name: query_user_data
  endpoint:
    path: /export/v2/query/client/{x-hf-session}
    method: GET
    data_selector: flowData
- name: get_transaction_details
  endpoint:
    path: /customer/transactions/{transactionId}
    method: GET
    data_selector: transactionInfo
- name: full_record_response
  endpoint:
    path: /full/record/response
    method: GET
    data_selector: TransactionID
    params: {}
- name: business_verification
  endpoint:
    path: /v3/business/verify
    method: POST
    data_selector: body
- name: transaction_record
  endpoint:
    path: /v3/verifications/transactionrecord/transactionrecordid
    method: GET
    data_selector: body
- name: business_verification
  endpoint:
    path: /v3/business/verify
    method: POST
    data_selector: verificationResult
    params: {}
- name: person_verification
  endpoint:
    path: /v3/verifications/verify
    method: POST
    data_selector: verificationResult
    params: {}
- name: address_validation
  endpoint:
    path: /v1/address/validate
    method: POST
    data_selector: data
    params: {}
- name: Person Verification
  endpoint:
    path: /v3/verifications/verify
    method: POST
- name: verify
  endpoint:
    path: /v3/verifications/verify
    method: POST
- name: transaction
  endpoint:
    path: /v3/verifications/transaction
    method: GET
- name: Person Verification
  endpoint:
    path: /reference/kyc-person-verification
    method: GET
- name: API Integration
  endpoint:
    path: /reference/api-integration
    method: GET
- name: identity_verification
  endpoint:
    path: /v1.0/identity-verification
    method: POST
- name: country_codes
  endpoint:
    path: /v3/configuration/countrycodes/{packageID}
    method: GET
- name: fields
  endpoint:
    path: /v3/configuration/fields/{packageID}/{countryCode}
    method: GET
- name: consents
  endpoint:
    path: /v3/configuration/consents/{packageID}/{countryCode}/detail
    method: GET
- name: verify
  endpoint:
    path: /v3/verifications/verify
    method: POST
- name: business_verification
  endpoint:
    path: /v3/business-verification
    method: POST
    data_selector: records
    params: {}
- name: identity_verification
  endpoint:
    path: /v3/identity-verification
    method: POST
    data_selector: records
    params: {}
- name: client_data
  endpoint:
    path: /v1/getclientdata
    method: GET
    data_selector: records
- name: profiles
  endpoint:
    path: /v1/retrieve-profiles
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /v1/transaction
    method: GET
    data_selector: records
- name: verification_response
  endpoint:
    path: /v3/verifications
    method: POST
    data_selector: Record
    params: {}
- name: verification
  endpoint:
    path: /v3/verification
    method: POST
    data_selector: DatasourceResults
    params: {}
- name: Verify
  endpoint:
    path: /v3/verifications/verify
    method: POST
- name: Get Transaction Record
  endpoint:
    path: /v3/verifications/transactionrecord/{transactionRecordId}
    method: GET
- name: country_codes
  endpoint:
    path: /v1.0/getcountrycodes
    method: GET
    data_selector: countryCodes
- name: country_codes
  endpoint:
    path: /configuration/countrycodes/{packageID}
    method: GET
    data_selector: country_codes
- name: GetFields
  endpoint:
    path: /reference/get_v3-configuration-fields-packageid-countrycode
    method: GET
    data_selector: properties
- name: identity_verification
  endpoint:
    path: /v1/identity-verification
    method: POST
    data_selector: verificationResult
    params: {}
- name: business_verification
  endpoint:
    path: /v1/business-verification
    method: POST
    data_selector: verificationResult
    params: {}
- name: Get Consents
  endpoint:
    path: /reference/get_v3-configuration-consents-packageid-countrycode
    method: GET
    data_selector: array
    params: {}
- name: Get Detailed Consents
  endpoint:
    path: /reference/get_v3-configuration-consents-packageid-countrycode-detail
    method: GET
    data_selector: detailed_consents
    params: {}
- name: customer_consent
  endpoint:
    path: /v1/customer-consent
    method: GET
    data_selector: results
- name: Get Transaction Record
  endpoint:
    path: /v3/verifications/transactionrecord/{transactionRecordID}
    method: GET
    data_selector: Record
    params: {}
- name: get_fields
  endpoint:
    path: /v3/configuration/fields/{packageID}/{countryCode}
    method: GET
    data_selector: properties
- name: get_country_code
  endpoint:
    path: /v3/configuration/countrycodes
    method: GET
    data_selector: countryCodes
- name: person_fraud
  endpoint:
    path: /v1/person/fraud
    method: POST
    data_selector: data
    params: {}
- name: Fraud Signals
  endpoint:
    path: /fraud/signals
    method: GET
    data_selector: Appended Fields
- name: fraud_check
  endpoint:
    path: /fraud/check
    method: POST
    data_selector: Record
    params:
      TransactionID: string
      FirstGivenName: string
      FirstSurName: string
      EmailAddress: string
      Telephone: string
- name: get_fields
  endpoint:
    path: /v1/get-fields
    method: GET
    data_selector: fields
- name: business_verification
  endpoint:
    path: /v1/business-verification
    method: POST
    data_selector: verificationResult
- name: watchlist_response
  endpoint:
    path: /watchlist
    method: POST
    data_selector: Record
    params: {}
- name: watchlist_verification
  endpoint:
    path: /v3/verifications/verify
    method: POST
    data_selector: DataFields
    params:
      VerboseMode: 'True'
- name: client_data
  endpoint:
    path: /v1/getclientdata
    method: GET
    data_selector: data
    params: {}
- name: profiles
  endpoint:
    path: /v1/retrieve-profiles
    method: GET
    data_selector: data
    params: {}
- name: business_registration_numbers
  endpoint:
    path: /reference/get_v3-business-businessregistrationnumbers-countrycode
    method: GET
- name: business_search
  endpoint:
    path: /v3/business/search
    method: POST
- name: business_verify
  endpoint:
    path: /v3/business/verify
    method: POST
- name: Get JOI By Country
  endpoint:
    path: /v3/business-countryjoi-countrycode
    method: GET
    data_selector: data
- name: Get Jurisdictions of Incorporation
  endpoint:
    path: /v3/business-countryjoi
    method: GET
    data_selector: data
- name: Say Hello
  endpoint:
    path: /reference/get_v3-connection-sayhello-name
    method: GET
- name: say_hello
  endpoint:
    path: /v3/connection/sayhello/{name}
    method: GET
    data_selector: result
- name: test_authentication
  endpoint:
    path: /connection/testauthentication
    method: GET
- name: Test Authentication
  endpoint:
    path: /v3/connection/testauthentication
    method: GET
- name: country_codes
  endpoint:
    path: /reference/get_v3-configuration-countrycodes-packageid
    method: GET
    data_selector: countryCodes
- name: fields
  endpoint:
    path: /reference/get_v3-configuration-fields-packageid-countrycode
    method: GET
    data_selector: fields
- name: test_entities
  endpoint:
    path: /reference/get_v3-configuration-testentities-packageid-countrycode
    method: GET
    data_selector: testEntities
- name: account_configuration
  endpoint:
    path: /v1.0/account/configuration
    method: GET
    data_selector: accountConfiguration
    params: {}
- name: business_search
  endpoint:
    path: /reference/post_v3-business-search
    method: POST
- name: verification
  endpoint:
    path: /reference/post_v3-business-verify
    method: POST
- name: Get current step or initialize a flow
  endpoint:
    path: /reference/flow
    method: GET
- name: Submit data for the current step of a flow
  endpoint:
    path: /reference/submit
    method: POST
- name: Submit file for the current step of a flow
  endpoint:
    path: /reference/submitfile
    method: POST
- name: Connect a clientId to a flow by generating a token
  endpoint:
    path: /reference/connector
    method: GET
- name: Connects a user with a flow with a token
  endpoint:
    path: /reference/flowconnect
    method: GET
- name: Business Search
  endpoint:
    path: /reference/post_v3-business-search
    method: POST
- name: business_search
  endpoint:
    path: /business/search
    method: POST
    data_selector: body
    params: {}
- name: transaction
  endpoint:
    path: /api/v1/transaction
    method: GET
    data_selector: Record
    params: {}
- name: business_verification
  endpoint:
    path: /reference/post_v3-business-verify
    method: POST
- name: business_verification
  endpoint:
    path: /business/verify
    method: POST
    data_selector: body
    params: {}
- name: download_document
  endpoint:
    path: /v3/verifications/documentdownload/{transactionRecordID}/{fieldName}
    method: GET
- name: document_download
  endpoint:
    path: /get_v3-verifications-documentdownload-transactionrecordid-fieldname
    method: GET
    data_selector: response
- name: document_download
  endpoint:
    path: /get_v3-verifications-documentdownload-transactionrecordid-fieldname
    method: GET
- name: transaction_record
  endpoint:
    path: /reference/get_v3-verifications-transactionrecord-transactionrecordid
    method: GET
    data_selector: response
- name: update_data
  endpoint:
    path: /standardized/metadata/update_data
    method: GET
    data_selector: UpdateData
    params: {}
- name: standardized_registration_numbers
  endpoint:
    path: /standardized/registration_numbers
    method: GET
    data_selector: StandardizedRegistrationNumbers
    params: {}
- name: standardized_share_capitals
  endpoint:
    path: /standardized/share_capitals
    method: GET
    data_selector: StandardizedShareCapitals
    params: {}
- name: standardized_stock_exchanges
  endpoint:
    path: /standardized/stock_exchanges
    method: GET
    data_selector: StandardizedStockExchanges
    params: {}
- name: Ownerships
  endpoint:
    path: /ownerships
    method: GET
    data_selector: Ownerships
    params: {}
- name: Relationships
  endpoint:
    path: /relationships
    method: GET
    data_selector: Relationships
    params: {}
- name: OwnershipSummary
  endpoint:
    path: /ownershipsummary
    method: GET
    data_selector: OwnershipSummary
    params: {}
- name: StandardizedBusinessNames
  endpoint:
    path: /StandardizedBusinessNames
    method: GET
    data_selector: StandardizedBusinessName
    params: {}
- name: StandardizedCommunication
  endpoint:
    path: /StandardizedCommunication
    method: GET
    data_selector: StandardizedCommunication
    params: {}
- name: StandardizedDirectorsOfficers
  endpoint:
    path: /StandardizedDirectorsOfficers
    method: GET
    data_selector: StandardizedDirectorsOfficers
    params: {}
- name: StandardizedFilings
  endpoint:
    path: /StandardizedFilings
    method: GET
    data_selector: Filings
    params: {}
- name: StandardizedIncorporationDetails
  endpoint:
    path: /StandardizedIncorporationDetails
    method: GET
    data_selector: StandardizedIncorporationDetails
    params: {}
- name: StandardizedIndustries
  endpoint:
    path: /StandardizedIndustries
    method: GET
    data_selector: StandardizedIndustries
    params: {}
- name: StandardizedLocations
  endpoint:
    path: /StandardizedLocations
    method: GET
    data_selector: StandardizedLocations
    params: {}
- name: business_verification
  endpoint:
    path: /business/verify
    method: POST
    data_selector: body
    params: {}
- name: Comprehensive View
  endpoint:
    path: /reference/business-verification-step6-verify
    method: GET
    data_selector: Record.DatasourceResults
    params: {}
- name: Comprehensive View
  endpoint:
    path: /reference/comprehensive-view
    method: GET
- name: PeopleOfSignificantControl
  endpoint:
    path: /api/v1/psc
    method: GET
    data_selector: Owners
- name: persons_of_significant_control
  endpoint:
    path: /v3/business-verification/matching-psc
    method: POST
    data_selector: matches
    params: {}
- name: business_verification
  endpoint:
    path: /v3/business/verify
    method: POST
    data_selector: body
    params: {}
- name: business_verification
  endpoint:
    path: /v3/business-verification
    method: POST
    data_selector: VerificationResult
    params: {}
- name: identity_verification
  endpoint:
    path: /v3/identity-verification
    method: POST
    data_selector: VerificationResult
    params: {}
- name: business_watchlist
  endpoint:
    path: /v3/business/watchlist
    method: POST
    data_selector: results
- name: watchlist_response
  endpoint:
    path: /v1/watchlist
    method: GET
    data_selector: Record
- name: watchlist_verification
  endpoint:
    path: /verifications/v1/verify
    method: POST
    data_selector: DataFields
    params:
      VerboseMode: 'True'
- name: countries
  endpoint:
    path: /v1.0/countries
    method: GET
    data_selector: countries
    params: {}
- name: fields
  endpoint:
    path: /v1.0/fields
    method: GET
    data_selector: fields
    params: {}
- name: test_authentication
  endpoint:
    path: /connection/v1/testauthentication
    method: GET
- name: test_authentication
  endpoint:
    path: /connection/v1/testauthentication
    method: GET
    data_selector: response
    params: {}
- name: identity_verification
  endpoint:
    path: /verifications/v1/verify
    method: POST
    data_selector: TransactionID
    params: {}
- name: document_verification
  endpoint:
    path: /verifications/v1/verify
    method: POST
    data_selector: TransactionID
    params: {}
- name: business_verification
  endpoint:
    path: /v1/business_verification
    method: POST
    data_selector: transactionRecord
- name: identity_verification
  endpoint:
    path: /v1/identity_verification
    method: POST
    data_selector: transactionRecord
- name: verify
  endpoint:
    path: /v1.0/reference/identity-verification-verify
    method: POST
    data_selector: results
- name: identity_verification
  endpoint:
    path: /v1/identity-verification
    method: POST
- name: country_codes
  endpoint:
    path: /configuration/v1/countrycodes/IdentityVerification
    method: GET
    data_selector: countryCodes
- name: fields
  endpoint:
    path: /configuration/v1/fields/IdentityVerification/AU
    method: GET
    data_selector: properties
- name: consents
  endpoint:
    path: /configuration/v1/consents/IdentityVerification/AU
    method: GET
    data_selector: consents
- name: identity_verification
  endpoint:
    path: /v1/identity/verify
    method: POST
    data_selector: data
    params: {}
- name: business_verification
  endpoint:
    path: /v1/business/verify
    method: POST
    data_selector: data
    params: {}
- name: identity_verification
  endpoint:
    path: /v1/identity-verification
    method: POST
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /v1/transaction
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: verification
  endpoint:
    path: /v3/verifications
    method: POST
    data_selector: Record
    params: {}
- name: DatasourceResults
  endpoint:
    path: /verification
    method: GET
    data_selector: DatasourceResults
    params: {}
- name: Verify
  endpoint:
    path: /v1.0/reference/identity-verification-verify
    method: POST
- name: Get Transaction Record
  endpoint:
    path: /v1.0/reference/gettransactionrecord
    method: GET
- name: GetCountryCodes
  endpoint:
    path: /v1.0/getcountrycodes
    method: GET
    data_selector: countryCodes
- name: country_codes
  endpoint:
    path: /countrycodes/Identity%20Verification
    method: GET
    data_selector: ''
- name: GetFields
  endpoint:
    path: /reference/get_v3-configuration-fields-packageid-countrycode
    method: GET
    data_selector: properties
- name: fields
  endpoint:
    path: /v1/fields
    method: GET
    data_selector: fields
    params: {}
- name: country_codes
  endpoint:
    path: /v3/country_codes
    method: GET
    data_selector: codes
    params: {}
- name: fields
  endpoint:
    path: /v3/fields
    method: GET
    data_selector: fields
    params: {}
- name: customer_consent
  endpoint:
    path: /v1/customer-consent
    method: GET
- name: country_codes
  endpoint:
    path: /v1/country_codes
    method: GET
    data_selector: records
- name: business_verification
  endpoint:
    path: /v1/business_verification
    method: POST
    data_selector: records
- name: Get Fields
  endpoint:
    path: /configuration/v1/fields/Identity Verification/CN
    method: GET
    data_selector: fields
    params: {}
- name: Get Country Codes
  endpoint:
    path: /v1.0/reference/getcountrycodes
    method: GET
    data_selector: countryCodes
    params: {}
- name: transaction_record_verbose
  endpoint:
    path: /verifications/v1/transactionrecord/{transaction_id}/verbose
    method: GET
    data_selector: Record
- name: transaction_record
  endpoint:
    path: /v1.0/reference/gettransactionrecord
    method: GET
    data_selector: records
- name: transaction_status
  endpoint:
    path: /v1.0/reference/gettransactionstatus
    method: GET
    data_selector: records
- name: transaction_record
  endpoint:
    path: /transactionrecord/{transaction_id}
    method: GET
    data_selector: Record
    params: {}
- name: transaction_record_with_address
  endpoint:
    path: /transactionrecord/{transaction_id}/withaddress
    method: GET
    data_selector: Record
    params: {}
- name: transaction
  endpoint:
    path: /v1/transaction
    method: GET
- name: business_verification
  endpoint:
    path: /v1/business-verification
    method: POST
- name: national_ids_supported_types
  endpoint:
    path: /v1.0/reference/national-ids-supported-types
    method: GET
    data_selector: types
- name: national_id
  endpoint:
    path: /national_ids
    method: GET
    data_selector: records
    params: {}
- name: health
  endpoint:
    path: /health
    method: GET
    data_selector: records
    params: {}
- name: social_service
  endpoint:
    path: /social_service
    method: GET
    data_selector: records
    params: {}
- name: tax_id_number
  endpoint:
    path: /tax_id_number
    method: GET
    data_selector: records
    params: {}
- name: business_verification
  endpoint:
    path: /v3/business/search
    method: POST
- name: identity_verification
  endpoint:
    path: /v3/verifications/verify
    method: POST
- name: watchlist_screening
  endpoint:
    path: /v1/person-screening
    method: POST
    data_selector: results
- name: watchlist_screening
  endpoint:
    path: /verifications/verify
    method: POST
- name: watchlist_screening
  endpoint:
    path: /v1/watchlist-screening
    method: POST
    data_selector: Record
    params: {}
- name: verifications
  endpoint:
    path: /v3/verifications/verify
    method: POST
    data_selector: DataFields
    params: {}
- name: client_data
  endpoint:
    path: /getclientdata
    method: GET
    data_selector: data
    params: {}
- name: profiles
  endpoint:
    path: /retrieve-profiles
    method: GET
    data_selector: data
    params: {}
- name: Get current step or initialize a flow
  endpoint:
    path: /reference/flow
    method: GET
- name: Submit data for the current step of a flow
  endpoint:
    path: /reference/submit
    method: POST
- name: Submit file for the current step of a flow
  endpoint:
    path: /reference/submitfile
    method: POST
- name: Authorize and generate access tokens
  endpoint:
    path: /reference/post-auth-customer
    method: POST
- name: Identity Document Verification
  endpoint:
    path: /reference/identity-document-verification
    method: GET
- name: Business Verification
  endpoint:
    path: /reference/business-verification
    method: GET
- name: document_verification
  endpoint:
    path: /v1/document-verification
    method: POST
    data_selector: results
- name: Identity Document Verification
  endpoint:
    path: /v1/identity/document-verification
    method: POST
- name: Test Authentication
  endpoint:
    path: /v1/connection/testauthentication
    method: GET
- name: document_capture
  endpoint:
    path: /v1/document/capture
    method: POST
    data_selector: data
    params: {}
- name: business_verification
  endpoint:
    path: /v1/business/verification
    method: POST
    data_selector: data
    params: {}
- name: sayhello
  endpoint:
    path: /connection/v1/sayhello/{name}
    method: GET
    data_selector: result
- name: Say Hello
  endpoint:
    path: /v3/connection/sayhello
    method: GET
- name: test_authentication
  endpoint:
    path: /connection/v1/testauthentication
    method: GET
- name: country_codes
  endpoint:
    path: /get-country-codes
    method: GET
    data_selector: country_codes
- name: country_codes
  endpoint:
    path: /reference/country-codes
    method: GET
    data_selector: codes
    params: {}
- name: country_codes
  endpoint:
    path: /configuration/v1/countrycodes/IdentityVerification
    method: GET
    data_selector: result
- name: token
  endpoint:
    path: /token
    method: POST
    data_selector: null
    params: {}
- name: document_types
  endpoint:
    path: /v1/document_types
    method: GET
    data_selector: US
- name: Get Document Types
  endpoint:
    path: /reference/get-document-types
    method: GET
- name: document_types
  endpoint:
    path: /configuration/v1/documentTypes/US
    method: GET
    data_selector: result
- name: UploadImage
  endpoint:
    path: /v1/docv/UploadImage
    method: POST
    data_selector: TransactionID
- name: OCR
  endpoint:
    path: /reference/ocr
    method: GET
    data_selector: standardized_fields
    params: {}
- name: async_verify
  endpoint:
    path: /v1/async/verify
    method: POST
    data_selector: data
    params: {}
- name: OCR
  endpoint:
    path: /reference/ocr
    method: GET
    data_selector: records
    params: {}
- name: Verify
  endpoint:
    path: /v1.0/reference/identity-verification-verify
    method: POST
- name: verification
  endpoint:
    path: /verifications/v1/verify
    method: POST
    data_selector: TransactionID
    params: {}
- name: country_codes
  endpoint:
    path: /reference/get_v3-configuration-countrycodes-packageid
    method: GET
    data_selector: countryCodes
    params: {}
- name: country_codes
  endpoint:
    path: /v1.0/getCountryCodes
    method: GET
- name: document_types
  endpoint:
    path: /reference/get-document-types
    method: GET
    data_selector: records
- name: country_codes
  endpoint:
    path: /reference/country-codes
    method: GET
    data_selector: records
- name: business_verification
  endpoint:
    path: /business/verification
    method: POST
    data_selector: data
    params: {}
- name: identity_verification
  endpoint:
    path: /identity/verification
    method: POST
    data_selector: data
    params: {}
- name: Business Verification
  endpoint:
    path: /v3/business-verification
    method: POST
- name: Get Business Search Result
  endpoint:
    path: /v3/business-search-transactionrecord-id
    method: GET
- name: Verify
  endpoint:
    path: /v3/business-verify
    method: POST
- name: Get Partial Transaction Result
  endpoint:
    path: /v3/verifications-transaction-transactionid-partialresult
    method: GET
- name: Business Registration Numbers by Country
  endpoint:
    path: /getbusinessregistrationnumbers
    method: GET
    data_selector: data
    params: {}
- name: Get Business Registration Numbers by Country
  endpoint:
    path: /get_v3-business-businessregistrationnumbers-countrycode
    method: GET
- name: Get Jurisdictions of Incorporation per country
  endpoint:
    path: /get_v3-business-countryjoi-countrycode
    method: GET
- name: Say Hello
  endpoint:
    path: /v1.0/reference/sayhello
    method: GET
- name: say_hello
  endpoint:
    path: /connection/v1/sayhello
    method: GET
    data_selector: result
- name: test_authentication
  endpoint:
    path: /connection/v1/testauthentication
    method: GET
- name: business_verification
  endpoint:
    path: /v3/business-verification
    method: POST
    data_selector: data
    params: {}
- name: person_verification
  endpoint:
    path: /v3/person-verification
    method: POST
    data_selector: data
    params: {}
- name: Business Search
  endpoint:
    path: /post_v3-business-search
    method: POST
- name: Verify
  endpoint:
    path: /post_v3-business-verify
    method: POST
- name: flow
  endpoint:
    path: /reference/flow
    method: get
- name: submit
  endpoint:
    path: /reference/submit
    method: post
- name: submitfile
  endpoint:
    path: /reference/submitfile
    method: post
- name: xback
  endpoint:
    path: /reference/xback
    method: get
- name: connector
  endpoint:
    path: /reference/connector
    method: get
- name: flowconnect
  endpoint:
    path: /reference/flowconnect
    method: get
- name: sendevent
  endpoint:
    path: /reference/sendevent
    method: post
- name: getflows
  endpoint:
    path: /reference/getflows
    method: get
- name: retrieve-profiles
  endpoint:
    path: /reference/retrieve-profiles
    method: get
- name: getclientdata
  endpoint:
    path: /reference/getclientdata
    method: get
- name: getclientfile
  endpoint:
    path: /reference/getclientfile
    method: get
- name: createlinkedlead
  endpoint:
    path: /reference/createlinkedlead
    method: post
- name: deletelinkedlead
  endpoint:
    path: /reference/deletelinkedlead
    method: del
- name: init_get
  endpoint:
    path: /reference/init_get
    method: get
- name: init
  endpoint:
    path: /reference/init
    method: post
- name: deleteendclientsmanually
  endpoint:
    path: /reference/deleteendclientsmanually
    method: del
- name: updateendclientsstatusmanually
  endpoint:
    path: /reference/updateendclientsstatusmanually
    method: put
- name: business_search
  endpoint:
    path: /post_v3-business-search
    method: POST
    data_selector: Record.DatasourceResults
    params: {}
- name: business_search
  endpoint:
    path: /business/v1/search
    method: POST
    data_selector: body
    params: {}
- name: business_search
  endpoint:
    path: /v3/business/search
    method: POST
- name: transaction
  endpoint:
    path: /verify
    method: POST
    data_selector: TransactionID
    params: {}
- name: verification
  endpoint:
    path: /verifications/v1/verify
    method: POST
    data_selector: body
    params: {}
- name: business_verification
  endpoint:
    path: /v3/business/verify
    method: POST
    data_selector: results
- name: test_entities
  endpoint:
    path: /v3/configuration/testentities
    method: GET
    data_selector: entities
- name: verification
  endpoint:
    path: /business/verification
    method: POST
    data_selector: response
    params: {}
- name: client_data
  endpoint:
    path: /reference/getclientdata
    method: GET
- name: profiles
  endpoint:
    path: /reference/query_1
    method: GET
- name: workflows
  endpoint:
    path: /reference/getflows_1
    method: GET
- name: download_document
  endpoint:
    path: /v1.0/documentdownload
    method: GET
    data_selector: DocumentUrl
    params: {}
- name: document_download
  endpoint:
    path: /documentdownload/transactionRecordId/fieldName
    method: GET
    data_selector: media/pdf
    params: {}
- name: identity_verification
  endpoint:
    path: /v1/identity-verification
    method: POST
    data_selector: data
    params: {}
- name: business_verification
  endpoint:
    path: /v1/business-verification
    method: POST
    data_selector: data
    params: {}
- name: watchlist
  endpoint:
    path: /verify
    method: POST
- name: watchlist_response
  endpoint:
    path: /v1/watchlist_response
    method: GET
    data_selector: Record
- name: verifications
  endpoint:
    path: /verifications/v1/verify
    method: POST
    data_selector: DataFields
- name: business_search
  endpoint:
    path: /post_v3-business-search
    method: POST
    data_selector: results
    params: {}
- name: business_verification
  endpoint:
    path: /post_v3-business-verify
    method: POST
    data_selector: results
    params: {}
- name: document_verification
  endpoint:
    path: /post_v3-document-verification
    method: POST
    data_selector: results
    params: {}
- name: Get Transaction Record
  endpoint:
    path: /get_v3-verifications-transactionrecord-transactionrecordid
    method: GET
- name: Get Transaction Record With Address
  endpoint:
    path: /get_v3-verifications-transactionrecordaddress-transactionrecordid
    method: GET
- name: Get Transaction Record Verbose
  endpoint:
    path: /get_v3-verifications-transactionrecordverbose-transactionrecordid
    method: GET
- name: current_step
  endpoint:
    path: /flow
    method: GET
- name: submit_data
  endpoint:
    path: /submit
    method: POST
- name: retrieve_workflows
  endpoint:
    path: /getflows
    method: GET
- name: retrieve_profiles
  endpoint:
    path: /retrieve-profiles
    method: GET
- name: document_availability
  endpoint:
    path: /v1/document-availability
    method: GET
    data_selector: documents
    params: {}
- name: Shareholder List Document
  endpoint:
    path: /v1/document/shareholder
    method: GET
    data_selector: ShareholderListDocument
    params: {}
- name: transaction
  endpoint:
    path: /v1/transaction
    method: POST
    data_selector: data
    params: {}
- name: filings_data
  endpoint:
    path: /standardized/filings
    method: GET
    data_selector: Filings
- name: verification
  endpoint:
    path: /verifications/v1/verify
    method: POST
    data_selector: ''
- name: business_verification
  endpoint:
    path: /v1/business-verification
    method: POST
    data_selector: verificationResult
- name: identity_verification
  endpoint:
    path: /v1/identity-verification
    method: POST
    data_selector: verificationResult
- name: Comprehensive View
  endpoint:
    path: /comprehensive/view
    method: GET
    data_selector: Record
    params: {}
- name: verifications
  endpoint:
    path: /verifications/v1/verify
    method: POST
    data_selector: body
    params: {}
- name: PeopleOfSignificantControl
  endpoint:
    path: /v1/persons/significant_control
    method: GET
    data_selector: AppendedFields
    params: {}
- name: business_verification
  endpoint:
    path: /v3/business/verify
    method: POST
- name: identity_verification
  endpoint:
    path: /v3/verifications/verify
    method: POST
- name: Get Transaction Status
  endpoint:
    path: /reference/get_v3-verifications-transaction-transactionid-status
    method: GET
- name: Get Transaction Record
  endpoint:
    path: /reference/get_v3-verifications-transactionrecord-transactionrecordid
    method: GET
- name: Partial Results
  endpoint:
    path: /reference/get_v3-verifications-transaction-transactionid-partialresult
    method: GET
- name: Get Transaction Status
  endpoint:
    path: /reference/get_v3-verifications-transaction-transactionid-status
    method: GET
    data_selector: TransactionId
- name: Partial Results
  endpoint:
    path: /reference/get_v3-verifications-transaction-transactionid-partialresult
    method: GET
    data_selector: DatasourceResults
- name: Get Transaction Record
  endpoint:
    path: /reference/get_v3-verifications-transactionrecord-transactionrecordid
    method: GET
    data_selector: TransactionRecordID
- name: StandardizedBusinessNames
  endpoint:
    path: /v1/standardized-business-names
    method: GET
    data_selector: StandardizedBusinessNames
    params: {}
- name: Get current step or initialize a flow
  endpoint:
    path: /reference/flow
    method: GET
- name: Submit data for the current step of a flow
  endpoint:
    path: /reference/submit
    method: POST
- name: Submit file for the current step of a flow
  endpoint:
    path: /reference/submitfile
    method: POST
- name: Get the data of a transaction
  endpoint:
    path: /reference/get_transaction_data
    method: GET
- name: flow
  endpoint:
    path: /reference/flow
    method: GET
- name: submit
  endpoint:
    path: /reference/submit
    method: POST
- name: get_transaction_data
  endpoint:
    path: /reference/get_transaction_data
    method: GET
- name: Get current step or initialize a flow
  endpoint:
    path: /flow
    method: GET
- name: Submit data for the current step of a flow
  endpoint:
    path: /submit
    method: POST
- name: Submit file for the current step of a flow
  endpoint:
    path: /submitfile
    method: POST
- name: Computes a backward step in the flow execution
  endpoint:
    path: /xback
    method: GET
- name: Connect a clientId to a flow by generating a token
  endpoint:
    path: /connector
    method: GET
- name: Connects a user with a flow with a token
  endpoint:
    path: /flowconnect
    method: GET
- name: Receiving Events
  endpoint:
    path: /sendevent
    method: POST
- name: Retrieve workflows from organization v2
  endpoint:
    path: /getflows
    method: GET
- name: Retrieve profiles from your workspace v2
  endpoint:
    path: /retrieve-profiles
    method: GET
- name: Retrieve profile data from a client v2
  endpoint:
    path: /getclientdata
    method: GET
- name: Retrieve a file from a client v2
  endpoint:
    path: /getclientfile
    method: GET
- name: Create a link between two end clients
  endpoint:
    path: /createlinkedlead
    method: POST
- name: Delete a link between two end clients
  endpoint:
    path: /deletelinkedlead
    method: DELETE
- name: Get init data for a flow
  endpoint:
    path: /init_get
    method: GET
- name: Create a new user state ID or update an existing one with some initialization
    data
  endpoint:
    path: /init
    method: POST
- name: Delete end clients in bulk
  endpoint:
    path: /deleteendclientsmanually
    method: DELETE
- name: Update end clients status in bulk
  endpoint:
    path: /updateendclientsstatusmanually
    method: PUT
- name: get_current_step_or_initialize_a_flow
  endpoint:
    path: /wfs/interpreter-v2/flow/{flowId}
    method: GET
- name: submit_flow
  endpoint:
    path: /submit/{flowId}
    method: POST
- name: current_step
  endpoint:
    path: /v1/flow
    method: GET
    data_selector: data
    params: {}
- name: submit_data
  endpoint:
    path: /v1/submit
    method: POST
    data_selector: data
    params: {}
- name: submit_file
  endpoint:
    path: /wfs/interpreter-v2/file/{flowId}
    method: POST
- name: submit_file
  endpoint:
    path: /file/flowId
    method: POST
    data_selector: object
    params:
      flowId: string
      file: file
      fieldId: string
- name: current_step
  endpoint:
    path: /flow
    method: GET
- name: submit_data
  endpoint:
    path: /submit
    method: POST
- name: submit_file
  endpoint:
    path: /submitfile
    method: POST
- name: backward_step
  endpoint:
    path: /wfs/interpreter-v2/back/{flowId}
    method: GET
    params: {}
- name: connect_client_to_flow
  endpoint:
    path: /connector/{clientId}/{flowId}
    method: GET
- name: clientIdFlowId
  endpoint:
    path: /connector/clientId/flowId
    method: GET
    data_selector: object
- name: flow_connect
  endpoint:
    path: /flow-connect/{token}
    method: GET
- name: url_verification_handshake
  endpoint:
    path: /callbackUrl
    method: POST
- name: events
  endpoint:
    path: /wfs/export/subscribe/
    method: POST
- name: Receiving Events
  endpoint:
    path: /sendevent
    method: POST
- name: workflows
  endpoint:
    path: /query/flows
    method: GET
    params:
      limit: '20'
      page: '0'
- name: flows
  endpoint:
    path: /query/flows
    method: GET
    data_selector: data
- name: profiles
  endpoint:
    path: /retrieve-profiles
    method: GET
- name: workflows_user_submissions
  endpoint:
    path: /export/v2/query/clients
    method: GET
    params:
      before: string
      after: string
      limit: string
      page: string
      statuses: string
      flowId: string
- name: clients
  endpoint:
    path: /query/clients
    method: GET
    data_selector: data
- name: workflows
  endpoint:
    path: /getflows
    method: GET
    data_selector: data
- name: client_data
  endpoint:
    path: /query/client/{clientId}
    method: GET
    params:
      includeFullServiceDetails: 'true'
- name: profiles
  endpoint:
    path: /retrieve/profiles
    method: GET
    data_selector: profiles
- name: client_file
  endpoint:
    path: /getclientfile
    method: GET
    data_selector: file
- name: file
  endpoint:
    path: /query/file
    method: GET
- name: retrieve_file
  endpoint:
    path: /query/file
    method: GET
    data_selector: string
    params:
      key: base64encoded
- name: create_link
  endpoint:
    path: /wfs/interpreter-v2/end-clients
    method: POST
- name: delete_link_between_clients
  endpoint:
    path: /end-clients
    method: DELETE
    data_selector: object
    params: {}
- name: init_data
  endpoint:
    path: /wfs/interpreter-v2/init/{flowId}
    method: GET
    params: {}
- name: init
  endpoint:
    path: /init/flowId
    method: GET
    data_selector: object
    params: {}
- name: create_or_update_user_state
  endpoint:
    path: /wfs/interpreter-v2/init/{flowId}
    method: POST
- name: delete_end_clients
  endpoint:
    path: /end-clients/delete-manually
    method: DELETE
    data_selector: Any found end clients were deleted
    params: {}
- name: update_end_clients_status
  endpoint:
    path: /wfs/interpreter-v2/end-clients/status
    method: PUT
    data_selector: status
    params: {}
- name: update_end_clients_status_in_bulk
  endpoint:
    path: /reference/updateendclientsstatusmanually
    method: PUT
- name: client_credential_flow
  endpoint:
    path: /reference/accesstoken
    method: POST
- name: Identity Document Verification
  endpoint:
    path: /v1.0/identity-verification
    method: POST
- name: Business Verification
  endpoint:
    path: /v1.0/business-verification
    method: POST
- name: flows
  endpoint:
    path: /query/flows
    method: GET
    data_selector: data
- name: workflows
  endpoint:
    path: /wfs/export/v1/query/flows
    method: GET
    params:
      limit: '20'
      page: '0'
- name: file
  endpoint:
    path: /query/file
    method: GET
- name: retrieve_file
  endpoint:
    path: /query/file
    method: GET
    data_selector: string
    params:
      key: string
- name: client_submissions
  endpoint:
    path: /wfs/export/v1/query/clients
    method: GET
    params:
      before: string
      after: string
      limit: string
      page: string
      statuses: string
      flowId: string
- name: clients
  endpoint:
    path: /query/clients
    method: GET
    data_selector: data
- name: profile_data
  endpoint:
    path: /getclientdata
    method: GET
    data_selector: data
- name: profiles
  endpoint:
    path: /query/client/clientId
    method: GET
    data_selector: object
- name: retrieve_profile_data
  endpoint:
    path: /query/client/{clientId}
    method: GET
    params:
      includeFullServiceDetails: string
- name: Retrieve profile data from a client v1
  endpoint:
    path: /reference/getclientdata_1
    method: GET
- name: Authorization
  endpoint:
    path: /reference/authorization-2
    method: GET
- name: identity_verification
  endpoint:
    path: /v1/identity-verification
    method: POST
    data_selector: data
    params: {}
- name: authorize
  endpoint:
    path: /authorize/customer
    method: POST
- name: handoff
  endpoint:
    path: /customer/handoff
    method: POST
- name: create_transaction
  endpoint:
    path: /customer/transactions
    method: POST
- name: transactions
  endpoint:
    path: /customer/transactions/documents
    method: POST
    data_selector: object
- name: upload_document
  endpoint:
    path: /customer/transactions/documents
    method: POST
- name: verify_transaction
  endpoint:
    path: /customer/transactions/verify
    method: POST
- name: transaction_data
  endpoint:
    path: /customer/transactions/{transactionId}
    method: GET
    data_selector: transactionData
    params: {}
- name: transaction_data
  endpoint:
    path: /customer/transactions/transactionId/images/imageId
    method: GET
- name: get_image
  endpoint:
    path: /customer/transactions/{transactionId}/images/{imageId}
    method: GET
- name: Get current step or initialize a flow
  endpoint:
    path: /reference/flow
    method: GET
- name: Submit data for the current step of a flow
  endpoint:
    path: /reference/submit
    method: POST
- name: Get Transaction Record
  endpoint:
    path: /reference/get_v3-verifications-transactionrecord-transactionrecordid
    method: GET
- name: Get Country Code
  endpoint:
    path: /reference/get_v3-configuration-countrycodes-packageid
    method: GET
- name: Get Recommended Fields
  endpoint:
    path: /reference/get_v3-configuration-fields-packageid-countrycode-recommended
    method: GET
- name: Get Detailed Consents
  endpoint:
    path: /reference/get_v3-configuration-consents-packageid-countrycode-detail
    method: GET
- name: Get Consents
  endpoint:
    path: /reference/get_v3-configuration-consents-packageid-countrycode
    method: GET
- name: Get Test Entities
  endpoint:
    path: /reference/get_v3-configuration-testentities-packageid-countrycode
    method: GET
- name: Get List of packages
  endpoint:
    path: /reference/get_v3-account-packages
    method: GET
- name: Get Country Subdivisions
  endpoint:
    path: /reference/get_v3-configuration-countrysubdivisions-countrycode
    method: GET
- name: Get Fields
  endpoint:
    path: /reference/get_v3-configuration-fields-packageid-countrycode
    method: GET
- name: Get Datasources
  endpoint:
    path: /reference/get_v3-configuration-datasources-packageid-countrycode
    method: GET
- name: Get Country Code
  endpoint:
    path: /v3/configuration/countrycodes
    method: GET
- name: country_codes
  endpoint:
    path: /configuration/countrycodes/{packageID}
    method: GET
    data_selector: countryCodes
    params:
      packageID: required
- name: Get Current Step or Initialize a Flow
  endpoint:
    path: /v2/flow
    method: GET
- name: Submit Data for the Current Step of a Flow
  endpoint:
    path: /v2/submit
    method: POST
- name: Submit File for the Current Step of a Flow
  endpoint:
    path: /v2/submitfile
    method: POST
- name: Create a New User State ID or Update an Existing One
  endpoint:
    path: /v2/init
    method: POST
- name: recommended_fields
  endpoint:
    path: /configuration/fields/{packageID}/{countryCode}/recommended
    method: GET
    data_selector: fields
- name: country_codes
  endpoint:
    path: /configuration/countrycodes/{packageID}
    method: GET
    data_selector: countryCodes
- name: detailed_consents
  endpoint:
    path: /v3/configuration/consents/{packageID}/{countryCode}/detail
    method: GET
    data_selector: responses
- name: consents
  endpoint:
    path: /v3/configuration/consents/{packageId}/{countryCode}
    method: GET
- name: consents
  endpoint:
    path: /configuration/consents/{packageID}/{countryCode}
    method: GET
    data_selector: consents
- name: test_entities
  endpoint:
    path: /configuration/testentities/{packageID}/{countryCode}
    method: GET
    data_selector: response
    params: {}
- name: test_entities
  endpoint:
    path: /v3/configuration/testentities
    method: GET
    data_selector: data
    params: {}
- name: packages
  endpoint:
    path: /v3/account/packages
    method: GET
    data_selector: packages
- name: country_subdivisions
  endpoint:
    path: /v3/configuration/countrysubdivisions/{countryCode}
    method: GET
- name: fields
  endpoint:
    path: /configuration/fields/{packageID}/{countryCode}
    method: GET
    data_selector: fields
    params: {}
- name: datasources
  endpoint:
    path: /configuration/datasources/{packageID}/{countryCode}
    method: GET
- name: datasources
  endpoint:
    path: /v3/configuration/datasources
    method: GET
    data_selector: datasources
    params: {}
- name: SayHello
  endpoint:
    path: /v1.0/reference/sayhello
    method: GET
- name: TestAuthentication
  endpoint:
    path: /v1.0/reference/testauthentication
    method: GET
- name: business_verification
  endpoint:
    path: /v3/business/search
    method: POST
    data_selector: results
    params: {}
- name: person_verification
  endpoint:
    path: /v3/person/verify
    method: POST
    data_selector: results
    params: {}
- name: say_hello
  endpoint:
    path: /v3/connection/sayhello/{name}
    method: GET
- name: test_authentication
  endpoint:
    path: /v3/connection/testauthentication
    method: GET
- name: Get Transaction Record
  endpoint:
    path: /reference/get_v3-verifications-transactionrecord-transactionrecordid
    method: GET
- name: Get Transaction Status
  endpoint:
    path: /reference/get_v3-verifications-transaction-transactionid-status
    method: GET
- name: Test Authentication
  endpoint:
    path: /reference/get_v3-connection-testauthentication
    method: GET
- name: transaction_record
  endpoint:
    path: /v3/verifications/transactionrecord/{transactionRecordID}
    method: GET
- name: Get Transaction Status
  endpoint:
    path: /v3/verifications/transactionrecord/transactionRecordID
    method: GET
    data_selector: object
    params: {}
- name: Get Transaction Record
  endpoint:
    path: /v3/verifications/transactionrecord/transactionrecordid
    method: GET
    data_selector: object
    params: {}
- name: transaction_status
  endpoint:
    path: /v3/verifications/transaction/{transactionID}/status
    method: GET
- name: kyc_person_verification
  endpoint:
    path: /v3/verifications/verify
    method: POST
- name: verifications
  endpoint:
    path: /v3/verifications/verify
    method: POST
- name: transaction_status
  endpoint:
    path: /v3/verifications/transaction/{transactionid}/status
    method: GET
- name: verifications
  endpoint:
    path: /v3/verifications/verify
    method: POST
- name: verifications
  endpoint:
    path: /verifications/verify
    method: POST
    data_selector: object
    params: {}
- name: transaction
  endpoint:
    path: /verifications/transaction
    method: GET
    data_selector: object
    params: {}
- name: business_search
  endpoint:
    path: /reference/post_v3-business-search
    method: POST
- name: business_verify
  endpoint:
    path: /reference/post_v3-business-verify
    method: POST
- name: get_business_registration_numbers
  endpoint:
    path: /reference/get_v3-business-businessregistrationnumbers
    method: GET
- name: get_all_jurisdictions
  endpoint:
    path: /reference/get_v3-business-countryjoi
    method: GET
- name: business_verification
  endpoint:
    path: /v3/business/verify
    method: POST
    data_selector: result
    params: {}
- name: business_search
  endpoint:
    path: /v3/business/search
    method: POST
    data_selector: result
    params: {}
- name: jurisdictions_of_incorporation
  endpoint:
    path: /v3/business/countryJOI
    method: GET
    data_selector: jurisdictions
- name: jurisdictions_of_incorporation
  endpoint:
    path: /v3/business/countryJOI/{CountryCode}
    method: GET
- name: business_registration_numbers
  endpoint:
    path: /v3/business/businessregistrationnumbers
    method: GET
- name: business_registration_numbers
  endpoint:
    path: /v3/business/businessregistrationnumbers/{CountryCode}
    method: GET
- name: business_registration_numbers
  endpoint:
    path: /business/businessregistrationnumbers
    method: GET
    data_selector: array of objects
- name: business_registration_numbers_by_country
  endpoint:
    path: /business/businessregistrationnumbers/CountryCode
    method: GET
    data_selector: array of objects
- name: business_registration_numbers
  endpoint:
    path: /v3/business/businessregistrationnumbers/{CountryCode}/{jurisdictionCode}
    method: GET
    params: {}
- name: business_registration_numbers
  endpoint:
    path: /business/businessregistrationnumbers/CountryCode/jurisdictionCode
    method: GET
- name: business_search
  endpoint:
    path: /v3/business/search
    method: POST
- name: transaction
  endpoint:
    path: /transaction
    method: GET
    data_selector: object
    params: {}
- name: business_verification
  endpoint:
    path: /v3/business/verify
    method: POST
    data_selector: results
- name: business_verification
  endpoint:
    path: /v1/business/verify
    method: POST
    data_selector: records
- name: person_verification
  endpoint:
    path: /v1/person/verify
    method: POST
    data_selector: records
- name: Download Document
  endpoint:
    path: /v3/verifications/documentdownload/{transactionRecordID}/{fieldName}
    method: GET
- name: business_summary_report
  endpoint:
    path: /v3/business/report/{transactionRecordId}
    method: GET
    data_selector: file
    params:
      additionalData: 'false'
- name: partial_transaction_result
  endpoint:
    path: /v3/verifications/transaction/{transactionID}/partialresult
    method: GET
- name: Get Partial Transaction Result
  endpoint:
    path: /verifications/transaction/transactionID/partialresult
    method: GET
    data_selector: object
    params: {}
- name: Country Codes
  endpoint:
    path: /v1.0/reference/getcountrycodes
    method: GET
- name: Consents
  endpoint:
    path: /v1.0/reference/getcountrycodes
    method: GET
- name: Detailed Consents
  endpoint:
    path: /v1.0/reference/getdetailedconsents
    method: GET
- name: Country Subdivisions
  endpoint:
    path: /v1.0/reference/getcountrysubdivisions
    method: GET
- name: Fields
  endpoint:
    path: /v1.0/reference/getfields
    method: GET
- name: Recommended Fields
  endpoint:
    path: /v1.0/reference/getrecommendedfields
    method: GET
- name: Test Entities
  endpoint:
    path: /v1.0/reference/gettestentities
    method: GET
- name: Datasources
  endpoint:
    path: /v1.0/reference/getdatasources
    method: GET
- name: Say Hello
  endpoint:
    path: /v1.0/reference/sayhello
    method: GET
- name: Test Authentication
  endpoint:
    path: /v1.0/reference/testauthentication
    method: GET
- name: Get current step or initialize a flow
  endpoint:
    path: /reference/flow
    method: get
- name: Submit data for the current step of a flow
  endpoint:
    path: /reference/submit
    method: post
- name: Submit file for the current step of a flow
  endpoint:
    path: /reference/submitfile
    method: post
- name: Get Transaction Record
  endpoint:
    path: /reference/gettransactionrecord
    method: get
- name: say_hello
  endpoint:
    path: /connection/v1/sayhello/{name}
    method: GET
- name: test_authentication
  endpoint:
    path: /connection/v1/testauthentication
    method: GET
- name: test_authentication
  endpoint:
    path: /connection/v1/testauthentication
    method: GET
- name: country_code
  endpoint:
    path: /v1.0/reference/getcountrycodes
    method: GET
    data_selector: countryCodes
    params: {}
- name: datasources
  endpoint:
    path: /v1.0/reference/getdatasources
    method: GET
    data_selector: datasources
    params: {}
- name: Get Country Codes
  endpoint:
    path: /v1.0/reference/getcountrycodes
    method: GET
- name: Get Consents
  endpoint:
    path: /v1.0/reference/getconsents
    method: GET
- name: Get Detailed Consents
  endpoint:
    path: /v1.0/reference/getdetailedconsents
    method: GET
- name: Get Country Subdivisions
  endpoint:
    path: /v1.0/reference/getcountrysubdivisions
    method: GET
- name: Get Fields
  endpoint:
    path: /v1.0/reference/getfields
    method: GET
- name: Get Recommended Fields
  endpoint:
    path: /v1.0/reference/getrecommendedfields
    method: GET
- name: Get Test Entities
  endpoint:
    path: /v1.0/reference/gettestentities
    method: GET
- name: Get Datasources
  endpoint:
    path: /v1.0/reference/getdatasources
    method: GET
- name: country_codes
  endpoint:
    path: /configuration/v1/countrycodes/IdentityVerification
    method: GET
    data_selector: array of strings
- name: detailed_consents
  endpoint:
    path: /configuration/v1/detailedConsents/IdentityVerification/{countryCode}
    method: GET
    data_selector: array of objects
    params:
      countryCode: string
- name: country_subdivisions
  endpoint:
    path: /configuration/v1/countrysubdivisions/{countryCode}
    method: GET
    data_selector: array of objects
    params:
      countryCode: string
- name: Get Fields
  endpoint:
    path: /configuration/v1/fields/IdentityVerification/{countryCode}
    method: GET
- name: recommended_fields
  endpoint:
    path: /configuration/v1/recommendedfields/IdentityVerification/{countryCode}
    method: GET
    data_selector: object
    params: {}
- name: test_entities
  endpoint:
    path: /configuration/v1/testentities/IdentityVerification/{countryCode}
    method: GET
- name: datasources
  endpoint:
    path: /configuration/v1/datasources/IdentityVerification/{countryCode}
    method: GET
- name: business_verification
  endpoint:
    path: /v1.0/business-verification
    method: POST
- name: identity_verification
  endpoint:
    path: /v1.0/identity-verification
    method: POST
- name: Get Transaction Record
  endpoint:
    path: /v1.0/reference/gettransactionrecord
    method: GET
- name: Get Transaction Record (w/ Address)
  endpoint:
    path: /v1.0/reference/gettransactionrecordaddress
    method: GET
- name: Get Transaction Record (Verbose)
  endpoint:
    path: /v1.0/reference/gettransactionrecordverbose
    method: GET
- name: Get Transaction Status
  endpoint:
    path: /v1.0/reference/gettransactionstatus
    method: GET
- name: transaction_record
  endpoint:
    path: /verifications/v1/transactionrecord/{id}
    method: GET
    data_selector: object
- name: transaction_record_with_address
  endpoint:
    path: /verifications/v1/transactionrecord/{id}/withaddress
    method: GET
    data_selector: object
- name: transaction_record_verbose
  endpoint:
    path: /verifications/v1/transactionrecord/{id}/verbose
    method: GET
- name: Get Transaction Status
  endpoint:
    path: /verifications/v1/transaction/{id}/status
    method: GET
- name: identity_verification
  endpoint:
    path: /v1.0/reference/identity-verification-verify
    method: POST
- name: identity_verification
  endpoint:
    path: /identity-verification
    method: POST
- name: business_verification
  endpoint:
    path: /business-verification
    method: POST
- name: document_verification
  endpoint:
    path: /document-verification
    method: POST
- name: verify
  endpoint:
    path: /verifications/v1/verify
    method: POST
    data_selector: result
    params: {}
- name: verify
  endpoint:
    path: /verify
    method: POST
    data_selector: object
    params: {}
- name: Get Document Types
  endpoint:
    path: /v1.0/reference/get-document-types
    method: GET
- name: Verify
  endpoint:
    path: /v1.0/reference/document-verification-verify
    method: POST
- name: Get Transaction Records (w/ Document Image)
  endpoint:
    path: /v1.0/reference/gettransactionrecorddocument
    method: GET
- name: Get current step or initialize a flow
  endpoint:
    path: /reference/flow
    method: GET
- name: Submit data for the current step of a flow
  endpoint:
    path: /reference/submit
    method: POST
- name: Test Authentication
  endpoint:
    path: /reference/get_v3-connection-testauthentication
    method: GET
- name: Get Transaction Record
  endpoint:
    path: /reference/get_v3-verifications-transactionrecord-transactionrecordid
    method: GET
- name: Verify
  endpoint:
    path: /reference/post_v3-verifications-verify
    method: POST
- name: document_types
  endpoint:
    path: /configuration/v1/documentTypes/{countryCode}
    method: GET
    data_selector: object
- name: verify
  endpoint:
    path: /verifications/v1/verify
    method: POST
- name: verification
  endpoint:
    path: /verifications/v1/verify
    method: POST
    data_selector: object
    params: {}
- name: transaction_record
  endpoint:
    path: /verifications/v1/transactionrecord/{transactionRecordID}/{documentField}
    method: GET
    data_selector: response
    params: {}
- name: business_verification
  endpoint:
    path: /business-verification
    method: POST
    data_selector: results
    params: {}
- name: document_verification
  endpoint:
    path: /document-verification
    method: POST
    data_selector: results
    params: {}
- name: Get Business Registration Numbers for all supported countries
  endpoint:
    path: /v1.0/reference/getallbusinessregistrationnumbers
    method: GET
- name: Get Business Registration Numbers by Country
  endpoint:
    path: /v1.0/reference/getbusinessregistrationnumbers
    method: GET
- name: Get Business Registration Numbers By Country w/JOI
  endpoint:
    path: /v1.0/reference/getbusinessregistrationnumbersv2
    method: GET
- name: Get all Jurisdictions of Incorporation
  endpoint:
    path: /v1.0/reference/getallcountryjoi
    method: GET
- name: Get Jurisdictions of Incorporation per country
  endpoint:
    path: /v1.0/reference/getcountryjoi
    method: GET
- name: Business Search
  endpoint:
    path: /v1.0/reference/search-1
    method: GET
- name: Get Business Search Result
  endpoint:
    path: /v1.0/reference/getbusinesssearchresult
    method: GET
- name: Verify
  endpoint:
    path: /v1.0/reference/verify-1
    method: POST
- name: Get Partial Transaction Result
  endpoint:
    path: /v1.0/reference/getpartialresult
    method: GET
- name: Download Document
  endpoint:
    path: /v1.0/reference/documentdownload
    method: GET
- name: business_registration_numbers
  endpoint:
    path: /configuration/v1/businessregistrationnumbers
    method: GET
    data_selector: array of objects
- name: business_registration_numbers
  endpoint:
    path: /configuration/v1/businessregistrationnumbers/{countryCode}
    method: GET
    data_selector: array of objects
- name: business_registration_numbers
  endpoint:
    path: /configuration/v1/businessregistrationnumbers/{countryCode}/{jurisdictionCode}
    method: GET
- name: jurisdictions_of_incorporation
  endpoint:
    path: /configuration/v1/countryJOI
    method: GET
    data_selector: array of objects
- name: jurisdictions_of_incorporation
  endpoint:
    path: /configuration/v1/countryJOI/{countryCode}
    method: GET
    data_selector: array of objects
- name: business_search
  endpoint:
    path: /search
    method: POST
- name: business_search_result
  endpoint:
    path: /search/transactionrecord/{id}
    method: GET
    data_selector: object
- name: verify
  endpoint:
    path: /verifications/v1/verify
    method: POST
    params:
      AcceptTruliooTermsAndConditions: boolean
      CallBackUrl: string
      Timeout: int32
      ConfigurationName: string
      ConsentForDataSources: array of strings
      CountryCode: string
      CustomerReferenceID: string
      DataFields: object
      VerboseMode: boolean
- name: verify
  endpoint:
    path: /verifications/v1/verify
    method: POST
    data_selector: object
    params: {}
- name: partial_transaction_result
  endpoint:
    path: /verifications/v1/transaction/{id}/partialresult
    method: GET
    data_selector: object
    params: {}
- name: Download Document
  endpoint:
    path: /verifications/v1/documentdownload/{transactionRecordId}/{fieldName}
    method: GET
- name: Get Partial Transaction Result
  endpoint:
    path: /verifications/v1/getpartialresult
    method: GET
- name: current_step
  endpoint:
    path: /v2/flow
    method: GET
- name: submit_data
  endpoint:
    path: /v2/submit
    method: POST
- name: document_verification
  endpoint:
    path: /v2/verify_transaction
    method: POST
- name: knownFacesMatches
  endpoint:
    path: /knownFaces/matches
    method: GET
    data_selector: knownFacesMatches
- name: Webhook Events
  endpoint:
    path: /webhook/events
    method: POST
    data_selector: events
- name: business_search
  endpoint:
    path: /v3/business-search
    method: POST
- name: business_verify
  endpoint:
    path: /v3/business-verify
    method: POST
- name: business_verification
  endpoint:
    path: /v1/business-verification
    method: GET
- name: identity_verification
  endpoint:
    path: /v1/identity-verification
    method: POST
- name: country_codes
  endpoint:
    path: /reference/get_v3-configuration-countrycodes-packageid
    method: GET
    data_selector: country_codes
    params: {}
- name: country_codes
  endpoint:
    path: /v1/countrycodes
    method: GET
    data_selector: codes
    params: {}
- name: Say Hello
  endpoint:
    path: /v3/connection/sayhello
    method: GET
- name: say_hello
  endpoint:
    path: /connection/v1/sayhello/Joe Napoli
    method: GET
- name: handoff
  endpoint:
    path: /customer/handoff
    method: POST
    data_selector: shortCode
- name: customer_authorization
  endpoint:
    path: /authorize/customer
    method: POST
    data_selector: object
    params: {}
- name: identity_verification
  endpoint:
    path: /v3/verifications/verify
    method: POST
- name: person_verification
  endpoint:
    path: /v3/verifications/verify
    method: POST
    data_selector: data
    params: {}
- name: business_verification
  endpoint:
    path: /v3/business/verify
    method: POST
    data_selector: data
    params: {}
- name: identity_verification
  endpoint:
    path: /v1.0/identity-verification
    method: POST
- name: business_verification
  endpoint:
    path: /v1.0/business-verification
    method: POST
- name: Get current step or initialize a flow
  endpoint:
    path: /v2/flow
    method: GET
- name: Submit data for the current step of a flow
  endpoint:
    path: /v2/submit
    method: POST
- name: Test Authentication
  endpoint:
    path: /v3/connection/testauthentication
    method: GET
- name: Identity Document Verification
  endpoint:
    path: /identity-document-verification
    method: POST
- name: business_registration_numbers
  endpoint:
    path: /reference/get_v3-business-businessregistrationnumbers-countrycode
    method: GET
    data_selector: business_registration_numbers
    params: {}
- name: Get Jurisdictions of Incorporation by Country
  endpoint:
    path: /v3/business-countryjoi-countrycode
    method: GET
- name: Get all Jurisdictions of Incorporation
  endpoint:
    path: /v3/business-countryjoi
    method: GET
- name: business_search
  endpoint:
    path: /v3/business/search
    method: POST
    data_selector: data
    params: {}
- name: verify_business
  endpoint:
    path: /v3/business/verify
    method: POST
    data_selector: data
    params: {}
notes:
- Make sure all requests to this endpoint meet SSL/TLS standards.
- Data sent and received by the API must be in JSON format.
- Set the Content-Type header in your requests to 'application/json; charset=utf-8'.
- Ensure to follow the API handshake process for authentication.
- Requires OAuth2 setup for client credentials flow
- Uses OAuth2 with refresh token — requires setup of connected app in Trulioo
- Requires setup of connected app in Trulioo.
- Ensure that your system can receive and handle events correctly.
- API handshake ensures that the server receiving events is under your direct management.
- Ensure to follow the API handshake process.
- Requires setup of API key in the developer portal
- Some responses may include nested fields that can be null
- HMAC secret can be obtained by contacting your Trulioo team at support@trulioo.com
- Configure Export API in the Builder
- Ensure callback URL is correctly configured to point to your event dispatcher endpoint
- Requires proper configuration for OAuth2 authentication
- Ensure to set up a connected app for OAuth2 authentication
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- The examples provided are for a test entity; the data presented is not based on
  real information.
- Client Credential Flow (2-legged OAuth) is used for authentication.
- The unique x-hf-session token is required for subsequent steps.
- Paste the Client Id and Client Secret in the Environment variables “envClientId”
  and “envClientSecret”.
- Paste the License Key shared with you securely in the environment variable “envDocVLicenseKey”.
- Paste the flow Id of your workflow in the corresponding collection variable.
- Paste the value of ‘accessToken’ in the ‘authorization’ collection variable and
  the value of the image id you’re trying to retrieve in the ‘imageId’ collection
  variable.
- Requires setup of connected app in api
- Some objects may return nulls in deeply nested fields
- The steps defined in the builder may not match the actual execution workflow due
  to background services and condition logic that create different paths.
- Some services can take a long time to run and will return a pending state. If you'd
  prefer not to wait, you can repeatedly call FlowStep until you get the next step.
- Requires setup of authentication.
- Access tokens expire in one hour.
- You will need to use a new access token for additional transactions.
- shortCode lasts up to 5 minutes
- QR Code lasts 4 minutes, automatically renews when expired
- Transaction flow must be completed within an hour of Authorization
- Some US states impose obligations on businesses that collect and use 'biometric
  identifiers' and/or 'biometric information'.
- The SDK is only responsible for capturing and uploading photos. Access the Trulioo
  Customer API for authorization and to perform checks.
- 'Ensure the following keys are included in your apps info.plist: NSCameraUsageDescription'
- Some US states impose obligations on businesses that collect and use biometric identifiers
  and/or biometric information.
- Some US states impose obligations on businesses that collect and use “biometric
  identifiers” and/or “biometric information”, which may include facial scan data
  extracted from photos during a document verification transaction.
- The SDK is only responsible for capturing and uploading photos.
- Access the Trulioo Customer API for authorization and to perform checks.
- Each Webhook event provides a unique userId for your user per transaction
- Authentication requires a Client ID and Client Secret provided by your Implementation
  Specialist.
- The x-hf-session is needed to resume a Workflow session.
- Known Faces is not enabled by default. To activate it, please contact your Trulioo
  Customer Success Manager or Product contact.
- Trulioo will load up to 90 days (or your configured retention period) of historical
  selfies.
- Known Faces does not alter transaction decisions. It simply surfaces matched history.
- 'Match results are visible in: API response under knownFacesMatches and Customer
  Portal > Known Faces tab.'
- Uses the default retention period based on your agreement (extendable on request).
- No self-serve enable/disable toggle; all config changes require CSM support.
- For any other questions or requests, contact Trulioo Sales Team
- All requests to the production endpoint must be SSL/TLS compliant.
- In order to get optimal results from Trulioo's business verification service globally
  an asynchronous integration is required.
- Using Asynchronous calls allows you to submit verifications and get a quicker response
  if your application only needs to submit a transaction and does not need to process
  the result of a transaction right away.
- All responses will have content type application/json; charset=utf-8
- Some responses may include nested data structures
- The Trulioo Address Validation Service corrects the address for countries all over
  the world.
- Validation Codes can be returned by the service in the Verify API response.
- One or more of City, Municipality, Suburb have been changed please check Address
  Validation fields for additional information
- One or more of Unit Number, Building Number, or Street have been changed please
  check Address Validation fields for additional
- Postal Code changed, please check Address Validation fields for additional information
- One or more of Unit Number, Building Number, or Street are either invalid or missing
- Cannot validate address
- Ensure to configure the API key and setup before integration.
- Integration includes a 5 step process for Identity Verification.
- Trulioo provides multiple global and regional endpoints. Please choose the correct
  endpoint based on your business use case and your regulatory and compliance requirements.
- You may need to obtain consent from your customer for their data to be sent to that
  particular source.
- Requires proper setup of client credentials in the developer portal
- The secondary rule will not change the overall Trulioo verification result, which
  is dictated by the primary verification rule.
- Each DatasourceResult contains an array of DatasourceFields.
- Status indicates whether the field matched the input value.
- 'Supported ID Types: National ID, Health, Social Service, Tax ID Number, Country
  Specific'
- The Trulioo Platform Address Validation Service corrects the address for countries
  all over the world.
- Validation codes in a Verify response where address cleansing is included.
- One of Email or Telephone is required
- Requires setup of OAuth2 client credentials.
- To see the WatchlistHitDetails Object you must set VerboseMode:true in the request.
- Watchlist Screening is integrated into the same Trulioo endpoint as Person Match
  and Business Verification products.
- Customers using KYC or KYB identity solutions do not need to make any changes to
  their request structure except to add the VerboseMode parameter.
- Uses OAuth2 with client credentials flow.
- Trulioo provides multiple global and regional endpoints.
- To generate the 'ACCESS*TOKEN', combine your username and password into a string
  _username:password* and run it through Base64 encryption.
- Requires setup of connected app in Trulioo
- Ensure correct OAuth scopes are configured
- Some datasources may return data at a later time. The callback URL is the endpoint
  set for such asynchronous responses from Truloo.
- Data includes various fields concerning business verification.
- The callback URL is the endpoint set for asynchronous responses from Trulioo.
- RequestReasonCode is a mandatory input for Business Verification requests in Germany.
- Some datasources may not respond immediately. In such cases, you can configure a
  callback URL.
- Trulioo provides customers with the ability to request various documents such as
  Shareholder documents, Articles of Association, Financial information documents
  etc. from the government registry, in real time.
- The Trulioo Platform only handles the request and response on behalf of customers.
- Collect the Business Name and Business Registration Number / Identification Number
  from your customers
- If you only have the Business Name, call the Search API and provide the returned
  information back to your customer to identify and confirm
- Trulioo does not retain sensitive, Personally Identifiable Information, so it is
  possible that some data elements of previous transactions are scrubbed when using
  the above methods.
- With the launch of Standardized Fields in KYB, you can expect more predictable and
  uniform responses to your business verification requests.
- There may be occasions where you might encounter issues while having the Comprehensive
  View feature enabled.
- Even if you run into one of the following issues and a Comprehensive View could
  not be produced, the related data source results will still be present & available.
- Trulioo gathers the information for your business verification requests from a wide
  variety of sources.
- Matching on Persons of Significant Control will default to exact matching. Contact
  your Customer Support Manager to configure partial matching.
- Ensure correct API version is specified.
- With the release of Partial Results, you can view the results from some of the datasources
  configured on your account as opposed to waiting for complete responses from all
  datasources.
- Each one of our sources behave differently per country depending on the structure
  of the underlying data.
- Best way to send requests to our sources varies greatly depending on the country.
- Optimal results may depend on the language of the query.
- Trulioo Business Watchlist performs Sanctions and Adverse Media checks for Businesses.
- Requires OAuth2 with refresh token setup
- Some endpoints may have rate limits
- The API is a loosely coupled API; fields may be added to our services and responses
  as the API evolves.
- If you wish to go Live with our Trulioo Solutions, please contact the Trulioo Sales
  Team
- The Trulioo Platform provides secure access to over 400 data sources worldwide.
- Requests must be SSL/TLS compliant
- Responses will be gzipped if Accept-Encoding header is set to 'gzip, deflate'
- Testing of Trulioo Platform's functionality or your integration with Trulioo Platform's
  can be accomplished by performing Identity Verifications against predefined static
  Test Entities instead of live datasources.
- In the Sandbox environment, all transactions submitted are only verified against
  the static Test Entities, and no live datasources.
- Asynchronous integration is required for optimal results.
- Your organization controls endpoint decisions around localization.
- These should be based on your business use case, regulatory and compliance requirements.
- 'Validation codes: `3000`- level at which the address was verified, `3008`- address
  was not verified, `3001-3005` - occur in combination with `3000`or `3008`'
- To use Identity Verification you can send a single JSON request to the Verify endpoint,
  containing all the known details of the identity you wish to check.
- Requires setup of OAuth credentials in Trulioo
- Ensure proper permissions are granted for API access
- This API requires a valid token for access.
- Ensure to handle token expiration properly.
- Some API responses may include null values in nested fields
- This is the unique ID used for verification.
- Ensure to check for updates in the API documentation
- Requires API key and secret for authentication
- Uses OAuth2 authentication.
- Ensure to review the rate limits for API calls.
- For the Verify call, the input field provided is DataFields.NationalIds.Type.
- API supports various verification types.
- To see the WatchlistHitDetails Object you must set `VerboseMode:true` in the request.
- Trulioo Watchlist performs Sanctions, Adverse Media, and PEP checks.
- Ensure OAuth2 tokens are refreshed appropriately.
- Check API limits to avoid throttling.
- Helps reduce fraud, automate onboarding, and meet AML/KYC compliance.
- Requires valid API key and OAuth2 credentials
- API reference provides a comprehensive overview of the available endpoints for ID
  Document Verification.
- Requires setup of OAuth2 client credentials in Trulioo
- Ensure correct permissions are granted to the API client
- If you aren't receiving a successful response of the string you sent as a parameter
  visit our [Error Page](/reference/errors) for more information.
- 'NOTE: The SDK may have problems capturing images on desktop or laptop computers
  due to the lower quality of web cameras.'
- Chrome requires the use of HTTPS / SSL when accessing the video for AUTO_CAPTURE
  mode.
- Use the CallbackURL field to call the API asynchronously to avoid timeout.
- Requires multiple global and regional endpoints based on business use case.
- Standardized fields include Address1, Address2, City, StateProvince, PostalCode,
  DayOfBirth, MonthOfBirth, YearOfBirth, FullName, FirstName, LastName, etc.
- Include the 'CallBackUri' field for asynchronous processing.
- Sandbox accounts only use test entities and so trying to verify with any other data
  will result in no matches being found.
- It is recommended to call Get Country Codes every time a user loads the page.
- Multiple document types available depending on the country.
- You need a username and password for authenticating API calls.
- Each individual step is simple, but builds upon the step before it, letting you
  get up and running with a full business verification solution in no time.
- In order to test your project setup and connection, begin by simply calling the
  Say Hello endpoint.
- To generate the ACCESS*TOKEN portion of the header, combine your username and password
  into a string _username:password* and run the resulting string through Base64 encryption.
- Ensure proper OAuth2 configuration for authentication
- Some datasources may return data at a later time.
- Script manually created
- The callback URL is the endpoint set for asynchronous responses from GlobalGateway.
- Sandbox accounts only use test entities and trying to verify with any other data
  will result in no matches being found.
- Requires a valid API key and client secret for access
- Ensure to handle rate limiting
- Ensure to follow the authentication guide.
- Coverage of documents is only available from the Government Registry sources.
- Information varies per country and company. Information within these documents is
  only available after the document is successfully delivered.
- The document title and its content vary per country and jurisdiction.
- GlobalGateway only handles the request and response on behalf of customers. These
  restrictions are provided by the Government Registry.
- Processing time varies per government registry. It may take anywhere between 10
  seconds to a few hours to request the document.
- Trulioo recommends that customers provide a callback URL with their request so a
  notification can be sent when the transaction is complete.
- Documents requested in Canada are only available within the province's business
  hours.
- Reports in Nunavut are manually provided by the registry staff, obtaining the reports
  takes between 24h to 48h.
- British Columbia registry does not guarantee access to the Corporate Profile reports
  on Sundays.
- If a manual intervention is required at a registry level, obtaining the report may
  be delayed.
- There is a lot of variation in how information for businesses is stored in various
  datasources, countries and jurisdictions due to local norms.
- Both the Enhanced Profile and Filings fields must be set to True in order to receive
  Standardized Filing appended data.
- 'Possible values for FilingCategory include: Financing Statement Filings, Mortgages
  And Charges, Judgements, Bankruptcy, Insolvency, Liquidation, Suits, Liens, Claims,
  Commercial Collection Claims, Violations (China Only), Change Record (China Only).'
- Standardizing the content in the KYB fields will result in more predictable, consistent
  and uniform responses to Business Verification requests.
- Requires connected app setup for OAuth2 authentication.
- The goal of Comprehensive View is to collect & compare all entities we received
  from our various sources.
- Matching on Persons of Significant Control will default to exact matching.
- This is a new feature of Trulioo's business verification solution. With the release
  of Partial Results, you can view the results from some of the datasources configured
  on your account as opposed to waiting for complete responses from all datasources.
- Partial Results output identical to current datasource output.
- We attempt to match the client’s exact input with the vendor’s exact response.
- We will translate or transliterate either the input or returned value to ensure
  the two languages are the same and attempt to match again.
- OAuth API requires setup for authentication.
- The x-hf-session header must be present to return the current step.
- Ensure to handle token expiration
- Path parameters in the header must include both the flowId and the x-hf-session.
- You cannot subscribe through our API. Use the workflow builder to subscribe to webhooks
  via the Export API step.
- Your Callback URL will receive JSON-based payloads containing wrapped event types.
- We DO NOT support subscription through our API.
- Ensure correct setup of OAuth application in Trulioo
- Uses Bearer token for authentication.
- OAuth2 authentication is required for accessing the API.
- Requires proper setup of authentication and permissions.
- Ensure correct API endpoints are used for the respective operations.
- Ensure to handle rate limiting as per API guidelines.
- Requires setup of API keys in the Trulioo dashboard
- Endpoints designed to facilitate communication and authentication with Trulioo's
  APIs.
- Ensure proper scopes are assigned to the API key.
- Provides detailed information on identity verification processes using Trulioo’s
  services.
- Uses OAuth2 for authentication
- Defaults to Demo for the type of verification to perform.
- Requires setup of OAuth2 to access business verification and search APIs.
- Verify API has rate limits.
- Ensure correct OAuth scopes are set for the API.
- OAuth API requires setup of connected app in Trulioo
- Sandbox accounts only use test entities for verification.
- Ensure to handle the authentication properly to access the endpoints
- If configured for a sandbox account, use test entities for verification.
- Data sent and received by the API must be in JSON format
- Use the correct base URL for accessing the API
- The JSON structure might change over time as new fields are added
- API supports various verification methods including person and business verification.
- Separate endpoints exist for handling document uploads and verifications.
- Match results are visible in API response under knownFacesMatches and Customer Portal
  > Known Faces tab.
- The Workflow Webhook API is not the same as the DocV Customer Webhook API.
- API provides a comprehensive overview of the available endpoints for business verification.
- Integration requires setup of API keys and OAuth tokens
- Get Country Codes returns a list of ISO 2 country codes.
- Rate limits may apply
- Access token expire in 60 minutes.
- Integrate through the API for identity verification.
- New data sources and optimizations improve match performance.
- Ensure to handle token expiration properly
- Refer to API documentation for detailed endpoint usage
- All requests to the production endpoint need to be SSL/TLS compliant.
- The API supports various verification services.
- Uses OAuth2 for authentication.
- Analyzes, verifies and provides data intelligence for business entities in 195+
  countries.
errors:
- 'INVALID_REQUEST: Check the request parameters and format.'
- 'UNAUTHORIZED: Ensure valid API key or token.'
- '401 Unauthorized: Check client credentials'
- '400 Bad Request: Review request format and parameters'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- invalid_client
- unsupported_grant_type
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check your API key or token.'
- 'INVALID_REQUEST: Check your request structure and parameters'
- 'UNAUTHORIZED: Verify your API key and permissions'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of your requests'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Ensure your authentication credentials are correct'
- '429 Too Many Requests: Rate limit exceeded, slow down your requests'
- '401 Unauthorized: Check your authentication credentials'
- '404 Not Found: Verify the endpoint path is correct'
- '1010: Workflow object does not contain a value for shortcode.'
- '1020: Workflow object contains an invalid shortcode.'
- '1030: The session does not contain a valid access token.'
- '1320: There was a problem on verification session creation.'
- '1330: There was a problem submitting your session for verification.'
- '12020: There was a problem retrieving custom configurations.'
- '1040: The session was refreshed with an invalid short code.'
- '1210: Workflow object does not have a valid redirect URL.'
- '1230: There was a problem retrieving QR Code information.'
- 'Error: Verification Failed with Error Code'
- 'Error: Verification Failed with Exception'
- 3000 - level at which the address was verified
- 3008 - address was not verified
- 3001-3005 - occur in combination with 3000 or 3008
- '3000: Fully Validated to building'
- '3001: State / Province / County changed, please check Address validation fields
  for additional information'
- '3002: One or more of City, Municipality, Suburb have been changed please check
  Address Validation fields for additional information'
- '3003: One or more of Unit Number, Building Number, or Street have been changed
  please check Address Validation fields for additional'
- '3004: Postal Code changed, please check Address Validation fields for additional
  information'
- '3005: One or more of Unit Number, Building Number, or Street are either invalid
  or missing'
- '3008: Cannot validate address'
- '401 Unauthorized: Check credentials and token'
- '400 Bad Request: Validate input data format'
- '401 Unauthorized: Check your API key or token'
- '403 Forbidden: Insufficient permissions for this operation'
- '404 Not Found: The requested resource does not exist'
- Code: '1001'
  Message: 'Missing required field: FirstSurName'
- Code: '1005'
  Message: Missing Consent
- '401 Unauthorized: Check your API key and token'
- '400 Bad Request: Ensure all required parameters are included'
- '404 Not Found: Verify the endpoint URL.'
- '500 Internal Server Error: Try again later.'
- '1001: Required field missing'
- '3001: State Province Changed'
- '3002: City Changed'
- '3003: Street Info Changed'
- '3004: Postal Code Changed'
- '401 Unauthorized: Check your client credentials.'
- '404 Not Found: Verify the endpoint path.'
- If you aren't receiving a successful response of the string you sent as a parameter
  visit our Error Page here to diagnose.
- The authorization header isn't set properly. It should be a Base64 - encrypted Basic
  Authentication header.
- The spelling is incorrect.
- The wrong credentials were used.
- '401 Unauthorized: Check client credentials and token expiration'
- '403 Forbidden: Verify access rights to the requested resource'
- '404 Not Found: Ensure the endpoint path is correct'
- '1000: Business Name is a required input for a comprehensive entity'
- '1000: Business Registration Number or Tax ID Number is a required input for a comprehensive
  entity'
- '1000: Jurisdiction is a required input for a comprehensive entity'
- '1003: Configuration Error'
- '1003: None of the returned datasources could be used for a comprehensive entity'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify client credentials.'
- '429 Too Many Requests: Rate limit exceeded.'
- For more information regarding the Address Validation Codes please see [Validation
  Codes](/reference/errors-1).
- '404 Not Found: Check the endpoint URL'
- '400 Bad Request: Invalid parameters or missing fields.'
- '401 Unauthorized: Invalid token or missing authorization.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls'
- '401 Unauthorized: Check OAuth scopes or token validity'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '401 Unauthorized: Check your API key and secret'
- '404 Not Found: Ensure the endpoint is correct'
- '1001: Verification will not be run against that particular datasource'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Invalid credentials'
- '404 Not Found: Endpoint does not exist'
- '401 Unauthorized: Invalid API key or token'
- '401 Unauthorized: Check your API key and permissions.'
- '429 Too Many Requests: Slow down your request rate.'
- '500 Internal Server Error: Retry after a few moments.'
- '429 Too Many Requests: Rate limit exceeded'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Recheck OAuth credentials'
- '429 Too Many Requests: Implement exponential backoff'
- Error Messages
- 'ErrorCode: 9003, ErrorMessage: Face is too small. Move the camera closer to the
  face and retake the picture.'
- '111: CONSTRAINT_NOT_SATISFIED: The video camera must run at 1280x720, but this
  device does not support this required resolution.'
- '9001: FACE_TOO_CLOSE: The Face was too close during selfie capture'
- '9002: FACE_NOT_FOUND: The Face was not found during selfie capture'
- '9003: FACE_TOO_SMALL: The Face was too small during selfie capture'
- '9004: FACE_ANGLE_TOO_LARGE: The Face angle was too large during selfie capture'
- '9005: FACE_CROPPED: The Face was cropped during selfie capture'
- '9006: FAILED_TO_READ_IMAGE: The selfie image wasn''t able to be read'
- '9012: TOO_MANY_FACES: Too many faces detected during selfie capture'
- '1000: FAIL_TO_INITIALIZE: SDK credential error'
- '1001: IMAGE_SMALLER_THAN_MIN_SIZE: Image is too small'
- '1002: CORRUPT_IMAGE: Image is unreadable'
- '1003: FILE_TYPE_INVALID: Invalid image file type'
- '1004: PDF_FILE_SIZE_OVER_4_MB: PDF File is over 4MB'
- '1005: AUTO_CAPTURE_NOT_SUPPORT: Auto Capture is not supported on this device'
- '1006: FAIL_TO_AUTO_CAPTURE: Error during auto capture'
- '1007: FAIL_TO_MANUAL_CAPTURE: Error during manual capture'
- '1008: MISSING_TOKEN: Missing SDK token'
- '1009: INVALID_TOKEN: Token is expired or unknown'
- '1010: NO_MORE_TOKEN_ATTEMPTS: Token has been used already'
- '1011: INVALID_ORIGIN_URL: Liveness and Classification is from a different origin
  domain name from the ones they specified in the request body when calling the get
  sdk token endpoint.'
- '1012: MISSING_IMAGE: Missing image for liveness or classification'
- '1013: FAIL_TO_GET_LIVENESS_DATA: Error retrieving liveness data'
- '1014: FAIL_TO_GET_CLASSIFICATION_DATA: Error retrieving classification data'
- '1015: FAIL_TO_CAPTURE: Fail to capture image'
- '1016: FAIL_TO_PROCESS: Fail to process captured image.'
- '1017: AUTO_CAPTURE_REPEAT_ERROR: Auto capture has previously failed and was called
  again'
- '1018: AUTO_CAPTURE_SEQUENCE_BREAK_ERROR: Camera capture failed due to unexpected
  sequence break'
- '429 Too Many Requests: Throttle API calls'
- '401 Unauthorized: Check OAuth token validity'
- '400 Bad Request: Review request parameters'
- '401 Unauthorized: The authorization header isn''t set properly. It should be a
  Base64 - encrypted Basic Authentication header.'
- '401 Unauthorized: Invalid credentials or token.'
- '404 Not Found: Endpoint does not exist.'
- 'REQUEST_LIMIT_EXCEEDED: Please reduce the frequency of API calls.'
- '401 Unauthorized: Verify OAuth credentials.'
- '1001: Business Name is a required input for a comprehensive entity'
- '1001: Business Registration Number or Tax ID Number is a required input for a comprehensive
  entity'
- '1001: Jurisdiction is a required input for a comprehensive entity'
- HTTP Errors
- Trulioo Service/DataSource Level Errors
- Validation Code Errors
- Record Level Errors
- Get Transaction Record Errors
- '400 BadRequest: Your request could not be processed. Ensure that the Get Country
  Codes is configured properly with your account.'
- '400 BadRequest: Your request could not be processed. Make sure that you are sending
  the correct ‘TransactionRecordID’ and that the verification request was sent from
  this same account.'
- '400 BadRequest: Your request could not be processed. Try the Get Country Codes
  request to see the countries you are configured for.'
- '401 Unauthorized: The API credentials provided are unauthorized or you are using
  an account that does not have API permissions.'
- '415 UnsupportedMediaType: You requested for a media type that we do not support.'
- '500 Error: An error happened on the server without a specific message.'
- '409 Error: The API requests have gone over the limit set for your account.'
- '403 Error: The API key provided is invalid or expired.'
- '404 Error: Cannot find the experience transaction for a given experience ID.'
- 3008 Cannot validate address
- '1001: Missing required field: FirstSurName'
- '1005: Missing Consent'
- '1000 Provider Error: There was an error connecting to the source'
- '1001 Missing Required Field: Error 1001 for the Credit Agency'
- '1002 Datasource Unavailable: The source did not respond'
- '1003 Datasource Error: The source returned an error'
- '1004 State not supported: Relevant to datasource AU (Australian) Driver license
  only'
- '1005 Missing consent: Consent not sent from the source'
- '1008 Invalid Field Format: The fields in a Verify request need to be of a specific
  data type'
- '1010 Request Timed Out: This error occurs when the transaction times out'
- '1015 Non Blocking Field format invalid: <details regarding which field is at issue>'
- '2000 Unrecognized Error: This is a catchall for other errors'
- 4003 - Mobile Carrier Not Supported
- 3000 - <Address Verification Level>
- 3001 - State / Province / County changed, please check Address validation fields
  for additional information
- 3002 - One or more of City, Municipality, Suburb have been changed please check
  Address Validation fields for additional information
- 3003 - One or more of Unit Number, Building Number, or Street have been changed
  please check Address Validation fields for additional
- 3004 - Postal Code changed, please check Address Validation fields for additional
  information
- 3005 - One or more of Unit Number, Building Number, or Street are either invalid
  or missing
- 3008 - Cannot validate address
- 3100 - Blurry Image
- 3101 - Glare Image
- 4001 - Missing Required Field Mobile Number
- 4002 - Invalid Mobile Number
- '1002: Datasource Unavailable - The source did not respond'
- '1006 Unrecognized Field Name: One or more field names used in your request were
  not recognized. Possible reasons are that you are using fields from a different
  country than the one specified in your request, or that there is a simple spelling
  mistake in the body of the request. Use Get Fields to see which field names are
  available for a specific country and compare with the request you sent to Trulioo.'
- '1007 Consent Datasource Not Recognized: If a datasource requires consent, but the
  provided consent string is in any way different than what''s expected, then an Error
  1007 is returned. Use Get Consents to get a list of consents needed for a country,
  and double-check for typos in your request.'
- '1008 Invalid Field Format: The fields in a ‘Verify’ request need to be of a specific
  data type. For example, ‘FirstGivenName’ must be a UTF-8 string and DayOfBirth must
  be an Integer.'
- '1011 Duplicate Field received: There may have been a copy paste error or a bug
  that generated an input field twice. Simply remove the second value and resend the
  request.'
- '2000 Unrecognized Error: This is a catchall for other errors. Please contact Trulioo
  support for a resolution.'
- '2005: You are not authorized to view this transaction'
- '2004: Transaction Not Available'
- '2005 Authentication Error: The account that ran the original transaction is not
  the same as the account running this request. Ensure you are using the same credentials
  as the account that ran the verify request you are looking for.'
- code: 2004
  message: Transaction Not Available
  additional_information: Trulioo was not able to find a transaction for the ID you
    provided. Ensure the ID is a TransactionRecordID (as opposed to TransactionID)
    and is correct.
- code: 2005
  message: Authentication Error
  additional_information: The account that ran the original transaction is not the
    same as the account running this request. Ensure you are using the same credentials
    as the account that ran the verify request you are looking for.
- '4000: Flow not found'
- '4001: Flow theme not found'
- '4002: Node not found'
- '4003: Flow is empty'
- '4006: Missing data for required element'
- '4007: Submitted data is malformed'
- '4008: Failed validation for submitted data'
- '4009: Service execution failed'
- '4013: Flow already finished'
- '4014: Invalid submit data'
- '4050: Invalid credentials'
- '4100: Client not found'
- '4101: Client has no flow with given ID'
- '4103: Illegal back action'
- '4109: EndClient marked as abandoned'
- '4110: Could not retrieve full end client data'
- '4200: Service not configured'
- '4201: Service not configured for country'
- '5300: Invalid Twilio code'
- '5301: Failed to send SMS to phone number'
- '5302: Twilio internal error'
- '6504: Service has timed out'
- '400: BadRequest -Account not configured for this product'
- '400: BadRequest -Configuration name not valid'
- '400: BadRequest -Unable to find account'
- '400: BadRequest -Transaction not available'
- '400: BadRequest -Account not configured for this country.'
- '401: Unauthorized'
- '413: Request Entity Too Large'
- '415: UnsupportedMediaType'
- '500: Error'
- '500: Configuration name not valid'
- '409: Error'
- '403: Error'
- '404: Error'
- '1000: Provider Error - There was an error connecting to the source'
- '1001: Missing Required Field'
- '1002: Datasource Unavailable'
- '1003: Datasource Error'
- '1004: State not supported (AU Driver license)'
- '1005: Missing consent'
- '1006: Unrecognized Field Name'
- '1008: Invalid Field Format'
- '1009: Unrecognized Field group'
- '1010: Request Timed Out'
- '1011: Duplicate Field received'
- '1015: Non Blocking Invalid Field Format'
- '2000: Unrecognized Error'
- '3000: Address Corrected'
- '3005: Missing Address Info'
- '3009: Address validation is not available'
- '4001: Missing Required Field: MobileNumber'
- '4002: Invalid Mobile Number'
- '4003: Mobile Carrier Not Supported'
- '1007: Consent Datasource Not Recognized'
- '404: Wrong flow ID or x-hf-session UUID'
- '500: Internal server error (which might be caused by a temporary issue)'
- 500 Internal server error (which might be caused by a temporary issue)
- 400 Client provided invalid data
- 400 Client provided invalid data or invalid filetype
- 413 File size too large
- 500 Internal server error
- 400 Can not go back in the current flow execution
- 404 Wrong flow ID or x-hf-session UUID
- '500 Internal server error: Internal API error code'
- 400 Token is expired
- '400 Bad Request: View Additional Properties'
- '400: Bad Request'
- '500: Internal server error'
- 401 Invalid token provided
- '400: Client provided invalid data'
- '401: Invalid token provided'
- 404 Wrong flow ID
- '401 Unauthorized: Check your credentials.'
- '400 Bad Request: Verify the request parameters.'
- 400 Bad Request
- '400 Bad Request: Check the request payload and parameters.'
- '401 Unauthorized: Verify the authentication details.'
- '429 Too Many Requests: Reduce the request rate.'
- '500 Internal Server Error: The server encountered an error. Please email us at
  support@trulioo.com.'
- '401 Unauthorized: Jwt is expired'
- '403 Forbidden: Access Denied'
- '400 Bad Request: Make sure your request is formatted correctly.'
- '500 Internal Server Error: The server encountered an error.'
- '404 Not Found: Check if the transactionId is correct.'
- '422 UnProcessableEntity: Front image missing. Make sure the front image is available.'
- '422 UnProcessableEntity: Back image missing. Make sure the back image is available.'
- '422 UnProcessableEntity: Face image missing. Make sure the selfie image is available.'
- '422 UnProcessableEntity: Document not fully in frame.'
- '422 UnProcessableEntity: Face not fully in frame.'
- '503 Service Unavailable Error: Service is currently not available. Please try again.'
- '400: Your request could not be processed, there should be more details in the response.'
- '401: The token you provided is not valid or you are using an account that is not
  enabled.'
- '408: The request took longer to process than we waited.'
- '415: You asked for a media type that we do not support. You should request application/json
  in the Content-Type header.'
- '500: An error happened on the server without a specific message.'
- '401 Unauthorized: Recheck OAuth credentials.'
- '403 Forbidden: Ensure permissions are correctly set.'
- '401 Unauthorized: Check API key or token validity'
- '404 Not Found: Ensure the endpoint exists'
- '401 Unauthorized: Check API key and permissions.'
- '429 Too Many Requests: Reduce request frequency.'
- '400 Bad Request: Ensure all required fields are provided.'
- '401: The user name and password you provided is not valid or you are using an account
  not configured to be an API user.'
- 401 The user name and password you provided is not valid or you are using an account
  not configured to be an API user.
- 408 The request took longer to process than we waited.
- 415 You asked for a media type that we do not support. You should request application/json
  in the Content-Type header.
- 500 An error happened on the server without a specific message.
- 400 Your request could not be processed, there should be more details in the response.
- '401 Unauthorized: Check client credentials.'
- 401 The token you provided is not valid or you are using an account that is not
  enabled.
- '401 Unauthorized: Check your API key and client secret.'
- 'INVALID_REQUEST: Check the request parameters'
- 'UNAUTHORIZED: Check API key or authentication method'
- '401 Unauthorized: Check your authentication settings'
- '404 Not Found: Verify the endpoint path'
- '401 Unauthorized: Check your API keys and tokens'
- '500 Internal Server Error: Retry the request later'
- '415: You asked for a media type that we do not support.'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Verify your token and permissions.'
- '404 Not Found: Ensure the endpoint is correct.'
- '401 Unauthorized: Check your API key or OAuth token'
- '404 Not Found: Verify the endpoint URL'
- '401 Unauthorized: Verify client credentials'
- '429 Too Many Requests: Throttle requests'
- 'INVALID_CREDENTIALS: Check your API key and secret'
- 'NOT_FOUND: The requested resource does not exist'
- 'SERVER_ERROR: Try again later'
- '401 Unauthorized: Invalid credentials.'
- '400 Bad Request: Invalid request parameters.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - x-trulioo-signature
  - Token
  - Client
  - OAuth2
  - AccessToken
  - AuthToken
  - OAuthClient
  - Credential
client:
  base_url: https://api.trulioo.com
  auth:
    type: oauth2
source_metadata: null
