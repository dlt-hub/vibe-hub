resources:
- name: ShopifyApp.installationLink
  endpoint:
    path: /api-reference/shopifyappinstallationlink
    method: POST
    data_selector: installationLink
    params: {}
- name: integratedShopifyStore
  endpoint:
    path: /api-reference/integratedShopifyStore
    method: POST
    data_selector: integratedShopifyStore
    params: {}
- name: requestShopifyProductByURL
  endpoint:
    path: /api-reference/requestshopifyproductbyurl
    method: POST
    data_selector: requestShopifyProductByURL
    params: {}
- name: requestStoreByURL
  endpoint:
    path: /api-reference/requeststorebyurl
    method: POST
    data_selector: requestStoreByURL
    params: {}
- name: checkout_intents
  endpoint:
    path: /api/v1/checkout-intents
    method: POST
    data_selector: response
    params: {}
- name: checkout_intent
  endpoint:
    path: /api/v1/checkout-intents
    method: POST
    data_selector: data
- name: health
  endpoint:
    path: /health
    method: GET
    data_selector: message, status
- name: checkout_intent
  endpoint:
    path: /api/v1/checkout-intents
    method: POST
    data_selector: response
    params: {}
- name: checkout_intent_status
  endpoint:
    path: /api/v1/checkout-intents/{id}
    method: GET
    data_selector: response
    params: {}
- name: confirm_checkout_intent
  endpoint:
    path: /api/v1/checkout-intents/{id}/confirm
    method: POST
    data_selector: response
    params: {}
- name: health
  endpoint:
    path: /health
    method: GET
    data_selector: message
    params: {}
- name: shopifyApp
  endpoint:
    path: /api-reference/shopifyapp
    method: GET
    data_selector: ShopifyApp
- name: checkout_intent
  endpoint:
    path: /api/v1/checkout-intents
    method: POST
    data_selector: state
- name: checkout_intent_status
  endpoint:
    path: /api/v1/checkout-intents/{id}
    method: GET
    data_selector: state
- name: confirm_checkout_intent
  endpoint:
    path: /api/v1/checkout-intents/{id}/confirm
    method: POST
    data_selector: state
- name: health
  endpoint:
    path: /api-v2-experimental/api-reference/health
    method: GET
- name: health
  endpoint:
    path: /health
    method: GET
    data_selector: message
- name: shopify_app_installation_link
  endpoint:
    path: /api-v2/shopifyAppInstallationLink
    method: GET
    data_selector: url
    params:
      storeCanonicalDomain: required
- name: shopifyApp
  endpoint:
    path: /api-reference/shopifyapp
    method: GET
- name: integratedShopifyStore
  endpoint:
    path: /api-reference/integratedShopifyStore
    method: GET
    data_selector: IntegratedShopifyStore
    params:
      canonicalDomain: String!
- name: health
  endpoint:
    path: /api-v2-experimental/api-reference/health
    method: GET
- name: productsByIDs
  endpoint:
    path: /api-v2/productsByIDs
    method: GET
    data_selector: ShopifyProduct
- name: collectionsConnection
  endpoint:
    path: /api-v2/collectionsConnection
    method: GET
    data_selector: ShopifyCollectionsConnection
- name: productsConnection
  endpoint:
    path: /api-v2/productsConnection
    method: GET
    data_selector: ProductsCollectionsConnection
- name: shopify_merchant_commission
  endpoint:
    path: /api-v2-experimental/api-reference/health
    method: GET
    data_selector: ''
- name: shopify_app_installation_link
  endpoint:
    path: /api-v2-experimental/api-reference/health
    method: GET
    data_selector: fields
    params:
      storeCanonicalDomain: required
- name: integratedShopifyStore
  endpoint:
    path: /api-reference/integratedShopifyStore
    method: POST
    data_selector: integratedShopifyStore
- name: ShopifyProduct
  endpoint:
    path: /api-v2-experimental/api-reference/health
    method: GET
    data_selector: records
- name: ShopifyCollection
  endpoint:
    path: /api-v2-experimental/api-reference/health
    method: GET
    data_selector: edges
- name: productsByIDs
  endpoint:
    path: /api-v2-experimental/productsByIDs
    method: GET
    data_selector: ShopifyProduct
- name: collectionsConnection
  endpoint:
    path: /api-v2-experimental/collectionsConnection
    method: GET
    data_selector: ShopifyCollectionsConnection
- name: productsConnection
  endpoint:
    path: /api-v2-experimental/productsConnection
    method: GET
    data_selector: ProductsCollectionsConnection
- name: ShopifyProduct
  endpoint:
    path: /api-v2-experimental/api-reference/health
    method: GET
    data_selector: edges
- name: shopify_merchant_commission
  endpoint:
    path: /api-v2-experimental/shopifyMerchantCommission
    method: GET
    data_selector: currentRatePercent
    params: {}
- name: shopify_product
  endpoint:
    path: /api-v2/shopify_product
    method: GET
    data_selector: products
- name: requestShopifyProductByURL
  endpoint:
    path: /api-v2-experimental/api-reference/requestShopifyProductByURL
    method: GET
    data_selector: data
    params: {}
- name: ShopifyCollection
  endpoint:
    path: /api-v2-experimental/api-reference/health
    method: GET
    data_selector: edges
- name: shopify_products
  endpoint:
    path: /api-v2-experimental/api-reference/health
    method: GET
    data_selector: edges
    params: {}
- name: productByID
  endpoint:
    path: /api-v2-experimental/api-reference/health
    method: GET
    data_selector: data.amazonItem1
    params: {}
- name: amazon_product
  endpoint:
    path: /api-v2-experimental/api-reference/amazonproduct
    method: GET
    data_selector: records
    params: {}
- name: requestShopifyProductByURL
  endpoint:
    path: /api-v2-experimental/requestShopifyProductByURL
    method: GET
    data_selector: data
    params: {}
- name: productByID
  endpoint:
    path: /api-v2-experimental/api-reference/health
    method: GET
    data_selector: data.productByID
    params: {}
- name: AmazonProduct
  endpoint:
    path: /api-v2-experimental/api-reference/health
    method: GET
- name: AmazonProduct
  endpoint:
    path: /api-reference/amazonproduct
    method: GET
    data_selector: records
- name: ShopifyProduct
  endpoint:
    path: /api-reference/shopifyproduct
    method: GET
    data_selector: records
- name: AmazonVariant
  endpoint:
    path: /api-reference/amazonvariant
    method: GET
    data_selector: records
- name: ShopifyVariant
  endpoint:
    path: /api-reference/shopifyvariant
    method: GET
    data_selector: records
- name: AmazonImage
  endpoint:
    path: /api-reference/amazonimage
    method: GET
    data_selector: records
- name: ShopifyImage
  endpoint:
    path: /api-reference/shopifyimage
    method: GET
    data_selector: records
- name: productByID
  endpoint:
    path: /api-v2-experimental/api-reference/productbyid
    method: GET
    data_selector: data
    params:
      id: Product ID
      marketplace: Marketplace enum
- name: productsByIds
  endpoint:
    path: /api-v2-experimental/api-reference/productsbyids
    method: GET
    data_selector: data
    params: {}
- name: productByID
  endpoint:
    path: /api-v2-experimental/api-reference/productbyid
    method: GET
    data_selector: product
    params: {}
- name: productsByIds
  endpoint:
    path: /api-v2-experimental/api-reference/productsbyids
    method: GET
    data_selector: products
    params: {}
- name: Product
  endpoint:
    path: /api-v2/products
    method: GET
    data_selector: products
- name: product
  endpoint:
    path: /api-v2-experimental/api-reference/health
    method: GET
    data_selector: fields
    params: {}
- name: productsByDomainV2
  endpoint:
    path: /api-v2-experimental/api-reference/productsByDomainV2
    method: GET
    data_selector: data.productsByDomainV2
    params: {}
- name: productsByDomainV2
  endpoint:
    path: /api-v2/productsByDomainV2
    method: GET
    data_selector: data.productsByDomainV2
    params: {}
- name: productsByIds
  endpoint:
    path: /api-v2-experimental/api-reference/productsByIds
    method: GET
    data_selector: data.productsByIds.products
    params:
      input: '[ProductByIDInput!]'
- name: productsByIds
  endpoint:
    path: /api-v2-experimental/api-reference/productsByIds
    method: GET
    data_selector: products
    params: {}
- name: requestAmazonProductByURL
  endpoint:
    path: /api-v2-experimental/api-reference/requestAmazonProductByURL
    method: GET
    data_selector: productId
    params: {}
- name: request_store_by_url
  endpoint:
    path: /api-v2-experimental/api-reference/requestStoreByURL
    method: POST
    data_selector: data.requestStoreByURL
    params: {}
- name: requestAmazonProductByURL
  endpoint:
    path: /api-v2-experimental/api-reference/requestAmazonProductByURL
    method: GET
    data_selector: data
    params: {}
- name: requestStoreByURL
  endpoint:
    path: /api-v2-experimental/api-reference/requestStoreByURL
    method: POST
    data_selector: data.requestStoreByURL
    params: {}
notes:
- Performance metrics in this SLA reflect mean values across all developers. Actual
  performance may vary depending on the specific stores you integrate with.
- The installationLink property can take either one of a store’s canonical or storefront
  domains.
- Orders can only be shipped to U.S. addresses. International shipping is not yet
  supported.
- Represents products from the Amazon marketplace.
- This query supports retrieving up to 25 products per request.
- The Rye Shopify app currently only works in our Production environment.
- Testing your integration with the Shopify app must be done from your Production
  account.
- Rye is free to download and install, and there are no monthly subscription fees
  ($0).
- Shopify Payments are not available in all regions.
- The Rye Shopify app requires that Shopify Payments are enabled on the store it’s
  installed.
errors:
- 'product_out_of_stock: The item is no longer available.'
- The provided `url` input ("www.google.com") is not a valid Shopify product URL.
- Product data not found - if the URL is valid, then the store may not be supported.
  See docs for more details
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Invalid URL: The provided `url` input ("www.google.com") is not a valid Amazon
  product URL.'
- 'PRODUCT_NOT_FOUND_ERROR: Product data not found - if the URL is valid, then the
  store may not be supported.'
- 'Invalid URL: The provided `url` input is not a valid Amazon product URL.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://staging.api.rye.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
source_metadata: null
