resources:
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: User Base
  endpoint:
    path: /reference/getusers
    method: GET
- name: device
  endpoint:
    path: /reference/getdevices
    method: GET
- name: account
  endpoint:
    path: /reference/getaccounts
    method: GET
- name: device
  endpoint:
    path: /reference/getdevices
    method: GET
- name: device_io
  endpoint:
    path: /reference/getdigitalinputs-1
    method: GET
- name: device_channel_snapshot
  endpoint:
    path: /reference/getdevicechannelsnapshot-1
    method: GET
- name: add_device_status
  endpoint:
    path: /reference/polladddevicestatus-1
    method: GET
- name: device_firmware
  endpoint:
    path: /reference/getdevicefirmwarestatus-1
    method: GET
- name: device_channel_camera
  endpoint:
    path: /reference/addchannelcamera-1
    method: POST
- name: device_info
  endpoint:
    path: /reference/getdeviceinfo
    method: GET
- name: device_maintenance
  endpoint:
    path: /reference/performmaintenanceoperation-1
    method: PUT
- name: device_jobs
  endpoint:
    path: /reference/getdevicejobs-1
    method: GET
- name: device_channel
  endpoint:
    path: /reference/getdevicechannels-1
    method: GET
- name: device_status
  endpoint:
    path: /reference/getdevicestatus-1
    method: GET
- name: device_connection_details
  endpoint:
    path: /reference/getconnectiondetails
    method: GET
- name: device_connection_credentials
  endpoint:
    path: /reference/getconnectioncredentials
    method: GET
- name: device_type_credentials
  endpoint:
    path: /reference/getdevicetypedefaultcredentials
    method: GET
- name: device
  endpoint:
    path: /users/self/sessions
    method: POST
- name: device
  endpoint:
    path: /reference/getdevices
    method: GET
- name: account
  endpoint:
    path: /reference/getaccounts
    method: GET
- name: devices
  endpoint:
    path: /rest/v2.0/devices
    method: GET
- name: device_io
  endpoint:
    path: /rest/v2.0/device_io
    method: GET
- name: device_channel_snapshot
  endpoint:
    path: /rest/v2.0/device_channel_snapshot
    method: GET
- name: add_device_status
  endpoint:
    path: /rest/v2.0/add_device_status
    method: GET
- name: device_firmware
  endpoint:
    path: /rest/v2.0/device_firmware
    method: GET
- name: device_info
  endpoint:
    path: /rest/v2.0/device_info
    method: GET
- name: device_status
  endpoint:
    path: /rest/v2.0/device_status
    method: GET
- name: device_jobs
  endpoint:
    path: /rest/v2.0/device_jobs
    method: GET
- name: account
  endpoint:
    path: /rest/v2.0/accounts
    method: GET
- name: cameras
  endpoint:
    path: /cameras
    method: GET
    data_selector: Camera
- name: session
  endpoint:
    path: /rest/v2.0/users/self/sessions
    method: POST
- name: camera
  endpoint:
    path: /reference/getcamera-1
    method: GET
- name: cameras
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: users
  endpoint:
    path: /users/self/tokens/current
    method: DELETE
- name: camera
  endpoint:
    path: /cameras/{cameraId}
    method: GET
    data_selector: response
- name: cameras
  endpoint:
    path: /rest/v2.4.1/cameras
    method: GET
    data_selector: Camera
- name: camera
  endpoint:
    path: /cameras/{cameraId}
    method: PATCH
- name: camera
  endpoint:
    path: /reference/deletecamera-1
    method: DELETE
- name: camera
  endpoint:
    path: /cameras/{cameraId}
    method: DELETE
- name: camera
  endpoint:
    path: /reference/getcamera-1
    method: GET
- name: cameras
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: camera_status
  endpoint:
    path: /reference/getcamerastatus-1
    method: GET
- name: camera
  endpoint:
    path: /cameras/{cameraId}
    method: GET
    data_selector: camera_info
- name: current_sim_card
  endpoint:
    path: /cameras/{cameraId}/sims/current
    method: GET
    data_selector: ''
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Camera Status
  endpoint:
    path: /reference/getcamerastatus-1
    method: GET
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: camera
  endpoint:
    path: /cameras/{cameraId}
    method: PATCH
- name: camera_sim
  endpoint:
    path: /cameras/{cameraId}/sims/current
    method: PUT
- name: camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: camera_sim
  endpoint:
    path: /reference/getcurrentsim
    method: GET
- name: event
  endpoint:
    path: /reference/getevents
    method: GET
- name: user
  endpoint:
    path: /reference/getusers
    method: GET
- name: set_sim_card_details
  endpoint:
    path: /cameras/{cameraId}/sims/{imsi}
    method: PUT
- name: Camera Status
  endpoint:
    path: /reference/getcamerastatus-1
    method: GET
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: current_sim_card
  endpoint:
    path: /cameras/{cameraId}/sims/current
    method: GET
- name: camera_status
  endpoint:
    path: /cameras/{cameraId}/status
    method: GET
    data_selector: status
    params: {}
- name: camera_status
  endpoint:
    path: /reference/getallcamerasstatus-1
    method: GET
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Camera Status
  endpoint:
    path: /reference/getcamerastatus-1
    method: GET
- name: Camera Mode
  endpoint:
    path: /reference/getcameramode
    method: GET
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: User
  endpoint:
    path: /reference/getusers
    method: GET
- name: camera_status
  endpoint:
    path: /cameras/all/status
    method: GET
    data_selector: status
    params: {}
- name: current_sim
  endpoint:
    path: /cameras/{cameraId}/sims/current
    method: PUT
- name: camera_mode
  endpoint:
    path: /cameras/{cameraId}/mode
    method: PATCH
- name: set_sim_card_details
  endpoint:
    path: /cameras/{cameraId}/sims/{imsi}
    method: PUT
- name: camera_mode
  endpoint:
    path: /cameras/{cameraId}/mode
    method: GET
- name: camera_mode
  endpoint:
    path: /reference/getcameramodes
    method: GET
- name: cameras_all_mode
  endpoint:
    path: /cameras/all/mode
    method: GET
- name: camera_status
  endpoint:
    path: /cameras/{cameraId}/status
    method: GET
    data_selector: status
    params: {}
- name: camera_status
  endpoint:
    path: /reference/getallcamerasstatus-1
    method: GET
- name: recordings
  endpoint:
    path: /cameras/{cameraId}/recordings
    method: GET
    data_selector: recordings
    params:
      sortByRecordingIdOrder: asc
      minTimestamp: ''
      maxTimestamp: ''
      minRecordingId: ''
      maxRecordingId: ''
- name: camera_status
  endpoint:
    path: /all/status
    method: GET
    data_selector: status
    params: {}
- name: recordings
  endpoint:
    path: /cameras/all/recordings
    method: GET
    data_selector: recordings
- name: update_camera_mode
  endpoint:
    path: /cameras/{cameraId}/mode
    method: PATCH
- name: recording
  endpoint:
    path: /reference/getsinglerecording-1
    method: GET
- name: camera_mode
  endpoint:
    path: /reference/getcameramode
    method: GET
- name: recording
  endpoint:
    path: /cameras/{cameraId}/recordings/{recordingId}
    method: GET
    data_selector: response
    params: {}
- name: camera_mode
  endpoint:
    path: /cameras/{cameraId}/mode
    method: GET
    data_selector: mode
    params: {}
- name: sequence
  endpoint:
    path: /reference/getsequences-1
    method: GET
    data_selector: sequences
- name: camera_mode
  endpoint:
    path: /reference/getcameramodes
    method: GET
- name: sequences
  endpoint:
    path: /sequences
    method: GET
    data_selector: records
    params: {}
- name: camera_mode
  endpoint:
    path: /cameras/all/mode
    method: GET
    data_selector: CameraMode
- name: sequence
  endpoint:
    path: /sequence
    method: POST
    data_selector: null
    params: {}
- name: sequences
  endpoint:
    path: /reference/getsequences
    method: GET
- name: account
  endpoint:
    path: /sequences/{sequenceId}
    method: PATCH
- name: sequences
  endpoint:
    path: /reference/getsequences
    method: GET
- name: recordings
  endpoint:
    path: /cameras/all/recordings
    method: GET
    data_selector: recordings
- name: delete_sequence
  endpoint:
    path: /sequences/{sequenceId}
    method: DELETE
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Camera Status
  endpoint:
    path: /reference/getcamerastatus-1
    method: GET
- name: recording
  endpoint:
    path: /cameras/{cameraId}/recordings/{recordingId}
    method: GET
    data_selector: recording
    params: {}
- name: camera_addition_status
  endpoint:
    path: /cameras/{cameraId}/additionStatus/poll
    method: GET
    data_selector: status
    params: {}
- name: camera_addition_status
  endpoint:
    path: /reference/getalladdcamerastatus-1
    method: GET
    data_selector: records
- name: sequences
  endpoint:
    path: /sequences
    method: GET
    data_selector: sequences
    params: {}
- name: addition_status
  endpoint:
    path: /cameras/all/additionStatus
    method: GET
    data_selector: status
    params: {}
- name: sequence
  endpoint:
    path: /sequence
    method: POST
- name: camera_streams
  endpoint:
    path: /cameras/{cameraId}/streams
    method: GET
- name: camera_device_info
  endpoint:
    path: /reference/getdeviceinfo-2
    method: GET
- name: devices
  endpoint:
    path: /devices
    method: GET
- name: device_info
  endpoint:
    path: /getdeviceinfo
    method: GET
- name: sequences
  endpoint:
    path: /sequences/{sequenceId}
    method: PATCH
- name: device_info
  endpoint:
    path: /cameras/{cameraId}/deviceInfo
    method: GET
    data_selector: deviceInfo
    params: {}
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: User
  endpoint:
    path: /reference/getusers
    method: GET
- name: delete_sequence
  endpoint:
    path: /sequences/{sequenceId}
    method: DELETE
- name: camera_video_settings
  endpoint:
    path: /cameras/{cameraId}/video/settings
    method: GET
    data_selector: video_settings
- name: camera_video_settings
  endpoint:
    path: /cameras/{cameraId}/video/settings
    method: PATCH
- name: camera_addition_status
  endpoint:
    path: /cameras/{cameraId}/additionStatus/poll
    method: GET
    data_selector: status
- name: addition_status
  endpoint:
    path: /cameras/all/additionStatus
    method: GET
    data_selector: status
    params: {}
- name: camera_video_settings
  endpoint:
    path: /cameras/{cameraId}/video/settings
    method: DELETE
    data_selector: null
    params: {}
- name: camera_footage_settings
  endpoint:
    path: /getfootagesettings
    method: GET
    data_selector: footage_settings
- name: camera_streams
  endpoint:
    path: /cameras/{cameraId}/streams
    method: GET
    data_selector: streams
- name: camera_footage_settings
  endpoint:
    path: /cameras/{cameraId}/footage/settings
    method: GET
    data_selector: settings
- name: device_info
  endpoint:
    path: /cameras/{cameraId}/deviceInfo
    method: GET
    data_selector: manufacturer, model
- name: video_settings
  endpoint:
    path: /cameras/{cameraId}/video/settings
    method: GET
    data_selector: settings
    params: {}
- name: footage_capabilities
  endpoint:
    path: /cameras/{cameraId}/footage/capabilities
    method: GET
    data_selector: response
- name: camera_video_settings
  endpoint:
    path: /cameras/{cameraId}/video/settings
    method: PATCH
    data_selector: null
    params: {}
- name: cameras_location
  endpoint:
    path: /cameras/all/location
    method: GET
    data_selector: geo_location
    params: {}
- name: camera_video_settings
  endpoint:
    path: /cameras/{cameraId}/video/settings
    method: DELETE
- name: camera_location
  endpoint:
    path: /cameras/{cameraId}/location
    method: GET
    data_selector: location
    params: {}
- name: camera_footage_settings
  endpoint:
    path: /cameras/{cameraId}/footage/settings
    method: GET
- name: Camera Location
  endpoint:
    path: /reference/getaccountcameralocations-1
    method: GET
- name: Update Camera Location
  endpoint:
    path: /reference/updatecameratimezone-1
    method: PATCH
- name: camera_location
  endpoint:
    path: /cameras/{cameraId}/location
    method: PATCH
- name: update_camera_footage_settings
  endpoint:
    path: /cameras/{cameraId}/footage/settings
    method: PATCH
- name: firmware_status
  endpoint:
    path: /cameras/{cameraId}/firmware
    method: GET
    data_selector: FirmwareStatus
- name: Camera Firmware
  endpoint:
    path: /reference/getcamerafirmwarestatus-2
    method: GET
    data_selector: firmwareStatus
- name: Start Firmware Upgrade
  endpoint:
    path: /reference/upgradefirmwareofcamera-2
    method: POST
    data_selector: upgradeStatus
- name: camera_footage_capabilities
  endpoint:
    path: /cameras/{cameraId}/footage/capabilities
    method: GET
- name: firmware_upgrade
  endpoint:
    path: /cameras/{cameraId}/firmware
    method: POST
- name: camera_location
  endpoint:
    path: /cameras/all/location
    method: GET
    data_selector: locations
- name: camera_firmware_status
  endpoint:
    path: /reference/getallcamerasfirmwarestatus-2
    method: GET
- name: firmware_statuses
  endpoint:
    path: /cameras/all/firmware
    method: GET
    data_selector: FirmwareStatus
- name: camera_location
  endpoint:
    path: /cameras/{cameraId}/location
    method: GET
    data_selector: location
    params: {}
- name: camera_snapshot
  endpoint:
    path: /cameras/{cameraId}/snapshot
    method: GET
    data_selector: snapshot
    params: {}
- name: microphoneEnable
  endpoint:
    path: /reference/getmicrophoneenabled-1
    method: GET
- name: microphone_attribute
  endpoint:
    path: /cameras/{cameraId}/microphone
    method: GET
    data_selector: microphoneEnable
- name: camera_location
  endpoint:
    path: /cameras/{cameraId}/location
    method: PATCH
- name: cameras
  endpoint:
    path: /cameras/{cameraId}/microphone
    method: PUT
- name: firmware_status
  endpoint:
    path: /cameras/{cameraId}/firmware
    method: GET
    data_selector: FirmwareStatus
- name: microphone
  endpoint:
    path: /cameras/all/microphone
    method: GET
    data_selector: Microphone
    params: {}
- name: firmware_upgrade
  endpoint:
    path: /cameras/{cameraId}/firmware
    method: POST
- name: camera_ptz
  endpoint:
    path: /cameras/{cameraId}/ptz
    method: POST
- name: firmware_statuses
  endpoint:
    path: /cameras/all/firmware
    method: GET
    data_selector: FirmwareStatus
- name: subscription_rights
  endpoint:
    path: /cameras/{cameraId}/subscriptionRights
    method: GET
- name: microphone_attribute
  endpoint:
    path: /cameras/{cameraId}/microphone
    method: GET
    data_selector: microphoneEnable
- name: subscription_rights
  endpoint:
    path: /cameras/all/subscriptionRights
    method: GET
    data_selector: SubscriptionRights
- name: camera_jobs
  endpoint:
    path: /reference/getcamerajobs-1
    method: GET
- name: camera_jobs
  endpoint:
    path: /cameras/{cameraId}/jobs
    method: GET
- name: camera_microphone
  endpoint:
    path: /cameras/{cameraId}/microphone
    method: PUT
- name: camera_job
  endpoint:
    path: /cameras/{cameraId}/jobs/{jobId}
    method: GET
    data_selector: jobDetails
- name: microphone
  endpoint:
    path: /cameras/all/microphone
    method: GET
    data_selector: Microphone
- name: camera_recording_schedule
  endpoint:
    path: /cameras/{cameraId}/schedules/recording
    method: GET
    data_selector: schedules
- name: camera_ptz
  endpoint:
    path: /cameras/{cameraId}/ptz
    method: POST
- name: subscription_rights
  endpoint:
    path: /cameras/{cameraId}/subscriptionRights
    method: GET
    data_selector: response
    params: {}
- name: subscription_rights
  endpoint:
    path: /reference/getallsubscriptionrights-1
    method: GET
    data_selector: records
- name: Device
  endpoint:
    path: /reference/getdevices
    method: GET
    data_selector: devices
- name: Device IO
  endpoint:
    path: /reference/getdigitalinputs-1
    method: GET
    data_selector: digitalInputs
- name: Device Channel Snapshot
  endpoint:
    path: /reference/getdevicechannelsnapshot-1
    method: GET
    data_selector: channelSnapshot
- name: Add Device Status
  endpoint:
    path: /reference/polladddevicestatus-1
    method: GET
    data_selector: deviceStatus
- name: Device Firmware
  endpoint:
    path: /reference/getdevicefirmwarestatus-1
    method: GET
    data_selector: firmwareStatus
- name: Device Channel Camera
  endpoint:
    path: /reference/addchannelcamera-1
    method: POST
    data_selector: channelCamera
- name: Device Info
  endpoint:
    path: /reference/getdeviceinfo
    method: GET
    data_selector: deviceInfo
- name: Device Maintenance
  endpoint:
    path: /reference/performmaintenanceoperation-1
    method: PUT
    data_selector: maintenanceOperation
- name: Device Jobs
  endpoint:
    path: /reference/getdevicejobs-1
    method: GET
    data_selector: deviceJobs
- name: Device Channel
  endpoint:
    path: /reference/getdevicechannels-1
    method: GET
    data_selector: deviceChannels
- name: Device Status
  endpoint:
    path: /reference/getdevicestatus-1
    method: GET
    data_selector: deviceStatus
- name: Device Connection Details
  endpoint:
    path: /reference/getconnectiondetails
    method: GET
    data_selector: connectionDetails
- name: Device Connection Credentials
  endpoint:
    path: /reference/getconnectioncredentials
    method: GET
    data_selector: connectionCredentials
- name: DeviceType Credentials
  endpoint:
    path: /reference/getdevicetypedefaultcredentials
    method: GET
    data_selector: deviceTypeCredentials
- name: subscription_rights
  endpoint:
    path: /cameras/all/subscriptionRights
    method: GET
    data_selector: SubscriptionRights
- name: save_week_long_camera_recording_schedule
  endpoint:
    path: /cameras/{cameraId}/schedules/recording
    method: PUT
- name: get_week_long_camera_recording_schedule
  endpoint:
    path: /getrecordingschedule
    method: GET
- name: camera_jobs
  endpoint:
    path: /reference/getcamerajobs-1
    method: GET
    data_selector: records
- name: device
  endpoint:
    path: /reference/getdevices
    method: GET
- name: device_info
  endpoint:
    path: /reference/getdeviceinfo
    method: GET
- name: camera_jobs
  endpoint:
    path: /cameras/{cameraId}/jobs
    method: GET
    data_selector: jobs
    params: {}
- name: camera_jobs
  endpoint:
    path: /getcamerajobs-1
    method: GET
- name: camera
  endpoint:
    path: /getcameras-1
    method: GET
- name: mail_notification_schedule
  endpoint:
    path: /users/self/schedules/mailNotifications/cameras/{cameraId}
    method: GET
    data_selector: triggers
    params: {}
- name: camera_job
  endpoint:
    path: /cameras/{cameraId}/jobs/{jobId}
    method: GET
    data_selector: response
- name: mail_notifications
  endpoint:
    path: /users/self/schedules/mailNotifications/cameras/{cameraId}
    method: PUT
    data_selector: null
    params: {}
- name: camera_recording_schedule
  endpoint:
    path: /cameras/{cameraId}/schedules/recording
    method: GET
    data_selector: triggers
    params: {}
- name: push_notifications_schedule
  endpoint:
    path: /users/self/schedules/pushNotifications/cameras/{cameraId}
    method: GET
    data_selector: triggers
    params: {}
- name: push_notification_schedule
  endpoint:
    path: /rest/v2.4/users/self/schedules/pushNotifications/cameras/{cameraId}
    method: PUT
- name: Device
  endpoint:
    path: /reference/getdevices
    method: GET
    data_selector: devices
- name: Device IO
  endpoint:
    path: /reference/getdigitalinputs-1
    method: GET
    data_selector: digitalInputs
- name: Device Channel Snapshot
  endpoint:
    path: /reference/getdevicechannelsnapshot-1
    method: GET
    data_selector: channelSnapshot
- name: Add Device Status
  endpoint:
    path: /reference/polladddevicestatus-1
    method: GET
    data_selector: deviceStatus
- name: Device Firmware
  endpoint:
    path: /reference/getdevicefirmwarestatus-1
    method: GET
    data_selector: firmwareStatus
- name: Device Jobs
  endpoint:
    path: /reference/getdevicejobs-1
    method: GET
    data_selector: deviceJobs
- name: Device Status
  endpoint:
    path: /reference/getdevicestatus-1
    method: GET
    data_selector: deviceStatus
- name: Device Connection Details
  endpoint:
    path: /reference/getconnectiondetails
    method: GET
    data_selector: connectionDetails
- name: Device Connection Credentials
  endpoint:
    path: /reference/getconnectioncredentials
    method: GET
    data_selector: connectionCredentials
- name: DeviceType Credentials
  endpoint:
    path: /reference/getdevicetypedefaultcredentials
    method: GET
    data_selector: defaultCredentials
- name: video_summary
  endpoint:
    path: /cameras/{cameraId}/summary
    method: POST
- name: device
  endpoint:
    path: /reference/getdevices
    method: GET
    data_selector: records
- name: device_info
  endpoint:
    path: /reference/getdeviceinfo
    method: GET
    data_selector: records
- name: video_summary
  endpoint:
    path: /cameras/{cameraId}/summary/{jobId}.mp4
    method: GET
    data_selector: response
    params: {}
- name: mail_notification_schedule
  endpoint:
    path: /users/self/schedules/mailNotifications/cameras/{cameraId}
    method: GET
    data_selector: triggers
    params: {}
- name: device_capabilities
  endpoint:
    path: /cameras/{cameraId}/capabilities
    method: GET
    data_selector: capabilities
- name: schedule
  endpoint:
    path: /reference/getrecordingschedule
    method: GET
- name: mail_notification_schedule
  endpoint:
    path: /reference/getmailnotificationschedule
    method: GET
- name: mail_notification_schedule
  endpoint:
    path: /users/self/schedules/mailNotifications/cameras/{cameraId}
    method: PUT
    data_selector: null
    params: {}
- name: image_modification_capabilities
  endpoint:
    path: /{cameraId}/capabilities/image
    method: GET
    data_selector: options
- name: push_notification_schedule
  endpoint:
    path: /getpushnotificationschedule
    method: GET
- name: push_notification_schedule
  endpoint:
    path: /users/self/schedules/pushNotifications/cameras/{cameraId}
    method: GET
    data_selector: triggers
    params: {}
- name: system_capabilities
  endpoint:
    path: /cameras/{cameraId}/capabilities/system
    method: GET
- name: push_notifications
  endpoint:
    path: /users/self/schedules/pushNotifications/cameras/{cameraId}
    method: PUT
- name: ptz_capabilities
  endpoint:
    path: /cameras/{cameraId}/capabilities/ptz
    method: GET
    data_selector: response
    params: {}
- name: wifi_capabilities
  endpoint:
    path: /cameras/{cameraId}/capabilities/wifi
    method: GET
    data_selector: response
- name: video_summary
  endpoint:
    path: /cameras/{cameraId}/summary/{jobId}.mp4
    method: GET
- name: edge_storage_capabilities
  endpoint:
    path: /cameras/{cameraId}/capabilities/edgeStorage
    method: GET
    data_selector: capabilities
- name: Camera Capabilities
  endpoint:
    path: /reference/getcameracapabilities-1
    method: GET
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: User Base
  endpoint:
    path: /reference/getusers
    method: GET
- name: device_capabilities
  endpoint:
    path: /cameras/{cameraId}/capabilities
    method: GET
    data_selector: capabilities
- name: device_IO_capabilities
  endpoint:
    path: /cameras/{cameraId}/capabilities/deviceIO
    method: GET
    data_selector: capabilities
- name: image_modification_capabilities
  endpoint:
    path: /cameras/{cameraId}/capabilities/image
    method: GET
    data_selector: ''
- name: camera_capabilities
  endpoint:
    path: /cameras/{cameraId}/capabilities/deviceIO/outputs/{outputId}
    method: GET
    data_selector: capabilities
- name: system_capabilities
  endpoint:
    path: /cameras/{cameraId}/capabilities/system
    method: GET
    data_selector: options
- name: digital_input_capabilities
  endpoint:
    path: /cameras/{cameraId}/capabilities/deviceIO/inputs/{inputId}
    method: GET
    data_selector: capabilities
    params: {}
- name: ptz_capabilities
  endpoint:
    path: /cameras/{cameraId}/capabilities/ptz
    method: GET
- name: edge_storage
  endpoint:
    path: /cameras/{cameraId}/edgeStorages
    method: GET
    data_selector: edgeStorages
    params: {}
- name: Camera Capabilities
  endpoint:
    path: /reference/getcameracapabilities-1
    method: GET
- name: Camera Wifi
  endpoint:
    path: /reference/getcamerawifistatus-1
    method: GET
- name: wifi_capabilities
  endpoint:
    path: /cameras/{cameraId}/capabilities/wifi
    method: GET
    data_selector: response
- name: recording_configuration
  endpoint:
    path: /cameras/{cameraId}/edgeStorages/{storageId}/recordingConfiguration
    method: GET
    data_selector: response
    params: {}
- name: update_edge_storage_recording_configuration
  endpoint:
    path: /cameras/{cameraId}/edgeStorages/{storageId}/recordingConfiguration
    method: PATCH
- name: edge_storage_capabilities
  endpoint:
    path: /cameras/{cameraId}/capabilities/edgeStorage
    method: GET
- name: cameras
  endpoint:
    path: /cameras/{cameraId}/edgeStorages/{storageId}/formatJobs
    method: POST
- name: device_io_capabilities
  endpoint:
    path: /cameras/{cameraId}/capabilities/deviceIO
    method: GET
- name: recording_sync_job
  endpoint:
    path: /cameras/{cameraId}/edgeStorages/{storageId}/recordingSyncJobs
    method: POST
- name: camera_capabilities
  endpoint:
    path: /cameras/{cameraId}/capabilities/deviceIO/outputs/{outputId}
    method: GET
    data_selector: ''
- name: edge_recording_status
  endpoint:
    path: /cameras/{cameraId}/edgeStorages/{storageId}/recordingStatus
    method: GET
    data_selector: UNKNOWN
    params: {}
- name: camera_wifi
  endpoint:
    path: /reference/getcamerawifistatus-1
    method: GET
    data_selector: WiFiStatus
- name: wifi_status
  endpoint:
    path: /cameras/{cameraId}/wifi/status
    method: GET
    data_selector: status
    params: {}
- name: device_io_capabilities
  endpoint:
    path: /cameras/{cameraId}/capabilities/deviceIO/inputs/{inputId}
    method: GET
    data_selector: capabilities
- name: wifi_status_update
  endpoint:
    path: /cameras/{cameraId}/wifi/status
    method: PATCH
    data_selector: job
    params: {}
- name: edge_storage_info
  endpoint:
    path: /cameras/{cameraId}/edgeStorages
    method: GET
    data_selector: edgeStorages
- name: wifi_visible
  endpoint:
    path: /cameras/{cameraId}/wifi/visible
    method: GET
    data_selector: networks
    params: {}
- name: recording_configuration
  endpoint:
    path: /cameras/{cameraId}/edgeStorages/{storageId}/recordingConfiguration
    method: GET
- name: saved_wifi_networks
  endpoint:
    path: /reference/getsavedwifinetworks-1
    method: GET
- name: edge_storage_recording_configuration
  endpoint:
    path: /reference/getedgestoragerecordingconfiguration-1
    method: GET
- name: saved_wifi_networks
  endpoint:
    path: /cameras/{cameraId}/wifi/saved
    method: GET
    data_selector: networks
    params: {}
- name: save_wifi_network
  endpoint:
    path: /cameras/{cameraId}/wifi/saved
    method: POST
- name: devices
  endpoint:
    path: /cameras/{cameraId}/edgeStorages/{storageId}/formatJobs
    method: POST
- name: recording_sync_job
  endpoint:
    path: /cameras/{cameraId}/edgeStorages/{storageId}/recordingSyncJobs
    method: POST
- name: connect_to_saved_network
  endpoint:
    path: /cameras/{cameraId}/wifi/saved/{networkId}
    method: PUT
- name: edge_recording_status
  endpoint:
    path: /cameras/{cameraId}/edgeStorages/{storageId}/recordingStatus
    method: GET
- name: Wi-Fi connection status
  endpoint:
    path: /reference/getcamerawifistatus-1
    method: GET
- name: wifi_status
  endpoint:
    path: /cameras/{cameraId}/wifi/status
    method: GET
    data_selector: status
    params: {}
- name: Cameras
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Camera Status
  endpoint:
    path: /reference/getcamerastatus-1
    method: GET
- name: Camera Mode
  endpoint:
    path: /reference/getcameramode
    method: GET
- name: Camera Streams
  endpoint:
    path: /reference/getcamerastreams
    method: GET
- name: Camera Device Info
  endpoint:
    path: /reference/getdeviceinfo-2
    method: GET
- name: Camera Video Stream Settings
  endpoint:
    path: /reference/getvideostreamsettings-1
    method: GET
- name: Camera Footage Settings
  endpoint:
    path: /reference/getfootagesettings
    method: GET
- name: Camera Location
  endpoint:
    path: /reference/getaccountcameralocations-1
    method: GET
- name: Camera Firmware
  endpoint:
    path: /reference/getcamerafirmwarestatus-2
    method: GET
- name: Camera Snapshot
  endpoint:
    path: /reference/getcamerasnapshot
    method: GET
- name: Camera Microphone
  endpoint:
    path: /reference/getmicrophoneenabled-1
    method: GET
- name: Camera Jobs
  endpoint:
    path: /reference/getcamerajobs-1
    method: GET
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: User Base
  endpoint:
    path: /reference/getusers
    method: GET
- name: remove_saved_network
  endpoint:
    path: /cameras/{cameraId}/wifi/saved/{networkId}
    method: DELETE
    data_selector: null
    params: {}
- name: account_timezone
  endpoint:
    path: /reference/getaccounttimezone-1
    method: GET
    data_selector: null
    params: {}
- name: wifi_status_update
  endpoint:
    path: /cameras/{cameraId}/wifi/status
    method: PATCH
- name: account_timezone
  endpoint:
    path: /accounts/self/timeZone
    method: GET
    data_selector: timezone
- name: wifi_visible
  endpoint:
    path: /cameras/{cameraId}/wifi/visible
    method: GET
    data_selector: networks
- name: wifi_networks
  endpoint:
    path: /reference/getsavedwifinetworks-1
    method: GET
- name: account
  endpoint:
    path: /accounts/self/timeZone
    method: PATCH
    data_selector: null
    params: {}
- name: wifi_saved_networks
  endpoint:
    path: /cameras/{cameraId}/wifi/saved
    method: GET
- name: account_timezone
  endpoint:
    path: /reference/getaccounttimezone-1
    method: GET
- name: supported_time_zones
  endpoint:
    path: /reference/getsupportedtimezones-1
    method: GET
- name: time_zones
  endpoint:
    path: /rest/v2.4/timeZones
    method: GET
    data_selector: timeZones
- name: save_wifi_network
  endpoint:
    path: /cameras/{cameraId}/wifi/saved
    method: POST
- name: languages
  endpoint:
    path: /languages
    method: GET
    data_selector: ''
- name: cameras
  endpoint:
    path: /cameras/{cameraId}/wifi/saved/{networkId}
    method: PUT
- name: export_video
  endpoint:
    path: /cameras/{cameraId}/recordings/{recordingId}/export
    method: POST
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Camera Status
  endpoint:
    path: /reference/getcamerastatus-1
    method: GET
- name: Camera Mode
  endpoint:
    path: /reference/getcameramodes
    method: GET
- name: Camera Firmware
  endpoint:
    path: /reference/getcamerafirmwarestatus-2
    method: GET
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: User Base
  endpoint:
    path: /reference/getusers
    method: GET
- name: retrieve_generated_video_footage
  endpoint:
    path: /cameras/{cameraId}/recordings/{recordingId}/export/{jobId}.mov
    method: GET
    data_selector: file
    params: {}
- name: delete_saved_network
  endpoint:
    path: /cameras/{cameraId}/wifi/saved/{networkId}
    method: DELETE
    data_selector: response
    params: {}
- name: video_export
  endpoint:
    path: /cameras/{cameraId}/recordings/{recordingId}/export/{jobId}.mov
    method: GET
- name: device
  endpoint:
    path: /reference/getdevices
    method: GET
- name: account
  endpoint:
    path: /reference/account
    method: GET
- name: account_timezone
  endpoint:
    path: /accounts/self/timeZone
    method: GET
    data_selector: timezone
- name: camera_recording_schedule
  endpoint:
    path: /cameras/{cameraId}/schedules/recording
    method: GET
- name: account
  endpoint:
    path: /rest/v2.4/accounts/self/timeZone
    method: PATCH
- name: recordingschedule
  endpoint:
    path: /reference/getrecordingschedule
    method: GET
- name: setrecordingschedule
  endpoint:
    path: /reference/setrecordingschedule
    method: PUT
- name: account_timezone
  endpoint:
    path: /reference/getaccounttimezone-1
    method: GET
- name: supported_time_zones
  endpoint:
    path: /reference/getsupportedtimezones-1
    method: GET
- name: languages
  endpoint:
    path: /reference/getlanguages-1
    method: GET
- name: countries
  endpoint:
    path: /reference/getcountries
    method: GET
- name: schedules_recording
  endpoint:
    path: /cameras/{cameraId}/schedules/recording
    method: PUT
    data_selector: response
- name: time_zones
  endpoint:
    path: /timeZones
    method: GET
    data_selector: response
- name: mail_notifications
  endpoint:
    path: /users/self/schedules/mailNotifications/cameras/{cameraId}
    method: GET
    data_selector: triggers
    params: {}
- name: languages
  endpoint:
    path: /languages
    method: GET
    data_selector: ''
- name: mail_notifications
  endpoint:
    path: /users/self/schedules/mailNotifications/cameras/{cameraId}
    method: PUT
- name: export_video
  endpoint:
    path: /cameras/{cameraId}/recordings/{recordingId}/export
    method: POST
- name: push_notification_schedule
  endpoint:
    path: /users/self/schedules/pushNotifications/cameras/{cameraId}
    method: GET
    data_selector: triggers
    params: {}
- name: schedule
  endpoint:
    path: /reference/getrecordingschedule
    method: GET
    data_selector: schedule
- name: Retrieve Video Footage
  endpoint:
    path: /cameras/{cameraId}/recordings/{recordingId}/export/{jobId}.mov
    method: GET
    data_selector: file
    params: {}
- name: device
  endpoint:
    path: /reference/getdevices
    method: GET
- name: account
  endpoint:
    path: /reference/getaccounts
    method: GET
- name: push_notification_schedule
  endpoint:
    path: /users/self/schedules/pushNotifications/cameras/{cameraId}
    method: PUT
- name: camera_recording_schedule
  endpoint:
    path: /cameras/{cameraId}/schedules/recording
    method: GET
    data_selector: triggers
    params: {}
- name: video_analytics_settings
  endpoint:
    path: /cameras/{cameraId}/detectors/analytics
    method: GET
    data_selector: settings
    params: {}
- name: camera_recording_schedule
  endpoint:
    path: /cameras/{cameraId}/schedules/recording
    method: PUT
- name: video_analytics_settings
  endpoint:
    path: /reference/getvideostreamsettings-1
    method: GET
- name: cameras
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: update_video_analytics
  endpoint:
    path: /cameras/{cameraId}/detectors/analytics
    method: PUT
    data_selector: null
    params: {}
- name: mail_notification_schedule
  endpoint:
    path: /users/self/schedules/mailNotifications/cameras/{cameraId}
    method: GET
    data_selector: triggers
    params: {}
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Camera Status
  endpoint:
    path: /reference/getcamerastatus-1
    method: GET
- name: Camera Location
  endpoint:
    path: /reference/getaccountcameralocations-1
    method: GET
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: add_area
  endpoint:
    path: /cameras/{cameraId}/detectors/analytics/areas
    method: POST
- name: mail_notifications
  endpoint:
    path: /users/self/schedules/mailNotifications/cameras/{cameraId}
    method: PUT
- name: push_notification_schedule
  endpoint:
    path: /users/self/schedules/pushNotifications/cameras/{cameraId}
    method: GET
- name: update_area
  endpoint:
    path: /cameras/{cameraId}/detectors/analytics/areas/{areaId}
    method: PUT
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Camera Status
  endpoint:
    path: /reference/getcamerastatus-1
    method: GET
- name: cameras
  endpoint:
    path: /cameras/{cameraId}/detectors/analytics/areas/{areaId}
    method: PATCH
    data_selector: null
    params: {}
- name: push_notification_schedule
  endpoint:
    path: /users/self/schedules/pushNotifications/cameras/{cameraId}
    method: PUT
- name: camera_analytics
  endpoint:
    path: /cameras/{cameraId}/detectors/analytics
    method: GET
    data_selector: analytics_settings
- name: Delete Area
  endpoint:
    path: /cameras/{cameraId}/detectors/analytics/areas/{areaId}
    method: DELETE
- name: device_types
  endpoint:
    path: /deviceTypes
    method: GET
    data_selector: response
- name: update_video_analytics
  endpoint:
    path: /cameras/{cameraId}/detectors/analytics
    method: PUT
    data_selector: null
    params: {}
- name: zone
  endpoint:
    path: /reference/getzones
    method: GET
- name: zones
  endpoint:
    path: /zones
    method: GET
    data_selector: Zone
- name: zones
  endpoint:
    path: /zones
    method: POST
- name: add_area
  endpoint:
    path: /cameras/{cameraId}/detectors/analytics/areas
    method: POST
    data_selector: null
    params: {}
- name: zone
  endpoint:
    path: /zones/{zoneId}
    method: GET
    data_selector: zone
    params: {}
- name: update_area
  endpoint:
    path: /cameras/{cameraId}/detectors/analytics/areas/{areaId}
    method: PUT
- name: zones
  endpoint:
    path: /zones/{zoneId}
    method: PATCH
- name: cameras
  endpoint:
    path: /rest/v2.0/cameras/{cameraId}/detectors/analytics/areas/{areaId}
    method: PATCH
- name: zones
  endpoint:
    path: /zones/{zoneId}
    method: PUT
    data_selector: null
    params: {}
- name: delete_area
  endpoint:
    path: /cameras/{cameraId}/detectors/analytics/areas/{areaId}
    method: DELETE
    data_selector: ''
    params: {}
- name: zones
  endpoint:
    path: /zones/{zoneId}
    method: DELETE
- name: device_types
  endpoint:
    path: /deviceTypes
    method: GET
    data_selector: devices
- name: cameras
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: zones
  endpoint:
    path: /reference/getzones
    method: GET
- name: zone
  endpoint:
    path: /reference/getzones
    method: GET
- name: cameras_in_zone
  endpoint:
    path: /zones/{zoneId}/cameras
    method: GET
    data_selector: cameras
    params: {}
- name: zones
  endpoint:
    path: /zones
    method: POST
- name: zones
  endpoint:
    path: /zones/{zoneId}/cameraIds
    method: PATCH
    data_selector: null
    params: {}
- name: zone
  endpoint:
    path: /reference/getzones
    method: get
- name: camera
  endpoint:
    path: /reference/getcameras-1
    method: get
- name: camera_zone
  endpoint:
    path: /cameras/{cameraId}/zone/{zoneId}
    method: PUT
- name: zone
  endpoint:
    path: /zones/{zoneId}
    method: GET
    data_selector: response
    params: {}
- name: device_positions
  endpoint:
    path: /devicePositions:filter
    method: POST
    data_selector: results
    params: {}
- name: zones
  endpoint:
    path: /zones/{zoneId}
    method: PATCH
- name: device_positions
  endpoint:
    path: /devicePositions/current:filter
    method: POST
    data_selector: results
    params: {}
- name: zones
  endpoint:
    path: /zones/{zoneId}
    method: PUT
- name: countries
  endpoint:
    path: /rest/v2.1/countries
    method: GET
    data_selector: response
- name: zone
  endpoint:
    path: /zones/{zoneId}
    method: DELETE
- name: sequence
  endpoint:
    path: /reference/getsequences-1
    method: GET
- name: cameras
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: zones
  endpoint:
    path: /reference/getzones
    method: GET
- name: sequences
  endpoint:
    path: /sequences
    method: GET
    data_selector: array of objects
- name: device
  endpoint:
    path: /reference/getdevices
    method: GET
- name: device_info
  endpoint:
    path: /reference/getdeviceinfo
    method: GET
- name: device_status
  endpoint:
    path: /reference/getdevicestatus-1
    method: GET
- name: device_channel
  endpoint:
    path: /reference/getdevicechannels-1
    method: GET
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Camera Status
  endpoint:
    path: /reference/getcamerastatus-1
    method: GET
- name: Camera Mode
  endpoint:
    path: /reference/getcameramode
    method: GET
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: zones
  endpoint:
    path: /zones/{zoneId}/cameraIds
    method: PATCH
- name: sequence
  endpoint:
    path: /sequence
    method: POST
- name: cameras
  endpoint:
    path: /cameras/{cameraId}/zone/{zoneId}
    method: PUT
- name: device_positions
  endpoint:
    path: /devicePositions:filter
    method: POST
    data_selector: results
- name: Device
  endpoint:
    path: /reference/adddevice
    method: POST
- name: Devices
  endpoint:
    path: /reference/getdevices
    method: GET
- name: Device IO
  endpoint:
    path: /reference/getdigitalinputs-1
    method: GET
- name: Device Channel Snapshot
  endpoint:
    path: /reference/getdevicechannelsnapshot-1
    method: GET
- name: Add Device Status
  endpoint:
    path: /reference/polladddevicestatus-1
    method: GET
- name: Device Firmware
  endpoint:
    path: /reference/getdevicefirmwarestatus-1
    method: GET
- name: Device Channel Camera
  endpoint:
    path: /reference/addchannelcamera-1
    method: POST
- name: Device Info
  endpoint:
    path: /reference/getdeviceinfo
    method: GET
- name: Device Maintenance
  endpoint:
    path: /reference/performmaintenanceoperation-1
    method: PUT
- name: Device Jobs
  endpoint:
    path: /reference/getdevicejobs-1
    method: GET
- name: Device Channel
  endpoint:
    path: /reference/getdevicechannels-1
    method: GET
- name: Device Status
  endpoint:
    path: /reference/getdevicestatus-1
    method: GET
- name: Device Connection Details
  endpoint:
    path: /reference/getconnectiondetails
    method: GET
- name: Device Connection Credentials
  endpoint:
    path: /reference/getconnectioncredentials
    method: GET
- name: DeviceType Credentials
  endpoint:
    path: /reference/getdevicetypedefaultcredentials
    method: GET
- name: sequence
  endpoint:
    path: /reference/getsequences
    method: GET
- name: device_positions
  endpoint:
    path: /devicePositions/current:filter
    method: POST
    data_selector: results
- name: sequences
  endpoint:
    path: /sequences/{sequenceId}
    method: DELETE
- name: countries
  endpoint:
    path: /countries
    method: GET
    data_selector: response
- name: sequences
  endpoint:
    path: /sequences
    method: GET
    data_selector: array of objects
- name: Device
  endpoint:
    path: /reference/getdevices
    method: GET
- name: Device IO
  endpoint:
    path: /reference/getdigitalinputs-1
    method: GET
- name: Device Channel Snapshot
  endpoint:
    path: /reference/getdevicechannelsnapshot-1
    method: GET
- name: Add Device Status
  endpoint:
    path: /reference/polladddevicestatus-1
    method: GET
- name: Device Firmware
  endpoint:
    path: /reference/getdevicefirmwarestatus-1
    method: GET
- name: Device Channel Camera
  endpoint:
    path: /reference/addchannelcamera-1
    method: POST
- name: Device Info
  endpoint:
    path: /reference/getdeviceinfo
    method: GET
- name: Device Maintenance
  endpoint:
    path: /reference/performmaintenanceoperation-1
    method: PUT
- name: Device Jobs
  endpoint:
    path: /reference/getdevicejobs-1
    method: GET
- name: Device Channel
  endpoint:
    path: /reference/getdevicechannels-1
    method: GET
- name: Device Status
  endpoint:
    path: /reference/getdevicestatus-1
    method: GET
- name: Device Connection Details
  endpoint:
    path: /reference/getconnectiondetails
    method: GET
- name: Device Connection Credentials
  endpoint:
    path: /reference/getconnectioncredentials
    method: GET
- name: DeviceType Credentials
  endpoint:
    path: /reference/getdevicetypedefaultcredentials
    method: GET
- name: device
  endpoint:
    path: /reference/getdevices
    method: GET
- name: account
  endpoint:
    path: /reference/getaccounts
    method: GET
- name: current_user
  endpoint:
    path: /reference/getcurrentuser-1
    method: GET
- name: video_detection_enabled_camera
  endpoint:
    path: /cameras/{cameraId}/detectors/video
    method: GET
- name: sequence
  endpoint:
    path: /sequence
    method: POST
- name: sequences
  endpoint:
    path: /reference/getsequences
    method: GET
- name: add_sequence
  endpoint:
    path: /reference/addsequence
    method: POST
- name: update_sequence
  endpoint:
    path: /reference/updatesequence
    method: PATCH
- name: delete_sequence
  endpoint:
    path: /reference/deletesequence
    method: DELETE
- name: cameras
  endpoint:
    path: /cameras/{cameraId}/detectors/video
    method: PUT
- name: PIR detection enabled camera attribute
  endpoint:
    path: /cameras/{cameraId}/detectors/pir
    method: GET
    data_selector: response
- name: PIR Detection
  endpoint:
    path: /reference/getpirdetectionenabled-1
    method: GET
    data_selector: ''
    params: {}
- name: Set PIR Detection
  endpoint:
    path: /reference/setpirdetectionenabled-1
    method: PUT
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
- name: device_io
  endpoint:
    path: /device_io
    method: GET
- name: device_channel_snapshot
  endpoint:
    path: /device_channel_snapshot
    method: GET
- name: add_device_status
  endpoint:
    path: /add_device_status
    method: GET
- name: device_firmware
  endpoint:
    path: /device_firmware
    method: GET
- name: device_channel_camera
  endpoint:
    path: /device_channel_camera
    method: POST
- name: device_info
  endpoint:
    path: /device_info
    method: GET
- name: device_maintenance
  endpoint:
    path: /device_maintenance
    method: PUT
- name: device_jobs
  endpoint:
    path: /device_jobs
    method: GET
- name: device_channel
  endpoint:
    path: /device_channel
    method: GET
- name: device_status
  endpoint:
    path: /device_status
    method: GET
- name: device_connection_details
  endpoint:
    path: /device_connection_details
    method: GET
- name: device_connection_credentials
  endpoint:
    path: /device_connection_credentials
    method: GET
- name: device_type_credentials
  endpoint:
    path: /device_type_credentials
    method: GET
- name: account
  endpoint:
    path: /account
    method: GET
- name: set_pir_detection
  endpoint:
    path: /cameras/{cameraId}/detectors/pir
    method: PUT
- name: delete_sequence
  endpoint:
    path: /sequences/{sequenceId}
    method: DELETE
    data_selector: response
    params: {}
- name: audio_detection
  endpoint:
    path: /cameras/{cameraId}/detectors/audio
    method: GET
    data_selector: audio_detection_attribute
    params: {}
- name: cameras
  endpoint:
    path: /cameras/{cameraId}/detectors/audio
    method: PUT
    data_selector: ''
    params: {}
- name: device
  endpoint:
    path: /reference/getdevices
    method: GET
    data_selector: devices
- name: device_info
  endpoint:
    path: /reference/getdeviceinfo
    method: GET
    data_selector: device_info
- name: account
  endpoint:
    path: /reference/getaccounts
    method: GET
    data_selector: accounts
- name: current_user
  endpoint:
    path: /reference/getcurrentuser-1
    method: GET
    data_selector: current_user
- name: doorbell_detection
  endpoint:
    path: /cameras/{cameraId}/detectors/doorbell
    method: GET
    data_selector: response
- name: doorbell_detection
  endpoint:
    path: /reference/getdoorbelldetectionenabled
    method: GET
- name: video_detection
  endpoint:
    path: /cameras/{cameraId}/detectors/video
    method: GET
- name: doorbell_detection
  endpoint:
    path: /cameras/{cameraId}/detectors/doorbell
    method: PUT
- name: Camera Detection Capabilities
  endpoint:
    path: /reference/getcameradetectioncapabilities-1
    method: GET
- name: camera_detection_capabilities
  endpoint:
    path: /cameras/{cameraId}/detectors/capabilities
    method: GET
    data_selector: ''
- name: video_motion_detection
  endpoint:
    path: /cameras/{cameraId}/detectors/video
    method: PUT
- name: events
  endpoint:
    path: /events/search
    method: POST
- name: get_pir_detection_enabled_camera_attribute
  endpoint:
    path: /cameras/{cameraId}/detectors/pir
    method: GET
    data_selector: response
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: cameras
  endpoint:
    path: /cameras/{cameraId}/detectors/pir
    method: PUT
- name: events
  endpoint:
    path: /events
    method: POST
- name: audio_detection
  endpoint:
    path: /cameras/{cameraId}/detectors/audio
    method: GET
    data_selector: response
- name: event
  endpoint:
    path: /rest/v2.4/events/{eventId}
    method: GET
    data_selector: object
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: object
- name: audio_detection
  endpoint:
    path: /cameras/{cameraId}/detectors/audio
    method: PUT
- name: device
  endpoint:
    path: /reference/getdevices
    method: GET
- name: device_info
  endpoint:
    path: /reference/getdeviceinfo
    method: GET
- name: doorbell_detection
  endpoint:
    path: /cameras/{cameraId}/detectors/doorbell
    method: GET
    data_selector: ''
- name: event
  endpoint:
    path: /events/{eventId}
    method: PATCH
    data_selector: ''
    params: {}
- name: event_available_types
  endpoint:
    path: /reference/getavailableeventtypes
    method: GET
- name: set_doorbell_detection
  endpoint:
    path: /cameras/{cameraId}/detectors/doorbell
    method: PUT
- name: available_event_types
  endpoint:
    path: /events/availableTypes
    method: GET
    data_selector: events
- name: camera_detectors_capabilities
  endpoint:
    path: /cameras/{cameraId}/detectors/capabilities
    method: GET
- name: event_search
  endpoint:
    path: /reference/searchevents
    method: POST
- name: event
  endpoint:
    path: /reference/getevents
    method: GET
- name: searchable_fields
  endpoint:
    path: /rest/v2.4/events/searchableFields
    method: GET
    data_selector: response
    params: {}
- name: events_search
  endpoint:
    path: /events/search
    method: POST
- name: event_snapshot
  endpoint:
    path: /events/{eventId}.jpg
    method: GET
    data_selector: Error
- name: events
  endpoint:
    path: /rest/v2.4/events
    method: GET
    data_selector: events
- name: faces
  endpoint:
    path: /reference/getfaces-1
    method: GET
- name: event
  endpoint:
    path: /reference/getevents
    method: GET
    data_selector: events
- name: user
  endpoint:
    path: /reference/getusers
    method: GET
    data_selector: users
- name: faces
  endpoint:
    path: /faces
    method: GET
    data_selector: faces
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
- name: faces
  endpoint:
    path: /faces
    method: POST
- name: event
  endpoint:
    path: /rest/v2.4/events/{eventId}
    method: GET
    data_selector: object
    params: {}
- name: face
  endpoint:
    path: /faces/{faceId}
    method: GET
    data_selector: response
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: object
    params: {}
- name: faces
  endpoint:
    path: /reference/getfaces-1
    method: GET
- name: device
  endpoint:
    path: /reference/getdevices
    method: GET
- name: device_info
  endpoint:
    path: /reference/getdeviceinfo
    method: GET
- name: device_status
  endpoint:
    path: /reference/getdevicestatus-1
    method: GET
- name: update_face
  endpoint:
    path: /faces/{faceId}
    method: PATCH
- name: face_sample_image
  endpoint:
    path: /reference/getfacesampleimage-1
    method: GET
- name: face_sample_image
  endpoint:
    path: /faces/{faceId}/samples/{sampleId}.jpg
    method: GET
    data_selector: image
- name: events
  endpoint:
    path: /events/{eventId}
    method: PATCH
    data_selector: null
    params: {}
- name: face_samples
  endpoint:
    path: /faces/{faceId}/samples
    method: GET
    data_selector: samples
- name: available_event_types
  endpoint:
    path: /events/availableTypes
    method: GET
    data_selector: eventTypes
- name: upload_face_sample
  endpoint:
    path: /faces/{faceId}/samples
    method: POST
- name: searchable_fields
  endpoint:
    path: /events/searchableFields
    method: GET
    data_selector: response
- name: face_sample
  endpoint:
    path: /faces/{faceId}/samples/{sampleId}
    method: GET
    data_selector: response
    params: {}
- name: event_snapshot
  endpoint:
    path: /events/{eventId}.jpg
    method: GET
- name: face_sample
  endpoint:
    path: /reference/getfacesamples-1
    method: GET
- name: faces
  endpoint:
    path: /rest/v2.4/faces/{faceId}/samples/{sampleId}
    method: PATCH
- name: faces
  endpoint:
    path: /faces
    method: GET
    data_selector: faces
- name: delete_face_sample
  endpoint:
    path: /faces/{faceId}/samples/{sampleId}
    method: DELETE
    data_selector: null
    params: {}
- name: faces
  endpoint:
    path: /faces
    method: POST
    data_selector: null
    params: {}
- name: eventWebhooks
  endpoint:
    path: /eventWebhooks
    method: POST
    data_selector: unknown
    params: {}
- name: event_webhooks
  endpoint:
    path: /eventWebhooks
    method: GET
    data_selector: webhooks
- name: face
  endpoint:
    path: /faces/{faceId}
    method: GET
    data_selector: ''
- name: faces
  endpoint:
    path: /reference/getfaces-1
    method: GET
- name: event
  endpoint:
    path: /reference/getevents
    method: GET
- name: event_webhook
  endpoint:
    path: /eventWebhooks/{webhookId}
    method: GET
- name: faces
  endpoint:
    path: /faces/{faceId}
    method: PATCH
- name: event_webhook
  endpoint:
    path: /eventWebhooks/{webhookId}
    method: DELETE
- name: face_sample_image
  endpoint:
    path: /faces/{faceId}/samples/{sampleId}.jpg
    method: GET
- name: user_notification_settings
  endpoint:
    path: /reference/getusernotificationssettings
    method: GET
- name: notification_settings
  endpoint:
    path: /rest/v2.4/users/self/notificationSettings
    method: GET
    data_selector: notificationSettings
    params: {}
- name: face_samples
  endpoint:
    path: /faces/{faceId}/samples
    method: GET
    data_selector: samples
- name: user_notification_settings
  endpoint:
    path: /users/self/notificationSettings/{notificationType}
    method: GET
    data_selector: settings
    params: {}
- name: upload_face_sample
  endpoint:
    path: /faces/{faceId}/samples
    method: POST
    data_selector: response
- name: user_notification_settings
  endpoint:
    path: /reference/getusernotificationssettings
    method: GET
- name: user_notification_settings
  endpoint:
    path: /users/self/notificationSettings/{notificationType}
    method: PATCH
- name: user_status
  endpoint:
    path: /reference/getuserstatus
    method: GET
- name: face_sample
  endpoint:
    path: /faces/{faceId}/samples/{sampleId}
    method: GET
    data_selector: response
    params: {}
- name: user_status
  endpoint:
    path: /users/self/status
    method: GET
- name: faces
  endpoint:
    path: /faces/{faceId}/samples/{sampleId}
    method: PATCH
- name: user_status
  endpoint:
    path: /reference/getuserstatus
    method: GET
- name: event_search
  endpoint:
    path: /reference/searchevents
    method: POST
- name: face_sample
  endpoint:
    path: /reference/deletefacesample-1
    method: DEL
- name: user_status
  endpoint:
    path: /users/self/status
    method: PATCH
- name: delete_face_sample
  endpoint:
    path: /faces/{faceId}/samples/{sampleId}
    method: DELETE
- name: user_rights
  endpoint:
    path: /reference/getuserrights-1
    method: GET
    data_selector: permissions
- name: user_permissions
  endpoint:
    path: /users/self/rights
    method: GET
    data_selector: permissions
- name: event_webhooks
  endpoint:
    path: /eventWebhooks
    method: POST
- name: user_rights
  endpoint:
    path: /reference/getuserrights-1
    method: GET
- name: user_rights
  endpoint:
    path: /users/{userId}/rights
    method: GET
    data_selector: permissions
- name: event_webhooks
  endpoint:
    path: /eventWebhooks
    method: GET
- name: event_webhook
  endpoint:
    path: /reference/getwebhook-1
    method: GET
- name: users
  endpoint:
    path: /users/{userId}/rights
    method: PATCH
- name: event_webhooks
  endpoint:
    path: /eventWebhooks/{webhookId}
    method: GET
- name: password_reset
  endpoint:
    path: /passwordResets
    method: POST
- name: event_webhook
  endpoint:
    path: /eventWebhooks/{webhookId}
    method: DELETE
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: user_notification_settings
  endpoint:
    path: /rest/v2.4/users/self/notificationSettings
    method: GET
    data_selector: notificationSettings
    params: {}
- name: users
  endpoint:
    path: /users
    method: POST
- name: user_notification_setting
  endpoint:
    path: /users/self/notificationSettings/{notificationType}
    method: GET
    data_selector: response
    params: {}
- name: current_user
  endpoint:
    path: /users/self
    method: GET
    data_selector: user
    params: {}
- name: user_notification_settings
  endpoint:
    path: /users/self/notificationSettings/{notificationType}
    method: PATCH
    data_selector: null
    params: {}
- name: user
  endpoint:
    path: /rest/v2.4/users/self
    method: PATCH
- name: current_user_status
  endpoint:
    path: /users/self/status
    method: GET
    data_selector: status
- name: user
  endpoint:
    path: /users/{userId}
    method: GET
    data_selector: user
    params: {}
- name: user_status
  endpoint:
    path: /users/self/status
    method: PATCH
- name: users
  endpoint:
    path: /users/{userId}
    method: PATCH
- name: user_rights
  endpoint:
    path: /users/self/rights
    method: GET
    data_selector: permissions
    params: {}
- name: users
  endpoint:
    path: /reference/getusers
    method: GET
- name: user_details
  endpoint:
    path: /reference/getuserdetails
    method: GET
- name: user_status
  endpoint:
    path: /reference/getuserstatus
    method: GET
- name: user_notifications
  endpoint:
    path: /reference/getusernotificationssettings
    method: GET
- name: user_permissions
  endpoint:
    path: /reference/getuserrightsbyid-1
    method: GET
- name: user
  endpoint:
    path: /users/{userId}
    method: DELETE
- name: user_permissions
  endpoint:
    path: /users/{userId}/rights
    method: GET
    data_selector: permissions
    params: {}
- name: user_rights
  endpoint:
    path: /reference/getuserrightsbyid-1
    method: GET
    data_selector: permissions
- name: user_details
  endpoint:
    path: /users/self/details
    method: GET
    data_selector: userId, accountId, language, company_name, country, phone
- name: users
  endpoint:
    path: /users/{userId}/rights
    method: PATCH
- name: user_details
  endpoint:
    path: /rest/v2.4/users/self/details
    method: PATCH
- name: password_reset
  endpoint:
    path: /passwordResets
    method: POST
    data_selector: null
    params: {}
- name: user_credentials
  endpoint:
    path: /users/self/credentials
    method: GET
    data_selector: response
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /users
    method: POST
    data_selector: null
    params: {}
- name: users
  endpoint:
    path: /users/self/credentials
    method: PATCH
- name: UserMfa
  endpoint:
    path: /reference/getusermfa
    method: GET
    data_selector: multi-factor authentication settings
- name: current_user
  endpoint:
    path: /users/self
    method: GET
    data_selector: user
    params: {}
- name: multi_factor_authentication
  endpoint:
    path: /users/self/mfa
    method: GET
    data_selector: settings
- name: UserMfa
  endpoint:
    path: /reference/getusermfa
    method: GET
- name: user
  endpoint:
    path: /users/self
    method: PATCH
- name: multi_factor_authentication
  endpoint:
    path: /rest/v2.4/users/self/mfa
    method: PATCH
- name: user
  endpoint:
    path: /users/{userId}
    method: GET
    data_selector: user
    params: {}
- name: users
  endpoint:
    path: /users/{userId}
    method: PATCH
- name: devices
  endpoint:
    path: /rest/v2.4.1/devices
    method: GET
    data_selector: devices
- name: Camera Device Info
  endpoint:
    path: /reference/getdeviceinfo-2
    method: GET
- name: Camera Status
  endpoint:
    path: /reference/getcamerastatus-1
    method: GET
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: user
  endpoint:
    path: /reference/getusers
    method: GET
- name: event
  endpoint:
    path: /reference/getevents
    method: GET
- name: user
  endpoint:
    path: /users/{userId}
    method: DELETE
- name: device
  endpoint:
    path: /devices/{deviceId}
    method: GET
    data_selector: response
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceId}
    method: DELETE
- name: user_details
  endpoint:
    path: /users/self/details
    method: GET
    data_selector: userDetails
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Camera Status
  endpoint:
    path: /reference/getcamerastatus-1
    method: GET
- name: Camera Mode
  endpoint:
    path: /reference/getcameramode
    method: GET
- name: Camera Device Info
  endpoint:
    path: /reference/getdeviceinfo-2
    method: GET
- name: Camera Wifi
  endpoint:
    path: /reference/getcamerawifistatus-1
    method: GET
- name: user_details
  endpoint:
    path: /users/self/details
    method: PATCH
- name: device
  endpoint:
    path: /devices/{deviceId}
    method: PATCH
- name: user_credentials
  endpoint:
    path: /reference/getusercredentials
    method: GET
    data_selector: credentials
- name: user_credentials
  endpoint:
    path: /users/self/credentials
    method: GET
    data_selector: response
- name: device_io_inputs
  endpoint:
    path: /devices/{deviceId}/deviceIO/inputs
    method: GET
- name: user_credentials
  endpoint:
    path: /users/self/credentials
    method: PATCH
- name: digital_input
  endpoint:
    path: /devices/{deviceId}/deviceIO/inputs/{inputId}
    method: GET
    data_selector: settings
- name: multi_factor_auth
  endpoint:
    path: /users/self/mfa
    method: GET
    data_selector: mfa_settings
- name: device_io
  endpoint:
    path: /devices/{deviceId}/deviceIO/inputs/{inputId}
    method: PATCH
    data_selector: response
    params: {}
- name: User MFA
  endpoint:
    path: /reference/getusermfa
    method: GET
    data_selector: userMfa
- name: users
  endpoint:
    path: /rest/v2.4/users/self/mfa
    method: PATCH
- name: device_io_input_status
  endpoint:
    path: /devices/{deviceId}/deviceIO/inputs/{inputId}/status
    method: GET
    data_selector: status
- name: devices
  endpoint:
    path: /devices
    method: POST
- name: device_io_inputs_status
  endpoint:
    path: /devices/{deviceId}/deviceIO/inputs/all/status
    method: GET
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: records
- name: device_output_status
  endpoint:
    path: /devices/{deviceId}/deviceIO/outputs/{outputId}/status
    method: PUT
- name: device
  endpoint:
    path: /devices/{deviceId}
    method: GET
    data_selector: response
    params: {}
- name: device_output_status
  endpoint:
    path: /devices/{deviceId}/deviceIO/outputs/{outputId}/status
    method: GET
- name: device
  endpoint:
    path: /devices/{deviceId}
    method: DELETE
- name: device_outputs
  endpoint:
    path: /reference/getdeviceoutputs
    method: GET
- name: device_outputs_status
  endpoint:
    path: /devices/{deviceId}/deviceIO/outputs/all/status
    method: GET
    data_selector: status
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceId}
    method: PATCH
- name: device_io_inputs
  endpoint:
    path: /devices/{deviceId}/deviceIO/inputs
    method: GET
- name: device_io_outputs
  endpoint:
    path: /devices/{deviceId}/deviceIO/outputs/{outputId}
    method: GET
- name: device_io_input
  endpoint:
    path: /devices/{deviceId}/deviceIO/inputs/{inputId}
    method: GET
- name: Device IO Output
  endpoint:
    path: /devices/{deviceId}/deviceIO/outputs/{outputId}
    method: PATCH
- name: device_io_input
  endpoint:
    path: /devices/{deviceId}/deviceIO/inputs/{inputId}
    method: PATCH
- name: relay_outputs
  endpoint:
    path: /devices/{deviceId}/deviceIO/outputs
    method: GET
    data_selector: outputs
- name: device_input_status
  endpoint:
    path: /devices/{deviceId}/deviceIO/inputs/{inputId}/status
    method: GET
- name: device_channel_snapshot
  endpoint:
    path: /devices/{deviceId}/channels/{channelId}/snapshot
    method: GET
    data_selector: ''
    params: {}
- name: device_inputs_status
  endpoint:
    path: /devices/{deviceId}/deviceIO/inputs/all/status
    method: GET
    data_selector: status
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Camera Status
  endpoint:
    path: /reference/getcamerastatus-1
    method: GET
- name: Camera Mode
  endpoint:
    path: /reference/getcameramode
    method: GET
- name: Camera Firmware
  endpoint:
    path: /reference/getcamerafirmwarestatus-2
    method: GET
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: device_addition_status
  endpoint:
    path: /devices/{deviceId}/additionStatus/poll
    method: GET
    data_selector: status
- name: device_output_status
  endpoint:
    path: /devices/{deviceId}/deviceIO/outputs/{outputId}/status
    method: PUT
- name: addition_status
  endpoint:
    path: /devices/all/additionStatus
    method: GET
    data_selector: status
- name: device_output_status
  endpoint:
    path: /devices/{deviceId}/deviceIO/outputs/{outputId}/status
    method: GET
    data_selector: status
    params: {}
- name: firmware_status
  endpoint:
    path: /devices/{deviceId}/firmware
    method: GET
    data_selector: FirmwareStatus
- name: Camera Firmware
  endpoint:
    path: /reference/getcamerafirmwarestatus-2
    method: GET
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: User Base
  endpoint:
    path: /reference/getusers
    method: GET
- name: device_outputs_status
  endpoint:
    path: /devices/{deviceId}/deviceIO/outputs/all/status
    method: GET
    data_selector: status
- name: firmware_upgrade
  endpoint:
    path: /devices/{deviceId}/firmware
    method: POST
- name: deviceIO_outputs
  endpoint:
    path: /devices/{deviceId}/deviceIO/outputs/{outputId}
    method: GET
    data_selector: settings
- name: firmware_status
  endpoint:
    path: /devices/all/firmware
    method: GET
    data_selector: FirmwareStatus
    params: {}
- name: deviceIO_outputs
  endpoint:
    path: /devices/{deviceId}/deviceIO/outputs/{outputId}
    method: PATCH
- name: add_camera
  endpoint:
    path: /devices/{deviceId}/channels/{channelId}/camera
    method: POST
- name: device_outputs
  endpoint:
    path: /devices/{deviceId}/deviceIO/outputs
    method: GET
- name: device_info
  endpoint:
    path: /devices/{deviceId}/deviceInfo
    method: GET
    data_selector: deviceInfo
- name: device_channel_snapshot
  endpoint:
    path: /devices/{deviceId}/channels/{channelId}/snapshot
    method: GET
    data_selector: ''
    params: {}
- name: Device Maintenance
  endpoint:
    path: /devices/{deviceId}/maintenance
    method: PUT
- name: camera_jobs
  endpoint:
    path: /reference/getcamerajobs-1
    method: GET
- name: device_jobs
  endpoint:
    path: /devices/{deviceId}/jobs
    method: GET
    data_selector: jobs
- name: addition_status
  endpoint:
    path: /devices/{deviceId}/additionStatus/poll
    method: GET
- name: device_job_details
  endpoint:
    path: /devices/{deviceId}/jobs/{jobId}
    method: GET
    data_selector: response
    params: {}
- name: addition_status
  endpoint:
    path: /devices/all/additionStatus
    method: GET
- name: channels
  endpoint:
    path: /reference/getchannels
    method: GET
- name: device_channels
  endpoint:
    path: /devices/{deviceId}/channels
    method: GET
- name: firmware_status
  endpoint:
    path: /devices/{deviceId}/firmware
    method: GET
    data_selector: FirmwareStatus
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: User
  endpoint:
    path: /reference/getusers
    method: GET
- name: device_channel
  endpoint:
    path: /devices/{deviceId}/channels/{channelId}
    method: GET
- name: firmware_upgrade
  endpoint:
    path: /devices/{deviceId}/firmware
    method: POST
    data_selector: FirmwareUpgradeDeviceJob
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Camera Status
  endpoint:
    path: /reference/getcamerastatus-1
    method: GET
- name: Camera Device Info
  endpoint:
    path: /reference/getdeviceinfo-2
    method: GET
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: User Base
  endpoint:
    path: /reference/getusers
    method: GET
- name: firmware_status
  endpoint:
    path: /devices/all/firmware
    method: GET
    data_selector: FirmwareStatus
- name: device_status
  endpoint:
    path: /devices/{deviceId}/status
    method: GET
    data_selector: status
    params: {}
- name: add_camera_to_device_channel
  endpoint:
    path: /devices/{deviceId}/channels/{channelId}/camera
    method: POST
- name: connection_details
  endpoint:
    path: /devices/{deviceId}/connection/details
    method: GET
    data_selector: details
    params: {}
- name: device_info
  endpoint:
    path: /devices/{deviceId}/deviceInfo
    method: GET
    data_selector: manufacturer, model
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Camera Status
  endpoint:
    path: /reference/getcamerastatus-1
    method: GET
- name: Camera Mode
  endpoint:
    path: /reference/getcameramode
    method: GET
- name: Camera Jobs
  endpoint:
    path: /reference/getcamerajobs-1
    method: GET
- name: User Base
  endpoint:
    path: /reference/getusers
    method: GET
- name: device_maintenance
  endpoint:
    path: /devices/{deviceId}/maintenance
    method: PUT
- name: Device Connection Details
  endpoint:
    path: /devices/{deviceId}/connection/details
    method: PATCH
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: User
  endpoint:
    path: /reference/getusers
    method: GET
- name: device_jobs
  endpoint:
    path: /devices/{deviceId}/jobs
    method: GET
    data_selector: jobs
    params: {}
- name: device_connection_credentials
  endpoint:
    path: /devices/{deviceId}/connection/credentials
    method: GET
    data_selector: credentials
- name: device_job
  endpoint:
    path: /devices/{deviceId}/jobs/{jobId}
    method: GET
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Camera Status
  endpoint:
    path: /reference/getcamerastatus-1
    method: GET
- name: Camera Streams
  endpoint:
    path: /reference/getcamerastreams
    method: GET
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: channels
  endpoint:
    path: /reference/getzones
    method: GET
- name: device_connection_credentials
  endpoint:
    path: /devices/{deviceId}/connection/credentials
    method: PATCH
    data_selector: credentials
    params:
      skipValidation: 'True'
- name: device_channels
  endpoint:
    path: /devices/{deviceId}/channels
    method: GET
    data_selector: channels
- name: default_credentials
  endpoint:
    path: /deviceTypes/{deviceTypeId}/credentials
    method: GET
- name: device_channel
  endpoint:
    path: /devices/{deviceId}/channels/{channelId}
    method: GET
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Camera Status
  endpoint:
    path: /reference/getcamerastatus-1
    method: GET
- name: Camera Device Info
  endpoint:
    path: /reference/getdeviceinfo-2
    method: GET
- name: accounts
  endpoint:
    path: /resellers/{resellerId}/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: device_status
  endpoint:
    path: /devices/{deviceId}/status
    method: GET
    data_selector: status
    params: {}
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: User
  endpoint:
    path: /reference/getusers
    method: GET
- name: account
  endpoint:
    path: /resellers/{resellerId}/accounts
    method: POST
    data_selector: response
    params: {}
- name: device_connection_details
  endpoint:
    path: /devices/{deviceId}/connection/details
    method: GET
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: User
  endpoint:
    path: /reference/getusers
    method: GET
- name: account
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}
    method: GET
    data_selector: response
- name: Device Connection Details
  endpoint:
    path: /devices/{deviceId}/connection/details
    method: PATCH
- name: device_credentials
  endpoint:
    path: /devices/{deviceId}/connection/credentials
    method: GET
    data_selector: ''
- name: account
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}
    method: PATCH
    data_selector: response
- name: reseller_account_move
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/reseller/{targetResellerId}
    method: PUT
- name: device_connection_credentials
  endpoint:
    path: /devices/{deviceId}/connection/credentials
    method: PATCH
    data_selector: 'null'
    params:
      skipValidation: 'true'
- name: camera_slots
  endpoint:
    path: /accounts/{accountId}/subscription/cameraslots
    method: GET
    data_selector: response
- name: Device Credentials
  endpoint:
    path: /deviceTypes/{deviceTypeId}/credentials
    method: GET
- name: users
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/users
    method: GET
- name: accounts
  endpoint:
    path: /resellers/{resellerId}/accounts
    method: GET
    data_selector: records
- name: add_user
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/users
    method: POST
- name: account
  endpoint:
    path: /resellers/{resellerId}/accounts
    method: POST
- name: user
  endpoint:
    path: /reference/getusers
    method: GET
- name: user
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/users/{userId}
    method: GET
- name: reseller_accounts
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}
    method: GET
    data_selector: response
    params: {}
- name: users
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/users/{userId}
    method: PATCH
- name: account
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}
    method: PATCH
    data_selector: response
    params: {}
- name: delete_user
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/users/{userId}
    method: DELETE
- name: user_credentials
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/users/{userId}/credentials
    method: GET
    data_selector: credentials
    params: {}
- name: reseller_account_move
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/reseller/{targetResellerId}
    method: PUT
    data_selector: response
    params: {}
- name: User Credentials
  endpoint:
    path: /reference/getusercredentials
    method: GET
- name: user_credentials
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/users/{userId}/credentials
    method: PATCH
- name: camera_slots
  endpoint:
    path: /accounts/{accountId}/subscription/cameraslots
    method: GET
    data_selector: response
- name: all_users
  endpoint:
    path: /resellers/all/accounts/all/users
    method: GET
    data_selector: users
- name: users
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/users
    method: GET
    data_selector: users
    params: {}
- name: users
  endpoint:
    path: /reference/getusers
    method: GET
    data_selector: users
- name: get_all_users
  endpoint:
    path: /resellers/self/accounts/all/users
    method: GET
- name: add_user
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/users
    method: POST
- name: subscriptions
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/subscriptions
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/users/{userId}
    method: GET
- name: subscriptions
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/subscriptions
    method: POST
- name: user
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/users/{userId}
    method: PATCH
- name: subscriptions
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/subscriptions/{subscriptionId}
    method: GET
- name: user
  endpoint:
    path: /reference/getusers
    method: GET
    data_selector: users
- name: delete_user
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/users/{userId}
    method: DELETE
- name: delete_subscription
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/subscriptions/{subscriptionId}
    method: DELETE
- name: user_credentials
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/users/{userId}/credentials
    method: GET
    data_selector: credentials
- name: User Credentials
  endpoint:
    path: /reference/getusercredentials
    method: GET
- name: reseller_subscription
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/subscriptions/{subscriptionId}
    method: PATCH
- name: update_user_credentials
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/users/{userId}/credentials
    method: PATCH
- name: cameras
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/cameras/all/summary
    method: GET
    data_selector: summary
- name: all_users
  endpoint:
    path: /resellers/all/accounts/all/users
    method: GET
    data_selector: users
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Camera Status
  endpoint:
    path: /reference/getcamerastatus-1
    method: GET
- name: Camera Location
  endpoint:
    path: /reference/getaccountcameralocations-1
    method: GET
- name: camera_summary
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/cameras/{cameraId}/summary/details
    method: GET
- name: users
  endpoint:
    path: /resellers/self/accounts/all/users
    method: GET
    data_selector: records
    params: {}
- name: current_user
  endpoint:
    path: /users/self
    method: GET
    data_selector: response
    params: {}
- name: subscriptions
  endpoint:
    path: /reference/getsubscriptionrights-1
    method: GET
- name: subscriptions
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/subscriptions
    method: GET
- name: distributors
  endpoint:
    path: /distributors
    method: GET
    data_selector: records
    params: {}
- name: distributor
  endpoint:
    path: /distributors
    method: POST
    data_selector: response
    params: {}
- name: subscriptions
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/subscriptions
    method: POST
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
    data_selector: events
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
    data_selector: cameras
- name: distributor
  endpoint:
    path: /distributors/{distributorId}
    method: GET
- name: subscriptions
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/subscriptions/{subscriptionId}
    method: GET
- name: distributors
  endpoint:
    path: /distributors/{distributorId}
    method: PATCH
- name: distributor_details
  endpoint:
    path: /distributors/{distributorId}/details
    method: GET
- name: delete_subscription
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/subscriptions/{subscriptionId}
    method: DELETE
- name: distributor_details
  endpoint:
    path: /rest/v2.0/distributors/{distributorId}/details
    method: PATCH
- name: distributor_count
  endpoint:
    path: /distributors/{distributorId}/count
    method: GET
- name: resellers
  endpoint:
    path: /resellers
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/subscriptions/{subscriptionId}
    method: PATCH
    data_selector: response
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: User
  endpoint:
    path: /reference/getusers
    method: GET
- name: cameras
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/cameras/all/summary
    method: GET
    data_selector: summary
    params: {}
- name: helpdesk
  endpoint:
    path: /resellers/self/accounts/{accountId}/users/{userId}/applications/desktop/helpdesk
    method: GET
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: User Base
  endpoint:
    path: /reference/getusers
    method: GET
- name: mobile_helpdesk
  endpoint:
    path: /resellers/self/accounts/{accountId}/users/{userId}/applications/mobile/helpdesk
    method: GET
- name: single_camera_summary
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/cameras/{cameraId}/summary/details
    method: GET
- name: profiles
  endpoint:
    path: /accounts/{accountId}/permissionProfiles
    method: GET
    data_selector: profiles
- name: current_user
  endpoint:
    path: /users/self
    method: GET
    data_selector: response
- name: distributors
  endpoint:
    path: /reference/getdistributors
    method: GET
- name: permission_profiles
  endpoint:
    path: /accounts/{accountId}/permissionProfiles
    method: POST
- name: distributors
  endpoint:
    path: /distributors
    method: GET
    data_selector: records
- name: distributor
  endpoint:
    path: /distributors
    method: POST
    data_selector: null
    params: {}
- name: profile
  endpoint:
    path: /accounts/{accountId}/permissionProfiles/{profileId}
    method: GET
    data_selector: profile
- name: distributor
  endpoint:
    path: /distributors/{distributorId}
    method: GET
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
    params: {}
- name: profile
  endpoint:
    path: /accounts/{accountId}/permissionProfiles/{profileId}
    method: PATCH
    data_selector: records
    params: {}
- name: delete_profile
  endpoint:
    path: /accounts/{accountId}/permissionProfiles/{profileId}
    method: DELETE
- name: distributor
  endpoint:
    path: /distributors/{distributorId}
    method: PATCH
- name: distributor_details
  endpoint:
    path: /distributors/{distributorId}/details
    method: GET
    data_selector: details
- name: account
  endpoint:
    path: /accounts
    method: GET
- name: permissionProfiles
  endpoint:
    path: /accounts/{accountId}/permissionProfiles
    method: GET
- name: distributor_details
  endpoint:
    path: /rest/v2.0/distributors/{distributorId}/details
    method: PATCH
- name: resellers
  endpoint:
    path: /resellers
    method: GET
    data_selector: resellers
- name: reseller
  endpoint:
    path: /resellers
    method: POST
    data_selector: response
    params: {}
- name: distributor_count
  endpoint:
    path: /distributors/{distributorId}/count
    method: GET
    data_selector: counts
    params: {}
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: User
  endpoint:
    path: /reference/getusers
    method: GET
- name: reseller
  endpoint:
    path: /resellers/{resellerId}
    method: GET
- name: helpdesk
  endpoint:
    path: /resellers/self/accounts/{accountId}/users/{userId}/applications/desktop/helpdesk
    method: GET
    data_selector: response
    params: {}
- name: reseller
  endpoint:
    path: /resellers/{resellerId}
    method: PATCH
- name: mobile_helpdesk
  endpoint:
    path: /resellers/self/accounts/{accountId}/users/{userId}/applications/mobile/helpdesk
    method: GET
- name: reseller
  endpoint:
    path: /resellers/{resellerId}/distributor/{distributorId}
    method: PUT
- name: reseller_details
  endpoint:
    path: /resellers/{resellerId}/details
    method: GET
- name: permission_profiles
  endpoint:
    path: /accounts/{accountId}/permissionProfiles
    method: GET
    data_selector: profiles
- name: reseller_details
  endpoint:
    path: /rest/v2.0/resellers/{resellerId}/details
    method: PATCH
- name: permission_profiles
  endpoint:
    path: /accounts/{accountId}/permissionProfiles
    method: POST
- name: reseller_count
  endpoint:
    path: /resellers/{resellerId}/count
    method: GET
    data_selector: object_counts
- name: subscriptions
  endpoint:
    path: /reference/getavailableeventtypes
    method: GET
- name: profile
  endpoint:
    path: /accounts/{accountId}/permissionProfiles/{profileId}
    method: GET
    data_selector: profile
    params: {}
- name: available_subscriptions
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/availableSubscriptions
    method: GET
- name: token_generation
  endpoint:
    path: /resellers/self/accounts/{accountId}/users/{userId}/token
    method: POST
- name: permission_profile
  endpoint:
    path: /accounts/{accountId}/permissionProfiles/{profileId}
    method: PATCH
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: Event
  endpoint:
    path: /reference/getevents
    method: GET
- name: User
  endpoint:
    path: /reference/getusers
    method: GET
- name: helpdesk_url
  endpoint:
    path: /resellers/self/accounts/{accountId}/users/{userId}/applications/webapp/helpdesk
    method: GET
    data_selector: ''
- name: delete_profile
  endpoint:
    path: /accounts/{accountId}/permissionProfiles/{profileId}
    method: DELETE
- name: Camera
  endpoint:
    path: /reference/getcameras-1
    method: GET
- name: User Rights
  endpoint:
    path: /reference/getuserrights-1
    method: GET
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
- name: permission_profiles
  endpoint:
    path: /accounts/{accountId}/permissionProfiles/{profileId}/permissions
    method: PATCH
- name: resellers
  endpoint:
    path: /resellers
    method: GET
- name: end_user_token
  endpoint:
    path: /resellers/self/accounts/{accountId}/users/{userId}/token
    method: POST
    data_selector: access_token
- name: user_search
  endpoint:
    path: /resellers/self/accounts/all/users
    method: GET
    data_selector: users
- name: reseller
  endpoint:
    path: /resellers/{resellerId}
    method: GET
    data_selector: response
- name: cameras
  endpoint:
    path: /rest/v2.0/cameras/
    method: GET
    data_selector: ''
    params: {}
- name: camera_streams
  endpoint:
    path: /rest/v2.0/cameras/{cameraId}/streams
    method: GET
    data_selector: ''
    params: {}
- name: reseller
  endpoint:
    path: /resellers/{resellerId}
    method: PATCH
- name: cameras
  endpoint:
    path: /rest/v2.0/cameras/
    method: GET
    data_selector: ''
    params: {}
- name: recordings
  endpoint:
    path: /rest/v2.0/cameras/{cameraId}/recordings
    method: GET
    data_selector: ''
    params:
      includeUrlType: MP4HTTPS
      sortByRecordingIdOrder: DESC
- name: reseller_to_distributor
  endpoint:
    path: /resellers/{resellerId}/distributor/{distributorId}
    method: PUT
- name: CameraSniffer
  endpoint:
    path: /api/camerasniffer
    method: GET
    data_selector: devices
- name: Camera
  endpoint:
    path: /api/camera
    method: GET
    data_selector: camera
- name: reseller_details
  endpoint:
    path: /resellers/{resellerId}/details
    method: GET
- name: reseller_details
  endpoint:
    path: /resellers/{resellerId}/details
    method: PATCH
- name: reseller_count
  endpoint:
    path: /resellers/{resellerId}/count
    method: GET
- name: available_subscriptions
  endpoint:
    path: /resellers/{resellerId}/accounts/{accountId}/availableSubscriptions
    method: GET
- name: generate_token
  endpoint:
    path: /resellers/self/accounts/{accountId}/users/{userId}/token
    method: POST
- name: Account
  endpoint:
    path: /reference/getaccounts
    method: GET
    data_selector: records
- name: Token Generation
  endpoint:
    path: /reference/generatetoken-1
    method: POST
    data_selector: records
- name: end_user_access_token
  endpoint:
    path: /rest/v2.2/resellers/self/accounts/{accountId}/users/{userId}/token
    method: POST
    data_selector: access_token
- name: search_user
  endpoint:
    path: /resellers/self/accounts/all/users
    method: GET
    data_selector: users
- name: cameras
  endpoint:
    path: /rest/v2.0/cameras/
    method: GET
    data_selector: records
- name: camera_streams
  endpoint:
    path: /rest/v2.0/cameras/{camera_id}/streams
    method: GET
    data_selector: streams
- name: cameras
  endpoint:
    path: /rest/v2.0/cameras/
    method: GET
    data_selector: '[]'
- name: recordings
  endpoint:
    path: /rest/v2.0/cameras/529111/recordings
    method: GET
    data_selector: '[]'
    params:
      includeUrlType: MP4HTTPS
      sortByRecordingIdOrder: DESC
- name: timeline
  endpoint:
    path: /timeline
    method: POST
    data_selector: events
- name: DoorbellWizard
  endpoint:
    path: /api/doorbellwizard
    method: POST
    data_selector: result
notes:
- 'Adding a camera involves calling two APIs: Cameras API and Add Camera Status Poll
  API.'
- The timeout for the Add Camera Status Poll API call is 180 seconds.
- Developer must have a valid Eagle Eye Partner Agreement to use the API.
- Creates a new session for the authenticated user or partner.
- Uses OAuth2 for authentication.
- Authentication requires setup of connected app.
- update sequence for the account
- Wait for camera status to change to a terminal state (success or failure).
- Response to this request will be returned as soon as status is changed to added
  or failure, or if it times out after the timeout period of 180 seconds.
- Requires setup of connected app in CameraManager
- Response will be returned as soon as status is changed to added or failure, or if
  it times out after the timeout period of 180 seconds.
- If the camera doesn't support the settings provided, a conflict error is thrown.
- Get the list of currently active or previously finished camera related jobs.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Get the Wi-Fi connection status for the given camera.
- This list is cached for 15 seconds and thus the results might be up to 15 seconds
  old.
- If the camera is offline, an error is returned with http status code 400 and error
  code 14.
- save week-long push notification schedule
- Get cameras of a specific zone.
- Pagination is achieved by checking whether the Link header is returned in the response.
- If no link with relation 'next' is returned, that means there are no more events
  that match the criteria.
- For events without a snapshot the response will have a 404 return code and a body
  with a json Error object.
- Update a face sample
- Deletes a face sample
- Check whether the user is allowed to use CameraManager.
- Get basic information about a specific user like userId, accountId, email, firstName,
  lastName.
- Update permissions of a specified user.
- Authentication requires setup of connected app
- Updates the multi-factor authentication settings for the current user.
- This operation might take few seconds to fully complete after the API call returns
  successfully.
- The device may be rebooted during deletion. Make sure is fully restarted before
  adding it again in the system.
- Note that a Multi-channel device type can only be removed after all its cameras
  have been removed.
- Response will be returned as soon as the status is changed to 'added' or 'failure',
  or if it times out after 180 seconds.
- Response to this request will be returned as soon as the status is changed to 'added'
  or 'failure', or if it times out after the timeout period of 180 seconds.
- Get the credentials needed to establish a connection with a device.
- API version 2.4.1 includes various endpoints for camera management and monitoring.
- Updates an account and/or the account owner's information, returns a conflict error
  if contact email already exists.
- 'It is not possible to patch the following fields: active, accountOwnerId, clusterType,
  subscriptionId.'
- This api comes in hand when the device credentials have changed, for instance via
  device's web interface and you want to update the backend with the new credentials.
- Updates a user, returns a conflict error if contact email already exists.
- Delete a single user.
- Updates a user credentials
- While updating the user credentials all active tokens by the user are invalidated,
  resulting in the user having to login.
- Retrieves base info about currently logged in user.
- Uses OAuth2 for authentication
- Requires setup of connected app in API
- Requires setup of connected app in api
- Returns a conflict error message in case contact email already exists.
- A patch request can be made after creation to update the distributor's details.
- Profile contains a set of permissions.
- Updates a set of permissions for a single profile.
- Returns a conflict error if contact email already exists.
- When the partner is not a reseller, a resource not found error is thrown.
- Deletes a single profile and all permissions for that profile.
- The APIs are currently provided for free, but Eagle Eye Networks reserves the right
  to charge for the APIs in the future.
- The Dealer module 'Generate Access Token' needs to be enabled by support.
- The Dealer Dashboard admin user must have the 'Generate access token' permission.
- Before start using this API, we at CameraManager need to setup and configure the
  message queue before you can use this.
- Each message type has to be configured separately.
- HLS streams have a standard delay of 6 - 8 seconds.
- Our CSS can alter some HTML elements on your project if those elements have no added
  styling to them. This is because of the Vue UI library we use to build our Timeline.
  We suggest you import our CSS before your own CSS files, so your styling overwrites
  any changes the library might do to basic elements.
- 'iOS specific: NuboCamWizard''s callback onPreparedForConnection returns nothing.'
- 'iOS specific: NuboCamWizard''s method connectToCamera takes no parameters. User
  should connect to Wifi via Settings app, then return to app and call this method.'
- 'iOS specific: For iOS12 and higher you should add Access Wifi Information capability
  (Target Name - Capabilities) in order to use NuboCamWizard otherwise iOS would not
  grant SDK access to Wifi information.'
- 'Android specific: NuboCamWizard''s callback onPreparedForConnection returns list
  of available Nubocam Wifi Networks.'
- 'Android specific: NuboCamWizard''s method connectToCamera takes WifiNetwork object
  (returned with onPreparedForConnection callback) as input parameter.'
- 'Android specific: NuboCamWizard has additional method disconnectFromNuboCamWifi.'
- In Android CameraStreamer is rendering video frames directly into Surface while
  in iOS CameraStreamer returns video frames of desired output type.
- In case of multiple CameraStreamer instances usage it's generally advised to mute
  audio on all or all except one CameraStreamer instances.
- 'iOS specific: because both CameraStreamer and AudioInputClients accessing and mutating
  shared AVAudioSession instance, it is strongly recommended to mute audio at CameraStreamer
  instance before calling start method on AudioInputClient instance and unmuting audio
  at CameraStreamer instance after calling stop method on AudioInputClient instance.'
- 'iOS specific: DoorbellWizard''s callback onPreparedForConnection returns nothing.'
- 'iOS specific: DoorbellWizard''s method connectToCamera takes no parameters. User
  should connect to Wifi via Settings app, then return to app and call this method.'
- 'iOS specific: For iOS12 and higher you should add Access Wifi Information capability
  (Target Name - Capabilities) in order to use DoorbellWizard otherwise iOS would
  not grant SDK access to Wifi information.'
- 'Android specific: DoorbellWizard''s callback onPreparedForConnection returns list
  of available Doorbell Wifi Networks.'
- 'Android specific: DoorbellWizard''s method connectToCamera takes WifiNetwork object
  (returned with onPreparedForConnection callback) as input parameter.'
- 'Android specific: DoorbellWizard''s has additional method disconnectFromDoorbellWifi.'
- Retrieves URL to open helpdesk for accountId and userId specified.
- 'iOS specific: For iOS12 and higher you should add Access Wifi Information capability
  in order to use DoorbellWizard otherwise iOS would not grant SDK access to Wifi
  information.'
- 'Android specific: DoorbellWizard''s method connectToCamera takes WifiNetwork object
  as input parameter.'
- In case the access_token expires, the refresh_token can be used to obtain a new
  access_token.
- The Dealer module 'Generate Access Token' needs to be enabled by the support team.
- Requires an access token to be passed with each REST API call.
- HLS live video streams have a standard delay of 6 - 8 seconds.
- The highlighted differences are the most used methods of our SDKs. The methods presented
  from CMMobileSDK (v2) in this page are enough for basic setup and usage.
- Camera footage settings should be set to h.264 encoding, cameras recording to MJPEG
  and MPEG4 are not supported.
- The audio is not supported in Firefox.
- THIS FEATURE IS IN ACTIVE DEVELOPMENT AND NOT FINISHED. PLEASE CONTACT SUPPORT@EEN.COM
  IF YOU WANT TO USE THIS
- Device language will be set by the SDK. Supported languages are English, Dutch,
  German, Spanish, Turkish.
- SDK will ask AccessTokenProviderDelegate to provide access token when required.
- 'iOS specific: For iOS12 and higher you should add Access Wifi Information capability
  in order to use NuboCamWizard otherwise iOS would not grant SDK access to Wifi information.'
- In iOS the CameraStreamer constructor takes CALayer parameter (most commonly obtained
  via view.layer property).
- In Android the CameraStreamer constructor takes Surface parameter (most commonly
  obtained via TextureView::getSurfaceTexture() method).
- 'In Android takeSnapshot() method is absent because the video decoder works directly
  with passed Surface object and therefore doesn''t have access to raw frames. There
  is an easy and convenient way to take snapshot though: TextureView::getBitmap()
  method (the same view that holds the Surface from the previous step).'
- 'iOS specific: User should connect to Doorbell wifi network manually using Settings
  app.'
- Some objects like CameraStreamer may require specific parameters for method calls.
- In Android take takeSnapshot() method is absent because the video decoder works
  directly with passed Surface object and therefore doesn't have access to raw frames.
- The highlighted differences are the most used methods of our SDKs. The methods presented
  from CMMobileSDK (v2) in this page are enough for basic setup and usage. They should
  replace (after the SDK installation) the old methods. Also, any other method implementations
  from the old SDK that were not highlighted here should be removed as well.
- Due to the large spectrum of color formats available on Android devices, we dropped
  support for the raw frame decoding and adopted the use of the Surface for video
  playback, in order to assure support for a bigger range of devices. Performance
  wise, the Surface-based implementation is faster than the raw frame one.
- Sample app does not contain access token retrieving logic.
errors:
- 'unsupportedModel: The device is not supported, you can only add supported models
  to the account.'
- 'notOnline: The device wasn''t able to connect to the cloud. Please make sure the
  device is connected to a power source and has a stable internet connection.'
- 'notConnected: The device wasn''t able to connect to the cloud. Please make sure
  the device is connected to a power source and has a stable internet connection.'
- 'localUrlValidationFailed: Problem detected with your device. Please restart or
  factory reset the device.'
- 'hwIdRegistrationFailed: The device is already added to an account, please remove
  the device from the current account before adding it to a new account.'
- 'failedAddingDeviceAfterValidation: The device was validated successfully, but an
  unexpected error occurred afterward. Please try again later.'
- 'deviceIdentificationFailed: Something went wrong. The device could not be identified.
  Please restart or factory reset the device and try again.'
- 'credentialValidationFailed: The device doesn''t have the default credentials. Please
  factory reset your device or make sure your device has the default credentials.
  Try again after this.'
- 'credentialSetupFailed: Unknown error. The application has encountered an unknown
  error, try again later. If the problem persists, contact support.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Camera doesn''t support edge storage'
- '409 Conflict: Camera is offline'
- '400: Bad Request - Camera doesn''t support edge storage'
- '409: Conflict - Camera is offline'
- '400: Camera is offline'
- '400: Not all cameras are capable of removing a network'
- '400: Camera is offline, error code 14'
- '400: The supplied object is invalid.'
- '401: You are not authenticated.'
- '403: You have no permission to access the specified resource.'
- '404: Referenced resource could not be found.'
- '406: The requested resource is capable of generating only content not acceptable
  according to the Accept headers sent in the request.'
- '400: Not all cameras are capable of this, in this case an error is returned with
  HTTP status code 400 and error code 11.'
- '500: Something went wrong in the server. Please try again.'
- '400: The supplied object is invalid. Error detail will contain the validation error.'
- '401: You are not authenticated. Please authenticate and try again.'
- 500 Something went wrong in the server. Please try again.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 401 You are not authenticated. Please authenticate and try again.
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '406: Not Acceptable'
- '404: Event does not have a snapshot'
- '401 Unauthorized: Check OAuth token'
- '409 Conflict: A Multi-channel device type can only be removed after all its cameras
  have been removed.'
- 'CONFLICT: Contact email already exists'
- 'Validation error: if test of new credentials fails, no changes will be saved.'
- 'RESOURCE_NOT_FOUND: The account does not exist'
- 'RESOURCE_NOT_FOUND: When the user does not exist'
- 'Conflict: Contact email already exists.'
- 'Conflict: The contact email already exists.'
- '401 Unauthorized: Recheck API key or credentials'
- '403 Forbidden: Check permissions for accessing the resource'
- '1: Internal error'
- '2: Parsing error'
- '3: Validation error'
- '4: Resource not found'
- '5: Duplicate resource'
- '6: Business rule violation'
- '7: Subscription limits error'
- '8: Authentication error'
- '9: Authorization error'
- '10: Unsupported operation'
- '11: Device capability not supported'
- '12: Device authentication error'
- '13: Device internal error'
- '14: Device offline error'
- '15: Server offline error'
- '16: Streamer error'
- '401 Unauthorized: Authentication failed while it is required for the request.'
- 'RESOURCE_NOT_FOUND: When the partner is not a reseller'
- '1: An internal error has occurred. Please try again later.'
- '2: The request could not be parsed correctly.'
- '3: The request was not valid according to semantic rules.'
- '4: A resource necessary to complete this request does not exist.'
- '5: The new resource could not be created as a resource with the same identifying
  information already exists.'
- '6: The request violated some business rule.'
- '7: The request could not be carried out because of a subscription limit.'
- '8: Authentication failed while it is required for the request.'
- '9: You are not authorized for this request.'
- '10: The request is not supported.'
- '11: The specific resource instance does not support the requested or required capability.'
- '12: Can''t carry out the request as the device reports the configured user credentials
  are incorrect.'
- '13: Can''t carry out the request as device reported an error or responded in an
  unexpected way. Please try again and/or restart the device.'
- '14: Can''t carry out request as the device is offline.'
- '15: Can''t reach server, request timeouted.'
- '16: There was a problem with the streamer.'
- '17: There was a problem with two-way audio.'
- 'internalError: An internal error has occurred.'
- 'parsingError: The request could not be parsed correctly.'
- 'validationError: The request was not valid according to semantic rules.'
- 'resourceNotFound: A resource necessary to complete this request does not exist.'
- 'duplicateResource: The new resource could not be created as a resource with the
  same identifying information already exists.'
- 'businessRuleViolation: The request violated some business rule.'
- 'subscriptionLimitsError: The request could not be carried out because of a subscription
  limit.'
- 'authenticationError: Authentication failed while it is required for the request.'
- 'authorisationError: You are not authorized for this request.'
- 'unsupportedOperation: The request is not supported.'
- 'deviceCapabiiltyNotSupported: The specific resource instance does not support the
  requested or required capability.'
- 'deviceAuthorizationError: Can''t carry out the request as the device reports the
  configured user credentials are incorrect.'
- 'deviceInternalError: Can''t carry out the request as device reported an error or
  responded in an unexpected way.'
- 'deviceOfflineError: Can''t carry out request as the device is offline.'
- 'serverOfflineError: Can''t reach server, request time outed.'
- '401 Unauthorized: Recheck API key or permissions'
- '401 Unauthorized: Recheck OAuth credentials.'
- '1: Internal error: An internal error has occurred. Please try again later.'
- '2: Parsing error: The request could not be parsed correctly.'
- '3: Validation error: The request was not valid according to semantic rules.'
- '4: Resource not found: A resource necessary to complete this request does not exist.'
- '5: Duplicate resource: The new resource could not be created as a resource with
  the same identifying information already exists.'
- '6: Business rule violation: The request violated some business rule.'
- '7: Subscription limits error: The request could not be carried out because of a
  subscription limit.'
- '8: Authentication error: Authentication failed while it is required for the request.'
- '9: Authorization error: You are not authorized for this request.'
- '10: Unsupported operation: The request is not supported.'
- '11: Device capability not supported: The specific resource instance does not support
  the requested or required capability.'
- '12: Device authentication error: Can''t carry out the request as the device reports
  the configured user credentials are incorrect.'
- '13: Device internal error: Can''t carry out the request as device reported an error
  or responded in an unexpected way. Please try again and/or restart the device.'
- '14: Device offline error: Can''t carry out request as the device is offline.'
- '15: Server offline error: Can''t reach server, request timeouted.'
- '16: Streamer error: There was a problem with the streamer.'
- '401 (unauthorised): You must set delegate before using SDK.'
- 'onError: Will get called if there''s an error in the process of adding/restoring
  Doorbell.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - AccessTokenProvider
  - AccessTokenProviderDelegate
  - MobileSDKError
  - WifiNetwork
client:
  base_url: http://rest.cameramanager.com/rest/v2.4.1
  headers:
    Accept: application/json
source_metadata: null
