resources:
- name: recommendations
  endpoint:
    path: /recommendations
    method: POST
    data_selector: results
- name: scoring_models
  endpoint:
    path: /stable/api/
    method: GET
    data_selector: scorers
- name: TopNRanker
  endpoint:
    path: /stable/api/lenskit.basic#lenskit.basic.TopNRanker
    method: GET
- name: SoftmaxRanker
  endpoint:
    path: /stable/api/lenskit.basic#lenskit.basic.SoftmaxRanker
    method: GET
- name: RandomSelector
  endpoint:
    path: /stable/api/lenskit.basic#lenskit.basic.RandomSelector
    method: GET
- name: LinearBlendScorer
  endpoint:
    path: /stable/guide/implementing.html
    method: GET
    data_selector: records
    params: {}
- name: data_convert
  endpoint:
    path: /data/convert
    method: GET
- name: data_describe
  endpoint:
    path: /data/describe
    method: GET
- name: data_fetch
  endpoint:
    path: /data/fetch
    method: GET
- name: doctor
  endpoint:
    path: /doctor
    method: GET
- name: version
  endpoint:
    path: /version
    method: GET
- name: entities
  endpoint:
    path: /entities
    method: GET
    data_selector: entities
    params: {}
- name: interactions
  endpoint:
    path: /interactions
    method: GET
    data_selector: interactions
    params: {}
- name: item_stats
  endpoint:
    path: /item_stats
    method: GET
    data_selector: item_stats
    params: {}
- name: user_stats
  endpoint:
    path: /user_stats
    method: GET
    data_selector: user_stats
    params: {}
- name: AttributeSet
  endpoint:
    path: /lenskit/data/AttributeSet
    method: GET
    data_selector: attributes
    params: {}
- name: RelationshipSet
  endpoint:
    path: /stable/api/lenskit.data.RelationshipSet
    method: GET
    data_selector: records
- name: MatrixRelationshipSet
  endpoint:
    path: /api/lenskit.data.MatrixRelationshipSet
    method: GET
    data_selector: relationships
    params: {}
- name: CSRStructure
  endpoint:
    path: /stable/api/lenskit.data.CSRStructure
    method: GET
    data_selector: records
- name: load_movielens
  endpoint:
    path: /api/lenskit.data.load_movielens
    method: GET
    data_selector: dataset
    params: {}
- name: ratings
  endpoint:
    path: path
    method: GET
    data_selector: ratings
- name: item_list
  endpoint:
    path: /item_list
    method: GET
    data_selector: records
    params: {}
- name: ItemList
  endpoint:
    path: /stable/api/lenskit.data.itemlist
    method: GET
    data_selector: records
- name: ItemListCollection
  endpoint:
    path: /stable/api/lenskit.data.itemlistcollection
    method: GET
    data_selector: records
- name: Vocabulary
  endpoint:
    path: /stable/api/lenskit.data.Vocabulary
    method: GET
    data_selector: records
- name: Node
  endpoint:
    path: /api/lenskit/pipeline/Node
    method: GET
    data_selector: Node
    params: {}
- name: topn_pipeline
  endpoint:
    path: /stable/api/lenskit.pipeline.topn_pipeline
    method: GET
- name: TrainingOptions
  endpoint:
    path: /lenskit/training/TrainingOptions
    method: GET
    data_selector: records
    params: {}
- name: Trainable
  endpoint:
    path: /lenskit/training/Trainable
    method: GET
    data_selector: records
    params: {}
- name: IterativeTraining
  endpoint:
    path: /lenskit/training/IterativeTraining
    method: GET
    data_selector: records
    params: {}
- name: BiasModel
  endpoint:
    path: /lenskit/basic/bias/BiasModel
    method: GET
    data_selector: BiasModel
- name: BiasConfig
  endpoint:
    path: /lenskit/basic/bias/BiasConfig
    method: GET
    data_selector: BiasConfig
- name: BiasScorer
  endpoint:
    path: /lenskit/basic/bias/BiasScorer
    method: GET
    data_selector: BiasScorer
- name: UserTrainingHistoryLookup
  endpoint:
    method: GET
- name: KnownRatingConfig
  endpoint:
    method: GET
- name: KnownRatingScorer
  endpoint:
    method: GET
- name: PopConfig
  endpoint:
    data_selector: score
- name: PopScorer
  endpoint:
    data_selector: item_pop_
- name: TimeBoundedPopConfig
  endpoint:
    data_selector: cutoff
- name: TimeBoundedPopScore
  endpoint:
    data_selector: item_scores_
- name: RandomConfig
  endpoint:
    path: /lenskit/basic/random/RandomConfig
    method: GET
    data_selector: parameters
    params: {}
- name: RandomSelector
  endpoint:
    path: /lenskit/basic/random/RandomSelector
    method: GET
    data_selector: parameters
    params: {}
- name: SoftmaxRanker
  endpoint:
    path: /lenskit/basic/random/SoftmaxRanker
    method: GET
    data_selector: parameters
    params: {}
- name: TopNConfig
  endpoint:
    path: /stable/api/lenskit.basic.topn.TopNConfig
    method: GET
    data_selector: parameters
    params: {}
- name: TopNRanker
  endpoint:
    path: /stable/api/lenskit.basic.topn.TopNRanker
    method: GET
    data_selector: parameters
    params: {}
- name: ItemKNNConfig
  endpoint:
    path: /lenskit/knn/item/ItemKNNConfig
    method: GET
    data_selector: parameters
    params: {}
- name: ItemKNNScorer
  endpoint:
    path: /lenskit/knn/item/ItemKNNScorer
    method: GET
    data_selector: parameters
    params: {}
- name: UserKNNConfig
  endpoint:
    path: /UserKNNConfig
    method: GET
    data_selector: config
    params: {}
- name: UserKNNScorer
  endpoint:
    path: /UserKNNScorer
    method: GET
    data_selector: scorer
    params: {}
- name: UserRatings
  endpoint:
    path: /UserRatings
    method: GET
    data_selector: ratings
    params: {}
- name: svd
  endpoint:
    path: /stable/api/lenskit.sklearn.svd
    method: GET
    data_selector: records
- name: BiasedSVDConfig
  endpoint:
    path: /lenskit/sklearn/svd/BiasedSVDConfig
    method: GET
    data_selector: parameters
    params:
      embedding_size: 50
      damping: 5
      algorithm: randomized
      n_iter: 5
- name: BiasedSVDScorer
  endpoint:
    path: /lenskit/sklearn/svd/BiasedSVDScorer
    method: GET
    data_selector: parameters
    params: {}
- name: FunkSVDConfig
  endpoint:
    path: /lenskit/funksvd/FunkSVDConfig
    method: GET
    data_selector: parameters
    params: {}
- name: FunkSVDScorer
  endpoint:
    path: /lenskit/funksvd/FunkSVDScorer
    method: GET
    data_selector: parameters
    params: {}
- name: Model
  endpoint:
    path: /lenskit/funksvd/Model
    method: GET
    data_selector: parameters
    params: {}
- name: BatchPipelineRunner
  endpoint:
    path: /stable/api/lenskit.batch.batchpipelinerunner
    method: GET
- name: BatchResults
  endpoint:
    path: /stable/api/lenskit.batch.batchresults
    method: GET
- name: predict
  endpoint:
    path: /stable/api/lenskit.batch.predict
    method: GET
- name: recommend
  endpoint:
    path: /stable/api/lenskit.batch.recommend
    method: GET
- name: InvocationSpec
  endpoint:
    path: /stable/api/lenskit.batch.invocationspec
    method: GET
- name: score
  endpoint:
    method: POST
- name: predict
  endpoint:
    method: POST
- name: recommend
  endpoint:
    method: POST
- name: run
  endpoint:
    method: POST
- name: BatchResults
  endpoint:
    path: /batch/results
    method: GET
    data_selector: outputs
    params: {}
- name: recommend
  endpoint:
    path: /lenskit/batch/recommend
    method: GET
- name: InvocationSpec
  endpoint:
    path: /api/lenskit.batch.InvocationSpec
    method: GET
    data_selector: components
- name: RankingMetricBase
  endpoint:
    path: /lenskit/metrics/rankingmetricbase
    method: GET
    data_selector: metrics
    params: {}
- name: RunAnalysisResult
  endpoint:
    path: /api/lenskit/metrics/RunAnalysisResult
    method: GET
    data_selector: results
- name: Precision
  endpoint:
    path: /stable/api/lenskit.metrics.Precision
    method: GET
    data_selector: metrics
- name: train
  endpoint:
    path: train
    method: GET
    data_selector: train_df
    params: {}
- name: test
  endpoint:
    path: test
    method: GET
    data_selector: test_df
    params: {}
- name: split_global_time
  endpoint:
    path: /stable/api/lenskit/splitting/split_global_time
    method: GET
    data_selector: data splits
    params: {}
- name: crossfold_users
  endpoint:
    path: /stable/api/lenskit.splitting.crossfold_users
    method: GET
    data_selector: data
    params: {}
- name: sample_users
- name: sample_users
  endpoint:
    path: /stable/api/lenskit/splitting/sample_users
    method: GET
    data_selector: train-test pairs
    params:
      data: Data frame containing ratings or other data
      size: The sample size
      method: The method for obtaining user test ratings
      repeats: The number of samples to produce
      test_only: If True, returns splits with empty training sets
      rng: The random number generator or seed
- name: LastFrac
  endpoint:
    path: /stable/api/lenskit/splitting/LastFrac.html
    method: GET
    data_selector: parameters
    params: {}
- name: LastN
  endpoint:
    path: /api/lenskit/splitting/LastN
    method: GET
    data_selector: n
    params:
      field: timestamp
- name: SampleFrac
  endpoint:
    path: /stable/api/lenskit/splitting/SampleFrac
    method: GET
    data_selector: parameters
    params: {}
- name: SampleN
  endpoint:
    path: /stable/api/lenskit/splitting/SampleN
    method: GET
    data_selector: parameters
    params: {}
- name: crossfold_records
  endpoint:
    path: /stable/api/lenskit/splitting/crossfold_records
    method: GET
    data_selector: iterator
    params: {}
- name: Monitor
  endpoint:
    path: /lenskit/logging/monitor/Monitor
    method: GET
- name: MonitorRefreshable
  endpoint:
    path: /lenskit/logging/monitor/MonitorRefreshable
    method: GET
- name: MonitorState
  endpoint:
    path: /lenskit/logging/monitor/MonitorState
    method: GET
- name: MonitorThread
  endpoint:
    path: /lenskit/logging/monitor/MonitorThread
    method: GET
- name: remove_internal
  endpoint:
    path: /lenskit/logging/processors/remove_internal
    method: GET
    data_selector: MutableMapping
    params: {}
- name: format_timestamp
  endpoint:
    path: /lenskit/logging/processors/format_timestamp
    method: GET
    data_selector: MutableMapping
    params: {}
- name: add_process_info
  endpoint:
    path: /lenskit/logging/processors/add_process_info
    method: GET
    data_selector: MutableMapping
    params: {}
- name: ResourceMeasurement
  endpoint:
    path: /lenskit/logging/resource
    method: GET
    data_selector: measurements
- name: Stopwatch
  endpoint:
    path: /api/lenskit.logging.stopwatch
    method: GET
    data_selector: Stopwatch
- name: Task
  endpoint:
    path: /tasks
    method: GET
    data_selector: records
- name: TaskStatus
  endpoint:
    path: /task_status
    method: GET
    data_selector: records
- name: normalize_sparse_rows
  endpoint:
    path: /normalize_sparse_rows
    method: GET
    data_selector: results
- name: torch_sparse_from_scipy
  endpoint:
    path: /torch_sparse_from_scipy
    method: GET
    data_selector: results
- name: torch_sparse_to_scipy
  endpoint:
    path: /torch_sparse_to_scipy
    method: GET
    data_selector: results
- name: WorkChunks
  endpoint:
    path: /lenskit/parallel/chunking/WorkChunks
    method: GET
    data_selector: WorkChunks
    params: {}
- name: ParallelConfig
  endpoint:
    path: /lenskit/parallel/config/ParallelConfig
    method: GET
    data_selector: records
    params: {}
- name: InProcessOpInvoker
  endpoint: {}
- name: gini
  endpoint:
    path: /gini
    method: POST
    data_selector: result
- name: argtopn
  endpoint:
    path: /argtopn
    method: POST
    data_selector: result
- name: inference_mode
  endpoint:
    path: /lenskit/torch/inference_mode
    method: GET
    data_selector: definition
- name: sparse_row
  endpoint:
    path: /lenskit/torch/sparse_row
    method: GET
    data_selector: definition
notes:
- The new changes will also enable new functionality that is planned for upcoming
  versions of LensKit, such as first-class content-based and hybrid models, and support
  for additional recommendation tasks such as session- or context-based recommendation.
- All configuration options must be named, no positional options are accepted.
- The pipeline lives in the lenskit.pipeline module
- Pipelines are built with a PipelineBuilder
- Pipelines are immutable after construction.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Component is designed for research and educational applications.
- Focus on implementing training and scoring logic.
- Batch facilities operate in parallel over test users
- This document is to provide guidance for what and how you should report, and how
  it maps to the LensKit code you are using.
- Automated reporting is not practical.
- LoggingConfig.apply() configures both Python standard library logging and structlog
  to log in a consistent format to stderr and to the log file, if configured.
- 'Any scripts that use LensKit’s process-based parallelism support must be import-protected:
  define functions and call a main function when run as a script.'
- Zero-copy conversions are used whenever possible, so client code must not modify
  returned data in-place.
- Item lists are to be treated as immutable — create a new list with modified data,
  do not do in-place modifications of the list itself or the arrays or data frame
  it returns.
- 'When an item list is pickled, it is pickled compactly but only for CPUs: the vocabulary
  is dropped.'
- Collect item lists with associated keys
- This method does not distinguish between an input being unspecified and explicitly
  specified as `None`.
- This method does *not* implement item-level fallbacks, only fallbacks at the level
  of entire results.
- The configuration is exposed through an instance variable `config`.
- Derived classes need to implement a `__call__` method to perform their operations.
- Create a pipeline that predicts ratings, but does not include any ranking capabilities.
  Mostly useful for testing and historical purposes.
- This API is at the full stability level; breaking changes for both callers and implementers
  will be reserved for annual major version bumps.
- Negative scores are clamped to (approximately) zero.
- This component must be used with queries containing the user’s history.
- FunkSVD is a regularized biased matrix factorization technique trained with featurewise
  stochastic gradient descent.
- Convenience function to batch-generate rating predictions (or other per-item scores)
  from a pipeline.
- If `test` is just a sequence of IDs, this method will still work, but it will score
  all candidate items for each of the IDs.
- Full stability level.
- Base class for most ranking metrics, implementing a k parameter for truncation.
- 'Deprecated since version 2025.1.1: Use measure() instead.'
- The additional normalization is experimental and should not yet be used for published
  research results.
- Randomly select a fraction of test rows per user/item.
- The task-tracking mechanism is currently designed to support large tasks.
- Support for computing chunks for parallel computation
- Experimental
errors:
- 'LK_LOG_LEVEL: The log level for console log output. Defaults to INFO.'
- 'LK_LOG_FILE: Path to a log file to receive log messages.'
- 'LK_LOG_FILE_LEVEL: The level for messages going to the log file. Defaults to the
  console log level.'
auth_info:
  mentioned_objects:
  - Component
  - TrainingOptions
  - Dataset
  - UserTrainingHistoryLookup
client:
  base_url: https://lkpy.lenskit.org
  headers:
    Accept: application/json
source_metadata: null
