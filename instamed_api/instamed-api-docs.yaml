resources:
- name: payable_batch_file
  endpoint:
    path: /digital-payouts/payable-batch-file-for-digital-payouts/
    method: GET
- name: acknowledgment_file
  endpoint:
    path: /digital-payouts/acknowledgment-file-for-digital-payouts/
    method: GET
- name: reconciliation_file
  endpoint:
    path: /digital-payouts/reconciliation-file-for-digital-payouts/
    method: GET
- name: single_sign_on
  endpoint:
    path: /Forms/SSO/ACS_SAML2.aspx
    method: POST
    data_selector: relayState
    params: {}
- name: one_time_payment
  endpoint:
    path: /payment/NVP.aspx
    method: POST
    data_selector: responseCode
    params: {}
- name: Single Sign-On
  endpoint:
    path: /Forms/SSO/ACS_SAML2.aspx
    method: POST
    data_selector: response
    params: {}
- name: One-Time Payment
  endpoint:
    path: /payment/NVP.aspx
    method: POST
    data_selector: response
    params: {}
- name: DoCreditCardAuthAndCapt
  endpoint:
    path: /payment/service.asmx?op=DoCreditCardAuthAndCapt
    method: POST
- name: DoECheckAuthAndCapt
  endpoint:
    path: /payment/service.asmx?op=DoECheckAuthAndCapt
    method: POST
- name: Single Sign-On
  endpoint:
    path: /providers/Forms/SSO/ACS_SAML2.aspx
    method: POST
    data_selector: responseActionType
    params: {}
- name: DoCreditCardAuthAndCapt
  endpoint:
    path: /payment/service.asmx?op=DoCreditCardAuthAndCapt
    method: POST
    data_selector: transactionID
    params: {}
- name: DoECheckAuthAndCapt
  endpoint:
    path: /payment/service.asmx?op=DoECheckAuthAndCapt
    method: POST
    data_selector: transactionID
    params: {}
- name: Payment Plan
  endpoint:
    path: /payment/NVP.aspx
    method: POST
    data_selector: response
    params: {}
- name: Payment Plan Receipt
  endpoint:
    path: /Forms/SSO/ACS_SAML2.aspx
    method: POST
    data_selector: relayState
    params: {}
- name: payment_posting
  endpoint:
    path: /consumer-payments/payment-posting/
    method: GET
- name: member_payments
  endpoint:
    path: /consumer-payments/member-payments/
    method: GET
- name: Payment Plan
  endpoint:
    path: /payment/NVP.aspx
    method: POST
    data_selector: response
    params: {}
- name: DoPaymentPlanCreate
  endpoint:
    path: /payment/service.asmx?op=DoPaymentPlanCreate
    method: POST
    data_selector: response
    params: {}
- name: payment_plan
  endpoint:
    path: /payment/NVP.aspx
    method: POST
    data_selector: response
    params: {}
- name: Payment Plan
  endpoint:
    path: /payment/NVP.aspx
    method: POST
    data_selector: response
    params: {}
- name: DoPaymentPlanCreate
  endpoint:
    path: /payment/service.asmx?op=DoPaymentPlanCreate
    method: POST
    data_selector: response
    params: {}
- name: payment
  endpoint:
    path: /payment/NVP.aspx
    method: POST
- name: credit_card_save_on_file
  endpoint:
    path: /payment/service.asmx?op=DoCreditCardSaveOnFile
    method: POST
- name: payment_plan_create
  endpoint:
    path: /payment/service.asmx?op=DoPaymentPlanCreate
    method: POST
- name: view_receipt
  endpoint:
    path: /Forms/SSO/ACS_SAML2.aspx
    method: POST
    data_selector: relayState
    params: {}
- name: view_payment_history
  endpoint:
    path: /Forms/SSO/ACS_SAML2.aspx
    method: POST
    data_selector: relayState
    params: {}
- name: payment_plan
  endpoint:
    path: /payment/NVP.aspx
    method: POST
- name: credit_card_save_on_file
  endpoint:
    path: /payment/service.asmx?op=DoCreditCardSaveOnFile
    method: POST
- name: payment_plan_create
  endpoint:
    path: /payment/service.asmx?op=DoPaymentPlanCreate
    method: POST
- name: payment_void
  endpoint:
    path: /payment/NVP.aspx
    method: POST
    data_selector: response
    params: {}
- name: do_credit_card_secondary_void
  endpoint:
    path: /payment/service.asmx?op=DoCreditCardSecondaryVoid
    method: POST
    data_selector: response
    params: {}
- name: view_receipt
  endpoint:
    path: /Forms/SSO/ACS_SAML2.aspx
    method: POST
    data_selector: null
    params:
      id: required
      responseActionType: required
      accountID: required
      securityKey: required
      ssoAlias: required
      userID: required
      userName: required
      consumerID: required
      consumerFirstName: required
      consumerLastName: required
      transactionID: required
- name: view_payment_history
  endpoint:
    path: /Forms/SSO/ACS_SAML2.aspx
    method: POST
    data_selector: null
    params:
      id: required
      responseActionType: required
      accountID: required
      securityKey: required
      ssoAlias: required
      userID: required
      userName: required
      consumerID: required
      consumerFirstName: required
      consumerLastName: required
- name: refund_payment
  endpoint:
    path: /payment/NVP.aspx
    method: POST
    data_selector: response
    params: {}
- name: do_credit_card_simple_refund
  endpoint:
    path: /payment/service.asmx?op=DoCreditCardSimpleRefund
    method: POST
    data_selector: response
    params: {}
- name: do_credit_card_credit
  endpoint:
    path: /payment/service.asmx?op=DoCreditCardCredit
    method: POST
    data_selector: response
    params: {}
- name: do_echeck_credit
  endpoint:
    path: /payment/service.asmx?op=DoECheckCredit
    method: POST
    data_selector: response
    params: {}
- name: Void Payment
  endpoint:
    path: /payment/NVP.aspx
    method: POST
    data_selector: response
    params: {}
- name: DoCreditCardSecondaryVoid
  endpoint:
    path: /payment/service.asmx?op=DoCreditCardSecondaryVoid
    method: POST
    data_selector: response
    params: {}
- name: Refund Payment SSO
  endpoint:
    path: /providers/Forms/SSO/ACS_SAML2.aspx
    method: POST
- name: NVP
  endpoint:
    path: /payment/NVP.aspx
    method: POST
- name: SOAP
  endpoint:
    path: /payment/service.asmx
    method: POST
- name: InstaMed Online
  endpoint:
    path: /providers/Form/PatientPayments/NewPatientPayment
    method: GET
- name: payment_methods
  endpoint:
    path: /digital-wallet/payment-methods
    method: GET
    data_selector: paymentMethods
- name: Single Sign-On
  endpoint:
    path: /Forms/SSO/ACS_SAML2.aspx
    method: POST
    data_selector: response
    params: {}
- name: Single Sign-On
  endpoint:
    path: /Forms/SSO/ACS_SAML2.aspx
    method: POST
    data_selector: relayState
    params:
      userName: testuser
      consumerID: '123456'
      accountID: Instamed.dev@instamed.net
      securityKey: A+8CE4xSnuH5nAJJ
      ssoAlias: PTPAY.DEV
      userID: testuser
      responseActionType: header
- name: Manage Payment Methods
  endpoint:
    path: /consumer-payments/member-payments/manage-payment-methods/
    method: GET
- name: Make a New Payment
  endpoint:
    path: /consumer-payments/member-payments/new-payment/
    method: POST
- name: View Payment History
  endpoint:
    path: /consumer-payments/member-payments/view-payment-history/
    method: GET
- name: View Receipt
  endpoint:
    path: /consumer-payments/member-payments/view-receipt/
    method: GET
- name: Real-Time Update via Webhook
  endpoint:
    path: /consumer-payments/member-payments/member-payments-webhook/
    method: POST
- name: manage_payment_methods
  endpoint:
    path: /consumer-payments/member-payments/manage-payment-methods/
    method: GET
- name: make_a_new_payment
  endpoint:
    path: /consumer-payments/member-payments/new-payment/
    method: POST
- name: view_payment_history
  endpoint:
    path: /consumer-payments/member-payments/view-payment-history/
    method: GET
- name: view_receipt
  endpoint:
    path: /consumer-payments/member-payments/view-receipt/
    method: GET
- name: real_time_update_via_webhook
  endpoint:
    path: /consumer-payments/member-payments/member-payments-webhook/
    method: POST
- name: Member Effectuation
  endpoint:
    path: /member/effectuation
    method: POST
    data_selector: effectuationData
- name: Member Payments
  endpoint:
    path: /consumer-payments/member-payments/
    method: GET
- name: Consumer Profile
  endpoint:
    path: /consumer-payments/consumer-profile/
    method: GET
- name: member_idf_import
  endpoint:
    path: /member_idf_import
    method: POST
    data_selector: records
    params: {}
- name: member_idf
  endpoint:
    path: /member-idf-import
    method: POST
    data_selector: records
- name: payment
  endpoint:
    path: /payment/NVP.aspx
    method: POST
    data_selector: ''
    params: {}
- name: sso
  endpoint:
    path: /Forms/SSO/ACS_SAML2.aspx
    method: POST
    data_selector: ''
    params: {}
- name: Single Sign-On
  endpoint:
    path: /Forms/SSO/ACS_SAML2.aspx
    method: POST
    data_selector: response
    params: {}
- name: One-Time Payment
  endpoint:
    path: /payment/NVP.aspx
    method: POST
    data_selector: response
    params: {}
- name: Payment Plan
  endpoint:
    path: /payment/NVP.aspx
    method: POST
    data_selector: response
    params:
      transactionType: CreditCard
      transactionAction: SaveOnFile
- name: payment
  endpoint:
    path: /payment/NVP.aspx
    method: POST
    data_selector: transactionID
    params:
      requestToken: 'true'
- name: credit_card_auth
  endpoint:
    path: /payment/service.asmx?op=DoCreditCardAuthAndCapt
    method: POST
    data_selector: transactionID
- name: echeck_auth
  endpoint:
    path: /payment/service.asmx?op=DoECheckAuthAndCapt
    method: POST
    data_selector: transactionID
- name: payment_plan
  endpoint:
    path: /payment/NVP.aspx
    method: POST
    data_selector: response
    params: {}
- name: payment_plan_create
  endpoint:
    path: /payment/service.asmx?op=DoPaymentPlanCreate
    method: POST
    data_selector: response
    params: {}
- name: payment_plan
  endpoint:
    path: /payment/NVP.aspx
    method: POST
    data_selector: response
    params: {}
- name: payment_posting
  endpoint:
    path: /payment/posting
    method: POST
    data_selector: data
    params: {}
- name: payment_plan_posting
  endpoint:
    path: /payment/plan/posting
    method: POST
    data_selector: data
    params: {}
- name: payment_plan
  endpoint:
    path: /payment/NVP.aspx
    method: POST
    data_selector: response
    params: {}
- name: payment_plan_create
  endpoint:
    path: /payment/service.asmx?op=DoPaymentPlanCreate
    method: POST
    data_selector: response
    params: {}
- name: Single Sign-On
  endpoint:
    path: /integration/single-sign-on
    method: POST
    data_selector: token
    params:
      relayState: target_url
      accountId: instamed_account_id
      securityKey: secret_password
      ssoAlias: group_mapping
- name: Single Sign-On
  endpoint:
    path: /sso
    method: POST
    data_selector: response
    params:
      relayState: target URL
      accountId: InstaMed account ID
      securityKey: Secret password
      ssoAlias: Maps to a group
- name: secure_token
  endpoint:
    path: /content/js/token.js
    method: GET
- name: payment_plans
  endpoint:
    path: /consumer-payments/payment-plans/
    method: GET
- name: automatic_payment_collection
  endpoint:
    path: /consumer-payments/automatic-payment-collection/
    method: GET
- name: receipts
  endpoint:
    path: /consumer-payments/receipts/
    method: GET
- name: voids
  endpoint:
    path: /consumer-payments/voids/
    method: GET
- name: refunds
  endpoint:
    path: /consumer-payments/refunds/
    method: GET
- name: payment_posting
  endpoint:
    path: /consumer-payments/payment-posting/
    method: GET
- name: consumer_profile
  endpoint:
    path: /consumer-payments/consumer-profile/
    method: GET
- name: member_payments
  endpoint:
    path: /consumer-payments/member-payments/
    method: GET
- name: user_management
  endpoint:
    path: /consumer-payments/user-management/
    method: GET
- name: payment_plans
  endpoint:
    path: /consumer-payments/payment-plans/
    method: GET
- name: payment_posting
  endpoint:
    path: /consumer-payments/payment-posting/
    method: GET
- name: member_payments
  endpoint:
    path: /consumer-payments/member-payments/
    method: GET
- name: MerchantPaymentTransactionNotificationWebhook
  endpoint:
    path: /webhook
    method: POST
- name: Get Token Status
  endpoint:
    path: /Forms/WebServices/SSOService.asmx
    method: GET
    data_selector: tokenStatus
    params: {}
- name: Get Transaction Details
  endpoint:
    path: /payment/NVP.aspx
    method: GET
    data_selector: transactionDetails
    params: {}
- name: MerchantPaymentTransactionNotification
  endpoint:
    path: /merchant/payment/transaction/notification
    method: POST
    data_selector: transaction_information
- name: Get Token Status
  endpoint:
    path: /Forms/WebServices/SSOService.asmx
    method: GET
- name: Get Transaction Details
  endpoint:
    path: /payment/NVP.aspx
    method: GET
- name: webhook_integration_fields
  endpoint:
    path: /webhook/integration/fields
    method: GET
    data_selector: fields
- name: GetSSOTokenStatus
  endpoint:
    path: /Forms/WebServices/SSOService.asmx
    method: POST
    data_selector: GetSSOTokenStatusResponse
    params: {}
- name: WebhookIntegration
  endpoint:
    path: /webhook/integration
    method: POST
    data_selector: fields
    params: {}
- name: GetSSOTokenStatus
  endpoint:
    path: /Forms/WebServices/SSOService.asmx
    method: POST
    data_selector: GetSSOTokenStatusResponse
    params: {}
- name: GetSSOTokenStatus
  endpoint:
    path: /Forms/WebServices/SSOService.asmx
    method: POST
    data_selector: GetSSOTokenStatusResult
- name: GetSSOTokenStatus
  endpoint:
    path: /Forms/WebServices/SSOService.asmx
    method: POST
    data_selector: GetSSOTokenStatusResult
- name: Single Sign-On
  endpoint:
    path: /integration/single-sign-on/
    method: POST
    data_selector: token
    params:
      relayState: Target URL
      accountId: InstaMed account ID
      securityKey: Secret password
      ssoAlias: Maps to a group
- name: new_payment_providers
  endpoint:
    path: /providers/Form/PatientPayments/NewPatientPaymentSSO
    method: GET
- name: new_payment_simple_providers
  endpoint:
    path: /providers/Form/PatientPayments/NewPaymentSimpleSSO
    method: GET
- name: new_payment_plan_providers
  endpoint:
    path: /providers/Form/PatientPayments/NewPaymentPlanSSO
    method: GET
- name: new_payment_plan_simple_providers
  endpoint:
    path: /providers/Form/PatientPayments/NewPaymentPlanSimpleSSO
    method: GET
- name: manage_card_on_file_providers
  endpoint:
    path: /providers/Form/PatientPayments/DoManageCardOnFileSSO
    method: GET
- name: simple_refund_providers
  endpoint:
    path: /providers/Form/PatientPayments/RefundPaymentSSO
    method: GET
- name: void_payment_providers
  endpoint:
    path: /providers/Form/PatientPayments/VoidPaymentSSO
    method: GET
- name: view_receipt_providers
  endpoint:
    path: /providers/Form/PatientPayments/ViewReceiptSSO
    method: GET
- name: new_payment_payers
  endpoint:
    path: /payers/Form/PatientPayments/NewPatientPaymentSSO
    method: GET
- name: new_payment_simple_payers
  endpoint:
    path: /payers/Form/PatientPayments/NewPaymentSimpleSSO
    method: GET
- name: new_payment_plan_payers
  endpoint:
    path: /payers/Form/PatientPayments/NewPaymentPlanSSO
    method: GET
- name: new_payment_plan_simple_payers
  endpoint:
    path: /payers/Form/PatientPayments/NewPaymentPlanSimpleSSO
    method: GET
- name: manage_card_on_file_payers
  endpoint:
    path: /payers/Form/PatientPayments/DoManageCareOnFileSSO
    method: GET
- name: simple_refund_payers
  endpoint:
    path: /payers/Form/PatientPayments/RefundPaymentSSO
    method: GET
- name: void_payment_payers
  endpoint:
    path: /payers/Form/PatientPayments/VoidPaymentSSO
    method: GET
- name: view_receipt_payers
  endpoint:
    path: /payers/Form/PatientPayments/ViewReceiptSSO
    method: GET
- name: webhook_integration
  endpoint:
    path: /webhook/integration
    method: POST
    data_selector: fields
- name: webhook_integration_fields
  endpoint:
    path: /webhook/integration/fields
    method: GET
    data_selector: fields
    params: {}
- name: country_codes
  endpoint:
    path: /code-tables/country-codes/
    method: GET
    data_selector: codes
    params: {}
- name: address_verification_response_codes
  endpoint:
    path: /code-tables/address-verification-response-codes/
    method: GET
    data_selector: codes
    params: {}
- name: card_present_status_codes
  endpoint:
    path: /code-tables/card-present-status-codes/
    method: GET
    data_selector: codes
    params: {}
- name: card_verification_response_codes
  endpoint:
    path: /code-tables/card-verification-response-codes
    method: GET
    data_selector: codes
    params: {}
- name: card_verification_response_codes
  endpoint:
    path: /code-tables/card-verification-response-codes/
    method: GET
    data_selector: codes
    params: {}
- name: coverage_level_codes
  endpoint:
    path: /code-tables/coverage-level-code-eligibility-requests/
    method: GET
    data_selector: records
- name: coverage_level_codes
  endpoint:
    path: /code-tables/coverage-level-code-eligibility-requests/
    method: GET
    data_selector: codes
    params: {}
- name: reject_codes
  endpoint:
    path: /code-tables/eligibility-aaa-segment-loop-level-2110c-reject-codes/
    method: GET
    data_selector: reject_codes
    params: {}
- name: reject_codes
  endpoint:
    path: /code-tables/eligibility-aaa-segment-loop-level-2100c-reject-codes/
    method: GET
    data_selector: reject_codes
    params: {}
- name: eligibility_benefit_info_codes
  endpoint:
    path: /code-tables/eligibility-benefit-info-codes/
    method: GET
    data_selector: codes
    params: {}
- name: eligibility_response_codes
  endpoint:
    path: /code-tables/eligibility-response-code-definitions/
    method: GET
    data_selector: codes
    params: {}
- name: estimator_service_codes
  endpoint:
    path: /code-tables/estimator-service-codes
    method: GET
    data_selector: records
- name: follow_up_action_codes
  endpoint:
    path: /code-tables/follow-action-code-definitions/
    method: GET
    data_selector: codes
    params: {}
- name: eligibility_benefit_info_codes
  endpoint:
    path: /code-tables/eligibility-benefit-info-codes/
    method: GET
    data_selector: codes
    params: {}
- name: insurance_type_codes
  endpoint:
    path: /code-tables/insurance-type-codes-eligibility-response
    method: GET
    data_selector: codes
    params: {}
- name: estimator_service_codes
  endpoint:
    path: /code-tables/estimator-service-codes
    method: GET
    data_selector: service_codes
    params: {}
- name: market_segment_codes
  endpoint:
    path: /code-tables/market-segment-codes
    method: GET
    data_selector: codes
    params: {}
- name: patient_gender_codes
  endpoint:
    path: /code-tables/patient-gender-codes
    method: GET
    data_selector: codes
    params: {}
- name: patient_relationship_codes
  endpoint:
    path: /code-tables/patient-relationship-codes-eligibility-requests
    method: GET
    data_selector: codes
    params: {}
- name: payment_source_codes
  endpoint:
    path: /code-tables/payment-source-codes
    method: GET
    data_selector: codes
    params: {}
- name: insurance_type_codes
  endpoint:
    path: /code-tables/insurance-type-codes-eligibility-response/
    method: GET
    data_selector: records
- name: primary_provider_id_qualifier_codes
  endpoint:
    path: /code-tables/primary-provider-id-qualifier-codes-eligibility-requests/
    method: GET
    data_selector: codes
    params: {}
- name: market_segment_codes
  endpoint:
    path: /code-tables/market-segment-codes
    method: GET
    data_selector: codes
    params: {}
- name: Provider ID Codes
  endpoint:
    path: /code-tables/provider-id-codes-eligibility-requests/
    method: GET
    data_selector: codes
    params: {}
- name: patient_gender_codes
  endpoint:
    path: /code-tables/patient-gender-codes/
    method: GET
    data_selector: records
- name: code_table
  endpoint:
    path: /code-tables/quantity-qualifier/
    method: GET
    data_selector: records
    params: {}
- name: patient_relationship_codes
  endpoint:
    path: /code-tables/patient-relationship-codes-eligibility-requests
    method: GET
    data_selector: codes
    params: {}
- name: recipient_id_qualifiers
  endpoint:
    path: /code-tables/recipient-id-qualifiers/
    method: GET
    data_selector: records
    params: {}
- name: payment_source_codes
  endpoint:
    path: /code-tables/payment-source-codes
    method: GET
    data_selector: codes
    params: {}
- name: Primary Provider ID Qualifier Codes
  endpoint:
    path: /code-tables/primary-provider-id-qualifier-codes-eligibility-requests/
    method: GET
    data_selector: codes
    params: {}
- name: Secondary Subscriber/Patient ID Qualifiers
  endpoint:
    path: /code-tables/secondary-subscriber-patient-id-qualifiers/
    method: GET
    data_selector: records
- name: service_type_codes
  endpoint:
    path: /code-tables/service-type-codes/
    method: GET
    data_selector: codes
    params: {}
- name: quantity_codes
  endpoint:
    path: /quantity-codes
    method: GET
    data_selector: codes
    params: {}
- name: recipient_id_qualifiers
  endpoint:
    path: /code-tables/recipient-id-qualifiers/
    method: GET
    data_selector: records
- name: subscriber_patient_id_qualifiers
  endpoint:
    path: /code-tables/subscriber-patient-id-qualifiers/
    method: GET
    data_selector: code
    params: {}
- name: time_period_codes
  endpoint:
    path: /code-tables/time-period-qualifier/
    method: GET
    data_selector: codes
    params: {}
- name: Secondary Subscriber/Patient ID Qualifiers
  endpoint:
    path: /code-tables/secondary-subscriber-patient-id-qualifiers/
    method: GET
    data_selector: records
- name: service_type_codes
  endpoint:
    path: /code-tables/service-type-codes
    method: GET
    data_selector: codes
    params: {}
- name: GetSSOTokenStatus
  endpoint:
    path: /Forms/WebServices/SSOService.asmx
    method: POST
    data_selector: GetSSOTokenStatusResponse
- name: subscriber_patient_id_qualifiers
  endpoint:
    path: /code-tables/subscriber-patient-id-qualifiers
    method: GET
    data_selector: records
    params: {}
- name: GetSSOTokenStatus
  endpoint:
    path: /Forms/WebServices/SSOService.asmx
    method: POST
    data_selector: GetSSOTokenStatusResponse
    params: {}
- name: time_period_codes
  endpoint:
    path: /code-tables/time-period-qualifier/
    method: GET
    data_selector: codes
    params: {}
- name: GetSSOTokenStatus
  endpoint:
    path: /Forms/WebServices/SSOService.asmx
    method: POST
    data_selector: GetSSOTokenStatusResult
- name: GetSSOTokenStatus
  endpoint:
    path: /Forms/WebServices/SSOService.asmx
    method: POST
    data_selector: GetSSOTokenStatusResult
notes:
- InstaMed Connect uses industry leading transport encryption to protect data in transit.
- Authentication is not available for Member Payments when using the InstaMed Webhook
  interface.
- Connectivity requires 128 bit TLS security.
- Default text encoding is UTF-8, other encodings may be supported; please inquire.
- Accept cards and eChecks on web apps, mobile apps or IVR
- Payment methods can be saved and managed in a digital wallet
- Information is hosted on InstaMed. Card and payment data does not touch your servers.
  This significantly reduces your compliance costs and effort.
- Information is hosted on InstaMed. Card and payment data does not touch your servers.
- Recommended for new integrations where the user experience is heavily controlled
  by the software application.
- Connectivity requires 2048 bit TLS security.
- Card and payment data does not touch your servers. This significantly reduces your
  compliance costs and effort.
- Requires setup of connected app in InstaMed
- Requires setup of connected app in api
- Card and payment data does not touch your servers, reducing compliance costs.
- SAML authentication used to view receipt in the staff-facing experience
- SAML authentication is used to view payment history in the consumer-facing experience
- SAML authentication is used to view receipts.
- Single Sign-On allows passing user data using NVP or SAML.
- A void cannot be completed after the transfer of funds has been initiated, the timing
  of which may vary based on scenario.
- Single Sign-On (SSO) can use Name Value Pair (NVP) or SAML.
- HTTP POST Name Value Pair (NVP) is a simple to use format that works across all
  platforms.
- Some objects may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in instamed
- Uses OAuth2 with Single Sign-On for integration.
- Authentication token is only good for 15 minutes
- The InstaMed secure token can not be saved and has a time limit of 15 minutes.
- The InstaMed secure token can not be saved and has a time limit of 15 minutes
- Maintaining PCI compliance is expensive and time-consuming.
- 'Maintaining PCI compliance is the responsibility of all parties involved: vendor,
  hosting provider and merchant.'
- InstaMed Connect supports versions 3 through 5 of SFTP on the SSH 2 protocol.
- InstaMed Connect also supports FTPS.
- Webhook sends a simple HTTP POST containing the relevant transaction information
  in requested format (JSON, XML, NVP).
- InstaMed retries the webhook post every 30 minutes for up to five attempts.
- InstaMed Connect also supports FTPS, which adds support for Transport Layer Security
  (TLS) encryption.
- Polling can be implemented in javascript or client’s specific code.
- Webhook supports real-time notifications for various transaction statuses including
  Approved, Declined, Voided, Refunded, and more.
- Consult your Implementations Manager for specific requirements that may apply.
- Basic authentication using your InstaMed Account ID and password.
- Replace placeholders with actual values
- User-defined fields to be captured with the payment transaction.
- Used for retail stores. Track data must be given, the card is present, but there
  is no signature.
- Used for retail stores. Track data must be given, the card is present and a signature
  is given.
- Used for retail stores. The chip card is present and the EMV data block is given.
- Used for MOTO stores. There is no track data given.
- Used for eCommerce stores.
- Not currently used.
- The card was manually keyed in and not swiped. There is no track data given.
- Used for in app transactions leveraging Apple Pay.
- Used for NFC (Apple Pay, Digital Wallets, etc.) transactions.
- Required Application Data Missing
- Unable to Respond at Current Time
- Invalid/Missing Provider Identification
- Invalid/Missing Provider Specialty
- Invalid/Missing Provider State
- Invalid/Missing Referring Provider Identification Number
- Provider is Not Primary Care Physician
- Provider Not on File
- Service Dates Not Within Provider Plan Enrollment
- Inappropriate Date
- Invalid/Missing Date(s) of Service
- Invalid/Missing Date of birth
- Date of Birth Follows Date(s) of Service
- Date of Death Precedes Date(s) of Service
- Date of Service Not Within Allowable Inquiry Period
- Date of Service in Future
- Invalid/Missing Patient ID
- Invalid/Missing Patient Name
- Invalid/Missing Patient Gender Code
- Patient Not Found
- Duplicate Patient ID Number
- Patient Birth Date Does Not Match That for the Patient on the Database
- Invalid/Missing Subscriber/Insured ID
- Invalid/Missing Subscriber/Insured Name
- Invalid/Missing Subscriber/Insured Gender Code
- Subscriber/Insured Not Found
- Duplicate Subscriber/Insured ID Number
- Subscriber Found, Patient Not Found
- Subscriber/Insured Not in Group/Plan Identified
- Inquired Benefit Inconsistent with Provider Type
- Inappropriate Product/Service ID Qualifier
- Inappropriate Product/Service ID
- Inconsistent with Patient’s Age
- Inconsistent with Patient’s Gender
- A data element is erroneous
- Transaction rejected for some other reason than N, such as system unable to respond
- Service codes include various medical procedures and services.
- Contains codes for Male, Female, and Unknown
- Build a better healthcare payments experience with InstaMed
errors:
- errorCode=400&errorMessage=An unexpected error occurred
- ResponseCode=000&ResponseMessage=APPROVAL
- An error message is returned as a SOAP exception.
- '401 Unauthorized: Recheck SAML configuration or token expiration'
- 'responseCode=000: APPROVED'
- 'responseMessage=APPROVED: Transaction successful'
- 'transactionStatus=C: Transaction completed'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- HTTP status code 200 only if successfully stored the webhook message.
- If the initial webhook post is unsuccessful, InstaMed assigns a posting error workflow
  status after five attempts.
- '0A: ADDRESS MATCH Address match'
- '0B: ADDRESS MATCH Approved AVS (street address match postal codes, not verified
  due to Inc. FMT)'
- '0C: NO MATCH Approved AVS (street address and postal do not match codes, not verified)'
- '0D: EXACT MATCH Approved AVS (street address and postal codes match international)'
- '0E: Not a mail/phone order'
- '0F: EXACT MATCH Approved AVS (street address and postal codes match applies to
  U.K. only)'
- '0G: VER UNAVAILABLE Address verification unavailable'
- '0I: NO MATCH Approved AVS (address information not verified international)'
- '0M: EXACT MATCH Approved AVS (street address and postal code match international)'
- '0N: NO MATCH No match'
- '0P: ZIP MATCH Approved AVS (postal code match international)'
- '0R: RETRY Retry'
- '0S: SERV UNAVAILABLE Server unavailable'
- '0T: Zip Match'
- '0U: VER UNAVAILABLE Address verification unavailable'
- '0W: ZIP MATCH Zip code match'
- '0X: EXACT MATCH Exact match'
- '0Y: EXACT MATCH Exact match'
- '0Z: ZIP MATCH Zip code match'
- '15: Required Application Data Missing'
- '42: Unable to Respond at Current Time'
- '43: Invalid/Missing Provider Identification'
- '45: Invalid/Missing Provider Specialty'
- '47: Invalid/Missing Provider State'
- '48: Invalid/Missing Referring Provider Identification Number'
- '49: Provider is Not Primary Care Physician'
- '51: Provider Not on File'
- '52: Service Dates Not Within Provider Plan Enrollment'
- '56: Inappropriate Date'
- '57: Invalid/Missing Date(s) of Service'
- '58: Invalid/Missing Date of birth'
- '60: Date of Birth Follows Date(s) of Service'
- '61: Date of Death Precedes Date(s) of Service'
- '62: Date of Service Not Within Allowable Inquiry Period'
- '63: Date of Service in Future'
- '64: Invalid/Missing Patient ID'
- '65: Invalid/Missing Patient Name'
- '66: Invalid/Missing Patient Gender Code'
- '67: Patient Not Found'
- '68: Duplicate Patient ID Number'
- '71: Patient Birth Date Does Not Match That for the Patient on the Database'
- '72: Invalid/Missing Subscriber/Insured ID'
- '73: Invalid/Missing Subscriber/Insured Name'
- '74: Invalid/Missing Subscriber/Insured Gender Code'
- '75: Subscriber/Insured Not Found'
- '76: Duplicate Subscriber/Insured ID Number'
- '77: Subscriber Found, Patient Not Found'
- '78: Subscriber/Insured Not in Group/Plan Identified'
- 'N: A data element is erroneous'
- 'Y: Transaction rejected for some other reason than N, such as system unable to
  respond'
- '53: Inquired Benefit Inconsistent with Provider Type'
- '54: Inappropriate Product/Service ID Qualifier'
- '55: Inappropriate Product/Service ID'
- '69: Inconsistent with Patient’s Age'
- '70: Inconsistent with Patient’s Gender'
- REQ_MISSING fieldName "is missing"
- '"Missing field ''" fieldName "'' at position " fieldPostion'
- '"Value is too short (>=" + min + ""'
- '"Value is too long (<=" + max + ""'
- '"Routing Number must be 9 digits"'
- '"Value not of type Date (CCYYMMDD)."    "The date is logically invalid. Parsed
  value: " + fieldValue'
- '"Expected value to be phone (5557779999)."    "Expected Email Address (abc@def.com)"    "Password
  does not meet requirements"    "Invalid Routing Number"    fieldName + "must contain
  only alphabetical or numerical characters (''\_'', ''-'', and '';'' are allowed)."    "Invalid
  characters: " + (invalid characters)    "Expected Integer"    "Expected Decimal"    fieldName
  "expected an alpha numeric value. Encountered white space."'
- '"Value not of expected length(" + min + ""'
- '"Value not of type Date (CCYYMMDD)."    "The date is logically invalid. Parsed
  value: " + fieldValue    "Value not of type Date (CCYYMMDD)."    "Value not of type
  Date (CCYYMMDD)."    "The date is logically invalid. Parsed value: " + fieldValue    "Value
  not of type Date (CCYYMMDD or MMDDYY)."'
- '"Value not of expected length(" + min + ")"'
- '400: Bad Request Error'
- '401: Authentication Failed'
- '500: Internal Server Error'
- '501: Not Implemented Error'
- '503: Service Unavailable'
- '530: User Access Denied'
auth_info:
  mentioned_objects:
  - SAML
client:
  base_url: https://connect.instamed.com
  auth:
    type: basic
    location: header
    header_name: Authorization
source_metadata: null
