resources:
- name: info_chains
  endpoint:
    path: /v2/info/chains
    method: GET
    data_selector: data
- name: info_bridges
  endpoint:
    path: /v2/info/bridges
    method: GET
    data_selector: data
- name: fungible_route
  endpoint:
    path: /v2/fungible/route
    method: POST
    data_selector: data
- name: fungible_msgs
  endpoint:
    path: /v2/fungible/msgs
    method: POST
    data_selector: data
- name: fungible_msgs_direct
  endpoint:
    path: /v2/fungible/msgs_direct
    method: POST
    data_selector: data
- name: fungible_venues
  endpoint:
    path: /v2/fungible/venues
    method: GET
    data_selector: data
- name: tx_submit
  endpoint:
    path: /v2/tx/submit
    method: POST
    data_selector: data
- name: tx_track
  endpoint:
    path: /v2/tx/track
    method: POST
    data_selector: data
- name: tx_status
  endpoint:
    path: /v2/tx/status
    method: GET
    data_selector: data
- name: transaction_status
  endpoint:
    path: /v2/tx/status
    method: GET
- name: transaction_submit
  endpoint:
    path: /v2/tx/submit
    method: POST
- name: transaction_submit
  endpoint:
    path: /tx/submit
    method: POST
    data_selector: tx_hash
- name: transaction_status
  endpoint:
    path: /status
    method: GET
    data_selector: transfers
- name: transaction_status
  endpoint:
    path: /v2/tx/status
    method: GET
- name: fungible_route
  endpoint:
    path: /v2/fungible/route
    method: GET
- name: route
  endpoint:
    path: /route
    method: GET
- name: msgs_direct
  endpoint:
    path: /msgs_direct
    method: POST
- name: msgs
  endpoint:
    path: /msgs
    method: POST
- name: track
  endpoint:
    path: /track
    method: POST
- name: submit
  endpoint:
    path: /submit
    method: POST
- name: post_route
  endpoint:
    path: /v2/fungible/msgs
    method: POST
    data_selector: null
    params: {}
- name: route
  endpoint:
    path: /route
    method: POST
- name: msgs
  endpoint:
    path: /msgs
    method: POST
- name: msgs_direct
  endpoint:
    path: /msgs_direct
    method: POST
- name: fee_info
  endpoint:
    path: /route
    method: GET
    data_selector: estimated_fees
- name: msgs_direct
  endpoint:
    path: /msgs_direct
    method: GET
    data_selector: estimated_fees
- name: mainnet_contracts
  endpoint:
    path: /go/contracts/skip-go-contracts/mainnet
    method: GET
    data_selector: contracts
    params: {}
- name: testnet_contracts
  endpoint:
    path: /go/contracts/skip-go-contracts/testnet
    method: GET
    data_selector: contracts
    params: {}
- name: connectedAddresses
  endpoint:
    path: /connectedAddresses
    method: GET
    data_selector: addresses
    params: {}
- name: signerFunctions
  endpoint:
    path: /signerFunctions
    method: GET
    data_selector: signers
    params: {}
- name: gas_on_receive
  endpoint:
    path: /go/widget/gas-on-receive
    method: GET
    data_selector: records
    params: {}
- name: route
  endpoint:
    path: /route
    method: POST
    data_selector: routeResult
    params: {}
- name: transactionStatus
  endpoint:
    path: /transactionStatus
    method: POST
    data_selector: statusResult
    params: {}
- name: balances
  endpoint:
    path: /go/api-reference/prod/info/post-v2infobalances
    method: POST
    data_selector: balances
    params: {}
- name: getRecommendedGasPrice
  endpoint:
    path: /go/api-reference/prod/info/get-v2infogasprice
    method: GET
    data_selector: GasPrice
    params: {}
- name: getFeeInfoForChain
  endpoint:
    path: /go/api-reference/prod/info/get-v2infofee
    method: GET
    data_selector: FeeAsset
    params: {}
- name: executeRoute
  endpoint:
    path: /v2/fungible/route
    method: POST
- name: route
  endpoint:
    path: /route
    method: POST
    data_selector: routeResponse
- name: balances
  endpoint:
    path: /balances
    method: POST
    data_selector: userBalances
- name: GasOnReceive
  endpoint:
    path: /api/v1/gas-on-receive
    method: POST
    data_selector: data
    params: {}
- name: transaction_status
  endpoint:
    path: /v2/tx/status
    method: GET
    data_selector: state
    params: {}
- name: transaction_status
  endpoint:
    path: /v2/tx/status
    method: GET
    data_selector: state
    params: {}
- name: SvmTx
  endpoint:
    path: /submit
    method: POST
- name: experimental_features
  endpoint:
    path: /route
    method: GET
    data_selector: features
    params: {}
- name: cw20_tokens
  endpoint:
    path: /go/advanced-transfer/cw20-swaps
    method: GET
    data_selector: tokens
- name: transfer_sizes
  endpoint:
    path: /transfer/sizes
    method: GET
    data_selector: sizes
    params: {}
- name: fee_model
  endpoint:
    path: /fee/model
    method: GET
    data_selector: model
    params: {}
- name: stargate
  endpoint:
    path: /route
    method: POST
    data_selector: experimental_features
    params: {}
- name: eureka
  endpoint:
    path: /route
    method: POST
    data_selector: experimental_features
    params: {}
- name: layer_zero
  endpoint:
    path: /route
    method: POST
    data_selector: experimental_features
    params: {}
- name: transfer_sizes
  endpoint:
    path: /go/transfer_sizes
    method: GET
    data_selector: transfer_sizes
    params: {}
- name: supported_chains
  endpoint:
    path: /go/supported_chains
    method: GET
    data_selector: chains
    params: {}
- name: quote_quality_metrics
  endpoint:
    path: /go/advanced-swapping/understanding-quote-quality-metrics
    method: GET
    data_selector: metrics
    params: {}
- name: route
  endpoint:
    path: /fungible/route
    method: POST
    data_selector: response
    params: {}
- name: msgs
  endpoint:
    path: /fungible/msgs
    method: POST
    data_selector: response
    params: {}
- name: msgs_direct
  endpoint:
    path: /fungible/msgs_direct
    method: POST
    data_selector: response
    params: {}
- name: route
  endpoint:
    path: /v2/route
    method: POST
    data_selector: routeResponse
    params: {}
- name: chains
  endpoint:
    path: /v2/info/chains
    method: GET
- name: IMintableAndBurnable
  endpoint:
    path: /go/eureka/custom-erc20-integration
    method: GET
    data_selector: interface
    params: {}
- name: custom_erc20_registration
  endpoint:
    path: /setCustomERC20
    method: POST
    data_selector: results
    params: {}
- name: cosmoshub-0
  endpoint:
    path: /go/eureka/cosmoshub-0
    method: GET
    data_selector: Contract Address
    params: {}
- name: ledger-mainnet-1
  endpoint:
    path: /go/eureka/ledger-mainnet-1
    method: GET
    data_selector: Contract Address
    params: {}
- name: client-4
  endpoint:
    path: /go/eureka/client-4
    method: GET
    data_selector: Contract Address
    params: {}
- name: cosmoshub-0
  endpoint:
    path: /contract-addresses/cosmoshub-0
    method: GET
    data_selector: Contract Address
    params: {}
- name: ledger-mainnet-1
  endpoint:
    path: /contract-addresses/ledger-mainnet-1
    method: GET
    data_selector: Contract Address
    params: {}
- name: client-4
  endpoint:
    path: /contract-addresses/client-4
    method: GET
    data_selector: Contract Address
    params: {}
notes:
- API Keys have replaced client_id
- Keep your API key private.
- Skip Go API is free to use and integrate with.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Never attempt to derive an address on one chain from an address on another chain
- Activate Smart Relay (`smart_relay=true`) for global coverage of all chains, bridges,
  and routes
- Skip Go API is a universal interoperability platform.
- Supports tracking multiple independent routes initiated in a single transaction.
- Provides insight into the status of transactions across multiple chains and bridge
  hops.
- Users can view transaction details by navigating to explorer.skip.build and entering
  transaction hash and chain ID.
- Activate Smart Relay by setting smart_relay=true in /msgs_direct or /route.
- Use /submit to submit Smart Relay transactions to avoid issues.
- All post_route actions must be permissionless and support single-token input.
- Affiliate fees can only be collected on swaps.
- The sum of basisPointsFee values across all affiliates on the swap chain must equal
  the cumulative_affiliate_fee_bps set in the /route request.
- Fees for other bridges (IBC, Stargate, LayerZero, etc.) and other fee types like
  Swap or Gas are not yet included.
- Use the Skip Go Explorer for troubleshooting transactions.
- You need to request an API key from the core team to use Skip Go without limitations.
- Users are responsible for the transactions they sign in all cases.
- Automatically provides gas tokens on destination chains during cross-chain swaps
- Users can manually toggle the feature on/off via the widget interface
- Ensure that your Safe wallet is deployed on all relevant destination chains before
  initiating transfers.
- Your domain needs to be whitelisted to access Skip Go’s API endpoints.
- Your Skip API key is required for certain features.
- Must provide a list of user addresses for execution.
- Gas on Receive prevents users from getting stuck with assets they can’t use by automatically
  providing a small amount of native gas tokens on the destination chain.
- If gas route creation fails for any reason, the function returns the original route
  as mainRoute with gasRoute as undefined, allowing your swap to proceed without gas-on-receive.
- Gas balance detection is automatic when using getRouteWithGasOnReceive.
- Main swap should continue even if gas route fails.
- Main swap should continue even if gas route fails
- The `executeRoute` method now accepts `beforeMsg` and `afterMsg` parameter to allow
  for the execution of custom Cosmos messages before and/or after the route is executed.
- The `route` function accepts a `goFast` parameter to enable the Go Fast Transfers.
- The `executeRoute` method accepts a `svmFeePayer` parameter to specify a fee payer
  for Solana transactions.
- Failures might occur for each transaction in a multi-tx sequence
- Removed `SkipClient` class; use individual functions directly.
- Library build format changed from CommonJS to ES Modules.
- The overall transaction state indicates whether the transaction is pending, successful,
  has encountered an error, or has been abandoned.
- The response includes fields for determining transaction status.
- Skip Go API solves IBC token routing problem by sending assets to their origin chain
  and finding the shortest path to the destination chain.
- Uses API key for authentication
- Requires setup of connected app in Skip Go API
- Due to the difficult nature of including Solana transactions on chain during times
  of high network congestion, we HIGHLY recommend using the `/submit` endpoint to
  avoid dealing with complex retry logic and/or multiple RPC providers for submission
  reliability.
- Skip Go will always return required_erc20_approvals if there are any erc20 approvals
  needed for the route.
- At a high-level, basically any multi-chain action—in which the token is on the chain
  where it was issued for one stage of the action—requires multiple transactions.
- You cannot perform IBC transfer after purchasing a cw20 asset in 1 transaction.
- Highly recommend using the /submit endpoint to avoid dealing with complex retry
  logic and/or multiple RPC providers for submission reliability.
- The experimental_features parameter is used for rolling out new features in an opt-in
  fashion.
- CW20 tokens require multiple transactions for multi-chain actions.
- If a user is starting from an asset that is not USDC on the source chain, Skip Go
  will swap the asset to USDC on the source chain and the post-swap amount is used
  to see if it is within the min/max bounds of Go Fast transfer sizes.
- The `experimental_features` parameter accepts an array of strings, where each string
  identifies a feature.
- Slippage does not account for the impact of the user’s swap itself
- Not all tokens are listed on Coingecko
- Enabling Go Fast prioritizes speed over lower fees
- For more cost-efficient routes, it’s recommended to leave Go Fast disabled
- Above all else, we recommend setting `allow_unsafe=false`
- Slippage does not account for the impact of the user’s swap itself because this
  is incorporated in the estimate.
- A high price impact means the user’s swap size is large relative to the available
  on-chain liquidity.
- The `allow_unsafe` parameter in the requests to `/route` & `/msgs_direct` endpoints
  is designed to protect users from bad trade execution.
- Users should be alerted when price impact exceeds 2.5%
- Transactions should fail if the price impact exceeds 10%
- Recommends requiring additional steps of user approval for certain cases.
- Excessive warnings might annoy users who know they’re trading illiquid assets.
- This doc covers several UI/UX principles we recommend Skip Go API integrators implement
  to protect users from harming themselves by swapping at bad execution prices.
- The quote shown to the users should always match the transaction that they end up
  signing.
- Recommends requiring additional steps of user approval for transactions exceeding
  safety thresholds.
- Smart Swap refers to a feature set that improves swap speed, price, and control.
- Currently, the API supports EVM swapping on multiple chains.
- Smart Swap improves swap speed, price, and control.
- EVM swaps support bidirectional swaps between EVM chains and Cosmos chains.
- New chains often want Skip Go API to add support for their chain as a source + destination
  for tokens because the API powers cross-chain swaps + transfers in all the major
  cosmos wallets.
- The Skip Go API supports other bridges and interop protocols in addition to IBC,
  including Hyperlane, CCTP, and Axelar.
- New chains need to provide clear instructions for permissionlessly running a full
  node and joining the network.
- Guide assumes using IBC for interop
- Skip Go requires direct integration with the source chain to query chain state and
  balances, submit and monitor transactions, calculate accurate gas fees and handle
  chain-specific token mechanics.
- Skip Go requires direct integration with the source chain to query chain state and
  balances
- The Skip Go API’s swapping system is currently built in CosmWasm and can support
  swapping assets on Cosmos SDK modules.
- The Skip Go API’s swapping system is currently built in CosmWasm and can support
  swapping assets on Cosmos SDK modules and other CosmWasm contracts.
- API may require specific keys for access.
- 'No Wrapped Tokens: Assets are not wrapped or suffixed with bridge-specific identifiers
  (e.g., no ETH.axl)'
- 'Optimized Gas Consumption: Transfer from Ethereum to your chain, via Cosmos Hub
  for approximately $5 using fast mode and less than $1 for standard transfers'
- Access to the mint and burn functions must be strictly limited to the ICS20Transfer
  proxy.
- setCustomERC20 must be called before the first IBC transfer of the token.
- EVM chains do not have any form of governance, whereas Cosmos chains do.
- The actions of the pausing council are not time-locked to allow for a quick response
  time.
- The `ICS20Transfer` contract includes a permissioned method for registering a custom
  ERC20 via the `setCustomERC20` function.
- '`setCustomERC20` must be called before the first IBC transfer of the token to the
  chain where the custom ERC20 is deployed.'
- The Services are issued on an 'AS-IS' and 'AS AVAILABLE' basis.
- Skip does not control, maintain administrative rights over or operate the Protocol.
- Data may be hosted and operated in the United States
- Personal Data may be transferred to the U.S. pursuant to a data processing agreement
errors:
- 'STATE_ABANDONED: Tracking has stopped after 30 minutes without progress.'
- 'STATE_PENDING_ERROR: An error has occurred somewhere, but the error is currently
  propagating.'
- '400: insufficient fees; got: 0uosmo which converts to 0uosmo. required: 2000uosmo:
  insufficient fee'
- '1: error handling packet: see events for details'
- '11: out of gas in location: Loading CosmWasm module: sudo; gasWanted: 200000, gasUsed:
  259553: out of gas'
- '400: Invalid addresses will result in an error.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'If gas route fails: Your main swap continues normally, you just won’t receive the
  gas tokens'
- 'If main swap fails: You receive the gas tokens you paid for, plus any remaining
  funds in your original source token'
- Gas route failures don't affect main swap
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'STATE_COMPLETED_ERROR: Transaction finished, but an error occurred.'
- 'STATE_ABANDONED: Transaction was abandoned due to timeout or user action.'
- 'STATE_COMPLETED_ERROR: The transaction finished, but an error occurred.'
- 'STATE_ABANDONED: The transaction was abandoned.'
- 'BAD_PRICE_ERROR: swap execution price in route deviates too far from market price'
- 'LOW_INFO_ERROR: unable to determine route safety'
- 'Price impact warning: User''s swap size is large relative to the available on-chain
  liquidity.'
- 'BAD_PRICE_ERROR: Throttle API calls or reduce frequency'
- 'LOW_INFO_ERROR: Unable to determine route safety'
- 'INVALID_REQUEST: Check your input parameters'
- 'UNAUTHORIZED: Ensure your token is valid'
- 'FORBIDDEN: You do not have permission to access this resource'
- Greater than 10% difference in relative USD value in and out
- Greater than 10% price impact
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.skip.build
  auth:
    location: header
    header_name: authorization
source_metadata: null
