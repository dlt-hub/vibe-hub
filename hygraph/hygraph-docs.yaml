resources:
- name: campaign_member
  endpoint:
    path: /api/v1/campaign_members
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: content
  endpoint:
    path: /api/content
    method: GET
    data_selector: data
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
- name: leads
  endpoint:
    path: /v2/leads
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: accounts
  endpoint:
    path: /v2/accounts
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
- name: activities
  endpoint:
    path: /v2/activities
    method: GET
    data_selector: data
- name: CookieConsent
  endpoint:
    path: /cookieconsent
    method: GET
    data_selector: consent
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /v2/accounts
    method: GET
    data_selector: data
    params: {}
- name: Necessary
  endpoint:
    path: /cookies/necessary
    method: GET
- name: Preferences
  endpoint:
    path: /cookies/preferences
    method: GET
- name: Statistics
  endpoint:
    path: /cookies/statistics
    method: GET
- name: Marketing
  endpoint:
    path: /cookies/marketing
    method: GET
- name: session_data
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: data
- name: visitor_data
  endpoint:
    path: /api/v1/visitor_data
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /v2/accounts
    method: GET
    data_selector: data
    params: {}
- name: posts
  endpoint:
    path: /v1/posts
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: comments
  endpoint:
    path: /v1/comments
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: organizations
  endpoint:
    path: /v2/organizations
    method: GET
    data_selector: data
    params: {}
- name: visitor_data
  endpoint:
    path: /v1/visitor
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content_items
  endpoint:
    path: /api/content
    method: GET
    data_selector: items
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: files
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /v2/accounts
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /v2/people.json
    method: GET
    data_selector: data
- name: accounts
  endpoint:
    path: /v2/accounts.json
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
- name: companies
  endpoint:
    path: /v2/companies
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: organizations
  endpoint:
    path: /v2/organizations
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: leads
  endpoint:
    path: /v2/leads
    method: GET
    data_selector: data
    params: {}
- name: content
  endpoint:
    path: /v1/content
    method: GET
    data_selector: data
    params: {}
- name: leads
  endpoint:
    path: /v2/leads
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: data
    params: {}
- name: activities
  endpoint:
    path: /activities
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: activities
  endpoint:
    path: /v2/activities
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /v2/people
    method: GET
    data_selector: data
    params: {}
- name: companies
  endpoint:
    path: /v2/companies
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: opportunities
  endpoint:
    path: /v2/opportunities
    method: GET
    data_selector: data
    params: {}
- name: Necessary
  endpoint:
    path: /cookie/necessary
    method: GET
    data_selector: cookies
    params: {}
- name: Preferences
  endpoint:
    path: /cookie/preferences
    method: GET
    data_selector: cookies
    params: {}
- name: Statistics
  endpoint:
    path: /cookie/statistics
    method: GET
    data_selector: cookies
    params: {}
- name: Marketing
  endpoint:
    path: /cookie/marketing
    method: GET
    data_selector: cookies
    params: {}
- name: campaign_member
  endpoint:
    path: /api/v2/campaign_members
    method: GET
    data_selector: data
    params: {}
- name: contact
  endpoint:
    path: /api/v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: user_data
  endpoint:
    path: /api/userData
    method: GET
    data_selector: data
    params: {}
- name: CookieConsent
  endpoint:
    path: /cookieconsent
    method: GET
    data_selector: consentState
- name: test_cookie
  endpoint:
    path: /testcookie
    method: GET
    data_selector: cookieSupport
- name: contacts
  endpoint:
    path: /v2/contacts.json
    method: GET
    data_selector: data
- name: accounts
  endpoint:
    path: /v2/accounts.json
    method: GET
    data_selector: data
- name: graphql_endpoint
  endpoint:
    path: /v1/graphql
    method: POST
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: data
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts.json
    method: GET
    data_selector: data
    params: {}
- name: activities
  endpoint:
    path: /v2/activities.json
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content
  endpoint:
    path: /content
    method: GET
    data_selector: records
- name: people
  endpoint:
    path: /v2/people.json
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /v2/accounts.json
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts.json
    method: GET
    data_selector: data
    params: {}
- name: organizations
  endpoint:
    path: /v2/organizations.json
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: contacts
- name: organizations
  endpoint:
    path: /v2/organizations
    method: GET
    data_selector: organizations
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /v2/users.json
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts.json
    method: GET
    data_selector: data
    params: {}
- name: CookieConsent
  endpoint:
    path: /cookieconsent
    method: GET
    data_selector: state
- name: test_cookie
  endpoint:
    path: /testcookie
    method: GET
    data_selector: cookie_status
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
- name: activities
  endpoint:
    path: /v2/activities
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /v2/users
    method: GET
    data_selector: data
- name: prospects
  endpoint:
    path: /v2/prospects
    method: GET
    data_selector: data
- name: Necessary
  endpoint:
    path: /cookie/necessary
    method: GET
    data_selector: cookies
- name: Preferences
  endpoint:
    path: /cookie/preferences
    method: GET
    data_selector: cookies
- name: Statistics
  endpoint:
    path: /cookie/statistics
    method: GET
    data_selector: cookies
- name: Marketing
  endpoint:
    path: /cookie/marketing
    method: GET
    data_selector: cookies
- name: CookieConsent
  endpoint:
    path: /cookieconsent
    method: GET
    data_selector: state
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /v2/accounts
    method: GET
    data_selector: data
    params: {}
- name: CookieConsent
  endpoint:
    path: /cookieconsent
    method: GET
- name: test_cookie
  endpoint:
    path: /test_cookie
    method: GET
- name: people
  endpoint:
    path: /v2/people.json
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: accounts
  endpoint:
    path: /v2/accounts.json
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: CookieConsent
  endpoint:
    path: /path/to/cookieconsent
    method: GET
    data_selector: cookieConsentData
- name: contacts
  endpoint:
    path: /api/v2/contacts
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: accounts
  endpoint:
    path: /api/v2/accounts
    method: GET
    data_selector: data
    params: {}
- name: movies
  endpoint:
    path: /movies
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /api/v2/campaign_members
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /api/v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: cookies
  endpoint:
    path: /v1/cookies
    method: GET
    data_selector: cookies
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: accounts
  endpoint:
    path: /v2/accounts
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /v2/people.json
    method: GET
    data_selector: data
- name: organizations
  endpoint:
    path: /v2/organizations.json
    method: GET
    data_selector: data
- name: engagements
  endpoint:
    path: /v2/engagements
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /v2/people
    method: GET
    data_selector: data
- name: CookieConsent
  endpoint:
    path: /privacy-policy
    method: GET
    data_selector: cookie_consent_state
    params: {}
- name: campaign
  endpoint:
    path: /v2/campaigns
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: lead
  endpoint:
    path: /v2/leads
    method: GET
    data_selector: data
    params: {}
- name: leads
  endpoint:
    path: /leads
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts.json
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /v2/accounts.json
    method: GET
    data_selector: data
    params: {}
- name: leads
  endpoint:
    path: /v2/leads
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /api/v2/campaign_members
    method: GET
    data_selector: data
- name: contact
  endpoint:
    path: /api/v2/contacts
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /v2/accounts
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: visitor_data
  endpoint:
    path: /api/v1/visitor_data
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: campaigns
  endpoint:
    path: /v2/campaigns
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: leads
  endpoint:
    path: /v2/leads
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params: {}
- name: data
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /v2/accounts
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
- name: deals
  endpoint:
    path: /v2/deals
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: activities
  endpoint:
    path: /v2/activities
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
- name: activities
  endpoint:
    path: /v2/activities
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Necessary
  endpoint:
    path: /
    method: GET
    data_selector: cookies
    params: {}
- name: Preferences
  endpoint:
    path: /
    method: GET
    data_selector: cookies
    params: {}
- name: Statistics
  endpoint:
    path: /
    method: GET
    data_selector: cookies
    params: {}
- name: Marketing
  endpoint:
    path: /
    method: GET
    data_selector: cookies
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
- name: activities
  endpoint:
    path: /v2/activities
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: opportunities
  endpoint:
    path: /v2/opportunities
    method: GET
    data_selector: data
    params: {}
- name: posts
  endpoint:
    path: /v1/posts
    method: GET
    data_selector: data.posts
    params:
      incremental: updated_at
- name: comments
  endpoint:
    path: /v1/comments
    method: GET
    data_selector: data.comments
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: user_behavior
  endpoint:
    path: /v1/user_behavior
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: campaign
  endpoint:
    path: /v2/campaigns
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: activities
  endpoint:
    path: /v2/activities
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /api/v2/campaign_members
    method: GET
    data_selector: data
- name: contact
  endpoint:
    path: /api/v2/contacts
    method: GET
    data_selector: data
- name: campaigns
  endpoint:
    path: /api/v2/campaigns
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: leads
  endpoint:
    path: /api/v2/leads
    method: GET
    data_selector: data
    params: {}
- name: CookieConsent
  endpoint:
    path: /cookieconsent
    method: GET
    data_selector: consentState
- name: content
  endpoint:
    path: /api/content
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: data
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: content
  endpoint:
    path: /v1/content
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: content
  endpoint:
    path: /v1/content
    method: GET
    data_selector: items
    params: {}
- name: queries
  endpoint:
    path: /classic-docs/api-reference/content-api/queries
    method: GET
- name: mutations
  endpoint:
    path: /classic-docs/api-reference/content-api/mutations
    method: GET
- name: filtering
  endpoint:
    path: /classic-docs/api-reference/content-api/filtering
    method: GET
- name: ordering
  endpoint:
    path: /classic-docs/api-reference/content-api/ordering
    method: GET
- name: pagination
  endpoint:
    path: /classic-docs/api-reference/content-api/pagination
    method: GET
- name: content stages
  endpoint:
    path: /classic-docs/api-reference/content-api/content-stages
    method: GET
- name: localization
  endpoint:
    path: /classic-docs/api-reference/content-api/localization
    method: GET
- name: variables
  endpoint:
    path: /classic-docs/api-reference/content-api/variables
    method: GET
- name: rich text
  endpoint:
    path: /classic-docs/api-reference/content-api/rich-text-field
    method: GET
- name: headers
  endpoint:
    path: /classic-docs/api-reference/content-api/headers
    method: GET
notes:
- Necessary cookies help make a website usable by enabling basic functions like page
  navigation and access to secure areas of the website.
- The website cannot function properly without these cookies.
- Uses OAuth2 with refresh token — requires setup of connected app in SalesLoft
- Some objects may return nulls in deeply nested fields
- Requires API key for authentication
- Integrates with SalesLoft API for lead and contact data extraction.
- Ensure you have the necessary API permissions for data access.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- SalesLoft API requires OAuth2 for authentication.
- Rate limits are enforced on API calls.
- Requires setup of connected app in SalesLoft
- Some endpoints may have rate limits
- Rate limits are enforced and reaching limits will result in temporary suspension
  of access.
- SalesLoft API requires OAuth2 authentication with a refresh token.
- Durchblick bei aktuellen KI-Trends und was wirklich zählt – jenseits des Hypes
- 'Konkrete Erfolgsgeschichten: Intelligenter Einsatz generativer KI bei der Verwaltung
  von Produktstammdaten'
- 'KI live erleben: Unstrukturierte Daten werden automatisch zu BMECat-Standards'
- Virtuelle Assistenten, die Innen- und Außendienst spürbar effizienter gestalten
- 'Praxiserprobte Lösungen für typische Herausforderungen: Chaotische Produktdaten
  strukturieren und manuelle Aufwände eliminieren'
- Konkrete Schritte für das erste KI-Pilotprojekt – zum sofortigen Start
- Uses OAuth2 with refresh token — requires setup of connected app in Loom
- Requires token refresh for continuous access to the API
- Enterprise-grade security with compliance to privacy laws
- High availability with guaranteed uptime of 99.97%
- Necessary cookies help make a website usable by enabling basic functions like page
  navigation and access to secure areas of the website. The website cannot function
  properly without these cookies.
- Ensure correct OAuth scopes are set
- Uses OAuth2 with refresh token — requires setup of OAuth in Hygraph
- Some fields may return null if not set in the CMS
- Requires OAuth2 setup
- Check rate limits to avoid throttling
- Uses API key for authentication.
- Ensure to handle rate limits as per API specifications
- Cached requests are not rate-limited.
- Uncached requests that fetch content from the database are rate-limited.
- API calls are rate limited to 100 per minute.
- Ensure proper permissions are granted in the connected app.
- Requires OAuth2 authentication via SalesLoft.
- Rate limits apply to API requests.
- Rate limits are enforced at the account level.
- Ensure OAuth token is refreshed to maintain access.
- Requires setup of OAuth2 for user authentication
- Requires an active SalesLoft account
- Some endpoints may have rate limits that apply
- Uses OAuth2 with refresh token — requires setup of application in SalesLoft
- Pagination might be limited based on user permissions
- Content can be imported via the API of your project.
- Your content is live (if published) and query-able almost instantly, within < 1sec.
- Requires setup of OAuth2 credentials in SalesLoft
- API limits may apply based on account type
- This API requires authentication.
- Hygraph services are governed by a set of terms and conditions.
- The services are directed only to business customers.
- Uses OAuth2 with refresh token — requires setup of connected app in Hygraph
- We use services and storage systems of external service providers for the provision
  of Hygraph.
- Some endpoints may have rate limits that can affect data extraction.
- Ensure connected app is configured for OAuth2.
- Rate limits apply, check documentation for details.
- Ensure proper OAuth scopes are set for data access.
- The original GraphQL native headless CMS with Content Federation
- Ensure that the correct scopes are set for the OAuth2 token.
- Rate limits are enforced on a per-user basis.
- Data may be cached for performance.
- Requires setup of a connected app in SalesLoft.
- Content federation helps solve problems by offering a low-code approach to source
  data from multiple systems.
- Necessary cookies help make a website usable by enabling basic functions like page
  navigation.
- Preference cookies enable a website to remember information that changes the way
  the website behaves.
- Requires an active SalesLoft account and API key
- Requires user permissions for accessing data
- Rate limits apply for API usage
- SalesLoft API requires OAuth2 authentication.
- Rate limits apply to all API calls.
- Ensure to set up the correct permissions for the API key.
- Uses OAuth2 with refresh token for authentication.
- Rate limits apply to API usage.
- Requires API key for authentication.
- Requires OAuth2 authentication for accessing the API
- Rate limits apply to API requests
- Ensure OAuth2 is properly configured for the SalesLoft app.
- Rate limits apply. Be sure to check your API usage.
- Some fields may return nulls for certain records
- Requires setup of OAuth application in Hygraph
- Hygraph can Integrate all your existing backend services and business processes
  to deliver content from a unified content layer.
- Enterprise plans offer an uptime SLA of up to 99.9%, with optional dedicated hosting,
  choice of location and disaster recovery.
- Your data will be securely hosted on ISO 27001 certified and SOC2 Type 2 compliant
  data centers.
- Some endpoints require specific query parameters to function correctly.
- Some objects may return nulls in certain fields
- Uses OAuth2 with refresh token — requires setup of application in SalesLoft.
- API rate limits apply
- Requires setup of API token in Hygraph dashboard
- Rate limits are enforced, ensure to handle retries.
- Some endpoints may return paginated responses.
- Rate limits apply based on the endpoint.
- Hygraph automatically generates queries for fetching single and multiple entries
  for each defined content type belonging to your project.
- Requires OAuth2 setup with SalesLoft
- Rate limits are in place for API usage
- Rate limits may apply to API requests
- Requires OAuth2 authentication setup in SalesLoft
- Pagination may vary based on query parameters
- Ensure proper OAuth setup to access the API.
- Pagination may require handling additional parameters.
- Requires a connected app to be set up in SalesLoft.
- Ensure that the OAuth provider is correctly set up.
- Rate limits may apply depending on the endpoint.
- Watch livestreams on YouTube for real-time updates.
- Requires OAuth2 authentication to access data.
- Be aware of rate limits on API requests
- Some objects like Leads may return nulls in deeply nested fields
- Posts do not need to include Hygraph (or a CMS), but cannot heavily cover other
  Headless CMS solutions.
- Some API endpoints may have rate limits
- Ensure authorization token is valid before making requests.
- Requires setup of OAuth2 credentials in Hygraph
- Requires setting up an API token in the Hygraph dashboard
- 'Contains information about cache management through two different content API endpoints:
  the regular read & write endpoint, and the high performance read-only endpoint.'
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Invalid API key'
- '404 Not Found: Endpoint does not exist'
- '401 Unauthorized: Check if the access token is valid.'
- '404 Not Found: Verify the endpoint URL and resource availability.'
- '429 Too Many Requests: Implement retry logic for rate limits.'
- '403 Forbidden: Check your API token.'
- '404 Not Found: Verify the endpoint URL.'
- '429 Too Many Requests: Rate limit exceeded.'
- '403 Forbidden: Check API key or permissions'
- '404 Not Found: Verify endpoint path'
- '429 Too Many Requests: Rate limit exceeded'
- '403 Forbidden: Ensure proper permissions are set for the user.'
- '404 Not Found: Check the endpoint or resource ID.'
- '500 Internal Server Error: Try again later.'
- '401 Unauthorized: Check your credentials and token expiration.'
- '404 Not Found: Verify the endpoint path and parameters.'
- '401 Unauthorized: Ensure your token is valid'
- '403 Forbidden: Check your API access permissions'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify token validity'
- 'REQUEST_LIMIT_EXCEEDED: Reduce the number of API calls'
- 'QUERY_TIMEOUT: Optimize your queries'
- '401 Unauthorized: Check your OAuth token or permissions'
- '401 Unauthorized: Check your credentials'
- '404 Not Found: Ensure the endpoint is correct'
- '401 Unauthorized: Check API key validity'
- '401 Unauthorized: Check your authentication credentials'
- '429 Too Many Requests: Rate limit exceeded, try again later'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '429 Too Many Requests: Reduce the rate of API calls.'
- '401 Unauthorized: Check OAuth token and permissions.'
- '404 Not Found: Ensure the resource exists.'
- '401 Unauthorized: Check your API key and authentication.'
- '401 Unauthorized: Check your credentials and access token.'
- '403 Forbidden: You do not have permission to access this resource.'
- '401 Unauthorized: Validate access token'
- 'INVALID_TOKEN: Check if the token is expired or revoked.'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of API requests.'
- '401 Unauthorized: Check client credentials or token validity'
- '403 Forbidden: Ensure proper permissions are granted'
- '404 Not Found: Verify the requested resource exists'
- '401 Unauthorized: Check your OAuth token'
- '403 Forbidden: Check your permissions'
- '401 Unauthorized: Check client ID and secret'
- '404 Not Found: Verify the resource path'
- '429 Too Many Requests: Throttle your requests'
- '400 Bad Request: Check request parameters or body'
- '401 Unauthorized: Verify client credentials or token'
- '404 Not Found: Resource may not exist'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '500 Internal Server Error: Retry the request after some time'
- '401 Unauthorized: Check OAuth scopes or token expiration'
- '401 Unauthorized: Check your OAuth token and permissions.'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: Verify endpoint path.'
- '401 Unauthorized: Check your credentials and permissions.'
- '404 Not Found: Verify the endpoint and parameters.'
- '429 Too Many Requests: Rate limit exceeded, try again later.'
- 'INVALID_GRANT: Check the client ID and secret.'
- '401 Unauthorized: Token may be expired or invalid.'
- '401 Unauthorized: Check your token and permissions.'
- '401 Unauthorized: Check your OAuth token.'
- '403 Forbidden: Insufficient permissions.'
- '401 Unauthorized: Check your API key or OAuth token.'
- '404 Not Found: Verify the endpoint and your permissions.'
- '401 Unauthorized: Check if the access token is valid'
- '403 Forbidden: Verify if the user has permission to access this resource'
- '429 Too Many Requests: Exceeding rate limits'
- '403 Forbidden: Check user permissions'
- '429 Too Many Requests: You have exceeded your rate limit.'
- '401 Unauthorized: Invalid token or insufficient permissions.'
- '404 Not Found: Verify the endpoint URL'
- '401 Unauthorized: Check your API key or token.'
- '404 Not Found: Verify the endpoint path.'
- '429 Too Many Requests: Throttle API requests.'
- '401 Unauthorized: Check credentials or token expiration.'
- '401 Unauthorized: Check API key validity.'
- '401 Unauthorized: Invalid access token or insufficient permissions'
- '401 Unauthorized: Check your access token and scopes.'
- '404 Not Found: Verify the endpoint URL and resource ID.'
- '404 Not Found: The requested resource could not be found.'
- '401 Unauthorized: Invalid credentials. Check your token.'
- '401 Unauthorized: Verify OAuth credentials'
- '404 Not Found: Check the endpoint URL'
- '429 Too Many Requests: Throttle API calls'
- '429 Too Many Requests: Reduce the frequency of API calls'
- '401 Unauthorized: Check client credentials and token expiration'
- '401 Unauthorized: Check your authentication tokens.'
- '401 Unauthorized: Check OAuth token or permissions'
- '404 Not Found: Endpoint may be incorrect or resource does not exist'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Ensure your token is valid.'
- '401 Unauthorized: Check your access token'
- '401 Unauthorized: Recheck API token or permissions'
- '500 Internal Server Error: Check server status or contact support'
- '401 Unauthorized: Check client_id and client_secret'
- '404 Not Found: Verify endpoint paths'
- '429 Too Many Requests: Exceeded rate limit'
- '401 Unauthorized: Invalid credentials'
- '400 Bad Request: Check request parameters and payload'
- '401 Unauthorized: Invalid or expired access token'
- '404 Not Found: Verify endpoint URL'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: Verify your endpoint'
- '404 Not Found: Verify endpoint paths.'
- '429 Too Many Requests: Reduce request rate.'
- '401 Unauthorized: Check your API credentials.'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Verify your authentication credentials.'
- '429 Too Many Requests: Slow down your request rate.'
- '404 Not Found: Check the endpoint path'
- '403 Forbidden: Verify API key permissions'
- '401 Unauthorized: Check OAuth token.'
- 'RATE_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'INVALID_CREDENTIALS: Verify client_id and client_secret'
- '401 Unauthorized: Check OAuth token validity'
- '403 Forbidden: Check API key permissions.'
- '404 Not Found: Verify endpoint and parameters.'
- '401 Unauthorized: Check your credentials or token expiration'
- '401 Unauthorized: Check your API token and permissions'
- '404 Not Found: Ensure the endpoint exists'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - AccessToken
  - RefreshToken
  - OAuth2
  - ClientCredential
  - OAuth2Client
client:
  base_url: https://api.salesloft.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.salesloft.com/oauth/token
    client_id: '{{ dlt.secrets[''salesloft_client_id''] }}'
    client_secret: '{{ dlt.secrets[''salesloft_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''salesloft_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
  paginator:
    type: page
    page_size_param: per_page
    default_page_size: 100
source_metadata: null
