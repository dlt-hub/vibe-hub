resources:
- name: activities
  endpoint:
    path: /v1/{company_id}/activities
    method: GET
    data_selector: results
- name: assets
  endpoint:
    path: /v1/{company_id}/assets
    method: GET
    data_selector: results
- name: activity_data
  endpoint:
    path: /v1/{company_id}/electricity/activity_data
    method: POST
    data_selector: result
- name: activities
  endpoint:
    path: /v1/{company_id}/activities
    method: GET
    data_selector: data
- name: assets
  endpoint:
    path: /v1/{company_id}/assets
    method: GET
    data_selector: data
- name: electricity_activity_data
  endpoint:
    path: /v1/{company_id}/electricity/activity_data
    method: POST
    data_selector: data
- name: employee_travel_activity_data
  endpoint:
    path: /v1/{company_id}/employee_travel/activity_data
    method: POST
    data_selector: data
- name: waste_fractions
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params: {}
- name: electricity_activity
  endpoint:
    path: /v1/{company_id}/electricity/activity_data
    method: POST
    data_selector: results
    params: {}
- name: waste_fractions
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params: {}
- name: electricity_activity
  endpoint:
    path: /v1/{company_id}/electricity/activity_data
    method: POST
    data_selector: results
    params: {}
- name: waste_fractions
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params: {}
- name: fuel_activity
  endpoint:
    path: /v1/{company_id}/fuel_activity
    method: POST
    data_selector: results
    params: {}
- name: ghg_emission_activity
  endpoint:
    path: /v1/{company_id}/ghg_emission_activity
    method: POST
    data_selector: results
    params: {}
- name: waste_activity
  endpoint:
    path: /v1/{company_id}/waste_activity
    method: POST
    data_selector: results
    params: {}
- name: add_data_to_employee_travel_activity
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: get
    data_selector: results
    params: {}
- name: add_data_to_ghg_emission_activity
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: get
    data_selector: results
    params: {}
- name: add_data_to_fuel_activity
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: get
    data_selector: results
    params: {}
- name: add_data_to_waste_activity
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: get
    data_selector: results
    params: {}
- name: waste_fractions
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params: {}
- name: activity_inputs
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params: {}
- name: activity_types
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params: {}
- name: source_categories
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params: {}
- name: waste_fractions
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params: {}
- name: activity_types
  endpoint:
    path: /v1/{company_id}/activities
    method: GET
    data_selector: results
    params: {}
- name: source_categories
  endpoint:
    path: /v1/{company_id}/source_categories
    method: GET
    data_selector: results
    params: {}
- name: list_emission_factor_sources
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
- name: list_assets
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
- name: list_activity_scopes
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
- name: list_airports
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
- name: list_calorific_values
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
- name: list_countries
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
- name: list_currencies
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
- name: list_emission_factor_sources
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    params:
      company_id: required
- name: list_assets
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    params:
      company_id: required
- name: list_activity_scopes
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    params:
      company_id: required
- name: list_airports
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    params:
      company_id: required
- name: list_calorific_values
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    params:
      company_id: required
- name: list_countries
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    params:
      company_id: required
- name: list_currencies
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    params:
      company_id: required
- name: waste_fractions
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
- name: supported_organization_nodes
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
- name: reference_types
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
- name: scope_2_reporting_methodologies
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
- name: suppliers
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
- name: travel_class_types
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
- name: waste_fractions
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params: {}
- name: supported_organization_nodes
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params: {}
- name: reference_types
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params: {}
- name: scope_2_reporting_methodologies
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params: {}
- name: suppliers
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params: {}
- name: travel_class_types
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params: {}
- name: waste_fractions
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params:
      company_id: string [1..100]
      filter: object
      pagination: object
- name: activity_inputs
  endpoint:
    path: /v1/{company_id}/reports/report_types/{report_type_id}/activity_input_types
    method: GET
    data_selector: results
    params:
      company_id: string [1..100]
      activity_input_type_id: string <uuid>
      report_type_id: string <uuid>
      filter: object
      pagination: object
- name: list_units_of_measure
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params:
      company_id: required
- name: fetch_company_details
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params:
      company_id: required
- name: initiate_ghg_report_generation
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: POST
    data_selector: results
    params:
      company_id: required
- name: initiate_quantity_report_generation
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: POST
    data_selector: results
    params:
      company_id: required
- name: list_activity_inputs_for_report
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params:
      company_id: required
      activity_input_type_id: required
      report_type_id: required
- name: activity_input_types
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params: {}
- name: report_types
  endpoint:
    path: /v1/{company_id}/reports/report_types
    method: GET
    data_selector: results
    params: {}
- name: report_sub_types
  endpoint:
    path: /v1/{company_id}/reports/report_types/{report_type_id}/sub_types
    method: GET
    data_selector: results
    params: {}
- name: activity_input_types
  endpoint:
    path: /v1/{company_id}/activity_input_types
    method: GET
    data_selector: results
    params:
      company_id: string
      report_type_id: string <uuid>
- name: report_generation_status
  endpoint:
    path: /v1/{company_id}/reports/{report_id}/status
    method: GET
    data_selector: results
    params:
      company_id: string
      report_id: string <uuid>
- name: report_types
  endpoint:
    path: /v1/{company_id}/reports/report_types
    method: GET
    data_selector: results
    params:
      company_id: string
- name: waste_fractions
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params: {}
- name: waste_fractions
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params: {}
- name: waste_disposal_locations
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params: {}
- name: waste_disposal_methods
  endpoint:
    path: /v1/{company_id}/waste/waste_fractions
    method: GET
    data_selector: results
    params: {}
- name: appointments
  endpoint:
    path: /reports/appointments
    method: GET
    data_selector: rows
    params:
      pagesize: '50'
      pagenumber: '1'
- name: appointments
  endpoint:
    path: /reports/appointments
    method: GET
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: Get Committees data
  endpoint:
    path: /reports/corporaterelationships
    method: post
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: Get Companies data
  endpoint:
    path: /reports/corporaterelationships
    method: post
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: Get Data Libraries Category meta data
  endpoint:
    path: /reports/corporaterelationships
    method: post
    data_selector: rows
- name: Get Data Libraries meta data for specific Category and Type
  endpoint:
    path: /reports/corporaterelationships
    method: post
    data_selector: rows
- name: individuals_meta_data
  endpoint:
    path: /reports/corporaterelationships
    method: post
    data_selector: rows
- name: individuals_data
  endpoint:
    path: /reports/corporaterelationships
    method: post
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: Get Committees data
  endpoint:
    path: /reports/corporaterelationships
    method: post
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: Get Companies data
  endpoint:
    path: /reports/corporaterelationships
    method: post
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: Get Data Libraries Category meta data
  endpoint:
    path: /reports/corporaterelationships
    method: post
    data_selector: rows
- name: Get Data Libraries meta data for specific Category and Type
  endpoint:
    path: /reports/corporaterelationships
    method: post
    data_selector: rows
- name: Get Individuals data
  endpoint:
    path: /post/reports/corporaterelationships
    method: POST
- name: Get Individuals meta data
  endpoint:
    path: /post/reports/corporaterelationships
    method: POST
- name: Corporate Relationships
  endpoint:
    path: /reports/corporaterelationships
    method: post
    params:
      pagesize: integer <int32>
      pagenumber: integer <int32>
- name: corporate_relationships
  endpoint:
    path: /reports/corporaterelationships
    method: POST
    data_selector: rows
    params:
      PageNumber: 1
      PageSize: 1
- name: Get Shared Contacts meta data
  endpoint:
    path: /post/reports/corporaterelationships
    method: POST
    data_selector: rows
- name: appointments
  endpoint:
    path: /reports/appointments
    method: GET
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: committees
  endpoint:
    path: /reports/committees
    method: GET
    data_selector: rows
- name: Shareholders
  endpoint:
    path: /reports/corporaterelationships
    method: post
    params:
      pagesize: '50'
      pagenumber: '1'
- name: Corporate Relationships
  endpoint:
    path: /reports/corporaterelationships
    method: post
    params:
      pagesize: '50'
      pagenumber: '1'
- name: corporate_relationships
  endpoint:
    path: /reports/corporaterelationships
    method: POST
    data_selector: rows
    params:
      PageSize: 1
- name: committees_meta
  endpoint:
    path: /reports/committees/meta
    method: GET
    data_selector: ''
- name: committees_data
  endpoint:
    path: /reports/committees
    method: GET
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: companies_meta
  endpoint:
    path: /reports/companies/meta
    method: GET
    data_selector: ''
- name: companies_data
  endpoint:
    path: /reports/companies
    method: GET
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: data_libraries_meta_categories
  endpoint:
    path: /reports/datalibraries/meta/categories
    method: GET
    data_selector: ''
- name: data_libraries_data
  endpoint:
    path: /reports/datalibraries
    method: GET
    data_selector: ''
- name: appointments
  endpoint:
    path: /reports/appointments
    method: GET
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: committees
  endpoint:
    path: /reports/committees
    method: GET
    data_selector: rows
    params: {}
- name: data_libraries
  endpoint:
    path: /reports/datalibraries
    method: GET
- name: individuals
  endpoint:
    path: /reports/individuals
    method: GET
- name: other_entities
  endpoint:
    path: /reports/otherentities
    method: GET
- name: committees_meta
  endpoint:
    path: /reports/committees/meta
    method: GET
    data_selector: rows
- name: committees
  endpoint:
    path: /reports/committees
    method: GET
    data_selector: rows
- name: companies_meta
  endpoint:
    path: /reports/companies/meta
    method: GET
    data_selector: rows
- name: companies
  endpoint:
    path: /reports/companies
    method: GET
    data_selector: rows
- name: data_libraries_categories_meta
  endpoint:
    path: /reports/datalibraries/meta/categories
    method: GET
    data_selector: rows
- name: data_libraries
  endpoint:
    path: /reports/datalibraries
    method: GET
    data_selector: rows
- name: other_entities
  endpoint:
    path: /reports/otherentities
    method: POST
    data_selector: rows
    params:
      PageNumber: 1
      PageSize: 1
- name: partnerships_meta
  endpoint:
    path: /reports/partnerships/meta
    method: GET
    data_selector: rows
- name: partnerships_data
  endpoint:
    path: /reports/partnerships
    method: GET
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: pending_events_meta
  endpoint:
    path: /reports/pendingevents/meta
    method: GET
    data_selector: rows
- name: pending_events_data
  endpoint:
    path: /reports/pendingevents
    method: GET
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: ownership
  endpoint:
    path: /beta/reports/ownership
    method: GET
    data_selector: rows
- name: shared_addresses_meta
  endpoint:
    path: /reports/sharedAddresses/meta
    method: GET
    data_selector: rows
- name: shared_addresses_data
  endpoint:
    path: /reports/sharedAddresses
    method: GET
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: data_libraries
  endpoint:
    path: /reports/datalibraries
    method: GET
    params:
      pagesize: 50
      pagenumber: 1
- name: individuals
  endpoint:
    path: /reports/individuals
    method: GET
    params:
      pagesize: 50
      pagenumber: 1
- name: other_entities
  endpoint:
    path: /reports/otherentities
    method: GET
    params:
      pagesize: 50
      pagenumber: 1
- name: sharedAddresses
  endpoint:
    path: /reports/sharedAddresses
    method: GET
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: sharedContacts
  endpoint:
    path: /reports/sharedcontacts
    method: GET
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: shareholders
  endpoint:
    path: /reports/shareholders
    method: GET
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: corporateRelationships
  endpoint:
    path: /reports/corporaterelationships
    method: GET
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: other_entities
  endpoint:
    path: /reports/otherentities
    method: POST
    data_selector: rows
    params:
      pagesize: 1
      pagenumber: 1
- name: partnerships
  endpoint:
    path: /reports/partnerships
    method: GET
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: pending_events
  endpoint:
    path: /reports/pendingevents
    method: GET
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: ownership
  endpoint:
    path: /beta/reports/ownership
    method: GET
    data_selector: rows
    params: {}
- name: shared_addresses
  endpoint:
    path: /reports/sharedAddresses
    method: GET
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: corporate_relationships
  endpoint:
    path: /get/reports/corporaterelationships
    method: GET
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: corporate_relationships_specific_columns
  endpoint:
    path: /post/reports/corporaterelationships
    method: POST
    data_selector: rows
- name: Jobs&Tasks
  endpoint:
    path: /api/ext-v{version}/customers/{customerId}/ext-businessareas/{businessAreaId}/jobbagtypes/{id}
    method: GET
    data_selector: '200'
    params: {}
- name: archiveJobBagChecklist
  endpoint:
    path: /api/ext-v{version}/customers/{customerId}/ext-businessareas/{businessAreaId}/jobbagtypes/{id}
    method: POST
    data_selector: '200'
    params: {}
- name: corporate_relationships
  endpoint:
    path: /get/reports/corporaterelationships
    method: GET
    data_selector: rows
    params:
      pagesize: 50
      pagenumber: 1
- name: corporate_relationships_specific_columns
  endpoint:
    path: /post/reports/corporaterelationships
    method: POST
    data_selector: rows
    params:
      PageNumber: 1
      PageSize: 1
      FilterCombinator: 1
- name: Job Types
  endpoint:
    path: /api/ext-v{version}/customers/{customerId}/ext-businessareas/{businessAreaId}/jobbagtypes/{id}
    method: GET
- name: Get Job Type
  endpoint:
    path: /api/ext-v{version}/customers/{customerId}/ext-businessareas/{businessAreaId}/jobbagtypes/{id}
    method: GET
- name: archiveJobBagChecklist
  endpoint:
    path: /api/ext-v{version}/customers/{customerId}/archiveJobBagChecklist
    method: POST
    data_selector: ''
    params: {}
- name: Job Types
  endpoint:
    path: /api/ext-v{version}/customers/{customerId}/ext-businessareas/{businessAreaId}/jobbagtypes/{id}
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: highbond_govmap_organization_unit_type
  endpoint:
    path: /services/data/v2.9/sobjects/highbond_govmap_organization_unit_type
    method: GET
    data_selector: records
- name: highbond_govmap_organization_unit
  endpoint:
    path: /services/data/v2.9/sobjects/highbond_govmap_organization_unit
    method: GET
    data_selector: records
- name: highbond_compliance_requirement
  endpoint:
    path: /services/data/v2.9/sobjects/highbond_compliance_requirement
    method: GET
    data_selector: records
- name: highbond_compliance_regulation
  endpoint:
    path: /services/data/v2.9/sobjects/highbond_compliance_regulation
    method: GET
    data_selector: records
- name: highbond_strategy_risk_comment
  endpoint:
    path: /services/data/v2.9/sobjects/highbond_strategy_risk_comment
    method: GET
    data_selector: records
- name: highbond_strategy_risk_objective
  endpoint:
    path: /services/data/v2.9/sobjects/highbond_strategy_risk_objective
    method: GET
    data_selector: records
- name: highbond_strategy_risk_metric
  endpoint:
    path: /services/data/v2.9/sobjects/highbond_strategy_risk_metric
    method: GET
    data_selector: records
- name: highbond_strategy_risk_tag
  endpoint:
    path: /services/data/v2.9/sobjects/highbond_strategy_risk_tag
    method: GET
    data_selector: records
- name: highbond_strategy_risk
  endpoint:
    path: /services/data/v2.9/sobjects/highbond_strategy_risk
    method: GET
    data_selector: records
- name: highbond_strategy_risk_assurance
  endpoint:
    path: /services/data/v2.9/sobjects/highbond_strategy_risk_assurance
    method: GET
    data_selector: records
- name: highbond_strategy_tag
  endpoint:
    path: /services/data/v2.9/sobjects/highbond_strategy_tag
    method: GET
    data_selector: records
- name: highbond_strategy_scoring_factor
  endpoint:
    path: /services/data/v2.9/sobjects/highbond_strategy_scoring_factor
    method: GET
    data_selector: records
- name: highbond_strategy_objective
  endpoint:
    path: /services/data/v2.9/sobjects/highbond_strategy_objective
    method: GET
    data_selector: records
- name: highbond_strategy_segment
  endpoint:
    path: /services/data/v2.9/sobjects/highbond_strategy_segment
    method: GET
    data_selector: records
- name: highbond_project_type
  endpoint:
    path: /services/data/v2.9/sobjects/highbond_project_type
    method: GET
    data_selector: records
- name: highbond_control
  endpoint:
    path: /services/data/v2.9/sobjects/highbond_control
    method: GET
    data_selector: records
- name: node
  endpoint:
    path: node
    method: GET
    data_selector: Node
    params: {}
- name: nodes
  endpoint:
    path: nodes
    method: GET
    data_selector: '[Node]'
    params: {}
- name: address
  endpoint:
    path: address
    method: GET
    data_selector: Address
    params: {}
- name: addresses
  endpoint:
    path: addresses
    method: GET
    data_selector: AddressesCollectionSegment
    params: {}
- name: appointmentCategories
  endpoint:
    path: appointmentCategories
    method: GET
    data_selector: AppointmentCategoriesCollectionSegment
    params: {}
- name: appointmentCategory
  endpoint:
    path: appointmentCategory
    method: GET
    data_selector: AppointmentCategory
    params: {}
- name: companies
  endpoint:
    path: companies
    method: GET
    data_selector: CompaniesCollectionSegment
    params: {}
- name: company
  endpoint:
    path: company
    method: GET
    data_selector: Company
    params: {}
- name: countries
  endpoint:
    path: countries
    method: GET
    data_selector: CountriesCollectionSegment
    params: {}
- name: country
  endpoint:
    path: country
    method: GET
    data_selector: Country
    params: {}
- name: currencies
  endpoint:
    path: currencies
    method: GET
    data_selector: CurrenciesCollectionSegment
    params: {}
- name: currency
  endpoint:
    path: currency
    method: GET
    data_selector: Currency
    params: {}
- name: individuals
  endpoint:
    path: individuals
    method: GET
    data_selector: IndividualsCollectionSegment
    params: {}
- name: individual
  endpoint:
    path: individual
    method: GET
    data_selector: Individual
    params: {}
- name: partners
  endpoint:
    path: partners
    method: GET
    data_selector: PartnersCollectionSegment
    params: {}
- name: partner
  endpoint:
    path: partner
    method: GET
    data_selector: Partner
    params: {}
- name: users
  endpoint:
    path: users
    method: GET
    data_selector: UsersCollectionSegment
    params: {}
- name: user
  endpoint:
    path: user
    method: GET
    data_selector: User
    params: {}
- name: nodes
  endpoint:
    path: /nodes
    method: GET
    data_selector: nodes
- name: address
  endpoint:
    path: /address
    method: GET
    data_selector: address
- name: appointmentCategories
  endpoint:
    path: /appointmentCategories
    method: GET
    data_selector: appointmentCategories
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
- name: countries
  endpoint:
    path: /countries
    method: GET
    data_selector: countries
- name: currencies
  endpoint:
    path: /currencies
    method: GET
    data_selector: currencies
- name: individuals
  endpoint:
    path: /individuals
    method: GET
    data_selector: individuals
- name: partners
  endpoint:
    path: /partners
    method: GET
    data_selector: partners
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: createCompany
  endpoint:
    path: /createCompany
    method: POST
    data_selector: createCompanyPayload
    params: {}
- name: deleteCompany
  endpoint:
    path: /deleteCompany
    method: POST
    data_selector: deleteCompanyPayload
    params: {}
- name: updateCompany
  endpoint:
    path: /updateCompany
    method: POST
    data_selector: updateCompanyPayload
    params: {}
- name: updateCompanyOptions
  endpoint:
    path: /updateCompanyOptions
    method: POST
    data_selector: updateCompanyOptionsPayload
    params: {}
- name: createCompanyStatus
  endpoint:
    path: /createCompanyStatus
    method: POST
    data_selector: createCompanyStatusPayload
    params: {}
- name: deleteCompanyStatus
  endpoint:
    path: /deleteCompanyStatus
    method: POST
    data_selector: deleteCompanyStatusPayload
    params: {}
- name: updateCompanyStatus
  endpoint:
    path: /updateCompanyStatus
    method: POST
    data_selector: updateCompanyStatusPayload
    params: {}
- name: createCompanyType
  endpoint:
    path: /createCompanyType
    method: POST
    data_selector: createCompanyTypePayload
    params: {}
- name: deleteCompanyType
  endpoint:
    path: /deleteCompanyType
    method: POST
    data_selector: deleteCompanyTypePayload
    params: {}
- name: updateCompanyType
  endpoint:
    path: /updateCompanyType
    method: POST
    data_selector: updateCompanyTypePayload
    params: {}
- name: createEntityBatch
  endpoint:
    path: /createEntityBatch
    method: POST
    data_selector: createEntityBatchPayload
    params: {}
- name: deleteEntityBatch
  endpoint:
    path: /deleteEntityBatch
    method: POST
    data_selector: deleteEntityBatchPayload
    params: {}
- name: updateEntityBatch
  endpoint:
    path: /updateEntityBatch
    method: POST
    data_selector: updateEntityBatchPayload
    params: {}
- name: createIndividual
  endpoint:
    path: /createIndividual
    method: POST
    data_selector: createIndividualPayload
    params: {}
- name: deleteIndividual
  endpoint:
    path: /deleteIndividual
    method: POST
    data_selector: deleteIndividualPayload
    params: {}
- name: updateIndividual
  endpoint:
    path: /updateIndividual
    method: POST
    data_selector: updateIndividualPayload
    params: {}
- name: appointments
  endpoint:
    path: /appointments
    method: GET
    data_selector: items
- name: appointment_categories
  endpoint:
    path: /appointment_categories
    method: GET
    data_selector: items
- name: appointment_groups
  endpoint:
    path: /appointment_groups
    method: GET
    data_selector: items
- name: appointment_statuses
  endpoint:
    path: /appointment_statuses
    method: GET
    data_selector: items
- name: appointment_types
  endpoint:
    path: /appointment_types
    method: GET
    data_selector: items
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: items
- name: company_type
  endpoint:
    path: /companytypes
    method: GET
    data_selector: items
    params:
      incremental: id
- name: appointments
  endpoint:
    path: /appointments
    method: GET
    data_selector: items
- name: appointment_categories
  endpoint:
    path: /appointment_categories
    method: GET
    data_selector: items
- name: appointment_groups
  endpoint:
    path: /appointment_groups
    method: GET
    data_selector: items
- name: appointment_statuses
  endpoint:
    path: /appointment_statuses
    method: GET
    data_selector: items
- name: appointment_types
  endpoint:
    path: /appointment_types
    method: GET
    data_selector: items
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: items
- name: partner
  endpoint:
    path: /partner
    method: GET
    data_selector: items
- name: subCountry
  endpoint:
    path: /subCountry
    method: GET
    data_selector: items
- name: user
  endpoint:
    path: /user
    method: GET
    data_selector: items
- name: CompanyType
  endpoint:
    path: /companytypes
    method: GET
    data_selector: items
    params: {}
- name: Countries
  endpoint:
    path: /countries
    method: GET
    data_selector: items
    params: {}
- name: Currencies
  endpoint:
    path: /currencies
    method: GET
    data_selector: items
    params: {}
- name: partner
  endpoint:
    path: /partners
    method: GET
    data_selector: items
- name: subCountry
  endpoint:
    path: /subCountries
    method: GET
    data_selector: items
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: items
- name: appointment
  endpoint:
    path: /appointments
    method: GET
    data_selector: appointments
    params: {}
- name: company
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params: {}
- name: AppointmentCategory
  endpoint:
    path: /appointmentCategory
    method: GET
    data_selector: records
- name: Appointment
  endpoint:
    path: /appointment
    method: GET
    data_selector: records
- name: AppointmentGroup
  endpoint:
    path: /appointmentGroup
    method: GET
    data_selector: records
- name: AppointmentStatus
  endpoint:
    path: /appointmentStatus
    method: GET
    data_selector: records
- name: AppointmentType
  endpoint:
    path: /appointmentType
    method: GET
    data_selector: records
- name: Company
  endpoint:
    path: /company
    method: GET
    data_selector: records
- name: Country
  endpoint:
    path: /country
    method: GET
    data_selector: records
- name: company
  endpoint:
    path: /createCompany
    method: POST
    data_selector: companyData
- name: company_status
  endpoint:
    path: /createCompanyStatus
    method: POST
    data_selector: statusData
- name: company_type
  endpoint:
    path: /createCompanyType
    method: POST
    data_selector: typeData
- name: entity_batch
  endpoint:
    path: /createEntityBatch
    method: POST
    data_selector: batchData
- name: entity_identification
  endpoint:
    path: /createEntityIdentification
    method: POST
    data_selector: identificationData
- name: entity_security_group
  endpoint:
    path: /createEntitySecurityGroup
    method: POST
    data_selector: securityGroupData
- name: entity_set
  endpoint:
    path: /createEntitySet
    method: POST
    data_selector: setData
- name: entity_type
  endpoint:
    path: /createEntityType
    method: POST
    data_selector: typeData
- name: individual
  endpoint:
    path: /createIndividual
    method: POST
    data_selector: individualData
- name: nationality
  endpoint:
    path: /createNationality
    method: POST
    data_selector: nationalityData
- name: other_entity
  endpoint:
    path: /createOtherEntity
    method: POST
    data_selector: otherData
- name: partner
  endpoint:
    path: /createPartner
    method: POST
    data_selector: partnerData
- name: sub_country
  endpoint:
    path: /createSubCountry
    method: POST
    data_selector: subCountryData
- name: user_grouping
  endpoint:
    path: /createUserGrouping
    method: POST
    data_selector: groupingData
- name: create_company
  endpoint:
    path: /CreateCompany
    method: POST
    data_selector: records
- name: create_company_status
  endpoint:
    path: /CreateCompanyStatus
    method: POST
    data_selector: records
- name: create_company_type
  endpoint:
    path: /CreateCompanyType
    method: POST
    data_selector: records
- name: create_entity_batch
  endpoint:
    path: /CreateEntityBatch
    method: POST
    data_selector: records
- name: create_entity_identification
  endpoint:
    path: /CreateEntityIdentification
    method: POST
    data_selector: records
- name: create_entity_security_group
  endpoint:
    path: /CreateEntitySecurityGroup
    method: POST
    data_selector: records
- name: create_entity_set
  endpoint:
    path: /CreateEntitySet
    method: POST
    data_selector: records
- name: create_entity_type
  endpoint:
    path: /CreateEntityType
    method: POST
    data_selector: records
- name: create_individual
  endpoint:
    path: /CreateIndividual
    method: POST
    data_selector: records
- name: create_nationality
  endpoint:
    path: /CreateNationality
    method: POST
    data_selector: records
- name: create_other_entity
  endpoint:
    path: /CreateOtherEntity
    method: POST
    data_selector: records
- name: create_partner
  endpoint:
    path: /CreatePartner
    method: POST
    data_selector: records
- name: create_sub_country
  endpoint:
    path: /CreateSubCountry
    method: POST
    data_selector: records
- name: create_user_grouping
  endpoint:
    path: /CreateUserGrouping
    method: POST
    data_selector: records
- name: person_options
  endpoint:
    path: /person/options/filter
    method: GET
    data_selector: records
- name: EntityBaseFilterPayloadFilterInput
  endpoint:
    path: /entity/base/filter
    method: POST
    data_selector: filters
    params: {}
- name: EntityBatchFilterPayloadFilterInput
  endpoint:
    path: /entity/batch/filter
    method: POST
    data_selector: filters
    params: {}
- name: EntitySecurityGroupFilterPayloadFilterInput
  endpoint:
    path: /entity/security/group/filter
    method: POST
    data_selector: filters
    params: {}
- name: EntitySetFilterPayloadFilterInput
  endpoint:
    path: /entity/set/filter
    method: POST
    data_selector: filters
    params: {}
- name: EntityTypeBaseFilterPayloadFilterInput
  endpoint:
    path: /entity/type/base/filter
    method: POST
    data_selector: filters
    params: {}
- name: EntityTypeFilterPayloadFilterInput
  endpoint:
    path: /entity/type/filter
    method: POST
    data_selector: filters
    params: {}
- name: EventGroupBaseFilterPayloadFilterInput
  endpoint:
    path: /event/group/base/filter
    method: POST
    data_selector: filters
    params: {}
- name: EventGroupFilterPayloadFilterInput
  endpoint:
    path: /event/group/filter
    method: POST
    data_selector: filters
    params: {}
- name: EventTypeFilterPayloadFilterInput
  endpoint:
    path: /event/type/filter
    method: POST
    data_selector: filters
    params: {}
- name: IndividualFilterPayloadFilterInput
  endpoint:
    path: /individual/filter
    method: POST
    data_selector: filters
    params: {}
- name: IndustrialClassificationFilterPayloadFilterInput
  endpoint:
    path: /industrial/classification/filter
    method: POST
    data_selector: filters
    params: {}
- name: NationalityBaseFilterPayloadFilterInput
  endpoint:
    path: /nationality/base/filter
    method: POST
    data_selector: filters
    params: {}
- name: NationalityFilterPayloadFilterInput
  endpoint:
    path: /nationality/filter
    method: POST
    data_selector: filters
    params: {}
- name: OccupationFilterPayloadFilterInput
  endpoint:
    path: /occupation/filter
    method: POST
    data_selector: filters
    params: {}
- name: OtherEntityFilterPayloadFilterInput
  endpoint:
    path: /other/entity/filter
    method: POST
    data_selector: filters
    params: {}
- name: PartnerBaseFilterPayloadFilterInput
  endpoint:
    path: /partner/base/filter
    method: POST
    data_selector: filters
    params: {}
- name: PartnerFilterPayloadFilterInput
  endpoint:
    path: /partner/filter
    method: POST
    data_selector: filters
    params: {}
- name: personOptionsFilter
  endpoint:
    path: /person-options-filter
    method: POST
    data_selector: data
    params: {}
- name: UpdateIndividualInput
  endpoint:
    path: /updateIndividualInput
    method: POST
    data_selector: records
- name: UpdateNationalityInput
  endpoint:
    path: /updateNationalityInput
    method: POST
    data_selector: records
- name: UpdateOtherEntityInput
  endpoint:
    path: /updateOtherEntityInput
    method: POST
    data_selector: records
- name: UpdatePartnerInput
  endpoint:
    path: /updatePartnerInput
    method: POST
    data_selector: records
- name: UpdatePersonOptionsInput
  endpoint:
    path: /updatePersonOptionsInput
    method: POST
    data_selector: records
- name: UpdateSubCountryInput
  endpoint:
    path: /updateSubCountryInput
    method: POST
    data_selector: records
- name: UpdateUserGroupingInput
  endpoint:
    path: /updateUserGroupingInput
    method: POST
    data_selector: records
- name: UserBaseFilterPayloadFilterInput
  endpoint:
    path: /userBaseFilterPayloadFilterInput
    method: POST
    data_selector: records
notes:
- All API requests must be made over HTTPS.
- You can only make one request per activity usage data.
- Use the company ID to call API endpoints.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Client must not use the APIs in any manner that is not described in the Documentation.
- Don't hardcode values that can be passed as variables or discovered using data sources.
- Add variables and set defaults.
- Ensure to handle rate limits properly to avoid throttling.
- Some filters may not be applicable to all endpoints.
errors:
- '400: Bad Request - The request could not be understood by the server.'
- '401: Unauthorized - The request requires authentication.'
- '429: Too Many Requests - Request rate limit has been reached.'
- '401 Unauthorized: The request requires authentication or the supplied authorization
  credentials have been refused.'
- '429 Too Many Requests: Request rate limit has been reached.'
- 400 Bad Request
- 401 Unauthorized
- 403 Forbidden
- 422 Unprocessable Content
- 429 Too Many Requests
- 500 Internal Server Error
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '429: Too Many Requests'
- '500: Internal Server Error'
- '503: Service Unavailable'
- '400 Bad Request: The request could not be understood by the server.'
- '403 Forbidden: Access to the resource is forbidden.'
- '401 Unauthorized: the client_id or client_secret are not valid for platform authentication,
  or the Authorization is not valid for Entities authentication'
- '403 Forbidden: the Entities user does not have the required access rights'
- '429: The client has used all of its request quota for the current period'
- '401 Unauthorized: The client_id or client_secret are not valid for platform authentication,
  or the Authorization is not valid for Entities authentication.'
- '403 Forbidden: The Entities user does not have the required access rights.'
- '429: The client has used all of its request quota for the current period.'
- '500: An error occurred, see the specific message (Only if it is a WSDL endpoint).'
- '503: Contracts information unreachable.'
- '401 Unauthorized: the client_id or client_secret are not valid for platform authentication,
  or the Authorization is not valid for Entities authentication.'
- '403 Forbidden: the Entities user does not have the required access rights.'
- '429: the client has used all of its request quota for the current period.'
- 429 The client has used all of its request quota for the current period.
- '401 Unauthorized: client_id or client_secret are not valid'
- '403 Forbidden: user does not have the required access rights'
- '429: request quota exceeded'
- '500: error occurred'
- '503: Contracts information unreachable'
- 500 An error occurred, see the specific message (Only if it is a WSDL endpoint).
- 503 Contracts information unreachable.
- '401 Unauthorized: Recheck API Key or token validity'
- '403 Forbidden: Check access rights'
- '429: Request quota exceeded'
- '500: Internal server error'
- '503: Service unavailable'
- 422 Client Error
- 500 Server Error
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify authentication credentials.'
- '404 Not Found: Endpoint or resource does not exist.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://developer.diligent.com
  headers:
    Content-Type: application/json
  paginator:
    type: page
    page_size_param: PageSize
    default_page_size: 1
source_metadata: null
