resources:
- name: wallets
  endpoint:
    path: /reference/createahotwallet
    method: POST
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /reference/sendmanytransaction
    method: POST
    data_selector: records
    params: {}
- name: MPC
  endpoint:
    path: /deploy-mpc-on-aws
    method: POST
    data_selector: resources
    params: {}
- name: version
  endpoint:
    path: /version
    method: GET
- name: info
  endpoint:
    path: /info
    method: GET
- name: Bitcoin Testnet 4 Faucet
  endpoint:
    path: /coinfaucet
    method: GET
    data_selector: testnet_funds
    params: {}
- name: Web3 Faucet
  endpoint:
    path: /cloud.google.com/application/web3/faucet
    method: GET
    data_selector: testnet_funds
    params: {}
- name: Multichain Faucet
  endpoint:
    path: /learnweb3.io/faucets
    method: GET
    data_selector: testnet_funds
    params: {}
- name: Sol Faucet
  endpoint:
    path: /moralis.io/solana-testnet-faucet-how-to-get-testnet-sol-from-solana-faucets
    method: GET
    data_selector: testnet_funds
    params: {}
- name: XRP Testnet Faucet
  endpoint:
    path: /test.bithomp.com/faucet
    method: GET
    data_selector: testnet_funds
    params: {}
- name: Algorand Testnet Dispenser
  endpoint:
    path: /dispenser.testnet.aws.algodev.network
    method: GET
    data_selector: testnet_funds
    params: {}
- name: Base Faucet by QuickNode
  endpoint:
    path: /faucet.quicknode.com/base
    method: GET
    data_selector: testnet_funds
    params: {}
- name: Base Sepolia Testnet Faucet
  endpoint:
    path: /bwarelabs.com/faucets/base-testnet
    method: GET
    data_selector: testnet_funds
    params: {}
- name: Towo Labs Flare Coston Faucet
  endpoint:
    path: /faucet.towolabs.com
    method: GET
    data_selector: testnet_funds
    params: {}
- name: Ada Faucet
  endpoint:
    path: /docs.cardano.org/cardano-testnet/tools/faucet/
    method: GET
    data_selector: testnet_funds
    params: {}
- name: create_rsa_key
  endpoint:
    path: /api/mpc-shard/create-rsakey
    method: POST
- name: Bitcoin Testnet 4 Faucet
  endpoint:
    path: https://coinfaucet.eu/en/btc-testnet4/
    method: GET
    data_selector: faucet
    params: {}
- name: Web3 Faucet
  endpoint:
    path: https://cloud.google.com/application/web3/faucet
    method: GET
    data_selector: faucet
    params: {}
- name: Multichain Faucet
  endpoint:
    path: https://learnweb3.io/faucets#:~:text=Free%20Testnet%20Faucets%20Get%20free,1%20gETH%20Ethereum%20Holesky
    method: GET
    data_selector: faucet
    params: {}
- name: Sol Faucet
  endpoint:
    path: https://moralis.io/solana-testnet-faucet-how-to-get-testnet-sol-from-solana-faucets/
    method: GET
    data_selector: faucet
    params: {}
- name: XRP Testnet Faucet
  endpoint:
    path: https://test.bithomp.com/faucet/
    method: GET
    data_selector: faucet
    params: {}
- name: Algorand Testnet Dispenser
  endpoint:
    path: https://dispenser.testnet.aws.algodev.network
    method: GET
    data_selector: faucet
    params: {}
- name: Base Faucet by QuickNode
  endpoint:
    path: https://faucet.quicknode.com/base
    method: GET
    data_selector: faucet
    params: {}
- name: Base Sepolia Testnet Faucet - Bware Labs
  endpoint:
    path: https://bwarelabs.com/faucets/base-testnet
    method: GET
    data_selector: faucet
    params: {}
- name: Towo Labs Flare Coston Faucet
  endpoint:
    path: https://faucet.towolabs.com/#:~:text=%23%20%E3%80%906%E2%80%A0Towo%20Labs%20,%C2%A9%20Towo%20Labs%202022
    method: GET
    data_selector: faucet
    params: {}
- name: Ada Faucet
  endpoint:
    path: https://docs.cardano.org/cardano-testnet/tools/faucet/
    method: GET
    data_selector: faucet
    params: {}
- name: import_mpc_shard
  endpoint:
    path: /api/mpc-shard/import
    method: POST
- name: wallets
  endpoint:
    path: /createahotwallet
    method: POST
- name: transactions
  endpoint:
    path: /sendmanytransaction
    method: POST
- name: addresses
  endpoint:
    path: /generatemanyaddress
    method: POST
- name: create_hot_wallet
  endpoint:
    path: /api/onboarding/create-wallet
    method: POST
    data_selector: response
    params:
      walletVersion: '1'
- name: create_rsa_key
  endpoint:
    path: /api/mpc-shard/create-rsakey
    method: POST
- name: wallets
  endpoint:
    path: /api/wallet/get-list-wallet
    method: POST
- name: get_wallet
  endpoint:
    path: /wallet/get-wallet
    method: POST
- name: wallet_balance
  endpoint:
    path: /api/wallet/balance
    method: POST
    data_selector: wallet
    params: {}
- name: create_hot_wallet
  endpoint:
    path: /api/onboarding/create-wallet
    method: POST
- name: wallets
  endpoint:
    path: /api/wallet/get-list-wallet
    method: POST
- name: retrieve_a_list_of_addresses
  endpoint:
    path: /reference/generatemanyaddress
    method: POST
- name: retrieve_an_address
  endpoint:
    path: /reference/generatesingleaddress
    method: POST
- name: retrieve_an_address_balance
  endpoint:
    path: /reference/getaddressbalance
    method: POST
- name: verify_addresses
  endpoint:
    path: /reference/verifyaddresses
    method: POST
- name: get_wallet
  endpoint:
    path: /wallet/get-wallet
    method: POST
- name: wallet_balance
  endpoint:
    path: /api/wallet/balance
    method: POST
- name: addresses
  endpoint:
    path: /api/wallet/generate-many-address
    method: POST
    data_selector: addresses
    params: {}
- name: retrieve_address
  endpoint:
    path: /api/wallet/generate-address
    method: POST
    data_selector: null
    params: {}
- name: addresses
  endpoint:
    path: /wallet/generate-many-address
    method: POST
    data_selector: addresses
    params: {}
- name: retrieve_address
  endpoint:
    path: /wallet/generate-address
    method: POST
- name: address_balance
  endpoint:
    path: /api/wallet/address-balance
    method: POST
    data_selector: response
    params: {}
- name: address_balance
  endpoint:
    path: /api/wallet/address-balance
    method: POST
- name: create_transaction_requests
  endpoint:
    path: /wallet/send-many-transaction
    method: POST
- name: create_transaction_requests
  endpoint:
    path: /wallet/send-many-transaction
    method: POST
- name: retrieve_transaction
  endpoint:
    path: /wallet/get-transfer
    method: POST
    data_selector: transaction_details
- name: retrieve_transaction
  endpoint:
    path: /wallet/get-transfer
    method: POST
    data_selector: transaction_details
- name: hot_wallet_transactions
  endpoint:
    path: /api/wallet/get-transfer-list
    method: POST
- name: transactions
  endpoint:
    path: /api/v2/transfers/list
    method: POST
- name: hot_wallet_transactions
  endpoint:
    path: /wallet/get-transfer-list
    method: POST
- name: pending_transaction
  endpoint:
    path: /api/wallet/pending-transaction
    method: POST
    data_selector: records
- name: transactions
  endpoint:
    path: /api/v2/transfers/list
    method: POST
- name: transaction_status
  endpoint:
    path: /wallet/transaction-status
    method: POST
- name: pending_transactions
  endpoint:
    path: /api/wallet/pending-transaction
    method: POST
    data_selector: null
    params: {}
- name: estimated_gas_fees
  endpoint:
    path: /api/wallet/get-approx-fees
    method: POST
- name: transaction_status
  endpoint:
    path: /api/wallet/transaction-status
    method: POST
- name: consolidate_addresses
  endpoint:
    path: /api/wallet/get-consolidate-transaction
    method: POST
- name: estimated_gas_fees
  endpoint:
    path: /wallet/get-approx-fees
    method: POST
- name: consolidate_transaction
  endpoint:
    path: /api/wallet/get-consolidate-transaction
    method: POST
- name: consolidate_wallet_assets
  endpoint:
    path: /api/wallet/consolidate-transaction
    method: POST
- name: retrieve_addresses_for_consolidation
  endpoint:
    path: /reference/getunconsolidationtransaction
    method: GET
- name: push_refill_transaction
  endpoint:
    path: /api/wallet/push-refill-transaction
    method: POST
- name: push_refill_transaction
  endpoint:
    path: /api/wallet/push-refill-transaction
    method: POST
- name: resend_evm_transaction
  endpoint:
    path: /api/wallet/resend-evm-transaction
    method: POST
    data_selector: null
    params: {}
- name: resend_transaction
  endpoint:
    path: /api/wallet/resend-single-transaction
    method: POST
- name: resend_evm_transaction
  endpoint:
    path: /api/wallet/resend-evm-transaction
    method: POST
- name: update_transaction_status
  endpoint:
    path: /travel-rule/update-transaction-status
    method: POST
- name: resend_bitcoin_transaction
  endpoint:
    path: /wallet/resend-single-transaction
    method: POST
- name: Travel Rule transactions
  endpoint:
    path: /api/travel-rule/get-transaction
    method: POST
- name: update_transaction_status
  endpoint:
    path: /travel-rule/update-transaction-status
    method: POST
- name: travel_rule_transaction
  endpoint:
    path: /travel-rule/get-transaction/:txnId
    method: GET
- name: get_transaction
  endpoint:
    path: /api/travel-rule/get-transaction
    method: POST
- name: vasps
  endpoint:
    path: /api/travel-rule/get-vasps-info
    method: POST
- name: travel_rule_transaction
  endpoint:
    path: /travel-rule/get-transaction/:txnId
    method: GET
- name: create_travel_rule_transaction
  endpoint:
    path: /api/travel-rule/create-transaction
    method: POST
- name: vasp_info
  endpoint:
    path: /api/travel-rule/get-vasps-info
    method: POST
- name: create_travel_rule_transaction
  endpoint:
    path: /api/travel-rule/create-transaction
    method: POST
- name: create_transaction
  endpoint:
    path: /createTransaction
    method: POST
    data_selector: transaction
    params: {}
- name: Travel Rule status
  endpoint:
    path: /travel-rule/is-enabled
    method: GET
- name: Create Transaction by Native Coin(Non-UTXO) for Deposit
  endpoint:
    path: /api/create_transaction
    method: POST
    data_selector: transaction
    params: {}
- name: pending_transactions
  endpoint:
    path: /api/travel-rule/pending-transaction
    method: POST
- name: Check Travel Rule status
  endpoint:
    path: /api/travel-rule/is-enabled
    method: GET
- name: latest_version
  endpoint:
    path: /info
    method: GET
    data_selector: version
- name: pending_transaction
  endpoint:
    path: /api/travel-rule/pending-transaction
    method: POST
- name: memory_usage
  endpoint:
    path: /metrics
    method: GET
    data_selector: ''
- name: server_status
  endpoint:
    path: /ping
    method: GET
- name: memory_usage
  endpoint:
    path: /metrics
    method: GET
    data_selector: memory
- name: health
  endpoint:
    path: /health
    method: GET
    data_selector: ''
- name: server_status
  endpoint:
    path: /ping
    method: GET
- name: health
  endpoint:
    path: /health
    method: GET
    data_selector: ''
- name: transaction_status
  endpoint:
    path: /reference/gettransactionstatus
    method: POST
    data_selector: transaction_status
    params: {}
- name: retrieve_transaction
  endpoint:
    path: /reference/gettransfers
    method: POST
    data_selector: transaction_data
    params: {}
- name: receive_webhook
  endpoint:
    path: /reference/receive-webhook-requests
    method: POST
    data_selector: webhook_data
    params: {}
- name: send_webhook
  endpoint:
    path: /reference/send-webhook-requests
    method: POST
    data_selector: webhook_data
    params: {}
- name: receive_transaction_webhooks
  endpoint:
    path: /receive-webhook-requests
    method: POST
    data_selector: payload
    params: {}
- name: Retrieve a transaction status
  endpoint:
    path: /reference/gettransactionstatus
    method: POST
    data_selector: transactionStatus
    params: {}
- name: Receive webhook requests
  endpoint:
    path: /reference/receive-webhook-requests
    method: POST
    data_selector: webhookPayload
    params: {}
- name: Send webhook requests
  endpoint:
    path: /reference/send-webhook-requests
    method: POST
    data_selector: webhookPayload
    params: {}
- name: receive_transaction
  endpoint:
    path: /webhook/receive
    method: POST
    data_selector: transactions
    params: {}
- name: receive_transaction_webhooks
  endpoint:
    path: /receive-webhook-requests
    method: POST
    data_selector: webhookPayload
    params: {}
- name: webhook_payload_batch_transaction
  endpoint:
    path: /receive-webhook-payload-for-batch-transaction
    method: POST
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: receive_transaction
  endpoint:
    path: /receive-transaction
    method: POST
    data_selector: payload
    params: {}
- name: webhook_batch_transaction
  endpoint:
    path: /receive-webhook-payload-for-batch-transaction
    method: POST
- name: batch_transfer_webhook
  endpoint:
    path: /batch/transfer/webhook
    method: POST
    data_selector: webhookPayload
    params: {}
- name: batch_transfer_same_asset_different_addresses
  endpoint:
    path: /batch_transfer/same_asset/different_addresses
    method: POST
    data_selector: webhook
    params: {}
- name: batch_transfer_different_assets_same_wallet
  endpoint:
    path: /batch_transfer/different_assets/same_wallet
    method: POST
    data_selector: webhook
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: POST
    data_selector: outputs
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params:
      incremental: timestamp
- name: webhook_settings
  endpoint:
    path: /webhook/settings
    method: POST
    data_selector: settings
    params:
      minimum_block_confirmation: '2'
- name: webhook_settings
  endpoint:
    path: /reference/set-up-webhook-integration
    method: POST
    data_selector: webhook_settings
    params: {}
- name: 1st block confirmation periodic webhook
  endpoint:
    path: /webhooks/1st-block-confirmation
    method: POST
    data_selector: success
    params: {}
- name: 7th block confirmation periodic webhook
  endpoint:
    path: /webhooks/7th-block-confirmation
    method: POST
    data_selector: success
    params: {}
- name: 13th block confirmation periodic webhook
  endpoint:
    path: /webhooks/13th-block-confirmation
    method: POST
    data_selector: success
    params: {}
- name: 19th block confirmation periodic webhook
  endpoint:
    path: /webhooks/19th-block-confirmation
    method: POST
    data_selector: success
    params: {}
- name: webhook_response
  endpoint:
    path: /webhook/response
    method: POST
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: resData
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: resData
- name: send_transaction_webhooks
  endpoint:
    path: /send-webhook-requests
    method: POST
    data_selector: transaction_data
- name: send_transaction_webhooks
  endpoint:
    path: /send-webhook-requests
    method: POST
- name: send_webhook
  endpoint:
    path: /send
    method: POST
    data_selector: payload
- name: transactions
  endpoint:
    path: /send-transaction-webhooks
    method: POST
    data_selector: payload
- name: send_transactions
  endpoint:
    path: /webhook/send
    method: POST
    data_selector: payload
- name: batch_transaction
  endpoint:
    path: /receive-webhook-payload-for-batch-transaction
    method: POST
    data_selector: payload
- name: send_webhook_payload
  endpoint:
    path: /receive-webhook-payload-for-batch-transaction
    method: POST
    data_selector: payload
- name: transaction_webhooks
  endpoint:
    path: /reference/transaction-webhooks
    method: GET
- name: receive_webhook
  endpoint:
    path: /reference/receive-webhook-requests
    method: POST
- name: send_webhook
  endpoint:
    path: /reference/send-webhook-requests
    method: POST
- name: webhooks
  endpoint:
    path: /reference/view-and-manage-your-webhooks
    method: GET
- name: webhooks
  endpoint:
    path: /reference/filter-webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: wallet
  endpoint:
    path: /createahotwallet
    method: POST
- name: transactions
  endpoint:
    path: /sendmanytransaction
    method: POST
- name: wallets
  endpoint:
    path: /reference/createahotwallet
    method: POST
- name: transactions
  endpoint:
    path: /reference/sendmanytransaction
    method: POST
- name: addresses
  endpoint:
    path: /reference/generatemanyaddress
    method: POST
- name: health
  endpoint:
    path: /reference/health-2
    method: GET
- name: wallet
  endpoint:
    path: /reference/createahotwallet
    method: POST
    data_selector: wallets
    params: {}
- name: addresses
  endpoint:
    path: /reference/addresses
    method: GET
    data_selector: addresses
    params: {}
- name: transactions
  endpoint:
    path: /reference/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: health
  endpoint:
    path: /reference/health-2
    method: GET
    data_selector: status
    params: {}
- name: tokens
  endpoint:
    path: /reference/liminal-supported-chains
    method: GET
    data_selector: tokens
    params: {}
- name: Arbitrum
  endpoint:
    path: /reference/arbitrum
    method: GET
- name: Avalanche
  endpoint:
    path: /reference/avalanche
    method: GET
- name: Bitcoin Cash
  endpoint:
    path: /reference/bch
    method: GET
- name: Binance Smart Chain
  endpoint:
    path: /reference/bsc-tokens
    method: GET
- name: Bitcoin
  endpoint:
    path: /reference/btc
    method: GET
- name: Cardano
  endpoint:
    path: /reference/ada-tokens
    method: GET
- name: Cosmos
  endpoint:
    path: /reference/atom
    method: GET
- name: Doge
  endpoint:
    path: /reference/doge
    method: GET
- name: Ethereum
  endpoint:
    path: /reference/eth-token-1
    method: GET
- name: Fantom
  endpoint:
    path: /reference/fantom
    method: GET
- name: Litecoin
  endpoint:
    path: /reference/ltc
    method: GET
- name: Near
  endpoint:
    path: /reference/near
    method: GET
- name: Optimism
  endpoint:
    path: /reference/optimism
    method: GET
- name: Polygon
  endpoint:
    path: /reference/polygon-tokens
    method: GET
- name: Solana
  endpoint:
    path: /reference/solana-tokens
    method: GET
- name: Tron
  endpoint:
    path: /reference/tron-tokens
    method: GET
- name: Xinfin
  endpoint:
    path: /reference/xinfin
    method: GET
- name: Stellar
  endpoint:
    path: /reference/xlm
    method: GET
- name: XRP Ledger(Ripple)
  endpoint:
    path: /reference/xrp
    method: GET
- name: Algorand
  endpoint:
    path: /reference/algo
    method: GET
- name: Base ETH
  endpoint:
    path: /reference/base
    method: GET
- name: Playa3ull
  endpoint:
    path: /reference/playa3ull
    method: GET
- name: Celo
  endpoint:
    path: /reference/celo
    method: GET
- name: wallet
  endpoint:
    path: /createahotwallet
    method: POST
    data_selector: records
    params: {}
- name: addresses
  endpoint:
    path: /generatemanyaddress
    method: POST
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /sendmanytransaction
    method: POST
    data_selector: records
    params: {}
- name: wallets
  endpoint:
    path: /reference/getlistofwallet
    method: POST
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /reference/gettransfers
    method: POST
    data_selector: records
    params: {}
- name: addresses
  endpoint:
    path: /reference/generatemanyaddress
    method: POST
    data_selector: records
    params: {}
- name: tokens
  endpoint:
    path: /api/tokens
    method: GET
    data_selector: tokens
    params: {}
- name: tokens
  endpoint:
    path: /tokens
    method: GET
    data_selector: tokens
    params: {}
- name: tokens
  endpoint:
    path: /reference/liminal-supported-chains
    method: GET
    data_selector: tokens
    params: {}
- name: tokens
  endpoint:
    path: /api/tokens
    method: GET
    data_selector: tokens
    params: {}
- name: tokens
  endpoint:
    path: /testnet/tokens
    method: GET
    data_selector: tokens
    params: {}
- name: token_info
  endpoint:
    path: /api/tokens
    method: GET
    data_selector: tokens
- name: tokens
  endpoint:
    path: /tokens
    method: GET
    data_selector: tokens
    params: {}
- name: tokens
  endpoint:
    path: /tokens
    method: GET
    data_selector: tokens
    params: {}
- name: tokens
  endpoint:
    path: /reference/liminal-supported-chains
    method: GET
    data_selector: tokens
    params: {}
- name: tokens_testnet
  endpoint:
    path: /reference/testnet-tokens
    method: GET
    data_selector: tokens
    params: {}
- name: tokens
  endpoint:
    path: /tokens
    method: GET
    data_selector: tokens
    params: {}
- name: Tokens
  endpoint:
    path: /tokens
    method: GET
    data_selector: tokens
- name: Smooth Love Potion
  endpoint:
    path: /path/to/smooth_love_potion
    method: GET
    data_selector: records
    params: {}
- name: SSV Token
  endpoint:
    path: /path/to/ssv_token
    method: GET
    data_selector: records
    params: {}
- name: Wrapped NXM
  endpoint:
    path: /path/to/wrapped_nxm
    method: GET
    data_selector: records
    params: {}
- name: Decentralized Entertainment Coin
  endpoint:
    path: /path/to/decentralized_entertainment_coin
    method: GET
    data_selector: records
    params: {}
- name: Wrapped TON Coin
  endpoint:
    path: /path/to/wrapped_ton_coin
    method: GET
    data_selector: records
    params: {}
- name: UniCoin
  endpoint:
    path: /path/to/unicoin
    method: GET
    data_selector: records
    params: {}
- name: Convex Token
  endpoint:
    path: /path/to/convex_token
    method: GET
    data_selector: records
    params: {}
- name: ACEX
  endpoint:
    path: /path/to/acex
    method: GET
    data_selector: records
    params: {}
- name: Global Dollar
  endpoint:
    path: /path/to/global_dollar
    method: GET
    data_selector: records
    params: {}
- name: Tether Gold
  endpoint:
    path: /path/to/tether_gold
    method: GET
    data_selector: records
    params: {}
- name: stETH
  endpoint:
    path: /path/to/steth
    method: GET
    data_selector: records
    params: {}
- name: StablR USD
  endpoint:
    path: /path/to/stablr_usd
    method: GET
    data_selector: records
    params: {}
- name: Quantoz USDQ
  endpoint:
    path: /path/to/quantoz_usdq
    method: GET
    data_selector: records
    params: {}
- name: PUMP
  endpoint:
    path: /path/to/pump
    method: GET
    data_selector: records
    params: {}
- name: Ondo
  endpoint:
    path: /path/to/ondo
    method: GET
    data_selector: records
    params: {}
- name: Stabiliti
  endpoint:
    path: /path/to/stabiliti
    method: GET
    data_selector: records
    params: {}
- name: Ripple USD
  endpoint:
    path: /path/to/ripple_usd
    method: GET
    data_selector: records
    params: {}
- name: World Liberty Financial USD
  endpoint:
    path: /path/to/world_liberty_financial_usd
    method: GET
    data_selector: records
    params: {}
- name: Rocket Pool
  endpoint:
    path: /path/to/rocket_pool
    method: GET
    data_selector: records
    params: {}
- name: Paladin Token
  endpoint:
    path: /path/to/paladin_token
    method: GET
    data_selector: records
    params: {}
- name: Arkham
  endpoint:
    path: /path/to/arkham
    method: GET
    data_selector: records
    params: {}
- name: Frax Share
  endpoint:
    path: /path/to/frax_share
    method: GET
    data_selector: records
    params: {}
- name: BitoPro Coin
  endpoint:
    path: /path/to/bitopro_coin
    method: GET
    data_selector: records
    params: {}
- name: wallets
  endpoint:
    path: /createahotwallet
    method: POST
- name: addresses
  endpoint:
    path: /addresses
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: POST
- name: tokens
  endpoint:
    path: /tokens
    method: GET
    data_selector: tokens
- name: token
  endpoint:
    path: /reference/creatersakey
    method: POST
    data_selector: tokens
    params: {}
- name: wallet
  endpoint:
    path: /reference/createahotwallet
    method: POST
    data_selector: wallets
    params: {}
- name: Smooth Love Potion
  endpoint:
    path: /token/0xCC8Fa225D80b9c7D42F96e9570156c65D6cAAa25
    method: GET
    data_selector: records
- name: SSV Token
  endpoint:
    path: /token/0x9D65fF81a3c488d585bBfb0Bfe3c7707c7917f54
    method: GET
    data_selector: records
- name: Wrapped NXM
  endpoint:
    path: /token/0x0d438f3b5175bebc262bf23753c1e53d03432bde
    method: GET
    data_selector: records
- name: Decentralized Entertainment Coin
  endpoint:
    path: /token/0x9fd96e8b2890edf9cb09bec684bec3fd3296dfbc
    method: GET
    data_selector: records
- name: Wrapped TON Coin
  endpoint:
    path: /token/0x582d872a1b094fc48f5de31d3b73f2d9be47def1
    method: GET
    data_selector: records
- name: UniCoin
  endpoint:
    path: /token/0xcaddf3f4668a3ea70ce822fbb86bcbadabbfe878
    method: GET
    data_selector: records
- name: Convex Token
  endpoint:
    path: /token/0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b
    method: GET
    data_selector: records
- name: ACEX
  endpoint:
    path: /token/0x0be7c99ff48fccb4aa8096d174cacf079c3d1717
    method: GET
    data_selector: records
- name: Global Dollar
  endpoint:
    path: /token/0xe343167631d89B6Ffc58B88d6b7fB0228795491D
    method: GET
    data_selector: records
- name: Tether Gold
  endpoint:
    path: /token/0x68749665FF8D2d112Fa859AA293F07A622782F38
    method: GET
    data_selector: records
- name: stETH
  endpoint:
    path: /token/0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84
    method: GET
    data_selector: records
- name: StablR USD
  endpoint:
    path: /token/0x7b43e3875440b44613dc3bc08e7763e6da63c8f8
    method: GET
    data_selector: records
- name: Quantoz USDQ
  endpoint:
    path: /token/0xc83e27f270cce0A3A3A29521173a83F402c1768b
    method: GET
    data_selector: records
- name: PUMP
  endpoint:
    path: /token/0xB6B15d694B07411823Fe04eCd27399f18C521574
    method: GET
    data_selector: records
- name: Ondo
  endpoint:
    path: /token/0xfAbA6f8e4a5E8Ab82F62fe7C39859FA577269BE3
    method: GET
    data_selector: records
- name: Stabiliti
  endpoint:
    path: /token/0x62FA6E67E9B9e95E82e7BDAB170681668706D1Cb
    method: GET
    data_selector: records
- name: Ripple USD
  endpoint:
    path: /token/0x8292bb45bf1ee4d140127049757c2e0ff06317ed
    method: GET
    data_selector: records
- name: World Liberty Financial USD
  endpoint:
    path: /token/0x8d0D000Ee44948FC98c9B98A4FA4921476f08B0d
    method: GET
    data_selector: records
- name: Rocket Pool
  endpoint:
    path: /token/0xd33526068d116ce69f19a9ee46f0bd304f21a51f
    method: GET
    data_selector: records
- name: Paladin Token
  endpoint:
    path: /token/0xAB846Fb6C81370327e784Ae7CbB6d6a6af6Ff4BF
    method: GET
    data_selector: records
- name: Arkham
  endpoint:
    path: /token/0x6e2a43be0b1d33b726f0ca3b8de60b3482b8b050
    method: GET
    data_selector: records
- name: Frax Share
  endpoint:
    path: /token/0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0
    method: GET
    data_selector: records
- name: BitoPro Coin
  endpoint:
    path: /token/0x93b1E78a3e652cd2e71C4a767595B77282344932
    method: GET
    data_selector: records
- name: wallets
  endpoint:
    path: /wallets
    method: GET
    data_selector: wallets
    params: {}
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: addresses
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params: {}
- name: health
  endpoint:
    path: /health
    method: GET
    data_selector: status
    params: {}
- name: wallets
  endpoint:
    path: /reference/createahotwallet
    method: POST
- name: addresses
  endpoint:
    path: /reference/addresses
    method: GET
- name: transactions
  endpoint:
    path: /reference/transactions
    method: POST
- name: health
  endpoint:
    path: /reference/health
    method: GET
- name: wallets
  endpoint:
    path: /createahotwallet
    method: POST
- name: addresses
  endpoint:
    path: /addresses
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: health
  endpoint:
    path: /info
    method: GET
- name: wallet
  endpoint:
    path: /createahotwallet
    method: POST
- name: addresses
  endpoint:
    path: /generatemanyaddress
    method: POST
- name: transactions
  endpoint:
    path: /sendmanytransaction
    method: POST
- name: wallets
  endpoint:
    path: /createahotwallet
    method: POST
- name: addresses
  endpoint:
    path: /addresses
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: health
  endpoint:
    path: /health
    method: GET
- name: system_status
  endpoint:
    path: /
    method: GET
    data_selector: status
    params: {}
- name: production_api_status
  endpoint:
    path: /790539070
    method: GET
    data_selector: api_status
    params: {}
- name: wallets
  endpoint:
    path: /createahotwallet
    method: POST
- name: addresses
  endpoint:
    path: /addresses
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: health
  endpoint:
    path: /health
    method: GET
- name: wallets
  endpoint:
    path: /createahotwallet
    method: POST
- name: transactions
  endpoint:
    path: /gettransfers
    method: POST
- name: addresses
  endpoint:
    path: /generatemanyaddress
    method: POST
- name: create_transaction_requests
  endpoint:
    path: /reference/sendmanytransaction
    method: POST
    data_selector: transactionRequests
    params: {}
- name: periodic_webhooks
  endpoint:
    path: /v2/reference/periodic-webhooks
    method: GET
    data_selector: webhookData
    params: {}
- name: tokens
  endpoint:
    path: /polygon/tokens
    method: GET
    data_selector: tokens
- name: wallet
  endpoint:
    path: /createahotwallet
    method: POST
    data_selector: data
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: data
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
- name: retrieve_wallet_balance
  endpoint:
    path: /reference/getwalletbalance
    method: POST
- name: retrieve_wallet
  endpoint:
    path: /reference/getwalletdata
    method: POST
- name: retrieve_list_of_wallets
  endpoint:
    path: /v2/reference/getlistofwallet
    method: POST
- name: retrieve_hot_wallet_transactions
  endpoint:
    path: /v2/reference/gettransferlist
    method: POST
- name: create_rsa_key
  endpoint:
    path: /reference/creatersakey
    method: POST
- name: import_rsa_key
  endpoint:
    path: /reference/import
    method: POST
- name: testnet_tokens
  endpoint:
    path: /reference/testnet
    method: GET
    data_selector: tokens
    params: {}
- name: mainnet_tokens
  endpoint:
    path: /reference/mainnet
    method: GET
    data_selector: tokens
    params: {}
- name: Liminal Production API Status
  endpoint:
    path: /status.liminalcustody.com/790539070
    method: GET
- name: Verify addresses
  endpoint:
    path: /reference/verifyaddresses
    method: GET
    data_selector: ''
    params: {}
- name: Verify addresses
  endpoint:
    path: /reference/verifyaddresses
    method: GET
    data_selector: ''
    params: {}
- name: retrieve_wallet_balance
  endpoint:
    path: /reference/getwalletbalance
    method: post
- name: retrieve_wallet
  endpoint:
    path: /reference/getwalletdata
    method: post
- name: retrieve_list_of_wallets
  endpoint:
    path: /v2/reference/getlistofwallet
    method: post
- name: retrieve_hot_wallet_transactions
  endpoint:
    path: /v2/reference/gettransferlist
    method: post
- name: create_rsa_key
  endpoint:
    path: /reference/creatersakey
    method: post
- name: import_rsa_key
  endpoint:
    path: /reference/import
    method: post
- name: Create Transaction Request
  endpoint:
    path: /v2/reference/sendmultipletransactionrequests
    method: POST
- name: Start or stop transaction execution
  endpoint:
    path: /v2/reference/startorstoptransactionbroadcasting
    method: POST
- name: Create a hot wallet
  endpoint:
    path: /reference/createahotwallet
    method: POST
- name: wallet
  endpoint:
    path: /createahotwallet
    method: POST
- name: addresses
  endpoint:
    path: /addresses
    method: POST
- name: transactions
  endpoint:
    path: /transactions
    method: POST
- name: travel_rule_transactions
  endpoint:
    path: /travel_rule_transactions
    method: POST
- name: health
  endpoint:
    path: /info
    method: GET
- name: wallets
  endpoint:
    path: /createahotwallet
    method: POST
- name: transactions
  endpoint:
    path: /sendmanytransaction
    method: POST
- name: verify_addresses
  endpoint:
    path: /reference/verifyaddresses
    method: GET
- name: wallets
  endpoint:
    path: /api/v1/wallets
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: records
- name: Create a hot wallet
  endpoint:
    path: /reference/createahotwallet
    method: POST
- name: Retrieve an address
  endpoint:
    path: /reference/generatesingleaddress
    method: GET
- name: Retrieve a list of addresses
  endpoint:
    path: /reference/generatemanyaddress
    method: GET
- name: Create transaction requests v2
  endpoint:
    path: /v2/reference/sendmanytransaction
    method: POST
- name: Create transaction requests v1
  endpoint:
    path: /reference/sendmanytransaction
    method: POST
- name: Create a hot wallet
  endpoint:
    path: /reference/createahotwallet
    method: POST
    data_selector: records
- name: Retrieve an address
  endpoint:
    path: /reference/generatesingleaddress
    method: GET
    data_selector: records
- name: Retrieve a list of addresses
  endpoint:
    path: /reference/generatemanyaddress
    method: GET
    data_selector: records
- name: Create transaction requests v2
  endpoint:
    path: /v2/reference/sendmanytransaction
    method: POST
    data_selector: records
- name: Create transaction requests v1
  endpoint:
    path: /reference/sendmanytransaction
    method: POST
    data_selector: records
- name: Gas Station Rules
  endpoint:
    path: /gas-station/rules
    method: GET
    data_selector: rules
- name: Transaction Logs
  endpoint:
    path: /gas-station/transaction-logs
    method: GET
    data_selector: logs
- name: Gas Station Balance
  endpoint:
    path: /gas-station/balance
    method: GET
    data_selector: balance
- name: Gas Station Rules
  endpoint:
    path: /update-gas-station-rules
    method: POST
    data_selector: rules
    params: {}
- name: Refill Gas Station
  endpoint:
    path: /refill-a-gas-station
    method: POST
    data_selector: refill
    params: {}
- name: Gas Station Rules
  endpoint:
    path: /docs/gas-station-guide
    method: GET
    data_selector: rules
    params: {}
- name: Transaction Logs
  endpoint:
    path: /docs/view-transaction-logs
    method: GET
    data_selector: logs
    params: {}
- name: Solana Sprayer
  endpoint:
    path: /docs/refill-solana-or-tron-sprayer
    method: GET
    data_selector: sprayer
    params: {}
- name: Tron Sprayer
  endpoint:
    path: /docs/refill-solana-or-tron-sprayer
    method: GET
    data_selector: sprayer
    params: {}
- name: withdraw_funds
  endpoint:
    path: /withdraw-funds-from-your-gas-station
    method: POST
    data_selector: transactions
    params: {}
- name: update_gas_station_rules
  endpoint:
    path: /update-gas-station-rules
    method: POST
    data_selector: rules
    params: {}
- name: balance_alerts
  endpoint:
    path: /set-up-balance-alerts
    method: POST
    data_selector: notifications
    params: {}
- name: consolidate_wallet_assets
  endpoint:
    path: /docs/consolidate-wallet-assets-api
    method: POST
    data_selector: records
- name: Gas Station Refill
  endpoint:
    path: /refill-gas-station
    method: POST
    data_selector: refill
    params: {}
- name: View Gas Station Balance
  endpoint:
    path: /view-gas-station-balance
    method: GET
    data_selector: balance
    params: {}
- name: View Transaction History
  endpoint:
    path: /view-transaction-logs
    method: GET
    data_selector: transactions
    params: {}
- name: consolidate_native_coins_utxo
  endpoint:
    path: /consolidate/native/utxo
    method: POST
    data_selector: response
    params: {}
- name: consolidate_native_coins_non_utxo
  endpoint:
    path: /consolidate/native/non-utxo
    method: POST
    data_selector: response
    params: {}
- name: consolidate_tokens_non_utxo
  endpoint:
    path: /consolidate/tokens/non-utxo
    method: POST
    data_selector: response
    params: {}
- name: withdraw_funds
  endpoint:
    path: /withdraw-funds-from-gas-station
    method: POST
    data_selector: transaction
    params: {}
- name: consolidate_wallet_assets
  endpoint:
    path: /api/wallet/consolidate-transaction
    method: POST
    data_selector: data
    params: {}
- name: wallet_balance_alerts
  endpoint:
    path: /set-up-balance-alerts
    method: POST
    data_selector: alerts
    params: {}
- name: Consolidate wallet assets
  endpoint:
    path: /docs/consolidate-wallet-assets-api
    method: POST
    data_selector: assets
    params: {}
- name: firewall_policy
  endpoint:
    path: /firewall/policy
    method: GET
    data_selector: policies
    params: {}
- name: transaction_risk
  endpoint:
    path: /transaction/risk
    method: GET
    data_selector: risks
    params: {}
- name: transfers
  endpoint:
    path: /transfers
    method: GET
    data_selector: transfers
    params: {}
- name: consolidate_native_coins_utxo
  endpoint:
    path: /reference/consolidatewalletassets
    method: POST
    data_selector: request_body
    params: {}
- name: consolidate_native_coins_non_utxo
  endpoint:
    path: /reference/consolidatewalletassets
    method: POST
    data_selector: request_body
    params: {}
- name: consolidate_tokens_non_utxo
  endpoint:
    path: /reference/consolidatewalletassets
    method: POST
    data_selector: request_body
    params: {}
- name: Transaction Risk
  endpoint:
    path: /api/transaction-risk
    method: POST
    data_selector: rules
    params: {}
- name: consolidate_wallet_assets
  endpoint:
    path: /api/wallet/consolidate-transaction
    method: POST
    data_selector: data
    params: {}
- name: Consolidate wallet assets
  endpoint:
    path: /api/consolidate-wallet-assets
    method: POST
    data_selector: data
    params: {}
- name: Travel Rule policy
  endpoint:
    path: /docs/implement-travel-rule-in-crypto-transactions
    method: GET
    data_selector: records
    params: {}
- name: anomalous_transactions
  endpoint:
    path: /anomaly-detection
    method: POST
    data_selector: transactions
    params: {}
- name: Transaction Risk rules
  endpoint:
    path: /transaction-risk/rules
    method: POST
    data_selector: rules
    params: {}
- name: unstake_cardano_assets
  endpoint:
    path: /unstake/cardano/assets
    method: POST
    data_selector: transaction
    params: {}
- name: Binance Main Account
  endpoint:
    path: /docs/set-up-your-binance-main-account
    method: POST
- name: Binance Sub Account
  endpoint:
    path: /docs/set-up-your-binance-sub-account
    method: POST
- name: Receive Funds
  endpoint:
    path: /docs/receive-funds-into-your-binance-main-account
    method: POST
- name: Send Funds
  endpoint:
    path: /docs/send-funds-from-your-binance-main-account
    method: POST
- name: anomalous_transactions
  endpoint:
    path: /anomaly_detection
    method: POST
    data_selector: transactions
    params: {}
- name: Binance Main Account
  endpoint:
    path: /api/v3/account
    method: GET
    data_selector: data
    params: {}
- name: stake_cardano_assets
  endpoint:
    path: /docs/stake-cardano-assets
    method: GET
- name: unstake_cardano_assets
  endpoint:
    path: /docs/unstake-cardano-assets
    method: GET
- name: unstake_cardano_assets
  endpoint:
    path: /unstake/cardano/assets
    method: POST
- name: Binance Main Account
  endpoint:
    path: /docs/set-up-your-binance-main-account
    method: GET
- name: Binance Sub Account
  endpoint:
    path: /docs/set-up-your-binance-sub-account
    method: GET
- name: Receive Funds
  endpoint:
    path: /docs/receive-funds-into-your-binance-main-account
    method: GET
- name: Send Funds
  endpoint:
    path: /docs/send-funds-from-your-binance-main-account
    method: GET
- name: create_hot_wallet_v1
  endpoint:
    path: /wallets/v1/create
    method: POST
    data_selector: success
    params:
      walletType: deposit
- name: create_hot_wallet_v2
  endpoint:
    path: /wallets/v2/create
    method: POST
    data_selector: success
    params:
      walletType: withdrawal
- name: Binance main account
  endpoint:
    path: /api/v3/account
    method: GET
- name: link_device
  endpoint:
    path: /link/device
    method: POST
- name: consolidate_transaction
  endpoint:
    path: /api/wallet/consolidate-transaction
    method: POST
    data_selector: data
    params: {}
- name: retrieve_transaction_status
  endpoint:
    path: /reference/gettransactionstatus
    method: GET
    data_selector: data
    params: {}
- name: create_hot_wallet_v1
  endpoint:
    path: /api/v1/create_hot_wallet
    method: POST
    data_selector: success
    params:
      walletType: deposit
- name: create_hot_wallet_v2
  endpoint:
    path: /api/v2/create_hot_wallet
    method: POST
    data_selector: success
    params:
      walletType: withdrawal
- name: warm_mpc_wallet
  endpoint:
    path: /create/warm-mpc-wallet
    method: POST
    data_selector: wallet
    params: {}
- name: hot_wallets
  endpoint:
    path: /hot_wallets
    method: GET
    data_selector: wallets
- name: deposit_wallet_addresses
  endpoint:
    path: /deposit_wallet_addresses
    method: GET
    data_selector: addresses
- name: assets_of_address
  endpoint:
    path: /assets_of_address
    method: GET
    data_selector: assets
- name: balance_alerts
  endpoint:
    path: /set-up-balance-alerts
    method: GET
    data_selector: alerts
    params: {}
- name: consolidate_transaction
  endpoint:
    path: /api/wallet/consolidate-transaction
    method: POST
    data_selector: ''
    params: {}
- name: transaction_status
  endpoint:
    path: /reference/gettransactionstatus
    method: POST
    data_selector: ''
    params: {}
- name: balance_alert
  endpoint:
    path: /balance_alerts
    method: POST
    data_selector: alert
    params: {}
- name: archiving_wallets
  endpoint:
    path: /archiving-wallets
    method: POST
    data_selector: results
    params: {}
- name: transaction_policy
  endpoint:
    path: /docs/policy-management-guide
    method: GET
    data_selector: policies
    params: {}
- name: delink_hardware_device
  endpoint:
    path: /docs/delink-a-hardware-device
    method: POST
    data_selector: request
    params: {}
- name: whitelist_contract_addresses
  endpoint:
    path: /whitelist/smart_contract_addresses
    method: GET
    data_selector: addresses
    params: {}
- name: Retrieve a Wallet
  endpoint:
    path: /reference/getwalletdata
    method: GET
    data_selector: walletData
- name: balance_alerts
  endpoint:
    path: /set-up-balance-alerts
    method: POST
    data_selector: alerts
    params: {}
- name: alerts
  endpoint:
    path: /view-details-of-an-alert
    method: GET
    data_selector: alertDetails
- name: archiving_wallets
  endpoint:
    path: /archiving-wallets
    method: GET
    data_selector: records
- name: consolidate_wallet_assets
  endpoint:
    path: /consolidatewalletassets
    method: POST
    data_selector: transactions
    params:
      feeRate: market rate
- name: resend_transaction_utxo
  endpoint:
    path: /resendtransactionutxo
    method: POST
    data_selector: transactions
    params:
      feeRate: increased rate
- name: staking
  endpoint:
    path: /staking
    method: POST
    data_selector: staking_data
    params: {}
- name: whitelist_contract_addresses
  endpoint:
    path: /whitelist/smart-contract-addresses
    method: GET
    data_selector: addresses
    params: {}
- name: Retrieve a Wallet
  endpoint:
    path: /reference/getwalletdata
    method: GET
    data_selector: wallet_data
- name: consolidate_wallet_assets
  endpoint:
    path: /reference/consolidatewalletassets
    method: POST
    data_selector: transactions
    params:
      feeRate: below market rate
- name: resend_transaction_utxo
  endpoint:
    path: /reference/resendtransactionutxo
    method: POST
    data_selector: transactions
    params:
      feeRate: higher fee
notes:
- Liminal offers integration with warm mobile wallets, cold multisig wallets, and
  hot API-based wallets.
- Liminal supports multiple organisations, allowing users to join and switch between
  them.
- Authentication in API requests ensures that only authorised users have access to
  the Liminal Express APIs.
- Currently, webhooks contain both x-platform-signature and x-liminal-signature headers.
  However, Liminal will deprecate x-liminal-signature in future.
- Testnet faucets provide free test tokens for development environments
- Mainnet provides a deployed environment for executing real-world financial operations
- API key operations are logged in Audit Logs which you can access in the Reports
  tab of the Vaults dashboard.
- You also receive alerts on API key actions, such as creation, enabling, and disabling.
- You can disable an API key to immediately revoke access for any reason, such as
  a security breach, unauthorised use, or changes in your organisational requirements.
- You can only rotate enabled API keys which are within their expiry period.
- Ensure that you have IAM users with administrative access to AWS, who can perform
  MPC deployment.
- It is advised to select t3.large to avoid the risk of failure.
- It is advised to select m5.large to avoid the risk of failure.
- Ensure to back up the snapshot of EC2 and RDS.
- Run the following command only if there are permission issues in pulling the new
  MPC image.
- Ensure that you have existing SSH keys in your AWS account. If not, create a new
  one.
- Ensure to replace the placeholders with your specific configuration details.
- Ensure to use the same version of the Liminal Express in the following configuration
  as you did in step 3.
- The availability of the faucets listed may change over time. Developers are advised
  to visit the respective faucet URLs to confirm functionality.
- You can raise a support ticket to request for new tokens in the testnet or mainnet
  environment as per your business requirements.
- The availability of the faucets listed in the table above may change over time.
  Developers are advised to visit the respective faucet URLs to confirm functionality.
- Ensure to run the API only once after the shard sharing request is approved by the
  owner on their mobile device.
- Ensure to add the key pair 'walletVersion':'1' in the API request body.
- Liminal does not support the Bech32 address format for any UTXO chain.
- Liminal pre-indexes up to 39,997 addresses on its own infrastructure.
- A maximum of 1000 addresses can be indexed in each API call.
- The index path of addresses use the m/0/0 format, where m/0/0 is reserved for your
  deposit wallet address.
- The index path of addresses use the m/0/0 format.
- Liminal automatically generates the same set of addresses for all EVM chain deposit
  wallets that you create after creating your first Ethereum wallet.
- When a new deposit wallet is created, Liminal pre-indexes up to 39,997 addresses
  on its own infrastructure.
- This API doesn't verify whether an address is associated with a wallet.
- For Stellar, Ripple, and Cosmos chain wallets, the API response will also indicate
  whether an address requires a memo/destination tag for transferring assets to that
  address.
- Use the Verify addresses API to validate the destination addresses before using
  this API.
- Provide the memo or tag in the data field of the API request for the transaction.
- The values of `block` and `blockConfirmations` parameters can return either a number
  or `null`.
- The `fromDate` parameter provided as "2024-05-02" is interpreted as "2024-05-02T00:00:00.000Z".
- The `toDate` provided as "2024-05-02" is interpreted as "2024-05-02T23:59:59.000Z".
- The `fromDate` parameter provided as "2024-05-02" is interpreted as "2024-05-02T00:00:00.000Z",
  indicating the start of the day. Similarly, if the `toDate` provided as "2024-05-02"
  is interpreted as "2024-05-02T23:59:59.000Z", indicating the end of the day.
- For the `receive` transaction type, the sequence ID isn't returned in the response.
- Status type 3 is reserved for internal use by Liminal.
- The info array in the API success response includes objects containing addresses
  and reasons for asset consolidation failures for those addresses, like insufficient
  balance, exceeded fee limits, etc.
- You can use this API once every 4 hours per wallet.
- It is advised to set up a CRON job for each wallet.
- It is advised to execute this API in your system at a minimum interval of two minutes,
  to facilitate successful transaction mining.
- This API is used specifically for resubmitting transactions of hot withdrawal wallets.
- In case feeMultiplier is not configured in the request body, the default fee multiplier
  for all EVM chains is 2.
- 'Transaction approval can be managed in two ways: through manual or automatic approval.'
- These procedures apply to both the Hot Withdrawal Wallet and the Deposit Wallet.
- It is advised to perform the redundancy check upon receiving Liminal webhooks, using
  the Retrieve a transaction API.
- For batch transfers, a single webhook is triggered with multiple outputs when sending
  the same native coins to different addresses.
- Currently, webhooks contain only the `x-platform-signature` header. Liminal has
  deprecated the `x-liminal-signature` header.
- Before receiving batch token transactions from smart contracts into your deposit
  hot wallets, ensure to whitelist smart contract addresses.
- Receive webhook payload for batch transactions
- Every successful and completed webhook for batch transfers will receive its associated
  periodic webhooks.
- Responses will be delivered in the same order of that in the batch transaction.
- Sometimes periodic webhooks might be missed if the transaction is finalized before
  Liminal reads the blockchain's latest block.
- In case the same asset is being transferred to different addresses of the same Deposit
  Wallet, there will be only 1 success webhook and its associated periodic webhooks.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects may return nulls in deeply nested fields
- To activate periodic webhooks, an organisation must first configure the minimum
  block confirmation number.
- An organisation must configure the minimum block confirmation number to activate
  periodic webhooks.
- Currently, default periodicity for Ethereum is 6 and for Bitcoin is 1.
- For Ethereum, 22nd block is considered as the finalisation block.
- Transaction statuses are sent in periodic webhooks, distinguishing between received
  and completed transactions.
- Ethereum considers the 22nd block as the finalisation block.
- Transaction details include inputs and outputs.
- Transaction status can vary and should be checked for completion.
- The success webhook response will have periodicity value as null.
- Sometimes a periodic webhook might be missed to be sent if the transaction is finalised
  before we re-read the blockchain. In that case you will directly receive the success/completed
  webhook.
- Currently, webhooks contain only the `x-platform-signature` header.
- Liminal has deprecated the `x-liminal-signature` header.
- Currently, webhooks contain only the x-platform-signature header.
- Liminal has deprecated the x-liminal-signature header.
- We standardize the decimal precision for specific fields in the webhook payload
  to ensure all systems reliably interpret transaction amounts.
- Sample payload for the batch transaction in a send transaction webhook
- Sample payload for the batch transaction in a send transaction webhook is provided.
- Ensure that your webhook endpoint is accessible over the internet with a secure
  HTTPS URL.
- A unique Signing Key is generated corresponding to the Webhook URL to authenticate
  incoming webhook requests.
- You must implement a signature verification process for webhook requests.
- As an owner, admin, or member of your organisation, you have the access to view
  all the webhooks in the webhook dashboard in Vaults.
- As an owner, admin, or member of your organisation, you have the access to view
  all the webhooks in the webhook dashboad in Vaults.
- In rare cases, Liminal may miss sending webhook notifications to your systems.
- Liminal requires acknowledgement of the sent webhooks within 10 seconds of delivery.
  A 200 status code indicates success, while any other status code indicates failure.
  If no acknowledgment is received within this time frame, the attempt will be considered
  a failure.
- Multiple URLs can be set up simultaneously for webhooks, but it is recommended to
  configure only one webhook URL at a time.
- Liminal automatically resends failed webhooks up to five times at specified intervals.
- Multiple URLs can be set up simultaneously for webhooks.
- Liminal Supports Cardano Preprod
- Liminal supports Eth Sepolia.
- Supports multiple tokens on the Polygon chain.
- To add new tokens, raise a support ticket as directed in the Add new tokens guide.
- This update introduces address screening functionality to the create transaction
  requests API for Hot withdrawal wallets.
- Webhooks will now include 2 new objects - transactionStatus and blockConfirmationData
  as part of our ongoing efforts to improve transaction status visibility.
- Resend EVM-chain Transactions API optimizes gas fee usage
- Certain chains may have reported errors for consolidation
- This is a recommended upgrade as it improves over all security and is fully backward
  compatible.
- Improvements to Resend EVM-chain Transactions API to optimise gas fee usage
- CELO chain support for hot and Mobile (MPC) wallets
- We have started maintaining release notes for Vaults web and mobile since 30th,
  July , 2025
- Preventing loss of funds by interacting with malicious addresses.
- Destination addresses will now be screened in real time for cyber and fraud related
  risks.
- Complete transaction initiation flow now supported directly from mobile for warm
  MPC wallets
- Travel Rule compliance built in to help you stay regulatory-ready
- Requires setup of two-factor authentication (2FA) using Google Authenticator.
- Liminal provides APIs and user-friendly interfaces for seamless wallet and transaction
  management.
- Liminal supports multiple organisations, meaning that users can join and participate
  in more than one organisation without logging into different accounts.
- Users can now stake TRX tokens via the Liminal platform using Nobi as the validator.
- Seamless, Secure and Compliant Transaction Initiation
- Currently, both deposit and withdrawal v2 wallets support only the send (outgoing
  transactions) flow.
- Requires setup of connected app in api
- Ensure that you have shared your company details with the Liminal Sales team.
- Install Google Chrome on your computer to access Liminal web applications.
- Install Google Authenticator mobile application to set up your two-factor authentication
  (2FA).
- Install Postman on your computer.
- The entire workflow of Liminal WaaS is automated, reducing the operational overhead.
- All users (owner, admin, member) can be added to a team of transaction initiators
  and signers.
- A user who has set up their signing devices like mobile phone or Ledger, can be
  added to the team of signers.
- Option to remove a user directly from your organisation dashboard is unavailable.
- Gas Station automatically refuels MPC deposit wallets with the required amount of
  native coins.
- If the Gas Station balance is insufficient, the transaction will not be executed.
- Gas Station rules are disabled by default.
- Reach out to the Liminal support team at support@lmnl.app if your Gas Station is
  not visible in the Liminal Vaults UI.
- You can update rules and set up your Gas Station irrespective of the current amount
  of native coins it contains. It will reflect under Wallets > Gas Station, but won't
  be functional until you add sufficient assets to it.
- For MPC wallets, you first have to enable Gas Station. Once it's enabled and rules
  are updated, the Gas Station rules will be available in the Wallets > Gas Station
  > Rules section. To learn how to enable the Gas Station rules, see Enable auto gas
  refill.
- For EVM chains, the updated Gas Station rules take effect after a 1-hour interval.
- Currently, the option to remove a user directly from your organisation dashboard
  is unavailable.
- You can view the Gas Station balance to check whether it is low on balance or not.
- Gas Station is created at the time of creating a new organisation for your VASP
  on Liminal Vaults.
- A single Gas Station is created for each protocol. For instance, one Gas Station
  is created for Ethereum (ETH), and one for Binance Smart Chain (BSC).
- You can view the fund movements from the Gas Station to Sprayer or MPC wallets.
- Additionally, you can view the gas fee deducted from the Gas Station for a multisig
  wallet transaction.
- A gas fee is associated with every transaction.
- Make sure your Solana or Tron Sprayer has enough native SOL assets to automatically
  distribute to deposit wallet addresses with insufficient balances.
- Wallet balance alerts are notifications sent to users of an organisation when a
  wallet balance falls below or goes above predefined thresholds.
- As an admin, you can enable or disable the Gas Station rules for a blockchain in
  Liminal Vaults.
- Stellar, Ripple, and Cosmos chain wallets do not support consolidation because they
  use a single wallet address.
- For UTXO chains, you can consolidate upto 50 addresses in a single transaction.
- For non-UTXO chains, each address requires a separate transaction.
- Furthermore, you can also view the funds received in the Gas Station.
- Ensure that you secure a small portion of your funds in your Gas Station to cover
  the gas fee.
- Set up a CRON job in your codebase for best results. The time interval of 15 minutes
  is recommended.
- The destination address set up in your Smart Consolidation Rule will take priority
  over the 'targetAddress' parameter in the API.
- If you don’t configure a Smart Consolidation Rule, the Consolidate wallet assets
  API will apply the standard threshold values for consolidation.
- Liminal currently doesn’t support the incoming transactions (receive) workflow,
  however, it is in the process to be released soon.
- Liminal Firewall supports TRM Labs for Transaction Risk Monitoring compliance.
- Set up a CRON job to run every 15 minutes for best results.
- Existing spending limits and transaction limits on policies will still work parallelly
  to this policy, if configured.
- Currently, the transaction amount in the policy is configured in USD. Native denominations
  are not supported.
- Implementation of add/edit requests for firewall rules will take up to 2 working
  days.
- This feature supports only EVM chains.
- To trigger the process, you must call the Consolidate wallet assets API.
- The refill schedule requires approvals from the quorum of signers configured for
  the multisig wallet.
- You can manually refill a withdrawal wallet when the refill schedule is not yet
  activated, or when in a cooldown period.
- The policy is suitable for wallets with a high volume of transactions, particularly
  for hot withdrawal wallets.
- The policy is supported by all chains.
- For wallets with low transaction count, it is recommended to use other policies
  like Spending Limit policy and Transaction Limit policy.
- The staking rewards rate of protocols may vary over time. For the most accurate
  and up-to-date reward percentage, visit the Figment website.
- It will take approximately 2 days for your staked balance to start accruing rewards.
- Liminal supports third-party providers—Notabene for Travel Rule policy and TRM Labs
  for Transaction Risk policy.
- The staking rewards rate for Cardano may vary over time. For the most accurate and
  up-to-date reward percentage, visit the Figment website.
- According to a policy rule, where a transaction requires one or more approvals from
  the designated team.
- The one-time staking fee of 2 ADA will be deducted from your total staking amount
  at the time of registration. This fee will not be added back to your staked amount.
- Liminal currently supports integration with Binance.
- Direct transfers between sub-accounts are not supported in Liminal Vaults.
- 'Ensure that the following API restrictions are enabled: Enable Reading, Enable
  Withdrawals.'
- 'Restrict network access to allowed IP addresses: 18.133.153.74.'
- Currently, Liminal does not support transfers between Binance main accounts and
  sub accounts. This implementation is in the process to be released soon.
- The staking rewards rate for Solana may vary over time. For the most accurate and
  up-to-date reward percentage, visit the Figment website.
- Binance automatically converts TUSD, USDP, and USDC stablecoins to BUSD when deposited
  into a Binance main account from any source.
- Before depositing any asset into an exchange account in Liminal Vaults for the first
  time, it is highly recommended to do a small test transaction and make sure the
  funds have arrived in the exchange account.
- Transfers from your Binance main account are permitted after you whitelist the destination
  addresses in the Binance platform.
- Ensure that withdrawal amounts are greater than $10, as per Binance regulations.
- Uses Google Authenticator or SMS for two-factor authentication
- The one-time staking fee of 2 ADA will be deducted from your total staking amount
  at the time of registration.
- Ensure to restore your mobile signing keys using the recovery kit. Without the recovery
  kit and correct passphrase, you won’t be able to access your assets.
- Hot wallets are wallets where your keys are accessible online.
- All hot wallets use the Multi-Party Computation (MPC) technology.
- Keep a check on the value of the 'coin' parameter before running the API.
- Enable Reading and Enable Withdrawals API restrictions are required.
- Restrict network access to allowed IP address 18.133.153.74.
- Warm MPC wallets provide a middle ground between hot and cold wallets.
- It uses the Multi-Party Computation (MPC) technology.
- Ensure that the Binance sub account is already created in the Binance platform.
- Currently, Liminal does not support transfers between Binance main accounts and
  sub accounts.
- Ledger is the only hardware device supported currently.
- For optimal security, it's recommended to opt for a 2 of 3 configuration or higher.
- When sending BUSD from your Binance account, you can select TUSD, USDP, or USDC
  from the asset menu to convert BUSD automatically and transfer it.
- Currently the Bitcoin Legacy application is only available in developer mode in
  the Ledger Live application.
- Binance officially shut down the BNB Beacon Chain (BEP2) on 19 November 2024.
- Starting 3 December 2024 - Tools will be available to recover assets left on the
  Beacon Chain.
- The owner of an organisation can invite admins and members, whereas, admins can
  only invite members.
- When consolidating native coins, you may omit the `tokenOptions` object from the
  request body.
- For token consolidation, the `tokenOptions` object must be included, specifying
  `tokenName` and `tokenAddress.
- Transactions require manual approvals through the Liminal Vaults mobile application.
- Before you start your first transaction, ensure to whitelist the destination address.
- After completing your account setup in the Liminal Vaults app on your mobile device
  and creating the recovery kit, you can switch to a new device by importing the recovery
  kit. Ensure to use the same passphrase that was set during the initial account setup
  on your old device.
- Blind signing in multisig wallets refers to signing a transaction on your hardware
  device without being able to review the transaction details before approving the
  transaction.
- Creating policy rules helps you to effectively manage and safeguard your transactions.
- Once these policies are created, they require a minimum number of approvals, as
  configured in Liminal Vaults.
- Keep a check on the value of the `coin` parameter before running the API.
- Hot Withdrawal wallets don't support whitelisting policy.
- Requires manual approvals through the Liminal Vaults mobile application.
- The hot deposit wallets don't support this policy.
- Liminal supports Ledger devices for multisig wallets.
- Ensure that all the approvers have the view access to the wallets for which the
  policy is created.
- For production environment, use https://vaults.lmnl.app/; for development environment,
  use https://dev.lmnl.app/
- In case of a multisig wallet, any signer from the signing team can speed up a pending
  transaction in Vaults. For MPC wallets, any initiator from the initiating team of
  the wallet can use this feature.
- For Solana chain, the transactions stuck due to low transaction fees are automatically
  retried by the system, so no further action is required from you.
- Ensure to whitelist smart contract addresses before receiving batch token transactions.
- For token consolidation, the `tokenOptions` object must be included, specifying
  `tokenName` and `tokenAddress`.
- As the owner or admin of your organisation, you can view and filter alerts in Vaults.
- Warm wallets provide a middle ground between hot and cold wallets.
- At least one of the balance limits (Lower or Higher) is mandatory.
- As an owner or admin of your organisation, you can view all the active alerts in
  Vaults.
- Blind signing allows for transaction verification without prior review.
- Manually generating the Message Hash and Domain Hash is highly recommended.
- Admins and Members will only be able to view the Address Screening Settings but
  cannot update any of the values.
- For EVM Chains only
- Liminal shows the decoded input data for easy verification
- This action is unavailable in Vaults, however, you can submit a support ticket to
  request this action.
- Ensure that the organisation owner raises the request by submitting their email
  address.
- Multisig wallet allows self-managed storage outside Liminal Vaults.
- If you set up the minimum number of approvals as '1', then the user who creates
  a policy can approve their policies without needing additional approvals.
- If you update minimum approvals, any pending policy change requests will be automatically
  rejected.
- Setup transition times - Set up a time when the assets move from activating to earning
  stage.
- Buffer unbonding period - Set up a buffer period between when a customer requests
  to unstake and when the assets are actually unstaked.
- Buffer activation period - Set up a buffer period for activation.
- 'Rewards buffer: Maintain a buffer of the rewards that you distribute to your customers
  vs the rewards earned by you on chain.'
- 'Liquidity reserve: Maintain a reserve of liquid assets to handle immediate withdrawal
  requests.'
- Staking agreement - Inform your customers about your staking terms and conditions,
  unbonding period, and any penalties or fees.
- Limit unstaking - Implement a daily or weekly limit on the amount a customer can
  unstake.
- Liminal wallets are BIP32-compatible Hierarchical Deterministic (HD) Wallets.
- Both strategies utilise non-hardened BIP-44 derivation methods.
- In case of a multisig wallet, any signer from the signing team can speed up a pending
  transaction in Vaults.
- For MPC wallets, any initiator from the initiating team of the wallet can use this
  feature.
- Liminal currently only supports Notabene, which may or may not be supported by other
  VASPs.
- Hot wallets are wallets where the private keys are held online and transactions
  are signed automatically.
- Each deposit wallet includes details like the list of all addresses, total wallet
  balance, individual asset balances for each address, configured policies.
- At least one of Lower Balance Limit or Higher Balance Limit is mandatory.
- After enabling Travel Rule in Liminal Vaults and configuring outgoing transactions,
  your customers can send transactions that are compliant with Travel Rule.
- As the owner or admin of your organisation, you can edit, disable or delete an alert
  in Vaults.
- Delinking is unavailable in Vaults, request must be made via support ticket.
- Liminal supports integration with various wallet types including Warm mobile wallets,
  Cold multisig wallets, and Hot API-based wallets.
- Liminal Gas Station provides the final signature and also bears the gas fees.
- Liminal Express APIs are RESTful APIs that allow you to perform operations on your
  wallets, like retrieving address balances, creating hot wallets, consolidating wallet
  assets, updating transaction statuses, creating Travel Rule transactions, etc.
- Liminal provides staking services primarily to organisations in Liminal Vaults.
- Liminal enforces a contract whitelisting process for these transactions to be automatically
  processed by the system.
- This process should strictly be performed on an offline machine to ensure security.
- Tenderly simulations might fail due certain internal reasons or Tenderly service
  provider being down. In that case you can retry the simulation three times.
- Liminal currently only supports Notabene.
- Both originator VASP and beneficiary VASP should be integrated with Notabene for
  these transactions.
- To configure the Travel Rules for your transactions, you have to first set up your
  account in Notabene.
- Toggle the Force travel rule check on all transactions option to enable it for all
  transactions.
- Liminal has integrated with TRM Labs to evaluate transaction risks and provide risk
  scores, based on the defined rule parameters in the Transaction Risk policy.
- Liminal supports the following compliances for your transactions.
- Liminal Express APIs are RESTful APIs that allow you to perform operations on your
  wallets.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '429: Too Many Requests'
- '401 Unauthorized: Authentication failed (e.g. invalid token specified by the Authorisation
  header).'
- '429 Too Many Requests: The client request rate exceeded the limit.'
- 'Encrypted shards not found: The owner has not yet approved the shard sharing request.'
- 'EXCEEDS_MAXIMUM_ADDRESSES: Cannot generate more than 39,997 addresses without prior
  assignment.'
- Maximum limit of 1000 addresses in each API call.
- '422: Transaction will be blocked if the destination address risk score is equal
  to or above the threshold.'
- 'Consolidation Skipped for 0xFF301F0174c317BACA4eE98E00e95Ddb92AfB2A0 due to min
  amount rule violation: {"currentBalance":"0.274786727528","minRequired":"20","currency":"USD"}'
- 'Consolidation Skipped for 0xf481D1fF229d8357413aF14727d6D4d22f7eE95B due to min
  amount rule violation: {"currentBalance":"0.00394309","minRequired":"0.01","currency":"NATIVE"}'
- Final amount 14.10952 is less than min consolidation amount 15
- 'address not whitelisted: 500'
- 'Null or empty: 400'
- 'invalid: 404'
- 'Null or empty: 500'
- 'unsupported chains: 500'
- 'Null / empty / Invalid: 401'
- address not whitelisted
- Null or empty
- invalid
- unsupported chains
- '502 bad gateway: If the server is not running'
- '400 Bad Request: Check the payload format.'
- '401 Unauthorized: Invalid API key provided.'
- '404 Not Found: The endpoint does not exist.'
- 'Transaction finalized before Liminal reads the blockchain''s latest block: Check
  webhook delivery.'
- 'transaction not found: Ensure the transaction ID is correct.'
- 'insufficient funds: Check the wallet balance.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Invalid block confirmation number: Ensure the number is within the permissible
  range.'
- '400 Bad Request: Check request parameters and format.'
- '404 Not Found: Ensure the requested transaction exists.'
- '500 Internal Server Error: A problem occurred on the server.'
- If the webhook is not triggered, check the webhook dashboard, ensure the configured
  URL is accurate, confirm accessibility from the public internet, and verify authentication
  process.
- If all automatic retries fail, you have the option to manually retry sending the
  webhook.
- Reported errors with Consolidation API now fixed
- 'MISSING_BENEFICIARY_DATA: Message is missing information about the beneficiary.'
- 'WAITING_FOR_INFORMATION: Missing contact details to reach the beneficiary VASP.'
- 'CANCELLED: Message has been automatically or manually cancelled.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://vaults.lmnl.app
source_metadata: null
