resources:
- name: jobs
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params:
      per_page: 50
- name: input_details
  endpoint:
    path: /inputs/{input_id}
    method: GET
    data_selector: input_details
- name: output_details
  endpoint:
    path: /outputs/{output_id}
    method: GET
    data_selector: output_details
- name: get_minutes_used
  endpoint:
    path: /api/v2/reports/minutes
    method: GET
    data_selector: total
    params:
      from: 30 days ago
      to: today
- name: get_output_progress
  endpoint:
    path: /api/v2/reports/minutes
    method: GET
    data_selector: total
    params:
      output_id: required
- name: jobs
  endpoint:
    path: /jobs
    method: POST
    data_selector: null
    params: {}
- name: Full access keys
  endpoint:
    path: /api/keys/full
    method: GET
    data_selector: keys
    params: {}
- name: Read only keys
  endpoint:
    path: /api/keys/read-only
    method: GET
    data_selector: keys
    params: {}
- name: Integration mode keys
  endpoint:
    path: /api/keys/integration-mode
    method: GET
    data_selector: keys
    params: {}
- name: output
  endpoint:
    path: /output
    method: POST
    data_selector: outputs
- name: outputs
  endpoint:
    path: /encoding/outputs
    method: POST
    data_selector: outputs
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notifications
- name: hls_job
  endpoint:
    path: /hls_job
    method: POST
    data_selector: output
    params: {}
- name: job_settings
  endpoint:
    path: /jobs
    method: POST
    data_selector: job
    params: {}
- name: input
  endpoint:
    path: /input
    method: POST
    data_selector: input
    params: {}
- name: outputs
  endpoint:
    path: /outputs
    method: POST
    data_selector: outputs
    params: {}
- name: region
  endpoint:
    path: /region
    method: POST
    data_selector: region
    params: {}
- name: test
  endpoint:
    path: /test
    method: POST
    data_selector: test
    params: {}
- name: private
  endpoint:
    path: /private
    method: POST
    data_selector: private
    params: {}
- name: download_connections
  endpoint:
    path: /download_connections
    method: POST
    data_selector: download_connections
    params: {}
- name: pass_through
  endpoint:
    path: /pass_through
    method: POST
    data_selector: pass_through
    params: {}
- name: mock
  endpoint:
    path: /mock
    method: POST
    data_selector: mock
    params: {}
- name: grouping
  endpoint:
    path: /grouping
    method: POST
    data_selector: grouping
    params: {}
- name: aspera_transfer_policy
  endpoint:
    path: /aspera_transfer_policy
    method: POST
    data_selector: aspera_transfer_policy
    params: {}
- name: transfer_minimum_rate
  endpoint:
    path: /transfer_minimum_rate
    method: POST
    data_selector: transfer_minimum_rate
    params: {}
- name: transfer_maximum_rate
  endpoint:
    path: /transfer_maximum_rate
    method: POST
    data_selector: transfer_maximum_rate
    params: {}
- name: expected_md5_checksum
  endpoint:
    path: /expected_md5_checksum
    method: POST
    data_selector: expected_md5_checksum
    params: {}
- name: credentials
  endpoint:
    path: /credentials
    method: POST
    data_selector: credentials
    params: {}
- name: outputs
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
- name: cae_profile
  endpoint:
    params:
      reference_profile_for_comparison: ref_static_profile
- name: cae_rendition
  endpoint:
    params: {}
- name: dynamic_profile_rendition
  endpoint:
    params: {}
- name: url
  endpoint:
    params: {}
- name: secondary_url
  endpoint:
    params: {}
- name: base_url
  endpoint:
    params: {}
- name: filename
  endpoint:
    params: {}
- name: package_filename
  endpoint:
    params: {}
- name: package_format
  endpoint:
    params: {}
- name: device_profile
  endpoint:
    params: {}
- name: strict
  endpoint:
    params: {}
- name: outputs
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
- name: cae_options
  endpoint:
    params:
      min_renditions: 2
      max_renditions: 6
- name: max_resolution
  endpoint:
    path: /max_resolution
    method: GET
    data_selector: max_resolution
    params: {}
- name: max_frame_rate
  endpoint:
    path: /max_frame_rate
    method: GET
    data_selector: max_frame_rate
    params: {}
- name: keyframe_rate
  endpoint:
    path: /keyframe_rate
    method: GET
    data_selector: keyframe_rate
    params: {}
- name: fixed_frame_rate
  endpoint:
    path: /fixed_frame_rate
    method: GET
    data_selector: fixed_frame_rate
    params: {}
- name: min_bitrate
  endpoint:
    path: /min_bitrate
    method: GET
    data_selector: min_bitrate
    params: {}
- name: max_bitrate
  endpoint:
    path: /max_bitrate
    method: GET
    data_selector: max_bitrate
    params: {}
- name: max_first_rendition_bitrate
  endpoint:
    path: /max_first_rendition_bitrate
    method: GET
    data_selector: max_first_rendition_bitrate
    params: {}
- name: min_granularity
  endpoint:
    path: /min_granularity
    method: GET
    data_selector: min_granularity
    params: {}
- name: max_granularity
  endpoint:
    path: /max_granularity
    method: GET
    data_selector: max_granularity
    params: {}
- name: video_codec
  endpoint:
    path: /video_codec
    method: GET
    data_selector: video_codec
    params: {}
- name: bitrate_cap_to_bitrate_ratio
  endpoint:
    path: /bitrate_cap_to_bitrate_ratio
    method: GET
    data_selector: bitrate_cap_to_bitrate_ratio
    params: {}
- name: buffer_size_to_bitrate_ratio
  endpoint:
    path: /buffer_size_to_bitrate_ratio
    method: GET
    data_selector: buffer_size_to_bitrate_ratio
    params: {}
- name: bitrate_cap_offset
  endpoint:
    path: /bitrate_cap_offset
    method: GET
    data_selector: bitrate_cap_offset
    params: {}
- name: buffer_size_offset
  endpoint:
    path: /buffer_size_offset
    method: GET
    data_selector: buffer_size_offset
    params: {}
- name: quality_rate_tune
  endpoint:
    path: /quality_rate_tune
    method: GET
    data_selector: quality_rate_tune
    params: {}
- name: select_baseline_profile_configuration
  endpoint:
    path: /select_baseline_profile_configuration
    method: GET
    data_selector: select_baseline_profile_configuration
    params: {}
- name: select_distinct_configurations
  endpoint:
    path: /select_distinct_configurations
    method: GET
    data_selector: select_distinct_configurations
    params: {}
- name: video_configurations
  endpoint:
    path: /video_configurations
    method: GET
    data_selector: video_configurations
    params: {}
- name: watermarks
  endpoint:
    path: /watermarks
    method: GET
    data_selector: watermarks
    params: {}
- name: true_resolution
  endpoint:
    path: /true_resolution
    method: GET
    data_selector: true_resolution
    params: {}
- name: video_configuration
  endpoint:
    path: /encoding-settings/video-configurations
    method: GET
    data_selector: video_settings
- name: conditional_outputs
  endpoint:
    path: /conditional_outputs
    method: POST
    data_selector: outputs
    params: {}
- name: max_video_bitrate
  endpoint:
    path: /max_video_bitrate
    method: GET
    data_selector: max_video_bitrate
    params: {}
- name: require_audio
  endpoint:
    path: /require_audio
    method: GET
    data_selector: require_audio
    params: {}
- name: require_video
  endpoint:
    path: /require_video
    method: GET
    data_selector: require_video
    params: {}
- name: notifications
  endpoint:
    path: /general-information/getting-notifications-when-videos-are-finished.html
    method: POST
    data_selector: notifications
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notifications
- name: audio_settings
  endpoint:
    path: /encoding-settings/general/encoding-settings-audio
    method: GET
    data_selector: audio_settings
- name: audio_settings
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: audio_gain
  endpoint:
    path: /audio/gain
    method: POST
    data_selector: outputs
    params: {}
- name: audio_normalize
  endpoint:
    path: /audio/normalize
    method: POST
    data_selector: outputs
    params: {}
- name: audio_pre_normalize
  endpoint:
    path: /audio/pre_normalize
    method: POST
    data_selector: outputs
    params: {}
- name: audio_post_normalize
  endpoint:
    path: /audio/post_normalize
    method: POST
    data_selector: outputs
    params: {}
- name: audio_bass
  endpoint:
    path: /audio/bass
    method: POST
    data_selector: outputs
    params: {}
- name: audio_treble
  endpoint:
    path: /audio/treble
    method: POST
    data_selector: outputs
    params: {}
- name: audio_highpass
  endpoint:
    path: /audio/highpass
    method: POST
    data_selector: outputs
    params: {}
- name: audio_lowpass
  endpoint:
    path: /audio/lowpass
    method: POST
    data_selector: outputs
    params: {}
- name: audio_compression_ratio
  endpoint:
    path: /audio/compression/ratio
    method: POST
    data_selector: outputs
    params: {}
- name: audio_compression_threshold
  endpoint:
    path: /audio/compression/threshold
    method: POST
    data_selector: outputs
    params: {}
- name: audio_expansion_ratio
  endpoint:
    path: /audio/expansion/ratio
    method: POST
    data_selector: outputs
    params: {}
- name: audio_expansion_threshold
  endpoint:
    path: /audio/expansion/threshold
    method: POST
    data_selector: outputs
    params: {}
- name: audio_fade
  endpoint:
    path: /audio/fade
    method: POST
    data_selector: outputs
    params: {}
- name: audio_fade_in
  endpoint:
    path: /audio/fade/in
    method: POST
    data_selector: outputs
    params: {}
- name: audio_fade_out
  endpoint:
    path: /audio/fade/out
    method: POST
    data_selector: outputs
    params: {}
- name: audio_loudness_level
  endpoint:
    path: /audio/loudness/level
    method: POST
    data_selector: outputs
    params: {}
- name: audio_karaoke_mode
  endpoint:
    path: /audio/karaoke/mode
    method: POST
    data_selector: outputs
    params: {}
- name: video_bit_depth
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: video_reference_frames
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: video_codec_profile
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: video_codec_level
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: video_bframes
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: color_metadata
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: rotate
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: POST
    data_selector: rotate
    params: {}
- name: flip
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: POST
    data_selector: flip
    params: {}
- name: deinterlace
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: POST
    data_selector: deinterlace
    params: {}
- name: deinterlace_mode
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: POST
    data_selector: deinterlace_mode
    params: {}
- name: sharpen
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: POST
    data_selector: sharpen
    params: {}
- name: denoise
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: POST
    data_selector: denoise
    params: {}
- name: autolevel
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: POST
    data_selector: autolevel
    params: {}
- name: deblock
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: POST
    data_selector: deblock
    params: {}
- name: video_color_format
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: video_color_format
    params: {}
- name: outputs
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: outputs
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: frame_rate
  endpoint:
    path: /encoding-settings/general-audio-video/frame-rate
    method: GET
    data_selector: frame_rate
    params: {}
- name: max_frame_rate
  endpoint:
    path: /encoding-settings/general-audio-video/max-frame-rate
    method: GET
    data_selector: max_frame_rate
    params: {}
- name: min_frame_rate
  endpoint:
    path: /encoding-settings/general-audio-video/min-frame-rate
    method: GET
    data_selector: min_frame_rate
    params: {}
- name: decimate
  endpoint:
    path: /encoding-settings/general-audio-video/decimate
    method: GET
    data_selector: decimate
    params: {}
- name: keyframe_interval
  endpoint:
    path: /encoding-settings/general-audio-video/keyframe-interval
    method: GET
    data_selector: keyframe_interval
    params: {}
- name: audio_bitrate
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: max_video_bitrate
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: speed
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: decoder_bitrate_cap
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: decoder_buffer_size
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: one_pass
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: audio_constant_bitrate
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: resolution_settings
  endpoint:
    path: /encoding-settings/general-audio-video/encoding-settings-resolution.html
    method: GET
    data_selector: resolution_settings
- name: aspect_mode
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: aspect_mode
    params: {}
- name: sample_aspect_ratio
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: sample_aspect_ratio
    params: {}
- name: force_interlace_headers
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: force_interlace_headers
    params: {}
- name: segmented_output
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: POST
    data_selector: outputs
    params: {}
- name: alternate_audio
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: alternate_audio
- name: streams
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: streams
- name: path
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: path
- name: bandwidth
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: bandwidth
- name: resolution
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: resolution
- name: codecs
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: codecs
- name: audio
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: audio
- name: segment_image_url
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: segment_image_url
- name: segment_video_snapshots
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: segment_video_snapshots
- name: source
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: source
- name: max_hls_protocol_version
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: max_hls_protocol_version
- name: hls_protocol_version
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: hls_protocol_version
- name: hls_optimized_ts
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: hls_optimized_ts
- name: prepare_for_segmenting
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: prepare_for_segmenting
- name: smil_base_url
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: smil_base_url
- name: byte_range_segmenting
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: byte_range_segmenting
- name: generate_keyframe_manifest
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: generate_keyframe_manifest
- name: keyframe_manifest_filename
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: keyframe_manifest_filename
- name: outputs
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: transmuxing_settings
  endpoint:
    path: /encoding-settings/general-audio-video/transmuxing-settings
    method: GET
    data_selector: transmuxing
- name: format
  endpoint:
    path: /encoding-settings/formats-codecs/encoding-settings-format-and-codecs.html
    method: GET
    data_selector: format
    params: {}
- name: video_codec
  endpoint:
    path: /encoding-settings/formats-codecs/encoding-settings-video-codec.html
    method: GET
    data_selector: video_codec
    params: {}
- name: outputs
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
- name: outputs
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: max_aac_profile
    params: {}
- name: outputs
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: cue_points
  endpoint:
    path: /encoding-settings/formats-codecs/encoding-settings-flv.html
    method: GET
    data_selector: cue_points
    params: {}
- name: hdr_settings
  endpoint:
    path: /encoding-settings/formats-codecs/encoding-settings-hdr10.html
    method: GET
    data_selector: outputs
- name: master_display
  endpoint:
    path: /master_display
    method: POST
    data_selector: outputs
    params: {}
- name: max_content_light_level
  endpoint:
    path: /max_content_light_level
    method: POST
    data_selector: outputs
    params: {}
- name: max_frame_average_light_level
  endpoint:
    path: /max_frame_average_light_level
    method: POST
    data_selector: outputs
    params: {}
- name: dolby_vision_rpu_url
  endpoint:
    path: /dolby_vision_rpu_url
    method: POST
    data_selector: outputs
    params: {}
- name: video_color_range
  endpoint:
    path: /video_color_range
    method: POST
    data_selector: outputs
    params: {}
- name: white_point
  endpoint:
    path: /white_point
    method: GET
    data_selector: outputs
    params: {}
- name: crf
  endpoint:
    path: /encoding-settings/formats-codecs/encoding-settings-h264.html
    method: GET
    data_selector: outputs
    params: {}
- name: mp4_settings
  endpoint:
    path: /encoding-settings/formats-codecs/encoding-settings-mp4.html
    method: GET
    data_selector: outputs
    params: {}
- name: vp6_temporal_down_watermark
  endpoint:
    path: /encoding-settings/vp6_temporal_down_watermark
    method: GET
    data_selector: outputs
    params:
      default: 20
      valid_values: 0-100
- name: vp6_temporal_resampling
  endpoint:
    path: /encoding-settings/vp6_temporal_resampling
    method: GET
    data_selector: outputs
    params:
      default: true
      valid_values: true or false
- name: vp6_undershoot_pct
  endpoint:
    path: /encoding-settings/vp6_undershoot_pct
    method: GET
    data_selector: outputs
    params:
      default: 90
      valid_values: 0-100
- name: vp6_profile
  endpoint:
    path: /encoding-settings/vp6_profile
    method: GET
    data_selector: outputs
    params:
      default: vp6e
      valid_values: vp6s or vp6e
- name: vp6_compression_mode
  endpoint:
    path: /encoding-settings/vp6_compression_mode
    method: GET
    data_selector: outputs
    params:
      default: good
      valid_values: good or best
- name: vp6_2pass_min_section
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params:
      vp6_2pass_min_section: 50
- name: vp6_2pass_max_section
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params:
      vp6_2pass_max_section: 250
- name: vp6_stream_prebuffer
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params:
      vp6_stream_prebuffer: 2
- name: vp6_stream_max_buffer
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params:
      vp6_stream_max_buffer: 5
- name: vp6_deinterlace_mode
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params:
      vp6_deinterlace_mode: drop
- name: vp6_denoise_level
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params:
      vp6_denoise_level: 0.1
- name: alpha_transparency
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params:
      alpha_transparency: true
- name: constant_bitrate
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params:
      constant_bitrate: true
- name: auto_captions
  endpoint:
    path: /encoding-settings/assets/encoding-settings-auto-captions.html
    method: GET
- name: captions_settings
  endpoint:
    path: /encoding-settings/assets/encoding-settings-captions.html
    method: GET
- name: clips_settings
  endpoint:
    path: /encoding-settings/assets/encoding-settings-clips.html
    method: GET
- name: thumbnails_settings
  endpoint:
    path: /encoding-settings/assets/encoding-settings-thumbnails.html
    method: GET
- name: watermarks_settings
  endpoint:
    path: /encoding-settings/assets/encoding-settings-watermarks.html
    method: GET
- name: auto_captions
  endpoint:
    path: /encoding-settings/assets/encoding-settings-auto-captions.html
    method: GET
    data_selector: outputs
    params: {}
- name: audio_language
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: caption_settings
  endpoint:
    path: /encoding-settings/assets/encoding-settings-captions
    method: GET
    data_selector: captions
    params: {}
- name: start_clip
  endpoint:
    path: /encoding-settings/assets/start_clip
    method: GET
    data_selector: outputs
    params: {}
- name: clip_length
  endpoint:
    path: /encoding-settings/assets/clip_length
    method: GET
    data_selector: outputs
    params: {}
- name: thumbnails
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: thumbnails
    params: {}
- name: thumbnails
  endpoint:
    path: /outputs/thumbnails
    method: POST
    data_selector: outputs
    params: {}
- name: watermarks
  endpoint:
    path: /encoding-settings/assets/encoding-settings-watermarks.html
    method: GET
    data_selector: watermarks
- name: watermark_x
  endpoint:
    path: /watermarks/x
    method: GET
    data_selector: watermarks.x
    params: {}
- name: watermark_y
  endpoint:
    path: /watermarks/y
    method: GET
    data_selector: watermarks.y
    params: {}
- name: watermark_width
  endpoint:
    path: /watermarks/width
    method: GET
    data_selector: watermarks.width
    params: {}
- name: watermark_height
  endpoint:
    path: /watermarks/height
    method: GET
    data_selector: watermarks.height
    params: {}
- name: watermark_origin
  endpoint:
    path: /watermarks/origin
    method: GET
    data_selector: watermarks.origin
    params: {}
- name: watermark_opacity
  endpoint:
    path: /watermarks/opacity
    method: GET
    data_selector: watermarks.opacity
    params: {}
- name: encryption_settings
  endpoint:
    path: /encoding-settings/content-protection/encoding-settings-encryption.html
    method: GET
    data_selector: outputs
    params: {}
- name: outputs
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: decryption_settings
  endpoint:
    path: /encoding-settings/content-protection/encoding-settings-decryption.html
    method: POST
    data_selector: decryption_settings
- name: drm
  endpoint:
    path: /encoding-settings/content-protection/encoding-settings-drm.html
    method: GET
    data_selector: outputs
    params: {}
- name: drm
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#drm
    method: GET
    data_selector: outputs.drm
    params: {}
- name: outputs
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: thumbnails
  endpoint:
    path: /encoding-settings/assets/encoding-settings-thumbnails.html#thumbnails
    method: GET
    data_selector: thumbnails
    params: {}
- name: outputs
  endpoint:
    path: /encoding-settings/general/encoding-settings-job.html#outputs
    method: GET
    data_selector: outputs
    params: {}
- name: audio_mapping
  endpoint:
    path: /encoding-settings/general-audio-video/encoding-settings-audio.html
    method: POST
    data_selector: outputs
    params: {}
- name: AS-11 output
  endpoint:
    path: /encoding-settings/general-audio-video/encoding-settings-broadcast.html
    method: POST
    data_selector: output
    params:
      format_preset: as11_hd
      audio_sample_rate: 48000
- name: AVC_Intra_50
  endpoint:
    path: /encoding-settings/general-audio-video/encoding-settings-broadcast.html#video-codec-preset
    method: POST
    data_selector: output
    params:
      video_codec_preset: avci_50
- name: AVC_Intra_100
  endpoint:
    path: /encoding-settings/general-audio-video/encoding-settings-broadcast.html#video-codec-preset
    method: POST
    data_selector: output
    params:
      video_codec_preset: avci_100
- name: cae
  endpoint:
    path: /cae
    method: POST
    data_selector: outputs
- name: transmuxing
  endpoint:
    path: /transmux
    method: POST
    data_selector: outputs
- name: hls-low
  endpoint:
    path: /hls-low/hls-low.m3u8
    method: GET
    data_selector: streams
    params: {}
- name: hls-high
  endpoint:
    path: /hls-high/hls-high.m3u8
    method: GET
    data_selector: streams
    params: {}
- name: playlist
  endpoint:
    path: /playlist.m3u8
    method: GET
    data_selector: streams
    params: {}
- name: dash_output
  endpoint:
    path: /encoding-settings/assets/encoding-settings-clips.html#streaming-delivery-format
    method: POST
    data_selector: outputs
    params:
      streaming_delivery_format: dash
      video_bitrate: 700
      type: segmented
      url: s3://mybucket/dash-examples/sbr/rendition.mpd
- name: multiple_bitrates
  endpoint:
    path: /encoding-settings/assets/encoding-settings-clips.html#streaming-delivery-format
    method: POST
    data_selector: outputs
    params:
      label: dash-1200
      streaming_delivery_format: dash
      video_bitrate: 1200
      type: segmented
      url: s3://mybucket/dash-examples/mbr/1200k/rendition.mpd
- name: multiple_bitrates
  endpoint:
    path: /encoding-settings/assets/encoding-settings-clips.html#streaming-delivery-format
    method: POST
    data_selector: outputs
    params:
      label: dash-700
      streaming_delivery_format: dash
      video_bitrate: 700
      type: segmented
      url: s3://mybucket/dash-examples/mbr/700k/rendition.mpd
- name: multiple_bitrates
  endpoint:
    path: /encoding-settings/assets/encoding-settings-clips.html#streaming-delivery-format
    method: POST
    data_selector: outputs
    params:
      label: dash-400
      streaming_delivery_format: dash
      video_bitrate: 400
      type: segmented
      url: s3://mybucket/dash-examples/mbr/400k/rendition.mpd
- name: dash_output
  endpoint:
    path: /dash
    method: POST
    data_selector: outputs
- name: transmuxing
  endpoint:
    path: /transmux
    method: POST
    data_selector: outputs
- name: optimizing_delivery
  endpoint:
    path: /optimize
    method: POST
    data_selector: outputs
- name: H.264 Encoding
  endpoint:
    path: /encoding-settings/formats-codecs/encoding-settings-h264.html
    method: GET
    data_selector: records
- name: hevc_output
  endpoint:
    path: /encoding/hevc
    method: POST
    data_selector: outputs
    params: {}
- name: highwinds_smil_playlist
  endpoint:
    path: /api/v1/smil
    method: POST
    data_selector: outputs
    params: {}
- name: playlist
  endpoint:
    path: /file.smil
    method: GET
    data_selector: streams
- name: segmented_files
  endpoint:
    path: /segmented_files
    method: POST
    data_selector: files
    params: {}
- name: playlist
  endpoint:
    path: /playlist
    method: POST
    data_selector: playlist
    params: {}
- name: output_settings
  endpoint:
    path: /encoding-settings/general/output-settings
    method: POST
    data_selector: outputs
    params: {}
- name: video_output
  endpoint:
    path: /outputs
    method: GET
    data_selector: outputs
- name: playlist_output
  endpoint:
    path: /playlist_outputs
    method: GET
    data_selector: outputs
- name: Universal Smartphone Profile
  endpoint:
    path: /encoding/universal-smartphone-profile
    method: POST
    data_selector: outputs
    params: {}
- name: Universal Smartphone Profile v2
  endpoint:
    path: /encoding/universal-smartphone-profile-v2
    method: POST
    data_selector: outputs
    params: {}
- name: Advanced Smartphone Profile
  endpoint:
    path: /encoding/advanced-smartphone-profile
    method: POST
    data_selector: outputs
    params: {}
- name: Advanced Smartphone Profile v2
  endpoint:
    path: /encoding/advanced-smartphone-profile-v2
    method: POST
    data_selector: outputs
    params: {}
- name: legacy_smartphone_profile
  endpoint:
    path: /encoding-settings/legacy-smartphone-profile
    method: POST
    data_selector: outputs
    params: {}
- name: legacy_3gp_profiles
  endpoint:
    path: /encoding-settings/legacy-3gp-profiles
    method: POST
    data_selector: outputs
    params: {}
- name: profile_a
  endpoint:
    path: /encoding-settings/profile-a
    method: POST
    data_selector: outputs
    params: {}
- name: profile_b
  endpoint:
    path: /encoding-settings/profile-b
    method: POST
    data_selector: outputs
    params: {}
- name: smooth_streaming_job
  endpoint:
    path: /v1/smooth_streaming
    method: POST
    data_selector: outputs
    params: {}
- name: video_codec_profile
  endpoint:
    path: /encoding-settings/general-audio-video/encoding-settings-video.html#video-codec-profile
    method: GET
    data_selector: profiles
    params: {}
- name: job_details
  endpoint:
    path: /jobs
    method: GET
- name: job_progress
  endpoint:
    path: /job_progress
    method: GET
- name: input_details
  endpoint:
    path: /inputs
    method: GET
- name: input_progress
  endpoint:
    path: /input_progress
    method: GET
- name: output_details
  endpoint:
    path: /outputs
    method: GET
- name: output_progress
  endpoint:
    path: /output_progress
    method: GET
- name: encoding_settings
  endpoint:
    path: /encoding-settings/general/cae-settings
    method: GET
    data_selector: settings
    params: {}
- name: audio_processing
  endpoint:
    path: /encoding-settings/general-audio-video/encoding-settings-audio-processing.html
    method: GET
    data_selector: settings
- name: clips
  endpoint:
    path: /encoding-settings/assets/encoding-settings-clips.html
    method: GET
    data_selector: settings
- name: s3_settings
  endpoint:
    path: /encoding-settings/sources-destinations/encoding-settings-s3-settings.html
    method: GET
    data_selector: settings
- name: notifications
  endpoint:
    path: /encoding-settings/general/encoding-settings-notifications.html
    method: GET
    data_selector: settings
- name: conditional_outputs
  endpoint:
    path: /encoding-settings/general/encoding-settings-conditional-outputs.html
    method: GET
    data_selector: settings
- name: segmented_streaming
  endpoint:
    path: /encoding-settings/general-audio-video/encoding-settings-segmented-streaming.html
    method: GET
    data_selector: settings
- name: encryption
  endpoint:
    path: /encoding-settings/content-protection/encoding-settings-encryption.html
    method: GET
    data_selector: settings
- name: decryption
  endpoint:
    path: /encoding-settings/content-protection/encoding-settings-decryption.html
    method: GET
    data_selector: settings
- name: drm
  endpoint:
    path: /encoding-settings/content-protection/encoding-settings-drm.html
    method: GET
    data_selector: settings
- name: h264
  endpoint:
    path: /encoding-settings/formats-codecs/encoding-settings-h264.html
    method: GET
    data_selector: settings
- name: hdr10
  endpoint:
    path: /encoding-settings/formats-codecs/encoding-settings-hdr10.html
    method: GET
    data_selector: settings
- name: flv
  endpoint:
    path: /encoding-settings/formats-codecs/encoding-settings-flv.html
    method: GET
    data_selector: settings
- name: VP6
  endpoint:
    path: /encoding-settings/formats-codecs/encoding-settings-vp6.html
    method: GET
    data_selector: records
    params: {}
- name: MP4
  endpoint:
    path: /encoding-settings/formats-codecs/encoding-settings-mp4.html
    method: GET
    data_selector: records
    params: {}
- name: AAC
  endpoint:
    path: /encoding-settings/formats-codecs/encoding-settings-aac.html
    method: GET
    data_selector: records
    params: {}
- name: Broadcast
  endpoint:
    path: /encoding-settings/general-audio-video/encoding-settings-broadcast.html
    method: GET
    data_selector: records
    params: {}
- name: Aspera
  endpoint:
    path: /encoding-settings/sources-destinations/encoding-settings-aspera.html
    method: GET
    data_selector: records
    params: {}
- name: Transmuxing
  endpoint:
    path: /encoding-settings/general-audio-video/encoding-settings-transmuxing.html
    method: GET
    data_selector: records
    params: {}
notes:
- All dates and times reported will be in UTC.
- Uses API key for authentication.
- Files less than 5GB in size can be uploaded using the request builder.
- Integration Mode allows you to test your integration without getting charged for
  encoding.
- Privacy mode will enforce certain API parameters to protect your content from unauthorized
  views.
- It’s difficult to predict what types of formats might be uploaded to your application,
  especially with user-generated content, so our goal is to accept every video format
  possible.
- Zencoder can handle up to 1,000 job creation requests per minute.
- No file size limits, but source video duration is limited to 24 hours.
- Notifications are sent from sg-77f03012, which could change at any time.
- Each account is allowed 60 requests per minute, with the exception of job creation
  requests, which are limited to 1,000 requests per minute, and output progress requests,
  which are limited to 60 requests per minute per output.
- If you exceed your quota, Zencoder will return a 403 error with a body of '403 Forbidden
  (Rate Limit Exceeded)'.
- Content with audio above 48kHz for AAC is not supported on Windows and it will cause
  the player to fail.
- Context Aware Encoding requires an additional fee. Contact your Customer Success
  Manager about bundling Context Aware Encoding to get the optimum set of renditions
  for your videos.
- Brightcove anticipates up to 50% savings on storage and bandwidth costs.
- Notification handlers on servers built on HTTP2 are not currently supported.
- API version 2 includes rich notifications with additional metadata and details.
- Zencoder only supports Amazon AWS S3 buckets. S3 compatible storage buckets from
  non-Amazon vendors are not supported.
- When using a bucket policy you should always use URLs in the s3://BUCKET/KEY format
  so that Zencoder is sure to identify them as S3 URLs and sign the request appropriately.
- Only Account SAS tokens are currently supported, and at least the "sv", "si", "sr"
  and "sig" parameters are required as part of the token.
- The Azure URL must use an azure:// scheme as is standard within Zencoder, not https://.
- Add a new principal on the permission at bucket level for allAuthenticatedUsers
  with Storage Object Viewer role.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Current known issues for Zencoder.
- Ensure that the API key has the necessary permissions for the operations being performed.
- The API key for your Zencoder account can be found at https://app.zencoder.com/api.
- Outputs can be of type segmented, captions, playlist, cae, transfer-only, or standard.
- To use S3's Standard_IA feature, set the x-amz-storage-class header to the appropriate
  value.
- Inconsistency in the source file between metadata describing the video and the actual
  video itself may cause conditions to be applied unexpectedly.
- Notifications are limited to 5 per output and job. Output notifications do not count
  towards the job total.
- By default, HTTP notifications are in JSON, with an HTTP Content-Type of application/json.
- For XML notifications, set format to 'xml'. This will return notifications in XML
  format, with an HTTP Content-Type of application/xml.
- Forcing an output sample rate can cause unexpected problems.
- The FLV video format only supports sample rates of 11025, 22050, and 44100.
- This option is currently supported on H.264, HEVC and VP9 outputs.
- Many video formats require that width and height values be even numbers.
- A job must have at least one standard or segmented output; creating jobs with only
  playlist outputs will not work.
- If a segmented output is uploaded to temporary storage, it will be uploaded as a
  ZIP archive.
- allow_skipped_sources is not compatible with SMIL output. SMIL will not recognize
  skipped sources.
- Most encoding options have no effect on transmuxed files because the streams are
  not being re-encoded
- Default format is determined by the output filename and then video or audio codec.
- You may find that some of your videos the outputs are a few milliseconds longer
  than the inputs with black frames added at the end. The reason for this is a longer
  audio duration due to the fact that any time you encode aac, extra audio priming
  samples are added to the beginning of the audio stream. (See this Apple document
  for more details.) For HLS outputs, we adjust the audio duration to account for
  the samples.
- Force the use of a particular AAC profile, rather than letting Zencoder choose the
  best profile for the bitrate.
- Zencoder supports adding event and navigation cue points to VP6 Flash Video (FLV)
  files.
- HDR outputs can only be generated from HEVC (H.265) sources.
- HDR outputs from H.264 sources is not supported.
- Master display metadata is mandatory and must be carried out to the outputs when
  encoding of videos in HDR-10 and DolbyVision 8.1 formats.
- Both the max_content_light_level and max_frame_average_light_level parameters are
  mandatory and must be included in the outputs when encoding videos in HDR-10 format.
- 'Compatible Job Types: vod'
- Valid values are 0-51, with lower values being better quality. Generally speaking,
  you shouldn't have to go below 16; 16 is nearly lossless for most files. Around
  24 usually looks pretty good. Around 35 looks pretty compressed.
- Turn on hinting of MP4 files for RTP/RTSP. The default mtu_size is 1450 bytes; use
  the mtu_size option to change this.
- Minimum length of a video to generate auto captions is 5 seconds if the language
  is specified, 15 seconds if the language is auto-detected.
- Captions muxed onto the video track are not supported.
- Captioning is not currently supported on transmuxed outputs.
- Thumbnails are limited to 100 per-set.
- There is no such thing as a thumbnail-only job.
- If base_url is blank, we will store thumbnails in our Zencoder S3 bucket.
- Files stored in the Zencoder S3 bucket will be available after 24 hours.
- Zencoder supports up to 4 watermark files per output in JPEG, BMP, or PNG format.
- Watermarks that extend beyond the edges of the video will not be applied.
- When using the VP6 codec there are some additional limitations.
- Content protection settings for Zencoder jobs.
- When used for segmented outputs, only the segment files will be encrypted.
- Not supported for segmented outputs. Non-segmented outputs require either encryption_iv
  or encryption_password.
- Decryption is enabled when either a decryption_key or decryption_key_url is specified.
- Provides a collection of DRM options.
- 'Compatible Job Types: VOD'
- Source and destination settings for Zencoder jobs.
- By default, files put into a S3 bucket are not publicly readable.
- Using the public option grants S3 READ access to all users for a given video or
  thumbnail.
- Using access_control will override the public option.
- Zencoder currently supports mono, stereo, and 5.1 channel output audio.
- 'CAE is enabled on a Zencoder Job by setting ''type'': ''cae'' on a Zencoder output.'
- For best performance, it is recommended to leave a certain gap between min_renditions
  and max_renditions.
- Transmuxing will repackage existing MP4 videos into MPEG TS segments for HLS.
- Using dependent outputs, H.264 files and segmented files can be created in a single
  job.
- The HLS playlist generation currently uses no information from the other outputs
  in the job, but is simply a way to easily generate a correctly formatted adaptive-bitrate
  playlist and have it uploaded along with the other files.
- While iOS devices will play the adaptive bitrate playlist created, VLC won't, due
  to errors in handling relative URLs.
- DASH media outputs must have type set to 'segmented'.
- 'Supported formats: m4f and webm.'
- 'Supported video codecs: h264, hevc, vp8, and vp9.'
- 'Supported audio codecs: aac, ac3, eac3, and vorbis.'
- Zencoder supports generating CENC-encrypted DASH outputs.
- Transmuxing is charged at 1/4 the regular duration.
- Ensure HLS encodes pass Apple's validation.
- Valid extensions include .mp4, .m4v, .f4v, and .ts.
- AAC and MP3 audio codecs are valid alongside H.264.
- HDR outputs can only be generated from HEVC (H.265) sources. HDR outputs from H.264
  sources is not supported.
- Encoding of HDR formats in Zencoder is supported for both static and dynamic outputs,
  generated by using Brightcove Context-Aware Encoding (CAE) technology.
- HEVC outputs are currently not compatible with AES-128 encryption.
- '"type" should be "playlist"'
- '"format" should be "highwinds"'
- '"url" (or "filename") should have an extension of "smil"'
- The playlist generation currently uses no information from the other outputs in
  the job, but is simply a way to easily generate a correctly formatted adaptive-bitrate
  playlist and have it uploaded along with the other files.
- '[decoder_bitrate_cap] is set to 1.5x the target bitrate of the file. [decoder_buffer_size]
  is set to 3.5x to 5x the target bitrate of the file. These settings will help keep
  a consistent bitrate throughout the file, so that the segmented segments won''t
  vary too much in size and bitrate.'
- The minimum for HTML5 video is MP4 + WebM or Ogg (or both), using the MP4 version
  for Flash fallback.
- For mobile support, one H.264/MP4 output can take you a long way. 2-3 enables better
  quality and wider compatibility.
- Supports MP4/H.264, WebM, Ogg formats.
- While iOS devices will play the adaptive bitrate playlist created, VLC won't, due
  to errors in handling relative URLs. It will look for the segment files in the same
  directory as the playlist file, rather than the directory of the manifest file.
- If a segmented output is uploaded to temporary storage, it will be uploaded as a
  [ZIP archive].
- It is recommended to do audio only and video only segmented outputs and use alternate
  audio while generating playlist.
- In playlist output DO NOT mix `ts` and `m4f` outputs (Causes audio video sync issues).
- Captions with fragmented mp4 HLS outputs are not supported in zencoder yet.
- Modern smartphones can play high quality video.
- Multiple outputs can improve compatibility across devices.
- Creating a Smooth Streaming video is easy to do with Zencoder.
- Multi-bitrate Smooth Streaming must be created within a single Zencoder job.
- When encoding video outputs for streaming, we do not recommend using quality setting
  alone (this uses CRF mode of encoding). If you prefer to use quality-targeted mode
  then we strongly suggest using VBV settings to constrain the variation in bitrate
  to comply with streaming format specifications.
- VP6 is a video codec that is widely used for Flash Video.
- Its quality is generally worse than H.264 or VP8, but still respectable.
- VP6 is deployed in the FLV file container, so if you're specifying an output file
  name, use an extension of .flv.
- AAC and MP3 audio codecs are valid alongside VP6 in a FLV container.
- Uses constant_bitrate mode, this option is forced to 'true'.
- VP9 is available to all customers.
- Browser support includes Chrome, Firefox and Opera.
- Device support is currently limited to Android.
- Some codecs are known to result in a/v sync issues.
- On a free/test account, all of your files are cut to 5 seconds long.
- Region outages are often partial or last for a short period of time.
- If you can afford the transfer costs on EC2 you can submit your outstanding jobs
  to another region.
- There may be cases, however rare, where more than a single region is down.
- Resubmitting jobs indiscriminately is never advised, and doing so may result in
  limitations being placed on your Zencoder account.
- By not resubmitting failed files you help us keep prices down for you while continuing
  to offer fast, efficient encoding.
- Check the file-size limitation on the Akamai NetStorage account to make sure that
  the size of this output is within the account limits.
- Some videos and images (for watermarks) will encounter errors when scaling down
  to small sizes. If you encounter this error, try using larger dimensions.
- Jobs with this error should not be retried.
- Make sure that the file exists at the given URL and is accessible by the user we
  connect as.
- If it doesn't exist at that location, move the file before trying again.
- If it does exist at that location, check the permissions of the file and whether
  the given user has access to the file's path.
- Export the Quicktime file as a self-contained Quicktime files that include all media
  tracks.
- Integration guides available for CMS and other apps
- Using read-only API keys is supported
- Test jobs are free on Zencoder. There are some limitations on the outputs created
  as test jobs.
- In Integration Mode, all encoded files will be shortened to 5 seconds, and you will
  not be charged for the job.
- Learn how to get help from Brightcove Support
- The API key for your Zencoder account is required.
- 'VP6 temporal down watermark percentage: 20'
- 'Enable VP6 temporal resampling: True'
- 'Target a slightly lower datarate: 90'
- 'VP6 profile: vp6e'
- 'VP6 compression mode: good'
- 'Two-pass VBR encoding minimum datarate: 40'
- 'Two-pass VBR encoding maximum datarate: 400'
- 'Seconds of preload necessary before playback: 6'
- 'Maximum decoder buffer size: none'
- 'VP6 deinterlace mode: adaptive'
- 'Denoise level for VP6: 0'
- 'Enable alpha transparency: false'
- 'Use constant bitrate encoding: false'
- 'Enable hinting of MP4 files for RTP/RTSP: false'
- 'Set MTU size for MP4 hinting: 1450'
- 'Most advanced AAC profile: he-aac'
- 'Force use of a particular AAC profile: none'
- 'Video encoding preset for industry compliance: none'
- 'Format preset for industry compliance: none'
- 'Maximum transport stream mux rate: none'
- 'Override PMT packet ID: none'
- 'Override video data packet ID: none'
- 'Override audio data packet ID: none'
- 'Override PCR packet ID: none'
- 'Create CBR output: false'
- 'Enable lossless video encoding: false'
- 'Aspera transfer policy: fair'
- 'Transfer minimum rate: 1000'
- 'Transfer maximum rate: 250000'
- 'Copy video track of input file: false'
- 'Copy audio track of input file: false'
errors:
- 403 Forbidden
- 500 Server error
- '403 Forbidden: Check API key'
- '500 Server error: Retry the request'
- 'FileNotFoundError: The input file does not exist'
- 'UploadServerNotFoundError: The output location is invalid'
- '403 Forbidden (Rate Limit Exceeded): Retry your request after the specified period
  of time.'
- 'InvalidAccessKeyIdError: Check your access key ID'
- 'UploadAccessDeniedError: Verify permissions for upload'
- 'DownloadAccessDeniedError: Check permissions for download'
- 'API rate limit exceeded: Reduce job creation requests.'
- InvalidAccessKeyIdError
- UploadAccessDeniedError
- FileNotFoundError
- UnableToCreateDynamicProfilesError
- UploadTimeoutError
- UploadFailureError
- 'UnableToResolveHostError: There was a problem resolving the host at ftp://example.com.
  Please check that it is correct.'
- 'Access Denied: Check the permissions set on your S3 bucket or the file URL.'
- AkamaiNetStorageFileSizeError
- ChecksumMismatchError
- DimensionTooSmallError
- DownloadAccessDeniedError
- DownloadFailureError
- DownloadTimeoutError
- FilePermanentlyMovedError
- InaccurateDurationError
- IncompatibleWithDynamicProfilesError
- InputFileNotFound
- InvalidAudioSettingsError
- InvalidCodecCombinationError
- InvalidDownloadedFileTypeError
- InvalidEncryptionSettingsError
- InvalidFilePathError
- InvalidFormatCodecError
- InvalidFrameRateError
- InvalidUsernameOrPasswordError
- InvalidVideoBitrateError
- InvalidVideoSettingsError
- NoMediaError
- QuicktimeReferenceError
- RemoteServerProblemError
- RTMPAuthFailedError
- RTMPMaxStreamsXIdReached
- RTMPStreamNameAlreadyInUse
- S3BucketNotFoundError
- SegmentingError
- SkippedSourceError
- ThumbnailError
- TranscodingError
- Transfer::InvalidGranteeGroupURLError
- Transfer::InvalidGranteeIDError
- TruncatedFileError
- UnexpectedDownloadProblemError
- UnexpectedFfmpegResult
- UnexpectedMplayerResult
- UnexpectedProgenResult
- UnexpectedResultError
- UnexpectedUploadProblemError
- UnexpectedX264Result
- UnreadableFileError
- UnsupportedCodecError
- UnsupportedEncodingError
- UnsupportedEncryptionError
- UnsupportedTranscodeCombinationError
- UploadServerNotFoundError
- WorkerTimeoutError
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your API key and its permissions.'
- '403 Forbidden: You do not have access to this resource.'
- 'InvalidAccessKeyIdError: Check your API key.'
- 'UploadAccessDeniedError: Check your access permissions.'
- 'INVALID_INPUT: Check the input file path or format'
- If Zencoder is unable to successfully connect to the target server when sending
  a notification, the notification will be queued to try again.
- 'InvalidAudioSettingsError: Check audio settings for correctness.'
- 'InvalidBitDepthError: Ensure bit depth is one of the valid values.'
- 'InvalidFormatCodecError: Ensure the provided format is correct.'
- 'UploadFailureError: Check your upload settings or file path.'
- 'InvalidFormatCodecError: The input format does not meet codec requirements.'
- 'InvalidFormatCodecError: Ensure the selected format is compatible with the chosen
  codec.'
- 'UnsupportedCodecError: Verify that the codec is supported for the selected format.'
- Extra audio priming samples may be added to the beginning of the audio stream.
- 'InvalidAccessKeyIdError: Check the access key ID.'
- 'UploadFailureError: Verify the file upload process.'
- 'InvalidVideoSettingsError: Check video codec and bit depth settings.'
- 'InvalidVideoSettingsError: Check if the video settings are compatible with H.264
  outputs.'
- 'InvalidValueError: Ensure that values are within the specified range.'
- 'InvalidFormatCodecError: Check the format of the caption file.'
- 'DownloadAccessDeniedError: Ensure the caption file URL is accessible.'
- 'Too many thumbnails requested: A warning will be added when the limit is reached.'
- 'InvalidFormatCodecError: when a watermark does not meet the requirements.'
- 'WorkerTimeoutError: if the watermarking process takes too long.'
- 'InvalidEncryptionSettingsError: Check the encryption settings provided.'
- 'InvalidEncryptionSettingsError: Check your encryption settings.'
- 'S3BucketNotFoundError: The specified S3 bucket does not exist.'
- 'InvalidAccessKeyIdError: The provided AWS access key ID is not valid.'
- 'InvalidAudioSettingsError: Check your audio settings for errors.'
- 'UnsupportedCodecError: The specified codec is not supported.'
- 'InvalidFormatCodecError: Ensure the requested format is supported.'
- 'UploadAccessDeniedError: Check your access permissions for the upload location.'
- 'Invalid URL: Check the source URL.'
- 'Unsupported format: Ensure the format is valid.'
- 'Encoding error: Check the input file for issues.'
- 'UploadFailureError: Ensure the input file is accessible.'
- 'InvalidFormatCodecError: Check if the codec is supported.'
- 'UploadTimeoutError: Retry the upload if it exceeds time limits.'
- 'INVALID_INPUT: Check the input file path and format.'
- 'AUTHENTICATION_FAILED: Verify API key and permissions.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- 'TranscodingError: Retry the job once more if the same error is raised on the second
  attempt.'
- 'WorkerTimeoutError: Retry the job once more if the same error is raised on the
  second attempt.'
- 'UnsupportedCodecError: May be processable later if support was added.'
- 'UnsupportedEncodingError: May be processable later if support was added.'
- '400 BAD REQUEST: Invalid JSON in the request body'
- '401 UNAUTHORIZED: Missing or invalid API Key'
- '402 PAYMENT REQUIRED: Returned when an API request attempts to turn off Zencoder
  integration mode on an account where billing has not been setup'
- '403 FORBIDDEN: Rate limit for requests exceeded, or in response to a retry/resubmit
  API request for resources that have been retried too many times'
- '404 NOT FOUND: Incorrect request URL or invalid/old job ID'
- '406 NOT ACCEPTIBLE: Returned for attempting to create a non-AWS credential through
  the API'
- '409 CONFLICT: Generally only when trying to retry/resubmit a job that''s too old'
- '422 UNPROCESSIBLE ENTITY: Returned when an API request cannot be validated'
- '500 INTERNAL SERVER ERROR: Either a temporary issue with Zencoder or something
  wrong with the request'
- '503 SERVICE UNAVAILABLE: Zencoder temporarily unavailable, probably during scheduled
  maintenance'
- '504 GATEWAY TIMEOUT: Returned if the Zencoder service is down'
- 'AkamaiNetStorageFileSizeError: We tried to upload the file to the specified Akamai
  NetStorage location, however Akamai terminated the connection before the upload
  finished. This is sometimes due to file-size limitations on the Akamai account.
  For instance, Akamai might reject an 11 GB file upload if the maximum file-size
  permitted is 10 GB.'
- 'ChecksumMismatchError: The MD5 checksum computed for the input file does not match
  the checksum supplied to the API.'
- 'DimensionTooSmallError: Some videos and images (for watermarks) will encounter
  errors when scaling down to small sizes.'
- '403 Access Denied: Ensure permissions on the file allow Zencoder access'
- 'DownloadFailureError: Unable to download a file for a reason other than Access
  Denied or File Not Found'
- 'DownloadTimeoutError: We tried to download a file at the specified address, but
  the server at that address took too long to respond.'
- 'FileNotFoundError: We tried to download a file at the specified address, but no
  file was there.'
- HTTP response code >= 300 when we tried to download the file, except for 403.
- FTP 550 response code, indicating that the file was not present or unavailable.
- 'FilePermanentlyMovedError: We tried to download a file at the specified address,
  but the server returned a 301 code.'
- 'InaccurateDurationError: The output generated for this file has a duration that
  is significantly longer than the input file''s duration.'
- 'Common causes: incorrect audio sample rate metadata, incorrect MP4/MOV edit list
  metadata, and bad timestamps.'
- 'IncompatibleWithDynamicProfilesError: Input media is not compatible with CAE dynamic
  profile generation.'
- 'InputFileNotFound: This error occurs when there is a problem during transcoding.'
- 'InvalidAccessKeyIdError: No access key was found on S3 matching the key that was
  provided.'
- 'InvalidAudioSettingsError: The supplied audio encoding settings were not valid.
  Some settings are auto-corrected unless strict mode is enabled.'
- 'InvalidCodecCombinationError: Some codec and format combinations are valid, and
  some aren''t.'
- 'InvalidDownloadedFileTypeError: We tried to download a file at the specified address,
  but instead of a video or audio file, we got back something else, like a HTML or
  XML document.'
- 'InvalidEncryptionSettingsError: The supplied encryption settings are not valid,
  or conflict with each other.'
- 'InvalidFilePathError: Jobs with this error should not be retried.'
- 'InvalidFormatCodecError: You''ve specified a codec in an incompatible container.
  For instance, you can''t use the WMV codec in a file named ''video.mp4''.'
- 'InvalidFrameRateError: Specified frame rate is not supported or unsupported source
  file frame rate.'
- Frame rates greater than 300 fps are not allowed.
- MPEG 4 has a limit of 65.5 fps.
- Source rate must be less than 1000 fps.
- 'InvalidUsernameOrPasswordError: Jobs with this error should not be retried.'
- 'InvalidVideoBitrateError: The supplied video bitrate is too low for the video.
  Raising the bitrate should fix the job.'
- 'InvalidVideoSettingsError: The supplied video encoding settings were not valid.
  Some settings are auto-corrected unless strict mode is enabled.'
- 'NoMediaError: The input file is not an audio or video file.'
- 'NoMediaError: The clip start/length is outside the duration of the file.'
- 'QuicktimeReferenceError: The input file references audio or video tracks that aren''t
  included in the file.'
- 'RemoteServerProblemError: There was trouble communicating with the remote server.
  Jobs with this error should not be retried.'
- 'RTMPAuthFailedError: Jobs with this error should not be retried.'
- 'RTMPMaxStreamsXIdReached: The CDN has rejected a RTMP stream because there are
  too many streams using the same stream ID.'
- 'RTMPStreamNameAlreadyInUse: The CDN has rejected a RTMP stream because the stream
  name is already in use by another stream.'
- 'S3BucketNotFoundError: No bucket was found on S3 with the specified name. If you
  are using the s3:// protocol in your URLs, make sure that you only include the bucket
  name - "s3://my_bucket" - and not the "s3.amazonaws.com" domain.'
- 'SegmentingError: This error occurs when there is a problem during transcoding.
  This could mean that we couldn''t process the file that was submitted for the job,
  or it could mean that something is wrong on the transcoder.'
- 'SkippedSourceError: No stream sources available to generate the playlist, because
  they were all skipped.'
- 'ThumbnailError: There was an error creating thumbnails. interval and interval_in_frames
  can''t be set to 0.'
- Jobs with this error should not be retried.
- 'TranscodingError: There is a problem during transcoding. Do not retry jobs with
  this error.'
- 'Transfer::InvalidGranteeGroupURLError: The S3 group account provided doesn''t exist
  or couldn''t be given permissions to the file. Check the name and make sure that
  it exists.'
- 'Transfer::InvalidGranteeIDError: The S3 user account provided doesn''t exist or
  couldn''t be given permissions to the file. Check the name and make sure that it
  exists.'
- 'TruncatedFileError: The input file is smaller than the headers say it should be.
  Generally this means the file got cut off at some point previous to being transferred
  to Zencoder.'
- 'UnableToCreateDynamicProfilesError: This error occurs when there is a problem during
  CAE dynamic profile generation.'
- 'UnexpectedDownloadProblemError: Jobs with this error should not be retried.'
- 'UnexpectedFfmpegResult: There was a problem on our end during the transcoding step.'
- 'UnexpectedMplayerResult: There was a problem on our end. We tried processing the
  file, but something went wrong in the transcoding step. We''ll investigate and fix
  the problem.'
- 'UnexpectedProgenResult: There was a problem on our end. We tried processing the
  file, but something went wrong in the transcoding step. Jobs with this error should
  not be retried.'
- 'UnexpectedResultError: There was a problem on our end during transcoding.'
- 'UnexpectedUploadProblemError: Jobs with this error should not be retried.'
- 'UnexpectedX264Result: There was a problem on our end during the transcoding step.
  Jobs with this error should not be retried.'
- 'TruncatedFileError: This error occurs when we can''t decode a media file. Usually,
  it means that the file itself is corrupt and can''t be decoded.'
- 'UnsupportedCodecError: Indicates that the file uses an input codec that we don''t
  support.'
- 'UnsupportedCodecError: Zencoder supports hundreds of codecs, but there are still
  a few we don''t support: Apple Intermediate, HDV 720p60, Go2Meeting3/4 (G2M3/G2M4).
  If you send these files in, they will fail.'
- 'TruncatedFileError: Jobs with this error should not be retried.'
- 'UnsupportedEncodingError: This error occurs when we detect that the submitted file
  was encoded in a way we are currently unable to support.'
- 'UnsupportedEncryptionError: The submitted file is encrypted, preventing us from
  opening it.'
- 'UnsupportedTranscodeCombinationError: Jobs with this error should not be retried.'
- 'UploadAccessDeniedError: We tried to upload the file to the specified address,
  but got a permission error.'
- '403 Access Denied: Make sure that permissions on the file at the given URL allow
  Zencoder access.'
- 'UploadFailureError: This error occurs when we are unable to upload a file for a
  reason other than Access Denied or Server Not Found.'
- 'UploadServerNotFoundError: We tried to connect to the server at the specified address,
  but no server responded. This can happen if the server is behind a firewall, if
  access is restricted to certain IP address, or if the server is offline.'
- 'UploadTimeoutError: We tried to upload a file at the specified address, but the
  server at that address took too long to respond. We attempt to upload the file 3
  times to make sure that the issue isn''t a temporary connectivity issue.'
- 'WorkerTimeoutError: You shouldn''t see this error. It means that we tried processing
  this file three times, and it timed out every time.'
- 503 Service Unavailable
- 500 Internal Server Error
- 403 Rate Limit Exceeded
- 'InvalidAccessKeyIdError: Check the API key for validity.'
- 'FileNotFoundError: Ensure the input file exists.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://app.zencoder.com/api/v2
  auth:
    type: apikey
    location: header
    header_name: Zencoder-Api-Key
  headers:
    Content-Type: application/json
  paginator:
    type: page
    page_size_param: per_page
    default_page_size: 50
source_metadata: null
