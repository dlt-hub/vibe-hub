resources:
- name: products
  endpoint:
    path: /admin/products
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: records
- name: draft_orders
  endpoint:
    path: /draft-orders
    method: GET
    data_selector: records
- name: exchanges
  endpoint:
    path: /exchanges
    method: GET
    data_selector: records
- name: fulfillment_providers
  endpoint:
    path: /fulfillment-providers
    method: GET
    data_selector: records
- name: fulfillment_sets
  endpoint:
    path: /fulfillment-sets
    method: GET
    data_selector: records
- name: fulfillments
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: records
- name: gift_cards
  endpoint:
    path: /gift-cards
    method: GET
    data_selector: records
- name: inventory_items
  endpoint:
    path: /inventory-items
    method: GET
    data_selector: records
- name: invites
  endpoint:
    path: /invites
    method: GET
    data_selector: records
- name: notifications
  endpoint:
    path: /notifications
    method: GET
    data_selector: records
- name: order_edits
  endpoint:
    path: /order-edits
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: records
- name: payment_collections
  endpoint:
    path: /payment-collections
    method: GET
    data_selector: records
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: records
- name: plugins
  endpoint:
    path: /plugins
    method: GET
    data_selector: records
- name: price_lists
  endpoint:
    path: /price-lists
    method: GET
    data_selector: records
- name: price_preferences
  endpoint:
    path: /price-preferences
    method: GET
    data_selector: records
- name: product_categories
  endpoint:
    path: /product-categories
    method: GET
    data_selector: records
- name: product_tags
  endpoint:
    path: /product-tags
    method: GET
    data_selector: records
- name: product_types
  endpoint:
    path: /product-types
    method: GET
    data_selector: records
- name: product_variants
  endpoint:
    path: /product-variants
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: promotions
  endpoint:
    path: /promotions
    method: GET
    data_selector: records
- name: refund_reasons
  endpoint:
    path: /refund-reasons
    method: GET
    data_selector: records
- name: regions
  endpoint:
    path: /regions
    method: GET
    data_selector: records
- name: reservations
  endpoint:
    path: /reservations
    method: GET
    data_selector: records
- name: return_reasons
  endpoint:
    path: /return-reasons
    method: GET
    data_selector: records
- name: returns
  endpoint:
    path: /returns
    method: GET
    data_selector: records
- name: sales_channels
  endpoint:
    path: /sales-channels
    method: GET
    data_selector: records
- name: shipping_options
  endpoint:
    path: /shipping-options
    method: GET
    data_selector: records
- name: shipping_profiles
  endpoint:
    path: /shipping-profiles
    method: GET
    data_selector: records
- name: stock_locations
  endpoint:
    path: /stock-locations
    method: GET
    data_selector: records
- name: store_credit_accounts
  endpoint:
    path: /store-credit-accounts
    method: GET
    data_selector: records
- name: stores
  endpoint:
    path: /stores
    method: GET
    data_selector: records
- name: tax_providers
  endpoint:
    path: /tax-providers
    method: GET
    data_selector: records
- name: tax_rates
  endpoint:
    path: /tax-rates
    method: GET
    data_selector: records
- name: tax_regions
  endpoint:
    path: /tax-regions
    method: GET
    data_selector: records
- name: transaction_groups
  endpoint:
    path: /transaction-groups
    method: GET
    data_selector: records
- name: uploads
  endpoint:
    path: /uploads
    method: POST
    data_selector: records
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: workflows_executions
  endpoint:
    path: /workflows-executions
    method: GET
    data_selector: records
- name: admin_dashboard
  endpoint:
    path: /app
    method: GET
- name: next_js_starter_storefront
  endpoint:
    path: /
    method: GET
- name: admin_user
  endpoint:
    path: /user
    method: POST
    data_selector: user
    params:
      email: admin@example.com
      password: supersecret
- name: postgres
  endpoint:
    path: /services/data/vXX.X/sobjects/Postgres
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: redis
  endpoint:
    path: /services/data/vXX.X/sobjects/Redis
    method: GET
    data_selector: records
    params: {}
- name: medusa
  endpoint:
    path: /services/data/vXX.X/sobjects/Medusa
    method: GET
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /setup
    method: POST
    data_selector: setup
    params:
      database_url: postgres://localhost/medusa-v2
- name: seed
  endpoint:
    path: /seed
    method: POST
    data_selector: seed
    params: {}
- name: Brand Module
  endpoint:
    path: /learn/customization/custom-features/module
    method: GET
    data_selector: data
    params: {}
- name: Brand Workflow
  endpoint:
    path: /learn/customization/custom-features/workflow
    method: GET
    data_selector: data
    params: {}
- name: Brand API Route
  endpoint:
    path: /learn/customization/custom-features/api-route
    method: GET
    data_selector: data
    params: {}
- name: brands
  endpoint:
    path: /brands
    method: GET
    data_selector: brands
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
    params: {}
- name: CMS Module
  endpoint:
    path: /learn/customization/integrate-systems/service
    method: GET
- name: custom_features
  endpoint:
    path: /learn/customization/custom-features
    method: GET
    data_selector: features
- name: integrate_systems
  endpoint:
    path: /learn/customization/integrate-systems
    method: GET
    data_selector: systems
- name: sync-from-erp
  endpoint:
    path: /workflows/sync-from-erp
    method: POST
- name: daily-product-sync
  endpoint:
    path: /scheduled-jobs/daily-product-sync
    method: POST
- name: order-placed-handler
  endpoint:
    path: /subscribers/order.placed
    method: POST
- name: blog
  endpoint:
    path: /src/modules/blog
    method: GET
    data_selector: records
- name: blog_post
  endpoint:
    path: /blog/posts
    method: POST
    data_selector: post
    params: {}
- name: post
  endpoint:
    path: /api/posts
    method: POST
    data_selector: data
    params: {}
- name: hello_world
  endpoint:
    path: /hello-world
    method: GET
    data_selector: message
    params: {}
- name: workflow
  endpoint:
    path: /workflow
    method: GET
    data_selector: message
    params: {}
- name: workflow_executions
  endpoint:
    path: /admin/workflows
    method: GET
    data_selector: executions
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscribers
    method: POST
    data_selector: data
    params: {}
- name: greeting_job
  endpoint:
    path: /src/jobs/hello-world.ts
    method: POST
    data_selector: config
    params:
      name: greeting-every-minute
      schedule: '* * * * *'
- name: sync_products_job
  endpoint:
    path: /src/jobs/sync-products.ts
    method: POST
    data_selector: config
    params:
      name: sync-products-job
      schedule: 0 0 * * *
- name: admin
  endpoint:
    path: /admin
    method: GET
- name: store
  endpoint:
    path: /store
    method: GET
- name: projectConfig
  endpoint:
    path: /medusa/config
    method: GET
    data_selector: config
- name: logger
  endpoint:
    path: /learn/debugging-and-testing/logging
    method: GET
    data_selector: logger
- name: postgresql
  endpoint:
    path: /learn/production/postgresql
    method: GET
- name: redis
  endpoint:
    path: /learn/production/redis
    method: GET
- name: analytics_module
  endpoint:
    path: /resources/infrastructure-modules/analytics
    method: GET
- name: cache_module
  endpoint:
    path: /resources/infrastructure-modules/cache
    method: GET
- name: event_module
  endpoint:
    path: /resources/infrastructure-modules/event
    method: GET
- name: file_module
  endpoint:
    path: /resources/infrastructure-modules/file
    method: GET
- name: locking_module
  endpoint:
    path: /resources/infrastructure-modules/locking
    method: GET
- name: notification_module
  endpoint:
    path: /resources/infrastructure-modules/notification
    method: GET
- name: workflow_engine_module
  endpoint:
    path: /resources/infrastructure-modules/workflow-engine
    method: GET
- name: PostHog
  endpoint: {}
- name: Segment
  endpoint: {}
- name: Google
  endpoint: {}
- name: GitHub
  endpoint: {}
- name: Contentful
  endpoint: {}
- name: Payload CMS
  endpoint: {}
- name: Sanity
  endpoint: {}
- name: Odoo
  endpoint: {}
- name: AWS S3
  endpoint: {}
- name: ShipStation
  endpoint: {}
- name: Sentry
  endpoint: {}
- name: Magento
  endpoint: {}
- name: SendGrid
  endpoint: {}
- name: Mailchimp
  endpoint: {}
- name: Resend
  endpoint: {}
- name: Slack
  endpoint: {}
- name: Twilio SMS
  endpoint: {}
- name: Stripe
  endpoint: {}
- name: Algolia
  endpoint: {}
- name: list_products
  endpoint:
    path: /resources/storefront-development/products/list
    method: GET
- name: retrieve_product
  endpoint:
    path: /resources/storefront-development/products/retrieve
    method: GET
- name: select_variant
  endpoint:
    path: /resources/storefront-development/products/variants
    method: GET
- name: retrieve_variant_prices
  endpoint:
    path: /resources/storefront-development/products/price
    method: GET
- name: retrieve_variant_inventory
  endpoint:
    path: /resources/storefront-development/products/inventory
    method: GET
- name: list_categories
  endpoint:
    path: /resources/storefront-development/products/categories/list
    method: GET
- name: retrieve_category
  endpoint:
    path: /resources/storefront-development/products/categories/retrieve
    method: GET
- name: retrieve_category_products
  endpoint:
    path: /resources/storefront-development/products/categories/products
    method: GET
- name: list_collections
  endpoint:
    path: /resources/storefront-development/products/collections/list
    method: GET
- name: create_cart
  endpoint:
    path: /resources/storefront-development/cart/create
    method: POST
- name: retrieve_cart
  endpoint:
    path: /resources/storefront-development/cart/retrieve
    method: GET
- name: update_cart
  endpoint:
    path: /resources/storefront-development/cart/update
    method: POST
- name: checkout_overview
  endpoint:
    path: /resources/storefront-development/checkout
    method: GET
- name: register_customer
  endpoint:
    path: /resources/storefront-development/customers/register
    method: POST
- name: login_customer
  endpoint:
    path: /resources/storefront-development/customers/login
    method: POST
- name: retrieve_customer
  endpoint:
    path: /resources/storefront-development/customers/retrieve
    method: GET
- name: create-medusa-app
  endpoint:
    path: /resources/create-medusa-app
    method: GET
- name: Medusa CLI
  endpoint:
    path: /resources/medusa-cli
    method: GET
- name: JS SDK
  endpoint:
    path: /resources/js-sdk
    method: GET
- name: Next.js Starter Storefront
  endpoint:
    path: /resources/nextjs-starter
    method: GET
- name: Medusa UI
  endpoint:
    path: /ui
    method: GET
- name: products
  endpoint:
    path: /store/products
    method: GET
    data_selector: records
    params: {}
- name: reservation
  endpoint:
    path: /reservation
    method: GET
    data_selector: list
    params: {}
- name: return_reason
  endpoint:
    path: /return_reason
    method: GET
    data_selector: list
    params: {}
- name: sales_channel
  endpoint:
    path: /sales_channel
    method: GET
    data_selector: list
    params: {}
- name: shipping_profile
  endpoint:
    path: /shipping_profile
    method: GET
    data_selector: list
    params: {}
- name: store
  endpoint:
    path: /store
    method: GET
    data_selector: details
    params: {}
- name: tax
  endpoint:
    path: /tax
    method: GET
    data_selector: list
    params: {}
- name: user
  endpoint:
    path: /user
    method: GET
    data_selector: list
    params: {}
- name: workflow
  endpoint:
    path: /workflow
    method: GET
    data_selector: list
    params: {}
- name: campaign
  endpoint:
    path: /resources/admin-widget-injection-zones
    method: GET
    data_selector: injection_zones
    params: {}
- name: customer
  endpoint:
    path: /resources/admin-widget-injection-zones
    method: GET
    data_selector: injection_zones
    params: {}
- name: customer_group
  endpoint:
    path: /resources/admin-widget-injection-zones
    method: GET
    data_selector: injection_zones
    params: {}
- name: inventory_item
  endpoint:
    path: /resources/admin-widget-injection-zones
    method: GET
    data_selector: injection_zones
    params: {}
- name: login
  endpoint:
    path: /resources/admin-widget-injection-zones
    method: GET
    data_selector: injection_zones
    params: {}
- name: order
  endpoint:
    path: /resources/admin-widget-injection-zones
    method: GET
    data_selector: injection_zones
    params: {}
- name: price_list
  endpoint:
    path: /resources/admin-widget-injection-zones
    method: GET
    data_selector: injection_zones
    params: {}
- name: product
  endpoint:
    path: /resources/admin-widget-injection-zones
    method: GET
    data_selector: injection_zones
    params: {}
- name: product_variant
  endpoint:
    path: /resources/admin-widget-injection-zones
    method: GET
    data_selector: injection_zones
    params: {}
- name: product_collection
  endpoint:
    path: /resources/admin-widget-injection-zones
    method: GET
    data_selector: injection_zones
    params: {}
- name: product_category
  endpoint:
    path: /resources/admin-widget-injection-zones
    method: GET
    data_selector: injection_zones
    params: {}
- name: promotion
  endpoint:
    path: /resources/admin-widget-injection-zones
    method: GET
    data_selector: injection_zones
    params: {}
- name: api_key
  endpoint:
    path: /resources/admin-widget-injection-zones
    method: GET
    data_selector: injection_zones
    params: {}
- name: location
  endpoint:
    path: /resources/admin-widget-injection-zones
    method: GET
    data_selector: injection_zones
    params: {}
- name: profile
  endpoint:
    path: /resources/admin-widget-injection-zones
    method: GET
    data_selector: injection_zones
    params: {}
- name: region
  endpoint:
    path: /resources/admin-widget-injection-zones
    method: GET
    data_selector: injection_zones
    params: {}
- name: Medusa Configurations
  endpoint:
    path: /learn/configurations/medusa-config
    method: GET
- name: Logger
  endpoint:
    path: /learn/debugging-and-testing/logging
    method: GET
- name: Query
  endpoint:
    path: /learn/fundamentals/module-links/query
    method: GET
- name: Link
  endpoint:
    path: /learn/fundamentals/module-links/link
    method: GET
- name: Entity Manager
  endpoint:
    path: /learn/fundamentals/modules/db-operations
    method: GET
- name: Base Repository
  endpoint:
    path: /learn/fundamentals/modules/db-operations
    method: GET
- name: Event Module
  endpoint:
    path: /resources/infrastructure-modules/event
    method: GET
- name: workflows
  endpoint:
    path: /resources/references/medusa-workflows
    method: GET
    data_selector: workflows
    params: {}
- name: line_items
  endpoint:
    path: /resources/references/medusa-workflows/lineItems
    method: GET
    data_selector: line_items
    params: {}
- name: notifications
  endpoint:
    path: /resources/references/medusa-workflows/notifications
    method: GET
    data_selector: notifications
    params: {}
- name: orders
  endpoint:
    path: /resources/references/medusa-workflows/orders
    method: GET
    data_selector: orders
    params: {}
- name: ApiKey
  endpoint:
    path: /api/keys
    method: GET
    data_selector: api_keys
- name: Cart
  endpoint:
    path: /api/carts
    method: GET
    data_selector: carts
- name: Customer
  endpoint:
    path: /api/customers
    method: GET
    data_selector: customers
- name: Order
  endpoint:
    path: /api/orders
    method: GET
    data_selector: orders
- name: Product
  endpoint:
    path: /api/products
    method: GET
    data_selector: products
- name: createTaxRateRulesWorkflow
  endpoint:
    path: /resources/references/medusa-workflows/createTaxRateRulesWorkflow
- name: createTaxRatesWorkflow
  endpoint:
    path: /resources/references/medusa-workflows/createTaxRatesWorkflow
- name: createTaxRegionsWorkflow
  endpoint:
    path: /resources/references/medusa-workflows/createTaxRegionsWorkflow
- name: deleteTaxRateRulesWorkflow
  endpoint:
    path: /resources/references/medusa-workflows/deleteTaxRateRulesWorkflow
- name: deleteTaxRatesWorkflow
  endpoint:
    path: /resources/references/medusa-workflows/deleteTaxRatesWorkflow
- name: deleteTaxRegionsWorkflow
  endpoint:
    path: /resources/references/medusa-workflows/deleteTaxRegionsWorkflow
- name: setTaxRateRulesWorkflow
  endpoint:
    path: /resources/references/medusa-workflows/setTaxRateRulesWorkflow
- name: updateTaxRatesWorkflow
  endpoint:
    path: /resources/references/medusa-workflows/updateTaxRatesWorkflow
- name: updateTaxRegionsWorkflow
  endpoint:
    path: /resources/references/medusa-workflows/updateTaxRegionsWorkflow
- name: createUserAccountWorkflow
  endpoint:
    path: /resources/references/medusa-workflows/createUserAccountWorkflow
- name: createUsersWorkflow
  endpoint:
    path: /resources/references/medusa-workflows/createUsersWorkflow
- name: deleteUsersWorkflow
  endpoint:
    path: /resources/references/medusa-workflows/deleteUsersWorkflow
- name: removeUserAccountWorkflow
  endpoint:
    path: /resources/references/medusa-workflows/removeUserAccountWorkflow
- name: updateUsersWorkflow
  endpoint:
    path: /resources/references/medusa-workflows/updateUsersWorkflow
- name: create
  endpoint:
    path: /resources/data-model-repository-reference/methods/create
    method: POST
- name: delete
  endpoint:
    path: /resources/data-model-repository-reference/methods/delete
    method: DELETE
- name: find
  endpoint:
    path: /resources/data-model-repository-reference/methods/find
    method: GET
- name: findAndCount
  endpoint:
    path: /resources/data-model-repository-reference/methods/findAndCount
    method: GET
- name: restore
  endpoint:
    path: /resources/data-model-repository-reference/methods/restore
    method: POST
- name: softDelete
  endpoint:
    path: /resources/data-model-repository-reference/methods/softDelete
    method: DELETE
- name: update
  endpoint:
    path: /resources/data-model-repository-reference/methods/update
    method: PUT
- name: upsert
  endpoint:
    path: /resources/data-model-repository-reference/methods/upsert
    method: POST
- name: upsertWithReplace
  endpoint:
    path: /resources/data-model-repository-reference/methods/upsertWithReplace
    method: POST
- name: product-option.updated
  endpoint:
    path: /product-option/updated
    method: GET
    data_selector: payload
- name: product-option.created
  endpoint:
    path: /product-option/created
    method: GET
    data_selector: payload
- name: product-option.deleted
  endpoint:
    path: /product-option/deleted
    method: GET
    data_selector: payload
- name: user.updated
  endpoint:
    path: /user.updated
    method: GET
    data_selector: id
    params: {}
- name: user.deleted
  endpoint:
    path: /user.deleted
    method: GET
    data_selector: id
    params: {}
- name: auth.password_reset
  endpoint:
    path: /events/auth.password_reset
    method: GET
    data_selector: payload
- name: cart.created
  endpoint:
    path: /events/cart.created
    method: GET
    data_selector: payload
- name: cart.updated
  endpoint:
    path: /events/cart.updated
    method: GET
    data_selector: payload
- name: cart.region_updated
  endpoint:
    path: /events/cart.region_updated
    method: GET
    data_selector: payload
- name: cart.customer_transferred
  endpoint:
    path: /events/cart.customer_transferred
    method: GET
    data_selector: payload
- name: customer.created
  endpoint:
    path: /events/customer.created
    method: GET
    data_selector: payload
- name: customer.updated
  endpoint:
    path: /events/customer.updated
    method: GET
    data_selector: payload
- name: customer.deleted
  endpoint:
    path: /events/customer.deleted
    method: GET
    data_selector: payload
- name: shipment.created
  endpoint:
    path: /events/shipment.created
    method: GET
    data_selector: payload
- name: delivery.created
  endpoint:
    path: /events/delivery.created
    method: GET
    data_selector: payload
- name: invite.accepted
  endpoint:
    path: /events/invite.accepted
    method: GET
    data_selector: payload
- name: invite.created
  endpoint:
    path: /events/invite.created
    method: GET
    data_selector: payload
- name: invite.deleted
  endpoint:
    path: /events/invite.deleted
    method: GET
    data_selector: payload
- name: invite.resent
  endpoint:
    path: /events/invite.resent
    method: GET
    data_selector: payload
- name: order-edit.requested
  endpoint:
    path: /events/order-edit.requested
    method: GET
    data_selector: payload
- name: order-edit.confirmed
  endpoint:
    path: /events/order-edit.confirmed
    method: GET
    data_selector: payload
- name: order-edit.canceled
  endpoint:
    path: /events/order-edit.canceled
    method: GET
    data_selector: payload
- name: product-option.updated
  endpoint:
    path: /resources/references/medusa-workflows/updateProductOptionsWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the product option3}]
- name: product-option.created
  endpoint:
    path: /resources/references/medusa-workflows/createProductOptionsWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the product option3}]
- name: product-option.deleted
  endpoint:
    path: /resources/references/medusa-workflows/deleteProductOptionsWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the product option3}]
- name: product-tag.updated
  endpoint:
    path: /resources/references/medusa-workflows/updateProductTagsWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the product tag3}]
- name: product-tag.created
  endpoint:
    path: /resources/references/medusa-workflows/createProductTagsWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the product tag3}]
- name: product-tag.deleted
  endpoint:
    path: /resources/references/medusa-workflows/deleteProductTagsWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the product tag3}]
- name: product-type.updated
  endpoint:
    path: /resources/references/medusa-workflows/updateProductTypesWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the product type3}]
- name: product-type.created
  endpoint:
    path: /resources/references/medusa-workflows/createProductTypesWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the product type3}]
- name: product-type.deleted
  endpoint:
    path: /resources/references/medusa-workflows/deleteProductTypesWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the product type3}]
- name: product-variant.updated
  endpoint:
    path: /resources/references/medusa-workflows/updateProductVariantsWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the product variant3}]
- name: product-variant.created
  endpoint:
    path: /resources/references/medusa-workflows/createProductVariantsWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the product variant3}]
- name: product-variant.deleted
  endpoint:
    path: /resources/references/medusa-workflows/deleteProductVariantsWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the product variant3}]
- name: product.updated
  endpoint:
    path: /resources/references/medusa-workflows/updateProductsWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the product3}]
- name: product.created
  endpoint:
    path: /resources/references/medusa-workflows/createProductsWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the product3}]
- name: product.deleted
  endpoint:
    path: /resources/references/medusa-workflows/deleteProductsWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the product3}]
- name: region.updated
  endpoint:
    path: /resources/references/medusa-workflows/updateRegionsWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the region3}]
- name: region.created
  endpoint:
    path: /resources/references/medusa-workflows/createRegionsWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the region3}]
- name: region.deleted
  endpoint:
    path: /resources/references/medusa-workflows/deleteRegionsWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the region3}]
- name: sales-channel.created
  endpoint:
    path: /resources/references/medusa-workflows/createSalesChannelsWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the sales channel3}]
- name: sales-channel.updated
  endpoint:
    path: /resources/references/medusa-workflows/updateSalesChannelsWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the sales channel3}]
- name: sales-channel.deleted
  endpoint:
    path: /resources/references/medusa-workflows/deleteSalesChannelsWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the sales channel3}]
- name: user.created
  endpoint:
    path: /resources/references/medusa-workflows/createUsersWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the user3}]
- name: user.updated
  endpoint:
    path: /resources/references/medusa-workflows/updateUsersWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the user3}]
- name: user.deleted
  endpoint:
    path: /resources/references/medusa-workflows/deleteUsersWorkflow
    method: GET
    data_selector: 1[{2  id, // The ID of the user3}]
- name: createEntitiesStep
  endpoint:
    path: /resources/references/helper-steps/createEntitiesStep
    method: GET
- name: createRemoteLinkStep
  endpoint:
    path: /resources/references/helper-steps/createRemoteLinkStep
    method: GET
- name: deleteEntitiesStep
  endpoint:
    path: /resources/references/helper-steps/deleteEntitiesStep
    method: GET
- name: dismissRemoteLinkStep
  endpoint:
    path: /resources/references/helper-steps/dismissRemoteLinkStep
    method: GET
- name: emitEventStep
  endpoint:
    path: /resources/references/helper-steps/emitEventStep
    method: GET
- name: removeRemoteLinkStep
  endpoint:
    path: /resources/references/helper-steps/removeRemoteLinkStep
    method: GET
- name: updateRemoteLinksStep
  endpoint:
    path: /resources/references/helper-steps/updateRemoteLinksStep
    method: GET
- name: useQueryGraphStep
  endpoint:
    path: /resources/references/helper-steps/useQueryGraphStep
    method: GET
- name: useRemoteQueryStep
  endpoint:
    path: /resources/references/helper-steps/useRemoteQueryStep
    method: GET
- name: validatePresenceOfStep
  endpoint:
    path: /resources/references/helper-steps/validatePresenceOfStep
    method: GET
- name: medusaIntegrationTestRunner
- name: moduleIntegrationTestRunner
- name: createHook
  endpoint:
    path: /resources/references/workflows/createHook
    method: GET
- name: createStep
  endpoint:
    path: /resources/references/workflows/createStep
    method: GET
- name: createWorkflow
  endpoint:
    path: /resources/references/workflows/createWorkflow
    method: GET
- name: parallelize
  endpoint:
    path: /resources/references/workflows/parallelize
    method: GET
- name: transform
  endpoint:
    path: /resources/references/workflows/transform
    method: GET
- name: add-custom-to-cart
  endpoint:
    path: /api/store/cart/[id]/custom-line-items
    method: POST
    data_selector: success
    params: {}
- name: sync-order-to-erp
  endpoint:
    path: /api/erp/order-updates
    method: POST
    data_selector: success
    params: {}
- name: erp_module_service
  endpoint:
    path: /src/modules/erp/service.ts
    method: GET
    data_selector: products
    params: {}
- name: sync_products
  endpoint:
    path: /src/workflows/sync-products.ts
    method: GET
    data_selector: products
    params: {}
- name: get_variant_price
  endpoint:
    path: /src/workflows/steps/get-erp-price.ts
    method: GET
    data_selector: price
    params: {}
- name: sales_channel
  endpoint:
    path: /admin/sales-channels
    method: POST
- name: publishable_api_key
  endpoint:
    path: /admin/api-keys
    method: POST
- name: b2b_products
  endpoint:
    path: /admin/products
    method: POST
- name: customers
  endpoint:
    path: /admin/customers
    method: POST
- name: price_list
  endpoint:
    path: /admin/price-lists
    method: POST
- name: bundled_products
  endpoint:
    path: /resources/recipes/bundled-products
    method: GET
- name: restock_notifications
  endpoint:
    path: /restock-notifications
    method: POST
    data_selector: notifications
- name: customer_support
  endpoint:
    path: /customer-support
    method: POST
    data_selector: support_requests
- name: order_management
  endpoint:
    path: /order-management
    method: POST
    data_selector: orders
- name: rma_flow
  endpoint:
    path: /rma-flow
    method: POST
    data_selector: rma_requests
- name: customer_segmentation
  endpoint:
    path: /customer-segmentation
    method: POST
    data_selector: segments
- name: marketing_automation
  endpoint:
    path: /marketing-automation
    method: POST
    data_selector: marketing_campaigns
- name: line_item
  endpoint:
    path: /store/carts/{id}/line-items
    method: POST
    data_selector: LineItem
    params: {}
- name: Get Variant Inventory
  endpoint:
    path: /resources/commerce-modules/product/guides/variant-inventory
    method: GET
- name: Retrieve Product Variant's Inventory in Storefront
  endpoint:
    path: /resources/storefront-development/products/inventory
    method: GET
- name: Order Management
  endpoint:
    path: /resources/commerce-modules/order/concepts
    method: GET
- name: Draft Orders
  endpoint:
    path: /resources/commerce-modules/order/draft-orders
    method: GET
- name: Promotion Adjustments
  endpoint:
    path: /resources/commerce-modules/order/promotion-adjustments
    method: GET
- name: Tax Lines
  endpoint:
    path: /resources/commerce-modules/order/tax-lines
    method: GET
- name: Returns
  endpoint:
    path: /resources/commerce-modules/order/return
    method: GET
- name: Edits
  endpoint:
    path: /resources/commerce-modules/order/edit
    method: GET
- name: Exchanges
  endpoint:
    path: /resources/commerce-modules/order/exchange
    method: GET
- name: Claims
  endpoint:
    path: /resources/commerce-modules/order/claim
    method: GET
- name: payment
  endpoint:
    path: /resources/commerce-modules/payment/payment
    method: GET
    data_selector: records
- name: payment_collection
  endpoint:
    path: /resources/commerce-modules/payment/payment-collection
    method: GET
    data_selector: records
- name: payment_provider
  endpoint:
    path: /resources/commerce-modules/payment/payment-provider
    method: GET
    data_selector: records
- name: account_holder
  endpoint:
    path: /resources/commerce-modules/payment/account-holder
    method: GET
    data_selector: records
- name: webhook_events
  endpoint:
    path: /resources/commerce-modules/payment/webhook-events
    method: GET
    data_selector: records
- name: order_payments
  endpoint:
    path: /user-guide/orders/payments
    method: GET
    data_selector: payment_statuses
- name: authorizePaymentSession
  endpoint:
    path: /resources/references/payment/authorizePaymentSession
    method: GET
- name: cancelPayment
  endpoint:
    path: /resources/references/payment/cancelPayment
    method: GET
- name: capturePayment
  endpoint:
    path: /resources/references/payment/capturePayment
    method: GET
- name: completePaymentCollections
  endpoint:
    path: /resources/references/payment/completePaymentCollections
    method: GET
- name: createAccountHolder
  endpoint:
    path: /resources/references/payment/createAccountHolder
    method: GET
- name: createPaymentCollections
  endpoint:
    path: /resources/references/payment/createPaymentCollections
    method: GET
- name: createPaymentMethods
  endpoint:
    path: /resources/references/payment/createPaymentMethods
    method: GET
- name: createPaymentSession
  endpoint:
    path: /resources/references/payment/createPaymentSession
    method: GET
- name: createRefundReasons
  endpoint:
    path: /resources/references/payment/createRefundReasons
    method: GET
- name: deleteAccountHolder
  endpoint:
    path: /resources/references/payment/deleteAccountHolder
    method: GET
- name: deleteCaptures
  endpoint:
    path: /resources/references/payment/deleteCaptures
    method: GET
- name: deletePaymentCollections
  endpoint:
    path: /resources/references/payment/deletePaymentCollections
    method: GET
- name: deletePaymentSession
  endpoint:
    path: /resources/references/payment/deletePaymentSession
    method: GET
- name: deleteRefundReasons
  endpoint:
    path: /resources/references/payment/deleteRefundReasons
    method: GET
- name: deleteRefunds
  endpoint:
    path: /resources/references/payment/deleteRefunds
    method: GET
- name: getWebhookActionAndData
  endpoint:
    path: /resources/references/payment/getWebhookActionAndData
    method: GET
- name: listAndCountPaymentCollections
  endpoint:
    path: /resources/references/payment/listAndCountPaymentCollections
    method: GET
- name: listAndCountPaymentMethods
  endpoint:
    path: /resources/references/payment/listAndCountPaymentMethods
    method: GET
- name: listAndCountPaymentProviders
  endpoint:
    path: /resources/references/payment/listAndCountPaymentProviders
    method: GET
- name: listCaptures
  endpoint:
    path: /resources/references/payment/listCaptures
    method: GET
- name: listPaymentCollections
  endpoint:
    path: /resources/references/payment/listPaymentCollections
    method: GET
- name: listPaymentMethods
  endpoint:
    path: /resources/references/payment/listPaymentMethods
    method: GET
- name: listPaymentProviders
  endpoint:
    path: /resources/references/payment/listPaymentProviders
    method: GET
- name: listPayments
  endpoint:
    path: /resources/references/payment/listPayments
    method: GET
- name: listPaymentSessions
  endpoint:
    path: /resources/references/payment/listPaymentSessions
    method: GET
- name: listRefundReasons
  endpoint:
    path: /resources/references/payment/listRefundReasons
    method: GET
- name: listRefunds
  endpoint:
    path: /resources/references/payment/listRefunds
    method: GET
- name: refundPayment
  endpoint:
    path: /resources/references/payment/refundPayment
    method: GET
- name: restorePaymentCollections
  endpoint:
    path: /resources/references/payment/restorePaymentCollections
    method: GET
- name: restoreRefundReasons
  endpoint:
    path: /resources/references/payment/restoreRefundReasons
    method: GET
- name: retrievePayment
  endpoint:
    path: /resources/references/payment/retrievePayment
    method: GET
- name: retrievePaymentCollection
  endpoint:
    path: /resources/references/payment/retrievePaymentCollection
    method: GET
- name: retrievePaymentSession
  endpoint:
    path: /resources/references/payment/retrievePaymentSession
    method: GET
- name: softDeletePaymentCollections
  endpoint:
    path: /resources/references/payment/softDeletePaymentCollections
    method: GET
- name: softDeleteRefundReasons
  endpoint:
    path: /resources/references/payment/softDeleteRefundReasons
    method: GET
- name: updateAccountHolder
  endpoint:
    path: /resources/references/payment/updateAccountHolder
    method: GET
- name: updatePayment
  endpoint:
    path: /resources/references/payment/updatePayment
    method: GET
- name: updatePaymentCollections
  endpoint:
    path: /resources/references/payment/updatePaymentCollections
    method: GET
- name: updatePaymentSession
  endpoint:
    path: /resources/references/payment/updatePaymentSession
    method: GET
- name: updateRefundReasons
  endpoint:
    path: /resources/references/payment/updateRefundReasons
    method: GET
- name: upsertPaymentCollections
  endpoint:
    path: /resources/references/payment/upsertPaymentCollections
    method: GET
- name: customer_accounts
  endpoint:
    path: /resources/commerce-modules/customer/customer-accounts
    method: GET
- name: customer_groups
  endpoint:
    path: /resources/references/customer/models
    method: GET
- name: customers
  endpoint:
    path: /user-guide/customers
    method: GET
    data_selector: customers
    params: {}
- name: customer_groups
  endpoint:
    path: /user-guide/customers/groups
    method: GET
    data_selector: customer_groups
    params: {}
- name: customer_groups
  endpoint:
    path: /customers/groups
    method: GET
    data_selector: customer_groups
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
- name: customer_orders
  endpoint:
    path: /customers/{customer_id}/orders
    method: GET
    data_selector: orders
- name: customer_groups
  endpoint:
    path: /customers/{customer_id}/groups
    method: GET
    data_selector: groups
- name: customer_addresses
  endpoint:
    path: /customers/{customer_id}/addresses
    method: GET
    data_selector: addresses
- name: addCustomerToGroup
  endpoint:
    path: /resources/references/customer/addCustomerToGroup
    method: POST
- name: createCustomerAddresses
  endpoint:
    path: /resources/references/customer/createCustomerAddresses
    method: POST
- name: createCustomerGroups
  endpoint:
    path: /resources/references/customer/createCustomerGroups
    method: POST
- name: createCustomers
  endpoint:
    path: /resources/references/customer/createCustomers
    method: POST
- name: deleteCustomerAddresses
  endpoint:
    path: /resources/references/customer/deleteCustomerAddresses
    method: DELETE
- name: deleteCustomerGroups
  endpoint:
    path: /resources/references/customer/deleteCustomerGroups
    method: DELETE
- name: deleteCustomers
  endpoint:
    path: /resources/references/customer/deleteCustomers
    method: DELETE
- name: listAndCountCustomerAddresses
  endpoint:
    path: /resources/references/customer/listAndCountCustomerAddresses
    method: GET
- name: listAndCountCustomerGroups
  endpoint:
    path: /resources/references/customer/listAndCountCustomerGroups
    method: GET
- name: listAndCountCustomers
  endpoint:
    path: /resources/references/customer/listAndCountCustomers
    method: GET
- name: listCustomerAddresses
  endpoint:
    path: /resources/references/customer/listCustomerAddresses
    method: GET
- name: listCustomerGroupCustomers
  endpoint:
    path: /resources/references/customer/listCustomerGroupCustomers
    method: GET
- name: listCustomerGroups
  endpoint:
    path: /resources/references/customer/listCustomerGroups
    method: GET
- name: listCustomers
  endpoint:
    path: /resources/references/customer/listCustomers
    method: GET
- name: removeCustomerFromGroup
  endpoint:
    path: /resources/references/customer/removeCustomerFromGroup
    method: DELETE
- name: restoreCustomerGroups
  endpoint:
    path: /resources/references/customer/restoreCustomerGroups
    method: POST
- name: restoreCustomers
  endpoint:
    path: /resources/references/customer/restoreCustomers
    method: POST
- name: retrieveCustomer
  endpoint:
    path: /resources/references/customer/retrieveCustomer
    method: GET
- name: retrieveCustomerGroup
  endpoint:
    path: /resources/references/customer/retrieveCustomerGroup
    method: GET
- name: softDeleteCustomerGroups
  endpoint:
    path: /resources/references/customer/softDeleteCustomerGroups
    method: DELETE
- name: softDeleteCustomers
  endpoint:
    path: /resources/references/customer/softDeleteCustomers
    method: DELETE
- name: updateCustomerAddresses
  endpoint:
    path: /resources/references/customer/updateCustomerAddresses
    method: PUT
- name: updateCustomerGroups
  endpoint:
    path: /resources/references/customer/updateCustomerGroups
    method: PUT
- name: updateCustomers
  endpoint:
    path: /resources/references/customer/updateCustomers
    method: PUT
- name: fulfillment_management
  endpoint:
    path: /resources/commerce-modules/fulfillment/item-fulfillment
    method: GET
- name: third_party_fulfillment_providers
  endpoint:
    path: /resources/commerce-modules/fulfillment/fulfillment-provider
    method: GET
- name: shipping_option
  endpoint:
    path: /resources/commerce-modules/fulfillment/shipping-option
    method: GET
- name: fulfillment_forms
  endpoint:
    path: /resources/commerce-modules/fulfillment/concepts
    method: GET
- name: tiered_pricing
  endpoint:
    path: /resources/commerce-modules/pricing/price-rules
    method: GET
- name: Manage Locations
  endpoint:
    path: /user-guide/settings/locations-and-shipping/locations
    method: GET
- name: Manage Shipping Profiles
  endpoint:
    path: /user-guide/settings/locations-and-shipping/shipping-profiles
    method: GET
- name: fulfillment
  endpoint:
    path: /user-guide/orders/fulfillments
    method: GET
    data_selector: fulfillments
    params: {}
- name: listFulfillments
  endpoint:
    path: /resources/references/fulfillment/listFulfillments
    method: GET
- name: listAndCountFulfillments
  endpoint:
    path: /resources/references/fulfillment/listAndCountFulfillments
    method: GET
- name: listFulfillmentSets
  endpoint:
    path: /resources/references/fulfillment/listFulfillmentSets
    method: GET
- name: listAndCountFulfillmentSets
  endpoint:
    path: /resources/references/fulfillment/listAndCountFulfillmentSets
    method: GET
- name: listGeoZones
  endpoint:
    path: /resources/references/fulfillment/listGeoZones
    method: GET
- name: listAndCountGeoZones
  endpoint:
    path: /resources/references/fulfillment/listAndCountGeoZones
    method: GET
- name: listServiceZones
  endpoint:
    path: /resources/references/fulfillment/listServiceZones
    method: GET
- name: listAndCountServiceZones
  endpoint:
    path: /resources/references/fulfillment/listAndCountServiceZones
    method: GET
- name: listShippingOptions
  endpoint:
    path: /resources/references/fulfillment/listShippingOptions
    method: GET
- name: listAndCountShippingOptions
  endpoint:
    path: /resources/references/fulfillment/listAndCountShippingOptions
    method: GET
- name: listShippingProfiles
  endpoint:
    path: /resources/references/fulfillment/listShippingProfiles
    method: GET
- name: listFulfillmentProviders
  endpoint:
    path: /resources/references/fulfillment/listFulfillmentProviders
    method: GET
- name: createStockLocations
  endpoint:
    path: /resources/references/stock-location-next/createStockLocations
    method: POST
- name: deleteStockLocationAddresses
  endpoint:
    path: /resources/references/stock-location-next/deleteStockLocationAddresses
    method: DELETE
- name: deleteStockLocations
  endpoint:
    path: /resources/references/stock-location-next/deleteStockLocations
    method: DELETE
- name: listAndCountStockLocations
  endpoint:
    path: /resources/references/stock-location-next/listAndCountStockLocations
    method: GET
- name: listStockLocationAddresses
  endpoint:
    path: /resources/references/stock-location-next/listStockLocationAddresses
    method: GET
- name: listStockLocations
  endpoint:
    path: /resources/references/stock-location-next/listStockLocations
    method: GET
- name: restoreStockLocations
  endpoint:
    path: /resources/references/stock-location-next/restoreStockLocations
    method: POST
- name: retrieveStockLocation
  endpoint:
    path: /resources/references/stock-location-next/retrieveStockLocation
    method: GET
- name: softDeleteStockLocations
  endpoint:
    path: /resources/references/stock-location-next/softDeleteStockLocations
    method: DELETE
- name: updateStockLocations
  endpoint:
    path: /resources/references/stock-location-next/updateStockLocations
    method: PUT
- name: upsertStockLocationAddresses
  endpoint:
    path: /resources/references/stock-location-next/upsertStockLocationAddresses
    method: POST
- name: upsertStockLocations
  endpoint:
    path: /resources/references/stock-location-next/upsertStockLocations
    method: POST
- name: Region Management
  endpoint:
    path: /resources/references/region/models/Region
    method: GET
    data_selector: records
- name: Multi-Currency Support
  endpoint:
    path: /resources/references/region/models/Region
    method: GET
    data_selector: records
- name: Different Settings Per Region
  endpoint:
    path: /resources/references/region/models/Region
    method: GET
    data_selector: records
- name: regions
  endpoint:
    path: /settings/regions
    method: GET
    data_selector: regions
    params: {}
- name: createRegions
  endpoint:
    path: /resources/references/region/createRegions
    method: POST
- name: deleteRegions
  endpoint:
    path: /resources/references/region/deleteRegions
    method: DELETE
- name: listAndCountCountries
  endpoint:
    path: /resources/references/region/listAndCountCountries
    method: GET
- name: listAndCountRegions
  endpoint:
    path: /resources/references/region/listAndCountRegions
    method: GET
- name: listCountries
  endpoint:
    path: /resources/references/region/listCountries
    method: GET
- name: listRegions
  endpoint:
    path: /resources/references/region/listRegions
    method: GET
- name: restoreRegions
  endpoint:
    path: /resources/references/region/restoreRegions
    method: POST
- name: retrieveCountry
  endpoint:
    path: /resources/references/region/retrieveCountry
    method: GET
- name: retrieveRegion
  endpoint:
    path: /resources/references/region/retrieveRegion
    method: GET
- name: softDeleteRegions
  endpoint:
    path: /resources/references/region/softDeleteRegions
    method: DELETE
- name: updateRegions
  endpoint:
    path: /resources/references/region/updateRegions
    method: PATCH
- name: upsertRegions
  endpoint:
    path: /resources/references/region/upsertRegions
    method: PUT
- name: Sales Channel Management
  endpoint:
    path: /resources/references/sales-channel/models/SalesChannel
    method: GET
    data_selector: sales_channels
- name: Product Availability
  endpoint:
    path: /resources/commerce-modules/sales-channel/links-to-other-modules
    method: GET
    data_selector: product_availability
- name: Cart and Order Scoping
  endpoint:
    path: /resources/commerce-modules/sales-channel/links-to-other-modules
    method: GET
    data_selector: cart_order_scoping
- name: Inventory Availability Per Sales Channel
  endpoint:
    path: /resources/commerce-modules/sales-channel/links-to-other-modules
    method: GET
    data_selector: inventory_availability
- name: create_api_key
  endpoint:
    path: /admin/api-keys
    method: POST
- name: manage_sales_channels
  endpoint:
    path: /admin/api-keys/apk_123/sales-channels
    method: POST
- name: createSalesChannels
  endpoint:
    path: /resources/references/sales-channel/createSalesChannels
    method: POST
- name: deleteSalesChannels
  endpoint:
    path: /resources/references/sales-channel/deleteSalesChannels
    method: DELETE
- name: listAndCountSalesChannels
  endpoint:
    path: /resources/references/sales-channel/listAndCountSalesChannels
    method: GET
- name: listSalesChannels
  endpoint:
    path: /resources/references/sales-channel/listSalesChannels
    method: GET
- name: restoreSalesChannels
  endpoint:
    path: /resources/references/sales-channel/restoreSalesChannels
    method: POST
- name: retrieveSalesChannel
  endpoint:
    path: /resources/references/sales-channel/retrieveSalesChannel
    method: GET
- name: softDeleteSalesChannels
  endpoint:
    path: /resources/references/sales-channel/softDeleteSalesChannels
    method: DELETE
- name: updateSalesChannels
  endpoint:
    path: /resources/references/sales-channel/updateSalesChannels
    method: PUT
- name: upsertSalesChannels
  endpoint:
    path: /resources/references/sales-channel/upsertSalesChannels
    method: PUT
- name: Tax Region
  endpoint:
    path: /resources/commerce-modules/tax/tax-region
    method: GET
- name: Tax Rates and Rules
  endpoint:
    path: /resources/commerce-modules/tax/tax-rates-and-rules
    method: GET
- name: Tax Calculation
  endpoint:
    path: /resources/commerce-modules/tax/tax-calculation-with-provider
    method: GET
- name: Tax Provider
  endpoint:
    path: /resources/commerce-modules/tax/tax-provider
    method: GET
- name: createTaxRateRules
  endpoint:
    path: /resources/references/tax/createTaxRateRules
    method: POST
- name: createTaxRates
  endpoint:
    path: /resources/references/tax/createTaxRates
    method: POST
- name: createTaxRegions
  endpoint:
    path: /resources/references/tax/createTaxRegions
    method: POST
- name: deleteTaxRateRules
  endpoint:
    path: /resources/references/tax/deleteTaxRateRules
    method: DELETE
- name: deleteTaxRates
  endpoint:
    path: /resources/references/tax/deleteTaxRates
    method: DELETE
- name: deleteTaxRegions
  endpoint:
    path: /resources/references/tax/deleteTaxRegions
    method: DELETE
- name: getTaxLines
  endpoint:
    path: /resources/references/tax/getTaxLines
    method: GET
- name: listAndCountTaxRates
  endpoint:
    path: /resources/references/tax/listAndCountTaxRates
    method: GET
- name: listTaxProviders
  endpoint:
    path: /resources/references/tax/listTaxProviders
    method: GET
- name: listTaxRateRules
  endpoint:
    path: /resources/references/tax/listTaxRateRules
    method: GET
- name: listTaxRates
  endpoint:
    path: /resources/references/tax/listTaxRates
    method: GET
- name: listTaxRegions
  endpoint:
    path: /resources/references/tax/listTaxRegions
    method: GET
- name: restoreTaxRateRules
  endpoint:
    path: /resources/references/tax/restoreTaxRateRules
    method: POST
- name: restoreTaxRates
  endpoint:
    path: /resources/references/tax/restoreTaxRates
    method: POST
- name: restoreTaxRegions
  endpoint:
    path: /resources/references/tax/restoreTaxRegions
    method: POST
- name: retrieveTaxRate
  endpoint:
    path: /resources/references/tax/retrieveTaxRate
    method: GET
- name: softDeleteTaxRateRules
  endpoint:
    path: /resources/references/tax/softDeleteTaxRateRules
    method: DELETE
- name: softDeleteTaxRates
  endpoint:
    path: /resources/references/tax/softDeleteTaxRates
    method: DELETE
- name: softDeleteTaxRegions
  endpoint:
    path: /resources/references/tax/softDeleteTaxRegions
    method: DELETE
- name: updateTaxRates
  endpoint:
    path: /resources/references/tax/updateTaxRates
    method: PUT
- name: updateTaxRegions
  endpoint:
    path: /resources/references/tax/updateTaxRegions
    method: PUT
- name: upsertTaxRates
  endpoint:
    path: /resources/references/tax/upsertTaxRates
    method: PUT
- name: currency_management
  endpoint:
    path: /resources/references/currency/listAndCountCurrencies
    method: GET
    data_selector: currencies
- name: support_currencies_in_modules
  endpoint:
    path: /resources/commerce-modules/currency/links-to-other-modules
    method: GET
    data_selector: currency_codes
- name: store
  endpoint:
    path: /settings/store
    method: GET
    data_selector: storeDetails
    params: {}
- name: currencies
  endpoint:
    path: /settings/store/currencies
    method: GET
    data_selector: currenciesList
    params: {}
- name: metadata
  endpoint:
    path: /settings/store/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: listAndCountCurrencies
  endpoint:
    path: /resources/references/currency/listAndCountCurrencies
    method: GET
- name: listCurrencies
  endpoint:
    path: /resources/references/currency/listCurrencies
    method: GET
- name: retrieveCurrency
  endpoint:
    path: /resources/references/currency/retrieveCurrency
    method: GET
- name: authenticate
  endpoint:
    path: /resources/references/api-key/authenticate
    method: GET
- name: createApiKeys
  endpoint:
    path: /resources/references/api-key/createApiKeys
    method: POST
- name: deleteApiKeys
  endpoint:
    path: /resources/references/api-key/deleteApiKeys
    method: DELETE
- name: listAndCountApiKeys
  endpoint:
    path: /resources/references/api-key/listAndCountApiKeys
    method: GET
- name: listApiKeys
  endpoint:
    path: /resources/references/api-key/listApiKeys
    method: GET
- name: retrieveApiKey
  endpoint:
    path: /resources/references/api-key/retrieveApiKey
    method: GET
- name: revoke
  endpoint:
    path: /resources/references/api-key/revoke
    method: POST
- name: updateApiKeys
  endpoint:
    path: /resources/references/api-key/updateApiKeys
    method: PUT
- name: upsertApiKeys
  endpoint:
    path: /resources/references/api-key/upsertApiKeys
    method: POST
- name: users
  endpoint:
    path: /user-guide/settings/users
    method: GET
    data_selector: user_details
    params: {}
- name: reset_password
  endpoint:
    path: /user-guide/reset-password
    method: POST
    data_selector: instructions
- name: createInvites
  endpoint:
    path: /resources/references/user/createInvites
    method: POST
- name: createUsers
  endpoint:
    path: /resources/references/user/createUsers
    method: POST
- name: deleteInvites
  endpoint:
    path: /resources/references/user/deleteInvites
    method: DELETE
- name: deleteUsers
  endpoint:
    path: /resources/references/user/deleteUsers
    method: DELETE
- name: listAndCountInvites
  endpoint:
    path: /resources/references/user/listAndCountInvites
    method: GET
- name: listAndCountUsers
  endpoint:
    path: /resources/references/user/listAndCountUsers
    method: GET
- name: listInvites
  endpoint:
    path: /resources/references/user/listInvites
    method: GET
- name: listUsers
  endpoint:
    path: /resources/references/user/listUsers
    method: GET
- name: refreshInviteTokens
  endpoint:
    path: /resources/references/user/refreshInviteTokens
    method: POST
- name: restoreInvites
  endpoint:
    path: /resources/references/user/restoreInvites
    method: POST
- name: restoreUsers
  endpoint:
    path: /resources/references/user/restoreUsers
    method: POST
- name: retrieveInvite
  endpoint:
    path: /resources/references/user/retrieveInvite
    method: GET
- name: retrieveUser
  endpoint:
    path: /resources/references/user/retrieveUser
    method: GET
- name: softDeleteInvites
  endpoint:
    path: /resources/references/user/softDeleteInvites
    method: DELETE
- name: softDeleteUsers
  endpoint:
    path: /resources/references/user/softDeleteUsers
    method: DELETE
- name: updateInvites
  endpoint:
    path: /resources/references/user/updateInvites
    method: PUT
- name: updateUsers
  endpoint:
    path: /resources/references/user/updateUsers
    method: PUT
- name: validateInviteToken
  endpoint:
    path: /resources/references/user/validateInviteToken
    method: POST
- name: Emailpass Provider
  endpoint:
    path: /resources/commerce-modules/auth/auth-providers/emailpass
    method: GET
- name: Google Provider
  endpoint:
    path: /resources/commerce-modules/auth/auth-providers/google
    method: GET
- name: GitHub Provider
  endpoint:
    path: /resources/commerce-modules/auth/auth-providers/github
    method: GET
- name: authenticate
  endpoint:
    path: /resources/references/auth/authenticate
    method: GET
    data_selector: ''
    params: {}
- name: createAuthIdentities
  endpoint:
    path: /resources/references/auth/createAuthIdentities
    method: GET
    data_selector: ''
    params: {}
- name: createProviderIdentities
  endpoint:
    path: /resources/references/auth/createProviderIdentities
    method: GET
    data_selector: ''
    params: {}
- name: deleteAuthIdentities
  endpoint:
    path: /resources/references/auth/deleteAuthIdentities
    method: GET
    data_selector: ''
    params: {}
- name: deleteProviderIdentities
  endpoint:
    path: /resources/references/auth/deleteProviderIdentities
    method: GET
    data_selector: ''
    params: {}
- name: listAndCountAuthIdentities
  endpoint:
    path: /resources/references/auth/listAndCountAuthIdentities
    method: GET
    data_selector: ''
    params: {}
- name: listAuthIdentities
  endpoint:
    path: /resources/references/auth/listAuthIdentities
    method: GET
    data_selector: ''
    params: {}
- name: listProviderIdentities
  endpoint:
    path: /resources/references/auth/listProviderIdentities
    method: GET
    data_selector: ''
    params: {}
- name: register
  endpoint:
    path: /resources/references/auth/register
    method: GET
    data_selector: ''
    params: {}
- name: retrieveAuthIdentity
  endpoint:
    path: /resources/references/auth/retrieveAuthIdentity
    method: GET
    data_selector: ''
    params: {}
- name: retrieveProviderIdentity
  endpoint:
    path: /resources/references/auth/retrieveProviderIdentity
    method: GET
    data_selector: ''
    params: {}
- name: updateAuthIdentities
  endpoint:
    path: /resources/references/auth/updateAuthIdentities
    method: GET
    data_selector: ''
    params: {}
- name: updateProvider
  endpoint:
    path: /resources/references/auth/updateProvider
    method: GET
    data_selector: ''
    params: {}
- name: updateProviderIdentities
  endpoint:
    path: /resources/references/auth/updateProviderIdentities
    method: GET
    data_selector: ''
    params: {}
- name: validateCallback
  endpoint:
    path: /resources/references/auth/validateCallback
    method: GET
    data_selector: ''
    params: {}
- name: gift_cards
  endpoint:
    path: /api/store/gift-cards
    method: GET
- name: store_credit_accounts
  endpoint:
    path: /api/store/store-credit-accounts
    method: GET
- name: admin_gift_cards
  endpoint:
    path: /api/admin/gift-cards
    method: GET
- name: admin_store_credit_accounts
  endpoint:
    path: /api/admin/store-credit-accounts
    method: GET
- name: admin_transaction_groups
  endpoint:
    path: /api/admin/transaction-groups
    method: GET
- name: PostgreSQL databases
  endpoint:
    path: /cloud/database
    method: GET
- name: Redis instances
  endpoint:
    path: /cloud/redis
    method: GET
- name: S3 buckets
  endpoint:
    path: /cloud/s3
    method: GET
- name: organization
  endpoint:
    path: /cloud/organizations
    method: GET
    data_selector: organizations
    params: {}
- name: long_lived_environments
  endpoint:
    path: /cloud/environments/long-lived
    method: GET
- name: short_lived_preview_environments
  endpoint:
    path: /cloud/environments/preview
    method: GET
- name: environment
  endpoint:
    path: /cloud/environments
    method: POST
    data_selector: environment
    params: {}
- name: deployment
  endpoint:
    path: /cloud/deployments
    method: POST
    data_selector: deployment
    params: {}
- name: deployments
  endpoint:
    path: /health
    method: GET
    data_selector: null
    params: {}
- name: Redis Event Module
  endpoint:
    path: /resources/infrastructure-modules/event/redis
    method: GET
- name: Redis Cache Module
  endpoint:
    path: /resources/infrastructure-modules/cache/redis
    method: GET
- name: Redis Locking Module Provider
  endpoint:
    path: /resources/infrastructure-modules/locking/redis
    method: GET
- name: Redis Workflow Engine Module
  endpoint:
    path: /resources/infrastructure-modules/workflow-engine/redis
    method: GET
- name: billing_email
  endpoint:
    path: /cloud/organizations/settings/billing-email
    method: POST
    data_selector: details
    params: {}
- name: payment_method
  endpoint:
    path: /cloud/organizations/settings/payment-method
    method: POST
    data_selector: payment_methods
    params: {}
- name: billing_information
  endpoint:
    path: /cloud/organizations/settings/billing-information
    method: POST
    data_selector: billing_information
    params: {}
- name: billing_history
  endpoint:
    path: /cloud/organizations/settings/billing-history
    method: GET
    data_selector: billing_history
    params: {}
- name: build_logs
  endpoint:
    path: /cloud/logs/build
    method: GET
    data_selector: logs
- name: runtime_logs
  endpoint:
    path: /cloud/logs/runtime
    method: GET
    data_selector: logs
- name: notifications
  endpoint:
    path: /cloud/notifications
    method: GET
    data_selector: notifications
    params: {}
- name: store
  endpoint:
    path: /store
    method: GET
    data_selector: data
    params: {}
- name: auth
  endpoint:
    path: /auth
    method: POST
    data_selector: data
    params: {}
- name: Store
  endpoint:
    path: /resources/references/store/models/Store
    method: GET
    data_selector: records
- name: createStores
  endpoint:
    path: /resources/references/store/createStores
    method: POST
- name: deleteStores
  endpoint:
    path: /resources/references/store/deleteStores
    method: DELETE
- name: listAndCountStores
  endpoint:
    path: /resources/references/store/listAndCountStores
    method: GET
- name: listStores
  endpoint:
    path: /resources/references/store/listStores
    method: GET
- name: restoreStores
  endpoint:
    path: /resources/references/store/restoreStores
    method: POST
- name: retrieveStore
  endpoint:
    path: /resources/references/store/retrieveStore
    method: GET
- name: softDeleteStores
  endpoint:
    path: /resources/references/store/softDeleteStores
    method: DELETE
- name: updateStores
  endpoint:
    path: /resources/references/store/updateStores
    method: PUT
- name: upsertStores
  endpoint:
    path: /resources/references/store/upsertStores
    method: PUT
- name: analytics
  endpoint:
    path: /resources/infrastructure-modules/analytics
    method: GET
    data_selector: ''
    params: {}
- name: local_provider
  endpoint:
    path: /resources/infrastructure-modules/analytics/local
    method: GET
    data_selector: ''
    params: {}
- name: posthog_provider
  endpoint:
    path: /resources/infrastructure-modules/analytics/posthog
    method: GET
    data_selector: ''
    params: {}
- name: segment_provider
  endpoint:
    path: /resources/integrations/guides/segment
    method: GET
    data_selector: ''
    params: {}
- name: In-Memory Cache Module
  endpoint:
    path: /resources/infrastructure-modules/cache/in-memory
    method: GET
    data_selector: module_details
- name: Redis Cache Module
  endpoint:
    path: /resources/infrastructure-modules/cache/redis
    method: GET
    data_selector: module_details
- name: Local Event Module
  endpoint:
    path: /resources/infrastructure-modules/event/local
    method: GET
- name: Redis Event Module
  endpoint:
    path: /resources/infrastructure-modules/event/redis
    method: GET
- name: emit
  endpoint:
    path: /emit
    method: POST
    data_selector: Promise<void>
- name: subscribe
  endpoint:
    path: /subscribe
    method: POST
    data_selector: this
- name: unsubscribe
  endpoint:
    path: /unsubscribe
    method: DELETE
    data_selector: this
- name: releaseGroupedEvents
  endpoint:
    path: /releaseGroupedEvents
    method: POST
    data_selector: Promise<void>
- name: clearGroupedEvents
  endpoint:
    path: /clearGroupedEvents
    method: DELETE
    data_selector: Promise<void>
- name: my_file
  endpoint:
    path: /src/modules/my-file
    method: GET
- name: retrieveFile
  endpoint:
    path: /retrieveFile
    method: GET
- name: createFiles
  endpoint:
    path: /createFiles
    method: POST
- name: deleteFiles
  endpoint:
    path: /deleteFiles
    method: DELETE
- name: getAsBuffer
  endpoint:
    path: /getAsBuffer
    method: GET
- name: getDownloadStream
  endpoint:
    path: /getDownloadStream
    method: GET
- name: getProvider
  endpoint:
    path: /getProvider
    method: GET
- name: getUploadFileUrls
  endpoint:
    path: /getUploadFileUrls
    method: POST
- name: listAndCountFiles
  endpoint:
    path: /listAndCountFiles
    method: GET
- name: listFiles
  endpoint:
    path: /listFiles
    method: GET
- name: createFiles
  endpoint:
    path: /createFiles
    method: POST
    data_selector: files
- name: deleteFiles
  endpoint:
    path: /deleteFiles
    method: DELETE
    data_selector: result
- name: getAsBuffer
  endpoint:
    path: /getAsBuffer
    method: GET
    data_selector: buffer
- name: getDownloadStream
  endpoint:
    path: /getDownloadStream
    method: GET
    data_selector: stream
- name: getProvider
  endpoint:
    path: /getProvider
    method: GET
    data_selector: provider
- name: getUploadFileUrls
  endpoint:
    path: /getUploadFileUrls
    method: POST
    data_selector: uploadUrls
- name: listAndCountFiles
  endpoint:
    path: /listAndCountFiles
    method: GET
    data_selector: files
- name: listFiles
  endpoint:
    path: /listFiles
    method: GET
    data_selector: files
- name: retrieveFile
  endpoint:
    path: /retrieveFile
    method: GET
    data_selector: file
- name: Locking Module Providers
  endpoint:
    path: /resources/infrastructure-modules/locking
    method: GET
    data_selector: providers
- name: locking_module
  endpoint:
    path: /src/modules/my-locking
    method: GET
    data_selector: providers
    params: {}
- name: MyLockingProviderService
  endpoint:
    path: /src/modules/my-locking/service.ts
    method: GET
    data_selector: service
    params: {}
- name: acquire
  endpoint:
    path: /acquire
    method: POST
- name: execute
  endpoint:
    path: /execute
    method: POST
- name: release
  endpoint:
    path: /release
    method: POST
- name: releaseAll
  endpoint:
    path: /releaseAll
    method: POST
- name: notification
  endpoint:
    path: /resources/infrastructure-modules/notification
    method: GET
    data_selector: notifications
    params: {}
- name: my-notification
  endpoint:
    path: /src/modules/my-notification
    method: POST
    data_selector: notifications
    params: {}
- name: In-Memory
  endpoint:
    path: /resources/infrastructure-modules/workflow-engine/in-memory
    method: GET
    data_selector: ''
    params: {}
- name: Redis
  endpoint:
    path: /resources/infrastructure-modules/workflow-engine/redis
    method: GET
    data_selector: ''
    params: {}
notes:
- Authentication state is managed by the client, which is ideal for Jamstack applications
  and mobile applications.
- Uses JWT token for bearer authentication
- All commerce features are provided as extendable modules in Medusa.
- The Medusa application runs at http://localhost:9000.
- The Medusa Admin dashboard runs at http://localhost:9000/app.
- If the Next.js Starter Storefront is installed, it runs at http://localhost:8000.
- Disables SSL for the PostgreSQL database connection
- Use PostgreSQL version 15-alpine for the database.
- Use Redis version 7-alpine for session data.
- The Medusa server runs on port 9000.
- Modules are isolated in Medusa v2, meaning entities and services can only be accessed
  within their module.
- Medusa now uses MikroORM instead of TypeORM for database functionalities.
- In Medusa v2, you can set custom environment variables to be passed to the admin
  dashboard by prefixing them with VITE.
- The Medusa Admin is built with Vite v5 and runs at http://localhost:9000/app by
  default.
- The Medusa Framework and orchestration tools mitigate issues while supporting customization
  needs.
- Use workflows to manage operations across systems.
- Scheduled jobs can execute workflows at specific intervals.
- To rename a module or its data model's table, persist the old name by passing a
  third parameter to defineLink.
- Run the db:sync-links or db:migrate commands to update column names in the link
  table after renaming.
- Data models automatically have the date properties created_at, updated_at, and deleted_at.
- You can execute this workflow in a custom API route, scheduled job, or subscriber
  to get the total count of products.
- Debugging workflows is essential to ensure your custom features work as expected.
- Use the Medusa Admin to monitor stored workflow executions when debugging unexpected
  issues.
- Workflow executions are stored if a workflow is long-running or if the store and
  retentionTime options are set on the workflow.
- Medusa emits events when core commerce features are performed.
- Plugins are available starting from Medusa v2.3.0.
- Your script can accept arguments from the command line.
- The `startup` script will run every time you run the Medusa application.
- The generated types are only meant for auto-completion and type checking.
- Do not import the generated types directly in your code.
- You can't customize the admin dashboard's layout, design, or the content of the
  existing pages (aside from injecting widgets).
- You also can't customize the login page, the authentication flow, or change the
  Medusa logo used in the admin dashboard.
- A publishable API key sets the scope of your request to one or more sales channels.
- Use environment variables loaded from .env files based on NODE_ENV.
- Essential configurations related to the Medusa application, such as database and
  CORS configurations.
- Medusa doesn't support TypeScript aliases in production by default.
- You'll need to update `tsconfig.json` and `medusa-config.ts` to use TypeScript aliases.
- Instrumentation and observability are crucial as you build customizations in your
  application.
- The environment variable must be set as a system environment variable and not in
  .env.
- In production, deploy separate instances for server and worker.
- Disable the admin interface in the worker instance.
- You must deploy the Medusa application before the storefront.
- For optimal experience, your hosting provider and plan must offer at least 2GB of
  RAM.
- If you’re using the Next.js Starter storefront, you may deploy the storefront to
  any hosting provider that supports frontend frameworks, such as Vercel.
- The value of COOKIE_SECRET and JWT_SECRET must be a randomly generated secret.
- Set DISABLE_MEDUSA_ADMIN's value to false so that the admin is built with the server
  application.
- Set DISABLE_MEDUSA_ADMIN's value to true so that the admin isn't built with the
  worker application.
- Cloud hosts your server, Admin dashboard, database, and Redis instance.
- Uses modules and providers suitable for production.
- Medusa's current version is v2.9. Read the Release Notes.
- Data is only collected when the Medusa application is run with the command `medusa
  start`.
- English is the default language.
- The Medusa Admin comes in light and dark themes.
- Medusa manages your project's resources, including a Postgres database, a Redis
  server, and an S3 bucket
- 'Zero Downtime Deployments: Medusa rolls out changes to production with zero downtime,
  never interrupting your users.'
- In Medusa Admin customizations that are created in a Medusa project, you use import.meta.env
  to access environment variables.
- You must pass a publishable API key in the header of your requests to the store
  API routes.
- Configure middleware to preserve raw body data for webhook handling
- Follow the step-by-step Digital Products Example to learn how to implement digital
  products in your Medusa application.
- Medusa provides tools for automation in order management and customer support.
- Integrating third-party services can enhance customer support.
- Refunding payments is irreversible.
- Fulfillments can also be created for order changes like item edits and exchanges.
- Medusa has stock location related features available out-of-the-box through the
  Stock Location Module.
- Publishable API keys specify the scope of a request. Admin users create them, and
  they can only be used on the client-side, such as in a storefront.
- 'Technical Tip: Developers can use Publishable API Keys to easily associate a storefront
  or client with a sales channel.'
- For some countries, sublevel tax regions can be enabled.
- Deleting a tax rate override is irreversible.
- Deleting a sublevel tax region is irreversible.
- Can manage multiple currencies in store settings.
- Metadata can be associated with the store in key-value pairs.
- Medusa has user related features available out-of-the-box through the User Module.
- Each of Medusa's commerce features are placed in Commerce Modules.
- Requires installation of Notification Module Provider for password reset notifications.
- Medusa can only host Medusa servers and admin dashboards.
- Users must be in an organization to create and deploy projects.
- Project name must be at least five characters long.
- Subdomains are reserved for certain names.
- Always available with zero-downtime deployments
- Automatically scaled to meet peak traffic
- Preview environments are automatically created for each pull request opened towards
  a branch with a long-lived environment.
- Preview environments run on a single server instance, which is sufficient for testing
  changes.
- Preview environments are put to sleep after ten minutes of inactivity.
- Environment variables are key-value pairs of sensitive information, such as API
  keys and credentials.
- An environment's URL is in the format <subdomain>.medusajs.app
- Medusa provides automatic backups for your environment databases.
- Backups are retained for 14 days.
- Read access is provided to your database for exporting data, performing analytics,
  or troubleshooting issues.
- If you're using a Medusa version before v2.7.0, contact support for assistance in
  configuring the Redis modules.
- Since Cloud is a managed service, you can't directly access your Redis instance
  or its configurations.
- By default, the S3 bucket is private, but the files you upload to the bucket are
  publicly accessible.
- If you're using a Medusa version before v2.7.0, contact support for assistance in
  configuring the S3 File Module Provider.
- Payment methods are used for monthly Cloud payment subscriptions.
- Billing information is included in the organization's invoices.
- Logs are essential for monitoring your application's health and debugging issues.
- Notifications show updates related to organization, projects, environments, and
  deployments.
- It's strongly discouraged to push a new update directly to your production branch.
- Each environment has its own database, so you can safely update other environments
  and make data changes without affecting the production environment.
- Set STORE_CORS and AUTH_CORS environment variables in your Medusa application.
- Set MEDUSA_BACKEND_URL and NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY environment variables
  in your storefront.
- Only one File Module Provider can be registered at a time. If you register multiple
  providers, the File Module will throw an error.
- By default, Medusa uses the Local File Module. This module uploads files to the
  uploads directory of your Medusa application.
- By default, Medusa uses the Local Event Module.
- It's recommended to use other Event Modules, such as the Redis Event Module, for
  production.
- Each file provider has a unique ID used to identify it.
- The File Module accepts one provider only.
- Uses In-Memory Locking Module Provider for development, not recommended for production.
- If no provider is passed, the default provider (in-memory or the provider configured
  in medusa-config.ts) will be used.
- By default, Medusa uses the Local Notification Module which only simulates sending
  the notification by logging a message in the terminal.
- Only one provider can be setup for each channel.
- Make sure to specify the correct channels for your provider in the channels option.
- Medusa uses the In-Memory Workflow Engine Module by default.
- For production purposes, it's recommended to use the Redis Workflow Engine Module.
errors:
- Unauthorized
- Invalid credentials
- '401 Unauthorized: Recheck JWT token or session ID'
- 'TypeError: cmd is not a function'
- Invalid Token Error with --no-browser Option
- Can't Connect to PostgreSQL Docker Container
- Can't connect to database with --db-url option
- Can't Access Next.js Starter Storefront
- Check the build and runtime logs of the project's production deployment.
- 'Build failed: Check the build logs to troubleshoot'
- 'Deploy failed: Check the runtime logs to troubleshoot'
auth_info:
  mentioned_objects:
  - Options
  - ErpModuleService
  - CreateNotificationDTO
client:
  base_url: https://docs.medusajs.com
  auth:
    type: apikey
source_metadata: null
