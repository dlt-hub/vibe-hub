resources:
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: virtual_machine_options
  endpoint:
    path: /v2/marketplace/virtual-machine-options
    method: GET
    data_selector: array of objects
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: image_generation
  endpoint:
    path: /image/generation
    method: POST
    data_selector: images
    params: {}
- name: text_generation
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: image_generation
  endpoint:
    path: /image/generation
    method: POST
    data_selector: images
    params: {}
- name: audio_generation
  endpoint:
    path: /audio/generation
    method: POST
    data_selector: audio
    params: {}
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
- name: image_generation
  endpoint:
    path: /v1/image/generation
    method: POST
    data_selector: ''
    params: {}
- name: audio_generation
  endpoint:
    path: /v1/audio/generation
    method: POST
    data_selector: audio
    params: {}
- name: text_models
  endpoint:
    path: /models/text
    method: GET
- name: image_models
  endpoint:
    path: /models/image
    method: GET
- name: audio_models
  endpoint:
    path: /models/audio
    method: GET
- name: credit_balance
  endpoint:
    path: /billing/get_current_balance
    method: GET
    data_selector: instances
- name: custom_ports
  endpoint:
    path: /custom-ports
    method: GET
- name: auto_topups
  endpoint:
    path: /api/v1/auto_topups
    method: POST
    data_selector: data
- name: jupyter_notebook
  endpoint:
    path: /tree
    method: GET
    data_selector: token
    params: {}
- name: ssh_connection
  endpoint:
    path: /ssh
    method: GET
    data_selector: connection_url
    params: {}
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: text_to_image
  endpoint:
    path: /text-to-image
    method: POST
    data_selector: image
    params: {}
- name: image_generation
  endpoint:
    path: /v1/image/generation
    method: POST
    data_selector: images
    params: {}
- name: image_generation
  endpoint:
    path: /v1/image/generation
    method: POST
    data_selector: images
    params: {}
- name: referral
  endpoint:
    path: /referrals
    method: GET
    data_selector: referrals
- name: H100_instances
  endpoint:
    path: /api/h100_instances
    method: GET
    data_selector: instances
- name: InfiniBand_clusters
  endpoint:
    path: /api/infiniBand_clusters
    method: GET
    data_selector: clusters
notes:
- Uses API key for authentication.
- Generate an API token in the Hyperbolic dashboard under Settings
- Automatically selects the most suitable backend.
- Uses API key for authorization
- Affordable GPU Access from $0.20/GPU-hr for training & inference
- Most endpoints require a Bearer token in the Authorization header
- You can specify up to 2 custom HTTP ports that you want to expose.
- Auto Topups automatically replenishes your account balance when it falls below a
  predefined threshold.
- This server requires your Hyperbolic API token and optionally an SSH private key
- Commands to rent GPUs will incur charges on your Hyperbolic account
- Connecting a Hyperbolic GPU to Google Colab as a Local Runtime
- Expose port 8888 for HTTP Port Selection
- Direct Requests use your Hyperbolic API key in your Hugging Face user account settings.
- Routed Requests can use a Hugging Face token for authentication.
- Volumes persist when instances shut down
- Each volume belongs to your account and can be attached to any of your GPU instances
  in the same region
- Network volumes are region-specific for optimal performance
- You can always skip adding a volume if you're just running quick experiments or
  testing code.
- Cater to startups and small to medium-sized enterprises that need higher throughput
  and advanced features.
- Serve large enterprises with substantial and specific requirements, offering them
  scalability and dedicated resources.
- Supports various LoRAs for Stable Diffusion v1.5 and Stable Diffusion XL
- 'Currently, HyperbolicAI supports two Stable Diffusion + ControlNet: SDXL-ControlNet
  and SD1.5-ControlNet.'
- 'There are four distinct types of ControlNet available: canny, depth, openpose and
  softedge.'
- There is no limit to how many people you can refer
- Credits typically appear within 5 minutes of a qualifying purchase
- Most instances deploy in under 5 minutes.
- No minimum commitments for true on-demand usage.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
errors:
- 400 Invalid input data
- 401 Authorization not provided
- 403 Insufficient access
- 404 Not found
- 500 Internal server error
- 'Check NFS installation: Ensure `nfs-common` is installed with `sudo apt install
  nfs-common`'
- 'Verify permissions: Ensure your user has read/write access to `/data`'
- 'Volume Not Appearing: Check the Storage tab: Verify your volume exists in the Storage
  section'
- 'Volume Not Appearing: Verify ownership: Only your volumes are visible'
- 'Volume Not Appearing: Wait for creation: New volumes may take a moment to appear'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
auth_info:
  mentioned_objects: []
client:
  base_url: https://app.hyperbolic.ai
source_metadata: null
