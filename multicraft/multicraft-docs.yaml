resources:
- name: server_status
  endpoint:
    path: /getServerStatus
    method: GET
    data_selector: data
- name: find_users
  endpoint:
    path: /findUsers
    method: GET
    data_selector: data
- name: create_server
  endpoint:
    path: /createServer
    method: POST
    data_selector: data
- name: update_server
  endpoint:
    path: /updateServer
    method: POST
    data_selector: data
- name: move_server
  endpoint:
    path: /moveServer
    method: POST
    data_selector: data
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: Users
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: Players
- name: commands
  endpoint:
    path: /commands
    method: GET
    data_selector: Commands
- name: servers
  endpoint:
    path: /servers
    method: GET
    data_selector: Servers
- name: settings
  endpoint:
    path: /settings
    method: GET
    data_selector: Settings
- name: schedules
  endpoint:
    path: /schedules
    method: GET
    data_selector: Schedules
- name: databases
  endpoint:
    path: /databases
    method: GET
    data_selector: Databases
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: Users
- name: players
  endpoint:
    path: /api/players
    method: GET
    data_selector: Players
- name: servers
  endpoint:
    path: /api/servers
    method: GET
    data_selector: Servers
- name: commands
  endpoint:
    path: /api/commands
    method: GET
    data_selector: Commands
- name: schedules
  endpoint:
    path: /api/schedules
    method: GET
    data_selector: Schedules
- name: settings
  endpoint:
    path: /api/settings
    method: GET
    data_selector: Settings
- name: multicraft_download
  endpoint:
    path: /download/linux64?version=2.5.0
    method: GET
    data_selector: downloads
    params: {}
- name: multicraft_windows_download
  endpoint:
    path: /download/win64standalone?version=2.5.0
    method: GET
    data_selector: downloads
    params: {}
- name: installation_guide
  endpoint:
    path: /site/docs/install
    method: GET
    data_selector: instructions
    params: {}
- name: upgrade_guide
  endpoint:
    path: /site/docs/upgrade
    method: GET
    data_selector: instructions
    params: {}
- name: Server Settings
  endpoint:
    path: /api/server/settings
    method: GET
    data_selector: settings
    params: {}
- name: Global Settings
  endpoint:
    path: /api/global/settings
    method: GET
    data_selector: global_settings
    params: {}
- name: server
  endpoint:
    path: /api/server
    method: GET
    data_selector: servers
    params: {}
- name: user
  endpoint:
    path: /api/user
    method: GET
    data_selector: users
    params: {}
- name: server
  endpoint:
    path: /api/server
    method: GET
    data_selector: servers
- name: daemon
  endpoint:
    path: /site/docs/api
    method: GET
    data_selector: data
    params: {}
- name: users_and_players
  endpoint:
    path: /site/docs/userguide/index
    method: GET
    data_selector: users and players
    params: {}
- name: whitelisting_private_servers
  endpoint:
    path: /site/docs/userguide/index#1
    method: GET
    data_selector: whitelisting and private servers
    params: {}
- name: commands
  endpoint:
    path: /site/docs/userguide/index#2
    method: GET
    data_selector: commands
    params: {}
- name: custom_jar_files
  endpoint:
    path: /site/docs/conf
    method: GET
    data_selector: custom jar files
    params: {}
- name: bedrock_linux
  endpoint:
    path: https://www.multicraft.org/download/conf?file=bedrock.sh
    method: GET
    data_selector: records
    params: {}
- name: bedrock_windows
  endpoint:
    path: https://www.multicraft.org/download/conf?file=bedrock.bat
    method: GET
    data_selector: records
    params: {}
- name: users_and_players
  endpoint:
    path: /site/docs/api
    method: GET
    data_selector: users_and_players
    params: {}
- name: commands
  endpoint:
    path: /site/docs/api
    method: GET
    data_selector: commands
    params: {}
- name: custom_jar_files
  endpoint:
    path: /site/docs/api
    method: GET
    data_selector: custom_jar_files
    params: {}
- name: users
  endpoint:
    path: /site/docs/api/users
    method: GET
    data_selector: records
- name: players
  endpoint:
    path: /site/docs/api/players
    method: GET
    data_selector: records
- name: bedrock_linux
  endpoint:
    path: /download/conf?file=bedrock.sh
    method: GET
    data_selector: records
    params: {}
- name: bedrock_windows
  endpoint:
    path: /download/conf?file=bedrock.bat
    method: GET
    data_selector: records
    params: {}
- name: bedrock
  endpoint:
    path: /download/conf?file=bedrock.sh
    method: GET
- name: spigot
  endpoint:
    path: /download/conf?file=spigot.jar.conf
    method: GET
- name: bungeecord
  endpoint:
    path: /download/conf?file=bungeecord.jar.conf
    method: GET
- name: pocketmine
  endpoint:
    path: /download/conf?file=pocketmine.phar.conf
    method: GET
- name: starmade
  endpoint:
    path: /download/conf?file=StarMade.jar.conf
    method: GET
- name: craftbukkit
  endpoint:
    path: /download/conf?file=craftbukkit.jar.conf
    method: GET
- name: template
  endpoint:
    path: /home/minecraft/multicraft/templates
    method: GET
- name: jar
  endpoint:
    path: /home/minecraft/multicraft/jar
    method: GET
- name: daemon_connection
  endpoint:
    path: /protected/config/config.php
    method: POST
    data_selector: daemon_password
    params: {}
- name: servers
  endpoint:
    path: /modules/servers/multicraft
    method: POST
    data_selector: server
    params: {}
- name: products
  endpoint:
    path: /modules/products/services
    method: POST
    data_selector: product
    params: {}
- name: parse_startup
  endpoint:
    path: /site/docs/conf
    method: GET
    data_selector: records
- name: parse_players
  endpoint:
    path: /site/docs/conf
    method: GET
    data_selector: records
- name: parse_chat
  endpoint:
    path: /site/docs/conf
    method: GET
    data_selector: records
- name: parse_command
  endpoint:
    path: /site/docs/conf
    method: GET
    data_selector: records
- name: parse_connect
  endpoint:
    path: /site/docs/conf
    method: GET
    data_selector: records
- name: parse_disconnect
  endpoint:
    path: /site/docs/conf
    method: GET
    data_selector: records
- name: parse_saveComplete
  endpoint:
    path: /site/docs/conf
    method: GET
    data_selector: records
- name: parse_unknown
  endpoint:
    path: /site/docs/conf
    method: GET
    data_selector: records
- name: parse_hide
  endpoint:
    path: /site/docs/conf
    method: GET
    data_selector: records
- name: parse_log
  endpoint:
    path: /site/docs/conf
    method: GET
    data_selector: records
- name: parse_clean
  endpoint:
    path: /site/docs/conf
    method: GET
    data_selector: records
- name: parse_restart
  endpoint:
    path: /site/docs/conf
    method: GET
    data_selector: records
- name: parse_stop
  endpoint:
    path: /site/docs/conf
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /api/products
    method: POST
    data_selector: products
    params: {}
- name: servers
  endpoint:
    path: /api/servers
    method: GET
    data_selector: data
    params: {}
- name: servers
  endpoint:
    path: /modules/servers/multicraft
    method: POST
    data_selector: servers
    params: {}
- name: products
  endpoint:
    path: /modules/products/multicraft
    method: POST
    data_selector: products
    params: {}
- name: client_profile
  endpoint:
    path: /client/profile
    method: GET
    data_selector: client_data
- name: products
  endpoint:
    path: /api/products
    method: POST
    data_selector: products
    params: {}
- name: preview_release
  endpoint:
    path: /download/linux64?version=2.5.0
    method: GET
- name: windows_standalone
  endpoint:
    path: /download/win64standalone?version=2.5.0
    method: GET
- name: windows_advanced
  endpoint:
    path: /download/win64?version=2.5.0
    method: GET
- name: linux_arm64
  endpoint:
    path: /download/linuxarm64?version=2.5.0
    method: GET
notes:
- Ensure all requests are made over HTTPS.
- Make sure that API requests are done over HTTPS when using this call.
- For the Multicraft panel, you need a webserver with PHP (PHP5.4+, PHP7, PHP8).
- 'PHP Extensions Required: pdo_mysql, pdo_sqlite, curl, xml, gd, ftp.'
- For security purposes, please delete the 'install.php' as soon as everything is
  working.
- Access the control panel under http://*your.address*/multicraft/
- Be sure to back up your entire installation (files and databases) first.
- Allow symlinks where directories are expected.
- Skip the integrity check for directories.
- The available settings depend on your role in the panel and the available features.
- The maximum number of daemon connections to allow to this daemon is 500.
- 'Allow symlinks where directories are expected is default: false.'
- 'Skip the integrity check for directories is default: false.'
- API access is required for billing system integration
- User registration can be disabled
- The API is required for billing system integration
- When enabled, allows every user to generate their own API key
- The server uses 32bit Java and can't allocate more than 1GB/2GB of memory
- The panel takes longer than usual to display the server list
- The Java command line needs to include the '--nojline' option.
- If your system is missing the Visual C++ 2008 runtime, install it.
- A Craftbukkit JAR file needs a compatible .jar.conf file.
- The Multicraft control panel can connect to a daemon running on a remote machine.
- Ensure to set a strong daemon password in your configuration.
- Make sure your .conf files for Craftbukkit are up to date under Settings->Update
  Minecraft
- If the mod needs additional files to run extract the mod zip file into the server
  directory where you intend to use the mod
- Make sure the files you have just extracted have the correct owner, it needs to
  be mcX:mcX, where X is the server ID
- If you encounter an issue with Multicraft for some reason you should first take
  a look at the log files to see if there is a more detailed error message available.
- The log file for the daemon is located in the daemon installation directory, usually
  next to your multicraft.conf, it is called multicraft.log.
- The log file for the panel is located within the Multicraft front end directory
  under "protected/runtime/application.log".
- Users are registered control panel users that can use various functions depending
  on their access rights for a specific server.
- Players are created as soon as they are seen by a Minecraft server.
- Make sure the 'rsync' command is available on your system
- Make sure your .conf and JAR files are up to date under Settings->Update Minecraft,
  outdated conf files can cause display issues.
- 'Some mods require additional PermGen space, you can increase the default limit
  by adding the following to the ''command'' setting in the .jar.conf file used by
  your server: -XX:PermSize=256M -XX:MaxPermSize=512M'
- If you don't see an IP when connecting through the panel (Files->FTP File Access)
  you need to check your multicraft.conf file and make sure the 'ftpIp' and 'ftpExternalIp'
  settings are correct.
- For some filesystem types the initial integrity check has to be disabled. To achieve
  this, edit the multicraft.conf file and set the 'skipIntegrityCheck' setting to
  true.
- The basic function of a template is to provide a set of files that will be copied
  to the server directory before the server starts.
- To have a JAR file install a template when that JAR file is selected, set the forceTemplate
  setting in the .jar.conf file.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Users and players are differentiated in Multicraft.
- Roles can be assigned to users on a per-server or global basis.
- According to user feedback, the following instructions can be used to set up such
  a server
- Players can be assigned to users.
- Private servers can be set by assigning the 'Default Role' to 'No Access'.
- Multicraft supports various Minecraft server types including Bedrock, Spigot, BungeeCord,
  PocketMine-MP, StarMade, and Craftbukkit.
- The script needs to use the Unix line ending format so it's recommended to create
  it directly under Linux instead of creating it under Windows and uploading it.
- Templates can consist of files and scripts that are used to initialize the server
  directory.
- The daemon has to be restarted for the enableQuota setting change to take effect.
- Note that the apache rewrite module (mod_rewrite) is required for these settings
  to work correctly.
- StarMade is not officially supported at the moment.
- Make sure the files you have just extracted have the correct owner, it needs to
  be mcX:mcX, where X is the server ID.
- Some objects like Contact may return nulls in deeply nested fields
- It's possible that these settings do not work correctly on your system and we do
  not provide official support for enabling them.
- Make sure the 'protected' directory is not accessible through the webserver
- Restrict or disable API access
- Restrict Superuser access
- Restrict Daemon connections
- Separate Daemon and Panel databases
- Run the Daemon in multiuser mode
- Secure the admin password(s)
- Use a dedicated MySQL installation
- Make backups and keep them secure
- Keep the installation size manageable
- Keep Multicraft updated
- 'Advanced: Enable the Java Security Manager'
- Disable JAR Uploads and Disable Plugin Installations
- Protect Sensitive System Files
- Use Docker containers
- Use Linux security features
- Enable the Multicraft API under Settings->Panel Configuration in your Multicraft
  panel
- Create an API key for a user with superuser privileges
- The provisioning process will fail if 'Dedicated IP' is set to 'Require dedicated
  IP' and there is no dedicated IP available on any daemon with enough resources.
- It will continue normally if the setting is set to 'Dedicated IP if available'.
- Enable Multicraft API under 'Settings'->'Panel Configuration'
- Generate API key for a user with superuser privileges
- The preview release is available for public testing and is considered experimental.
- Multicraft provides a comprehensive control panel for managing Minecraft servers.
- xhost.ch reserves the right to unilaterally change the scope of services at any
  time and at its sole discretion.
- In your Multicraft panel, create an API key for a user with superuser privileges.
- The latest PREVIEW build of Multicraft available for public testing is experimental.
- For large installations, testing the new version with a representative installation
  is recommended.
- Multicraft allows for effortless scalability and integration of various games.
- Supports WHMCS integration for instant server setup.
- The Customer is not entitled to any refunds and/or compensation for damages arising
  from inadequate performance or malfunction of the Software.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '403 Forbidden: Check API key permissions'
- '404 Not Found: Verify endpoint or resource'
- '500 Internal Server Error: Contact support'
- '401 Unauthorized: Invalid API key'
- '403 Forbidden: Access denied for this resource'
- Error 500 CDbConnection failed to open the DB connection
- 'Can''t connect to Minecraft bridge! (110/111: Connection refused/timed out)'
- Unable to access jarfile /home/minecraft/multicraft/jar/craftbukkit.jar
- Authentication failed! (incorrect authorization or invalid signature)
- 'The multicraft.log shows: "Query timed out, abandoning database thread"'
- The server restarts / The console shows ping timeout
- I can't access http://localhost/ or I see error 504 under Windows
- The server doesn't start/the player list doesn't work
- Trying to update Craftbukkit gives error 404
- 'CRITICAL Failed to connect to MySQL: (2002, "Can''t connect to local MySQL server
  through socket ''/var/run/mysqld/mysqld.sock'' (2)")'
- 'Can''t connect to Minecraft bridge! (13: Permission denied)'
- 'Uploading JAR files doesn''t work: "Permission denied (file type access restricted)"'
- The "protected" directory is accessible through the webserver
- The BukGet browser shows error 500 or an error with the database connection
- The log shows "Failed to initialize server"
- 'The multicraft.log shows "useragent.conf: Permission denied"'
- 'Couldn''t X: No connection for daemon 1'
- The server uses 32bit Java and can't allocate more than 1GB/2GB of memory
- '[Error 2] The system cannot find the file specified'
- The panel takes longer than usual to display the server list
- Nothing happens when trying to run Multicraft on Linux (no error message)
- No resource display. The multicraft.log shows "Failed to calculate resource usage"
- 'Windows servers show: Error writing to server: [Errno 28] No space left on device'
- 'Server not found (Y): If you have connected multiple daemons to the same panel
  you need to make sure that every daemon has a different daemon ID set in the multicraft.conf
  (setting "id").'
- 'Error 500 when accessing the panel: This means that the webserver cannot write
  to the directory mentioned.'
- 'Access denied for user ''root''@''localhost'': If you are certain that the credentials
  are correct you can try one of the following.'
- 'Server not found (Y): If you have connected multiple daemons to the same panel
  you need to make sure that every daemon has a different daemon ID set in the multicraft.conf
  (setting ''id'').'
- 'Access denied for user ''root''@''localhost'': If you are certain that the credentials
  are correct you can try one of the following: Use ''127.0.0.1'' instead of ''localhost''.'
- 'Port [25565] may be in use by another process: This error appears on some IPv6
  enabled systems because both Bedrock and the operating system try to bind to the
  same port on both IPv4 and IPv6.'
- 'Invalid API key: Check API key generation and user privileges'
- 'FAILED: Failed to prepare database: Verify database connection and configuration'
- Invalid API key or wrong server selected during setup
- 'FAILED: Failed to prepare database'
- '401 Unauthorized: Check your access token or client credentials.'
- 'INVALID_API_KEY: Ensure the API key is valid and has the correct permissions'
- 'FAILED: Failed to prepare database: Check database connectivity and configurations'
- 'Invalid API key: Check the API key in the Servers entry.'
- 'FAILED: Failed to prepare database: Ensure required table for the Multicraft module
  is created.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://www.multicraft.org
  headers:
    Accept: application/json
source_metadata: null
